<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Hand Cannon Special Attack</title>
    <link>https://forum.moparisthebest.com/t/hand-cannon-special-attack/550142</link>
    <description>so, hand cannon special only attacks one time. i went through and figured out the file, and here&#39;s it&#39;s contents. i&#39;m not too sure what to do.
[code]package org.dementhium.model.combat.impl.specs;

import org.dementhium.model.Projectile;
import org.dementhium.model.SpecialAttack;
import org.dementhium.model.combat.Ammunition;
import org.dementhium.model.combat.CombatType;
import org.dementhium.model.combat.Damage;
import org.dementhium.model.combat.Interaction;
import org.dementhium.model.combat.RangeData;
import org.dementhium.model.combat.RangeFormulae;
import org.dementhium.model.combat.RangeWeapon;
import org.dementhium.model.mask.Graphic;
import org.dementhium.model.misc.DamageManager.DamageType;
import org.dementhium.model.misc.ProjectileManager;

/**
 * Executes the Hand cannon&#39;s Aimed shot special attack.
 * @author Emperor
 *
 */
public class AimedShot extends SpecialAttack {
	
	/**
	 * The graphics.
	 */
	private static final Graphic GRAPHICS = Graphic.create(2141, 96 &lt;&lt; 16);
	
	/**
	 * The special attack projectile GFX id.
	 */
	private static final short PROJECTILE_ID = 2143;
		
	@Override
	public boolean commenceSpecialAttack(Interaction interaction) {
		RangeData data = new RangeData(true);
		data.setWeapon(RangeWeapon.get(interaction.getSource().getPlayer().getEquipment().getSlot(3)));
		data.setAmmo(Ammunition.get(interaction.getSource().getPlayer().getEquipment().getSlot(13)));
		if (data.getAmmo() == null || !data.getWeapon().getAmmunition().contains(data.getAmmo().getItemId())) {
			interaction.getSource().getPlayer().sendMessage(&quot;You do not have enough ammo left.&quot;);
			interaction.getSource().getCombatExecutor().reset();
			return false;
		}
		if (interaction.getVictim().isPlayer()) {
			interaction.setDeflected(interaction.getVictim().getPlayer().getPrayer().usingPrayer(1, 8));
		}
		int maximum = RangeFormulae.getRangeDamage(interaction.getSource(), 1.0);
		data.setDamage(Damage.getDamage(interaction.getSource(), interaction.getVictim(), CombatType.RANGE,RangeFormulae.getDamage(interaction.getSource(), interaction.getVictim(), 1.49, 1.0, 0.952)));
		data.getDamage().setMaximum(maximum);
		interaction.getSource().setAttribute(&quot;aimingTicks&quot;, 3);
		interaction.setTicks((int) Math.floor(interaction.getSource().getLocation().distance(interaction.getVictim().getLocation()) * 0.3) + 3);
		interaction.getSource().getPlayer().getEquipment().deleteItem(data.getAmmo().getItemId(), 1);
		interaction.setRangeData(data);
		return true;
	}

	@Override
	public boolean tick(Interaction interaction) {
		int aimingTicks = interaction.getSource().getAttribute(&quot;aimingTicks&quot;);
		interaction.getSource().setAttribute(&quot;aimingTicks&quot;, aimingTicks - 1);
		if (aimingTicks &lt; 1) {
			interaction.getSource().turnTo(interaction.getVictim());
			interaction.getSource().animate(12175);
			interaction.getSource().graphics(GRAPHICS);
			int speed = (int) (32 + (interaction.getSource().getLocation().distance(interaction.getVictim().getLocation()) * 5));
			ProjectileManager.sendProjectile(Projectile.create(interaction.getSource(), interaction.getVictim(), PROJECTILE_ID, 31, 36, 45, speed, 0));
		}
		if (interaction.getTicks() &lt; 2) {
			interaction.getVictim().animate(interaction.isDeflected() ? 12573 
					: interaction.getVictim().getDefenceAnimation());
			if (interaction.isDeflected()) {
				interaction.getVictim().graphics(2229);
			}
		}
		interaction.setTicks(interaction.getTicks() - 1);
		return interaction.getTicks() &lt; 1;
	}

	@Override
	public boolean endSpecialAttack(final Interaction interaction) {
		interaction.getVictim().getDamageManager().damage(
				interaction.getSource(), interaction.getRangeData().getDamage(), 
				DamageType.RANGE);
		if (interaction.getRangeData().getDamage().getVenged() &gt; 0) {
			interaction.getVictim().submitVengeance(
					interaction.getSource(), interaction.getRangeData().getDamage().getVenged());
		}
		if (interaction.getRangeData().getDamage().getDeflected() &gt; 0) {
			interaction.getSource().getDamageManager().damage(interaction.getVictim(),
					interaction.getRangeData().getDamage().getDeflected(), 
					interaction.getRangeData().getDamage().getDeflected(), DamageType.DEFLECT);
		}
		if (interaction.getRangeData().getDamage().getRecoiled() &gt; 0) {
			interaction.getSource().getDamageManager().damage(interaction.getVictim(),
					interaction.getRangeData().getDamage().getRecoiled(), 
					interaction.getRangeData().getDamage().getRecoiled(), DamageType.DEFLECT);
		}
		interaction.getVictim().retaliate(interaction.getSource());
		return true;
	}

	@Override
	public CombatType getCombatType() {
		return CombatType.RANGE;
	}
	
	@Override
	public int getSpecialEnergyAmount() {
		return 500;
	}

	@Override
	public int getCooldownTicks() {
		return 6;
	}

}[/code]</description>
    
    <lastBuildDate>Mon, 23 Feb 2015 15:52:10 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/hand-cannon-special-attack/550142.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Hand Cannon Special Attack</title>
        <dc:creator><![CDATA[@Pest Pest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pest">@Pest</a> wrote:</p>
          <blockquote>
              <p>so, hand cannon special only attacks one time. i went through and figured out the file, and here’s it’s contents. i’m not too sure what to do.</p>
<p>[code]package org.dementhium.model.combat.impl.specs;</p>
<p>import org.dementhium.model.Projectile;<br>
import org.dementhium.model.SpecialAttack;<br>
import org.dementhium.model.combat.Ammunition;<br>
import org.dementhium.model.combat.CombatType;<br>
import org.dementhium.model.combat.Damage;<br>
import org.dementhium.model.combat.Interaction;<br>
import org.dementhium.model.combat.RangeData;<br>
import org.dementhium.model.combat.RangeFormulae;<br>
import org.dementhium.model.combat.RangeWeapon;<br>
import org.dementhium.model.mask.Graphic;<br>
import org.dementhium.model.misc.DamageManager.DamageType;<br>
import org.dementhium.model.misc.ProjectileManager;</p>
<p>/**</p>
<ul>
<li>Executes the Hand cannon’s Aimed shot special attack.</li>
<li>
<span class="mention">@author</span> Emperor</li>
<li>
</li>
</ul>
<p>*/<br>
public class AimedShot extends SpecialAttack {</p>
<pre><code>/**
 * The graphics.
 */
private static final Graphic GRAPHICS = Graphic.create(2141, 96 &lt;&lt; 16);

/**
 * The special attack projectile GFX id.
 */
private static final short PROJECTILE_ID = 2143;
	
@Override
public boolean commenceSpecialAttack(Interaction interaction) {
	RangeData data = new RangeData(true);
	data.setWeapon(RangeWeapon.get(interaction.getSource().getPlayer().getEquipment().getSlot(3)));
	data.setAmmo(Ammunition.get(interaction.getSource().getPlayer().getEquipment().getSlot(13)));
	if (data.getAmmo() == null || !data.getWeapon().getAmmunition().contains(data.getAmmo().getItemId())) {
		interaction.getSource().getPlayer().sendMessage("You do not have enough ammo left.");
		interaction.getSource().getCombatExecutor().reset();
		return false;
	}
	if (interaction.getVictim().isPlayer()) {
		interaction.setDeflected(interaction.getVictim().getPlayer().getPrayer().usingPrayer(1, 8));
	}
	int maximum = RangeFormulae.getRangeDamage(interaction.getSource(), 1.0);
	data.setDamage(Damage.getDamage(interaction.getSource(), interaction.getVictim(), CombatType.RANGE,RangeFormulae.getDamage(interaction.getSource(), interaction.getVictim(), 1.49, 1.0, 0.952)));
	data.getDamage().setMaximum(maximum);
	interaction.getSource().setAttribute("aimingTicks", 3);
	interaction.setTicks((int) Math.floor(interaction.getSource().getLocation().distance(interaction.getVictim().getLocation()) * 0.3) + 3);
	interaction.getSource().getPlayer().getEquipment().deleteItem(data.getAmmo().getItemId(), 1);
	interaction.setRangeData(data);
	return true;
}

@Override
public boolean tick(Interaction interaction) {
	int aimingTicks = interaction.getSource().getAttribute("aimingTicks");
	interaction.getSource().setAttribute("aimingTicks", aimingTicks - 1);
	if (aimingTicks &lt; 1) {
		interaction.getSource().turnTo(interaction.getVictim());
		interaction.getSource().animate(12175);
		interaction.getSource().graphics(GRAPHICS);
		int speed = (int) (32 + (interaction.getSource().getLocation().distance(interaction.getVictim().getLocation()) * 5));
		ProjectileManager.sendProjectile(Projectile.create(interaction.getSource(), interaction.getVictim(), PROJECTILE_ID, 31, 36, 45, speed, 0));
	}
	if (interaction.getTicks() &lt; 2) {
		interaction.getVictim().animate(interaction.isDeflected() ? 12573 
				: interaction.getVictim().getDefenceAnimation());
		if (interaction.isDeflected()) {
			interaction.getVictim().graphics(2229);
		}
	}
	interaction.setTicks(interaction.getTicks() - 1);
	return interaction.getTicks() &lt; 1;
}

@Override
public boolean endSpecialAttack(final Interaction interaction) {
	interaction.getVictim().getDamageManager().damage(
			interaction.getSource(), interaction.getRangeData().getDamage(), 
			DamageType.RANGE);
	if (interaction.getRangeData().getDamage().getVenged() &gt; 0) {
		interaction.getVictim().submitVengeance(
				interaction.getSource(), interaction.getRangeData().getDamage().getVenged());
	}
	if (interaction.getRangeData().getDamage().getDeflected() &gt; 0) {
		interaction.getSource().getDamageManager().damage(interaction.getVictim(),
				interaction.getRangeData().getDamage().getDeflected(), 
				interaction.getRangeData().getDamage().getDeflected(), DamageType.DEFLECT);
	}
	if (interaction.getRangeData().getDamage().getRecoiled() &gt; 0) {
		interaction.getSource().getDamageManager().damage(interaction.getVictim(),
				interaction.getRangeData().getDamage().getRecoiled(), 
				interaction.getRangeData().getDamage().getRecoiled(), DamageType.DEFLECT);
	}
	interaction.getVictim().retaliate(interaction.getSource());
	return true;
}

@Override
public CombatType getCombatType() {
	return CombatType.RANGE;
}

@Override
public int getSpecialEnergyAmount() {
	return 500;
}

@Override
public int getCooldownTicks() {
	return 6;
}
</code></pre>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/hand-cannon-special-attack/550142/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/hand-cannon-special-attack/550142/1</link>
        <pubDate>Mon, 23 Feb 2015 15:52:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-550142-1</guid>
        <source url="https://forum.moparisthebest.com/t/hand-cannon-special-attack/550142.rss">Hand Cannon Special Attack</source>
      </item>
  </channel>
</rss>
