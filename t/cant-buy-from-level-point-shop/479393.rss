<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Can&#39;t buy from level point shop?</title>
    <link>https://forum.moparisthebest.com/t/cant-buy-from-level-point-shop/479393</link>
    <description>Someone please help me, I currently have added level points system, and I can&#39;t buy any times from the shop. I got no idea why, but I would love it if someone could help me. I have a PI.
Code for Level points shop is 20.

This Is: public long buyDelay;public boolean buyItem(int itemID, int fromSlot, int amount) {

[code]public long buyDelay;
	public boolean buyItem(int itemID, int fromSlot, int amount) {
		if(System.currentTimeMillis() - buyDelay &lt; 1500) {
			return false;
		}
		if(c.myShopId == 7390 &amp;&amp; c.myShopClient != null &amp;&amp; !c.myShopClient.properLogout &amp;&amp; !c.playerName.equals(c.myShopClient.playerName)){
						if(c.playerRights == 2) {
				c.sendMessage(&quot;Sorry but buying as admin is disabled :/..&quot;);
			return false;
		}
		int bought = 0;
			int price = c.myShopClient.playerShopP[fromSlot];
			if(amount &gt; c.myShopClient.playerShopN[fromSlot])
				amount = c.myShopClient.playerShopN[fromSlot];
			for(int x = 0; x &lt; amount; x++){
				if(c.getItems().playerHasItem(995, c.myShopClient.playerShopP[fromSlot]) &amp;&amp; c.getItems().freeSlots() &gt; 0){
					c.getItems().deleteItem2(995, c.myShopClient.playerShopP[fromSlot]);
					c.getItems().addItem(c.myShopClient.playerShop[fromSlot], 1);
					c.myShopClient.playerShopN[fromSlot]--;
					c.myShopClient.playerCollect += c.myShopClient.playerShopP[fromSlot];
					if(c.myShopClient.playerShopN[fromSlot] == 0){
						c.myShopClient.playerShop[fromSlot] = 0;
						c.myShopClient.playerShopP[fromSlot] = 0;
					}
					bought++;
				}else{
					c.sendMessage(&quot;Not enought space or money.&quot;);
					break;
				}
			}
			if(bought &gt; 0){
							if(c.playerRights == 2) {
				c.sendMessage(&quot;Sorry but buying as admin is disabled :/..&quot;);
			return false;
		}
			resetShop(c.myShopClient);
			c.getItems().resetItems(3823);;
			c.sendMessage(&quot;You just bought &quot;+bought+&quot; &quot;+c.getItems().getItemName(itemID)+&quot; for &quot;+ (bought*price));
			c.myShopClient.sendMessage(c.playerName+&quot; has bought &quot;+bought+&quot; &quot;+c.getItems().getItemName(itemID)+&quot; from you!&quot;);
			c.myShopClient.sendMessage(&quot;You now have &quot;+c.myShopClient.playerCollect+&quot; coins to collect (::collect)&quot;);
			}
			return false;
		}else if(c.myShopId == 7390 &amp;&amp; c.myShopClient != null &amp;&amp; !c.myShopClient.properLogout &amp;&amp; c.playerName.equals(c.myShopClient.playerName)){
							if(c.playerRights == 2) {
				c.sendMessage(&quot;Sorry but buying as admin is disabled :/..&quot;);
			return false;
		}
			if(amount &gt; c.myShopClient.playerShopN[fromSlot])
				amount = c.myShopClient.playerShopN[fromSlot];
			for(int x = 0; x &lt; amount; x++){
				if(c.getItems().freeSlots() &gt; 0){
					c.getItems().addItem(c.myShopClient.playerShop[fromSlot], 1);
					c.myShopClient.playerShopN[fromSlot]--;
					if(c.myShopClient.playerShopN[fromSlot] == 0){
						c.myShopClient.playerShop[fromSlot] = 0;
						c.myShopClient.playerShopP[fromSlot] = 0;
						fixShop(c);
					}
				}else{
					c.sendMessage(&quot;Not enought space.&quot;);
					break;
				}
			}
			resetShop(c.myShopClient);
			c.getItems().resetItems(3823);
			return false;
		}else if(c.myShopId == 7390){
			return false;
		}
		if (Server.shopHandler.ShopItems[c.myShopId][fromSlot]-1 != itemID &amp;&amp; c.myShopId != 14 &amp;&amp; c.myShopId != 1 &amp;&amp; c.myShopId != 7390) {
			c.sendMessage(&quot;Stop trying to cheat.&quot;);
			return false;
		}

		if (c.myShopId == 14) {
			skillBuy(itemID);
			return false;

		} else if (c.myShopId == 15) {
			buyVoid(itemID);
			return false;		
		
		} else if (c.myShopId == 1) {
			buyVoid(itemID);
			return false;
                }
		if(itemID != itemID) {
			c.sendMessage(&quot;Don&#39;t dupe or you will be IP Banned&quot;);
			return false;
		}

		if(!shopSellsItem(itemID))
			return false;

		if (amount &gt; 0) {
			if (amount &gt; Server.shopHandler.ShopItemsN[c.myShopId][fromSlot]) {
				amount = Server.shopHandler.ShopItemsN[c.myShopId][fromSlot];
			}
			//double ShopValue;
			//double TotPrice;
			int TotPrice2 = 0;
			//int Overstock;
			int Slot = 0;
			int Slot1 = 0;//Tokkul
			int Slot2 = 0;//Pking Points
			int Slot3 = 0;//Donator Gold
			
			 if (c.myShopId == 21) {
                                handleOtherShop(itemID);
                                return false;
                        }

			if (c.myShopId == 18) {
				handleOtherShop(itemID);
				return false;
			}
			
			if (c.myShopId == 21) {
				handleOtherShop(itemID);
				return false;
			}
			if (c.myShopId == 16) {
				handleOtherShop(itemID);
				return false;
			}
			if (c.myShopId == 20) {
				handleOtherShop(itemID);
				return false;
			}
						if (c.myShopId == 100) {
				handleOtherShop(itemID);
				return false;
			}
			if (c.myShopId == 17) {
				handleOtherShop(itemID);
				return false;
			}	
			if (c.myShopId == 84) {
				handleOtherShop(itemID);
				return false;
			}
			if (c.myShopId == 85) {
				handleOtherShop(itemID);
				return false;
				}
			for (int i = amount; i &gt; 0; i--) {
				TotPrice2 = (int)Math.floor(getItemShopValue(itemID, 0, fromSlot));
				Slot = c.getItems().getItemSlot(995);
				Slot1 = c.getItems().getItemSlot(6529);
				Slot3 = c.getItems().getItemSlot(5555);
				if (Slot == -1 &amp;&amp; c.myShopId != 11 &amp;&amp; c.myShopId != 29 &amp;&amp; c.myShopId != 30 &amp;&amp; c.myShopId != 31 &amp;&amp; c.myShopId != 84 &amp;&amp; c.myShopId != 85 &amp;&amp; c.myShopId != 100) {
					c.sendMessage(&quot;You don&#39;t have enough coins.&quot;);
					break;
				}
				if(Slot1 == -1 &amp;&amp; c.myShopId == 29 || c.myShopId == 30 || c.myShopId == 31) {
					c.sendMessage(&quot;You don&#39;t have enough tokkul.&quot;);
					break;
				}
				if(Slot3 == -1 &amp;&amp; c.myShopId == 353) {
					c.sendMessage(&quot;You don&#39;t have enough donator gold.&quot;);
					break;
				}
			
                if(TotPrice2 &lt;= 1) {
                	TotPrice2 = (int)Math.floor(getItemShopValue(itemID, 0, fromSlot));
                	TotPrice2 *= 1.66;
                }
                if(c.myShopId == 29 || c.myShopId == 30 || c.myShopId == 31) {
                	if (c.playerItemsN[Slot1] &gt;= TotPrice2) {
						if (c.getItems().freeSlots() &gt; 0) {
							buyDelay = System.currentTimeMillis();
							c.getItems().deleteItem(6529, c.getItems().getItemSlot(6529), TotPrice2);
							c.getItems().addItem(itemID, 1);
							Server.shopHandler.ShopItemsN[c.myShopId][fromSlot] -= 1;
							Server.shopHandler.ShopItemsDelay[c.myShopId][fromSlot] = 0;
							if ((fromSlot + 1) &gt; Server.shopHandler.ShopItemsStandard[c.myShopId]) {
								Server.shopHandler.ShopItems[c.myShopId][fromSlot] = 0;
							}
						} else {
							c.sendMessage(&quot;You don&#39;t have enough space in your inventory.&quot;);
							break;
						}
					} else {
						c.sendMessage(&quot;You don&#39;t have enough tokkul.&quot;);
						break;
					}
                }
				else if(c.myShopId == 21) {
                        if (c.lvlPoints &gt;= TotPrice2) {
                                                if (c.getItems().freeSlots() &gt; 0) {
                                                        buyDelay = System.currentTimeMillis();
                                                        c.lvlPoints -= TotPrice2;
                                                        c.getItems().addItem(itemID, 1);
                                                        Server.shopHandler.ShopItemsN[c.myShopId][fromSlot] -= 1;
                                                        Server.shopHandler.ShopItemsDelay[c.myShopId][fromSlot] = 0;
                                                        if ((fromSlot + 1) &gt; Server.shopHandler.ShopItemsStandard[c.myShopId]) {
                                                                Server.shopHandler.ShopItems[c.myShopId][fromSlot] = 0;
                                                        }
                                                } else {
                                                        c.sendMessage(&quot;You don&#39;t have enough space in your inventory.&quot;);
                                                        break;
                                                }
                                        } else {
                                                c.sendMessage(&quot;You don&#39;t have enough lvl Points.&quot;);
                                                break;
                                        }
                }
				else if(c.myShopId == 16) {
                	if (c.SPoints &gt;= TotPrice2) {
						if (c.getItems().freeSlots() &gt; 0) {
							buyDelay = System.currentTimeMillis();
							c.SPoints -= TotPrice2;
							c.getItems().addItem(itemID, 1);
							Server.shopHandler.ShopItemsN[c.myShopId][fromSlot] -= 1;
							Server.shopHandler.ShopItemsDelay[c.myShopId][fromSlot] = 0;
							if ((fromSlot + 1) &gt; Server.shopHandler.ShopItemsStandard[c.myShopId]) {
								Server.shopHandler.ShopItems[c.myShopId][fromSlot] = 0;
							}
						} else {
							c.sendMessage(&quot;You don&#39;t have enough space in your inventory.&quot;);
							break;
						}
					} else {
						c.sendMessage(&quot;You don&#39;t have enough Agility Points.&quot;);
						break;
					}
                }
				else if(c.myShopId == 20) {//Checked
                        if (c.votingPoints &gt;= TotPrice2) {
                                                if (c.getItems().freeSlots() &gt; 0) {
                                                        buyDelay = System.currentTimeMillis();
                                                        c.votingPoints -= TotPrice2;
                                                        c.getItems().addItem(itemID, 1);
                                                        Server.shopHandler.ShopItemsN[c.myShopId][fromSlot] -= 1;
                                                        Server.shopHandler.ShopItemsDelay[c.myShopId][fromSlot] = 0;
                                                        if ((fromSlot + 1) &gt; Server.shopHandler.ShopItemsStandard[c.myShopId]) {
                                                                Server.shopHandler.ShopItems[c.myShopId][fromSlot] = 0;
                                                        }
                                                } else {
                                                        c.sendMessage(&quot;You don&#39;t have enough space in your inventory.&quot;);
                                                        break;
                                                }
                                        } else {
                                                c.sendMessage(&quot;You don&#39;t have enough Vote Points.&quot;);
                                                break;
                                        }
                }
								else if(c.myShopId == 100) {
                	if (c.barbPoints &gt;= TotPrice2) {
						if (c.getItems().freeSlots() &gt; 0) {
							buyDelay = System.currentTimeMillis();
							c.barbPoints -= TotPrice2;
							c.getItems().addItem(itemID, 1);
							Server.shopHandler.ShopItemsN[c.myShopId][fromSlot] -= 1;
							Server.shopHandler.ShopItemsDelay[c.myShopId][fromSlot] = 0;
							if ((fromSlot + 1) &gt; Server.shopHandler.ShopItemsStandard[c.myShopId]) {
								Server.shopHandler.ShopItems[c.myShopId][fromSlot] = 0;
							}
						} else {
							c.sendMessage(&quot;You don&#39;t have enough space in your inventory.&quot;);
							break;
						}
					} else {
						c.sendMessage(&quot;You don&#39;t have enough Points.&quot;);
						break;
					}
                }
				else if(c.myShopId == 84) {
                	if (c.dungPoints &gt;= TotPrice2) {
						if (c.getItems().freeSlots() &gt; 0) {
							buyDelay = System.currentTimeMillis();
							c.dungPoints -= TotPrice2;
							c.getItems().addItem(itemID, 1);
							Server.shopHandler.ShopItemsN[c.myShopId][fromSlot] -= 1;
							Server.shopHandler.ShopItemsDelay[c.myShopId][fromSlot] = 0;
							if ((fromSlot + 1) &gt; Server.shopHandler.ShopItemsStandard[c.myShopId]) {
								Server.shopHandler.ShopItems[c.myShopId][fromSlot] = 0;
							}
						} else {
							c.sendMessage(&quot;You don&#39;t have enough space in your inventory.&quot;);
							break;
						}
					} else {
						c.sendMessage(&quot;You don&#39;t have enough Dungeoneering Tokens.&quot;);
						break;
					}
                }
				else if(c.myShopId == 85) {
                	if (c.dungPoints &gt;= TotPrice2) {
						if (c.getItems().freeSlots() &gt; 0) {
							buyDelay = System.currentTimeMillis();
							c.dungPoints -= TotPrice2;
							c.getItems().addItem(itemID, 1);
							Server.shopHandler.ShopItemsN[c.myShopId][fromSlot] -= 1;
							Server.shopHandler.ShopItemsDelay[c.myShopId][fromSlot] = 0;
							if ((fromSlot + 1) &gt; Server.shopHandler.ShopItemsStandard[c.myShopId]) {
								Server.shopHandler.ShopItems[c.myShopId][fromSlot] = 0;
							}
						} else {
							c.sendMessage(&quot;You don&#39;t have enough space in your inventory.&quot;);
							break;
						}
					} else {
						c.sendMessage(&quot;You don&#39;t have enough Dungeoneering Tokens.&quot;);
						break;
					}
                }
                else if(c.myShopId == 11) {
                	if (c.playerItemsN[Slot3] &gt;= TotPrice2) {
						if (c.getItems().freeSlots() &gt; 0) {
							buyDelay = System.currentTimeMillis();
							c.getItems().deleteItem(5555, c.getItems().getItemSlot(5555), TotPrice2);
							c.getItems().addItem(itemID, 1);
							Server.shopHandler.ShopItemsN[c.myShopId][fromSlot] -= 1;
							Server.shopHandler.ShopItemsDelay[c.myShopId][fromSlot] = 0;
							if ((fromSlot + 1) &gt; Server.shopHandler.ShopItemsStandard[c.myShopId]) {
								Server.shopHandler.ShopItems[c.myShopId][fromSlot] = 0;
							}
						} else {
							c.sendMessage(&quot;You don&#39;t have enough space in your inventory.&quot;);
							break;
						}
					} else {
						c.sendMessage(&quot;You don&#39;t have enough donator gold.&quot;);
						break;
					}
                }
                else if(c.myShopId != 11 &amp;&amp; c.myShopId != 29 || c.myShopId != 30 || c.myShopId != 31 || c.myShopId != 84 || c.myShopId != 85 || c.myShopId != 16) {
					if (c.playerItemsN[Slot] &gt;= TotPrice2) {
						if (c.getItems().freeSlots() &gt; 0) {
							buyDelay = System.currentTimeMillis();
							c.getItems().deleteItem(995, c.getItems().getItemSlot(995), TotPrice2);
							c.getItems().addItem(itemID, 1);
							Server.shopHandler.ShopItemsN[c.myShopId][fromSlot] -= 1;
							Server.shopHandler.ShopItemsDelay[c.myShopId][fromSlot] = 0;
							if ((fromSlot + 1) &gt; Server.shopHandler.ShopItemsStandard[c.myShopId]) {
								Server.shopHandler.ShopItems[c.myShopId][fromSlot] = 0;
							}
						} else {
							c.sendMessage(&quot;You don&#39;t have enough space in your inventory.&quot;);
							break;
						}
					} else {
						c.sendMessage(&quot;You don&#39;t have enough coins.&quot;);
						break;
					}
                }
			}
			c.getItems().resetItems(3823);
			resetShop(c.myShopId);
			updatePlayerShop();
			return true;
		}
		return false;
	}	[/code]</description>
    
    <lastBuildDate>Fri, 25 Jan 2013 00:52:05 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/cant-buy-from-level-point-shop/479393.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Can&#39;t buy from level point shop?</title>
        <dc:creator><![CDATA[@Joseph69 Joseph69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/joseph69">@Joseph69</a> wrote:</p>
          <blockquote>
              <p>Someone please help me, I currently have added level points system, and I can’t buy any times from the shop. I got no idea why, but I would love it if someone could help me. I have a PI.<br>
Code for Level points shop is 20.</p>
<p>This Is: public long buyDelay;public boolean buyItem(int itemID, int fromSlot, int amount) {</p>
<p>[code]public long buyDelay;<br>
public boolean buyItem(int itemID, int fromSlot, int amount) {<br>
if(System.currentTimeMillis() - buyDelay &lt; 1500) {<br>
return false;<br>
}<br>
if(c.myShopId == 7390 &amp;&amp; c.myShopClient != null &amp;&amp; !c.myShopClient.properLogout &amp;&amp; !c.playerName.equals(c.myShopClient.playerName)){<br>
if(c.playerRights == 2) {<br>
c.sendMessage(“Sorry but buying as admin is disabled :/…”);<br>
return false;<br>
}<br>
int bought = 0;<br>
int price = c.myShopClient.playerShopP[fromSlot];<br>
if(amount &gt; c.myShopClient.playerShopN[fromSlot])<br>
amount = c.myShopClient.playerShopN[fromSlot];<br>
for(int x = 0; x &lt; amount; x++){<br>
if(c.getItems().playerHasItem(995, c.myShopClient.playerShopP[fromSlot]) &amp;&amp; c.getItems().freeSlots() &gt; 0){<br>
c.getItems().deleteItem2(995, c.myShopClient.playerShopP[fromSlot]);<br>
c.getItems().addItem(c.myShopClient.playerShop[fromSlot], 1);<br>
c.myShopClient.playerShopN[fromSlot]–;<br>
c.myShopClient.playerCollect += c.myShopClient.playerShopP[fromSlot];<br>
if(c.myShopClient.playerShopN[fromSlot] == 0){<br>
c.myShopClient.playerShop[fromSlot] = 0;<br>
c.myShopClient.playerShopP[fromSlot] = 0;<br>
}<br>
bought++;<br>
}else{<br>
c.sendMessage(“Not enought space or money.”);<br>
break;<br>
}<br>
}<br>
if(bought &gt; 0){<br>
if(c.playerRights == 2) {<br>
c.sendMessage(“Sorry but buying as admin is disabled :/…”);<br>
return false;<br>
}<br>
resetShop(c.myShopClient);<br>
c.getItems().resetItems(3823);;<br>
c.sendMessage(“You just bought “+bought+” “+c.getItems().getItemName(itemID)+” for “+ (bought*price));<br>
c.myShopClient.sendMessage(c.playerName+” has bought “+bought+” “+c.getItems().getItemName(itemID)+” from you!”);<br>
c.myShopClient.sendMessage(“You now have “+c.myShopClient.playerCollect+” coins to collect (::collect)”);<br>
}<br>
return false;<br>
}else if(c.myShopId == 7390 &amp;&amp; c.myShopClient != null &amp;&amp; !c.myShopClient.properLogout &amp;&amp; c.playerName.equals(c.myShopClient.playerName)){<br>
if(c.playerRights == 2) {<br>
c.sendMessage(“Sorry but buying as admin is disabled :/…”);<br>
return false;<br>
}<br>
if(amount &gt; c.myShopClient.playerShopN[fromSlot])<br>
amount = c.myShopClient.playerShopN[fromSlot];<br>
for(int x = 0; x &lt; amount; x++){<br>
if(c.getItems().freeSlots() &gt; 0){<br>
c.getItems().addItem(c.myShopClient.playerShop[fromSlot], 1);<br>
c.myShopClient.playerShopN[fromSlot]–;<br>
if(c.myShopClient.playerShopN[fromSlot] == 0){<br>
c.myShopClient.playerShop[fromSlot] = 0;<br>
c.myShopClient.playerShopP[fromSlot] = 0;<br>
fixShop©;<br>
}<br>
}else{<br>
c.sendMessage(“Not enought space.”);<br>
break;<br>
}<br>
}<br>
resetShop(c.myShopClient);<br>
c.getItems().resetItems(3823);<br>
return false;<br>
}else if(c.myShopId == 7390){<br>
return false;<br>
}<br>
if (Server.shopHandler.ShopItems[c.myShopId][fromSlot]-1 != itemID &amp;&amp; c.myShopId != 14 &amp;&amp; c.myShopId != 1 &amp;&amp; c.myShopId != 7390) {<br>
c.sendMessage(“Stop trying to cheat.”);<br>
return false;<br>
}</p>
<pre><code>	if (c.myShopId == 14) {
		skillBuy(itemID);
		return false;

	} else if (c.myShopId == 15) {
		buyVoid(itemID);
		return false;		
	
	} else if (c.myShopId == 1) {
		buyVoid(itemID);
		return false;
            }
	if(itemID != itemID) {
		c.sendMessage("Don't dupe or you will be IP Banned");
		return false;
	}

	if(!shopSellsItem(itemID))
		return false;

	if (amount &gt; 0) {
		if (amount &gt; Server.shopHandler.ShopItemsN[c.myShopId][fromSlot]) {
			amount = Server.shopHandler.ShopItemsN[c.myShopId][fromSlot];
		}
		//double ShopValue;
		//double TotPrice;
		int TotPrice2 = 0;
		//int Overstock;
		int Slot = 0;
		int Slot1 = 0;//Tokkul
		int Slot2 = 0;//Pking Points
		int Slot3 = 0;//Donator Gold
		
		 if (c.myShopId == 21) {
                            handleOtherShop(itemID);
                            return false;
                    }

		if (c.myShopId == 18) {
			handleOtherShop(itemID);
			return false;
		}
		
		if (c.myShopId == 21) {
			handleOtherShop(itemID);
			return false;
		}
		if (c.myShopId == 16) {
			handleOtherShop(itemID);
			return false;
		}
		if (c.myShopId == 20) {
			handleOtherShop(itemID);
			return false;
		}
					if (c.myShopId == 100) {
			handleOtherShop(itemID);
			return false;
		}
		if (c.myShopId == 17) {
			handleOtherShop(itemID);
			return false;
		}	
		if (c.myShopId == 84) {
			handleOtherShop(itemID);
			return false;
		}
		if (c.myShopId == 85) {
			handleOtherShop(itemID);
			return false;
			}
		for (int i = amount; i &gt; 0; i--) {
			TotPrice2 = (int)Math.floor(getItemShopValue(itemID, 0, fromSlot));
			Slot = c.getItems().getItemSlot(995);
			Slot1 = c.getItems().getItemSlot(6529);
			Slot3 = c.getItems().getItemSlot(5555);
			if (Slot == -1 &amp;&amp; c.myShopId != 11 &amp;&amp; c.myShopId != 29 &amp;&amp; c.myShopId != 30 &amp;&amp; c.myShopId != 31 &amp;&amp; c.myShopId != 84 &amp;&amp; c.myShopId != 85 &amp;&amp; c.myShopId != 100) {
				c.sendMessage("You don't have enough coins.");
				break;
			}
			if(Slot1 == -1 &amp;&amp; c.myShopId == 29 || c.myShopId == 30 || c.myShopId == 31) {
				c.sendMessage("You don't have enough tokkul.");
				break;
			}
			if(Slot3 == -1 &amp;&amp; c.myShopId == 353) {
				c.sendMessage("You don't have enough donator gold.");
				break;
			}
		
            if(TotPrice2 &lt;= 1) {
            	TotPrice2 = (int)Math.floor(getItemShopValue(itemID, 0, fromSlot));
            	TotPrice2 *= 1.66;
            }
            if(c.myShopId == 29 || c.myShopId == 30 || c.myShopId == 31) {
            	if (c.playerItemsN[Slot1] &gt;= TotPrice2) {
					if (c.getItems().freeSlots() &gt; 0) {
						buyDelay = System.currentTimeMillis();
						c.getItems().deleteItem(6529, c.getItems().getItemSlot(6529), TotPrice2);
						c.getItems().addItem(itemID, 1);
						Server.shopHandler.ShopItemsN[c.myShopId][fromSlot] -= 1;
						Server.shopHandler.ShopItemsDelay[c.myShopId][fromSlot] = 0;
						if ((fromSlot + 1) &gt; Server.shopHandler.ShopItemsStandard[c.myShopId]) {
							Server.shopHandler.ShopItems[c.myShopId][fromSlot] = 0;
						}
					} else {
						c.sendMessage("You don't have enough space in your inventory.");
						break;
					}
				} else {
					c.sendMessage("You don't have enough tokkul.");
					break;
				}
            }
			else if(c.myShopId == 21) {
                    if (c.lvlPoints &gt;= TotPrice2) {
                                            if (c.getItems().freeSlots() &gt; 0) {
                                                    buyDelay = System.currentTimeMillis();
                                                    c.lvlPoints -= TotPrice2;
                                                    c.getItems().addItem(itemID, 1);
                                                    Server.shopHandler.ShopItemsN[c.myShopId][fromSlot] -= 1;
                                                    Server.shopHandler.ShopItemsDelay[c.myShopId][fromSlot] = 0;
                                                    if ((fromSlot + 1) &gt; Server.shopHandler.ShopItemsStandard[c.myShopId]) {
                                                            Server.shopHandler.ShopItems[c.myShopId][fromSlot] = 0;
                                                    }
                                            } else {
                                                    c.sendMessage("You don't have enough space in your inventory.");
                                                    break;
                                            }
                                    } else {
                                            c.sendMessage("You don't have enough lvl Points.");
                                            break;
                                    }
            }
			else if(c.myShopId == 16) {
            	if (c.SPoints &gt;= TotPrice2) {
					if (c.getItems().freeSlots() &gt; 0) {
						buyDelay = System.currentTimeMillis();
						c.SPoints -= TotPrice2;
						c.getItems().addItem(itemID, 1);
						Server.shopHandler.ShopItemsN[c.myShopId][fromSlot] -= 1;
						Server.shopHandler.ShopItemsDelay[c.myShopId][fromSlot] = 0;
						if ((fromSlot + 1) &gt; Server.shopHandler.ShopItemsStandard[c.myShopId]) {
							Server.shopHandler.ShopItems[c.myShopId][fromSlot] = 0;
						}
					} else {
						c.sendMessage("You don't have enough space in your inventory.");
						break;
					}
				} else {
					c.sendMessage("You don't have enough Agility Points.");
					break;
				}
            }
			else if(c.myShopId == 20) {//Checked
                    if (c.votingPoints &gt;= TotPrice2) {
                                            if (c.getItems().freeSlots() &gt; 0) {
                                                    buyDelay = System.currentTimeMillis();
                                                    c.votingPoints -= TotPrice2;
                                                    c.getItems().addItem(itemID, 1);
                                                    Server.shopHandler.ShopItemsN[c.myShopId][fromSlot] -= 1;
                                                    Server.shopHandler.ShopItemsDelay[c.myShopId][fromSlot] = 0;
                                                    if ((fromSlot + 1) &gt; Server.shopHandler.ShopItemsStandard[c.myShopId]) {
                                                            Server.shopHandler.ShopItems[c.myShopId][fromSlot] = 0;
                                                    }
                                            } else {
                                                    c.sendMessage("You don't have enough space in your inventory.");
                                                    break;
                                            }
                                    } else {
                                            c.sendMessage("You don't have enough Vote Points.");
                                            break;
                                    }
            }
							else if(c.myShopId == 100) {
            	if (c.barbPoints &gt;= TotPrice2) {
					if (c.getItems().freeSlots() &gt; 0) {
						buyDelay = System.currentTimeMillis();
						c.barbPoints -= TotPrice2;
						c.getItems().addItem(itemID, 1);
						Server.shopHandler.ShopItemsN[c.myShopId][fromSlot] -= 1;
						Server.shopHandler.ShopItemsDelay[c.myShopId][fromSlot] = 0;
						if ((fromSlot + 1) &gt; Server.shopHandler.ShopItemsStandard[c.myShopId]) {
							Server.shopHandler.ShopItems[c.myShopId][fromSlot] = 0;
						}
					} else {
						c.sendMessage("You don't have enough space in your inventory.");
						break;
					}
				} else {
					c.sendMessage("You don't have enough Points.");
					break;
				}
            }
			else if(c.myShopId == 84) {
            	if (c.dungPoints &gt;= TotPrice2) {
					if (c.getItems().freeSlots() &gt; 0) {
						buyDelay = System.currentTimeMillis();
						c.dungPoints -= TotPrice2;
						c.getItems().addItem(itemID, 1);
						Server.shopHandler.ShopItemsN[c.myShopId][fromSlot] -= 1;
						Server.shopHandler.ShopItemsDelay[c.myShopId][fromSlot] = 0;
						if ((fromSlot + 1) &gt; Server.shopHandler.ShopItemsStandard[c.myShopId]) {
							Server.shopHandler.ShopItems[c.myShopId][fromSlot] = 0;
						}
					} else {
						c.sendMessage("You don't have enough space in your inventory.");
						break;
					}
				} else {
					c.sendMessage("You don't have enough Dungeoneering Tokens.");
					break;
				}
            }
			else if(c.myShopId == 85) {
            	if (c.dungPoints &gt;= TotPrice2) {
					if (c.getItems().freeSlots() &gt; 0) {
						buyDelay = System.currentTimeMillis();
						c.dungPoints -= TotPrice2;
						c.getItems().addItem(itemID, 1);
						Server.shopHandler.ShopItemsN[c.myShopId][fromSlot] -= 1;
						Server.shopHandler.ShopItemsDelay[c.myShopId][fromSlot] = 0;
						if ((fromSlot + 1) &gt; Server.shopHandler.ShopItemsStandard[c.myShopId]) {
							Server.shopHandler.ShopItems[c.myShopId][fromSlot] = 0;
						}
					} else {
						c.sendMessage("You don't have enough space in your inventory.");
						break;
					}
				} else {
					c.sendMessage("You don't have enough Dungeoneering Tokens.");
					break;
				}
            }
            else if(c.myShopId == 11) {
            	if (c.playerItemsN[Slot3] &gt;= TotPrice2) {
					if (c.getItems().freeSlots() &gt; 0) {
						buyDelay = System.currentTimeMillis();
						c.getItems().deleteItem(5555, c.getItems().getItemSlot(5555), TotPrice2);
						c.getItems().addItem(itemID, 1);
						Server.shopHandler.ShopItemsN[c.myShopId][fromSlot] -= 1;
						Server.shopHandler.ShopItemsDelay[c.myShopId][fromSlot] = 0;
						if ((fromSlot + 1) &gt; Server.shopHandler.ShopItemsStandard[c.myShopId]) {
							Server.shopHandler.ShopItems[c.myShopId][fromSlot] = 0;
						}
					} else {
						c.sendMessage("You don't have enough space in your inventory.");
						break;
					}
				} else {
					c.sendMessage("You don't have enough donator gold.");
					break;
				}
            }
            else if(c.myShopId != 11 &amp;&amp; c.myShopId != 29 || c.myShopId != 30 || c.myShopId != 31 || c.myShopId != 84 || c.myShopId != 85 || c.myShopId != 16) {
				if (c.playerItemsN[Slot] &gt;= TotPrice2) {
					if (c.getItems().freeSlots() &gt; 0) {
						buyDelay = System.currentTimeMillis();
						c.getItems().deleteItem(995, c.getItems().getItemSlot(995), TotPrice2);
						c.getItems().addItem(itemID, 1);
						Server.shopHandler.ShopItemsN[c.myShopId][fromSlot] -= 1;
						Server.shopHandler.ShopItemsDelay[c.myShopId][fromSlot] = 0;
						if ((fromSlot + 1) &gt; Server.shopHandler.ShopItemsStandard[c.myShopId]) {
							Server.shopHandler.ShopItems[c.myShopId][fromSlot] = 0;
						}
					} else {
						c.sendMessage("You don't have enough space in your inventory.");
						break;
					}
				} else {
					c.sendMessage("You don't have enough coins.");
					break;
				}
            }
		}
		c.getItems().resetItems(3823);
		resetShop(c.myShopId);
		updatePlayerShop();
		return true;
	}
	return false;
}	[/code]</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cant-buy-from-level-point-shop/479393/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cant-buy-from-level-point-shop/479393/1</link>
        <pubDate>Fri, 25 Jan 2013 00:52:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-479393-1</guid>
        <source url="https://forum.moparisthebest.com/t/cant-buy-from-level-point-shop/479393.rss">Can&#39;t buy from level point shop?</source>
      </item>
  </channel>
</rss>
