<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[PI] NPC Drop Formulas</title>
    <link>https://forum.moparisthebest.com/t/pi-npc-drop-formulas/443520</link>
    <description>Alright, so I&#39;m trying to get these drops to work, I&#39;ve been trying for hours but can&#39;t seem to get them to work correctly, the &quot;COMMON&quot; value I got to work, but the rest I cannot get.. Here is the original file: 

[code=Java]
	/**
	 * 
	 * @param value
	 * @return Percent Rarities
	 * Float used rather than a double.
	 */
	
	public float getRarity(String value) {
		float dropRarity = 0.0f;
		if (value.equalsIgnoreCase(&quot;ALWAYS&quot;)) {
			dropRarity = 100.0f;
		} else if (value.equalsIgnoreCase(&quot;VERY_COMMON&quot;)) {
			dropRarity = 75.0f;	
		} else if (value.equalsIgnoreCase(&quot;COMMON&quot;)) {
			int x = server.Misc.random(2, 50); 			// 1 in 2 through 50 kills will give this item
			dropRarity = (float) (1 - (1 - (1/x))) * 100;
		} else if (value.equalsIgnoreCase(&quot;UNCOMMON&quot;)) {
			int x = server.Misc.random(51, 100); 		// 1 in 51 through 100 kills will give this item
			dropRarity = (float) (1 - (1 - (1/x))) * 100;
		} else if (value.equalsIgnoreCase(&quot;RARE&quot;)) {
			int x = server.Misc.random(101, 512); 		// 1 in 101 through 512 kills will give this item
			dropRarity = (float) (1 - (1 - (1/x))) * 100;
		} else if (value.equalsIgnoreCase(&quot;VERY_RARE&quot;)) {
			int x = server.Misc.random(513, 1024); 		// 1 in 513 through 1024 kills will give this item
			dropRarity = (float) (1 - (1 - (1/x))) * 100;
		} else if (value.equalsIgnoreCase(&quot;SUPER_RARE&quot;)) {
			int x = server.Misc.random(1025, 4096); 	// 1 in 1025 through 4096 kills will give this item
			dropRarity = (float) (1 - (1 - (1/x))) * 100;
		} else if (value.equalsIgnoreCase(&quot;EXTREMELY_RARE&quot;)) {
			int x = server.Misc.random(4097, 8192); 	// 1 in 4097 through 8192 kills will give this item
			dropRarity = (float) (1 - (1 - (1/x))) * 100;
		} else {
			dropRarity = Float.parseFloat(value);
		}
		return dropRarity;
	}
[/code]
Here is the work ive done so far,

[code=Java]
	/**
	 * 
	 * @param value
	 * @return Percent Rarities Float used rather than a double.
	 */

	public float getRarity(String value) {
		float dropRarity = 0.0f;
		if (value.equalsIgnoreCase(&quot;ALWAYS&quot;)) {
			dropRarity = 100.0f;
		} else if (value.equalsIgnoreCase(&quot;VERY_COMMON&quot;)) {
			dropRarity = 75.0f;
		} else if (value.equalsIgnoreCase(&quot;COMMON&quot;)) {
			int x = Misc.random(2, 50); // 1 in 2 through 50 kills will give
			// this item
			float dropRarity2 = 0.0f;
			dropRarity2 = (float) (1.0 - (1.0 - (1.0 / (float) x))) * 100;
			dropRarity = (float) Math.floor(dropRarity2);
		} else if (value.equalsIgnoreCase(&quot;UNCOMMON&quot;)) {
			int x = Misc.random(51, 100); // 1 in 51 through 100 kills will give
											// this item
			float dropRarity2 = 0.0f;
			dropRarity2 = (float) (2.0 - (1.0 - (1.0 / (float) x))) * 10;
			dropRarity = (float) Math.floor(dropRarity2);
			System.out.println(&quot;UNCOMMON: &quot; + dropRarity);
		} else if (value.equalsIgnoreCase(&quot;RARE&quot;)) {
			int x = Misc.random(101, 512); // 1 in 101 through 512 kills will
											// give this item
			float dropRarity2 = 0.0f;
			dropRarity2 = (float) (1.0 - (1.0 - (1.0 / (float) x))) * 100;
			dropRarity = (float) Math.floor(dropRarity2);
		} else if (value.equalsIgnoreCase(&quot;VERY_RARE&quot;)) {
			int x = Misc.random(513, 1024); // 1 in 513 through 1024 kills will
											// give this item
			float dropRarity2 = 0.0f;
			dropRarity2 = (float) (1.0 - (1.0 - (1.0 / (float) x))) * 100;
			dropRarity = (float) Math.floor(dropRarity2);
		} else if (value.equalsIgnoreCase(&quot;SUPER_RARE&quot;)) {
			int x = Misc.random(1025, 4096); // 1 in 1025 through 4096 kills
												// will give this item
			dropRarity = (float) (1 - (1 - (1 / (float) x))) * 100;
		} else if (value.equalsIgnoreCase(&quot;EXTREMELY_RARE&quot;)) {
			int x = Misc.random(4097, 8192); // 1 in 4097 through 8192 kills
												// will give this item
			float dropRarity2 = 0.0f;
			dropRarity2 = (float) (1.0 - (1.0 - (1.0 / (float) x))) * 100;
			dropRarity = (float) Math.floor(dropRarity2);
		} else {
			dropRarity = Float.parseFloat(value);
		}
		return dropRarity;
	}
[/code]
I can&#39;t get any of the other values to return anything high enough to drop the item, like it says.</description>
    
    <lastBuildDate>Thu, 31 May 2012 01:15:35 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/pi-npc-drop-formulas/443520.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[PI] NPC Drop Formulas</title>
        <dc:creator><![CDATA[@tyb97 tyb97]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tyb97">@tyb97</a> wrote:</p>
          <blockquote>
              <p>Alright, so I’m trying to get these drops to work, I’ve been trying for hours but can’t seem to get them to work correctly, the “COMMON” value I got to work, but the rest I cannot get… Here is the original file:</p>
<pre><code class="lang-auto">	/**
	 * 
	 * @param value
	 * @return Percent Rarities
	 * Float used rather than a double.
	 */
	
	public float getRarity(String value) {
		float dropRarity = 0.0f;
		if (value.equalsIgnoreCase("ALWAYS")) {
			dropRarity = 100.0f;
		} else if (value.equalsIgnoreCase("VERY_COMMON")) {
			dropRarity = 75.0f;	
		} else if (value.equalsIgnoreCase("COMMON")) {
			int x = server.Misc.random(2, 50); 			// 1 in 2 through 50 kills will give this item
			dropRarity = (float) (1 - (1 - (1/x))) * 100;
		} else if (value.equalsIgnoreCase("UNCOMMON")) {
			int x = server.Misc.random(51, 100); 		// 1 in 51 through 100 kills will give this item
			dropRarity = (float) (1 - (1 - (1/x))) * 100;
		} else if (value.equalsIgnoreCase("RARE")) {
			int x = server.Misc.random(101, 512); 		// 1 in 101 through 512 kills will give this item
			dropRarity = (float) (1 - (1 - (1/x))) * 100;
		} else if (value.equalsIgnoreCase("VERY_RARE")) {
			int x = server.Misc.random(513, 1024); 		// 1 in 513 through 1024 kills will give this item
			dropRarity = (float) (1 - (1 - (1/x))) * 100;
		} else if (value.equalsIgnoreCase("SUPER_RARE")) {
			int x = server.Misc.random(1025, 4096); 	// 1 in 1025 through 4096 kills will give this item
			dropRarity = (float) (1 - (1 - (1/x))) * 100;
		} else if (value.equalsIgnoreCase("EXTREMELY_RARE")) {
			int x = server.Misc.random(4097, 8192); 	// 1 in 4097 through 8192 kills will give this item
			dropRarity = (float) (1 - (1 - (1/x))) * 100;
		} else {
			dropRarity = Float.parseFloat(value);
		}
		return dropRarity;
	}</code></pre>
<p>Here is the work ive done so far,</p>
<pre><code class="lang-auto">	/**
	 * 
	 * @param value
	 * @return Percent Rarities Float used rather than a double.
	 */

	public float getRarity(String value) {
		float dropRarity = 0.0f;
		if (value.equalsIgnoreCase("ALWAYS")) {
			dropRarity = 100.0f;
		} else if (value.equalsIgnoreCase("VERY_COMMON")) {
			dropRarity = 75.0f;
		} else if (value.equalsIgnoreCase("COMMON")) {
			int x = Misc.random(2, 50); // 1 in 2 through 50 kills will give
			// this item
			float dropRarity2 = 0.0f;
			dropRarity2 = (float) (1.0 - (1.0 - (1.0 / (float) x))) * 100;
			dropRarity = (float) Math.floor(dropRarity2);
		} else if (value.equalsIgnoreCase("UNCOMMON")) {
			int x = Misc.random(51, 100); // 1 in 51 through 100 kills will give
											// this item
			float dropRarity2 = 0.0f;
			dropRarity2 = (float) (2.0 - (1.0 - (1.0 / (float) x))) * 10;
			dropRarity = (float) Math.floor(dropRarity2);
			System.out.println("UNCOMMON: " + dropRarity);
		} else if (value.equalsIgnoreCase("RARE")) {
			int x = Misc.random(101, 512); // 1 in 101 through 512 kills will
											// give this item
			float dropRarity2 = 0.0f;
			dropRarity2 = (float) (1.0 - (1.0 - (1.0 / (float) x))) * 100;
			dropRarity = (float) Math.floor(dropRarity2);
		} else if (value.equalsIgnoreCase("VERY_RARE")) {
			int x = Misc.random(513, 1024); // 1 in 513 through 1024 kills will
											// give this item
			float dropRarity2 = 0.0f;
			dropRarity2 = (float) (1.0 - (1.0 - (1.0 / (float) x))) * 100;
			dropRarity = (float) Math.floor(dropRarity2);
		} else if (value.equalsIgnoreCase("SUPER_RARE")) {
			int x = Misc.random(1025, 4096); // 1 in 1025 through 4096 kills
												// will give this item
			dropRarity = (float) (1 - (1 - (1 / (float) x))) * 100;
		} else if (value.equalsIgnoreCase("EXTREMELY_RARE")) {
			int x = Misc.random(4097, 8192); // 1 in 4097 through 8192 kills
												// will give this item
			float dropRarity2 = 0.0f;
			dropRarity2 = (float) (1.0 - (1.0 - (1.0 / (float) x))) * 100;
			dropRarity = (float) Math.floor(dropRarity2);
		} else {
			dropRarity = Float.parseFloat(value);
		}
		return dropRarity;
	}</code></pre>
<p>I can’t get any of the other values to return anything high enough to drop the item, like it says.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-npc-drop-formulas/443520/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-npc-drop-formulas/443520/1</link>
        <pubDate>Thu, 31 May 2012 01:15:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-443520-1</guid>
        <source url="https://forum.moparisthebest.com/t/pi-npc-drop-formulas/443520.rss">[PI] NPC Drop Formulas</source>
      </item>
  </channel>
</rss>
