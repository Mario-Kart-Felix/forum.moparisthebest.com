<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Login script screwed up, please help me =&#39;(</title>
    <link>https://forum.moparisthebest.com/t/login-script-screwed-up-please-help-me/258200</link>
    <description>[code]public int loadgame(String playerName, String playerPass) {
		for (Integer bUid : server.bannedUid) {
			if (uid == bUid.intValue()) {
				return 4;
			}
		}
		loadPlayer();
		loadMisc();
		return 0;
	}

	public int loadPlayer() {
	
		long start = System.currentTimeMillis();
		String line = &quot;&quot;;
		String token = &quot;&quot;;
		String token2 = &quot;&quot;;
		String[] token3 = new String[3];
		boolean EndOfFile = false;
		int ReadMode = 0;
		BufferedReader characterfile = null;
		boolean charFileFound = false;
		int[] playerLooks = new int[19];

		try {
			characterfile = new BufferedReader(new FileReader(&quot;./characters/&quot;
					+ playerName + &quot;.txt&quot;));
			charFileFound = true;
		} catch (FileNotFoundException fileex1) {
		}

		if (charFileFound == false) {
			misc.println(playerName + &quot;: character file not found.&quot;);
			return 0;
		}

		try {
			line = characterfile.readLine();
		} catch (IOException ioexception) {
			misc.println(playerName + &quot;: error loading file.&quot;);
			return 3;
		}
		while ((EndOfFile == false) &amp;&amp; (line != null)) {
			line = line.trim();
			int spot = line.indexOf(&quot;=&quot;);
			if (spot &gt; -1) {
				token = line.substring(0, spot);
				token = token.trim();
				token2 = line.substring(spot + 1);
				token2 = token2.trim();
				token3 = token2.split(&quot;\t&quot;);
				switch (ReadMode) {
				case 1:
					if (token.equals(&quot;character-username&quot;)) {
						if (playerName.equalsIgnoreCase(token2)) {
						} else {
							saveNeeded = false;
							validClient = false;
							return 3;
						}
					} else if (token.equals(&quot;character-password&quot;)) {
						if (playerPass.equalsIgnoreCase(token2)) {
						} else {
							saveNeeded = false;
							validClient = false;
							return 3;
						}
					}
					break;
				case 2:
					if (token.equals(&quot;character-height&quot;)) {
						heightLevel = Integer.parseInt(token2);
					} else if (token.equals(&quot;character-posx&quot;)) {
						teleportToX = Integer.parseInt(token2) == -1 ? 2725
								: Integer.parseInt(token2);
					} else if (token.equals(&quot;character-posy&quot;)) {
						teleportToY = Integer.parseInt(token2) == -1 ? 3492
								: Integer.parseInt(token2);
					} else if (token.equals(&quot;character-rights&quot;)) {
						playerRights = Integer.parseInt(token2);
					} else if (token.equals(&quot;character-ismember&quot;)) {
						playerIsMember = Integer.parseInt(token2);
					} else if (token.equals(&quot;character-messages&quot;)) {
						playerMessages = Integer.parseInt(token2);
					} else if (token.equals(&quot;character-lastconnection&quot;)) {
						playerLastConnect = token2;
					} else if (token.equals(&quot;character-lastlogin&quot;)) {
						playerLastLogin = Integer.parseInt(token2);
					} else if (token.equals(&quot;character-energy&quot;)) {
						playerEnergy = Integer.parseInt(token2);
					} else if (token.equals(&quot;character-gametime&quot;)) {
						playerGameTime = Integer.parseInt(token2);
					} else if (token.equals(&quot;character-gamecount&quot;)) {
						playerGameCount = Integer.parseInt(token2);
					} else if (token.equals(&quot;character-ancients&quot;)) {
						ancients = Integer.parseInt(token2);
					} else if (token.equals(&quot;character-rating&quot;)) {
						rating = Integer.parseInt(token2);
					}
					break;
				case 3:
					if (token.equals(&quot;character-equip&quot;)) {
						playerEquipment[Integer.parseInt(token3[0])] = Integer
								.parseInt(token3[1]);
						playerEquipmentN[Integer.parseInt(token3[0])] = Integer
								.parseInt(token3[2]);
					}
					break;
				case 4:
					if (token.equals(&quot;character-look&quot;)) {
						playerLooks[Integer.parseInt(token3[0])] = Integer
								.parseInt(token3[1]);
					}
					break;
				case 5:
					if (token.equals(&quot;character-skill&quot;)) {
						playerLevel[Integer.parseInt(token3[0])] = Integer
								.parseInt(token3[1]);
						playerXP[Integer.parseInt(token3[0])] = Integer
								.parseInt(token3[2]);

						int level = 0;
						if (playerXP[Integer.parseInt(token3[0])] &gt; 13040000) {
							level = 99;
						} else {
							level = getLevelForXP(playerXP[Integer
									.parseInt(token3[0])]);
						}
						playerLevel[Integer.parseInt(token3[0])] = level;
						setSkillLevel(Integer.parseInt(token3[0]), level,
								playerXP[Integer.parseInt(token3[0])]);
						if (Integer.parseInt(token3[0]) == 3) {
							currentHealth = level;
							maxHealth = level;
						}
					}
					break;
				case 6:
					if (token.equals(&quot;character-item&quot;)) {
						playerItems[Integer.parseInt(token3[0])] = Integer
								.parseInt(token3[1]);
						playerItemsN[Integer.parseInt(token3[0])] = Integer
								.parseInt(token3[2]);
					}
					break;
				case 7:
					if (token.equals(&quot;character-bank&quot;)) {
						bankItems[Integer.parseInt(token3[0])] = Integer
								.parseInt(token3[1]);
						bankItemsN[Integer.parseInt(token3[0])] = Integer
								.parseInt(token3[2]);
					}
					break;
				case 8:
					if (token.equals(&quot;character-friend&quot;)) {
						friends[Integer.parseInt(token3[0])] = Long
								.parseLong(token3[1]);
					}
					break;
				case 9:
					if (token.equals(&quot;character-ignore&quot;)) {
						ignores[Integer.parseInt(token3[0])] = Long
								.parseLong(token3[1]);
					}
					break;
				}
			} else {
				if (line.equals(&quot;[ACCOUNT]&quot;))
					ReadMode = 1;
				else if (line.equals(&quot;[CHARACTER]&quot;))
					ReadMode = 2;
				else if (line.equals(&quot;[EQUIPMENT]&quot;))
					ReadMode = 3;
				else if (line.equals(&quot;[LOOK]&quot;))
					ReadMode = 4;
				else if (line.equals(&quot;[SKILLS]&quot;))
					ReadMode = 5;
				else if (line.equals(&quot;[ITEMS]&quot;))
					ReadMode = 6;
				else if (line.equals(&quot;[BANK]&quot;))
					ReadMode = 7;
				else if (line.equals(&quot;[FRIENDS]&quot;))
					ReadMode = 8;
				else if (line.equals(&quot;[IGNORES]&quot;))
					ReadMode = 9;
				else if (line.equals(&quot;[EOF]&quot;)) {
					// end of file now do whatever you set.
					try {
						characterfile.close();
					} catch (IOException ioexception) {
					}




					setLook(playerLooks);
					updateRequired = true;
					appearanceUpdateRequired = true;
					long end = System.currentTimeMillis() - start;
					println(&quot;Loading Process Completed  [&quot;
							+ (playerRights &gt; 0 ? &quot;Has powers&quot;
									: &quot;Regular player&quot;) + &quot;, lag: &quot; + end
							+ &quot; ms]&quot;);
					return 0;
				}
			}

			//Exception occured @ some line
			try {
				line = characterfile.readLine();
			} catch (IOException ioexception1) {
				EndOfFile = true;
			}
		}

		try {
			characterfile.close();
		} catch (IOException ioexception) {
		}
		println(&quot;Failed to load player: &quot; + playerName);
		return 13;
	}

	public int loadMisc() {
		String line = &quot;&quot;;
		String token = &quot;&quot;;
		String token2 = &quot;&quot;;
		String[] token3 = new String[3];
		boolean EndOfFile = false;
		int ReadMode = 0;
		BufferedReader characterfile = null;
		BufferedReader characterfile2 = null;
		boolean File1 = false;
		boolean File2 = false;
                
		try {
			characterfile = new BufferedReader(new FileReader(&quot;./moreinfo/&quot;+playerName+&quot;.txt&quot;));
			File1 = true;
		} catch(FileNotFoundException fileex1) { }
		try {
			line = characterfile.readLine();
		} catch(IOException ioexception) {
			misc.println(playerName+&quot;: error loading file.&quot;);
		}
		while(EndOfFile == false &amp;&amp; line != null) {
			line = line.trim();
			int spot = line.indexOf(&quot;=&quot;);
			if (spot &gt; -1) {
				token = line.substring(0, spot);
				token = token.trim();
				token2 = line.substring(spot + 1);
				token2 = token2.trim();
				token3 = token2.split(&quot;\t&quot;);
				switch (ReadMode) {
					case 1:
						break;
					case 2: 
                                                if (token.equals(&quot;character-questpoints&quot;)) {
						    totalqp = Integer.parseInt(token2);
						} 
						else if (token.equals(&quot;character-quest_1&quot;)) {
							q1stage = Integer.parseInt(token2);
						} else if (token.equals(&quot;character-quest_2&quot;)) {
							q2stage = Integer.parseInt(token2);
						} else if (token.equals(&quot;character-quest_3&quot;)) {
							q3stage = Integer.parseInt(token2);
						} else if (token.equals(&quot;character-quest_99&quot;)) {
							q99stage = Integer.parseInt(token2);
						} 
                                                break;
                                        case 3: 
                                                break;
					case 4:
                                                break;
				}
			} else {
				if (line.equals(&quot;[MOREINFO]&quot;)) {		ReadMode = 1;
				}  else if (line.equals(&quot;[QUESTS]&quot;)) {
                                ReadMode = 2;
				} else if (line.equals(&quot;[FRIENDS]&quot;)) {
                                ReadMode = 3;
				} else if (line.equals(&quot;[IGNORES]&quot;)) {
                                ReadMode = 4;
				} else if (line.equals(&quot;[EOF]&quot;)) {		try { characterfile.close(); } catch(IOException ioexception) { }; // return 1;
				}
			}
			try {
				line = characterfile.readLine();
			} catch(IOException ioexception1) { EndOfFile = true; }
		}
		try { characterfile.close(); } catch(IOException ioexception) { }
                return 0;
	}
[/code]

whats the problem here? o_O please tell my i cant login anymore and i want that second part (loadmisc) to be in for quest voids.</description>
    
    <lastBuildDate>Sat, 24 Jan 2009 12:03:16 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/login-script-screwed-up-please-help-me/258200.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Login script screwed up, please help me =&#39;(</title>
        <dc:creator><![CDATA[@swodlayer swodlayer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/swodlayer">@swodlayer</a> wrote:</p>
          <blockquote>
              <p>err no this is from my client.java.</p>
<p>It does the login though. thing is the first part, loadPlayer(); , is the original and i wanted to add the loadMisc to it. It doesnt work though. and if i but both codes in 1 file it doesnt work either.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/login-script-screwed-up-please-help-me/258200/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/login-script-screwed-up-please-help-me/258200/3</link>
        <pubDate>Sat, 24 Jan 2009 12:03:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-258200-3</guid>
        <source url="https://forum.moparisthebest.com/t/login-script-screwed-up-please-help-me/258200.rss">Login script screwed up, please help me =&#39;(</source>
      </item>
      <item>
        <title>Login script screwed up, please help me =&#39;(</title>
        <dc:creator><![CDATA[@Tha_Hartpaint_Dude Tha Hartpaint Dude]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tha_hartpaint_dude">@Tha_Hartpaint_Dude</a> wrote:</p>
          <blockquote>
              <p>U mean, u did something wrong in “Login.java”?</p>
<p>i will send you the fixed code if you need.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/login-script-screwed-up-please-help-me/258200/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/login-script-screwed-up-please-help-me/258200/2</link>
        <pubDate>Sat, 24 Jan 2009 11:39:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-258200-2</guid>
        <source url="https://forum.moparisthebest.com/t/login-script-screwed-up-please-help-me/258200.rss">Login script screwed up, please help me =&#39;(</source>
      </item>
      <item>
        <title>Login script screwed up, please help me =&#39;(</title>
        <dc:creator><![CDATA[@swodlayer swodlayer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/swodlayer">@swodlayer</a> wrote:</p>
          <blockquote>
              <p>[code]public int loadgame(String playerName, String playerPass) {<br>
for (Integer bUid : server.bannedUid) {<br>
if (uid == bUid.intValue()) {<br>
return 4;<br>
}<br>
}<br>
loadPlayer();<br>
loadMisc();<br>
return 0;<br>
}</p>
<pre><code>public int loadPlayer() {

	long start = System.currentTimeMillis();
	String line = "";
	String token = "";
	String token2 = "";
	String[] token3 = new String[3];
	boolean EndOfFile = false;
	int ReadMode = 0;
	BufferedReader characterfile = null;
	boolean charFileFound = false;
	int[] playerLooks = new int[19];

	try {
		characterfile = new BufferedReader(new FileReader("./characters/"
				+ playerName + ".txt"));
		charFileFound = true;
	} catch (FileNotFoundException fileex1) {
	}

	if (charFileFound == false) {
		misc.println(playerName + ": character file not found.");
		return 0;
	}

	try {
		line = characterfile.readLine();
	} catch (IOException ioexception) {
		misc.println(playerName + ": error loading file.");
		return 3;
	}
	while ((EndOfFile == false) &amp;&amp; (line != null)) {
		line = line.trim();
		int spot = line.indexOf("=");
		if (spot &gt; -1) {
			token = line.substring(0, spot);
			token = token.trim();
			token2 = line.substring(spot + 1);
			token2 = token2.trim();
			token3 = token2.split("\t");
			switch (ReadMode) {
			case 1:
				if (token.equals("character-username")) {
					if (playerName.equalsIgnoreCase(token2)) {
					} else {
						saveNeeded = false;
						validClient = false;
						return 3;
					}
				} else if (token.equals("character-password")) {
					if (playerPass.equalsIgnoreCase(token2)) {
					} else {
						saveNeeded = false;
						validClient = false;
						return 3;
					}
				}
				break;
			case 2:
				if (token.equals("character-height")) {
					heightLevel = Integer.parseInt(token2);
				} else if (token.equals("character-posx")) {
					teleportToX = Integer.parseInt(token2) == -1 ? 2725
							: Integer.parseInt(token2);
				} else if (token.equals("character-posy")) {
					teleportToY = Integer.parseInt(token2) == -1 ? 3492
							: Integer.parseInt(token2);
				} else if (token.equals("character-rights")) {
					playerRights = Integer.parseInt(token2);
				} else if (token.equals("character-ismember")) {
					playerIsMember = Integer.parseInt(token2);
				} else if (token.equals("character-messages")) {
					playerMessages = Integer.parseInt(token2);
				} else if (token.equals("character-lastconnection")) {
					playerLastConnect = token2;
				} else if (token.equals("character-lastlogin")) {
					playerLastLogin = Integer.parseInt(token2);
				} else if (token.equals("character-energy")) {
					playerEnergy = Integer.parseInt(token2);
				} else if (token.equals("character-gametime")) {
					playerGameTime = Integer.parseInt(token2);
				} else if (token.equals("character-gamecount")) {
					playerGameCount = Integer.parseInt(token2);
				} else if (token.equals("character-ancients")) {
					ancients = Integer.parseInt(token2);
				} else if (token.equals("character-rating")) {
					rating = Integer.parseInt(token2);
				}
				break;
			case 3:
				if (token.equals("character-equip")) {
					playerEquipment[Integer.parseInt(token3[0])] = Integer
							.parseInt(token3[1]);
					playerEquipmentN[Integer.parseInt(token3[0])] = Integer
							.parseInt(token3[2]);
				}
				break;
			case 4:
				if (token.equals("character-look")) {
					playerLooks[Integer.parseInt(token3[0])] = Integer
							.parseInt(token3[1]);
				}
				break;
			case 5:
				if (token.equals("character-skill")) {
					playerLevel[Integer.parseInt(token3[0])] = Integer
							.parseInt(token3[1]);
					playerXP[Integer.parseInt(token3[0])] = Integer
							.parseInt(token3[2]);

					int level = 0;
					if (playerXP[Integer.parseInt(token3[0])] &gt; 13040000) {
						level = 99;
					} else {
						level = getLevelForXP(playerXP[Integer
								.parseInt(token3[0])]);
					}
					playerLevel[Integer.parseInt(token3[0])] = level;
					setSkillLevel(Integer.parseInt(token3[0]), level,
							playerXP[Integer.parseInt(token3[0])]);
					if (Integer.parseInt(token3[0]) == 3) {
						currentHealth = level;
						maxHealth = level;
					}
				}
				break;
			case 6:
				if (token.equals("character-item")) {
					playerItems[Integer.parseInt(token3[0])] = Integer
							.parseInt(token3[1]);
					playerItemsN[Integer.parseInt(token3[0])] = Integer
							.parseInt(token3[2]);
				}
				break;
			case 7:
				if (token.equals("character-bank")) {
					bankItems[Integer.parseInt(token3[0])] = Integer
							.parseInt(token3[1]);
					bankItemsN[Integer.parseInt(token3[0])] = Integer
							.parseInt(token3[2]);
				}
				break;
			case 8:
				if (token.equals("character-friend")) {
					friends[Integer.parseInt(token3[0])] = Long
							.parseLong(token3[1]);
				}
				break;
			case 9:
				if (token.equals("character-ignore")) {
					ignores[Integer.parseInt(token3[0])] = Long
							.parseLong(token3[1]);
				}
				break;
			}
		} else {
			if (line.equals("[ACCOUNT]"))
				ReadMode = 1;
			else if (line.equals("[CHARACTER]"))
				ReadMode = 2;
			else if (line.equals("[EQUIPMENT]"))
				ReadMode = 3;
			else if (line.equals("[LOOK]"))
				ReadMode = 4;
			else if (line.equals("[SKILLS]"))
				ReadMode = 5;
			else if (line.equals("[ITEMS]"))
				ReadMode = 6;
			else if (line.equals("[BANK]"))
				ReadMode = 7;
			else if (line.equals("[FRIENDS]"))
				ReadMode = 8;
			else if (line.equals("[IGNORES]"))
				ReadMode = 9;
			else if (line.equals("[EOF]")) {
				// end of file now do whatever you set.
				try {
					characterfile.close();
				} catch (IOException ioexception) {
				}




				setLook(playerLooks);
				updateRequired = true;
				appearanceUpdateRequired = true;
				long end = System.currentTimeMillis() - start;
				println("Loading Process Completed  ["
						+ (playerRights &gt; 0 ? "Has powers"
								: "Regular player") + ", lag: " + end
						+ " ms]");
				return 0;
			}
		}

		//Exception occured @ some line
		try {
			line = characterfile.readLine();
		} catch (IOException ioexception1) {
			EndOfFile = true;
		}
	}

	try {
		characterfile.close();
	} catch (IOException ioexception) {
	}
	println("Failed to load player: " + playerName);
	return 13;
}

public int loadMisc() {
	String line = "";
	String token = "";
	String token2 = "";
	String[] token3 = new String[3];
	boolean EndOfFile = false;
	int ReadMode = 0;
	BufferedReader characterfile = null;
	BufferedReader characterfile2 = null;
	boolean File1 = false;
	boolean File2 = false;
            
	try {
		characterfile = new BufferedReader(new FileReader("./moreinfo/"+playerName+".txt"));
		File1 = true;
	} catch(FileNotFoundException fileex1) { }
	try {
		line = characterfile.readLine();
	} catch(IOException ioexception) {
		misc.println(playerName+": error loading file.");
	}
	while(EndOfFile == false &amp;&amp; line != null) {
		line = line.trim();
		int spot = line.indexOf("=");
		if (spot &gt; -1) {
			token = line.substring(0, spot);
			token = token.trim();
			token2 = line.substring(spot + 1);
			token2 = token2.trim();
			token3 = token2.split("\t");
			switch (ReadMode) {
				case 1:
					break;
				case 2: 
                                            if (token.equals("character-questpoints")) {
					    totalqp = Integer.parseInt(token2);
					} 
					else if (token.equals("character-quest_1")) {
						q1stage = Integer.parseInt(token2);
					} else if (token.equals("character-quest_2")) {
						q2stage = Integer.parseInt(token2);
					} else if (token.equals("character-quest_3")) {
						q3stage = Integer.parseInt(token2);
					} else if (token.equals("character-quest_99")) {
						q99stage = Integer.parseInt(token2);
					} 
                                            break;
                                    case 3: 
                                            break;
				case 4:
                                            break;
			}
		} else {
			if (line.equals("[MOREINFO]")) {		ReadMode = 1;
			}  else if (line.equals("[QUESTS]")) {
                            ReadMode = 2;
			} else if (line.equals("[FRIENDS]")) {
                            ReadMode = 3;
			} else if (line.equals("[IGNORES]")) {
                            ReadMode = 4;
			} else if (line.equals("[EOF]")) {		try { characterfile.close(); } catch(IOException ioexception) { }; // return 1;
			}
		}
		try {
			line = characterfile.readLine();
		} catch(IOException ioexception1) { EndOfFile = true; }
	}
	try { characterfile.close(); } catch(IOException ioexception) { }
            return 0;
}
</code></pre>
<p>[/code]</p>
<p>whats the problem here? o_O please tell my i cant login anymore and i want that second part (loadmisc) to be in for quest voids.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/login-script-screwed-up-please-help-me/258200/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/login-script-screwed-up-please-help-me/258200/1</link>
        <pubDate>Sat, 24 Jan 2009 10:16:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-258200-1</guid>
        <source url="https://forum.moparisthebest.com/t/login-script-screwed-up-please-help-me/258200.rss">Login script screwed up, please help me =&#39;(</source>
      </item>
  </channel>
</rss>
