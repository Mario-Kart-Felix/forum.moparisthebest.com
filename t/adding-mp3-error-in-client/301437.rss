<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Adding mp3 error in client</title>
    <link>https://forum.moparisthebest.com/t/adding-mp3-error-in-client/301437</link>
    <description>[IMG]http://i25.tinypic.com/2rmmjwp.jpg[/img]

Annoying as fuck error...
When I do what the compiler says (or just delete the letter) it gets down to 1 error saying &quot;not a statement&quot;.
I don&#39;t even know why it tells me that, since I&#39;m just trying to add an mp3 player &gt;.&lt;&quot;
All coding for my mp3:
(I assume this is all properly added, but appearently not..
Don&#39;t say it&#39;s my brackets, because I checked, and there&#39;s no way it can be.)

[code]			JMenu fileMenu = new JMenu(&quot;File&quot;);
			JMenu musicmenu = new JMenu(&quot;Music Set&quot;);
			JMenu toolsMenu = new JMenu(&quot;Tools&quot;);[/code]
[code]
			String[] mainButtons = new String[]
				{
					&quot;Change Server&quot;, &quot;Recent..&quot;, &quot;-&quot;, &quot;Quit&quot;
				};
			String[] musicButtons = new String[]
				{
					&quot;Play&quot;, &quot;Stop&quot;, &quot;Next&quot;, &quot;Previous&quot;
				};
			String[] toolsButtons = new String[]
				{
					&quot;Zoom&quot;, &quot;FPS&quot;, &quot;About&quot;
				};[/code]
[code]			for (String name : mainButtons) 
			{
				JMenuItem menuItem = new JMenuItem(name);
				if (name.equalsIgnoreCase(&quot;-&quot;))
					fileMenu.addSeparator();
				else 
				{
					menuItem.addActionListener(this);
					fileMenu.add(menuItem);
				}
			}
			for (String name : musicButtons)
						{
							JMenuItem menuItem = new JMenuItem(name);
							if (name.equalsIgnoreCase(&quot;-&quot;))
								musicmenu.addSeparator();
							else
							{
								menuItem.addActionListener(this);
								musicmenu.add(menuItem);
							}
			}
			for (String name : toolsButtons) 
			{
				JMenuItem menuItem = new JMenuItem(name);
				if (name.equalsIgnoreCase(&quot;-&quot;))
					toolsMenu.addSeparator();
				else 
				{
					toolsMenu.add(menuItem);
					menuItem.addActionListener(this);
				}
			}[/code]
[code]
			menuBar.add(fileMenu);
			menuBar.add(musicmenu);
			menuBar.add(toolsMenu);[/code]
[code]      private void midiPlayer;String command;
	    {
	        String dir = &quot;./music/&quot;;
chkDir(dir);
if(player != null &amp;&amp; player.isRunning())
	        {
	            player.close();
	        }
	        if(sequencer != null &amp;&amp; sequencer.isRunning())
	        {
	            sequencer.stop();
	            sequencer.close();
	        }
	        if(command.equals(&quot;Next&quot;))
	        {
	            midiCount++;
	        } else
	        if(command.equals(&quot;Previous&quot;))
	        {
	            midiCount--;
	        }
	        if(!command.equals(&quot;Stop&quot;))
	        {
	            File index = new File(dir);
	            String fileList[] = index.list();
	            if(fileList.length &gt; 0)
	            {
	                if(midiCount &gt; fileList.length - 1)
	                {
	                    midiCount = 0;
	                }
	                if(midiCount &lt; 0)
	                {
	                    midiCount = fileList.length - 1;
	                }
	                if(fileList[midiCount].endsWith(&quot;.mp3&quot;))
	                {
	                    log((new StringBuilder()).append(&quot;Playing &quot;).append(fileList[midiCount]).toString());
	                    player = new MP3Player((new StringBuilder()).append(dir).append(fileList[midiCount]).toString(), true);
	                } else
	                if(fileList[midiCount].endsWith(&quot;.mid&quot;))
	                {
	                    log((new StringBuilder()).append(&quot;Playing &quot;).append(fileList[midiCount]).toString());
	                    try
	                    {
	                        File midiFile = new File((new StringBuilder()).append(dir).append(fileList[midiCount]).toString());
	                        sequencer = MidiSystem.getSequencer();
	                        sequencer.setSequence(MidiSystem.getSequence(midiFile));
	                        sequencer.setLoopCount(-1);
	                        sequencer.open();
	                        sequencer.start();
	                    }
	                    catch(MidiUnavailableException mue)
	                    {
	                        log(&quot;Midi device unavailable!&quot;);
	                    }
	                    catch(InvalidMidiDataException imde)
	                    {
	                        log(&quot;Invalid Midi data!&quot;);
	                    }
	                    catch(IOException ioe)
	                    {
	                        log(&quot;I/O Error!&quot;);
	                    }
	                }
	            } else
	            {
	                log(&quot;no midi or mp3 files in folder&quot;);
	            }
	        }
    }
}[/code]
[b]Above Code = Error part. Compiler told me to replace [code](String command) with ;String command;[/code]
So I did. Now it&#39;s down to 2 errors... It WAS 28 AFTER brackets were correct. O-o[/b]

That&#39;s all the coding dealing with the mp3 player, so, any help? &gt;.&lt;&quot;
I added codes around it so you know it&#39;s in the right places.
Last code is the first set of those types of codes, though, so it&#39;s alone.</description>
    
    <lastBuildDate>Thu, 10 Sep 2009 21:56:56 +0000</lastBuildDate>
    <category>Game Development</category>
    <atom:link href="https://forum.moparisthebest.com/t/adding-mp3-error-in-client/301437.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Adding mp3 error in client</title>
        <dc:creator><![CDATA[@Epic_Ancient Epic Ancient]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/epic_ancient">@Epic_Ancient</a> wrote:</p>
          <blockquote>
              <p><img src="http://i25.tinypic.com/2rmmjwp.jpg" alt width="664" height="333"></p>
<p>Annoying as fuck error…<br>
When I do what the compiler says (or just delete the letter) it gets down to 1 error saying “not a statement”.<br>
I don’t even know why it tells me that, since I’m just trying to add an mp3 player &gt;.&lt;"<br>
All coding for my mp3:<br>
(I assume this is all properly added, but appearently not…<br>
Don’t say it’s my brackets, because I checked, and there’s no way it can be.)</p>
<p><code>			JMenu fileMenu = new JMenu("File");
			JMenu musicmenu = new JMenu("Music Set");
			JMenu toolsMenu = new JMenu("Tools");</code></p>
<p><code>
			String[] mainButtons = new String[]
				{
					"Change Server", "Recent..", "-", "Quit"
				};
			String[] musicButtons = new String[]
				{
					"Play", "Stop", "Next", "Previous"
				};
			String[] toolsButtons = new String[]
				{
					"Zoom", "FPS", "About"
				};</code></p>
<p><code>			for (String name : mainButtons) 
			{
				JMenuItem menuItem = new JMenuItem(name);
				if (name.equalsIgnoreCase("-"))
					fileMenu.addSeparator();
				else 
				{
					menuItem.addActionListener(this);
					fileMenu.add(menuItem);
				}
			}
			for (String name : musicButtons)
						{
							JMenuItem menuItem = new JMenuItem(name);
							if (name.equalsIgnoreCase("-"))
								musicmenu.addSeparator();
							else
							{
								menuItem.addActionListener(this);
								musicmenu.add(menuItem);
							}
			}
			for (String name : toolsButtons) 
			{
				JMenuItem menuItem = new JMenuItem(name);
				if (name.equalsIgnoreCase("-"))
					toolsMenu.addSeparator();
				else 
				{
					toolsMenu.add(menuItem);
					menuItem.addActionListener(this);
				}
			}</code></p>
<p><code>
			menuBar.add(fileMenu);
			menuBar.add(musicmenu);
			menuBar.add(toolsMenu);</code></p>
<p><code>      private void midiPlayer;String command;
	    {
	        String dir = "./music/";
chkDir(dir);
if(player != null &amp;&amp; player.isRunning())
	        {
	            player.close();
	        }
	        if(sequencer != null &amp;&amp; sequencer.isRunning())
	        {
	            sequencer.stop();
	            sequencer.close();
	        }
	        if(command.equals("Next"))
	        {
	            midiCount++;
	        } else
	        if(command.equals("Previous"))
	        {
	            midiCount--;
	        }
	        if(!command.equals("Stop"))
	        {
	            File index = new File(dir);
	            String fileList[] = index.list();
	            if(fileList.length &gt; 0)
	            {
	                if(midiCount &gt; fileList.length - 1)
	                {
	                    midiCount = 0;
	                }
	                if(midiCount &lt; 0)
	                {
	                    midiCount = fileList.length - 1;
	                }
	                if(fileList[midiCount].endsWith(".mp3"))
	                {
	                    log((new StringBuilder()).append("Playing ").append(fileList[midiCount]).toString());
	                    player = new MP3Player((new StringBuilder()).append(dir).append(fileList[midiCount]).toString(), true);
	                } else
	                if(fileList[midiCount].endsWith(".mid"))
	                {
	                    log((new StringBuilder()).append("Playing ").append(fileList[midiCount]).toString());
	                    try
	                    {
	                        File midiFile = new File((new StringBuilder()).append(dir).append(fileList[midiCount]).toString());
	                        sequencer = MidiSystem.getSequencer();
	                        sequencer.setSequence(MidiSystem.getSequence(midiFile));
	                        sequencer.setLoopCount(-1);
	                        sequencer.open();
	                        sequencer.start();
	                    }
	                    catch(MidiUnavailableException mue)
	                    {
	                        log("Midi device unavailable!");
	                    }
	                    catch(InvalidMidiDataException imde)
	                    {
	                        log("Invalid Midi data!");
	                    }
	                    catch(IOException ioe)
	                    {
	                        log("I/O Error!");
	                    }
	                }
	            } else
	            {
	                log("no midi or mp3 files in folder");
	            }
	        }
    }
}</code><br>
<span class="bbcode-b">Above Code = Error part. Compiler told me to replace <code>(String command) with ;String command;</code><br>
So I did. Now it’s down to 2 errors… It WAS 28 AFTER brackets were correct. O-o</span></p>
<p>That’s all the coding dealing with the mp3 player, so, any help? &gt;.&lt;"<br>
I added codes around it so you know it’s in the right places.<br>
Last code is the first set of those types of codes, though, so it’s alone.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/adding-mp3-error-in-client/301437/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/adding-mp3-error-in-client/301437/1</link>
        <pubDate>Thu, 10 Sep 2009 21:56:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-301437-1</guid>
        <source url="https://forum.moparisthebest.com/t/adding-mp3-error-in-client/301437.rss">Adding mp3 error in client</source>
      </item>
  </channel>
</rss>
