<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>MySQL Help</title>
    <link>https://forum.moparisthebest.com/t/mysql-help/318710</link>
    <description>I&#39;m writing my server and i&#39;m going to store all data via a MySQL Database.
The problem is it&#39;s just not working, it&#39;s acting as if the code was not even there. And don&#39;t tell me to compile it, because it&#39;s definitely compiled fine, no errors. So far all i&#39;m saving is a few variables and the rest i&#39;m leaving in a binary file. I just want to load username, password, rights, height (position z), position x, position y. 

Here is the code, just below the login protocol where the loading of the account should be: 
[code]
			int returnCode = 2;
			int slot = handler.getFreeSlot();
			Client c = null;
			if(slot == -1) {
				returnCode = 7;
			}
			else if(handler.isPlayerOn(playerName)) {
				returnCode = 5;
			}
			else {
				loadAccount(playerName, playerPass);
				if(loadAccount(playerName, playerPass) != 1) {
					if(!playerPass.equals(password)) {
						returnCode = 3;
					}
					else {
						c = new Client(socket, slot);
						c.heightLevel = Integer.parseInt(absZ);
						if (Integer.parseInt(absX) &gt; 0 &amp;&amp; Integer.parseInt(absY) &gt; 0) {
							c.teleportToX = Integer.parseInt(absX);
							c.teleportToY = Integer.parseInt(absY);
							c.heightLevel = 0;
						}
						c.playerRights = Integer.parseInt(rights);
					}
				}
				else {
					c = new Client(socket, slot);
				}
				PlayerSave loadgame = loadGame(playerName, playerPass);
				if(loadgame != null) {
					c.playerItems = loadgame.playerItem;
					c.playerItemsN = loadgame.playerItemN;
					c.playerEquipment = loadgame.playerEquipment;
					c.playerEquipmentN = loadgame.playerEquipmentN;
					c.bankItems = loadgame.bankItems;
					c.bankItemsN = loadgame.bankItemsN;
					c.playerLevel = loadgame.playerLevel;
					c.playerXP = loadgame.playerXP;
				}
				else {
					c = new Client(socket, slot);
				}
			}
			if(c != null) {
				c.playerName = playerName;
				c.playerPass = playerPass;
				c.clientSessionKey = clientSessionKey;
				c.serverSessionKey = serverSessionKey;
				c.inStreamDecryption = inStreamDecryption;
				c.outStreamDecryption = outStreamDecryption;
				c.inStream = inStream;
				c.outStream = outStream;
				c.in = in;
				c.out = out;
				c.packetSize = 0;
				c.packetType = -1;
				c.readPtr = 0;
				c.writePtr = 0;
				c.handler = handler;
				c.isActive = true;
			}
			out.write(returnCode);
			if(returnCode == 2) {
				handler.addClient(slot, c);
				out.write(c.playerRights);
				out.write(0);
			} else {
				throw new Exception(&quot;Login error.&quot;);
			}
			directFlushOutStream();
			return true;
		}
	}
	return false;
}
public int loadAccount(String playerName, String playerPass) {
	Statement statement = null;
	ResultSet result = null;
	int rowCount = -1;
	try {
		statement = connection.createStatement();
		result = statement.executeQuery(&quot;SELECT COUNT(*) FROM `accounts` WHERE `username` = &#39;&quot; + playerName + &quot;&#39; AND `password` = &#39;&quot; + playerPass + &quot;&#39;&quot;);
		result.next();
		rowCount = result.getInt(1);
		result.close();
		statement.close();
	}
	catch (Exception sqlEx2) {
		// erroramg
	}
	
	if (rowCount &gt; 0) {
		try {
			ResultSet group = statement.executeQuery(&quot;SELECT * FROM `accounts` WHERE `username` = &#39;&quot; + playerName + &quot;&#39; AND `password` = &#39;&quot; + playerPass + &quot;&#39;&quot;);
			
			while(group.next()) {
				username = group.getString(&quot;username&quot;);
				password = group.getString(&quot;password&quot;);
				rights = group.getString(&quot;rights&quot;);
				absX = group.getString(&quot;absx&quot;);
				absY = group.getString(&quot;absy&quot;);
				absZ = group.getString(&quot;absz&quot;);
			}
		}
		catch (Exception sqlEx)
		{
			Misc.println(sqlEx.toString());
			Misc.println(&quot;Failed loading &quot; + playerName);
			return 1;
		}
		Misc.println(&quot;Loaded &quot; + playerName + &quot; assuming OK&quot;);
		return 0;
	}
	else {
		return 1;
	}
}
[/code]

All help is appreciated!</description>
    
    <lastBuildDate>Thu, 10 Dec 2009 10:38:07 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/mysql-help/318710.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>MySQL Help</title>
        <dc:creator><![CDATA[@Rawrmoan Rawrmoan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rawrmoan">@Rawrmoan</a> wrote:</p>
          <blockquote>
              <p>I’m writing my server and i’m going to store all data via a MySQL Database.<br>
The problem is it’s just not working, it’s acting as if the code was not even there. And don’t tell me to compile it, because it’s definitely compiled fine, no errors. So far all i’m saving is a few variables and the rest i’m leaving in a binary file. I just want to load username, password, rights, height (position z), position x, position y.</p>
<p>Here is the code, just below the login protocol where the loading of the account should be:</p>
<pre><code class="lang-auto">			int returnCode = 2;
			int slot = handler.getFreeSlot();
			Client c = null;
			if(slot == -1) {
				returnCode = 7;
			}
			else if(handler.isPlayerOn(playerName)) {
				returnCode = 5;
			}
			else {
				loadAccount(playerName, playerPass);
				if(loadAccount(playerName, playerPass) != 1) {
					if(!playerPass.equals(password)) {
						returnCode = 3;
					}
					else {
						c = new Client(socket, slot);
						c.heightLevel = Integer.parseInt(absZ);
						if (Integer.parseInt(absX) &gt; 0 &amp;&amp; Integer.parseInt(absY) &gt; 0) {
							c.teleportToX = Integer.parseInt(absX);
							c.teleportToY = Integer.parseInt(absY);
							c.heightLevel = 0;
						}
						c.playerRights = Integer.parseInt(rights);
					}
				}
				else {
					c = new Client(socket, slot);
				}
				PlayerSave loadgame = loadGame(playerName, playerPass);
				if(loadgame != null) {
					c.playerItems = loadgame.playerItem;
					c.playerItemsN = loadgame.playerItemN;
					c.playerEquipment = loadgame.playerEquipment;
					c.playerEquipmentN = loadgame.playerEquipmentN;
					c.bankItems = loadgame.bankItems;
					c.bankItemsN = loadgame.bankItemsN;
					c.playerLevel = loadgame.playerLevel;
					c.playerXP = loadgame.playerXP;
				}
				else {
					c = new Client(socket, slot);
				}
			}
			if(c != null) {
				c.playerName = playerName;
				c.playerPass = playerPass;
				c.clientSessionKey = clientSessionKey;
				c.serverSessionKey = serverSessionKey;
				c.inStreamDecryption = inStreamDecryption;
				c.outStreamDecryption = outStreamDecryption;
				c.inStream = inStream;
				c.outStream = outStream;
				c.in = in;
				c.out = out;
				c.packetSize = 0;
				c.packetType = -1;
				c.readPtr = 0;
				c.writePtr = 0;
				c.handler = handler;
				c.isActive = true;
			}
			out.write(returnCode);
			if(returnCode == 2) {
				handler.addClient(slot, c);
				out.write(c.playerRights);
				out.write(0);
			} else {
				throw new Exception("Login error.");
			}
			directFlushOutStream();
			return true;
		}
	}
	return false;
}
public int loadAccount(String playerName, String playerPass) {
	Statement statement = null;
	ResultSet result = null;
	int rowCount = -1;
	try {
		statement = connection.createStatement();
		result = statement.executeQuery("SELECT COUNT(*) FROM `accounts` WHERE `username` = '" + playerName + "' AND `password` = '" + playerPass + "'");
		result.next();
		rowCount = result.getInt(1);
		result.close();
		statement.close();
	}
	catch (Exception sqlEx2) {
		// erroramg
	}
	
	if (rowCount &gt; 0) {
		try {
			ResultSet group = statement.executeQuery("SELECT * FROM `accounts` WHERE `username` = '" + playerName + "' AND `password` = '" + playerPass + "'");
			
			while(group.next()) {
				username = group.getString("username");
				password = group.getString("password");
				rights = group.getString("rights");
				absX = group.getString("absx");
				absY = group.getString("absy");
				absZ = group.getString("absz");
			}
		}
		catch (Exception sqlEx)
		{
			Misc.println(sqlEx.toString());
			Misc.println("Failed loading " + playerName);
			return 1;
		}
		Misc.println("Loaded " + playerName + " assuming OK");
		return 0;
	}
	else {
		return 1;
	}
}</code></pre>
<p>All help is appreciated!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/mysql-help/318710/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/mysql-help/318710/1</link>
        <pubDate>Thu, 10 Dec 2009 10:38:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-318710-1</guid>
        <source url="https://forum.moparisthebest.com/t/mysql-help/318710.rss">MySQL Help</source>
      </item>
  </channel>
</rss>
