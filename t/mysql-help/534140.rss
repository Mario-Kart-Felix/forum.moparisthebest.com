<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>MySQL help</title>
    <link>https://forum.moparisthebest.com/t/mysql-help/534140</link>
    <description>What I&#39;m trying to do is store information into my MySQL database. The code does not throw any errors but my tables won&#39;t update. Using that SQL.java from deathschaos9 highscore tutorial worked fine but when I use my code it won&#39;t work. 

It may be a problem with the way I&#39;m using prepared statement but it seemed a more nicer way of updating tables. I am currently using java.sql but would want to use the the library from dev.mysql.

[u]Code[/u]

[code=java]
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Logger;

//import com.mysql.jdbc.Connection;
//import com.mysql.jdbc.PreparedStatement;


/**
 * &lt;p&gt;
 * &lt;code&gt;PlayerSave&lt;/code&gt; handles saving player to MySQL database.
 * &lt;/p&gt;
 * 
 * @author Victoria Connelly &lt;haiix@littlevicky.net&gt;
 * 
 */
public class PlayerSave {
	private Connection connection;
	private PreparedStatement statement;
	
	/**
	 * Constructor used to create a connection to the MySQL database
	 */
	public PlayerSave() {
		createConnection(&quot;http&quot;, &quot;database&quot;, &quot;user&quot;, &quot;password&quot;);
	}
	
	/**
	 * Executes the statement to save player
	 */
	public void savePlayer() {
		String username = &quot;victoria&quot;;
		String password = &quot;connelly&quot;;
		int rights = 2;
		
		boolean successful = false;
		
		String query = &quot;INSERT INTO &#39;players&#39; (&#39;username&#39;, &#39;password&#39;, &#39;rights&#39;) VALUES(?, ?, ?)&quot;;
		try {
			statement = connection.prepareStatement(query);
			//statement.executeQuery(query); //null pointer
			statement.setString(1, username);
			statement.setString(2, password);
			statement.setInt(3, rights);
                        statement.executeUpdate();
			successful = true;
		} catch (SQLException e) {
			e.printStackTrace();
			successful = false;
		}
		if (successful)
			logger.info(&quot;Sucessfully saved user: &quot; + username + &quot; password: &quot; + password + &quot; to MySQL database.\n&quot;);
	}
	
	/**
	 * Creates a connection to a MySQL server using jdbc
	 * 
	 * @param host
	 * 	The MySQL server host address
	 * 
	 * @param database
	 * 	The database to connect to
	 * 
	 * @param username
	 * 	The username the server can connect with
	 * 
	 * @param password
	 *  The password for the database
	 */
	private void createConnection(String host, String database, String username, String password) {
		try {
			Class.forName(&quot;com.mysql.jdbc.Driver&quot;).newInstance();
			connection = DriverManager.getConnection(&quot;jdbc:mysql://&quot; + host + &quot;/&quot; + database, username, password);
			//statement = (PreparedStatement) connection.createStatement(); //not needed?
		} catch (Exception e) {
			e.printStackTrace();
			logger.warning(&quot;Could not create MySQL connection.&quot;);
		}
		logger.info(&quot;PlayerSave: MySQL connection created &quot;
				+ &quot;\nHOST: &quot; + host
				+ &quot;\nDATABASE: &quot; + database
				+ &quot;\nUSERNAME: &quot; + username 
				+ &quot;\nPASSWORD: &quot; + password 
				+&quot;\n&quot;);
	}
}
[/code]

Edit: I am calling the method like so:

[code=java]PlayerSave save = new PlayerSave();
save.savePlayer();[/code]</description>
    
    <lastBuildDate>Tue, 15 Oct 2013 17:58:37 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/mysql-help/534140.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>MySQL help</title>
        <dc:creator><![CDATA[@sspoke sspoke]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sspoke">@sspoke</a> wrote:</p>
          <blockquote>
              <p>to save a player you don’t use INSERT that you can use to add a NEW Player to database…</p>
<p>To update a table that ALREADY EXISTS.</p>
<p>you need to use UPDATE</p>
<p>[code=mysql]String query = “UPDATE players SET xPos = ?, yPos = ? WHERE username = ? AND password = ?”;</p>
<p>stmt = con.prepareStatement(query);<br>
stmt.setInt(1, xPosNumber); //this will update xPos<br>
stmt.setInt(2, yPosNumber); //this will update yPos<br>
stmt.setString(3, userName); //this will find username<br>
stmt.setString(4, passWord); //this will find password with username.<br>
stmt.executeUpdate(); //you need to do Update here and you can’t retrieve anything!<br>
[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/mysql-help/534140/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/mysql-help/534140/5</link>
        <pubDate>Tue, 15 Oct 2013 17:58:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534140-5</guid>
        <source url="https://forum.moparisthebest.com/t/mysql-help/534140.rss">MySQL help</source>
      </item>
      <item>
        <title>MySQL help</title>
        <dc:creator><![CDATA[@Ashi Ashi]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ashi">@Ashi</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="3" data-topic="534140">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/ambokile/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Ambokile:</div>
<blockquote>
<p>Are there any errors in your SQL logs?</p>
</blockquote>
</aside>
<p>There wasn’t any! <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<aside class="quote" data-post="2" data-topic="534140">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/hadesflames/40/9987_1.png" class="avatar"> hadesflames:</div>
<blockquote>
<p>Try this:</p>
</blockquote>
</aside>
<p>Thank you worked perfectly. I love you &lt;3<br>
I understand where I went wrong! <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/mysql-help/534140/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/mysql-help/534140/4</link>
        <pubDate>Tue, 15 Oct 2013 15:04:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534140-4</guid>
        <source url="https://forum.moparisthebest.com/t/mysql-help/534140.rss">MySQL help</source>
      </item>
      <item>
        <title>MySQL help</title>
        <dc:creator><![CDATA[@Ambokile Ambokile]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ambokile">@Ambokile</a> wrote:</p>
          <blockquote>
              <p>Are there any errors in your SQL logs?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/mysql-help/534140/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/mysql-help/534140/3</link>
        <pubDate>Tue, 15 Oct 2013 11:27:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534140-3</guid>
        <source url="https://forum.moparisthebest.com/t/mysql-help/534140.rss">MySQL help</source>
      </item>
      <item>
        <title>MySQL help</title>
        <dc:creator><![CDATA[@hadesflames hadesflames]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hadesflames">@hadesflames</a> wrote:</p>
          <blockquote>
              <p>Try this:</p>
<p>[code=java]import java.sql.Connection;<br>
import java.sql.DriverManager;<br>
import java.sql.PreparedStatement;<br>
import java.sql.SQLException;<br>
import java.util.logging.Logger;</p>
<p>//import com.mysql.jdbc.Connection;<br>
//import com.mysql.jdbc.PreparedStatement;</p>
<p>/**</p>
<ul>
<li>
<p>
</p>
</li>
<li>
<code>PlayerSave</code> handles saving player to MySQL database.</li>
<li>

</li>
<li>
</li>
<li>
<span class="mention">@author</span> Victoria Connelly <a href="mailto:haiix@littlevicky.net">haiix@littlevicky.net</a>
</li>
<li>
</li>
</ul>
<p>*/<br>
public class PlayerSave {<br>
private Connection connection;<br>
private PreparedStatement statement;</p>
<pre><code>static{
	try{
		Class.forName("com.mysql.jdbc.Driver");
	}catch(Exception e){
		e.printStackTrace();
	}
}

    /**
     * Constructor used to create a connection to the MySQL database
     */
    public PlayerSave() {
            createConnection("http", "database", "user", "password");
    }
    
    /**
     * Executes the statement to save player
     */
    public void savePlayer() {
            String username = "victoria";
            String password = "connelly";
            int rights = 2;
            
            boolean successful = false;
            
            String query = "INSERT INTO `players` (`username`, `password`, `rights`) VALUES(?, ?, ?)";
            try {
                    statement = connection.prepareStatement(query);
                    //statement.executeQuery(query); //null pointer
                    statement.setString(1, username);
                    statement.setString(2, password);
                    statement.setInt(3, rights);
                    statement.executeUpdate();
                    successful = true;
            } catch (SQLException e) {
                    e.printStackTrace();
                    successful = false;
            }
            if (successful)
                    logger.info("Sucessfully saved user: " + username + " password: " + password + " to MySQL database.\n");
    }
    
    /**
     * Creates a connection to a MySQL server using jdbc
     * 
     * @param host
     *      The MySQL server host address
     * 
     * @param database
     *      The database to connect to
     * 
     * @param username
     *      The username the server can connect with
     * 
     * @param password
     *  The password for the database
     */
    private void createConnection(String host, String database, String username, String password) {
            try {
                    connection = DriverManager.getConnection("jdbc:mysql://" + host + ":3306/" + database, username, password);
                    //statement = (PreparedStatement) connection.createStatement(); //not needed?
            } catch (Exception e) {
                    e.printStackTrace();
                    logger.warning("Could not create MySQL connection.");
            }
            logger.info("PlayerSave: MySQL connection created "
                            + "\nHOST: " + host
                            + "\nDATABASE: " + database
                            + "\nUSERNAME: " + username 
                            + "\nPASSWORD: " + password 
                            +"\n");
    }
</code></pre>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/mysql-help/534140/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/mysql-help/534140/2</link>
        <pubDate>Tue, 15 Oct 2013 11:14:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534140-2</guid>
        <source url="https://forum.moparisthebest.com/t/mysql-help/534140.rss">MySQL help</source>
      </item>
      <item>
        <title>MySQL help</title>
        <dc:creator><![CDATA[@Ashi Ashi]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ashi">@Ashi</a> wrote:</p>
          <blockquote>
              <p>What I’m trying to do is store information into my MySQL database. The code does not throw any errors but my tables won’t update. Using that SQL.java from deathschaos9 highscore tutorial worked fine but when I use my code it won’t work.</p>
<p>It may be a problem with the way I’m using prepared statement but it seemed a more nicer way of updating tables. I am currently using java.sql but would want to use the the library from dev.mysql.</p>
<p><span class="bbcode-u">Code</span></p>
<pre><code class="lang-auto">import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Logger;

//import com.mysql.jdbc.Connection;
//import com.mysql.jdbc.PreparedStatement;


/**
 * &lt;p&gt;
 * &lt;code&gt;PlayerSave&lt;/code&gt; handles saving player to MySQL database.
 * &lt;/p&gt;
 * 
 * @author Victoria Connelly &lt;haiix@littlevicky.net&gt;
 * 
 */
public class PlayerSave {
	private Connection connection;
	private PreparedStatement statement;
	
	/**
	 * Constructor used to create a connection to the MySQL database
	 */
	public PlayerSave() {
		createConnection("http", "database", "user", "password");
	}
	
	/**
	 * Executes the statement to save player
	 */
	public void savePlayer() {
		String username = "victoria";
		String password = "connelly";
		int rights = 2;
		
		boolean successful = false;
		
		String query = "INSERT INTO 'players' ('username', 'password', 'rights') VALUES(?, ?, ?)";
		try {
			statement = connection.prepareStatement(query);
			//statement.executeQuery(query); //null pointer
			statement.setString(1, username);
			statement.setString(2, password);
			statement.setInt(3, rights);
                        statement.executeUpdate();
			successful = true;
		} catch (SQLException e) {
			e.printStackTrace();
			successful = false;
		}
		if (successful)
			logger.info("Sucessfully saved user: " + username + " password: " + password + " to MySQL database.\n");
	}
	
	/**
	 * Creates a connection to a MySQL server using jdbc
	 * 
	 * @param host
	 * 	The MySQL server host address
	 * 
	 * @param database
	 * 	The database to connect to
	 * 
	 * @param username
	 * 	The username the server can connect with
	 * 
	 * @param password
	 *  The password for the database
	 */
	private void createConnection(String host, String database, String username, String password) {
		try {
			Class.forName("com.mysql.jdbc.Driver").newInstance();
			connection = DriverManager.getConnection("jdbc:mysql://" + host + "/" + database, username, password);
			//statement = (PreparedStatement) connection.createStatement(); //not needed?
		} catch (Exception e) {
			e.printStackTrace();
			logger.warning("Could not create MySQL connection.");
		}
		logger.info("PlayerSave: MySQL connection created "
				+ "\nHOST: " + host
				+ "\nDATABASE: " + database
				+ "\nUSERNAME: " + username 
				+ "\nPASSWORD: " + password 
				+"\n");
	}
}</code></pre>
<p>Edit: I am calling the method like so:</p>
<p><code>PlayerSave save = new PlayerSave();
save.savePlayer();</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/mysql-help/534140/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/mysql-help/534140/1</link>
        <pubDate>Tue, 15 Oct 2013 09:37:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534140-1</guid>
        <source url="https://forum.moparisthebest.com/t/mysql-help/534140.rss">MySQL help</source>
      </item>
  </channel>
</rss>
