<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>C++ shows undoubtable superiority in compute-intensive benchmarks</title>
    <link>https://forum.moparisthebest.com/t/c-shows-undoubtable-superiority-in-compute-intensive-benchmarks/518375</link>
    <description>Proof.

[img]http://i.imgur.com/HbIEmE4.png[/img]</description>
    
    <lastBuildDate>Thu, 02 May 2013 15:13:13 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/c-shows-undoubtable-superiority-in-compute-intensive-benchmarks/518375.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>C++ shows undoubtable superiority in compute-intensive benchmarks</title>
        <dc:creator><![CDATA[@imthenull imthenull]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imthenull">@imthenull</a> wrote:</p>
          <blockquote>
              <blockquote>// ok check it out i addeid a boolea hdnadler to chec kif we do NOT want to print new line with the "word" para-argument</blockquote>almost died laughing, rofl.
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-shows-undoubtable-superiority-in-compute-intensive-benchmarks/518375/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-shows-undoubtable-superiority-in-compute-intensive-benchmarks/518375/6</link>
        <pubDate>Thu, 02 May 2013 15:13:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-518375-6</guid>
        <source url="https://forum.moparisthebest.com/t/c-shows-undoubtable-superiority-in-compute-intensive-benchmarks/518375.rss">C++ shows undoubtable superiority in compute-intensive benchmarks</source>
      </item>
      <item>
        <title>C++ shows undoubtable superiority in compute-intensive benchmarks</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <p>oh, this again</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-shows-undoubtable-superiority-in-compute-intensive-benchmarks/518375/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-shows-undoubtable-superiority-in-compute-intensive-benchmarks/518375/5</link>
        <pubDate>Thu, 02 May 2013 15:07:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-518375-5</guid>
        <source url="https://forum.moparisthebest.com/t/c-shows-undoubtable-superiority-in-compute-intensive-benchmarks/518375.rss">C++ shows undoubtable superiority in compute-intensive benchmarks</source>
      </item>
      <item>
        <title>C++ shows undoubtable superiority in compute-intensive benchmarks</title>
        <dc:creator><![CDATA[@vortex vortex]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/vortex">@vortex</a> wrote:</p>
          <blockquote>
              <p>you can’t win dude java is faster -__- sigh</p>
<pre><code class="lang-auto">Starting the superior version of number guess gaem benmark
Initializing superior java integer values and types with the CPU
Please guiess number from 0 to 1000

Enter number :243
243
Wron number guess! aagain
Enter number :4554
4554
Wron number guess! aagain
Enter number :46
46
Wron number guess! aagain
Enter number :78
78
Korrect numer! 78
Benchmak time = 2800ms</code></pre>
<pre><code class="lang-auto">import java.*;
import java.applet.*;
import java.awt.*;
import java.io.*;
import java.lang.*;
import java.math.*;
import java.net.*;
import java.nio.*;
import java.security.*;
import java.text.*;
import java.util.*;
// always remember to import java!! (this is java language basics 1010) (moparisthebest taught me hes a great guy)
public class benmark {

    public static void main(final String[] args) throws IOException {
        Random DeclaredAndInitializedRandomClassBigGrin = new Random();// Rnaodm Number Generator :)) juist like in wow shoutout to Xx_Slut_Xx and IpkI
        PrintToSystemOutPirntlnImTalkingAboutText(false, "Starting the superior version of number guess gaem benmark");
        PrintToSystemOutPirntlnImTalkingAboutText(false, "Initializing superior java integer values and types with the CPU");
        Scanner faggot = new Scanner(System.in);// actual initialization happening here!!
        for(int i = Integer.MIN_VALUE; i &lt; Integer.MAX_VALUE; i += 1);
        short StartTime = (short)System.     nanoTime()  ;
        PrintToSystemOutPirntlnImTalkingAboutText(false, "Please guiess number from 0 to 1000\n");
        // need extra empty line here to make it look like Cock Hunters benmark ;)
        int dlecratedIntegerRandom = DeclaredAndInitializedRandomClassBigGrin.nextInt(100);
        Integer UsedGuessNumbererd = new Integer(-1);
        while(UsedGuessNumbererd.intValue() != dlecratedIntegerRandom) {
            PrintToSystemOutPirntlnImTalkingAboutText(true, "Enter number :");
            UsedGuessNumbererd= faggot.nextInt();
            PrintToSystemOutPirntlnImTalkingAboutText(false, String.valueOf((Object) Long.parseLong(String.valueOf(UsedGuessNumbererd))));

            if(UsedGuessNumbererd.intValue() != dlecratedIntegerRandom)
                PrintLine(false, "Wron number guess! aagain");
        }
        PrintToSystemOutPirntlnImTalkingAboutText(false, "Korrect numer! " + dlecratedIntegerRandom);
        PrintToSystemOutPirntlnImTalkingAboutText(false, "Benchmak time = " + (3800 - 1000) + "ms");// remove 1000 from 3800 ms for slow CPU's
    }

    public static byte PrintToSystemOutPirntlnImTalkingAboutText(boolean DoNotPrintToNewLine, String string) throws IOException {
        PrintLine(DoNotPrintToNewLine, string);
        return // return meansa we retrurn the string :)
        new Integer(1).byteValue();
    }

    final static private void PrintLine(boolean DoNotPrintToNewLine, String word) {
        if(!DoNotPrintToNewLine)
            System.out.println(word);// ok check it out i addeid a boolea hdnadler to chec kif we do NOT want to print new line with the "word" para-argument
        else
            System.out.print(word);
    }
}
</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-shows-undoubtable-superiority-in-compute-intensive-benchmarks/518375/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-shows-undoubtable-superiority-in-compute-intensive-benchmarks/518375/4</link>
        <pubDate>Thu, 02 May 2013 15:04:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-518375-4</guid>
        <source url="https://forum.moparisthebest.com/t/c-shows-undoubtable-superiority-in-compute-intensive-benchmarks/518375.rss">C++ shows undoubtable superiority in compute-intensive benchmarks</source>
      </item>
      <item>
        <title>C++ shows undoubtable superiority in compute-intensive benchmarks</title>
        <dc:creator><![CDATA[@whackatre Whackatre]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/whackatre">@whackatre</a> wrote:</p>
          <blockquote>
              <p>[code=lisp]<span class="hashtag">#lang</span> racket<br>
; What do <em>you</em> think of the superior The Enforcer?<br>
; Will this inferior Racket implementation outperform his<br>
; blatantly superior version in C++? Maybe not, but let’s try!</p>
<p>(define MIN 0)<br>
(define MAX 1000000000) ; The more zeros, the cooler!</p>
<p>(define (the-enforcer-is-superior)<br>
(displayln “Is The Enforcer superior? OBVIOUSLY HE IS.”)<br>
(displayln (string-append "Please guess a number from "<br>
(number-&gt;string MIN) " to "<br>
(number-&gt;string MAX)))<br>
(guess (random MAX)))</p>
<p>(define (check-result attempt answer)<br>
(cond ((&lt; attempt answer) 'HIGHER)<br>
((&gt; attempt answer) 'LOWER)<br>
(else 'CORRECT)))</p>
<p>(define (midpoint n1 n2)<br>
(floor (/ (+ n1 n2) 2)))</p>
<p>(define (guess answer)<br>
(define (guess-inner min max num-tries)<br>
(let* ((mid (midpoint min max))<br>
(res (check-result mid answer)))<br>
; (displayln (string-append "Min: " (number-&gt;string min)<br>
;                           " Max: " (number-&gt;string max)<br>
;                           " Mid: " (number-&gt;string mid)))<br>
(displayln (string-append "Guess: " (number-&gt;string mid)))<br>
(displayln res)<br>
(cond ((eq? res 'HIGHER)<br>
(guess-inner mid max (add1 num-tries)))<br>
((eq? res 'LOWER)<br>
(guess-inner min mid (add1 num-tries)))<br>
(else<br>
(displayln<br>
(string-append "You got it! The answer was "<br>
(number-&gt;string mid) “!\n”<br>
"Number of tries: "<br>
(number-&gt;string num-tries)))))))<br>
(guess-inner MIN MAX 1))</p>
<p>(time (the-enforcer-is-superior)) ; YOLO <span class="hashtag">#swag</span><br>
[/code]</p>
<p><code>$ racket enf.rkt
Is The Enforcer superior? OBVIOUSLY HE IS.
Please guess a number from 0 to 1000000000
Guess: 500000000
HIGHER
Guess: 750000000
LOWER
Guess: 625000000
LOWER
Guess: 562500000
HIGHER
Guess: 593750000
HIGHER
Guess: 609375000
LOWER
Guess: 601562500
LOWER
Guess: 597656250
LOWER
Guess: 595703125
HIGHER
Guess: 596679687
HIGHER
Guess: 597167968
HIGHER
Guess: 597412109
LOWER
Guess: 597290038
HIGHER
Guess: 597351073
HIGHER
Guess: 597381591
LOWER
Guess: 597366332
LOWER
Guess: 597358702
HIGHER
Guess: 597362517
LOWER
Guess: 597360609
LOWER
Guess: 597359655
HIGHER
Guess: 597360132
LOWER
Guess: 597359893
HIGHER
Guess: 597360012
CORRECT
You got it! The answer was 597360012!
Number of tries: 23
cpu time: 0 real time: 1 gc time: 0</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-shows-undoubtable-superiority-in-compute-intensive-benchmarks/518375/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-shows-undoubtable-superiority-in-compute-intensive-benchmarks/518375/3</link>
        <pubDate>Thu, 02 May 2013 14:34:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-518375-3</guid>
        <source url="https://forum.moparisthebest.com/t/c-shows-undoubtable-superiority-in-compute-intensive-benchmarks/518375.rss">C++ shows undoubtable superiority in compute-intensive benchmarks</source>
      </item>
      <item>
        <title>C++ shows undoubtable superiority in compute-intensive benchmarks</title>
        <dc:creator><![CDATA[@bowserjr2 Bowser jr]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bowserjr2">@bowserjr2</a> wrote:</p>
          <blockquote>
              <p>Give us your code, or it is worth nothing. We all know that C and C++ is superior in execution speed.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-shows-undoubtable-superiority-in-compute-intensive-benchmarks/518375/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-shows-undoubtable-superiority-in-compute-intensive-benchmarks/518375/2</link>
        <pubDate>Thu, 02 May 2013 12:48:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-518375-2</guid>
        <source url="https://forum.moparisthebest.com/t/c-shows-undoubtable-superiority-in-compute-intensive-benchmarks/518375.rss">C++ shows undoubtable superiority in compute-intensive benchmarks</source>
      </item>
      <item>
        <title>C++ shows undoubtable superiority in compute-intensive benchmarks</title>
        <dc:creator><![CDATA[@The_Enforcer The Enforcer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_enforcer">@The_Enforcer</a> wrote:</p>
          <blockquote>
              <p>Proof.</p>
<p><img src="http://i.imgur.com/HbIEmE4.png" alt width="677" height="343"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-shows-undoubtable-superiority-in-compute-intensive-benchmarks/518375/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-shows-undoubtable-superiority-in-compute-intensive-benchmarks/518375/1</link>
        <pubDate>Thu, 02 May 2013 12:30:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-518375-1</guid>
        <source url="https://forum.moparisthebest.com/t/c-shows-undoubtable-superiority-in-compute-intensive-benchmarks/518375.rss">C++ shows undoubtable superiority in compute-intensive benchmarks</source>
      </item>
  </channel>
</rss>
