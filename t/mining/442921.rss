<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Mining</title>
    <link>https://forum.moparisthebest.com/t/mining/442921</link>
    <description>My class [code]
package server.model.players.skills;

import server.model.players.*;
import server.model.players.Client;
import server.model.players.Player;
import server.model.players.PlayerAssistant;
import server.model.items.ItemAssistant;
import server.Config;
import server.util.Misc;
import java.sql.Date;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.HashMap;
import server.model.items.Item;


/**
* @Author Ravekitty
*/
public class Mining {
		private	Client c;
		public Mining (Client c) {
		this.c = c;
		}
		private int exp;
		private int oreType;
		private int pickType;
		private int levelReq;
		//private int Id;
		private final int[] RANDOM_GEMS = {1623,1621,1619,1617,1631};


	public enum Picks {
	BRONZE(1265,6747,1,&quot;Bronze pickaxe&quot;),
	IRON(1267,6748,1,&quot;Iron pickaxe&quot;),
	STEEL(1269,6749,6,&quot;Steel pickaxe&quot;),
	MITHRIL(1273,6751,6,&quot;Mithril pickaxe&quot;),
	ADDY(1271,6750,21,&quot;Adamant pickaxe&quot;),
	RUNE(1275,6746,31,&quot;Rune pickaxe&quot;);

		public static HashMap &lt;Integer,Picks&gt; Mining = new HashMap&lt;Integer,Picks&gt;();
		int Id, animation, levelreq;
		String name;
		
		static {
    for (Picks m : Picks.values())
      Mining.put(m.getId(), m);
    }
	      /**
         * 
         * @param Id
         * @param ANIMATION
         * @param LEVELREQUIRED
         * @param Name
         */
		Picks(final int Id, final int animation,final int levelreq,final String name) {
		this.Id = Id;
		this.animation = animation;
		this.levelreq = levelreq;
		this.name = name;
		}
		public int getId(){
		return Id;
		}
		public int getanimation(){
		return animation;
		}
		public int getlevelreq(){
		return levelreq;
		}
		public String getname(){
		return name;
		}
		public Picks forId(int Id) {
      return Mining.get(Id);
    }
    
  }


	public void startMining(int oreType, int levelReq, int exp) {
		c.turnPlayerTo(c.objectX, c.objectY);
			for (final Picks m : Picks.values()) {
		if (goodPick() == true) {
			if (c.playerLevel[c.playerMining] &gt;= levelReq) {
				c.startAnimation(m.getanimation());
				c.sendMessage(&quot;You swing your pick at the rock.&quot;);
				this.oreType = oreType;
				this.exp = exp;
				this.levelReq = levelReq;
				this.pickType = m.getId();
				c.miningTimer = getMiningTimer(oreType);
			

		} else //if (c.playerLevel[c.playerMining] &lt; levelReq){
				resetMining();
				c.sendMessage(&quot;You need a mining level of &quot; + levelReq + &quot; to mine this rock.&quot;);
				c.startAnimation(65535);	
		} else {//if (!c.getItems().playerHasItem(m.getId(), 1)) {
			resetMining();
			c.sendMessage(&quot;You need a pickaxe to mine this rock.&quot;);
			c.startAnimation(65535);
			c.getPA().resetVariables();
				}
			}
		}
		
	public void mineOre() {
			for (final Picks m : Picks.values()) {
		if (c.getItems().addItem(oreType,1)) {
			c.startAnimation(m.getanimation());
			c.sendMessage(&quot;You manage to mine some ore.&quot;);
			c.getPA().addSkillXP(exp * Config.MINING_EXPERIENCE, c.playerMining);
			c.getPA().refreshSkill(c.playerMining);
			c.miningTimer = getMiningTimer(oreType);
			if (Misc.random(25) == 10) {
				c.getItems().addItem(RANDOM_GEMS[(int)(RANDOM_GEMS.length * Math.random())], 1);
				c.sendMessage(&quot;You find a gem!&quot;);
				
			}
		} else {
			c.getPA().resetVariables();
			c.startAnimation(65535);
				}
			}
		}
	

	public void resetMining() {
		this.oreType = -1;
		this.exp = -1;
		this.levelReq = -1;
		this.pickType = -1;
		c.miningTimer = -1;
	}
	
public boolean goodPick(int Id) {
for (final Picks m : Picks.forId(Id)) {
            if (c.getItems().playerHasItem(m.getId(), 1)) {
                if (m.getId() == m.forId) {
                    return true;
                }
            }
        }
        return false;
    }
	
	public int getMiningTimer(int ore) {
		int time = Misc.random(5);
		if (ore == 451) {
			time += 4;
		}
		return time;
	}
	
}
[/code]
My problems:
[code] 
THIS IS MY FIRST ENUM AND I DON&#39;T KNOW WHAT IM DOING.
[/code]
[code]
src\server\model\players\skills\Mining.java:84: goodPick(int) in server.model.pl
ayers.skills.Mining cannot be applied to ()
                if (goodPick() == true) {
                    ^
src\server\model\players\skills\Mining.java:138: non-static method forId(int) ca
nnot be referenced from a static context
for (final Picks m : Picks.forId(Id)) {
                          ^
src\server\model\players\skills\Mining.java:138: foreach not applicable to expre
ssion type
for (final Picks m : Picks.forId(Id)) {
                                ^
src\server\model\players\skills\Mining.java:140: cannot find symbol
symbol  : variable forId
location: class server.model.players.skills.Mining.Picks
                if (m.getId() == m.forId) {
                                  ^
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
4 errors
Press any key to continue . . .
[/code]
Please don&#39;t be vague. Be as specific as you can without spoon feeding ;D</description>
    
    <lastBuildDate>Tue, 22 May 2012 23:20:57 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/mining/442921.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Mining</title>
        <dc:creator><![CDATA[@ravekitty ravekitty]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ravekitty">@ravekitty</a> wrote:</p>
          <blockquote>
              <p>My class [code]<br>
package server.model.players.skills;</p>
<p>import server.model.players.*;<br>
import server.model.players.Client;<br>
import server.model.players.Player;<br>
import server.model.players.PlayerAssistant;<br>
import server.model.items.ItemAssistant;<br>
import server.Config;<br>
import server.util.Misc;<br>
import java.sql.Date;<br>
import java.text.SimpleDateFormat;<br>
import java.util.Calendar;<br>
import java.util.HashMap;<br>
import server.model.items.Item;</p>
<p>/**</p>
<ul>
<li>
<p><span class="mention">@Author</span> Ravekitty<br>
*/<br>
public class Mining {<br>
private	Client c;<br>
public Mining (Client c) {<br>
this.c = c;<br>
}<br>
private int exp;<br>
private int oreType;<br>
private int pickType;<br>
private int levelReq;<br>
//private int Id;<br>
private final int[] RANDOM_GEMS = {1623,1621,1619,1617,1631};</p>
<p>public enum Picks {<br>
BRONZE(1265,6747,1,“Bronze pickaxe”),<br>
IRON(1267,6748,1,“Iron pickaxe”),<br>
STEEL(1269,6749,6,“Steel pickaxe”),<br>
MITHRIL(1273,6751,6,“Mithril pickaxe”),<br>
ADDY(1271,6750,21,“Adamant pickaxe”),<br>
RUNE(1275,6746,31,“Rune pickaxe”);</p>
<pre><code>  public static HashMap &lt;Integer,Picks&gt; Mining = new HashMap&lt;Integer,Picks&gt;();
  int Id, animation, levelreq;
  String name;
  
  static {
</code></pre>
<p>for (Picks m : Picks.values())<br>
Mining.put(m.getId(), m);<br>
}<br>
/**<br>
*<br>
* <a class="mention" href="/u/param">@param</a> Id<br>
* <a class="mention" href="/u/param">@param</a> ANIMATION<br>
* <a class="mention" href="/u/param">@param</a> LEVELREQUIRED<br>
* <a class="mention" href="/u/param">@param</a> Name<br>
*/<br>
Picks(final int Id, final int animation,final int levelreq,final String name) {<br>
this.Id = Id;<br>
this.animation = animation;<br>
this.levelreq = levelreq;<br>
this.name = name;<br>
}<br>
public int getId(){<br>
return Id;<br>
}<br>
public int getanimation(){<br>
return animation;<br>
}<br>
public int getlevelreq(){<br>
return levelreq;<br>
}<br>
public String getname(){<br>
return name;<br>
}<br>
public Picks forId(int Id) {<br>
return Mining.get(Id);<br>
}</p>
<p>}</p>
<p>public void startMining(int oreType, int levelReq, int exp) {<br>
c.turnPlayerTo(c.objectX, c.objectY);<br>
for (final Picks m : Picks.values()) {<br>
if (goodPick() == true) {<br>
if (c.playerLevel[c.playerMining] &gt;= levelReq) {<br>
c.startAnimation(m.getanimation());<br>
c.sendMessage(“You swing your pick at the rock.”);<br>
this.oreType = oreType;<br>
this.exp = exp;<br>
this.levelReq = levelReq;<br>
this.pickType = m.getId();<br>
c.miningTimer = getMiningTimer(oreType);</p>
<pre><code>  } else //if (c.playerLevel[c.playerMining] &lt; levelReq){
  		resetMining();
  		c.sendMessage("You need a mining level of " + levelReq + " to mine this rock.");
  		c.startAnimation(65535);	
  } else {//if (!c.getItems().playerHasItem(m.getId(), 1)) {
  	resetMining();
  	c.sendMessage("You need a pickaxe to mine this rock.");
  	c.startAnimation(65535);
  	c.getPA().resetVariables();
  		}
  	}
  }
</code></pre>
<p>public void mineOre() {<br>
for (final Picks m : Picks.values()) {<br>
if (c.getItems().addItem(oreType,1)) {<br>
c.startAnimation(m.getanimation());<br>
c.sendMessage(“You manage to mine some ore.”);<br>
c.getPA().addSkillXP(exp * Config.MINING_EXPERIENCE, c.playerMining);<br>
c.getPA().refreshSkill(c.playerMining);<br>
c.miningTimer = getMiningTimer(oreType);<br>
if (Misc.random(25) == 10) {<br>
c.getItems().addItem(RANDOM_GEMS[(int)(RANDOM_GEMS.length * Math.random())], 1);<br>
c.sendMessage(“You find a gem!”);</p>
<pre><code>  	}
  } else {
  	c.getPA().resetVariables();
  	c.startAnimation(65535);
  		}
  	}
  }
</code></pre>
<p>public void resetMining() {<br>
this.oreType = -1;<br>
this.exp = -1;<br>
this.levelReq = -1;<br>
this.pickType = -1;<br>
c.miningTimer = -1;<br>
}</p>
</li>
</ul>
<p>public boolean goodPick(int Id) {<br>
for (final Picks m : Picks.forId(Id)) {<br>
if (c.getItems().playerHasItem(m.getId(), 1)) {<br>
if (m.getId() == m.forId) {<br>
return true;<br>
}<br>
}<br>
}<br>
return false;<br>
}</p>
<pre><code>public int getMiningTimer(int ore) {
	int time = Misc.random(5);
	if (ore == 451) {
		time += 4;
	}
	return time;
}
</code></pre>
<p>}<br>
[/code]<br>
My problems:</p>
<pre><code class="lang-auto">THIS IS MY FIRST ENUM AND I DON'T KNOW WHAT IM DOING.</code></pre>
<pre><code class="lang-auto">src\server\model\players\skills\Mining.java:84: goodPick(int) in server.model.pl
ayers.skills.Mining cannot be applied to ()
                if (goodPick() == true) {
                    ^
src\server\model\players\skills\Mining.java:138: non-static method forId(int) ca
nnot be referenced from a static context
for (final Picks m : Picks.forId(Id)) {
                          ^
src\server\model\players\skills\Mining.java:138: foreach not applicable to expre
ssion type
for (final Picks m : Picks.forId(Id)) {
                                ^
src\server\model\players\skills\Mining.java:140: cannot find symbol
symbol  : variable forId
location: class server.model.players.skills.Mining.Picks
                if (m.getId() == m.forId) {
                                  ^
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
4 errors
Press any key to continue . . .</code></pre>
<p>Please don’t be vague. Be as specific as you can without spoon feeding ;D</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/mining/442921/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/mining/442921/1</link>
        <pubDate>Tue, 22 May 2012 23:20:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-442921-1</guid>
        <source url="https://forum.moparisthebest.com/t/mining/442921.rss">Mining</source>
      </item>
  </channel>
</rss>
