<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Illegal start of expression, rep++ [delta]</title>
    <link>https://forum.moparisthebest.com/t/illegal-start-of-expression-rep-delta/413589</link>
    <description>Cleaning my client, ran into a problem. Forgot to backup and was re-tarted. 
[img]http://i779.photobucket.com/albums/yy71/lostmyphat/okk.png[/img]
It&#39;s near the very end of the client, heres the code that I think it&#39;s talking about.
[code]if(wearID == 4363){
				GoFalse = true;
      }
      if (CLAttack &gt; getLevelForXP(playerXP[0])) {
				sM(&quot;You are not a high enough level to use this item.&quot;);
				sM(&quot;You need to have an &quot;+statName[playerAttack]+&quot; level of &quot;+CLAttack+&quot;.&quot;);
        GoFalse = true;
      }
			if (CLHitpoints &gt; getLevelForXP(playerXP[3])) {
				sM(&quot;You are not a high enough level to use this item.&quot;);
				sM(&quot;You need to have a &quot;+statName[playerHitpoints]+&quot; level of &quot;+CLHitpoints+&quot;.&quot;);
				GoFalse = true;
			}
      if (CLDefence &gt; getLevelForXP(playerXP[1])) {
				sM(&quot;You are not a high enough level to use this item.&quot;);
				sM(&quot;You need to have a &quot;+statName[playerDefence]+&quot; level of &quot;+CLDefence+&quot;.&quot;);
        GoFalse = true;
      }
      if (CLStrength &gt; getLevelForXP(playerXP[2])) {
				sM(&quot;You are not a high enough level to use this item.&quot;);
				sM(&quot;You need to have a &quot;+statName[playerStrength]+&quot; level of &quot;+CLStrength+&quot;.&quot;);
        GoFalse = true;
      }
      if (CLMagic &gt; getLevelForXP(playerXP[6])) {
				sM(&quot;You are not a high enough level to use this item.&quot;);
				sM(&quot;You need to have a &quot;+statName[playerMagic]+&quot; level of &quot;+CLMagic+&quot;.&quot;);
        GoFalse = true;
      }
      if (CLRanged &gt; getLevelForXP(playerXP[4])) {
				sM(&quot;You are not a high enough level to use this item.&quot;);
				sM(&quot;You need to have a &quot;+statName[playerRanged]+&quot; level of &quot;+CLRanged+&quot;.&quot;);
        GoFalse = true;
      }
			if (CLSmithing &gt; getLevelForXP(playerXP[13])) {
				sM(&quot;You are not a high enough level to use this item.&quot;);
				sM(&quot;You need to have a &quot;+statName[playerSmithing]+&quot; level of &quot;+CLSmithing+&quot;.&quot;);
				GoFalse = true;
			}
			if (CLFiremaking &gt; getLevelForXP(playerXP[11])) {
				sM(&quot;You are not a high enough level to use this item.&quot;);
				sM(&quot;You need to have a &quot;+statName[playerFiremaking]+&quot; level of &quot;+CLFiremaking+&quot;.&quot;);
				GoFalse = true;
			}
			if (CLCooking &gt; getLevelForXP(playerXP[7])) {
				sM(&quot;You are not a high enough level to use this item.&quot;);
				sM(&quot;You need to have a &quot;+statName[playerCooking]+&quot; level of &quot;+CLCooking+&quot;.&quot;);
				GoFalse = true;
			}
			if (CLFishing &gt; getLevelForXP(playerXP[10])) {
				sM(&quot;You are not a high enough level to use this item.&quot;);
				sM(&quot;You need to have a &quot;+statName[playerFishing]+&quot; level of &quot;+CLFishing+&quot;.&quot;);
				GoFalse = true;
			}
			if (CLRunecrafting &gt; getLevelForXP(playerXP[20])) {
				sM(&quot;You are not a high enough level to use this item.&quot;);
				sM(&quot;You need to have a &quot;+statName[playerRunecrafting]+&quot; level of &quot;+CLRunecrafting+&quot;.&quot;);
				GoFalse = true;
			}
			if (CLWoodcutting &gt; getLevelForXP(playerXP[8])) {
				sM(&quot;You are not a high enough level to use this item.&quot;);
				sM(&quot;You need to have a &quot;+statName[playerWoodcutting]+&quot; level of &quot;+CLWoodcutting+&quot;.&quot;);
				GoFalse = true;
			}
			if (CLMining &gt; getLevelForXP(playerXP[14])) {
				sM(&quot;You are not a high enough level to use this item.&quot;);
				sM(&quot;You need to have a &quot;+statName[playerMining]+&quot; level of &quot;+CLMining+&quot;.&quot;);
				GoFalse = true;
			}
			if (CLPrayer &gt; getLevelForXP(playerXP[5])) {
				sM(&quot;You are not a high enough level to use this item.&quot;);
				sM(&quot;You need to have a &quot;+statName[playerPrayer]+&quot; level of &quot;+CLPrayer+&quot;.&quot;);
				GoFalse = true;
			}
			if (CLCrafting &gt; getLevelForXP(playerXP[12])) {
				sM(&quot;You are not a high enough level to use this item.&quot;);
				sM(&quot;You need to have a &quot;+statName[playerCrafting]+&quot; level of &quot;+CLCrafting+&quot;.&quot;);
				GoFalse = true;
			}
			if (GoFalse == true) {
				return false;
			}
			int wearAmount = playerItemsN[slot];
			server.special.needSpecial(this, wearID, targetSlot);	
			if (wearAmount &lt; 1) {
				return false;
			}
			if ((slot &gt;= 0) &amp;&amp; (wearID &gt;= 0)) {
				deleteItem(wearID, slot, wearAmount);
				if ((playerEquipment[targetSlot] != wearID)
						&amp;&amp; (playerEquipment[targetSlot] &gt;= 0)) {
					addItem(playerEquipment[targetSlot],
							playerEquipmentN[targetSlot]);
				} else if (Item.itemStackable[wearID]
						&amp;&amp; (playerEquipment[targetSlot] == wearID)) {
					wearAmount = playerEquipmentN[targetSlot] + wearAmount;
				} else if (playerEquipment[targetSlot] &gt;= 0) {
					addItem(playerEquipment[targetSlot],
							playerEquipmentN[targetSlot]);
				}
			}
			outStream.createFrameVarSizeWord(34);
			outStream.writeWord(1688);
			outStream.writeByte(targetSlot);
			outStream.writeWord(wearID + 1);
			if (wearAmount &gt; 254) {
				outStream.writeByte(255);
				outStream.writeDWord(wearAmount);
			} else {
				outStream.writeByte(wearAmount); // amount
			}
			outStream.endFrameVarSizeWord();
			playerEquipment[targetSlot] = wearID;
			playerEquipmentN[targetSlot] = wearAmount;
for (int element : two_hand) {
			if ((targetSlot == playerWeapon)
					&amp;&amp; (playerEquipment[playerShield] != -1)
					&amp;&amp; (Item.itemTwoHanded[wearID] == true) &amp;&amp; wearID == element) {
				remove(playerEquipment[playerShield], playerShield);
			}
}
			if (targetSlot == playerWeapon) {
			autocasting = false;
			autocastID = 0;
			setClientConfig(108, 0);
			SendWeapon(wearID, getItemName(wearID));
			playerSE = GetStandAnim(wearID);
			playerSEW = GetWalkAnim(wearID);
			playerSER = GetRunAnim(wearID);
			playerSEA = 0x326;
        		pEmote = playerSE;
			specOn = false;
			specAttack();
			}
			ResetBonus();
			GetBonus();
			wearing = false;
			WriteBonus();
			updateRequired = true;
			appearanceUpdateRequired = true;
			return true;
		}
		return false;
	}
	public void writeLog(String data, String file) {
		// used for bans/mutes/chatlogs etc. -bakatool
		BufferedWriter bw = null;

		try {
			bw = new BufferedWriter(new FileWriter(&quot;config//&quot; + file + &quot;.txt&quot;,
					true));
			bw.write(data);
			bw.newLine();
			bw.flush();
		} catch (IOException ioe) {
			ioe.printStackTrace();
		} finally {
			if (bw != null)
				try {
					bw.close();
				} catch (IOException ioe2) {
					System.out.println(&quot;Error writing system log.&quot;);
					ioe2.printStackTrace();
				}
		}
	}
	
	public void yell(String message) {
		for (Player p : handler.players) {
			if ((message.indexOf(&quot;tradereq&quot;) &gt; 0)
					|| (message.indexOf(&quot;duelreq&quot;) &gt; 0))
				return;
			if ((p == null) || !p.isActive)
				continue;
			client temp = (client) p;
			if ((temp.absX &gt; 0) &amp;&amp; (temp.absY &gt; 0))
				if ((temp != null) &amp;&amp; !temp.disconnected &amp;&amp; p.isActive)
					temp.sM(message);
}
}
		}
}[/code]</description>
    
    <lastBuildDate>Mon, 05 Sep 2011 21:31:00 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/illegal-start-of-expression-rep-delta/413589.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Illegal start of expression, rep++ [delta]</title>
        <dc:creator><![CDATA[@I_am_beast I am beast]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/i_am_beast">@I_am_beast</a> wrote:</p>
          <blockquote>
              <p>Post the void?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/illegal-start-of-expression-rep-delta/413589/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/illegal-start-of-expression-rep-delta/413589/2</link>
        <pubDate>Mon, 05 Sep 2011 21:31:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-413589-2</guid>
        <source url="https://forum.moparisthebest.com/t/illegal-start-of-expression-rep-delta/413589.rss">Illegal start of expression, rep++ [delta]</source>
      </item>
      <item>
        <title>Illegal start of expression, rep++ [delta]</title>
        <dc:creator><![CDATA[@lostmyphat lostmyphat]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lostmyphat">@lostmyphat</a> wrote:</p>
          <blockquote>
              <p>Cleaning my client, ran into a problem. Forgot to backup and was re-tarted.<br>
<img src="http://i779.photobucket.com/albums/yy71/lostmyphat/okk.png" alt width="638" height="301"><br>
It’s near the very end of the client, heres the code that I think it’s talking about.</p>
<p>[code]if(wearID == 4363){<br>
GoFalse = true;<br>
}<br>
if (CLAttack &gt; getLevelForXP(playerXP[0])) {<br>
sM(“You are not a high enough level to use this item.”);<br>
sM(“You need to have an “+statName[playerAttack]+” level of “+CLAttack+”.”);<br>
GoFalse = true;<br>
}<br>
if (CLHitpoints &gt; getLevelForXP(playerXP[3])) {<br>
sM(“You are not a high enough level to use this item.”);<br>
sM(“You need to have a “+statName[playerHitpoints]+” level of “+CLHitpoints+”.”);<br>
GoFalse = true;<br>
}<br>
if (CLDefence &gt; getLevelForXP(playerXP[1])) {<br>
sM(“You are not a high enough level to use this item.”);<br>
sM(“You need to have a “+statName[playerDefence]+” level of “+CLDefence+”.”);<br>
GoFalse = true;<br>
}<br>
if (CLStrength &gt; getLevelForXP(playerXP[2])) {<br>
sM(“You are not a high enough level to use this item.”);<br>
sM(“You need to have a “+statName[playerStrength]+” level of “+CLStrength+”.”);<br>
GoFalse = true;<br>
}<br>
if (CLMagic &gt; getLevelForXP(playerXP[6])) {<br>
sM(“You are not a high enough level to use this item.”);<br>
sM(“You need to have a “+statName[playerMagic]+” level of “+CLMagic+”.”);<br>
GoFalse = true;<br>
}<br>
if (CLRanged &gt; getLevelForXP(playerXP[4])) {<br>
sM(“You are not a high enough level to use this item.”);<br>
sM(“You need to have a “+statName[playerRanged]+” level of “+CLRanged+”.”);<br>
GoFalse = true;<br>
}<br>
if (CLSmithing &gt; getLevelForXP(playerXP[13])) {<br>
sM(“You are not a high enough level to use this item.”);<br>
sM(“You need to have a “+statName[playerSmithing]+” level of “+CLSmithing+”.”);<br>
GoFalse = true;<br>
}<br>
if (CLFiremaking &gt; getLevelForXP(playerXP[11])) {<br>
sM(“You are not a high enough level to use this item.”);<br>
sM(“You need to have a “+statName[playerFiremaking]+” level of “+CLFiremaking+”.”);<br>
GoFalse = true;<br>
}<br>
if (CLCooking &gt; getLevelForXP(playerXP[7])) {<br>
sM(“You are not a high enough level to use this item.”);<br>
sM(“You need to have a “+statName[playerCooking]+” level of “+CLCooking+”.”);<br>
GoFalse = true;<br>
}<br>
if (CLFishing &gt; getLevelForXP(playerXP[10])) {<br>
sM(“You are not a high enough level to use this item.”);<br>
sM(“You need to have a “+statName[playerFishing]+” level of “+CLFishing+”.”);<br>
GoFalse = true;<br>
}<br>
if (CLRunecrafting &gt; getLevelForXP(playerXP[20])) {<br>
sM(“You are not a high enough level to use this item.”);<br>
sM(“You need to have a “+statName[playerRunecrafting]+” level of “+CLRunecrafting+”.”);<br>
GoFalse = true;<br>
}<br>
if (CLWoodcutting &gt; getLevelForXP(playerXP[8])) {<br>
sM(“You are not a high enough level to use this item.”);<br>
sM(“You need to have a “+statName[playerWoodcutting]+” level of “+CLWoodcutting+”.”);<br>
GoFalse = true;<br>
}<br>
if (CLMining &gt; getLevelForXP(playerXP[14])) {<br>
sM(“You are not a high enough level to use this item.”);<br>
sM(“You need to have a “+statName[playerMining]+” level of “+CLMining+”.”);<br>
GoFalse = true;<br>
}<br>
if (CLPrayer &gt; getLevelForXP(playerXP[5])) {<br>
sM(“You are not a high enough level to use this item.”);<br>
sM(“You need to have a “+statName[playerPrayer]+” level of “+CLPrayer+”.”);<br>
GoFalse = true;<br>
}<br>
if (CLCrafting &gt; getLevelForXP(playerXP[12])) {<br>
sM(“You are not a high enough level to use this item.”);<br>
sM(“You need to have a “+statName[playerCrafting]+” level of “+CLCrafting+”.”);<br>
GoFalse = true;<br>
}<br>
if (GoFalse == true) {<br>
return false;<br>
}<br>
int wearAmount = playerItemsN[slot];<br>
server.special.needSpecial(this, wearID, targetSlot);	<br>
if (wearAmount &lt; 1) {<br>
return false;<br>
}<br>
if ((slot &gt;= 0) &amp;&amp; (wearID &gt;= 0)) {<br>
deleteItem(wearID, slot, wearAmount);<br>
if ((playerEquipment[targetSlot] != wearID)<br>
&amp;&amp; (playerEquipment[targetSlot] &gt;= 0)) {<br>
addItem(playerEquipment[targetSlot],<br>
playerEquipmentN[targetSlot]);<br>
} else if (Item.itemStackable[wearID]<br>
&amp;&amp; (playerEquipment[targetSlot] == wearID)) {<br>
wearAmount = playerEquipmentN[targetSlot] + wearAmount;<br>
} else if (playerEquipment[targetSlot] &gt;= 0) {<br>
addItem(playerEquipment[targetSlot],<br>
playerEquipmentN[targetSlot]);<br>
}<br>
}<br>
outStream.createFrameVarSizeWord(34);<br>
outStream.writeWord(1688);<br>
outStream.writeByte(targetSlot);<br>
outStream.writeWord(wearID + 1);<br>
if (wearAmount &gt; 254) {<br>
outStream.writeByte(255);<br>
outStream.writeDWord(wearAmount);<br>
} else {<br>
outStream.writeByte(wearAmount); // amount<br>
}<br>
outStream.endFrameVarSizeWord();<br>
playerEquipment[targetSlot] = wearID;<br>
playerEquipmentN[targetSlot] = wearAmount;<br>
for (int element : two_hand) {<br>
if ((targetSlot == playerWeapon)<br>
&amp;&amp; (playerEquipment[playerShield] != -1)<br>
&amp;&amp; (Item.itemTwoHanded[wearID] == true) &amp;&amp; wearID == element) {<br>
remove(playerEquipment[playerShield], playerShield);<br>
}<br>
}<br>
if (targetSlot == playerWeapon) {<br>
autocasting = false;<br>
autocastID = 0;<br>
setClientConfig(108, 0);<br>
SendWeapon(wearID, getItemName(wearID));<br>
playerSE = GetStandAnim(wearID);<br>
playerSEW = GetWalkAnim(wearID);<br>
playerSER = GetRunAnim(wearID);<br>
playerSEA = 0x326;<br>
pEmote = playerSE;<br>
specOn = false;<br>
specAttack();<br>
}<br>
ResetBonus();<br>
GetBonus();<br>
wearing = false;<br>
WriteBonus();<br>
updateRequired = true;<br>
appearanceUpdateRequired = true;<br>
return true;<br>
}<br>
return false;<br>
}<br>
public void writeLog(String data, String file) {<br>
// used for bans/mutes/chatlogs etc. -bakatool<br>
BufferedWriter bw = null;</p>
<pre><code>	try {
		bw = new BufferedWriter(new FileWriter("config//" + file + ".txt",
				true));
		bw.write(data);
		bw.newLine();
		bw.flush();
	} catch (IOException ioe) {
		ioe.printStackTrace();
	} finally {
		if (bw != null)
			try {
				bw.close();
			} catch (IOException ioe2) {
				System.out.println("Error writing system log.");
				ioe2.printStackTrace();
			}
	}
}

public void yell(String message) {
	for (Player p : handler.players) {
		if ((message.indexOf("tradereq") &gt; 0)
				|| (message.indexOf("duelreq") &gt; 0))
			return;
		if ((p == null) || !p.isActive)
			continue;
		client temp = (client) p;
		if ((temp.absX &gt; 0) &amp;&amp; (temp.absY &gt; 0))
			if ((temp != null) &amp;&amp; !temp.disconnected &amp;&amp; p.isActive)
				temp.sM(message);
</code></pre>
<p>}<br>
}<br>
}<br>
}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/illegal-start-of-expression-rep-delta/413589/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/illegal-start-of-expression-rep-delta/413589/1</link>
        <pubDate>Mon, 05 Sep 2011 21:11:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-413589-1</guid>
        <source url="https://forum.moparisthebest.com/t/illegal-start-of-expression-rep-delta/413589.rss">Illegal start of expression, rep++ [delta]</source>
      </item>
  </channel>
</rss>
