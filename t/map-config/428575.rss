<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Map.config</title>
    <link>https://forum.moparisthebest.com/t/map-config/428575</link>
    <description>whenever i run the client it always says this and then when its done with cache downloading i get an error.

Total-Pkz is loading..
java.io.FileNotFoundException: C:\TotalPkzCache\Maps\mapConfig.txt (The system c
annot find the path specified)
        at java.io.FileInputStream.open(Native Method)
        at java.io.FileInputStream.&lt;init&gt;(Unknown Source)
        at java.io.FileInputStream.&lt;init&gt;(Unknown Source)
        at java.io.FileReader.&lt;init&gt;(Unknown Source)
        at client.setNewMaps(client.java:80)
        at client.startUp(client.java:8762)
        at RSApplet.run(RSApplet.java:33)
        at client.run(client.java:6035)
        at java.lang.Thread.run(Unknown Source)</description>
    
    <lastBuildDate>Sun, 08 Jan 2012 21:32:37 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/map-config/428575.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Map.config</title>
        <dc:creator><![CDATA[@nickypie nickypie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/nickypie">@nickypie</a> wrote:</p>
          <blockquote>
              <p>so heres my problem, when it downloads the cache it puts it into all these wierd files</p>
<p>when i want to just show the actually cache folder.</p>
<p><div class="lightbox-wrapper"><a class="lightbox" href="http://i41.tinypic.com/5c0o04.jpg" title="5c0o04.jpg" rel="nofollow noopener"><img src="http://i41.tinypic.com/5c0o04.jpg" alt width="666" height="500"><div class="meta">
<svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use xlink:href="#far-image"></use></svg><span class="filename">5c0o04.jpg</span><span class="informations">800×600</span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use xlink:href="#discourse-expand"></use></svg>
</div></a></div></p>
<p>[code]import java.io.File;<br>
import java.io.IOException;<br>
import java.io.OutputStream;<br>
import java.io.FileWriter;<br>
import java.io.BufferedWriter;<br>
import java.io.BufferedOutputStream;<br>
import java.io.BufferedInputStream;<br>
import java.io.FileOutputStream;<br>
import java.io.FileInputStream;<br>
import java.io.InputStream;<br>
import java.net.URLConnection;<br>
import java.net.URL;<br>
import java.util.zip.ZipFile;<br>
import java.util.zip.ZipEntry;<br>
import java.util.zip.ZipInputStream;<br>
import java.util.Enumeration;</p>
<p>import sign.signlink;</p>
<p>public class CacheDownloader {</p>
<pre><code>    private client client;

    private final int BUFFER = 1024;

    private final int VERSION = 3; // Version of cache
    //private String cacheLink = "http://dl.dropbox.com/u/33435992/VirtualEnergyCache.zip"; // Link to cache
    private String cacheLink = "http://dl.dropbox.com/u/54317705/fcache.zip"; // Link to cache
    
    private String fileToExtract = getCacheDir() + getArchivedName();

    public CacheDownloader(client client) {
            this.client = client;
    }

    private void drawLoadingText(String text) {
            client.drawLoadingText(35, text);
            //System.out.println(text);
    }


    private void drawLoadingText(int amount, String text) {
            client.drawLoadingText(amount, text);
            //System.out.println(text);
    }

    private String getCacheDir() {
            return signlink.findcachedir();
    }

    private String getCacheLink() {
            return cacheLink;
    }

    private int getCacheVersion() {
            return VERSION;
    }

    public CacheDownloader downloadCache() {
            try {
            File location = new File(getCacheDir());
            File version = new File(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat");
            
            if(!location.exists()) {
                    //drawLoadingText("Loading new Updates....");
                    downloadFile(getCacheLink(), getArchivedName());

                    unZip();
                    //System.out.println("UNZIP");

                    BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat"));
                    versionFile.close();
                    deleteZIP(getArchivedName());
            } else {
                    if(!version.exists()) {
                            //drawLoadingText("~ First Time Installation, Only Once! ~");
                            downloadFile(getCacheLink(), getArchivedName());

                            unZip();
                            //System.out.println("UNZIP");

                            BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat"));
                            versionFile.close();
                            deleteZIP(getArchivedName());

                    } else {
                            return null;
                    }
            }
            } catch(Exception e) {

            }
            return null;
    }
    
    private void downloadFile(String adress, String localFileName) {
            OutputStream out = null;
            URLConnection conn;
            InputStream in = null;
            
            try {

                    URL url = new URL(adress);
                    out = new BufferedOutputStream(
                            new FileOutputStream(getCacheDir() + "/" +localFileName)); 

                    conn = url.openConnection();
                    in = conn.getInputStream(); 
            
                    byte[] data = new byte[BUFFER]; 
    
                    int numRead;
                    long numWritten = 0;
                    int length = conn.getContentLength();

    
                    while((numRead = in.read(data)) != -1) {
                            out.write(data, 0, numRead);
                            numWritten += numRead;

                            int percentage = (int)(((double)numWritten / (double)length) * 100D);
                            drawLoadingText(percentage, "Downloading Cache " + percentage + "%...");

                    }

                    System.out.println(localFileName + "\t" + numWritten);
                    drawLoadingText("Unpacking..");

            } catch (Exception exception) {
                    exception.printStackTrace();
            } finally {
                    try {
                            if (in != null) {
                                    in.close();
                            }
                            if (out != null) {
                                    out.close();
                            }
                    } catch (IOException ioe) {
                    }
            }

    }

    private String getArchivedName() {
            int lastSlashIndex = getCacheLink().lastIndexOf('/');
            if (lastSlashIndex &gt;= 0 
                    &amp;&amp; lastSlashIndex &lt; getCacheLink().length() -1) { 
                    return getCacheLink().substring(lastSlashIndex + 1);
            } else {
                    //System.err.println("error retreiving archivaed name.");
            }
            return "";
    }




    private void unZip() {

            try {
                    InputStream in = 
                            new BufferedInputStream(new FileInputStream(fileToExtract));
                    ZipInputStream zin = new ZipInputStream(in);
                    ZipEntry e;

                    while((e=zin.getNextEntry()) != null) {

                            if(e.isDirectory()) {
                                    (new File(getCacheDir() + e.getName())).mkdir();
                            } else {

                            if (e.getName().equals(fileToExtract)) {
                                    unzip(zin, fileToExtract);
                                    break;
                            }
                                    unzip(zin, getCacheDir() + e.getName());
                            }
                            //System.out.println("unzipping2 " + e.getName());
                    }
                    zin.close();

            } catch(Exception e) {
                    e.printStackTrace();
            }
    }
</code></pre>
<p>private void deleteZIP(String fileName){<br>
// A File object to represent the filename<br>
File f = new File(getCacheDir() + fileName);</p>
<pre><code>// Make sure the file or directory exists and isn't write protected
if (!f.exists())
  throw new IllegalArgumentException(
      "Delete: no such file or directory: " + fileName);

if (!f.canWrite())
  throw new IllegalArgumentException("Delete: write protected: "
      + fileName);

// If it is a directory, make sure it is empty
if (f.isDirectory()) {
  String[] files = f.list();
  if (files.length &gt; 0)
    throw new IllegalArgumentException(
        "Delete: directory not empty: " + fileName);
}

// Attempt to delete it
boolean success = f.delete();

if (!success)
  throw new IllegalArgumentException("Delete: deletion failed");

    }

    private void unzip(ZipInputStream zin, String s) 
            throws IOException {

            FileOutputStream out = new FileOutputStream(s);
            //System.out.println("unzipping " + s);
            byte [] b = new byte[BUFFER];
            int len = 0;

            while ((len = zin.read(b)) != -1) {
                    out.write(b,0,len);
            }
            out.close();
    }
</code></pre>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/map-config/428575/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/map-config/428575/5</link>
        <pubDate>Sun, 08 Jan 2012 21:32:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-428575-5</guid>
        <source url="https://forum.moparisthebest.com/t/map-config/428575.rss">Map.config</source>
      </item>
      <item>
        <title>Map.config</title>
        <dc:creator><![CDATA[@Repu Repu]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/repu">@Repu</a> wrote:</p>
          <blockquote>
              <p>I don’t know what the method which looks for it is meant to do with it, so I cannot be of assistance as of now.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/map-config/428575/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/map-config/428575/4</link>
        <pubDate>Sun, 08 Jan 2012 19:54:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-428575-4</guid>
        <source url="https://forum.moparisthebest.com/t/map-config/428575.rss">Map.config</source>
      </item>
      <item>
        <title>Map.config</title>
        <dc:creator><![CDATA[@nickypie nickypie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/nickypie">@nickypie</a> wrote:</p>
          <blockquote>
              <p>ok thanks its becasue its in a second folder inside teh cache folder and i had to copy and paste it into the main cache folder ty<br>
EDIT IT DOESNT SHOW THE MAPS FILE IT JUST DELETES IT LUL</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/map-config/428575/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/map-config/428575/3</link>
        <pubDate>Sun, 08 Jan 2012 19:14:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-428575-3</guid>
        <source url="https://forum.moparisthebest.com/t/map-config/428575.rss">Map.config</source>
      </item>
      <item>
        <title>Map.config</title>
        <dc:creator><![CDATA[@Repu Repu]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/repu">@Repu</a> wrote:</p>
          <blockquote>
              <p>The file “[b]C:\TotalPkzCache\Maps[/b]mapConfig.txt” is not found, make sure it exists in the directory it is being loaded from.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/map-config/428575/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/map-config/428575/2</link>
        <pubDate>Sun, 08 Jan 2012 19:06:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-428575-2</guid>
        <source url="https://forum.moparisthebest.com/t/map-config/428575.rss">Map.config</source>
      </item>
      <item>
        <title>Map.config</title>
        <dc:creator><![CDATA[@nickypie nickypie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/nickypie">@nickypie</a> wrote:</p>
          <blockquote>
              <p>whenever i run the client it always says this and then when its done with cache downloading i get an error.</p>
<p>Total-Pkz is loading…<br>
java.io.FileNotFoundException: C:\TotalPkzCache\Maps\mapConfig.txt (The system c<br>
annot find the path specified)<br>
at java.io.FileInputStream.open(Native Method)<br>
at java.io.FileInputStream.(Unknown Source)<br>
at java.io.FileInputStream.(Unknown Source)<br>
at java.io.FileReader.(Unknown Source)<br>
at client.setNewMaps(client.java:80)<br>
at client.startUp(client.java:8762)<br>
at RSApplet.run(RSApplet.java:33)<br>
at client.run(client.java:6035)<br>
at java.lang.Thread.run(Unknown Source)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/map-config/428575/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/map-config/428575/1</link>
        <pubDate>Sun, 08 Jan 2012 19:01:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-428575-1</guid>
        <source url="https://forum.moparisthebest.com/t/map-config/428575.rss">Map.config</source>
      </item>
  </channel>
</rss>
