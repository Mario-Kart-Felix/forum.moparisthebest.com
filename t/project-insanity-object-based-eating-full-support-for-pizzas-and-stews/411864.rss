<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Project Insanity , object based eating! full support for pizzas and stews!</title>
    <link>https://forum.moparisthebest.com/t/project-insanity-object-based-eating-full-support-for-pizzas-and-stews/411864</link>
    <description>[b]NOTE[/b] : Again , this is done for 2 reasons : boredom and my quest to make my PI base more object based :D

[b]NOTE[/b] : I forgot again , you must import this in your [b]ClickItem class[/b] :
[code=java]import server.models.players.Eat;[/code]

[b]NOTE[/b] : omfg , really I keep forgetting so many things...
You must erase these 2 lines from your [b]ClickItem[/b] class :
[code=java]		if (c.getFood().isFood(itemId))
			c.getFood().eat(itemId,itemSlot);[/code]

Alright , what this will do is add object based eating to your PI server.
That means you will have to call it like this once you&#39;ve finished this tutorial :
[code=java]new Eat(c, 2297, &quot;anchovy pizza&quot;, 9, true, 2299, itemSlot);[/code]

Let me explain what this does:
The &#39;c&#39; stands for the Client (the player) and will vary on whatever you named it.

The first integer is the ID of the item that you&#39;re using to heal.

The string is the name of the item you&#39;re using to heal.

The 2nd integer is the amount of health this piece of food wil heal.

The boolean depends on the item ; if you&#39;re using a full pizza or a stew , then a new item must be added (half a pizza and an empty bowl respectively).

The integer after that stands for the item that must be added (set this to 0 if the boolean is set to false , only use it when you set the boolean to true).

And then as last , we have the slot at which the item is located in out inventory.

[b]LET&#39;S ADD THIS THEN![/b]

To start , you must create a new class in the [i]server.models.players[/i] package and name it [b]Eat.java[/b].
Then , you must add this code into that class :
[code=java]package server.model.players;

import server.model.players.Client;
import server.Config;
import server.util.Misc;

public class Eat {

	/**
	@author Cres
	@note I&#39;m pro :D
	*/

	public Eat(Client c, int foodType, String foodName, int heal, boolean reqReplace, int replaceId, int slot) {
		if (canEat(c)) { //checks if the player may eat or not
			c.getCombat().resetPlayerAttack(); //reset the player&#39;s combat status
			c.attackTimer += 2; //create some time for the player to eat
			c.startAnimation(829); //start the eating anim
			c.sendMessage(&quot;You eat the &quot;+foodName+&quot;.&quot;); //send the usual message
			c.sendMessage(&quot;It heals some health.&quot;); //this too...
			c.getItems().deleteItem(foodType,slot,1); //delete the item we ate
			if (reqReplace) { // items like full pizzas need to be replaced by a half pizza , hence this part of code...
				c.getItems().addItem(replaceId,1); //add the replacement item
			}
			if (c.playerLevel[3] &lt; c.getLevelForXP(c.playerXP[3])) { //heals it up
				c.playerLevel[3] += heal;
				if (c.playerLevel[3] &gt; c.getLevelForXP(c.playerXP[3]))
					c.playerLevel[3] = c.getLevelForXP(c.playerXP[3]);
			}
			c.foodDelay = System.currentTimeMillis(); //creates a delay so players cant spam eat
			c.getPA().refreshSkill(3); //re-write the HP stat (updates it)
		}
	}
	
	public boolean canEat(Client c) {
		if (c.duelRule[6]) {
			c.sendMessage(&quot;You may not eat in this duel.&quot;);
			return false;
		}
		if (c.playerLevel[3] &lt; 0) {
			return false;
		}
		if (System.currentTimeMillis() - c.foodDelay &lt; 1500) {
			return false;
		}
		return true;
	}
}[/code]

I have explained everything with comments in the code itself.

[b]BUT CRES , FROM WHERE DO I CALL THIS...[/b]
Normally , you&#39;d have to configure all this yourself within [b]ClickItem.java[/b].
BUT
since I&#39;m so kind , I have provided you 70 - 80 if not 90% of all the food types!!!
You must load them in a [b]switch (itemId)[/b] statement in the [b]ClickItem[/b] class.

Here they are :
[code=java]			case 315: //shrimp
				new Eat(c, 315, &quot;shrimp&quot;, 3, false, 0, itemSlot);
			break;
			case 319: //anchovy
				new Eat(c, 319, &quot;anchovy&quot;, 1, false, 0, itemSlot);
			break;
			case 325: //sardine
				new Eat(c, 325, &quot;sardine&quot;, 4, false, 0, itemSlot);
			break;
			case 347: //herring
				new Eat(c, 347, &quot;herring&quot;, 5, false, 0, itemSlot);
			break;
			case 355: //mackerel
				new Eat(c, 355, &quot;mackerel&quot;, 6, false, 0, itemSlot);
			break;
			case 329: //salmon
				new Eat(c, 329, &quot;salmon&quot;, 9, false, 0, itemSlot);
			break;
			case 333: //trout
				new Eat(c, 333, &quot;trout&quot;, 7, false, 0, itemSlot);
			break;
			case 339: //cod
				new Eat(c, 339, &quot;cod&quot;, 7, false, 0, itemSlot);
			break;
			case 351: //pike
				new Eat(c, 351, &quot;pike&quot;, 8, false, 0, itemSlot);
			break;
			case 359: //tuna
				new Eat(c, 359, &quot;tuna&quot;, 10, false, 0, itemSlot);
			break;
			case 365: //bass
				new Eat(c, 365, &quot;bass&quot;, 13, false, 0, itemSlot);
			break;
			case 373: //swordfish
				new Eat(c, 373, &quot;swordfish&quot;, 14, false, 0, itemSlot);
			break;
			case 379: //lobster
				new Eat(c, 379, &quot;lobster&quot;, 12, false, 0, itemSlot);
			break;
			case 385: //shark
				new Eat(c, 385, &quot;shark&quot;, 20, false, 0, itemSlot);
			break;
			case 391: //manta
				new Eat(c, 391, &quot;manta ray&quot;, 22, false, 0, itemSlot);
			break;
			case 397: //turtle
				new Eat(c, 397, &quot;sea turtle&quot;, 21, false, 0, itemSlot);
			break;
			case 7946: //monkfish
				new Eat(c, 7946, &quot;monkfish&quot;, 16, false, 0, itemSlot);
			break;
			case 7060: //tuna potato
				new Eat(c, 7060, &quot;tuna potato&quot;, 22, false, 0, itemSlot);
			break;
			case 7054: //chilli potato
				new Eat(c, 7054, &quot;chilli potato&quot;, 14, false, 0, itemSlot);
			break;
			case 2289: //pizza
				new Eat(c, 2289, &quot;pizza&quot;, 7, true, 2291, itemSlot);
			break;
			case 2291: //half of pizza
				new Eat(c, 2291, &quot;pizza&quot;, 7, false, 0, itemSlot);
			break;
			case 2293: //meat pizza
				new Eat(c, 2293, &quot;meat pizza&quot;, 8, true, 2295, itemSlot);
			break;
			case 2295: //half of meat pizza
				new Eat(c, 2295, &quot;meat pizza&quot;, 8, false, 0, itemSlot);
			break;
			case 2297: //anchovy pizza
				new Eat(c, 2297, &quot;anchovy pizza&quot;, 9, true, 2299, itemSlot);
			break;
			case 2299: //half of anchovy pizza
				new Eat(c, 2299, &quot;anchovy pizza&quot;, 9, false, 0, itemSlot);
			break;
			case 2301: //pineapple pizza
				new Eat(c, 2301, &quot;pineapple pizza&quot;, 11, true, 2303, itemSlot);
			break;
			case 2303: //half of pineapple pizza
				new Eat(c, 2303, &quot;pineapple pizza&quot;, 11, false, 0, itemSlot);
			break;
			case 2003: //stew
				new Eat(c, 2003, &quot;stew&quot;, 11, true, 1923, itemSlot);
			break;
			case 2011: // curry
				new Eat(c, 2011, &quot;curry&quot;, 19, true, 1923, itemSlot);
			break;[/code]

It is now safe to remove your [b]Food.java[/b] class.

And in your Client.java class , remove these lines:
[code=java]private Food food = new Food(this);[/code]

and also
[code=java]	public Food getFood() {
		return food;
	}[/code]

Expect more object based updates for PI from me ,
Laters...

~Cres.</description>
    
    <lastBuildDate>Sun, 28 Aug 2011 16:47:38 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/project-insanity-object-based-eating-full-support-for-pizzas-and-stews/411864.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Project Insanity , object based eating! full support for pizzas and stews!</title>
        <dc:creator><![CDATA[@Cres Cres]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cres">@Cres</a> wrote:</p>
          <blockquote>
              <p>Haven’t worked with enums ever before , I’ll look into that later on , right now I’m completely rewriting the PI combat…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/project-insanity-object-based-eating-full-support-for-pizzas-and-stews/411864/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/project-insanity-object-based-eating-full-support-for-pizzas-and-stews/411864/8</link>
        <pubDate>Sun, 28 Aug 2011 16:47:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-411864-8</guid>
        <source url="https://forum.moparisthebest.com/t/project-insanity-object-based-eating-full-support-for-pizzas-and-stews/411864.rss">Project Insanity , object based eating! full support for pizzas and stews!</source>
      </item>
      <item>
        <title>Project Insanity , object based eating! full support for pizzas and stews!</title>
        <dc:creator><![CDATA[@ipwnunoobs ipwnunoobs]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ipwnunoobs">@ipwnunoobs</a> wrote:</p>
          <blockquote>
              <p>USE ENUMS! Much more neater.</p>
<p>so its like this</p>
<pre><code class="lang-auto">	public static enum Food {
		ANCHOVIE(319, 1),</code></pre>
<p>and if you want a new id, like u eat a new summer pie. You make enum on enum.</p>
<pre><code class="lang-auto">		SUMMER_PIE_FULL(7218, 11, 7220, Effect.SUMMER_PIE),
		SUMMER_PIE_HALF(7220, 11, 2313, Effect.SUMMER_PIE);</code></pre>
<p>and</p>
<p><code>		private Food(int id, int heal, int newId) {
			this.id = id;
			this.heal = heal;
			this.newId = newId;
		}</code></p>
<p>Not hard if you try.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/project-insanity-object-based-eating-full-support-for-pizzas-and-stews/411864/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/project-insanity-object-based-eating-full-support-for-pizzas-and-stews/411864/7</link>
        <pubDate>Sun, 28 Aug 2011 13:18:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-411864-7</guid>
        <source url="https://forum.moparisthebest.com/t/project-insanity-object-based-eating-full-support-for-pizzas-and-stews/411864.rss">Project Insanity , object based eating! full support for pizzas and stews!</source>
      </item>
      <item>
        <title>Project Insanity , object based eating! full support for pizzas and stews!</title>
        <dc:creator><![CDATA[@Cres Cres]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cres">@Cres</a> wrote:</p>
          <blockquote>
              <p>[quote=“Coelho, post:5, topic:411864”][quote author=Cres link=topic=513121.msg3725923#msg3725923 date=1314265203]</p>
<aside class="quote">
<blockquote>
<p>Very pointless <img src="https://forum.moparisthebest.com/images/emoji/twitter/confused.png?v=5" title=":confused:" class="emoji" alt=":confused:"></p>
</blockquote>
</aside>
<p>Not really , the old eating system was incomplete and didn’t support pizzas or stews or currys , this one does , makes it better , I don’t really suppose you tried it or even understand what the code does &lt;.&lt;.</p>
<p>Also , this code works directly where as the old eating made quite a few detours (which I hate).</p>
<p>EDIT : this is why this system is better:</p>
<p>[ul][li] It doesn’t go through the whole eatable items list for every item you click[/li]<br>
[li] Support for pizzas and stews and curry[/li]<br>
[li] It doesn’t have to get the class through the client like the old system[/li][/ul]</p>
<p>That makes this way of eating faster and easier and also more flexible.<br>
[/quote]<br>
I had meant the object orientation. It would not make any sense to make this object oriented unless you actually make more of a system for it.</p>
<p>Also in the op I did not see any of these improvements, I apologize if I misread.[/quote]</p>
<p>The improvements are in the code itself.<br>
And I’m adding all the object oriented updates because I <span class="bbcode-b">can</span> and I’m <span class="bbcode-b">bored</span> and because nobody has done it <span class="bbcode-b">before</span> and because I <span class="bbcode-b">love</span> using objects <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/project-insanity-object-based-eating-full-support-for-pizzas-and-stews/411864/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/project-insanity-object-based-eating-full-support-for-pizzas-and-stews/411864/6</link>
        <pubDate>Fri, 26 Aug 2011 11:19:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-411864-6</guid>
        <source url="https://forum.moparisthebest.com/t/project-insanity-object-based-eating-full-support-for-pizzas-and-stews/411864.rss">Project Insanity , object based eating! full support for pizzas and stews!</source>
      </item>
      <item>
        <title>Project Insanity , object based eating! full support for pizzas and stews!</title>
        <dc:creator><![CDATA[@Coelho Coelho]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/coelho">@Coelho</a> wrote:</p>
          <blockquote>
              <p>[quote=“Cres, post:4, topic:411864”][quote author=Coelho link=topic=513121.msg3725798#msg3725798 date=1314250621]<br>
Very pointless <img src="https://forum.moparisthebest.com/images/emoji/twitter/confused.png?v=5" title=":confused:" class="emoji" alt=":confused:"><br>
[/quote]</p>
<p>Not really , the old eating system was incomplete and didn’t support pizzas or stews or currys , this one does , makes it better , I don’t really suppose you tried it or even understand what the code does &lt;.&lt;.</p>
<p>Also , this code works directly where as the old eating made quite a few detours (which I hate).</p>
<p>EDIT : this is why this system is better:</p>
<p>[ul][li] It doesn’t go through the whole eatable items list for every item you click[/li]<br>
[li] Support for pizzas and stews and curry[/li]<br>
[li] It doesn’t have to get the class through the client like the old system[/li][/ul]</p>
<p>That makes this way of eating faster and easier and also more flexible.[/quote]<br>
I had meant the object orientation. It would not make any sense to make this object oriented unless you actually make more of a system for it.</p>
<p>Also in the op I did not see any of these improvements, I apologize if I misread.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/project-insanity-object-based-eating-full-support-for-pizzas-and-stews/411864/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/project-insanity-object-based-eating-full-support-for-pizzas-and-stews/411864/5</link>
        <pubDate>Fri, 26 Aug 2011 03:29:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-411864-5</guid>
        <source url="https://forum.moparisthebest.com/t/project-insanity-object-based-eating-full-support-for-pizzas-and-stews/411864.rss">Project Insanity , object based eating! full support for pizzas and stews!</source>
      </item>
      <item>
        <title>Project Insanity , object based eating! full support for pizzas and stews!</title>
        <dc:creator><![CDATA[@Cres Cres]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cres">@Cres</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="411864">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/coelho/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Coelho:</div>
<blockquote>
<p>Very pointless <img src="https://forum.moparisthebest.com/images/emoji/twitter/confused.png?v=5" title=":confused:" class="emoji" alt=":confused:"></p>
</blockquote>
</aside>
<p>Not really , the old eating system was incomplete and didn’t support pizzas or stews or currys , this one does , makes it better , I don’t really suppose you tried it or even understand what the code does &lt;.&lt;.</p>
<p>Also , this code works directly where as the old eating made quite a few detours (which I hate).</p>
<p>EDIT : this is why this system is better:</p>
<p>[ul][li] It doesn’t go through the whole eatable items list for every item you click[/li]<br>
[li] Support for pizzas and stews and curry[/li]<br>
[li] It doesn’t have to get the class through the client like the old system[/li][/ul]</p>
<p>That makes this way of eating faster and easier and also more flexible.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/project-insanity-object-based-eating-full-support-for-pizzas-and-stews/411864/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/project-insanity-object-based-eating-full-support-for-pizzas-and-stews/411864/4</link>
        <pubDate>Thu, 25 Aug 2011 09:40:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-411864-4</guid>
        <source url="https://forum.moparisthebest.com/t/project-insanity-object-based-eating-full-support-for-pizzas-and-stews/411864.rss">Project Insanity , object based eating! full support for pizzas and stews!</source>
      </item>
      <item>
        <title>Project Insanity , object based eating! full support for pizzas and stews!</title>
        <dc:creator><![CDATA[@doom_j doom_j]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/doom_j">@doom_j</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="411864">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/coelho/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Coelho:</div>
<blockquote>
<p>Very pointless <img src="https://forum.moparisthebest.com/images/emoji/twitter/confused.png?v=5" title=":confused:" class="emoji" alt=":confused:"></p>
</blockquote>
</aside>
<p>like your post?</p>
<p><span class="mention">@OP</span>: Pretty ok tutorial, decent amount of exampling.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/project-insanity-object-based-eating-full-support-for-pizzas-and-stews/411864/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/project-insanity-object-based-eating-full-support-for-pizzas-and-stews/411864/3</link>
        <pubDate>Thu, 25 Aug 2011 05:41:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-411864-3</guid>
        <source url="https://forum.moparisthebest.com/t/project-insanity-object-based-eating-full-support-for-pizzas-and-stews/411864.rss">Project Insanity , object based eating! full support for pizzas and stews!</source>
      </item>
      <item>
        <title>Project Insanity , object based eating! full support for pizzas and stews!</title>
        <dc:creator><![CDATA[@Coelho Coelho]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/coelho">@Coelho</a> wrote:</p>
          <blockquote>
              <p>Very pointless <img src="https://forum.moparisthebest.com/images/emoji/twitter/confused.png?v=5" title=":confused:" class="emoji" alt=":confused:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/project-insanity-object-based-eating-full-support-for-pizzas-and-stews/411864/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/project-insanity-object-based-eating-full-support-for-pizzas-and-stews/411864/2</link>
        <pubDate>Thu, 25 Aug 2011 05:37:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-411864-2</guid>
        <source url="https://forum.moparisthebest.com/t/project-insanity-object-based-eating-full-support-for-pizzas-and-stews/411864.rss">Project Insanity , object based eating! full support for pizzas and stews!</source>
      </item>
      <item>
        <title>Project Insanity , object based eating! full support for pizzas and stews!</title>
        <dc:creator><![CDATA[@Cres Cres]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cres">@Cres</a> wrote:</p>
          <blockquote>
              <p><span class="bbcode-b">NOTE</span> : Again , this is done for 2 reasons : boredom and my quest to make my PI base more object based <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"></p>
<p><span class="bbcode-b">NOTE</span> : I forgot again , you must import this in your <span class="bbcode-b">ClickItem class</span> :</p>
<pre><code class="lang-auto"></code></pre>
<p><span class="bbcode-b">NOTE</span> : omfg , really I keep forgetting so many things…<br>
You must erase these 2 lines from your <span class="bbcode-b">ClickItem</span> class :</p>
<p><code>		if (c.getFood().isFood(itemId))
			c.getFood().eat(itemId,itemSlot);</code></p>
<p>Alright , what this will do is add object based eating to your PI server.<br>
That means you will have to call it like this once you’ve finished this tutorial :</p>
<pre><code class="lang-auto"></code></pre>
<p>Let me explain what this does:<br>
The ‘c’ stands for the Client (the player) and will vary on whatever you named it.</p>
<p>The first integer is the ID of the item that you’re using to heal.</p>
<p>The string is the name of the item you’re using to heal.</p>
<p>The 2nd integer is the amount of health this piece of food wil heal.</p>
<p>The boolean depends on the item ; if you’re using a full pizza or a stew , then a new item must be added (half a pizza and an empty bowl respectively).</p>
<p>The integer after that stands for the item that must be added (set this to 0 if the boolean is set to false , only use it when you set the boolean to true).</p>
<p>And then as last , we have the slot at which the item is located in out inventory.</p>
<p><span class="bbcode-b">LET’S ADD THIS THEN!</span></p>
<p>To start , you must create a new class in the <span class="bbcode-i">server.models.players</span> package and name it <span class="bbcode-b">Eat.java</span>.<br>
Then , you must add this code into that class :</p>
<p>[code=java]package server.model.players;</p>
<p>import server.model.players.Client;<br>
import server.Config;<br>
import server.util.Misc;</p>
<p>public class Eat {</p>
<pre><code>/**
@author Cres
@note I'm pro :D
*/

public Eat(Client c, int foodType, String foodName, int heal, boolean reqReplace, int replaceId, int slot) {
	if (canEat(c)) { //checks if the player may eat or not
		c.getCombat().resetPlayerAttack(); //reset the player's combat status
		c.attackTimer += 2; //create some time for the player to eat
		c.startAnimation(829); //start the eating anim
		c.sendMessage("You eat the "+foodName+"."); //send the usual message
		c.sendMessage("It heals some health."); //this too...
		c.getItems().deleteItem(foodType,slot,1); //delete the item we ate
		if (reqReplace) { // items like full pizzas need to be replaced by a half pizza , hence this part of code...
			c.getItems().addItem(replaceId,1); //add the replacement item
		}
		if (c.playerLevel[3] &lt; c.getLevelForXP(c.playerXP[3])) { //heals it up
			c.playerLevel[3] += heal;
			if (c.playerLevel[3] &gt; c.getLevelForXP(c.playerXP[3]))
				c.playerLevel[3] = c.getLevelForXP(c.playerXP[3]);
		}
		c.foodDelay = System.currentTimeMillis(); //creates a delay so players cant spam eat
		c.getPA().refreshSkill(3); //re-write the HP stat (updates it)
	}
}

public boolean canEat(Client c) {
	if (c.duelRule[6]) {
		c.sendMessage("You may not eat in this duel.");
		return false;
	}
	if (c.playerLevel[3] &lt; 0) {
		return false;
	}
	if (System.currentTimeMillis() - c.foodDelay &lt; 1500) {
		return false;
	}
	return true;
}
</code></pre>
<p>}[/code]</p>
<p>I have explained everything with comments in the code itself.</p>
<p><span class="bbcode-b">BUT CRES , FROM WHERE DO I CALL THIS…</span><br>
Normally , you’d have to configure all this yourself within <span class="bbcode-b">ClickItem.java</span>.<br>
BUT<br>
since I’m so kind , I have provided you 70 - 80 if not 90% of all the food types!!!<br>
You must load them in a <span class="bbcode-b">switch (itemId)</span> statement in the <span class="bbcode-b">ClickItem</span> class.</p>
<p>Here they are :</p>
<p><code>			case 315: //shrimp
				new Eat(c, 315, "shrimp", 3, false, 0, itemSlot);
			break;
			case 319: //anchovy
				new Eat(c, 319, "anchovy", 1, false, 0, itemSlot);
			break;
			case 325: //sardine
				new Eat(c, 325, "sardine", 4, false, 0, itemSlot);
			break;
			case 347: //herring
				new Eat(c, 347, "herring", 5, false, 0, itemSlot);
			break;
			case 355: //mackerel
				new Eat(c, 355, "mackerel", 6, false, 0, itemSlot);
			break;
			case 329: //salmon
				new Eat(c, 329, "salmon", 9, false, 0, itemSlot);
			break;
			case 333: //trout
				new Eat(c, 333, "trout", 7, false, 0, itemSlot);
			break;
			case 339: //cod
				new Eat(c, 339, "cod", 7, false, 0, itemSlot);
			break;
			case 351: //pike
				new Eat(c, 351, "pike", 8, false, 0, itemSlot);
			break;
			case 359: //tuna
				new Eat(c, 359, "tuna", 10, false, 0, itemSlot);
			break;
			case 365: //bass
				new Eat(c, 365, "bass", 13, false, 0, itemSlot);
			break;
			case 373: //swordfish
				new Eat(c, 373, "swordfish", 14, false, 0, itemSlot);
			break;
			case 379: //lobster
				new Eat(c, 379, "lobster", 12, false, 0, itemSlot);
			break;
			case 385: //shark
				new Eat(c, 385, "shark", 20, false, 0, itemSlot);
			break;
			case 391: //manta
				new Eat(c, 391, "manta ray", 22, false, 0, itemSlot);
			break;
			case 397: //turtle
				new Eat(c, 397, "sea turtle", 21, false, 0, itemSlot);
			break;
			case 7946: //monkfish
				new Eat(c, 7946, "monkfish", 16, false, 0, itemSlot);
			break;
			case 7060: //tuna potato
				new Eat(c, 7060, "tuna potato", 22, false, 0, itemSlot);
			break;
			case 7054: //chilli potato
				new Eat(c, 7054, "chilli potato", 14, false, 0, itemSlot);
			break;
			case 2289: //pizza
				new Eat(c, 2289, "pizza", 7, true, 2291, itemSlot);
			break;
			case 2291: //half of pizza
				new Eat(c, 2291, "pizza", 7, false, 0, itemSlot);
			break;
			case 2293: //meat pizza
				new Eat(c, 2293, "meat pizza", 8, true, 2295, itemSlot);
			break;
			case 2295: //half of meat pizza
				new Eat(c, 2295, "meat pizza", 8, false, 0, itemSlot);
			break;
			case 2297: //anchovy pizza
				new Eat(c, 2297, "anchovy pizza", 9, true, 2299, itemSlot);
			break;
			case 2299: //half of anchovy pizza
				new Eat(c, 2299, "anchovy pizza", 9, false, 0, itemSlot);
			break;
			case 2301: //pineapple pizza
				new Eat(c, 2301, "pineapple pizza", 11, true, 2303, itemSlot);
			break;
			case 2303: //half of pineapple pizza
				new Eat(c, 2303, "pineapple pizza", 11, false, 0, itemSlot);
			break;
			case 2003: //stew
				new Eat(c, 2003, "stew", 11, true, 1923, itemSlot);
			break;
			case 2011: // curry
				new Eat(c, 2011, "curry", 19, true, 1923, itemSlot);
			break;</code></p>
<p>It is now safe to remove your <span class="bbcode-b">Food.java</span> class.</p>
<p>And in your Client.java class , remove these lines:</p>
<pre><code class="lang-auto"></code></pre>
<p>and also</p>
<p><code>	public Food getFood() {
		return food;
	}</code></p>
<p>Expect more object based updates for PI from me ,<br>
Laters…</p>
<p>~Cres.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/project-insanity-object-based-eating-full-support-for-pizzas-and-stews/411864/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/project-insanity-object-based-eating-full-support-for-pizzas-and-stews/411864/1</link>
        <pubDate>Wed, 24 Aug 2011 17:41:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-411864-1</guid>
        <source url="https://forum.moparisthebest.com/t/project-insanity-object-based-eating-full-support-for-pizzas-and-stews/411864.rss">Project Insanity , object based eating! full support for pizzas and stews!</source>
      </item>
  </channel>
</rss>
