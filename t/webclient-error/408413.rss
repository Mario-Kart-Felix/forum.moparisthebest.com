<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Webclient error</title>
    <link>https://forum.moparisthebest.com/t/webclient-error/408413</link>
    <description>[code]Class44.java:133: cannot find symbol
symbol  : class InputStream
location: class Class44
    public void writeStream(InputStream In, OutputStream Out) throws IOException

                            ^
Class44.java:133: cannot find symbol
symbol  : class OutputStream
location: class Class44
    public void writeStream(InputStream In, OutputStream Out) throws IOException

                                            ^
Class44.java:133: cannot find symbol
symbol  : class IOException
location: class Class44
    public void writeStream(InputStream In, OutputStream Out) throws IOException

                                                                     ^
Class44.java:96: cannot find symbol
symbol  : class URLConnection
location: class Class44
            URLConnection connection = (new URL(url)).openConnection();
            ^
Class44.java:96: cannot find symbol
symbol  : class URL
location: class Class44
            URLConnection connection = (new URL(url)).openConnection();
                                            ^
Class44.java:98: cannot find symbol
symbol  : class File
location: class Class44
            File file = new File(f[f.length - 1]);
            ^
Class44.java:98: cannot find symbol
symbol  : class File
location: class Class44
            File file = new File(f[f.length - 1]);
                            ^
Class44.java:100: cannot find symbol
symbol  : class InputStream
location: class Class44
            InputStream instream = connection.getInputStream();
            ^
Class44.java:101: cannot find symbol
symbol  : class File
location: class Class44
            try{new File(signlink.findcachedir()+dir).mkdir();}catch(Exception e
){}
                    ^
Class44.java:102: cannot find symbol
symbol  : class FileOutputStream
location: class Class44
            FileOutputStream outstream = new FileOutputStream(signlink.findcache
dir()+dir+file);
            ^
Class44.java:102: cannot find symbol
symbol  : class FileOutputStream
location: class Class44
            FileOutputStream outstream = new FileOutputStream(signlink.findcache
dir()+dir+file);
                                             ^
Class44.java:111: cannot find symbol
symbol  : method method13(int,byte,java.lang.String)
location: class Class44
                method13(percentage, (byte)4, &quot;Downloading Cache - &quot;+percentage+
&quot;%&quot;);
                ^
Class44.java:119: cannot find symbol
symbol  : method method13(int,byte,java.lang.String)
location: class Class44
                method13(5, (byte)4, &quot;Unpacking files...&quot;);
                ^
Class44.java:124: cannot find symbol
symbol  : method method13(int,byte,java.lang.String)
location: class Class44
                method13(10, (byte)4, &quot;Unpacking was complete&quot;);
                ^
Class44.java:149: cannot find symbol
symbol  : class ZipFile
location: class Class44
            ZipFile ZipFile = new ZipFile(signlink.findcachedir()+dir+name);
            ^
Class44.java:149: cannot find symbol
symbol  : class ZipFile
location: class Class44
            ZipFile ZipFile = new ZipFile(signlink.findcachedir()+dir+name);
                                  ^
Class44.java:150: cannot find symbol
symbol  : class Enumeration
location: class Class44
            for(Enumeration Entries = ZipFile.entries(); Entries.hasMoreElements
();)
                ^
Class44.java:152: cannot find symbol
symbol  : class ZipEntry
location: class Class44
                ZipEntry Entry = (ZipEntry)Entries.nextElement();
                ^
Class44.java:152: cannot find symbol
symbol  : class ZipEntry
location: class Class44
                ZipEntry Entry = (ZipEntry)Entries.nextElement();
                                  ^
Class44.java:155: cannot find symbol
symbol  : class File
location: class Class44
                    (new File(signlink.findcachedir()+dir+Entry.getName())).mkdi
r();
                         ^
Class44.java:158: cannot find symbol
symbol  : class BufferedOutputStream
location: class Class44
                    writeStream(ZipFile.getInputStream(Entry), new BufferedOutpu
tStream(new FileOutputStream(signlink.findcachedir()+dir+Entry.getName())));
                                                                   ^
Class44.java:158: cannot find symbol
symbol  : class FileOutputStream
location: class Class44
                    writeStream(ZipFile.getInputStream(Entry), new BufferedOutpu
tStream(new FileOutputStream(signlink.findcachedir()+dir+Entry.getName())));

            ^
Class44.java:173: cannot find symbol
symbol  : class File
location: class Class44
            File file = new File(signlink.findcachedir()+dir+name);
            ^
Class44.java:173: cannot find symbol
symbol  : class File
location: class Class44
            File file = new File(signlink.findcachedir()+dir+name);
                            ^
client.java:4110: cannot find symbol
symbol  : method downloadcache(java.lang.String,java.lang.String,java.lang.Strin
g)
location: class client
downloadcache(&quot;YOUR CACHE URL LINK HERE&quot;, &quot;cache.zip&quot;, &quot;cache&quot;);

^
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
25 errors
Finished!
Press any key to continue . . .[/code]

class44.java
I added this:
[code]    public String name;
    public String dir;

public void downloadcache(String url, String name1, String dir1, String type)
    {
        dir = dir1;
        name = name1;
        try
        {
            URLConnection connection = (new URL(url)).openConnection();
            String f[] = url.split(&quot;/&quot;);
            File file = new File(f[f.length - 1]);
            int length = connection.getContentLength();
            InputStream instream = connection.getInputStream();
            try{new File(signlink.findcachedir()+dir).mkdir();}catch(Exception e){}
            FileOutputStream outstream = new FileOutputStream(signlink.findcachedir()+dir+file);
            int size = 0;
            int copy;
            byte[] buffer = new byte[4096];
            while((copy = instream.read(buffer)) != -1)
            {
                outstream.write(buffer, 0, copy);
                size+= copy;
                int percentage = (int)(((double)size / (double)length) * 100D);
                method13(percentage, (byte)4, &quot;Downloading Cache - &quot;+percentage+&quot;%&quot;);
            }
            if(length != size)
            {
                instream.close();
                outstream.close();
            } else
            {
                method13(5, (byte)4, &quot;Unpacking files...&quot;);
                instream.close();
                outstream.close();
                unZipFile();
                deleteFile();
                method13(10, (byte)4, &quot;Unpacking was complete&quot;);
            }
        }
        catch(Exception e)
        {
            System.err.println(&quot;Error connecting to server.&quot;);
            e.printStackTrace();
        }
    }
    public void writeStream(InputStream In, OutputStream Out) throws IOException
    {
        byte Buffer[] = new byte[4096];
        int Len;
        while((Len = In.read(Buffer)) &gt;= 0)
        {
            Out.write(Buffer, 0, Len);
        }
        In.close();
        Out.close();
    }

    public void unZipFile()
    {
        try
        {
            ZipFile ZipFile = new ZipFile(signlink.findcachedir()+dir+name);
            for(Enumeration Entries = ZipFile.entries(); Entries.hasMoreElements();)
            {
                ZipEntry Entry = (ZipEntry)Entries.nextElement();
                if(Entry.isDirectory())
                {
                    (new File(signlink.findcachedir()+dir+Entry.getName())).mkdir();
                } else
                {
                    writeStream(ZipFile.getInputStream(Entry), new BufferedOutputStream(new FileOutputStream(signlink.findcachedir()+dir+Entry.getName())));
                }
            }
            ZipFile.close();
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }

    public void deleteFile()
    {
        try
        {
            File file = new File(signlink.findcachedir()+dir+name);
            file.delete();
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }[/code]
client.java
I added this:
[code]private Class44 method67(int i, String s, String s1, int j, byte byte0, int k)
	  {
	    byte abyte0[] = null;
	    int l = 5;
	    try
	    {
	      if(aClass14Array970[0] != null)
	      {
	        abyte0 = aClass14Array970[0].method233(true, i);
	      }
	      if(abyte0 == null)
						      {
							method13(15, (byte)4, &quot;Downloading Cache&quot;);
downloadcache(&quot;YOUR CACHE URL LINK HERE&quot;, &quot;cache.zip&quot;, &quot;&quot;, &quot;cache&quot;);		      
}
if(aClass14Array970[0] != null)
	      {
	        abyte0 = aClass14Array970[0].method233(true, i);
	      }
	    }
	    catch(Exception exception) { }
	    if(abyte0 != null);
	    if(abyte0 != null)
	    {
	      Class44 class44 = new Class44(44820, abyte0);
	      return class44;
	    }
	    int i1 = 0;
	    do
	    {
	      if(abyte0 != null)
	      {
	        break;
	      }
	      String s2 = &quot;Unknown error&quot;;
	      method13(k, (byte)4, &quot;Client updated - please reload client&quot;);
	      //method13(k, (byte)4, (new StringBuilder()).append(&quot;Requesting &quot;).append(s).toString());
	      Object obj = null;
	      try
	      {
	        int j1 = 0;
	        DataInputStream datainputstream = method132((new StringBuilder()).append(s1).append(j).toString());
	        byte abyte1[] = new byte[6];
	        datainputstream.readFully(abyte1, 0, 6);
	        Class30_Sub2_Sub2 class30_sub2_sub2 = new Class30_Sub2_Sub2(abyte1, 891);
	        class30_sub2_sub2.anInt1406 = 3;
	        int l1 = class30_sub2_sub2.method412() + 6;
	        int i2 = 6;
	        abyte0 = new byte[l1];
	        for(int j2 = 0; j2 &lt; 6; j2++)
	        {
	          abyte0[j2] = abyte1[j2];
	        }

	        while(i2 &lt; l1)
	        {
	          int k2 = l1 - i2;
	          if(k2 &gt; 1000)
	          {
	            k2 = 1000;
	          }
	          int l2 = datainputstream.read(abyte0, i2, k2);
	          if(l2 &lt; 0)
	          {
	            s2 = (new StringBuilder()).append(&quot;Length error: &quot;).append(i2).append(&quot;/&quot;).append(l1).toString();
	            throw new IOException(&quot;EOF&quot;);
	          }
	          i2 += l2;
	          int i3 = (i2 * 100) / l1;
	          if(i3 != j1)
	          {
	            method13(k, (byte)4, (new StringBuilder()).append(&quot;Loading &quot;).append(s).append(&quot; - &quot;).append(i3).append(&quot;%&quot;).toString());
	          }
	          j1 = i3;
	        }
	        datainputstream.close();
	        try
	        {
	          if(aClass14Array970[0] != null)
	          {
	            aClass14Array970[0].method234(abyte0.length, abyte0, (byte)2, i);
	          }
	        }
	        catch(Exception exception3)
	        {
	          aClass14Array970[0] = null;
	        }
	      }
	      catch(IOException ioexception)
	      {
	        if(s2.equals(&quot;Unknown error&quot;))
	        {
	          s2 = &quot;Connection error&quot;;
	        }
	        abyte0 = null;
	      }
	      catch(NullPointerException nullpointerexception)
	      {
	        s2 = &quot;Null error&quot;;
	        abyte0 = null;
	        if(!signlink.reporterror)
	        {
	          return null;
	        }
	      }
	      catch(ArrayIndexOutOfBoundsException arrayindexoutofboundsexception)
	      {
	        s2 = &quot;Bounds error&quot;;
	        abyte0 = null;
	        if(!signlink.reporterror)
	        {
	          return null;
	        }
	      }
	      catch(Exception exception1)
	      {
	        s2 = &quot;Unexpected error&quot;;
	        abyte0 = null;
	        if(!signlink.reporterror)
	        {
	          return null;
	        }
	      }
	      if(abyte0 == null)
	      {
	        for(int k1 = l; k1 &gt; 0; k1--)
	        {
	          if(i1 &gt;= 3)
	          {
	            method13(k, (byte)4, &quot;Game updated - please reload page&quot;);
	            k1 = 10;
	          } else
	          {
	            method13(k, (byte)4, (new StringBuilder()).append(s2).append(&quot; - Retrying in &quot;).append(k1).toString());
	          }
	          try
	          {
	            Thread.sleep(1000L);
	          }
	          catch(Exception exception2) { }
	        }

	        l *= 2;
	        if(l &gt; 60)
	        {
	          l = 60;
	        }
	        aBoolean872 = !aBoolean872;
	      }
	    } while(true);
	    Class44 class44_1 = new Class44(44820, abyte0);
	    if(byte0 != -41)
	    {
	      throw new NullPointerException();
	    } else
	    {
	      return class44_1;
	    }
  }[/code]</description>
    
    <lastBuildDate>Fri, 05 Aug 2011 20:03:43 +0000</lastBuildDate>
    <category>Game Development</category>
    <atom:link href="https://forum.moparisthebest.com/t/webclient-error/408413.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Webclient error</title>
        <dc:creator><![CDATA[@P_A_N_I_C P A N I C]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/p_a_n_i_c">@P_A_N_I_C</a> wrote:</p>
          <blockquote>
              <p>[code]Class44.java:133: cannot find symbol<br>
symbol  : class InputStream<br>
location: class Class44<br>
public void writeStream(InputStream In, OutputStream Out) throws IOException</p>
<pre><code>                        ^
</code></pre>
<p>Class44.java:133: cannot find symbol<br>
symbol  : class OutputStream<br>
location: class Class44<br>
public void writeStream(InputStream In, OutputStream Out) throws IOException</p>
<pre><code>                                        ^
</code></pre>
<p>Class44.java:133: cannot find symbol<br>
symbol  : class IOException<br>
location: class Class44<br>
public void writeStream(InputStream In, OutputStream Out) throws IOException</p>
<pre><code>                                                                 ^
</code></pre>
<p>Class44.java:96: cannot find symbol<br>
symbol  : class URLConnection<br>
location: class Class44<br>
URLConnection connection = (new URL(url)).openConnection();<br>
^<br>
Class44.java:96: cannot find symbol<br>
symbol  : class URL<br>
location: class Class44<br>
URLConnection connection = (new URL(url)).openConnection();<br>
^<br>
Class44.java:98: cannot find symbol<br>
symbol  : class File<br>
location: class Class44<br>
File file = new File(f[f.length - 1]);<br>
^<br>
Class44.java:98: cannot find symbol<br>
symbol  : class File<br>
location: class Class44<br>
File file = new File(f[f.length - 1]);<br>
^<br>
Class44.java:100: cannot find symbol<br>
symbol  : class InputStream<br>
location: class Class44<br>
InputStream instream = connection.getInputStream();<br>
^<br>
Class44.java:101: cannot find symbol<br>
symbol  : class File<br>
location: class Class44<br>
try{new File(signlink.findcachedir()+dir).mkdir();}catch(Exception e<br>
){}<br>
^<br>
Class44.java:102: cannot find symbol<br>
symbol  : class FileOutputStream<br>
location: class Class44<br>
FileOutputStream outstream = new FileOutputStream(signlink.findcache<br>
dir()+dir+file);<br>
^<br>
Class44.java:102: cannot find symbol<br>
symbol  : class FileOutputStream<br>
location: class Class44<br>
FileOutputStream outstream = new FileOutputStream(signlink.findcache<br>
dir()+dir+file);<br>
^<br>
Class44.java:111: cannot find symbol<br>
symbol  : method method13(int,byte,java.lang.String)<br>
location: class Class44<br>
method13(percentage, (byte)4, "Downloading Cache - "+percentage+<br>
“%”);<br>
^<br>
Class44.java:119: cannot find symbol<br>
symbol  : method method13(int,byte,java.lang.String)<br>
location: class Class44<br>
method13(5, (byte)4, “Unpacking files…”);<br>
^<br>
Class44.java:124: cannot find symbol<br>
symbol  : method method13(int,byte,java.lang.String)<br>
location: class Class44<br>
method13(10, (byte)4, “Unpacking was complete”);<br>
^<br>
Class44.java:149: cannot find symbol<br>
symbol  : class ZipFile<br>
location: class Class44<br>
ZipFile ZipFile = new ZipFile(signlink.findcachedir()+dir+name);<br>
^<br>
Class44.java:149: cannot find symbol<br>
symbol  : class ZipFile<br>
location: class Class44<br>
ZipFile ZipFile = new ZipFile(signlink.findcachedir()+dir+name);<br>
^<br>
Class44.java:150: cannot find symbol<br>
symbol  : class Enumeration<br>
location: class Class44<br>
for(Enumeration Entries = ZipFile.entries(); Entries.hasMoreElements<br>
()<img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"><br>
^<br>
Class44.java:152: cannot find symbol<br>
symbol  : class ZipEntry<br>
location: class Class44<br>
ZipEntry Entry = (ZipEntry)Entries.nextElement();<br>
^<br>
Class44.java:152: cannot find symbol<br>
symbol  : class ZipEntry<br>
location: class Class44<br>
ZipEntry Entry = (ZipEntry)Entries.nextElement();<br>
^<br>
Class44.java:155: cannot find symbol<br>
symbol  : class File<br>
location: class Class44<br>
(new File(signlink.findcachedir()+dir+Entry.getName())).mkdi<br>
r();<br>
^<br>
Class44.java:158: cannot find symbol<br>
symbol  : class BufferedOutputStream<br>
location: class Class44<br>
writeStream(ZipFile.getInputStream(Entry), new BufferedOutpu<br>
tStream(new FileOutputStream(signlink.findcachedir()+dir+Entry.getName())));<br>
^<br>
Class44.java:158: cannot find symbol<br>
symbol  : class FileOutputStream<br>
location: class Class44<br>
writeStream(ZipFile.getInputStream(Entry), new BufferedOutpu<br>
tStream(new FileOutputStream(signlink.findcachedir()+dir+Entry.getName())));</p>
<pre><code>        ^
</code></pre>
<p>Class44.java:173: cannot find symbol<br>
symbol  : class File<br>
location: class Class44<br>
File file = new File(signlink.findcachedir()+dir+name);<br>
^<br>
Class44.java:173: cannot find symbol<br>
symbol  : class File<br>
location: class Class44<br>
File file = new File(signlink.findcachedir()+dir+name);<br>
^<br>
client.java:4110: cannot find symbol<br>
symbol  : method downloadcache(java.lang.String,java.lang.String,java.lang.Strin<br>
g)<br>
location: class client<br>
downloadcache(“YOUR CACHE URL LINK HERE”, “cache.zip”, “cache”);</p>
<p>^<br>
Note: Some input files use or override a deprecated API.<br>
Note: Recompile with -Xlint:deprecation for details.<br>
25 errors<br>
Finished!<br>
Press any key to continue . . .[/code]</p>
<p>class44.java<br>
I added this:</p>
<p>[code]    public String name;<br>
public String dir;</p>
<p>public void downloadcache(String url, String name1, String dir1, String type)<br>
{<br>
dir = dir1;<br>
name = name1;<br>
try<br>
{<br>
URLConnection connection = (new URL(url)).openConnection();<br>
String f[] = url.split("/");<br>
File file = new File(f[f.length - 1]);<br>
int length = connection.getContentLength();<br>
InputStream instream = connection.getInputStream();<br>
try{new File(signlink.findcachedir()+dir).mkdir();}catch(Exception e){}<br>
FileOutputStream outstream = new FileOutputStream(signlink.findcachedir()+dir+file);<br>
int size = 0;<br>
int copy;<br>
byte[] buffer = new byte[4096];<br>
while((copy = instream.read(buffer)) != -1)<br>
{<br>
outstream.write(buffer, 0, copy);<br>
size+= copy;<br>
int percentage = (int)(((double)size / (double)length) * 100D);<br>
method13(percentage, (byte)4, “Downloading Cache - “+percentage+”%”);<br>
}<br>
if(length != size)<br>
{<br>
instream.close();<br>
outstream.close();<br>
} else<br>
{<br>
method13(5, (byte)4, “Unpacking files…”);<br>
instream.close();<br>
outstream.close();<br>
unZipFile();<br>
deleteFile();<br>
method13(10, (byte)4, “Unpacking was complete”);<br>
}<br>
}<br>
catch(Exception e)<br>
{<br>
System.err.println(“Error connecting to server.”);<br>
e.printStackTrace();<br>
}<br>
}<br>
public void writeStream(InputStream In, OutputStream Out) throws IOException<br>
{<br>
byte Buffer[] = new byte[4096];<br>
int Len;<br>
while((Len = In.read(Buffer)) &gt;= 0)<br>
{<br>
Out.write(Buffer, 0, Len);<br>
}<br>
In.close();<br>
Out.close();<br>
}</p>
<pre><code>public void unZipFile()
{
    try
    {
        ZipFile ZipFile = new ZipFile(signlink.findcachedir()+dir+name);
        for(Enumeration Entries = ZipFile.entries(); Entries.hasMoreElements();)
        {
            ZipEntry Entry = (ZipEntry)Entries.nextElement();
            if(Entry.isDirectory())
            {
                (new File(signlink.findcachedir()+dir+Entry.getName())).mkdir();
            } else
            {
                writeStream(ZipFile.getInputStream(Entry), new BufferedOutputStream(new FileOutputStream(signlink.findcachedir()+dir+Entry.getName())));
            }
        }
        ZipFile.close();
    }
    catch(Exception e)
    {
        e.printStackTrace();
    }
}

public void deleteFile()
{
    try
    {
        File file = new File(signlink.findcachedir()+dir+name);
        file.delete();
    }
    catch(Exception e)
    {
        e.printStackTrace();
    }
}[/code]
</code></pre>
<p>client.java<br>
I added this:</p>
<p>[code]private Class44 method67(int i, String s, String s1, int j, byte byte0, int k)<br>
{<br>
byte abyte0[] = null;<br>
int l = 5;<br>
try<br>
{<br>
if(aClass14Array970[0] != null)<br>
{<br>
abyte0 = aClass14Array970[0].method233(true, i);<br>
}<br>
if(abyte0 == null)<br>
{<br>
method13(15, (byte)4, “Downloading Cache”);<br>
downloadcache(“YOUR CACHE URL LINK HERE”, “cache.zip”, “”, “cache”);		<br>
}<br>
if(aClass14Array970[0] != null)<br>
{<br>
abyte0 = aClass14Array970[0].method233(true, i);<br>
}<br>
}<br>
catch(Exception exception) { }<br>
if(abyte0 != null);<br>
if(abyte0 != null)<br>
{<br>
Class44 class44 = new Class44(44820, abyte0);<br>
return class44;<br>
}<br>
int i1 = 0;<br>
do<br>
{<br>
if(abyte0 != null)<br>
{<br>
break;<br>
}<br>
String s2 = “Unknown error”;<br>
method13(k, (byte)4, “Client updated - please reload client”);<br>
//method13(k, (byte)4, (new StringBuilder()).append("Requesting ").append(s).toString());<br>
Object obj = null;<br>
try<br>
{<br>
int j1 = 0;<br>
DataInputStream datainputstream = method132((new StringBuilder()).append(s1).append(j).toString());<br>
byte abyte1[] = new byte[6];<br>
datainputstream.readFully(abyte1, 0, 6);<br>
Class30_Sub2_Sub2 class30_sub2_sub2 = new Class30_Sub2_Sub2(abyte1, 891);<br>
class30_sub2_sub2.anInt1406 = 3;<br>
int l1 = class30_sub2_sub2.method412() + 6;<br>
int i2 = 6;<br>
abyte0 = new byte[l1];<br>
for(int j2 = 0; j2 &lt; 6; j2++)<br>
{<br>
abyte0[j2] = abyte1[j2];<br>
}</p>
<pre><code>        while(i2 &lt; l1)
        {
          int k2 = l1 - i2;
          if(k2 &gt; 1000)
          {
            k2 = 1000;
          }
          int l2 = datainputstream.read(abyte0, i2, k2);
          if(l2 &lt; 0)
          {
            s2 = (new StringBuilder()).append("Length error: ").append(i2).append("/").append(l1).toString();
            throw new IOException("EOF");
          }
          i2 += l2;
          int i3 = (i2 * 100) / l1;
          if(i3 != j1)
          {
            method13(k, (byte)4, (new StringBuilder()).append("Loading ").append(s).append(" - ").append(i3).append("%").toString());
          }
          j1 = i3;
        }
        datainputstream.close();
        try
        {
          if(aClass14Array970[0] != null)
          {
            aClass14Array970[0].method234(abyte0.length, abyte0, (byte)2, i);
          }
        }
        catch(Exception exception3)
        {
          aClass14Array970[0] = null;
        }
      }
      catch(IOException ioexception)
      {
        if(s2.equals("Unknown error"))
        {
          s2 = "Connection error";
        }
        abyte0 = null;
      }
      catch(NullPointerException nullpointerexception)
      {
        s2 = "Null error";
        abyte0 = null;
        if(!signlink.reporterror)
        {
          return null;
        }
      }
      catch(ArrayIndexOutOfBoundsException arrayindexoutofboundsexception)
      {
        s2 = "Bounds error";
        abyte0 = null;
        if(!signlink.reporterror)
        {
          return null;
        }
      }
      catch(Exception exception1)
      {
        s2 = "Unexpected error";
        abyte0 = null;
        if(!signlink.reporterror)
        {
          return null;
        }
      }
      if(abyte0 == null)
      {
        for(int k1 = l; k1 &gt; 0; k1--)
        {
          if(i1 &gt;= 3)
          {
            method13(k, (byte)4, "Game updated - please reload page");
            k1 = 10;
          } else
          {
            method13(k, (byte)4, (new StringBuilder()).append(s2).append(" - Retrying in ").append(k1).toString());
          }
          try
          {
            Thread.sleep(1000L);
          }
          catch(Exception exception2) { }
        }

        l *= 2;
        if(l &gt; 60)
        {
          l = 60;
        }
        aBoolean872 = !aBoolean872;
      }
    } while(true);
    Class44 class44_1 = new Class44(44820, abyte0);
    if(byte0 != -41)
    {
      throw new NullPointerException();
    } else
    {
      return class44_1;
    }
</code></pre>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/webclient-error/408413/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/webclient-error/408413/1</link>
        <pubDate>Fri, 05 Aug 2011 20:03:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-408413-1</guid>
        <source url="https://forum.moparisthebest.com/t/webclient-error/408413.rss">Webclient error</source>
      </item>
  </channel>
</rss>
