<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Heron Programming Language</title>
    <link>https://forum.moparisthebest.com/t/heron-programming-language/538110</link>
    <description>Have you found Java to be too verbose, C/C++ to be too fiddly with memory or Lisp to have too many god damn parentheses?
Well fear no more! I unveil to you the greatest language ever: Heron.

It&#39;s easy to use syntax, is very speedy and is very expressful.

[b]Here are the types:[/b]

[i]STORK[/i] - a byte (char)
[i]WOODPECKER[/i] - a short (usually 16 bits)
[i]HERON [/i]- an integer (usually 32 bits)
[i]EAGLE[/i] - a long integer (usually 64 bits)
[i]PIGEON[/i] - single precision floating point number
[i]FLAMINGO [/i]- double precision floating point number
[i]EGG[/i] - void
[i]HERON BEAK[/i] - a string





[b]Hello World[/b]

[code=heron]
heronstart {
    squark(&quot;Hello World\n&quot;);
    spit POTS_AND_PANS_ARE_CLEAN;
}
[/code]
As you can see, is a curly brace language and the entry point for a heron program is enclosed in the heronstart brace. The standard output function is squark and the program is ended by spitting &quot;POTS_AND_PANS_ARE_CLEAN&quot;.





[b]Control Structures[/b]

[u]A conditional condition:[/u]
[code=heron]
contemplate(2 heron_agreement 3) {
    squark(&quot;2 and 3 are not the same thing holy shit&quot;);
} otherwise {
    squark(&quot;2 and 3 are indeed not in agreement&quot;);
}
[/code]
The following code checks the equality of two HERON&#39;s (2 and 3), as you can see the first block is if the condition is true, and the code inside the otherwise block is if it is false. Obviously 2 and 3 are not in heron agreement so the otherwise block executes and &quot;2 and 3 are indeed not in agreement&quot; is printed.

[u]A loop construct:[/u]
[code=heron]
when(POTS_AND_PANS_ARE_MESSY) {
    messwithpotsandpans();
}
[/code]
The block is executed when the condition within the when parentheses is true. This example is actually an infinite loop as the pots and pans are always messy. The function messwithpotsandpans is built into the language, it should never be run by inexperienced programmers.

[u]Switch between different situations:[/u]
[code=heron]
HERON egg = 4;

lay_eggs(egg) {
   this_egg 0:
       squark(&quot;This egg is a zero!!\n&quot;);
   break;

   this_egg 1:
       squark(&quot;This egg is a one!!!!\n&quot;);
   break;

   this_egg 2:
       squark(&quot;This egg is a twoooo!!\n&quot;);
   break;

   cracked_egg:
       squark(&quot;no eggs matched :(\n&quot;);
}

[/code]
As you can see, we declare a new HERON called egg and used the lay_egg construct to choose between different egg situations. In the example, the egg has the value 4, the program will then check if it&#39;s equal to 0,1,2 using the &quot;this_egg&quot; blocks. If the value is not any of these, the &quot;cracked_egg&quot; block is executed.

[u]There are some other constructs i will not elaborate on. Please look at the compiler source to find the syntax[/u]




[b]Variables and arithmetic [/b]
As you saw in the previous example, you can make variables using the inbuilt types! For example:

[code=heron]
HERON yep;
HERON a = 3;
HERON b = 5;

HERON c = a heron_sum b;
HERON d = a heron_snatch b;
HERON e = a heron_reproduce b;

contemplate(c nonono heron_agreement d) {
    squark(&quot;c and d do not agree indeed\n&quot;);
}

[/code]
The first line shows a declaration of the variable &quot;yep&quot; with type HERON, the next two lines show two variables being declared and initialised, b =3, c=5.
The next set of lines speak for themselves. After executing, c = 8, d = -2 and e = 15.
The last statement looks like a normal contemplate condition, however as you can see, it contains the &quot;nonono&quot; keyword. This keyword negates an expression, so in this case the condition questions, &quot;does c and d NOT agree&quot;.




[b]Functions![/b]

All functions in Heron take the basic shape:
[code=heron]
TYPE name_of_function(PARAMTYPE paramname, PARAMTYPE2 paramname2 etc etc) {
    // code goes here
    spit value to give back;
}
[/code]

So for example here is a function that finds the square of a number
[code=heron]
HERON sq(HERON x) {
    spit x heron_reproduce x;
}

heronstart {
    squark(&quot;%d\n&quot;,sq(5));
}
[/code]
The value of &quot;x heron_reproduce x&quot; is calculated and then spat out the function to whatever called it. In this case, it was called inside a squark call in heronstart. The value 5 was passed to the function so the result should be 25.

This works for all the types but that is beyond the scope of this tutorial.




[b]Compiler[/b]
The source code to the compiler can be found here:
https://gist.github.com/fatcookies/8260960

[u]Dependencies:[/u]
gcc (must be in /bin/ on linux based systems. gcc++ must be included in the PATH of windows based systems)

[u]How to use[/u]
[i]nameofexecutable heronsourcefile[/i]
If compiled successfully, an executable called a should be generated.


[b]The future[/b]
Thank you for reading, Heron shall rule.

rep++ to anyone that writes some programs in Heron
also, rep++ to anyone who can convert compiler into Heron Programming Language.</description>
    
    <lastBuildDate>Mon, 06 Jan 2014 06:31:02 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/heron-programming-language/538110.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Heron Programming Language</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <p>You didn’t use Bison/YACC, BAD!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/heron-programming-language/538110/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/heron-programming-language/538110/15</link>
        <pubDate>Mon, 06 Jan 2014 06:31:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-538110-15</guid>
        <source url="https://forum.moparisthebest.com/t/heron-programming-language/538110.rss">Heron Programming Language</source>
      </item>
      <item>
        <title>Heron Programming Language</title>
        <dc:creator><![CDATA[@Pwnd Pwnd]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pwnd">@Pwnd</a> wrote:</p>
          <blockquote>
              <p>Wait, so you mean to tell me there’s only one way to spell heron squawking?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/heron-programming-language/538110/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/heron-programming-language/538110/14</link>
        <pubDate>Sun, 05 Jan 2014 19:34:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-538110-14</guid>
        <source url="https://forum.moparisthebest.com/t/heron-programming-language/538110.rss">Heron Programming Language</source>
      </item>
      <item>
        <title>Heron Programming Language</title>
        <dc:creator><![CDATA[@bootnecklad bootnecklad]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bootnecklad">@bootnecklad</a> wrote:</p>
          <blockquote>
              <p>did you mean “squawk” like the sound a bird makes</p>
<p>and not “squark”, which apparently is “the supersymmetric counterpart of a quark, with spin 0 instead of 12.”</p>
<p>[quote=“Fat Cookies, post:1, topic:538110”]<code>
heronstart {
    squark("Hello World\n");
    spit POTS_AND_PANS_ARE_CLEAN;
}
</code></p>
<p>The standard output function is squark and the program is ended by spitting “POTS_AND_PANS_ARE_CLEAN”.[/quote]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/heron-programming-language/538110/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/heron-programming-language/538110/13</link>
        <pubDate>Sun, 05 Jan 2014 18:47:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-538110-13</guid>
        <source url="https://forum.moparisthebest.com/t/heron-programming-language/538110.rss">Heron Programming Language</source>
      </item>
      <item>
        <title>Heron Programming Language</title>
        <dc:creator><![CDATA[@Ruby_Forums_Coder Ruby]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ruby_forums_coder">@Ruby_Forums_Coder</a> wrote:</p>
          <blockquote>
              <p>Such heron. Very beak.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/heron-programming-language/538110/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/heron-programming-language/538110/12</link>
        <pubDate>Sun, 05 Jan 2014 18:11:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-538110-12</guid>
        <source url="https://forum.moparisthebest.com/t/heron-programming-language/538110.rss">Heron Programming Language</source>
      </item>
      <item>
        <title>Heron Programming Language</title>
        <dc:creator><![CDATA[@silabsoft RuneAgent]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silabsoft">@silabsoft</a> wrote:</p>
          <blockquote>
              <p>I got 99 problems but a stork aint one.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/heron-programming-language/538110/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/heron-programming-language/538110/11</link>
        <pubDate>Sun, 05 Jan 2014 17:06:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-538110-11</guid>
        <source url="https://forum.moparisthebest.com/t/heron-programming-language/538110.rss">Heron Programming Language</source>
      </item>
      <item>
        <title>Heron Programming Language</title>
        <dc:creator><![CDATA[@imthenull imthenull]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imthenull">@imthenull</a> wrote:</p>
          <blockquote>
              <p>[quote=“Arcik, post:9, topic:538110”]fake one that makes use of C++'s macros lmaoo <img src="https://forum.moparisthebest.com/images/emoji/twitter/cool.png?v=5" title=":cool:" class="emoji" alt=":cool:">[/quote]c</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/heron-programming-language/538110/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/heron-programming-language/538110/10</link>
        <pubDate>Sun, 05 Jan 2014 17:02:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-538110-10</guid>
        <source url="https://forum.moparisthebest.com/t/heron-programming-language/538110.rss">Heron Programming Language</source>
      </item>
      <item>
        <title>Heron Programming Language</title>
        <dc:creator><![CDATA[@Ashi Ashi]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ashi">@Ashi</a> wrote:</p>
          <blockquote>
              <p>fake one that makes use of C++'s macros lmaoo <img src="https://forum.moparisthebest.com/images/emoji/twitter/cool.png?v=5" title=":cool:" class="emoji" alt=":cool:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/heron-programming-language/538110/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/heron-programming-language/538110/9</link>
        <pubDate>Sun, 05 Jan 2014 16:45:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-538110-9</guid>
        <source url="https://forum.moparisthebest.com/t/heron-programming-language/538110.rss">Heron Programming Language</source>
      </item>
      <item>
        <title>Heron Programming Language</title>
        <dc:creator><![CDATA[@imthenull imthenull]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imthenull">@imthenull</a> wrote:</p>
          <blockquote>
              <p>k wrote my own compiler in heron. had to modify the original source some.</p>
<p>heron.c</p>
<p>[code=c]<span class="hashtag">#include</span> &lt;stdio.h&gt;<br>
<span class="hashtag">#include</span> &lt;stdlib.h&gt;</p>
<p>const char * MACROS[] = {<br>
“HERON int”,<br>
“STORK char”,<br>
“EAGLE long”,<br>
“WOODPECKER short”,<br>
“EGG void”,<br>
“FLAMINGO double”,<br>
“PIGEON float”,<br>
“featherless unsigned”,<br>
“heronstart int main(int baby_count, char ** baby_names)”,<br>
“BEAK *”,<br>
“contemplate(x) if(x)”,<br>
“otherwise else”,<br>
“permanent const”,<br>
“spit return”,<br>
“POTS_AND_PANS_ARE_MESSY 1”,<br>
“POTS_AND_PANS_ARE_CLEAN 0”,<br>
“when while”,<br>
“fly for”,<br>
“lay_eggs switch”,<br>
“this_egg case”,<br>
“cracked_egg default”,<br>
“squark(…) printf(<strong>VA_ARGS</strong>)”,<br>
“nonono !”,<br>
“heron_agreement ==”,<br>
“heron_nonagreement !=”,<br>
“bigger_than &gt;”,<br>
“smaller_than &lt;”,<br>
“bigger_or_same_as &gt;=”,<br>
“smaller_or_same_as &lt;=”,<br>
“heron_snatch -”,<br>
“heron_reproduce <em>",<br>
“heron_sum +”,<br>
“heron_split /”,<br>
“heron_size sizeof”,<br>
"FOOT FILE</em>”,<br>
“cook_foot(f, a) fopen(f, a)”,<br>
“drop_foot(f) fclose(f)”,<br>
“foot_end(f) fseek(f, 0, SEEK_END)”,<br>
“inspect_foot(f) ftell(f)”,<br>
“uninspect_foot(f) rewind(f)”,<br>
“peel_foot_skin(r, s, f) fread(r, 1, s, f)”,<br>
“draw_on_foot(s, f) fputs(s, f)”,<br>
“draw_on_footf(f, s, …) fprintf(f, s, <strong>VA_ARGS</strong>)”,<br>
“heron_baby(s) malloc(s)”,<br>
“heron_net§ free§”,<br>
“dead_heron NULL”,<br>
“draw_stork_beak(s, f, …) sprintf(s, f, <strong>VA_ARGS</strong>)”,<br>
“stork_beak_to_heron(x) atoi(x)”,<br>
“heron_live(s) system(s)”<br>
};<br>
const char * MISC[] = {"<span class="hashtag">#include</span> &lt;stdio.h&gt;",<br>
"<span class="hashtag">#include</span> &lt;stdlib.h&gt;"};</p>
<p>const int NUM_MISC = sizeof(MISC) / sizeof(char*);<br>
const int NUM_MACROS = sizeof(MACROS) / sizeof(char*);</p>
<p>char* oldtext;</p>
<p>int main(int argc, char ** argv) {<br>
if(argc &gt;= 2) {<br>
add_heron(argv[1]);<br>
compile(argv[1]);<br>
repair(argv[1]);<br>
} else {<br>
printf(“no file lol\n”);<br>
}<br>
}</p>
<p>char *read_from_file(const char *filename) {<br>
long int size = 0;<br>
FILE *file = fopen(filename, “rb+”);</p>
<pre><code>if(!file) {
    fputs("File error.\n", stderr);
    return NULL;
}

fseek(file, 0, SEEK_END);
size = ftell(file);
rewind(file);

char *result = (char *) malloc(size);
if(!result) {
    fputs("Memory error.\n", stderr);
    return NULL;
}

if(fread(result, 1, size, file) != size) {
    fputs("Read error.\n", stderr);
    return NULL;
}

fclose(file);
return result;
</code></pre>
<p>}</p>
<p>int repair(char * filename) {<br>
FILE * input_file;<br>
if(!(input_file = fopen(filename,“wb”))) {<br>
return -1;<br>
}</p>
<pre><code>fputs(oldtext,input_file);
fclose(input_file);
return 0;
</code></pre>
<p>}</p>
<p>int add_heron(char * filename) {<br>
FILE * input_file;<br>
oldtext = read_from_file(filename);</p>
<pre><code>if(!(input_file = fopen(filename,"w"))) {
	return -1;
}

int i;	
for(i = 0; i &lt; NUM_MACROS; i++) {
	fprintf(input_file, "#define %s\n",MACROS[i]);
}
for(i = 0; i &lt; NUM_MISC; i++) {
	fprintf(input_file, "%s\n",MISC[i]);
}

fputs(oldtext,input_file);
fclose(input_file);
return 0;
</code></pre>
<p>}</p>
<p>int compile(char * filename) {<br>
char temp[512];<br>
<span class="hashtag">#if</span> defined _WIN32<br>
<span class="hashtag">#define</span> exe “.exe”<br>
<span class="hashtag">#else</span><br>
<span class="hashtag">#define</span> exe “”<br>
<span class="hashtag">#endif</span><br>
sprintf(temp, “gcc%s -w -x c %s”,exe,filename);<br>
return system((char *)temp);<br>
}[/code]</p>
<p>compiler.heron</p>
<p>[code=heron]permanent STORK BEAK includes[] = {<br>
"<span class="hashtag">#include</span> &lt;stdio.h&gt;",<br>
"<span class="hashtag">#include</span> &lt;stdlib.h&gt;"<br>
};</p>
<p>permanent STORK BEAK macros[] = {<br>
“HERON int”,<br>
“STORK char”,<br>
“EAGLE long”,<br>
“WOODPECKER short”,<br>
“EGG void”,<br>
“FLAMINGO double”,<br>
“PIGEON float”,<br>
“featherless unsigned”,<br>
“heronstart int main(int baby_count, char ** baby_names)”,<br>
“BEAK *”,<br>
“contemplate(x) if(x)”,<br>
“otherwise else”,<br>
“permanent const”,<br>
“spit return”,<br>
“POTS_AND_PANS_ARE_MESSY 1”,<br>
“POTS_AND_PANS_ARE_CLEAN 0”,<br>
“when while”,<br>
“fly for”,<br>
“lay_eggs switch”,<br>
“this_egg case”,<br>
“cracked_egg default”,<br>
“squark(…) printf(<strong>VA_ARGS</strong>)”,<br>
“nonono !”,<br>
“heron_agreement ==”,<br>
“heron_nonagreement !=”,<br>
“bigger_than &gt;”,<br>
“smaller_than &lt;”,<br>
“bigger_or_same_as &gt;=”,<br>
“smaller_or_same_as &lt;=”,<br>
“heron_snatch -”,<br>
“heron_reproduce <em>",<br>
“heron_sum +”,<br>
“heron_split /”,<br>
“heron_size sizeof”,<br>
"FOOT FILE</em>”,<br>
“cook_foot(f, a) fopen(f, a)”,<br>
“drop_foot(f) fclose(f)”,<br>
“foot_end(f) fseek(f, 0, SEEK_END)”,<br>
“inspect_foot(f) ftell(f)”,<br>
“uninspect_foot(f) rewind(f)”,<br>
“peel_foot_skin(r, s, f) fread(r, 1, s, f)”,<br>
“draw_on_foot(s, f) fputs(s, f)”,<br>
“draw_on_footf(f, s, …) fprintf(f, s, <strong>VA_ARGS</strong>)”,<br>
“heron_baby(s) malloc(s)”,<br>
“heron_net§ free§”,<br>
“dead_heron NULL”,<br>
“draw_stork_beak(s, f, …) sprintf(s, f, <strong>VA_ARGS</strong>)”,<br>
“stork_beak_to_heron(x) atoi(x)”,<br>
“heron_live(s) system(s)”<br>
};</p>
<p>permanent HERON includes_len = heron_size(includes) heron_split heron_size(STORK BEAK);<br>
permanent HERON macros_len = heron_size(macros) heron_split heron_size(STORK BEAK);</p>
<p>STORK BEAK oldtext;</p>
<p>STORK BEAK read_from_file(permanent STORK BEAK name);<br>
HERON add_heron(permanent STORK BEAK name);<br>
HERON compile(permanent STORK BEAK name);<br>
HERON repair(permanent STORK BEAK name);</p>
<p>heronstart {<br>
squark("%s\n", baby_names[1]);<br>
contemplate (baby_count bigger_or_same_as 2) {<br>
add_heron(baby_names[1]);<br>
compile(baby_names[1]);<br>
repair(baby_names[1]);<br>
} otherwise {<br>
squark(“hcc: no file lol\n”);<br>
}<br>
}</p>
<p>STORK BEAK read_from_file(permanent STORK BEAK name) {<br>
EAGLE HERON size = 0;<br>
FOOT file = cook_foot(name, “rb+”);</p>
<pre><code>contemplate (nonono file) {
	squark("File error.\n");
	spit dead_heron;
}

foot_end(file);
size = inspect_foot(file);
uninspect_foot(file);

STORK BEAK contents = heron_baby(size);
contemplate (nonono contents) {
	squark("Memory error.\n");
	spit dead_heron;
}

contemplate (peel_foot_skin(contents, size, file) heron_nonagreement size) {
	squark("Read error.\n");
	spit dead_heron;
}
drop_foot(file);
spit contents;
</code></pre>
<p>}</p>
<p>HERON add_heron(permanent STORK BEAK name) {<br>
oldtext = read_from_file(name);</p>
<pre><code>FOOT file = cook_foot(name, "wb");
contemplate (nonono file) {
	spit -1;
}

HERON i;
fly (i = 0; i &lt; includes_len; i++) {
	draw_on_footf(file, "%s\n", includes[i]);
}
fly (i = 0; i &lt; macros_len; i++) {
	draw_on_footf(file, "#define %s\n", macros[i]);
}
draw_on_foot(oldtext, file);
drop_foot(file);
spit 0;
</code></pre>
<p>}</p>
<p>HERON compile(permanent STORK BEAK name) {<br>
STORK temp[512];<br>
<span class="hashtag">#if</span> defined _WIN32<br>
<span class="hashtag">#define</span> exe “.exe”<br>
<span class="hashtag">#else</span><br>
<span class="hashtag">#define</span> exe “”<br>
<span class="hashtag">#endif</span><br>
draw_stork_beak(temp, “gcc%s -w -x c %s”, exe, name);<br>
spit heron_live(temp);<br>
}</p>
<p>HERON repair(permanent STORK BEAK name) {<br>
FOOT file = cook_foot(name, “wb”);<br>
contemplate (nonono file) {<br>
spit -1;<br>
}<br>
draw_on_foot(oldtext, file);<br>
drop_foot(file);<br>
spit 0;<br>
}[/code]</p>
<p>and a test:</p>
<p><code>heronstart {
	FOOT foot = cook_foot("hi.txt", "w");
	contemplate (nonono foot) {
		squark("Error creating file.\n");
		spit -1;
	}
	draw_on_foot("Hello world!", foot);
	drop_foot(foot);
	spit 0;
}</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/heron-programming-language/538110/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/heron-programming-language/538110/8</link>
        <pubDate>Sun, 05 Jan 2014 06:34:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-538110-8</guid>
        <source url="https://forum.moparisthebest.com/t/heron-programming-language/538110.rss">Heron Programming Language</source>
      </item>
      <item>
        <title>Heron Programming Language</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>going to use on my rsps thank u cookies</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/heron-programming-language/538110/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/heron-programming-language/538110/7</link>
        <pubDate>Sun, 05 Jan 2014 06:31:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-538110-7</guid>
        <source url="https://forum.moparisthebest.com/t/heron-programming-language/538110.rss">Heron Programming Language</source>
      </item>
      <item>
        <title>Heron Programming Language</title>
        <dc:creator><![CDATA[@artem543 artem543]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/artem543">@artem543</a> wrote:</p>
          <blockquote>
              <p>OMFG! This made my day!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/heron-programming-language/538110/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/heron-programming-language/538110/6</link>
        <pubDate>Sun, 05 Jan 2014 06:18:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-538110-6</guid>
        <source url="https://forum.moparisthebest.com/t/heron-programming-language/538110.rss">Heron Programming Language</source>
      </item>
      <item>
        <title>Heron Programming Language</title>
        <dc:creator><![CDATA[@whackatre Whackatre]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/whackatre">@whackatre</a> wrote:</p>
          <blockquote>
              <p>10/10. Thank you for this awesome, wicked, eye-opening language.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/heron-programming-language/538110/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/heron-programming-language/538110/5</link>
        <pubDate>Sun, 05 Jan 2014 05:18:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-538110-5</guid>
        <source url="https://forum.moparisthebest.com/t/heron-programming-language/538110.rss">Heron Programming Language</source>
      </item>
      <item>
        <title>Heron Programming Language</title>
        <dc:creator><![CDATA[@imthenull imthenull]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imthenull">@imthenull</a> wrote:</p>
          <blockquote>
              <p>how high were you when you did this?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/heron-programming-language/538110/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/heron-programming-language/538110/4</link>
        <pubDate>Sun, 05 Jan 2014 00:46:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-538110-4</guid>
        <source url="https://forum.moparisthebest.com/t/heron-programming-language/538110.rss">Heron Programming Language</source>
      </item>
      <item>
        <title>Heron Programming Language</title>
        <dc:creator><![CDATA[@z z]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/z">@z</a> wrote:</p>
          <blockquote>
              <p><img src="http://i.imgur.com/dt33mh7.gif" alt width="" height=""></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/heron-programming-language/538110/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/heron-programming-language/538110/3</link>
        <pubDate>Sat, 04 Jan 2014 22:28:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-538110-3</guid>
        <source url="https://forum.moparisthebest.com/t/heron-programming-language/538110.rss">Heron Programming Language</source>
      </item>
      <item>
        <title>Heron Programming Language</title>
        <dc:creator><![CDATA[@The_Un-Named The Un-Named]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_un-named">@The_Un-Named</a> wrote:</p>
          <blockquote>
              <p>This thread is brought to you by <a href="http://planetside.wikia.com/wiki/Grey_Heron_Shipping" data-bbcode="true" rel="nofollow noopener">Grey Heron Shipping</a>, a subsidiary of Grey Heron Industries®.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/heron-programming-language/538110/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/heron-programming-language/538110/2</link>
        <pubDate>Sat, 04 Jan 2014 22:25:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-538110-2</guid>
        <source url="https://forum.moparisthebest.com/t/heron-programming-language/538110.rss">Heron Programming Language</source>
      </item>
      <item>
        <title>Heron Programming Language</title>
        <dc:creator><![CDATA[@Fat_Cookies Fat Cookies]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/fat_cookies">@Fat_Cookies</a> wrote:</p>
          <blockquote>
              <p>Have you found Java to be too verbose, C/C++ to be too fiddly with memory or Lisp to have too many god damn parentheses?<br>
Well fear no more! I unveil to you the greatest language ever: Heron.</p>
<p>It’s easy to use syntax, is very speedy and is very expressful.</p>
<p><span class="bbcode-b">Here are the types:</span></p>
<p><span class="bbcode-i">STORK</span> - a byte (char)<br>
<span class="bbcode-i">WOODPECKER</span> - a short (usually 16 bits)<br>
<span class="bbcode-i">HERON </span>- an integer (usually 32 bits)<br>
<span class="bbcode-i">EAGLE</span> - a long integer (usually 64 bits)<br>
<span class="bbcode-i">PIGEON</span> - single precision floating point number<br>
<span class="bbcode-i">FLAMINGO </span>- double precision floating point number<br>
<span class="bbcode-i">EGG</span> - void<br>
<span class="bbcode-i">HERON BEAK</span> - a string</p>
<p><span class="bbcode-b">Hello World</span></p>
<pre><code class="lang-auto">heronstart {
    squark("Hello World\n");
    spit POTS_AND_PANS_ARE_CLEAN;
}</code></pre>
<p>As you can see, is a curly brace language and the entry point for a heron program is enclosed in the heronstart brace. The standard output function is squark and the program is ended by spitting “POTS_AND_PANS_ARE_CLEAN”.</p>
<p><span class="bbcode-b">Control Structures</span></p>
<p><span class="bbcode-u">A conditional condition:</span></p>
<pre><code class="lang-auto">contemplate(2 heron_agreement 3) {
    squark("2 and 3 are not the same thing holy shit");
} otherwise {
    squark("2 and 3 are indeed not in agreement");
}</code></pre>
<p>The following code checks the equality of two HERON’s (2 and 3), as you can see the first block is if the condition is true, and the code inside the otherwise block is if it is false. Obviously 2 and 3 are not in heron agreement so the otherwise block executes and “2 and 3 are indeed not in agreement” is printed.</p>
<p><span class="bbcode-u">A loop construct:</span></p>
<pre><code class="lang-auto">when(POTS_AND_PANS_ARE_MESSY) {
    messwithpotsandpans();
}</code></pre>
<p>The block is executed when the condition within the when parentheses is true. This example is actually an infinite loop as the pots and pans are always messy. The function messwithpotsandpans is built into the language, it should never be run by inexperienced programmers.</p>
<p><span class="bbcode-u">Switch between different situations:</span></p>
<pre><code class="lang-auto">HERON egg = 4;

lay_eggs(egg) {
   this_egg 0:
       squark("This egg is a zero!!\n");
   break;

   this_egg 1:
       squark("This egg is a one!!!!\n");
   break;

   this_egg 2:
       squark("This egg is a twoooo!!\n");
   break;

   cracked_egg:
       squark("no eggs matched :(\n");
}
</code></pre>
<p>As you can see, we declare a new HERON called egg and used the lay_egg construct to choose between different egg situations. In the example, the egg has the value 4, the program will then check if it’s equal to 0,1,2 using the “this_egg” blocks. If the value is not any of these, the “cracked_egg” block is executed.</p>
<p><span class="bbcode-u">There are some other constructs i will not elaborate on. Please look at the compiler source to find the syntax</span></p>
<p><span class="bbcode-b">Variables and arithmetic </span><br>
As you saw in the previous example, you can make variables using the inbuilt types! For example:</p>
<pre><code class="lang-auto">HERON yep;
HERON a = 3;
HERON b = 5;

HERON c = a heron_sum b;
HERON d = a heron_snatch b;
HERON e = a heron_reproduce b;

contemplate(c nonono heron_agreement d) {
    squark("c and d do not agree indeed\n");
}
</code></pre>
<p>The first line shows a declaration of the variable “yep” with type HERON, the next two lines show two variables being declared and initialised, b =3, c=5.<br>
The next set of lines speak for themselves. After executing, c = 8, d = -2 and e = 15.<br>
The last statement looks like a normal contemplate condition, however as you can see, it contains the “nonono” keyword. This keyword negates an expression, so in this case the condition questions, “does c and d NOT agree”.</p>
<p><span class="bbcode-b">Functions!</span></p>
<p>All functions in Heron take the basic shape:</p>
<pre><code class="lang-auto">TYPE name_of_function(PARAMTYPE paramname, PARAMTYPE2 paramname2 etc etc) {
    // code goes here
    spit value to give back;
}</code></pre>
<p>So for example here is a function that finds the square of a number</p>
<pre><code class="lang-auto">HERON sq(HERON x) {
    spit x heron_reproduce x;
}

heronstart {
    squark("%d\n",sq(5));
}</code></pre>
<p>The value of “x heron_reproduce x” is calculated and then spat out the function to whatever called it. In this case, it was called inside a squark call in heronstart. The value 5 was passed to the function so the result should be 25.</p>
<p>This works for all the types but that is beyond the scope of this tutorial.</p>
<p><span class="bbcode-b">Compiler</span><br>
The source code to the compiler can be found here:<br>
<a href="https://gist.github.com/fatcookies/8260960" class="onebox" target="_blank">https://gist.github.com/fatcookies/8260960</a></p>
<p><span class="bbcode-u">Dependencies:</span><br>
gcc (must be in /bin/ on linux based systems. gcc++ must be included in the PATH of windows based systems)</p>
<p><span class="bbcode-u">How to use</span><br>
<span class="bbcode-i">nameofexecutable heronsourcefile</span><br>
If compiled successfully, an executable called a should be generated.</p>
<p><span class="bbcode-b">The future</span><br>
Thank you for reading, Heron shall rule.</p>
<p>rep++ to anyone that writes some programs in Heron<br>
also, rep++ to anyone who can convert compiler into Heron Programming Language.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/heron-programming-language/538110/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/heron-programming-language/538110/1</link>
        <pubDate>Sat, 04 Jan 2014 22:21:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-538110-1</guid>
        <source url="https://forum.moparisthebest.com/t/heron-programming-language/538110.rss">Heron Programming Language</source>
      </item>
  </channel>
</rss>
