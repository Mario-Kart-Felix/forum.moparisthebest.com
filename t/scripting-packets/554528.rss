<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Scripting Packets</title>
    <link>https://forum.moparisthebest.com/t/scripting-packets/554528</link>
    <description>Would the overhead of handling outgoing packets with Nashorn crush the performance? Wasn&#39;t sure the exact board this falls under.

An example of the code i&#39;m using. Haven&#39;t run into any notable problems and after timing out the process it doesn&#39;t appear to be notably slower but I still wanted to get some other opinions before continuing down this route.

[code=java5]var PacketBuilder = Java.type(&#39;com.constellation.channel.packet.PacketBuilder&#39;);
var PacketHeader = Java.type(&#39;com.constellation.channel.packet.PacketHeader&#39;);
var ByteTransformation = Java.type(&#39;com.constellation.channel.packet.ByteTransformation&#39;);

function sendMessage(player, message) {
	var builder = new PacketBuilder(PacketHeader.VARIABLE_BYTE_PACKET_HEADER, 253);
	builder.writeString(message);
	player.getChannel().write(builder);
};

function sendSidebar(player, barIndex, interfaceIndex) {
	var builder = new PacketBuilder(PacketHeader.STANDARD_PACKET_HEADER, 71);
	builder.writeShort(interfaceIndex, ByteTransformation.STANDARD);
	builder.writeByte(barIndex, ByteTransformation.ADDITIONAL); 
	player.getChannel().write(builder);
};[/code]

[code=java5]package com.constellation.model;

import javax.script.ScriptException;

import com.constellation.ApplicationContext;

public class GameScript {
	
	/**
	 * The player calling the script.
	 */
	private final Player player;
	
	/**
	 * The overloaded class constructor used for the instantiation of
	 * this class file.
	 * @param player The player calling the script.
	 */
	public GameScript(Player player) {
		this.player = player;
	}

	/**
	 * Sends a message to the player&#39;s chat-box.
	 * @param message The message to be sent.
	 */
	public void sendMessage(String message) {
		call(Constants.OUT_PACKET_SCRIPT, &quot;sendMessage&quot;, player, message);
	}
	
	/**
	 * Sends a side-bar interface on the player&#39;s game-frame.
	 * @param barIndex The placement index.
	 * @param interfaceIndex The interface index.
	 */
	public void sendSidebar(int barIndex, int interfaceIndex) {
		call(Constants.OUT_PACKET_SCRIPT, &quot;sendSidebar&quot;, player, barIndex, interfaceIndex);
	}
	
	/**
	 * Calls a function from a game script.
	 * @param script The script being called.
	 * @param function The function defined in the script.
	 * @param parameters The parameters the function takes.
	 */
	public void call(String script, String function, Object... parameters) {
		try {
			ApplicationContext.getInstance().getNashorn().callFunction(script, function, parameters);
		} catch (NoSuchMethodException | ScriptException exception) {
			exception.printStackTrace();
		}
	}
	
	/**
	 * Returns an instance of the player calling the script.
	 * @return The returned instance.
	 */
	public Player getPlayer() {
		return player;
	}
}[/code]</description>
    
    <lastBuildDate>Sat, 23 Jan 2016 20:40:37 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/scripting-packets/554528.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Scripting Packets</title>
        <dc:creator><![CDATA[@Death_Style Death Style]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/death_style">@Death_Style</a> wrote:</p>
          <blockquote>
              <p>but that’s pretty much standard outside of js</p>
<p>I’m mostly curious why sini thinks go is better than node since he felt the need to say so, and most of the time the reasons I hear are things node already does. callbacks already exist in node and if you are doing an operation that blocks the thread that sounds like a bad idea to begin with, but in go you could make it a goroutine and not concern yourself. even if you needed to, js already provides it’s own ‘goroutines’ via web workers.</p>
<p>that’s not to say go isn’t better than node but I was hoping to hear something substantial or an actual issue encountered in node</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/scripting-packets/554528/21">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/scripting-packets/554528/21</link>
        <pubDate>Sat, 23 Jan 2016 20:40:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554528-21</guid>
        <source url="https://forum.moparisthebest.com/t/scripting-packets/554528.rss">Scripting Packets</source>
      </item>
      <item>
        <title>Scripting Packets</title>
        <dc:creator><![CDATA[@justaguy justaguy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/justaguy">@justaguy</a> wrote:</p>
          <blockquote>
              <p>[quote=“Death Style, post:16, topic:554528”]justaguy’s explanation doesn’t really convey anything other than it has multithread support</p>
<p>goroutines? lmao never mind[/quote]</p>
<p>Also the fact it uses a synchronous, blocking model is also important in my explanation because Node’s is the opposite since the point of that post was to compare the two. If you’re really that interested you might as well just look it up on the internet.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/scripting-packets/554528/20">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/scripting-packets/554528/20</link>
        <pubDate>Sat, 23 Jan 2016 19:50:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554528-20</guid>
        <source url="https://forum.moparisthebest.com/t/scripting-packets/554528.rss">Scripting Packets</source>
      </item>
      <item>
        <title>Scripting Packets</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="18" data-topic="554528">
<div class="title">
<div class="quote-controls"></div>
 Death Style:</div>
<blockquote>
<p>it just sounds like callbacks</p>
</blockquote>
</aside>
<p>Sorta?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/scripting-packets/554528/19">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/scripting-packets/554528/19</link>
        <pubDate>Sat, 23 Jan 2016 12:50:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554528-19</guid>
        <source url="https://forum.moparisthebest.com/t/scripting-packets/554528.rss">Scripting Packets</source>
      </item>
      <item>
        <title>Scripting Packets</title>
        <dc:creator><![CDATA[@Death_Style Death Style]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/death_style">@Death_Style</a> wrote:</p>
          <blockquote>
              <p>it just sounds like callbacks</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/scripting-packets/554528/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/scripting-packets/554528/18</link>
        <pubDate>Sat, 23 Jan 2016 12:42:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554528-18</guid>
        <source url="https://forum.moparisthebest.com/t/scripting-packets/554528.rss">Scripting Packets</source>
      </item>
      <item>
        <title>Scripting Packets</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>[quote=“Death Style, post:16, topic:554528”]justaguy’s explanation doesn’t really convey anything other than it has multithread support</p>
<p>goroutines? lmao never mind[/quote]</p>
<p>Go has a keyword which you can use to run functions asyncronously and then use channels to send information between those goroutines or whatever they coined it so that information can be transmitted safely between threads which are managed by golang. It’s the whole basis of the language which makes it very good for server applications.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/scripting-packets/554528/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/scripting-packets/554528/17</link>
        <pubDate>Sat, 23 Jan 2016 11:55:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554528-17</guid>
        <source url="https://forum.moparisthebest.com/t/scripting-packets/554528.rss">Scripting Packets</source>
      </item>
      <item>
        <title>Scripting Packets</title>
        <dc:creator><![CDATA[@Death_Style Death Style]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/death_style">@Death_Style</a> wrote:</p>
          <blockquote>
              <p>justaguy’s explanation doesn’t really convey anything other than it has multithread support</p>
<p>goroutines? lmao never mind</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/scripting-packets/554528/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/scripting-packets/554528/16</link>
        <pubDate>Sat, 23 Jan 2016 11:23:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554528-16</guid>
        <source url="https://forum.moparisthebest.com/t/scripting-packets/554528.rss">Scripting Packets</source>
      </item>
      <item>
        <title>Scripting Packets</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>[quote=“justaguy, post:11, topic:554528”][quote author=sini link=topic=673452.msg4503061#msg4503061 date=1453526009]<br>
But go does it better <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"><br>
[/quote]</p>
<p>I don’t know much about Go but iirc it’s a radically different approach than JS/Node. Go has a synchronous, blocking model but is able to multitask better than Node because (among many other things) it’s not restricted to a single-thread by design like Node is. Meanwhile, Node is asynchronous by design and doesn’t block (now with the addition of promises, there’s now a job queue in addition to an event queue).</p>
<p>Both are really interesting nonetheless.[/quote]</p>
<p>Explained it well.</p>
<p>“In Go, a goroutine is swapped out for another one when it blocks on I/O. The Go runtime uses non-blocking I/O syscalls to avoid the operating system blocking the thread so a different goroutine can be run on it while the first is waiting for it’s I/O.”</p>
<p>Another good explanation.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/scripting-packets/554528/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/scripting-packets/554528/15</link>
        <pubDate>Sat, 23 Jan 2016 11:14:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554528-15</guid>
        <source url="https://forum.moparisthebest.com/t/scripting-packets/554528.rss">Scripting Packets</source>
      </item>
      <item>
        <title>Scripting Packets</title>
        <dc:creator><![CDATA[@Death_Style Death Style]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/death_style">@Death_Style</a> wrote:</p>
          <blockquote>
              <p>can you explain then? I haven’t heard nearly enough about go</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/scripting-packets/554528/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/scripting-packets/554528/14</link>
        <pubDate>Sat, 23 Jan 2016 06:36:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554528-14</guid>
        <source url="https://forum.moparisthebest.com/t/scripting-packets/554528.rss">Scripting Packets</source>
      </item>
      <item>
        <title>Scripting Packets</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="12" data-topic="554528">
<div class="title">
<div class="quote-controls"></div>
 Death Style:</div>
<blockquote>
<p>have you used go sini?</p>
</blockquote>
</aside>
<p>Yes</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/scripting-packets/554528/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/scripting-packets/554528/13</link>
        <pubDate>Sat, 23 Jan 2016 05:47:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554528-13</guid>
        <source url="https://forum.moparisthebest.com/t/scripting-packets/554528.rss">Scripting Packets</source>
      </item>
      <item>
        <title>Scripting Packets</title>
        <dc:creator><![CDATA[@Death_Style Death Style]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/death_style">@Death_Style</a> wrote:</p>
          <blockquote>
              <p>have you used go sini?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/scripting-packets/554528/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/scripting-packets/554528/12</link>
        <pubDate>Sat, 23 Jan 2016 05:43:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554528-12</guid>
        <source url="https://forum.moparisthebest.com/t/scripting-packets/554528.rss">Scripting Packets</source>
      </item>
      <item>
        <title>Scripting Packets</title>
        <dc:creator><![CDATA[@justaguy justaguy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/justaguy">@justaguy</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="10" data-topic="554528">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/sini/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> sini:</div>
<blockquote>
<p>But go does it better <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>
</blockquote>
</aside>
<p>I don’t know much about Go but iirc it’s a radically different approach than JS/Node. Go has a synchronous, blocking model but is able to multitask better than Node because (among many other things) it’s not restricted to a single-thread by design like Node is. Meanwhile, Node is asynchronous by design and doesn’t block (now with the addition of promises, there’s now a job queue in addition to an event queue).</p>
<p>Both are really interesting nonetheless.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/scripting-packets/554528/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/scripting-packets/554528/11</link>
        <pubDate>Sat, 23 Jan 2016 05:34:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554528-11</guid>
        <source url="https://forum.moparisthebest.com/t/scripting-packets/554528.rss">Scripting Packets</source>
      </item>
      <item>
        <title>Scripting Packets</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>But go does it better <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/scripting-packets/554528/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/scripting-packets/554528/10</link>
        <pubDate>Sat, 23 Jan 2016 05:13:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554528-10</guid>
        <source url="https://forum.moparisthebest.com/t/scripting-packets/554528.rss">Scripting Packets</source>
      </item>
      <item>
        <title>Scripting Packets</title>
        <dc:creator><![CDATA[@justaguy justaguy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/justaguy">@justaguy</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="8" data-topic="554528">
<div class="title">
<div class="quote-controls"></div>
 Death Style:</div>
<blockquote>
<p>I wrote a proof of concept server in node it’s not like being a scripting language necessarily means it’s slow</p>
</blockquote>
</aside>
<p>As a matter of fact, JavaScript does asynchrony very well which is one of many reasons Node became huge.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/scripting-packets/554528/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/scripting-packets/554528/9</link>
        <pubDate>Sat, 23 Jan 2016 05:08:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554528-9</guid>
        <source url="https://forum.moparisthebest.com/t/scripting-packets/554528.rss">Scripting Packets</source>
      </item>
      <item>
        <title>Scripting Packets</title>
        <dc:creator><![CDATA[@Death_Style Death Style]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/death_style">@Death_Style</a> wrote:</p>
          <blockquote>
              <p>I wrote a proof of concept server in node it’s not like being a scripting language necessarily means it’s slow</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/scripting-packets/554528/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/scripting-packets/554528/8</link>
        <pubDate>Sat, 23 Jan 2016 04:55:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554528-8</guid>
        <source url="https://forum.moparisthebest.com/t/scripting-packets/554528.rss">Scripting Packets</source>
      </item>
      <item>
        <title>Scripting Packets</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>if you’re worried about performance make sure you do a proper benchmark</p>
<p>also, just out of curiosity why would you want to build packets in a scripting language? isn’t that something that should be done in pure Java?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/scripting-packets/554528/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/scripting-packets/554528/7</link>
        <pubDate>Sat, 23 Jan 2016 04:24:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554528-7</guid>
        <source url="https://forum.moparisthebest.com/t/scripting-packets/554528.rss">Scripting Packets</source>
      </item>
      <item>
        <title>Scripting Packets</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>[quote=“Miss Silabsoft, post:5, topic:554528”][quote author=sini link=topic=673452.msg4503029#msg4503029 date=1453504577]<br>
Wouldn’t be that expensive but I’m not of a fan of directly calling functions when you could use SAMs. If you call a java function (bound to the engine) that takes a simple functional interface Java will negotiate it for you.</p>
<p>ie:</p>
<pre><code class="lang-auto">Something.call(function(hi) {});</code></pre>
<pre><code class="lang-auto">void call(A myCallback) { /** ... */ }</code></pre>
<p>[/quote]<br>
this, However placing your message building in scripting can be useful when you are reverse engineering a protocol as you can make changes on the fly (or rebuild and reload the class)[/quote]</p>
<p><img src="https://forum.moparisthebest.com/images/emoji/twitter/frowning.png?v=5" title=":frowning:" class="emoji" alt=":frowning:"> We use a DI framework where this is near impossible. I wish I could have done this.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/scripting-packets/554528/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/scripting-packets/554528/6</link>
        <pubDate>Sat, 23 Jan 2016 03:21:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554528-6</guid>
        <source url="https://forum.moparisthebest.com/t/scripting-packets/554528.rss">Scripting Packets</source>
      </item>
      <item>
        <title>Scripting Packets</title>
        <dc:creator><![CDATA[@silabsoft RuneAgent]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silabsoft">@silabsoft</a> wrote:</p>
          <blockquote>
              <p>[quote=“sini, post:2, topic:554528”]Wouldn’t be that expensive but I’m not of a fan of directly calling functions when you could use SAMs. If you call a java function (bound to the engine) that takes a simple functional interface Java will negotiate it for you.</p>
<p>ie:</p>
<pre><code class="lang-auto">Something.call(function(hi) {});</code></pre>
<p><code>
void call(A myCallback) { /** ... */ }
</code>[/quote]<br>
this, However placing your message building in scripting can be useful when you are reverse engineering a protocol as you can make changes on the fly (or rebuild and reload the class)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/scripting-packets/554528/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/scripting-packets/554528/5</link>
        <pubDate>Sat, 23 Jan 2016 02:55:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554528-5</guid>
        <source url="https://forum.moparisthebest.com/t/scripting-packets/554528.rss">Scripting Packets</source>
      </item>
      <item>
        <title>Scripting Packets</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>Just as a design suggestion you typically want to just expose points in your scripts that you can use to configure java based bindings.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/scripting-packets/554528/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/scripting-packets/554528/4</link>
        <pubDate>Fri, 22 Jan 2016 23:58:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554528-4</guid>
        <source url="https://forum.moparisthebest.com/t/scripting-packets/554528.rss">Scripting Packets</source>
      </item>
      <item>
        <title>Scripting Packets</title>
        <dc:creator><![CDATA[@Vix Vix]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/vix">@Vix</a> wrote:</p>
          <blockquote>
              <p>[quote=“sini, post:2, topic:554528”]Wouldn’t be that expensive but I’m not of a fan of directly calling functions when you could use SAMs. If you call a java function (bound to the engine) that takes a simple functional interface Java will negotiate it for you.</p>
<p>ie:</p>
<pre><code class="lang-auto">Something.call(function(hi) {});</code></pre>
<p><code>
void call(A myCallback) { /** ... */ }
</code>[/quote]</p>
<p>Will look into it, thanks!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/scripting-packets/554528/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/scripting-packets/554528/3</link>
        <pubDate>Fri, 22 Jan 2016 23:21:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554528-3</guid>
        <source url="https://forum.moparisthebest.com/t/scripting-packets/554528.rss">Scripting Packets</source>
      </item>
      <item>
        <title>Scripting Packets</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>Wouldn’t be that expensive but I’m not of a fan of directly calling functions when you could use SAMs. If you call a java function (bound to the engine) that takes a simple functional interface Java will negotiate it for you.</p>
<p>ie:</p>
<pre><code class="lang-auto">Something.call(function(hi) {});</code></pre>
<pre><code class="lang-auto">void call(A myCallback) { /** ... */ }</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/scripting-packets/554528/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/scripting-packets/554528/2</link>
        <pubDate>Fri, 22 Jan 2016 23:16:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554528-2</guid>
        <source url="https://forum.moparisthebest.com/t/scripting-packets/554528.rss">Scripting Packets</source>
      </item>
      <item>
        <title>Scripting Packets</title>
        <dc:creator><![CDATA[@Vix Vix]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/vix">@Vix</a> wrote:</p>
          <blockquote>
              <p>Would the overhead of handling outgoing packets with Nashorn crush the performance? Wasn’t sure the exact board this falls under.</p>
<p>An example of the code i’m using. Haven’t run into any notable problems and after timing out the process it doesn’t appear to be notably slower but I still wanted to get some other opinions before continuing down this route.</p>
<p>[code=java5]var PacketBuilder = Java.type(‘com.constellation.channel.packet.PacketBuilder’);<br>
var PacketHeader = Java.type(‘com.constellation.channel.packet.PacketHeader’);<br>
var ByteTransformation = Java.type(‘com.constellation.channel.packet.ByteTransformation’);</p>
<p>function sendMessage(player, message) {<br>
var builder = new PacketBuilder(PacketHeader.VARIABLE_BYTE_PACKET_HEADER, 253);<br>
builder.writeString(message);<br>
player.getChannel().write(builder);<br>
};</p>
<p>function sendSidebar(player, barIndex, interfaceIndex) {<br>
var builder = new PacketBuilder(PacketHeader.STANDARD_PACKET_HEADER, 71);<br>
builder.writeShort(interfaceIndex, ByteTransformation.STANDARD);<br>
builder.writeByte(barIndex, ByteTransformation.ADDITIONAL);<br>
player.getChannel().write(builder);<br>
};[/code]</p>
<p>[code=java5]package com.constellation.model;</p>
<p>import javax.script.ScriptException;</p>
<p>import com.constellation.ApplicationContext;</p>
<p>public class GameScript {</p>
<pre><code>/**
 * The player calling the script.
 */
private final Player player;

/**
 * The overloaded class constructor used for the instantiation of
 * this class file.
 * @param player The player calling the script.
 */
public GameScript(Player player) {
	this.player = player;
}

/**
 * Sends a message to the player's chat-box.
 * @param message The message to be sent.
 */
public void sendMessage(String message) {
	call(Constants.OUT_PACKET_SCRIPT, "sendMessage", player, message);
}

/**
 * Sends a side-bar interface on the player's game-frame.
 * @param barIndex The placement index.
 * @param interfaceIndex The interface index.
 */
public void sendSidebar(int barIndex, int interfaceIndex) {
	call(Constants.OUT_PACKET_SCRIPT, "sendSidebar", player, barIndex, interfaceIndex);
}

/**
 * Calls a function from a game script.
 * @param script The script being called.
 * @param function The function defined in the script.
 * @param parameters The parameters the function takes.
 */
public void call(String script, String function, Object... parameters) {
	try {
		ApplicationContext.getInstance().getNashorn().callFunction(script, function, parameters);
	} catch (NoSuchMethodException | ScriptException exception) {
		exception.printStackTrace();
	}
}

/**
 * Returns an instance of the player calling the script.
 * @return The returned instance.
 */
public Player getPlayer() {
	return player;
}
</code></pre>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/scripting-packets/554528/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/scripting-packets/554528/1</link>
        <pubDate>Fri, 22 Jan 2016 20:40:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554528-1</guid>
        <source url="https://forum.moparisthebest.com/t/scripting-packets/554528.rss">Scripting Packets</source>
      </item>
  </channel>
</rss>
