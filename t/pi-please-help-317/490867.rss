<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[PI] Please Help [317]</title>
    <link>https://forum.moparisthebest.com/t/pi-please-help-317/490867</link>
    <description>So, I read threw a bunch of guides on changing the auto cache downloader, and this is the error I get. I look threw my cache to see if I have mapsConfig.txt/mapLocation.txt and I do, and I dont know why this error keeps popping up. The places where I changed the cache link is only in the client folder and cachedownloader.java/client.java, I always get this error.

P.S (THE REASON WHY I SPELLED CACHE WRONG &quot;CACEE&quot; IS BECAUSE THE GUIDE SAID YOU HAVE TO UPLOAD THE NAME EXACTLY HOW IT WAS NAMED.)

Error:

[URL=http://imageshack.us/photo/my-images/28/93131062.jpg/][IMG]http://img28.imageshack.us/img28/2171/93131062.jpg[/img][/URL]

Cache Downloader:

[code]
import java.io.File;
import java.io.IOException;
import java.io.OutputStream;
import java.io.FileWriter;
import java.io.BufferedWriter;
import java.io.BufferedOutputStream;
import java.io.BufferedInputStream;
import java.io.FileOutputStream;
import java.io.FileInputStream;
import java.io.InputStream;
import java.net.URLConnection;
import java.net.URL;
import java.util.zip.ZipFile;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;
import java.util.Enumeration;

import sign.signlink;

public class CacheDownloader {

	private client client;

	private final int BUFFER = 1024;

	private final int VERSION = 6; // Version of cache
	//private String cacheLink = &quot;https://www.dropbox.com/s/xnh69l8d4fg6xkt/Cacee.zip&quot;; // Link to cache
	private String cacheLink = &quot;https://www.dropbox.com/s/xnh69l8d4fg6xkt/Cacee.zip&quot;; // Link to cache
	
	private String fileToExtract = getCacheDir() + getArchivedName();

	public CacheDownloader(client client) {
		this.client = client;
	}

	private void drawLoadingText(String text) {
		client.drawLoadingText(35, text);
		//System.out.println(text);
	}


	private void drawLoadingText(int amount, String text) {
		client.drawLoadingText(amount, text);
		//System.out.println(text);
	}

	private String getCacheDir() {
		return signlink.findcachedir();
	}

	private String getCacheLink() {
		return cacheLink;
	}

	private int getCacheVersion() {
		return VERSION;
	}

	public CacheDownloader downloadCache() {
		try {
		File location = new File(getCacheDir());
		File version = new File(getCacheDir() + &quot;/cacheVersion&quot; + getCacheVersion() + &quot;.dat&quot;);
		
		if(!location.exists()) {
			//drawLoadingText(&quot;Loading new Updates....&quot;);
			downloadFile(getCacheLink(), getArchivedName());

			unZip();
			//System.out.println(&quot;UNZIP&quot;);

			BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + &quot;/cacheVersion&quot; + getCacheVersion() + &quot;.dat&quot;));
			versionFile.close();
			deleteZIP(getArchivedName());
		} else {
			if(!version.exists()) {
				//drawLoadingText(&quot;~ First Time Installation, Only Once! ~&quot;);
				downloadFile(getCacheLink(), getArchivedName());

				unZip();
				//System.out.println(&quot;UNZIP&quot;);

				BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + &quot;/cacheVersion&quot; + getCacheVersion() + &quot;.dat&quot;));
				versionFile.close();
				deleteZIP(getArchivedName());

			} else {
				return null;
			}
		}
		} catch(Exception e) {

		}
		return null;
	}
	
	private void downloadFile(String adress, String localFileName) {
		OutputStream out = null;
		URLConnection conn;
		InputStream in = null;
		
		try {

			URL url = new URL(adress);
			out = new BufferedOutputStream(
				new FileOutputStream(getCacheDir() + &quot;/&quot; +localFileName)); 

			conn = url.openConnection();
			in = conn.getInputStream(); 
		
			byte[] data = new byte[BUFFER]; 
	
			int numRead;
			long numWritten = 0;
			int length = conn.getContentLength();

	
			while((numRead = in.read(data)) != -1) {
				out.write(data, 0, numRead);
				numWritten += numRead;

            			int percentage = (int)(((double)numWritten / (double)length) * 100D);
				drawLoadingText(percentage, &quot;Downloading Cache &quot; + percentage + &quot;%...&quot;);

			}

			System.out.println(localFileName + &quot;\t&quot; + numWritten);
			drawLoadingText(&quot;Unpacking..&quot;);

		} catch (Exception exception) {
			exception.printStackTrace();
		} finally {
			try {
				if (in != null) {
					in.close();
				}
				if (out != null) {
					out.close();
				}
			} catch (IOException ioe) {
			}
		}

	}

	private String getArchivedName() {
		int lastSlashIndex = getCacheLink().lastIndexOf(&#39;/&#39;);
		if (lastSlashIndex &gt;= 0 
			&amp;&amp; lastSlashIndex &lt; getCacheLink().length() -1) { 
			return getCacheLink().substring(lastSlashIndex + 1);
		} else {
			//System.err.println(&quot;error retreiving archivaed name.&quot;);
		}
		return &quot;&quot;;
	}




	private void unZip() {

		try {
    			InputStream in = 
				new BufferedInputStream(new FileInputStream(fileToExtract));
			ZipInputStream zin = new ZipInputStream(in);
			ZipEntry e;

			while((e=zin.getNextEntry()) != null) {

               			if(e.isDirectory()) {
					(new File(getCacheDir() + e.getName())).mkdir();
               			} else {

				if (e.getName().equals(fileToExtract)) {
					unzip(zin, fileToExtract);
					break;
				}
       					unzip(zin, getCacheDir() + e.getName());
				}
				//System.out.println(&quot;unzipping2 &quot; + e.getName());
			}
			zin.close();

		} catch(Exception e) {
			e.printStackTrace();
		}
	}

private void deleteZIP(String fileName){
    // A File object to represent the filename
    File f = new File(getCacheDir() + fileName);

    // Make sure the file or directory exists and isn&#39;t write protected
    if (!f.exists())
      throw new IllegalArgumentException(
          &quot;Delete: no such file or directory: &quot; + fileName);

    if (!f.canWrite())
      throw new IllegalArgumentException(&quot;Delete: write protected: &quot;
          + fileName);

    // If it is a directory, make sure it is empty
    if (f.isDirectory()) {
      String[] files = f.list();
      if (files.length &gt; 0)
        throw new IllegalArgumentException(
            &quot;Delete: directory not empty: &quot; + fileName);
    }

    // Attempt to delete it
    boolean success = f.delete();

    if (!success)
      throw new IllegalArgumentException(&quot;Delete: deletion failed&quot;);

	}

	private void unzip(ZipInputStream zin, String s) 
		throws IOException {

		FileOutputStream out = new FileOutputStream(s);
		//System.out.println(&quot;unzipping &quot; + s);
		byte [] b = new byte[BUFFER];
		int len = 0;

		while ((len = zin.read(b)) != -1) {
			out.write(b,0,len);
		}
		out.close();
	}
}
[/code]</description>
    
    <lastBuildDate>Mon, 25 Feb 2013 22:44:25 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/pi-please-help-317/490867.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[PI] Please Help [317]</title>
        <dc:creator><![CDATA[@Creative_I Creative I]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/creative_i">@Creative_I</a> wrote:</p>
          <blockquote>
              <p>[quote=“malimt, post:5, topic:490867”]check if it locates the cache or not, where you have to put ur cache is ( C:/drive and C:/drive/users/ then yourusername… leave it in both places, and as for uploading the cache and changing ur downloader, best place to upload it if its below 200mb is mediafire if above try (uppit . com )</p>
<p>hope this helps goodluck[/quote]</p>
<p>Do I just copy the .zip file and put it in both places ? Because it starts downloading the cache and once it gets to the mapsConfig.txt it just fails on me. I look in the .zip file and its in there. I dont know what to change and so fort for it to locate it correctly, can I get some help on that ?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-please-help-317/490867/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-please-help-317/490867/6</link>
        <pubDate>Mon, 25 Feb 2013 22:44:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-490867-6</guid>
        <source url="https://forum.moparisthebest.com/t/pi-please-help-317/490867.rss">[PI] Please Help [317]</source>
      </item>
      <item>
        <title>[PI] Please Help [317]</title>
        <dc:creator><![CDATA[@malimt malimt]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/malimt">@malimt</a> wrote:</p>
          <blockquote>
              <p>check if it locates the cache or not, where you have to put ur cache is ( C:/drive and C:/drive/users/ then yourusername… leave it in both places, and as for uploading the cache and changing ur downloader, best place to upload it if its below 200mb is mediafire if above try (uppit . com )</p>
<p>hope this helps goodluck</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-please-help-317/490867/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-please-help-317/490867/5</link>
        <pubDate>Sat, 23 Feb 2013 12:44:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-490867-5</guid>
        <source url="https://forum.moparisthebest.com/t/pi-please-help-317/490867.rss">[PI] Please Help [317]</source>
      </item>
      <item>
        <title>[PI] Please Help [317]</title>
        <dc:creator><![CDATA[@Creative_I Creative I]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/creative_i">@Creative_I</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="2" data-topic="490867">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/mr.czar/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Mr.czar:</div>
<blockquote>
<p>Don’t use dropbox, doesn’t seem to work. I had this same error and changing from dropbox fixed it.</p>
</blockquote>
</aside>
<p>What did you use instead ?</p>
<p>[quote=“ohokay, post:3, topic:490867”]It can’t find your mapConfig.txt.</p>
<p>Make sure your cache is in the right place, and that your signlink is finding it in the correct place.</p>
<p>Check to see if C:\Godz-Pkerzcache\Maps\mapConfig.txt actually exists.[/quote]</p>
<p>Signlink is finding the right cache but it just doesnt work on that end.</p>
<p>It does exist.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-please-help-317/490867/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-please-help-317/490867/4</link>
        <pubDate>Sat, 23 Feb 2013 06:28:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-490867-4</guid>
        <source url="https://forum.moparisthebest.com/t/pi-please-help-317/490867.rss">[PI] Please Help [317]</source>
      </item>
      <item>
        <title>[PI] Please Help [317]</title>
        <dc:creator><![CDATA[@ohokay ohokay]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ohokay">@ohokay</a> wrote:</p>
          <blockquote>
              <p>It can’t find your mapConfig.txt.</p>
<p>Make sure your cache is in the right place, and that your signlink is finding it in the correct place.</p>
<p>Check to see if C:\Godz-Pkerzcache\Maps\mapConfig.txt actually exists.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-please-help-317/490867/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-please-help-317/490867/3</link>
        <pubDate>Wed, 20 Feb 2013 11:21:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-490867-3</guid>
        <source url="https://forum.moparisthebest.com/t/pi-please-help-317/490867.rss">[PI] Please Help [317]</source>
      </item>
      <item>
        <title>[PI] Please Help [317]</title>
        <dc:creator><![CDATA[@Mr.czar Mr.czar]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mr.czar">@Mr.czar</a> wrote:</p>
          <blockquote>
              <p>Don’t use dropbox, doesn’t seem to work. I had this same error and changing from dropbox fixed it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-please-help-317/490867/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-please-help-317/490867/2</link>
        <pubDate>Wed, 20 Feb 2013 07:59:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-490867-2</guid>
        <source url="https://forum.moparisthebest.com/t/pi-please-help-317/490867.rss">[PI] Please Help [317]</source>
      </item>
      <item>
        <title>[PI] Please Help [317]</title>
        <dc:creator><![CDATA[@Creative_I Creative I]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/creative_i">@Creative_I</a> wrote:</p>
          <blockquote>
              <p>So, I read threw a bunch of guides on changing the auto cache downloader, and this is the error I get. I look threw my cache to see if I have mapsConfig.txt/mapLocation.txt and I do, and I dont know why this error keeps popping up. The places where I changed the cache link is only in the client folder and cachedownloader.java/client.java, I always get this error.</p>
<p>P.S (THE REASON WHY I SPELLED CACHE WRONG “CACEE” IS BECAUSE THE GUIDE SAID YOU HAVE TO UPLOAD THE NAME EXACTLY HOW IT WAS NAMED.)</p>
<p>Error:</p>
<p><a href="http://imageshack.us/photo/my-images/28/93131062.jpg/" data-bbcode="true" rel="nofollow noopener"><img src="http://img28.imageshack.us/img28/2171/93131062.jpg" alt width="" height=""></a></p>
<p>Cache Downloader:</p>
<pre><code class="lang-auto">import java.io.File;
import java.io.IOException;
import java.io.OutputStream;
import java.io.FileWriter;
import java.io.BufferedWriter;
import java.io.BufferedOutputStream;
import java.io.BufferedInputStream;
import java.io.FileOutputStream;
import java.io.FileInputStream;
import java.io.InputStream;
import java.net.URLConnection;
import java.net.URL;
import java.util.zip.ZipFile;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;
import java.util.Enumeration;

import sign.signlink;

public class CacheDownloader {

	private client client;

	private final int BUFFER = 1024;

	private final int VERSION = 6; // Version of cache
	//private String cacheLink = "https://www.dropbox.com/s/xnh69l8d4fg6xkt/Cacee.zip"; // Link to cache
	private String cacheLink = "https://www.dropbox.com/s/xnh69l8d4fg6xkt/Cacee.zip"; // Link to cache
	
	private String fileToExtract = getCacheDir() + getArchivedName();

	public CacheDownloader(client client) {
		this.client = client;
	}

	private void drawLoadingText(String text) {
		client.drawLoadingText(35, text);
		//System.out.println(text);
	}


	private void drawLoadingText(int amount, String text) {
		client.drawLoadingText(amount, text);
		//System.out.println(text);
	}

	private String getCacheDir() {
		return signlink.findcachedir();
	}

	private String getCacheLink() {
		return cacheLink;
	}

	private int getCacheVersion() {
		return VERSION;
	}

	public CacheDownloader downloadCache() {
		try {
		File location = new File(getCacheDir());
		File version = new File(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat");
		
		if(!location.exists()) {
			//drawLoadingText("Loading new Updates....");
			downloadFile(getCacheLink(), getArchivedName());

			unZip();
			//System.out.println("UNZIP");

			BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat"));
			versionFile.close();
			deleteZIP(getArchivedName());
		} else {
			if(!version.exists()) {
				//drawLoadingText("~ First Time Installation, Only Once! ~");
				downloadFile(getCacheLink(), getArchivedName());

				unZip();
				//System.out.println("UNZIP");

				BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat"));
				versionFile.close();
				deleteZIP(getArchivedName());

			} else {
				return null;
			}
		}
		} catch(Exception e) {

		}
		return null;
	}
	
	private void downloadFile(String adress, String localFileName) {
		OutputStream out = null;
		URLConnection conn;
		InputStream in = null;
		
		try {

			URL url = new URL(adress);
			out = new BufferedOutputStream(
				new FileOutputStream(getCacheDir() + "/" +localFileName)); 

			conn = url.openConnection();
			in = conn.getInputStream(); 
		
			byte[] data = new byte[BUFFER]; 
	
			int numRead;
			long numWritten = 0;
			int length = conn.getContentLength();

	
			while((numRead = in.read(data)) != -1) {
				out.write(data, 0, numRead);
				numWritten += numRead;

            			int percentage = (int)(((double)numWritten / (double)length) * 100D);
				drawLoadingText(percentage, "Downloading Cache " + percentage + "%...");

			}

			System.out.println(localFileName + "\t" + numWritten);
			drawLoadingText("Unpacking..");

		} catch (Exception exception) {
			exception.printStackTrace();
		} finally {
			try {
				if (in != null) {
					in.close();
				}
				if (out != null) {
					out.close();
				}
			} catch (IOException ioe) {
			}
		}

	}

	private String getArchivedName() {
		int lastSlashIndex = getCacheLink().lastIndexOf('/');
		if (lastSlashIndex &gt;= 0 
			&amp;&amp; lastSlashIndex &lt; getCacheLink().length() -1) { 
			return getCacheLink().substring(lastSlashIndex + 1);
		} else {
			//System.err.println("error retreiving archivaed name.");
		}
		return "";
	}




	private void unZip() {

		try {
    			InputStream in = 
				new BufferedInputStream(new FileInputStream(fileToExtract));
			ZipInputStream zin = new ZipInputStream(in);
			ZipEntry e;

			while((e=zin.getNextEntry()) != null) {

               			if(e.isDirectory()) {
					(new File(getCacheDir() + e.getName())).mkdir();
               			} else {

				if (e.getName().equals(fileToExtract)) {
					unzip(zin, fileToExtract);
					break;
				}
       					unzip(zin, getCacheDir() + e.getName());
				}
				//System.out.println("unzipping2 " + e.getName());
			}
			zin.close();

		} catch(Exception e) {
			e.printStackTrace();
		}
	}

private void deleteZIP(String fileName){
    // A File object to represent the filename
    File f = new File(getCacheDir() + fileName);

    // Make sure the file or directory exists and isn't write protected
    if (!f.exists())
      throw new IllegalArgumentException(
          "Delete: no such file or directory: " + fileName);

    if (!f.canWrite())
      throw new IllegalArgumentException("Delete: write protected: "
          + fileName);

    // If it is a directory, make sure it is empty
    if (f.isDirectory()) {
      String[] files = f.list();
      if (files.length &gt; 0)
        throw new IllegalArgumentException(
            "Delete: directory not empty: " + fileName);
    }

    // Attempt to delete it
    boolean success = f.delete();

    if (!success)
      throw new IllegalArgumentException("Delete: deletion failed");

	}

	private void unzip(ZipInputStream zin, String s) 
		throws IOException {

		FileOutputStream out = new FileOutputStream(s);
		//System.out.println("unzipping " + s);
		byte [] b = new byte[BUFFER];
		int len = 0;

		while ((len = zin.read(b)) != -1) {
			out.write(b,0,len);
		}
		out.close();
	}
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-please-help-317/490867/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-please-help-317/490867/1</link>
        <pubDate>Wed, 20 Feb 2013 04:48:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-490867-1</guid>
        <source url="https://forum.moparisthebest.com/t/pi-please-help-317/490867.rss">[PI] Please Help [317]</source>
      </item>
  </channel>
</rss>
