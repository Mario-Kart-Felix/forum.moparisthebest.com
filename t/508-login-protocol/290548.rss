<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>508 Login protocol</title>
    <link>https://forum.moparisthebest.com/t/508-login-protocol/290548</link>
    <description>[size=99pt]I AM SUPER_[/size]

[center][size=6pt]The Login Protocol of 508[/size]


[size=5pt]Overview[/size][/center]

    The RuneScape login protocol of the new engine is less simplistic than it&#39;s forerunner, and does its job. Within it, it securely transmits your private information. In the next few paragraphs I will explain the login protocol.

[center][size=5pt]Handshake[/size][/center]

    Every connection to the RuneScape main &#39;gateway&#39; server sends a single byte of data, mostly well known as the [b]connection type[/b]. The connection type tells the main server which type of connection you wish to initiate. The old engine list consists of:


[ul][*]Login initiation - connection type 14
[*]Update - connection type 15
[*]Fresh login - connection type 16
[*]JAGGRAB - connection type 17
[*]Reconnecting login - connection type 18
[*]Worldlist - varies, connection type 255 in #508
[*]Potentially more.. if more, please post about them![/ul]


    The connection type we will cover in the following paragraphs is the login connection type, 14. After the login handshake initiating connection type, the client writes a small bit of data derived from the logging in player&#39;s username. This is believed to help select the appropriate login server. On successful handshake, the server sends back 8 ignored bytes.

[center][size=5pt]The request[/size][/center]

    At this point, the client reads in one byte, called the [b]status code[/b]. The status code 0 is expected to start the login protocol correctly. If the status code is 0, the client reads a long, dubbed by many as the [b]server session key[/b]. This is used to help generate a unique seed for the client session&#39;s packet opcode masking. The client then stores two ints that are the upper and lower ints of the [b]client session key[/b], which has the same purpose as the server&#39;s key. The client then starts writing the [b]login block[/b], which is RSA encrypted.

    The login block starts with the byte 10, which is considered a magic number. Following it is the client session key and server session key longs. Trailing behind the session keys comes the client&#39;s username packed to a 64-bit long and password written as a C-string (NUL-terminated ASCII). This block is then RSA encrypted and stored for later use.

    Now starts the login request packet. It starts off with a flag telling the server whether or not the client is reconnecting or connecting for the first time [NOW CLASSIFIED AS CONNECTION TYPE]. The byte is 18 or 16, respectively. Following is the size of the rest of the login response packet, including the login block that trails at the end, to tip the server how much data it should expect. Later comes the client revision int. After the client revision, an unknown byte is written that seems to always be zero (possibly the [b]memory usage[/b] game-type flag [low mem/high mem]), followed by constantly zero byte and yet another zero byte. Next the packet writes the game applet width and height in pixels as shorts, followed quickly after by the [b]UID[/b] ([b]unique identifier[/b] or [b]user identifier[/b]). Next comes the C-string [b]settings[/b] string passed as a param to the applet, and after it the int [b]affiliate identifier[/b] (probably identifies the game affiliate it was run on) with another int right after it. This int that trails behind is an unknown int that only has 22 bits used, all of which represent various flags within the client. Any clues as to what they are would be nice. The packet is just about crafted completely. [In 525, a strange short is written here]. To finish off the main chunk, the client writes all cache&#39;s reference table index-based CRC32 checksums as ints (29 in 539, 27 in 508, etc). To top it off, the RSA encrypted login block is appended to the end and the packet is sent to the server.

    The ISAAC ciphers are seeded for packet opcode masking after adding 50 to each int of the session keys, and the status code is reread. This finishes the login protocol.

NOTE: This is based off of data from the #508 client and should work because there hasn&#39;t been any change as far as i know. Done on request: Brown :)</description>
    
    <lastBuildDate>Fri, 01 Jan 2010 11:26:33 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/508-login-protocol/290548.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>508 Login protocol</title>
        <dc:creator><![CDATA[@haxagelol haxagelol]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/haxagelol">@haxagelol</a> wrote:</p>
          <blockquote>
              <p>bump<br>
nice to see you suprz_ here</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/508-login-protocol/290548/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/508-login-protocol/290548/12</link>
        <pubDate>Fri, 01 Jan 2010 11:26:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290548-12</guid>
        <source url="https://forum.moparisthebest.com/t/508-login-protocol/290548.rss">508 Login protocol</source>
      </item>
      <item>
        <title>508 Login protocol</title>
        <dc:creator><![CDATA[@elitepvper elitepvper]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/elitepvper">@elitepvper</a> wrote:</p>
          <blockquote>
              <p>ummm, whatever, bump</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/508-login-protocol/290548/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/508-login-protocol/290548/11</link>
        <pubDate>Thu, 26 Nov 2009 06:46:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290548-11</guid>
        <source url="https://forum.moparisthebest.com/t/508-login-protocol/290548.rss">508 Login protocol</source>
      </item>
      <item>
        <title>508 Login protocol</title>
        <dc:creator><![CDATA[@system system]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/system">@system</a> wrote:</p>
          <blockquote>
              <p>Awesome &lt;3 (bump)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/508-login-protocol/290548/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/508-login-protocol/290548/10</link>
        <pubDate>Tue, 04 Aug 2009 17:06:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290548-10</guid>
        <source url="https://forum.moparisthebest.com/t/508-login-protocol/290548.rss">508 Login protocol</source>
      </item>
      <item>
        <title>508 Login protocol</title>
        <dc:creator><![CDATA[@juliepacker juliepacker]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/juliepacker">@juliepacker</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="1" data-topic="292536">
<div class="title">
<div class="quote-controls"></div>
</div>
<blockquote>
<p>bump</p>
</blockquote>
</aside>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/508-login-protocol/290548/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/508-login-protocol/290548/9</link>
        <pubDate>Mon, 03 Aug 2009 09:42:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290548-9</guid>
        <source url="https://forum.moparisthebest.com/t/508-login-protocol/290548.rss">508 Login protocol</source>
      </item>
      <item>
        <title>508 Login protocol</title>
        <dc:creator><![CDATA[@xpatx xpatx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xpatx">@xpatx</a> wrote:</p>
          <blockquote>
              <p>Nice, even though I don’t really look at 508’s. Not sort of my thing <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/508-login-protocol/290548/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/508-login-protocol/290548/8</link>
        <pubDate>Sun, 02 Aug 2009 21:42:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290548-8</guid>
        <source url="https://forum.moparisthebest.com/t/508-login-protocol/290548.rss">508 Login protocol</source>
      </item>
      <item>
        <title>508 Login protocol</title>
        <dc:creator><![CDATA[@sanga282 sanga282]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sanga282">@sanga282</a> wrote:</p>
          <blockquote>
              <p>[quote=“oksuper_, post:5, topic:290548”][quote author=sanga282 link=topic=384119.msg2892039#msg2892039 date=1248961778]<br>
317</p>
<ul>
<li>Login request - connection type 14
<ul>
<li>Update - connection type 15</li>
<li>New connection login - connection type 16</li>
<li>Reconnecting login - connection type 18<br>
508</li>
</ul>
</li>
</ul>
<h1>Login initiation - connection type 14</h1>
<h1>Update - connection type 15</h1>
<h1>Fresh login - connection type 16</h1>
<h1>JAGGRAB - connection type 17</h1>
<h1>Reconnecting login - connection type 18</h1>
<p>was JAGGRAB not necessary in the 317? was the information parsed to the user in a different way instead of through the login?<br>
[/quote]</p>
<p>JAGGRAB wasnt handled by connection type… its server ran separate on port 43595.[/quote]<br>
aah i see</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/508-login-protocol/290548/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/508-login-protocol/290548/7</link>
        <pubDate>Fri, 31 Jul 2009 11:10:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290548-7</guid>
        <source url="https://forum.moparisthebest.com/t/508-login-protocol/290548.rss">508 Login protocol</source>
      </item>
      <item>
        <title>508 Login protocol</title>
        <dc:creator><![CDATA[@elijah101 elijah101]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/elijah101">@elijah101</a> wrote:</p>
          <blockquote>
              <p>Bump</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/508-login-protocol/290548/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/508-login-protocol/290548/6</link>
        <pubDate>Fri, 31 Jul 2009 00:48:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290548-6</guid>
        <source url="https://forum.moparisthebest.com/t/508-login-protocol/290548.rss">508 Login protocol</source>
      </item>
      <item>
        <title>508 Login protocol</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>[quote=“sanga282, post:4, topic:290548”]317</p>
<ul>
<li>Login request - connection type 14
<ul>
<li>Update - connection type 15</li>
<li>New connection login - connection type 16</li>
<li>Reconnecting login - connection type 18<br>
508</li>
</ul>
</li>
</ul>
<h1>Login initiation - connection type 14</h1>
<h1>Update - connection type 15</h1>
<h1>Fresh login - connection type 16</h1>
<h1>JAGGRAB - connection type 17</h1>
<h1>Reconnecting login - connection type 18</h1>
<p>was JAGGRAB not necessary in the 317? was the information parsed to the user in a different way instead of through the login?[/quote]</p>
<p>JAGGRAB wasnt handled by connection type… its server ran separate on port 43595.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/508-login-protocol/290548/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/508-login-protocol/290548/5</link>
        <pubDate>Thu, 30 Jul 2009 19:53:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290548-5</guid>
        <source url="https://forum.moparisthebest.com/t/508-login-protocol/290548.rss">508 Login protocol</source>
      </item>
      <item>
        <title>508 Login protocol</title>
        <dc:creator><![CDATA[@sanga282 sanga282]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sanga282">@sanga282</a> wrote:</p>
          <blockquote>
              <p>317</p>
<ul>
<li>Login request - connection type 14
<ul>
<li>Update - connection type 15</li>
<li>New connection login - connection type 16</li>
<li>Reconnecting login - connection type 18<br>
508</li>
</ul>
</li>
</ul>
<h1>Login initiation - connection type 14</h1>
<h1>Update - connection type 15</h1>
<h1>Fresh login - connection type 16</h1>
<h1>JAGGRAB - connection type 17</h1>
<h1>Reconnecting login - connection type 18</h1>
<p>was JAGGRAB not necessary in the 317? was the information parsed to the user in a different way instead of through the login?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/508-login-protocol/290548/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/508-login-protocol/290548/4</link>
        <pubDate>Thu, 30 Jul 2009 13:49:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290548-4</guid>
        <source url="https://forum.moparisthebest.com/t/508-login-protocol/290548.rss">508 Login protocol</source>
      </item>
      <item>
        <title>508 Login protocol</title>
        <dc:creator><![CDATA[@elijah101 elijah101]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/elijah101">@elijah101</a> wrote:</p>
          <blockquote>
              <p>Very Nice, I’ don’t really use 508s i’m more of a 317 kind of guy, but this should really help!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/508-login-protocol/290548/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/508-login-protocol/290548/3</link>
        <pubDate>Wed, 29 Jul 2009 23:40:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290548-3</guid>
        <source url="https://forum.moparisthebest.com/t/508-login-protocol/290548.rss">508 Login protocol</source>
      </item>
      <item>
        <title>508 Login protocol</title>
        <dc:creator><![CDATA[@TabbyKiller TabbyKiller]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tabbykiller">@TabbyKiller</a> wrote:</p>
          <blockquote>
              <p>wtf lol you’ve posted tons of Developments<br>
Nice</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/508-login-protocol/290548/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/508-login-protocol/290548/2</link>
        <pubDate>Fri, 24 Jul 2009 02:51:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290548-2</guid>
        <source url="https://forum.moparisthebest.com/t/508-login-protocol/290548.rss">508 Login protocol</source>
      </item>
      <item>
        <title>508 Login protocol</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>[size=99pt]I AM SUPER_[/size]</p>
<p>[center][size=6pt]The Login Protocol of 508[/size]</p>
<p>[size=5pt]Overview[/size][/center]</p>
<pre><code>The RuneScape login protocol of the new engine is less simplistic than it's forerunner, and does its job. Within it, it securely transmits your private information. In the next few paragraphs I will explain the login protocol.
</code></pre>
<p>[center][size=5pt]Handshake[/size][/center]</p>
<pre><code>Every connection to the RuneScape main 'gateway' server sends a single byte of data, mostly well known as the [b]connection type[/b]. The connection type tells the main server which type of connection you wish to initiate. The old engine list consists of:
</code></pre>
<p>[ul][<em>]Login initiation - connection type 14<br>
[</em>]Update - connection type 15<br>
[<em>]Fresh login - connection type 16<br>
[</em>]JAGGRAB - connection type 17<br>
[<em>]Reconnecting login - connection type 18<br>
[</em>]Worldlist - varies, connection type 255 in <span class="hashtag">#508</span><br>
[*]Potentially more… if more, please post about them![/ul]</p>
<pre><code>The connection type we will cover in the following paragraphs is the login connection type, 14. After the login handshake initiating connection type, the client writes a small bit of data derived from the logging in player's username. This is believed to help select the appropriate login server. On successful handshake, the server sends back 8 ignored bytes.
</code></pre>
<p>[center][size=5pt]The request[/size][/center]</p>
<pre><code>At this point, the client reads in one byte, called the [b]status code[/b]. The status code 0 is expected to start the login protocol correctly. If the status code is 0, the client reads a long, dubbed by many as the [b]server session key[/b]. This is used to help generate a unique seed for the client session's packet opcode masking. The client then stores two ints that are the upper and lower ints of the [b]client session key[/b], which has the same purpose as the server's key. The client then starts writing the [b]login block[/b], which is RSA encrypted.

The login block starts with the byte 10, which is considered a magic number. Following it is the client session key and server session key longs. Trailing behind the session keys comes the client's username packed to a 64-bit long and password written as a C-string (NUL-terminated ASCII). This block is then RSA encrypted and stored for later use.

Now starts the login request packet. It starts off with a flag telling the server whether or not the client is reconnecting or connecting for the first time [NOW CLASSIFIED AS CONNECTION TYPE]. The byte is 18 or 16, respectively. Following is the size of the rest of the login response packet, including the login block that trails at the end, to tip the server how much data it should expect. Later comes the client revision int. After the client revision, an unknown byte is written that seems to always be zero (possibly the [b]memory usage[/b] game-type flag [low mem/high mem]), followed by constantly zero byte and yet another zero byte. Next the packet writes the game applet width and height in pixels as shorts, followed quickly after by the [b]UID[/b] ([b]unique identifier[/b] or [b]user identifier[/b]). Next comes the C-string [b]settings[/b] string passed as a param to the applet, and after it the int [b]affiliate identifier[/b] (probably identifies the game affiliate it was run on) with another int right after it. This int that trails behind is an unknown int that only has 22 bits used, all of which represent various flags within the client. Any clues as to what they are would be nice. The packet is just about crafted completely. [In 525, a strange short is written here]. To finish off the main chunk, the client writes all cache's reference table index-based CRC32 checksums as ints (29 in 539, 27 in 508, etc). To top it off, the RSA encrypted login block is appended to the end and the packet is sent to the server.

The ISAAC ciphers are seeded for packet opcode masking after adding 50 to each int of the session keys, and the status code is reread. This finishes the login protocol.
</code></pre>
<p>NOTE: This is based off of data from the <span class="hashtag">#508</span> client and should work because there hasn’t been any change as far as i know. Done on request: Brown <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/508-login-protocol/290548/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/508-login-protocol/290548/1</link>
        <pubDate>Fri, 24 Jul 2009 01:28:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290548-1</guid>
        <source url="https://forum.moparisthebest.com/t/508-login-protocol/290548.rss">508 Login protocol</source>
      </item>
  </channel>
</rss>
