<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>CEL4J - Code Engineering Library for Java</title>
    <link>https://forum.moparisthebest.com/t/cel4j-code-engineering-library-for-java/360062</link>
    <description>I am currently writing a library called CEL4J (short for Code Engineering Library for Java). My main goal is to cover code engineering in general. But initially I am starting with Java, and Bytecode in particular.

Since I have come as far as to read in an entire .class file, I&#39;d like to hear what you have to say about the API:s architectures and designs so far (if you feel like checking them out). For instance, what do I miss that you&#39;d want in a library like this? Or what do I cover that is quite irrelevant? Perhaps I have written something in a way that you don&#39;t like?

The part of the library that covers Java Bytecode is divided into two sub-parts. One that is intended to map directly onto a .class files structure. This part is called &quot;internal&quot; (located in the package &quot;internal&quot; and its sub-packages). The name may change to something else, because &quot;internal&quot; may be interpreted as that part should not be used directly by a library-user. This is not true. It may be used, but it consists of a set of &quot;lower&quot; level API:s. It&#39;s, however, preferred if a library-user uses the set of &quot;higher&quot; level API:s instead (because it&#39;s much easier to understand, and you need less work to do whatever it is that you want to do). Currently, the &quot;higher&quot; level API:s does only exist in a limited way (in the package &quot;binary&quot;).

Right now (i.e. when I wrote the initial post) I am at work, and thus cannot upload the library JAR file. But I do have Javadocs on a webpage, so you can check them out. Also, I guess the Javadocs are all that really matters, because if you&#39;d want to use a library like this you could just pick ASM, BCEL, Javassist or any other library you like. You don&#39;t need to look at the implementations either, because they&#39;re not exposed and may be changed at any point (as long as they conform to their contracts).

Javadocs:
http://cel4j.macroing.org

The various structures in a ClassFile structure (and its sub-structures):
http://www.macroing.org

A remake of the above mentioned link, that currently only covers a few structures.
http://www.macroing.org/ClassFile.html

EDIT: Here is an example of the &quot;high&quot; level API:s, by the way:
[code]import org.macroing.cel4j.java.Name;
import org.macroing.cel4j.java.Names;
import org.macroing.cel4j.java.binary.BinaryClass;
import org.macroing.cel4j.java.binary.BinaryClasses;
...
Name name = Names.newQualifiedName(&quot;java.awt.Rectangle&quot;);
BinaryClass clazz = BinaryClasses.newBinaryClass(name);
do {
	System.out.println(clazz.getName());
} while((clazz = clazz.getSuperClass()) != null);[/code]</description>
    
    <lastBuildDate>Wed, 15 Sep 2010 06:07:46 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/cel4j-code-engineering-library-for-java/360062.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>CEL4J - Code Engineering Library for Java</title>
        <dc:creator><![CDATA[@Protosstribe object]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/protosstribe">@Protosstribe</a> wrote:</p>
          <blockquote>
              <p>abraham2119: Thanks for the feedback! Yes, I have thought about implementing a Visitor pattern at some point. I will probably add it to the higher level API:s in that case. Then also, what names are off in your opinion (so I perhaps can change them if appropriate)?</p>
<p>Everyone: What do you think about adding two distinct parser or reader types (just like there are SAX (event-driven) and DOM for XML)?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cel4j-code-engineering-library-for-java/360062/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cel4j-code-engineering-library-for-java/360062/7</link>
        <pubDate>Wed, 15 Sep 2010 06:07:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-360062-7</guid>
        <source url="https://forum.moparisthebest.com/t/cel4j-code-engineering-library-for-java/360062.rss">CEL4J - Code Engineering Library for Java</source>
      </item>
      <item>
        <title>CEL4J - Code Engineering Library for Java</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>your naming looks rather off, and what unhandled was referring to when he said to abstract the constant pool was to implement a visitor pattern, much like asm’s (at least i would assume that’s what he meant)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cel4j-code-engineering-library-for-java/360062/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cel4j-code-engineering-library-for-java/360062/6</link>
        <pubDate>Wed, 15 Sep 2010 01:26:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-360062-6</guid>
        <source url="https://forum.moparisthebest.com/t/cel4j-code-engineering-library-for-java/360062.rss">CEL4J - Code Engineering Library for Java</source>
      </item>
      <item>
        <title>CEL4J - Code Engineering Library for Java</title>
        <dc:creator><![CDATA[@Protosstribe object]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/protosstribe">@Protosstribe</a> wrote:</p>
          <blockquote>
              <p>[quote=“frank_, post:4, topic:360062”][quote author=object link=topic=456501.msg3341885#msg3341885 date=1284444220]<br>
You perhaps should read some API-design books or DDD (Domain Driven Design).<br>
[/quote]pull your head out of your arse, all you have done is state the obvious[/quote]Thanks for the tip! It’s out now… By the way, I didn’t mean to sound rude. But, you know, I’m a retard when it comes to expressing myself in the English language.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cel4j-code-engineering-library-for-java/360062/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cel4j-code-engineering-library-for-java/360062/5</link>
        <pubDate>Tue, 14 Sep 2010 11:45:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-360062-5</guid>
        <source url="https://forum.moparisthebest.com/t/cel4j-code-engineering-library-for-java/360062.rss">CEL4J - Code Engineering Library for Java</source>
      </item>
      <item>
        <title>CEL4J - Code Engineering Library for Java</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>[quote=“object, post:3, topic:360062”]You perhaps should read some API-design books or DDD (Domain Driven Design).[/quote]pull your head out of your arse, all you have done is state the obvious</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cel4j-code-engineering-library-for-java/360062/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cel4j-code-engineering-library-for-java/360062/4</link>
        <pubDate>Tue, 14 Sep 2010 10:38:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-360062-4</guid>
        <source url="https://forum.moparisthebest.com/t/cel4j-code-engineering-library-for-java/360062.rss">CEL4J - Code Engineering Library for Java</source>
      </item>
      <item>
        <title>CEL4J - Code Engineering Library for Java</title>
        <dc:creator><![CDATA[@Protosstribe object]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/protosstribe">@Protosstribe</a> wrote:</p>
          <blockquote>
              <p>Unhandled: Well, I (of course) use constructors, but only internally within the API itself. There are several reasons why I don’t expose them, however.</p>
<ol>
<li>
<p>Using one of the creational design-patterns is a much more flexible way of construction.  Either it would be Abstract Factory, Factory Method, Builder, Singleton, Multiton or any other you may know. It’s more flexible because:</p>
</li>
<li>
<p>You may change the implementation at any time (a new class, or a subclass to some class), without any API users getting mad at you.</p>
</li>
<li>
<p>You can, depending on some circumstances, change so that an optimized version (a new class, or a subclass to some class) is used instead (for some reason).</p>
</li>
<li>
<p>If you use a constructor, you already create the class before you check for input errors (parameter-arguments etc.). However, if you’re not exposing them, you can check that first, before deciding whether you should throw an Exception or create it.</p>
</li>
<li>
<p>I only use the Builder design-pattern if there are 4 or more parameter-arguments to be set. And since all interface implementations are immutable, they would have to be set at creation-time (meaning in the constructor).</p>
</li>
</ol>
<p>There are many more reasons why, but I don’t have time to list them all here.</p>
<p>And thanks for your suggestion! But I believe I already got that (atleast partially) in the high level API (the ConstantPool interface)? Or do you mean something different?</p>
<p>EDIT: By the way, an analogy to Object-construction would be:<br>
If you’re creating something, you’re not telling that thing to create itself. So, if you’re creating an Object via its constructor, you’re telling it to create itself. Wouldn’t it be better if you had some other Object (a Factory) create it instead? Well, obviously you cannot get away from using the constructor at some point, but I hope you get the point (I am not the one who invented this analogy, by the way).</p>
<p>You perhaps should read some API-design books or DDD (Domain Driven Design).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cel4j-code-engineering-library-for-java/360062/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cel4j-code-engineering-library-for-java/360062/3</link>
        <pubDate>Tue, 14 Sep 2010 06:03:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-360062-3</guid>
        <source url="https://forum.moparisthebest.com/t/cel4j-code-engineering-library-for-java/360062.rss">CEL4J - Code Engineering Library for Java</source>
      </item>
      <item>
        <title>CEL4J - Code Engineering Library for Java</title>
        <dc:creator><![CDATA[@Unhandled Unhandled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unhandled">@Unhandled</a> wrote:</p>
          <blockquote>
              <p>Looking at the example…is there some reason you don’t use constructors? And if so I would probably consider rethinking the design.</p>
<p>One think I would like is total constantpool abstraction, at least in the high level API.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cel4j-code-engineering-library-for-java/360062/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cel4j-code-engineering-library-for-java/360062/2</link>
        <pubDate>Mon, 13 Sep 2010 20:53:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-360062-2</guid>
        <source url="https://forum.moparisthebest.com/t/cel4j-code-engineering-library-for-java/360062.rss">CEL4J - Code Engineering Library for Java</source>
      </item>
      <item>
        <title>CEL4J - Code Engineering Library for Java</title>
        <dc:creator><![CDATA[@Protosstribe object]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/protosstribe">@Protosstribe</a> wrote:</p>
          <blockquote>
              <p>I am currently writing a library called CEL4J (short for Code Engineering Library for Java). My main goal is to cover code engineering in general. But initially I am starting with Java, and Bytecode in particular.</p>
<p>Since I have come as far as to read in an entire .class file, I’d like to hear what you have to say about the API:s architectures and designs so far (if you feel like checking them out). For instance, what do I miss that you’d want in a library like this? Or what do I cover that is quite irrelevant? Perhaps I have written something in a way that you don’t like?</p>
<p>The part of the library that covers Java Bytecode is divided into two sub-parts. One that is intended to map directly onto a .class files structure. This part is called “internal” (located in the package “internal” and its sub-packages). The name may change to something else, because “internal” may be interpreted as that part should not be used directly by a library-user. This is not true. It may be used, but it consists of a set of “lower” level API:s. It’s, however, preferred if a library-user uses the set of “higher” level API:s instead (because it’s much easier to understand, and you need less work to do whatever it is that you want to do). Currently, the “higher” level API:s does only exist in a limited way (in the package “binary”).</p>
<p>Right now (i.e. when I wrote the initial post) I am at work, and thus cannot upload the library JAR file. But I do have Javadocs on a webpage, so you can check them out. Also, I guess the Javadocs are all that really matters, because if you’d want to use a library like this you could just pick ASM, BCEL, Javassist or any other library you like. You don’t need to look at the implementations either, because they’re not exposed and may be changed at any point (as long as they conform to their contracts).</p>
<p>Javadocs:<br>
<a href="http://cel4j.macroing.org" class="onebox" target="_blank" rel="nofollow noopener">http://cel4j.macroing.org</a></p>
<p>The various structures in a ClassFile structure (and its sub-structures):<br>
<a href="http://www.macroing.org" class="onebox" target="_blank" rel="nofollow noopener">http://www.macroing.org</a></p>
<p>A remake of the above mentioned link, that currently only covers a few structures.<br>
<a href="http://www.macroing.org/ClassFile.html" class="onebox" target="_blank" rel="nofollow noopener">http://www.macroing.org/ClassFile.html</a></p>
<p>EDIT: Here is an example of the “high” level API:s, by the way:</p>
<p><code>import org.macroing.cel4j.java.Name;
import org.macroing.cel4j.java.Names;
import org.macroing.cel4j.java.binary.BinaryClass;
import org.macroing.cel4j.java.binary.BinaryClasses;
...
Name name = Names.newQualifiedName("java.awt.Rectangle");
BinaryClass clazz = BinaryClasses.newBinaryClass(name);
do {
	System.out.println(clazz.getName());
} while((clazz = clazz.getSuperClass()) != null);</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cel4j-code-engineering-library-for-java/360062/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cel4j-code-engineering-library-for-java/360062/1</link>
        <pubDate>Mon, 13 Sep 2010 12:09:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-360062-1</guid>
        <source url="https://forum.moparisthebest.com/t/cel4j-code-engineering-library-for-java/360062.rss">CEL4J - Code Engineering Library for Java</source>
      </item>
  </channel>
</rss>
