<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Pacman</title>
    <link>https://forum.moparisthebest.com/t/pacman/416730</link>
    <description>Created a basic Pacman game in Java, open-source. Hate/rate.


Features include; basic maze level, actions, ghosts, blocks, movement; left right up down, board, sprite loading, basic animations and highscore. For it to work you need to add the [i]paint (Graphics g)[/i] method and obviously load your sprites, otherwise you&#39;ll get an [i]init runtime[/i].

I didn&#39;t add everything otherwise it would just be boring to play (so you can work off it).

Sorry if conventions are a little messy, &#39;code tags&#39; are messing them.


Board.java

[code]import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Event;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.Timer;


public class Board extends JPanel implements ActionListener {

    private static final long serialVersionUID = 1L;
    Dimension d;
    Font smallfont = new Font(&quot;Helvetica&quot;, Font.BOLD, 14);

    FontMetrics fmsmall, fmlarge;
    Image ii;
    Color dotcolor = new Color(192, 192, 0);
    Color mazecolor;

    boolean ingame = false;
    boolean dying = false;

    final int blocksize = 24;
    final int nrofblocks = 15;
    final int scrsize = nrofblocks * blocksize;
    final int pacanimdelay = 2;
    final int pacmananimcount = 4;
    final int maxghosts = 12;
    final int pacmanspeed = 6;

    int pacanimcount = pacanimdelay;
    int pacanimdir = 1;
    int pacmananimpos = 0;
    int nrofghosts = 6;
    int pacsleft, score;
    int deathcounter;
    int[] dx, dy;
    int[] ghostx, ghosty, ghostdx, ghostdy, ghostspeed;

    Image ghost;
    Image pacman1, pacman2up, pacman2left, pacman2right, pacman2down;
    Image pacman3up, pacman3down, pacman3left, pacman3right;
    Image pacman4up, pacman4down, pacman4left, pacman4right;

    int pacmanx, pacmany, pacmandx, pacmandy;
    int reqdx, reqdy, viewdx, viewdy;

    final short leveldata[] =
    { 19, 26, 26, 26, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 22,
      21, 0,  0,  0,  17, 16, 16, 16, 16, 16, 16, 16, 16, 16, 20,
      21, 0,  0,  0,  17, 16, 16, 16, 16, 16, 16, 16, 16, 16, 20, 
      21, 0,  0,  0,  17, 16, 16, 24, 16, 16, 16, 16, 16, 16, 20, 
      17, 18, 18, 18, 16, 16, 20, 0,  17, 16, 16, 16, 16, 16, 20,
      17, 16, 16, 16, 16, 16, 20, 0,  17, 16, 16, 16, 16, 24, 20, 
      25, 16, 16, 16, 24, 24, 28, 0,  25, 24, 24, 16, 20, 0,  21, 
      1,  17, 16, 20, 0,  0,  0,  0,  0,  0,  0,  17, 20, 0,  21,
      1,  17, 16, 16, 18, 18, 22, 0,  19, 18, 18, 16, 20, 0,  21,
      1,  17, 16, 16, 16, 16, 20, 0,  17, 16, 16, 16, 20, 0,  21, 
      1,  17, 16, 16, 16, 16, 20, 0,  17, 16, 16, 16, 20, 0,  21,
      1,  17, 16, 16, 16, 16, 16, 18, 16, 16, 16, 16, 20, 0,  21,
      1,  17, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 20, 0,  21,
      1,  25, 24, 24, 24, 24, 24, 24, 24, 24, 16, 16, 16, 18, 20,
      9,  8,  8,  8,  8,  8,  8,  8,  8,  8,  25, 24, 24, 24, 28 };

    final int validspeeds[] = { 1, 2, 3, 4, 6, 8 };
    final int maxspeed = 6;

    int currentspeed = 3;
    short[] screendata;
    Timer timer;


    public Board() {

        GetImages();

        addKeyListener(new TAdapter());

        screendata = new short[nrofblocks * nrofblocks];
        mazecolor = new Color(5, 100, 5);
        setFocusable(true);

        d = new Dimension(400, 400);

        setBackground(Color.black);
        setDoubleBuffered(true);

        ghostx = new int[maxghosts];
        ghostdx = new int[maxghosts];
        ghosty = new int[maxghosts];
        ghostdy = new int[maxghosts];
        ghostspeed = new int[maxghosts];
        dx = new int[4];
        dy = new int[4];
        timer = new Timer(40, this);
        timer.start();
    }

    public void addNotify() {
        super.addNotify();
        GameInit();
    }


    public void DoAnim() {
        pacanimcount--;
        if (pacanimcount &lt;= 0) {
            pacanimcount = pacanimdelay;
            pacmananimpos = pacmananimpos + pacanimdir;
            if (pacmananimpos == (pacmananimcount - 1) || pacmananimpos == 0)
                pacanimdir = -pacanimdir;
        }
    }


    public void PlayGame(Graphics2D g2d) {
        if (dying) {
            Death();
        } else {
            MovePacMan();
            DrawPacMan(g2d);
            moveGhosts(g2d);
            CheckMaze();
        }
    }


    public void ShowIntroScreen(Graphics2D g2d) {

        g2d.setColor(new Color(0, 32, 48));
        g2d.fillRect(50, scrsize / 2 - 30, scrsize - 100, 50);
        g2d.setColor(Color.white);
        g2d.drawRect(50, scrsize / 2 - 30, scrsize - 100, 50);

        String s = &quot;Press s to start.&quot;;
        Font small = new Font(&quot;Helvetica&quot;, Font.BOLD, 14);
        FontMetrics metr = this.getFontMetrics(small);

        g2d.setColor(Color.white);
        g2d.setFont(small);
        g2d.drawString(s, (scrsize - metr.stringWidth(s)) / 2, scrsize / 2);
    }


    public void DrawScore(Graphics2D g) {
        int i;
        String s;

        g.setFont(smallfont);
        g.setColor(new Color(96, 128, 255));
        s = &quot;Score: &quot; + score;
        g.drawString(s, scrsize / 2 + 96, scrsize + 16);
        for (i = 0; i &lt; pacsleft; i++) {
            g.drawImage(pacman3left, i * 28 + 8, scrsize + 1, this);
        }
    }


    public void CheckMaze() {
        short i = 0;
        boolean finished = true;

        while (i &lt; nrofblocks * nrofblocks &amp;&amp; finished) {
            if ((screendata[i] &amp; 48) != 0)
                finished = false;
            i++;
        }

        if (finished) {
            score += 50;

            if (nrofghosts &lt; maxghosts)
                nrofghosts++;
            if (currentspeed &lt; maxspeed)
                currentspeed++;
        }
    }

    public void Death() {
    	//not gonna spoon feed you Moparians
    }


    public void moveGhosts(Graphics2D g2d) {
        short i;
        int pos;
        int count;

        for (i = 0; i &lt; nrofghosts; i++) {
            if (ghostx[i] % blocksize == 0 &amp;&amp; ghosty[i] % blocksize == 0) {
                pos =
 ghostx[i] / blocksize + nrofblocks * (int)(ghosty[i] / blocksize);

                count = 0;
                if ((screendata[pos] &amp; 1) == 0 &amp;&amp; ghostdx[i] != 1) {
                    dx[count] = -1;
                    dy[count] = 0;
                    count++;
                }
                if ((screendata[pos] &amp; 2) == 0 &amp;&amp; ghostdy[i] != 1) {
                    dx[count] = 0;
                    dy[count] = -1;
                    count++;
                }
                if ((screendata[pos] &amp; 4) == 0 &amp;&amp; ghostdx[i] != -1) {
                    dx[count] = 1;
                    dy[count] = 0;
                    count++;
                }
                if ((screendata[pos] &amp; 8) == 0 &amp;&amp; ghostdy[i] != -1) {
                    dx[count] = 0;
                    dy[count] = 1;
                    count++;
                }
 
                if (count == 0) {
                    if ((screendata[pos] &amp; 15) == 15) {
                        ghostdx[i] = 0;
                        ghostdy[i] = 0;
                    } else {
                        ghostdx[i] = -ghostdx[i];
                        ghostdy[i] = -ghostdy[i];
                    }
                } else {
                    count = (int)(Math.random() * count);
                    if (count &gt; 3)
                        count = 3;
                    ghostdx[i] = dx[count];
                    ghostdy[i] = dy[count];
                }

            }
            ghostx[i] = ghostx[i] + (ghostdx[i] * ghostspeed[i]);
            ghosty[i] = ghosty[i] + (ghostdy[i] * ghostspeed[i]);
            DrawGhost(g2d, ghostx[i] + 1, ghosty[i] + 1);

            if (pacmanx &gt; (ghostx[i] - 12) &amp;&amp; pacmanx &lt; (ghostx[i] + 12) &amp;&amp;
                pacmany &gt; (ghosty[i] - 12) &amp;&amp; pacmany &lt; (ghosty[i] + 12) &amp;&amp;
                ingame) {

                dying = true;
                deathcounter = 64;

            }
        }
    }


    public void DrawGhost(Graphics2D g2d, int x, int y) {
        g2d.drawImage(ghost, x, y, this);
    }


    public void MovePacMan() {
        int pos;
        short ch;

        if (reqdx == -pacmandx &amp;&amp; reqdy == -pacmandy) {
            pacmandx = reqdx;
            pacmandy = reqdy;
            viewdx = pacmandx;
            viewdy = pacmandy;
        }
        if (pacmanx % blocksize == 0 &amp;&amp; pacmany % blocksize == 0) {
            pos =
 pacmanx / blocksize + nrofblocks * (int)(pacmany / blocksize);
            ch = screendata[pos];

            if ((ch &amp; 16) != 0) {
                screendata[pos] = (short)(ch &amp; 15);
                score++;
            }

            if (reqdx != 0 || reqdy != 0) {
                if (!((reqdx == -1 &amp;&amp; reqdy == 0 &amp;&amp; (ch &amp; 1) != 0) ||
                      (reqdx == 1 &amp;&amp; reqdy == 0 &amp;&amp; (ch &amp; 4) != 0) ||
                      (reqdx == 0 &amp;&amp; reqdy == -1 &amp;&amp; (ch &amp; 2) != 0) ||
                      (reqdx == 0 &amp;&amp; reqdy == 1 &amp;&amp; (ch &amp; 8) != 0))) {
                    pacmandx = reqdx;
                    pacmandy = reqdy;
                    viewdx = pacmandx;
                    viewdy = pacmandy;
                }
            }

            // Check for standstill
            if ((pacmandx == -1 &amp;&amp; pacmandy == 0 &amp;&amp; (ch &amp; 1) != 0) ||
                (pacmandx == 1 &amp;&amp; pacmandy == 0 &amp;&amp; (ch &amp; 4) != 0) ||
                (pacmandx == 0 &amp;&amp; pacmandy == -1 &amp;&amp; (ch &amp; 2) != 0) ||
                (pacmandx == 0 &amp;&amp; pacmandy == 1 &amp;&amp; (ch &amp; 8) != 0)) {
                pacmandx = 0;
                pacmandy = 0;
            }
        }
        pacmanx = pacmanx + pacmanspeed * pacmandx;
        pacmany = pacmany + pacmanspeed * pacmandy;
    }


    public void DrawPacMan(Graphics2D g2d) {
        if (viewdx == -1)
            DrawPacManLeft(g2d);
        else if (viewdx == 1)
            DrawPacManRight(g2d);
        else if (viewdy == -1)
            DrawPacManUp(g2d);
        else
            DrawPacManDown(g2d);
    }

    public void DrawPacManUp(Graphics2D g2d) {
        switch (pacmananimpos) {
        case 1:
            g2d.drawImage(pacman2up, pacmanx + 1, pacmany + 1, this);
            break;
        case 2:
            g2d.drawImage(pacman3up, pacmanx + 1, pacmany + 1, this);
            break;
        case 3:
            g2d.drawImage(pacman4up, pacmanx + 1, pacmany + 1, this);
            break;
        default:
            g2d.drawImage(pacman1, pacmanx + 1, pacmany + 1, this);
            break;
        }
    }


    public void DrawPacManDown(Graphics2D g2d) {
    	//not gonna spoon feed you Moparians
    }


    public void DrawPacManLeft(Graphics2D g2d) {
    	//not gonna spoon feed you Moparians
    }


    public void DrawPacManRight(Graphics2D g2d) {
    	//not gonna spoon feed you Moparians
    }


    public void DrawMaze(Graphics2D g2d) {
        short i = 0;
        int x, y;

        for (y = 0; y &lt; scrsize; y += blocksize) {
            for (x = 0; x &lt; scrsize; x += blocksize) {
                g2d.setColor(mazecolor);
                g2d.setStroke(new BasicStroke(2));

                if ((screendata[i] &amp; 1) != 0) // draws left
                {
                    g2d.drawLine(x, y, x, y + blocksize - 1);
                }
                if ((screendata[i] &amp; 2) != 0) // draws top
                {
                    g2d.drawLine(x, y, x + blocksize - 1, y);
                }
                if ((screendata[i] &amp; 4) != 0) // draws right
                {
                    g2d.drawLine(x + blocksize - 1, y, x + blocksize - 1,
                                 y + blocksize - 1);
                }
                if ((screendata[i] &amp; 8) != 0) // draws bottom
                {
                    g2d.drawLine(x, y + blocksize - 1, x + blocksize - 1,
                                 y + blocksize - 1);
                }
                if ((screendata[i] &amp; 16) != 0) // draws point
                {
                    g2d.setColor(dotcolor);
                    g2d.fillRect(x + 11, y + 11, 2, 2);
                }
                i++;
            }
        }
    }

    public void GameInit() {
        pacsleft = 3;
        score = 0;
        nrofghosts = 6;
        currentspeed = 3;
    }
    public void GetImages()
    {
    	//Moparians, your Pacman sprites go here.. e.g;
      ghost = new ImageIcon(Board.class.getResource(&quot;../pacpix/ghost.png&quot;)).getImage();
    }
    
    class TAdapter extends KeyAdapter {
        public void keyPressed(KeyEvent e) {

          int key = e.getKeyCode();

          if (ingame)
          {
            if (key == KeyEvent.VK_LEFT)
            {
              reqdx=-1;
              reqdy=0;
            }
            else if (key == KeyEvent.VK_RIGHT)
            {
              reqdx=1;
              reqdy=0;
            }
            else if (key == KeyEvent.VK_UP)
            {
              reqdx=0;
              reqdy=-1;
            }
            else if (key == KeyEvent.VK_DOWN)
            {
              reqdx=0;
              reqdy=1;
            }
            else if (key == KeyEvent.VK_ESCAPE &amp;&amp; timer.isRunning())
            {
              ingame=false;
            }
            else if (key == KeyEvent.VK_PAUSE) {
                if (timer.isRunning())
                    timer.stop();
                else timer.start();
            }
          }
          else
          {
            if (key == &#39;s&#39; || key == &#39;S&#39;)
          {
              ingame=true;
              GameInit();
            }
          }
      }

          public void keyReleased(KeyEvent e) {
              int key = e.getKeyCode();

              if (key == Event.LEFT || key == Event.RIGHT || 
                 key == Event.UP ||  key == Event.DOWN)
              {
                reqdx=0;
                reqdy=0;
              }
          }
      }

    public void actionPerformed(ActionEvent e) {
        repaint();  
    }
}[/code]



If you want a leveling system, I suggest you add something like;

[code]    public void LevelSystem() {
        short i;
        int dx = 1;
        int random;

        for (i = 0; i &lt; nrofghosts; i++) {
            ghosty[i] = 4 * blocksize;
            ghostx[i] = 4 * blocksize;
            ghostdy[i] = 0;
            ghostdx[i] = dx;
            dx = -dx;
            random = (int)(Math.random() * (currentspeed + 1));
            if (random &gt; currentspeed)
                random = currentspeed;
            ghostspeed[i] = validspeeds[random];
        }
//add the block sizes and dying false method here....
    }
[/code]</description>
    
    <lastBuildDate>Sun, 02 Oct 2011 02:15:13 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/pacman/416730.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Pacman</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>Ah, good fight.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pacman/416730/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pacman/416730/5</link>
        <pubDate>Sun, 02 Oct 2011 02:15:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-416730-5</guid>
        <source url="https://forum.moparisthebest.com/t/pacman/416730.rss">Pacman</source>
      </item>
      <item>
        <title>Pacman</title>
        <dc:creator><![CDATA[@dain_bramage dain bramage]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/dain_bramage">@dain_bramage</a> wrote:</p>
          <blockquote>
              <p>Nice:</p>
<p><a href="http://zetcode.com/tutorials/javagamestutorial/pacman/" class="onebox" target="_blank" rel="nofollow noopener">http://zetcode.com/tutorials/javagamestutorial/pacman/</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pacman/416730/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pacman/416730/4</link>
        <pubDate>Sun, 02 Oct 2011 02:01:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-416730-4</guid>
        <source url="https://forum.moparisthebest.com/t/pacman/416730.rss">Pacman</source>
      </item>
      <item>
        <title>Pacman</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>[quote=“John459, post:2, topic:416730”]Hmmmmm I wonder what oop is[/quote]I remember when I used to say the same to you :’)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pacman/416730/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pacman/416730/3</link>
        <pubDate>Sat, 01 Oct 2011 23:55:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-416730-3</guid>
        <source url="https://forum.moparisthebest.com/t/pacman/416730.rss">Pacman</source>
      </item>
      <item>
        <title>Pacman</title>
        <dc:creator><![CDATA[@John459 John459]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/john459">@John459</a> wrote:</p>
          <blockquote>
              <p>Hmmmmm I wonder what oop is</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pacman/416730/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pacman/416730/2</link>
        <pubDate>Sat, 01 Oct 2011 23:45:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-416730-2</guid>
        <source url="https://forum.moparisthebest.com/t/pacman/416730.rss">Pacman</source>
      </item>
      <item>
        <title>Pacman</title>
        <dc:creator><![CDATA[@Xell Xell]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xell">@Xell</a> wrote:</p>
          <blockquote>
              <p>Created a basic Pacman game in Java, open-source. Hate/rate.</p>
<p>Features include; basic maze level, actions, ghosts, blocks, movement; left right up down, board, sprite loading, basic animations and highscore. For it to work you need to add the <span class="bbcode-i">paint (Graphics g)</span> method and obviously load your sprites, otherwise you’ll get an <span class="bbcode-i">init runtime</span>.</p>
<p>I didn’t add everything otherwise it would just be boring to play (so you can work off it).</p>
<p>Sorry if conventions are a little messy, ‘code tags’ are messing them.</p>
<p>Board.java</p>
<p>[code]import java.awt.BasicStroke;<br>
import java.awt.Color;<br>
import java.awt.Dimension;<br>
import java.awt.Event;<br>
import java.awt.Font;<br>
import java.awt.FontMetrics;<br>
import java.awt.Graphics;<br>
import java.awt.Graphics2D;<br>
import java.awt.Image;<br>
import java.awt.Toolkit;<br>
import java.awt.event.ActionEvent;<br>
import java.awt.event.ActionListener;<br>
import java.awt.event.KeyAdapter;<br>
import java.awt.event.KeyEvent;</p>
<p>import javax.swing.ImageIcon;<br>
import javax.swing.JPanel;<br>
import javax.swing.Timer;</p>
<p>public class Board extends JPanel implements ActionListener {</p>
<pre><code>private static final long serialVersionUID = 1L;
Dimension d;
Font smallfont = new Font("Helvetica", Font.BOLD, 14);

FontMetrics fmsmall, fmlarge;
Image ii;
Color dotcolor = new Color(192, 192, 0);
Color mazecolor;

boolean ingame = false;
boolean dying = false;

final int blocksize = 24;
final int nrofblocks = 15;
final int scrsize = nrofblocks * blocksize;
final int pacanimdelay = 2;
final int pacmananimcount = 4;
final int maxghosts = 12;
final int pacmanspeed = 6;

int pacanimcount = pacanimdelay;
int pacanimdir = 1;
int pacmananimpos = 0;
int nrofghosts = 6;
int pacsleft, score;
int deathcounter;
int[] dx, dy;
int[] ghostx, ghosty, ghostdx, ghostdy, ghostspeed;

Image ghost;
Image pacman1, pacman2up, pacman2left, pacman2right, pacman2down;
Image pacman3up, pacman3down, pacman3left, pacman3right;
Image pacman4up, pacman4down, pacman4left, pacman4right;

int pacmanx, pacmany, pacmandx, pacmandy;
int reqdx, reqdy, viewdx, viewdy;

final short leveldata[] =
{ 19, 26, 26, 26, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 22,
  21, 0,  0,  0,  17, 16, 16, 16, 16, 16, 16, 16, 16, 16, 20,
  21, 0,  0,  0,  17, 16, 16, 16, 16, 16, 16, 16, 16, 16, 20, 
  21, 0,  0,  0,  17, 16, 16, 24, 16, 16, 16, 16, 16, 16, 20, 
  17, 18, 18, 18, 16, 16, 20, 0,  17, 16, 16, 16, 16, 16, 20,
  17, 16, 16, 16, 16, 16, 20, 0,  17, 16, 16, 16, 16, 24, 20, 
  25, 16, 16, 16, 24, 24, 28, 0,  25, 24, 24, 16, 20, 0,  21, 
  1,  17, 16, 20, 0,  0,  0,  0,  0,  0,  0,  17, 20, 0,  21,
  1,  17, 16, 16, 18, 18, 22, 0,  19, 18, 18, 16, 20, 0,  21,
  1,  17, 16, 16, 16, 16, 20, 0,  17, 16, 16, 16, 20, 0,  21, 
  1,  17, 16, 16, 16, 16, 20, 0,  17, 16, 16, 16, 20, 0,  21,
  1,  17, 16, 16, 16, 16, 16, 18, 16, 16, 16, 16, 20, 0,  21,
  1,  17, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 20, 0,  21,
  1,  25, 24, 24, 24, 24, 24, 24, 24, 24, 16, 16, 16, 18, 20,
  9,  8,  8,  8,  8,  8,  8,  8,  8,  8,  25, 24, 24, 24, 28 };

final int validspeeds[] = { 1, 2, 3, 4, 6, 8 };
final int maxspeed = 6;

int currentspeed = 3;
short[] screendata;
Timer timer;


public Board() {

    GetImages();

    addKeyListener(new TAdapter());

    screendata = new short[nrofblocks * nrofblocks];
    mazecolor = new Color(5, 100, 5);
    setFocusable(true);

    d = new Dimension(400, 400);

    setBackground(Color.black);
    setDoubleBuffered(true);

    ghostx = new int[maxghosts];
    ghostdx = new int[maxghosts];
    ghosty = new int[maxghosts];
    ghostdy = new int[maxghosts];
    ghostspeed = new int[maxghosts];
    dx = new int[4];
    dy = new int[4];
    timer = new Timer(40, this);
    timer.start();
}

public void addNotify() {
    super.addNotify();
    GameInit();
}


public void DoAnim() {
    pacanimcount--;
    if (pacanimcount &lt;= 0) {
        pacanimcount = pacanimdelay;
        pacmananimpos = pacmananimpos + pacanimdir;
        if (pacmananimpos == (pacmananimcount - 1) || pacmananimpos == 0)
            pacanimdir = -pacanimdir;
    }
}


public void PlayGame(Graphics2D g2d) {
    if (dying) {
        Death();
    } else {
        MovePacMan();
        DrawPacMan(g2d);
        moveGhosts(g2d);
        CheckMaze();
    }
}


public void ShowIntroScreen(Graphics2D g2d) {

    g2d.setColor(new Color(0, 32, 48));
    g2d.fillRect(50, scrsize / 2 - 30, scrsize - 100, 50);
    g2d.setColor(Color.white);
    g2d.drawRect(50, scrsize / 2 - 30, scrsize - 100, 50);

    String s = "Press s to start.";
    Font small = new Font("Helvetica", Font.BOLD, 14);
    FontMetrics metr = this.getFontMetrics(small);

    g2d.setColor(Color.white);
    g2d.setFont(small);
    g2d.drawString(s, (scrsize - metr.stringWidth(s)) / 2, scrsize / 2);
}


public void DrawScore(Graphics2D g) {
    int i;
    String s;

    g.setFont(smallfont);
    g.setColor(new Color(96, 128, 255));
    s = "Score: " + score;
    g.drawString(s, scrsize / 2 + 96, scrsize + 16);
    for (i = 0; i &lt; pacsleft; i++) {
        g.drawImage(pacman3left, i * 28 + 8, scrsize + 1, this);
    }
}


public void CheckMaze() {
    short i = 0;
    boolean finished = true;

    while (i &lt; nrofblocks * nrofblocks &amp;&amp; finished) {
        if ((screendata[i] &amp; 48) != 0)
            finished = false;
        i++;
    }

    if (finished) {
        score += 50;

        if (nrofghosts &lt; maxghosts)
            nrofghosts++;
        if (currentspeed &lt; maxspeed)
            currentspeed++;
    }
}

public void Death() {
	//not gonna spoon feed you Moparians
}


public void moveGhosts(Graphics2D g2d) {
    short i;
    int pos;
    int count;

    for (i = 0; i &lt; nrofghosts; i++) {
        if (ghostx[i] % blocksize == 0 &amp;&amp; ghosty[i] % blocksize == 0) {
            pos =
</code></pre>
<p>ghostx[i] / blocksize + nrofblocks * (int)(ghosty[i] / blocksize);</p>
<pre><code>            count = 0;
            if ((screendata[pos] &amp; 1) == 0 &amp;&amp; ghostdx[i] != 1) {
                dx[count] = -1;
                dy[count] = 0;
                count++;
            }
            if ((screendata[pos] &amp; 2) == 0 &amp;&amp; ghostdy[i] != 1) {
                dx[count] = 0;
                dy[count] = -1;
                count++;
            }
            if ((screendata[pos] &amp; 4) == 0 &amp;&amp; ghostdx[i] != -1) {
                dx[count] = 1;
                dy[count] = 0;
                count++;
            }
            if ((screendata[pos] &amp; 8) == 0 &amp;&amp; ghostdy[i] != -1) {
                dx[count] = 0;
                dy[count] = 1;
                count++;
            }

            if (count == 0) {
                if ((screendata[pos] &amp; 15) == 15) {
                    ghostdx[i] = 0;
                    ghostdy[i] = 0;
                } else {
                    ghostdx[i] = -ghostdx[i];
                    ghostdy[i] = -ghostdy[i];
                }
            } else {
                count = (int)(Math.random() * count);
                if (count &gt; 3)
                    count = 3;
                ghostdx[i] = dx[count];
                ghostdy[i] = dy[count];
            }

        }
        ghostx[i] = ghostx[i] + (ghostdx[i] * ghostspeed[i]);
        ghosty[i] = ghosty[i] + (ghostdy[i] * ghostspeed[i]);
        DrawGhost(g2d, ghostx[i] + 1, ghosty[i] + 1);

        if (pacmanx &gt; (ghostx[i] - 12) &amp;&amp; pacmanx &lt; (ghostx[i] + 12) &amp;&amp;
            pacmany &gt; (ghosty[i] - 12) &amp;&amp; pacmany &lt; (ghosty[i] + 12) &amp;&amp;
            ingame) {

            dying = true;
            deathcounter = 64;

        }
    }
}


public void DrawGhost(Graphics2D g2d, int x, int y) {
    g2d.drawImage(ghost, x, y, this);
}


public void MovePacMan() {
    int pos;
    short ch;

    if (reqdx == -pacmandx &amp;&amp; reqdy == -pacmandy) {
        pacmandx = reqdx;
        pacmandy = reqdy;
        viewdx = pacmandx;
        viewdy = pacmandy;
    }
    if (pacmanx % blocksize == 0 &amp;&amp; pacmany % blocksize == 0) {
        pos =
</code></pre>
<p>pacmanx / blocksize + nrofblocks * (int)(pacmany / blocksize);<br>
ch = screendata[pos];</p>
<pre><code>        if ((ch &amp; 16) != 0) {
            screendata[pos] = (short)(ch &amp; 15);
            score++;
        }

        if (reqdx != 0 || reqdy != 0) {
            if (!((reqdx == -1 &amp;&amp; reqdy == 0 &amp;&amp; (ch &amp; 1) != 0) ||
                  (reqdx == 1 &amp;&amp; reqdy == 0 &amp;&amp; (ch &amp; 4) != 0) ||
                  (reqdx == 0 &amp;&amp; reqdy == -1 &amp;&amp; (ch &amp; 2) != 0) ||
                  (reqdx == 0 &amp;&amp; reqdy == 1 &amp;&amp; (ch &amp; 8) != 0))) {
                pacmandx = reqdx;
                pacmandy = reqdy;
                viewdx = pacmandx;
                viewdy = pacmandy;
            }
        }

        // Check for standstill
        if ((pacmandx == -1 &amp;&amp; pacmandy == 0 &amp;&amp; (ch &amp; 1) != 0) ||
            (pacmandx == 1 &amp;&amp; pacmandy == 0 &amp;&amp; (ch &amp; 4) != 0) ||
            (pacmandx == 0 &amp;&amp; pacmandy == -1 &amp;&amp; (ch &amp; 2) != 0) ||
            (pacmandx == 0 &amp;&amp; pacmandy == 1 &amp;&amp; (ch &amp; 8) != 0)) {
            pacmandx = 0;
            pacmandy = 0;
        }
    }
    pacmanx = pacmanx + pacmanspeed * pacmandx;
    pacmany = pacmany + pacmanspeed * pacmandy;
}


public void DrawPacMan(Graphics2D g2d) {
    if (viewdx == -1)
        DrawPacManLeft(g2d);
    else if (viewdx == 1)
        DrawPacManRight(g2d);
    else if (viewdy == -1)
        DrawPacManUp(g2d);
    else
        DrawPacManDown(g2d);
}

public void DrawPacManUp(Graphics2D g2d) {
    switch (pacmananimpos) {
    case 1:
        g2d.drawImage(pacman2up, pacmanx + 1, pacmany + 1, this);
        break;
    case 2:
        g2d.drawImage(pacman3up, pacmanx + 1, pacmany + 1, this);
        break;
    case 3:
        g2d.drawImage(pacman4up, pacmanx + 1, pacmany + 1, this);
        break;
    default:
        g2d.drawImage(pacman1, pacmanx + 1, pacmany + 1, this);
        break;
    }
}


public void DrawPacManDown(Graphics2D g2d) {
	//not gonna spoon feed you Moparians
}


public void DrawPacManLeft(Graphics2D g2d) {
	//not gonna spoon feed you Moparians
}


public void DrawPacManRight(Graphics2D g2d) {
	//not gonna spoon feed you Moparians
}


public void DrawMaze(Graphics2D g2d) {
    short i = 0;
    int x, y;

    for (y = 0; y &lt; scrsize; y += blocksize) {
        for (x = 0; x &lt; scrsize; x += blocksize) {
            g2d.setColor(mazecolor);
            g2d.setStroke(new BasicStroke(2));

            if ((screendata[i] &amp; 1) != 0) // draws left
            {
                g2d.drawLine(x, y, x, y + blocksize - 1);
            }
            if ((screendata[i] &amp; 2) != 0) // draws top
            {
                g2d.drawLine(x, y, x + blocksize - 1, y);
            }
            if ((screendata[i] &amp; 4) != 0) // draws right
            {
                g2d.drawLine(x + blocksize - 1, y, x + blocksize - 1,
                             y + blocksize - 1);
            }
            if ((screendata[i] &amp; 8) != 0) // draws bottom
            {
                g2d.drawLine(x, y + blocksize - 1, x + blocksize - 1,
                             y + blocksize - 1);
            }
            if ((screendata[i] &amp; 16) != 0) // draws point
            {
                g2d.setColor(dotcolor);
                g2d.fillRect(x + 11, y + 11, 2, 2);
            }
            i++;
        }
    }
}

public void GameInit() {
    pacsleft = 3;
    score = 0;
    nrofghosts = 6;
    currentspeed = 3;
}
public void GetImages()
{
	//Moparians, your Pacman sprites go here.. e.g;
  ghost = new ImageIcon(Board.class.getResource("../pacpix/ghost.png")).getImage();
}

class TAdapter extends KeyAdapter {
    public void keyPressed(KeyEvent e) {

      int key = e.getKeyCode();

      if (ingame)
      {
        if (key == KeyEvent.VK_LEFT)
        {
          reqdx=-1;
          reqdy=0;
        }
        else if (key == KeyEvent.VK_RIGHT)
        {
          reqdx=1;
          reqdy=0;
        }
        else if (key == KeyEvent.VK_UP)
        {
          reqdx=0;
          reqdy=-1;
        }
        else if (key == KeyEvent.VK_DOWN)
        {
          reqdx=0;
          reqdy=1;
        }
        else if (key == KeyEvent.VK_ESCAPE &amp;&amp; timer.isRunning())
        {
          ingame=false;
        }
        else if (key == KeyEvent.VK_PAUSE) {
            if (timer.isRunning())
                timer.stop();
            else timer.start();
        }
      }
      else
      {
        if (key == 's' || key == 'S')
      {
          ingame=true;
          GameInit();
        }
      }
  }

      public void keyReleased(KeyEvent e) {
          int key = e.getKeyCode();

          if (key == Event.LEFT || key == Event.RIGHT || 
             key == Event.UP ||  key == Event.DOWN)
          {
            reqdx=0;
            reqdy=0;
          }
      }
  }

public void actionPerformed(ActionEvent e) {
    repaint();  
}
</code></pre>
<p>}[/code]</p>
<p>If you want a leveling system, I suggest you add something like;</p>
<p>[code]    public void LevelSystem() {<br>
short i;<br>
int dx = 1;<br>
int random;</p>
<pre><code>    for (i = 0; i &lt; nrofghosts; i++) {
        ghosty[i] = 4 * blocksize;
        ghostx[i] = 4 * blocksize;
        ghostdy[i] = 0;
        ghostdx[i] = dx;
        dx = -dx;
        random = (int)(Math.random() * (currentspeed + 1));
        if (random &gt; currentspeed)
            random = currentspeed;
        ghostspeed[i] = validspeeds[random];
    }
</code></pre>
<p>//add the block sizes and dying false method here…<br>
}<br>
[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pacman/416730/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pacman/416730/1</link>
        <pubDate>Sat, 01 Oct 2011 23:24:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-416730-1</guid>
        <source url="https://forum.moparisthebest.com/t/pacman/416730.rss">Pacman</source>
      </item>
  </channel>
</rss>
