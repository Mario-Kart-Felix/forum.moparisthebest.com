<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Using JDBC or nah? Flakey connectivity</title>
    <link>https://forum.moparisthebest.com/t/using-jdbc-or-nah-flakey-connectivity/553935</link>
    <description>Since i&#39;m only beginning java i&#39;d like to not learn terrible practice, unlike when I began PHP :/ I know half of you will ignore this, but I know this community and I know that you&#39;re all amazing at practice so i&#39;d rather learn from here than some terrible Youtube video.

So recently i&#39;ve tried to start Java, I have a long background in PHP and decided it&#39;s time to move on. So i&#39;ve got the basics down with Java and i&#39;m on to making apps ($$$).
I spent a good 6 hours today trying to sort out a connection to a database, from everything i&#39;ve read everyone talks about not using JDBC to connect to MySql because people on mobile phones generally they often have flakey connectivity through buggy traffic rewriting proxies and insane firewalls (is that correct? and why if so?). Instead i&#39;m using a basic HTTP connection. So what my goal was is to create a registration system, and create a basic library for MySql functions (Insert, Delete...). 

Here&#39;s why i&#39;m using can you please leave feedback, and if there is a more efficient way because I think this is disgusting and I can see so much wrong with it. I mean this works, but say for someone like Instagram on there app they wouldn&#39;t use a method like this, right? or just any application with a larger user base.

Also I use Android Studio because I mainly want to work on applications, would I be better on Eclipse? Thanks guys!

MainActivity.java

[code=java]
    private void registerUser() {
        String name = editTextName.getText().toString().trim().toLowerCase();
        String username = editTextUsername.getText().toString().trim().toLowerCase();
        String password = editTextPassword.getText().toString().trim().toLowerCase();
        String email = editTextEmail.getText().toString().trim().toLowerCase();

        register(name,username,password,email);
    }

    private void register(String name, String username, String password, String email) {
        class RegisterUser extends AsyncTask&lt;String, Void, String&gt;{
            ProgressDialog loading;
            RegisterUserClass ruc = new RegisterUserClass();

            @Override
            protected void onPreExecute() {
                super.onPreExecute();
                loading = ProgressDialog.show(MainActivity.this, &quot;Please Wait&quot;, null, true, true);
            }

            @Override
            protected void onPostExecute(String s) {
                super.onPostExecute(s);
                loading.dismiss();

                switch(s) {
                    case &quot;0&quot;:
                        System.out.println(&quot;Failed to create client, please try again.&quot;);
                        Toast.makeText(getApplicationContext(), &quot;Failed to create client, please try again.&quot;, Toast.LENGTH_LONG).show();
                        break;
                    case &quot;1&quot;:
                        System.out.println(&quot;Created client, you will be forwarded.&quot;);
                        break;
                }

                Toast.makeText(getApplicationContext(),s,Toast.LENGTH_LONG).show();
            }

            @Override
            protected String doInBackground(String... params) {

                HashMap&lt;String, String&gt; data = new HashMap&lt;String,String&gt;();
                data.put(&quot;name&quot;,params[0]);
                data.put(&quot;username&quot;,params[1]);
                data.put(&quot;password&quot;,params[2]);
                data.put(&quot;email&quot;,params[3]);

                String result = ruc.sendPostRequest(REGISTER_URL,data);

                return result;
            }
        }

        RegisterUser ru = new RegisterUser();
        ru.execute(name, username, password, email);[/code]

RegisterUserClass.java

[code=java]    public String sendPostRequest(String requestURL,
                                  HashMap&lt;String, String&gt; postDataParams) {

        URL url;
        String response = &quot;&quot;;
        try {
            url = new URL(requestURL);

            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setReadTimeout(15000);
            conn.setConnectTimeout(15000);
            conn.setRequestMethod(&quot;POST&quot;);
            conn.setDoInput(true);
            conn.setDoOutput(true);

            OutputStream os = conn.getOutputStream();
            BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(os, &quot;UTF-8&quot;));
            writer.write(getPostDataString(postDataParams));

            writer.flush();
            writer.close();
            os.close();
            int responseCode=conn.getResponseCode();

            if (responseCode == HttpsURLConnection.HTTP_OK) {
                BufferedReader br=new BufferedReader(new InputStreamReader(conn.getInputStream()));
                response = br.readLine();
            }
            else {
                response = &quot;0&quot;;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        return response;
    }

    private String getPostDataString(HashMap&lt;String, String&gt; params) throws UnsupportedEncodingException {
        StringBuilder result = new StringBuilder();
        boolean first = true;
        for(Map.Entry&lt;String, String&gt; entry : params.entrySet()){
            if (first)
                first = false;
            else
                result.append(&quot;&amp;&quot;);

            result.append(URLEncoder.encode(entry.getKey(), &quot;UTF-8&quot;));
            result.append(&quot;=&quot;);
            result.append(URLEncoder.encode(entry.getValue(), &quot;UTF-8&quot;));
        }

        return result.toString();
    }[/code]

index.php ~ the page I request data from

[code=php]&lt;?php
    if($_SERVER[&#39;REQUEST_METHOD&#39;] == &#39;POST&#39;) {
        $name = $_POST[&#39;name&#39;];
        $username = $_POST[&#39;username&#39;];
        $password = $_POST[&#39;password&#39;];
        $email = $_POST[&#39;email&#39;];

        if($name == &#39;&#39; || $username == &#39;&#39; || $password == &#39;&#39; || $email == &#39;&#39;) {
            echo &#39;Please fill in all of your inputs.&#39;;
        } else {
            require_once(&#39;../core/init.php&#39;);

            $QueryRepository = new QueryRepository();

            if($QueryRepository-&gt;fetchClient($username, $email)) {
                echo &#39;Sorry, this client already exists.&#39;;
            } else {
                if($QueryRepository-&gt;insertClient($name, $username, $password, $email)) {
                    echo &quot;1&quot;;
                } else {
                    echo &quot;0&quot;;
                }
            }
        } 
    }  [/code]</description>
    
    <lastBuildDate>Wed, 25 Nov 2015 11:44:36 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/using-jdbc-or-nah-flakey-connectivity/553935.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Using JDBC or nah? Flakey connectivity</title>
        <dc:creator><![CDATA[@Frantix Frantix]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frantix">@Frantix</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="553935">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/my-swagger/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> my-swagger:</div>
<blockquote>
<p>Look into Hibernate or something else ORM</p>
</blockquote>
</aside>
<p>I ended up spending today learning about Hibernate, I got multiple versions of it working and it worked perfectly. The thing is, i’m going to be developing android apps. From what i’ve read Hibernate isn’t native to android and it’s too heavy for an android application. But i’m going to find a light weight ORM package, do you recommend any?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/using-jdbc-or-nah-flakey-connectivity/553935/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/using-jdbc-or-nah-flakey-connectivity/553935/3</link>
        <pubDate>Wed, 25 Nov 2015 11:44:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-553935-3</guid>
        <source url="https://forum.moparisthebest.com/t/using-jdbc-or-nah-flakey-connectivity/553935.rss">Using JDBC or nah? Flakey connectivity</source>
      </item>
      <item>
        <title>Using JDBC or nah? Flakey connectivity</title>
        <dc:creator><![CDATA[@my-swagger my-swagger]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/my-swagger">@my-swagger</a> wrote:</p>
          <blockquote>
              <p>Look into Hibernate or something else ORM</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/using-jdbc-or-nah-flakey-connectivity/553935/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/using-jdbc-or-nah-flakey-connectivity/553935/2</link>
        <pubDate>Tue, 24 Nov 2015 10:54:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-553935-2</guid>
        <source url="https://forum.moparisthebest.com/t/using-jdbc-or-nah-flakey-connectivity/553935.rss">Using JDBC or nah? Flakey connectivity</source>
      </item>
      <item>
        <title>Using JDBC or nah? Flakey connectivity</title>
        <dc:creator><![CDATA[@Frantix Frantix]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frantix">@Frantix</a> wrote:</p>
          <blockquote>
              <p>Since i’m only beginning java i’d like to not learn terrible practice, unlike when I began PHP <img src="https://forum.moparisthebest.com/images/emoji/twitter/confused.png?v=5" title=":confused:" class="emoji" alt=":confused:"> I know half of you will ignore this, but I know this community and I know that you’re all amazing at practice so i’d rather learn from here than some terrible Youtube video.</p>
<p>So recently i’ve tried to start Java, I have a long background in PHP and decided it’s time to move on. So i’ve got the basics down with Java and i’m on to making apps ($$$).<br>
I spent a good 6 hours today trying to sort out a connection to a database, from everything i’ve read everyone talks about not using JDBC to connect to MySql because people on mobile phones generally they often have flakey connectivity through buggy traffic rewriting proxies and insane firewalls (is that correct? and why if so?). Instead i’m using a basic HTTP connection. So what my goal was is to create a registration system, and create a basic library for MySql functions (Insert, Delete…).</p>
<p>Here’s why i’m using can you please leave feedback, and if there is a more efficient way because I think this is disgusting and I can see so much wrong with it. I mean this works, but say for someone like Instagram on there app they wouldn’t use a method like this, right? or just any application with a larger user base.</p>
<p>Also I use Android Studio because I mainly want to work on applications, would I be better on Eclipse? Thanks guys!</p>
<p>MainActivity.java</p>
<p>[code=java]<br>
private void registerUser() {<br>
String name = editTextName.getText().toString().trim().toLowerCase();<br>
String username = editTextUsername.getText().toString().trim().toLowerCase();<br>
String password = editTextPassword.getText().toString().trim().toLowerCase();<br>
String email = editTextEmail.getText().toString().trim().toLowerCase();</p>
<pre><code>    register(name,username,password,email);
}

private void register(String name, String username, String password, String email) {
    class RegisterUser extends AsyncTask&lt;String, Void, String&gt;{
        ProgressDialog loading;
        RegisterUserClass ruc = new RegisterUserClass();

        @Override
        protected void onPreExecute() {
            super.onPreExecute();
            loading = ProgressDialog.show(MainActivity.this, "Please Wait", null, true, true);
        }

        @Override
        protected void onPostExecute(String s) {
            super.onPostExecute(s);
            loading.dismiss();

            switch(s) {
                case "0":
                    System.out.println("Failed to create client, please try again.");
                    Toast.makeText(getApplicationContext(), "Failed to create client, please try again.", Toast.LENGTH_LONG).show();
                    break;
                case "1":
                    System.out.println("Created client, you will be forwarded.");
                    break;
            }

            Toast.makeText(getApplicationContext(),s,Toast.LENGTH_LONG).show();
        }

        @Override
        protected String doInBackground(String... params) {

            HashMap&lt;String, String&gt; data = new HashMap&lt;String,String&gt;();
            data.put("name",params[0]);
            data.put("username",params[1]);
            data.put("password",params[2]);
            data.put("email",params[3]);

            String result = ruc.sendPostRequest(REGISTER_URL,data);

            return result;
        }
    }

    RegisterUser ru = new RegisterUser();
    ru.execute(name, username, password, email);[/code]
</code></pre>
<p>RegisterUserClass.java</p>
<p>[code=java]    public String sendPostRequest(String requestURL,<br>
HashMap&lt;String, String&gt; postDataParams) {</p>
<pre><code>    URL url;
    String response = "";
    try {
        url = new URL(requestURL);

        HttpURLConnection conn = (HttpURLConnection) url.openConnection();
        conn.setReadTimeout(15000);
        conn.setConnectTimeout(15000);
        conn.setRequestMethod("POST");
        conn.setDoInput(true);
        conn.setDoOutput(true);

        OutputStream os = conn.getOutputStream();
        BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(os, "UTF-8"));
        writer.write(getPostDataString(postDataParams));

        writer.flush();
        writer.close();
        os.close();
        int responseCode=conn.getResponseCode();

        if (responseCode == HttpsURLConnection.HTTP_OK) {
            BufferedReader br=new BufferedReader(new InputStreamReader(conn.getInputStream()));
            response = br.readLine();
        }
        else {
            response = "0";
        }
    } catch (Exception e) {
        e.printStackTrace();
    }

    return response;
}

private String getPostDataString(HashMap&lt;String, String&gt; params) throws UnsupportedEncodingException {
    StringBuilder result = new StringBuilder();
    boolean first = true;
    for(Map.Entry&lt;String, String&gt; entry : params.entrySet()){
        if (first)
            first = false;
        else
            result.append("&amp;");

        result.append(URLEncoder.encode(entry.getKey(), "UTF-8"));
        result.append("=");
        result.append(URLEncoder.encode(entry.getValue(), "UTF-8"));
    }

    return result.toString();
}[/code]
</code></pre>
<p>index.php ~ the page I request data from</p>
<p>[code=php]&lt;?php<br>
if($_SERVER[‘REQUEST_METHOD’] == ‘POST’) {<br>
$name = $_POST[‘name’];<br>
$username = $_POST[‘username’];<br>
$password = $_POST[‘password’];<br>
$email = $_POST[‘email’];</p>
<pre><code>    if($name == '' || $username == '' || $password == '' || $email == '') {
        echo 'Please fill in all of your inputs.';
    } else {
        require_once('../core/init.php');

        $QueryRepository = new QueryRepository();

        if($QueryRepository-&gt;fetchClient($username, $email)) {
            echo 'Sorry, this client already exists.';
        } else {
            if($QueryRepository-&gt;insertClient($name, $username, $password, $email)) {
                echo "1";
            } else {
                echo "0";
            }
        }
    } 
}  [/code]</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/using-jdbc-or-nah-flakey-connectivity/553935/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/using-jdbc-or-nah-flakey-connectivity/553935/1</link>
        <pubDate>Tue, 24 Nov 2015 10:25:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-553935-1</guid>
        <source url="https://forum.moparisthebest.com/t/using-jdbc-or-nah-flakey-connectivity/553935.rss">Using JDBC or nah? Flakey connectivity</source>
      </item>
  </channel>
</rss>
