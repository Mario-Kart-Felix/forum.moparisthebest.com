<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>My C++ graphics library</title>
    <link>https://forum.moparisthebest.com/t/my-c-graphics-library/437058</link>
    <description>Well, when i saw that RSCD is using the Java Native Interface, or JNI for short, I thought it would be fun (nonetheless freaking awesome) to make a graphics library in C++. Why would I? Well, it&#39;s plain and simple. I wanted to get more familiar with C++ and, JNI. Plus, this is a good opportunity to refactor as i work :) 

What I pretty much did was port over the GameImage class, however it&#39;s not completely done. What i have managed to complete is:

[ul][li]drawing quadrilaterals, transparent and opaque[/li]
[li]drawing an outline of quadrilaterals[/li]
[li]drawing quadrilaterals with a gradient[/li]
[li]drawing menu buttons (ie the login buttons &#39;click here to log in&#39;)[/li]
[li]drawing lines, vertically and horizontally[/li]
[li]&#39;fading&#39; the current pixels (i can&#39;t think of a proper name for this...)[/li]
[li]loading external fonts from cache[/li]
[li]drawing text with said fonts[/li][/ul]


Here is picture of &#39;native rendering&#39;
[img]http://i.imgur.com/BBgzz.png[/img]

and the code
[code=cpp]#include &lt;iostream&gt;
#include &lt;string.h&gt;
#include &quot;ImageCalculations.h&quot;

RuneScape::ImageCalculations::ImageCalculations()
{
     std::string str(&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!\&quot;\243$%^&amp;*()-_=+[{]};:&#39;@#~,&lt;.&gt;/?\\| &quot;);
     for (int i = 0; i &lt; 256; i++)
     {
          std::string::size_type loc = str.find((char)i, 0);
          if (loc == std::string::npos)
          {
               loc = 74;
          }
          indexes[i] = loc * 9;
     }
}

RuneScape::ImageCalculations::~ImageCalculations()
{
     delete[] pixels;
}

int RuneScape::ImageCalculations::getWidth()
{
    return this-&gt;defaultWidth;
}

int RuneScape::ImageCalculations::getHeight()
{
    return this-&gt;defaultHeight;
}

void RuneScape::ImageCalculations::init(int width, int height)
{
     this-&gt;pixels[width * height];
     this-&gt;defaultWidth = width;
     this-&gt;defaultHeight = height;
	 setDimensions(0, 0, width, height);
     
     for (unsigned int i = 0; i &lt; (width * height); i++)
     {
         this-&gt;pixels[i] = 0;
     }
     
}

void RuneScape::ImageCalculations::setDimensions(int x, int y, int width, int height)
{
     if (width &gt; this-&gt;defaultWidth)
     {
          width = this-&gt;defaultWidth;
     }
     if (height &gt; this-&gt;defaultHeight)
     {
          height = this-&gt;defaultHeight;
     }
     this-&gt;imageX = x;
	 this-&gt;imageY = y;
     this-&gt;width = width;
     this-&gt;height = height;
}

void RuneScape::ImageCalculations::resetDimensions(void)
{
	this-&gt;imageX = 0;
	this-&gt;imageY = 0;
	this-&gt;width = this-&gt;defaultWidth;
	this-&gt;height = this-&gt;defaultHeight;
}

void RuneScape::ImageCalculations::clearPixels(void)
{
     for (unsigned int i = 0; i &lt; (this-&gt;defaultWidth * this-&gt;defaultHeight); i++)
     {
         this-&gt;pixels[i] = 0;
     }
}

void RuneScape::ImageCalculations::setPixelColor(int x, int y, int color)
{
     if (x &gt; this-&gt;width || x &lt; 0 || y &gt; this-&gt;height || y &lt; 0)
     {
           return;
     }
     this-&gt;pixels[x + (y * this-&gt;defaultWidth)] = color;
}

void RuneScape::ImageCalculations::drawQuad(int x, int y, int width, int height, int color)
{
     if (x + width &gt; this-&gt;width)
     {
           width = this-&gt;width - x;
     }
     if (y + height &gt; this-&gt;height)
     {
           height = this-&gt;height - y;
     }
     
     int wid = this-&gt;defaultWidth - width;
     int index = x + (y * this-&gt;defaultWidth);

     for (int y = 0; y &lt; height; y++)
     {
         for (int x = 0; x &lt; width; x++)
         {
             this-&gt;pixels[index++] = color;
         }
         index += wid;
     }
}

void RuneScape::ImageCalculations::drawQuadOutline(int x, int y, int width, int height, int color)
{
     drawXAxisLine(x, y, width, color);
     drawXAxisLine(x, (y + height) - 1, width, color);
     drawYAxisLine(x, y, height, color);
     drawYAxisLine((x + width) - 1, y, height, color);
}

void RuneScape::ImageCalculations::drawTransparentQuad(int x, int y, int width, int height, int color, int opacity)
{
     if (x + width &gt; this-&gt;width)
     {
           width = this-&gt;width - x;
     }
     if (y + height &gt; this-&gt;height)
     {
           height = this-&gt;height - y;
     }
     int opaqueness = 256 - opacity;
     int rModifier = (color &gt;&gt; 16 &amp; 0xff) * opacity;
     int gModifier = (color &gt;&gt; 8 &amp; 0xff) * opacity;
     int bModifier = (color &amp; 0xff) * opacity;
     
     int wid = this-&gt;defaultWidth - width;
     int index = x + (y * this-&gt;defaultWidth);
     
     for (int y = -height; y &lt; 0; y++)
     {
         for (int x = -width; x &lt; 0; x++)
         {
             int finR = (this-&gt;pixels[index] &gt;&gt; 16 &amp; 0xff) * opaqueness;
             int finG = (this-&gt;pixels[index] &gt;&gt; 8 &amp; 0xff) * opaqueness;
             int finB = (this-&gt;pixels[index] &amp; 0xff) * opaqueness;
             this-&gt;pixels[index++] = ((rModifier + finR &gt;&gt; 8) &lt;&lt; 16) + ((gModifier + finG &gt;&gt; 8) &lt;&lt; 8) + (bModifier + finB &gt;&gt; 8);
         }
         index += wid;
     }
}

void RuneScape::ImageCalculations::drawGradientQuad(int x, int y, int width, int heigth, int startCol, int endCol)
{
	if (x &lt; imageX)
	{
		width -= imageX - x;
		x = imageX;
	}
	if (x + width &gt; this-&gt;width)
		width = this-&gt;width - x;
        
	int k1 = endCol &gt;&gt; 16 &amp; 0xff, l1 = endCol &gt;&gt; 8 &amp; 0xff, i2 = endCol &amp; 0xff;
	int j2 = startCol &gt;&gt; 16 &amp; 0xff, k2 = startCol &gt;&gt; 8 &amp; 0xff, l2 = startCol &amp; 0xff;
	
	int i3 = this-&gt;defaultWidth - width;

	int j3 = x + y * this-&gt;defaultWidth;
	
	for (int k3 = 0; k3 &lt; height; k3++)
	{
		if (k3 + y &gt;= imageY &amp;&amp; k3 + y &lt; this-&gt;height)
		{
			int l3 = ((k1 * k3 + j2 * (height - k3)) / height &lt;&lt; 16) + ((l1 * k3 + k2 * (height - k3)) / height &lt;&lt; 8) + (i2 * k3 + l2 * (height - k3)) / height;
			for (int i4 = -width; i4 &lt; 0; i4++)
				pixels[j3++] = l3;
			j3 += i3;
		}
		else
		{
			j3 += this-&gt;defaultWidth;
		}
	}

}

void RuneScape::ImageCalculations::drawXAxisLine(int x, int y, int width, int color)
{
	if (y &lt; imageY || y &gt;= this-&gt;height)
		return;
	if (x &lt; imageX) {
		width -= imageX - x;
		x = imageX;
	}
	if (x + width &gt; this-&gt;width)
		width = this-&gt;width - x;

	int xPixel = x + y * this-&gt;defaultWidth;

	for (int yPixel = 0; yPixel &lt; width; yPixel++)
		pixels[xPixel + yPixel] = color;
}

void RuneScape::ImageCalculations::drawYAxisLine(int x, int y, int height, int color)
{
	if (x &lt; imageX || x &gt;= this-&gt;width)
            return;
        if (y &lt; imageY) {
            height -= imageY - y;
            y = imageY;
        }
        if (y + height &gt; this-&gt;width)
            height = this-&gt;height - y;
		int xPixel = x + y * this-&gt;defaultWidth;
        for (int yPixel = 0; yPixel &lt; height; yPixel++)
            pixels[xPixel + yPixel * this-&gt;defaultWidth] = color;
}

void RuneScape::ImageCalculations::fadeoutPixels(void)
{
     int max = this-&gt;defaultWidth * this-&gt;defaultHeight;
     for (int i = 0; i &lt; max; i++)
     {
          int color = this-&gt;pixels[i] &amp; 0xffffff;
          this-&gt;pixels[i] = (color &gt;&gt; 1 &amp; 0x7f7f7f) + (color &gt;&gt; 2 &amp; 0x3f3f3f) + (color &gt;&gt; 3 &amp; 0x1f1f1f) + (color &gt;&gt; 4 &amp; 0xf0f0f);
     }
}

void RuneScape::ImageCalculations::loadFont(char* data)
{
	fonts.push_back(data);
}

void RuneScape::ImageCalculations::drawString(char* data, int x, int y, int font, int color, bool useShadow)
{
	const char* fontData = this-&gt;fonts.at(font);
	for (int i = 0; i &lt; strlen(data); i++)
	{
		int charIndex = indexes[data[i]];
		if (useShadow &amp;&amp; color != 0)
		{
			formatAndPlotLetter(charIndex, x + 1, y, font, 0);
			formatAndPlotLetter(charIndex, x, y + 1, font, 0);
		}
		formatAndPlotLetter(charIndex, x, y, font, color);
		x += fontData[charIndex + 7];
	}
}

void RuneScape::ImageCalculations::drawCenteredString(char* data, int x, int y, int font, int color, bool useShadow)
{
	drawString(data, x - getTextWidth(data, font) / 2, y, font, color, useShadow);
}

void RuneScape::ImageCalculations::formatAndPlotLetter(int charIndex, int x, int y, int font, int color)
{
	const char* fontData = this-&gt;fonts.at(font);
	int x_ = x + fontData[charIndex + 5];
	int y_ = y - fontData[charIndex + 6];
	int char_width = fontData[charIndex + 3];
	int char_height = fontData[charIndex + 4];
	int fontIndex = fontData[charIndex] * 16384 + fontData[charIndex + 1] * 128 + fontData[charIndex + 2];
	int index = x_ + (y_ * this-&gt;defaultWidth);
	int max_width = this-&gt;defaultWidth - char_width;
	int max_height = 0;
	if (y_ &lt; imageY)
	{
		int i3 = imageY - y_;
		char_height -= i3;
		y_ = imageY;
		fontIndex += i3 * char_width;
		index += i3 * this-&gt;defaultWidth;
	}
	if (y_ + char_height &gt;= this-&gt;height)
		char_height -= ((y_ + char_height) - this-&gt;height) + 1;
	if (x_ &lt; imageX)
	{
		int j3 = imageX - x_;
		char_width -= j3;
		x_ = imageX;
		fontIndex += j3;
		index += j3;
		max_height += j3;
		max_width += j3;
	}
	if (x_ + char_width &gt;= this-&gt;width)
	{
		int k3 = ((x_ + char_width) - this-&gt;width) + 1;
		char_width -= k3;
		max_height += k3;
		max_width += k3;
	}
	if (char_width &gt; 0 &amp;&amp; char_height &gt; 0)
	{
		plotLetter(font, color, fontIndex, index, char_width, char_height, max_width, max_height);
	}
}

void RuneScape::ImageCalculations::plotLetter(int font, int color, int fontIndex, int pixelIndex, int width, int height, int pixelMod, int fontMod)
{
	const char* fontData = fonts.at(font);
	int l1 = -(width &gt;&gt; 2);
	width = -(width &amp; 3);
	for (int i2 = -height; i2 &lt; 0; i2++) {
		for (int j2 = l1; j2 &lt; 0; j2++) {
			if (fontData[fontIndex++] != 0)
				pixels[pixelIndex++] = color;
			else
				pixelIndex++;
			
			if (fontData[fontIndex++] != 0)
				pixels[pixelIndex++] = color;
			else
				pixelIndex++;

			if (fontData[fontIndex++] != 0)
				pixels[pixelIndex++] = color;
			else
				pixelIndex++;

			if (fontData[fontIndex++] != 0)
				pixels[pixelIndex++] = color;
			else
				pixelIndex++;
		}
		for (int k2 = width; k2 &lt; 0; k2++)
			if (fontData[fontIndex++] != 0)
				pixels[pixelIndex++] = color;
			else
				pixelIndex++;

                pixelIndex += pixelMod;
                fontIndex += fontMod;
		}
}

void RuneScape::ImageCalculations::drawButton(int x, int y, int width, int height)
{
	setDimensions(x, y, x + width, y + height);
	drawGradientQuad(x, y, width, height, 5793416, 8884915);

	drawXAxisLine(x, y, width, 8884915);
	drawXAxisLine(x + 1, y + 1, width - 2, 8884915);
	drawXAxisLine(x + 2, y + 2, width - 4, 6385815);

	drawYAxisLine(x, y, height, 8884915);
	drawYAxisLine(x + 1, y + 1, height - 2, 8884915);
	drawYAxisLine(x + 2, y + 2, height - 4, 6385815);

	drawXAxisLine(x, (y + height) - 1, width, 5793416);
	drawXAxisLine(x + 1, (y + height) - 2, width - 2, 5793416);
	drawXAxisLine(x + 2, (y + height) - 3, width - 4, 5528952);

	drawYAxisLine((x + width) - 1, y, height, 5793416);
	drawYAxisLine((x + width) - 2, y + 1, height - 2, 5793416);
	drawYAxisLine((x + width) - 3, y + 2, height - 4, 5528952);

	resetDimensions();
}

int RuneScape::ImageCalculations::getTextWidth(char* text, int font)
{
	int val = 0, length = strlen(text);
	char* fontData = fonts.at(font);
	for (int i = 0; i &lt; length; i++) {
		if (text[i] == &#39;@&#39; &amp;&amp; i + 4 &lt; length &amp;&amp; text[i + 4] == &#39;@&#39;)
		{
			i += 4;
		}
		else if (text[i] == &#39;~&#39; &amp;&amp; i + 4 &lt;length &amp;&amp; text[i + 4] == &#39;~&#39;)
		{
			i += 4;
		}
		else
		{
			val += fontData[indexes[text[i]] + 7];
		}
	}
	return val;
}

int RuneScape::ImageCalculations::getTextHeight(int font)
{
	switch (font)
	{
	case 0:
		return 12;
	case 1:
	case 2:
		return 14;
	case 3:
	case 4:
		return 15;
	case 5:
		return 19;
	case 6:
		return 24;
	case 7:
		return 29;
	default:
		return 0;
	}
}[/code]</description>
    
    <lastBuildDate>Wed, 21 Mar 2012 20:10:36 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/my-c-graphics-library/437058.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>My C++ graphics library</title>
        <dc:creator><![CDATA[@Not_a_bot Not_a_bot]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/not_a_bot">@Not_a_bot</a> wrote:</p>
          <blockquote>
              <p>Someone should attempt a HTML5 port using OpenGL</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-c-graphics-library/437058/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-c-graphics-library/437058/4</link>
        <pubDate>Wed, 21 Mar 2012 20:10:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-437058-4</guid>
        <source url="https://forum.moparisthebest.com/t/my-c-graphics-library/437058.rss">My C++ graphics library</source>
      </item>
      <item>
        <title>My C++ graphics library</title>
        <dc:creator><![CDATA[@imthenull imthenull]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imthenull">@imthenull</a> wrote:</p>
          <blockquote>
              <p>i am aware of jna, as i said in the OP i wanted to get to know jni more.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-c-graphics-library/437058/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-c-graphics-library/437058/3</link>
        <pubDate>Wed, 21 Mar 2012 18:40:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-437058-3</guid>
        <source url="https://forum.moparisthebest.com/t/my-c-graphics-library/437058.rss">My C++ graphics library</source>
      </item>
      <item>
        <title>My C++ graphics library</title>
        <dc:creator><![CDATA[@RSC_xD123 RSC xD123]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rsc_xd123">@RSC_xD123</a> wrote:</p>
          <blockquote>
              <p>You may find JNA more awesome than JNI</p>
<aside class="onebox whitelistedgeneric">
  <header class="source">
      <img src="https://assets-cdn.github.com/favicon.ico" class="site-icon" width="32" height="32">
      <a href="https://github.com/java-native-access/jna" target="_blank" rel="nofollow noopener">GitHub</a>
  </header>
  <article class="onebox-body">
    <img src="https://avatars3.githubusercontent.com/u/13812895?s=400&amp;v=4" class="thumbnail onebox-avatar" width="150" height="150">

<h3><a href="https://github.com/java-native-access/jna" target="_blank" rel="nofollow noopener">java-native-access/jna</a></h3>

<p>jna - Java Native Access</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p>No need to write stupid headers and etc up just use JNA to load the native libs like GDI32 use the <a href="http://msdn.microsoft.com/en-us/library/dd145203(v=vs.85).aspx" rel="nofollow noopener">http://msdn.microsoft.com/en-us/library/dd145203(v=vs.85).aspx</a> as method reference’s worth looking into, Makes life so much easier</p>
<p>[code]import com.sun.jna.Native;<br>
import com.sun.jna.NativeLong;<br>
import com.sun.jna.Pointer;<br>
import com.sun.jna.Structure;<br>
import com.sun.jna.ptr.IntByReference;<br>
import com.sun.jna.win32.StdCallLibrary;</p>
<p>public interface Kernel32 extends StdCallLibrary {<br>
Kernel32 INSTANCE = (Kernel32) Native.loadLibrary(“kernel32”, Kernel32.class);<br>
static int MAX_PATH=256;</p>
<pre><code>/*
 * http://msdn.microsoft.com/en-us/library/ms683180(VS.85).aspx
 */
int GetCurrentProcessId();

/*
 * http://msdn.microsoft.com/en-us/library/ms683179(VS.85).aspx
 * NOT tested
 */
Pointer GetCurrentProcess();

/*
 * http://msdn.microsoft.com/en-us/library/ms679360(VS.85).aspx
 * NOT tested
 */
int GetLastError();

/*
 * http://msdn.microsoft.com/en-us/library/ms684320(VS.85).aspx
 */
Pointer OpenProcess(int dwDesiredAccess, boolean bInheritHandle, int dwProcessId);
int OpenProcess(int dwDesiredAccess, int bInheritHandle, int dwProcessId);

/*
 * http://msdn.microsoft.com/en-us/library/ms680553(VS.85).aspx
 */
boolean ReadProcessMemory(Pointer hProcess, int i, int[] buffer, int nSize, IntByReference outNumberOfBytesRead);
boolean ReadProcessMemory(Pointer hProcess, int i, Pointer buffer, int nSize, IntByReference outNumberOfBytesRead);


/*
 * http://msdn.microsoft.com/en-us/library/ms681674(v=VS.85).aspx
 */
boolean WriteProcessMemory(Pointer hProcess, int lpBaseAddress, int[] lpBuffer, int nSize, int[] lpNumberOfBytesWritten);
boolean WriteProcessMemory(Pointer hProcess, int lpBaseAddress, float[] lpBuffer, int nSize, int[] lpNumberOfBytesWritten);

/*
 * http://msdn.microsoft.com/en-us/library/ms724211(VS.85).aspx
 */
boolean CloseHandle(Pointer hObject);


/*
 * http://msdn.microsoft.com/en-us/library/ms682489(VS.85).aspx
 * http://msdn.microsoft.com/en-us/library/ms686701(VS.85).aspx
 */
Pointer CreateToolhelp32Snapshot(int dwFlags,int th32ProcessID);
    
/*
 * http://msdn.microsoft.com/en-us/library/ms684839(VS.85).aspx
 */
public static class LPPROCESSENTRY32 extends Structure {
	//public static class ByValue     extends LPPROCESSENTRY32 implements Structure.ByValue {}
	//public static class ByReference extends LPPROCESSENTRY32 implements Structure.ByReference {}
	public int				dwSize;							//The size of the structure, in bytes. If you do not initialize dwSize, Process32First fails.
	public int				cntUsage;							//This member is no longer used and is always set to zero.
	public int				th32ProcessID;					//The process identifier.
	public IntByReference	th32DefaultHeapID;					//This member is no longer used and is always set to zero.
	public int				th32ModuleID;						//This member is no longer used and is always set to zero.
	public int				cntThreads;						//The number of execution threads started by the process.
	public int				th32ParentProcessID;			//The identifier of the process that created this process (its parent process).
	public NativeLong      pcPriClassBase;					//The base priority of any threads created by this process.
	public int				dwFlags;							//This member is no longer used and is always set to zero.
	public char[]			szExeFile = new char[MAX_PATH];//The name of the executable file for the process.
	
	public LPPROCESSENTRY32(){
		dwSize=size();
	}
	
	/*
	 * LPPROCESSENTRY32 seems to need the char array. However its not the correct structure.
	 * So this needs to be transformed.
	 */
	public String getSzExeFile(){
		StringBuilder sb = new StringBuilder();
		char a, b;
		for (int i = 0; i &lt; szExeFile.length; i++) {
			a=(char)(szExeFile[i]   &amp;0xFF);
			if (a==0) break;
			sb.append(a);
			
			b=(char)(szExeFile[i]&gt;&gt;8&amp;0xFF);
			if (b==0) break;
			sb.append(b);
		}
		return sb.toString();
	}
}

/*
 * http://msdn.microsoft.com/en-us/library/ms684834(VS.85).aspx
 */
boolean Process32First(Pointer hSnapshot, LPPROCESSENTRY32 lppe);

/*
 * http://msdn.microsoft.com/en-us/library/ms684836(VS.85).aspx
 */
boolean Process32Next(Pointer hSnapshot, LPPROCESSENTRY32 lppe);



/*
 * http://msdn.microsoft.com/en-us/library/ms648042(VS.85).aspx
 */    
Pointer FindResourceA(Pointer hModule, String lpName, String lpType);

/*
 * http://msdn.microsoft.com/en-us/library/ms648047(VS.85).aspx
 */
Pointer LockResource(Pointer hResData);

/*
 * http://msdn.microsoft.com/en-us/library/ms648048(VS.85).aspx
 */    
int SizeofResource(Pointer hModule,Pointer hResInfo);


/*
 * http://msdn.microsoft.com/en-us/library/ms648037(VS.85).aspx
 */
public static interface ENUMRESNAMEPROC extends StdCallCallback {
	public abstract boolean callback(Pointer hModule, String lpszType, String lpszName, IntByReference lParam);
}
boolean EnumResourceNamesA(Pointer hModule,String lpszType, ENUMRESNAMEPROC lpEnumFunc, IntByReference lParam);




/*
 * http://msdn.microsoft.com/en-us/library/ms724958(VS.85).aspx
 * http://www.pinvoke.net/default.aspx/Structures.SYSTEM_INFO
 */
public static class LPSYSTEM_INFO extends Structure {
	public short	wProcessorArchitecture;
	public short	wReserved;		
	public int		dwPageSize;
	public Pointer	lpMinimumApplicationAddress;
	public Pointer	lpMaximumApplicationAddress;
	public Pointer	dwActiveProcessorMask;
	public int		dwNumberOfProcessors;
	public int		dwProcessorType;
	public int		dwAllocationGranularity;
	public short	wProcessorLevel;
	public short	wProcessorRevision;
}    	
	
/*
 * http://msdn.microsoft.com/en-us/library/ms724381(VS.85).aspx
 */
void GetSystemInfo(LPSYSTEM_INFO lpSystemInfo);


/*
 * http://msdn.microsoft.com/en-us/library/aa366775(VS.85).aspx
 */
public static class MEMORY_BASIC_INFORMATION extends Structure {
	public Pointer	BaseAddress;
	public Pointer	AllocationBase;
	public int		AllocationProtect;
	public int		RegionSize;
	public int		State;
	public int		Protect;
	public int		Type;
}

/*
 * http://msdn.microsoft.com/en-us/library/aa366907(VS.85).aspx
 */
public int VirtualQueryEx(Pointer hProcess,Pointer lpAddress, MEMORY_BASIC_INFORMATION lpBuffer, int dwLength);
</code></pre>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-c-graphics-library/437058/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-c-graphics-library/437058/2</link>
        <pubDate>Wed, 21 Mar 2012 11:23:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-437058-2</guid>
        <source url="https://forum.moparisthebest.com/t/my-c-graphics-library/437058.rss">My C++ graphics library</source>
      </item>
      <item>
        <title>My C++ graphics library</title>
        <dc:creator><![CDATA[@imthenull imthenull]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imthenull">@imthenull</a> wrote:</p>
          <blockquote>
              <p>Well, when i saw that RSCD is using the Java Native Interface, or JNI for short, I thought it would be fun (nonetheless freaking awesome) to make a graphics library in C++. Why would I? Well, it’s plain and simple. I wanted to get more familiar with C++ and, JNI. Plus, this is a good opportunity to refactor as i work <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>What I pretty much did was port over the GameImage class, however it’s not completely done. What i have managed to complete is:</p>
<p>[ul][li]drawing quadrilaterals, transparent and opaque[/li]<br>
[li]drawing an outline of quadrilaterals[/li]<br>
[li]drawing quadrilaterals with a gradient[/li]<br>
[li]drawing menu buttons (ie the login buttons ‘click here to log in’)[/li]<br>
[li]drawing lines, vertically and horizontally[/li]<br>
[li]‘fading’ the current pixels (i can’t think of a proper name for this…)[/li]<br>
[li]loading external fonts from cache[/li]<br>
[li]drawing text with said fonts[/li][/ul]</p>
<p>Here is picture of ‘native rendering’<br>
<img src="http://i.imgur.com/BBgzz.png" alt width="546" height="434"></p>
<p>and the code</p>
<p>[code=cpp]<span class="hashtag">#include</span> <br>
<span class="hashtag">#include</span> &lt;string.h&gt;<br>
<span class="hashtag">#include</span> “ImageCalculations.h”</p>
<p>RuneScape::ImageCalculations::ImageCalculations()<br>
{<br>
std::string str(“ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!”\243$%^&amp;*()-_=+[{]};:’@#~,&lt;.&gt;/?\| ");<br>
for (int i = 0; i &lt; 256; i++)<br>
{<br>
std::string::size_type loc = str.find((char)i, 0);<br>
if (loc == std::string::npos)<br>
{<br>
loc = 74;<br>
}<br>
indexes[i] = loc * 9;<br>
}<br>
}</p>
<p>RuneScape::ImageCalculations::~ImageCalculations()<br>
{<br>
delete[] pixels;<br>
}</p>
<p>int RuneScape::ImageCalculations::getWidth()<br>
{<br>
return this-&gt;defaultWidth;<br>
}</p>
<p>int RuneScape::ImageCalculations::getHeight()<br>
{<br>
return this-&gt;defaultHeight;<br>
}</p>
<p>void RuneScape::ImageCalculations::init(int width, int height)<br>
{<br>
this-&gt;pixels[width * height];<br>
this-&gt;defaultWidth = width;<br>
this-&gt;defaultHeight = height;<br>
setDimensions(0, 0, width, height);</p>
<pre><code> for (unsigned int i = 0; i &lt; (width * height); i++)
 {
     this-&gt;pixels[i] = 0;
 }
</code></pre>
<p>}</p>
<p>void RuneScape::ImageCalculations::setDimensions(int x, int y, int width, int height)<br>
{<br>
if (width &gt; this-&gt;defaultWidth)<br>
{<br>
width = this-&gt;defaultWidth;<br>
}<br>
if (height &gt; this-&gt;defaultHeight)<br>
{<br>
height = this-&gt;defaultHeight;<br>
}<br>
this-&gt;imageX = x;<br>
this-&gt;imageY = y;<br>
this-&gt;width = width;<br>
this-&gt;height = height;<br>
}</p>
<p>void RuneScape::ImageCalculations::resetDimensions(void)<br>
{<br>
this-&gt;imageX = 0;<br>
this-&gt;imageY = 0;<br>
this-&gt;width = this-&gt;defaultWidth;<br>
this-&gt;height = this-&gt;defaultHeight;<br>
}</p>
<p>void RuneScape::ImageCalculations::clearPixels(void)<br>
{<br>
for (unsigned int i = 0; i &lt; (this-&gt;defaultWidth * this-&gt;defaultHeight); i++)<br>
{<br>
this-&gt;pixels[i] = 0;<br>
}<br>
}</p>
<p>void RuneScape::ImageCalculations::setPixelColor(int x, int y, int color)<br>
{<br>
if (x &gt; this-&gt;width || x &lt; 0 || y &gt; this-&gt;height || y &lt; 0)<br>
{<br>
return;<br>
}<br>
this-&gt;pixels[x + (y * this-&gt;defaultWidth)] = color;<br>
}</p>
<p>void RuneScape::ImageCalculations::drawQuad(int x, int y, int width, int height, int color)<br>
{<br>
if (x + width &gt; this-&gt;width)<br>
{<br>
width = this-&gt;width - x;<br>
}<br>
if (y + height &gt; this-&gt;height)<br>
{<br>
height = this-&gt;height - y;<br>
}</p>
<pre><code> int wid = this-&gt;defaultWidth - width;
 int index = x + (y * this-&gt;defaultWidth);

 for (int y = 0; y &lt; height; y++)
 {
     for (int x = 0; x &lt; width; x++)
     {
         this-&gt;pixels[index++] = color;
     }
     index += wid;
 }
</code></pre>
<p>}</p>
<p>void RuneScape::ImageCalculations::drawQuadOutline(int x, int y, int width, int height, int color)<br>
{<br>
drawXAxisLine(x, y, width, color);<br>
drawXAxisLine(x, (y + height) - 1, width, color);<br>
drawYAxisLine(x, y, height, color);<br>
drawYAxisLine((x + width) - 1, y, height, color);<br>
}</p>
<p>void RuneScape::ImageCalculations::drawTransparentQuad(int x, int y, int width, int height, int color, int opacity)<br>
{<br>
if (x + width &gt; this-&gt;width)<br>
{<br>
width = this-&gt;width - x;<br>
}<br>
if (y + height &gt; this-&gt;height)<br>
{<br>
height = this-&gt;height - y;<br>
}<br>
int opaqueness = 256 - opacity;<br>
int rModifier = (color &gt;&gt; 16 &amp; 0xff) * opacity;<br>
int gModifier = (color &gt;&gt; 8 &amp; 0xff) * opacity;<br>
int bModifier = (color &amp; 0xff) * opacity;</p>
<pre><code> int wid = this-&gt;defaultWidth - width;
 int index = x + (y * this-&gt;defaultWidth);
 
 for (int y = -height; y &lt; 0; y++)
 {
     for (int x = -width; x &lt; 0; x++)
     {
         int finR = (this-&gt;pixels[index] &gt;&gt; 16 &amp; 0xff) * opaqueness;
         int finG = (this-&gt;pixels[index] &gt;&gt; 8 &amp; 0xff) * opaqueness;
         int finB = (this-&gt;pixels[index] &amp; 0xff) * opaqueness;
         this-&gt;pixels[index++] = ((rModifier + finR &gt;&gt; 8) &lt;&lt; 16) + ((gModifier + finG &gt;&gt; 8) &lt;&lt; 8) + (bModifier + finB &gt;&gt; 8);
     }
     index += wid;
 }
</code></pre>
<p>}</p>
<p>void RuneScape::ImageCalculations::drawGradientQuad(int x, int y, int width, int heigth, int startCol, int endCol)<br>
{<br>
if (x &lt; imageX)<br>
{<br>
width -= imageX - x;<br>
x = imageX;<br>
}<br>
if (x + width &gt; this-&gt;width)<br>
width = this-&gt;width - x;</p>
<pre><code>int k1 = endCol &gt;&gt; 16 &amp; 0xff, l1 = endCol &gt;&gt; 8 &amp; 0xff, i2 = endCol &amp; 0xff;
int j2 = startCol &gt;&gt; 16 &amp; 0xff, k2 = startCol &gt;&gt; 8 &amp; 0xff, l2 = startCol &amp; 0xff;

int i3 = this-&gt;defaultWidth - width;

int j3 = x + y * this-&gt;defaultWidth;

for (int k3 = 0; k3 &lt; height; k3++)
{
	if (k3 + y &gt;= imageY &amp;&amp; k3 + y &lt; this-&gt;height)
	{
		int l3 = ((k1 * k3 + j2 * (height - k3)) / height &lt;&lt; 16) + ((l1 * k3 + k2 * (height - k3)) / height &lt;&lt; 8) + (i2 * k3 + l2 * (height - k3)) / height;
		for (int i4 = -width; i4 &lt; 0; i4++)
			pixels[j3++] = l3;
		j3 += i3;
	}
	else
	{
		j3 += this-&gt;defaultWidth;
	}
}
</code></pre>
<p>}</p>
<p>void RuneScape::ImageCalculations::drawXAxisLine(int x, int y, int width, int color)<br>
{<br>
if (y &lt; imageY || y &gt;= this-&gt;height)<br>
return;<br>
if (x &lt; imageX) {<br>
width -= imageX - x;<br>
x = imageX;<br>
}<br>
if (x + width &gt; this-&gt;width)<br>
width = this-&gt;width - x;</p>
<pre><code>int xPixel = x + y * this-&gt;defaultWidth;

for (int yPixel = 0; yPixel &lt; width; yPixel++)
	pixels[xPixel + yPixel] = color;
</code></pre>
<p>}</p>
<p>void RuneScape::ImageCalculations::drawYAxisLine(int x, int y, int height, int color)<br>
{<br>
if (x &lt; imageX || x &gt;= this-&gt;width)<br>
return;<br>
if (y &lt; imageY) {<br>
height -= imageY - y;<br>
y = imageY;<br>
}<br>
if (y + height &gt; this-&gt;width)<br>
height = this-&gt;height - y;<br>
int xPixel = x + y * this-&gt;defaultWidth;<br>
for (int yPixel = 0; yPixel &lt; height; yPixel++)<br>
pixels[xPixel + yPixel * this-&gt;defaultWidth] = color;<br>
}</p>
<p>void RuneScape::ImageCalculations::fadeoutPixels(void)<br>
{<br>
int max = this-&gt;defaultWidth * this-&gt;defaultHeight;<br>
for (int i = 0; i &lt; max; i++)<br>
{<br>
int color = this-&gt;pixels[i] &amp; 0xffffff;<br>
this-&gt;pixels[i] = (color &gt;&gt; 1 &amp; 0x7f7f7f) + (color &gt;&gt; 2 &amp; 0x3f3f3f) + (color &gt;&gt; 3 &amp; 0x1f1f1f) + (color &gt;&gt; 4 &amp; 0xf0f0f);<br>
}<br>
}</p>
<p>void RuneScape::ImageCalculations::loadFont(char* data)<br>
{<br>
fonts.push_back(data);<br>
}</p>
<p>void RuneScape::ImageCalculations::drawString(char* data, int x, int y, int font, int color, bool useShadow)<br>
{<br>
const char* fontData = this-&gt;fonts.at(font);<br>
for (int i = 0; i &lt; strlen(data); i++)<br>
{<br>
int charIndex = indexes[data[i]];<br>
if (useShadow &amp;&amp; color != 0)<br>
{<br>
formatAndPlotLetter(charIndex, x + 1, y, font, 0);<br>
formatAndPlotLetter(charIndex, x, y + 1, font, 0);<br>
}<br>
formatAndPlotLetter(charIndex, x, y, font, color);<br>
x += fontData[charIndex + 7];<br>
}<br>
}</p>
<p>void RuneScape::ImageCalculations::drawCenteredString(char* data, int x, int y, int font, int color, bool useShadow)<br>
{<br>
drawString(data, x - getTextWidth(data, font) / 2, y, font, color, useShadow);<br>
}</p>
<p>void RuneScape::ImageCalculations::formatAndPlotLetter(int charIndex, int x, int y, int font, int color)<br>
{<br>
const char* fontData = this-&gt;fonts.at(font);<br>
int x_ = x + fontData[charIndex + 5];<br>
int y_ = y - fontData[charIndex + 6];<br>
int char_width = fontData[charIndex + 3];<br>
int char_height = fontData[charIndex + 4];<br>
int fontIndex = fontData[charIndex] * 16384 + fontData[charIndex + 1] * 128 + fontData[charIndex + 2];<br>
int index = x_ + (y_ * this-&gt;defaultWidth);<br>
int max_width = this-&gt;defaultWidth - char_width;<br>
int max_height = 0;<br>
if (y_ &lt; imageY)<br>
{<br>
int i3 = imageY - y_;<br>
char_height -= i3;<br>
y_ = imageY;<br>
fontIndex += i3 * char_width;<br>
index += i3 * this-&gt;defaultWidth;<br>
}<br>
if (y_ + char_height &gt;= this-&gt;height)<br>
char_height -= ((y_ + char_height) - this-&gt;height) + 1;<br>
if (x_ &lt; imageX)<br>
{<br>
int j3 = imageX - x_;<br>
char_width -= j3;<br>
x_ = imageX;<br>
fontIndex += j3;<br>
index += j3;<br>
max_height += j3;<br>
max_width += j3;<br>
}<br>
if (x_ + char_width &gt;= this-&gt;width)<br>
{<br>
int k3 = ((x_ + char_width) - this-&gt;width) + 1;<br>
char_width -= k3;<br>
max_height += k3;<br>
max_width += k3;<br>
}<br>
if (char_width &gt; 0 &amp;&amp; char_height &gt; 0)<br>
{<br>
plotLetter(font, color, fontIndex, index, char_width, char_height, max_width, max_height);<br>
}<br>
}</p>
<p>void RuneScape::ImageCalculations::plotLetter(int font, int color, int fontIndex, int pixelIndex, int width, int height, int pixelMod, int fontMod)<br>
{<br>
const char* fontData = fonts.at(font);<br>
int l1 = -(width &gt;&gt; 2);<br>
width = -(width &amp; 3);<br>
for (int i2 = -height; i2 &lt; 0; i2++) {<br>
for (int j2 = l1; j2 &lt; 0; j2++) {<br>
if (fontData[fontIndex++] != 0)<br>
pixels[pixelIndex++] = color;<br>
else<br>
pixelIndex++;</p>
<pre><code>		if (fontData[fontIndex++] != 0)
			pixels[pixelIndex++] = color;
		else
			pixelIndex++;

		if (fontData[fontIndex++] != 0)
			pixels[pixelIndex++] = color;
		else
			pixelIndex++;

		if (fontData[fontIndex++] != 0)
			pixels[pixelIndex++] = color;
		else
			pixelIndex++;
	}
	for (int k2 = width; k2 &lt; 0; k2++)
		if (fontData[fontIndex++] != 0)
			pixels[pixelIndex++] = color;
		else
			pixelIndex++;

            pixelIndex += pixelMod;
            fontIndex += fontMod;
	}
</code></pre>
<p>}</p>
<p>void RuneScape::ImageCalculations::drawButton(int x, int y, int width, int height)<br>
{<br>
setDimensions(x, y, x + width, y + height);<br>
drawGradientQuad(x, y, width, height, 5793416, 8884915);</p>
<pre><code>drawXAxisLine(x, y, width, 8884915);
drawXAxisLine(x + 1, y + 1, width - 2, 8884915);
drawXAxisLine(x + 2, y + 2, width - 4, 6385815);

drawYAxisLine(x, y, height, 8884915);
drawYAxisLine(x + 1, y + 1, height - 2, 8884915);
drawYAxisLine(x + 2, y + 2, height - 4, 6385815);

drawXAxisLine(x, (y + height) - 1, width, 5793416);
drawXAxisLine(x + 1, (y + height) - 2, width - 2, 5793416);
drawXAxisLine(x + 2, (y + height) - 3, width - 4, 5528952);

drawYAxisLine((x + width) - 1, y, height, 5793416);
drawYAxisLine((x + width) - 2, y + 1, height - 2, 5793416);
drawYAxisLine((x + width) - 3, y + 2, height - 4, 5528952);

resetDimensions();
</code></pre>
<p>}</p>
<p>int RuneScape::ImageCalculations::getTextWidth(char* text, int font)<br>
{<br>
int val = 0, length = strlen(text);<br>
char* fontData = fonts.at(font);<br>
for (int i = 0; i &lt; length; i++) {<br>
if (text[i] == ‘@’ &amp;&amp; i + 4 &lt; length &amp;&amp; text[i + 4] == ‘@’)<br>
{<br>
i += 4;<br>
}<br>
else if (text[i] == ‘~’ &amp;&amp; i + 4 &lt;length &amp;&amp; text[i + 4] == ‘~’)<br>
{<br>
i += 4;<br>
}<br>
else<br>
{<br>
val += fontData[indexes[text[i]] + 7];<br>
}<br>
}<br>
return val;<br>
}</p>
<p>int RuneScape::ImageCalculations::getTextHeight(int font)<br>
{<br>
switch (font)<br>
{<br>
case 0:<br>
return 12;<br>
case 1:<br>
case 2:<br>
return 14;<br>
case 3:<br>
case 4:<br>
return 15;<br>
case 5:<br>
return 19;<br>
case 6:<br>
return 24;<br>
case 7:<br>
return 29;<br>
default:<br>
return 0;<br>
}<br>
}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-c-graphics-library/437058/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-c-graphics-library/437058/1</link>
        <pubDate>Wed, 21 Mar 2012 07:32:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-437058-1</guid>
        <source url="https://forum.moparisthebest.com/t/my-c-graphics-library/437058.rss">My C++ graphics library</source>
      </item>
  </channel>
</rss>
