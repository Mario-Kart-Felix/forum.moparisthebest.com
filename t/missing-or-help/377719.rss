<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Missing { or } ! help</title>
    <link>https://forum.moparisthebest.com/t/missing-or-help/377719</link>
    <description>My errors :

i have been looking for over 2 hours to try locate the missing { or } ..


[code]                        if (server.npcHandler.npcs[attacknpc].npcType == 117 ||
server.npcHandler.npcs[attacknpc].npcType == 112) { // giant

                       ^
client.java:1286: &#39;;&#39; expected
                        if (server.npcHandler.npcs[attacknpc].npcType == 117 ||
server.npcHandler.npcs[attacknpc].npcType == 112) { // giant

                                ^
client.java:1286: &lt;identifier&gt; expected
                        if (server.npcHandler.npcs[attacknpc].npcType == 117 ||
server.npcHandler.npcs[attacknpc].npcType == 112) { // giant

                                         ^
client.java:1286: illegal start of type
                        if (server.npcHandler.npcs[attacknpc].npcType == 117 ||
server.npcHandler.npcs[attacknpc].npcType == 112) { // giant

                                             ^
client.java:1286: &lt;identifier&gt; expected
                        if (server.npcHandler.npcs[attacknpc].npcType == 117 ||
server.npcHandler.npcs[attacknpc].npcType == 112) { // giant

                                                ^
client.java:1286: &#39;;&#39; expected
                        if (server.npcHandler.npcs[attacknpc].npcType == 117 ||
server.npcHandler.npcs[attacknpc].npcType == 112) { // giant

                                                 ^
client.java:1287: &lt;identifier&gt; expected
                                rand_npc = misc.random(50);
                                        ^
client.java:1290: class, interface, or enum expected
                        if (server.npcHandler.npcs[attacknpc].npcType == 1338) {
 // dagg
                        ^
client.java:1292: class, interface, or enum expected
                        }
                        ^
client.java:1295: class, interface, or enum expected
                        }
                        ^
client.java:1298: class, interface, or enum expected
                        }
                        ^
client.java:1301: class, interface, or enum expected
                        }
                        ^
client.java:1304: class, interface, or enum expected
                        }
                        ^
client.java:1307: class, interface, or enum expected
                        }
                        ^
client.java:1310: class, interface, or enum expected
                        }
                        ^
client.java:1313: class, interface, or enum expected
                        }
                        ^
client.java:1316: class, interface, or enum expected
                        }
                        ^
client.java:1319: class, interface, or enum expected
                        }
                        ^
client.java:1322: class, interface, or enum expected
                        }
                        ^
client.java:1325: class, interface, or enum expected
                        }
                        ^
client.java:1328: class, interface, or enum expected
                        }
                        ^
client.java:1331: class, interface, or enum expected
                        }
                        ^
client.java:1334: class, interface, or enum expected
                        }
                        ^
client.java:1337: class, interface, or enum expected
                        }
                        ^
client.java:1340: class, interface, or enum expected
                        }
                        ^
client.java:1343: class, interface, or enum expected
                        }
                        ^
client.java:1346: class, interface, or enum expected
                        }
                        ^
client.java:1349: class, interface, or enum expected
                        }
                        ^
client.java:1352: class, interface, or enum expected
                        }
                        ^
client.java:1355: class, interface, or enum expected
                        }
                        ^
client.java:1358: class, interface, or enum expected
                        }
                        ^
client.java:1361: class, interface, or enum expected
                        }
                        ^
client.java:1364: class, interface, or enum expected
                        }
                        ^
client.java:1367: class, interface, or enum expected
                        }
                        ^
client.java:1370: class, interface, or enum expected
                        }
                        ^
client.java:1373: class, interface, or enum expected
                        }
                        ^
client.java:1376: class, interface, or enum expected
                        }
                        ^
client.java:1379: class, interface, or enum expected
                        }
                        ^
client.java:1382: class, interface, or enum expected
                        }
                        ^
client.java:1385: class, interface, or enum expected
                        }
                        ^
client.java:1388: class, interface, or enum expected
                        }
                        ^
client.java:1391: class, interface, or enum expected
                        }
                        ^
client.java:1393: class, interface, or enum expected
                }
                ^
client.java:1394: class, interface, or enum expected
public int npcRangeDamage(){
       ^
client.java:1397: class, interface, or enum expected
} else {
^
client.java:1399: class, interface, or enum expected
}
^
client.java:1401: class, interface, or enum expected
public boolean npcRangeHit(){
       ^
client.java:1403: class, interface, or enum expected
                int rand_npc = 0;
                ^
client.java:1404: class, interface, or enum expected
                        if (server.npcHandler.npcs[attacknpc].npcType == 117 ||
server.npcHandler.npcs[attacknpc].npcType == 112) { // giant
                        ^
client.java:1406: class, interface, or enum expected
                        }
                        ^
client.java:1409: class, interface, or enum expected
                        }
                        ^
client.java:1412: class, interface, or enum expected
                        }
                        ^
client.java:1415: class, interface, or enum expected
                        }
                        ^
client.java:1418: class, interface, or enum expected
                        }
                        ^
client.java:1421: class, interface, or enum expected
                        }
                        ^
client.java:1424: class, interface, or enum expected
                        }
                        ^
client.java:1427: class, interface, or enum expected
                        }
                        ^
client.java:1430: class, interface, or enum expected
                        }
                        ^
client.java:1433: class, interface, or enum expected
                        }
                        ^
client.java:1436: class, interface, or enum expected
                        }
                        ^
client.java:1439: class, interface, or enum expected
                        }
                        ^
client.java:1442: class, interface, or enum expected
                        }
                        ^
client.java:1445: class, interface, or enum expected
                        }
                        ^
client.java:1448: class, interface, or enum expected
                        }
                        ^
client.java:1451: class, interface, or enum expected
                        }
                        ^
client.java:1454: class, interface, or enum expected
                        }
                        ^
client.java:1457: class, interface, or enum expected
                        }
                        ^
client.java:1460: class, interface, or enum expected
                        }
                        ^
client.java:1463: class, interface, or enum expected
                        }
                        ^
client.java:1466: class, interface, or enum expected
                        }
                        ^
client.java:1469: class, interface, or enum expected
                        }
                        ^
client.java:1472: class, interface, or enum expected
                        }
                        ^
client.java:1475: class, interface, or enum expected
                        }
                        ^
client.java:1478: class, interface, or enum expected
                        }
                        ^
client.java:1481: class, interface, or enum expected
                        }
                        ^
client.java:1484: class, interface, or enum expected
                        }
                        ^
client.java:1487: class, interface, or enum expected
                        }
                        ^
client.java:1490: class, interface, or enum expected
                        }
                        ^
client.java:1493: class, interface, or enum expected
                        }
                        ^
client.java:1496: class, interface, or enum expected
                        }
                        ^
client.java:1499: class, interface, or enum expected
                        }
                        ^
client.java:1502: class, interface, or enum expected
                        }
                        ^
client.java:1505: class, interface, or enum expected
                        }
                        ^
client.java:1507: class, interface, or enum expected
                }
                ^
client.java:1508: class, interface, or enum expected
public void getTotalLevel() {
       ^
client.java:1511: class, interface, or enum expected
int a0 = getLevelForXP(playerXP[0]);
^
client.java:1512: class, interface, or enum expected
int a1 = getLevelForXP(playerXP[1]);
^
client.java:1513: class, interface, or enum expected
int a2 = getLevelForXP(playerXP[2]);
^
client.java:1514: class, interface, or enum expected
int a3 = getLevelForXP(playerXP[3]);
^
client.java:1515: class, interface, or enum expected
int a4 = getLevelForXP(playerXP[4]);
^
client.java:1516: class, interface, or enum expected
int a5 = getLevelForXP(playerXP[5]);
^
client.java:1517: class, interface, or enum expected
int a6 = getLevelForXP(playerXP[6]);
^
client.java:1518: class, interface, or enum expected
int a7 = getLevelForXP(playerXP[7]);
^
client.java:1519: class, interface, or enum expected
int a8 = getLevelForXP(playerXP[8]);
^
client.java:1520: class, interface, or enum expected
int a9 = getLevelForXP(playerXP[9]);
^
100 errors
Press any key to continue . . .[/code]


[code]public boolean npcRangeHit(){
		int rand_att = misc.random(playerLevel[4]) + misc.random(playerBonus[4]) + misc.random(RangePray * 8);
		int rand_npc = 0;
			if (server.npcHandler.npcs[attacknpc].npcType == 117 || server.npcHandler.npcs[attacknpc].npcType == 112) { // giant
				rand_npc = misc.random(50);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1338) { // dagg
				rand_npc = misc.random(50);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1610) { // gargoyle
				rand_npc = misc.random(170);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1616) { // basilisk
				rand_npc = misc.random(60);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1637) { // jelly
				rand_npc = misc.random(50);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1624) { // dust devil
				rand_npc = misc.random(80);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1615) { // abyssal demon
				rand_npc = misc.random(180);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 2783) { // dark beast
				rand_npc = misc.random(200);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 941) { // green dragons
				rand_npc = misc.random(90);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1625) { // turoth
				rand_npc = misc.random(70);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1613) { // nechryael
				rand_npc = misc.random(120);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1264) { // saradomin wizard
				rand_npc = misc.random(50);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1459) { // gorilla guard
				rand_npc = misc.random(150);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1030) { // wolfman
				rand_npc = misc.random(60);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 2631) { // tok-xil
				rand_npc = misc.random(20);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 2741) { // yt-mejkot
				rand_npc = misc.random(30);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 2743) { // ket-zek
				rand_npc = misc.random(150);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 2745) { // tz-tok-jad
				rand_npc = misc.random(300);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 50) { // king black dragon
				rand_npc = misc.random(200);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1160) { // kalphite queen
				rand_npc = misc.random(200);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 3200) { // chaos elemental
				rand_npc = misc.random(200);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 5) { // corp beast
				rand_npc = misc.random(200);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 2881 || server.npcHandler.npcs[attacknpc].npcType == 2882 || server.npcHandler.npcs[attacknpc].npcType == 2883) { // daggonaths
				rand_npc = misc.random(300);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 258) { // general khazard
				rand_npc = misc.random(120);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 2025 || server.npcHandler.npcs[attacknpc].npcType == 2026 || server.npcHandler.npcs[attacknpc].npcType == 2027 || server.npcHandler.npcs[attacknpc].npcType == 2028 || server.npcHandler.npcs[attacknpc].npcType == 2029 || server.npcHandler.npcs[attacknpc].npcType == 2030) { // barrows
				rand_npc = misc.random(150);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1183) { // elf warrior
				rand_npc = misc.random(150);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 3777 || server.npcHandler.npcs[attacknpc].npcType == 3778 || server.npcHandler.npcs[attacknpc].npcType == 3779 || server.npcHandler.npcs[attacknpc].npcType == 3780) { // pest control
				rand_npc = misc.random(200);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1472) { // jungle demon
				rand_npc = misc.random(200);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 988 || server.npcHandler.npcs[attacknpc].npcType == 989 || server.npcHandler.npcs[attacknpc].npcType == 990) { // knights legend
				rand_npc = misc.random(250);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1115) { // general graardor
				rand_npc = misc.random(300);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 655) { // tree spirit
				rand_npc = misc.random(100);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 72) { // mithril dragon
				rand_npc = misc.random(170);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 2591 || server.npcHandler.npcs[attacknpc].npcType == 2604 || server.npcHandler.npcs[attacknpc].npcType == 2610) { // tzhaar
				rand_npc = misc.random(70);
			}
			if (rand_att &gt;= rand_npc) {
				return true;
			}
			return false;
		}
public void getTotalLevel() {
if(playerRights &gt;= 2)
return;
int a0 = getLevelForXP(playerXP[0]);
int a1 = getLevelForXP(playerXP[1]);
int a2 = getLevelForXP(playerXP[2]);
int a3 = getLevelForXP(playerXP[3]);
int a4 = getLevelForXP(playerXP[4]);
int a5 = getLevelForXP(playerXP[5]);
int a6 = getLevelForXP(playerXP[6]);
int a7 = getLevelForXP(playerXP[7]);
int a8 = getLevelForXP(playerXP[8]);
int a9 = getLevelForXP(playerXP[9]);
int a10 = getLevelForXP(playerXP[10]);
int a11 = getLevelForXP(playerXP[11]);
int a12 = getLevelForXP(playerXP[12]);
int a13 = getLevelForXP(playerXP[13]);
int a14 = getLevelForXP(playerXP[14]);
int a15 = getLevelForXP(playerXP[15]);
int a16 = getLevelForXP(playerXP[16]);
int a17 = getLevelForXP(playerXP[17]);
int a18 = getLevelForXP(playerXP[18]);
int a19 = getLevelForXP(playerXP[19]);
int a20 = getLevelForXP(playerXP[20]);
int a21 = getLevelForXP(playerXP[21]);
total = a0+a1+a2+a3+a4+a5+a6+a7+a8+a9+a10+a11+a12+a13+a14+a15+a16+a17+a18+a19+a20;
sendQuest(&quot;Total Lvl: &quot;+total+&quot;&quot;, 3984);
}[/code]</description>
    
    <lastBuildDate>Mon, 10 Jan 2011 20:57:42 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/missing-or-help/377719.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Missing { or } ! help</title>
        <dc:creator><![CDATA[@shadytheone shadytheone]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/shadytheone">@shadytheone</a> wrote:</p>
          <blockquote>
              <p>Ohwel i’m sorry that i wrote to quick and missed that.<br>
I’m not a moron because i failed.<br>
Rather be polite to people you don’t know.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/missing-or-help/377719/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/missing-or-help/377719/4</link>
        <pubDate>Mon, 10 Jan 2011 20:57:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-377719-4</guid>
        <source url="https://forum.moparisthebest.com/t/missing-or-help/377719.rss">Missing { or } ! help</source>
      </item>
      <item>
        <title>Missing { or } ! help</title>
        <dc:creator><![CDATA[@Ironclad722 Ironclad722]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ironclad722">@Ironclad722</a> wrote:</p>
          <blockquote>
              <p>this code</p>
<p><code>public void getTotalLevel() {
if(playerRights &gt;= 2)
return;
int a0 = getLevelForXP(playerXP[0]);
int a1 = getLevelForXP(playerXP[1]);
int a2 = getLevelForXP(playerXP[2]);
int a3 = getLevelForXP(playerXP[3]);
int a4 = getLevelForXP(playerXP[4]);
int a5 = getLevelForXP(playerXP[5]);
int a6 = getLevelForXP(playerXP[6]);
int a7 = getLevelForXP(playerXP[7]);
int a8 = getLevelForXP(playerXP[8]);
int a9 = getLevelForXP(playerXP[9]);
int a10 = getLevelForXP(playerXP[10]);
int a11 = getLevelForXP(playerXP[11]);
int a12 = getLevelForXP(playerXP[12]);
int a13 = getLevelForXP(playerXP[13]);
int a14 = getLevelForXP(playerXP[14]);
int a15 = getLevelForXP(playerXP[15]);
int a16 = getLevelForXP(playerXP[16]);
int a17 = getLevelForXP(playerXP[17]);
int a18 = getLevelForXP(playerXP[18]);
int a19 = getLevelForXP(playerXP[19]);
int a20 = getLevelForXP(playerXP[20]);
int a21 = getLevelForXP(playerXP[21]);
total = a0+a1+a2+a3+a4+a5+a6+a7+a8+a9+a10+a11+a12+a13+a14+a15+a16+a17+a18+a19+a20;
sendQuest("Total Lvl: "+total+"", 3984);
}</code></p>
<p>becomes</p>
<p><code>public void getTotalLevel() {
if(playerRights &gt;= 2) {
return;
int a0 = getLevelForXP(playerXP[0]);
int a1 = getLevelForXP(playerXP[1]);
int a2 = getLevelForXP(playerXP[2]);
int a3 = getLevelForXP(playerXP[3]);
int a4 = getLevelForXP(playerXP[4]);
int a5 = getLevelForXP(playerXP[5]);
int a6 = getLevelForXP(playerXP[6]);
int a7 = getLevelForXP(playerXP[7]);
int a8 = getLevelForXP(playerXP[8]);
int a9 = getLevelForXP(playerXP[9]);
int a10 = getLevelForXP(playerXP[10]);
int a11 = getLevelForXP(playerXP[11]);
int a12 = getLevelForXP(playerXP[12]);
int a13 = getLevelForXP(playerXP[13]);
int a14 = getLevelForXP(playerXP[14]);
int a15 = getLevelForXP(playerXP[15]);
int a16 = getLevelForXP(playerXP[16]);
int a17 = getLevelForXP(playerXP[17]);
int a18 = getLevelForXP(playerXP[18]);
int a19 = getLevelForXP(playerXP[19]);
int a20 = getLevelForXP(playerXP[20]);
int a21 = getLevelForXP(playerXP[21]);
total = a0+a1+a2+a3+a4+a5+a6+a7+a8+a9+a10+a11+a12+a13+a14+a15+a16+a17+a18+a19+a20;
sendQuest("Total Lvl: "+total+"", 3984);
    }
}</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/missing-or-help/377719/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/missing-or-help/377719/3</link>
        <pubDate>Mon, 10 Jan 2011 20:54:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-377719-3</guid>
        <source url="https://forum.moparisthebest.com/t/missing-or-help/377719.rss">Missing { or } ! help</source>
      </item>
      <item>
        <title>Missing { or } ! help</title>
        <dc:creator><![CDATA[@shadytheone shadytheone]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/shadytheone">@shadytheone</a> wrote:</p>
          <blockquote>
              <p>Wow? thats weird… ohwel.<br>
switch these with these.</p>
<pre><code class="lang-auto">public void getTotalLevel() {
if(playerRights &gt;= 2)
// SWITCH WITH THIS BENEATH HER \\
public void getTotalLevel() 
if(playerRights &gt;= 2) {</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/missing-or-help/377719/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/missing-or-help/377719/2</link>
        <pubDate>Mon, 10 Jan 2011 20:52:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-377719-2</guid>
        <source url="https://forum.moparisthebest.com/t/missing-or-help/377719.rss">Missing { or } ! help</source>
      </item>
      <item>
        <title>Missing { or } ! help</title>
        <dc:creator><![CDATA[@Yorchi_elite Yorchi elite]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/yorchi_elite">@Yorchi_elite</a> wrote:</p>
          <blockquote>
              <p>My errors :</p>
<p>i have been looking for over 2 hours to try locate the missing { or } …</p>
<p>[code]                        if (server.npcHandler.npcs[attacknpc].npcType == 117 ||<br>
server.npcHandler.npcs[attacknpc].npcType == 112) { // giant</p>
<pre><code>                   ^
</code></pre>
<p>client.java:1286: ‘;’ expected<br>
if (server.npcHandler.npcs[attacknpc].npcType == 117 ||<br>
server.npcHandler.npcs[attacknpc].npcType == 112) { // giant</p>
<pre><code>                            ^
</code></pre>
<p>client.java:1286:  expected<br>
if (server.npcHandler.npcs[attacknpc].npcType == 117 ||<br>
server.npcHandler.npcs[attacknpc].npcType == 112) { // giant</p>
<pre><code>                                     ^
</code></pre>
<p>client.java:1286: illegal start of type<br>
if (server.npcHandler.npcs[attacknpc].npcType == 117 ||<br>
server.npcHandler.npcs[attacknpc].npcType == 112) { // giant</p>
<pre><code>                                         ^
</code></pre>
<p>client.java:1286:  expected<br>
if (server.npcHandler.npcs[attacknpc].npcType == 117 ||<br>
server.npcHandler.npcs[attacknpc].npcType == 112) { // giant</p>
<pre><code>                                            ^
</code></pre>
<p>client.java:1286: ‘;’ expected<br>
if (server.npcHandler.npcs[attacknpc].npcType == 117 ||<br>
server.npcHandler.npcs[attacknpc].npcType == 112) { // giant</p>
<pre><code>                                             ^
</code></pre>
<p>client.java:1287:  expected<br>
rand_npc = misc.random(50);<br>
^<br>
client.java:1290: class, interface, or enum expected<br>
if (server.npcHandler.npcs[attacknpc].npcType == 1338) {<br>
// dagg<br>
^<br>
client.java:1292: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1295: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1298: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1301: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1304: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1307: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1310: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1313: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1316: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1319: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1322: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1325: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1328: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1331: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1334: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1337: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1340: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1343: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1346: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1349: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1352: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1355: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1358: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1361: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1364: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1367: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1370: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1373: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1376: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1379: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1382: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1385: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1388: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1391: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1393: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1394: class, interface, or enum expected<br>
public int npcRangeDamage(){<br>
^<br>
client.java:1397: class, interface, or enum expected<br>
} else {<br>
^<br>
client.java:1399: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1401: class, interface, or enum expected<br>
public boolean npcRangeHit(){<br>
^<br>
client.java:1403: class, interface, or enum expected<br>
int rand_npc = 0;<br>
^<br>
client.java:1404: class, interface, or enum expected<br>
if (server.npcHandler.npcs[attacknpc].npcType == 117 ||<br>
server.npcHandler.npcs[attacknpc].npcType == 112) { // giant<br>
^<br>
client.java:1406: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1409: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1412: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1415: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1418: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1421: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1424: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1427: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1430: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1433: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1436: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1439: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1442: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1445: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1448: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1451: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1454: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1457: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1460: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1463: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1466: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1469: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1472: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1475: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1478: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1481: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1484: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1487: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1490: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1493: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1496: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1499: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1502: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1505: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1507: class, interface, or enum expected<br>
}<br>
^<br>
client.java:1508: class, interface, or enum expected<br>
public void getTotalLevel() {<br>
^<br>
client.java:1511: class, interface, or enum expected<br>
int a0 = getLevelForXP(playerXP[0]);<br>
^<br>
client.java:1512: class, interface, or enum expected<br>
int a1 = getLevelForXP(playerXP[1]);<br>
^<br>
client.java:1513: class, interface, or enum expected<br>
int a2 = getLevelForXP(playerXP[2]);<br>
^<br>
client.java:1514: class, interface, or enum expected<br>
int a3 = getLevelForXP(playerXP[3]);<br>
^<br>
client.java:1515: class, interface, or enum expected<br>
int a4 = getLevelForXP(playerXP[4]);<br>
^<br>
client.java:1516: class, interface, or enum expected<br>
int a5 = getLevelForXP(playerXP[5]);<br>
^<br>
client.java:1517: class, interface, or enum expected<br>
int a6 = getLevelForXP(playerXP[6]);<br>
^<br>
client.java:1518: class, interface, or enum expected<br>
int a7 = getLevelForXP(playerXP[7]);<br>
^<br>
client.java:1519: class, interface, or enum expected<br>
int a8 = getLevelForXP(playerXP[8]);<br>
^<br>
client.java:1520: class, interface, or enum expected<br>
int a9 = getLevelForXP(playerXP[9]);<br>
^<br>
100 errors<br>
Press any key to continue . . .[/code]</p>
<p><code>public boolean npcRangeHit(){
		int rand_att = misc.random(playerLevel[4]) + misc.random(playerBonus[4]) + misc.random(RangePray * 8);
		int rand_npc = 0;
			if (server.npcHandler.npcs[attacknpc].npcType == 117 || server.npcHandler.npcs[attacknpc].npcType == 112) { // giant
				rand_npc = misc.random(50);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1338) { // dagg
				rand_npc = misc.random(50);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1610) { // gargoyle
				rand_npc = misc.random(170);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1616) { // basilisk
				rand_npc = misc.random(60);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1637) { // jelly
				rand_npc = misc.random(50);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1624) { // dust devil
				rand_npc = misc.random(80);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1615) { // abyssal demon
				rand_npc = misc.random(180);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 2783) { // dark beast
				rand_npc = misc.random(200);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 941) { // green dragons
				rand_npc = misc.random(90);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1625) { // turoth
				rand_npc = misc.random(70);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1613) { // nechryael
				rand_npc = misc.random(120);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1264) { // saradomin wizard
				rand_npc = misc.random(50);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1459) { // gorilla guard
				rand_npc = misc.random(150);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1030) { // wolfman
				rand_npc = misc.random(60);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 2631) { // tok-xil
				rand_npc = misc.random(20);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 2741) { // yt-mejkot
				rand_npc = misc.random(30);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 2743) { // ket-zek
				rand_npc = misc.random(150);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 2745) { // tz-tok-jad
				rand_npc = misc.random(300);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 50) { // king black dragon
				rand_npc = misc.random(200);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1160) { // kalphite queen
				rand_npc = misc.random(200);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 3200) { // chaos elemental
				rand_npc = misc.random(200);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 5) { // corp beast
				rand_npc = misc.random(200);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 2881 || server.npcHandler.npcs[attacknpc].npcType == 2882 || server.npcHandler.npcs[attacknpc].npcType == 2883) { // daggonaths
				rand_npc = misc.random(300);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 258) { // general khazard
				rand_npc = misc.random(120);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 2025 || server.npcHandler.npcs[attacknpc].npcType == 2026 || server.npcHandler.npcs[attacknpc].npcType == 2027 || server.npcHandler.npcs[attacknpc].npcType == 2028 || server.npcHandler.npcs[attacknpc].npcType == 2029 || server.npcHandler.npcs[attacknpc].npcType == 2030) { // barrows
				rand_npc = misc.random(150);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1183) { // elf warrior
				rand_npc = misc.random(150);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 3777 || server.npcHandler.npcs[attacknpc].npcType == 3778 || server.npcHandler.npcs[attacknpc].npcType == 3779 || server.npcHandler.npcs[attacknpc].npcType == 3780) { // pest control
				rand_npc = misc.random(200);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1472) { // jungle demon
				rand_npc = misc.random(200);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 988 || server.npcHandler.npcs[attacknpc].npcType == 989 || server.npcHandler.npcs[attacknpc].npcType == 990) { // knights legend
				rand_npc = misc.random(250);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 1115) { // general graardor
				rand_npc = misc.random(300);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 655) { // tree spirit
				rand_npc = misc.random(100);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 72) { // mithril dragon
				rand_npc = misc.random(170);
			}
			if (server.npcHandler.npcs[attacknpc].npcType == 2591 || server.npcHandler.npcs[attacknpc].npcType == 2604 || server.npcHandler.npcs[attacknpc].npcType == 2610) { // tzhaar
				rand_npc = misc.random(70);
			}
			if (rand_att &gt;= rand_npc) {
				return true;
			}
			return false;
		}
public void getTotalLevel() {
if(playerRights &gt;= 2)
return;
int a0 = getLevelForXP(playerXP[0]);
int a1 = getLevelForXP(playerXP[1]);
int a2 = getLevelForXP(playerXP[2]);
int a3 = getLevelForXP(playerXP[3]);
int a4 = getLevelForXP(playerXP[4]);
int a5 = getLevelForXP(playerXP[5]);
int a6 = getLevelForXP(playerXP[6]);
int a7 = getLevelForXP(playerXP[7]);
int a8 = getLevelForXP(playerXP[8]);
int a9 = getLevelForXP(playerXP[9]);
int a10 = getLevelForXP(playerXP[10]);
int a11 = getLevelForXP(playerXP[11]);
int a12 = getLevelForXP(playerXP[12]);
int a13 = getLevelForXP(playerXP[13]);
int a14 = getLevelForXP(playerXP[14]);
int a15 = getLevelForXP(playerXP[15]);
int a16 = getLevelForXP(playerXP[16]);
int a17 = getLevelForXP(playerXP[17]);
int a18 = getLevelForXP(playerXP[18]);
int a19 = getLevelForXP(playerXP[19]);
int a20 = getLevelForXP(playerXP[20]);
int a21 = getLevelForXP(playerXP[21]);
total = a0+a1+a2+a3+a4+a5+a6+a7+a8+a9+a10+a11+a12+a13+a14+a15+a16+a17+a18+a19+a20;
sendQuest("Total Lvl: "+total+"", 3984);
}</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/missing-or-help/377719/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/missing-or-help/377719/1</link>
        <pubDate>Mon, 10 Jan 2011 19:40:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-377719-1</guid>
        <source url="https://forum.moparisthebest.com/t/missing-or-help/377719.rss">Missing { or } ! help</source>
      </item>
  </channel>
</rss>
