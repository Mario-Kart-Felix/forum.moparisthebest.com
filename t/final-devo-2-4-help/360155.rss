<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Final Devo 2.4 help</title>
    <link>https://forum.moparisthebest.com/t/final-devo-2-4-help/360155</link>
    <description>Hey everyone. I need some help with Final Devo 2.4. I&#39;m trying to make me weapons consistently hit 44&#39;s. They hit real low numbers, even if I edit them. 
I&#39;m editing my hit calculation methods, as I was told that this would change the weapons damage, but I can&#39;t seem to get it. Can someone please show me what I should do with my hit calculations? [b]MY HIT CALCULATIONS ARE POSTED BELOW[/b]</description>
    
    <lastBuildDate>Tue, 14 Sep 2010 01:48:24 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/final-devo-2-4-help/360155.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Final Devo 2.4 help</title>
        <dc:creator><![CDATA[@Rat_racer550 Rat racer550]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rat_racer550">@Rat_racer550</a> wrote:</p>
          <blockquote>
              <p>continued. <span class="bbcode-b">THESE ARE THE HIT CALCULATIONS</span></p>
<p>[code]	public boolean npcMeleeDamage() {<br>
if (FullDharokEquipped() &amp;&amp; misc.random(2)==1){<br>
getDharokBonus();<br>
}<br>
int firstHit = misc.random(playerMaxHit+extraDamage);<br>
int Type = server.npcHandler.npcs[damageThisNPC].npcType;	<br>
int EnemyX = server.npcHandler.npcs[damageThisNPC].absX;<br>
int EnemyY = server.npcHandler.npcs[damageThisNPC].absY;<br>
int EnemyHP = server.npcHandler.npcs[damageThisNPC].HP;<br>
if (firstHit &gt; EnemyHP) {<br>
firstHit = EnemyHP;<br>
}<br>
if (EnemyHP &lt; 1 ) {<br>
server.npcHandler.npcs[damageThisNPC].hitDiff = 0;<br>
}<br>
if (firstHit &gt;= 43 &amp;&amp; !FullDharokEquipped()) {<br>
firstHit = 43;<br>
}<br>
server.npcHandler.npcs[damageThisNPC].hit = true;<br>
server.npcHandler.npcs[damageThisNPC].hitDiff = firstHit;<br>
server.npcHandler.npcs[damageThisNPC].hitUpdateRequired = true;<br>
server.npcHandler.npcs[damageThisNPC].animNumber = server.NpcAnimHandler.block[server.npcHandler.npcs[damageThisNPC].npcType];<br>
server.npcHandler.npcs[damageThisNPC].animUpdateRequired = true;<br>
server.npcHandler.npcs[damageThisNPC].Killing[playerId] += firstHit;<br>
server.npcHandler.npcs[damageThisNPC].IsUnderAttack = true;<br>
server.npcHandler.npcs[damageThisNPC].RandomWalk = false;<br>
server.npcHandler.npcs[damageThisNPC].updateRequired = true;<br>
int exp = firstHit * 4;<br>
int hpExp = firstHit * 1;<br>
addSkillXPmelee(exp * SERVER_EXPERIENCE, SkillID);<br>
addSkillXPmelee(hpExp * SERVER_EXPERIENCE, playerHitpoints);<br>
extraDamage = 0;<br>
return true;</p>
<pre><code>}
public boolean playerMeleeRehit() {
	if (followThisPlayer &gt; 0) {
		maulCount = 2;
		client AttackingOn2 = (client) server.playerHandler.players[followThisPlayer];
		AttackingOn2.lastDamageTaken = System.currentTimeMillis();
		thisX = AttackingOn2.absX;
		thisY = AttackingOn2.absY;
		int MAXHIT = 0;
		int EnemyX = PlayerHandler.players[followThisPlayer].absX;
		int EnemyY = PlayerHandler.players[followThisPlayer].absY;
		int EnemyHP = PlayerHandler.players[followThisPlayer].currentHealth;
		int aBonus = 0;
		int dBonus = 0;
		int rand_att = misc.random(playerLevel[0]) + getPrayerAtt();
		int rand_def = (int) (misc.random(AttackingOn2.playerLevel[1]) + AttackingOn2.getPrayerDef());
		if (FightType == 2)
			MAXHIT = (int) (hitDiff + 1);
		if (rand_att &gt; rand_def) {
			MAXHIT = misc.random(playerMaxHit + extraDamage + getPrayerStr());
			if (PlayerHandler.players[followThisPlayer].protMelee) {
				MAXHIT = (MAXHIT / 2);
			}
		} else {
			MAXHIT = 0;
		}
		if (MAXHIT &gt; EnemyHP) {
			MAXHIT = EnemyHP;
		} 
		if (EnemyHP &lt; 1 ) {
			MAXHIT = 0;
		} 
		if (MAXHIT &gt;= 43) {
			MAXHIT = 43;
		}
		if (MAXHIT &gt;= 0) {
			if (AttackingOn2.playerEquipment[playerRing] == 2550) {
				if (MAXHIT == 0) {
					recoilDamage = 0;
				} else if (MAXHIT &gt;= 1 &amp;&amp; MAXHIT &lt;= 7) {
					recoilDamage = 1;
				} else if (MAXHIT &gt;= 8 &amp;&amp; MAXHIT &lt;= 14) {
					recoilDamage = 2;
				} else if (MAXHIT &gt;= 15 &amp;&amp; MAXHIT &lt;= 21) {
					recoilDamage = 3;
				} else if (MAXHIT &gt;= 22 &amp;&amp; MAXHIT &lt;= 28) {
					recoilDamage = 5;
				} else if (MAXHIT &gt;= 29 &amp;&amp; MAXHIT &lt;= 35) {
					recoilDamage = 6;
				} else if (MAXHIT &gt; 35) {
					recoilDamage = 7;
				}
				if (recoilDamage &gt;= 0) {
					hitDiff = recoilDamage;
					dealDamage(recoilDamage);
					killers[localId] += recoilDamage;
					hits++;
					fighting = true;
					fightId = localId;
					hitUpdateRequired = true;
					updateRequired = true;
					appearanceUpdateRequired = true;
					if (AttackingOn2.recoilPercent &gt;= 100) {
						if (misc.random(5) == 5) {
							AttackingOn2.removeRing(2550, playerRing); 
							AttackingOn2.sendMessage("You ring crumbles to dust.");
						}
					}
					if (AttackingOn2.recoilPercent &lt; 100) {
						AttackingOn2.recoilPercent = (AttackingOn2.recoilPercent + 10);
					}
				}
				recoilDamage = 0;
			}
			
		}
		PlayerHandler.players[followThisPlayer].startAnimation(424);
		PlayerHandler.players[followThisPlayer].hitUpdateRequired2 = true;
		PlayerHandler.players[followThisPlayer].updateRequired = true;
		PlayerHandler.players[followThisPlayer].appearanceUpdateRequired = true;
		PlayerHandler.players[followThisPlayer].dealDamage(MAXHIT);
		PlayerHandler.players[followThisPlayer].hitDiff2 = MAXHIT;
		PlayerHandler.players[followThisPlayer].killers[localId] += MAXHIT;
		PlayerHandler.players[followThisPlayer].hits++;
		PlayerHandler.players[followThisPlayer].fighting = true;
		PlayerHandler.players[followThisPlayer].fightId = localId;
		int exp = MAXHIT * 4;
		int hpExp = MAXHIT * 1;
		addSkillXPmelee(exp * SERVER_EXPERIENCE, SkillID);
		addSkillXPmelee(hpExp * SERVER_EXPERIENCE, playerHitpoints);
		extraDamage = 0;
		sendSpecialBarAmount();
		return true;
	} else {
		followPlayer = null;
		return false;
	}
}
public int getPrayerStr() {
	int outcome = 0;
	int StrBonus = playerBonus[10]; // Strength Bonus
	int Strength = playerLevel[playerStrength]; // Strength
	if (strLow) {
		outcome += (double) (0.5 + (double) ((double) (StrBonus * Strength) * 0.00030));
	} else if (strMid) {
		outcome += (double) (0.5 + (double) ((double) (StrBonus * Strength) * 0.00040));
	} else if (strHigh) {
		outcome += (double) (0.5 + (double) ((double) (StrBonus * Strength) * 0.00050));
	}
	return outcome;
}
public int getPrayerDef() {
	int outcome = 0;
	int DefBonus = playerBonus[6]; // Strength Bonus
	int defence = playerLevel[1]; // Strength
	if (defLow) {
		outcome += (double) (0.5 + (double) ((double) (DefBonus * defence) * 0.00030));
	} else if (defMid) {
		outcome += (double) (0.5 + (double) ((double) (DefBonus * defence) * 0.00040));
	} else if (defHigh) {
		outcome += (double) (0.5 + (double) ((double) (DefBonus * defence) * 0.00050));
	}
	return outcome;
}
public int getPrayerAtt() {
	int outcome = 0;
	int AttBonus = playerBonus[0]; // Strength Bonus
	int Attack = playerLevel[0]; // attack 
	if (atkLow) {
		outcome += (double) (0.5 + (double) ((double) (AttBonus * Attack) * 0.00030));
	} else if (atkMid) {
		outcome += (double) (0.5 + (double) ((double) (AttBonus * Attack) * 0.00040));
	} else if (atkHigh) {
		outcome += (double) (0.5 + (double) ((double) (AttBonus * Attack) * 0.00050));
	}
	return outcome;
}
public boolean playerMeleeDamage() {
	if (followThisPlayer &gt; 0) {
		maulCount = 1;
		client AttackingOn2 = (client) server.playerHandler.players[followThisPlayer];
		AttackingOn2.lastDamageTaken = System.currentTimeMillis();
		thisX = AttackingOn2.absX;
		thisY = AttackingOn2.absY;
		int MAXHIT = 0;
		int EnemyX = PlayerHandler.players[followThisPlayer].absX;
		int EnemyY = PlayerHandler.players[followThisPlayer].absY;
		int EnemyHP = PlayerHandler.players[followThisPlayer].currentHealth;
		int aBonus = 0;
		int dBonus = 0;
		int xtra = 0;
		int rand_att = misc.random(playerLevel[0]) + getPrayerAtt();
		int rand_def = (int) (misc.random(AttackingOn2.playerLevel[1]) + AttackingOn2.getPrayerDef());
		if (FightType == 2) {
			xtra = 1;
		}
		if (FullDharokEquipped() &amp;&amp; misc.random(4) ==1) {
			getDharokBonus();
		}
		if (rand_att &gt; rand_def) {
			MAXHIT = misc.random(playerMaxHit + extraDamage + getPrayerStr() + xtra);
			if (PlayerHandler.players[followThisPlayer].protMelee) {
				MAXHIT = (MAXHIT / 2);
			}
		} else {
			MAXHIT = 0;
		}
		if (MAXHIT &gt; EnemyHP) {
			MAXHIT = EnemyHP;
		} 
		if (EnemyHP &lt; 1 ) {
			MAXHIT = 0;
		} 
		if (MAXHIT &gt;= 43 &amp;&amp; !FullDharokEquipped()) {
			MAXHIT = 43;
		}
		if (MAXHIT &gt;= 0) {
			if (AttackingOn2.playerEquipment[playerRing] == 2550) {
				if (MAXHIT == 0) {
					recoilDamage = 0;
				} else if (MAXHIT &gt;= 1 &amp;&amp; MAXHIT &lt;= 7) {
					recoilDamage = 1;
				} else if (MAXHIT &gt;= 8 &amp;&amp; MAXHIT &lt;= 14) {
					recoilDamage = 2;
				} else if (MAXHIT &gt;= 15 &amp;&amp; MAXHIT &lt;= 21) {
					recoilDamage = 3;
				} else if (MAXHIT &gt;= 22 &amp;&amp; MAXHIT &lt;= 28) {
					recoilDamage = 5;
				} else if (MAXHIT &gt;= 29 &amp;&amp; MAXHIT &lt;= 35) {
					recoilDamage = 6;
				} else if (MAXHIT &gt; 35) {
					recoilDamage = 7;
				}
				if (recoilDamage &gt;= 0) {
					hitDiff2 = recoilDamage;
					dealDamage(recoilDamage);
					killers[localId] += recoilDamage;
					hits++;
					fighting = true;
					fightId = localId;
					hitUpdateRequired2 = true;
					updateRequired = true;
					appearanceUpdateRequired = true;
					if (AttackingOn2.recoilPercent &gt;= 100) {
						if (misc.random(5) == 5) {
							AttackingOn2.removeRing(2550, playerRing); 
							AttackingOn2.sendMessage("You ring crumbles to dust.");
						}
					}
					if (AttackingOn2.recoilPercent &lt; 100) {
						AttackingOn2.recoilPercent = (AttackingOn2.recoilPercent + 10);
					}
				}
				recoilDamage = 0;
			}
			
		}
		PlayerHandler.players[followThisPlayer].startAnimation(424);
		PlayerHandler.players[followThisPlayer].hitUpdateRequired = true;
		PlayerHandler.players[followThisPlayer].updateRequired = true;
		PlayerHandler.players[followThisPlayer].appearanceUpdateRequired = true;
		PlayerHandler.players[followThisPlayer].dealDamage(MAXHIT);
		PlayerHandler.players[followThisPlayer].hitDiff = MAXHIT;
		PlayerHandler.players[followThisPlayer].killers[localId] += MAXHIT;
		PlayerHandler.players[followThisPlayer].hits++;
		PlayerHandler.players[followThisPlayer].fighting = true;
		PlayerHandler.players[followThisPlayer].fightId = localId;
		int exp = MAXHIT * 4;
		int hpExp = MAXHIT * 1;
		addSkillXPmelee(exp * SERVER_EXPERIENCE, SkillID);
		addSkillXPmelee(hpExp * SERVER_EXPERIENCE, playerHitpoints);
		extraDamage = 0;
		xtra = 0;
		return true;
	} else {
		followPlayer = null;
		return false;
	}
	}
public boolean npcRangedDamage()  {
if (attacknpc &gt;= 1) {
	int MAXHIT = misc.random(maxRangeHit());	
	int Type = server.npcHandler.npcs[damageThisNPC].npcType;	
	int EnemyX = server.npcHandler.npcs[damageThisNPC].absX;
	int EnemyY = server.npcHandler.npcs[damageThisNPC].absY;
	int EnemyHP = server.npcHandler.npcs[damageThisNPC].HP;
	if (MAXHIT &gt; EnemyHP) 
	{
		MAXHIT = EnemyHP;
	} 
	if (EnemyHP &lt; 1 )
	{
		MAXHIT = 0;
	}
	if (misc.random(2) == 1) {
		server.npcHandler.npcs[damageThisNPC].hit = true;
		server.npcHandler.npcs[damageThisNPC].animNumber = server.NpcAnimHandler.block[server.npcHandler.npcs[damageThisNPC].npcType];
		server.npcHandler.npcs[damageThisNPC].animUpdateRequired = true;
		server.npcHandler.npcs[damageThisNPC].hitDiff = MAXHIT;
		server.npcHandler.npcs[damageThisNPC].Killing[playerId] += MAXHIT;
		server.npcHandler.npcs[damageThisNPC].IsUnderAttack = true;
		server.npcHandler.npcs[damageThisNPC].RandomWalk = false;
		server.npcHandler.npcs[damageThisNPC].updateRequired = true;
		server.npcHandler.npcs[damageThisNPC].hitUpdateRequired = true;
	} else {
		server.npcHandler.npcs[damageThisNPC].hit2 = true;
		server.npcHandler.npcs[damageThisNPC].animNumber = server.NpcAnimHandler.block[server.npcHandler.npcs[damageThisNPC].npcType];
		server.npcHandler.npcs[damageThisNPC].animUpdateRequired = true;
		server.npcHandler.npcs[damageThisNPC].hitDiff2 = MAXHIT;
		server.npcHandler.npcs[damageThisNPC].Killing[playerId] += MAXHIT;
		server.npcHandler.npcs[damageThisNPC].IsUnderAttack = true;
		server.npcHandler.npcs[damageThisNPC].RandomWalk = false;
		server.npcHandler.npcs[damageThisNPC].updateRequired = true;
		server.npcHandler.npcs[damageThisNPC].hitUpdateRequired2 = true;
	}
	if (misc.random(2) == 1) {
		DropArrowsNPC();
	}
	if (MAXHIT &gt;= 23 &amp;&amp; playerWeapon != 15156) {
		MAXHIT = 23;
	}
	int exp = MAXHIT * 4;
	int hpExp = MAXHIT * 1;
	addSkillXPmelee(exp * SERVER_EXPERIENCE, 4);
	addSkillXPmelee(hpExp * SERVER_EXPERIENCE, playerHitpoints);
	extraDamage = 0;
	return true;
	}
	return false;
}
public boolean npcRangedRehit()  {
	if (attacknpc &gt;= 1) {
	if (rehitRange) {
		rehitRange = false;
		int MAXHIT = misc.random(maxRangeHit()) + misc.random(3);	
		int Type = server.npcHandler.npcs[damageThisNPC].npcType;	
		int EnemyX = server.npcHandler.npcs[damageThisNPC].absX;
		int EnemyY = server.npcHandler.npcs[damageThisNPC].absY;
		int EnemyHP = server.npcHandler.npcs[damageThisNPC].HP;
		if (MAXHIT &gt; EnemyHP) 
		{
			MAXHIT = EnemyHP;
		} 
		if (EnemyHP &lt; 1 )
		{
			MAXHIT = 0;
		}
		if (MAXHIT &gt;= 23 &amp;&amp; playerWeapon != 15156) {
			MAXHIT = 23;
		}
		server.npcHandler.npcs[damageThisNPC].hit2 = true;
		server.npcHandler.npcs[damageThisNPC].animNumber = server.NpcAnimHandler.block[server.npcHandler.npcs[damageThisNPC].npcType];
		server.npcHandler.npcs[damageThisNPC].animUpdateRequired = true;
		server.npcHandler.npcs[damageThisNPC].hitDiff2 = MAXHIT;
		server.npcHandler.npcs[damageThisNPC].Killing[playerId] += MAXHIT;
		server.npcHandler.npcs[damageThisNPC].IsUnderAttack = true;
		server.npcHandler.npcs[damageThisNPC].RandomWalk = false;
		server.npcHandler.npcs[damageThisNPC].updateRequired = true;
		server.npcHandler.npcs[damageThisNPC].hitUpdateRequired2 = true;
		int exp = MAXHIT * 4;
		int hpExp = MAXHIT * 1;
		addSkillXPmelee(exp * SERVER_EXPERIENCE, 4);
		addSkillXPmelee(hpExp * SERVER_EXPERIENCE, playerHitpoints);
		extraDamage = 0;
		//specAttack();
		sendSpecialBarAmount();
		if (misc.random(2) == 1) {
			DropArrowsNPC();
		}
		return true;
	}}
	return false;
}
public boolean stopAttack = false;
public boolean playerRangedDamage() {
	if (followThisPlayer &gt; 0) {
		client AttackingOn2 = (client) server.playerHandler.players[followThisPlayer];
		AttackingOn2.lastDamageTaken = System.currentTimeMillis();
		thisX = AttackingOn2.absX;
		thisY = AttackingOn2.absY;
		if (AttackingOn2.tStage &gt; 0) {
			return false;
		}
		int MAXHIT = 0;
		int aBonus = 0;
		int dBonus = 0;
		int rand_def = (int) (misc.random(AttackingOn2.playerLevel[9]) + AttackingOn2.getPrayerDef());
		int rand_att = misc.random(playerLevel[4]);
		int random_u = misc.random(playerBonus[4]);
		int random_def = misc.random(AttackingOn2.playerBonus[9]);
		if ((random_u &gt;= random_def) &amp;&amp; (rand_att &gt; rand_def)) {
			MAXHIT = misc.random(maxRangeHit());
			if (PlayerHandler.players[followThisPlayer].protRange) {
				MAXHIT = (MAXHIT / 2);
			}
		} else {
			MAXHIT = 0;
		}
		int EnemyX = PlayerHandler.players[followThisPlayer].absX;
		int EnemyY = PlayerHandler.players[followThisPlayer].absY;
		int EnemyHP = PlayerHandler.players[followThisPlayer].currentHealth;	
		if (MAXHIT &gt; EnemyHP) 
		{
			MAXHIT = EnemyHP;
		} 
		if (EnemyHP &lt; 1 )
		{
			MAXHIT = 0;
		}
		if (MAXHIT &gt;= 23 &amp;&amp; playerWeapon != 15156) {
			MAXHIT = 23;
		}
		if (MAXHIT &gt;= 0) {
			if (AttackingOn2.playerEquipment[playerRing] == 2550) {
				if (MAXHIT == 0) {
					recoilDamage = 0;
				} else if (MAXHIT &gt;= 1 &amp;&amp; MAXHIT &lt;= 7) {
					recoilDamage = 1;
				} else if (MAXHIT &gt;= 8 &amp;&amp; MAXHIT &lt;= 14) {
					recoilDamage = 2;
				} else if (MAXHIT &gt;= 15 &amp;&amp; MAXHIT &lt;= 21) {
					recoilDamage = 3;
				} else if (MAXHIT &gt;= 22 &amp;&amp; MAXHIT &lt;= 28) {
					recoilDamage = 5;
				} else if (MAXHIT &gt;= 29 &amp;&amp; MAXHIT &lt;= 35) {
					recoilDamage = 6;
				} else if (MAXHIT &gt; 35) {
					recoilDamage = 7;
				}
				if (recoilDamage &gt;= 0) {
					hitDiff2 = recoilDamage;
					dealDamage(recoilDamage);
					killers[localId] += recoilDamage;
					hits++;
					fighting = true;
					fightId = localId;
					hitUpdateRequired2 = true;
					updateRequired = true;
					appearanceUpdateRequired = true;
					if (AttackingOn2.recoilPercent &gt;= 100) {
						if (misc.random(5) == 5) {
							AttackingOn2.removeRing(2550, playerRing); 
							AttackingOn2.sendMessage("You ring crumbles to dust.");
						}
					}
					if (AttackingOn2.recoilPercent &lt; 100) {
						AttackingOn2.recoilPercent = (AttackingOn2.recoilPercent + 10);
					}
				}
				recoilDamage = 0;
			}
			
		}
		PlayerHandler.players[followThisPlayer].startAnimation(424);
		PlayerHandler.players[followThisPlayer].hitUpdateRequired = true;
		PlayerHandler.players[followThisPlayer].updateRequired = true;
		PlayerHandler.players[followThisPlayer].appearanceUpdateRequired = true;
		PlayerHandler.players[followThisPlayer].dealDamage(MAXHIT);
		PlayerHandler.players[followThisPlayer].hitDiff = MAXHIT;
		PlayerHandler.players[followThisPlayer].killers[localId] += MAXHIT;
		PlayerHandler.players[followThisPlayer].hits++;
		PlayerHandler.players[followThisPlayer].fighting = true;
		PlayerHandler.players[followThisPlayer].fightId = localId;
		int exp = MAXHIT * 4;
		int hpExp = MAXHIT * 1;
		addSkillXPmelee(exp * SERVER_EXPERIENCE, 4);
		addSkillXPmelee(hpExp * SERVER_EXPERIENCE, playerHitpoints);
		if (misc.random(2) == 1) {
			DropArrowsPLAYER();
		}
		return true;
	} else {
		followPlayer = null;
		return false;
	}
}
public boolean playerRangeRehitDamage() {
	if (rehitRangePlayer) {
		rehitRangePlayer = false;
		client AttackingOn2 = (client) server.playerHandler.players[followThisPlayer];
		AttackingOn2.lastDamageTaken = System.currentTimeMillis();
		thisX = AttackingOn2.absX;
		thisY = AttackingOn2.absY;
		if (AttackingOn2.tStage &gt; 0) {
			return false;
		}
		int MAXHIT = 0;
		int aBonus = 0;
		int dBonus = 0;
		int rand_def = (int) (misc.random(AttackingOn2.playerLevel[9]) + AttackingOn2.getPrayerDef());
		int rand_att = misc.random(playerLevel[4]);
		int random_u = misc.random(playerBonus[4]);
		int random_def = misc.random(AttackingOn2.playerBonus[9]);
		if ((random_u &gt;= random_def) &amp;&amp; (rand_att &gt; rand_def)) {
			MAXHIT = misc.random(maxRangeHit());
			if (PlayerHandler.players[followThisPlayer].protRange) {
				MAXHIT = (MAXHIT / 2);
			}
		} else {
			MAXHIT = 0;
		}
		int EnemyX = PlayerHandler.players[followThisPlayer].absX;
		int EnemyY = PlayerHandler.players[followThisPlayer].absY;
		int EnemyHP = PlayerHandler.players[followThisPlayer].currentHealth;	
		if (MAXHIT &gt; EnemyHP) 
		{
			MAXHIT = EnemyHP;
		} 
		if (EnemyHP &lt; 1 )
		{
			MAXHIT = 0;
		}
		if (MAXHIT &gt;= 23 &amp;&amp; playerWeapon != 15156) {
			MAXHIT = 23;
		}
		if (MAXHIT &gt;= 0) {
			if (AttackingOn2.playerEquipment[playerRing] == 2550) {
				if (MAXHIT == 0) {
					recoilDamage = 0;
				} else if (MAXHIT &gt;= 1 &amp;&amp; MAXHIT &lt;= 7) {
					recoilDamage = 1;
				} else if (MAXHIT &gt;= 8 &amp;&amp; MAXHIT &lt;= 14) {
					recoilDamage = 2;
				} else if (MAXHIT &gt;= 15 &amp;&amp; MAXHIT &lt;= 21) {
					recoilDamage = 3;
				} else if (MAXHIT &gt;= 22 &amp;&amp; MAXHIT &lt;= 28) {
					recoilDamage = 5;
				} else if (MAXHIT &gt;= 29 &amp;&amp; MAXHIT &lt;= 35) {
					recoilDamage = 6;
				} else if (MAXHIT &gt; 35) {
					recoilDamage = 7;
				}
				if (recoilDamage &gt;= 0) {
					hitDiff = recoilDamage;
					dealDamage(recoilDamage);
					killers[localId] += recoilDamage;
					hits++;
					fighting = true;
					fightId = localId;
					hitUpdateRequired = true;
					updateRequired = true;
					appearanceUpdateRequired = true;
					if (AttackingOn2.recoilPercent &gt;= 100) {
						if (misc.random(5) == 5) {
							AttackingOn2.removeRing(2550, playerRing); 
							AttackingOn2.sendMessage("You ring crumbles to dust.");
						}
					}
					if (AttackingOn2.recoilPercent &lt; 100) {
						AttackingOn2.recoilPercent = (AttackingOn2.recoilPercent + 10);
					}
				}
				recoilDamage = 0;
			}
			
		}[/code]</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/final-devo-2-4-help/360155/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/final-devo-2-4-help/360155/3</link>
        <pubDate>Tue, 14 Sep 2010 01:48:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-360155-3</guid>
        <source url="https://forum.moparisthebest.com/t/final-devo-2-4-help/360155.rss">Final Devo 2.4 help</source>
      </item>
      <item>
        <title>Final Devo 2.4 help</title>
        <dc:creator><![CDATA[@That_man_is_gay That man is gay]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/that_man_is_gay">@That_man_is_gay</a> wrote:</p>
          <blockquote>
              <p>k</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/final-devo-2-4-help/360155/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/final-devo-2-4-help/360155/2</link>
        <pubDate>Tue, 14 Sep 2010 01:46:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-360155-2</guid>
        <source url="https://forum.moparisthebest.com/t/final-devo-2-4-help/360155.rss">Final Devo 2.4 help</source>
      </item>
      <item>
        <title>Final Devo 2.4 help</title>
        <dc:creator><![CDATA[@Rat_racer550 Rat racer550]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rat_racer550">@Rat_racer550</a> wrote:</p>
          <blockquote>
              <p>Hey everyone. I need some help with Final Devo 2.4. I’m trying to make me weapons consistently hit 44’s. They hit real low numbers, even if I edit them.<br>
I’m editing my hit calculation methods, as I was told that this would change the weapons damage, but I can’t seem to get it. Can someone please show me what I should do with my hit calculations? <span class="bbcode-b">MY HIT CALCULATIONS ARE POSTED BELOW</span></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/final-devo-2-4-help/360155/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/final-devo-2-4-help/360155/1</link>
        <pubDate>Tue, 14 Sep 2010 01:43:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-360155-1</guid>
        <source url="https://forum.moparisthebest.com/t/final-devo-2-4-help/360155.rss">Final Devo 2.4 help</source>
      </item>
  </channel>
</rss>
