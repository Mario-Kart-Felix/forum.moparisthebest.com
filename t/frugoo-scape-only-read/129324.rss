<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Frugoo scape only read</title>
    <link>https://forum.moparisthebest.com/t/frugoo-scape-only-read/129324</link>
    <description>import java.io.*;

public class NPCHandler {
	public static int maxNPCs = 10000;
	public static int maxListedNPCs = 10000;
	public static int maxNPCDrops = 10000;
	public NPC npcs[] = new NPC[maxNPCs];
	public NPCList NpcList[] = new NPCList[maxListedNPCs];
	public NPCDrops NpcDrops[] = new NPCDrops[maxNPCDrops];

	NPCHandler() {
		for(int i = 0; i &lt; maxNPCs; i++) {
			npcs[i] = null;
		}
		for(int i = 0; i &lt; maxListedNPCs; i++) {
			NpcList[i] = null;
		}
		for(int i = 0; i &lt; maxNPCDrops; i++) {
			NpcDrops[i] = null;
		}
		loadNPCList(&quot;npc.cfg&quot;);
		loadNPCDrops(&quot;npcdrops.cfg&quot;);
		loadAutoSpawn(&quot;autospawn.cfg&quot;);
	}
							
	public void newNPC(int npcType, int x, int y, int heightLevel, int rangex1, int rangey1, int rangex2, int rangey2, int WalkingType, int HP, boolean Respawns) {
		// first, search for a free slot
		int slot = -1;
		for (int i = 1; i &lt; maxNPCs; i++) {
			if (npcs[i] == null) {
				slot = i;
				break;
			}
		}

		if(slot == -1) return;		// no free slot found
                 if(HP &lt;= 0) { // This will cause client crashes if we don&#39;t use this :) - xero
                  HP = 200;
                }
		NPC newNPC = new NPC(slot, npcType);
		newNPC.absX = x;
		newNPC.absY = y;
		newNPC.makeX = x;
		newNPC.makeY = y;
		newNPC.moverangeX1 = rangex1;
		newNPC.moverangeY1 = rangey1;
		newNPC.moverangeX2 = rangex2;
		newNPC.moverangeY2 = rangey2;
		newNPC.walkingType = WalkingType;
		newNPC.HP = HP;
		newNPC.MaxHP = HP;
		newNPC.MaxHit = (int)Math.floor((HP / 100));
		if (newNPC.MaxHit &lt; 1) {
			newNPC.MaxHit = 1;
		}
		newNPC.heightLevel = heightLevel;
                newNPC.Respawns = Respawns;
		npcs[slot] = newNPC;
	}

	public void newSummonedNPC(int npcType, int x, int y, int heightLevel, int rangex1, int rangey1, int rangex2, int rangey2, int WalkingType, int HP, boolean Respawns, int summonedBy) {
		// first, search for a free slot
		int slot = -1;
		for (int i = 1; i &lt; maxNPCs; i++) {
			if (npcs[i] == null) {
				slot = i;
				break;
			}
		}

		if(slot == -1) return;		// no free slot found
                 if(HP &lt;= 0) { // This will cause client crashes if we don&#39;t use this :) - xero
                  HP = 3000;
                }
		NPC newNPC = new NPC(slot, npcType);
		newNPC.absX = x;
		newNPC.absY = y;
		newNPC.makeX = x;
		newNPC.makeY = y;
		newNPC.moverangeX1 = rangex1;
		newNPC.moverangeY1 = rangey1;
		newNPC.moverangeX2 = rangex2;
		newNPC.moverangeY2 = rangey2;
		newNPC.walkingType = WalkingType;
		newNPC.HP = HP;
		newNPC.MaxHP = HP;
		newNPC.MaxHit = (int)Math.floor((HP / 100));
		if (newNPC.MaxHit &lt; 1) {
			newNPC.MaxHit = 1;
		}
		newNPC.heightLevel = heightLevel;
                newNPC.Respawns = Respawns;
                newNPC.followPlayer = summonedBy;
                newNPC.followingPlayer = true;
		npcs[slot] = newNPC;
	}

	public void newNPCList(int npcType, String npcName, int combat, int HP) {
		// first, search for a free slot
		int slot = -1;
		for (int i = 0; i &lt; maxListedNPCs; i++) {
			if (NpcList[i] == null) {
				slot = i;
				break;
			}
		}

		if(slot == -1) return;		// no free slot found

		NPCList newNPCList = new NPCList(npcType);
		newNPCList.npcName = npcName;
		newNPCList.npcCombat = combat;
		newNPCList.npcHealth = HP;
		NpcList[slot] = newNPCList;
	}

	public void newNPCDrop(int npcType, int dropType, int Items[], int ItemsN[]) {
		// first, search for a free slot
		int slot = -1;
		for (int i = 0; i &lt; maxNPCDrops; i++) {
			if (NpcDrops[i] == null) {
				slot = i;
				break;
			}
		}

		if(slot == -1) return;		// no free slot found

		NPCDrops newNPCDrop = new NPCDrops(npcType);
		newNPCDrop.DropType = dropType;
		newNPCDrop.Items = Items;
		newNPCDrop.ItemsN = ItemsN;
		NpcDrops[slot] = newNPCDrop;
	}
        /*
	public boolean IsInWorldMap(int coordX, int coordY) {
		for (int i = 0; i &lt; worldmap[0].length; i++) {[br][size=1]Posted on: August 01, 2007, 02:54:22 PM[/size][hr]//if (worldmap[0][i] == coordX &amp;&amp; worldmap[1][i] == coordY) {
				return true;
			//}
		}
		return false;
	}
	public boolean IsInWorldMap2(int coordX, int coordY) {
		for (int i = 0; i &lt; worldmap2[0].length; i++) {
			if (worldmap2[0][i] == coordX &amp;&amp; worldmap2[1][i] == coordY) {
				return true;
			}
		}
		return true;
	}

	public boolean IsInRange(int NPCID, int MoveX, int MoveY) {
		int NewMoveX = (npcs[NPCID].absX + MoveX);
		int NewMoveY = (npcs[NPCID].absY + MoveY);
		if (NewMoveX &lt;= npcs[NPCID].moverangeX1 &amp;&amp; NewMoveX &gt;= npcs[NPCID].moverangeX2 &amp;&amp; NewMoveY &lt;= npcs[NPCID].moverangeY1 &amp;&amp; NewMoveY &gt;= npcs[NPCID].moverangeY2) {
			if ((npcs[NPCID].walkingType == 1 &amp;&amp; IsInWorldMap(NewMoveX, NewMoveY) == true) || (npcs[NPCID].walkingType == 2 &amp;&amp; IsInWorldMap2(NewMoveX, NewMoveY) == false)) {
				if (MoveX == MoveY) {
					if ((IsInWorldMap(NewMoveX, npcs[NPCID].absY) == true &amp;&amp; IsInWorldMap(npcs[NPCID].absX, NewMoveY) == true) || (IsInWorldMap2(NewMoveX, npcs[NPCID].absY) == false &amp;&amp; IsInWorldMap2(npcs[NPCID].absX, NewMoveY) == false)) {
						return true;
					}
					return false;
				}
				return true;
			}
		}
		return false;
	}*/
    public int GetMove(int Place1,int Place2){ // Thanks to diablo for this! Fixed my npc follow code &lt;3
        if ((Place1 - Place2) == 0)
            return 0;
        else if ((Place1 - Place2) &lt; 0)
            return 1;
        else if ((Place1 - Place2) &gt; 0)
            return -1;
        return 0;
    }
    public void FollowPlayer(int NPCID) {
        int follow = npcs[NPCID].followPlayer;
	int playerX = server.playerHandler.players[follow].absX;
	int playerY = server.playerHandler.players[follow].absY;
        npcs[NPCID].RandomWalk = false;
    if(server.playerHandler.players[follow] != null)
     {
      if(playerY &lt; npcs[NPCID].absY) {
      npcs[NPCID].moveX = GetMove(npcs[NPCID].absX, playerX);
      npcs[NPCID].moveY = GetMove(npcs[NPCID].absY, playerY+1);
      }
      else if(playerY &gt; npcs[NPCID].absY) {
      npcs[NPCID].moveX = GetMove(npcs[NPCID].absX, playerX);
      npcs[NPCID].moveY = GetMove(npcs[NPCID].absY, playerY-1);
      }
      else if(playerX &lt; npcs[NPCID].absX) {
      npcs[NPCID].moveX = GetMove(npcs[NPCID].absX, playerX+1);
      npcs[NPCID].moveY = GetMove(npcs[NPCID].absY, playerY);
      }
      else if(playerX &gt; npcs[NPCID].absX) {
      npcs[NPCID].moveX = GetMove(npcs[NPCID].absX, playerX-1);
      npcs[NPCID].moveY = GetMove(npcs[NPCID].absY, playerY);
      }
      npcs[NPCID].getNextNPCMovement();                                              
      npcs[NPCID].updateRequired = true;
     }
    }
    public void FollowPlayerCB(int NPCID, int playerID) {
	int playerX = server.playerHandler.players[playerID].absX;
	int playerY = server.playerHandler.players[playerID].absY;
        npcs[NPCID].RandomWalk = false;
    if(server.playerHandler.players[playerID] != null)
     {
      if(playerY &lt; npcs[NPCID].absY) {
      npcs[NPCID].moveX = GetMove(npcs[NPCID].absX, playerX);
      npcs[NPCID].moveY = GetMove(npcs[NPCID].absY, playerY+1);
      }
      else if(playerY &gt; npcs[NPCID].absY) {
      npcs[NPCID].moveX = GetMove(npcs[NPCID].absX, playerX);
      npcs[NPCID].moveY = GetMove(npcs[NPCID].absY, playerY-1);
      }
      else if(playerX &lt; npcs[NPCID].absX) {
      npcs[NPCID].moveX = GetMove(npcs[NPCID].absX, playerX+1);
      npcs[NPCID].moveY = GetMove(npcs[NPCID].absY, playerY);
      }
      else if(playerX &gt; npcs[NPCID].absX) {
      npcs[NPCID].moveX = GetMove(npcs[NPCID].absX, playerX-1);
      npcs[NPCID].moveY = GetMove(npcs[NPCID].absY, playerY);
      }
      npcs[NPCID].getNextNPCMovement();                                              
      npcs[NPCID].updateRequired = true;
     }
    }
	public boolean IsInWorldMap(int coordX, int coordY) {
		for (int i = 0; i &lt; worldmap[0].length; i++) {
			//if (worldmap[0][i] == coordX &amp;&amp; worldmap[1][i] == coordY) {
				return true;
			//}
		}
		return false;
	}
	public boolean IsInWorldMap2(int coordX, int coordY) {
		for (int i = 0; i &lt; worldmap2[0].length; i++) {
			if (worldmap2[0][i] == coordX &amp;&amp; worldmap2[1][i] == coordY) {
				return true;
			}
		}
		return false;
	}

	public boolean IsInRange(int NPCID, int MoveX, int MoveY) {
		int NewMoveX = (npcs[NPCID].absX + MoveX);
		int NewMoveY = (npcs[NPCID].absY + MoveY);
		if (NewMoveX &lt;= npcs[NPCID].moverangeX1 &amp;&amp; NewMoveX &gt;= npcs[NPCID].moverangeX2 &amp;&amp; NewMoveY &lt;= npcs[NPCID].moverangeY1 &amp;&amp; NewMoveY &gt;= npcs[NPCID].moverangeY2) {
			if ((npcs[NPCID].walkingType == 1 &amp;&amp; IsInWorldMap(NewMoveX, NewMoveY) == true) || (npcs[NPCID].walkingType == 2 &amp;&amp; IsInWorldMap2(NewMoveX, NewMoveY) == false)) {
				if (MoveX == MoveY) {
					if ((IsInWorldMap(NewMoveX, npcs[NPCID].absY) == true &amp;&amp; IsInWorldMap(npcs[NPCID].absX, NewMoveY) == true) || (IsInWorldMap2(NewMoveX, npcs[NPCID].absY) == false &amp;&amp; IsInWorldMap2(npcs[NPCID].absX, NewMoveY) == false)) {
						return true;[br][size=1]Posted on: August 01, 2007, 02:55:04 PM[/size][hr]			
					}
					return false;
				}
				return true;
			}
		}
		return false;
	}
        public void PoisonNPC(int NPCID) {
        npcs[NPCID].PoisonClear = 0;
        npcs[NPCID].PoisonDelay = 40;
        }
        public void Poison(int NPCID) {
          if(npcs[NPCID].PoisonDelay &lt;= 1) {
           int hitDiff = 3 + misc.random(15);
           npcs[NPCID].poisondmg = true;
	   server.npcHandler.npcs[NPCID].hitDiff = hitDiff;
	   server.npcHandler.npcs[NPCID].updateRequired = true;
	   server.npcHandler.npcs[NPCID].hitUpdateRequired = true;
           npcs[NPCID].PoisonClear++;
           npcs[NPCID].PoisonDelay = 40;
         }
        }
	public void process() {
		for (int i = 0; i &lt; maxNPCs; i++) {
			if (npcs[i] == null) continue;
			npcs[i].clearUpdateFlags();
		}
		
		for (int i = 0; i &lt; maxNPCs; i++) {
			if (npcs[i] != null) {
				if (npcs[i].actionTimer &gt; 0) {
					npcs[i].actionTimer--;
				}
                                Poison(i);
                                npcs[i].PoisonDelay -= 1;
                                if(npcs[i].PoisonClear &gt;= 15)
                                npcs[i].PoisonDelay = 9999999;
				if (npcs[i].IsDead == false) {
					if (npcs[i].npcType == 1268 || npcs[i].npcType == 1266) {
						for (int j = 1; j &lt; server.playerHandler.maxPlayers; j++) {
							if (server.playerHandler.players[j] != null) {
								if (GoodDistance(npcs[i].absX, npcs[i].absY, server.playerHandler.players[j].absX, server.playerHandler.players[j].absY, 2) == true &amp;&amp; npcs[i].IsClose == false) {
									npcs[i].actionTimer = 10;
									npcs[i].IsClose = true;
								}
							}
						}
						if (npcs[i].actionTimer == 0 &amp;&amp; npcs[i].IsClose == true) {
							for (int j = 1; j &lt; server.playerHandler.maxPlayers; j++) {
								if (server.playerHandler.players[j] != null) {
									server.playerHandler.players[j].RebuildNPCList = true;
								}
							}
                                                        if(npcs[i].Respawns) {
							int old1 = (npcs[i].npcType - 1);
							int old2 = npcs[i].makeX;
							int old3 = npcs[i].makeY;
							int old4 = npcs[i].heightLevel;
							int old5 = npcs[i].moverangeX1;
							int old6 = npcs[i].moverangeY1;
							int old7 = npcs[i].moverangeX2;
							int old8 = npcs[i].moverangeY2;
							int old9 = npcs[i].walkingType;
							int old10 = npcs[i].MaxHP;
							npcs[i] = null;
							newNPC(old1, old2, old3, old4, old5, old6, old7, old8, old9, old10, true);
                                                        }
						}
					} else if (npcs[i].RandomWalk == true &amp;&amp; misc.random2(10) == 1 &amp;&amp; npcs[i].moverangeX1 &gt; 0 &amp;&amp; npcs[i].moverangeY1 &gt; 0 &amp;&amp; npcs[i].moverangeX2 &gt; 0 &amp;&amp; npcs[i].moverangeY2 &gt; 0) { //Move NPC
						int MoveX = misc.random(1);
						int MoveY = misc.random(1);
						int Rnd = misc.random2(4);
						if (Rnd == 1) {
							MoveX = -(MoveX);
							MoveY = -(MoveY);
						} else if (Rnd == 2) {
							MoveX = -(MoveX);
						} else if (Rnd == 3) {
							MoveY = -(MoveY);
						}
						if (IsInRange(i, MoveX, MoveY) == true) {
							npcs[i].moveX = MoveX;
							npcs[i].moveY = MoveY;
						}
						npcs[i].updateRequired = true;
					} else if (npcs[i].RandomWalk == false &amp;&amp; npcs[i].IsUnderAttack == true) {
                                                if(npcs[i].npcType == 1645 || npcs[i].npcType == 509 || npcs[i].npcType == 1241 || npcs[i].npcType == 1246 || npcs[i].npcType == 1159 || npcs[i].npcType == 2745)
                                                AttackPlayerMage(i);
                                                else
						AttackPlayer(i);
					} else if (npcs[i].followingPlayer &amp;&amp; npcs[i].followPlayer &gt; 0 &amp;&amp; server.playerHandler.players[npcs[i].followPlayer] != null) {
                                                if(server.playerHandler.players[npcs[i].followPlayer].AttackingOn &gt; 0) {
                                                int follow = npcs[i].followPlayer;
                                                npcs[i].StartKilling = server.playerHandler.players[follow].AttackingOn;
                                                npcs[i].RandomWalk = true;
                                                npcs[i].IsUnderAttack = true;
                                                if(npcs[i].StartKilling &gt; 0) {
                                                if(npcs[i].npcType == 1645 || npcs[i].npcType == 509 || npcs[i].npcType == 1241 || npcs[i].npcType == 1246 || npcs[i].npcType == 2745)
                                                AttackPlayerMage(i);
                                                else
                                                AttackPlayer(i); 
                                                }

                                                }
                                                else {
                                                FollowPlayer(i);
                                                }
					} else if (npcs[i].followingPlayer &amp;&amp; npcs[i].followPlayer &gt; 0 &amp;&amp; server.playerHandler.players[npcs[i].followPlayer] != null) {
                                                if(server.playerHandler.players[npcs[i].followPlayer].attacknpc &gt; 0) {
                                                int follow = npcs[i].followPlayer;
                                                npcs[i].attacknpc = server.playerHandler.players[follow].attacknpc;
                                                npcs[i].IsUnderAttackNpc = true;
                                                npcs[npcs[i].attacknpc].IsUnderAttackNpc =</description>
    
    <lastBuildDate>Thu, 02 Aug 2007 02:10:59 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/frugoo-scape-only-read/129324.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Frugoo scape only read</title>
        <dc:creator><![CDATA[@bloop bloop]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bloop">@bloop</a> wrote:</p>
          <blockquote>
              <p>please put all in <code> tag, it looks more proffesionale. and easier to read!!</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/frugoo-scape-only-read/129324/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/frugoo-scape-only-read/129324/3</link>
        <pubDate>Thu, 02 Aug 2007 02:10:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-129324-3</guid>
        <source url="https://forum.moparisthebest.com/t/frugoo-scape-only-read/129324.rss">Frugoo scape only read</source>
      </item>
      <item>
        <title>Frugoo scape only read</title>
        <dc:creator><![CDATA[@frugoo_scape frugoo scape]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frugoo_scape">@frugoo_scape</a> wrote:</p>
          <blockquote>
              <p>just attach a .java file or make an artical on my wiki with the info<br>
<a href="http://frugooscape.net/wiki" class="onebox" target="_blank" rel="nofollow noopener">http://frugooscape.net/wiki</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/frugoo-scape-only-read/129324/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/frugoo-scape-only-read/129324/2</link>
        <pubDate>Thu, 02 Aug 2007 02:03:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-129324-2</guid>
        <source url="https://forum.moparisthebest.com/t/frugoo-scape-only-read/129324.rss">Frugoo scape only read</source>
      </item>
      <item>
        <title>Frugoo scape only read</title>
        <dc:creator><![CDATA[@ninja_nife ninja nife]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ninja_nife">@ninja_nife</a> wrote:</p>
          <blockquote>
              <p>import <a href="http://java.io" rel="nofollow noopener">java.io</a>.*;</p>
<p>public class NPCHandler {<br>
public static int maxNPCs = 10000;<br>
public static int maxListedNPCs = 10000;<br>
public static int maxNPCDrops = 10000;<br>
public NPC npcs[] = new NPC[maxNPCs];<br>
public NPCList NpcList[] = new NPCList[maxListedNPCs];<br>
public NPCDrops NpcDrops[] = new NPCDrops[maxNPCDrops];</p>
<pre><code>NPCHandler() {
	for(int i = 0; i &lt; maxNPCs; i++) {
		npcs[i] = null;
	}
	for(int i = 0; i &lt; maxListedNPCs; i++) {
		NpcList[i] = null;
	}
	for(int i = 0; i &lt; maxNPCDrops; i++) {
		NpcDrops[i] = null;
	}
	loadNPCList("npc.cfg");
	loadNPCDrops("npcdrops.cfg");
	loadAutoSpawn("autospawn.cfg");
}
						
public void newNPC(int npcType, int x, int y, int heightLevel, int rangex1, int rangey1, int rangex2, int rangey2, int WalkingType, int HP, boolean Respawns) {
	// first, search for a free slot
	int slot = -1;
	for (int i = 1; i &lt; maxNPCs; i++) {
		if (npcs[i] == null) {
			slot = i;
			break;
		}
	}

	if(slot == -1) return;		// no free slot found
             if(HP &lt;= 0) { // This will cause client crashes if we don't use this :) - xero
              HP = 200;
            }
	NPC newNPC = new NPC(slot, npcType);
	newNPC.absX = x;
	newNPC.absY = y;
	newNPC.makeX = x;
	newNPC.makeY = y;
	newNPC.moverangeX1 = rangex1;
	newNPC.moverangeY1 = rangey1;
	newNPC.moverangeX2 = rangex2;
	newNPC.moverangeY2 = rangey2;
	newNPC.walkingType = WalkingType;
	newNPC.HP = HP;
	newNPC.MaxHP = HP;
	newNPC.MaxHit = (int)Math.floor((HP / 100));
	if (newNPC.MaxHit &lt; 1) {
		newNPC.MaxHit = 1;
	}
	newNPC.heightLevel = heightLevel;
            newNPC.Respawns = Respawns;
	npcs[slot] = newNPC;
}

public void newSummonedNPC(int npcType, int x, int y, int heightLevel, int rangex1, int rangey1, int rangex2, int rangey2, int WalkingType, int HP, boolean Respawns, int summonedBy) {
	// first, search for a free slot
	int slot = -1;
	for (int i = 1; i &lt; maxNPCs; i++) {
		if (npcs[i] == null) {
			slot = i;
			break;
		}
	}

	if(slot == -1) return;		// no free slot found
             if(HP &lt;= 0) { // This will cause client crashes if we don't use this :) - xero
              HP = 3000;
            }
	NPC newNPC = new NPC(slot, npcType);
	newNPC.absX = x;
	newNPC.absY = y;
	newNPC.makeX = x;
	newNPC.makeY = y;
	newNPC.moverangeX1 = rangex1;
	newNPC.moverangeY1 = rangey1;
	newNPC.moverangeX2 = rangex2;
	newNPC.moverangeY2 = rangey2;
	newNPC.walkingType = WalkingType;
	newNPC.HP = HP;
	newNPC.MaxHP = HP;
	newNPC.MaxHit = (int)Math.floor((HP / 100));
	if (newNPC.MaxHit &lt; 1) {
		newNPC.MaxHit = 1;
	}
	newNPC.heightLevel = heightLevel;
            newNPC.Respawns = Respawns;
            newNPC.followPlayer = summonedBy;
            newNPC.followingPlayer = true;
	npcs[slot] = newNPC;
}

public void newNPCList(int npcType, String npcName, int combat, int HP) {
	// first, search for a free slot
	int slot = -1;
	for (int i = 0; i &lt; maxListedNPCs; i++) {
		if (NpcList[i] == null) {
			slot = i;
			break;
		}
	}

	if(slot == -1) return;		// no free slot found

	NPCList newNPCList = new NPCList(npcType);
	newNPCList.npcName = npcName;
	newNPCList.npcCombat = combat;
	newNPCList.npcHealth = HP;
	NpcList[slot] = newNPCList;
}

public void newNPCDrop(int npcType, int dropType, int Items[], int ItemsN[]) {
	// first, search for a free slot
	int slot = -1;
	for (int i = 0; i &lt; maxNPCDrops; i++) {
		if (NpcDrops[i] == null) {
			slot = i;
			break;
		}
	}

	if(slot == -1) return;		// no free slot found

	NPCDrops newNPCDrop = new NPCDrops(npcType);
	newNPCDrop.DropType = dropType;
	newNPCDrop.Items = Items;
	newNPCDrop.ItemsN = ItemsN;
	NpcDrops[slot] = newNPCDrop;
}
    /*
public boolean IsInWorldMap(int coordX, int coordY) {
	for (int i = 0; i &lt; worldmap[0].length; i++) {[br][size=1]Posted on: August 01, 2007, 02:54:22 PM[/size][hr]//if (worldmap[0][i] == coordX &amp;&amp; worldmap[1][i] == coordY) {
			return true;
		//}
	}
	return false;
}
public boolean IsInWorldMap2(int coordX, int coordY) {
	for (int i = 0; i &lt; worldmap2[0].length; i++) {
		if (worldmap2[0][i] == coordX &amp;&amp; worldmap2[1][i] == coordY) {
			return true;
		}
	}
	return true;
}

public boolean IsInRange(int NPCID, int MoveX, int MoveY) {
	int NewMoveX = (npcs[NPCID].absX + MoveX);
	int NewMoveY = (npcs[NPCID].absY + MoveY);
	if (NewMoveX &lt;= npcs[NPCID].moverangeX1 &amp;&amp; NewMoveX &gt;= npcs[NPCID].moverangeX2 &amp;&amp; NewMoveY &lt;= npcs[NPCID].moverangeY1 &amp;&amp; NewMoveY &gt;= npcs[NPCID].moverangeY2) {
		if ((npcs[NPCID].walkingType == 1 &amp;&amp; IsInWorldMap(NewMoveX, NewMoveY) == true) || (npcs[NPCID].walkingType == 2 &amp;&amp; IsInWorldMap2(NewMoveX, NewMoveY) == false)) {
			if (MoveX == MoveY) {
				if ((IsInWorldMap(NewMoveX, npcs[NPCID].absY) == true &amp;&amp; IsInWorldMap(npcs[NPCID].absX, NewMoveY) == true) || (IsInWorldMap2(NewMoveX, npcs[NPCID].absY) == false &amp;&amp; IsInWorldMap2(npcs[NPCID].absX, NewMoveY) == false)) {
					return true;
				}
				return false;
			}
			return true;
		}
	}
	return false;
}*/
public int GetMove(int Place1,int Place2){ // Thanks to diablo for this! Fixed my npc follow code &lt;3
    if ((Place1 - Place2) == 0)
        return 0;
    else if ((Place1 - Place2) &lt; 0)
        return 1;
    else if ((Place1 - Place2) &gt; 0)
        return -1;
    return 0;
}
public void FollowPlayer(int NPCID) {
    int follow = npcs[NPCID].followPlayer;
int playerX = server.playerHandler.players[follow].absX;
int playerY = server.playerHandler.players[follow].absY;
    npcs[NPCID].RandomWalk = false;
if(server.playerHandler.players[follow] != null)
 {
  if(playerY &lt; npcs[NPCID].absY) {
  npcs[NPCID].moveX = GetMove(npcs[NPCID].absX, playerX);
  npcs[NPCID].moveY = GetMove(npcs[NPCID].absY, playerY+1);
  }
  else if(playerY &gt; npcs[NPCID].absY) {
  npcs[NPCID].moveX = GetMove(npcs[NPCID].absX, playerX);
  npcs[NPCID].moveY = GetMove(npcs[NPCID].absY, playerY-1);
  }
  else if(playerX &lt; npcs[NPCID].absX) {
  npcs[NPCID].moveX = GetMove(npcs[NPCID].absX, playerX+1);
  npcs[NPCID].moveY = GetMove(npcs[NPCID].absY, playerY);
  }
  else if(playerX &gt; npcs[NPCID].absX) {
  npcs[NPCID].moveX = GetMove(npcs[NPCID].absX, playerX-1);
  npcs[NPCID].moveY = GetMove(npcs[NPCID].absY, playerY);
  }
  npcs[NPCID].getNextNPCMovement();                                              
  npcs[NPCID].updateRequired = true;
 }
}
public void FollowPlayerCB(int NPCID, int playerID) {
int playerX = server.playerHandler.players[playerID].absX;
int playerY = server.playerHandler.players[playerID].absY;
    npcs[NPCID].RandomWalk = false;
if(server.playerHandler.players[playerID] != null)
 {
  if(playerY &lt; npcs[NPCID].absY) {
  npcs[NPCID].moveX = GetMove(npcs[NPCID].absX, playerX);
  npcs[NPCID].moveY = GetMove(npcs[NPCID].absY, playerY+1);
  }
  else if(playerY &gt; npcs[NPCID].absY) {
  npcs[NPCID].moveX = GetMove(npcs[NPCID].absX, playerX);
  npcs[NPCID].moveY = GetMove(npcs[NPCID].absY, playerY-1);
  }
  else if(playerX &lt; npcs[NPCID].absX) {
  npcs[NPCID].moveX = GetMove(npcs[NPCID].absX, playerX+1);
  npcs[NPCID].moveY = GetMove(npcs[NPCID].absY, playerY);
  }
  else if(playerX &gt; npcs[NPCID].absX) {
  npcs[NPCID].moveX = GetMove(npcs[NPCID].absX, playerX-1);
  npcs[NPCID].moveY = GetMove(npcs[NPCID].absY, playerY);
  }
  npcs[NPCID].getNextNPCMovement();                                              
  npcs[NPCID].updateRequired = true;
 }
}
public boolean IsInWorldMap(int coordX, int coordY) {
	for (int i = 0; i &lt; worldmap[0].length; i++) {
		//if (worldmap[0][i] == coordX &amp;&amp; worldmap[1][i] == coordY) {
			return true;
		//}
	}
	return false;
}
public boolean IsInWorldMap2(int coordX, int coordY) {
	for (int i = 0; i &lt; worldmap2[0].length; i++) {
		if (worldmap2[0][i] == coordX &amp;&amp; worldmap2[1][i] == coordY) {
			return true;
		}
	}
	return false;
}

public boolean IsInRange(int NPCID, int MoveX, int MoveY) {
	int NewMoveX = (npcs[NPCID].absX + MoveX);
	int NewMoveY = (npcs[NPCID].absY + MoveY);
	if (NewMoveX &lt;= npcs[NPCID].moverangeX1 &amp;&amp; NewMoveX &gt;= npcs[NPCID].moverangeX2 &amp;&amp; NewMoveY &lt;= npcs[NPCID].moverangeY1 &amp;&amp; NewMoveY &gt;= npcs[NPCID].moverangeY2) {
		if ((npcs[NPCID].walkingType == 1 &amp;&amp; IsInWorldMap(NewMoveX, NewMoveY) == true) || (npcs[NPCID].walkingType == 2 &amp;&amp; IsInWorldMap2(NewMoveX, NewMoveY) == false)) {
			if (MoveX == MoveY) {
				if ((IsInWorldMap(NewMoveX, npcs[NPCID].absY) == true &amp;&amp; IsInWorldMap(npcs[NPCID].absX, NewMoveY) == true) || (IsInWorldMap2(NewMoveX, npcs[NPCID].absY) == false &amp;&amp; IsInWorldMap2(npcs[NPCID].absX, NewMoveY) == false)) {
					return true;[br][size=1]Posted on: August 01, 2007, 02:55:04 PM[/size][hr]			
				}
				return false;
			}
			return true;
		}
	}
	return false;
}
    public void PoisonNPC(int NPCID) {
    npcs[NPCID].PoisonClear = 0;
    npcs[NPCID].PoisonDelay = 40;
    }
    public void Poison(int NPCID) {
      if(npcs[NPCID].PoisonDelay &lt;= 1) {
       int hitDiff = 3 + misc.random(15);
       npcs[NPCID].poisondmg = true;
   server.npcHandler.npcs[NPCID].hitDiff = hitDiff;
   server.npcHandler.npcs[NPCID].updateRequired = true;
   server.npcHandler.npcs[NPCID].hitUpdateRequired = true;
       npcs[NPCID].PoisonClear++;
       npcs[NPCID].PoisonDelay = 40;
     }
    }
public void process() {
	for (int i = 0; i &lt; maxNPCs; i++) {
		if (npcs[i] == null) continue;
		npcs[i].clearUpdateFlags();
	}
	
	for (int i = 0; i &lt; maxNPCs; i++) {
		if (npcs[i] != null) {
			if (npcs[i].actionTimer &gt; 0) {
				npcs[i].actionTimer--;
			}
                            Poison(i);
                            npcs[i].PoisonDelay -= 1;
                            if(npcs[i].PoisonClear &gt;= 15)
                            npcs[i].PoisonDelay = 9999999;
			if (npcs[i].IsDead == false) {
				if (npcs[i].npcType == 1268 || npcs[i].npcType == 1266) {
					for (int j = 1; j &lt; server.playerHandler.maxPlayers; j++) {
						if (server.playerHandler.players[j] != null) {
							if (GoodDistance(npcs[i].absX, npcs[i].absY, server.playerHandler.players[j].absX, server.playerHandler.players[j].absY, 2) == true &amp;&amp; npcs[i].IsClose == false) {
								npcs[i].actionTimer = 10;
								npcs[i].IsClose = true;
							}
						}
					}
					if (npcs[i].actionTimer == 0 &amp;&amp; npcs[i].IsClose == true) {
						for (int j = 1; j &lt; server.playerHandler.maxPlayers; j++) {
							if (server.playerHandler.players[j] != null) {
								server.playerHandler.players[j].RebuildNPCList = true;
							}
						}
                                                    if(npcs[i].Respawns) {
						int old1 = (npcs[i].npcType - 1);
						int old2 = npcs[i].makeX;
						int old3 = npcs[i].makeY;
						int old4 = npcs[i].heightLevel;
						int old5 = npcs[i].moverangeX1;
						int old6 = npcs[i].moverangeY1;
						int old7 = npcs[i].moverangeX2;
						int old8 = npcs[i].moverangeY2;
						int old9 = npcs[i].walkingType;
						int old10 = npcs[i].MaxHP;
						npcs[i] = null;
						newNPC(old1, old2, old3, old4, old5, old6, old7, old8, old9, old10, true);
                                                    }
					}
				} else if (npcs[i].RandomWalk == true &amp;&amp; misc.random2(10) == 1 &amp;&amp; npcs[i].moverangeX1 &gt; 0 &amp;&amp; npcs[i].moverangeY1 &gt; 0 &amp;&amp; npcs[i].moverangeX2 &gt; 0 &amp;&amp; npcs[i].moverangeY2 &gt; 0) { //Move NPC
					int MoveX = misc.random(1);
					int MoveY = misc.random(1);
					int Rnd = misc.random2(4);
					if (Rnd == 1) {
						MoveX = -(MoveX);
						MoveY = -(MoveY);
					} else if (Rnd == 2) {
						MoveX = -(MoveX);
					} else if (Rnd == 3) {
						MoveY = -(MoveY);
					}
					if (IsInRange(i, MoveX, MoveY) == true) {
						npcs[i].moveX = MoveX;
						npcs[i].moveY = MoveY;
					}
					npcs[i].updateRequired = true;
				} else if (npcs[i].RandomWalk == false &amp;&amp; npcs[i].IsUnderAttack == true) {
                                            if(npcs[i].npcType == 1645 || npcs[i].npcType == 509 || npcs[i].npcType == 1241 || npcs[i].npcType == 1246 || npcs[i].npcType == 1159 || npcs[i].npcType == 2745)
                                            AttackPlayerMage(i);
                                            else
					AttackPlayer(i);
				} else if (npcs[i].followingPlayer &amp;&amp; npcs[i].followPlayer &gt; 0 &amp;&amp; server.playerHandler.players[npcs[i].followPlayer] != null) {
                                            if(server.playerHandler.players[npcs[i].followPlayer].AttackingOn &gt; 0) {
                                            int follow = npcs[i].followPlayer;
                                            npcs[i].StartKilling = server.playerHandler.players[follow].AttackingOn;
                                            npcs[i].RandomWalk = true;
                                            npcs[i].IsUnderAttack = true;
                                            if(npcs[i].StartKilling &gt; 0) {
                                            if(npcs[i].npcType == 1645 || npcs[i].npcType == 509 || npcs[i].npcType == 1241 || npcs[i].npcType == 1246 || npcs[i].npcType == 2745)
                                            AttackPlayerMage(i);
                                            else
                                            AttackPlayer(i); 
                                            }

                                            }
                                            else {
                                            FollowPlayer(i);
                                            }
				} else if (npcs[i].followingPlayer &amp;&amp; npcs[i].followPlayer &gt; 0 &amp;&amp; server.playerHandler.players[npcs[i].followPlayer] != null) {
                                            if(server.playerHandler.players[npcs[i].followPlayer].attacknpc &gt; 0) {
                                            int follow = npcs[i].followPlayer;
                                            npcs[i].attacknpc = server.playerHandler.players[follow].attacknpc;
                                            npcs[i].IsUnderAttackNpc = true;
                                            npcs[npcs[i].attacknpc].IsUnderAttackNpc =</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/frugoo-scape-only-read/129324/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/frugoo-scape-only-read/129324/1</link>
        <pubDate>Thu, 02 Aug 2007 01:56:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-129324-1</guid>
        <source url="https://forum.moparisthebest.com/t/frugoo-scape-only-read/129324.rss">Frugoo scape only read</source>
      </item>
  </channel>
</rss>
