<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Loop through boolean check</title>
    <link>https://forum.moparisthebest.com/t/loop-through-boolean-check/159054</link>
    <description>I have this code, and it sucks all my CPU, obviously. I&#39;m not good at CPU utilization, but I&#39;m not sure how to fix this code so it doesn&#39;t use all the resources...

[code]while(!threadDeath) {
     if(fetchRequired) {
          //My code
     }
}[/code]

It loops through to check if that boolean is true, and it uses so much CPU. Any way to fix this? I want this to call the moment that boolean is true. I don&#39;t want Thread.sleep(mili)...</description>
    
    <lastBuildDate>Tue, 20 Nov 2007 03:18:25 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/loop-through-boolean-check/159054.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Loop through boolean check</title>
        <dc:creator><![CDATA[@BAsh_CntLgn BAsh(CntLgn)]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bash_cntlgn">@BAsh_CntLgn</a> wrote:</p>
          <blockquote>
              <p>You really have not told me what you are using this code for and you are just confusing me.</p>
<p>waitObject can never be null and if you were to set fetchRequired you would have to check to see if you had null anyway.</p>
<p>I’m really not sure what your getting at.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/loop-through-boolean-check/159054/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/loop-through-boolean-check/159054/7</link>
        <pubDate>Tue, 20 Nov 2007 03:18:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-159054-7</guid>
        <source url="https://forum.moparisthebest.com/t/loop-through-boolean-check/159054.rss">Loop through boolean check</source>
      </item>
      <item>
        <title>Loop through boolean check</title>
        <dc:creator><![CDATA[@Rajae Rajae]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rajae">@Rajae</a> wrote:</p>
          <blockquote>
              <p>[quote=“yakman, post:5, topic:159054”]instead of Thread.sleep(1L); you could try Thread.yield();<br>
yield() causes the current thread to give up its CPU space and let other threads do some work.</p>
<p>i had it explained in a really good sentance, ill try to find it…<br>
EDIT: here<br>
“The runtime system lets each thread run for a little while. If a thread does very little it can voluntarily give up the reminder of its time slice using yield() instead of just sitting it out”[/quote]<br>
Thread.yield(); seems to do the same as if I hadn’t put anything there at all. Uses all of the CPU the VM gives my program. However, I know what this method will do, it will allow other threads to work more. Thanks.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/loop-through-boolean-check/159054/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/loop-through-boolean-check/159054/6</link>
        <pubDate>Tue, 20 Nov 2007 02:05:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-159054-6</guid>
        <source url="https://forum.moparisthebest.com/t/loop-through-boolean-check/159054.rss">Loop through boolean check</source>
      </item>
      <item>
        <title>Loop through boolean check</title>
        <dc:creator><![CDATA[@yakman yakman]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/yakman">@yakman</a> wrote:</p>
          <blockquote>
              <p>instead of Thread.sleep(1L); you could try Thread.yield();<br>
yield() causes the current thread to give up its CPU space and let other threads do some work.</p>
<p>i had it explained in a really good sentance, ill try to find it…<br>
EDIT: here<br>
“The runtime system lets each thread run for a little while. If a thread does very little it can voluntarily give up the reminder of its time slice using yield() instead of just sitting it out”</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/loop-through-boolean-check/159054/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/loop-through-boolean-check/159054/5</link>
        <pubDate>Mon, 19 Nov 2007 20:49:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-159054-5</guid>
        <source url="https://forum.moparisthebest.com/t/loop-through-boolean-check/159054.rss">Loop through boolean check</source>
      </item>
      <item>
        <title>Loop through boolean check</title>
        <dc:creator><![CDATA[@Rajae Rajae]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rajae">@Rajae</a> wrote:</p>
          <blockquote>
              <p>Well I guess Thread.sleep(1); is a good solution for now. It is much better than before, but I’m wondering if there is a better way…</p>
<p>[quote=“BAsh(CntLgn), post:2, topic:159054”]Some code I whipped up:</p>
<p>[code]	private Object waitObject = new Object();<br>
private boolean fetchRequired = false;</p>
<pre><code>public void poke() {
	synchronized (waitObject) {
		fetchRequired = true;
		waitObject.notifyAll();
	}
}

public void run() {
	while (!threadDeath) {
		synchronized (waitObject) {
			if (fetchRequired) {
				doSomeShit();
			}
			fetchRequired = false;
		}
		waitObject.wait();
	}
}[/code][/quote]
</code></pre>
<p>My code has only one class, and I’m trying to avoid using this:</p>
<p><code>for(int i = 1; i &lt; connect.connectedPpl; i++) {
     if(connect.demandFetcher[i] == null) continue;
     connect.demandFetcher[i].wake();
}</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/loop-through-boolean-check/159054/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/loop-through-boolean-check/159054/4</link>
        <pubDate>Mon, 19 Nov 2007 17:46:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-159054-4</guid>
        <source url="https://forum.moparisthebest.com/t/loop-through-boolean-check/159054.rss">Loop through boolean check</source>
      </item>
      <item>
        <title>Loop through boolean check</title>
        <dc:creator><![CDATA[@system system]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/system">@system</a> wrote:</p>
          <blockquote>
              <p>Enen though you mentioned that you don’t want to use Thread.sleep(millis), I think that one is a very good thing to have.</p>
<p>When I tried both with and without a long time ago, I saw a big difference. I ran the code without this method, and the CPU usage was around 90 - 98%. Then I implemented this method in the code, and the CPU usage was only around 0 %.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/loop-through-boolean-check/159054/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/loop-through-boolean-check/159054/3</link>
        <pubDate>Mon, 19 Nov 2007 17:34:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-159054-3</guid>
        <source url="https://forum.moparisthebest.com/t/loop-through-boolean-check/159054.rss">Loop through boolean check</source>
      </item>
      <item>
        <title>Loop through boolean check</title>
        <dc:creator><![CDATA[@BAsh_CntLgn BAsh(CntLgn)]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bash_cntlgn">@BAsh_CntLgn</a> wrote:</p>
          <blockquote>
              <p>Some code I whipped up:</p>
<p>[code]	private Object waitObject = new Object();<br>
private boolean fetchRequired = false;</p>
<pre><code>public void poke() {
	synchronized (waitObject) {
		fetchRequired = true;
		waitObject.notifyAll();
	}
}

public void run() {
	while (!threadDeath) {
		synchronized (waitObject) {
			if (fetchRequired) {
				doSomeShit();
			}
			fetchRequired = false;
		}
		waitObject.wait();
	}
}[/code]</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/loop-through-boolean-check/159054/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/loop-through-boolean-check/159054/2</link>
        <pubDate>Mon, 19 Nov 2007 06:43:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-159054-2</guid>
        <source url="https://forum.moparisthebest.com/t/loop-through-boolean-check/159054.rss">Loop through boolean check</source>
      </item>
      <item>
        <title>Loop through boolean check</title>
        <dc:creator><![CDATA[@Rajae Rajae]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rajae">@Rajae</a> wrote:</p>
          <blockquote>
              <p>I have this code, and it sucks all my CPU, obviously. I’m not good at CPU utilization, but I’m not sure how to fix this code so it doesn’t use all the resources…</p>
<p><code>while(!threadDeath) {
     if(fetchRequired) {
          //My code
     }
}</code></p>
<p>It loops through to check if that boolean is true, and it uses so much CPU. Any way to fix this? I want this to call the moment that boolean is true. I don’t want Thread.sleep(mili)…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/loop-through-boolean-check/159054/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/loop-through-boolean-check/159054/1</link>
        <pubDate>Mon, 19 Nov 2007 05:39:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-159054-1</guid>
        <source url="https://forum.moparisthebest.com/t/loop-through-boolean-check/159054.rss">Loop through boolean check</source>
      </item>
  </channel>
</rss>
