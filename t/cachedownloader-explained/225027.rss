<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>CacheDownloader - Explained</title>
    <link>https://forum.moparisthebest.com/t/cachedownloader-explained/225027</link>
    <description>Small note, this is for a refactored client.

What makes this better than other tutorials:
This checks for the zip file, and if it exists it checks the size of it, compared with the cache file, if there are differences, the cache file downloads.
Step 1:  put this in a new class (java file) in your main folder.
[code]
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.zip.Adler32;
import java.util.zip.CheckedInputStream;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;

/**
 * @author PeeHPee
 */
public class CacheDownloader {
    public String cacheUrl;
    private URL url;
    private long percent;
    private boolean downloading;

    public CacheDownloader(String url) {
        try {
            this.cacheUrl = url;
            this.url = new URL(cacheUrl);
        } catch (MalformedURLException e) {
            System.out.println(&quot;CacheDownloader.java: &quot; + e);
        }
    }

    /**
     * Thanks jeebles/gballs.
     * 
     * @return The file name extracted from the url, e.g,
     *         http://penis.com/lol.png would return lol.png.
     */
    private String getFilename() {
        int i = this.cacheUrl.lastIndexOf(&quot;/&quot;);
        if (i != -1 &amp;&amp; i &lt; this.cacheUrl.length() - 1) {
            return this.cacheUrl.substring(i + 1);
        } else {
            return &quot;bad url&quot;;
        }
    }

    public void download(String path) {
        try {
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            File localFile = new File(path + this.getFilename());
            if (localFile.exists()) {
                System.out.println(&quot;File already exists.  Checking file size&quot;);
                if (localFile.length() != conn.getContentLength()) {
                    conn.setDoInput(true);
                    byte[] buffer = new byte[conn.getInputStream().available()];
                    BufferedOutputStream bos = new BufferedOutputStream(
                            new FileOutputStream(localFile));
                    int read;
                    setDownloading(true);
                    while ((read = conn.getInputStream().read(buffer)) != -1) {
                        bos.write(buffer, 0, read);
                        this.setPercent(conn.getContentLength()
                                - localFile.length() / 100);
                    }
                    bos.flush();
                    bos.close();
                    conn.getInputStream().close();
                }
            }
        } catch (IOException e) {
            System.out.println(&quot;CacheDownloader.java: &quot; + e);
        }
    }

    public void unZip(String path) {
        try {
            FileInputStream fis = new FileInputStream(path + getFilename());
            CheckedInputStream checksum = new CheckedInputStream(fis,
                    new Adler32());
            ZipInputStream zis = new ZipInputStream(new BufferedInputStream(
                    checksum));
            ZipEntry entry;
            while ((entry = zis.getNextEntry()) != null) {
                byte dataBuffer[] = new byte[2048];
                FileOutputStream fos = new FileOutputStream(entry.getName());
                BufferedOutputStream bos = new BufferedOutputStream(fos, 2048);
                int read;
                while ((read = zis.read(dataBuffer, 0, 2048)) != -1) {
                    bos.write(dataBuffer, 0, read);
                }
                bos.flush();
                bos.close();
            }
        } catch (FileNotFoundException e) {
            System.out.println(&quot;Zip file not found: attempting to download.&quot;);
            download(path);
        } catch (IOException e) {
            e.printStackTrace();
        }

    }

    /**
     * @param percent
     *                the percent to set
     */
    public void setPercent(long percent) {
        this.percent = percent;
    }

    /**
     * @return the percentage of the current file.
     */
    public long getPercent() {
        return percent;
    }

    /**
     * @return if we&#39;re downloading.
     */
    public boolean isDownloading() {
        return this.downloading;
    }

    /**
     * @param downloading
     *                true if we&#39;re still downloading, false if we&#39;re not.
     */
    public void setDownloading(boolean downloading) {
        this.downloading = downloading;
    }
}

Explaining it...

The constructor (public CacheDownloader()) sets the url with the first parameters, then sets the other url (java.net.URL) with an URL constructor.

getFilename(), gets the name of the file from the url we set with the constructor, using the data after the lastIndexOf(&quot;/&quot;)

download(path), Downloads the file, if the file doesn&#39;t exist, or the file isn&#39;t the correct size.  

java.net.URL.openConnection, opens the connection that we download the cache from and casts it to java.net.HttpURLConnection, so we can invoke other methods on it.

localFile = new File(path + this.getFilename() creates a new file in the directory path, and the file getFilename()

conn.getContentLength() gets the length of the zip file, so we can compare it to the local file.

conn.setDoInput tells the VM that we&#39;re using the httpurl connection for input.

the byte[] buffer creates a payload for the data sent from the url connection, and stores it in a byte array of length conn.getInputStream().available()

to explain the unZip method, just read http://java.sun.com/developer/technicalArticles/Programming/compression/, as I stole it from there :(
[/code]
and save it.

Step 2: open client.java, and for this part u have 2 actually change something... so add this
[code]
public final static String CACHE_URL = &quot;http://peehpee.com/cache.zip&quot;;
[/code]

The above, is a constant, constants are usually final static and the field names are UPPER_CASE, just change http://peehpee.com/cache.zip to wherever your cache is.

and change accordingly

Step 3: find void startUp(); in client.java, under it and before if(signlink.sunjava) add
[code]
        if (!new File(signlink.findcachedir()).exists())
            new File(signlink.findcachedir()).mkdir();
        drawLoadingText(20, &quot;Starting up&quot;);
        CacheDownloader cacheDownloader = new CacheDownloader(CACHE_URL);
        cacheDownloader.download(signlink.findcachedir());
        while (cacheDownloader.isDownloading()) {
            drawLoadingText(25, &quot;Downloading Cache - &quot;
                    + cacheDownloader.getPercent() + &quot;%&quot;);
        }
        cacheDownloader.unZip(signlink.findcachedir());
[/code]
Not much to explain here, it checks if the directory for the cache exists, and if it doesn&#39;t, it creates it.
Congratulations, you have completed the shortest auto-cache downloading tutorial yet.</description>
    
    <lastBuildDate>Wed, 20 Aug 2008 05:45:39 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/cachedownloader-explained/225027.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>CacheDownloader - Explained</title>
        <dc:creator><![CDATA[@satansangel satansangel]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/satansangel">@satansangel</a> wrote:</p>
          <blockquote>
              <p>why does everyone on mopar love to use vulgar language?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cachedownloader-explained/225027/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cachedownloader-explained/225027/15</link>
        <pubDate>Wed, 20 Aug 2008 05:45:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-225027-15</guid>
        <source url="https://forum.moparisthebest.com/t/cachedownloader-explained/225027.rss">CacheDownloader - Explained</source>
      </item>
      <item>
        <title>CacheDownloader - Explained</title>
        <dc:creator><![CDATA[@lesterknome lesterknome]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lesterknome">@lesterknome</a> wrote:</p>
          <blockquote>
              <p>lol, i guess i owe you an apollogy peehpee =)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cachedownloader-explained/225027/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cachedownloader-explained/225027/14</link>
        <pubDate>Tue, 19 Aug 2008 14:57:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-225027-14</guid>
        <source url="https://forum.moparisthebest.com/t/cachedownloader-explained/225027.rss">CacheDownloader - Explained</source>
      </item>
      <item>
        <title>CacheDownloader - Explained</title>
        <dc:creator><![CDATA[@coolguy44 coolguy44]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/coolguy44">@coolguy44</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="2" data-topic="225027">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/lesterknome/40/5_6bca9977b612b7aeef77ba1ec1cd67b3.png" class="avatar"> lesterknome:</div>
<blockquote>
<p>bullshit! The link doesnt even work</p>
</blockquote>
</aside>
<p>Your a dumbass for flaming him for no apparent reason. gtfo</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cachedownloader-explained/225027/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cachedownloader-explained/225027/13</link>
        <pubDate>Tue, 19 Aug 2008 08:07:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-225027-13</guid>
        <source url="https://forum.moparisthebest.com/t/cachedownloader-explained/225027.rss">CacheDownloader - Explained</source>
      </item>
      <item>
        <title>CacheDownloader - Explained</title>
        <dc:creator><![CDATA[@Jordiescape Jordiescape]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jordiescape">@Jordiescape</a> wrote:</p>
          <blockquote>
              <blockquote>The above, is a constant, constants are usually final static and the field names are UPPER_CASE, just change http://peehpee.com/cache.zip to wherever your cache is.</blockquote>
Read that bit carefully, it's not actually the download link.
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cachedownloader-explained/225027/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cachedownloader-explained/225027/12</link>
        <pubDate>Mon, 18 Aug 2008 23:38:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-225027-12</guid>
        <source url="https://forum.moparisthebest.com/t/cachedownloader-explained/225027.rss">CacheDownloader - Explained</source>
      </item>
      <item>
        <title>CacheDownloader - Explained</title>
        <dc:creator><![CDATA[@p3own p3own]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/p3own">@p3own</a> wrote:</p>
          <blockquote>
              <p>[quote=“sw1tchez, post:9, topic:225027”][quote author=lesterknome link=topic=295790.msg2383482#msg2383482 date=1218660289]<br>
<a href="http://peehpee.com/cache.zip" rel="nofollow noopener">http://peehpee.com/cache.zip</a> is not a real website!<br>
[/quote]<br>
No fucking way ?! OMG?![/quote]</p>
<p>I know right?..</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cachedownloader-explained/225027/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cachedownloader-explained/225027/11</link>
        <pubDate>Mon, 18 Aug 2008 22:24:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-225027-11</guid>
        <source url="https://forum.moparisthebest.com/t/cachedownloader-explained/225027.rss">CacheDownloader - Explained</source>
      </item>
      <item>
        <title>CacheDownloader - Explained</title>
        <dc:creator><![CDATA[@Rog3r Rog3r]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rog3r">@Rog3r</a> wrote:</p>
          <blockquote>
              <p>Nice tut, it’ll help the people who want to learn more then just copying and pasting.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cachedownloader-explained/225027/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cachedownloader-explained/225027/10</link>
        <pubDate>Mon, 18 Aug 2008 21:38:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-225027-10</guid>
        <source url="https://forum.moparisthebest.com/t/cachedownloader-explained/225027.rss">CacheDownloader - Explained</source>
      </item>
      <item>
        <title>CacheDownloader - Explained</title>
        <dc:creator><![CDATA[@sw1tchez sw1tchez]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sw1tchez">@sw1tchez</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="5" data-topic="225027">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/lesterknome/40/5_6bca9977b612b7aeef77ba1ec1cd67b3.png" class="avatar"> lesterknome:</div>
<blockquote>
<p><a href="http://peehpee.com/cache.zip" rel="nofollow noopener">http://peehpee.com/cache.zip</a> is not a real website!</p>
</blockquote>
</aside>
<p>No fucking way ?! OMG?!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cachedownloader-explained/225027/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cachedownloader-explained/225027/9</link>
        <pubDate>Mon, 18 Aug 2008 21:36:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-225027-9</guid>
        <source url="https://forum.moparisthebest.com/t/cachedownloader-explained/225027.rss">CacheDownloader - Explained</source>
      </item>
      <item>
        <title>CacheDownloader - Explained</title>
        <dc:creator><![CDATA[@p3own p3own]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/p3own">@p3own</a> wrote:</p>
          <blockquote>
              <p>I don’t know guys, I think its <span class="bbcode-i">just a guess</span> saying that <span class="bbcode-i">“<a href="http://peehpee.com/cache.zip" rel="nofollow noopener">http://peehpee.com/cache.zip</a>”</span> is just there for an example I mean <span class="bbcode-i">its just a guess and all</span></p>
<p>Gj.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cachedownloader-explained/225027/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cachedownloader-explained/225027/8</link>
        <pubDate>Mon, 18 Aug 2008 10:16:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-225027-8</guid>
        <source url="https://forum.moparisthebest.com/t/cachedownloader-explained/225027.rss">CacheDownloader - Explained</source>
      </item>
      <item>
        <title>CacheDownloader - Explained</title>
        <dc:creator><![CDATA[@lesterknome lesterknome]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lesterknome">@lesterknome</a> wrote:</p>
          <blockquote>
              <p>i dont mean to be rude im sorry im just letting you know that the website u provided doesnt work plz give me the real website</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cachedownloader-explained/225027/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cachedownloader-explained/225027/7</link>
        <pubDate>Fri, 15 Aug 2008 00:58:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-225027-7</guid>
        <source url="https://forum.moparisthebest.com/t/cachedownloader-explained/225027.rss">CacheDownloader - Explained</source>
      </item>
      <item>
        <title>CacheDownloader - Explained</title>
        <dc:creator><![CDATA[@PeeHPee PeeHPee]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/peehpee">@PeeHPee</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="5" data-topic="225027">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/lesterknome/40/5_6bca9977b612b7aeef77ba1ec1cd67b3.png" class="avatar"> lesterknome:</div>
<blockquote>
<p><a href="http://peehpee.com/cache.zip" rel="nofollow noopener">http://peehpee.com/cache.zip</a> is not a real website!</p>
</blockquote>
</aside>
<p>Get off my fucking thread faggot.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cachedownloader-explained/225027/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cachedownloader-explained/225027/6</link>
        <pubDate>Thu, 14 Aug 2008 01:22:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-225027-6</guid>
        <source url="https://forum.moparisthebest.com/t/cachedownloader-explained/225027.rss">CacheDownloader - Explained</source>
      </item>
      <item>
        <title>CacheDownloader - Explained</title>
        <dc:creator><![CDATA[@lesterknome lesterknome]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lesterknome">@lesterknome</a> wrote:</p>
          <blockquote>
              <p><a href="http://peehpee.com/cache.zip" rel="nofollow noopener">http://peehpee.com/cache.zip</a> is not a real website!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cachedownloader-explained/225027/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cachedownloader-explained/225027/5</link>
        <pubDate>Wed, 13 Aug 2008 20:44:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-225027-5</guid>
        <source url="https://forum.moparisthebest.com/t/cachedownloader-explained/225027.rss">CacheDownloader - Explained</source>
      </item>
      <item>
        <title>CacheDownloader - Explained</title>
        <dc:creator><![CDATA[@PeeHPee PeeHPee]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/peehpee">@PeeHPee</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="2" data-topic="225027">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/lesterknome/40/5_6bca9977b612b7aeef77ba1ec1cd67b3.png" class="avatar"> lesterknome:</div>
<blockquote>
<p>bullshit! The link doesnt even work</p>
</blockquote>
</aside>
<p>What the fuck are you talking about?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cachedownloader-explained/225027/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cachedownloader-explained/225027/4</link>
        <pubDate>Wed, 13 Aug 2008 20:39:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-225027-4</guid>
        <source url="https://forum.moparisthebest.com/t/cachedownloader-explained/225027.rss">CacheDownloader - Explained</source>
      </item>
      <item>
        <title>CacheDownloader - Explained</title>
        <dc:creator><![CDATA[@SonGoku SonGoku]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/songoku">@SonGoku</a> wrote:</p>
          <blockquote>
              <p>Lol les your a fraking idiot.</p>
<p>Good job on this:)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cachedownloader-explained/225027/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cachedownloader-explained/225027/3</link>
        <pubDate>Wed, 13 Aug 2008 02:49:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-225027-3</guid>
        <source url="https://forum.moparisthebest.com/t/cachedownloader-explained/225027.rss">CacheDownloader - Explained</source>
      </item>
      <item>
        <title>CacheDownloader - Explained</title>
        <dc:creator><![CDATA[@lesterknome lesterknome]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lesterknome">@lesterknome</a> wrote:</p>
          <blockquote>
              <p>bullshit! The link doesnt even work</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cachedownloader-explained/225027/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cachedownloader-explained/225027/2</link>
        <pubDate>Wed, 13 Aug 2008 01:19:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-225027-2</guid>
        <source url="https://forum.moparisthebest.com/t/cachedownloader-explained/225027.rss">CacheDownloader - Explained</source>
      </item>
      <item>
        <title>CacheDownloader - Explained</title>
        <dc:creator><![CDATA[@PeeHPee PeeHPee]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/peehpee">@PeeHPee</a> wrote:</p>
          <blockquote>
              <p>Small note, this is for a refactored client.</p>
<p>What makes this better than other tutorials:<br>
This checks for the zip file, and if it exists it checks the size of it, compared with the cache file, if there are differences, the cache file downloads.<br>
Step 1:  put this in a new class (java file) in your main folder.</p>
<pre><code class="lang-auto">import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.zip.Adler32;
import java.util.zip.CheckedInputStream;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;

/**
 * @author PeeHPee
 */
public class CacheDownloader {
    public String cacheUrl;
    private URL url;
    private long percent;
    private boolean downloading;

    public CacheDownloader(String url) {
        try {
            this.cacheUrl = url;
            this.url = new URL(cacheUrl);
        } catch (MalformedURLException e) {
            System.out.println("CacheDownloader.java: " + e);
        }
    }

    /**
     * Thanks jeebles/gballs.
     * 
     * @return The file name extracted from the url, e.g,
     *         http://penis.com/lol.png would return lol.png.
     */
    private String getFilename() {
        int i = this.cacheUrl.lastIndexOf("/");
        if (i != -1 &amp;&amp; i &lt; this.cacheUrl.length() - 1) {
            return this.cacheUrl.substring(i + 1);
        } else {
            return "bad url";
        }
    }

    public void download(String path) {
        try {
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            File localFile = new File(path + this.getFilename());
            if (localFile.exists()) {
                System.out.println("File already exists.  Checking file size");
                if (localFile.length() != conn.getContentLength()) {
                    conn.setDoInput(true);
                    byte[] buffer = new byte[conn.getInputStream().available()];
                    BufferedOutputStream bos = new BufferedOutputStream(
                            new FileOutputStream(localFile));
                    int read;
                    setDownloading(true);
                    while ((read = conn.getInputStream().read(buffer)) != -1) {
                        bos.write(buffer, 0, read);
                        this.setPercent(conn.getContentLength()
                                - localFile.length() / 100);
                    }
                    bos.flush();
                    bos.close();
                    conn.getInputStream().close();
                }
            }
        } catch (IOException e) {
            System.out.println("CacheDownloader.java: " + e);
        }
    }

    public void unZip(String path) {
        try {
            FileInputStream fis = new FileInputStream(path + getFilename());
            CheckedInputStream checksum = new CheckedInputStream(fis,
                    new Adler32());
            ZipInputStream zis = new ZipInputStream(new BufferedInputStream(
                    checksum));
            ZipEntry entry;
            while ((entry = zis.getNextEntry()) != null) {
                byte dataBuffer[] = new byte[2048];
                FileOutputStream fos = new FileOutputStream(entry.getName());
                BufferedOutputStream bos = new BufferedOutputStream(fos, 2048);
                int read;
                while ((read = zis.read(dataBuffer, 0, 2048)) != -1) {
                    bos.write(dataBuffer, 0, read);
                }
                bos.flush();
                bos.close();
            }
        } catch (FileNotFoundException e) {
            System.out.println("Zip file not found: attempting to download.");
            download(path);
        } catch (IOException e) {
            e.printStackTrace();
        }

    }

    /**
     * @param percent
     *                the percent to set
     */
    public void setPercent(long percent) {
        this.percent = percent;
    }

    /**
     * @return the percentage of the current file.
     */
    public long getPercent() {
        return percent;
    }

    /**
     * @return if we're downloading.
     */
    public boolean isDownloading() {
        return this.downloading;
    }

    /**
     * @param downloading
     *                true if we're still downloading, false if we're not.
     */
    public void setDownloading(boolean downloading) {
        this.downloading = downloading;
    }
}

Explaining it...

The constructor (public CacheDownloader()) sets the url with the first parameters, then sets the other url (java.net.URL) with an URL constructor.

getFilename(), gets the name of the file from the url we set with the constructor, using the data after the lastIndexOf("/")

download(path), Downloads the file, if the file doesn't exist, or the file isn't the correct size.  

java.net.URL.openConnection, opens the connection that we download the cache from and casts it to java.net.HttpURLConnection, so we can invoke other methods on it.

localFile = new File(path + this.getFilename() creates a new file in the directory path, and the file getFilename()

conn.getContentLength() gets the length of the zip file, so we can compare it to the local file.

conn.setDoInput tells the VM that we're using the httpurl connection for input.

the byte[] buffer creates a payload for the data sent from the url connection, and stores it in a byte array of length conn.getInputStream().available()

to explain the unZip method, just read http://java.sun.com/developer/technicalArticles/Programming/compression/, as I stole it from there :(</code></pre>
<p>and save it.</p>
<p>Step 2: open client.java, and for this part u have 2 actually change something… so add this</p>
<pre><code class="lang-auto">public final static String CACHE_URL = "http://peehpee.com/cache.zip";</code></pre>
<p>The above, is a constant, constants are usually final static and the field names are UPPER_CASE, just change <a href="http://peehpee.com/cache.zip" rel="nofollow noopener">http://peehpee.com/cache.zip</a> to wherever your cache is.</p>
<p>and change accordingly</p>
<p>Step 3: find void startUp(); in client.java, under it and before if(signlink.sunjava) add</p>
<pre><code class="lang-auto">        if (!new File(signlink.findcachedir()).exists())
            new File(signlink.findcachedir()).mkdir();
        drawLoadingText(20, "Starting up");
        CacheDownloader cacheDownloader = new CacheDownloader(CACHE_URL);
        cacheDownloader.download(signlink.findcachedir());
        while (cacheDownloader.isDownloading()) {
            drawLoadingText(25, "Downloading Cache - "
                    + cacheDownloader.getPercent() + "%");
        }
        cacheDownloader.unZip(signlink.findcachedir());</code></pre>
<p>Not much to explain here, it checks if the directory for the cache exists, and if it doesn’t, it creates it.<br>
Congratulations, you have completed the shortest auto-cache downloading tutorial yet.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cachedownloader-explained/225027/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cachedownloader-explained/225027/1</link>
        <pubDate>Mon, 11 Aug 2008 18:41:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-225027-1</guid>
        <source url="https://forum.moparisthebest.com/t/cachedownloader-explained/225027.rss">CacheDownloader - Explained</source>
      </item>
  </channel>
</rss>
