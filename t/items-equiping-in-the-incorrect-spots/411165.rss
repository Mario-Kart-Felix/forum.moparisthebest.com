<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Items equiping in the incorrect spots</title>
    <link>https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165</link>
    <description>Source is Endura.  It has many 634+ items, but they all wield in the helm slot.  If anyone has a fix, then please share considering I&#39;m at a loss Right now.</description>
    
    <lastBuildDate>Fri, 16 Sep 2011 18:25:36 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Items equiping in the incorrect spots</title>
        <dc:creator><![CDATA[@imsuperman05 imsuperman05]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imsuperman05">@imsuperman05</a> wrote:</p>
          <blockquote>
              <p>[quote=“HcoJustin, post:10, topic:411165”][quote author=imsuperman05 link=topic=512433.msg3752866#msg3752866 date=1316193749]<br>
It’s not necessarily calling it every time it’s being worn.<br>
[/quote]</p>
<p>When you throw it in ‘wearItem’ it is[/quote]<br>
Then isn’t item.java doing basically the same thing?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165/11</link>
        <pubDate>Fri, 16 Sep 2011 18:25:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-411165-11</guid>
        <source url="https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165.rss">Items equiping in the incorrect spots</source>
      </item>
      <item>
        <title>Items equiping in the incorrect spots</title>
        <dc:creator><![CDATA[@HcoJustin HcoJustin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hcojustin">@HcoJustin</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="9" data-topic="411165">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/imsuperman05/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> imsuperman05:</div>
<blockquote>
<p>It’s not necessarily calling it every time it’s being worn.</p>
</blockquote>
</aside>
<p>When you throw it in ‘wearItem’ it is</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165/10</link>
        <pubDate>Fri, 16 Sep 2011 18:22:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-411165-10</guid>
        <source url="https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165.rss">Items equiping in the incorrect spots</source>
      </item>
      <item>
        <title>Items equiping in the incorrect spots</title>
        <dc:creator><![CDATA[@imsuperman05 imsuperman05]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imsuperman05">@imsuperman05</a> wrote:</p>
          <blockquote>
              <p>It’s not necessarily calling it every time it’s being worn.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165/9</link>
        <pubDate>Fri, 16 Sep 2011 17:22:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-411165-9</guid>
        <source url="https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165.rss">Items equiping in the incorrect spots</source>
      </item>
      <item>
        <title>Items equiping in the incorrect spots</title>
        <dc:creator><![CDATA[@HcoJustin HcoJustin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hcojustin">@HcoJustin</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="7" data-topic="411165">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/uncalled/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Uncalled:</div>
<blockquote>
<p>Imsuperman05 is right, best off doing that.</p>
</blockquote>
</aside>
<p>So you’re saying a large switch statement that gets called EVERY time an item is worn is better than matching by name or id? Str2own had the right idea, you’ll probably get errors if you just replace it though. Would be best to rewrite whatever system you have in place to match by name</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165/8</link>
        <pubDate>Fri, 16 Sep 2011 13:34:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-411165-8</guid>
        <source url="https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165.rss">Items equiping in the incorrect spots</source>
      </item>
      <item>
        <title>Items equiping in the incorrect spots</title>
        <dc:creator><![CDATA[@Uncalled Uncalled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/uncalled">@Uncalled</a> wrote:</p>
          <blockquote>
              <p>Imsuperman05 is right, best off doing that.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165/7</link>
        <pubDate>Fri, 16 Sep 2011 13:20:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-411165-7</guid>
        <source url="https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165.rss">Items equiping in the incorrect spots</source>
      </item>
      <item>
        <title>Items equiping in the incorrect spots</title>
        <dc:creator><![CDATA[@baymandernam baymandernam]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/baymandernam">@baymandernam</a> wrote:</p>
          <blockquote>
              <p>i can fix pretty easily</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165/6</link>
        <pubDate>Fri, 16 Sep 2011 13:09:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-411165-6</guid>
        <source url="https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165.rss">Items equiping in the incorrect spots</source>
      </item>
      <item>
        <title>Items equiping in the incorrect spots</title>
        <dc:creator><![CDATA[@str2own99 str2own99]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/str2own99">@str2own99</a> wrote:</p>
          <blockquote>
              <p>[quote=“imsuperman05, post:4, topic:411165”][quote author=str2own99 link=topic=512433.msg3719366#msg3719366 date=1313839965]<br>
replace item.java with this [code]package server.model.items;</p>
<p>import java.io.File;<br>
import java.io.FileInputStream;<br>
import java.io.IOException;<br>
import server.Config;<br>
import server.Server;</p>
<p>public class Item {</p>
<pre><code>public static boolean playerCape(int itemId) {
	String[] data = {
		"cloak", "Veteran cape", "Max cape", "Completionist cape", "Dungeoneering master cape", "cape", "Cape", "attractor", "Attractor", "Ava's", "Dungeoneering Cape", "Dungeoneering Cape(T)", "Ardounge Cloak",
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if(item.endsWith(data[i]) || item.contains(data[i])) {
			item1 = true;
		}
	}
	return item1;
}

public static boolean playerBoots(int itemId) {
	String[] data = {
		"Shoes", "shoes", "boots", "Boots", "Flippers", "flippers"
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if(item.endsWith(data[i]) || item.contains(data[i])) {
			item1 = true;
		}
	}
	return item1;
}

public static boolean playerGloves(int itemId) {
	String[] data = {
		"Gloves", "gloves", "glove", "Glove", "Vamb", "vamb", "gauntlets", "Gauntlets", "bracers", "Bracers", "Vambraces", "vambraces"
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if(item.endsWith(data[i]) || item.contains(data[i])) {
			item1 = true;
		}
	}
	return item1;
}

public static boolean playerShield(int itemId) {
	String[] data = {
		"kiteshield", "deflector", "book", "Kiteshield", "toktz-ket-xil", "Toktz-ket-xil", "shield", "Shield", "Kite", "kite", "Defender", "defender"
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if(item.endsWith(data[i]) || item.contains(data[i])) {
			item1 = true;
		}
	}
	return item1;
}

public static boolean playerAmulet(int itemId) {
	String[] data = {
		"amulet", "Amulet", "scarf", "Necklace", "necklace", "Pendant", "pendant", "Symbol", "symbol", "stole", "Stole"
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if(item.endsWith(data[i]) || item.contains(data[i])) {
			item1 = true;
		}
	}
	return item1;
}

public static boolean playerArrows(int itemId) {
	String[] data = {
		"Arrows", "arrows", "Arrow", "arrow", "Bolts", "bolts", "rack", "Rack", "Shots", "shot", "Shot", "shots",
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if(item.endsWith(data[i]) || item.contains(data[i])) {
			item1 = true;
		}
	}
	return item1;
}

public static boolean playerRings(int itemId) {
	String[] data = {
		"ring", "rings", "Ring", "Rings",
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if(item.endsWith(data[i]) || item.contains(data[i])) {
			item1 = true;
		}
	}
	return item1;
}

public static boolean playerHats(int itemId) {
	String[] data = {
		"boater", "Royal crown", "cowl", "peg", "coif", "helm", "bearhead",
		"Coif", "mask", "hat", "headband", "hood", "hood", "Veteran hood", "Max hood", "Completionist hood",
		"disguise", "cavalier", "full", "tiara", "wreath",
		"helmet", "Hat", "ears", "partyhat", "helm(t)",	
		"helm(g)", "beret", "facemask", "sallet", "Mask", "Dragon Mask", "dragon mask",
		"hat(g)", "hat(t)", "cap", "bandana", "Helm", "Mitre", "mitre",
		"Bomber cap", "headdress", "Top hat", "Royal crown",
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if(item.endsWith(data[i]) || item.contains(data[i])) {
			item1 = true;
		}
	}
	return item1;
}

public static boolean playerLegs(int itemId) {
	String[] data = {
		"tassets", "chaps", "bottoms", "gown", "trousers", "MarshBot",
		"platelegs", "robe", "plateskirt", "legs", "leggings", "Proselyte Tasset", "Proselyte tasset",
		"shorts", "Skirt", "skirt", "cuisse", "Pantaloons", "Trousers", "Lord Marshal Trousers", "Elite void knight top",
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if((item.endsWith(data[i]) || item.contains(data[i])) &amp;&amp; (!item.contains("top") &amp;&amp; (!item.contains("robe (g)") &amp;&amp; (!item.contains("robe (t)"))))) {
			item1 = true;
		}
	}
	return item1;
}

public static boolean playerBody(int itemId) {
	String[] data = {
		"body", "top", "Priest gown", "apron", "shirt", 
		"platebody", "robetop", "body(g)", "body(t)", "White platebody",
		"Wizard robe (g)", "Wizard robe (t)", "body", "brassard", "blouse", 
		"tunic", "leathertop", "Saradomin plate", "chainbody", "Top", "Lord Marshal Top", "Primal platebody",
		"hauberk", "Shirt", "torso", "chestplate", "jacket", "Vesta's chainbody", "chainbody", "Chainbody", "leather body", "Leather Body",
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if(item.endsWith(data[i]) || item.contains(data[i])) {
			item1 = true;
		}
	}
	return item1;
}

private static String[] fullbody = {
	"top", "chestplate", "shirt","platebody","Ahrims robetop", "White platebody",
	"Elite void knight top", "Karils leathertop","brassard","Robe top","robetop", "Vesta's chainbody",
	"platebody (t)","platebody (g)","chestplate", "Lord Marshal Top", "Primal platebody",
	"torso", "hauberk", "Dragon chainbody", "blouse", "jacket", "chainbody", "Chainbody", "leather body", "Leather Body",
};

private static String[] fullhat = {
	"med helm", "coif", "Dharok's helm", "Slayer helmet", "hood", "Initiate helm",
	"Coif","Helm of neitiznot","Armadyl helmet","Berserker helm", "Bearhead",
	"Archer helm", "Farseer helm", "Warrior helm", "Void", "Lumberjack hat", "Reindeer hat",
	"Larupia hat", "mask", "headdress", "Kyatt hat", "Bomber cap", "Dwarven helmet", "Dragon Mask", "3rd age mage hat", "Statius's Full Helm", "dragon mask", "Royal crown",
};

private static String[] fullmask = {
	"full helm", "Royal crown", "headdress", "mask", "Torva Fullhelm", "Verac's helm", "Guthan's helm", "Karil's coif", "mask", "Torag's helm", "sallet", "Saradomin helm", "Lunar helm", "Dragon Mask", "dragon mask",
};

public static boolean isFullBody(int itemId) {
	String weapon = getItemName(itemId);
	if (weapon == null)
		return false;
	for (int i = 0; i &lt; fullbody.length; i++) {
		if (weapon.endsWith(fullbody[i]) || weapon.contains(fullbody[i])) {
			return true;
		}
	}
	return false;
}

public static boolean isFullHelm(int itemId) {
	String weapon = getItemName(itemId);
		if (weapon == null)
			return false;
	for (int i = 0; i &lt; fullhat.length; i++) {
		if (weapon.endsWith(fullhat[i]) &amp;&amp; itemId != 2631 &amp;&amp; itemId != 11277 &amp;&amp; itemId != 11278 &amp;&amp; itemId != 15509 &amp;&amp; itemId != 15019 &amp;&amp; itemId != 16006 &amp;&amp; itemId != 15080 &amp;&amp; itemId != 4502) {
			return true;
		}
	}
	return false;
}

public static boolean isFullMask(int itemId) {
	String weapon = getItemName(itemId);
		if (weapon == null)
			return false;
	for (int i = 0; i &lt; fullmask.length; i++) {
		if (weapon.endsWith(fullmask[i]) &amp;&amp; itemId != 2631 &amp;&amp; itemId != 9925 &amp;&amp; itemId != 10728 &amp;&amp; itemId != 11277 &amp;&amp; itemId != 11278 &amp;&amp; itemId != 4502) {
			return true;
		}
	}
	return false;
}

public static String getItemName(int id) {
	for (int j = 0; j &lt; Server.itemHandler.ItemList.length; j++) {
		if (Server.itemHandler.ItemList[j] != null)
			if (Server.itemHandler.ItemList[j].itemId == id)
				return Server.itemHandler.ItemList[j].itemName;	
	}
	return null;
}


public static boolean[] itemStackable = new boolean[Config.ITEM_LIMIT];
public static boolean[] itemIsNote = new boolean[Config.ITEM_LIMIT];
public static int[] targetSlots = new int[Config.ITEM_LIMIT];
static {
	int counter = 0;
	int c;
	
	try {
		FileInputStream dataIn = new FileInputStream(new File("./Data/data/stackable.dat"));
		while ((c = dataIn.read()) != -1) {
			if (c == 0) {
				itemStackable[counter] = false;
                itemStackable[15015] = true;
                itemStackable[15016] = true;
				itemStackable[13883] = true; //morrigan throwing axe
				itemStackable[13879] = true; //morrigan javelin
</code></pre>
<p>itemStackable[13957] = true; //morrigan javelin<br>
itemStackable[18016] = true;<br>
itemStackable[12158] = true;<br>
itemStackable[12159] = true;<br>
itemStackable[12160] = true;<br>
itemStackable[12163] = true;<br>
itemStackable[12155] = true;<br>
} else {<br>
itemStackable[counter] = true;<br>
}<br>
counter++;<br>
}<br>
dataIn.close();<br>
} catch (IOException e) {<br>
System.out.println(“Critical error while loading stackabledata! Trace:”);<br>
e.printStackTrace();<br>
}<br>
itemStackable[15016] = true;//morrigan</p>
<pre><code>	counter = 0;
	
	try {
		FileInputStream dataIn = new FileInputStream(new File("./Data/data/notes.dat"));
		while ((c = dataIn.read()) != -1) {
			if (c == 0) {
				itemIsNote[counter] = true;
			} else {
				itemIsNote[counter] = false;
			}
			counter++;
		}
		dataIn.close();
	} catch (IOException e) {
		System.out.println("Critical error while loading notedata! Trace:");
		e.printStackTrace();
	}
	
	counter = 0;
	try {
		FileInputStream dataIn = new FileInputStream(new File("./Data/data/equipment.dat"));
		while ((c = dataIn.read()) != -1) {
			targetSlots[counter++] = c;
		}
		dataIn.close();
	} catch (IOException e) {
		System.out.println("Critical error while loading stackabledata! Trace:");
		e.printStackTrace();
	}
    itemStackable[15015] = true;//morri
	
	counter = 0;
	
	try {
		FileInputStream dataIn = new FileInputStream(new File("./Data/data/notes.dat"));
		while ((c = dataIn.read()) != -1) {
			if (c == 0) {
				itemIsNote[counter] = true;
			} else {
				itemIsNote[counter] = false;
			}
			counter++;
		}
		dataIn.close();
	} catch (IOException e) {
		System.out.println("Critical error while loading notedata! Trace:");
		e.printStackTrace();
	}
	
	counter = 0;
	try {
		FileInputStream dataIn = new FileInputStream(new File("./Data/data/equipment.dat"));
		while ((c = dataIn.read()) != -1) {
			targetSlots[counter++] = c;
		}
		dataIn.close();
	} catch (IOException e) {
		System.out.println("Critical error while loading stackabledata! Trace:");
		e.printStackTrace();
	}
    itemStackable[15243] = true;//hc shot
	
	counter = 0;
	
	try {
		FileInputStream dataIn = new FileInputStream(new File("./Data/data/notes.dat"));
		while ((c = dataIn.read()) != -1) {
			if (c == 0) {
				itemIsNote[counter] = true;
			} else {
				itemIsNote[counter] = false;
			}
			counter++;
		}
		dataIn.close();
	} catch (IOException e) {
		System.out.println("Critical error while loading notedata! Trace:");
		e.printStackTrace();
	}
	
	counter = 0;
	try {
		FileInputStream dataIn = new FileInputStream(new File("./Data/data/equipment.dat"));
		while ((c = dataIn.read()) != -1) {
			targetSlots[counter++] = c;
		}
		dataIn.close();
	} catch (IOException e) {
		System.out.println("Critical error while loading notedata! Trace:");
		e.printStackTrace();
	}
}
</code></pre>
<p>}[/code]<br>
in item assistant.java replace <code>public String itemType(int item) {</code> with this</p>
<p><code>public String itemType(int item) {
		if(Item.playerCape(item)) {
			return "cape";
		}
		if(Item.playerBoots(item)) {
			  return "boots";
		}
		if(Item.playerGloves(item)) {
			  return "gloves";
		}
		if(Item.playerShield(item)) {
			return "shield";
		}
		if(Item.playerAmulet(item)) {
			return "amulet";
		}
		if(Item.playerArrows(item)) {
			return "arrows";
		}
		if(Item.playerRings(item)) {
			return "ring";
		}
		if(Item.playerHats(item)) {
			return "hat";
		}
		if(Item.playerLegs(item)) {
			return "legs";
		}
		if(Item.playerBody(item)) {
			return "body";
		}
		return "weapon";
	}</code><br>
see if u get any errors<br>
[/quote]<br>
WHAT?? NO.</p>
<p>OT: If it’s PI, go into ItemAssisstant.java and under the wearItem method add your item like</p>
<p><code>case itemID:
targetSlot=#;</code>[/quote]<br>
whats the point in that if its all can be handled through item.java :o</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165/5</link>
        <pubDate>Sat, 20 Aug 2011 21:06:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-411165-5</guid>
        <source url="https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165.rss">Items equiping in the incorrect spots</source>
      </item>
      <item>
        <title>Items equiping in the incorrect spots</title>
        <dc:creator><![CDATA[@imsuperman05 imsuperman05]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imsuperman05">@imsuperman05</a> wrote:</p>
          <blockquote>
              <p>[quote=“str2own99, post:3, topic:411165”]replace item.java with this [code]package server.model.items;</p>
<p>import java.io.File;<br>
import java.io.FileInputStream;<br>
import java.io.IOException;<br>
import server.Config;<br>
import server.Server;</p>
<p>public class Item {</p>
<pre><code>public static boolean playerCape(int itemId) {
	String[] data = {
		"cloak", "Veteran cape", "Max cape", "Completionist cape", "Dungeoneering master cape", "cape", "Cape", "attractor", "Attractor", "Ava's", "Dungeoneering Cape", "Dungeoneering Cape(T)", "Ardounge Cloak",
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if(item.endsWith(data[i]) || item.contains(data[i])) {
			item1 = true;
		}
	}
	return item1;
}

public static boolean playerBoots(int itemId) {
	String[] data = {
		"Shoes", "shoes", "boots", "Boots", "Flippers", "flippers"
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if(item.endsWith(data[i]) || item.contains(data[i])) {
			item1 = true;
		}
	}
	return item1;
}

public static boolean playerGloves(int itemId) {
	String[] data = {
		"Gloves", "gloves", "glove", "Glove", "Vamb", "vamb", "gauntlets", "Gauntlets", "bracers", "Bracers", "Vambraces", "vambraces"
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if(item.endsWith(data[i]) || item.contains(data[i])) {
			item1 = true;
		}
	}
	return item1;
}

public static boolean playerShield(int itemId) {
	String[] data = {
		"kiteshield", "deflector", "book", "Kiteshield", "toktz-ket-xil", "Toktz-ket-xil", "shield", "Shield", "Kite", "kite", "Defender", "defender"
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if(item.endsWith(data[i]) || item.contains(data[i])) {
			item1 = true;
		}
	}
	return item1;
}

public static boolean playerAmulet(int itemId) {
	String[] data = {
		"amulet", "Amulet", "scarf", "Necklace", "necklace", "Pendant", "pendant", "Symbol", "symbol", "stole", "Stole"
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if(item.endsWith(data[i]) || item.contains(data[i])) {
			item1 = true;
		}
	}
	return item1;
}

public static boolean playerArrows(int itemId) {
	String[] data = {
		"Arrows", "arrows", "Arrow", "arrow", "Bolts", "bolts", "rack", "Rack", "Shots", "shot", "Shot", "shots",
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if(item.endsWith(data[i]) || item.contains(data[i])) {
			item1 = true;
		}
	}
	return item1;
}

public static boolean playerRings(int itemId) {
	String[] data = {
		"ring", "rings", "Ring", "Rings",
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if(item.endsWith(data[i]) || item.contains(data[i])) {
			item1 = true;
		}
	}
	return item1;
}

public static boolean playerHats(int itemId) {
	String[] data = {
		"boater", "Royal crown", "cowl", "peg", "coif", "helm", "bearhead",
		"Coif", "mask", "hat", "headband", "hood", "hood", "Veteran hood", "Max hood", "Completionist hood",
		"disguise", "cavalier", "full", "tiara", "wreath",
		"helmet", "Hat", "ears", "partyhat", "helm(t)",	
		"helm(g)", "beret", "facemask", "sallet", "Mask", "Dragon Mask", "dragon mask",
		"hat(g)", "hat(t)", "cap", "bandana", "Helm", "Mitre", "mitre",
		"Bomber cap", "headdress", "Top hat", "Royal crown",
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if(item.endsWith(data[i]) || item.contains(data[i])) {
			item1 = true;
		}
	}
	return item1;
}

public static boolean playerLegs(int itemId) {
	String[] data = {
		"tassets", "chaps", "bottoms", "gown", "trousers", "MarshBot",
		"platelegs", "robe", "plateskirt", "legs", "leggings", "Proselyte Tasset", "Proselyte tasset",
		"shorts", "Skirt", "skirt", "cuisse", "Pantaloons", "Trousers", "Lord Marshal Trousers", "Elite void knight top",
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if((item.endsWith(data[i]) || item.contains(data[i])) &amp;&amp; (!item.contains("top") &amp;&amp; (!item.contains("robe (g)") &amp;&amp; (!item.contains("robe (t)"))))) {
			item1 = true;
		}
	}
	return item1;
}

public static boolean playerBody(int itemId) {
	String[] data = {
		"body", "top", "Priest gown", "apron", "shirt", 
		"platebody", "robetop", "body(g)", "body(t)", "White platebody",
		"Wizard robe (g)", "Wizard robe (t)", "body", "brassard", "blouse", 
		"tunic", "leathertop", "Saradomin plate", "chainbody", "Top", "Lord Marshal Top", "Primal platebody",
		"hauberk", "Shirt", "torso", "chestplate", "jacket", "Vesta's chainbody", "chainbody", "Chainbody", "leather body", "Leather Body",
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if(item.endsWith(data[i]) || item.contains(data[i])) {
			item1 = true;
		}
	}
	return item1;
}

private static String[] fullbody = {
	"top", "chestplate", "shirt","platebody","Ahrims robetop", "White platebody",
	"Elite void knight top", "Karils leathertop","brassard","Robe top","robetop", "Vesta's chainbody",
	"platebody (t)","platebody (g)","chestplate", "Lord Marshal Top", "Primal platebody",
	"torso", "hauberk", "Dragon chainbody", "blouse", "jacket", "chainbody", "Chainbody", "leather body", "Leather Body",
};

private static String[] fullhat = {
	"med helm", "coif", "Dharok's helm", "Slayer helmet", "hood", "Initiate helm",
	"Coif","Helm of neitiznot","Armadyl helmet","Berserker helm", "Bearhead",
	"Archer helm", "Farseer helm", "Warrior helm", "Void", "Lumberjack hat", "Reindeer hat",
	"Larupia hat", "mask", "headdress", "Kyatt hat", "Bomber cap", "Dwarven helmet", "Dragon Mask", "3rd age mage hat", "Statius's Full Helm", "dragon mask", "Royal crown",
};

private static String[] fullmask = {
	"full helm", "Royal crown", "headdress", "mask", "Torva Fullhelm", "Verac's helm", "Guthan's helm", "Karil's coif", "mask", "Torag's helm", "sallet", "Saradomin helm", "Lunar helm", "Dragon Mask", "dragon mask",
};

public static boolean isFullBody(int itemId) {
	String weapon = getItemName(itemId);
	if (weapon == null)
		return false;
	for (int i = 0; i &lt; fullbody.length; i++) {
		if (weapon.endsWith(fullbody[i]) || weapon.contains(fullbody[i])) {
			return true;
		}
	}
	return false;
}

public static boolean isFullHelm(int itemId) {
	String weapon = getItemName(itemId);
		if (weapon == null)
			return false;
	for (int i = 0; i &lt; fullhat.length; i++) {
		if (weapon.endsWith(fullhat[i]) &amp;&amp; itemId != 2631 &amp;&amp; itemId != 11277 &amp;&amp; itemId != 11278 &amp;&amp; itemId != 15509 &amp;&amp; itemId != 15019 &amp;&amp; itemId != 16006 &amp;&amp; itemId != 15080 &amp;&amp; itemId != 4502) {
			return true;
		}
	}
	return false;
}

public static boolean isFullMask(int itemId) {
	String weapon = getItemName(itemId);
		if (weapon == null)
			return false;
	for (int i = 0; i &lt; fullmask.length; i++) {
		if (weapon.endsWith(fullmask[i]) &amp;&amp; itemId != 2631 &amp;&amp; itemId != 9925 &amp;&amp; itemId != 10728 &amp;&amp; itemId != 11277 &amp;&amp; itemId != 11278 &amp;&amp; itemId != 4502) {
			return true;
		}
	}
	return false;
}

public static String getItemName(int id) {
	for (int j = 0; j &lt; Server.itemHandler.ItemList.length; j++) {
		if (Server.itemHandler.ItemList[j] != null)
			if (Server.itemHandler.ItemList[j].itemId == id)
				return Server.itemHandler.ItemList[j].itemName;	
	}
	return null;
}


public static boolean[] itemStackable = new boolean[Config.ITEM_LIMIT];
public static boolean[] itemIsNote = new boolean[Config.ITEM_LIMIT];
public static int[] targetSlots = new int[Config.ITEM_LIMIT];
static {
	int counter = 0;
	int c;
	
	try {
		FileInputStream dataIn = new FileInputStream(new File("./Data/data/stackable.dat"));
		while ((c = dataIn.read()) != -1) {
			if (c == 0) {
				itemStackable[counter] = false;
                itemStackable[15015] = true;
                itemStackable[15016] = true;
				itemStackable[13883] = true; //morrigan throwing axe
				itemStackable[13879] = true; //morrigan javelin
</code></pre>
<p>itemStackable[13957] = true; //morrigan javelin<br>
itemStackable[18016] = true;<br>
itemStackable[12158] = true;<br>
itemStackable[12159] = true;<br>
itemStackable[12160] = true;<br>
itemStackable[12163] = true;<br>
itemStackable[12155] = true;<br>
} else {<br>
itemStackable[counter] = true;<br>
}<br>
counter++;<br>
}<br>
dataIn.close();<br>
} catch (IOException e) {<br>
System.out.println(“Critical error while loading stackabledata! Trace:”);<br>
e.printStackTrace();<br>
}<br>
itemStackable[15016] = true;//morrigan</p>
<pre><code>	counter = 0;
	
	try {
		FileInputStream dataIn = new FileInputStream(new File("./Data/data/notes.dat"));
		while ((c = dataIn.read()) != -1) {
			if (c == 0) {
				itemIsNote[counter] = true;
			} else {
				itemIsNote[counter] = false;
			}
			counter++;
		}
		dataIn.close();
	} catch (IOException e) {
		System.out.println("Critical error while loading notedata! Trace:");
		e.printStackTrace();
	}
	
	counter = 0;
	try {
		FileInputStream dataIn = new FileInputStream(new File("./Data/data/equipment.dat"));
		while ((c = dataIn.read()) != -1) {
			targetSlots[counter++] = c;
		}
		dataIn.close();
	} catch (IOException e) {
		System.out.println("Critical error while loading stackabledata! Trace:");
		e.printStackTrace();
	}
    itemStackable[15015] = true;//morri
	
	counter = 0;
	
	try {
		FileInputStream dataIn = new FileInputStream(new File("./Data/data/notes.dat"));
		while ((c = dataIn.read()) != -1) {
			if (c == 0) {
				itemIsNote[counter] = true;
			} else {
				itemIsNote[counter] = false;
			}
			counter++;
		}
		dataIn.close();
	} catch (IOException e) {
		System.out.println("Critical error while loading notedata! Trace:");
		e.printStackTrace();
	}
	
	counter = 0;
	try {
		FileInputStream dataIn = new FileInputStream(new File("./Data/data/equipment.dat"));
		while ((c = dataIn.read()) != -1) {
			targetSlots[counter++] = c;
		}
		dataIn.close();
	} catch (IOException e) {
		System.out.println("Critical error while loading stackabledata! Trace:");
		e.printStackTrace();
	}
    itemStackable[15243] = true;//hc shot
	
	counter = 0;
	
	try {
		FileInputStream dataIn = new FileInputStream(new File("./Data/data/notes.dat"));
		while ((c = dataIn.read()) != -1) {
			if (c == 0) {
				itemIsNote[counter] = true;
			} else {
				itemIsNote[counter] = false;
			}
			counter++;
		}
		dataIn.close();
	} catch (IOException e) {
		System.out.println("Critical error while loading notedata! Trace:");
		e.printStackTrace();
	}
	
	counter = 0;
	try {
		FileInputStream dataIn = new FileInputStream(new File("./Data/data/equipment.dat"));
		while ((c = dataIn.read()) != -1) {
			targetSlots[counter++] = c;
		}
		dataIn.close();
	} catch (IOException e) {
		System.out.println("Critical error while loading notedata! Trace:");
		e.printStackTrace();
	}
}
</code></pre>
<p>}[/code]<br>
in item assistant.java replace <code>public String itemType(int item) {</code> with this</p>
<p><code>public String itemType(int item) {
		if(Item.playerCape(item)) {
			return "cape";
		}
		if(Item.playerBoots(item)) {
			  return "boots";
		}
		if(Item.playerGloves(item)) {
			  return "gloves";
		}
		if(Item.playerShield(item)) {
			return "shield";
		}
		if(Item.playerAmulet(item)) {
			return "amulet";
		}
		if(Item.playerArrows(item)) {
			return "arrows";
		}
		if(Item.playerRings(item)) {
			return "ring";
		}
		if(Item.playerHats(item)) {
			return "hat";
		}
		if(Item.playerLegs(item)) {
			return "legs";
		}
		if(Item.playerBody(item)) {
			return "body";
		}
		return "weapon";
	}</code><br>
see if u get any errors[/quote]<br>
WHAT?? NO.</p>
<p>OT: If it’s PI, go into ItemAssisstant.java and under the wearItem method add your item like</p>
<p><code>case itemID:
targetSlot=#;</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165/4</link>
        <pubDate>Sat, 20 Aug 2011 14:00:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-411165-4</guid>
        <source url="https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165.rss">Items equiping in the incorrect spots</source>
      </item>
      <item>
        <title>Items equiping in the incorrect spots</title>
        <dc:creator><![CDATA[@str2own99 str2own99]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/str2own99">@str2own99</a> wrote:</p>
          <blockquote>
              <p>replace item.java with this [code]package server.model.items;</p>
<p>import java.io.File;<br>
import java.io.FileInputStream;<br>
import java.io.IOException;<br>
import server.Config;<br>
import server.Server;</p>
<p>public class Item {</p>
<pre><code>public static boolean playerCape(int itemId) {
	String[] data = {
		"cloak", "Veteran cape", "Max cape", "Completionist cape", "Dungeoneering master cape", "cape", "Cape", "attractor", "Attractor", "Ava's", "Dungeoneering Cape", "Dungeoneering Cape(T)", "Ardounge Cloak",
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if(item.endsWith(data[i]) || item.contains(data[i])) {
			item1 = true;
		}
	}
	return item1;
}

public static boolean playerBoots(int itemId) {
	String[] data = {
		"Shoes", "shoes", "boots", "Boots", "Flippers", "flippers"
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if(item.endsWith(data[i]) || item.contains(data[i])) {
			item1 = true;
		}
	}
	return item1;
}

public static boolean playerGloves(int itemId) {
	String[] data = {
		"Gloves", "gloves", "glove", "Glove", "Vamb", "vamb", "gauntlets", "Gauntlets", "bracers", "Bracers", "Vambraces", "vambraces"
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if(item.endsWith(data[i]) || item.contains(data[i])) {
			item1 = true;
		}
	}
	return item1;
}

public static boolean playerShield(int itemId) {
	String[] data = {
		"kiteshield", "deflector", "book", "Kiteshield", "toktz-ket-xil", "Toktz-ket-xil", "shield", "Shield", "Kite", "kite", "Defender", "defender"
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if(item.endsWith(data[i]) || item.contains(data[i])) {
			item1 = true;
		}
	}
	return item1;
}

public static boolean playerAmulet(int itemId) {
	String[] data = {
		"amulet", "Amulet", "scarf", "Necklace", "necklace", "Pendant", "pendant", "Symbol", "symbol", "stole", "Stole"
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if(item.endsWith(data[i]) || item.contains(data[i])) {
			item1 = true;
		}
	}
	return item1;
}

public static boolean playerArrows(int itemId) {
	String[] data = {
		"Arrows", "arrows", "Arrow", "arrow", "Bolts", "bolts", "rack", "Rack", "Shots", "shot", "Shot", "shots",
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if(item.endsWith(data[i]) || item.contains(data[i])) {
			item1 = true;
		}
	}
	return item1;
}

public static boolean playerRings(int itemId) {
	String[] data = {
		"ring", "rings", "Ring", "Rings",
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if(item.endsWith(data[i]) || item.contains(data[i])) {
			item1 = true;
		}
	}
	return item1;
}

public static boolean playerHats(int itemId) {
	String[] data = {
		"boater", "Royal crown", "cowl", "peg", "coif", "helm", "bearhead",
		"Coif", "mask", "hat", "headband", "hood", "hood", "Veteran hood", "Max hood", "Completionist hood",
		"disguise", "cavalier", "full", "tiara", "wreath",
		"helmet", "Hat", "ears", "partyhat", "helm(t)",	
		"helm(g)", "beret", "facemask", "sallet", "Mask", "Dragon Mask", "dragon mask",
		"hat(g)", "hat(t)", "cap", "bandana", "Helm", "Mitre", "mitre",
		"Bomber cap", "headdress", "Top hat", "Royal crown",
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if(item.endsWith(data[i]) || item.contains(data[i])) {
			item1 = true;
		}
	}
	return item1;
}

public static boolean playerLegs(int itemId) {
	String[] data = {
		"tassets", "chaps", "bottoms", "gown", "trousers", "MarshBot",
		"platelegs", "robe", "plateskirt", "legs", "leggings", "Proselyte Tasset", "Proselyte tasset",
		"shorts", "Skirt", "skirt", "cuisse", "Pantaloons", "Trousers", "Lord Marshal Trousers", "Elite void knight top",
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if((item.endsWith(data[i]) || item.contains(data[i])) &amp;&amp; (!item.contains("top") &amp;&amp; (!item.contains("robe (g)") &amp;&amp; (!item.contains("robe (t)"))))) {
			item1 = true;
		}
	}
	return item1;
}

public static boolean playerBody(int itemId) {
	String[] data = {
		"body", "top", "Priest gown", "apron", "shirt", 
		"platebody", "robetop", "body(g)", "body(t)", "White platebody",
		"Wizard robe (g)", "Wizard robe (t)", "body", "brassard", "blouse", 
		"tunic", "leathertop", "Saradomin plate", "chainbody", "Top", "Lord Marshal Top", "Primal platebody",
		"hauberk", "Shirt", "torso", "chestplate", "jacket", "Vesta's chainbody", "chainbody", "Chainbody", "leather body", "Leather Body",
	};
	String item = getItemName(itemId);
	if (item == null) {
		return false;
	}
	boolean item1 = false;
	for(int i = 0; i &lt; data.length; i++ ) {
		if(item.endsWith(data[i]) || item.contains(data[i])) {
			item1 = true;
		}
	}
	return item1;
}

private static String[] fullbody = {
	"top", "chestplate", "shirt","platebody","Ahrims robetop", "White platebody",
	"Elite void knight top", "Karils leathertop","brassard","Robe top","robetop", "Vesta's chainbody",
	"platebody (t)","platebody (g)","chestplate", "Lord Marshal Top", "Primal platebody",
	"torso", "hauberk", "Dragon chainbody", "blouse", "jacket", "chainbody", "Chainbody", "leather body", "Leather Body",
};

private static String[] fullhat = {
	"med helm", "coif", "Dharok's helm", "Slayer helmet", "hood", "Initiate helm",
	"Coif","Helm of neitiznot","Armadyl helmet","Berserker helm", "Bearhead",
	"Archer helm", "Farseer helm", "Warrior helm", "Void", "Lumberjack hat", "Reindeer hat",
	"Larupia hat", "mask", "headdress", "Kyatt hat", "Bomber cap", "Dwarven helmet", "Dragon Mask", "3rd age mage hat", "Statius's Full Helm", "dragon mask", "Royal crown",
};

private static String[] fullmask = {
	"full helm", "Royal crown", "headdress", "mask", "Torva Fullhelm", "Verac's helm", "Guthan's helm", "Karil's coif", "mask", "Torag's helm", "sallet", "Saradomin helm", "Lunar helm", "Dragon Mask", "dragon mask",
};

public static boolean isFullBody(int itemId) {
	String weapon = getItemName(itemId);
	if (weapon == null)
		return false;
	for (int i = 0; i &lt; fullbody.length; i++) {
		if (weapon.endsWith(fullbody[i]) || weapon.contains(fullbody[i])) {
			return true;
		}
	}
	return false;
}

public static boolean isFullHelm(int itemId) {
	String weapon = getItemName(itemId);
		if (weapon == null)
			return false;
	for (int i = 0; i &lt; fullhat.length; i++) {
		if (weapon.endsWith(fullhat[i]) &amp;&amp; itemId != 2631 &amp;&amp; itemId != 11277 &amp;&amp; itemId != 11278 &amp;&amp; itemId != 15509 &amp;&amp; itemId != 15019 &amp;&amp; itemId != 16006 &amp;&amp; itemId != 15080 &amp;&amp; itemId != 4502) {
			return true;
		}
	}
	return false;
}

public static boolean isFullMask(int itemId) {
	String weapon = getItemName(itemId);
		if (weapon == null)
			return false;
	for (int i = 0; i &lt; fullmask.length; i++) {
		if (weapon.endsWith(fullmask[i]) &amp;&amp; itemId != 2631 &amp;&amp; itemId != 9925 &amp;&amp; itemId != 10728 &amp;&amp; itemId != 11277 &amp;&amp; itemId != 11278 &amp;&amp; itemId != 4502) {
			return true;
		}
	}
	return false;
}

public static String getItemName(int id) {
	for (int j = 0; j &lt; Server.itemHandler.ItemList.length; j++) {
		if (Server.itemHandler.ItemList[j] != null)
			if (Server.itemHandler.ItemList[j].itemId == id)
				return Server.itemHandler.ItemList[j].itemName;	
	}
	return null;
}


public static boolean[] itemStackable = new boolean[Config.ITEM_LIMIT];
public static boolean[] itemIsNote = new boolean[Config.ITEM_LIMIT];
public static int[] targetSlots = new int[Config.ITEM_LIMIT];
static {
	int counter = 0;
	int c;
	
	try {
		FileInputStream dataIn = new FileInputStream(new File("./Data/data/stackable.dat"));
		while ((c = dataIn.read()) != -1) {
			if (c == 0) {
				itemStackable[counter] = false;
                itemStackable[15015] = true;
                itemStackable[15016] = true;
				itemStackable[13883] = true; //morrigan throwing axe
				itemStackable[13879] = true; //morrigan javelin
</code></pre>
<p>itemStackable[13957] = true; //morrigan javelin<br>
itemStackable[18016] = true;<br>
itemStackable[12158] = true;<br>
itemStackable[12159] = true;<br>
itemStackable[12160] = true;<br>
itemStackable[12163] = true;<br>
itemStackable[12155] = true;<br>
} else {<br>
itemStackable[counter] = true;<br>
}<br>
counter++;<br>
}<br>
dataIn.close();<br>
} catch (IOException e) {<br>
System.out.println(“Critical error while loading stackabledata! Trace:”);<br>
e.printStackTrace();<br>
}<br>
itemStackable[15016] = true;//morrigan</p>
<pre><code>	counter = 0;
	
	try {
		FileInputStream dataIn = new FileInputStream(new File("./Data/data/notes.dat"));
		while ((c = dataIn.read()) != -1) {
			if (c == 0) {
				itemIsNote[counter] = true;
			} else {
				itemIsNote[counter] = false;
			}
			counter++;
		}
		dataIn.close();
	} catch (IOException e) {
		System.out.println("Critical error while loading notedata! Trace:");
		e.printStackTrace();
	}
	
	counter = 0;
	try {
		FileInputStream dataIn = new FileInputStream(new File("./Data/data/equipment.dat"));
		while ((c = dataIn.read()) != -1) {
			targetSlots[counter++] = c;
		}
		dataIn.close();
	} catch (IOException e) {
		System.out.println("Critical error while loading stackabledata! Trace:");
		e.printStackTrace();
	}
    itemStackable[15015] = true;//morri
	
	counter = 0;
	
	try {
		FileInputStream dataIn = new FileInputStream(new File("./Data/data/notes.dat"));
		while ((c = dataIn.read()) != -1) {
			if (c == 0) {
				itemIsNote[counter] = true;
			} else {
				itemIsNote[counter] = false;
			}
			counter++;
		}
		dataIn.close();
	} catch (IOException e) {
		System.out.println("Critical error while loading notedata! Trace:");
		e.printStackTrace();
	}
	
	counter = 0;
	try {
		FileInputStream dataIn = new FileInputStream(new File("./Data/data/equipment.dat"));
		while ((c = dataIn.read()) != -1) {
			targetSlots[counter++] = c;
		}
		dataIn.close();
	} catch (IOException e) {
		System.out.println("Critical error while loading stackabledata! Trace:");
		e.printStackTrace();
	}
    itemStackable[15243] = true;//hc shot
	
	counter = 0;
	
	try {
		FileInputStream dataIn = new FileInputStream(new File("./Data/data/notes.dat"));
		while ((c = dataIn.read()) != -1) {
			if (c == 0) {
				itemIsNote[counter] = true;
			} else {
				itemIsNote[counter] = false;
			}
			counter++;
		}
		dataIn.close();
	} catch (IOException e) {
		System.out.println("Critical error while loading notedata! Trace:");
		e.printStackTrace();
	}
	
	counter = 0;
	try {
		FileInputStream dataIn = new FileInputStream(new File("./Data/data/equipment.dat"));
		while ((c = dataIn.read()) != -1) {
			targetSlots[counter++] = c;
		}
		dataIn.close();
	} catch (IOException e) {
		System.out.println("Critical error while loading notedata! Trace:");
		e.printStackTrace();
	}
}
</code></pre>
<p>}[/code]<br>
in item assistant.java replace <code>public String itemType(int item) {</code> with this</p>
<p><code>public String itemType(int item) {
		if(Item.playerCape(item)) {
			return "cape";
		}
		if(Item.playerBoots(item)) {
			  return "boots";
		}
		if(Item.playerGloves(item)) {
			  return "gloves";
		}
		if(Item.playerShield(item)) {
			return "shield";
		}
		if(Item.playerAmulet(item)) {
			return "amulet";
		}
		if(Item.playerArrows(item)) {
			return "arrows";
		}
		if(Item.playerRings(item)) {
			return "ring";
		}
		if(Item.playerHats(item)) {
			return "hat";
		}
		if(Item.playerLegs(item)) {
			return "legs";
		}
		if(Item.playerBody(item)) {
			return "body";
		}
		return "weapon";
	}</code><br>
see if u get any errors</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165/3</link>
        <pubDate>Sat, 20 Aug 2011 11:32:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-411165-3</guid>
        <source url="https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165.rss">Items equiping in the incorrect spots</source>
      </item>
      <item>
        <title>Items equiping in the incorrect spots</title>
        <dc:creator><![CDATA[@demps2k9 demps2k9]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/demps2k9">@demps2k9</a> wrote:</p>
          <blockquote>
              <p>You will find it most likely in your ItemHandler.java</p>
<p>There’s 2 ways it could be added. Either through item id or through a specific part of the item name such as helmet or shield.<br>
Most servers have it through the item id though.</p>
<p>Search an item id that equips in the correct slot and try to find it that way. If not just search equip or equipslot.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165/2</link>
        <pubDate>Sat, 20 Aug 2011 10:35:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-411165-2</guid>
        <source url="https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165.rss">Items equiping in the incorrect spots</source>
      </item>
      <item>
        <title>Items equiping in the incorrect spots</title>
        <dc:creator><![CDATA[@JavaTC JavaTC]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/javatc">@JavaTC</a> wrote:</p>
          <blockquote>
              <p>Source is Endura.  It has many 634+ items, but they all wield in the helm slot.  If anyone has a fix, then please share considering I’m at a loss Right now.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165/1</link>
        <pubDate>Sat, 20 Aug 2011 10:09:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-411165-1</guid>
        <source url="https://forum.moparisthebest.com/t/items-equiping-in-the-incorrect-spots/411165.rss">Items equiping in the incorrect spots</source>
      </item>
  </channel>
</rss>
