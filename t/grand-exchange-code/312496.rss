<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Grand exchange [code]</title>
    <link>https://forum.moparisthebest.com/t/grand-exchange-code/312496</link>
    <description>[size=15pt]DIFFICULTY: 1/10[/size]

[s]really, all you need is to copy and paste rofl[/s]

[code]import java.util.List;
import java.util.ArrayList;
import (server name no brackets).players.Player;
import servername.players.items.PlayerItems;
import servername.util.Misc;
import servername.Server;
import servername.Engine;
import servername.world.geList;

public class GrandExchange {

	public static List&lt;Offer&gt; offerList = new ArrayList&lt;Offer&gt;(2000);
		
	public Player p;
	 
	public int itemId = -1;
	
	public int minPrice = 0;
	public int basicPrice = 0;
	public int maxPrice = 0;
	
	public int itemPrice = 0;
	public int itemAmount = 0;
	
	public int offerType = -1;
	
	public PlayerItems PlayerItems = new PlayerItems();
	
	public static int i = -1;
	
	
	public GrandExchange(Player p) {
        this.p = p;
    }
	
	public void openMainInterface() {
		p.frames.setConfig2(p, 563, 4194304);
		p.frames.setConfig(p, 1112, -1);
		p.frames.setConfig(p, 1113, -1);
		p.frames.setConfig(p, 1109, -1);
		p.frames.setConfig(p, 1110, 0);
		p.frames.setConfig(p, 1111, 1);
		p.frames.showInterface(p, 105);
		p.frames.setItems(p, -1, -1327, 93, new int[] {}, new int[] {});
		p.frames.restoreTabs(p);
		p.frames.restoreInventory(p);
		p.frames.setInterfaceConfig(p, 107, 0, true);
		p.frames.setInterfaceConfig(p, 105, 0, false);
		p.frames.setAccessMask(p, 6, 0, 105, -1, -1);
			}

	public void handleButtons(int buttonId) {
		switch(buttonId) {
			case 30:
				setBuySetup(0);
			break;
			case 31:
				setSellSetup(0);
			break;
			case 46:
				setBuySetup(1);
			break;
			case 47:
				setSellSetup(1);
			break;
			case 62:
			    setBuySetup(2);
			    break;
			case 63:
			    setSellSetup(2);
			    break;
			case 81:
			    setBuySetup(3);
			    break;
			case 82:
			    setSellSetup(3);
			    break;
			case 100:
			    setBuySetup(4);
			    break;
			case 101:
			    setSellSetup(4);
			    break;
			case 119:
			    setBuySetup(5);
			    break;
			case 120:
			    setSellSetup(5);
			    break;
			case 127:
				openMainInterface();
			break;
			case 157:
			    if(itemAmount != 1) {
				itemAmount--;
			    }
			    p.frames.setConfig(p, 1109, itemId);	
			    p.frames.setConfig(p, 1110, itemAmount);
			    break;
			case 159:
			    if(itemAmount &lt; 2147483647) {
				itemAmount++;
			    }
			    p.frames.setConfig(p, 1109, itemId);	
			    p.frames.setConfig(p, 1110, itemAmount);
			    break;
			case 162:
			    if(itemAmount &lt; 2147483647) {
				itemAmount++;
			    }
			    if(offerType == 0) {
				itemAmount = 1;
			    }
			    p.frames.setConfig(p, 1109, itemId);	
			    p.frames.setConfig(p, 1110, itemAmount);
			    break;
			case 164:
			    if(itemAmount &lt; 2147483637) {
				itemAmount += 10;
			    }
			    if(offerType == 0) {
				itemAmount = 10;
			    }
			    p.frames.setConfig(p, 1109, itemId);	
			    p.frames.setConfig(p, 1110, itemAmount);
			    break;
			case 166:
			    if(itemAmount &lt; 2147483547) {
				itemAmount += 100;
			    }
			    if(offerType == 0) {
				itemAmount = 100;
			    }
			    p.frames.setConfig(p, 1109, itemId);	
			    p.frames.setConfig(p, 1110, itemAmount);
			    break;
			case 168:
			    if(itemAmount &lt; 2147482647) {
				itemAmount += 1000;
			    }
			    if(offerType == 0) {
				itemAmount = PlayerItems.invItemCount(p, itemId);
			    }
			    p.frames.setConfig(p, 1109, itemId);	
			    p.frames.setConfig(p, 1110, itemAmount);
			    break;
			case 177:
				setItemPrice(minPrice);
			break;
			case 183:
				setItemPrice(getitemPrice(maxPrice));
			break;
			case 180:
				setItemPrice(getitemPrice(basicPrice));
			break;
			case 173:
				setItemPrice(getitemPrice(itemPrice + 1));
			break;
			case 171:
				setItemPrice(getitemPrice(itemPrice - 1));
			break;
			case 190:
				if (offerType == 0) {
					confirmSellOffer();
				} else {
					confirmBuyOffer();
				}
			break;
			case 18:
			    for(Offer Offer : offerList) {
				if(Offer == null || Offer.id != p.playerId || Offer.slot != 0) {
				    continue;
				}
				if(Offer.type == 0 &amp;&amp; !Offer.aborted) {
				    p.frames.setItemSlot(p, Offer.slot, 995, Offer.currentPrice);
				} else if(!Offer.aborted) {
				    p.frames.setItemSlot(p, Offer.slot, Offer.item, Offer.currentPrice);
				}
			    }
			    p.currentSlot = 0;
			    p.frames.setConfig(p, 1112, 0);
			    break;
			case 34:
			    for(Offer Offer : offerList) {
				if(Offer == null || Offer.id != p.playerId || Offer.slot != 1) {
				    continue;
				}
				if(Offer.type == 0 &amp;&amp; !Offer.aborted) {
				    p.frames.setItemSlot(p, Offer.slot, 995, Offer.currentPrice);
				} else if(!Offer.aborted) {
				    p.frames.setItemSlot(p, Offer.slot, Offer.item, Offer.currentPrice);
				}
			    }
			    p.currentSlot = 1;
			    p.frames.setConfig(p, 1112, 1);
			    break;
			case 50:
			    for(Offer Offer : offerList) {
				if(Offer == null || Offer.id != p.playerId || Offer.slot != 2) {
				    continue;
				}
				if(Offer.type == 0 &amp;&amp; !Offer.aborted) {
				    p.frames.setItemSlot(p, Offer.slot, 995, Offer.currentPrice);
				} else if(!Offer.aborted) {
				    p.frames.setItemSlot(p, Offer.slot, Offer.item, Offer.currentPrice);
				}
			    }
			    p.currentSlot = 2;
			    p.frames.setConfig(p, 1112, 2);
			    break;
			case 69:
			    for(Offer Offer : offerList) {
				if(Offer == null || Offer.id != p.playerId || Offer.slot != 3) {
				    continue;
				}
				if(Offer.type == 0 &amp;&amp; !Offer.aborted) {
				    p.frames.setItemSlot(p, Offer.slot, 995, Offer.currentPrice);
				} else if(!Offer.aborted) {
				    p.frames.setItemSlot(p, Offer.slot, Offer.item, Offer.currentPrice);
				}
			    }
			    p.currentSlot = 3;
			    p.frames.setConfig(p, 1112, 3);
			    break;
			case 88:
			    for(Offer Offer : offerList) {
				if(Offer == null || Offer.id != p.playerId || Offer.slot != 4) {
				    continue;
				}
				if(Offer.type == 0 &amp;&amp; !Offer.aborted) {
				    p.frames.setItemSlot(p, Offer.slot, 995, Offer.currentPrice);
				} else if(!Offer.aborted) {
				    p.frames.setItemSlot(p, Offer.slot, Offer.item, Offer.currentPrice);
				}
			    }
			    p.currentSlot = 4;
			    p.frames.setConfig(p, 1112, 4);
			    break;
			case 107:
			    for(Offer Offer : offerList) {
				if(Offer == null || Offer.id != p.playerId || Offer.slot != 5) {
				    continue;
				}
				if(Offer.type == 0 &amp;&amp; !Offer.aborted) {
				    p.frames.setItemSlot(p, Offer.slot, 995, Offer.currentPrice);
				} else if(!Offer.aborted) {
				    p.frames.setItemSlot(p, Offer.slot, Offer.item, Offer.currentPrice);
				}
			    }
			    p.currentSlot = 5;
			    p.frames.setConfig(p, 1112, 5);
			    break;
			case 209:
			    boolean bool = false;
			    int i = 0;
			    for(Offer Offer : offerList) {
				if(Offer == null || Offer.id != p.playerId || Offer.slot != p.currentSlot) {
		    		    continue;
				}
				if(Offer.type == 0 &amp;&amp; !Offer.aborted) {
				    p.frames.resetItemSlot(p, Offer.slot);
				    Engine.playerItems.addItem(p, 995, Offer.currentPrice);
				    Offer.updatePrice(Offer.currentPrice, false);
				    i = Offer.slot;
				} else if(!Offer.aborted) {
				    p.frames.resetItemSlot(p, Offer.slot);
				    Engine.playerItems.addItem(p, Offer.item, Offer.currentPrice);
				    Offer.updatePrice(Offer.currentPrice, false);
				    i = Offer.slot;
				}
				if(Offer.aborted) {
				    i = Offer.slot;
				    bool = true;
				    if(Offer.type == 0) {
				        Engine.playerItems.addItem(p, Offer.item, Offer.currentAmount);
					p.frames.resetItemSlot(p, Offer.slot);
					bool = true;

				    } else {
					Engine.playerItems.addItem(p, 995, Offer.currentAmount * Offer.price);
					p.frames.resetItemSlot(p, Offer.slot);
					bool = true;
				    }
				    Offer.clear();
				}
				if(Offer.completed) {
				    bool = true;
				    Offer.clear();
				}
			    }
			    if(bool) {
			        p.frames.resetGe(p, i);

			    }
			    break;
			case 203:
			    for(Offer Offer : offerList) {
				if(Offer == null || Offer.id != p.playerId || p.currentSlot != Offer.slot) {
		    		    continue;
				}
				Offer.aborted = true;
				if(Offer.type == 0) {
				    p.frames.setGe(p, Offer.slot, -3, Offer.item, Offer.price, Offer.amount, Offer.amount-Offer.currentAmount);
				    p.frames.setItemSlot(p, Offer.slot, Offer.item, Offer.currentAmount);
				} else {
				    p.frames.setGe(p, Offer.slot, 5, Offer.item, Offer.price, Offer.amount, Offer.amount-Offer.currentAmount);
				    p.frames.setItemSlot(p, Offer.slot, 995, Offer.price*(Offer.amount-Offer.currentAmount));
				}
			    }
			    break;
		}
	}
	
	public void setSellSetup(int offerId) {
		itemId = -1;
		minPrice = 0;
		basicPrice = 0;
		maxPrice = 0;
		itemPrice = 0;
		itemAmount = 0;
		p.currentSlot = offerId;
		p.frames.setConfig(p, 1109, -1);
		p.frames.setConfig(p, 1110, 0);	
		p.frames.setConfig(p, 1111, 0);	
		p.frames.setConfig(p, 1112, -1);	
		p.frames.setConfig(p, 1113, 1);
		p.frames.setConfig(p, 1112, offerId);
		p.frames.setInventory(p, 107);
		Object[] o2 = new Object[]{&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;Offer&quot;, -1, 0, 7, 4, 93, 7012370};
		p.frames.runScript(p, 149, o2, &quot;IviiiIsssss&quot;);
		p.frames.setAccessMask(p, 1026, 18, 107, 0, 27);
		p.frames.setItems(p, 149, 0, 93, p.items, p.itemsN);
		p.frames.setInterfaceConfig(p, 107, 0, false);
		offerType = 0;
	}
	
	public void setBuySetup(int offerId) {
		itemId = -1;
		minPrice = 0;
		basicPrice = 0;
		maxPrice = 0;
		itemPrice = 0;
		itemAmount = 0;
		p.currentSlot = offerId;
		p.frames.setConfig(p, 1109, -1);
		p.frames.setConfig(p, 1110, 0);	
		p.frames.setConfig(p, 1111, 0);
		p.frames.setConfig(p, 1113, 1);
		p.frames.setConfig(p, 1113, 0);
		p.frames.setConfig(p, 1112, -1);
		p.frames.setConfig(p, 1112, offerId);
		offerType = 1;
		Object[] o = new Object[]{&quot;DavidScape Grand Exchange Item Search&quot;};
		p.frames.setGeSearch(p, o);
p.frames.setItems(p, 149, 0, 93, p.items, p.itemsN);
	}
	
	public void offerItem(int itemIndex) {
		itemId = p.items[itemIndex];
		itemAmount = PlayerItems.invItemCount(p, itemId);
		p.frames.setConfig(p, 1109, itemId);	
		p.frames.setConfig(p, 1110, itemAmount);
		setPrices();
	}
	
	public void setBuyItem(int itemId) {
		this.itemId = itemId;
		itemAmount = 1;
		p.frames.setConfig(p, 1109, itemId);	
		p.frames.setConfig(p, 1110, itemAmount);
		setPrices();
	}
	
	public void setItemPrice(int price) {
		p.frames.setConfig(p, 1111, price);
		itemPrice = price;
	}
	
	public void setPrices() {
		minPrice = 0;
		basicPrice = 0;
		maxPrice = 0;
		for(geList list : Engine.geLoader.geList) {
		    if(list == null) {
			continue;
		    }
		    if(list.itemId == itemId) {
			minPrice = 1;
			maxPrice =15000;
			basicPrice = 1;
		    }
		}
		itemPrice = basicPrice;
		p.frames.setConfig(p, 1115, minPrice);
		p.frames.setConfig(p, 1114, basicPrice);
		p.frames.setConfig(p, 1116, maxPrice);
		setItemPrice(itemPrice);
	}
	
	public int getitemPrice(int price) {
		if (price &gt;= maxPrice) {
			return maxPrice;
		}
		if (price &lt;= minPrice) {
			return minPrice;
		}
		return price;
	}
	
	public void confirmSellOffer() {
		if (itemAmount &lt;= PlayerItems.invItemCount(p, itemId)) {
			offerList.add(new Offer(p.playerId, itemId, itemAmount, itemAmount, itemPrice, 0, p.username, false, p.currentSlot));
			openMainInterface();
			PlayerItems.deleteItem(p, itemId, itemAmount);
			p.frames.setGe(p, p.currentSlot, -1, itemId, itemPrice, itemAmount, 0);
			updateOffers();
		} else {
			p.frames.sendMessage(p, &quot;You don&#39;t have enough items in your inventory to complete this offer.&quot;);
		}
	}
	
	public void confirmBuyOffer() {
		if ((itemAmount * itemPrice) &lt;= PlayerItems.invItemCount(p, 995)) {
			offerList.add(new Offer(p.playerId, itemId, itemAmount, itemAmount, itemPrice, 1, p.username, false, p.currentSlot));
			openMainInterface();
			PlayerItems.deleteItem(p, 995, (itemAmount * itemPrice));
			p.frames.setGe(p, p.currentSlot, 3, itemId, itemPrice, itemAmount, 0);
			updateOffers();
		} else {
			p.frames.sendMessage(p, &quot;You don&#39;t have enough coins to complete this offer.&quot;);
		}
	}
	
	public void updateOffers() {
	    for(Offer Offer : offerList) {
		if(Offer == null || Offer.type != 0 || Offer.completed || Offer.aborted) {
		    continue;
		}
		for(Offer Offer2 : offerList) {
		    if(Offer2 == null || Offer2.type != 1 || Offer2.completed || Offer2.aborted) {
			continue;
		    }
		    if(Offer2.item == Offer.item &amp;&amp; Offer2.price &gt;= Offer.price) {
			Player p2 = Server.engine.players[Server.engine.getIdFromName(Offer2.owner)];
			Player p3 = Server.engine.players[Server.engine.getIdFromName(Offer.owner)];
			int id = Offer.item;
			int amount = Offer2.currentAmount;
			if(Offer.currentAmount &lt; Offer2.currentAmount) {
				amount = Offer.currentAmount;
			}
			if(p2 != null || !p2.disconnected[0]) {
		            p2.frames.sendMessage(p2, &quot;A Grand Exchange offer has been updated!&quot;);
			}
			if(p3 != null || !p3.disconnected[0]) {
			    p3.frames.sendMessage(p3, &quot;A Grand Exchange offer has been updated!&quot;);
			}
			Offer2.currentAmount -= amount;
			Offer.currentAmount -= amount;
			Offer.updatePrice(amount, true);
			Offer2.updatePrice(amount, true);
			p3.frames.setGe(p3, Offer.slot, -1, Offer.item, Offer.price, Offer.amount, Offer.amount-Offer.currentAmount);
			p2.frames.setGe(p2, Offer2.slot, 3, Offer2.item, Offer2.price, Offer2.amount, Offer2.amount-Offer2.currentAmount);
			if(Offer.currentAmount == 0) {
			    p3.frames.setGe(p3, Offer.slot, -3, Offer.item, Offer.price, Offer.amount, Offer.amount-Offer.currentAmount);
			    Offer.completed = true;
			}
			if(Offer2.currentAmount == 0) {
			    p2.frames.setGe(p2, Offer2.slot, 5, Offer2.item, Offer2.price, Offer2.amount, Offer2.amount-Offer2.currentAmount);
			    Offer2.completed = true;
			}
		    }
		}
	    }
	}
}[/code]

part 2: [code]import server name.util.Misc;
import servername.content.GrandExchange;
import servername.content.Offer;
import java.io.*;
import servername.util.Stream;

public class GrandExchangeLoader {

    /**
     * Byte buffer for storing bytes to be loaded or saved.
     */
    private Stream stream = new Stream(5000, 5000);

    public GrandExchangeLoader() {

    }

    public void saveOffers() throws Exception {
	int i = 0;
	for(Offer Offer : GrandExchange.offerList) {
	    if(Offer == null) {
		continue;
	    }
	    i++;
	    stream.outOffset = 0;
	    stream.writeString(&quot;id:&quot; + Offer.id);
	    stream.writeString(&quot;item:&quot; + Offer.item);
	    stream.writeString(&quot;amount:&quot; + Offer.amount);
	    stream.writeString(&quot;currentAmount:&quot; + Offer.currentAmount);
	    stream.writeString(&quot;price:&quot; + Offer.price);
	    stream.writeString(&quot;type:&quot; + Offer.type);
	    stream.writeString(&quot;owner:&quot; + Offer.owner);
	    if(Offer.completed) {
	        stream.writeString(&quot;completed:&quot; + 1);
	    } else {
	        stream.writeString(&quot;completed:&quot; + 0);
	    }
	    stream.writeString(&quot;currentPrice:&quot; + Offer.currentPrice);
	    if(Offer.aborted) {
	        stream.writeString(&quot;aborted:&quot; + 1);
	    } else {
	        stream.writeString(&quot;aborted:&quot; + 0);
	    }
	    stream.writeString(&quot;slot:&quot; + Offer.slot);
	    stream.writeString(&quot;null&quot;);
            FileOutputStream out = new FileOutputStream(&quot;./data/Offers/&quot; + i + &quot;.dat&quot;);
            out.write(stream.outBuffer, 0, stream.outOffset);
            out.flush();
            out.close();
            out = null;
	}
    }

    public void loadOffers() {
	for(int i = 0; i &lt;= 2000; i++) {
            stream.inOffset = 0;
            try {
            	FileInputStream in = new FileInputStream(&quot;./data/Offers/&quot; + i + &quot;.dat&quot;);
            	in.read(stream.inBuffer);
            	in.close();
            	in = null;
            } catch (Exception e) {
            	continue;
            }
	    String line;
            try {
		int id = 0;
		int item = 0;
		int amount = 0;
		int currentAmount = 0;
		int price = 0;
		int type = 0;
		String owner = &quot;&quot;;
		boolean completed = false;
		int currentPrice = 0;
		int slot = 0;
		boolean aborted = false;
	        while ((line = stream.readString()) != null &amp;&amp; line.length() &gt; 0) {
                    if (line.startsWith(&quot;id:&quot;)) {
                        id = Integer.parseInt(line.substring(3));
		    } else if(line.startsWith(&quot;item:&quot;)) {
                        item = Integer.parseInt(line.substring(5));
		    } else if(line.startsWith(&quot;amount:&quot;)) {
                        amount = Integer.parseInt(line.substring(7));
		    } else if(line.startsWith(&quot;currentAmount:&quot;)) {
                        currentAmount = Integer.parseInt(line.substring(14));
		    } else if(line.startsWith(&quot;price:&quot;)) {
                        price = Integer.parseInt(line.substring(6));
		    } else if(line.startsWith(&quot;type:&quot;)) {
                        type = Integer.parseInt(line.substring(5));
		    } else if(line.startsWith(&quot;owner:&quot;)) {
                        owner = line.substring(6);
		    } else if(line.startsWith(&quot;completed:&quot;)) {
			int iii = Integer.parseInt(line.substring(10));
                        if(iii == 1) {
			    completed = true;
			} else {
			    completed = false;
			}
		    } else if(line.startsWith(&quot;currentPrice:&quot;)) {
                        currentPrice = Integer.parseInt(line.substring(13));
		    } else if(line.startsWith(&quot;aborted:&quot;)) {
			int iii = Integer.parseInt(line.substring(10));
                        if(iii == 1) {
			    aborted = true;
			} else {
			    aborted = false;
			}
		    } else if(line.startsWith(&quot;slot:&quot;)) {
                        slot = Integer.parseInt(line.substring(5));
		    }
		}
		if(id != 0) {
		    GrandExchange.offerList.add(new Offer(id,item,amount,currentAmount,price,type,owner,completed,slot));
	        }
		for(Offer l : GrandExchange.offerList) {
	    	    if(l == null) {
			continue;
		    }
		    if(l.id == id &amp;&amp; l.item == item &amp;&amp; l.amount == amount
			&amp;&amp; l.currentAmount == currentAmount &amp;&amp; l.price == price
			 &amp;&amp; l.type == type &amp;&amp; l.owner.equals(owner) &amp;&amp; l.slot == slot) {
			l.currentPrice = currentPrice;
			l.aborted = aborted;
			break;
		    }
	    	}
	    } catch(Exception e) {}
	}
	
    }
}[/code]</description>
    
    <lastBuildDate>Thu, 05 Nov 2009 07:04:34 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/grand-exchange-code/312496.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Grand exchange [code]</title>
        <dc:creator><![CDATA[@_Rich Rich]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_rich">@_Rich</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="7" data-topic="312496">
<div class="title">
<div class="quote-controls"></div>
 the elve age:</div>
<blockquote>
<p>This would be in server tutorial section/snippets</p>
</blockquote>
</aside>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/grand-exchange-code/312496/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/grand-exchange-code/312496/8</link>
        <pubDate>Thu, 05 Nov 2009 07:04:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-312496-8</guid>
        <source url="https://forum.moparisthebest.com/t/grand-exchange-code/312496.rss">Grand exchange [code]</source>
      </item>
      <item>
        <title>Grand exchange [code]</title>
        <dc:creator><![CDATA[@the_elve_age the elve age]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_elve_age">@the_elve_age</a> wrote:</p>
          <blockquote>
              <p>This would be in server tutorial section/snippets</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/grand-exchange-code/312496/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/grand-exchange-code/312496/7</link>
        <pubDate>Thu, 05 Nov 2009 02:49:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-312496-7</guid>
        <source url="https://forum.moparisthebest.com/t/grand-exchange-code/312496.rss">Grand exchange [code]</source>
      </item>
      <item>
        <title>Grand exchange [code]</title>
        <dc:creator><![CDATA[@Maximum_ZxZ Maximum ZxZ]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/maximum_zxz">@Maximum_ZxZ</a> wrote:</p>
          <blockquote>
              <p>[quote=“ytpingas, post:5, topic:312496”]oh sorry guys…</p>
<p>and thanks davidi2</p>
<p>NOTE GUYS: 60% wasnt created by me<br>
40% was ceated by me because i edited the code, and included snipplets in it so it will run on any server[/quote]</p>
<p>Post it on your topic too. I mean on the first post.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/grand-exchange-code/312496/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/grand-exchange-code/312496/6</link>
        <pubDate>Thu, 05 Nov 2009 00:28:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-312496-6</guid>
        <source url="https://forum.moparisthebest.com/t/grand-exchange-code/312496.rss">Grand exchange [code]</source>
      </item>
      <item>
        <title>Grand exchange [code]</title>
        <dc:creator><![CDATA[@ytpingas ytpingas]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ytpingas">@ytpingas</a> wrote:</p>
          <blockquote>
              <p>oh sorry guys…</p>
<p>and thanks davidi2</p>
<p>NOTE GUYS: 60% wasnt created by me<br>
40% was ceated by me because i edited the code, and included snipplets in it so it will run on any server</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/grand-exchange-code/312496/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/grand-exchange-code/312496/5</link>
        <pubDate>Wed, 04 Nov 2009 23:05:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-312496-5</guid>
        <source url="https://forum.moparisthebest.com/t/grand-exchange-code/312496.rss">Grand exchange [code]</source>
      </item>
      <item>
        <title>Grand exchange [code]</title>
        <dc:creator><![CDATA[@Maximum_ZxZ Maximum ZxZ]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/maximum_zxz">@Maximum_ZxZ</a> wrote:</p>
          <blockquote>
              <p>Hmm, this really work 100% ? If so, I’ll give a try.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/grand-exchange-code/312496/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/grand-exchange-code/312496/4</link>
        <pubDate>Wed, 04 Nov 2009 22:54:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-312496-4</guid>
        <source url="https://forum.moparisthebest.com/t/grand-exchange-code/312496.rss">Grand exchange [code]</source>
      </item>
      <item>
        <title>Grand exchange [code]</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>I would rep++ of this was your work.</p>
<p>But it’s not, and this should be removed unless you have proof that the creator gave you permission.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/grand-exchange-code/312496/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/grand-exchange-code/312496/3</link>
        <pubDate>Wed, 04 Nov 2009 22:54:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-312496-3</guid>
        <source url="https://forum.moparisthebest.com/t/grand-exchange-code/312496.rss">Grand exchange [code]</source>
      </item>
      <item>
        <title>Grand exchange [code]</title>
        <dc:creator><![CDATA[@ytpingas ytpingas]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ytpingas">@ytpingas</a> wrote:</p>
          <blockquote>
              <p>part 3, final leeching, copy and pasting… [code]package servername.content;</p>
<p>public class Offer {</p>
<pre><code>public int id;

public int item;

public int amount;

public int currentAmount;

public int price;

public int type;

public String owner;

public boolean completed;

    public int currentPrice;

    public boolean aborted = false;

public int slot;

//offertype: 0 = sell, 1 = buy
public Offer(int id, int item, int amount, int currentAmount, int price, int type, String owner, boolean completed, int slot) {
	this.id = id;
	this.item = item;
	this.amount = amount;
	this.currentAmount = currentAmount;
	this.price = price;
	this.type = type;
	this.owner = owner;
	this.completed = completed;
	this.slot = slot;
}

public void updatePrice(int amount, boolean bool) {
    if(bool) {
        if(type == 0) {
	    currentPrice += amount * price;
	} else {
	    currentPrice += amount;
	}
    } else {
	currentPrice -= amount;
    }
}

    public void clear() {
    id = 0;
    item = 0;
    amount = 0;
    currentAmount = 0;
    price = 0;
    type = -1;
    owner = "";
    completed = false;
    currentPrice = 0;
    aborted = false;
}
</code></pre>
<p>}<br>
[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/grand-exchange-code/312496/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/grand-exchange-code/312496/2</link>
        <pubDate>Wed, 04 Nov 2009 22:52:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-312496-2</guid>
        <source url="https://forum.moparisthebest.com/t/grand-exchange-code/312496.rss">Grand exchange [code]</source>
      </item>
      <item>
        <title>Grand exchange [code]</title>
        <dc:creator><![CDATA[@ytpingas ytpingas]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ytpingas">@ytpingas</a> wrote:</p>
          <blockquote>
              <p>[size=15pt]DIFFICULTY: 1/10[/size]</p>
<p><span class="bbcode-s">really, all you need is to copy and paste rofl</span></p>
<p>[code]import java.util.List;<br>
import java.util.ArrayList;<br>
import (server name no brackets).players.Player;<br>
import servername.players.items.PlayerItems;<br>
import servername.util.Misc;<br>
import servername.Server;<br>
import servername.Engine;<br>
import servername.world.geList;</p>
<p>public class GrandExchange {</p>
<pre><code>public static List&lt;Offer&gt; offerList = new ArrayList&lt;Offer&gt;(2000);
	
public Player p;
 
public int itemId = -1;

public int minPrice = 0;
public int basicPrice = 0;
public int maxPrice = 0;

public int itemPrice = 0;
public int itemAmount = 0;

public int offerType = -1;

public PlayerItems PlayerItems = new PlayerItems();

public static int i = -1;


public GrandExchange(Player p) {
    this.p = p;
}

public void openMainInterface() {
	p.frames.setConfig2(p, 563, 4194304);
	p.frames.setConfig(p, 1112, -1);
	p.frames.setConfig(p, 1113, -1);
	p.frames.setConfig(p, 1109, -1);
	p.frames.setConfig(p, 1110, 0);
	p.frames.setConfig(p, 1111, 1);
	p.frames.showInterface(p, 105);
	p.frames.setItems(p, -1, -1327, 93, new int[] {}, new int[] {});
	p.frames.restoreTabs(p);
	p.frames.restoreInventory(p);
	p.frames.setInterfaceConfig(p, 107, 0, true);
	p.frames.setInterfaceConfig(p, 105, 0, false);
	p.frames.setAccessMask(p, 6, 0, 105, -1, -1);
		}

public void handleButtons(int buttonId) {
	switch(buttonId) {
		case 30:
			setBuySetup(0);
		break;
		case 31:
			setSellSetup(0);
		break;
		case 46:
			setBuySetup(1);
		break;
		case 47:
			setSellSetup(1);
		break;
		case 62:
		    setBuySetup(2);
		    break;
		case 63:
		    setSellSetup(2);
		    break;
		case 81:
		    setBuySetup(3);
		    break;
		case 82:
		    setSellSetup(3);
		    break;
		case 100:
		    setBuySetup(4);
		    break;
		case 101:
		    setSellSetup(4);
		    break;
		case 119:
		    setBuySetup(5);
		    break;
		case 120:
		    setSellSetup(5);
		    break;
		case 127:
			openMainInterface();
		break;
		case 157:
		    if(itemAmount != 1) {
			itemAmount--;
		    }
		    p.frames.setConfig(p, 1109, itemId);	
		    p.frames.setConfig(p, 1110, itemAmount);
		    break;
		case 159:
		    if(itemAmount &lt; 2147483647) {
			itemAmount++;
		    }
		    p.frames.setConfig(p, 1109, itemId);	
		    p.frames.setConfig(p, 1110, itemAmount);
		    break;
		case 162:
		    if(itemAmount &lt; 2147483647) {
			itemAmount++;
		    }
		    if(offerType == 0) {
			itemAmount = 1;
		    }
		    p.frames.setConfig(p, 1109, itemId);	
		    p.frames.setConfig(p, 1110, itemAmount);
		    break;
		case 164:
		    if(itemAmount &lt; 2147483637) {
			itemAmount += 10;
		    }
		    if(offerType == 0) {
			itemAmount = 10;
		    }
		    p.frames.setConfig(p, 1109, itemId);	
		    p.frames.setConfig(p, 1110, itemAmount);
		    break;
		case 166:
		    if(itemAmount &lt; 2147483547) {
			itemAmount += 100;
		    }
		    if(offerType == 0) {
			itemAmount = 100;
		    }
		    p.frames.setConfig(p, 1109, itemId);	
		    p.frames.setConfig(p, 1110, itemAmount);
		    break;
		case 168:
		    if(itemAmount &lt; 2147482647) {
			itemAmount += 1000;
		    }
		    if(offerType == 0) {
			itemAmount = PlayerItems.invItemCount(p, itemId);
		    }
		    p.frames.setConfig(p, 1109, itemId);	
		    p.frames.setConfig(p, 1110, itemAmount);
		    break;
		case 177:
			setItemPrice(minPrice);
		break;
		case 183:
			setItemPrice(getitemPrice(maxPrice));
		break;
		case 180:
			setItemPrice(getitemPrice(basicPrice));
		break;
		case 173:
			setItemPrice(getitemPrice(itemPrice + 1));
		break;
		case 171:
			setItemPrice(getitemPrice(itemPrice - 1));
		break;
		case 190:
			if (offerType == 0) {
				confirmSellOffer();
			} else {
				confirmBuyOffer();
			}
		break;
		case 18:
		    for(Offer Offer : offerList) {
			if(Offer == null || Offer.id != p.playerId || Offer.slot != 0) {
			    continue;
			}
			if(Offer.type == 0 &amp;&amp; !Offer.aborted) {
			    p.frames.setItemSlot(p, Offer.slot, 995, Offer.currentPrice);
			} else if(!Offer.aborted) {
			    p.frames.setItemSlot(p, Offer.slot, Offer.item, Offer.currentPrice);
			}
		    }
		    p.currentSlot = 0;
		    p.frames.setConfig(p, 1112, 0);
		    break;
		case 34:
		    for(Offer Offer : offerList) {
			if(Offer == null || Offer.id != p.playerId || Offer.slot != 1) {
			    continue;
			}
			if(Offer.type == 0 &amp;&amp; !Offer.aborted) {
			    p.frames.setItemSlot(p, Offer.slot, 995, Offer.currentPrice);
			} else if(!Offer.aborted) {
			    p.frames.setItemSlot(p, Offer.slot, Offer.item, Offer.currentPrice);
			}
		    }
		    p.currentSlot = 1;
		    p.frames.setConfig(p, 1112, 1);
		    break;
		case 50:
		    for(Offer Offer : offerList) {
			if(Offer == null || Offer.id != p.playerId || Offer.slot != 2) {
			    continue;
			}
			if(Offer.type == 0 &amp;&amp; !Offer.aborted) {
			    p.frames.setItemSlot(p, Offer.slot, 995, Offer.currentPrice);
			} else if(!Offer.aborted) {
			    p.frames.setItemSlot(p, Offer.slot, Offer.item, Offer.currentPrice);
			}
		    }
		    p.currentSlot = 2;
		    p.frames.setConfig(p, 1112, 2);
		    break;
		case 69:
		    for(Offer Offer : offerList) {
			if(Offer == null || Offer.id != p.playerId || Offer.slot != 3) {
			    continue;
			}
			if(Offer.type == 0 &amp;&amp; !Offer.aborted) {
			    p.frames.setItemSlot(p, Offer.slot, 995, Offer.currentPrice);
			} else if(!Offer.aborted) {
			    p.frames.setItemSlot(p, Offer.slot, Offer.item, Offer.currentPrice);
			}
		    }
		    p.currentSlot = 3;
		    p.frames.setConfig(p, 1112, 3);
		    break;
		case 88:
		    for(Offer Offer : offerList) {
			if(Offer == null || Offer.id != p.playerId || Offer.slot != 4) {
			    continue;
			}
			if(Offer.type == 0 &amp;&amp; !Offer.aborted) {
			    p.frames.setItemSlot(p, Offer.slot, 995, Offer.currentPrice);
			} else if(!Offer.aborted) {
			    p.frames.setItemSlot(p, Offer.slot, Offer.item, Offer.currentPrice);
			}
		    }
		    p.currentSlot = 4;
		    p.frames.setConfig(p, 1112, 4);
		    break;
		case 107:
		    for(Offer Offer : offerList) {
			if(Offer == null || Offer.id != p.playerId || Offer.slot != 5) {
			    continue;
			}
			if(Offer.type == 0 &amp;&amp; !Offer.aborted) {
			    p.frames.setItemSlot(p, Offer.slot, 995, Offer.currentPrice);
			} else if(!Offer.aborted) {
			    p.frames.setItemSlot(p, Offer.slot, Offer.item, Offer.currentPrice);
			}
		    }
		    p.currentSlot = 5;
		    p.frames.setConfig(p, 1112, 5);
		    break;
		case 209:
		    boolean bool = false;
		    int i = 0;
		    for(Offer Offer : offerList) {
			if(Offer == null || Offer.id != p.playerId || Offer.slot != p.currentSlot) {
	    		    continue;
			}
			if(Offer.type == 0 &amp;&amp; !Offer.aborted) {
			    p.frames.resetItemSlot(p, Offer.slot);
			    Engine.playerItems.addItem(p, 995, Offer.currentPrice);
			    Offer.updatePrice(Offer.currentPrice, false);
			    i = Offer.slot;
			} else if(!Offer.aborted) {
			    p.frames.resetItemSlot(p, Offer.slot);
			    Engine.playerItems.addItem(p, Offer.item, Offer.currentPrice);
			    Offer.updatePrice(Offer.currentPrice, false);
			    i = Offer.slot;
			}
			if(Offer.aborted) {
			    i = Offer.slot;
			    bool = true;
			    if(Offer.type == 0) {
			        Engine.playerItems.addItem(p, Offer.item, Offer.currentAmount);
				p.frames.resetItemSlot(p, Offer.slot);
				bool = true;

			    } else {
				Engine.playerItems.addItem(p, 995, Offer.currentAmount * Offer.price);
				p.frames.resetItemSlot(p, Offer.slot);
				bool = true;
			    }
			    Offer.clear();
			}
			if(Offer.completed) {
			    bool = true;
			    Offer.clear();
			}
		    }
		    if(bool) {
		        p.frames.resetGe(p, i);

		    }
		    break;
		case 203:
		    for(Offer Offer : offerList) {
			if(Offer == null || Offer.id != p.playerId || p.currentSlot != Offer.slot) {
	    		    continue;
			}
			Offer.aborted = true;
			if(Offer.type == 0) {
			    p.frames.setGe(p, Offer.slot, -3, Offer.item, Offer.price, Offer.amount, Offer.amount-Offer.currentAmount);
			    p.frames.setItemSlot(p, Offer.slot, Offer.item, Offer.currentAmount);
			} else {
			    p.frames.setGe(p, Offer.slot, 5, Offer.item, Offer.price, Offer.amount, Offer.amount-Offer.currentAmount);
			    p.frames.setItemSlot(p, Offer.slot, 995, Offer.price*(Offer.amount-Offer.currentAmount));
			}
		    }
		    break;
	}
}

public void setSellSetup(int offerId) {
	itemId = -1;
	minPrice = 0;
	basicPrice = 0;
	maxPrice = 0;
	itemPrice = 0;
	itemAmount = 0;
	p.currentSlot = offerId;
	p.frames.setConfig(p, 1109, -1);
	p.frames.setConfig(p, 1110, 0);	
	p.frames.setConfig(p, 1111, 0);	
	p.frames.setConfig(p, 1112, -1);	
	p.frames.setConfig(p, 1113, 1);
	p.frames.setConfig(p, 1112, offerId);
	p.frames.setInventory(p, 107);
	Object[] o2 = new Object[]{"", "", "", "", "Offer", -1, 0, 7, 4, 93, 7012370};
	p.frames.runScript(p, 149, o2, "IviiiIsssss");
	p.frames.setAccessMask(p, 1026, 18, 107, 0, 27);
	p.frames.setItems(p, 149, 0, 93, p.items, p.itemsN);
	p.frames.setInterfaceConfig(p, 107, 0, false);
	offerType = 0;
}

public void setBuySetup(int offerId) {
	itemId = -1;
	minPrice = 0;
	basicPrice = 0;
	maxPrice = 0;
	itemPrice = 0;
	itemAmount = 0;
	p.currentSlot = offerId;
	p.frames.setConfig(p, 1109, -1);
	p.frames.setConfig(p, 1110, 0);	
	p.frames.setConfig(p, 1111, 0);
	p.frames.setConfig(p, 1113, 1);
	p.frames.setConfig(p, 1113, 0);
	p.frames.setConfig(p, 1112, -1);
	p.frames.setConfig(p, 1112, offerId);
	offerType = 1;
	Object[] o = new Object[]{"DavidScape Grand Exchange Item Search"};
	p.frames.setGeSearch(p, o);
</code></pre>
<p>p.frames.setItems(p, 149, 0, 93, p.items, p.itemsN);<br>
}</p>
<pre><code>public void offerItem(int itemIndex) {
	itemId = p.items[itemIndex];
	itemAmount = PlayerItems.invItemCount(p, itemId);
	p.frames.setConfig(p, 1109, itemId);	
	p.frames.setConfig(p, 1110, itemAmount);
	setPrices();
}

public void setBuyItem(int itemId) {
	this.itemId = itemId;
	itemAmount = 1;
	p.frames.setConfig(p, 1109, itemId);	
	p.frames.setConfig(p, 1110, itemAmount);
	setPrices();
}

public void setItemPrice(int price) {
	p.frames.setConfig(p, 1111, price);
	itemPrice = price;
}

public void setPrices() {
	minPrice = 0;
	basicPrice = 0;
	maxPrice = 0;
	for(geList list : Engine.geLoader.geList) {
	    if(list == null) {
		continue;
	    }
	    if(list.itemId == itemId) {
		minPrice = 1;
		maxPrice =15000;
		basicPrice = 1;
	    }
	}
	itemPrice = basicPrice;
	p.frames.setConfig(p, 1115, minPrice);
	p.frames.setConfig(p, 1114, basicPrice);
	p.frames.setConfig(p, 1116, maxPrice);
	setItemPrice(itemPrice);
}

public int getitemPrice(int price) {
	if (price &gt;= maxPrice) {
		return maxPrice;
	}
	if (price &lt;= minPrice) {
		return minPrice;
	}
	return price;
}

public void confirmSellOffer() {
	if (itemAmount &lt;= PlayerItems.invItemCount(p, itemId)) {
		offerList.add(new Offer(p.playerId, itemId, itemAmount, itemAmount, itemPrice, 0, p.username, false, p.currentSlot));
		openMainInterface();
		PlayerItems.deleteItem(p, itemId, itemAmount);
		p.frames.setGe(p, p.currentSlot, -1, itemId, itemPrice, itemAmount, 0);
		updateOffers();
	} else {
		p.frames.sendMessage(p, "You don't have enough items in your inventory to complete this offer.");
	}
}

public void confirmBuyOffer() {
	if ((itemAmount * itemPrice) &lt;= PlayerItems.invItemCount(p, 995)) {
		offerList.add(new Offer(p.playerId, itemId, itemAmount, itemAmount, itemPrice, 1, p.username, false, p.currentSlot));
		openMainInterface();
		PlayerItems.deleteItem(p, 995, (itemAmount * itemPrice));
		p.frames.setGe(p, p.currentSlot, 3, itemId, itemPrice, itemAmount, 0);
		updateOffers();
	} else {
		p.frames.sendMessage(p, "You don't have enough coins to complete this offer.");
	}
}

public void updateOffers() {
    for(Offer Offer : offerList) {
	if(Offer == null || Offer.type != 0 || Offer.completed || Offer.aborted) {
	    continue;
	}
	for(Offer Offer2 : offerList) {
	    if(Offer2 == null || Offer2.type != 1 || Offer2.completed || Offer2.aborted) {
		continue;
	    }
	    if(Offer2.item == Offer.item &amp;&amp; Offer2.price &gt;= Offer.price) {
		Player p2 = Server.engine.players[Server.engine.getIdFromName(Offer2.owner)];
		Player p3 = Server.engine.players[Server.engine.getIdFromName(Offer.owner)];
		int id = Offer.item;
		int amount = Offer2.currentAmount;
		if(Offer.currentAmount &lt; Offer2.currentAmount) {
			amount = Offer.currentAmount;
		}
		if(p2 != null || !p2.disconnected[0]) {
	            p2.frames.sendMessage(p2, "A Grand Exchange offer has been updated!");
		}
		if(p3 != null || !p3.disconnected[0]) {
		    p3.frames.sendMessage(p3, "A Grand Exchange offer has been updated!");
		}
		Offer2.currentAmount -= amount;
		Offer.currentAmount -= amount;
		Offer.updatePrice(amount, true);
		Offer2.updatePrice(amount, true);
		p3.frames.setGe(p3, Offer.slot, -1, Offer.item, Offer.price, Offer.amount, Offer.amount-Offer.currentAmount);
		p2.frames.setGe(p2, Offer2.slot, 3, Offer2.item, Offer2.price, Offer2.amount, Offer2.amount-Offer2.currentAmount);
		if(Offer.currentAmount == 0) {
		    p3.frames.setGe(p3, Offer.slot, -3, Offer.item, Offer.price, Offer.amount, Offer.amount-Offer.currentAmount);
		    Offer.completed = true;
		}
		if(Offer2.currentAmount == 0) {
		    p2.frames.setGe(p2, Offer2.slot, 5, Offer2.item, Offer2.price, Offer2.amount, Offer2.amount-Offer2.currentAmount);
		    Offer2.completed = true;
		}
	    }
	}
    }
}
</code></pre>
<p>}[/code]</p>
<p>part 2: [code]import server name.util.Misc;<br>
import servername.content.GrandExchange;<br>
import servername.content.Offer;<br>
import <a href="http://java.io" rel="nofollow noopener">java.io</a>.*;<br>
import servername.util.Stream;</p>
<p>public class GrandExchangeLoader {</p>
<pre><code>/**
 * Byte buffer for storing bytes to be loaded or saved.
 */
private Stream stream = new Stream(5000, 5000);

public GrandExchangeLoader() {

}

public void saveOffers() throws Exception {
int i = 0;
for(Offer Offer : GrandExchange.offerList) {
    if(Offer == null) {
	continue;
    }
    i++;
    stream.outOffset = 0;
    stream.writeString("id:" + Offer.id);
    stream.writeString("item:" + Offer.item);
    stream.writeString("amount:" + Offer.amount);
    stream.writeString("currentAmount:" + Offer.currentAmount);
    stream.writeString("price:" + Offer.price);
    stream.writeString("type:" + Offer.type);
    stream.writeString("owner:" + Offer.owner);
    if(Offer.completed) {
        stream.writeString("completed:" + 1);
    } else {
        stream.writeString("completed:" + 0);
    }
    stream.writeString("currentPrice:" + Offer.currentPrice);
    if(Offer.aborted) {
        stream.writeString("aborted:" + 1);
    } else {
        stream.writeString("aborted:" + 0);
    }
    stream.writeString("slot:" + Offer.slot);
    stream.writeString("null");
        FileOutputStream out = new FileOutputStream("./data/Offers/" + i + ".dat");
        out.write(stream.outBuffer, 0, stream.outOffset);
        out.flush();
        out.close();
        out = null;
}
}

public void loadOffers() {
for(int i = 0; i &lt;= 2000; i++) {
        stream.inOffset = 0;
        try {
        	FileInputStream in = new FileInputStream("./data/Offers/" + i + ".dat");
        	in.read(stream.inBuffer);
        	in.close();
        	in = null;
        } catch (Exception e) {
        	continue;
        }
    String line;
        try {
	int id = 0;
	int item = 0;
	int amount = 0;
	int currentAmount = 0;
	int price = 0;
	int type = 0;
	String owner = "";
	boolean completed = false;
	int currentPrice = 0;
	int slot = 0;
	boolean aborted = false;
        while ((line = stream.readString()) != null &amp;&amp; line.length() &gt; 0) {
                if (line.startsWith("id:")) {
                    id = Integer.parseInt(line.substring(3));
	    } else if(line.startsWith("item:")) {
                    item = Integer.parseInt(line.substring(5));
	    } else if(line.startsWith("amount:")) {
                    amount = Integer.parseInt(line.substring(7));
	    } else if(line.startsWith("currentAmount:")) {
                    currentAmount = Integer.parseInt(line.substring(14));
	    } else if(line.startsWith("price:")) {
                    price = Integer.parseInt(line.substring(6));
	    } else if(line.startsWith("type:")) {
                    type = Integer.parseInt(line.substring(5));
	    } else if(line.startsWith("owner:")) {
                    owner = line.substring(6);
	    } else if(line.startsWith("completed:")) {
		int iii = Integer.parseInt(line.substring(10));
                    if(iii == 1) {
		    completed = true;
		} else {
		    completed = false;
		}
	    } else if(line.startsWith("currentPrice:")) {
                    currentPrice = Integer.parseInt(line.substring(13));
	    } else if(line.startsWith("aborted:")) {
		int iii = Integer.parseInt(line.substring(10));
                    if(iii == 1) {
		    aborted = true;
		} else {
		    aborted = false;
		}
	    } else if(line.startsWith("slot:")) {
                    slot = Integer.parseInt(line.substring(5));
	    }
	}
	if(id != 0) {
	    GrandExchange.offerList.add(new Offer(id,item,amount,currentAmount,price,type,owner,completed,slot));
        }
	for(Offer l : GrandExchange.offerList) {
    	    if(l == null) {
		continue;
	    }
	    if(l.id == id &amp;&amp; l.item == item &amp;&amp; l.amount == amount
		&amp;&amp; l.currentAmount == currentAmount &amp;&amp; l.price == price
		 &amp;&amp; l.type == type &amp;&amp; l.owner.equals(owner) &amp;&amp; l.slot == slot) {
		l.currentPrice = currentPrice;
		l.aborted = aborted;
		break;
	    }
    	}
    } catch(Exception e) {}
}

}
</code></pre>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/grand-exchange-code/312496/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/grand-exchange-code/312496/1</link>
        <pubDate>Wed, 04 Nov 2009 22:52:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-312496-1</guid>
        <source url="https://forum.moparisthebest.com/t/grand-exchange-code/312496.rss">Grand exchange [code]</source>
      </item>
  </channel>
</rss>
