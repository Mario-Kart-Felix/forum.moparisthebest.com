<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>ItemDefinition.init() in C# using a BinaryReader</title>
    <link>https://forum.moparisthebest.com/t/itemdefinition-init-in-c-using-a-binaryreader/454615</link>
    <description>I&#39;m trying to load the item definitions from the [i]itemDefinitions.bin[/i] file. I&#39;ve taken this file from the Rs2 - Server 474, and also took a loading function which is the following:

[code]	public static void init() throws IOException {
		if(definitions != null) {
			throw new IllegalStateException(&quot;Item definitions already loaded.&quot;);
		}
		logger.info(&quot;Loading item definitions...&quot;);
		RandomAccessFile raf = new RandomAccessFile(&quot;data/itemDefinitions.bin&quot;, &quot;r&quot;);
		try {
			ByteBuffer buffer = raf.getChannel().map(MapMode.READ_ONLY, 0, raf.length());
			int count = buffer.getShort() + 1;//+1 because arrays start at 0
			definitions = new ItemDefinition[14000];
			for(int i = 0; i &lt; count; i++) {				
				int id = buffer.getShort();
				if(id == -1) {
					continue;
				}
				String name = Buffers.readString(buffer).replace(&quot;(+)&quot;, &quot;(p+)&quot;).replace(&quot;(s)&quot;, &quot;(p++)&quot;);
				String examine = Buffers.readString(buffer);
				boolean noted = buffer.get() == 1 ? true : false;
				int parentId = buffer.getShort() &amp; 0xFFFF;
				if(parentId == 65535) {
					parentId = -1;
				}
				boolean noteable = buffer.get() == 1 ? true : false;
				int notedId = buffer.getShort() &amp; 0xFFFF;
				if(notedId == 65535) {
					notedId = -1;
				}
				boolean stackable = buffer.get() == 1 ? true : false;
				boolean members = buffer.get() == 1 ? true : false;
				int shopValue = buffer.getInt();
				definitions[id] = new ItemDefinition(id, name, examine, noted, noteable, stackable, parentId, notedId, members, shopValue);
			}
			logger.info(&quot;Loaded &quot; + definitions.length + &quot; item definitions.&quot;);
		} finally {
			raf.close();
		}
	}[/code]

So after reading this function, I thought it would be easy to convert it to C# and obtain the item definitions. Here&#39;s my try:

[code]static void Main(string[] args) {
            string path = Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + &quot;\\itemDefinitions.bin&quot;;

            ArrayList list = new ArrayList();

            BinaryReader reader = new BinaryReader(File.OpenRead(path));
            int count = reader.ReadInt16() + 1;
            count = ~count;
            for (int i = 0; i &lt; count; i++) {
                int id = reader.ReadInt16();
                if (id == -1) {
                    continue;
                }

                string name = readString(reader).Replace(&quot;(+)&quot;, &quot;(p+)&quot;).Replace(&quot;(s)&quot;, &quot;(p++)&quot;);
                string examine = readString(reader);
                bool noted = reader.ReadByte() == 1;

                int parentId = reader.ReadInt16() &amp; 0xFFFF;
                if (parentId == 65535) {
                    parentId = -1;
                }

                bool noteable = reader.ReadByte() == 1;

                int notedId = reader.ReadInt16() &amp; 0xFFFF;
                if (notedId == 65535) {
                    notedId = -1;
                }

                bool stackable = reader.ReadByte() == 1;
                bool members = reader.ReadByte() == 1;

                int shopValue = reader.ReadInt32();

                var item = new {
                    ID = id,
                    NAME = name,
                    EXAMINE = examine,
                    NOTED = noted,
                    PARENTID = parentId,
                    NOTEABLE = noteable,
                    NOTEDID = notedId,
                    STACKABLE = stackable,
                    MEMBERS = members,
                    SHOPVALUE = shopValue
                };

                list.Add(item);
            }

            int a = list.Count;
        }

        public static string readString(BinaryReader buffer) {
            StringBuilder builder = new StringBuilder();
            while (buffer.BaseStream.Position &lt; buffer.BaseStream.Length) {
                byte b = buffer.ReadByte();
                if (b == 0) {
                    break;
                }
                builder.Append((char)b);
            }
            return builder.ToString();
        }[/code]

Now the problem is, the first time I read an Int16 (aka short) it returns a negative number [i]-10962[/i] instead of [i]11734[/i], which is strange. So to test the other code I&#39;ve made the count variable into a positive number using the [i]not[/i] operator. After retrieving all of the data, the strings retrieved are correct, but the id&#39;s, shopvalues and basicly every other variable was incorrect.

An image showing the difference:
[img]http://img1.uploadscreenshot.com/images/orig/8/22907510338-orig.png[/img]

So now I wonder, it looks like I&#39;m doing everything the same as in Java, how and why did I get different values? Any help will be much appriciated!

Files that may help you finding the problem:

[ul][li][url=http://www.mediafire.com/?jqoh6h798s6mofm]Rs2 - Server 474[/url][/li]
[li][url=http://lh.rs/PC9NCTXoHeC6]The itemDefinitions.bin I&#39;m using (same as in the rs2 - server 474 package)[/url][/li][/ul]</description>
    
    <lastBuildDate>Fri, 17 Aug 2012 11:54:53 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/itemdefinition-init-in-c-using-a-binaryreader/454615.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>ItemDefinition.init() in C# using a BinaryReader</title>
        <dc:creator><![CDATA[@1500 1500]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/1500">@1500</a> wrote:</p>
          <blockquote>
              <p>[quote=“Native^, post:2, topic:454615”]You read a signed value, must be unsigned to be processed properly in this case.</p>
<p><code>
int id = reader.ReadInt16() &amp; 0xffff;
</code>[/quote]</p>
<p>I gave that a try and it reached the end of the stream (because it could never be -1 as it’s an unsigned short).<br>
The thing that’s bothering me the most is that the count (before reading items) is incorrect, do you happen to know why that would happen?</p>
<p>Edit: Updated with an image!</p>
<p>2nd Edit: Solved; see: <a href="http://stackoverflow.com/questions/12017244/readint16-in-c-sharp-returns-something-different-than-what-writeshort-in-java-wr" rel="nofollow noopener">http://stackoverflow.com/questions/12017244/readint16-in-c-sharp-returns-something-different-than-what-writeshort-in-java-wr</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/itemdefinition-init-in-c-using-a-binaryreader/454615/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/itemdefinition-init-in-c-using-a-binaryreader/454615/3</link>
        <pubDate>Fri, 17 Aug 2012 11:54:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-454615-3</guid>
        <source url="https://forum.moparisthebest.com/t/itemdefinition-init-in-c-using-a-binaryreader/454615.rss">ItemDefinition.init() in C# using a BinaryReader</source>
      </item>
      <item>
        <title>ItemDefinition.init() in C# using a BinaryReader</title>
        <dc:creator><![CDATA[@Native1 Native^]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/native1">@Native1</a> wrote:</p>
          <blockquote>
              <p>You read a signed value, must be unsigned to be processed properly in this case.</p>
<pre><code class="lang-auto">int id = reader.ReadInt16() &amp; 0xffff;</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/itemdefinition-init-in-c-using-a-binaryreader/454615/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/itemdefinition-init-in-c-using-a-binaryreader/454615/2</link>
        <pubDate>Fri, 17 Aug 2012 11:30:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-454615-2</guid>
        <source url="https://forum.moparisthebest.com/t/itemdefinition-init-in-c-using-a-binaryreader/454615.rss">ItemDefinition.init() in C# using a BinaryReader</source>
      </item>
      <item>
        <title>ItemDefinition.init() in C# using a BinaryReader</title>
        <dc:creator><![CDATA[@1500 1500]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/1500">@1500</a> wrote:</p>
          <blockquote>
              <p>I’m trying to load the item definitions from the <span class="bbcode-i">itemDefinitions.bin</span> file. I’ve taken this file from the Rs2 - Server 474, and also took a loading function which is the following:</p>
<p><code>	public static void init() throws IOException {
		if(definitions != null) {
			throw new IllegalStateException("Item definitions already loaded.");
		}
		logger.info("Loading item definitions...");
		RandomAccessFile raf = new RandomAccessFile("data/itemDefinitions.bin", "r");
		try {
			ByteBuffer buffer = raf.getChannel().map(MapMode.READ_ONLY, 0, raf.length());
			int count = buffer.getShort() + 1;//+1 because arrays start at 0
			definitions = new ItemDefinition[14000];
			for(int i = 0; i &lt; count; i++) {				
				int id = buffer.getShort();
				if(id == -1) {
					continue;
				}
				String name = Buffers.readString(buffer).replace("(+)", "(p+)").replace("(s)", "(p++)");
				String examine = Buffers.readString(buffer);
				boolean noted = buffer.get() == 1 ? true : false;
				int parentId = buffer.getShort() &amp; 0xFFFF;
				if(parentId == 65535) {
					parentId = -1;
				}
				boolean noteable = buffer.get() == 1 ? true : false;
				int notedId = buffer.getShort() &amp; 0xFFFF;
				if(notedId == 65535) {
					notedId = -1;
				}
				boolean stackable = buffer.get() == 1 ? true : false;
				boolean members = buffer.get() == 1 ? true : false;
				int shopValue = buffer.getInt();
				definitions[id] = new ItemDefinition(id, name, examine, noted, noteable, stackable, parentId, notedId, members, shopValue);
			}
			logger.info("Loaded " + definitions.length + " item definitions.");
		} finally {
			raf.close();
		}
	}</code></p>
<p>So after reading this function, I thought it would be easy to convert it to C# and obtain the item definitions. Here’s my try:</p>
<p>[code]static void Main(string[] args) {<br>
string path = Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + “\itemDefinitions.bin”;</p>
<pre><code>        ArrayList list = new ArrayList();

        BinaryReader reader = new BinaryReader(File.OpenRead(path));
        int count = reader.ReadInt16() + 1;
        count = ~count;
        for (int i = 0; i &lt; count; i++) {
            int id = reader.ReadInt16();
            if (id == -1) {
                continue;
            }

            string name = readString(reader).Replace("(+)", "(p+)").Replace("(s)", "(p++)");
            string examine = readString(reader);
            bool noted = reader.ReadByte() == 1;

            int parentId = reader.ReadInt16() &amp; 0xFFFF;
            if (parentId == 65535) {
                parentId = -1;
            }

            bool noteable = reader.ReadByte() == 1;

            int notedId = reader.ReadInt16() &amp; 0xFFFF;
            if (notedId == 65535) {
                notedId = -1;
            }

            bool stackable = reader.ReadByte() == 1;
            bool members = reader.ReadByte() == 1;

            int shopValue = reader.ReadInt32();

            var item = new {
                ID = id,
                NAME = name,
                EXAMINE = examine,
                NOTED = noted,
                PARENTID = parentId,
                NOTEABLE = noteable,
                NOTEDID = notedId,
                STACKABLE = stackable,
                MEMBERS = members,
                SHOPVALUE = shopValue
            };

            list.Add(item);
        }

        int a = list.Count;
    }

    public static string readString(BinaryReader buffer) {
        StringBuilder builder = new StringBuilder();
        while (buffer.BaseStream.Position &lt; buffer.BaseStream.Length) {
            byte b = buffer.ReadByte();
            if (b == 0) {
                break;
            }
            builder.Append((char)b);
        }
        return builder.ToString();
    }[/code]
</code></pre>
<p>Now the problem is, the first time I read an Int16 (aka short) it returns a negative number <span class="bbcode-i">-10962</span> instead of <span class="bbcode-i">11734</span>, which is strange. So to test the other code I’ve made the count variable into a positive number using the <span class="bbcode-i">not</span> operator. After retrieving all of the data, the strings retrieved are correct, but the id’s, shopvalues and basicly every other variable was incorrect.</p>
<p>An image showing the difference:<br>
<img src="http://img1.uploadscreenshot.com/images/orig/8/22907510338-orig.png" alt width="" height=""></p>
<p>So now I wonder, it looks like I’m doing everything the same as in Java, how and why did I get different values? Any help will be much appriciated!</p>
<p>Files that may help you finding the problem:</p>
<p>[ul][li]<a href="http://www.mediafire.com/?jqoh6h798s6mofm" data-bbcode="true" rel="nofollow noopener">Rs2 - Server 474</a>[/li]<br>
[li]<a href="http://lh.rs/PC9NCTXoHeC6" data-bbcode="true" rel="nofollow noopener">The itemDefinitions.bin I’m using (same as in the rs2 - server 474 package)</a>[/li][/ul]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/itemdefinition-init-in-c-using-a-binaryreader/454615/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/itemdefinition-init-in-c-using-a-binaryreader/454615/1</link>
        <pubDate>Fri, 17 Aug 2012 11:19:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-454615-1</guid>
        <source url="https://forum.moparisthebest.com/t/itemdefinition-init-in-c-using-a-binaryreader/454615.rss">ItemDefinition.init() in C# using a BinaryReader</source>
      </item>
  </channel>
</rss>
