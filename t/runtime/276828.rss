<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Runtime</title>
    <link>https://forum.moparisthebest.com/t/runtime/276828</link>
    <description>Hello,
 
 In my application, I invoke:
 
[code]Runtime.getRuntime().exec(&quot;Test.exe&quot;);[/code]


 
 But unfortunately, when I run it through this java application, it uses A LOT of CPU usage. Much more than if i were to run it without java (by cmd prompt or by simply clicking it). I started playing around with the java app to see what was causing this abnormal defect, and I found out that if I add an infinite loop at the end of the program (after calling Runtime.exec), it would reduce CPU usage to normal.
 
 So basically, when I run my program like this:
 
[code]public class Test {
        
        public static void main(String[] args) {
                try {
                        Runtime.getRuntime().exec(&quot;Test.exe&quot;);
                } catch (Exception e) {e.printStackTrace();}
        }
}[/code]

 It uses too much CPU usage.
 
 But when I run this:
 
[code]public class Test {
        
        public static void main(String[] args) {
                try {
                        Runtime.getRuntime().exec(&quot;Test.exe&quot;);
                        while(true) {
                                Thread.sleep(100);
                        }
                } catch (Exception e) {e.printStackTrace();}
        }
}[/code]


 
 The CPU usage reduces to normal.
 
 Any idea on what can be going on?</description>
    
    <lastBuildDate>Sat, 02 May 2009 21:53:22 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/runtime/276828.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Runtime</title>
        <dc:creator><![CDATA[@yakman yakman]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/yakman">@yakman</a> wrote:</p>
          <blockquote>
              <p>probably because test.exe becomes a zombie after the java program exists<br>
java cant give you more control over starting other processes because it wont be portable</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/runtime/276828/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/runtime/276828/4</link>
        <pubDate>Sat, 02 May 2009 21:53:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-276828-4</guid>
        <source url="https://forum.moparisthebest.com/t/runtime/276828.rss">Runtime</source>
      </item>
      <item>
        <title>Runtime</title>
        <dc:creator><![CDATA[@nueb35 Nueb35]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/nueb35">@nueb35</a> wrote:</p>
          <blockquote>
              <p>[quote=“Taharok, post:2, topic:276828”]Try doing:</p>
<p>[code]<br>
public class Test {</p>
<pre><code>    public static void main(String[] args) {
            try {
                    Process process = Runtime.getRuntime().exec("Test.exe");
                    process.waitFor();
            } catch (Exception e) {e.printStackTrace();}
    }
</code></pre>
<p>}<br>
[/code][/quote]</p>
<p>that would just wait for the program to stop though, i think he wants the java process to end after it starts the other process, but without the cpu usage to shoot to the skies</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/runtime/276828/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/runtime/276828/3</link>
        <pubDate>Fri, 01 May 2009 22:24:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-276828-3</guid>
        <source url="https://forum.moparisthebest.com/t/runtime/276828.rss">Runtime</source>
      </item>
      <item>
        <title>Runtime</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <p>Try doing:</p>
<pre><code class="lang-auto">public class Test {
        
        public static void main(String[] args) {
                try {
                        Process process = Runtime.getRuntime().exec("Test.exe");
                        process.waitFor();
                } catch (Exception e) {e.printStackTrace();}
        }
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/runtime/276828/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/runtime/276828/2</link>
        <pubDate>Fri, 01 May 2009 22:19:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-276828-2</guid>
        <source url="https://forum.moparisthebest.com/t/runtime/276828.rss">Runtime</source>
      </item>
      <item>
        <title>Runtime</title>
        <dc:creator><![CDATA[@eczema3 eczema3]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/eczema3">@eczema3</a> wrote:</p>
          <blockquote>
              <p>Hello,</p>
<p>In my application, I invoke:</p>
<pre><code class="lang-auto">Runtime.getRuntime().exec("Test.exe");</code></pre>
<p>But unfortunately, when I run it through this java application, it uses A LOT of CPU usage. Much more than if i were to run it without java (by cmd prompt or by simply clicking it). I started playing around with the java app to see what was causing this abnormal defect, and I found out that if I add an infinite loop at the end of the program (after calling Runtime.exec), it would reduce CPU usage to normal.</p>
<p>So basically, when I run my program like this:</p>
<p>[code]public class Test {</p>
<pre><code>    public static void main(String[] args) {
            try {
                    Runtime.getRuntime().exec("Test.exe");
            } catch (Exception e) {e.printStackTrace();}
    }
</code></pre>
<p>}[/code]</p>
<p>It uses too much CPU usage.</p>
<p>But when I run this:</p>
<p>[code]public class Test {</p>
<pre><code>    public static void main(String[] args) {
            try {
                    Runtime.getRuntime().exec("Test.exe");
                    while(true) {
                            Thread.sleep(100);
                    }
            } catch (Exception e) {e.printStackTrace();}
    }
</code></pre>
<p>}[/code]</p>
<p>The CPU usage reduces to normal.</p>
<p>Any idea on what can be going on?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/runtime/276828/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/runtime/276828/1</link>
        <pubDate>Fri, 01 May 2009 21:20:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-276828-1</guid>
        <source url="https://forum.moparisthebest.com/t/runtime/276828.rss">Runtime</source>
      </item>
  </channel>
</rss>
