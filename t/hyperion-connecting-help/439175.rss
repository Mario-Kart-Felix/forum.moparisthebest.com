<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Hyperion Connecting help?</title>
    <link>https://forum.moparisthebest.com/t/hyperion-connecting-help/439175</link>
    <description>Now I load it and it says: Requesting Title Screen, then gives me a connection error. I know that&#39;s because it can&#39;t find the cache, so I went into signlink, and typed in [code]findcachedir[/code] And it led  me to one but it said it was unused. Where do I change the directory of the cache?

My signlink class:

[code=java]
// Decompiled by Jad v1.5.8f. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   signlink.java

package sign;

import java.applet.Applet;
import java.io.*;
import java.net.*;

public class signlink
    implements Runnable
{

    public static void startpriv(InetAddress inetaddress)
    {
        threadliveid = (int)(Math.random() * 99999999D);
        if(active)
        {
            try
            {
                Thread.sleep(500L);
            }
            catch(Exception _ex) { }
            active = false;
        }
        socketreq = 0;
        threadreq = null;
        dnsreq = null;
        savereq = null;
        urlreq = null;
        socketip = inetaddress;
        Thread thread = new Thread(new signlink());
        thread.setDaemon(true);
        thread.start();
        while(!active) 
            try
            {
                Thread.sleep(50L);
            }
            catch(Exception _ex) { }
    }

    public void run()
    {
        active = true;
        String s = cacheDir();
        uid = getuid(s);
        try
        {
            File file = new File(s + &quot;main_file_cache.dat&quot;);
            if(file.exists() &amp;&amp; file.length() &gt; 0x3200000L)
                file.delete();
            cache_dat = new RandomAccessFile(s + &quot;main_file_cache.dat&quot;, &quot;rw&quot;);
            for(int j = 0; j &lt; 5; j++)
                cache_idx[j] = new RandomAccessFile(s + &quot;main_file_cache.idx&quot; + j, &quot;rw&quot;);

        }
        catch(Exception exception)
        {
            exception.printStackTrace();
        }
        for(int i = threadliveid; threadliveid == i;)
        {
            if(socketreq != 0)
            {
                try
                {
                    socket = new Socket(socketip, socketreq);
                }
                catch(Exception _ex)
                {
                    socket = null;
                }
                socketreq = 0;
            } else
            if(threadreq != null)
            {
                Thread thread = new Thread(threadreq);
                thread.setDaemon(true);
                thread.start();
                thread.setPriority(threadreqpri);
                threadreq = null;
            } else
            if(dnsreq != null)
            {
                try
                {
                    dns = InetAddress.getByName(dnsreq).getHostName();
                }
                catch(Exception _ex)
                {
                    dns = &quot;unknown&quot;;
                }
                dnsreq = null;
            } else
            if(savereq != null)
            {
                if(savebuf != null)
                    try
                    {
                        FileOutputStream fileoutputstream = new FileOutputStream(s + savereq);
                        fileoutputstream.write(savebuf, 0, savelen);
                        fileoutputstream.close();
                    }
                    catch(Exception _ex) { }
                if(waveplay)
                {
                    wave = s + savereq;
                    waveplay = false;
                }
                if(midiplay)
                {
                    midi = s + savereq;
                    midiplay = false;
                }
                savereq = null;
            } else
            if(urlreq != null)
            {
                try
                {
                    urlstream = new DataInputStream((new URL(mainapp.getCodeBase(), urlreq)).openStream());
                }
                catch(Exception _ex)
                {
                    urlstream = null;
                }
                urlreq = null;
            }
            try
            {
                Thread.sleep(50L);
            }
            catch(Exception _ex) { }
        }

    }

    public static String cacheDir() {
    	return &quot;./cache/&quot;;
    }

    // Unused.
    public static String findcachedir()
    {
        String as[] = {
            &quot;c:/windows/&quot;, &quot;c:/winnt/&quot;, &quot;d:/windows/&quot;, &quot;d:/winnt/&quot;, &quot;e:/windows/&quot;, &quot;e:/winnt/&quot;, &quot;f:/windows/&quot;, &quot;f:/winnt/&quot;, &quot;c:/&quot;, &quot;~/&quot;, 
            &quot;/tmp/&quot;, &quot;&quot;, &quot;c:/rscache&quot;, &quot;/rscache&quot;
        };
        if(storeid &lt; 32 || storeid &gt; 34)
            storeid = 32;
        String s = &quot;.file_store_&quot; + storeid;
        for(int i = 0; i &lt; as.length; i++)
            try
            {
                String s1 = as[i];
                if(s1.length() &gt; 0)
                {
                    File file = new File(s1);
                    if(!file.exists())
                        continue;
                }
                File file1 = new File(s1 + s);
                if(file1.exists() || file1.mkdir())
                    return s1 + s + &quot;/&quot;;
            }
            catch(Exception _ex) { }

        return null;
    }

    public static int getuid(String s)
    {
        try
        {
            File file = new File(s + &quot;uid.dat&quot;);
            if(!file.exists() || file.length() &lt; 4L)
            {
                DataOutputStream dataoutputstream = new DataOutputStream(new FileOutputStream(s + &quot;uid.dat&quot;));
                dataoutputstream.writeInt((int)(Math.random() * 99999999D));
                dataoutputstream.close();
            }
        }
        catch(Exception _ex) { }
        try
        {
            DataInputStream datainputstream = new DataInputStream(new FileInputStream(s + &quot;uid.dat&quot;));
            int i = datainputstream.readInt();
            datainputstream.close();
            return i + 1;
        }
        catch(Exception _ex)
        {
            return 0;
        }
    }

    public static synchronized Socket opensocket(int i)
        throws IOException
    {
        for(socketreq = i; socketreq != 0;)
            try
            {
                Thread.sleep(50L);
            }
            catch(Exception _ex) { }

        if(socket == null)
            throw new IOException(&quot;could not open socket&quot;);
        else
            return socket;
    }

    public static synchronized DataInputStream openurl(String s)
        throws IOException
    {
        for(urlreq = s; urlreq != null;)
            try
            {
                Thread.sleep(50L);
            }
            catch(Exception _ex) { }

        if(urlstream == null)
            throw new IOException(&quot;could not open: &quot; + s);
        else
            return urlstream;
    }

    public static synchronized void dnslookup(String s)
    {
        dns = s;
        dnsreq = s;
    }

    public static synchronized void startthread(Runnable runnable, int i)
    {
        threadreqpri = i;
        threadreq = runnable;
    }

    public static synchronized boolean wavesave(byte abyte0[], int i)
    {
        if(i &gt; 0x1e8480)
            return false;
        if(savereq != null)
        {
            return false;
        } else
        {
            wavepos = (wavepos + 1) % 5;
            savelen = i;
            savebuf = abyte0;
            waveplay = true;
            savereq = &quot;sound&quot; + wavepos + &quot;.wav&quot;;
            return true;
        }
    }

    public static synchronized boolean wavereplay()
    {
        if(savereq != null)
        {
            return false;
        } else
        {
            savebuf = null;
            waveplay = true;
            savereq = &quot;sound&quot; + wavepos + &quot;.wav&quot;;
            return true;
        }
    }

    public static synchronized void midisave(byte abyte0[], int i)
    {
        if(i &gt; 0x1e8480)
            return;
        if(savereq != null)
        {
            return;
        } else
        {
            midipos = (midipos + 1) % 5;
            savelen = i;
            savebuf = abyte0;
            midiplay = true;
            savereq = &quot;jingle&quot; + midipos + &quot;.mid&quot;;
            return;
        }
    }

    public static void reporterror(String s)
    {
        if(!reporterror)
            return;
        if(!active)
            return;
        System.out.println(&quot;Error: &quot; + s);
        try
        {
            s = s.replace(&#39;:&#39;, &#39;_&#39;);
            s = s.replace(&#39;@&#39;, &#39;_&#39;);
            s = s.replace(&#39;&amp;&#39;, &#39;_&#39;);
            s = s.replace(&#39;#&#39;, &#39;_&#39;);
            DataInputStream datainputstream = openurl(&quot;reporterror&quot; + 377 + &quot;.cgi?error=&quot; + errorname + &quot; &quot; + s);
            datainputstream.readLine();
            datainputstream.close();
            return;
        }
        catch(IOException _ex)
        {
            return;
        }
    }

    public signlink()
    {
    }

    public static final int clientversion = 377;
    public static int uid;
    public static int storeid = 32;
    public static RandomAccessFile cache_dat = null;
    public static RandomAccessFile cache_idx[] = new RandomAccessFile[5];
    public static boolean sunjava;
    public static Applet mainapp = null;
    public static boolean active;
    public static int threadliveid;
    public static InetAddress socketip;
    public static int socketreq;
    public static Socket socket = null;
    public static int threadreqpri = 1;
    public static Runnable threadreq = null;
    public static String dnsreq = null;
    public static String dns = null;
    public static String urlreq = null;
    public static DataInputStream urlstream = null;
    public static int savelen;
    public static String savereq = null;
    public static byte savebuf[] = null;
    public static boolean midiplay;
    public static int midipos;
    public static String midi = null;
    public static int midivol;
    public static int midifade;
    public static boolean waveplay;
    public static int wavepos;
    public static String wave = null;
    public static int wavevol;
    public static boolean reporterror = true;
    public static String errorname = &quot;&quot;;

}
[/code]</description>
    
    <lastBuildDate>Tue, 10 Apr 2012 20:20:05 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/hyperion-connecting-help/439175.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Hyperion Connecting help?</title>
        <dc:creator><![CDATA[@TiVo TiVo]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tivo">@TiVo</a> wrote:</p>
          <blockquote>
              <p>Make sure the cache is in the right place. Try putting it in your C:\</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/hyperion-connecting-help/439175/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/hyperion-connecting-help/439175/6</link>
        <pubDate>Tue, 10 Apr 2012 20:20:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-439175-6</guid>
        <source url="https://forum.moparisthebest.com/t/hyperion-connecting-help/439175.rss">Hyperion Connecting help?</source>
      </item>
      <item>
        <title>Hyperion Connecting help?</title>
        <dc:creator><![CDATA[@Level_120_Dungeoneer Level 120 Dungeoneering]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/level_120_dungeoneer">@Level_120_Dungeoneer</a> wrote:</p>
          <blockquote>
              <p>Then how will I make the client connect and not give me errors? The cache is in the main directory of the client.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/hyperion-connecting-help/439175/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/hyperion-connecting-help/439175/5</link>
        <pubDate>Tue, 10 Apr 2012 15:00:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-439175-5</guid>
        <source url="https://forum.moparisthebest.com/t/hyperion-connecting-help/439175.rss">Hyperion Connecting help?</source>
      </item>
      <item>
        <title>Hyperion Connecting help?</title>
        <dc:creator><![CDATA[@imsuperman05 imsuperman05]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imsuperman05">@imsuperman05</a> wrote:</p>
          <blockquote>
              <p>Don’t mess with that.  Hyperion loads the cache server-sided, run the server then the client.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/hyperion-connecting-help/439175/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/hyperion-connecting-help/439175/4</link>
        <pubDate>Tue, 10 Apr 2012 15:00:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-439175-4</guid>
        <source url="https://forum.moparisthebest.com/t/hyperion-connecting-help/439175.rss">Hyperion Connecting help?</source>
      </item>
      <item>
        <title>Hyperion Connecting help?</title>
        <dc:creator><![CDATA[@Level_120_Dungeoneer Level 120 Dungeoneering]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/level_120_dungeoneer">@Level_120_Dungeoneer</a> wrote:</p>
          <blockquote>
              <p>Thank you, it worked.</p>
<p>Now I load it and it says: Requesting Title Screen, then gives me a connection error. I know that’s because it can’t find the cache, so I went into signlink, and typed in <code>findcachedir</code> And it led  me to one but it said it was unused. Where do I change the directory of the cache?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/hyperion-connecting-help/439175/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/hyperion-connecting-help/439175/3</link>
        <pubDate>Tue, 10 Apr 2012 14:58:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-439175-3</guid>
        <source url="https://forum.moparisthebest.com/t/hyperion-connecting-help/439175.rss">Hyperion Connecting help?</source>
      </item>
      <item>
        <title>Hyperion Connecting help?</title>
        <dc:creator><![CDATA[@imsuperman05 imsuperman05]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imsuperman05">@imsuperman05</a> wrote:</p>
          <blockquote>
              <p>change it to</p>
<p><a class="mention" href="/u/echo">@echo</a> off<br>
java -cp bin; client 10 0 highmem members 32<br>
pause</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/hyperion-connecting-help/439175/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/hyperion-connecting-help/439175/2</link>
        <pubDate>Tue, 10 Apr 2012 14:53:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-439175-2</guid>
        <source url="https://forum.moparisthebest.com/t/hyperion-connecting-help/439175.rss">Hyperion Connecting help?</source>
      </item>
      <item>
        <title>Hyperion Connecting help?</title>
        <dc:creator><![CDATA[@Level_120_Dungeoneer Level 120 Dungeoneering]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/level_120_dungeoneer">@Level_120_Dungeoneer</a> wrote:</p>
          <blockquote>
              <p>Now I load it and it says: Requesting Title Screen, then gives me a connection error. I know that’s because it can’t find the cache, so I went into signlink, and typed in <code>findcachedir</code> And it led  me to one but it said it was unused. Where do I change the directory of the cache?</p>
<p>My signlink class:</p>
<pre><code class="lang-auto">// Decompiled by Jad v1.5.8f. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   signlink.java

package sign;

import java.applet.Applet;
import java.io.*;
import java.net.*;

public class signlink
    implements Runnable
{

    public static void startpriv(InetAddress inetaddress)
    {
        threadliveid = (int)(Math.random() * 99999999D);
        if(active)
        {
            try
            {
                Thread.sleep(500L);
            }
            catch(Exception _ex) { }
            active = false;
        }
        socketreq = 0;
        threadreq = null;
        dnsreq = null;
        savereq = null;
        urlreq = null;
        socketip = inetaddress;
        Thread thread = new Thread(new signlink());
        thread.setDaemon(true);
        thread.start();
        while(!active) 
            try
            {
                Thread.sleep(50L);
            }
            catch(Exception _ex) { }
    }

    public void run()
    {
        active = true;
        String s = cacheDir();
        uid = getuid(s);
        try
        {
            File file = new File(s + "main_file_cache.dat");
            if(file.exists() &amp;&amp; file.length() &gt; 0x3200000L)
                file.delete();
            cache_dat = new RandomAccessFile(s + "main_file_cache.dat", "rw");
            for(int j = 0; j &lt; 5; j++)
                cache_idx[j] = new RandomAccessFile(s + "main_file_cache.idx" + j, "rw");

        }
        catch(Exception exception)
        {
            exception.printStackTrace();
        }
        for(int i = threadliveid; threadliveid == i;)
        {
            if(socketreq != 0)
            {
                try
                {
                    socket = new Socket(socketip, socketreq);
                }
                catch(Exception _ex)
                {
                    socket = null;
                }
                socketreq = 0;
            } else
            if(threadreq != null)
            {
                Thread thread = new Thread(threadreq);
                thread.setDaemon(true);
                thread.start();
                thread.setPriority(threadreqpri);
                threadreq = null;
            } else
            if(dnsreq != null)
            {
                try
                {
                    dns = InetAddress.getByName(dnsreq).getHostName();
                }
                catch(Exception _ex)
                {
                    dns = "unknown";
                }
                dnsreq = null;
            } else
            if(savereq != null)
            {
                if(savebuf != null)
                    try
                    {
                        FileOutputStream fileoutputstream = new FileOutputStream(s + savereq);
                        fileoutputstream.write(savebuf, 0, savelen);
                        fileoutputstream.close();
                    }
                    catch(Exception _ex) { }
                if(waveplay)
                {
                    wave = s + savereq;
                    waveplay = false;
                }
                if(midiplay)
                {
                    midi = s + savereq;
                    midiplay = false;
                }
                savereq = null;
            } else
            if(urlreq != null)
            {
                try
                {
                    urlstream = new DataInputStream((new URL(mainapp.getCodeBase(), urlreq)).openStream());
                }
                catch(Exception _ex)
                {
                    urlstream = null;
                }
                urlreq = null;
            }
            try
            {
                Thread.sleep(50L);
            }
            catch(Exception _ex) { }
        }

    }

    public static String cacheDir() {
    	return "./cache/";
    }

    // Unused.
    public static String findcachedir()
    {
        String as[] = {
            "c:/windows/", "c:/winnt/", "d:/windows/", "d:/winnt/", "e:/windows/", "e:/winnt/", "f:/windows/", "f:/winnt/", "c:/", "~/", 
            "/tmp/", "", "c:/rscache", "/rscache"
        };
        if(storeid &lt; 32 || storeid &gt; 34)
            storeid = 32;
        String s = ".file_store_" + storeid;
        for(int i = 0; i &lt; as.length; i++)
            try
            {
                String s1 = as[i];
                if(s1.length() &gt; 0)
                {
                    File file = new File(s1);
                    if(!file.exists())
                        continue;
                }
                File file1 = new File(s1 + s);
                if(file1.exists() || file1.mkdir())
                    return s1 + s + "/";
            }
            catch(Exception _ex) { }

        return null;
    }

    public static int getuid(String s)
    {
        try
        {
            File file = new File(s + "uid.dat");
            if(!file.exists() || file.length() &lt; 4L)
            {
                DataOutputStream dataoutputstream = new DataOutputStream(new FileOutputStream(s + "uid.dat"));
                dataoutputstream.writeInt((int)(Math.random() * 99999999D));
                dataoutputstream.close();
            }
        }
        catch(Exception _ex) { }
        try
        {
            DataInputStream datainputstream = new DataInputStream(new FileInputStream(s + "uid.dat"));
            int i = datainputstream.readInt();
            datainputstream.close();
            return i + 1;
        }
        catch(Exception _ex)
        {
            return 0;
        }
    }

    public static synchronized Socket opensocket(int i)
        throws IOException
    {
        for(socketreq = i; socketreq != 0;)
            try
            {
                Thread.sleep(50L);
            }
            catch(Exception _ex) { }

        if(socket == null)
            throw new IOException("could not open socket");
        else
            return socket;
    }

    public static synchronized DataInputStream openurl(String s)
        throws IOException
    {
        for(urlreq = s; urlreq != null;)
            try
            {
                Thread.sleep(50L);
            }
            catch(Exception _ex) { }

        if(urlstream == null)
            throw new IOException("could not open: " + s);
        else
            return urlstream;
    }

    public static synchronized void dnslookup(String s)
    {
        dns = s;
        dnsreq = s;
    }

    public static synchronized void startthread(Runnable runnable, int i)
    {
        threadreqpri = i;
        threadreq = runnable;
    }

    public static synchronized boolean wavesave(byte abyte0[], int i)
    {
        if(i &gt; 0x1e8480)
            return false;
        if(savereq != null)
        {
            return false;
        } else
        {
            wavepos = (wavepos + 1) % 5;
            savelen = i;
            savebuf = abyte0;
            waveplay = true;
            savereq = "sound" + wavepos + ".wav";
            return true;
        }
    }

    public static synchronized boolean wavereplay()
    {
        if(savereq != null)
        {
            return false;
        } else
        {
            savebuf = null;
            waveplay = true;
            savereq = "sound" + wavepos + ".wav";
            return true;
        }
    }

    public static synchronized void midisave(byte abyte0[], int i)
    {
        if(i &gt; 0x1e8480)
            return;
        if(savereq != null)
        {
            return;
        } else
        {
            midipos = (midipos + 1) % 5;
            savelen = i;
            savebuf = abyte0;
            midiplay = true;
            savereq = "jingle" + midipos + ".mid";
            return;
        }
    }

    public static void reporterror(String s)
    {
        if(!reporterror)
            return;
        if(!active)
            return;
        System.out.println("Error: " + s);
        try
        {
            s = s.replace(':', '_');
            s = s.replace('@', '_');
            s = s.replace('&amp;', '_');
            s = s.replace('#', '_');
            DataInputStream datainputstream = openurl("reporterror" + 377 + ".cgi?error=" + errorname + " " + s);
            datainputstream.readLine();
            datainputstream.close();
            return;
        }
        catch(IOException _ex)
        {
            return;
        }
    }

    public signlink()
    {
    }

    public static final int clientversion = 377;
    public static int uid;
    public static int storeid = 32;
    public static RandomAccessFile cache_dat = null;
    public static RandomAccessFile cache_idx[] = new RandomAccessFile[5];
    public static boolean sunjava;
    public static Applet mainapp = null;
    public static boolean active;
    public static int threadliveid;
    public static InetAddress socketip;
    public static int socketreq;
    public static Socket socket = null;
    public static int threadreqpri = 1;
    public static Runnable threadreq = null;
    public static String dnsreq = null;
    public static String dns = null;
    public static String urlreq = null;
    public static DataInputStream urlstream = null;
    public static int savelen;
    public static String savereq = null;
    public static byte savebuf[] = null;
    public static boolean midiplay;
    public static int midipos;
    public static String midi = null;
    public static int midivol;
    public static int midifade;
    public static boolean waveplay;
    public static int wavepos;
    public static String wave = null;
    public static int wavevol;
    public static boolean reporterror = true;
    public static String errorname = "";

}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/hyperion-connecting-help/439175/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/hyperion-connecting-help/439175/1</link>
        <pubDate>Tue, 10 Apr 2012 14:51:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-439175-1</guid>
        <source url="https://forum.moparisthebest.com/t/hyperion-connecting-help/439175.rss">Hyperion Connecting help?</source>
      </item>
  </channel>
</rss>
