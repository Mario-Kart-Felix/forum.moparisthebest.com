<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Using * in with String.matches?</title>
    <link>https://forum.moparisthebest.com/t/using-in-with-string-matches/16679</link>
    <description>[code=java]
import java.io.*;
import java.io.IOException;

public class determineFileType {	

	public static boolean WriteAndReadFile() {
		BufferedReader CharLine = null;
		PrintWriter writeC = null;
		String dataOfLn1;
		String dataOfLn2;
		String j2cpp = &quot;//J2CPP&quot;;
		try{
			writeC = new PrintWriter(&quot;mehn.ini&quot;);
			writeC.println(&quot;*.java&quot;);
			writeC.print(&quot;//J2CPP&quot;);
			writeC.close();
		}
		catch (IOException e) {}
		try{
			CharLine = new BufferedReader(new FileReader(&quot;mehn.ini&quot;));
		}
		catch(FileNotFoundException fileex){
            System.out.println(&quot;mehn.ini not found!&quot;);
            return false;
        	}
        try{
            dataOfLn1 = CharLine.readLine();
            dataOfLn2 = CharLine.readLine();
        }
        catch(IOException ioexception){
            System.out.println(&quot;Error.&quot;);
            return false;
        }
        System.out.println(dataOfLn1);
        System.out.println(dataOfLn2);
        if(dataOfLn2.matches(j2cpp)){
        	if(dataOfLn1.matches([B]&quot;*.cpp&quot;[/B])){
        		System.out.println(&quot;File type: C++&quot;);
        	}
        	else if(dataOfLn1.matches([B]&quot;*.java&quot;[/B])){
        		System.out.println(&quot;File type: Java&quot;);
        	}
        	else{
        		System.out.println(&quot;Problem!&quot;);
        	}
        }
        else{
        	System.exit(0);
        }
        
        return false;
        }	
}
[/code]
The code bolded won&#39;t work, so how would I go about using an asterisk like that?(make it so it represents anything...from FileHandler.java to meh.java)</description>
    
    <lastBuildDate>Sun, 01 Oct 2006 06:44:55 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/using-in-with-string-matches/16679.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Using * in with String.matches?</title>
        <dc:creator><![CDATA[@White_Castle White Castle]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/white_castle">@White_Castle</a> wrote:</p>
          <blockquote>
              <p>filename.endsWith(“java”) would be easier…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/using-in-with-string-matches/16679/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/using-in-with-string-matches/16679/2</link>
        <pubDate>Sun, 01 Oct 2006 06:44:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-16679-2</guid>
        <source url="https://forum.moparisthebest.com/t/using-in-with-string-matches/16679.rss">Using * in with String.matches?</source>
      </item>
      <item>
        <title>Using * in with String.matches?</title>
        <dc:creator><![CDATA[@googlethis googlethis]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/googlethis">@googlethis</a> wrote:</p>
          <blockquote>
              <pre><code class="lang-auto">import java.io.*;
import java.io.IOException;

public class determineFileType {	

	public static boolean WriteAndReadFile() {
		BufferedReader CharLine = null;
		PrintWriter writeC = null;
		String dataOfLn1;
		String dataOfLn2;
		String j2cpp = "//J2CPP";
		try{
			writeC = new PrintWriter("mehn.ini");
			writeC.println("*.java");
			writeC.print("//J2CPP");
			writeC.close();
		}
		catch (IOException e) {}
		try{
			CharLine = new BufferedReader(new FileReader("mehn.ini"));
		}
		catch(FileNotFoundException fileex){
            System.out.println("mehn.ini not found!");
            return false;
        	}
        try{
            dataOfLn1 = CharLine.readLine();
            dataOfLn2 = CharLine.readLine();
        }
        catch(IOException ioexception){
            System.out.println("Error.");
            return false;
        }
        System.out.println(dataOfLn1);
        System.out.println(dataOfLn2);
        if(dataOfLn2.matches(j2cpp)){
        	if(dataOfLn1.matches([B]"*.cpp"[/B])){
        		System.out.println("File type: C++");
        	}
        	else if(dataOfLn1.matches([B]"*.java"[/B])){
        		System.out.println("File type: Java");
        	}
        	else{
        		System.out.println("Problem!");
        	}
        }
        else{
        	System.exit(0);
        }
        
        return false;
        }	
}</code></pre>
<p>The code bolded won’t work, so how would I go about using an asterisk like that?(make it so it represents anything…from FileHandler.java to meh.java)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/using-in-with-string-matches/16679/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/using-in-with-string-matches/16679/1</link>
        <pubDate>Sun, 01 Oct 2006 05:24:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-16679-1</guid>
        <source url="https://forum.moparisthebest.com/t/using-in-with-string-matches/16679.rss">Using * in with String.matches?</source>
      </item>
  </channel>
</rss>
