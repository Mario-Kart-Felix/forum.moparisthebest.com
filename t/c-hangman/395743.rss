<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[C] Hangman</title>
    <link>https://forum.moparisthebest.com/t/c-hangman/395743</link>
    <description>Thoughts?[code=c]#define _CRT_SECURE_NO_WARNINGS

#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;time.h&gt;

#define DICT_SIZE 3
#define MAXSIZE 100

const char words[DICT_SIZE][MAXSIZE] = {
	{&quot;query&quot;},
	{&quot;rhythm&quot;},
	{&quot;jazz&quot;}
};

int limbs[6] = {0,0,0,0,0,0}; //head,torso,arm,arm,leg,leg

void print_misses(char misses[]); // print the m,i,s,e,d letters
void print_progress(int word,char guesses[]); // print their p r o g r _ s s
void print_guillotine();

int main()
{
	char in;
	char guesses[26],misses[26],letters[26];
	int idx,idx_,progress_length = 0,word,guess_c = -1,misses_c = -1,limb_c = -1,letter_c = -1;
	srand((unsigned)time(NULL));
	word = rand() % DICT_SIZE; //unrecommended
	for(idx = 0; idx &lt; 26; ++idx)
		guesses[idx] = misses[idx] = letters[idx] = &#39;\0&#39;;
	for(idx = 0; idx &lt; MAXSIZE; ++idx) //store letter count (to determine if they&#39;ve won)
	{
		int in_letters = 0;
		if(words[word][idx] == &#39;\0&#39;)
			break;
		for(idx_ = 0; idx_ &lt; 26; ++idx_)
		{
			if(letters[idx_] == &#39;\0&#39;)
				break;
			if(words[word][idx] == letters[idx_])
				in_letters = 1;
		}
		if(in_letters == 0)
			letters[++letter_c] = words[word][idx];
	}
	++letter_c; //because arrays start at 0, we need to add 1
	do
	{
		int in_c = 0,success = 0;
		print_guillotine();
		print_progress(word,guesses);
		print_misses(misses);
		if(progress_length == letter_c)
		{
			printf(&quot;Congratulations, you won!\n&quot;);
			return 0;
		}
		printf(&quot;Enter a letter: &quot;);
		while(scanf(&quot;%c&quot;,&amp;in) == 1) // get the character
		{
			int guessed = 0;
			++in_c;
			if(in == &#39;\n&#39;)
			{
				in_c = 0;
				continue;
			}
			if(in_c &gt; 1)
				continue;
			if(!((in &gt;= &#39;a&#39; &amp;&amp; in &lt;= &#39;z&#39;) || (in &gt;= &#39;A&#39; &amp;&amp; in &lt;= &#39;Z&#39;))) // not a letter!
			{
				printf(&quot;Invalid input. Try again: &quot;);
				continue;
			}
			if(in &gt;= &#39;A&#39; &amp;&amp; in &lt;= &#39;Z&#39;) //tolower
				in = (char)((int)in + &#39;a&#39; - &#39;A&#39;);
			for(idx = 0; idx &lt; 26; ++idx)
				if(guesses[idx] == in || misses[idx] == in)
				{
					printf(&quot;You already guessed that letter. Try again: &quot;);
					guessed = 1;
					break;
				}
			if(guessed == 1)
				continue;
			break;
		}
		guesses[++guess_c] = in;
		for(idx = 0; idx &lt; MAXSIZE; ++idx) // check if guess is in word
		{
			if(words[word][idx] == &#39;\0&#39;)
				break;
			if(in == words[word][idx]) // we hit the letter, so we break
			{
				success = 1;
				break;
			}
		}
		if(success == 0) // we didn&#39;t hit the letter, so we add a limb and a miss
		{
			limbs[++limb_c] = 1;
			misses[++misses_c] = in;
		}
		else
			++progress_length;
	} while(limb_c &lt; 5);
	printf(&quot;You lost. The word was \&quot;%s\&quot;. Better luck next time.\n&quot;,words[word]);
	return 0;
}

void print_progress(int word,char guesses[])
{
	int idx,idx_;
	char letter;
	for(idx = 0; idx &lt; MAXSIZE; ++idx)
	{
		int printed = 0;
		if(words[word][idx] == &#39;\0&#39;)
			break;
		else
		{
			if(idx == 0)
				printf(&quot;Progress: &quot;);
		}
		letter = words[word][idx];
		for(idx_ = 0; idx_ &lt; MAXSIZE; ++idx_)
		{
			if(guesses[idx_] == &#39;\0&#39;)
				break;
			if(letter == guesses[idx_])
			{
				printed = 1;
				printf(&quot;%c &quot;,guesses[idx_]);
			}
		}
		if(printed == 0)
			printf(&quot;_ &quot;);
	}
	printf(&quot;\n&quot;);
}

void print_misses(char misses[])
{
	int idx;
	if(misses[0] == &#39;\0&#39;)
		return;
	printf(&quot;Misses:   &quot;);
	printf(&quot;%c&quot;,misses[0]);
	for(idx = 1; idx &lt; MAXSIZE; ++idx)
	{
		if(!((misses[idx] &gt;= &#39;a&#39; &amp;&amp; misses[idx] &lt;= &#39;z&#39;) || (misses[idx] &gt;= &#39;A&#39; &amp;&amp; misses[idx] &lt;= &#39;Z&#39;)))
			break;
		printf(&quot;,%c&quot;,misses[idx]);
	}
	printf(&quot;\n&quot;);
}

void print_guillotine()
{
//     ------
//     |    |
//     o    |
//    /|\   |
//    / \   |
//          |
// ----------
	printf(&quot;\n    ------\n&quot;);
	printf(&quot;    |    |\n&quot;);
	printf(&quot;    &quot;);
		printf((limbs[0] == 1 ? &quot;o&quot; : &quot; &quot;));
		printf(&quot;    |\n&quot;);
	printf(&quot;   &quot;);
		printf((limbs[2] == 1 ? &quot;/&quot; : &quot; &quot;));
		printf((limbs[1] == 1 ? &quot;|&quot; : &quot; &quot;));
		printf((limbs[3] == 1 ? &quot;\\&quot; : &quot; &quot;));
		printf(&quot;   |\n&quot;);
	printf(&quot;   &quot;);
		printf((limbs[4] == 1 ? &quot;/&quot; : &quot; &quot;));
		printf(&quot; &quot;);
		printf((limbs[5] == 1 ? &quot;\\&quot; : &quot; &quot;));
		printf(&quot;   |\n&quot;);
	printf(&quot;         |\n&quot;);
	printf(&quot;----------\n&quot;);
}[/code]</description>
    
    <lastBuildDate>Fri, 27 May 2011 18:13:47 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/c-hangman/395743.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[C] Hangman</title>
        <dc:creator><![CDATA[@sanga282 sanga282]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sanga282">@sanga282</a> wrote:</p>
          <blockquote>
              <p>just for a comparison here’s mine in C++</p>
<p>[code=cpp]#include <br>
#include <br>
#include <br>
#include &lt;ctype.h&gt;<br>
#include <br>
#include <br>
<span class="hashtag">#include</span> &lt;time.h&gt;</p>
<p>using namespace std;</p>
<p>string guess;<br>
int length;<br>
char guessChar;<br>
string answer;<br>
int ansLength;<br>
int Gcontrol;<br>
int correct;<br>
int incorrect;<br>
char playAgain;<br>
int lives;<br>
int index;<br>
int randomNum;<br>
int spaceCount;<br>
ifstream inFile;<br>
string parser;</p>
<p>int main(){<br>
lives = 6;<br>
Gcontrol = 0;<br>
correct = 0;<br>
//initializing the preliminary variables<br>
inFile.open(“words.txt”);<br>
getline(inFile, parser);<br>
spaceCount = (char) count(parser.begin(),parser.end(), ’ ‘) + 1;<br>
string* answers = NULL;<br>
answers = new string[spaceCount];<br>
for(int i = 0; i &lt; spaceCount; i++){<br>
index = parser.find(’ ');<br>
answers[i] = parser.substr(0, index);<br>
parser = parser.substr(index+1, parser.length()-1);<br>
}<br>
srand (time(NULL) );<br>
randomNum = rand() % spaceCount;<br>
answer = answers[randomNum];<br>
ansLength = answer.length();<br>
while(Gcontrol == 0){<br>
cout &lt;&lt; “Welcome to hangman!, the first word has been chosen please enter letters to guess letters or a word to attempt the word” &lt;&lt; endl;<br>
// create dynamic array;<br>
char* aa = NULL;<br>
int aaSize;<br>
aaSize = ansLength;<br>
aa = new char[aaSize];<br>
for(int i=0; i &lt; aaSize; i++){<br>
aa[i] = 0;<br>
}<br>
int k;<br>
k = 0;<br>
while(k &lt; ansLength){<br>
aa[k] = answer.at(k);<br>
k++;<br>
}<br>
//creating a second dynamic array to compare to the first<br>
int* testArray = NULL;<br>
int ttSize;<br>
ttSize = ansLength;<br>
testArray = new int[ttSize];<br>
for(int i=0; i &lt; ttSize; i++){<br>
testArray[i] = 0;<br>
}</p>
<pre><code>correct = 0;
while(correct != ansLength &amp;&amp; lives &gt; 0){
	for( int i = 0; i &lt; ansLength; i++){
		if(testArray[i] == 1){
			cout &lt;&lt; aa[i];
		}
		else {
			cout &lt;&lt; '_';
		}
	}
	cout &lt;&lt; endl;
cin &gt;&gt; guess;
length = guess.length();
incorrect = 0;
if(length == 1){
	int i;
	i = 0;
	guessChar = guess.at(0);
	if(isupper(guessChar)){
		guessChar = tolower(guessChar);
	}

	while(i &lt; ansLength){
		if(guessChar == answer.at(i)){
			correct++;
			testArray[i] = 1;
		}
		else{
			incorrect++;
		}
		i++;
	}
		if(incorrect == ansLength) {
			lives--;
			cout &lt;&lt; "sorry no letters matched this one" &lt;&lt; endl;
			cout &lt;&lt; "You have " &lt;&lt; lives &lt;&lt; " lives remaining" &lt;&lt; endl;
		}
}
	incorrect = 0;
if(guess == answer &amp;&amp; length != 1){
	correct = ansLength;
	cout &lt;&lt; "Well done you got it right!" &lt;&lt; endl;
			}
if(guess != answer &amp;&amp; length != 1)
{
	cout &lt;&lt; "Sorry that is wrong" &lt;&lt; endl;
	lives --;
	cout &lt;&lt; "You have " &lt;&lt; lives &lt;&lt; " lives remaining" &lt;&lt; endl;
}
	
	}
if(correct == ansLength){
	cout &lt;&lt; answer &lt;&lt; endl;
}
cout &lt;&lt; "would you like to play again?" &lt;&lt; endl;
cin &gt;&gt; playAgain;
if(playAgain != 'y'){
	Gcontrol = 1;
}
//destroy the unused dynamic arrays
delete [] aa;
delete [] testArray;
</code></pre>
<p>}<br>
delete[] answers;<br>
return 0;<br>
}<br>
[/code]<br>
requires a words.txt file in the same directory with words organized like:</p>
<pre><code class="lang-auto"></code></pre>
<p>etc just one space between each word all on the same line</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-hangman/395743/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-hangman/395743/2</link>
        <pubDate>Fri, 27 May 2011 18:13:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-395743-2</guid>
        <source url="https://forum.moparisthebest.com/t/c-hangman/395743.rss">[C] Hangman</source>
      </item>
      <item>
        <title>[C] Hangman</title>
        <dc:creator><![CDATA[@z z]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/z">@z</a> wrote:</p>
          <blockquote>
              <p>Thoughts?[code=c]<span class="hashtag">#define</span> _CRT_SECURE_NO_WARNINGS</p>
<p><span class="hashtag">#include</span> &lt;stdio.h&gt;<br>
<span class="hashtag">#include</span> &lt;stdlib.h&gt;<br>
<span class="hashtag">#include</span> &lt;time.h&gt;</p>
<p><span class="hashtag">#define</span> DICT_SIZE 3<br>
<span class="hashtag">#define</span> MAXSIZE 100</p>
<p>const char words[DICT_SIZE][MAXSIZE] = {<br>
{“query”},<br>
{“rhythm”},<br>
{“jazz”}<br>
};</p>
<p>int limbs[6] = {0,0,0,0,0,0}; //head,torso,arm,arm,leg,leg</p>
<p>void print_misses(char misses[]); // print the m,i,s,e,d letters<br>
void print_progress(int word,char guesses[]); // print their p r o g r _ s s<br>
void print_guillotine();</p>
<p>int main()<br>
{<br>
char in;<br>
char guesses[26],misses[26],letters[26];<br>
int idx,idx_,progress_length = 0,word,guess_c = -1,misses_c = -1,limb_c = -1,letter_c = -1;<br>
srand((unsigned)time(NULL));<br>
word = rand() % DICT_SIZE; //unrecommended<br>
for(idx = 0; idx &lt; 26; ++idx)<br>
guesses[idx] = misses[idx] = letters[idx] = ‘\0’;<br>
for(idx = 0; idx &lt; MAXSIZE; ++idx) //store letter count (to determine if they’ve won)<br>
{<br>
int in_letters = 0;<br>
if(words[word][idx] == ‘\0’)<br>
break;<br>
for(idx_ = 0; idx_ &lt; 26; ++idx_)<br>
{<br>
if(letters[idx_] == ‘\0’)<br>
break;<br>
if(words[word][idx] == letters[idx_])<br>
in_letters = 1;<br>
}<br>
if(in_letters == 0)<br>
letters[++letter_c] = words[word][idx];<br>
}<br>
++letter_c; //because arrays start at 0, we need to add 1<br>
do<br>
{<br>
int in_c = 0,success = 0;<br>
print_guillotine();<br>
print_progress(word,guesses);<br>
print_misses(misses);<br>
if(progress_length == letter_c)<br>
{<br>
printf(“Congratulations, you won!\n”);<br>
return 0;<br>
}<br>
printf(“Enter a letter: “);<br>
while(scanf(”%c”,&amp;in) == 1) // get the character<br>
{<br>
int guessed = 0;<br>
++in_c;<br>
if(in == ‘\n’)<br>
{<br>
in_c = 0;<br>
continue;<br>
}<br>
if(in_c &gt; 1)<br>
continue;<br>
if(!((in &gt;= ‘a’ &amp;&amp; in &lt;= ‘z’) || (in &gt;= ‘A’ &amp;&amp; in &lt;= ‘Z’))) // not a letter!<br>
{<br>
printf("Invalid input. Try again: ");<br>
continue;<br>
}<br>
if(in &gt;= ‘A’ &amp;&amp; in &lt;= ‘Z’) //tolower<br>
in = (char)((int)in + ‘a’ - ‘A’);<br>
for(idx = 0; idx &lt; 26; ++idx)<br>
if(guesses[idx] == in || misses[idx] == in)<br>
{<br>
printf("You already guessed that letter. Try again: ");<br>
guessed = 1;<br>
break;<br>
}<br>
if(guessed == 1)<br>
continue;<br>
break;<br>
}<br>
guesses[++guess_c] = in;<br>
for(idx = 0; idx &lt; MAXSIZE; ++idx) // check if guess is in word<br>
{<br>
if(words[word][idx] == ‘\0’)<br>
break;<br>
if(in == words[word][idx]) // we hit the letter, so we break<br>
{<br>
success = 1;<br>
break;<br>
}<br>
}<br>
if(success == 0) // we didn’t hit the letter, so we add a limb and a miss<br>
{<br>
limbs[++limb_c] = 1;<br>
misses[++misses_c] = in;<br>
}<br>
else<br>
++progress_length;<br>
} while(limb_c &lt; 5);<br>
printf(“You lost. The word was “%s”. Better luck next time.\n”,words[word]);<br>
return 0;<br>
}</p>
<p>void print_progress(int word,char guesses[])<br>
{<br>
int idx,idx_;<br>
char letter;<br>
for(idx = 0; idx &lt; MAXSIZE; ++idx)<br>
{<br>
int printed = 0;<br>
if(words[word][idx] == ‘\0’)<br>
break;<br>
else<br>
{<br>
if(idx == 0)<br>
printf(“Progress: “);<br>
}<br>
letter = words[word][idx];<br>
for(idx_ = 0; idx_ &lt; MAXSIZE; ++idx_)<br>
{<br>
if(guesses[idx_] == ‘\0’)<br>
break;<br>
if(letter == guesses[idx_])<br>
{<br>
printed = 1;<br>
printf(”%c “,guesses[idx_]);<br>
}<br>
}<br>
if(printed == 0)<br>
printf(”_ “);<br>
}<br>
printf(”\n”);<br>
}</p>
<p>void print_misses(char misses[])<br>
{<br>
int idx;<br>
if(misses[0] == ‘\0’)<br>
return;<br>
printf(“Misses:   “);<br>
printf(”%c”,misses[0]);<br>
for(idx = 1; idx &lt; MAXSIZE; ++idx)<br>
{<br>
if(!((misses[idx] &gt;= ‘a’ &amp;&amp; misses[idx] &lt;= ‘z’) || (misses[idx] &gt;= ‘A’ &amp;&amp; misses[idx] &lt;= ‘Z’)))<br>
break;<br>
printf(",%c",misses[idx]);<br>
}<br>
printf("\n");<br>
}</p>
<p>void print_guillotine()<br>
{<br>
//     ------<br>
//     |    |<br>
//     o    |<br>
//    /|\   |<br>
//    / \   |<br>
//          |<br>
// ----------<br>
printf("\n    ------\n");<br>
printf("    |    |\n");<br>
printf("    “);<br>
printf((limbs[0] == 1 ? “o” : " “));<br>
printf(”    |\n”);<br>
printf("   “);<br>
printf((limbs[2] == 1 ? “/” : " “));<br>
printf((limbs[1] == 1 ? “|” : " “));<br>
printf((limbs[3] == 1 ? “\” : " “));<br>
printf(”   |\n”);<br>
printf(”   “);<br>
printf((limbs[4] == 1 ? “/” : " “));<br>
printf(” “);<br>
printf((limbs[5] == 1 ? “\” : " “));<br>
printf(”   |\n”);<br>
printf(”         |\n”);<br>
printf("----------\n");<br>
}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-hangman/395743/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-hangman/395743/1</link>
        <pubDate>Fri, 20 May 2011 06:52:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-395743-1</guid>
        <source url="https://forum.moparisthebest.com/t/c-hangman/395743.rss">[C] Hangman</source>
      </item>
  </channel>
</rss>
