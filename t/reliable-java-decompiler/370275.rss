<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Reliable Java Decompiler</title>
    <link>https://forum.moparisthebest.com/t/reliable-java-decompiler/370275</link>
    <description>I got an idea a few days ago, and have been working on it since then, and it&#39;s turning out pretty good so far.  I&#39;m just concerned about how helpful people will find it.

Basically, it should decompile ANY valid java bytecode, obfuscated or not, into valid java source code.  The downside being it basically takes bytecode instructions and converts them directly back into equivalent source code statements, so it doesn&#39;t produce very pretty source code.  In fact, it is basically like reading raw JVM instructions, but in the source code.  Would you still find this helpful?  I think it might still be, since you can do things like insert arbitrary code and not worry about fixing the stack like you have to do when you play with bytecode.

I&#39;ll hopefully have some examples of the code produced tonight, but if not it&#39;ll be the weekend.

If someone wants to help me out in this, I could use a test class that utilizes every instruction and construct in the Java language.</description>
    
    <lastBuildDate>Wed, 26 Oct 2011 02:18:25 +0000</lastBuildDate>
    <category>Community Inside Talk</category>
    <atom:link href="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Reliable Java Decompiler</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>good luck with that</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/32">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/32</link>
        <pubDate>Wed, 26 Oct 2011 02:18:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-370275-32</guid>
        <source url="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275.rss">Reliable Java Decompiler</source>
      </item>
      <item>
        <title>Reliable Java Decompiler</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>So judging by how fernflower chokes on the new client, I may have to finish up this thing so we can get some workable source code.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/31">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/31</link>
        <pubDate>Wed, 26 Oct 2011 01:43:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-370275-31</guid>
        <source url="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275.rss">Reliable Java Decompiler</source>
      </item>
      <item>
        <title>Reliable Java Decompiler</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>Looks like my patch was accepted and committed, so now it’s an official part of XMLVM.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/30">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/30</link>
        <pubDate>Sun, 26 Dec 2010 06:04:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-370275-30</guid>
        <source url="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275.rss">Reliable Java Decompiler</source>
      </item>
      <item>
        <title>Reliable Java Decompiler</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>For anyone interested, I got around to finishing this up and submitting a patch to the xmlvm developers, you can get and apply the patch too from here:<br>
<a href="http://xmlvm-reviews.appspot.com/101001/show" class="onebox" target="_blank">http://xmlvm-reviews.appspot.com/101001/show</a><br>
Have fun.</p>
<p>Meh, for those too lazy to check out xmlvm and apply a patch, here is the full xmlvm.jar:<br>
<a href="http://uppit.com/0mlrzqrg2usk/xmlvm.jar" class="onebox" target="_blank">http://uppit.com/0mlrzqrg2usk/xmlvm.jar</a><br>
Be aware though, it’s everything xmlvm can do, and is a full 28.6Mb. <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/29">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/29</link>
        <pubDate>Thu, 16 Dec 2010 18:50:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-370275-29</guid>
        <source url="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275.rss">Reliable Java Decompiler</source>
      </item>
      <item>
        <title>Reliable Java Decompiler</title>
        <dc:creator><![CDATA[@the_bank the bank]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_bank">@the_bank</a> wrote:</p>
          <blockquote>
              <p>[quote=“Moparisthebest, post:27, topic:370275”]I’ll finish up this XMLVM version and commit a patch to the XMLVM team, but as far as changing JODE or another to work like this, I’m not really interested as of now.[/quote]Not trying to sound arrogant, but why?  The whole concept as you said could be very powerful and with JODE being available as a base it wouldn’t be a terribly hard implementation.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/28">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/28</link>
        <pubDate>Wed, 08 Dec 2010 04:13:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-370275-28</guid>
        <source url="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275.rss">Reliable Java Decompiler</source>
      </item>
      <item>
        <title>Reliable Java Decompiler</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>I’ll finish up this XMLVM version and commit a patch to the XMLVM team, but as far as changing JODE or another to work like this, I’m not really interested as of now.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/27">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/27</link>
        <pubDate>Wed, 08 Dec 2010 03:56:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-370275-27</guid>
        <source url="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275.rss">Reliable Java Decompiler</source>
      </item>
      <item>
        <title>Reliable Java Decompiler</title>
        <dc:creator><![CDATA[@the_bank the bank]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_bank">@the_bank</a> wrote:</p>
          <blockquote>
              <p>[quote=“Moparisthebest, post:25, topic:370275”][quote author=the bank link=topic=466392.msg3422127#msg3422127 date=1291594568]<br>
I guess all I’m saying is there must be a way, without altering the actual flow of code…to make it nicer on the eyes…<br>
[/quote]</p>
<p>I was talking to frank_ about this on IRC, this is basically a proof-of-concept to show it works.  What would be a good final product would be to modify a decompiler that already works well (like JODE) and make it fall back to this method only when it can’t reduce the control flow back to nice clean language constructs.  Then it would decompile some methods cleanly, and others like this.</p>
<p>Now some of you might think a deobfuscator would be better to write, and if you are just interested in decompiling code obfuscated by ZKM such as runescape, then certainly, write a deobfuscator to reverse ZKM stuff.  A decompiler like the above would still be a good idea, however, because it could decompile ANYTHING that was obfuscated by ANYTHING, both past, present and future, which seems pretty powerful to me.[/quote]I agree, on both points.</p>
<p>Will you be sticking to this?  Or handing it off?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/26">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/26</link>
        <pubDate>Tue, 07 Dec 2010 22:57:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-370275-26</guid>
        <source url="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275.rss">Reliable Java Decompiler</source>
      </item>
      <item>
        <title>Reliable Java Decompiler</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="23" data-topic="370275">
<div class="title">
<div class="quote-controls"></div>
 the bank:</div>
<blockquote>
<p>I guess all I’m saying is there must be a way, without altering the actual flow of code…to make it nicer on the eyes…</p>
</blockquote>
</aside>
<p>I was talking to frank_ about this on IRC, this is basically a proof-of-concept to show it works.  What would be a good final product would be to modify a decompiler that already works well (like JODE) and make it fall back to this method only when it can’t reduce the control flow back to nice clean language constructs.  Then it would decompile some methods cleanly, and others like this.</p>
<p>Now some of you might think a deobfuscator would be better to write, and if you are just interested in decompiling code obfuscated by ZKM such as runescape, then certainly, write a deobfuscator to reverse ZKM stuff.  A decompiler like the above would still be a good idea, however, because it could decompile ANYTHING that was obfuscated by ANYTHING, both past, present and future, which seems pretty powerful to me.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/25">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/25</link>
        <pubDate>Mon, 06 Dec 2010 00:28:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-370275-25</guid>
        <source url="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275.rss">Reliable Java Decompiler</source>
      </item>
      <item>
        <title>Reliable Java Decompiler</title>
        <dc:creator><![CDATA[@Speljohan Speljohan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/speljohan">@Speljohan</a> wrote:</p>
          <blockquote>
              <p>[quote=“the bank, post:23, topic:370275”][quote author=Speljohan link=topic=466392.msg3422096#msg3422096 date=1291592493]<br>
If anything it has potential to make rs cheating a breeze (if it can decompile the obfuscated code in such a way that it isn’t detectable to use)<br>
[/quote]That’s a fairly valid point I hadn’t even considered.  Problem is, in order to do anything useful you’d have top change the code…not just decompile it then recompile it.  And at that stage it’d probably be as detectable as bytecode editing already is…wouldn’t it?[/quote]Less effort.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/24">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/24</link>
        <pubDate>Mon, 06 Dec 2010 00:23:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-370275-24</guid>
        <source url="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275.rss">Reliable Java Decompiler</source>
      </item>
      <item>
        <title>Reliable Java Decompiler</title>
        <dc:creator><![CDATA[@the_bank the bank]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_bank">@the_bank</a> wrote:</p>
          <blockquote>
              <p>[quote=“Speljohan, post:22, topic:370275”]If anything it has potential to make rs cheating a breeze (if it can decompile the obfuscated code in such a way that it isn’t detectable to use)[/quote]That’s a fairly valid point I hadn’t even considered.  Problem is, in order to do anything useful you’d have top change the code…not just decompile it then recompile it.  And at that stage it’d probably be as detectable as bytecode editing already is…wouldn’t it?</p>
<p>[quote=“Moparisthebest, post:21, topic:370275”][quote author=the bank link=topic=466392.msg3421286#msg3421286 date=1291526530]<br>
it gained 500 lines…<br>
[/quote]</p>
<p>About 150 of those lines were from the comments I added in like ‘// Test.java:136 // vm:source-position’ which can be turned off.[/quote]</p>
<p>Fair enough.  I guess all I’m saying is there must be a way, without altering the actual flow of code…to make it nicer on the eyes…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/23">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/23</link>
        <pubDate>Mon, 06 Dec 2010 00:16:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-370275-23</guid>
        <source url="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275.rss">Reliable Java Decompiler</source>
      </item>
      <item>
        <title>Reliable Java Decompiler</title>
        <dc:creator><![CDATA[@Speljohan Speljohan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/speljohan">@Speljohan</a> wrote:</p>
          <blockquote>
              <p>If anything it has potential to make rs cheating a breeze (if it can decompile the obfuscated code in such a way that it isn’t detectable to use)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/22">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/22</link>
        <pubDate>Sun, 05 Dec 2010 23:41:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-370275-22</guid>
        <source url="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275.rss">Reliable Java Decompiler</source>
      </item>
      <item>
        <title>Reliable Java Decompiler</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="19" data-topic="370275">
<div class="title">
<div class="quote-controls"></div>
 super_:</div>
<blockquote>
<p>it appears the reason “your” so-called “decompiler” is so reliable is because it is has nothing to be reliable about.</p>
</blockquote>
</aside>
<p>It reliably decompiles all bytecode into valid, compilable (if not pretty to look at) source code.</p>
<aside class="quote no-group quote-modified" data-post="20" data-topic="370275">
<div class="title">
<div class="quote-controls"></div>
 the bank:</div>
<blockquote>
<p>it gained 500 lines…</p>
</blockquote>
</aside>
<p>About 150 of those lines were from the comments I added in like ‘// Test.java:136 // vm:source-position’ which can be turned off.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/21">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/21</link>
        <pubDate>Sun, 05 Dec 2010 21:48:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-370275-21</guid>
        <source url="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275.rss">Reliable Java Decompiler</source>
      </item>
      <item>
        <title>Reliable Java Decompiler</title>
        <dc:creator><![CDATA[@the_bank the bank]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_bank">@the_bank</a> wrote:</p>
          <blockquote>
              <p>it gained 500 lines…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/20">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/20</link>
        <pubDate>Sun, 05 Dec 2010 05:22:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-370275-20</guid>
        <source url="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275.rss">Reliable Java Decompiler</source>
      </item>
      <item>
        <title>Reliable Java Decompiler</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>it appears the reason “your” so-called “decompiler” is so reliable is because it is has nothing to be reliable about.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/19">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/19</link>
        <pubDate>Sat, 04 Dec 2010 20:36:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-370275-19</guid>
        <source url="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275.rss">Reliable Java Decompiler</source>
      </item>
      <item>
        <title>Reliable Java Decompiler</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="17" data-topic="370275">
<div class="title">
<div class="quote-controls"></div>
 frank_:</div>
<blockquote>
<p>but you have that construct where there isnt any control flow changes</p>
</blockquote>
</aside>
<p>Yes, it is actually in every method.  This is basically a direct 1:1 mapping of byte code to source code, so every method would look and work the same.</p>
<p>A neat thing to do would be to take this concept of doing ‘gotos’ in source code and modify something like JODE that works good most of the time to fall back to this method when it can’t reduce the flow control to loops and such, then it could even decompile obfuscated code.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/18</link>
        <pubDate>Fri, 03 Dec 2010 17:56:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-370275-18</guid>
        <source url="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275.rss">Reliable Java Decompiler</source>
      </item>
      <item>
        <title>Reliable Java Decompiler</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>but you have that construct where there isnt any control flow changes</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/17</link>
        <pubDate>Fri, 03 Dec 2010 01:56:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-370275-17</guid>
        <source url="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275.rss">Reliable Java Decompiler</source>
      </item>
      <item>
        <title>Reliable Java Decompiler</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="15" data-topic="370275">
<div class="title">
<div class="quote-controls"></div>
 frank_:</div>
<blockquote>
<p>whats with the loops around switches that shouldnt be there</p>
</blockquote>
</aside>
<p>They definitely SHOULD be there, that is how gotos are implemented.  Each case in the switch statement is a possible branch, so, with the loop on the switch statement, a ‘__next_label = 881; break;’ is equivalent to a goto.  When the code reaches it’s natural end it returns from the method, breaking out of the loop.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/16</link>
        <pubDate>Fri, 03 Dec 2010 01:42:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-370275-16</guid>
        <source url="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275.rss">Reliable Java Decompiler</source>
      </item>
      <item>
        <title>Reliable Java Decompiler</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>whats with the loops around switches that shouldnt be there</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/15</link>
        <pubDate>Thu, 02 Dec 2010 21:51:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-370275-15</guid>
        <source url="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275.rss">Reliable Java Decompiler</source>
      </item>
      <item>
        <title>Reliable Java Decompiler</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>I believe I am actually done with this, everything should work perfectly, even Exception handling:</p>
<p>Test class:<br>
<a href="http://pastebin.com/AbrxCfZL" class="onebox" target="_blank">http://pastebin.com/AbrxCfZL</a><br>
decompiled:<br>
<a href="http://pastebin.com/E7MFmZMV" class="onebox" target="_blank">http://pastebin.com/E7MFmZMV</a></p>
<p>And they actually produce identical output:</p>
<pre><code class="lang-auto">Starting Test.init()
i_s: 555
b: true, bt: 5, s: 6, i: 7, l: 8, f: 9.0, d: 10.0, c: z, o: []
b_s: true, bt_s: 5, s_s: 6, i_s: 7, l_s: 8, f_s: 9.0, d_s: 10.0, c_s: z, o_s: []
bytes[4]: 12
bytes.length: 11
fill_data: [Ljava.lang.String;@7987aeca
data: bob
data: tom
data: jim
data: tim
b: true, bt: 122, s: 122, i: 122, l: 122, f: 122.0, d: 122.0, c: z, o: []
i: 8
i: 9
i: 10
l: 9
l: 10
f: 10.0
o is not an instance of String!
o is an instance of java.util.ArrayList!
default case
this try statement is successful
this try statement is successful, until the next statement
this exception should always happen:
java.lang.ArithmeticException: / by zero
        at Test.init(Test.java:123)
        at Test.main(Test.java:136)
Finishing Test.init()
Finishing Main method</code></pre>
<p>decompiled:</p>
<pre><code class="lang-auto">Starting Test.init()
i_s: 555
b: true, bt: 5, s: 6, i: 7, l: 8, f: 9.0, d: 10.0, c: z, o: []
b_s: true, bt_s: 5, s_s: 6, i_s: 7, l_s: 8, f_s: 9.0, d_s: 10.0, c_s: z, o_s: []
bytes[4]: 12
bytes.length: 11
fill_data: [Ljava.lang.String;@3ae48e1b
data: bob
data: tom
data: jim
data: tim
b: true, bt: 122, s: 122, i: 122, l: 122, f: 122.0, d: 122.0, c: z, o: []
i: 8
i: 9
i: 10
l: 9
l: 10
f: 10.0
o is not an instance of String!
o is an instance of java.util.ArrayList!
default case
this try statement is successful
this try statement is successful, until the next statement
this exception should always happen:
java.lang.ArithmeticException: / by zero
        at Test.init(Test.java:581)
        at Test.main(Test.java:36)
Finishing Test.init()
Finishing Main method</code></pre>
<p>I’ll be submitting this to the XMLVM project soon, then I’ll release a binary for people to have fun with.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/14</link>
        <pubDate>Thu, 02 Dec 2010 21:22:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-370275-14</guid>
        <source url="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275.rss">Reliable Java Decompiler</source>
      </item>
      <item>
        <title>Reliable Java Decompiler</title>
        <dc:creator><![CDATA[@Speljohan Speljohan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/speljohan">@Speljohan</a> wrote:</p>
          <blockquote>
              <p>[quote=“Moparisthebest, post:12, topic:370275”]Also, I learned something today, I didn’t know you could cast an Object to any type and dimension of array (even primitive types), who knew? :)[/quote]Pretty sure most people knew.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/13</link>
        <pubDate>Thu, 02 Dec 2010 19:56:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-370275-13</guid>
        <source url="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275.rss">Reliable Java Decompiler</source>
      </item>
      <item>
        <title>Reliable Java Decompiler</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>I’ve cleaned up the code substantially, added support for more types of member and static types, and most importantly added array support:</p>
<p>This is my current test class:<br>
<a href="http://pastebin.com/36xusAET" class="onebox" target="_blank">http://pastebin.com/36xusAET</a><br>
and decompiled:<br>
<a href="http://pastebin.com/1RPjhBMx" class="onebox" target="_blank">http://pastebin.com/1RPjhBMx</a></p>
<p>As expected, loops ‘just work’.</p>
<p>Also, I learned something today, I didn’t know you could cast an Object to any type and dimension of array (even primitive types), who knew? <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/12</link>
        <pubDate>Thu, 02 Dec 2010 19:30:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-370275-12</guid>
        <source url="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275.rss">Reliable Java Decompiler</source>
      </item>
      <item>
        <title>Reliable Java Decompiler</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="10" data-topic="370275">
<div class="title">
<div class="quote-controls"></div>
 frank_:</div>
<blockquote>
<p>id have thought the xmlvmelem would be more like a union</p>
</blockquote>
</aside>
<p>It is basically a union, but you can’t do that in Java, you can’t even implement it through inheritance with basic types.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/11</link>
        <pubDate>Thu, 02 Dec 2010 15:28:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-370275-11</guid>
        <source url="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275.rss">Reliable Java Decompiler</source>
      </item>
      <item>
        <title>Reliable Java Decompiler</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>id have thought the xmlvmelem would be more like a union</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/10</link>
        <pubDate>Thu, 02 Dec 2010 13:45:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-370275-10</guid>
        <source url="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275.rss">Reliable Java Decompiler</source>
      </item>
      <item>
        <title>Reliable Java Decompiler</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>Alright!  I’ve actually got a working version that decompiles the Calculator class above, the problem was simple in concept but kind of painful in implementation.  As I said before, the dalvik VM doesn’t support boolean register types, and instead uses a 0/1 in an int to indicate false/true.  I originally supported booleans and tried to convert between them, but this turned into a nightmare, so I changed it to only use ints just as the dalvik VM expects.</p>
<p>This is the new decompile:<br>
<a href="http://pastebin.com/3N0rvUPQ" class="onebox" target="_blank">http://pastebin.com/3N0rvUPQ</a></p>
<p>@ the inner XMLVMElem class<br>
Frank_ expressed distress that this is an ‘extra dependancy’ that is introduced to the code.  The reason for this is because the dalvik VM is register based, and a register can hold variables of any type, and are often re-used with different types.  So there is only one other way I can think of to handle this.  It would be to do something similar to the following:</p>
<p>Say __r0 holds a float and an int throughout the method, currently it does this in this way:</p>
<pre><code class="lang-auto">XMLVMElem __r0 = new XMLVMElem();
__r0.i = int_value;
someIntMethod(__r0.i);
__r0.f = float_value;
someFloatMethod(__r0.f);</code></pre>
<p>This only requires one XMLVMElem variable, which can be reused unlimited number of times, and looks like this:</p>
<pre><code class="lang-auto">static class XMLVMElem {
     byte bt;
     short s;
     int i;
     long l;
     float f;
     double d;
     char c;
     Object o;
}</code></pre>
<p>The alternative is to scan through the method, seeing which types each register needs to support, and declaring them thus:</p>
<pre><code class="lang-auto">int __r0i;
float __r0f;
__r0i = int_value;
someIntMethod(__r0i);
__r0f = float_value;
someFloatMethod(__r0f);</code></pre>
<p>It’s slightly more complicated, but may be better.  The way I’m writing the code it will be extremely easy to change to this method after it is all done.</p>
<p>So, what do you think so far?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/9</link>
        <pubDate>Thu, 02 Dec 2010 12:16:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-370275-9</guid>
        <source url="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275.rss">Reliable Java Decompiler</source>
      </item>
      <item>
        <title>Reliable Java Decompiler</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>Alright, I’ve got a first version working, sorta…</p>
<p>Here is the original source code that was compiled with SUN javac 1.6.0_22 on Kubuntu Lucid, no compiler options:<br>
<a href="http://pastebin.com/LRfBZgbR" class="onebox" target="_blank">http://pastebin.com/LRfBZgbR</a></p>
<p>Here is the source code output by the ‘decompiler’:<br>
<a href="http://pastebin.com/2r38S6yt">http://pastebin.com/2r38S6yt</a> (updated because of un-implemented ‘goto-16’ pointed out by frank)</p>
<p>It does compile without errors or warnings, and it also runs to completion (to the final ‘return’ statement in the main method, though it doesn’t actually exit, probably due to some other threads running).  But it doesn’t run as expected, so I probably translated an instruction slightly wrong somewhere along the way.  The instructions are the comment to the right of the statement, if you see something I did wrong I’d really appreciate you pointing me to it so I can fix it.</p>
<p>By now you probably know what ‘tool’ I am using, because I didn’t bother changing some names in the code, so in the next few days I’ll try to finish up the instructions I haven’t implemented yet, and release the code I have written.  (which is 1 XML file, the whole transformation uses XSLT :))</p>
<p>So, again, if someone would like to write me a sample Java class that uses all of Java’s features to test on I’d appreciate it.</p>
<p>edit: Some details real quick before I go to bed (5am…)<br>
Flow control Obfuscation should be no problem at all, because as you can see, I implement the ‘goto’ instruction in source code exactly like it is in byte code.  I have not implemented try/catch yet, but it basically just makes use of gotos as well, so again, it shouldn’t be a problem.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reliable-java-decompiler/370275/8</link>
        <pubDate>Sat, 27 Nov 2010 09:11:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-370275-8</guid>
        <source url="https://forum.moparisthebest.com/t/reliable-java-decompiler/370275.rss">Reliable Java Decompiler</source>
      </item>
  </channel>
</rss>
