<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Making a Constants file</title>
    <link>https://forum.moparisthebest.com/t/making-a-constants-file/309560</link>
    <description>Making a basic constants file.

Tested on -
iClarity
PimpScape
Delta

Classes Edited -
Player.java (for this example)
Client.java (for this example)

Classes Made -
Constants.java

Assumed knowledge -
Know how to declare an integer or string, I won&#39;t explain that part too fully.



Step 1 - Creating Constants.java -
In the root of your source 
(In unpackaged servers, just the folder with your files in. In packaged servers in rs2.) create a new file.
Call this &quot;Constants.java&quot;.

Step 2 - Starting and editing Constants.java -
There are two steps for this one. If it is unpackaged, the first code box is for you. Packaged is the second.

Unpackaged -
[code]public class constants {
	/**
	* Ints go here.
	* Strings also.
	*/
}[/code]



Step 3 - Declarations -


In there, declare two ints and a string.
Ints -
spawn_point_x
spawn_point_y

Strings -
serverName

serverName will be the name of your server. 
In my example:
[code]    public static final String serverName = &quot;DragonFall&quot;;
[/code]

Now, the tougher part.
Open up Player.java, and press ctrl + f. Type in &quot;teleportToX&quot;. If nothing comes up, try &quot;toX&quot;.
You will see something like this:
[code]		teleportToX = 3222;
		teleportToY = 3218;[/code]

Now, declare spawn_point_x to the number after teleportToX, and spawn_point_y to the number after teleportToY.

Step 4 - Using Them -
At the top of Player.java.
Add in an import, pointed to Constants.java.
Change 
[code]		teleportToX = 3222;
		teleportToY = 3218;[/code]
to
[code]		teleportToX = Constants.spawn_point_x;
		teleportToY = Constants.spawn_point_y;[/code]

Ta-Da! You have set up the basic spawn points.

Now, open client.java, add in the same import.
Then, search for &quot;welcome to&quot;. In my case it said [code]sendMessage(&quot;Welcome to DragonFall.&quot;);[/code]
Change it to [code]
sendMessage(&quot;Welcome to &quot;+Constants.serverName+&quot;.&quot;);[/code]

This can be used for anything, and it is much easier to use than editing the same name lots of times.</description>
    
    <lastBuildDate>Mon, 19 Oct 2009 19:58:02 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/making-a-constants-file/309560.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Making a Constants file</title>
        <dc:creator><![CDATA[@ranger_squad ranger squad]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ranger_squad">@ranger_squad</a> wrote:</p>
          <blockquote>
              <p>Making a basic constants file.</p>
<p>Tested on -<br>
iClarity<br>
PimpScape<br>
Delta</p>
<p>Classes Edited -<br>
Player.java (for this example)<br>
Client.java (for this example)</p>
<p>Classes Made -<br>
Constants.java</p>
<p>Assumed knowledge -<br>
Know how to declare an integer or string, I won’t explain that part too fully.</p>
<p>Step 1 - Creating Constants.java -<br>
In the root of your source<br>
(In unpackaged servers, just the folder with your files in. In packaged servers in rs2.) create a new file.<br>
Call this “Constants.java”.</p>
<p>Step 2 - Starting and editing Constants.java -<br>
There are two steps for this one. If it is unpackaged, the first code box is for you. Packaged is the second.</p>
<p>Unpackaged -</p>
<p><code>public class constants {
	/**
	* Ints go here.
	* Strings also.
	*/
}</code></p>
<p>Step 3 - Declarations -</p>
<p>In there, declare two ints and a string.<br>
Ints -<br>
spawn_point_x<br>
spawn_point_y</p>
<p>Strings -<br>
serverName</p>
<p>serverName will be the name of your server.<br>
In my example:</p>
<p><code>    public static final String serverName = "DragonFall";
</code></p>
<p>Now, the tougher part.<br>
Open up Player.java, and press ctrl + f. Type in “teleportToX”. If nothing comes up, try “toX”.<br>
You will see something like this:</p>
<p><code>		teleportToX = 3222;
		teleportToY = 3218;</code></p>
<p>Now, declare spawn_point_x to the number after teleportToX, and spawn_point_y to the number after teleportToY.</p>
<p>Step 4 - Using Them -<br>
At the top of Player.java.<br>
Add in an import, pointed to Constants.java.<br>
Change</p>
<p><code>		teleportToX = 3222;
		teleportToY = 3218;</code><br>
to</p>
<p><code>		teleportToX = Constants.spawn_point_x;
		teleportToY = Constants.spawn_point_y;</code></p>
<p>Ta-Da! You have set up the basic spawn points.</p>
<p>Now, open client.java, add in the same import.<br>
Then, search for “welcome to”. In my case it said <code>sendMessage("Welcome to DragonFall.");</code><br>
Change it to <code>
sendMessage("Welcome to "+Constants.serverName+".");</code></p>
<p>This can be used for anything, and it is much easier to use than editing the same name lots of times.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/making-a-constants-file/309560/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/making-a-constants-file/309560/1</link>
        <pubDate>Mon, 19 Oct 2009 19:58:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-309560-1</guid>
        <source url="https://forum.moparisthebest.com/t/making-a-constants-file/309560.rss">Making a Constants file</source>
      </item>
  </channel>
</rss>
