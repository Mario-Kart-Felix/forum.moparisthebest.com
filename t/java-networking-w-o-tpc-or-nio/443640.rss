<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[Java] Networking w/o TPC (or NIO)</title>
    <link>https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640</link>
    <description>I decided that I wanted to mess around with the old I/O a bit before starting a full-scale netty project.
This was the first time I ever realized that you can use the old I/O with many clients without using TPC.

Using a dual-threaded application (source below), I made the application print this..
[code]Client found.
Client added.
1
 1
Client found.
Client added.
Client found.
Client added.
3
 1 2 3
[/code]

How efficient would this be in comparison to TPC?

Edit: The only flaw I&#39;ve found so far is that all variables must remain static, which is rather annoying.

[code=Server.java]package server;

import java.io.IOException;
import java.net.ServerSocket;
import java.util.ArrayList;

public class Server {

	public static ServerSocket server = null;
	public static Thread Listener = new Thread(new Listener());
	public static ArrayList&lt;Client&gt; clients = new ArrayList&lt;Client&gt;(3);
	public static int playersOnline = 0;
	public static void main(String[] args) throws IOException, InterruptedException {
		server = new ServerSocket(43594);
		Listener.start();
		new Server().run();
	}

	private void run() throws InterruptedException {
		while(true) {
			Thread.sleep(2000);
			System.out.println(&quot;&quot;+playersOnline());
			for(Client c : clients)
				System.out.print(&quot; &quot;+c.getId());
			System.out.println();
		}
	}

	public static void addClient(Client client) {
		clients.add(client);
		playersOnline++;
		client.setId(playersOnline);
		System.out.println(&quot;Client added.&quot;);
	}
	
	public static int playersOnline() {
		return playersOnline;
	}
}
[/code][code=Listener.java]package server;

import java.net.Socket;

public class Listener implements Runnable {

	@Override
	public void run() {
		Socket nC = null;
		while (true) {
			try {
				nC = Server.server.accept();
				System.out.println(&quot;Client found.&quot;);
			} catch (Exception e) {
				e.printStackTrace();
			}
			Server.addClient(new Client(nC));
		}
	}

}
[/code][code=Client.java]package server;

import java.net.Socket;

public class Client {
	Socket remote = null;
	
	int id = -1;
	
	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public Socket getRemote() {
		return remote;
	}

	public void setRemote(Socket remote) {
		this.remote = remote;
	}

	public Client(Socket nC) {
		remote = nC;
	}

}
[/code]</description>
    
    <lastBuildDate>Fri, 01 Jun 2012 20:50:46 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[Java] Networking w/o TPC (or NIO)</title>
        <dc:creator><![CDATA[@slavemaster veer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/slavemaster">@slavemaster</a> wrote:</p>
          <blockquote>
              <p>If you want to sit around polling SocketInputStream.available() for read-readiness events, know that there is a much more organic way exposed via NIO that is not limited in scope to read-readiness but also accept- and write-readiness, via Selector.selectNow(). Selectors, while seemingly complex, are actually pretty simple beasts.<br>
<aside class="onebox whitelistedgeneric">
  <header class="source">
      <a href="http://tutorials.jenkov.com/java-nio/selectors.html" target="_blank" rel="nofollow noopener">jenkov.com</a>
  </header>
  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:500/300;"><img src="http://tutorials.jenkov.com/images/java-nio/java-nio-teaser-500-300.png" class="thumbnail"></div>

<h3><a href="http://tutorials.jenkov.com/java-nio/selectors.html" target="_blank" rel="nofollow noopener">Java NIO Selector</a></h3>

<p>This tutorial explains how Java NIO Selectors can be used to monitor multiple channels to see when they have data ready for reading.</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>
</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640/13</link>
        <pubDate>Fri, 01 Jun 2012 20:50:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-443640-13</guid>
        <source url="https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640.rss">[Java] Networking w/o TPC (or NIO)</source>
      </item>
      <item>
        <title>[Java] Networking w/o TPC (or NIO)</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <p>available() is also not actually guaranteed to provide all of the available data to be read. It’s optionally implemented.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640/12</link>
        <pubDate>Fri, 01 Jun 2012 17:18:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-443640-12</guid>
        <source url="https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640.rss">[Java] Networking w/o TPC (or NIO)</source>
      </item>
      <item>
        <title>[Java] Networking w/o TPC (or NIO)</title>
        <dc:creator><![CDATA[@iKilem iKilem]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ikilem">@iKilem</a> wrote:</p>
          <blockquote>
              <p>In case people get the wrong idea, it’s worth mentioning that using available() is quite expensive, so I/O multiplexing is always better if you want performance.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640/11</link>
        <pubDate>Fri, 01 Jun 2012 16:30:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-443640-11</guid>
        <source url="https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640.rss">[Java] Networking w/o TPC (or NIO)</source>
      </item>
      <item>
        <title>[Java] Networking w/o TPC (or NIO)</title>
        <dc:creator><![CDATA[@Graham Graham]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/graham">@Graham</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="6" data-topic="443640">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/hcojustin/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> HcoJustin:</div>
<blockquote>
<p>Sure you don’t HAVE to spin off a new thread for each connected client, but your bottleneck is going to be someone with high latency, since you’ll have to wait for them to finish before the next person can read/write. (Anyone remember RS2E?)</p>
</blockquote>
</aside>
<p>You can actually do reading fine - the available() method can be used to guarantee a call to read() won’t block. But write() calls can block.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640/10</link>
        <pubDate>Fri, 01 Jun 2012 13:30:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-443640-10</guid>
        <source url="https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640.rss">[Java] Networking w/o TPC (or NIO)</source>
      </item>
      <item>
        <title>[Java] Networking w/o TPC (or NIO)</title>
        <dc:creator><![CDATA[@eyeownyew Eyeownyew]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/eyeownyew">@eyeownyew</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="5" data-topic="443640">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/zyle1992/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> zyle1992:</div>
<blockquote>
<p>In that case it’s about the same as TPC. The reason is because it’s really only one thread, but it’s reading no data from the clients.</p>
</blockquote>
</aside>
<p>I’d be willing to test this with 100 clients or something. Would be a fun experiment.<br>
If anything, it would be <span class="bbcode-i">slightly</span> better, not much. It would be a waste of time to use this method rather than netty.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640/9</link>
        <pubDate>Fri, 01 Jun 2012 06:01:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-443640-9</guid>
        <source url="https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640.rss">[Java] Networking w/o TPC (or NIO)</source>
      </item>
      <item>
        <title>[Java] Networking w/o TPC (or NIO)</title>
        <dc:creator><![CDATA[@HcoJustin HcoJustin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hcojustin">@HcoJustin</a> wrote:</p>
          <blockquote>
              <p>[quote=“imsuperman05, post:7, topic:443640”][quote author=HcoJustin link=topic=546319.msg4005071#msg4005071 date=1338519823]<br>
Sure you don’t HAVE to spin off a new thread for each connected client, but your bottleneck is going to be someone with high latency, since you’ll have to wait for them to finish before the next person can read/write. (Anyone remember RS2E?)<br>
[/quote]<br>
That’s very true.  Then again, threads aren’t unlimited and there is a certain amount you can use before you completely use up all the memory.[/quote]</p>
<p>Memory is cheap nowadays, processing power is cheaper than it used to be, its becoming cheaper and cheaper to support a thread per client model. Something like this is just ridiculous unless you use something that wont block</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640/8</link>
        <pubDate>Fri, 01 Jun 2012 04:14:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-443640-8</guid>
        <source url="https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640.rss">[Java] Networking w/o TPC (or NIO)</source>
      </item>
      <item>
        <title>[Java] Networking w/o TPC (or NIO)</title>
        <dc:creator><![CDATA[@imsuperman05 imsuperman05]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imsuperman05">@imsuperman05</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="6" data-topic="443640">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/hcojustin/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> HcoJustin:</div>
<blockquote>
<p>Sure you don’t HAVE to spin off a new thread for each connected client, but your bottleneck is going to be someone with high latency, since you’ll have to wait for them to finish before the next person can read/write. (Anyone remember RS2E?)</p>
</blockquote>
</aside>
<p>That’s very true.  Then again, threads aren’t unlimited and there is a certain amount you can use before you completely use up all the memory.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640/7</link>
        <pubDate>Fri, 01 Jun 2012 03:27:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-443640-7</guid>
        <source url="https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640.rss">[Java] Networking w/o TPC (or NIO)</source>
      </item>
      <item>
        <title>[Java] Networking w/o TPC (or NIO)</title>
        <dc:creator><![CDATA[@HcoJustin HcoJustin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hcojustin">@HcoJustin</a> wrote:</p>
          <blockquote>
              <p>Sure you don’t HAVE to spin off a new thread for each connected client, but your bottleneck is going to be someone with high latency, since you’ll have to wait for them to finish before the next person can read/write. (Anyone remember RS2E?)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640/6</link>
        <pubDate>Fri, 01 Jun 2012 03:03:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-443640-6</guid>
        <source url="https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640.rss">[Java] Networking w/o TPC (or NIO)</source>
      </item>
      <item>
        <title>[Java] Networking w/o TPC (or NIO)</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>In that case it’s about the same as TPC. The reason is because it’s really only one thread, but it’s reading no data from the clients.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640/5</link>
        <pubDate>Fri, 01 Jun 2012 03:00:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-443640-5</guid>
        <source url="https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640.rss">[Java] Networking w/o TPC (or NIO)</source>
      </item>
      <item>
        <title>[Java] Networking w/o TPC (or NIO)</title>
        <dc:creator><![CDATA[@weeddamn weeddamn]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/weeddamn">@weeddamn</a> wrote:</p>
          <blockquote>
              <p>[quote=“eyeownyew, post:3, topic:443640”][quote author=zyle1992 link=topic=546319.msg4005060#msg4005060 date=1338519138]<br>
Is TPC “Thread-per-client” or a misspelling of TCP?<br>
[/quote]<br>
Thread per client[/quote]</p>
<p>How convenient of you use thread per client  <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"> <img src="https://forum.moparisthebest.com/images/emoji/twitter/expressionless.png?v=5" title=":expressionless:" class="emoji" alt=":expressionless:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640/4</link>
        <pubDate>Fri, 01 Jun 2012 02:58:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-443640-4</guid>
        <source url="https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640.rss">[Java] Networking w/o TPC (or NIO)</source>
      </item>
      <item>
        <title>[Java] Networking w/o TPC (or NIO)</title>
        <dc:creator><![CDATA[@eyeownyew Eyeownyew]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/eyeownyew">@eyeownyew</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="2" data-topic="443640">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/zyle1992/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> zyle1992:</div>
<blockquote>
<p>Is TPC “Thread-per-client” or a misspelling of TCP?</p>
</blockquote>
</aside>
<p>Thread per client</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640/3</link>
        <pubDate>Fri, 01 Jun 2012 02:55:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-443640-3</guid>
        <source url="https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640.rss">[Java] Networking w/o TPC (or NIO)</source>
      </item>
      <item>
        <title>[Java] Networking w/o TPC (or NIO)</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>Is TPC “Thread-per-client” or a misspelling of TCP?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640/2</link>
        <pubDate>Fri, 01 Jun 2012 02:52:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-443640-2</guid>
        <source url="https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640.rss">[Java] Networking w/o TPC (or NIO)</source>
      </item>
      <item>
        <title>[Java] Networking w/o TPC (or NIO)</title>
        <dc:creator><![CDATA[@eyeownyew Eyeownyew]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/eyeownyew">@eyeownyew</a> wrote:</p>
          <blockquote>
              <p>I decided that I wanted to mess around with the old I/O a bit before starting a full-scale netty project.<br>
This was the first time I ever realized that you can use the old I/O with many clients without using TPC.</p>
<p>Using a dual-threaded application (source below), I made the application print this…</p>
<p><code>Client found.
Client added.
1
 1
Client found.
Client added.
Client found.
Client added.
3
 1 2 3
</code></p>
<p>How efficient would this be in comparison to TPC?</p>
<p>Edit: The only flaw I’ve found so far is that all variables must remain static, which is rather annoying.</p>
<p>[code=Server.java]package server;</p>
<p>import java.io.IOException;<br>
import java.net.ServerSocket;<br>
import java.util.ArrayList;</p>
<p>public class Server {</p>
<pre><code>public static ServerSocket server = null;
public static Thread Listener = new Thread(new Listener());
public static ArrayList&lt;Client&gt; clients = new ArrayList&lt;Client&gt;(3);
public static int playersOnline = 0;
public static void main(String[] args) throws IOException, InterruptedException {
	server = new ServerSocket(43594);
	Listener.start();
	new Server().run();
}

private void run() throws InterruptedException {
	while(true) {
		Thread.sleep(2000);
		System.out.println(""+playersOnline());
		for(Client c : clients)
			System.out.print(" "+c.getId());
		System.out.println();
	}
}

public static void addClient(Client client) {
	clients.add(client);
	playersOnline++;
	client.setId(playersOnline);
	System.out.println("Client added.");
}

public static int playersOnline() {
	return playersOnline;
}
</code></pre>
<p>}<br>
[/code][code=Listener.java]package server;</p>
<p>import java.net.Socket;</p>
<p>public class Listener implements Runnable {</p>
<pre><code>@Override
public void run() {
	Socket nC = null;
	while (true) {
		try {
			nC = Server.server.accept();
			System.out.println("Client found.");
		} catch (Exception e) {
			e.printStackTrace();
		}
		Server.addClient(new Client(nC));
	}
}
</code></pre>
<p>}<br>
[/code][code=Client.java]package server;</p>
<p>import java.net.Socket;</p>
<p>public class Client {<br>
Socket remote = null;</p>
<pre><code>int id = -1;

public int getId() {
	return id;
}

public void setId(int id) {
	this.id = id;
}

public Socket getRemote() {
	return remote;
}

public void setRemote(Socket remote) {
	this.remote = remote;
}

public Client(Socket nC) {
	remote = nC;
}
</code></pre>
<p>}<br>
[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640/1</link>
        <pubDate>Fri, 01 Jun 2012 02:37:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-443640-1</guid>
        <source url="https://forum.moparisthebest.com/t/java-networking-w-o-tpc-or-nio/443640.rss">[Java] Networking w/o TPC (or NIO)</source>
      </item>
  </channel>
</rss>
