<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Eating Timer</title>
    <link>https://forum.moparisthebest.com/t/eating-timer/448203</link>
    <description>My server uses eating in eatingcontent.java not food.java. so when i edit anything in food.java it doesnt work.


Here is the file i use for editing food. I cant seem to make the food timer any slower, it is very fast.

[code]package server.content;

import server.event.CycleEvent;
import server.event.CycleEventContainer;
import server.event.CycleEventHandler;
import server.model.items.Item;
import server.model.players.Client;

public class EatingContent {

	private static final short[][] FOOD = { { 247, 2 }, // Jangerberries
{7946,16},//monkfish son 			
{ 315, 3 }, // Shrimps
			{ 319, 1 }, // Anchovies
			{ 325, 4 }, // Sardine
			{ 329, 9 }, // Salmon
			{ 333, 7 }, // Trout
			{ 337, 6 }, // Giant carp
			{ 339, 7 }, // Cod
			{ 347, 5 }, // Herring
			{ 351, 8 }, // Pike
			{ 355, 6 }, // Mackerel
			{ 361, 10 }, // Tuna
			{ 365, 13 }, // Bass
			{ 373, 14 }, // Swordfish
			{ 379, 12 }, // Lobster
			{ 385, 20 }, // Shark
			{ 391, 22 }, // Manta ray
			{ 397, 21 }, // Sea turtle
			{ 403, 4 }, // Edible seaweed
			// {464, hardcode}, //Strange fruit
			// {1851, cantbeeaten}, //Tenti pineapple
			{ 1861, 3 }, // Ugthanki meat
			{ 1869, 2 }, // Chopped tomato
			{ 1871, 1 /* sadtoseeamancrymessage */}, // Chopped onion
			// {1875, goodquestion}, //Onion &amp; tomato
			{ 1883, 19 /* randommessages */}, // Ugthanki kebab
			{ 1885, 19 /* randommessages */}, // Ugthanki kebab
			{ 1891, 4, 1893 }, // Cake
			{ 1893, 4, 1895 }, // 2/3 cake
			{ 1895, 4 }, // Slice of cake
			{ 1897, 5, 1899 }, // Chocolate cake
			{ 1899, 5, 1901 }, // 2/3 chocolate cake
			{ 1901, 5 }, // Chocolate slice
			{ 1942, 1 }, // Potato
			{ 1957, 1 }, // Onion
			{ 1959, 14 }, // Pumpkin
			{ 1961, 12 }, // Easter egg
			{ 1963, 2 }, // Banana
			{ 1965, 1 }, // Cabbage
			{ 1967, 2 }, // Cabbage
			{ 1969, 2 }, // Spinach roll
			// {1971, randomandstuff}, //Kebab
			{ 1973, 3 }, // Chocolate bar
			{ 1982, 2 }, // Tomato
			// {1984, nonesplitout}, //Rotten apple
			{ 1985, 2 }, // Cheese
			{ 2003, 11 }, // Stew
			{ 2011, 19 }, // Curry
			{ 2102, 2 }, // Lemon
			{ 2104, 1 }, // Lemon chunks
			{ 2106, 1 }, // Lemon slices
			{ 2108, 2 }, // Orange
			{ 2110, 1 }, // Orange chunks
			{ 2112, 1 }, // Orange slices
			// {2114, uneatable}, //Pineapple
			{ 2116, 2 }, // Pineapple chunks
			{ 2118, 2 }, // Pineapple ring
			{ 2120, 2 }, // Lime
			{ 2122, 2 }, // Lime chunks
			{ 2124, 2 }, // Lime slices
			{ 2126, 2 }, // Dwellberries
			{ 2128, 1 }, // Equa leaves
			// {2130, idk}, //Pot of cream
			{ 2140, 3 }, // Cooked chicken
			{ 2142, 3 }, // Cooked meat
			{ 2149, 11 }, // Lava eel
			{ 2152, 3 }, // Toad&#39;s legs
			/*
			 * {2154, idk}, //Equa toad&#39;s legs {2156, idk}, //Spicy toad&#39;s legs
			 * {2158, idk}, //Seasoned legs {2160, idk}, //Spicy worm {2162,
			 * idk}, //King worm {2173, idk}, //Odd gnomebowl {2179, idk},
			 * //Unfinished bowl {2181, idk}, //Unfinished bowl {2183, idk},
			 * //Unfinished bowl {2185, idk}, //Chocolate bomb {2187, idk},
			 * //Tangled toad&#39;s legs {2189, idk}, //Unfinished bowl {2191, idk},
			 * //Worm hole {2193, idk}, //Unfinished bowl {2195, idk}, //Veg
			 * ball {2197, idk}, //Odd crunchies {2203, idk}, //Unfinished
			 * crunchy {2205, idk}, //Worm crunchies {2207, idk}, //Unfinished
			 * crunchy {2209, idk}, //Chocchip crunchies {2211, idk},
			 * //Unfinished crunchy {2213, idk}, //Spicy crunchies {2215, idk},
			 * //Unfinished crunchy {2217, idk}, //Toad crunchies {2219, idk},
			 * //Premade w&#39;m batta {2221, idk}, //Premade t&#39;d batta {2223, idk},
			 * //Premade c+t batta {2225, idk}, //Premade fr&#39;t batta {2227,
			 * idk}, //Premade veg batta {2229, idk}, //Premade choc bomb {2231,
			 * idk}, //Premade ttl {2233, idk}, //Premade worm hole {2235, idk},
			 * //Premade veg ball {2237, idk}, //Premade w&#39;m crun&#39; {2239, idk},
			 * //Premade ch&#39; crunch {2241, idk}, //Premade s&#39;y crunch {2243,
			 * idk}, //Premade t&#39;d crunch {2245, idk}, //Odd batta {2251, idk},
			 * //Unfinished batta {2253, idk}, //Worm batta {2255, idk}, //Toad
			 * batta {2257, idk}, //Unfinished batta {2259, idk}, //Cheese+tom
			 * batta {2261, idk}, //Unfinished batta {2263, idk}, //Unfinished
			 * batta {2265, idk}, //Unfinished batta {2267, idk}, //Unfinished
			 * batta {2269, idk}, //Unfinished batta {2271, idk}, //Unfinished
			 * batta {2273, idk}, //Unfinished batta {2275, idk}, //Unfinished
			 * batta {2277, idk}, //Fruit batta {2279, idk}, //Unfinished batta
			 * {2281, idk}, //Vegetable batta
			 */
			{ 2289, 7, 2291 }, // Plain pizza
			{ 2291, 7 }, // 1/2 plain pizza
			{ 2293, 8, 2295 }, // Meat pizza
			{ 2295, 8 }, // 1/2 meat pizza
			{ 2297, 9, 2299 }, // Anchovy pizza
			{ 2299, 9 }, // 1/2 anchovy pizza
			{ 2301, 11, 2303 }, // Pineapple pizza
			{ 2303, 11 }, // 1/2 p&#39;apple pizza
			{ 2309, 5 }, // Bread
			{ 2323, 7, 2335 }, // Apple pie
			{ 2325, 5, 2333 }, // Redberry pie
			{ 2327, 6, 2331 }, // Meat pie
			{ 2331, 6 }, // Half a meat pie
			{ 2333, 5 }, // Half a redberry pie
			{ 2335, 7 }, // Half an apple pie
			// {2343, idk}, //Cooked oomlie wrap
			// {2379, DONE}, //Rock cake
			// {2398, idk}, //Cave nightshade
			{ 2878, 10 }, // Cooked chompy
			{ 6883, 8 }, // PEACHES
	/*
	 * {3144, IDK}, //Cooked karambwan {3146, IDK}, //Poison karambwan {3151,
	 * IDK}, //Karambwanji {3162, IDK}, //Sliced banana {3168, IDK}, //Seaweed
	 * sandwich {3177, IDK}, //Banana left {3228, IDK}, //Cooked rabbit {3369,
	 * IDK}, //Thin snail meat {3371, IDK}, //Lean snail meat {3373, IDK}, //Fat
	 * snail meat {3381, IDK}, //Cooked slimy eel {4012, IDK}, //Monkey nuts
	 * {4014, IDK}, //Monkey bar {4016, IDK}, //Banana stew {4291, IDK},
	 * //Cooked chicken {4293, IDK}, //Cooked meat {4485, IDK}, //White pearl
	 * {4517, IDK}, //Giant frog legs {4558, IDK}, //Blue sweets {4559, IDK},
	 * //Deep blue sweets {4560, IDK}, //White sweets {4561, IDK}, //Purple
	 * sweets {4562, IDK}, //Red sweets {4563, IDK}, //Green sweets {4564, IDK},
	 * //Pink sweets {4608, IDK}, //Super kebab {4620, IDK}, //Black mushroom
	 * {5003, IDK}, //Cave eel {5004, IDK}, //Frog spawn {5504, IDK},
	 * //Strawberry {5733, IDK}, //Rotten potato {5972, IDK}, //Papaya fruit
	 * {5982, IDK}, //Watermelon {5984, IDK}, //Watermelon slice {5988, IDK},
	 * //Cooked sweetcorn {6202, IDK}, //Fishlike thing {6206, IDK}, //Fishlike
	 * thing {6297, IDK}, //Spider on stick {6299, IDK}, //Spider on shaft
	 * {6311, IDK}, //Gout tuber {6469, IDK}, //White tree fruit {6701, IDK},
	 * //Baked potato {6703, IDK}, //Potato with butter {6705, IDK}, //Potato
	 * with cheese {6768, IDK}, //Poisoned cheese {6794, IDK}, //Choc-ice {6883,
	 * IDK}, //Peach {6961, IDK}, //Baguette {6962, IDK}, //Triangle sandwich
	 * {6963, IDK}, //Roll {6965, IDK}, //Square sandwich {6969, IDK}, //Shark
	 * {7054, IDK}, //Chilli potato {7056, IDK}, //Egg potato {7058, IDK},
	 * //Mushroom potato {7060, IDK}, //Tuna potato {7062, IDK}, //Chilli con
	 * carne {7064, IDK}, //Egg and tomato {7066, IDK}, //Mushroom &amp; onion
	 * {7068, IDK}, //Tuna and corn {7070, IDK}, //Minced meat {7072, IDK},
	 * //Spicy sauce {7078, IDK}, //Scrambled egg {7082, IDK}, //Fried mushrooms
	 * {7084, IDK}, //Fried onions {7086, IDK}, //Chopped tuna {7088, IDK},
	 * //Sweetcorn {7178, IDK}, //Garden pie {7180, IDK}, //Half a garden pie
	 * {7188, IDK}, //Fish pie {7190, IDK}, //Half a fish pie {7198, IDK},
	 * //Admiral pie {7200, IDK}, //Half an admiral pie {7208, IDK}, //Wild pie
	 * {7210, IDK}, //Half a wild pie {7218, IDK}, //Summer pie {7220, IDK},
	 * //Half a summer pie {7223, IDK}, //Roast rabbit {7228, IDK}, //Cooked
	 * chompy {7479, IDK}, //Spicy stew {7509, IDK}, //Dwarven rock cake {7510,
	 * IDK}, //Dwarven rock cake {7521, IDK}, //Cooked crab meat {7523, IDK},
	 * //Cooked crab meat {7524, IDK}, //Cooked crab meat {7525, IDK}, //Cooked
	 * crab meat {7526, IDK}, //Cooked crab meat {7530, IDK}, //Cooked fishcake
	 * {7568, IDK}, //Cooked jubbly {7572, IDK}, //Red banana {7573, IDK},
	 * //Tchiki monkey nuts {7574, IDK}, //Sliced red banana {7575, IDK},
	 * //Tchiki nut paste {7579, IDK}, //Stuffed snake {7928, IDK}, //Easter egg
	 * {7929, IDK}, //Easter egg {7930, IDK}, //Easter egg {7931, IDK}, //Easter
	 * egg {7932, IDK}, //Easter egg {7933, IDK}, //Easter egg {7934, IDK},
	 * //Field ration {7943, IDK}, //Fresh monkfish {7946, IDK}, //Monkfish
	 * {9052, IDK}, //Locust meat {9475, IDK}, //Mint cake {9527, IDK}, //Fruit
	 * batta {9529, IDK}, //Toad batta {9531, IDK}, //Worm batta {9533, IDK},
	 * //Vegetable batta {9535, IDK}, //Cheese+tom batta {9538, IDK}, //Toad
	 * crunchies {9540, IDK}, //Spicy crunchies {9542, IDK}, //Worm crunchies
	 * {9544, IDK}, //Chocchip crunchies {9547, IDK}, //Worm hole {9549, IDK},
	 * //Veg ball {9551, IDK}, //Tangled toad&#39;s legs {9553, IDK}, //Chocolate
	 * bomb {9980, IDK}, //Roast bird meat {9988, IDK}, //Roast beast meat
	 * {9994, IDK}, //Spicy tomato {9996, IDK}, //Spicy minced meat {10136,
	 * IDK}, //Rainbow fish {10476, IDK}, //Purple sweets {10538, IDK},
	 * //Defender horn {10960, IDK}, //Green gloop soup {10961, IDK},
	 * //Frogspawn gumbo {10962, IDK}, //Frogburger {10963, IDK}, //Coated
	 * frogs&#39; legs {10964, IDK}, //Bat shish {10965, IDK}, //Fingers {10966,
	 * IDK}, //Grubs Ã  la mode {10967, IDK}, //Roast frog {10968, IDK},
	 * //Mushrooms {10969, IDK}, //Fillets {10970, IDK}, //Loach {10971, IDK},
	 * //Eel sushi {11023, IDK}, //Magic egg {11026, IDK}, //Chocolate kebbit
	 * {11205, IDK}, //Shrunk ogleroot
	 */
	};

	public static void eat(final Client c, int itemId, int slot) {
		for (short[] food : FOOD) {
			final int id = food[0];
			final int heal = food[1];
			if (itemId == id) {
				if (c.duelRule[6]) {
					c.sendMessage(&quot;You may not eat in this duel.&quot;);
					return;
				}

			
				if (c.checkBusy()) {
					c.sendMessage(&quot;You are too busy to do this.&quot;);
					return;
				}
				c.setBusy(true);
				c.getItems().deleteItem(id, slot, 1);
				CycleEventHandler.getSingleton().addEvent(c, new CycleEvent() {

					@Override
					public void execute(CycleEventContainer container) {
						// TODO Auto-generated method stub
						if (c.playerLevel[3] &lt; c.getLevelForXP(c.playerXP[3])) {
							c.playerLevel[3] += heal;
							if (c.playerLevel[3] &gt; c
									.getLevelForXP(c.playerXP[3]))
								c.playerLevel[3] = c
										.getLevelForXP(c.playerXP[3]);
						}

						 c.foodDelay = System.currentTimeMillis();
						c.getPA().refreshSkill(3);
						c.sendMessage(&quot;You eat the &quot; + Item.getItemName(id)
								+ &quot;.&quot;);
						c.getCombat().resetPlayerAttack();
						c.attackTimer += 2;
						c.startAnimation(829);
						switch (id) {
						case 1897:
							c.getItems().addItem(1899, 1);
							break;
						case 1899:
							c.getItems().addItem(1901, 1);
							break;
						case 1891:
							c.getItems().addItem(1893, 1);
							break;
						case 1893:
							c.getItems().addItem(1895, 1);
							break;

						case 2289:
							c.getItems().addItem(2291, 1);
							break;

						case 2293:
							c.getItems().addItem(2295, 1);
							break;

						case 2297:
							c.getItems().addItem(2299, 1);
							break;

						}
						c.setBusy(false);
						container.stop();
					}

					@Override
					public void stop() {
						// TODO Auto-generated method stub
						c.setBusy(false);

					}

				}, 1);
			}

		}
	}

}

[/code]</description>
    
    <lastBuildDate>Wed, 04 Jul 2012 14:39:01 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/eating-timer/448203.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Eating Timer</title>
        <dc:creator><![CDATA[@nickypie nickypie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/nickypie">@nickypie</a> wrote:</p>
          <blockquote>
              <p>Thank you sir, you think 2 or 3 is the best?</p>
<p>edit - im the one who can tell , sorry  ;D</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/eating-timer/448203/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/eating-timer/448203/3</link>
        <pubDate>Wed, 04 Jul 2012 14:39:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-448203-3</guid>
        <source url="https://forum.moparisthebest.com/t/eating-timer/448203.rss">Eating Timer</source>
      </item>
      <item>
        <title>Eating Timer</title>
        <dc:creator><![CDATA[@RandQm RandQm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/randqm">@RandQm</a> wrote:</p>
          <blockquote>
              <p>At the bottom of your file:</p>
<pre><code class="lang-auto"></code></pre>
<p>Increase the value, 300-400 whatever you want it to be</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/eating-timer/448203/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/eating-timer/448203/2</link>
        <pubDate>Wed, 04 Jul 2012 14:28:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-448203-2</guid>
        <source url="https://forum.moparisthebest.com/t/eating-timer/448203.rss">Eating Timer</source>
      </item>
      <item>
        <title>Eating Timer</title>
        <dc:creator><![CDATA[@nickypie nickypie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/nickypie">@nickypie</a> wrote:</p>
          <blockquote>
              <p>My server uses eating in eatingcontent.java not food.java. so when i edit anything in food.java it doesnt work.</p>
<p>Here is the file i use for editing food. I cant seem to make the food timer any slower, it is very fast.</p>
<p>[code]package server.content;</p>
<p>import server.event.CycleEvent;<br>
import server.event.CycleEventContainer;<br>
import server.event.CycleEventHandler;<br>
import server.model.items.Item;<br>
import server.model.players.Client;</p>
<p>public class EatingContent {</p>
<pre><code>private static final short[][] FOOD = { { 247, 2 }, // Jangerberries
</code></pre>
<p>{7946,16},//monkfish son 			<br>
{ 315, 3 }, // Shrimps<br>
{ 319, 1 }, // Anchovies<br>
{ 325, 4 }, // Sardine<br>
{ 329, 9 }, // Salmon<br>
{ 333, 7 }, // Trout<br>
{ 337, 6 }, // Giant carp<br>
{ 339, 7 }, // Cod<br>
{ 347, 5 }, // Herring<br>
{ 351, 8 }, // Pike<br>
{ 355, 6 }, // Mackerel<br>
{ 361, 10 }, // Tuna<br>
{ 365, 13 }, // Bass<br>
{ 373, 14 }, // Swordfish<br>
{ 379, 12 }, // Lobster<br>
{ 385, 20 }, // Shark<br>
{ 391, 22 }, // Manta ray<br>
{ 397, 21 }, // Sea turtle<br>
{ 403, 4 }, // Edible seaweed<br>
// {464, hardcode}, //Strange fruit<br>
// {1851, cantbeeaten}, //Tenti pineapple<br>
{ 1861, 3 }, // Ugthanki meat<br>
{ 1869, 2 }, // Chopped tomato<br>
{ 1871, 1 /* sadtoseeamancrymessage <em>/}, // Chopped onion<br>
// {1875, goodquestion}, //Onion &amp; tomato<br>
{ 1883, 19 /</em> randommessages <em>/}, // Ugthanki kebab<br>
{ 1885, 19 /</em> randommessages <em>/}, // Ugthanki kebab<br>
{ 1891, 4, 1893 }, // Cake<br>
{ 1893, 4, 1895 }, // 2/3 cake<br>
{ 1895, 4 }, // Slice of cake<br>
{ 1897, 5, 1899 }, // Chocolate cake<br>
{ 1899, 5, 1901 }, // 2/3 chocolate cake<br>
{ 1901, 5 }, // Chocolate slice<br>
{ 1942, 1 }, // Potato<br>
{ 1957, 1 }, // Onion<br>
{ 1959, 14 }, // Pumpkin<br>
{ 1961, 12 }, // Easter egg<br>
{ 1963, 2 }, // Banana<br>
{ 1965, 1 }, // Cabbage<br>
{ 1967, 2 }, // Cabbage<br>
{ 1969, 2 }, // Spinach roll<br>
// {1971, randomandstuff}, //Kebab<br>
{ 1973, 3 }, // Chocolate bar<br>
{ 1982, 2 }, // Tomato<br>
// {1984, nonesplitout}, //Rotten apple<br>
{ 1985, 2 }, // Cheese<br>
{ 2003, 11 }, // Stew<br>
{ 2011, 19 }, // Curry<br>
{ 2102, 2 }, // Lemon<br>
{ 2104, 1 }, // Lemon chunks<br>
{ 2106, 1 }, // Lemon slices<br>
{ 2108, 2 }, // Orange<br>
{ 2110, 1 }, // Orange chunks<br>
{ 2112, 1 }, // Orange slices<br>
// {2114, uneatable}, //Pineapple<br>
{ 2116, 2 }, // Pineapple chunks<br>
{ 2118, 2 }, // Pineapple ring<br>
{ 2120, 2 }, // Lime<br>
{ 2122, 2 }, // Lime chunks<br>
{ 2124, 2 }, // Lime slices<br>
{ 2126, 2 }, // Dwellberries<br>
{ 2128, 1 }, // Equa leaves<br>
// {2130, idk}, //Pot of cream<br>
{ 2140, 3 }, // Cooked chicken<br>
{ 2142, 3 }, // Cooked meat<br>
{ 2149, 11 }, // Lava eel<br>
{ 2152, 3 }, // Toadâs legs<br>
/</em><br>
* {2154, idk}, //Equa toadâs legs {2156, idk}, //Spicy toadâs legs<br>
* {2158, idk}, //Seasoned legs {2160, idk}, //Spicy worm {2162,<br>
* idk}, //King worm {2173, idk}, //Odd gnomebowl {2179, idk},<br>
* //Unfinished bowl {2181, idk}, //Unfinished bowl {2183, idk},<br>
* //Unfinished bowl {2185, idk}, //Chocolate bomb {2187, idk},<br>
* //Tangled toadâs legs {2189, idk}, //Unfinished bowl {2191, idk},<br>
* //Worm hole {2193, idk}, //Unfinished bowl {2195, idk}, //Veg<br>
* ball {2197, idk}, //Odd crunchies {2203, idk}, //Unfinished<br>
* crunchy {2205, idk}, //Worm crunchies {2207, idk}, //Unfinished<br>
* crunchy {2209, idk}, //Chocchip crunchies {2211, idk},<br>
* //Unfinished crunchy {2213, idk}, //Spicy crunchies {2215, idk},<br>
* //Unfinished crunchy {2217, idk}, //Toad crunchies {2219, idk},<br>
* //Premade wâm batta {2221, idk}, //Premade tâd batta {2223, idk},<br>
* //Premade c+t batta {2225, idk}, //Premade frât batta {2227,<br>
* idk}, //Premade veg batta {2229, idk}, //Premade choc bomb {2231,<br>
* idk}, //Premade ttl {2233, idk}, //Premade worm hole {2235, idk},<br>
* //Premade veg ball {2237, idk}, //Premade wâm crunâ {2239, idk},<br>
* //Premade châ crunch {2241, idk}, //Premade sây crunch {2243,<br>
* idk}, //Premade tâd crunch {2245, idk}, //Odd batta {2251, idk},<br>
* //Unfinished batta {2253, idk}, //Worm batta {2255, idk}, //Toad<br>
* batta {2257, idk}, //Unfinished batta {2259, idk}, //Cheese+tom<br>
* batta {2261, idk}, //Unfinished batta {2263, idk}, //Unfinished<br>
* batta {2265, idk}, //Unfinished batta {2267, idk}, //Unfinished<br>
* batta {2269, idk}, //Unfinished batta {2271, idk}, //Unfinished<br>
* batta {2273, idk}, //Unfinished batta {2275, idk}, //Unfinished<br>
* batta {2277, idk}, //Fruit batta {2279, idk}, //Unfinished batta<br>
* {2281, idk}, //Vegetable batta<br>
<em>/<br>
{ 2289, 7, 2291 }, // Plain pizza<br>
{ 2291, 7 }, // 1/2 plain pizza<br>
{ 2293, 8, 2295 }, // Meat pizza<br>
{ 2295, 8 }, // 1/2 meat pizza<br>
{ 2297, 9, 2299 }, // Anchovy pizza<br>
{ 2299, 9 }, // 1/2 anchovy pizza<br>
{ 2301, 11, 2303 }, // Pineapple pizza<br>
{ 2303, 11 }, // 1/2 pâapple pizza<br>
{ 2309, 5 }, // Bread<br>
{ 2323, 7, 2335 }, // Apple pie<br>
{ 2325, 5, 2333 }, // Redberry pie<br>
{ 2327, 6, 2331 }, // Meat pie<br>
{ 2331, 6 }, // Half a meat pie<br>
{ 2333, 5 }, // Half a redberry pie<br>
{ 2335, 7 }, // Half an apple pie<br>
// {2343, idk}, //Cooked oomlie wrap<br>
// {2379, DONE}, //Rock cake<br>
// {2398, idk}, //Cave nightshade<br>
{ 2878, 10 }, // Cooked chompy<br>
{ 6883, 8 }, // PEACHES<br>
/</em><br>
* {3144, IDK}, //Cooked karambwan {3146, IDK}, //Poison karambwan {3151,<br>
* IDK}, //Karambwanji {3162, IDK}, //Sliced banana {3168, IDK}, //Seaweed<br>
* sandwich {3177, IDK}, //Banana left {3228, IDK}, //Cooked rabbit {3369,<br>
* IDK}, //Thin snail meat {3371, IDK}, //Lean snail meat {3373, IDK}, //Fat<br>
* snail meat {3381, IDK}, //Cooked slimy eel {4012, IDK}, //Monkey nuts<br>
* {4014, IDK}, //Monkey bar {4016, IDK}, //Banana stew {4291, IDK},<br>
* //Cooked chicken {4293, IDK}, //Cooked meat {4485, IDK}, //White pearl<br>
* {4517, IDK}, //Giant frog legs {4558, IDK}, //Blue sweets {4559, IDK},<br>
* //Deep blue sweets {4560, IDK}, //White sweets {4561, IDK}, //Purple<br>
* sweets {4562, IDK}, //Red sweets {4563, IDK}, //Green sweets {4564, IDK},<br>
* //Pink sweets {4608, IDK}, //Super kebab {4620, IDK}, //Black mushroom<br>
* {5003, IDK}, //Cave eel {5004, IDK}, //Frog spawn {5504, IDK},<br>
* //Strawberry {5733, IDK}, //Rotten potato {5972, IDK}, //Papaya fruit<br>
* {5982, IDK}, //Watermelon {5984, IDK}, //Watermelon slice {5988, IDK},<br>
* //Cooked sweetcorn {6202, IDK}, //Fishlike thing {6206, IDK}, //Fishlike<br>
* thing {6297, IDK}, //Spider on stick {6299, IDK}, //Spider on shaft<br>
* {6311, IDK}, //Gout tuber {6469, IDK}, //White tree fruit {6701, IDK},<br>
* //Baked potato {6703, IDK}, //Potato with butter {6705, IDK}, //Potato<br>
* with cheese {6768, IDK}, //Poisoned cheese {6794, IDK}, //Choc-ice {6883,<br>
* IDK}, //Peach {6961, IDK}, //Baguette {6962, IDK}, //Triangle sandwich<br>
* {6963, IDK}, //Roll {6965, IDK}, //Square sandwich {6969, IDK}, //Shark<br>
* {7054, IDK}, //Chilli potato {7056, IDK}, //Egg potato {7058, IDK},<br>
* //Mushroom potato {7060, IDK}, //Tuna potato {7062, IDK}, //Chilli con<br>
* carne {7064, IDK}, //Egg and tomato {7066, IDK}, //Mushroom &amp; onion<br>
* {7068, IDK}, //Tuna and corn {7070, IDK}, //Minced meat {7072, IDK},<br>
* //Spicy sauce {7078, IDK}, //Scrambled egg {7082, IDK}, //Fried mushrooms<br>
* {7084, IDK}, //Fried onions {7086, IDK}, //Chopped tuna {7088, IDK},<br>
* //Sweetcorn {7178, IDK}, //Garden pie {7180, IDK}, //Half a garden pie<br>
* {7188, IDK}, //Fish pie {7190, IDK}, //Half a fish pie {7198, IDK},<br>
* //Admiral pie {7200, IDK}, //Half an admiral pie {7208, IDK}, //Wild pie<br>
* {7210, IDK}, //Half a wild pie {7218, IDK}, //Summer pie {7220, IDK},<br>
* //Half a summer pie {7223, IDK}, //Roast rabbit {7228, IDK}, //Cooked<br>
* chompy {7479, IDK}, //Spicy stew {7509, IDK}, //Dwarven rock cake {7510,<br>
* IDK}, //Dwarven rock cake {7521, IDK}, //Cooked crab meat {7523, IDK},<br>
* //Cooked crab meat {7524, IDK}, //Cooked crab meat {7525, IDK}, //Cooked<br>
* crab meat {7526, IDK}, //Cooked crab meat {7530, IDK}, //Cooked fishcake<br>
* {7568, IDK}, //Cooked jubbly {7572, IDK}, //Red banana {7573, IDK},<br>
* //Tchiki monkey nuts {7574, IDK}, //Sliced red banana {7575, IDK},<br>
* //Tchiki nut paste {7579, IDK}, //Stuffed snake {7928, IDK}, //Easter egg<br>
* {7929, IDK}, //Easter egg {7930, IDK}, //Easter egg {7931, IDK}, //Easter<br>
* egg {7932, IDK}, //Easter egg {7933, IDK}, //Easter egg {7934, IDK},<br>
* //Field ration {7943, IDK}, //Fresh monkfish {7946, IDK}, //Monkfish<br>
* {9052, IDK}, //Locust meat {9475, IDK}, //Mint cake {9527, IDK}, //Fruit<br>
* batta {9529, IDK}, //Toad batta {9531, IDK}, //Worm batta {9533, IDK},<br>
* //Vegetable batta {9535, IDK}, //Cheese+tom batta {9538, IDK}, //Toad<br>
* crunchies {9540, IDK}, //Spicy crunchies {9542, IDK}, //Worm crunchies<br>
* {9544, IDK}, //Chocchip crunchies {9547, IDK}, //Worm hole {9549, IDK},<br>
* //Veg ball {9551, IDK}, //Tangled toadâs legs {9553, IDK}, //Chocolate<br>
* bomb {9980, IDK}, //Roast bird meat {9988, IDK}, //Roast beast meat<br>
* {9994, IDK}, //Spicy tomato {9996, IDK}, //Spicy minced meat {10136,<br>
* IDK}, //Rainbow fish {10476, IDK}, //Purple sweets {10538, IDK},<br>
* //Defender horn {10960, IDK}, //Green gloop soup {10961, IDK},<br>
* //Frogspawn gumbo {10962, IDK}, //Frogburger {10963, IDK}, //Coated<br>
* frogsâ legs {10964, IDK}, //Bat shish {10965, IDK}, //Fingers {10966,<br>
* IDK}, //Grubs Ã  la mode {10967, IDK}, //Roast frog {10968, IDK},<br>
* //Mushrooms {10969, IDK}, //Fillets {10970, IDK}, //Loach {10971, IDK},<br>
* //Eel sushi {11023, IDK}, //Magic egg {11026, IDK}, //Chocolate kebbit<br>
* {11205, IDK}, //Shrunk ogleroot<br>
*/<br>
};</p>
<pre><code>public static void eat(final Client c, int itemId, int slot) {
	for (short[] food : FOOD) {
		final int id = food[0];
		final int heal = food[1];
		if (itemId == id) {
			if (c.duelRule[6]) {
				c.sendMessage("You may not eat in this duel.");
				return;
			}

		
			if (c.checkBusy()) {
				c.sendMessage("You are too busy to do this.");
				return;
			}
			c.setBusy(true);
			c.getItems().deleteItem(id, slot, 1);
			CycleEventHandler.getSingleton().addEvent(c, new CycleEvent() {

				@Override
				public void execute(CycleEventContainer container) {
					// TODO Auto-generated method stub
					if (c.playerLevel[3] &lt; c.getLevelForXP(c.playerXP[3])) {
						c.playerLevel[3] += heal;
						if (c.playerLevel[3] &gt; c
								.getLevelForXP(c.playerXP[3]))
							c.playerLevel[3] = c
									.getLevelForXP(c.playerXP[3]);
					}

					 c.foodDelay = System.currentTimeMillis();
					c.getPA().refreshSkill(3);
					c.sendMessage("You eat the " + Item.getItemName(id)
							+ ".");
					c.getCombat().resetPlayerAttack();
					c.attackTimer += 2;
					c.startAnimation(829);
					switch (id) {
					case 1897:
						c.getItems().addItem(1899, 1);
						break;
					case 1899:
						c.getItems().addItem(1901, 1);
						break;
					case 1891:
						c.getItems().addItem(1893, 1);
						break;
					case 1893:
						c.getItems().addItem(1895, 1);
						break;

					case 2289:
						c.getItems().addItem(2291, 1);
						break;

					case 2293:
						c.getItems().addItem(2295, 1);
						break;

					case 2297:
						c.getItems().addItem(2299, 1);
						break;

					}
					c.setBusy(false);
					container.stop();
				}

				@Override
				public void stop() {
					// TODO Auto-generated method stub
					c.setBusy(false);

				}

			}, 1);
		}

	}
}
</code></pre>
<p>}</p>
<p>[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/eating-timer/448203/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/eating-timer/448203/1</link>
        <pubDate>Wed, 04 Jul 2012 14:25:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-448203-1</guid>
        <source url="https://forum.moparisthebest.com/t/eating-timer/448203.rss">Eating Timer</source>
      </item>
  </channel>
</rss>
