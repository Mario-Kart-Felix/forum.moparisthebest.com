<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Dragon Age Cache Downloader not working</title>
    <link>https://forum.moparisthebest.com/t/dragon-age-cache-downloader-not-working/554896</link>
    <description>Title. Reposting this as my last post got nowhere. this is what my updatecache looks like:
[CODE]import java.net.URL;
import java.net.URLConnection;
import java.util.zip.*;
import java.io.*;
import javax.swing.JOptionPane;

public class UpdateCache implements Runnable {

	public static final String ZIP_URL = &quot;https://dl.dropboxusercontent.com/s/ksyjth05203c3qi/.DEcache.zip&quot;;
	public static final String VERSION_URL = &quot;https://dl.dropboxusercontent.com/s/rjqvzkpuz3x4i63/cacheVersion.txt&quot;;
	public static final String VERSION_FILE = &quot;cacheVersion.dat&quot;;
	private Client client;
	Client frame;
    public UpdateCache(Client client) {
                this.client = client;
    }
		
    private void drawLoadingText(int amount, String text) {
                client.drawLoadingText(amount, text);
    }
	
	public double getCurrentVersion(){
		try {
			BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(VERSION_FILE)));
			return Double.parseDouble(br.readLine());
		} catch (Exception e) {
			return 0.1;
		}
	}
	
	public double getNewestVersion(){
		try {
			URL tmp = new URL(VERSION_URL);
			BufferedReader br = new BufferedReader(new InputStreamReader(tmp.openStream()));
			return Double.parseDouble(br.readLine());
		} catch (Exception e) {
			handleException(e);
			return -1;
		}
	}
	
	private void handleException(Exception e){
		StringBuilder strBuff = new StringBuilder();
		strBuff.append(&quot;Please Screenshot this message, and send it to an admin!\r\n\r\n&quot;);
        StringBuilder append = strBuff.append(e.getClass().getName()).append(&quot; \&quot;&quot;).append(e.getMessage()).append(&quot;\&quot;\r\n&quot;);
		for(StackTraceElement s : e.getStackTrace())
			strBuff.append(s.toString()).append(&quot;\r\n&quot;);
		alert(&quot;Exception [&quot; + e.getClass().getSimpleName() + &quot;]&quot;,strBuff.toString(),true);
	}
	
	private void alert(String msg){
		alert(&quot;Message&quot;,msg,false);
	}
	
	private void alert(String title,String msg,boolean error){
		JOptionPane.showMessageDialog(null,
			   msg,
			   title,
			    (error ? JOptionPane.ERROR_MESSAGE : JOptionPane.PLAIN_MESSAGE));
	}
	
	@Override
	public void run() {
	drawLoadingText(0, &quot;Checking Versions&quot;);
		try{
		double newest = getNewestVersion();
		if(newest &gt; this.getCurrentVersion()){
			int n = JOptionPane.showConfirmDialog(
				    null,
				    &quot;There is an update to version &quot; + newest + &quot;\n&quot; +
					&quot;Would you like to update?&quot;,
				    &quot;Current version: &quot;+ getCurrentVersion(),
				    JOptionPane.YES_NO_OPTION);
			if(n == 0){
				updateClient();
				drawLoadingText(0, &quot;Cache has been updated, please restart the client!&quot;);
				alert(&quot;Cache has been updated, please restart the client!&quot;);
				OutputStream out = new FileOutputStream(VERSION_FILE);
				out.write(String.valueOf(newest).getBytes());;
				System.exit(0);
			}else{
				alert(&quot; Your client may not load correct &quot; +
				getCurrentVersion());
				//System.exit(0);
			}
		}
		}catch(Exception e){
			handleException(e);
		}
	}
	
	private void updateClient() {
		File clientZip = downloadClient();
		if(clientZip != null){
		unZip(clientZip);
		}
	}
	
	private void unZip(File clientZip) {
		try {
			unZipFile(clientZip,new File(signlink.findcachedir()));
			clientZip.delete();
		} catch (IOException e) {
			handleException(e);
		}
	}
	
	private void unZipFile(File zipFile,File outFile) throws IOException{
		ZipInputStream zin = new ZipInputStream(new BufferedInputStream(new FileInputStream(zipFile)));
		ZipEntry e;
		long max = 0;
		long curr = 0;
		while((e = zin.getNextEntry()) != null)
			max += e.getSize();
		zin.close();
		ZipInputStream in = new ZipInputStream(new BufferedInputStream(new FileInputStream(zipFile)));
		while((e = in.getNextEntry()) != null){
			if(e.isDirectory())
				new File(outFile,e.getName()).mkdirs();
			else{
				FileOutputStream out = new FileOutputStream(new File(outFile,e.getName()));
				byte[] b = new byte[1024];
				int len;
				while((len = in.read(b,0,b.length)) &gt; -1){
					curr += len;
						out.write(b, 0, len);
						setUnzipPercent((int)((curr * 100) / max));
				}
				out.flush();
				out.close();
			}
		}
	}

	public int percent = 0;
	
	public void setDownloadPercent(int amount){
	        percent = amount;
			drawLoadingText(amount, &quot;Downloading Cache&quot; + &quot; - &quot; + amount + &quot;%&quot;);
	}
	
	public int percent2 = 0;
	
	public void setUnzipPercent(int amount2){
	        percent2 = amount2;
			drawLoadingText(amount2, &quot;Extracting Cache&quot; + &quot; - &quot; + amount2 + &quot;%&quot;);
	}

	private File downloadClient(){
		File ret = new File(signlink.findcachedir()+&quot;cache.zip&quot;);
		try{
		OutputStream out = new FileOutputStream(ret);
		URLConnection conn = new URL(ZIP_URL).openConnection();
		InputStream in = conn.getInputStream();
		long max = conn.getContentLength();
		long curr = 0;
		byte[] b = new byte[1024];
		int len;
		while((len = in.read(b, 0, b.length)) &gt; -1){
			out.write(b,0,len);
			curr += len;
			setDownloadPercent((int)((curr * 100) / max));
		}
		out.flush();
		out.close();
		in.close();
		return ret;
		}catch(Exception e){
			handleException(e);
				ret.delete();
			return null;
		}
	}
}[/CODE]</description>
    
    <lastBuildDate>Sat, 26 Mar 2016 20:42:01 +0000</lastBuildDate>
    <category>Game Development</category>
    <atom:link href="https://forum.moparisthebest.com/t/dragon-age-cache-downloader-not-working/554896.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Dragon Age Cache Downloader not working</title>
        <dc:creator><![CDATA[@fpsnipmob fpsnipmob]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/fpsnipmob">@fpsnipmob</a> wrote:</p>
          <blockquote>
              <p>Whatâ€™s the error?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dragon-age-cache-downloader-not-working/554896/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dragon-age-cache-downloader-not-working/554896/2</link>
        <pubDate>Sat, 26 Mar 2016 20:42:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554896-2</guid>
        <source url="https://forum.moparisthebest.com/t/dragon-age-cache-downloader-not-working/554896.rss">Dragon Age Cache Downloader not working</source>
      </item>
      <item>
        <title>Dragon Age Cache Downloader not working</title>
        <dc:creator><![CDATA[@Divnityrs Divnityrs]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/divnityrs">@Divnityrs</a> wrote:</p>
          <blockquote>
              <p>Title. Reposting this as my last post got nowhere. this is what my updatecache looks like:</p>
<p>[CODE]import java.net.URL;<br>
import java.net.URLConnection;<br>
import java.util.zip.<em>;<br>
import <a href="http://java.io" rel="nofollow noopener">java.io</a>.</em>;<br>
import javax.swing.JOptionPane;</p>
<p>public class UpdateCache implements Runnable {</p>
<pre><code>public static final String ZIP_URL = "https://dl.dropboxusercontent.com/s/ksyjth05203c3qi/.DEcache.zip";
public static final String VERSION_URL = "https://dl.dropboxusercontent.com/s/rjqvzkpuz3x4i63/cacheVersion.txt";
public static final String VERSION_FILE = "cacheVersion.dat";
private Client client;
Client frame;
public UpdateCache(Client client) {
            this.client = client;
}
	
private void drawLoadingText(int amount, String text) {
            client.drawLoadingText(amount, text);
}

public double getCurrentVersion(){
	try {
		BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(VERSION_FILE)));
		return Double.parseDouble(br.readLine());
	} catch (Exception e) {
		return 0.1;
	}
}

public double getNewestVersion(){
	try {
		URL tmp = new URL(VERSION_URL);
		BufferedReader br = new BufferedReader(new InputStreamReader(tmp.openStream()));
		return Double.parseDouble(br.readLine());
	} catch (Exception e) {
		handleException(e);
		return -1;
	}
}

private void handleException(Exception e){
	StringBuilder strBuff = new StringBuilder();
	strBuff.append("Please Screenshot this message, and send it to an admin!\r\n\r\n");
    StringBuilder append = strBuff.append(e.getClass().getName()).append(" \"").append(e.getMessage()).append("\"\r\n");
	for(StackTraceElement s : e.getStackTrace())
		strBuff.append(s.toString()).append("\r\n");
	alert("Exception [" + e.getClass().getSimpleName() + "]",strBuff.toString(),true);
}

private void alert(String msg){
	alert("Message",msg,false);
}

private void alert(String title,String msg,boolean error){
	JOptionPane.showMessageDialog(null,
		   msg,
		   title,
		    (error ? JOptionPane.ERROR_MESSAGE : JOptionPane.PLAIN_MESSAGE));
}

@Override
public void run() {
drawLoadingText(0, "Checking Versions");
	try{
	double newest = getNewestVersion();
	if(newest &gt; this.getCurrentVersion()){
		int n = JOptionPane.showConfirmDialog(
			    null,
			    "There is an update to version " + newest + "\n" +
				"Would you like to update?",
			    "Current version: "+ getCurrentVersion(),
			    JOptionPane.YES_NO_OPTION);
		if(n == 0){
			updateClient();
			drawLoadingText(0, "Cache has been updated, please restart the client!");
			alert("Cache has been updated, please restart the client!");
			OutputStream out = new FileOutputStream(VERSION_FILE);
			out.write(String.valueOf(newest).getBytes());;
			System.exit(0);
		}else{
			alert(" Your client may not load correct " +
			getCurrentVersion());
			//System.exit(0);
		}
	}
	}catch(Exception e){
		handleException(e);
	}
}

private void updateClient() {
	File clientZip = downloadClient();
	if(clientZip != null){
	unZip(clientZip);
	}
}

private void unZip(File clientZip) {
	try {
		unZipFile(clientZip,new File(signlink.findcachedir()));
		clientZip.delete();
	} catch (IOException e) {
		handleException(e);
	}
}

private void unZipFile(File zipFile,File outFile) throws IOException{
	ZipInputStream zin = new ZipInputStream(new BufferedInputStream(new FileInputStream(zipFile)));
	ZipEntry e;
	long max = 0;
	long curr = 0;
	while((e = zin.getNextEntry()) != null)
		max += e.getSize();
	zin.close();
	ZipInputStream in = new ZipInputStream(new BufferedInputStream(new FileInputStream(zipFile)));
	while((e = in.getNextEntry()) != null){
		if(e.isDirectory())
			new File(outFile,e.getName()).mkdirs();
		else{
			FileOutputStream out = new FileOutputStream(new File(outFile,e.getName()));
			byte[] b = new byte[1024];
			int len;
			while((len = in.read(b,0,b.length)) &gt; -1){
				curr += len;
					out.write(b, 0, len);
					setUnzipPercent((int)((curr * 100) / max));
			}
			out.flush();
			out.close();
		}
	}
}

public int percent = 0;

public void setDownloadPercent(int amount){
        percent = amount;
		drawLoadingText(amount, "Downloading Cache" + " - " + amount + "%");
}

public int percent2 = 0;

public void setUnzipPercent(int amount2){
        percent2 = amount2;
		drawLoadingText(amount2, "Extracting Cache" + " - " + amount2 + "%");
}

private File downloadClient(){
	File ret = new File(signlink.findcachedir()+"cache.zip");
	try{
	OutputStream out = new FileOutputStream(ret);
	URLConnection conn = new URL(ZIP_URL).openConnection();
	InputStream in = conn.getInputStream();
	long max = conn.getContentLength();
	long curr = 0;
	byte[] b = new byte[1024];
	int len;
	while((len = in.read(b, 0, b.length)) &gt; -1){
		out.write(b,0,len);
		curr += len;
		setDownloadPercent((int)((curr * 100) / max));
	}
	out.flush();
	out.close();
	in.close();
	return ret;
	}catch(Exception e){
		handleException(e);
			ret.delete();
		return null;
	}
}
</code></pre>
<p>}[/CODE]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dragon-age-cache-downloader-not-working/554896/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dragon-age-cache-downloader-not-working/554896/1</link>
        <pubDate>Wed, 02 Mar 2016 18:09:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554896-1</guid>
        <source url="https://forum.moparisthebest.com/t/dragon-age-cache-downloader-not-working/554896.rss">Dragon Age Cache Downloader not working</source>
      </item>
  </channel>
</rss>
