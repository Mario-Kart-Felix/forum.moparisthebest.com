<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>OOP Programming</title>
    <link>https://forum.moparisthebest.com/t/oop-programming/534458</link>
    <description>[size=14pt][b]In this tutorial I&#39;m going to teach you the concept of OOP or Object Orientated Programming.[/b][/size]



[b]Getting started:[/b]
When you know what you have to program, you will obviously want to start programming.
A bad way, which most people still appear to do, is make a class and start programming right away.
This is not how you should program!

[i]We have an idea of what we want to program now what&#39;s next?[/i]
Instead of thinking how to program it, we will think what we need.
So imagine we want to make an OXO game.

[b]What do we need?[/b]
A board would be handy, as well as tiles where the O/X goes in.

So we go make the objects for that BEFORE doing anything else.

[b]Now what properties would the tile need?[/b]
We will need a location of a tile, so we will use x and y for defining it&#39;s coordinates.
We will also need to know the state of the tile, whether it displays an X, O or nothing.
That should be it so let&#39;s make our Tile object.
[code=java]
public class Tile {
    //Here we declare our coordinate variables.
    private int x;
    private int y;
    //Here we declare our state variable.
    private String state;

    //Constructor, code in the constructor is executed when making a new instance of the object with the given paramaters.
    public Tile(int x, int y) {
        this.x = x;
        this.y = y;
    }

    //Routine which edits the tile object&#39;s assigned state.
    public void modifyState(String state) {
        this.state = state;
        //Write to board
    }
}
[/code]


Now you might have not realized but we have done a few important OOP things here, apart from what I told before.
First of all we made our properties private.
We also made a modifyState routine in the our object&#39;s class, while some(many) would be doing it in their main program.

[b]Now what&#39;s so good about this?[/b]
It&#39;s OOP.
Everything to do with the object, should be done in the object, without being accessible for anything else.
Outside code should be able to use the object, but it has no business with what&#39;s all in there and what happens there.


[b]Side Information:[/b]
Another thing you might have noticed (which doesn&#39;t really have to do with OOP) is,
that in the class constructor and the modifyState routine, I use &quot;this.&quot;

It&#39;s an unwritten rule to use the same or at least something that describes the same, as parameter in your method
as the property you want to assign it to. This is for readability, so another programmer (or you after digging a project back up after months)
still now exactly what&#39;s there.

Because our parameter is (e.g.) x and our property we want to assign it to, is as well, our program can&#39;t know which one we mean.
Some people prefer using an underscore in the parameter so it would become: 

[code=java]public void routine(String _something) {
    something = _something
}[/code]

I prefer to use:
[code=java]public void routine(String something) {
    this.something = something
}[/code]

It is really a matter of preference.
But what is &quot;this&quot; exactly?
&quot;this.&quot; refers to the class we are operating in at this exact moment.
this.x will refer to the x property in our object class, since when we are calling our routing we&#39;re operating in that class.



[i]Now, for the board you would do the same, creating an objects, properties and methods you would need.[/i]

Now, for OXO we will have 9 tiles.
When a tile would be clicked by a player, we will not go creating a handler for ever single tile clicked and do a bunch of checks for the game play.
As an efficient programmer we want to check everything through as less code as possible.
What we are going to do is not get programming yet but make a repository for the tiles.

[code=java]
public class TileRepository {
    //We create a list to hold our tile objects.
    private List&lt;Tile&gt; tiles as new List&lt;Tile&gt;();

    //The class constructor, when an instance of the class is made we will create our tiles and store it in the tiles list.
    public TileRepository() {
        for (int index = 0; index &lt; 10; index ++) { //Loops 9 times (9 tiles)
        //Our tiles will be in a nice square, so the coordinates will go up by the same step.
        //So we can use for-ception!
            for (int xCoord = 15; xCoord &lt; 220; xCoord STEP) {
                for (int yCoord = 107; yCoord &lt; 310; yCoord STEP) {
                    tiles.add(new Tile(xCoord, yCoord)) //We create a new tile with it&#39;s coordinates and directly put it in the tiles list.
                }
            }
        }
    }
    //Retrieves our list containing our tile objects.
    public List&lt;Tile&gt; getTilesList() {
        return tiles;
    }
}[/code]



Now we have everything we need we can start programming the actual program.
[code=java]
public class XOXGame {

    //We create an instance of a TileRepository but it still refers to nothing at this point.
    private TileRepository tileRepo = null;
    //Just a quick variable for the example, which would hold which player&#39;s turn it is.
    //If this would be an actual working game, we would also create an object for the player that would hold whether it&#39;s his/her turn, the points etc...
    private int playerTurn;

    //The pinpoint of our application, the program starts here.
    private static void main(String[] arguments) {
        tileRepo = new TileRepository(); //Creates an instance of our TileRepository, our tiles will be created due the TileRepository constructor like you saw before.
    }

    //A quick example what we would do when we click a tile as player.
    private static void exampleClickTile(clickedObject as Object) {
        for (tile : tileRepo.getTilesList()) {
            if (tile == clickedObject) {
                tile.modifyState(playerTurn = 1 ? &quot;X&quot; : &quot;O&quot;);
            }
        }
    }
}
[/code]


Like you could see now, we never went calling and creating methods for objects.
We only used methods made accessible by our objects. The object offers the method we need but we don&#39;t have business with anything else of the object.
This is OOP. What you should learn if you don&#39;t do it yet.

[code=java]tile.modifyState(playerTurn == 1 ? &quot;X&quot; : &quot;O&quot;);[/code]
This is a ternary statement, if you don&#39;t know what this is, arham04 made a tutorial on this: https://www.moparisthebest.com/smf/index.php/topic,649930.msg4365322.html#msg4365322




[b]Some pro&#39;s of OOP:[/b]

[ul][li]When we need to do changes, we will just need to edit our objects and whole our program will still be working perfect without touching it.[/li]
[li]It is somewhat slower to get started, but you will win much time in the end for above pro.[/li]
[li]It&#39;s readable, clear, another programmer (or you after digging up the project after a long time) will catch up very quickly,
while with non-OOP you have no clue what you&#39;re looking at.[/li][/ul]


[b]Some con&#39;s of OOP:[/b]

[ul][li]If your program is really small, you might have been faster of doing it non-OOP. Thought the readability will most certainly still will be better the OOP way.[/li][/ul]


[b]To Be Continued.[/b]</description>
    
    <lastBuildDate>Fri, 25 Oct 2013 18:13:18 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/oop-programming/534458.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>OOP Programming</title>
        <dc:creator><![CDATA[@Ambokile Ambokile]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ambokile">@Ambokile</a> wrote:</p>
          <blockquote>
              <p>[quote=“Clawz fury, post:19, topic:534458”][quote author=Strucker link=topic=653258.msg4378285#msg4378285 date=1382721569]<br>
<img src="https://forum.moparisthebest.com/images/emoji/twitter/frowning.png?v=5" title=":frowning:" class="emoji" alt=":frowning:"> plz finish this i needit<br>
[/quote]someone trying to get clean from drugs is going to make that almost impossible when the only people they hang out with are junkies[/quote]<br>
Clawz Furocrates</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/oop-programming/534458/21">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/oop-programming/534458/21</link>
        <pubDate>Fri, 25 Oct 2013 18:13:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534458-21</guid>
        <source url="https://forum.moparisthebest.com/t/oop-programming/534458.rss">OOP Programming</source>
      </item>
      <item>
        <title>OOP Programming</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="18" data-topic="534458">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/strucker/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Strucker:</div>
<blockquote>
<p><img src="https://forum.moparisthebest.com/images/emoji/twitter/frowning.png?v=5" title=":frowning:" class="emoji" alt=":frowning:"> plz finish this i needit</p>
</blockquote>
</aside>
<p>Move on from Delta, better programming habits will be taught if you use a more appealing base.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/oop-programming/534458/20">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/oop-programming/534458/20</link>
        <pubDate>Fri, 25 Oct 2013 18:12:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534458-20</guid>
        <source url="https://forum.moparisthebest.com/t/oop-programming/534458.rss">OOP Programming</source>
      </item>
      <item>
        <title>OOP Programming</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="18" data-topic="534458">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/strucker/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Strucker:</div>
<blockquote>
<p><img src="https://forum.moparisthebest.com/images/emoji/twitter/frowning.png?v=5" title=":frowning:" class="emoji" alt=":frowning:"> plz finish this i needit</p>
</blockquote>
</aside>
<p>read the docs, they’re there for a reason</p>
<p>and use something better than delta, like I said before, someone trying to get clean from drugs is going to make that almost impossible when the only people they hang out with are junkies</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/oop-programming/534458/19">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/oop-programming/534458/19</link>
        <pubDate>Fri, 25 Oct 2013 18:10:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534458-19</guid>
        <source url="https://forum.moparisthebest.com/t/oop-programming/534458.rss">OOP Programming</source>
      </item>
      <item>
        <title>OOP Programming</title>
        <dc:creator><![CDATA[@strucker Strucker]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/strucker">@strucker</a> wrote:</p>
          <blockquote>
              <p><img src="https://forum.moparisthebest.com/images/emoji/twitter/frowning.png?v=5" title=":frowning:" class="emoji" alt=":frowning:"> plz finish this i needit</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/oop-programming/534458/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/oop-programming/534458/18</link>
        <pubDate>Fri, 25 Oct 2013 17:19:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534458-18</guid>
        <source url="https://forum.moparisthebest.com/t/oop-programming/534458.rss">OOP Programming</source>
      </item>
      <item>
        <title>OOP Programming</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>[quote=“AtomicInt_, post:16, topic:534458”]OOP is more than data encapsulation…</p>
<p>There are four pillars of ‘true’ OOP they are:</p>
<ol>
<li>Polymorphism</li>
<li>Abstraction</li>
<li>Encapsulation</li>
<li>Inheritance</li>
</ol>
<p>[hr]</p>
<p>Perhaps you should cover all four, otherwise this isn’t a OOP tutorial.[/quote]<br>
and once you learn and understand all of them java becomes much more enjoyable and with some concurrency knowledge rsps becomes childs play to program <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/oop-programming/534458/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/oop-programming/534458/17</link>
        <pubDate>Tue, 22 Oct 2013 21:09:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534458-17</guid>
        <source url="https://forum.moparisthebest.com/t/oop-programming/534458.rss">OOP Programming</source>
      </item>
      <item>
        <title>OOP Programming</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <p>OOP is more than data encapsulation…</p>
<p>There are four pillars of ‘true’ OOP they are:</p>
<ol>
<li>Polymorphism</li>
<li>Abstraction</li>
<li>Encapsulation</li>
<li>Inheritance</li>
</ol>
<p>[hr]</p>
<p>Perhaps you should cover all four, otherwise this isn’t a OOP tutorial.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/oop-programming/534458/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/oop-programming/534458/16</link>
        <pubDate>Tue, 22 Oct 2013 18:29:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534458-16</guid>
        <source url="https://forum.moparisthebest.com/t/oop-programming/534458.rss">OOP Programming</source>
      </item>
      <item>
        <title>OOP Programming</title>
        <dc:creator><![CDATA[@relexlawl relexlawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/relexlawl">@relexlawl</a> wrote:</p>
          <blockquote>
              <p>I think oracle has a pretty good example of OO, it was something like this:</p>
<p>[code]public interface Pet {</p>
<pre><code>public String getSpeech();
</code></pre>
<p>}[/code]</p>
<p>[code]public final class Dog implements Pet {</p>
<pre><code>public String getSpeech() {
	return "Bark";
}
</code></pre>
<p>}[/code]</p>
<p>Or if you want to have same functions done for the sub-classes (the classes that implement/extend the superclass [Pet])</p>
<p>[code]public abstract class Pet {</p>
<pre><code>public void startRandomSpeech() {
	TaskManager.getInstance().submit(new Task() {
		int timer = getRandomSpeechTime();
		@Override
		public void execute() {
			if (timer-- &lt;= 0) {
				System.out.println("Pet: " + toString() + " - speech: " + getSpeech() 
					+ " - next speech: " + getRandomSpeechTime());
				timer = getRandomSpeechTime();
			}
		}
	}
}

public abstract String getSpeech();

public abstract int getRandomSpeechTime();
</code></pre>
<p>}[/code]</p>
<p>[code]public final class Dog extends Pet {</p>
<pre><code>public String getSpeech() {
	return "Bark";
}

public int getRandomSpeechTime() {
	return MathUtil.random(10);
}
</code></pre>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/oop-programming/534458/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/oop-programming/534458/15</link>
        <pubDate>Tue, 22 Oct 2013 18:22:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534458-15</guid>
        <source url="https://forum.moparisthebest.com/t/oop-programming/534458.rss">OOP Programming</source>
      </item>
      <item>
        <title>OOP Programming</title>
        <dc:creator><![CDATA[@doom_j doom_j]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/doom_j">@doom_j</a> wrote:</p>
          <blockquote>
              <p>[quote=“Clawz fury, post:13, topic:534458”][quote author=Arcik link=topic=653258.msg4377288#msg4377288 date=1382428777]</p>
<aside class="quote">
<blockquote>
<p>if you want to understand this better and see examples of this and how it can be beneficial, don’t use winterlove… I didn’t learn this or inheritance/polymorphism until I started using runesource</p>
</blockquote>
</aside>
<p>Runesource was based around winterlove though.<br>
[/quote]<br>
well, I don’t know if you could say that. It was made to be as simplistic as winterlove, but to say its based around winterlove… well idk.[/quote]</p>
<p>Runesource is based on Winterlove.</p>
<p>“mimics the original winterLove source”</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/oop-programming/534458/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/oop-programming/534458/14</link>
        <pubDate>Tue, 22 Oct 2013 14:24:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534458-14</guid>
        <source url="https://forum.moparisthebest.com/t/oop-programming/534458.rss">OOP Programming</source>
      </item>
      <item>
        <title>OOP Programming</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>[quote=“Arcik, post:11, topic:534458”][quote author=Clawz fury link=topic=653258.msg4377126#msg4377126 date=1382390209]<br>
if you want to understand this better and see examples of this and how it can be beneficial, don’t use winterlove… I didn’t learn this or inheritance/polymorphism until I started using runesource<br>
[/quote]<br>
Runesource was based around winterlove though.[/quote]<br>
well, I don’t know if you could say that. It was made to be as simplistic as winterlove, but to say its based around winterlove… well idk.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/oop-programming/534458/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/oop-programming/534458/13</link>
        <pubDate>Tue, 22 Oct 2013 11:54:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534458-13</guid>
        <source url="https://forum.moparisthebest.com/t/oop-programming/534458.rss">OOP Programming</source>
      </item>
      <item>
        <title>OOP Programming</title>
        <dc:creator><![CDATA[@Wintercanon Wintercanon]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wintercanon">@Wintercanon</a> wrote:</p>
          <blockquote>
              <p>OOP is overrated.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/oop-programming/534458/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/oop-programming/534458/12</link>
        <pubDate>Tue, 22 Oct 2013 08:02:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534458-12</guid>
        <source url="https://forum.moparisthebest.com/t/oop-programming/534458.rss">OOP Programming</source>
      </item>
      <item>
        <title>OOP Programming</title>
        <dc:creator><![CDATA[@Ashi Ashi]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ashi">@Ashi</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="6" data-topic="534458">
<div class="title">
<div class="quote-controls"></div>
 Clawz fury:</div>
<blockquote>
<p>if you want to understand this better and see examples of this and how it can be beneficial, don’t use winterlove… I didn’t learn this or inheritance/polymorphism until I started using runesource</p>
</blockquote>
</aside>
<p>Runesource was based around winterlove though.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/oop-programming/534458/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/oop-programming/534458/11</link>
        <pubDate>Tue, 22 Oct 2013 07:59:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534458-11</guid>
        <source url="https://forum.moparisthebest.com/t/oop-programming/534458.rss">OOP Programming</source>
      </item>
      <item>
        <title>OOP Programming</title>
        <dc:creator><![CDATA[@strucker Strucker]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/strucker">@strucker</a> wrote:</p>
          <blockquote>
              <p>polymorphism plz</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/oop-programming/534458/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/oop-programming/534458/10</link>
        <pubDate>Tue, 22 Oct 2013 02:01:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534458-10</guid>
        <source url="https://forum.moparisthebest.com/t/oop-programming/534458.rss">OOP Programming</source>
      </item>
      <item>
        <title>OOP Programming</title>
        <dc:creator><![CDATA[@Vain1 Vain_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/vain1">@Vain1</a> wrote:</p>
          <blockquote>
              <p>expand it to interfaces and shit so it’s actually server related.</p>
<p>this can easily be applied to runeversi</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/oop-programming/534458/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/oop-programming/534458/9</link>
        <pubDate>Tue, 22 Oct 2013 01:13:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534458-9</guid>
        <source url="https://forum.moparisthebest.com/t/oop-programming/534458.rss">OOP Programming</source>
      </item>
      <item>
        <title>OOP Programming</title>
        <dc:creator><![CDATA[@RandQm RandQm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/randqm">@RandQm</a> wrote:</p>
          <blockquote>
              <p>Thanks for the feedback, as soon as I find time I will rework this using an rsps situation as example and make the design somewhat easier to follow.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/oop-programming/534458/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/oop-programming/534458/8</link>
        <pubDate>Mon, 21 Oct 2013 22:42:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534458-8</guid>
        <source url="https://forum.moparisthebest.com/t/oop-programming/534458.rss">OOP Programming</source>
      </item>
      <item>
        <title>OOP Programming</title>
        <dc:creator><![CDATA[@strucker Strucker]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/strucker">@strucker</a> wrote:</p>
          <blockquote>
              <p>This doesn’t really clear alot to me.<br>
I’m sorry but could you try to explain it a bit more, i see you did put effor on it.</p>
<blockquote>if you want to understand this better and see examples of this and how it can be beneficial, don't use winterlove... I didn't learn this or inheritance/polymorphism until I started using runesource
<p>people who use winterlove and want to get better are fucking retarded. its like surrounding yourself with people who smoke weed and trying to stay sober, you’re making it so much harder for yourself</p>
</blockquote><br>
So why havent u told me to leave euthymia? Isn’t it time yet, Master?<br>
I’ll be wwaiting.
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/oop-programming/534458/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/oop-programming/534458/7</link>
        <pubDate>Mon, 21 Oct 2013 21:18:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534458-7</guid>
        <source url="https://forum.moparisthebest.com/t/oop-programming/534458.rss">OOP Programming</source>
      </item>
      <item>
        <title>OOP Programming</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>if you want to understand this better and see examples of this and how it can be beneficial, don’t use winterlove… I didn’t learn this or inheritance/polymorphism until I started using runesource</p>
<p>people who use winterlove and want to get better are fuc<span class="bbcode-s"></span>king retarded. its like surrounding yourself with people who smoke weed and trying to stay sober, you’re making it so much harder for yourself</p>
<p>but more on topic, use better examples related to rsps (items, objects, etc.)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/oop-programming/534458/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/oop-programming/534458/6</link>
        <pubDate>Mon, 21 Oct 2013 21:16:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534458-6</guid>
        <source url="https://forum.moparisthebest.com/t/oop-programming/534458.rss">OOP Programming</source>
      </item>
      <item>
        <title>OOP Programming</title>
        <dc:creator><![CDATA[@RandQm RandQm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/randqm">@RandQm</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="534458">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/loveandpower/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Loveandpower:</div>
<blockquote>
<p>[quote]I will learn you</p>
</blockquote>
</aside>
<p>You mean <span class="bbcode-i">I will teach you</span>[/quote]<br>
Thank you.</p>
<aside class="quote" data-post="3" data-topic="534458">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/davidi2/40/2579_1.png" class="avatar"> Davidi2:</div>
<blockquote>
<p>When making a ‘server tutorial’ aren’t you supposed to explain how it’s used in a server/give an example?</p>
</blockquote>
</aside>
<p>I could yes, I thought a simple game like oxo which everybody knows (while half of the community has no clue how an rsps actually works) would be a good example to use.</p>
<p>[quote=“Arcik, post:4, topic:534458”]You should give us a clear definition of what OOP actually is. The examples are not really how I would explain it.</p>
<p>It would be better to show how using different classes together, structure, reusing code etc., works imo[/quote]<br>
Still working on it like it said at the bottom. Give me some time  <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/oop-programming/534458/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/oop-programming/534458/5</link>
        <pubDate>Mon, 21 Oct 2013 19:47:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534458-5</guid>
        <source url="https://forum.moparisthebest.com/t/oop-programming/534458.rss">OOP Programming</source>
      </item>
      <item>
        <title>OOP Programming</title>
        <dc:creator><![CDATA[@Ashi Ashi]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ashi">@Ashi</a> wrote:</p>
          <blockquote>
              <p>You should give us a clear definition of what OOP actually is. The examples are not really how I would explain it.</p>
<p>It would be better to show how using different classes together, structure, reusing code etc., works imo</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/oop-programming/534458/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/oop-programming/534458/4</link>
        <pubDate>Mon, 21 Oct 2013 19:42:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534458-4</guid>
        <source url="https://forum.moparisthebest.com/t/oop-programming/534458.rss">OOP Programming</source>
      </item>
      <item>
        <title>OOP Programming</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>When making a ‘server tutorial’ aren’t you supposed to explain how it’s used in a server/give an example?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/oop-programming/534458/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/oop-programming/534458/3</link>
        <pubDate>Mon, 21 Oct 2013 19:38:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534458-3</guid>
        <source url="https://forum.moparisthebest.com/t/oop-programming/534458.rss">OOP Programming</source>
      </item>
      <item>
        <title>OOP Programming</title>
        <dc:creator><![CDATA[@Loveandpower Loveandpower]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/loveandpower">@Loveandpower</a> wrote:</p>
          <blockquote>
              <blockquote>I will learn you</blockquote>
<p>You mean <span class="bbcode-i">I will teach you</span></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/oop-programming/534458/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/oop-programming/534458/2</link>
        <pubDate>Mon, 21 Oct 2013 19:33:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534458-2</guid>
        <source url="https://forum.moparisthebest.com/t/oop-programming/534458.rss">OOP Programming</source>
      </item>
      <item>
        <title>OOP Programming</title>
        <dc:creator><![CDATA[@RandQm RandQm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/randqm">@RandQm</a> wrote:</p>
          <blockquote>
              <p>[size=14pt]<span class="bbcode-b">In this tutorial I’m going to teach you the concept of OOP or Object Orientated Programming.</span>[/size]</p>
<p><span class="bbcode-b">Getting started:</span><br>
When you know what you have to program, you will obviously want to start programming.<br>
A bad way, which most people still appear to do, is make a class and start programming right away.<br>
This is not how you should program!</p>
<p><span class="bbcode-i">We have an idea of what we want to program now what’s next?</span><br>
Instead of thinking how to program it, we will think what we need.<br>
So imagine we want to make an OXO game.</p>
<p><span class="bbcode-b">What do we need?</span><br>
A board would be handy, as well as tiles where the O/X goes in.</p>
<p>So we go make the objects for that BEFORE doing anything else.</p>
<p><span class="bbcode-b">Now what properties would the tile need?</span><br>
We will need a location of a tile, so we will use x and y for defining it’s coordinates.<br>
We will also need to know the state of the tile, whether it displays an X, O or nothing.<br>
That should be it so let’s make our Tile object.</p>
<pre><code class="lang-auto">public class Tile {
    //Here we declare our coordinate variables.
    private int x;
    private int y;
    //Here we declare our state variable.
    private String state;

    //Constructor, code in the constructor is executed when making a new instance of the object with the given paramaters.
    public Tile(int x, int y) {
        this.x = x;
        this.y = y;
    }

    //Routine which edits the tile object's assigned state.
    public void modifyState(String state) {
        this.state = state;
        //Write to board
    }
}</code></pre>
<p>Now you might have not realized but we have done a few important OOP things here, apart from what I told before.<br>
First of all we made our properties private.<br>
We also made a modifyState routine in the our object’s class, while some(many) would be doing it in their main program.</p>
<p><span class="bbcode-b">Now what’s so good about this?</span><br>
It’s OOP.<br>
Everything to do with the object, should be done in the object, without being accessible for anything else.<br>
Outside code should be able to use the object, but it has no business with what’s all in there and what happens there.</p>
<p><span class="bbcode-b">Side Information:</span><br>
Another thing you might have noticed (which doesn’t really have to do with OOP) is,<br>
that in the class constructor and the modifyState routine, I use “this.”</p>
<p>It’s an unwritten rule to use the same or at least something that describes the same, as parameter in your method<br>
as the property you want to assign it to. This is for readability, so another programmer (or you after digging a project back up after months)<br>
still now exactly what’s there.</p>
<p>Because our parameter is (e.g.) x and our property we want to assign it to, is as well, our program can’t know which one we mean.<br>
Some people prefer using an underscore in the parameter so it would become:</p>
<p><code>public void routine(String _something) {
    something = _something
}</code></p>
<p>I prefer to use:</p>
<p><code>public void routine(String something) {
    this.something = something
}</code></p>
<p>It is really a matter of preference.<br>
But what is “this” exactly?<br>
“this.” refers to the class we are operating in at this exact moment.<br>
this.x will refer to the x property in our object class, since when we are calling our routing we’re operating in that class.</p>
<p><span class="bbcode-i">Now, for the board you would do the same, creating an objects, properties and methods you would need.</span></p>
<p>Now, for OXO we will have 9 tiles.<br>
When a tile would be clicked by a player, we will not go creating a handler for ever single tile clicked and do a bunch of checks for the game play.<br>
As an efficient programmer we want to check everything through as less code as possible.<br>
What we are going to do is not get programming yet but make a repository for the tiles.</p>
<p>[code=java]<br>
public class TileRepository {<br>
//We create a list to hold our tile objects.<br>
private List tiles as new List();</p>
<pre><code>//The class constructor, when an instance of the class is made we will create our tiles and store it in the tiles list.
public TileRepository() {
    for (int index = 0; index &lt; 10; index ++) { //Loops 9 times (9 tiles)
    //Our tiles will be in a nice square, so the coordinates will go up by the same step.
    //So we can use for-ception!
        for (int xCoord = 15; xCoord &lt; 220; xCoord STEP) {
            for (int yCoord = 107; yCoord &lt; 310; yCoord STEP) {
                tiles.add(new Tile(xCoord, yCoord)) //We create a new tile with it's coordinates and directly put it in the tiles list.
            }
        }
    }
}
//Retrieves our list containing our tile objects.
public List&lt;Tile&gt; getTilesList() {
    return tiles;
}
</code></pre>
<p>}[/code]</p>
<p>Now we have everything we need we can start programming the actual program.</p>
<pre><code class="lang-auto">public class XOXGame {

    //We create an instance of a TileRepository but it still refers to nothing at this point.
    private TileRepository tileRepo = null;
    //Just a quick variable for the example, which would hold which player's turn it is.
    //If this would be an actual working game, we would also create an object for the player that would hold whether it's his/her turn, the points etc...
    private int playerTurn;

    //The pinpoint of our application, the program starts here.
    private static void main(String[] arguments) {
        tileRepo = new TileRepository(); //Creates an instance of our TileRepository, our tiles will be created due the TileRepository constructor like you saw before.
    }

    //A quick example what we would do when we click a tile as player.
    private static void exampleClickTile(clickedObject as Object) {
        for (tile : tileRepo.getTilesList()) {
            if (tile == clickedObject) {
                tile.modifyState(playerTurn = 1 ? "X" : "O");
            }
        }
    }
}</code></pre>
<p>Like you could see now, we never went calling and creating methods for objects.<br>
We only used methods made accessible by our objects. The object offers the method we need but we don’t have business with anything else of the object.<br>
This is OOP. What you should learn if you don’t do it yet.</p>
<pre><code class="lang-auto"></code></pre>
<p>This is a ternary statement, if you don’t know what this is, arham04 made a tutorial on this: <a href="https://www.moparisthebest.com/smf/index.php/topic,649930.msg4365322.html#msg4365322" rel="nofollow noopener">https://www.moparisthebest.com/smf/index.php/topic,649930.msg4365322.html#msg4365322</a></p>
<p><span class="bbcode-b">Some pro’s of OOP:</span></p>
<p>[ul][li]When we need to do changes, we will just need to edit our objects and whole our program will still be working perfect without touching it.[/li]<br>
[li]It is somewhat slower to get started, but you will win much time in the end for above pro.[/li]<br>
[li]It’s readable, clear, another programmer (or you after digging up the project after a long time) will catch up very quickly,<br>
while with non-OOP you have no clue what you’re looking at.[/li][/ul]</p>
<p><span class="bbcode-b">Some con’s of OOP:</span></p>
<p>[ul][li]If your program is really small, you might have been faster of doing it non-OOP. Thought the readability will most certainly still will be better the OOP way.[/li][/ul]</p>
<p><span class="bbcode-b">To Be Continued.</span></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/oop-programming/534458/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/oop-programming/534458/1</link>
        <pubDate>Mon, 21 Oct 2013 19:04:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534458-1</guid>
        <source url="https://forum.moparisthebest.com/t/oop-programming/534458.rss">OOP Programming</source>
      </item>
  </channel>
</rss>
