<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Bezier Spline Algorithm</title>
    <link>https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673</link>
    <description>When I saw the spline code that Benland100 used for mouse path generation, I felt like defying him and creating my own method. That failed epically at the time, but I felt like creating a Bezier Spline algorithm yesterday.

I am already very familiar with Bezier curves, as I have used them in one previous game I have made and a game engine I have worked on. In this algorithm, a spline can be generated between two points based on the distance between those two points. This distance acts as the primary value for determining the radii of the controlling circles, etc. All of this is explained thoroughly in the documentation of the algorithm:

[code]
	/**
	 * Creates a Bezier spline using a number of curves between two
	 * points. The number of curves is specified by the call.
	 * &lt;p&gt;
	 * The exact starting and ending points of each curve is based
	 * on the number of curves. The starting curve&#39;s starting point
	 * will be the specified starting point of the spline. The
	 * ending curve&#39;s ending point will be the specified ending point
	 * of the spline.
	 * &lt;p&gt;
	 * The ending and starting points of the remaining curves are
	 * constructively midpoints from between the starting spline
	 * point and the ending spline point. These midpoints will
	 * range from half the distance with two curves, to one third
	 * and two thirds the distance with three curves, etc.
	 * &lt;p&gt;
	 * The controlling points are randomly generated based on the
	 * distance between the starting and ending spline points. The
	 * distance is used to generate the height of each bounding
	 * controller of the individual splines. Since the exact heights
	 * for each spline is a randomized number, a minimum and
	 * maximum height must be defined. In this algorithm, they are
	 * defined as follows:
	 * &lt;p&gt;
	 * &lt;code&gt;minCurveHeight = dist(start, end) / 10&lt;/code&gt;
	 * &lt;p&gt;
	 * &lt;code&gt;maxCurveHeight = minCurveHeight * 1.5&lt;/code&gt;
	 * &lt;p&gt;
	 * &lt;code&gt;heightDeviation = | maxCurveheight - minCurveHeight |&lt;/code&gt;
	 * &lt;p&gt;
	 * The exact controlling points are generated by grabbing a
	 * random point on a circle where one of the main points are
	 * the centroid of the circle. The radius of each of the
	 * circles are calculated as follows:
	 * &lt;p&gt;
	 * &lt;code&gt;radius = random(minCurveHeight + (heightDeviation / 2),
	 *  minCurveHeight + heightDeviation)&lt;/code&gt;
	 * &lt;p&gt;
	 * The generated main and control points are then fed in consecutive
	 * order to the Bezier curve generation function to generate and
	 * draw the current Bezier curve.
	 * 
	 * @param start The starting point of the spline
	 * @param end The ending point of the spline
	 * @param curveCount The number of curves the spline should contain
	 * @param showControllers Whether or not the debug controller bounds should be drawn
	 * @see #randomCirclePoint(int, Point)
	 * @see #drawBezier(Point, Point, Point, Point)
	 * @author Ben Henning
	 */
	private final void createSpline(Point start, Point end, int curveCount, boolean showControllers) {
		Point mid = new Point((start.x + end.x) / 2,
				(start.y + end.y) / 2);
		int curveHeight = distance(start, end) / 10;
		int largeCurveHeight = (int)(curveHeight * 1.5D);

		int small = Math.min(curveHeight, largeCurveHeight);
		int deviation = Math.abs(largeCurveHeight - curveHeight);
		boolean bendInward = random(0, 2) == 0; // used for determining bending of curves

		Point[] midpoints = new Point[curveCount-1];
		for (int i = 1; i &lt; curveCount; i++)
			midpoints[i-1] = new Point(((start.x + end.x) * i) / curveCount,
					((start.y + end.y) * i) / curveCount);

		if (showControllers) {
			drawCircle(start, small, Color.GREEN);
			drawCircle(end, small, Color.GREEN);
			drawThickPoint(start, Color.RED);
			drawThickPoint(mid, Color.RED);
			drawThickPoint(end, Color.RED);
		}

		Point last = start;
		for (Point next : midpoints) {
			int radius = random(small + (deviation / 2), small + deviation);
			Point c1 = randomCirclePoint(radius, last);
			Point c2 = randomCirclePoint(radius, next);

			if (showControllers) {
				drawCircle(last, radius, Color.GREEN);
				drawCircle(next, radius, Color.GREEN);
				drawThickPoint(c1, Color.YELLOW);
				drawThickPoint(c2, Color.YELLOW);
			}

			drawBezier(last, bendInward ? c1 : c2, bendInward ? c2 : c1, next);

			last = next;
			bendInward = !bendInward;
		}
		Point c1 = randomCirclePoint(small, last);
		Point c2 = randomCirclePoint(small, end);
		if (showControllers) {
			drawCircle(last, small, Color.GREEN);
			drawThickPoint(c1, Color.YELLOW);
			drawThickPoint(c2, Color.YELLOW);
		}
		drawBezier(last, bendInward ? c1 : c2, bendInward ? c2 : c1, end);
	}

	/**
	 * This method generates a random circle point using the same
	 * circle function as the circle drawing method. Two important
	 * factors in determining where to look on the circle for this
	 * random point is the following:
	 * &lt;p&gt;
	 * 1. Which semicircle to use
	 * &lt;br /&gt;
	 * 2. Using the unseen region
	 * &lt;p&gt;
	 * Whether or not the upper or lower semicircle is used is dependent
	 * upon a 50% chance. The unseen region is the region of the circle
	 * that whose points are calculated by subtracting the center point
	 * from the independent x or y value. This region combined with the
	 * normal region will form either a left or right semicircle in the
	 * normal circle function.
	 * 
	 * @param radius The radius of the circle from whose set of points one
	 * random point will be drawn
	 * @param center The centroid of the circle
	 * @return A random point located on the circle
	 * @author Ben Henning
	 */
	private final Point randomCirclePoint(int radius, Point center) {
		boolean high = random(0, 2) == 0; // do we use the upper semicircle?
		boolean negate = random(0, 2) == 0; // do we minus center values from generated values?
		int x, y;
		if (high) {
			y = random(center.y - radius + 1, center.y + radius);
			x = circleFunction(radius * radius, y - center.y);
			x = negate ? center.x - x : x + center.x;
		} else {
			x = random(center.x - radius + 1, center.x + radius);
			y = circleFunction(radius * radius, x - center.x);
			y = negate ? center.y - y : y + center.y;
		}
		return new Point(x, y);
	}
[/code]

I also created a program that you can look at to see how this spline algorithm works. The program and source is attached to this post. The following things should be recognized while using the program:


[ul][li]When you click the first time, you place the first point of the spline. The second point is the ending point of the spline and causes the spline to be generated.[/li]
[li]The screen can be reset by pressing the F5 button.[/li]
[li]You can set the number of curves the spline uses by pressing the F4 button.[/li]
[li]You can enable/disable controlling bounds drawing by pressing the F3 button.[/li][/ul]


Having draw controlling bounds enabled will have the circles used to generate the controller points be drawn. It will also draw the main and controller points. The main points are in red and the controller points are in yellow. The controller circles are in green.

And, if you think this entire thing is a waste of your time, then it is still kinda fun to mess around with the spline (to see kind of curves it comes up with, etc).


Here are two images of generated splines:

[img]http://img14.imageshack.us/img14/9616/splinecurve2j.png[/img]

[img]http://img22.imageshack.us/img22/3052/splinecurve3.png[/img]</description>
    
    <lastBuildDate>Sat, 04 Apr 2009 05:08:04 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Bezier Spline Algorithm</title>
        <dc:creator><![CDATA[@BAsh BAsh]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bash">@BAsh</a> wrote:</p>
          <blockquote>
              <p>I’ve always wondered why the mouse events always had gaps between them. I understand the reason behind it (not soaking up cpu etc) but not where it happens.</p>
<ol>
<li>In the mouse itself. It can only generate events so fast and can simply bunch them up an so skip points.</li>
<li>In the kernel.</li>
<li>In X.</li>
<li>In the window manager (kdm/gnome).</li>
<li>In java.</li>
</ol>
<p>Obviously its different for windows.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/23">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/23</link>
        <pubDate>Sat, 04 Apr 2009 05:08:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-270673-23</guid>
        <source url="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673.rss">Bezier Spline Algorithm</source>
      </item>
      <item>
        <title>Bezier Spline Algorithm</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>that, but taharok is referring to the synchronous behaviour of the current implementations</p>
<p>no, following one curve at a time will not fix the innacuracy</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/22">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/22</link>
        <pubDate>Sat, 04 Apr 2009 03:24:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-270673-22</guid>
        <source url="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673.rss">Bezier Spline Algorithm</source>
      </item>
      <item>
        <title>Bezier Spline Algorithm</title>
        <dc:creator><![CDATA[@unlimitedorb unlimitedorb]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unlimitedorb">@unlimitedorb</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="20" data-topic="270673">
<div class="title">
<div class="quote-controls"></div>
 Taharok:</div>
<blockquote>
<p>What about making a method that only moves one curve at a time? An intelligent method would create a Bezier curve similar to a human movement. In addition, the bot can always make the mouse turn to another point and add another curve. This should solve the majority of the “mouse missing” issues, shouldn’t it?</p>
</blockquote>
</aside>
<p>If you’re referring to frank_'s post on the matter, I believe you’re misinterpreting it. What he was trying to say was that there’s a maximum number of mouse events that are going to be generated when you move from point A to point B. If the client is recording this, the best it can do is going to be a rough estimation of what your curve actually is. There’s nothing wrong with the algorithm in use - in practice, there’s an upper bound on how much information the client will be able to pick up… it sounds logical, but I wouldn’t take this into account unless I knew for sure.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/21">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/21</link>
        <pubDate>Sat, 04 Apr 2009 02:39:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-270673-21</guid>
        <source url="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673.rss">Bezier Spline Algorithm</source>
      </item>
      <item>
        <title>Bezier Spline Algorithm</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <p>What about making a method that only moves one curve at a time? An intelligent method would create a Bezier curve similar to a human movement. In addition, the bot can always make the mouse turn to another point and add another curve. This should solve the majority of the “mouse missing” issues, shouldn’t it?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/20">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/20</link>
        <pubDate>Sat, 04 Apr 2009 01:16:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-270673-20</guid>
        <source url="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673.rss">Bezier Spline Algorithm</source>
      </item>
      <item>
        <title>Bezier Spline Algorithm</title>
        <dc:creator><![CDATA[@k00dr k00dr]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/k00dr">@k00dr</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="16" data-topic="270673">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/ollie/40/5_6bca9977b612b7aeef77ba1ec1cd67b3.png" class="avatar"> Ollie:</div>
<blockquote>
<p>Thats why, like frank_ said, profiles of players should be made.</p>
</blockquote>
</aside>
<p>That’s not what frank_ meant <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<aside class="quote no-group" data-post="12" data-topic="270673">
<div class="title">
<div class="quote-controls"></div>
 frank_:</div>
<blockquote>
<p>dw guys regression of parametric curves is hard</p>
</blockquote>
</aside>
<p>…and that’s why there is no advanced “mouse move detection” in the client (pure assumption).</p>
<aside class="quote no-group" data-post="12" data-topic="270673">
<div class="title">
<div class="quote-controls"></div>
 frank_:</div>
<blockquote>
<p>at the end of the day, it is probably not mousemovement that is going to get you banned for botting (unless of couse it is nonexistent), it is the crappy bot</p>
</blockquote>
</aside>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/19">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/19</link>
        <pubDate>Fri, 03 Apr 2009 19:07:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-270673-19</guid>
        <source url="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673.rss">Bezier Spline Algorithm</source>
      </item>
      <item>
        <title>Bezier Spline Algorithm</title>
        <dc:creator><![CDATA[@BAsh BAsh]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bash">@BAsh</a> wrote:</p>
          <blockquote>
              <p>How about using a neural network? We could set up another thread so it could learn. I’m sure it wouldn’t use more than a Gb or so of memory.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/18</link>
        <pubDate>Fri, 03 Apr 2009 15:41:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-270673-18</guid>
        <source url="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673.rss">Bezier Spline Algorithm</source>
      </item>
      <item>
        <title>Bezier Spline Algorithm</title>
        <dc:creator><![CDATA[@Uriko Uriko]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/uriko">@Uriko</a> wrote:</p>
          <blockquote>
              <p>SO MANY LAWS, AAHHH.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/17</link>
        <pubDate>Fri, 03 Apr 2009 12:44:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-270673-17</guid>
        <source url="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673.rss">Bezier Spline Algorithm</source>
      </item>
      <item>
        <title>Bezier Spline Algorithm</title>
        <dc:creator><![CDATA[@Ollie Ollie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ollie">@Ollie</a> wrote:</p>
          <blockquote>
              <p>Thats why, like frank_ said, profiles of players should be made.</p>
<p>Also, in different situations in the game, people move the mouse in different ways, i.e. when player killing the mouse is moved more eratically opposed to when mining.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/16</link>
        <pubDate>Fri, 03 Apr 2009 12:29:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-270673-16</guid>
        <source url="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673.rss">Bezier Spline Algorithm</source>
      </item>
      <item>
        <title>Bezier Spline Algorithm</title>
        <dc:creator><![CDATA[@sanga282 sanga282]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sanga282">@sanga282</a> wrote:</p>
          <blockquote>
              <p>i dunno actually when i move my mouse to places especially on a game like runescape where its a slower pace i tend to zig and zag in palces</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/15</link>
        <pubDate>Fri, 03 Apr 2009 12:01:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-270673-15</guid>
        <source url="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673.rss">Bezier Spline Algorithm</source>
      </item>
      <item>
        <title>Bezier Spline Algorithm</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="10" data-topic="270673">
<div class="title">
<div class="quote-controls"></div>
 R.I.P RSC:</div>
<blockquote>
<p>I’m sorry to say, but that doesn’t look human at all. It looks complex, but a human movement goes directly to the target, maybe with a curve. But it doesn’t go back to the origin, as you see in the first image.</p>
</blockquote>
</aside>
<p>It’s probably far from practical to use for mouse movement. I think it would work better once Fitt’s Law was applied and certain points were removed to apply mouse hops.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/14</link>
        <pubDate>Thu, 02 Apr 2009 23:50:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-270673-14</guid>
        <source url="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673.rss">Bezier Spline Algorithm</source>
      </item>
      <item>
        <title>Bezier Spline Algorithm</title>
        <dc:creator><![CDATA[@Unhandled Unhandled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unhandled">@Unhandled</a> wrote:</p>
          <blockquote>
              <p>Next up, neural networks.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/13</link>
        <pubDate>Thu, 02 Apr 2009 21:03:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-270673-13</guid>
        <source url="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673.rss">Bezier Spline Algorithm</source>
      </item>
      <item>
        <title>Bezier Spline Algorithm</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>dw guys regression of parametric curves is hard</p>
<p>whilst all of these methodologies may seem like fun and useful, the truth is you are probably wasting your time. i do not recall how fast mouse movement events are generated, but at most it is 50Hz due to the clients frame rate. this means that the the majority of the curve will be unused and useless; the curve being used will probably look rather simplistic.</p>
<p>the linearity and speed of a real movement is also going to be dependent on the user, for example a gamer versus a casual computer user. a casual user may move the mouse in a curved way and be slow to accurately click on the desination, whereas a gamer will move the mouse quickly and accurately, probably in a relatively linear path</p>
<p>the biggest downfall of current implementations is their uselessness, mouse movements should be asynchronous and dynamic. current bots pick (to be honest) absolutely terrible destinations, it is lucky if the mouse clicks the desired item. add to that the case where the item is moving and, generally, the mouse will never end up on the item</p>
<p>as an example: when i had a look at rsbot, the mouse movements were terribly slow and loopy, it never clicked the desired item it was moving on screen, even when i quartered the delay of movement it was still largely innacurate</p>
<p>at the end of the day, it is probably not mousemovement that is going to get you banned for botting (unless of couse it is nonexistent), it is the crappy bot</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/12</link>
        <pubDate>Thu, 02 Apr 2009 20:14:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-270673-12</guid>
        <source url="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673.rss">Bezier Spline Algorithm</source>
      </item>
      <item>
        <title>Bezier Spline Algorithm</title>
        <dc:creator><![CDATA[@Ollie Ollie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ollie">@Ollie</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="10" data-topic="270673">
<div class="title">
<div class="quote-controls"></div>
 R.I.P RSC:</div>
<blockquote>
<p>I’m sorry to say, but that doesn’t look human at all. It looks complex, but a human movement goes directly to the target, maybe with a curve. But it doesn’t go back to the origin, as you see in the first image.</p>
</blockquote>
</aside>
<p>I will have to agree, also speed of the mouse at certain points of the spline is important.</p>
<p>There are many things to take into account when making “human-like” behaviour on a computer, <a href="http://en.wikipedia.org/wiki/Hick%27s_law" data-bbcode="true" rel="nofollow noopener"> Hicks Law</a> demonstrates an interesting algorithm for reaction time.</p>
<p>Also take a look at <a href="http://en.wikipedia.org/wiki/Fitts%27s_law" data-bbcode="true" rel="nofollow noopener">Fitts’s law</a> which predicts the time required to rapidly move to a target area, as a function of the distance to the target and the size of the target, another required part to make your mouse movement more, “human-like”.</p>
<p><span class="bbcode-b">Some interesting links:</span><br>
<a href="http://en.wikipedia.org/wiki/Accot-Zhai_steering_law" data-bbcode="true" rel="nofollow noopener">Steering law</a></p>
<blockquote>The steering law is a predictive model of how quickly one may navigate, or steer, through a 2-dimensional tunnel. The tunnel can be thought of as a path or trajectory on a plane that has an associated thickness or width, where the width can vary along the tunnel. The goal of a steering task is to navigate from one end of the tunnel to the other as quickly as possible, without touching the boundaries of the tunnel. A real world example that approximates this task is driving a car down a road that may have twists and turns, where the car must navigate the road as quickly as possible without touching the sides of the road. The steering law predicts both the instantaneous speed at which we may navigate the tunnel, and the total time required to navigate the entire tunnel.</blockquote>
<p><a href="http://www.almaden.ibm.com/u/zhai/topics/LawsOfAction.htm" data-bbcode="true" rel="nofollow noopener">Laws of Action</a></p>
<blockquote>As a developing discipline, research results in the field of human-computer interaction (HCI) tend to be "soft". Many workers in the field, such as A. Newell and S.K. Card, have argued that the advancement of HCI lies in "hardening" the field with quantitative and robust models. In reality, few theoretical, quantitative tools are available in user interface research and development. A rare exception to this is Fitts' law. Applying information theory to human perceptual-motor system, Paul Fitts (1954) found a logarithmic relationship that models speed accuracy trade-offs in aimed movements. A great number of studies have verified and / or applied Fitts' law to HCI problems making Fitts' law one of the most intensely studied topics in the HCI literature.</blockquote>
<p><a href="http://en.wikipedia.org/wiki/Human-computer_interaction" data-bbcode="true" rel="nofollow noopener"> Human-computer Interaction</a></p>
<blockquote>Human–computer interaction (HCI) is the study of interaction between people (users) and computers.</blockquote>
<p><a href="http://en.wikipedia.org/wiki/Power_Law_of_Practice" data-bbcode="true" rel="nofollow noopener">Power Law of Practice</a></p>
<blockquote>The Power Law of Practice states that the logarithm of the reaction time for a particular task decreases linearly with the logarithm of the number of practice trials taken. It is an example of the learning curve effect on performance.</blockquote>
<p>If anyone else has anything to share, i would like to read up on some more human-imitation.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/11</link>
        <pubDate>Thu, 02 Apr 2009 17:21:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-270673-11</guid>
        <source url="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673.rss">Bezier Spline Algorithm</source>
      </item>
      <item>
        <title>Bezier Spline Algorithm</title>
        <dc:creator><![CDATA[@R.I.P_RSC R.I.P RSC]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/r.i.p_rsc">@R.I.P_RSC</a> wrote:</p>
          <blockquote>
              <p>I’m sorry to say, but that doesn’t look human at all. It looks complex, but a human movement goes directly to the target, maybe with a curve. But it doesn’t go back to the origin, as you see in the first image.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/10</link>
        <pubDate>Thu, 02 Apr 2009 17:01:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-270673-10</guid>
        <source url="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673.rss">Bezier Spline Algorithm</source>
      </item>
      <item>
        <title>Bezier Spline Algorithm</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>[quote=“Ollie, post:6, topic:270673”][quote author=BAsh link=topic=357198.msg2730243#msg2730243 date=1238663077]</p>
<aside class="quote no-group">
<blockquote>
<p>Take a look at using Math.sin to generate mouse movements.</p>
</blockquote>
</aside>
<p>I don’t understand how a trig function is more undetectable than a more complex curve.<br>
[/quote]<br>
A bird once said beizer algorithm is detected by JaGeX.</p>
<p>Although, I dont know how reliable this bird is. (he has yet to be wrong about alot of things)[/quote]</p>
<p>‘the bird’ is obviously full of bullshit.</p>
<p>Think about it, what is easier to detect?  A bezier splines algorithm with random control points?  Or a freakin sine curve that is trivial to generate in any language?  Bezier splines is a good algorithm to get a decent approximation of human movement, and it would be pretty hard to ‘detect’ without getting false positives on human movement.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/9</link>
        <pubDate>Thu, 02 Apr 2009 16:54:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-270673-9</guid>
        <source url="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673.rss">Bezier Spline Algorithm</source>
      </item>
      <item>
        <title>Bezier Spline Algorithm</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <p>[quote=“Ollie, post:4, topic:270673”]Gratz,<br>
I am assuming you will be using this for mouse movement purposes? Just a hitch, jagex can see you use beizer splines, hence why i didnt use them.</p>
<p>Take a look at using Math.sin to generate mouse movements.[/quote]</p>
<p>That was the plan, but I don’t see how Jagex is able to detect a Bezier spline with such random controlling points.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/8</link>
        <pubDate>Thu, 02 Apr 2009 15:37:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-270673-8</guid>
        <source url="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673.rss">Bezier Spline Algorithm</source>
      </item>
      <item>
        <title>Bezier Spline Algorithm</title>
        <dc:creator><![CDATA[@BAsh BAsh]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bash">@BAsh</a> wrote:</p>
          <blockquote>
              <p>Oh I get it a troll.</p>
<p>Well done.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/7</link>
        <pubDate>Thu, 02 Apr 2009 12:56:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-270673-7</guid>
        <source url="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673.rss">Bezier Spline Algorithm</source>
      </item>
      <item>
        <title>Bezier Spline Algorithm</title>
        <dc:creator><![CDATA[@Ollie Ollie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ollie">@Ollie</a> wrote:</p>
          <blockquote>
              <p>[quote=“BAsh, post:5, topic:270673”][quote author=Ollie link=topic=357198.msg2730233#msg2730233 date=1238659402]<br>
Take a look at using Math.sin to generate mouse movements.<br>
[/quote]<br>
I don’t understand how a trig function is more undetectable than a more complex curve.[/quote]<br>
A bird once said beizer algorithm is detected by JaGeX.</p>
<p>Although, I dont know how reliable this bird is. (he has yet to be wrong about alot of things)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/6</link>
        <pubDate>Thu, 02 Apr 2009 11:13:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-270673-6</guid>
        <source url="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673.rss">Bezier Spline Algorithm</source>
      </item>
      <item>
        <title>Bezier Spline Algorithm</title>
        <dc:creator><![CDATA[@BAsh BAsh]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bash">@BAsh</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="4" data-topic="270673">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/ollie/40/5_6bca9977b612b7aeef77ba1ec1cd67b3.png" class="avatar"> Ollie:</div>
<blockquote>
<p>Take a look at using Math.sin to generate mouse movements.</p>
</blockquote>
</aside>
<p>I don’t understand how a trig function is more undetectable than a more complex curve.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/5</link>
        <pubDate>Thu, 02 Apr 2009 09:04:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-270673-5</guid>
        <source url="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673.rss">Bezier Spline Algorithm</source>
      </item>
      <item>
        <title>Bezier Spline Algorithm</title>
        <dc:creator><![CDATA[@Ollie Ollie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ollie">@Ollie</a> wrote:</p>
          <blockquote>
              <p>Gratz,<br>
I am assuming you will be using this for mouse movement purposes? Just a hitch, jagex can see you use beizer splines, hence why i didnt use them.</p>
<p>Take a look at using Math.sin to generate mouse movements.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/4</link>
        <pubDate>Thu, 02 Apr 2009 08:03:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-270673-4</guid>
        <source url="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673.rss">Bezier Spline Algorithm</source>
      </item>
      <item>
        <title>Bezier Spline Algorithm</title>
        <dc:creator><![CDATA[@archerer98 Archer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/archerer98">@archerer98</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="2" data-topic="270673">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/unlimitedorb/40/5_6bca9977b612b7aeef77ba1ec1cd67b3.png" class="avatar"> unlimitedorb:</div>
<blockquote>
<p>Great job and it’s well documented.</p>
</blockquote>
</aside>
<p>Agreed, well done mate.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/3</link>
        <pubDate>Thu, 02 Apr 2009 04:29:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-270673-3</guid>
        <source url="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673.rss">Bezier Spline Algorithm</source>
      </item>
      <item>
        <title>Bezier Spline Algorithm</title>
        <dc:creator><![CDATA[@unlimitedorb unlimitedorb]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unlimitedorb">@unlimitedorb</a> wrote:</p>
          <blockquote>
              <p>Great job and it’s well documented.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/2</link>
        <pubDate>Thu, 02 Apr 2009 04:08:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-270673-2</guid>
        <source url="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673.rss">Bezier Spline Algorithm</source>
      </item>
      <item>
        <title>Bezier Spline Algorithm</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <p>When I saw the spline code that Benland100 used for mouse path generation, I felt like defying him and creating my own method. That failed epically at the time, but I felt like creating a Bezier Spline algorithm yesterday.</p>
<p>I am already very familiar with Bezier curves, as I have used them in one previous game I have made and a game engine I have worked on. In this algorithm, a spline can be generated between two points based on the distance between those two points. This distance acts as the primary value for determining the radii of the controlling circles, etc. All of this is explained thoroughly in the documentation of the algorithm:</p>
<pre><code class="lang-auto">	/**
	 * Creates a Bezier spline using a number of curves between two
	 * points. The number of curves is specified by the call.
	 * &lt;p&gt;
	 * The exact starting and ending points of each curve is based
	 * on the number of curves. The starting curve's starting point
	 * will be the specified starting point of the spline. The
	 * ending curve's ending point will be the specified ending point
	 * of the spline.
	 * &lt;p&gt;
	 * The ending and starting points of the remaining curves are
	 * constructively midpoints from between the starting spline
	 * point and the ending spline point. These midpoints will
	 * range from half the distance with two curves, to one third
	 * and two thirds the distance with three curves, etc.
	 * &lt;p&gt;
	 * The controlling points are randomly generated based on the
	 * distance between the starting and ending spline points. The
	 * distance is used to generate the height of each bounding
	 * controller of the individual splines. Since the exact heights
	 * for each spline is a randomized number, a minimum and
	 * maximum height must be defined. In this algorithm, they are
	 * defined as follows:
	 * &lt;p&gt;
	 * &lt;code&gt;minCurveHeight = dist(start, end) / 10&lt;/code&gt;
	 * &lt;p&gt;
	 * &lt;code&gt;maxCurveHeight = minCurveHeight * 1.5&lt;/code&gt;
	 * &lt;p&gt;
	 * &lt;code&gt;heightDeviation = | maxCurveheight - minCurveHeight |&lt;/code&gt;
	 * &lt;p&gt;
	 * The exact controlling points are generated by grabbing a
	 * random point on a circle where one of the main points are
	 * the centroid of the circle. The radius of each of the
	 * circles are calculated as follows:
	 * &lt;p&gt;
	 * &lt;code&gt;radius = random(minCurveHeight + (heightDeviation / 2),
	 *  minCurveHeight + heightDeviation)&lt;/code&gt;
	 * &lt;p&gt;
	 * The generated main and control points are then fed in consecutive
	 * order to the Bezier curve generation function to generate and
	 * draw the current Bezier curve.
	 * 
	 * @param start The starting point of the spline
	 * @param end The ending point of the spline
	 * @param curveCount The number of curves the spline should contain
	 * @param showControllers Whether or not the debug controller bounds should be drawn
	 * @see #randomCirclePoint(int, Point)
	 * @see #drawBezier(Point, Point, Point, Point)
	 * @author Ben Henning
	 */
	private final void createSpline(Point start, Point end, int curveCount, boolean showControllers) {
		Point mid = new Point((start.x + end.x) / 2,
				(start.y + end.y) / 2);
		int curveHeight = distance(start, end) / 10;
		int largeCurveHeight = (int)(curveHeight * 1.5D);

		int small = Math.min(curveHeight, largeCurveHeight);
		int deviation = Math.abs(largeCurveHeight - curveHeight);
		boolean bendInward = random(0, 2) == 0; // used for determining bending of curves

		Point[] midpoints = new Point[curveCount-1];
		for (int i = 1; i &lt; curveCount; i++)
			midpoints[i-1] = new Point(((start.x + end.x) * i) / curveCount,
					((start.y + end.y) * i) / curveCount);

		if (showControllers) {
			drawCircle(start, small, Color.GREEN);
			drawCircle(end, small, Color.GREEN);
			drawThickPoint(start, Color.RED);
			drawThickPoint(mid, Color.RED);
			drawThickPoint(end, Color.RED);
		}

		Point last = start;
		for (Point next : midpoints) {
			int radius = random(small + (deviation / 2), small + deviation);
			Point c1 = randomCirclePoint(radius, last);
			Point c2 = randomCirclePoint(radius, next);

			if (showControllers) {
				drawCircle(last, radius, Color.GREEN);
				drawCircle(next, radius, Color.GREEN);
				drawThickPoint(c1, Color.YELLOW);
				drawThickPoint(c2, Color.YELLOW);
			}

			drawBezier(last, bendInward ? c1 : c2, bendInward ? c2 : c1, next);

			last = next;
			bendInward = !bendInward;
		}
		Point c1 = randomCirclePoint(small, last);
		Point c2 = randomCirclePoint(small, end);
		if (showControllers) {
			drawCircle(last, small, Color.GREEN);
			drawThickPoint(c1, Color.YELLOW);
			drawThickPoint(c2, Color.YELLOW);
		}
		drawBezier(last, bendInward ? c1 : c2, bendInward ? c2 : c1, end);
	}

	/**
	 * This method generates a random circle point using the same
	 * circle function as the circle drawing method. Two important
	 * factors in determining where to look on the circle for this
	 * random point is the following:
	 * &lt;p&gt;
	 * 1. Which semicircle to use
	 * &lt;br /&gt;
	 * 2. Using the unseen region
	 * &lt;p&gt;
	 * Whether or not the upper or lower semicircle is used is dependent
	 * upon a 50% chance. The unseen region is the region of the circle
	 * that whose points are calculated by subtracting the center point
	 * from the independent x or y value. This region combined with the
	 * normal region will form either a left or right semicircle in the
	 * normal circle function.
	 * 
	 * @param radius The radius of the circle from whose set of points one
	 * random point will be drawn
	 * @param center The centroid of the circle
	 * @return A random point located on the circle
	 * @author Ben Henning
	 */
	private final Point randomCirclePoint(int radius, Point center) {
		boolean high = random(0, 2) == 0; // do we use the upper semicircle?
		boolean negate = random(0, 2) == 0; // do we minus center values from generated values?
		int x, y;
		if (high) {
			y = random(center.y - radius + 1, center.y + radius);
			x = circleFunction(radius * radius, y - center.y);
			x = negate ? center.x - x : x + center.x;
		} else {
			x = random(center.x - radius + 1, center.x + radius);
			y = circleFunction(radius * radius, x - center.x);
			y = negate ? center.y - y : y + center.y;
		}
		return new Point(x, y);
	}</code></pre>
<p>I also created a program that you can look at to see how this spline algorithm works. The program and source is attached to this post. The following things should be recognized while using the program:</p>
<p>[ul][li]When you click the first time, you place the first point of the spline. The second point is the ending point of the spline and causes the spline to be generated.[/li]<br>
[li]The screen can be reset by pressing the F5 button.[/li]<br>
[li]You can set the number of curves the spline uses by pressing the F4 button.[/li]<br>
[li]You can enable/disable controlling bounds drawing by pressing the F3 button.[/li][/ul]</p>
<p>Having draw controlling bounds enabled will have the circles used to generate the controller points be drawn. It will also draw the main and controller points. The main points are in red and the controller points are in yellow. The controller circles are in green.</p>
<p>And, if you think this entire thing is a waste of your time, then it is still kinda fun to mess around with the spline (to see kind of curves it comes up with, etc).</p>
<p>Here are two images of generated splines:</p>
<p><img src="http://img14.imageshack.us/img14/9616/splinecurve2j.png" alt width="" height=""></p>
<p><img src="http://img22.imageshack.us/img22/3052/splinecurve3.png" alt width="" height=""></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673/1</link>
        <pubDate>Thu, 02 Apr 2009 03:39:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-270673-1</guid>
        <source url="https://forum.moparisthebest.com/t/bezier-spline-algorithm/270673.rss">Bezier Spline Algorithm</source>
      </item>
  </channel>
</rss>
