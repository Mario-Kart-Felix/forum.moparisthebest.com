<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>3D Model Formats</title>
    <link>https://forum.moparisthebest.com/t/3d-model-formats/190875</link>
    <description>Hi there, I know this probably isn&#39;t the best place to ask, but I figured I should give it a go anyway.
I&#39;m working on a 3D engine in C#.net (.net flames in another thread pls), and I&#39;ve gotten to the point where I need to implement some sort of file IO to load vectors and textures. I&#39;m working from scratch, no DirectX or OpenGL, mainly because I wouldn&#39;t learn much if I used either of them. Here&#39;s a picture of what I&#39;ve got going so far.

[img]http://xs225.xs.to/xs225/08123/sphere00305.png[/img]

Currently I define a class that implements IObject3D and extends Object3DCommon, and create a List&lt;Polygon3D&gt; of all the polygons. So I guess I&#39;d need to populate that list by reading from a file, rather than doing something like this

[code]
static IList&lt;Polygon3D&gt; RecurssiveTesselation(IList&lt;Polygon3D&gt; polygons, double r, ref int Ntesselations)
        {
            // Terminate recursion
            if (Ntesselations == 0) 
                return polygons;

            IList&lt;Polygon3D&gt; ret = new List&lt;Polygon3D&gt;();
            Vector3D[] midpoints = new Vector3D[3];
            foreach (Polygon3D p in polygons)
            {

                int Nvert = p.NumVerticies;
                for (int i = 0; i &lt; Nvert; i++)
                {
                    Debug.Assert(Math.Abs(p.itsVerticies[i].Magnitude() - r) &lt; 1e-6);
                    int i1 = (i + 1) % Nvert;
                    midpoints[i] = (p.itsVerticies[i1] + p.itsVerticies[i]) / 2.0;
                    midpoints[i] *= r / midpoints[i].Magnitude();
                }

                ret.Add(new Polygon3D(new Vector3D[] 
                {
                     p.itsVerticies[0],
                     midpoints[0],
                     midpoints[2]
                }, Color.DarkRed));

                ret.Add(new Polygon3D(new Vector3D[] 
                {
                     p.itsVerticies[1],
                     midpoints[0],
                     midpoints[1]
                }, Color.Blue));
                ret.Add(new Polygon3D(new Vector3D[] 
                {
                     p.itsVerticies[2],
                     midpoints[1],
                     midpoints[2]
                }, Color.Blue));
                ret.Add(new Polygon3D(new Vector3D[] 
                {
                     midpoints[0],
                     midpoints[1],
                     midpoints[2]
                }, Color.DarkRed));

            }
            Ntesselations--;
            return RecurssiveTesselation(ret, r, ref Ntesselations);
        }
[/code]

My question is...what kind of standardized modeling formats are out there...and how are they generated. I don&#39;t want to have to type in vetrcies in notepad all day, so I&#39;m hoping Maya/C4D would be able to generate it. I know Quake II used the md2 format, which seemed adequate, but I couldn&#39;t really find a spec to code against for it.
Thanks.</description>
    
    <lastBuildDate>Thu, 20 Mar 2008 05:38:19 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/3d-model-formats/190875.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>3D Model Formats</title>
        <dc:creator><![CDATA[@Unhandled Unhandled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unhandled">@Unhandled</a> wrote:</p>
          <blockquote>
              <p>WELL THAT WAS MY ORIGINAL PLAN…BUT WHICH FREAKIN ONE SHOULD I USE.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/3d-model-formats/190875/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/3d-model-formats/190875/8</link>
        <pubDate>Thu, 20 Mar 2008 05:38:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-190875-8</guid>
        <source url="https://forum.moparisthebest.com/t/3d-model-formats/190875.rss">3D Model Formats</source>
      </item>
      <item>
        <title>3D Model Formats</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>BINARY XML</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/3d-model-formats/190875/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/3d-model-formats/190875/7</link>
        <pubDate>Thu, 20 Mar 2008 05:12:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-190875-7</guid>
        <source url="https://forum.moparisthebest.com/t/3d-model-formats/190875.rss">3D Model Formats</source>
      </item>
      <item>
        <title>3D Model Formats</title>
        <dc:creator><![CDATA[@Unhandled Unhandled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unhandled">@Unhandled</a> wrote:</p>
          <blockquote>
              <p>Sorry if I was a bit ambiguous there, I won’t be using DirectX or OpenGL for any of the actual 3D stuff, just to draw a precalculated 2D polygon as efficiently as possible.<br>
Wavefront Obj looks like what I need. I suppose I could convert it to a binary file format easily enough, so that a 100 poly model won’t be a 1mb file. Thanks <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/3d-model-formats/190875/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/3d-model-formats/190875/6</link>
        <pubDate>Thu, 20 Mar 2008 04:29:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-190875-6</guid>
        <source url="https://forum.moparisthebest.com/t/3d-model-formats/190875.rss">3D Model Formats</source>
      </item>
      <item>
        <title>3D Model Formats</title>
        <dc:creator><![CDATA[@Mopman Mopman]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mopman">@Mopman</a> wrote:</p>
          <blockquote>
              <p>Ah. Well, that’s not what you said. You said you weren’t going to be using OpenGL or DirectX at all. Well, md2 is pretty much the de facto low poly standard for hobbyist engines, so it wouldn’t hurt to use that. If not, why not Wavefront Obj? It’s a simple ish text-based format that most things can export.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/3d-model-formats/190875/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/3d-model-formats/190875/5</link>
        <pubDate>Thu, 20 Mar 2008 04:23:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-190875-5</guid>
        <source url="https://forum.moparisthebest.com/t/3d-model-formats/190875.rss">3D Model Formats</source>
      </item>
      <item>
        <title>3D Model Formats</title>
        <dc:creator><![CDATA[@Unhandled Unhandled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unhandled">@Unhandled</a> wrote:</p>
          <blockquote>
              <p>It’s hardly low level. I’ll likely set up OpenGL for my single FillPolygon() call, just so that it’s not going through 200 layers of Windows API abstractions. I’m implementing my own 3D graphics engine because it is a great learning experience, and I’m not trying to make a commercial game here. If I was I sure as hell wouldn’t do it in C#.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/3d-model-formats/190875/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/3d-model-formats/190875/4</link>
        <pubDate>Thu, 20 Mar 2008 04:20:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-190875-4</guid>
        <source url="https://forum.moparisthebest.com/t/3d-model-formats/190875.rss">3D Model Formats</source>
      </item>
      <item>
        <title>3D Model Formats</title>
        <dc:creator><![CDATA[@Mopman Mopman]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mopman">@Mopman</a> wrote:</p>
          <blockquote>
              <p>Why on earth would you implement your own low level rendering stuff when OpenGL and/or DirectX exist?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/3d-model-formats/190875/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/3d-model-formats/190875/3</link>
        <pubDate>Thu, 20 Mar 2008 04:17:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-190875-3</guid>
        <source url="https://forum.moparisthebest.com/t/3d-model-formats/190875.rss">3D Model Formats</source>
      </item>
      <item>
        <title>3D Model Formats</title>
        <dc:creator><![CDATA[@Unhandled Unhandled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unhandled">@Unhandled</a> wrote:</p>
          <blockquote>
              <p>Scientology has absolutely no correlation to my question.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/3d-model-formats/190875/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/3d-model-formats/190875/2</link>
        <pubDate>Thu, 20 Mar 2008 04:16:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-190875-2</guid>
        <source url="https://forum.moparisthebest.com/t/3d-model-formats/190875.rss">3D Model Formats</source>
      </item>
      <item>
        <title>3D Model Formats</title>
        <dc:creator><![CDATA[@Unhandled Unhandled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unhandled">@Unhandled</a> wrote:</p>
          <blockquote>
              <p>Hi there, I know this probably isn’t the best place to ask, but I figured I should give it a go anyway.<br>
I’m working on a 3D engine in C#.net (.net flames in another thread pls), and I’ve gotten to the point where I need to implement some sort of file IO to load vectors and textures. I’m working from scratch, no DirectX or OpenGL, mainly because I wouldn’t learn much if I used either of them. Here’s a picture of what I’ve got going so far.</p>
<p><img src="http://xs225.xs.to/xs225/08123/sphere00305.png" alt width="" height=""></p>
<p>Currently I define a class that implements IObject3D and extends Object3DCommon, and create a List of all the polygons. So I guess I’d need to populate that list by reading from a file, rather than doing something like this</p>
<pre><code class="lang-auto">static IList&lt;Polygon3D&gt; RecurssiveTesselation(IList&lt;Polygon3D&gt; polygons, double r, ref int Ntesselations)
        {
            // Terminate recursion
            if (Ntesselations == 0) 
                return polygons;

            IList&lt;Polygon3D&gt; ret = new List&lt;Polygon3D&gt;();
            Vector3D[] midpoints = new Vector3D[3];
            foreach (Polygon3D p in polygons)
            {

                int Nvert = p.NumVerticies;
                for (int i = 0; i &lt; Nvert; i++)
                {
                    Debug.Assert(Math.Abs(p.itsVerticies[i].Magnitude() - r) &lt; 1e-6);
                    int i1 = (i + 1) % Nvert;
                    midpoints[i] = (p.itsVerticies[i1] + p.itsVerticies[i]) / 2.0;
                    midpoints[i] *= r / midpoints[i].Magnitude();
                }

                ret.Add(new Polygon3D(new Vector3D[] 
                {
                     p.itsVerticies[0],
                     midpoints[0],
                     midpoints[2]
                }, Color.DarkRed));

                ret.Add(new Polygon3D(new Vector3D[] 
                {
                     p.itsVerticies[1],
                     midpoints[0],
                     midpoints[1]
                }, Color.Blue));
                ret.Add(new Polygon3D(new Vector3D[] 
                {
                     p.itsVerticies[2],
                     midpoints[1],
                     midpoints[2]
                }, Color.Blue));
                ret.Add(new Polygon3D(new Vector3D[] 
                {
                     midpoints[0],
                     midpoints[1],
                     midpoints[2]
                }, Color.DarkRed));

            }
            Ntesselations--;
            return RecurssiveTesselation(ret, r, ref Ntesselations);
        }</code></pre>
<p>My question is…what kind of standardized modeling formats are out there…and how are they generated. I don’t want to have to type in vetrcies in notepad all day, so I’m hoping Maya/C4D would be able to generate it. I know Quake II used the md2 format, which seemed adequate, but I couldn’t really find a spec to code against for it.<br>
Thanks.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/3d-model-formats/190875/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/3d-model-formats/190875/1</link>
        <pubDate>Thu, 20 Mar 2008 02:54:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-190875-1</guid>
        <source url="https://forum.moparisthebest.com/t/3d-model-formats/190875.rss">3D Model Formats</source>
      </item>
  </channel>
</rss>
