<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Small 100 error help</title>
    <link>https://forum.moparisthebest.com/t/small-100-error-help/403494</link>
    <description>source: dementhium 614/634


looked over actionbuttonhandler 1001010210010 times and cant find the missing bracket because im using notepad++ and it sucks hard but im to stupid to use netbeans or eclipse so can someone please just fix the freaking bracket lol


[code=java]package org.dementhium.net.packethandlers;

import org.dementhium.content.interfaces.EmoteTab;
import org.dementhium.content.misc.Drinking;
import org.dementhium.content.misc.Eating;
import org.dementhium.content.misc.Drinking.Drink;
import org.dementhium.content.misc.Eating.Food;
import org.dementhium.content.skills.magic.MagicHandler;
import org.dementhium.model.GroundItemManager;
import org.dementhium.model.Item;
import org.dementhium.model.World;
import org.dementhium.model.mask.Animation;
import org.dementhium.model.mask.Graphics;
import org.dementhium.model.npc.impl.summoning.Familiar;
import org.dementhium.model.player.Bank;
import org.dementhium.model.player.Equipment;
import org.dementhium.model.player.Player;
import org.dementhium.net.ActionSender;
import org.dementhium.net.PacketHandler;
import org.dementhium.net.message.Message;
import org.dementhium.util.InputHandler;
/**
 * 
 * @author &#39;Mystic Flow
 * @author `Discardedx2
 * @auhtor Steve
 */
public class ActionButtonHandler extends PacketHandler {

	@Override
	public void handlePacket(Player player, Message packet) {
		switch (packet.getOpcode()) {
		/*case 0:
		case 13:
		case 20:
		case 24: 
		case 32:
		case 40:
		case 48:
		case 52:
		case 55:
		case 79:*/
			try {
				handleButtons(player, packet);
			} catch (Exception e) {
			}
			break;
		}
	}
	

	private void handleButtons(Player p, Message packet) {
		int interfaceId = packet.readShort();
		int buttonId = packet.readShort();
		int itemId = packet.readShort();
		int slot = packet.readLEShortA();
		switch (interfaceId) {

		case 13:
			Bank.handleButton(p, buttonId, slot, itemId);
			break;
		case 464:
			EmoteTab.handleButton(p, buttonId, slot, itemId);
			break;
		case 430:
			if(p.getAttribute(&quot;vengeance&quot;) == Boolean.TRUE) {
				p.sendMessage(&quot;You already have vengeance casted.&quot;);
				return;
			}
			if((System.currentTimeMillis() - (Long) p.getAttribute(&quot;vengDelay&quot;, 0L) &lt; 30000)) {
				p.sendMessage(&quot;You can only cast vengeance spells every 30 seconds.&quot;);
				return;
			}
			p.setAttribute(&quot;vengeance&quot;, Boolean.TRUE);
			p.animate(Animation.create(4410));
			p.graphics(Graphics.create(726, 100 &lt;&lt; 16));
			break;
		case 192:
		case 193:
			MagicHandler.handleAutocastButtons(p, interfaceId, buttonId);
			break;
		case 763:
			if (buttonId == 0) {
				switch (packet.getOpcode()) {
				case 79:
					p.getBank().addItem(slot, 1);
					break;
				case 24:
					p.getBank().addItem(slot, 5);
					break;
				case 48:
					p.getBank().addItem(slot, 10);
					break;
				case 55:
					Item item = p.getInventory().getContainer().get(slot);
					p.getBank().addItem(slot,
							p.getInventory().getContainer().getNumberOf(item));// getContainer(slot).getAmount());
					break;
				}
			}
			break;
		case 762:
			if(buttonId &gt;= 45 &amp;&amp; buttonId &lt;= 61) {
				p.setAttribute(&quot;currentTab&quot;, p.getBank().getArrayIndex(buttonId));
			}
			switch (buttonId) {
			case 32:
				p.getBank().bankInv();
				break;
			case 34:
				p.getBank().bankEquip();
				break;
			case 36:
				p.getBank().bankBob();
				break;
			case 19:
				p.setAttribute(&quot;noting&quot;, p.getAttribute(&quot;noting&quot;, Boolean.FALSE) == Boolean.FALSE ? Boolean.TRUE : Boolean.FALSE);
				break;
			case 15:
				p.setAttribute(&quot;inserting&quot;, p.getAttribute(&quot;inserting&quot;, Boolean.FALSE) == Boolean.FALSE ? Boolean.TRUE : Boolean.FALSE);
				break;
			case 61:
			case 59:
			case 57:
			case 55:
			case 53:
			case 51:
			case 49:
			case 47:
			case 45:
				p.setAttribute(&quot;currentTab&quot;, p.getBank().getArrayIndex(buttonId));
				break;

			case 92:
				switch (packet.getOpcode()) {
				case 79:
					p.getBank().removeItem(slot, 1);
					break;
				case 24:
					p.getBank().removeItem(slot, 5);
					break;
				case 48:
					p.getBank().removeItem(slot, 10);
					break;
				case 55:
					Item item = p.getBank().getContainer().get(slot);
					p.getBank().removeItem(slot, p.getBank().getContainer().getNumberOf(item));
					break;
				case 0:
					Item item2 = p.getBank().getContainer().get(slot);
					int ItemAmt = p.getBank().getContainer().getNumberOf(item2);
					p.getBank().removeItem(slot, ItemAmt - 1);
					break;
				}
				break;
				
			default:
				System.out.println(buttonId);
			}
			break;

		case 665:
			switch (packet.getOpcode()) {
			case 79:
				p.getBob().putItem(slot, 1);
				break;
			case 24:
				p.getBob().putItem(slot, 5);
				break;
			case 48:
				p.getBob().putItem(slot, 10);
				break;
			case 40:
				p.getBob().putItem(slot, p.getInventory().numberOf(p.getInventory().get(slot).getId()));
				break;
			case 13:
				InputHandler.requestIntegerInput(p, 2, &quot;Please enter an amount:&quot;);
				p.setAttribute(&quot;slotId&quot;, slot);
				break;
			}
			break;
		case 671:
			switch (buttonId) {
			case 29:
				p.getBob().take();
				break;
			}
			switch (packet.getOpcode()) {
			case 79:
				p.getBob().removeItem(slot);
				break;
			case 24:
				p.getBob().removeItem(slot, 5);
				break;
			case 48:
				p.getBob().removeItem(slot, 10);
				break;
			case 40:
				p.getBob().removeItem(slot, p.getBob().numberOf(p.getInventory().get(slot).getId()));
				break;
			case 13:
				InputHandler.requestIntegerInput(p, 2, &quot;Please enter an amount:&quot;);
				p.setAttribute(&quot;slotId&quot;, slot);
				break;
			}
			break;
		case 620:
		case 621:
			World.getWorld().getShopManager().getShop((Integer) p.getAttribute(&quot;shopId&quot;)).handleOption(p, interfaceId, buttonId, slot, packet.getOpcode(), itemId);
			break;
		case 589: // Clan chat tab
			if (buttonId == 12) {
				ActionSender.sendInterface(p, 590);
				ActionSender.sendString(p, World.getWorld().getClanManager().getClanName(p.getUsername()), 590, 22);
			}
			if (buttonId == 17) {
				World.getWorld().getClanManager().toggleLootshare(p);
			}
			break;
		case 590: // Clan chat interface
			if (buttonId == 22) {
				switch (packet.getOpcode()) {
				case 79: // prefix
					InputHandler.requestStringInput(p, 0, &quot;Enter clan prefix:&quot;);
					break;
				case 24: // disable

					break;
				}
			}
			break;

			/**
			 * Trade
			 */
		case 335:
			switch(buttonId) {
			/**
			 * Close button.
			 */
			case 18:
			case 12:
				try {
					if (p.getTradeSession() != null) {
						p.getTradeSession().tradeFailed();
					} else if (p.getTradePartner() != null) {
						p.getTradePartner().getTradeSession().tradeFailed();
					}
				} catch (Exception e) {
					e.printStackTrace();
				}
				break;
			case 16:
				if (p.getTradeSession() != null) {
					p.getTradeSession().acceptPressed(p);
				} else if (p.getTradePartner()  != null) {
					p.getTradePartner().getTradeSession().acceptPressed(p);
				}
				break;

			case 31:
				if (p.getTradeSession() != null) {
					switch(packet.getOpcode()) {
					case 79:
						p.getTradeSession().removeItem(p, slot, 1);
						break;
					case 24:
						p.getTradeSession().removeItem(p, slot, 5);
						break;
					case 48:
						p.getTradeSession().removeItem(p, slot, 10);
						break;
					case 40:
						p.getTradeSession().removeItem(p, slot, p.getTradeSession().getPlayerItemsOffered(p).getNumberOf(p.getTradeSession().getPlayerItemsOffered(p).get(slot)));
						break;
					case 13:
						InputHandler.requestIntegerInput(p, 2, &quot;Please enter an amount:&quot;);
						p.setAttribute(&quot;slotId&quot;, slot);
						break;
					case 55:
						ActionSender.sendMessage(p, p.getTradeSession().getPlayerItemsOffered(p).get(slot).getDefinition().getName() + &quot; is valued at &quot; +p.getTradeSession().getPlayerItemsOffered(p).get(slot).getDefinition().getExchangePrice());
						break;
					default:
					}
				} else if (p.getTradePartner()  != null) {
					switch(packet.getOpcode()) {
					case 79:
						p.getTradePartner().getTradeSession().removeItem(p, slot, 1);
						break;
					case 24:
						p.getTradePartner().getTradeSession().removeItem(p, slot, 5);
						break;
					case 48:
						p.getTradePartner().getTradeSession().removeItem(p, slot, 10);
						break;
					case 40:
						p.getTradePartner().getTradeSession().removeItem(p, slot, p.getTradePartner().getTradeSession().getPlayerItemsOffered(p).getNumberOf(p.getTradePartner().getTradeSession().getPlayerItemsOffered(p).get(slot)));
						break;
					case 13:
						InputHandler.requestIntegerInput(p, 1, &quot;Please enter an amount:&quot;);
						p.setAttribute(&quot;slotId&quot;, slot);
						break;
					case 55:
						ActionSender.sendMessage(p, p.getTradePartner().getTradeSession().getPlayerItemsOffered(p).get(slot).getDefinition().getName() + &quot; is valued at &quot; +p.getTradePartner().getTradeSession().getPlayerItemsOffered(p).get(slot).getDefinition().getExchangePrice());
						break;
					}
				}
			default:
			}
			break;

		case 149:
			switch (packet.getOpcode()) {
			case 52:
				if (p.getInventory().get(slot) != null &amp;&amp; itemId != p.getInventory().get(slot).getId()) {
					return;
				}
				World.getWorld().getGroundItemManager().sendDelayedGlobalGroundItem(GroundItemManager.DEFAULT_DELAY, World.getWorld().getGroundItemManager().create(p, p.getInventory().get(slot), p.getLocation()), false);
				p.getInventory().getContainer().set(slot, null);
				p.getInventory().refresh();
				break;
			default:
				if (p.getInventory().get(slot) != null &amp;&amp; itemId != p.getInventory().get(slot).getId()) {
					return;
				}
				Food food = Food.forId(itemId);
				if (food != null) {
					Eating.eat(p, food, slot);
					return;
				}
				Drink drink = Drink.forId(itemId);
				if (drink != null) {
					Drinking.drink(p, drink, slot);
					return;
				}
				try {
					p.getEquipment().equip(p, buttonId, slot, itemId);
				} catch (Exception e) {
					e.printStackTrace();
				}
				break;
			}
			break;

		case 334:
			switch (buttonId) {
			case 20:
				if (p.getTradeSession() != null) {
					p.getTradeSession().acceptPressed(p);
				} else if (p.getTradePartner() != null) {
					p.getTradePartner().getTradeSession().acceptPressed(p);
				}
				break;
			case 21:
			case 8:
				if (p.getTradeSession() != null) {
					p.getTradeSession().tradeFailed();
				} else if (p.getTradePartner() != null) {
					p.getTradePartner().getTradeSession().tradeFailed();
				}
				break;
			}
			break;
		case 336:
			if (p.getTradeSession() != null) {
				switch(packet.getOpcode()) {
				case 79:
					p.getTradeSession().offerItem(p, slot, 1);
					break;
				case 24:
					p.getTradeSession().offerItem(p, slot, 5);
					break;
				case 48:
					p.getTradeSession().offerItem(p, slot, 10);
					break;
				case 40:
					break;
				case 13:
					InputHandler.requestIntegerInput(p, 2, &quot;Please enter an amount:&quot;);
					p.setAttribute(&quot;slotId&quot;, slot);
					break;
				case 55:
					ActionSender.sendMessage(p, p.getTradeSession().getPlayerItemsOffered(p).get(slot).getDefinition().getName() + &quot; is valued at &quot; +p.getTradeSession().getPlayerItemsOffered(p).get(slot).getDefinition().getExchangePrice());
					break;
				}
			} else if (p.getTradePartner() != null) {
				switch(packet.getOpcode()) {
				case 79:
					p.getTradePartner().getTradeSession().offerItem(p, slot, 1);
					break;
				case 24:
					p.getTradePartner().getTradeSession().offerItem(p, slot, 5);
					break;
				case 48:
					p.getTradePartner().getTradeSession().offerItem(p, slot, 10);
					break;
				case 40:
					p.getTradePartner().getTradeSession().offerItem(p, slot, p.getInventory().numberOf(p.getInventory().get(slot).getId()));
					break;
				case 13:
					InputHandler.requestIntegerInput(p, 2, &quot;Please enter an amount:&quot;);
					p.setAttribute(&quot;slotId&quot;, slot);
					break;
				case 55:
					ActionSender.sendMessage(p, p.getTradePartner().getTradeSession().getPlayerItemsOffered(p).get(slot).getDefinition().getName() + &quot; is valued at &quot; +p.getTradePartner().getTradeSession().getPlayerItemsOffered(p).get(slot).getDefinition().getExchangePrice());
					break;
				default:
				}
			}
			break;
		case 387:
			switch (buttonId) {
			case 17:
			case 20:
			case 8:
			case 11:
			case 14:
			case 26:
			case 32:
			case 29:
			case 35:
			case 23:
			case 38:
				int equipSlot = Equipment.getItemType(itemId);
				Item item = p.getEquipment().get(equipSlot);
				if (item == null) {
					return;
				}
				if (item.getId() != itemId) {
					return;
				}
				if (p.getInventory().hasRoomFor(item.getId(), item.getAmount())) {
					p.getEquipment().set(equipSlot, null);
					p.getInventory().getContainer().add(item);
					p.getInventory().refresh();
				} else {
					ActionSender.sendMessage(p, &quot;Not enough space in your inventory.&quot;);
				}
				return;
			case 39:
				p.getBonuses().refreshEquipScreen();
				ActionSender.sendInterface(p, 667);
				break;
			default:
				ActionSender.sendChatMessage(p, 0, &quot;Equip button slot &quot; + buttonId + &quot; not handled.&quot;);
				break;
			}
			break;
		case 750:
			switch (buttonId) {
			case 1:
				p.getWalkingQueue().setRunToggled(!p.getWalkingQueue().isRunToggled());
				break;
			}
			break;
		case 884:
			switch (buttonId) {
			case 4:// special bar
				p.reverseSpecialActive();
				if (p.getEquipment().getSlot(3) == 4153 &amp;&amp; p.getSpecialAmount() &gt; 0) {
					//CombatAction.forType(p, FightType.MELEE).hit(p, p.getCombatState().getVictim());
					p.getCombatState().setAttackDelay(0);
				}
				break;
			case 15:// auto retaliate
				p.reverseAutoRetaliate();
				break;
			case 11:
			case 12:
			case 13:
			case 14:
				p.getEquipment().toggleStyle(p, buttonId);
				break;
			}
		case 271:
			switch (buttonId) {
			case 8:
			case 42:
				p.getPrayer().switchPrayer(slot, p.getPrayer().isAncientCurses());
				break;
			case 43:
				p.getPrayer().setQuickPrayers();
				break;
			default:
			}
			break;
		case 182:
			switch (buttonId) {
			case 7: // lobby 
			case 9: //out
				ActionSender.sendLogout(p, buttonId);
				break;
			}
			break;
		case 982: //split chat settings
			if(buttonId == 5) {
				ActionSender.closeInter(p);		
			} else {
				if(buttonId &gt;= 15 &amp;&amp; buttonId &lt;= 29) {
					int color = buttonId - 14;
					p.getSettings().setPrivateTextColor(color);
					ActionSender.sendConfig(p, 287, p.getSettings().getPrivateTextColor());
				}
			}
			break;

		case 548:
			ActionSender.closeSideInterface(p);
			/*switch (buttonId) {
			case 124:
				ActionSender.sendInterface(p, 1, 548, 199, 320);
				break;
			case 123:
				ActionSender.sendInterface(p, 1, 548, 198, 884);
				break;
			case 125:
				ActionSender.sendInterface(p, 1, 548, 200, 190);
				break;
			case 126:
				ActionSender.sendInterface(p, 1, 548, 201, 259);
				break;
			case 127:
				ActionSender.sendInterface(p, 1, 548, 202, 149);
				break;
			case 128:			
				ActionSender.sendInterface(p, 1, 548, 203, 387);
				break;
			case 129:
				ActionSender.sendInterface(p, 1, 548, 204, 271);
				break;
			case 130:
				ActionSender.sendInterface(p, 1, 548, 205, p.getSettings().getSpellBook());// BOOK
				break;
			case 93:
				ActionSender.sendInterface(p, 1, 548, 206, 891);
				break;
			case 94:
				ActionSender.sendInterface(p, 1, 548, 207, 550);
				break;
			case 95:
				ActionSender.sendInterface(p, 1, 548, 208, 551);
				break;
			case 96:
				ActionSender.sendInterface(p, 1, 548, 209, 589);
				break;
			case 97:
				ActionSender.sendInterface(p, 1, 548, 210, 261);
				break;
			case 98:
				ActionSender.sendInterface(p, 1, 548, 211, 464);
				break;
			case 99:
				ActionSender.sendInterface(p, 1, 548, 212, 187);
				break;
			case 100:
				ActionSender.sendInterface(p, 1, 548, 213, 34);
				break;
				default:
					System.out.println(buttonId);
			}*/

			break;

		case 261:
			switch (buttonId) {
			case 3:
				ActionSender.sendConfig(p, 173, p.getWalkingQueue().isRunToggled() ? 0 : 1);
				p.getWalkingQueue().setRunToggled(
						p.getWalkingQueue().isRunToggled() ? false : true);
				break;
			case 5:
				if(p.getConnection().getDisplayMode() == 1) {
					ActionSender.sendInterface(p, 1, 548, 210, 982);
					ActionSender.sendAccessMask(p, -1, -1, 548, 97, 0, 2);
				} else {
					ActionSender.sendInterface(p, 1, 746, 98, 982);
					ActionSender.sendAccessMask(p, -1, -1, 746, 48, 0, 2);
				}
				break;
			case 6: // Mouse Button config
				p.setAttribute(&quot;mouseButtons&quot;, (Integer) p.getAttribute(&quot;mouseButtons&quot;, 0) == 0 ? 1 : 0);
				ActionSender.sendConfig(p, 170, (Integer) p.getAttribute(&quot;mouseButtons&quot;));
				break;
			case 7: // Accept aid config
				break;
			case 8: // House Building Options
				ActionSender.sendInventoryInterface(p, 398);
				break;
			case 16:
				ActionSender.sendInterface(p, 742);
				break;
			case 18:
				ActionSender.sendInterface(p, 743);
				break;
			default:
				break;
			}
			break;
		case 662:
			switch (buttonId) {
			case 49:
				if (p.getBob() != null) {
					p.getBob().callToPlayer();
				} else if (p.getAttribute(&quot;familiar&quot;) != null) {
					((Familiar) p.getAttribute(&quot;familiar&quot;)).callToPlayer();
				}
				break;
			case 51:
				if (p.getBob() != null) {
					p.getBob().dismiss();
				} else if (p.getAttribute(&quot;familiar&quot;) != null) {
					((Familiar) p.getAttribute(&quot;familiar&quot;)).dismiss();
				}
				break;
			}
			break;
		case 747:
			switch (buttonId) {
			case 12:
				p.getBob().removeAll();
				break;
			case 10:
				if (p.getBob() != null) {
					p.getBob().callToPlayer();
				} else if (p.getAttribute(&quot;familiar&quot;) != null) {
					((Familiar) p.getAttribute(&quot;familiar&quot;)).callToPlayer();
				}
				break;
			case 11:
				if (p.getBob() != null) {
					p.getBob().dismiss();
				} else if (p.getAttribute(&quot;familiar&quot;) != null) {
					((Familiar) p.getAttribute(&quot;familiar&quot;)).dismiss();
				}
				break;
			}
			break;
		default:
			System.out.println(&quot;interfaceId: &quot; + interfaceId + &quot;, buttonId: &quot; + buttonId);
		}
	}
}	[/code]</description>
    
    <lastBuildDate>Mon, 11 Jul 2011 01:03:12 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/small-100-error-help/403494.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Small 100 error help</title>
        <dc:creator><![CDATA[@ta1nt3d ta1nt3d]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ta1nt3d">@ta1nt3d</a> wrote:</p>
          <blockquote>
              <p>i fixed it it was the very first few lines where i had the teleport cases commented out</p>
<p>it had an open break that had no case to break</p>
<p><code>        @Override
        public void handlePacket(Player player, Message packet) {
                switch (packet.getOpcode()) {
                /*case 0:
                case 13:
                case 20:
                case 24:
                case 32:
                case 40:
                case 48:
                case 52:
                case 55:
                case 79:*/
                }
                        try {
                                handleButtons(player, packet);
                        } catch (Exception e) {
                        }
                        break;
                }</code></p>
<p>to:<code>        @Override
        public void handlePacket(Player player, Message packet) {
                switch (packet.getOpcode()) {
                /*case 0:
                case 13:
                case 20:
                case 24:
                case 32:
                case 40:
                case 48:
                case 52:
                case 55:
                case 79:*/
                }
                        try {
                                handleButtons(player, packet);
                        } catch (Exception e) {
                        }
                }</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/small-100-error-help/403494/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/small-100-error-help/403494/6</link>
        <pubDate>Mon, 11 Jul 2011 01:03:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-403494-6</guid>
        <source url="https://forum.moparisthebest.com/t/small-100-error-help/403494.rss">Small 100 error help</source>
      </item>
      <item>
        <title>Small 100 error help</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <p>[quote=“ta1nt3d, post:3, topic:403494”][quote author=ExtremeX-Scape™ link=topic=500556.msg3660755#msg3660755 date=1310345048]<br>
<a href="http://pastebin.com/k4khrrhK" class="onebox" target="_blank" rel="nofollow noopener">http://pastebin.com/k4khrrhK</a></p>
<p>Here you go.<br>
[/quote]</p>
<p>didnt work still 100 errors</p>
<p>see what im saying lol i cant find it for the life of me &gt;.&gt;[/quote]<br>
<a href="http://pastebin.com/2R9Xb7QH" class="onebox" target="_blank" rel="nofollow noopener">http://pastebin.com/2R9Xb7QH</a></p>
<p>Okay, now here.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/small-100-error-help/403494/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/small-100-error-help/403494/5</link>
        <pubDate>Mon, 11 Jul 2011 00:58:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-403494-5</guid>
        <source url="https://forum.moparisthebest.com/t/small-100-error-help/403494.rss">Small 100 error help</source>
      </item>
      <item>
        <title>Small 100 error help</title>
        <dc:creator><![CDATA[@usman555 usman555]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/usman555">@usman555</a> wrote:</p>
          <blockquote>
              <p>Why don’t you just put it in the Eclipse?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/small-100-error-help/403494/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/small-100-error-help/403494/4</link>
        <pubDate>Mon, 11 Jul 2011 00:52:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-403494-4</guid>
        <source url="https://forum.moparisthebest.com/t/small-100-error-help/403494.rss">Small 100 error help</source>
      </item>
      <item>
        <title>Small 100 error help</title>
        <dc:creator><![CDATA[@ta1nt3d ta1nt3d]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ta1nt3d">@ta1nt3d</a> wrote:</p>
          <blockquote>
              <p>[quote=“ExtremeX-Scape™, post:2, topic:403494”]<a href="http://pastebin.com/k4khrrhK" rel="nofollow noopener">http://pastebin.com/k4khrrhK</a></p>
<p>Here you go.[/quote]</p>
<p>didnt work still 100 errors</p>
<p>see what im saying lol i cant find it for the life of me &gt;.&gt;</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/small-100-error-help/403494/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/small-100-error-help/403494/3</link>
        <pubDate>Mon, 11 Jul 2011 00:50:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-403494-3</guid>
        <source url="https://forum.moparisthebest.com/t/small-100-error-help/403494.rss">Small 100 error help</source>
      </item>
      <item>
        <title>Small 100 error help</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <p><a href="http://pastebin.com/k4khrrhK" class="onebox" target="_blank" rel="nofollow noopener">http://pastebin.com/k4khrrhK</a></p>
<p>Here you go.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/small-100-error-help/403494/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/small-100-error-help/403494/2</link>
        <pubDate>Mon, 11 Jul 2011 00:44:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-403494-2</guid>
        <source url="https://forum.moparisthebest.com/t/small-100-error-help/403494.rss">Small 100 error help</source>
      </item>
      <item>
        <title>Small 100 error help</title>
        <dc:creator><![CDATA[@ta1nt3d ta1nt3d]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ta1nt3d">@ta1nt3d</a> wrote:</p>
          <blockquote>
              <p>source: dementhium 614/634</p>
<p>looked over actionbuttonhandler 1001010210010 times and cant find the missing bracket because im using notepad++ and it sucks hard but im to stupid to use netbeans or eclipse so can someone please just fix the freaking bracket lol</p>
<p>[code=java]package org.dementhium.net.packethandlers;</p>
<p>import org.dementhium.content.interfaces.EmoteTab;<br>
import org.dementhium.content.misc.Drinking;<br>
import org.dementhium.content.misc.Eating;<br>
import org.dementhium.content.misc.Drinking.Drink;<br>
import org.dementhium.content.misc.Eating.Food;<br>
import org.dementhium.content.skills.magic.MagicHandler;<br>
import org.dementhium.model.GroundItemManager;<br>
import org.dementhium.model.Item;<br>
import org.dementhium.model.World;<br>
import org.dementhium.model.mask.Animation;<br>
import org.dementhium.model.mask.Graphics;<br>
import org.dementhium.model.npc.impl.summoning.Familiar;<br>
import org.dementhium.model.player.Bank;<br>
import org.dementhium.model.player.Equipment;<br>
import org.dementhium.model.player.Player;<br>
import org.dementhium.net.ActionSender;<br>
import org.dementhium.net.PacketHandler;<br>
import org.dementhium.net.message.Message;<br>
import org.dementhium.util.InputHandler;<br>
/**<br>
*</p>
<ul>
<li>
<p><span class="mention">@author</span> 'Mystic Flow</p>
</li>
<li>
<p><span class="mention">@author</span> `Discardedx2</p>
</li>
<li>
<p><span class="mention">@auhtor</span> Steve<br>
*/<br>
public class ActionButtonHandler extends PacketHandler {</p>
<p><a class="mention" href="/u/override">@Override</a><br>
public void handlePacket(Player player, Message packet) {<br>
switch (packet.getOpcode()) {<br>
/<em>case 0:<br>
case 13:<br>
case 20:<br>
case 24:<br>
case 32:<br>
case 40:<br>
case 48:<br>
case 52:<br>
case 55:<br>
case 79:</em>/<br>
try {<br>
handleButtons(player, packet);<br>
} catch (Exception e) {<br>
}<br>
break;<br>
}<br>
}</p>
<p>private void handleButtons(Player p, Message packet) {<br>
int interfaceId = packet.readShort();<br>
int buttonId = packet.readShort();<br>
int itemId = packet.readShort();<br>
int slot = packet.readLEShortA();<br>
switch (interfaceId) {</p>
<pre><code> case 13:
 	Bank.handleButton(p, buttonId, slot, itemId);
 	break;
 case 464:
 	EmoteTab.handleButton(p, buttonId, slot, itemId);
 	break;
 case 430:
 	if(p.getAttribute("vengeance") == Boolean.TRUE) {
 		p.sendMessage("You already have vengeance casted.");
 		return;
 	}
 	if((System.currentTimeMillis() - (Long) p.getAttribute("vengDelay", 0L) &lt; 30000)) {
 		p.sendMessage("You can only cast vengeance spells every 30 seconds.");
 		return;
 	}
 	p.setAttribute("vengeance", Boolean.TRUE);
 	p.animate(Animation.create(4410));
 	p.graphics(Graphics.create(726, 100 &lt;&lt; 16));
 	break;
 case 192:
 case 193:
 	MagicHandler.handleAutocastButtons(p, interfaceId, buttonId);
 	break;
 case 763:
 	if (buttonId == 0) {
 		switch (packet.getOpcode()) {
 		case 79:
 			p.getBank().addItem(slot, 1);
 			break;
 		case 24:
 			p.getBank().addItem(slot, 5);
 			break;
 		case 48:
 			p.getBank().addItem(slot, 10);
 			break;
 		case 55:
 			Item item = p.getInventory().getContainer().get(slot);
 			p.getBank().addItem(slot,
 					p.getInventory().getContainer().getNumberOf(item));// getContainer(slot).getAmount());
 			break;
 		}
 	}
 	break;
 case 762:
 	if(buttonId &gt;= 45 &amp;&amp; buttonId &lt;= 61) {
 		p.setAttribute("currentTab", p.getBank().getArrayIndex(buttonId));
 	}
 	switch (buttonId) {
 	case 32:
 		p.getBank().bankInv();
 		break;
 	case 34:
 		p.getBank().bankEquip();
 		break;
 	case 36:
 		p.getBank().bankBob();
 		break;
 	case 19:
 		p.setAttribute("noting", p.getAttribute("noting", Boolean.FALSE) == Boolean.FALSE ? Boolean.TRUE : Boolean.FALSE);
 		break;
 	case 15:
 		p.setAttribute("inserting", p.getAttribute("inserting", Boolean.FALSE) == Boolean.FALSE ? Boolean.TRUE : Boolean.FALSE);
 		break;
 	case 61:
 	case 59:
 	case 57:
 	case 55:
 	case 53:
 	case 51:
 	case 49:
 	case 47:
 	case 45:
 		p.setAttribute("currentTab", p.getBank().getArrayIndex(buttonId));
 		break;

 	case 92:
 		switch (packet.getOpcode()) {
 		case 79:
 			p.getBank().removeItem(slot, 1);
 			break;
 		case 24:
 			p.getBank().removeItem(slot, 5);
 			break;
 		case 48:
 			p.getBank().removeItem(slot, 10);
 			break;
 		case 55:
 			Item item = p.getBank().getContainer().get(slot);
 			p.getBank().removeItem(slot, p.getBank().getContainer().getNumberOf(item));
 			break;
 		case 0:
 			Item item2 = p.getBank().getContainer().get(slot);
 			int ItemAmt = p.getBank().getContainer().getNumberOf(item2);
 			p.getBank().removeItem(slot, ItemAmt - 1);
 			break;
 		}
 		break;
 		
 	default:
 		System.out.println(buttonId);
 	}
 	break;

 case 665:
 	switch (packet.getOpcode()) {
 	case 79:
 		p.getBob().putItem(slot, 1);
 		break;
 	case 24:
 		p.getBob().putItem(slot, 5);
 		break;
 	case 48:
 		p.getBob().putItem(slot, 10);
 		break;
 	case 40:
 		p.getBob().putItem(slot, p.getInventory().numberOf(p.getInventory().get(slot).getId()));
 		break;
 	case 13:
 		InputHandler.requestIntegerInput(p, 2, "Please enter an amount:");
 		p.setAttribute("slotId", slot);
 		break;
 	}
 	break;
 case 671:
 	switch (buttonId) {
 	case 29:
 		p.getBob().take();
 		break;
 	}
 	switch (packet.getOpcode()) {
 	case 79:
 		p.getBob().removeItem(slot);
 		break;
 	case 24:
 		p.getBob().removeItem(slot, 5);
 		break;
 	case 48:
 		p.getBob().removeItem(slot, 10);
 		break;
 	case 40:
 		p.getBob().removeItem(slot, p.getBob().numberOf(p.getInventory().get(slot).getId()));
 		break;
 	case 13:
 		InputHandler.requestIntegerInput(p, 2, "Please enter an amount:");
 		p.setAttribute("slotId", slot);
 		break;
 	}
 	break;
 case 620:
 case 621:
 	World.getWorld().getShopManager().getShop((Integer) p.getAttribute("shopId")).handleOption(p, interfaceId, buttonId, slot, packet.getOpcode(), itemId);
 	break;
 case 589: // Clan chat tab
 	if (buttonId == 12) {
 		ActionSender.sendInterface(p, 590);
 		ActionSender.sendString(p, World.getWorld().getClanManager().getClanName(p.getUsername()), 590, 22);
 	}
 	if (buttonId == 17) {
 		World.getWorld().getClanManager().toggleLootshare(p);
 	}
 	break;
 case 590: // Clan chat interface
 	if (buttonId == 22) {
 		switch (packet.getOpcode()) {
 		case 79: // prefix
 			InputHandler.requestStringInput(p, 0, "Enter clan prefix:");
 			break;
 		case 24: // disable

 			break;
 		}
 	}
 	break;

 	/**
 	 * Trade
 	 */
 case 335:
 	switch(buttonId) {
 	/**
 	 * Close button.
 	 */
 	case 18:
 	case 12:
 		try {
 			if (p.getTradeSession() != null) {
 				p.getTradeSession().tradeFailed();
 			} else if (p.getTradePartner() != null) {
 				p.getTradePartner().getTradeSession().tradeFailed();
 			}
 		} catch (Exception e) {
 			e.printStackTrace();
 		}
 		break;
 	case 16:
 		if (p.getTradeSession() != null) {
 			p.getTradeSession().acceptPressed(p);
 		} else if (p.getTradePartner()  != null) {
 			p.getTradePartner().getTradeSession().acceptPressed(p);
 		}
 		break;

 	case 31:
 		if (p.getTradeSession() != null) {
 			switch(packet.getOpcode()) {
 			case 79:
 				p.getTradeSession().removeItem(p, slot, 1);
 				break;
 			case 24:
 				p.getTradeSession().removeItem(p, slot, 5);
 				break;
 			case 48:
 				p.getTradeSession().removeItem(p, slot, 10);
 				break;
 			case 40:
 				p.getTradeSession().removeItem(p, slot, p.getTradeSession().getPlayerItemsOffered(p).getNumberOf(p.getTradeSession().getPlayerItemsOffered(p).get(slot)));
 				break;
 			case 13:
 				InputHandler.requestIntegerInput(p, 2, "Please enter an amount:");
 				p.setAttribute("slotId", slot);
 				break;
 			case 55:
 				ActionSender.sendMessage(p, p.getTradeSession().getPlayerItemsOffered(p).get(slot).getDefinition().getName() + " is valued at " +p.getTradeSession().getPlayerItemsOffered(p).get(slot).getDefinition().getExchangePrice());
 				break;
 			default:
 			}
 		} else if (p.getTradePartner()  != null) {
 			switch(packet.getOpcode()) {
 			case 79:
 				p.getTradePartner().getTradeSession().removeItem(p, slot, 1);
 				break;
 			case 24:
 				p.getTradePartner().getTradeSession().removeItem(p, slot, 5);
 				break;
 			case 48:
 				p.getTradePartner().getTradeSession().removeItem(p, slot, 10);
 				break;
 			case 40:
 				p.getTradePartner().getTradeSession().removeItem(p, slot, p.getTradePartner().getTradeSession().getPlayerItemsOffered(p).getNumberOf(p.getTradePartner().getTradeSession().getPlayerItemsOffered(p).get(slot)));
 				break;
 			case 13:
 				InputHandler.requestIntegerInput(p, 1, "Please enter an amount:");
 				p.setAttribute("slotId", slot);
 				break;
 			case 55:
 				ActionSender.sendMessage(p, p.getTradePartner().getTradeSession().getPlayerItemsOffered(p).get(slot).getDefinition().getName() + " is valued at " +p.getTradePartner().getTradeSession().getPlayerItemsOffered(p).get(slot).getDefinition().getExchangePrice());
 				break;
 			}
 		}
 	default:
 	}
 	break;

 case 149:
 	switch (packet.getOpcode()) {
 	case 52:
 		if (p.getInventory().get(slot) != null &amp;&amp; itemId != p.getInventory().get(slot).getId()) {
 			return;
 		}
 		World.getWorld().getGroundItemManager().sendDelayedGlobalGroundItem(GroundItemManager.DEFAULT_DELAY, World.getWorld().getGroundItemManager().create(p, p.getInventory().get(slot), p.getLocation()), false);
 		p.getInventory().getContainer().set(slot, null);
 		p.getInventory().refresh();
 		break;
 	default:
 		if (p.getInventory().get(slot) != null &amp;&amp; itemId != p.getInventory().get(slot).getId()) {
 			return;
 		}
 		Food food = Food.forId(itemId);
 		if (food != null) {
 			Eating.eat(p, food, slot);
 			return;
 		}
 		Drink drink = Drink.forId(itemId);
 		if (drink != null) {
 			Drinking.drink(p, drink, slot);
 			return;
 		}
 		try {
 			p.getEquipment().equip(p, buttonId, slot, itemId);
 		} catch (Exception e) {
 			e.printStackTrace();
 		}
 		break;
 	}
 	break;

 case 334:
 	switch (buttonId) {
 	case 20:
 		if (p.getTradeSession() != null) {
 			p.getTradeSession().acceptPressed(p);
 		} else if (p.getTradePartner() != null) {
 			p.getTradePartner().getTradeSession().acceptPressed(p);
 		}
 		break;
 	case 21:
 	case 8:
 		if (p.getTradeSession() != null) {
 			p.getTradeSession().tradeFailed();
 		} else if (p.getTradePartner() != null) {
 			p.getTradePartner().getTradeSession().tradeFailed();
 		}
 		break;
 	}
 	break;
 case 336:
 	if (p.getTradeSession() != null) {
 		switch(packet.getOpcode()) {
 		case 79:
 			p.getTradeSession().offerItem(p, slot, 1);
 			break;
 		case 24:
 			p.getTradeSession().offerItem(p, slot, 5);
 			break;
 		case 48:
 			p.getTradeSession().offerItem(p, slot, 10);
 			break;
 		case 40:
 			break;
 		case 13:
 			InputHandler.requestIntegerInput(p, 2, "Please enter an amount:");
 			p.setAttribute("slotId", slot);
 			break;
 		case 55:
 			ActionSender.sendMessage(p, p.getTradeSession().getPlayerItemsOffered(p).get(slot).getDefinition().getName() + " is valued at " +p.getTradeSession().getPlayerItemsOffered(p).get(slot).getDefinition().getExchangePrice());
 			break;
 		}
 	} else if (p.getTradePartner() != null) {
 		switch(packet.getOpcode()) {
 		case 79:
 			p.getTradePartner().getTradeSession().offerItem(p, slot, 1);
 			break;
 		case 24:
 			p.getTradePartner().getTradeSession().offerItem(p, slot, 5);
 			break;
 		case 48:
 			p.getTradePartner().getTradeSession().offerItem(p, slot, 10);
 			break;
 		case 40:
 			p.getTradePartner().getTradeSession().offerItem(p, slot, p.getInventory().numberOf(p.getInventory().get(slot).getId()));
 			break;
 		case 13:
 			InputHandler.requestIntegerInput(p, 2, "Please enter an amount:");
 			p.setAttribute("slotId", slot);
 			break;
 		case 55:
 			ActionSender.sendMessage(p, p.getTradePartner().getTradeSession().getPlayerItemsOffered(p).get(slot).getDefinition().getName() + " is valued at " +p.getTradePartner().getTradeSession().getPlayerItemsOffered(p).get(slot).getDefinition().getExchangePrice());
 			break;
 		default:
 		}
 	}
 	break;
 case 387:
 	switch (buttonId) {
 	case 17:
 	case 20:
 	case 8:
 	case 11:
 	case 14:
 	case 26:
 	case 32:
 	case 29:
 	case 35:
 	case 23:
 	case 38:
 		int equipSlot = Equipment.getItemType(itemId);
 		Item item = p.getEquipment().get(equipSlot);
 		if (item == null) {
 			return;
 		}
 		if (item.getId() != itemId) {
 			return;
 		}
 		if (p.getInventory().hasRoomFor(item.getId(), item.getAmount())) {
 			p.getEquipment().set(equipSlot, null);
 			p.getInventory().getContainer().add(item);
 			p.getInventory().refresh();
 		} else {
 			ActionSender.sendMessage(p, "Not enough space in your inventory.");
 		}
 		return;
 	case 39:
 		p.getBonuses().refreshEquipScreen();
 		ActionSender.sendInterface(p, 667);
 		break;
 	default:
 		ActionSender.sendChatMessage(p, 0, "Equip button slot " + buttonId + " not handled.");
 		break;
 	}
 	break;
 case 750:
 	switch (buttonId) {
 	case 1:
 		p.getWalkingQueue().setRunToggled(!p.getWalkingQueue().isRunToggled());
 		break;
 	}
 	break;
 case 884:
 	switch (buttonId) {
 	case 4:// special bar
 		p.reverseSpecialActive();
 		if (p.getEquipment().getSlot(3) == 4153 &amp;&amp; p.getSpecialAmount() &gt; 0) {
 			//CombatAction.forType(p, FightType.MELEE).hit(p, p.getCombatState().getVictim());
 			p.getCombatState().setAttackDelay(0);
 		}
 		break;
 	case 15:// auto retaliate
 		p.reverseAutoRetaliate();
 		break;
 	case 11:
 	case 12:
 	case 13:
 	case 14:
 		p.getEquipment().toggleStyle(p, buttonId);
 		break;
 	}
 case 271:
 	switch (buttonId) {
 	case 8:
 	case 42:
 		p.getPrayer().switchPrayer(slot, p.getPrayer().isAncientCurses());
 		break;
 	case 43:
 		p.getPrayer().setQuickPrayers();
 		break;
 	default:
 	}
 	break;
 case 182:
 	switch (buttonId) {
 	case 7: // lobby 
 	case 9: //out
 		ActionSender.sendLogout(p, buttonId);
 		break;
 	}
 	break;
 case 982: //split chat settings
 	if(buttonId == 5) {
 		ActionSender.closeInter(p);		
 	} else {
 		if(buttonId &gt;= 15 &amp;&amp; buttonId &lt;= 29) {
 			int color = buttonId - 14;
 			p.getSettings().setPrivateTextColor(color);
 			ActionSender.sendConfig(p, 287, p.getSettings().getPrivateTextColor());
 		}
 	}
 	break;

 case 548:
 	ActionSender.closeSideInterface(p);
 	/*switch (buttonId) {
 	case 124:
 		ActionSender.sendInterface(p, 1, 548, 199, 320);
 		break;
 	case 123:
 		ActionSender.sendInterface(p, 1, 548, 198, 884);
 		break;
 	case 125:
 		ActionSender.sendInterface(p, 1, 548, 200, 190);
 		break;
 	case 126:
 		ActionSender.sendInterface(p, 1, 548, 201, 259);
 		break;
 	case 127:
 		ActionSender.sendInterface(p, 1, 548, 202, 149);
 		break;
 	case 128:			
 		ActionSender.sendInterface(p, 1, 548, 203, 387);
 		break;
 	case 129:
 		ActionSender.sendInterface(p, 1, 548, 204, 271);
 		break;
 	case 130:
 		ActionSender.sendInterface(p, 1, 548, 205, p.getSettings().getSpellBook());// BOOK
 		break;
 	case 93:
 		ActionSender.sendInterface(p, 1, 548, 206, 891);
 		break;
 	case 94:
 		ActionSender.sendInterface(p, 1, 548, 207, 550);
 		break;
 	case 95:
 		ActionSender.sendInterface(p, 1, 548, 208, 551);
 		break;
 	case 96:
 		ActionSender.sendInterface(p, 1, 548, 209, 589);
 		break;
 	case 97:
 		ActionSender.sendInterface(p, 1, 548, 210, 261);
 		break;
 	case 98:
 		ActionSender.sendInterface(p, 1, 548, 211, 464);
 		break;
 	case 99:
 		ActionSender.sendInterface(p, 1, 548, 212, 187);
 		break;
 	case 100:
 		ActionSender.sendInterface(p, 1, 548, 213, 34);
 		break;
 		default:
 			System.out.println(buttonId);
 	}*/

 	break;

 case 261:
 	switch (buttonId) {
 	case 3:
 		ActionSender.sendConfig(p, 173, p.getWalkingQueue().isRunToggled() ? 0 : 1);
 		p.getWalkingQueue().setRunToggled(
 				p.getWalkingQueue().isRunToggled() ? false : true);
 		break;
 	case 5:
 		if(p.getConnection().getDisplayMode() == 1) {
 			ActionSender.sendInterface(p, 1, 548, 210, 982);
 			ActionSender.sendAccessMask(p, -1, -1, 548, 97, 0, 2);
 		} else {
 			ActionSender.sendInterface(p, 1, 746, 98, 982);
 			ActionSender.sendAccessMask(p, -1, -1, 746, 48, 0, 2);
 		}
 		break;
 	case 6: // Mouse Button config
 		p.setAttribute("mouseButtons", (Integer) p.getAttribute("mouseButtons", 0) == 0 ? 1 : 0);
 		ActionSender.sendConfig(p, 170, (Integer) p.getAttribute("mouseButtons"));
 		break;
 	case 7: // Accept aid config
 		break;
 	case 8: // House Building Options
 		ActionSender.sendInventoryInterface(p, 398);
 		break;
 	case 16:
 		ActionSender.sendInterface(p, 742);
 		break;
 	case 18:
 		ActionSender.sendInterface(p, 743);
 		break;
 	default:
 		break;
 	}
 	break;
 case 662:
 	switch (buttonId) {
 	case 49:
 		if (p.getBob() != null) {
 			p.getBob().callToPlayer();
 		} else if (p.getAttribute("familiar") != null) {
 			((Familiar) p.getAttribute("familiar")).callToPlayer();
 		}
 		break;
 	case 51:
 		if (p.getBob() != null) {
 			p.getBob().dismiss();
 		} else if (p.getAttribute("familiar") != null) {
 			((Familiar) p.getAttribute("familiar")).dismiss();
 		}
 		break;
 	}
 	break;
 case 747:
 	switch (buttonId) {
 	case 12:
 		p.getBob().removeAll();
 		break;
 	case 10:
 		if (p.getBob() != null) {
 			p.getBob().callToPlayer();
 		} else if (p.getAttribute("familiar") != null) {
 			((Familiar) p.getAttribute("familiar")).callToPlayer();
 		}
 		break;
 	case 11:
 		if (p.getBob() != null) {
 			p.getBob().dismiss();
 		} else if (p.getAttribute("familiar") != null) {
 			((Familiar) p.getAttribute("familiar")).dismiss();
 		}
 		break;
 	}
 	break;
 default:
 	System.out.println("interfaceId: " + interfaceId + ", buttonId: " + buttonId);
 }
</code></pre>
<p>}<br>
}	[/code]</p>
</li>
</ul>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/small-100-error-help/403494/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/small-100-error-help/403494/1</link>
        <pubDate>Mon, 11 Jul 2011 00:28:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-403494-1</guid>
        <source url="https://forum.moparisthebest.com/t/small-100-error-help/403494.rss">Small 100 error help</source>
      </item>
  </channel>
</rss>
