<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Decimal -&gt; Roman Numeral Conversion</title>
    <link>https://forum.moparisthebest.com/t/decimal-roman-numeral-conversion/389878</link>
    <description>Just practising some things with C++. Made a quick little Roman Numeral converter, but it seems a bit bulky. Does anyone have any tips to improve it?

[code=C++]
#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;stdlib.h&gt;

int main(int argc, char** argv) {
    int value = atoi(argv[1]);
    std::string s = &quot;&quot;;
    bool done = false;
    while(!done) {
        if (value &gt;= 1000) {
            s += &quot;M&quot;;
            value -= 1000;
        }
        else if (value &gt;= 500) {
            s += &quot;D&quot;;
            value -= 500;
        }
        else if (value &gt;= 100) {
            s += &quot;C&quot;;
            value -= 100;
        }
        else if (value &gt;= 90) {
            s += &quot;XC&quot;;
            value -= 90;
        }
        else if (value &gt;= 50) {
            s += &quot;L&quot;;
            value -= 50;
        }
        else if (value &gt;= 40) {
            s += &quot;LC&quot;;
            value -= 40;
        }
        else if (value &gt;= 10) {
            s += &quot;X&quot;;
            value -= 10;
        }
        else if (value == 9) {
            s += &quot;IX&quot;;
            value -= 9;
        }
        else if (value &gt;= 5) {
            s += &quot;V&quot;;
            value -= 5;
        }
        else if (value == 4) {
            s += &quot;IV&quot;;
            value -= 4;
        }
        else if (value &gt;= 1) {
            s += &quot;I&quot;;
            value -= 1;
        }
        else {
            done = true;
        }
    }
    std::cout &lt;&lt; s &lt;&lt; std::endl;
}
[/code]

[hr]

Edit: Improved a little bit. Works with numbers NOT containing 4. (Still trying to work it out...)
[code=C++]
#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;stdlib.h&gt;

int main(int argc, char** argv) {
    if (argc != 2) {
        std::cout &lt;&lt; &quot;syntax: roman &lt;value&gt;&quot; &lt;&lt; std::endl;
        return 1;
    }
    int value = atoi(argv[1]);
    std::string s = &quot;&quot;;
    char letters[] = {
        &#39;M&#39;, &#39;D&#39;, &#39;C&#39;, &#39;L&#39;, &#39;X&#39;, &#39;V&#39;, &#39;I&#39;
    };
    int values[] = {
        1000, 500, 100, 50, 10, 5, 1
    };
    int length = 7;
    for (int i = 0; i &lt; length;) {
        if (value &gt;= values[i]) {
            int previous = (i == 0) ? i : i - 1;
            int next = (i == (length - 1)) ? i : i + 1;
            int remainder = value % values[i];
            if (remainder &gt; (3 * values[next])) {
                s += letters[next];
                s += letters[previous];
                value -= values[previous] - values[next];
            }
            else {
                s += letters[i];
                value -= values[i];
            }
        }
        else {
            i++;
        }
    }
    std::cout &lt;&lt; s &lt;&lt; std::endl;
    return 0;
}
[/code]</description>
    
    <lastBuildDate>Thu, 07 Apr 2011 19:44:09 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/decimal-roman-numeral-conversion/389878.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Decimal -&gt; Roman Numeral Conversion</title>
        <dc:creator><![CDATA[@_s11 s1gma]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_s11">@_s11</a> wrote:</p>
          <blockquote>
              <p>std::map&lt;int, char&gt; etc.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/decimal-roman-numeral-conversion/389878/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/decimal-roman-numeral-conversion/389878/7</link>
        <pubDate>Thu, 07 Apr 2011 19:44:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-389878-7</guid>
        <source url="https://forum.moparisthebest.com/t/decimal-roman-numeral-conversion/389878.rss">Decimal -&gt; Roman Numeral Conversion</source>
      </item>
      <item>
        <title>Decimal -&gt; Roman Numeral Conversion</title>
        <dc:creator><![CDATA[@Fat_Cookies Fat Cookies]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/fat_cookies">@Fat_Cookies</a> wrote:</p>
          <blockquote>
              <p>This is one of those things that would done well using recursion and as mentioned previously the modulo operator to determine whether to return the final value or not.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/decimal-roman-numeral-conversion/389878/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/decimal-roman-numeral-conversion/389878/6</link>
        <pubDate>Thu, 07 Apr 2011 15:37:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-389878-6</guid>
        <source url="https://forum.moparisthebest.com/t/decimal-roman-numeral-conversion/389878.rss">Decimal -&gt; Roman Numeral Conversion</source>
      </item>
      <item>
        <title>Decimal -&gt; Roman Numeral Conversion</title>
        <dc:creator><![CDATA[@Aetoc Aetoc]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/aetoc">@Aetoc</a> wrote:</p>
          <blockquote>
              <p>I’m no good at C++ but I wanted to know if it was difficult to learn because I have to code part of a project in C++, sorry for being offtopic.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/decimal-roman-numeral-conversion/389878/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/decimal-roman-numeral-conversion/389878/5</link>
        <pubDate>Thu, 07 Apr 2011 06:09:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-389878-5</guid>
        <source url="https://forum.moparisthebest.com/t/decimal-roman-numeral-conversion/389878.rss">Decimal -&gt; Roman Numeral Conversion</source>
      </item>
      <item>
        <title>Decimal -&gt; Roman Numeral Conversion</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="3" data-topic="389878">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/davidi2/40/2579_1.png" class="avatar"> Davidi2:</div>
<blockquote>
<p>I think somehow using the modulus operator would probably be better(figuring out the number of a symbol using dividends, then the remainder using mod), can’t really think right now though</p>
</blockquote>
</aside>
<p>Yeah I was thinking about that on the ride home, due to you can’t have more than 3 of the same letter for a number(meaning you can’t have VIIII, you have to use IX). But I would still probably have to have the same amount of conditionals.</p>
<pre><code class="lang-auto">if (value % 1000) &gt; 0) {
    value -= 1000;
}</code></pre>
<p>Something else I was thinking about was making a table for all the values. Like</p>
<pre><code class="lang-auto">char values[] = {
    'I', 'V', 'X', 'L', 'C', 'D', 'M' 
};</code></pre>
<p>And then just going from there maybe.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/decimal-roman-numeral-conversion/389878/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/decimal-roman-numeral-conversion/389878/4</link>
        <pubDate>Thu, 07 Apr 2011 05:51:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-389878-4</guid>
        <source url="https://forum.moparisthebest.com/t/decimal-roman-numeral-conversion/389878.rss">Decimal -&gt; Roman Numeral Conversion</source>
      </item>
      <item>
        <title>Decimal -&gt; Roman Numeral Conversion</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>I think somehow using the modulus operator would probably be better(figuring out the number of a symbol using dividends, then the remainder using mod), can’t really think right now though</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/decimal-roman-numeral-conversion/389878/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/decimal-roman-numeral-conversion/389878/3</link>
        <pubDate>Thu, 07 Apr 2011 05:38:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-389878-3</guid>
        <source url="https://forum.moparisthebest.com/t/decimal-roman-numeral-conversion/389878.rss">Decimal -&gt; Roman Numeral Conversion</source>
      </item>
      <item>
        <title>Decimal -&gt; Roman Numeral Conversion</title>
        <dc:creator><![CDATA[@SETO SETO]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/seto">@SETO</a> wrote:</p>
          <blockquote>
              <p>using namespace std</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/decimal-roman-numeral-conversion/389878/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/decimal-roman-numeral-conversion/389878/2</link>
        <pubDate>Thu, 07 Apr 2011 05:16:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-389878-2</guid>
        <source url="https://forum.moparisthebest.com/t/decimal-roman-numeral-conversion/389878.rss">Decimal -&gt; Roman Numeral Conversion</source>
      </item>
      <item>
        <title>Decimal -&gt; Roman Numeral Conversion</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>Just practising some things with C++. Made a quick little Roman Numeral converter, but it seems a bit bulky. Does anyone have any tips to improve it?</p>
<pre><code class="lang-auto">#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;stdlib.h&gt;

int main(int argc, char** argv) {
    int value = atoi(argv[1]);
    std::string s = "";
    bool done = false;
    while(!done) {
        if (value &gt;= 1000) {
            s += "M";
            value -= 1000;
        }
        else if (value &gt;= 500) {
            s += "D";
            value -= 500;
        }
        else if (value &gt;= 100) {
            s += "C";
            value -= 100;
        }
        else if (value &gt;= 90) {
            s += "XC";
            value -= 90;
        }
        else if (value &gt;= 50) {
            s += "L";
            value -= 50;
        }
        else if (value &gt;= 40) {
            s += "LC";
            value -= 40;
        }
        else if (value &gt;= 10) {
            s += "X";
            value -= 10;
        }
        else if (value == 9) {
            s += "IX";
            value -= 9;
        }
        else if (value &gt;= 5) {
            s += "V";
            value -= 5;
        }
        else if (value == 4) {
            s += "IV";
            value -= 4;
        }
        else if (value &gt;= 1) {
            s += "I";
            value -= 1;
        }
        else {
            done = true;
        }
    }
    std::cout &lt;&lt; s &lt;&lt; std::endl;
}</code></pre>
<p>[hr]</p>
<p>Edit: Improved a little bit. Works with numbers NOT containing 4. (Still trying to work it out…)</p>
<pre><code class="lang-auto">#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;stdlib.h&gt;

int main(int argc, char** argv) {
    if (argc != 2) {
        std::cout &lt;&lt; "syntax: roman &lt;value&gt;" &lt;&lt; std::endl;
        return 1;
    }
    int value = atoi(argv[1]);
    std::string s = "";
    char letters[] = {
        'M', 'D', 'C', 'L', 'X', 'V', 'I'
    };
    int values[] = {
        1000, 500, 100, 50, 10, 5, 1
    };
    int length = 7;
    for (int i = 0; i &lt; length;) {
        if (value &gt;= values[i]) {
            int previous = (i == 0) ? i : i - 1;
            int next = (i == (length - 1)) ? i : i + 1;
            int remainder = value % values[i];
            if (remainder &gt; (3 * values[next])) {
                s += letters[next];
                s += letters[previous];
                value -= values[previous] - values[next];
            }
            else {
                s += letters[i];
                value -= values[i];
            }
        }
        else {
            i++;
        }
    }
    std::cout &lt;&lt; s &lt;&lt; std::endl;
    return 0;
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/decimal-roman-numeral-conversion/389878/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/decimal-roman-numeral-conversion/389878/1</link>
        <pubDate>Thu, 07 Apr 2011 04:16:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-389878-1</guid>
        <source url="https://forum.moparisthebest.com/t/decimal-roman-numeral-conversion/389878.rss">Decimal -&gt; Roman Numeral Conversion</source>
      </item>
  </channel>
</rss>
