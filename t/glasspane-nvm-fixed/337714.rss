<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>GlassPane - NVM Fixed</title>
    <link>https://forum.moparisthebest.com/t/glasspane-nvm-fixed/337714</link>
    <description>I have a JFrame with shit on it, few buttons, editorpane etc, and I have it&#39;s GlassPane set up.

When it loads, I can either click a button, or press ESC to bring up a confirm dialog to exit out. When this pops up, I make the GlassPane visible, with a semi-transparent background, which works to darken everything.

However, whenever I click the button/press esc, either the button or the dialog box will be repainted at (0,0) aswell as it&#39;s proper position under the GlassPane. This appears to happen randomly. 90% of the time one of them will repaint at (0,0), the other 10% of the time it will work perfectly. And it seems to have no pattern to what is painted at (0,0) either, it just picks one and paints it there.

Would someone be able to point out something I might be doing wrong here that would cause this faggotry?

Heres the relative code:
[CODE=JAVA]/* imports....*/

public class Launcher extends JFrame implements MouseListener, KeyListener, MouseMotionListener, ActionListener {
	
	JPanel panel, shadowPanel;
	JButton exitButton;
	
	public static void main(String[] args) {
		new Launcher().setVisible(true);
	}
	
	private Launcher() {
		super(&quot;Project - Client Launcher&quot;);
		setSize(800, 600);
		setLocationRelativeTo(null);
		setUndecorated(true);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		
		shadowPanel = new JPanel();
		shadowPanel.setBackground(new Color(0, 0, 0, 128));
		shadowPanel.setVisible(true);
		
		/* insert all other GUI set-up here*/

		exitButton = new JButton(&quot;Exit&quot;);
		exitButton.setIcon(new ImageIcon(&quot;./data/exitButton.jpg&quot;));
		exitButton.setBounds(600, 420, 138, 36);
		exitButton.setFocusable(false);
		exitButton.addActionListener(this);
		
		panel.setOpaque(false);
		panel.setFocusable(false);
		panel.setLayout(null);
		panel.add(exitButton);
		
		setGlassPane(shadowPanel);
		getContentPane().add(panel);
		
		addKeyListener(this);
		addMouseListener(this);
	}
	
	private void exitLauncher() {
		shadowPanel.setVisible(true);
		if (JOptionPane.showConfirmDialog(null, &quot;Are you sure you want to quit?&quot;, &quot;&quot;, JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
			System.exit(1);
		else
			shadowPanel.setVisible(false);
	}

	/*Other event shit here*/

	@Override
	public void keyReleased(KeyEvent arg0) {
		System.out.println(&quot;keyReleased: &quot; + arg0.getKeyCode());
		
		switch(arg0.getKeyCode()) { 
			case 27: //esc
				exitLauncher();
			default:
				break;
		}
	}

	@Override
	public void actionPerformed(ActionEvent arg0) {
		if (arg0.getSource() == exitButton)
			exitLauncher();
	}

}[/CODE]


EDIT:
Nvm fixed it.

protip: don&#39;t use setBackground for this sort of thing, override the paintComponent for the JPanel to be used, then draw a semi-transparent rect on it.</description>
    
    <lastBuildDate>Thu, 22 Apr 2010 15:43:14 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/glasspane-nvm-fixed/337714.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>GlassPane - NVM Fixed</title>
        <dc:creator><![CDATA[@Speljohan Speljohan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/speljohan">@Speljohan</a> wrote:</p>
          <blockquote>
              <p>UR A GAY, LOCKED</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/glasspane-nvm-fixed/337714/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/glasspane-nvm-fixed/337714/2</link>
        <pubDate>Thu, 22 Apr 2010 15:43:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-337714-2</guid>
        <source url="https://forum.moparisthebest.com/t/glasspane-nvm-fixed/337714.rss">GlassPane - NVM Fixed</source>
      </item>
      <item>
        <title>GlassPane - NVM Fixed</title>
        <dc:creator><![CDATA[@Budda Budda]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/budda">@Budda</a> wrote:</p>
          <blockquote>
              <p>I have a JFrame with shit on it, few buttons, editorpane etc, and I have it’s GlassPane set up.</p>
<p>When it loads, I can either click a button, or press ESC to bring up a confirm dialog to exit out. When this pops up, I make the GlassPane visible, with a semi-transparent background, which works to darken everything.</p>
<p>However, whenever I click the button/press esc, either the button or the dialog box will be repainted at (0,0) aswell as it’s proper position under the GlassPane. This appears to happen randomly. 90% of the time one of them will repaint at (0,0), the other 10% of the time it will work perfectly. And it seems to have no pattern to what is painted at (0,0) either, it just picks one and paints it there.</p>
<p>Would someone be able to point out something I might be doing wrong here that would cause this faggotry?</p>
<p>Heres the relative code:</p>
<p>[CODE=JAVA]/* imports…*/</p>
<p>public class Launcher extends JFrame implements MouseListener, KeyListener, MouseMotionListener, ActionListener {</p>
<pre><code>JPanel panel, shadowPanel;
JButton exitButton;

public static void main(String[] args) {
	new Launcher().setVisible(true);
}

private Launcher() {
	super("Project - Client Launcher");
	setSize(800, 600);
	setLocationRelativeTo(null);
	setUndecorated(true);
	setDefaultCloseOperation(EXIT_ON_CLOSE);
	
	shadowPanel = new JPanel();
	shadowPanel.setBackground(new Color(0, 0, 0, 128));
	shadowPanel.setVisible(true);
	
	/* insert all other GUI set-up here*/

	exitButton = new JButton("Exit");
	exitButton.setIcon(new ImageIcon("./data/exitButton.jpg"));
	exitButton.setBounds(600, 420, 138, 36);
	exitButton.setFocusable(false);
	exitButton.addActionListener(this);
	
	panel.setOpaque(false);
	panel.setFocusable(false);
	panel.setLayout(null);
	panel.add(exitButton);
	
	setGlassPane(shadowPanel);
	getContentPane().add(panel);
	
	addKeyListener(this);
	addMouseListener(this);
}

private void exitLauncher() {
	shadowPanel.setVisible(true);
	if (JOptionPane.showConfirmDialog(null, "Are you sure you want to quit?", "", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
		System.exit(1);
	else
		shadowPanel.setVisible(false);
}

/*Other event shit here*/

@Override
public void keyReleased(KeyEvent arg0) {
	System.out.println("keyReleased: " + arg0.getKeyCode());
	
	switch(arg0.getKeyCode()) { 
		case 27: //esc
			exitLauncher();
		default:
			break;
	}
}

@Override
public void actionPerformed(ActionEvent arg0) {
	if (arg0.getSource() == exitButton)
		exitLauncher();
}
</code></pre>
<p>}[/CODE]</p>
<p>EDIT:<br>
Nvm fixed it.</p>
<p>protip: don’t use setBackground for this sort of thing, override the paintComponent for the JPanel to be used, then draw a semi-transparent rect on it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/glasspane-nvm-fixed/337714/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/glasspane-nvm-fixed/337714/1</link>
        <pubDate>Thu, 22 Apr 2010 02:58:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-337714-1</guid>
        <source url="https://forum.moparisthebest.com/t/glasspane-nvm-fixed/337714.rss">GlassPane - NVM Fixed</source>
      </item>
  </channel>
</rss>
