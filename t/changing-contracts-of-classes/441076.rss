<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Changing contracts of classes</title>
    <link>https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076</link>
    <description>I&#39;m creating a class that extends java.util.AbstractList, however some of the javadoc explanations of what each method should do. For my implementation however, the contracts of the methods would be different. For example, the [b]add(E)[/b] contract of AbstractList states that
&lt;blockquote&gt;Appends the specified element to the end of this list&lt;/blockquote&gt;

However, the way I want the method to work is
&lt;blockquote&gt;Adds the specified element to the next available index&lt;/blockquote&gt;

Is it [i]generally[/i] a good idea to change the contract of the superclass? And if so, how could I get around this?</description>
    
    <lastBuildDate>Wed, 02 May 2012 03:23:40 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Changing contracts of classes</title>
        <dc:creator><![CDATA[@slavemaster veer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/slavemaster">@slavemaster</a> wrote:</p>
          <blockquote>
              <p>You’re looking for is a fixed-size <a href="http://en.wikipedia.org/wiki/Sparse_array" data-bbcode="true" rel="nofollow noopener">sparse list</a>, akin to what Jagex used for their local entity lists. You can get a fixed-size list from Arrays.asList(), so I suppose that would be a place to start. In OpenJDK it uses an instance of Arrays.ArrayList (<a href="http://www.docjar.com/html/api/java/util/Arrays.java.html" rel="nofollow noopener">http://www.docjar.com/html/api/java/util/Arrays.java.html</a>):</p>
<p>[code]<br>
/**<br>
* Returns a fixed-size list backed by the specified array.  (Changes to<br>
* the returned list “write through” to the array.)  This method acts<br>
* as bridge between array-based and collection-based APIs, in<br>
* combination with {<a class="mention" href="/u/link">@link</a> Collection#toArray}.  The returned list is<br>
* serializable and implements {<a class="mention" href="/u/link">@link</a> RandomAccess}.<br>
*<br>
* </p><p>This method also provides a convenient way to create a fixed-size<br>
* list initialized to contain several elements:<br>
* </p><pre><br>
*     List&lt;String&gt; stooges = Arrays.asList(“Larry”, “Moe”, “Curly”);<br>
* </pre><br>
*<br>
* <a class="mention" href="/u/param">@param</a> a the array by which the list will be backed<br>
* <a class="mention" href="/u/return">@return</a> a list view of the specified array<br>
*/<br>
<span class="mention">@SafeVarargs</span><br>
public static  List asList(T… a) {<br>
return new ArrayList&lt;&gt;(a);<br>
}
<pre><code>   /**
    * @serial include
    */
   private static class ArrayList&lt;E&gt; extends AbstractList&lt;E&gt;
       implements RandomAccess, java.io.Serializable
   {
       private static final long serialVersionUID = -2764017481108945198L;
       private final E[] a;

       ArrayList(E[] array) {
           if (array==null)
               throw new NullPointerException();
           a = array;
       }

       public int size() {
           return a.length;
       }

       public Object[] toArray() {
           return a.clone();
       }

       public &lt;T&gt; T[] toArray(T[] a) {
           int size = size();
           if (a.length &lt; size)
               return Arrays.copyOf(this.a, size,
                                    (Class&lt;? extends T[]&gt;) a.getClass());
           System.arraycopy(this.a, 0, a, 0, size);
           if (a.length &gt; size)
               a[size] = null;
           return a;
       }

       public E get(int index) {
           return a[index];
       }

       public E set(int index, E element) {
           E oldValue = a[index];
           a[index] = element;
           return oldValue;
       }

       public int indexOf(Object o) {
           if (o==null) {
               for (int i=0; i&lt;a.length; i++)
                   if (a[i]==null)
                       return i;
           } else {
               for (int i=0; i&lt;a.length; i++)
                   if (o.equals(a[i]))
                       return i;
           }
           return -1;
       }

       public boolean contains(Object o) {
           return indexOf(o) != -1;
       }
   }[/code]
</code></pre>
<p><a class="mention" href="/u/david">@David</a>: AbstractList is made to not be explicitly limited in scope to dynamic lists… the methods that would otherwise require that are optional and by default throw an UnsupportedOperationException.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076/10</link>
        <pubDate>Wed, 02 May 2012 03:23:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-441076-10</guid>
        <source url="https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076.rss">Changing contracts of classes</source>
      </item>
      <item>
        <title>Changing contracts of classes</title>
        <dc:creator><![CDATA[@_s11 s1gma]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_s11">@_s11</a> wrote:</p>
          <blockquote>
              <p>and this is why inheritance is fucking gay</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076/9</link>
        <pubDate>Tue, 01 May 2012 15:24:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-441076-9</guid>
        <source url="https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076.rss">Changing contracts of classes</source>
      </item>
      <item>
        <title>Changing contracts of classes</title>
        <dc:creator><![CDATA[@silabsoft RuneAgent]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silabsoft">@silabsoft</a> wrote:</p>
          <blockquote>
              <p>[quote=“zyle1992, post:7, topic:441076”][quote author=sinisoul link=topic=543753.msg3985727#msg3985727 date=1335841114]<br>
So create your own implementation.<br>
[/quote]</p>
<p>That’s what I’ve decided to do, but most of the code is the same as the AbstractList.[/quote]<br>
If your class cannot follow the structure of the super you create your own implementation.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076/8</link>
        <pubDate>Tue, 01 May 2012 14:08:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-441076-8</guid>
        <source url="https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076.rss">Changing contracts of classes</source>
      </item>
      <item>
        <title>Changing contracts of classes</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="6" data-topic="441076">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/sinisoul/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> sinisoul:</div>
<blockquote>
<p>So create your own implementation.</p>
</blockquote>
</aside>
<p>That’s what I’ve decided to do, but most of the code is the same as the AbstractList.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076/7</link>
        <pubDate>Tue, 01 May 2012 03:25:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-441076-7</guid>
        <source url="https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076.rss">Changing contracts of classes</source>
      </item>
      <item>
        <title>Changing contracts of classes</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>So create your own implementation.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076/6</link>
        <pubDate>Tue, 01 May 2012 02:58:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-441076-6</guid>
        <source url="https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076.rss">Changing contracts of classes</source>
      </item>
      <item>
        <title>Changing contracts of classes</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>[quote=“Miss Silabsoft, post:3, topic:441076”]As david said,</p>
<p>However to answer your original question no its not a good idea to change the contract as others will expect it to perform as the super class is structured.[/quote]</p>
<p>Which is what I expected. However, because of the contract, a fixed-size list <span class="bbcode-b">CANNOT</span> be created, which is what I want to accomplish.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076/5</link>
        <pubDate>Tue, 01 May 2012 01:36:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-441076-5</guid>
        <source url="https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076.rss">Changing contracts of classes</source>
      </item>
      <item>
        <title>Changing contracts of classes</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <p>why even bother inheriting the AbstractList skeleton?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076/4</link>
        <pubDate>Tue, 01 May 2012 01:35:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-441076-4</guid>
        <source url="https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076.rss">Changing contracts of classes</source>
      </item>
      <item>
        <title>Changing contracts of classes</title>
        <dc:creator><![CDATA[@silabsoft RuneAgent]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silabsoft">@silabsoft</a> wrote:</p>
          <blockquote>
              <p>As david said,</p>
<p>However to answer your original question no its not a good idea to change the contract as others will expect it to perform as the super class is structured.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076/3</link>
        <pubDate>Tue, 01 May 2012 01:27:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-441076-3</guid>
        <source url="https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076.rss">Changing contracts of classes</source>
      </item>
      <item>
        <title>Changing contracts of classes</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>In an abstract list, the next available index <span class="bbcode-i">will</span> be the end of the list, because any remove operations will always shift the rest of the values to the left.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076/2</link>
        <pubDate>Tue, 01 May 2012 01:24:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-441076-2</guid>
        <source url="https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076.rss">Changing contracts of classes</source>
      </item>
      <item>
        <title>Changing contracts of classes</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>I’m creating a class that extends java.util.AbstractList, however some of the javadoc explanations of what each method should do. For my implementation however, the contracts of the methods would be different. For example, the <span class="bbcode-b">add(E)</span> contract of AbstractList states that</p>
<blockquote>Appends the specified element to the end of this list</blockquote>
<p>However, the way I want the method to work is</p>
<blockquote>Adds the specified element to the next available index</blockquote>
<p>Is it <span class="bbcode-i">generally</span> a good idea to change the contract of the superclass? And if so, how could I get around this?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076/1</link>
        <pubDate>Tue, 01 May 2012 01:18:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-441076-1</guid>
        <source url="https://forum.moparisthebest.com/t/changing-contracts-of-classes/441076.rss">Changing contracts of classes</source>
      </item>
  </channel>
</rss>
