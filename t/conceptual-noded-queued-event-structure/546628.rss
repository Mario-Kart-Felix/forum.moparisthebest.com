<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[conceptual]Noded/Queued event structure</title>
    <link>https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628</link>
    <description>To me this would make more sense in terms of handing actions/events executed by a player.

In turn they kind of have this in PI/HYP already, they just kind of buried it with the rest and i believe rely on flags to cancel.

Basically my idea is when you tell the server to do an action, a lot of times it has more than one thing associated with it anyways. When you click on &quot;Chop-down&quot; you first must walk to the tree(event) followed by {chopping, animation}(event).
Events have a chain of command(priority) at which they will interupt(or cancel) their execution.

Here is an example scenario
Player clicks on a tree.
Packet sent to server saying interact with tree.
Server checks if player is within range of the tree.
if not in range, queue a walking command(Travel priority)
if player has requirements for the tree, queue a tree cut event.(Action priority)
Player is now cutting the tree.
Player clicks away from the tree.
Packet sent to server saying (walk)
Server reads walk packet and queues a walking event (Travel priority)
(Travel priority &gt; Action priority) meaning any active or queued event with &lt;= Travel Priority is stopped or canceled respectively)

To cancel a travel object one must initiate another travel event (Makes sense, if you walking somewhere and want to stop, you must tell the server you are looking for a new target)


SIDE:
Upon events self completion the next one is set to begin.
EX: upon walking completion, tree cutting event begins.

Events must be executed in sequence, whereas tasks can be executed simultaneously (holy shit i spelt that correctly, proud moment), ergo Events are composed of tasks.(Make sense?)
Event = {Task(animation), Task(chop)}
Event = {Task(equip), Task(animation)};

Your event has access to the Player(the owner).

Typically an event will have a &quot;master&quot; task that will determine if it has completed its job. such as chopping has full inventory or the tree is gone)

How doable do you guys think something like this is? My goal in releasing this concept to the community is that more minds can converge on the idea, produce thoughts of their own and help the topic reach reality. The more people i get thinking about the concept, the more likely we will come up with a good design for it.</description>
    
    <lastBuildDate>Fri, 12 Sep 2014 02:25:01 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[conceptual]Noded/Queued event structure</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>[quote=“matzie, post:18, topic:546628”][quote author=Davidi2 link=topic=665525.msg4449444#msg4449444 date=1410483705]<br>
The player has 1 action at all times (or null)<br>
The player also has a boolean that indicates whether new actions can be started by the player (by either adding a check in packet handlers or creating two methods of starting actions, one which checks for the boolean and then a ‘force action’ the server can call to ignore the boolean)</p>
<p>If the action is force started or the new actions are allowed to be started, any new action by the player will overwrite the current action. To make the current action “high priority” (as you would call it), you simply set the boolean so that new actions are discarded until you toggle the boolean again.</p>
<p>If you have specific scenarios you want me to explain then I will<br>
[/quote]</p>
<p>When you click an object, then click away before you reach it. In your scenario make the player still face the object once it finishes walking to the new destination.</p>
<p>If you are treating walk-to as a part of an Event, this will not be possible. If you are treating them as two separate events then the server will not be able to execute both, because you limit it to one event.[/quote]Walking (if the player isnt blocked) should always cancel all player actions, events, and in your case, event queues. So I don’t see how you’d do it in yours in a way that makes sense. If I wanted to add it in mine I’d have a flag that indicated the player was doing a special type of walking, and then instead of using a normal walk action when the player sends the packet, it would change to a distancedaction that caused them to face the object again once they reached the destination. I’d have to look at my source again, which I cant atm, but I could probably use some overriden stop() methods  to achieve it somewhat similarly as well. However, like I said, what you want  to do isn’t something that should be handled with events. Walking should always cancel the current action/events.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/19">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/19</link>
        <pubDate>Fri, 12 Sep 2014 02:25:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546628-19</guid>
        <source url="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628.rss">[conceptual]Noded/Queued event structure</source>
      </item>
      <item>
        <title>[conceptual]Noded/Queued event structure</title>
        <dc:creator><![CDATA[@matzie matzie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/matzie">@matzie</a> wrote:</p>
          <blockquote>
              <p>[quote=“Davidi2, post:17, topic:546628”]The player has 1 action at all times (or null)<br>
The player also has a boolean that indicates whether new actions can be started by the player (by either adding a check in packet handlers or creating two methods of starting actions, one which checks for the boolean and then a ‘force action’ the server can call to ignore the boolean)</p>
<p>If the action is force started or the new actions are allowed to be started, any new action by the player will overwrite the current action. To make the current action “high priority” (as you would call it), you simply set the boolean so that new actions are discarded until you toggle the boolean again.</p>
<p>If you have specific scenarios you want me to explain then I will[/quote]</p>
<p>When you click an object, then click away before you reach it. In your scenario make the player still face the object once it finishes walking to the new destination.</p>
<p>If you are treating walk-to as a part of an Event, this will not be possible. If you are treating them as two separate events then the server will not be able to execute both, because you limit it to one event.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/18</link>
        <pubDate>Fri, 12 Sep 2014 01:33:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546628-18</guid>
        <source url="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628.rss">[conceptual]Noded/Queued event structure</source>
      </item>
      <item>
        <title>[conceptual]Noded/Queued event structure</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>The player has 1 action at all times (or null)<br>
The player also has a boolean that indicates whether new actions can be started by the player (by either adding a check in packet handlers or creating two methods of starting actions, one which checks for the boolean and then a ‘force action’ the server can call to ignore the boolean)</p>
<p>If the action is force started or the new actions are allowed to be started, any new action by the player will overwrite the current action. To make the current action “high priority” (as you would call it), you simply set the boolean so that new actions are discarded until you toggle the boolean again.</p>
<p>If you have specific scenarios you want me to explain then I will</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/17</link>
        <pubDate>Fri, 12 Sep 2014 01:01:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546628-17</guid>
        <source url="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628.rss">[conceptual]Noded/Queued event structure</source>
      </item>
      <item>
        <title>[conceptual]Noded/Queued event structure</title>
        <dc:creator><![CDATA[@matzie matzie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/matzie">@matzie</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="15" data-topic="546628">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/davidi2/40/2579_1.png" class="avatar"> Davidi2:</div>
<blockquote>
<p>Your entire priority queue can be represented by one boolean (whether or not new actions can be started), which is why there are too many layers.</p>
</blockquote>
</aside>
<p>Give a scenario or example of what you are talking about?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/16</link>
        <pubDate>Fri, 12 Sep 2014 00:48:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546628-16</guid>
        <source url="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628.rss">[conceptual]Noded/Queued event structure</source>
      </item>
      <item>
        <title>[conceptual]Noded/Queued event structure</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>Your entire priority queue can be represented by one boolean (whether or not new actions can be started), which is why there are too many layers.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/15</link>
        <pubDate>Thu, 11 Sep 2014 23:35:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546628-15</guid>
        <source url="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628.rss">[conceptual]Noded/Queued event structure</source>
      </item>
      <item>
        <title>[conceptual]Noded/Queued event structure</title>
        <dc:creator><![CDATA[@matzie matzie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/matzie">@matzie</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="13" data-topic="546628">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/davidi2/40/2579_1.png" class="avatar"> Davidi2:</div>
<blockquote>
<p>There’s no reason to build all of these layers on a simple concept. The action based system is simple and accurate, and easy to implement any of these requirements you have mentioned.</p>
</blockquote>
</aside>
<p>It isnt a lot of layers?<br>
Server has Event, to know what is going on - and what is going to happen next.<br>
The Event is comprised of Tasks - that cause the changes to player, location ETC.</p>
<p>Tasks are what comprises are essentially what the servers have now. The thing that would change is using hyperions “property” checking to see if you should stop walking, because all elements have the same basic prioritys when it comes to tasks.<br>
Teleport = Quick Travel=(Superheat/Alching) &gt; walk/run &gt; Entity interaction<br>
The first grouping are uninterruptible events, that if you attempt to perform a new one while the previous one is in progress, it will be ignored.<br>
if you are walking/running and click to teleport &gt; the walk/run will be canceled and you will begin the teleport to the new location<br>
if you are doing any kind of action (fishing,cutting wood, mining, fletching, etc.) any other kind of event will cancel it.<br>
If you are teleporting and attempt to walk, the request is ignored.<br>
Agility obstacles are the only special case i can think of at the moment. (Uninterruptible once started) which could be a feature of the event(cancel request is simply ignored).</p>
<p>All of these types of Events will be handled in the same way as before, it just adds a way to cancel future events (without flags!)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/14</link>
        <pubDate>Thu, 11 Sep 2014 22:40:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546628-14</guid>
        <source url="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628.rss">[conceptual]Noded/Queued event structure</source>
      </item>
      <item>
        <title>[conceptual]Noded/Queued event structure</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>There’s no reason to build all of these layers on a simple concept. The action based system is simple and accurate, and easy to implement any of these requirements you have mentioned.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/13</link>
        <pubDate>Thu, 11 Sep 2014 17:28:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546628-13</guid>
        <source url="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628.rss">[conceptual]Noded/Queued event structure</source>
      </item>
      <item>
        <title>[conceptual]Noded/Queued event structure</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>taking a lot of ideas from this thread…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/12</link>
        <pubDate>Thu, 11 Sep 2014 16:42:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546628-12</guid>
        <source url="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628.rss">[conceptual]Noded/Queued event structure</source>
      </item>
      <item>
        <title>[conceptual]Noded/Queued event structure</title>
        <dc:creator><![CDATA[@matzie matzie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/matzie">@matzie</a> wrote:</p>
          <blockquote>
              <p>That is not my intention at all.<br>
Scenario:<br>
Player clicks an object in game<br>
QUEUE: Walk-to, Interact<br>
Player clicks away(before walk-to completes)<br>
QUEUE:Walk-to (replaces original)<br>
Walk-to completes, Interaction begins<br>
Interaction fails to meet validation requirements (distance, existance, etc.)<br>
Interaction complete(failed)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/11</link>
        <pubDate>Thu, 11 Sep 2014 11:22:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546628-11</guid>
        <source url="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628.rss">[conceptual]Noded/Queued event structure</source>
      </item>
      <item>
        <title>[conceptual]Noded/Queued event structure</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <p>[quote=“matzie, post:9, topic:546628”][quote author=AtomicInt_ link=topic=665525.msg4449282#msg4449282 date=1410430889]</p>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<p><a href="http://en.wikipedia.org/wiki/Chain-of-responsibility_pattern" data-bbcode="true" rel="nofollow noopener">Chain of responsibility pattern</a></p>
<p>The general idea behind this is to have multiple chains per event:</p>
<p>click object event:<br>
verification chain<br>
- if for whatever reason during this process an object cannot be determined valid, break the chain otherwise let the chain continue</p>
<pre><code>handler chain
    - handle the objects action, breaking the chain upon completion if required
</code></pre>
<p>This idea has been discussed and implemented in a few bases already, but none of them actually do it well.</p>
<p>Having a chain of responsibility will be extremely helpful when creating certain kinds of content, e.g: quests</p>
</blockquote>
</aside>
<p>Nearly perfect! The one part missing is a higher priority doesnt just jump infront, it boots the rest.</p>
</blockquote>
</aside>
<p>No one says you can’t add priorities to the pattern!<br>
[/quote]<br>
I just thought of this, but it still would make sense to leave the rest there after prioritizing, it would make you face the target when you finished your walk, and then the interaction action would still just have a position check <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"> So that pattern does work :)[/quote]</p>
<p>Eh, I don’t really agree with even attempting to do an action when the object isn’t valid (what if it’s a fake object packet that was sent using silabsofts Java agent or something?) if one thing about the queued action is not right, don’t do anything. Don’t even let the character move to the object.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/10</link>
        <pubDate>Thu, 11 Sep 2014 10:42:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546628-10</guid>
        <source url="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628.rss">[conceptual]Noded/Queued event structure</source>
      </item>
      <item>
        <title>[conceptual]Noded/Queued event structure</title>
        <dc:creator><![CDATA[@matzie matzie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/matzie">@matzie</a> wrote:</p>
          <blockquote>
              <p>[quote=“AtomicInt_, post:8, topic:546628”][quote author=matzie link=topic=665525.msg4449281#msg4449281 date=1410430790]</p>
<aside class="quote">
<blockquote>
<p><a href="http://en.wikipedia.org/wiki/Chain-of-responsibility_pattern" data-bbcode="true" rel="nofollow noopener">Chain of responsibility pattern</a></p>
<p>The general idea behind this is to have multiple chains per event:</p>
<p>click object event:<br>
verification chain<br>
- if for whatever reason during this process an object cannot be determined valid, break the chain otherwise let the chain continue</p>
<pre><code>handler chain
    - handle the objects action, breaking the chain upon completion if required
</code></pre>
<p>This idea has been discussed and implemented in a few bases already, but none of them actually do it well.</p>
<p>Having a chain of responsibility will be extremely helpful when creating certain kinds of content, e.g: quests</p>
</blockquote>
</aside>
<p>Nearly perfect! The one part missing is a higher priority doesnt just jump infront, it boots the rest.<br>
[/quote]</p>
<p>No one says you can’t add priorities to the pattern![/quote]<br>
I just thought of this, but it still would make sense to leave the rest there after prioritizing, it would make you face the target when you finished your walk, and then the interaction action would still just have a position check <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"> So that pattern does work <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/9</link>
        <pubDate>Thu, 11 Sep 2014 10:24:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546628-9</guid>
        <source url="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628.rss">[conceptual]Noded/Queued event structure</source>
      </item>
      <item>
        <title>[conceptual]Noded/Queued event structure</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <p>[quote=“matzie, post:7, topic:546628”][quote author=AtomicInt_ link=topic=665525.msg4449279#msg4449279 date=1410429836]<br>
<a href="http://en.wikipedia.org/wiki/Chain-of-responsibility_pattern" data-bbcode="true" rel="nofollow noopener">Chain of responsibility pattern</a></p>
<p>The general idea behind this is to have multiple chains per event:</p>
<p>click object event:<br>
verification chain<br>
- if for whatever reason during this process an object cannot be determined valid, break the chain otherwise let the chain continue</p>
<pre><code>handler chain
    - handle the objects action, breaking the chain upon completion if required
</code></pre>
<p>This idea has been discussed and implemented in a few bases already, but none of them actually do it well.</p>
<p>Having a chain of responsibility will be extremely helpful when creating certain kinds of content, e.g: quests<br>
[/quote]<br>
Nearly perfect! The one part missing is a higher priority doesnt just jump infront, it boots the rest.[/quote]</p>
<p>No one says you can’t add priorities to the pattern!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/8</link>
        <pubDate>Thu, 11 Sep 2014 10:21:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546628-8</guid>
        <source url="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628.rss">[conceptual]Noded/Queued event structure</source>
      </item>
      <item>
        <title>[conceptual]Noded/Queued event structure</title>
        <dc:creator><![CDATA[@matzie matzie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/matzie">@matzie</a> wrote:</p>
          <blockquote>
              <p>[quote=“AtomicInt_, post:6, topic:546628”]<a href="http://en.wikipedia.org/wiki/Chain-of-responsibility_pattern" data-bbcode="true" rel="nofollow noopener">Chain of responsibility pattern</a></p>
<p>The general idea behind this is to have multiple chains per event:</p>
<p>click object event:<br>
verification chain<br>
- if for whatever reason during this process an object cannot be determined valid, break the chain otherwise let the chain continue</p>
<pre><code>handler chain
    - handle the objects action, breaking the chain upon completion if required
</code></pre>
<p>This idea has been discussed and implemented in a few bases already, but none of them actually do it well.</p>
<p>Having a chain of responsibility will be extremely helpful when creating certain kinds of content, e.g: quests[/quote]<br>
Nearly perfect! The one part missing is a higher priority doesnt just jump infront, it boots the rest.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/7</link>
        <pubDate>Thu, 11 Sep 2014 10:19:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546628-7</guid>
        <source url="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628.rss">[conceptual]Noded/Queued event structure</source>
      </item>
      <item>
        <title>[conceptual]Noded/Queued event structure</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <p><a href="http://en.wikipedia.org/wiki/Chain-of-responsibility_pattern" data-bbcode="true" rel="nofollow noopener">Chain of responsibility pattern</a></p>
<p>The general idea behind this is to have multiple chains per event:</p>
<p>click object event:<br>
verification chain<br>
- if for whatever reason during this process an object cannot be determined valid, break the chain otherwise let the chain continue</p>
<pre><code>handler chain
    - handle the objects action, breaking the chain upon completion if required
</code></pre>
<p>This idea has been discussed and implemented in a few bases already, but none of them actually do it well.</p>
<p>Having a chain of responsibility will be extremely helpful when creating certain kinds of content, e.g: quests</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/6</link>
        <pubDate>Thu, 11 Sep 2014 10:03:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546628-6</guid>
        <source url="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628.rss">[conceptual]Noded/Queued event structure</source>
      </item>
      <item>
        <title>[conceptual]Noded/Queued event structure</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>[quote=“Davidi2, post:3, topic:546628”]The way you handle this is by giving each player one action. Any new action (walking included) overwrites any existing actions. Distanced actions (ones that are walking and then a different action) are the same type. Take a look at the moparscape server for an example.</p>
<p>By wrapping as many things as you can in actions, you ensure that you wont mess up any overlapping things and allow people to abuse the system.[/quote]<br>
that’s exactly how hyperion does it as well</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/5</link>
        <pubDate>Thu, 11 Sep 2014 05:13:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546628-5</guid>
        <source url="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628.rss">[conceptual]Noded/Queued event structure</source>
      </item>
      <item>
        <title>[conceptual]Noded/Queued event structure</title>
        <dc:creator><![CDATA[@matzie matzie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/matzie">@matzie</a> wrote:</p>
          <blockquote>
              <p>[quote=“Davidi2, post:3, topic:546628”]The way you handle this is by giving each player one action. Any new action (walking included) overwrites any existing actions. Distanced actions (ones that are walking and then a different action) are the same type. Take a look at the moparscape server for an example.</p>
<p>By wrapping as many things as you can in actions, you ensure that you wont mess up any overlapping things and allow people to abuse the system.[/quote]</p>
<p>That is what this would be essentially. Just calling Actions, Events. With yours the single action, new actions would be ignored or overwrite the original, instead of executing once the current is completed.</p>
<p>If you were to (high/low)alch(uninteruptable event) followed by a walk event. The walk event you would want to execute when the first completed, followed by combat or whatever.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/4</link>
        <pubDate>Thu, 11 Sep 2014 05:05:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546628-4</guid>
        <source url="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628.rss">[conceptual]Noded/Queued event structure</source>
      </item>
      <item>
        <title>[conceptual]Noded/Queued event structure</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>The way you handle this is by giving each player one action. Any new action (walking included) overwrites any existing actions. Distanced actions (ones that are walking and then a different action) are the same type. Take a look at the moparscape server for an example.</p>
<p>By wrapping as many things as you can in actions, you ensure that you wont mess up any overlapping things and allow people to abuse the system.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/3</link>
        <pubDate>Thu, 11 Sep 2014 04:28:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546628-3</guid>
        <source url="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628.rss">[conceptual]Noded/Queued event structure</source>
      </item>
      <item>
        <title>[conceptual]Noded/Queued event structure</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>so basically a chain of ordered tasks</p>
<p>each player could have a chain of tasks represented by a single “TaskChain” Object or something, meaning that in theory you would only be able to have one “chain” active at a time. if you want to start a new chain the old chain would have to be cancelled</p>
<p>pretty cool idea man</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/2</link>
        <pubDate>Thu, 11 Sep 2014 03:24:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546628-2</guid>
        <source url="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628.rss">[conceptual]Noded/Queued event structure</source>
      </item>
      <item>
        <title>[conceptual]Noded/Queued event structure</title>
        <dc:creator><![CDATA[@matzie matzie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/matzie">@matzie</a> wrote:</p>
          <blockquote>
              <p>To me this would make more sense in terms of handing actions/events executed by a player.</p>
<p>In turn they kind of have this in PI/HYP already, they just kind of buried it with the rest and i believe rely on flags to cancel.</p>
<p>Basically my idea is when you tell the server to do an action, a lot of times it has more than one thing associated with it anyways. When you click on “Chop-down” you first must walk to the tree(event) followed by {chopping, animation}(event).<br>
Events have a chain of command(priority) at which they will interupt(or cancel) their execution.</p>
<p>Here is an example scenario<br>
Player clicks on a tree.<br>
Packet sent to server saying interact with tree.<br>
Server checks if player is within range of the tree.<br>
if not in range, queue a walking command(Travel priority)<br>
if player has requirements for the tree, queue a tree cut event.(Action priority)<br>
Player is now cutting the tree.<br>
Player clicks away from the tree.<br>
Packet sent to server saying (walk)<br>
Server reads walk packet and queues a walking event (Travel priority)<br>
(Travel priority &gt; Action priority) meaning any active or queued event with &lt;= Travel Priority is stopped or canceled respectively)</p>
<p>To cancel a travel object one must initiate another travel event (Makes sense, if you walking somewhere and want to stop, you must tell the server you are looking for a new target)</p>
<p>SIDE:<br>
Upon events self completion the next one is set to begin.<br>
EX: upon walking completion, tree cutting event begins.</p>
<p>Events must be executed in sequence, whereas tasks can be executed simultaneously (holy shit i spelt that correctly, proud moment), ergo Events are composed of tasks.(Make sense?)<br>
Event = {Task(animation), Task(chop)}<br>
Event = {Task(equip), Task(animation)};</p>
<p>Your event has access to the Player(the owner).</p>
<p>Typically an event will have a “master” task that will determine if it has completed its job. such as chopping has full inventory or the tree is gone)</p>
<p>How doable do you guys think something like this is? My goal in releasing this concept to the community is that more minds can converge on the idea, produce thoughts of their own and help the topic reach reality. The more people i get thinking about the concept, the more likely we will come up with a good design for it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628/1</link>
        <pubDate>Wed, 10 Sep 2014 20:16:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546628-1</guid>
        <source url="https://forum.moparisthebest.com/t/conceptual-noded-queued-event-structure/546628.rss">[conceptual]Noded/Queued event structure</source>
      </item>
  </channel>
</rss>
