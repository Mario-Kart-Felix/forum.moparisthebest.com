<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[PI DSPK]Mysql Wont Save anything - HELP! will send $2 Paypal to whoever can hel</title>
    <link>https://forum.moparisthebest.com/t/pi-dspk-mysql-wont-save-anything-help-will-send-2-paypal-to-whoever-can-hel/434899</link>
    <description>Hello,

So I am making my server have a mysql high scores, login system, auto donation system, etc...

All my codes compile perfect, but for some reason nothing ever saves into mysql.


And yes, I do have the connection running in server.java.

There in my savegame void:

[code]
public void SaveGame() {
                            

		synchronized (this) {
				PlayerSave.saveGame(this);
				MysqlManager.saveuser(this);
		}
	}
[/code]

My MYSQLMANAGER:
[code]
package server.util;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import server.model.players.Client;
import java.sql.DriverManager;

/**
 * MySQL Class
 * @author Ryan / Lmctruck30
 *
 */

public class MysqlManager {

	/** MySQL Connection */
	public static Connection conn = null;
	public static Statement statement = null;
	public static ResultSet results = null;
	
	public static String MySQLDataBase = &quot;rsps&quot;;
	public static String MySQLURL = &quot;localhost&quot;;
	public static String MySQLUser = &quot;root&quot;;
	public static String MySQLPassword = &quot;tsm123&quot;;
	
	/**
	 * Creates a Connection to the MySQL Database
	 */

  	public static boolean isDonator(Client clientToSave) {
		try {
		if (clientToSave.playerName != null) {
			query(&quot;SELECT FROM `status` WHERE Donator = 0;&quot;);
			clientToSave.isDonator = 0;
		}
		else if (clientToSave.playerName != null) {
			query(&quot;SELECT FROM `status` WHERE Donator = 1;&quot;);
			clientToSave.isDonator = 1;
		}

		} catch (Exception e) {
			e.printStackTrace();
			return false;
		}
		return true;
	}

	public static boolean saveStatus(Client c) {
		try{
			query(&quot;DELETE FROM `status` WHERE playerName = &#39;&quot; 
					+ c.playerName + &quot;&#39;;&quot;);
			query(&quot;INSERT INTO `status` (`playerName`,`Donator`) VALUES (&#39;&quot;
					+ c.playerName +&quot;&#39;,&quot;
					+ c.isDonator + &quot;);&quot;); // &quot;&#39;;&quot;);  
		} catch (Exception e) {
		return false;
		}
		return true;
	}


	public synchronized static void createConnection() {
		try {
			Class.forName(&quot;com.mysql.jdbc.Driver&quot;).newInstance();
			conn = DriverManager.getConnection(&quot;jdbc:mysql://localhost/rsps&quot;, &quot;root&quot;, &quot;letmein1&quot;);
			Misc.println(&quot;MySQL Connected&quot;);
		} 
		catch(Exception e) {			
			e.printStackTrace();
		}
	}
	
	public synchronized static void destroyConnection() {
		try {
			statement.close();
			conn.close();
		} catch (Exception e) {
			//e.printStackTrace();
		}
	}
	
	public synchronized static ResultSet query(String s) throws SQLException {
		try {
			if (s.toLowerCase().startsWith(&quot;select&quot;)) {
				ResultSet rs = statement.executeQuery(s);
				return rs;
			} else {
				statement.executeUpdate(s);
			}
			return null;
		} catch (Exception e) {
			destroyConnection();
			createConnection();
			//e.printStackTrace();
		}
		return null;
	}
	
	/**
	 * Save Sessions HighScores
	 * @param clientToSave The session that saves their stats
	 * @return The flag true if successful
	 */
	public synchronized static boolean saveHighScore(Client clientToSave) {
		try {
			query(&quot;DELETE FROM `skills` WHERE playerName = &#39;&quot;+clientToSave.playerName+&quot;&#39;;&quot;);
			query(&quot;DELETE FROM `skillsoverall` WHERE playerName = &#39;&quot;+clientToSave.playerName+&quot;&#39;;&quot;);
			query(&quot;INSERT INTO `skills` (`playerName`,`Attacklvl`,`Attackxp`,`Defencelvl`,`Defencexp`,`Strengthlvl`,`Strengthxp`,`Hitpointslvl`,`Hitpointsxp`,`Rangelvl`,`Rangexp`,`Prayerlvl`,`Prayerxp`,`Magiclvl`,`Magicxp`,`Cookinglvl`,`Cookingxp`,`Woodcuttinglvl`,`Woodcuttingxp`,`Fletchinglvl`,`Fletchingxp`,`Fishinglvl`,`Fishingxp`,`Firemakinglvl`,`Firemakingxp`,`Craftinglvl`,`Craftingxp`,`Smithinglvl`,`Smithingxp`,`Mininglvl`,`Miningxp`,`Herblorelvl`,`Herblorexp`,`Agilitylvl`,`Agilityxp`,`Thievinglvl`,`Thievingxp`,`Slayerlvl`,`Slayerxp`,`Farminglvl`,`Farmingxp`,`Runecraftlvl`,`Runecraftxp`) VALUES (&#39;&quot;+clientToSave.playerName+&quot;&#39;,&quot;+clientToSave.playerLevel[0]+&quot;,&quot;+clientToSave.playerXP[0]+&quot;,&quot;+clientToSave.playerLevel[1]+&quot;,&quot;+clientToSave.playerXP[1]+&quot;,&quot;+clientToSave.playerLevel[2]+&quot;,&quot;+clientToSave.playerXP[2]+&quot;,&quot;+clientToSave.playerLevel[3]+&quot;,&quot;+clientToSave.playerXP[3]+&quot;,&quot;+clientToSave.playerLevel[4]+&quot;,&quot;+clientToSave.playerXP[4]+&quot;,&quot;+clientToSave.playerLevel[5]+&quot;,&quot;+clientToSave.playerXP[5]+&quot;,&quot;+clientToSave.playerLevel[6]+&quot;,&quot;+clientToSave.playerXP[6]+&quot;,&quot;+clientToSave.playerLevel[7]+&quot;,&quot;+clientToSave.playerXP[7]+&quot;,&quot;+clientToSave.playerLevel[8]+&quot;,&quot;+clientToSave.playerXP[8]+&quot;,&quot;+clientToSave.playerLevel[9]+&quot;,&quot;+clientToSave.playerXP[9]+&quot;,&quot;+clientToSave.playerLevel[10]+&quot;,&quot;+clientToSave.playerXP[10]+&quot;,&quot;+clientToSave.playerLevel[11]+&quot;,&quot;+clientToSave.playerXP[11]+&quot;,&quot;+clientToSave.playerLevel[12]+&quot;,&quot;+clientToSave.playerXP[12]+&quot;,&quot;+clientToSave.playerLevel[13]+&quot;,&quot;+clientToSave.playerXP[13]+&quot;,&quot;+clientToSave.playerLevel[14]+&quot;,&quot;+clientToSave.playerXP[14]+&quot;,&quot;+clientToSave.playerLevel[15]+&quot;,&quot;+clientToSave.playerXP[15]+&quot;,&quot;+clientToSave.playerLevel[16]+&quot;,&quot;+clientToSave.playerXP[16]+&quot;,&quot;+clientToSave.playerLevel[17]+&quot;,&quot;+clientToSave.playerXP[17]+&quot;,&quot;+clientToSave.playerLevel[18]+&quot;,&quot;+clientToSave.playerXP[18]+&quot;,&quot;+clientToSave.playerLevel[19]+&quot;,&quot;+clientToSave.playerXP[19]+&quot;,&quot;+clientToSave.playerLevel[20]+&quot;,&quot;+clientToSave.playerXP[20]+&quot;);&quot;);
			query(&quot;INSERT INTO `skillsoverall` (`playerName`,`lvl`,`xp`) VALUES (&#39;&quot;+clientToSave.playerName+&quot;&#39;,&quot;+(clientToSave.getLevelForXP(clientToSave.playerXP[0]) + clientToSave.getLevelForXP(clientToSave.playerXP[1]) + clientToSave.getLevelForXP(clientToSave.playerXP[2]) + clientToSave.getLevelForXP(clientToSave.playerXP[3]) + clientToSave.getLevelForXP(clientToSave.playerXP[4]) + clientToSave.getLevelForXP(clientToSave.playerXP[5]) + clientToSave.getLevelForXP(clientToSave.playerXP[6]) + clientToSave.getLevelForXP(clientToSave.playerXP[7]) + clientToSave.getLevelForXP(clientToSave.playerXP[8]) + clientToSave.getLevelForXP(clientToSave.playerXP[9]) + clientToSave.getLevelForXP(clientToSave.playerXP[10]) + clientToSave.getLevelForXP(clientToSave.playerXP[11]) + clientToSave.getLevelForXP(clientToSave.playerXP[12]) + clientToSave.getLevelForXP(clientToSave.playerXP[13]) + clientToSave.getLevelForXP(clientToSave.playerXP[14]) + clientToSave.getLevelForXP(clientToSave.playerXP[15]) + clientToSave.getLevelForXP(clientToSave.playerXP[16]) + clientToSave.getLevelForXP(clientToSave.playerXP[17]) + clientToSave.getLevelForXP(clientToSave.playerXP[18]) + clientToSave.getLevelForXP(clientToSave.playerXP[19]) + clientToSave.getLevelForXP(clientToSave.playerXP[20]))+&quot;,&quot;+((clientToSave.playerXP[0]) + (clientToSave.playerXP[1]) + (clientToSave.playerXP[2]) + (clientToSave.playerXP[3]) + (clientToSave.playerXP[4]) + (clientToSave.playerXP[5]) + (clientToSave.playerXP[6]) + (clientToSave.playerXP[7]) + (clientToSave.playerXP[8]) + (clientToSave.playerXP[9]) + (clientToSave.playerXP[10]) + (clientToSave.playerXP[11]) + (clientToSave.playerXP[12]) + (clientToSave.playerXP[13]) + (clientToSave.playerXP[14]) + (clientToSave.playerXP[15]) + (clientToSave.playerXP[16]) + (clientToSave.playerXP[17]) + (clientToSave.playerXP[18]) + (clientToSave.playerXP[19]) + (clientToSave.playerXP[20]))+&quot;);&quot;);
		} catch (Exception e) {
			//e.printStackTrace();
			return false;
		}
		return true;
	}
	
	/**
	 * Save Voting Point Info
	 * @param c The session&#39;s client
	 * @return The flag if true was successful
	 */
	public static boolean saveuser(Client c) {
		try {
			query(&quot;INSERT INTO `status` (`playerName`,`playerPass&#39;) VALUES (&#39;&quot;+c.playerName+&quot;&#39;,&quot;+c.playerPass+&quot;);&quot;);
		} catch(Exception e) {
			//e.printStackTrace();
			return false;
		}
		return true;
	}
	
	public static int loadVotingPoints(Client c) {
		try {
			ResultSet group = statement.executeQuery(&quot;SELECT * FROM user WHERE username = &#39;&quot;+c.playerName+&quot;&#39;&quot;);
			while(group.next()) {
				String groupp = group.getString(&quot;usergroupid&quot;);
				int mgroup = Integer.parseInt(groupp);
				if(mgroup &gt; 0) {
					return mgroup;
				}
				return 0;
			}
		} catch(Exception e) {
			return -1;
		}
		return -1;
	}
	
	public static int loadDonationPoints(Client c) {
		try {
			ResultSet group = statement.executeQuery(&quot;SELECT * FROM user WHERE username = &#39;&quot;+c.playerName+&quot;&#39;&quot;);
			while(group.next()) {
				String groupp = group.getString(&quot;usergroupid&quot;);
				int mgroup = Integer.parseInt(groupp);
				if(mgroup &gt; 0) {
					return mgroup;
				}
				return 0;
			}
		} catch(Exception e) {
			return -1;
		}
		return -1;
	}
	
}
[/code]

I will gift $2 paypal to whoever can help me.

Thanks,
Dragonslyfe</description>
    
    <lastBuildDate>Fri, 02 Mar 2012 20:42:21 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/pi-dspk-mysql-wont-save-anything-help-will-send-2-paypal-to-whoever-can-hel/434899.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[PI DSPK]Mysql Wont Save anything - HELP! will send $2 Paypal to whoever can hel</title>
        <dc:creator><![CDATA[@robert1122 robert1122]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/robert1122">@robert1122</a> wrote:</p>
          <blockquote>
              <p>Hello,</p>
<p>So I am making my server have a mysql high scores, login system, auto donation system, etc…</p>
<p>All my codes compile perfect, but for some reason nothing ever saves into mysql.</p>
<p>And yes, I do have the connection running in server.java.</p>
<p>There in my savegame void:</p>
<pre><code class="lang-auto">public void SaveGame() {
                            

		synchronized (this) {
				PlayerSave.saveGame(this);
				MysqlManager.saveuser(this);
		}
	}</code></pre>
<p>My MYSQLMANAGER:</p>
<pre><code class="lang-auto">package server.util;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import server.model.players.Client;
import java.sql.DriverManager;

/**
 * MySQL Class
 * @author Ryan / Lmctruck30
 *
 */

public class MysqlManager {

	/** MySQL Connection */
	public static Connection conn = null;
	public static Statement statement = null;
	public static ResultSet results = null;
	
	public static String MySQLDataBase = "rsps";
	public static String MySQLURL = "localhost";
	public static String MySQLUser = "root";
	public static String MySQLPassword = "tsm123";
	
	/**
	 * Creates a Connection to the MySQL Database
	 */

  	public static boolean isDonator(Client clientToSave) {
		try {
		if (clientToSave.playerName != null) {
			query("SELECT FROM `status` WHERE Donator = 0;");
			clientToSave.isDonator = 0;
		}
		else if (clientToSave.playerName != null) {
			query("SELECT FROM `status` WHERE Donator = 1;");
			clientToSave.isDonator = 1;
		}

		} catch (Exception e) {
			e.printStackTrace();
			return false;
		}
		return true;
	}

	public static boolean saveStatus(Client c) {
		try{
			query("DELETE FROM `status` WHERE playerName = '" 
					+ c.playerName + "';");
			query("INSERT INTO `status` (`playerName`,`Donator`) VALUES ('"
					+ c.playerName +"',"
					+ c.isDonator + ");"); // "';");  
		} catch (Exception e) {
		return false;
		}
		return true;
	}


	public synchronized static void createConnection() {
		try {
			Class.forName("com.mysql.jdbc.Driver").newInstance();
			conn = DriverManager.getConnection("jdbc:mysql://localhost/rsps", "root", "letmein1");
			Misc.println("MySQL Connected");
		} 
		catch(Exception e) {			
			e.printStackTrace();
		}
	}
	
	public synchronized static void destroyConnection() {
		try {
			statement.close();
			conn.close();
		} catch (Exception e) {
			//e.printStackTrace();
		}
	}
	
	public synchronized static ResultSet query(String s) throws SQLException {
		try {
			if (s.toLowerCase().startsWith("select")) {
				ResultSet rs = statement.executeQuery(s);
				return rs;
			} else {
				statement.executeUpdate(s);
			}
			return null;
		} catch (Exception e) {
			destroyConnection();
			createConnection();
			//e.printStackTrace();
		}
		return null;
	}
	
	/**
	 * Save Sessions HighScores
	 * @param clientToSave The session that saves their stats
	 * @return The flag true if successful
	 */
	public synchronized static boolean saveHighScore(Client clientToSave) {
		try {
			query("DELETE FROM `skills` WHERE playerName = '"+clientToSave.playerName+"';");
			query("DELETE FROM `skillsoverall` WHERE playerName = '"+clientToSave.playerName+"';");
			query("INSERT INTO `skills` (`playerName`,`Attacklvl`,`Attackxp`,`Defencelvl`,`Defencexp`,`Strengthlvl`,`Strengthxp`,`Hitpointslvl`,`Hitpointsxp`,`Rangelvl`,`Rangexp`,`Prayerlvl`,`Prayerxp`,`Magiclvl`,`Magicxp`,`Cookinglvl`,`Cookingxp`,`Woodcuttinglvl`,`Woodcuttingxp`,`Fletchinglvl`,`Fletchingxp`,`Fishinglvl`,`Fishingxp`,`Firemakinglvl`,`Firemakingxp`,`Craftinglvl`,`Craftingxp`,`Smithinglvl`,`Smithingxp`,`Mininglvl`,`Miningxp`,`Herblorelvl`,`Herblorexp`,`Agilitylvl`,`Agilityxp`,`Thievinglvl`,`Thievingxp`,`Slayerlvl`,`Slayerxp`,`Farminglvl`,`Farmingxp`,`Runecraftlvl`,`Runecraftxp`) VALUES ('"+clientToSave.playerName+"',"+clientToSave.playerLevel[0]+","+clientToSave.playerXP[0]+","+clientToSave.playerLevel[1]+","+clientToSave.playerXP[1]+","+clientToSave.playerLevel[2]+","+clientToSave.playerXP[2]+","+clientToSave.playerLevel[3]+","+clientToSave.playerXP[3]+","+clientToSave.playerLevel[4]+","+clientToSave.playerXP[4]+","+clientToSave.playerLevel[5]+","+clientToSave.playerXP[5]+","+clientToSave.playerLevel[6]+","+clientToSave.playerXP[6]+","+clientToSave.playerLevel[7]+","+clientToSave.playerXP[7]+","+clientToSave.playerLevel[8]+","+clientToSave.playerXP[8]+","+clientToSave.playerLevel[9]+","+clientToSave.playerXP[9]+","+clientToSave.playerLevel[10]+","+clientToSave.playerXP[10]+","+clientToSave.playerLevel[11]+","+clientToSave.playerXP[11]+","+clientToSave.playerLevel[12]+","+clientToSave.playerXP[12]+","+clientToSave.playerLevel[13]+","+clientToSave.playerXP[13]+","+clientToSave.playerLevel[14]+","+clientToSave.playerXP[14]+","+clientToSave.playerLevel[15]+","+clientToSave.playerXP[15]+","+clientToSave.playerLevel[16]+","+clientToSave.playerXP[16]+","+clientToSave.playerLevel[17]+","+clientToSave.playerXP[17]+","+clientToSave.playerLevel[18]+","+clientToSave.playerXP[18]+","+clientToSave.playerLevel[19]+","+clientToSave.playerXP[19]+","+clientToSave.playerLevel[20]+","+clientToSave.playerXP[20]+");");
			query("INSERT INTO `skillsoverall` (`playerName`,`lvl`,`xp`) VALUES ('"+clientToSave.playerName+"',"+(clientToSave.getLevelForXP(clientToSave.playerXP[0]) + clientToSave.getLevelForXP(clientToSave.playerXP[1]) + clientToSave.getLevelForXP(clientToSave.playerXP[2]) + clientToSave.getLevelForXP(clientToSave.playerXP[3]) + clientToSave.getLevelForXP(clientToSave.playerXP[4]) + clientToSave.getLevelForXP(clientToSave.playerXP[5]) + clientToSave.getLevelForXP(clientToSave.playerXP[6]) + clientToSave.getLevelForXP(clientToSave.playerXP[7]) + clientToSave.getLevelForXP(clientToSave.playerXP[8]) + clientToSave.getLevelForXP(clientToSave.playerXP[9]) + clientToSave.getLevelForXP(clientToSave.playerXP[10]) + clientToSave.getLevelForXP(clientToSave.playerXP[11]) + clientToSave.getLevelForXP(clientToSave.playerXP[12]) + clientToSave.getLevelForXP(clientToSave.playerXP[13]) + clientToSave.getLevelForXP(clientToSave.playerXP[14]) + clientToSave.getLevelForXP(clientToSave.playerXP[15]) + clientToSave.getLevelForXP(clientToSave.playerXP[16]) + clientToSave.getLevelForXP(clientToSave.playerXP[17]) + clientToSave.getLevelForXP(clientToSave.playerXP[18]) + clientToSave.getLevelForXP(clientToSave.playerXP[19]) + clientToSave.getLevelForXP(clientToSave.playerXP[20]))+","+((clientToSave.playerXP[0]) + (clientToSave.playerXP[1]) + (clientToSave.playerXP[2]) + (clientToSave.playerXP[3]) + (clientToSave.playerXP[4]) + (clientToSave.playerXP[5]) + (clientToSave.playerXP[6]) + (clientToSave.playerXP[7]) + (clientToSave.playerXP[8]) + (clientToSave.playerXP[9]) + (clientToSave.playerXP[10]) + (clientToSave.playerXP[11]) + (clientToSave.playerXP[12]) + (clientToSave.playerXP[13]) + (clientToSave.playerXP[14]) + (clientToSave.playerXP[15]) + (clientToSave.playerXP[16]) + (clientToSave.playerXP[17]) + (clientToSave.playerXP[18]) + (clientToSave.playerXP[19]) + (clientToSave.playerXP[20]))+");");
		} catch (Exception e) {
			//e.printStackTrace();
			return false;
		}
		return true;
	}
	
	/**
	 * Save Voting Point Info
	 * @param c The session's client
	 * @return The flag if true was successful
	 */
	public static boolean saveuser(Client c) {
		try {
			query("INSERT INTO `status` (`playerName`,`playerPass') VALUES ('"+c.playerName+"',"+c.playerPass+");");
		} catch(Exception e) {
			//e.printStackTrace();
			return false;
		}
		return true;
	}
	
	public static int loadVotingPoints(Client c) {
		try {
			ResultSet group = statement.executeQuery("SELECT * FROM user WHERE username = '"+c.playerName+"'");
			while(group.next()) {
				String groupp = group.getString("usergroupid");
				int mgroup = Integer.parseInt(groupp);
				if(mgroup &gt; 0) {
					return mgroup;
				}
				return 0;
			}
		} catch(Exception e) {
			return -1;
		}
		return -1;
	}
	
	public static int loadDonationPoints(Client c) {
		try {
			ResultSet group = statement.executeQuery("SELECT * FROM user WHERE username = '"+c.playerName+"'");
			while(group.next()) {
				String groupp = group.getString("usergroupid");
				int mgroup = Integer.parseInt(groupp);
				if(mgroup &gt; 0) {
					return mgroup;
				}
				return 0;
			}
		} catch(Exception e) {
			return -1;
		}
		return -1;
	}
	
}</code></pre>
<p>I will gift $2 paypal to whoever can help me.</p>
<p>Thanks,<br>
Dragonslyfe</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-dspk-mysql-wont-save-anything-help-will-send-2-paypal-to-whoever-can-hel/434899/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-dspk-mysql-wont-save-anything-help-will-send-2-paypal-to-whoever-can-hel/434899/1</link>
        <pubDate>Fri, 02 Mar 2012 20:42:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-434899-1</guid>
        <source url="https://forum.moparisthebest.com/t/pi-dspk-mysql-wont-save-anything-help-will-send-2-paypal-to-whoever-can-hel/434899.rss">[PI DSPK]Mysql Wont Save anything - HELP! will send $2 Paypal to whoever can hel</source>
      </item>
  </channel>
</rss>
