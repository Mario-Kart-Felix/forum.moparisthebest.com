<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>When is it appropriate to use public fields?</title>
    <link>https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547</link>
    <description>According to OOP, an object should have all fields private. According to the Java conventions however, it says that when an object represents something with no behavior (like a C struct), the fields should be public.

One class I&#39;m using in particular brought up this question. A simple Location class that represents the players location in the world. It&#39;s made up of an (x, y, z) coordinate. Now, the biggest downfall I see of making them public, is that I lose it&#39;s &quot;thread-safe&quot; state.

I read this at http://www.javapractices.com/topic/TopicAction.do?Id=49

&lt;blockquote&gt;If an object is immutable, then it is automatically thread-safe. If it is mutable, then extra steps must be taken to ensure thread-safety.&lt;/blockquote&gt;</description>
    
    <lastBuildDate>Sat, 25 Jun 2011 21:30:39 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>When is it appropriate to use public fields?</title>
        <dc:creator><![CDATA[@_s11 s1gma]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_s11">@_s11</a> wrote:</p>
          <blockquote>
              <p>dsls lmao</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/15</link>
        <pubDate>Sat, 25 Jun 2011 21:30:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-400547-15</guid>
        <source url="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547.rss">When is it appropriate to use public fields?</source>
      </item>
      <item>
        <title>When is it appropriate to use public fields?</title>
        <dc:creator><![CDATA[@iKilem iKilem]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ikilem">@iKilem</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="13" data-topic="400547">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/davidi2/40/2579_1.png" class="avatar"> Davidi2:</div>
<blockquote>
<p>I do use DSL for things that change, however I’ve noticed fish types and similar aren’t very dynamic and there would be no reason to change them. Or things that there are a lot of, and putting it all in a java file would be very ugly (like item definitions)</p>
</blockquote>
</aside>
<p>This.</p>
<p>If you are writing a class and know the types at compile-time (e.g. with fish in runescape, you know what the types are), use an enum instead.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/14</link>
        <pubDate>Thu, 23 Jun 2011 20:05:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-400547-14</guid>
        <source url="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547.rss">When is it appropriate to use public fields?</source>
      </item>
      <item>
        <title>When is it appropriate to use public fields?</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>I do use DSL for things that change, however I’ve noticed fish types and similar aren’t very dynamic and there would be no reason to change them. Or things that there are a lot of, and putting it all in a java file would be very ugly (like item definitions)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/13</link>
        <pubDate>Thu, 23 Jun 2011 19:59:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-400547-13</guid>
        <source url="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547.rss">When is it appropriate to use public fields?</source>
      </item>
      <item>
        <title>When is it appropriate to use public fields?</title>
        <dc:creator><![CDATA[@Protosstribe object]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/protosstribe">@Protosstribe</a> wrote:</p>
          <blockquote>
              <p>[quote=“iKilem, post:8, topic:400547”][quote author=object link=topic=497616.msg3639311#msg3639311 date=1308853272]<br>
Proper immutable objects are already thread-safe, and thus, you don’t need to synchronize them. I tend to declare all my VOs immutable.</p>
<p>I personally have never heard of a convention stating that you should use public modifiers for the fields of a class that has no behaviour. If you’re referring to DTOs, they should aswell preferrably have accessor methods.<br>
[/quote]<br>
The Location object may be reassigned, so synchronization is necessary. Since you’re reassigning the object, though, you would synchronize the class that owns it instead or provide a getter/setter that is synchronized.</p>
<p>Some people do follow the convention that members of POD types (C-style structs) should be public.[/quote]<br>
That’s true. Although, I was actually referring to the internals of the immutable object, but I guess I didn’t make myself clear enough.</p>
<p>Davidi2: I’d prefer to create a DSL for stuff like that. Create a Domain Model and some DSL parser to populate it with the data (Data Driven Design). This makes things that change quite frequently, much easier to change. You don’t need to recompile the hard-coded data provided and you’d keep your Domain Model clean from actual content.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/12</link>
        <pubDate>Thu, 23 Jun 2011 19:47:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-400547-12</guid>
        <source url="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547.rss">When is it appropriate to use public fields?</source>
      </item>
      <item>
        <title>When is it appropriate to use public fields?</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>Correction - I like to use enums for final objects that <span class="bbcode-i">represent</span> primitive data but could not be represented by a primitive data field.</p>
<p>So like custom enums that just hold basic information.</p>
<p>So for (a RSPS) example, instead of doing this:</p>
<pre><code class="lang-auto">private final FishType SHARK = new FishType(495, 76, 1); //Fish ID, level, random (Not real numbers of course)
private final FishType TUNA = new FishType(453, 40, 1);

private class FishType {
  private int fishID;
  private int level;
  private int random;
  
  public FishType(int fishID, int level, int random) {
    this.fishID = fishID;
    ...</code></pre>
<p>I’d do:</p>
<p>[code=java]<br>
public enum FishType {</p>
<pre><code>	SHRIMP(1, 10, Tool.SMALL_NET, 317),

	SARDINE(5, 20, Tool.FISHING_ROD, 327),

	HERRING(10, 30, Tool.FISHING_ROD, 345),

	ANCHOVY(15, 40, Tool.SMALL_NET, 321),

	MACKEREL(16, 20, Tool.BIG_NET, 353),

	TROUT(20, 50, Tool.FLY_FISHING_ROD, 335),

	COD(23, 45, Tool.BIG_NET, 341),

	PIKE(25, 60, Tool.FISHING_ROD, 349),

	SALMON(30, 70, Tool.FLY_FISHING_ROD, 331),

	TUNA(35, 80, Tool.HARPOON, 359),

	LOBSTER(40, 90, Tool.LOBSTER_CAGE, 377),

	BASS(46, 100, Tool.BIG_NET, 363),

	SWORDFISH(50, 100, Tool.HARPOON, 371),

	MONKFISH(62, 120, Tool.SMALL_NET, 7944),

	SHARK(76, 110, Tool.HARPOON, 383);



	private FishType(int lvl, int xp, Tool tool, int rawID) {

		this.lvl = lvl;

		this.xp = xp;

		this.tool = tool;

		this.rawID = rawID;

	}



	private int xp;

	private int lvl;

	private Tool tool;

	private int rawID;[/code]
</code></pre>
<p>etc (note tool is also an enum I used, but ignore it for now :P)  I also have no idea why that double spaced… copy and paste fail I guess.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/11</link>
        <pubDate>Thu, 23 Jun 2011 19:34:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-400547-11</guid>
        <source url="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547.rss">When is it appropriate to use public fields?</source>
      </item>
      <item>
        <title>When is it appropriate to use public fields?</title>
        <dc:creator><![CDATA[@iKilem iKilem]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ikilem">@iKilem</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="9" data-topic="400547">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/davidi2/40/2579_1.png" class="avatar"> Davidi2:</div>
<blockquote>
<p>I like to use enums instead of final objects unless it’s a primitive data type. Why? No idea…</p>
</blockquote>
</aside>
<p>Well, that makes no sense and is not applicable for the most part.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/10</link>
        <pubDate>Thu, 23 Jun 2011 19:26:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-400547-10</guid>
        <source url="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547.rss">When is it appropriate to use public fields?</source>
      </item>
      <item>
        <title>When is it appropriate to use public fields?</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>I like to use enums instead of final objects unless it’s a primitive data type. Why? No idea…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/9</link>
        <pubDate>Thu, 23 Jun 2011 19:21:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-400547-9</guid>
        <source url="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547.rss">When is it appropriate to use public fields?</source>
      </item>
      <item>
        <title>When is it appropriate to use public fields?</title>
        <dc:creator><![CDATA[@iKilem iKilem]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ikilem">@iKilem</a> wrote:</p>
          <blockquote>
              <p>[quote=“object, post:7, topic:400547”]Proper immutable objects are already thread-safe, and thus, you don’t need to synchronize them. I tend to declare all my VOs immutable.</p>
<p>I personally have never heard of a convention stating that you should use public modifiers for the fields of a class that has no behaviour. If you’re referring to DTOs, they should aswell preferrably have accessor methods.[/quote]<br>
The Location object may be reassigned, so synchronization is necessary. Since you’re reassigning the object, though, you would synchronize the class that owns it instead or provide a getter/setter that is synchronized.</p>
<p>Some people do follow the convention that members of POD types (C-style structs) should be public.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/8</link>
        <pubDate>Thu, 23 Jun 2011 19:19:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-400547-8</guid>
        <source url="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547.rss">When is it appropriate to use public fields?</source>
      </item>
      <item>
        <title>When is it appropriate to use public fields?</title>
        <dc:creator><![CDATA[@Protosstribe object]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/protosstribe">@Protosstribe</a> wrote:</p>
          <blockquote>
              <p>Proper immutable objects are already thread-safe, and thus, you don’t need to synchronize them. I tend to declare all my VOs immutable.</p>
<p>I personally have never heard of a convention stating that you should use public modifiers for the fields of a class that has no behaviour. If you’re referring to DTOs, they should aswell preferrably have accessor methods.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/7</link>
        <pubDate>Thu, 23 Jun 2011 18:21:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-400547-7</guid>
        <source url="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547.rss">When is it appropriate to use public fields?</source>
      </item>
      <item>
        <title>When is it appropriate to use public fields?</title>
        <dc:creator><![CDATA[@iKilem iKilem]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ikilem">@iKilem</a> wrote:</p>
          <blockquote>
              <p>If it’s going to be accessed/changed by multiple threads, you will need to synchronize. If only one thread changes the Location while the other(s) simply read from it, you could declare the object as volatile. As for whether to have it as a public or private field, I would go with the latter.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/6</link>
        <pubDate>Thu, 23 Jun 2011 10:10:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-400547-6</guid>
        <source url="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547.rss">When is it appropriate to use public fields?</source>
      </item>
      <item>
        <title>When is it appropriate to use public fields?</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>[quote=“iKilem, post:4, topic:400547”][quote author=zyle1992 link=topic=497616.msg3639021#msg3639021 date=1308822026]<br>
The way I have Locations right now is each Location is final. All of it’s fields (x, y, z) are set at construction and cannot be changed after. Locations however also have a “public Location transform(int dx, int dy, int dz)” method.<br>
[/quote]<br>
How can the Location object be final if (x, y, z) are immutable? How does transform() work?[/quote]</p>
<p>It returns a new Location, based on the values for the current location.</p>
<pre><code class="lang-auto">public Location transform(final int x, final int y, final int z) {
    final Location location = new Location(this.x + x, this.y + y, this.z + z);
    return location;
}</code></pre>
<p>For example</p>
<pre><code class="lang-auto">Location locA = new Location(100, 100, 0);
Location locB = locA.transform(5, -4, 1);
System.out.println(locB);</code></pre>
<p>which would print out</p>
<pre><code class="lang-auto">Location[x=105, y=96, z=1]</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/5</link>
        <pubDate>Thu, 23 Jun 2011 09:51:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-400547-5</guid>
        <source url="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547.rss">When is it appropriate to use public fields?</source>
      </item>
      <item>
        <title>When is it appropriate to use public fields?</title>
        <dc:creator><![CDATA[@iKilem iKilem]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ikilem">@iKilem</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="3" data-topic="400547">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/zyle1992/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> zyle1992:</div>
<blockquote>
<p>The way I have Locations right now is each Location is final. All of it’s fields (x, y, z) are set at construction and cannot be changed after. Locations however also have a “public Location transform(int dx, int dy, int dz)” method.</p>
</blockquote>
</aside>
<p>How can the Location object be final if (x, y, z) are immutable? How does transform() work?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/4</link>
        <pubDate>Thu, 23 Jun 2011 09:42:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-400547-4</guid>
        <source url="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547.rss">When is it appropriate to use public fields?</source>
      </item>
      <item>
        <title>When is it appropriate to use public fields?</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>[quote=“iKilem, post:2, topic:400547”]I guess with “POD” types you could use public fields. The only other exception is constants.</p>
<p>If your Location class is mutable, i.e. its fields are variables, then just declare the Location instance as <span class="bbcode-i">synchronized</span>.[/quote]</p>
<p>The way I have Locations right now is each Location is final. All of it’s fields (x, y, z) are set at construction and cannot be changed after. Locations however also have a “public Location transform(int dx, int dy, int dz)” method.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/3</link>
        <pubDate>Thu, 23 Jun 2011 09:40:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-400547-3</guid>
        <source url="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547.rss">When is it appropriate to use public fields?</source>
      </item>
      <item>
        <title>When is it appropriate to use public fields?</title>
        <dc:creator><![CDATA[@iKilem iKilem]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ikilem">@iKilem</a> wrote:</p>
          <blockquote>
              <p>I guess with “POD” types you could use public fields. The only other exception is constants.</p>
<p>If your Location class is mutable, i.e. its fields are variables, then just declare the Location instance as <span class="bbcode-i">synchronized</span>.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/2</link>
        <pubDate>Thu, 23 Jun 2011 09:38:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-400547-2</guid>
        <source url="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547.rss">When is it appropriate to use public fields?</source>
      </item>
      <item>
        <title>When is it appropriate to use public fields?</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>According to OOP, an object should have all fields private. According to the Java conventions however, it says that when an object represents something with no behavior (like a C struct), the fields should be public.</p>
<p>One class I’m using in particular brought up this question. A simple Location class that represents the players location in the world. It’s made up of an (x, y, z) coordinate. Now, the biggest downfall I see of making them public, is that I lose it’s “thread-safe” state.</p>
<p>I read this at <a href="http://www.javapractices.com/topic/TopicAction.do?Id=49">http://www.javapractices.com/topic/TopicAction.do?Id=49</a></p>
<blockquote>If an object is immutable, then it is automatically thread-safe. If it is mutable, then extra steps must be taken to ensure thread-safety.</blockquote>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547/1</link>
        <pubDate>Thu, 23 Jun 2011 09:28:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-400547-1</guid>
        <source url="https://forum.moparisthebest.com/t/when-is-it-appropriate-to-use-public-fields/400547.rss">When is it appropriate to use public fields?</source>
      </item>
  </channel>
</rss>
