<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Bot Idea</title>
    <link>https://forum.moparisthebest.com/t/bot-idea/199604</link>
    <description>Well, i had this idea of finding the methods in the rs client that sends/recieves packets from the server, and get the data from them before they are sent. That way you could easily make a packet-analyzing bot. Perhaps add event dispatchers in there. That would allow us to identify/make interfaces for these packets and make a script-engine etc. Not sure about sending packets back to the server, it would probably not be synchronized properly.

I can&#39;t really be assed to actally do this right now as i am a lazy man, but it sure would be an interesting project.

Feedback please.</description>
    
    <lastBuildDate>Wed, 16 Apr 2008 07:57:46 +0000</lastBuildDate>
    <category>Community Inside Talk</category>
    <atom:link href="https://forum.moparisthebest.com/t/bot-idea/199604.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Bot Idea</title>
        <dc:creator><![CDATA[@White_Castle White Castle]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/white_castle">@White_Castle</a> wrote:</p>
          <blockquote>
              <p>I tried doing something along these lines before. I made something out of BCEL that went and found the packet parse method and tried to associate packet opcodes with data structures. Well, it pretty much turned into a horrible mess of spaghetti code. My endeavor was purely exploratory, but I wouldn’t mind trying it again. Speak with me on IRC, Speljohan.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bot-idea/199604/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bot-idea/199604/4</link>
        <pubDate>Wed, 16 Apr 2008 07:57:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-199604-4</guid>
        <source url="https://forum.moparisthebest.com/t/bot-idea/199604.rss">Bot Idea</source>
      </item>
      <item>
        <title>Bot Idea</title>
        <dc:creator><![CDATA[@Speljohan Speljohan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/speljohan">@Speljohan</a> wrote:</p>
          <blockquote>
              <p>[quote=“semaphore, post:2, topic:199604”]Packet analysis in this game buys you very little. Reading incoming packets can give you information you can already gather later on in the flow (much easier may I add). You need to keep in mind how the game mechanics work. Generally, each flush consists of a few things, bear with me as I am literally operating completely from memory as I don’t have my notes in front of me. From what I remember (None of this should be new information for any of you)</p>
<p>Of course, the below information about mouse pointer location data is only sent to the server if a particular static boolean flag is set to true (which is done during the login process)</p>
<p>[ul][li]1. Mouse x,y locations are captured into two distinct arrays every 50ms[/li]<br>
[li]2. Once the number of locations is at least 40 <span class="bbcode-b">OR</span> a mouse click is detected the below occurs…[/li]<br>
[li]3. Now, regardless of whether an action has been initiated in the client, the client begins building the next packet.[/li]<br>
[li]4. Either the captured mouse locations it at least 40, in which case they are iterated, sorted (into 3 categories), and the result is that each location is a hash of x,y and the relative distance between itself and the one prior to it as well as the relative number of ticks the mouse pointer was idle in between captures. This information begins every packet. If the client has not initiated an action, the packet will be filled with up with these hashes until the send buffer is full (&gt;= 40 at a time)[/li]<br>
[li]5. If the client <span class="bbcode-b">has</span> initiated action by a mouse click, the client then pushes the encoded mouse click information into the buffer (click type and click location)[/li]<br>
[li]6. Then, the encoded packet id is pushed into the buffer.[/li]<br>
[li]7. Any needed arguments are also pushed into the buffer.[/li]<br>
[li]8. The buffer is flushed at the end of the sequence, sending the packet to the server.[/li][/ul]</p>
<p>It is entirely possible that I missed something in that list above, I didn’t mean for it to be an exhaustive study of the entire protocol. It was merely meant to illustrate that there really isn’t much in there that would be of use. Off the top of my head, I guess you could implement some kind of emergency triggering mechanism that detects if the client is about to do something that you do not want it to do, for example, the bot zigs instead of zags. But, that could be implemented in a much easier way than packet interception… Also, if you are having problems with your bot doing things it shouldn’t do, that would only be a band-aid. The real issue is that your action implementation needs work. It’s nothing to be ashamed of, implementing it well and doing so as undetected as possible is nontrivial.</p>
<p>On the other side of the protocol is the incoming packets. I wouldn’t bother intercepting incoming packets at all, I focused fire on the data after the client has decoded it and has it laid out openly for easy interpretation. My personal system has <span class="bbcode-b">many</span> callbacks in the packet decoding method(s). In a nutshell, I wrote a very lightweight event system that all of these callbacks feed into. Whenever something in the game happens, my bot(s) respond to those events in very much the same way that a person would respond; they are notified and they get to it when they can.</p>
<p>I’ve been on both sides of the fence when it comes to reentrant vs parallel bot runtimes. I’ve gone from reentrant to parallel probably 3 times now. I currently, personally think that reentrant is the best bet simply because it is the easiest to implement in the most human way. It greatly simplifies event handling. This is my personal view and I’m sure many of you have designed perfectly fine bots that run parallel.</p>
<p>Anyway, I think I may have hijacked your thread, although I didn’t mean to. As feedback, I would say that it really isn’t going to gain you much by “<span class="bbcode-i">get[ting] the data from them before they are sent</span>” as by that time your bot as already initiated the performance of the action that is being sent over the wire, so of what use is that to you? You get to know what your bot is about to do? As far as synchronizing the packets, it really is a non-issue if you are already in the client. The question is, why do you want to modify them? Just have the bot do the right thing in the first place and you wouldn’t need to modify them. If your intention is a headless bot, then good luck. Protocol based bots for this game would be much more work than I am ever willing to try again.[/quote]This was some really interesting reading, thank you for enlightening me. I have only glanced upon it right now as i am a little busy doing some things, but i will read it through later.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bot-idea/199604/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bot-idea/199604/3</link>
        <pubDate>Tue, 15 Apr 2008 18:29:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-199604-3</guid>
        <source url="https://forum.moparisthebest.com/t/bot-idea/199604.rss">Bot Idea</source>
      </item>
      <item>
        <title>Bot Idea</title>
        <dc:creator><![CDATA[@semaphore semaphore]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/semaphore">@semaphore</a> wrote:</p>
          <blockquote>
              <p>Packet analysis in this game buys you very little. Reading incoming packets can give you information you can already gather later on in the flow (much easier may I add). You need to keep in mind how the game mechanics work. Generally, each flush consists of a few things, bear with me as I am literally operating completely from memory as I don’t have my notes in front of me. From what I remember (None of this should be new information for any of you)</p>
<p>Of course, the below information about mouse pointer location data is only sent to the server if a particular static boolean flag is set to true (which is done during the login process)</p>
<p>[ul][li]1. Mouse x,y locations are captured into two distinct arrays every 50ms[/li]<br>
[li]2. Once the number of locations is at least 40 <span class="bbcode-b">OR</span> a mouse click is detected the below occurs…[/li]<br>
[li]3. Now, regardless of whether an action has been initiated in the client, the client begins building the next packet.[/li]<br>
[li]4. Either the captured mouse locations it at least 40, in which case they are iterated, sorted (into 3 categories), and the result is that each location is a hash of x,y and the relative distance between itself and the one prior to it as well as the relative number of ticks the mouse pointer was idle in between captures. This information begins every packet. If the client has not initiated an action, the packet will be filled with up with these hashes until the send buffer is full (&gt;= 40 at a time)[/li]<br>
[li]5. If the client <span class="bbcode-b">has</span> initiated action by a mouse click, the client then pushes the encoded mouse click information into the buffer (click type and click location)[/li]<br>
[li]6. Then, the encoded packet id is pushed into the buffer.[/li]<br>
[li]7. Any needed arguments are also pushed into the buffer.[/li]<br>
[li]8. The buffer is flushed at the end of the sequence, sending the packet to the server.[/li][/ul]</p>
<p>It is entirely possible that I missed something in that list above, I didn’t mean for it to be an exhaustive study of the entire protocol. It was merely meant to illustrate that there really isn’t much in there that would be of use. Off the top of my head, I guess you could implement some kind of emergency triggering mechanism that detects if the client is about to do something that you do not want it to do, for example, the bot zigs instead of zags. But, that could be implemented in a much easier way than packet interception… Also, if you are having problems with your bot doing things it shouldn’t do, that would only be a band-aid. The real issue is that your action implementation needs work. It’s nothing to be ashamed of, implementing it well and doing so as undetected as possible is nontrivial.</p>
<p>On the other side of the protocol is the incoming packets. I wouldn’t bother intercepting incoming packets at all, I focused fire on the data after the client has decoded it and has it laid out openly for easy interpretation. My personal system has <span class="bbcode-b">many</span> callbacks in the packet decoding method(s). In a nutshell, I wrote a very lightweight event system that all of these callbacks feed into. Whenever something in the game happens, my bot(s) respond to those events in very much the same way that a person would respond; they are notified and they get to it when they can.</p>
<p>I’ve been on both sides of the fence when it comes to reentrant vs parallel bot runtimes. I’ve gone from reentrant to parallel probably 3 times now. I currently, personally think that reentrant is the best bet simply because it is the easiest to implement in the most human way. It greatly simplifies event handling. This is my personal view and I’m sure many of you have designed perfectly fine bots that run parallel.</p>
<p>Anyway, I think I may have hijacked your thread, although I didn’t mean to. As feedback, I would say that it really isn’t going to gain you much by “<span class="bbcode-i">get[ting] the data from them before they are sent</span>” as by that time your bot as already initiated the performance of the action that is being sent over the wire, so of what use is that to you? You get to know what your bot is about to do? As far as synchronizing the packets, it really is a non-issue if you are already in the client. The question is, why do you want to modify them? Just have the bot do the right thing in the first place and you wouldn’t need to modify them. If your intention is a headless bot, then good luck. Protocol based bots for this game would be much more work than I am ever willing to try again.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bot-idea/199604/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bot-idea/199604/2</link>
        <pubDate>Tue, 15 Apr 2008 16:57:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-199604-2</guid>
        <source url="https://forum.moparisthebest.com/t/bot-idea/199604.rss">Bot Idea</source>
      </item>
      <item>
        <title>Bot Idea</title>
        <dc:creator><![CDATA[@Speljohan Speljohan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/speljohan">@Speljohan</a> wrote:</p>
          <blockquote>
              <p>Well, i had this idea of finding the methods in the rs client that sends/recieves packets from the server, and get the data from them before they are sent. That way you could easily make a packet-analyzing bot. Perhaps add event dispatchers in there. That would allow us to identify/make interfaces for these packets and make a script-engine etc. Not sure about sending packets back to the server, it would probably not be synchronized properly.</p>
<p>I can’t really be assed to actally do this right now as i am a lazy man, but it sure would be an interesting project.</p>
<p>Feedback please.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bot-idea/199604/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bot-idea/199604/1</link>
        <pubDate>Mon, 14 Apr 2008 02:02:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-199604-1</guid>
        <source url="https://forum.moparisthebest.com/t/bot-idea/199604.rss">Bot Idea</source>
      </item>
  </channel>
</rss>
