<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Some more of me practicing in BCEL</title>
    <link>https://forum.moparisthebest.com/t/some-more-of-me-practicing-in-bcel/76109</link>
    <description>Thanks Sepranem for helping with my class dumping, stupid me was dumping the original class 

his is made of 5 classes.  The first class, &quot;HelloWorld&quot; is just your typical HelloWorld, basically.

HelloWorld:
[code]public class HelloWorld {
    
    private static String theString = &quot;hi&quot;;
    
    public static void main(String[] args) {
        System.out.println(theString);
    }
}[/code]


Of course you need the interface

TheString:
[code]public interface TheString {
    public String theString();
}[/code]


Now, I made a class to inject an interface, making HelloWorld need the method theString() which returned the sting that HelloWorld prints to the console.

StringGetter:
[code]import java.io.IOException;
import org.apache.bcel.Constants;
import org.apache.bcel.Repository;
import org.apache.bcel.classfile.ClassParser;
import org.apache.bcel.classfile.Field;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.generic.ClassGen;
import org.apache.bcel.generic.ConstantPoolGen;
import org.apache.bcel.generic.InstructionFactory;
import org.apache.bcel.generic.InstructionHandle;
import org.apache.bcel.generic.InstructionList;
import org.apache.bcel.generic.MethodGen;
import org.apache.bcel.generic.Type;

/*
 * StringGetter.java
 *
 * Created on April 6, 2007, 11:09 PM
 *
 * To change this template, choose Tools | Template Manager
 * and open the template in the editor.
 */

public class StringGetter {
    private JavaClass jc;
    private ClassGen cg;
    String toFind;
    
    public static void main(String[] args) {
        new StringGetter();
    }
    /** Creates a new instance of StringGetter */
    public StringGetter() {
        try {
            jc = Repository.lookupClass(&quot;HelloWorld&quot;);
        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
        }
        cg = new ClassGen(jc);
        addInterfaceHook();
        FindString();
        returnString();
        dumpClass();
        
    }
    
    private void dumpClass() {
        try {
            cg.getJavaClass().dump(&quot;HelloWorld.class&quot;);
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }
    
    private void returnString() {
        InstructionList il = new InstructionList();
        ConstantPoolGen cp = cg.getConstantPool();
        MethodGen mg = new MethodGen(Constants.ACC_PUBLIC | Constants.ACC_STATIC, Type.STRING, Type.NO_ARGS, new String[] { }, &quot;theString&quot;, cg.getClassName(), il, cp);
        InstructionFactory factory = new InstructionFactory(cg, cp);
        InstructionHandle ih = il.append(factory.createFieldAccess(cg.getClassName(), toFind, Type.STRING, Constants.GETSTATIC));
        il.append(factory.createReturn(Type.OBJECT));
        
        mg.setMaxStack();
        mg.setMaxLocals();
        cg.addMethod(mg.getMethod());
        il.dispose();
    } 
    private void FindString() {
        for(Field field : cg.getFields()) {
            if(field.getName().equals(&quot;theString&quot;)) {
                toFind = field.getName();
            }
        }
    }
    
    private void addInterfaceHook() {
        
        cg.addInterface(&quot;TheString&quot;);
    }
}[/code]

now that I had that hooked in there, I wanted to insure that my method was ofcourse..injected

MethodsLister:
[code]import org.apache.bcel.Repository;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.classfile.Method;

public class MethodsLister {
    
    public static void main(String[] args) {
        new MethodsLister();
    }
    /** Creates a new instance of MethodsLister */
    public MethodsLister() {
        JavaClass jc;
        try {
            jc = Repository.lookupClass(&quot;HelloWorld&quot;);
        
        for(Method m : jc.getMethods()) {
            System.out.println(&quot;Method: &quot; + m.getName());
        }
        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
        }
    }
    
}
[/code]

After I knew that my method was injected, I made a file to print out the String using the newly added method

StringReturner:
[code]public class StringReturner {
	public static void main(String[] args) {
		HelloWorld l = new HelloWorld();
		System.out.println(&quot;Hello: &quot; + l.theString());
	}
}[/code]

in the batch files I used, I had:

[compile.bat]
javac -cp .;./bcel.jar *.java

[Run HelloWorld]
java -cp . HelloWorld

[Run StringGetter]
java -cp .;./bcel.jar StringGetter

[Run MethodsLister]
java -cp .;./bcel.jar MethodsLister

[Run StringReturner]
java -cp . StringReturner

There ya go, I know it&#39;s a bit long...so sorry lol

Hope I helped someone :)</description>
    
    <lastBuildDate>Tue, 10 Apr 2007 12:08:15 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/some-more-of-me-practicing-in-bcel/76109.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Some more of me practicing in BCEL</title>
        <dc:creator><![CDATA[@wonderguy6 Doc. Booty]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wonderguy6">@wonderguy6</a> wrote:</p>
          <blockquote>
              <p>Awesome Tut! Might get me started a bit more <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=6" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-more-of-me-practicing-in-bcel/76109/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-more-of-me-practicing-in-bcel/76109/8</link>
        <pubDate>Tue, 10 Apr 2007 12:08:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-76109-8</guid>
        <source url="https://forum.moparisthebest.com/t/some-more-of-me-practicing-in-bcel/76109.rss">Some more of me practicing in BCEL</source>
      </item>
      <item>
        <title>Some more of me practicing in BCEL</title>
        <dc:creator><![CDATA[@Evil1 Evil_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/evil1">@Evil1</a> wrote:</p>
          <blockquote>
              <p>[quote=“1337h4x, post:5, topic:76109”]ROFL evil, youre getting far. You should start on a bot imo.<br>
That’s about how much I knew when I started mine.[/quote]<br>
HEHe <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"> I might be without anyone knowing <img src="https://forum.moparisthebest.com/images/emoji/twitter/open_mouth.png?v=6" title=":open_mouth:" class="emoji" alt=":open_mouth:"></p>
<p>[quote=“frank_, post:6, topic:76109”]<code>public class StringReturner {
	public static void main(String[] args) {
		TheString l = new HelloWorld();
		System.out.println("Hello: " + l.theString());
	}
}</code>you may as well use the interface after adding it ;D[/quote]ofc lolol</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-more-of-me-practicing-in-bcel/76109/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-more-of-me-practicing-in-bcel/76109/7</link>
        <pubDate>Mon, 09 Apr 2007 10:18:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-76109-7</guid>
        <source url="https://forum.moparisthebest.com/t/some-more-of-me-practicing-in-bcel/76109.rss">Some more of me practicing in BCEL</source>
      </item>
      <item>
        <title>Some more of me practicing in BCEL</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p><code>public class StringReturner {
	public static void main(String[] args) {
		TheString l = new HelloWorld();
		System.out.println("Hello: " + l.theString());
	}
}</code>you may as well use the interface after adding it ;D</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-more-of-me-practicing-in-bcel/76109/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-more-of-me-practicing-in-bcel/76109/6</link>
        <pubDate>Sun, 08 Apr 2007 22:11:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-76109-6</guid>
        <source url="https://forum.moparisthebest.com/t/some-more-of-me-practicing-in-bcel/76109.rss">Some more of me practicing in BCEL</source>
      </item>
      <item>
        <title>Some more of me practicing in BCEL</title>
        <dc:creator><![CDATA[@1337h4x 1337h4x]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/1337h4x">@1337h4x</a> wrote:</p>
          <blockquote>
              <p>ROFL evil, youre getting far. You should start on a bot imo.<br>
That’s about how much I knew when I started mine.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-more-of-me-practicing-in-bcel/76109/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-more-of-me-practicing-in-bcel/76109/5</link>
        <pubDate>Sun, 08 Apr 2007 20:10:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-76109-5</guid>
        <source url="https://forum.moparisthebest.com/t/some-more-of-me-practicing-in-bcel/76109.rss">Some more of me practicing in BCEL</source>
      </item>
      <item>
        <title>Some more of me practicing in BCEL</title>
        <dc:creator><![CDATA[@thiefmn6092 thiefmn6092]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/thiefmn6092">@thiefmn6092</a> wrote:</p>
          <blockquote>
              <p>Great tutorial!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-more-of-me-practicing-in-bcel/76109/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-more-of-me-practicing-in-bcel/76109/4</link>
        <pubDate>Sun, 08 Apr 2007 19:52:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-76109-4</guid>
        <source url="https://forum.moparisthebest.com/t/some-more-of-me-practicing-in-bcel/76109.rss">Some more of me practicing in BCEL</source>
      </item>
      <item>
        <title>Some more of me practicing in BCEL</title>
        <dc:creator><![CDATA[@ilyaostr9 io9]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ilyaostr9">@ilyaostr9</a> wrote:</p>
          <blockquote>
              <p>Teach me  BCEL.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-more-of-me-practicing-in-bcel/76109/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-more-of-me-practicing-in-bcel/76109/3</link>
        <pubDate>Sun, 08 Apr 2007 18:42:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-76109-3</guid>
        <source url="https://forum.moparisthebest.com/t/some-more-of-me-practicing-in-bcel/76109.rss">Some more of me practicing in BCEL</source>
      </item>
      <item>
        <title>Some more of me practicing in BCEL</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>This should help some people, good job.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-more-of-me-practicing-in-bcel/76109/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-more-of-me-practicing-in-bcel/76109/2</link>
        <pubDate>Sun, 08 Apr 2007 09:20:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-76109-2</guid>
        <source url="https://forum.moparisthebest.com/t/some-more-of-me-practicing-in-bcel/76109.rss">Some more of me practicing in BCEL</source>
      </item>
      <item>
        <title>Some more of me practicing in BCEL</title>
        <dc:creator><![CDATA[@Evil1 Evil_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/evil1">@Evil1</a> wrote:</p>
          <blockquote>
              <p>Thanks Sepranem for helping with my class dumping, stupid me was dumping the original class</p>
<p>his is made of 5 classes.  The first class, “HelloWorld” is just your typical HelloWorld, basically.</p>
<p>HelloWorld:</p>
<p>[code]public class HelloWorld {</p>
<pre><code>private static String theString = "hi";

public static void main(String[] args) {
    System.out.println(theString);
}
</code></pre>
<p>}[/code]</p>
<p>Of course you need the interface</p>
<p>TheString:</p>
<p><code>public interface TheString {
    public String theString();
}</code></p>
<p>Now, I made a class to inject an interface, making HelloWorld need the method theString() which returned the sting that HelloWorld prints to the console.</p>
<p>StringGetter:</p>
<p>[code]import java.io.IOException;<br>
import org.apache.bcel.Constants;<br>
import org.apache.bcel.Repository;<br>
import org.apache.bcel.classfile.ClassParser;<br>
import org.apache.bcel.classfile.Field;<br>
import org.apache.bcel.classfile.JavaClass;<br>
import org.apache.bcel.generic.ClassGen;<br>
import org.apache.bcel.generic.ConstantPoolGen;<br>
import org.apache.bcel.generic.InstructionFactory;<br>
import org.apache.bcel.generic.InstructionHandle;<br>
import org.apache.bcel.generic.InstructionList;<br>
import org.apache.bcel.generic.MethodGen;<br>
import org.apache.bcel.generic.Type;</p>
<p>/*</p>
<ul>
<li>StringGetter.java</li>
<li>
</li>
<li>Created on April 6, 2007, 11:09 PM</li>
<li>
</li>
<li>To change this template, choose Tools | Template Manager</li>
<li>and open the template in the editor.<br>
*/</li>
</ul>
<p>public class StringGetter {<br>
private JavaClass jc;<br>
private ClassGen cg;<br>
String toFind;</p>
<pre><code>public static void main(String[] args) {
    new StringGetter();
}
/** Creates a new instance of StringGetter */
public StringGetter() {
    try {
        jc = Repository.lookupClass("HelloWorld");
    } catch (ClassNotFoundException ex) {
        ex.printStackTrace();
    }
    cg = new ClassGen(jc);
    addInterfaceHook();
    FindString();
    returnString();
    dumpClass();
    
}

private void dumpClass() {
    try {
        cg.getJavaClass().dump("HelloWorld.class");
    } catch (IOException ex) {
        ex.printStackTrace();
    }
}

private void returnString() {
    InstructionList il = new InstructionList();
    ConstantPoolGen cp = cg.getConstantPool();
    MethodGen mg = new MethodGen(Constants.ACC_PUBLIC | Constants.ACC_STATIC, Type.STRING, Type.NO_ARGS, new String[] { }, "theString", cg.getClassName(), il, cp);
    InstructionFactory factory = new InstructionFactory(cg, cp);
    InstructionHandle ih = il.append(factory.createFieldAccess(cg.getClassName(), toFind, Type.STRING, Constants.GETSTATIC));
    il.append(factory.createReturn(Type.OBJECT));
    
    mg.setMaxStack();
    mg.setMaxLocals();
    cg.addMethod(mg.getMethod());
    il.dispose();
} 
private void FindString() {
    for(Field field : cg.getFields()) {
        if(field.getName().equals("theString")) {
            toFind = field.getName();
        }
    }
}

private void addInterfaceHook() {
    
    cg.addInterface("TheString");
}
</code></pre>
<p>}[/code]</p>
<p>now that I had that hooked in there, I wanted to insure that my method was ofcourse…injected</p>
<p>MethodsLister:</p>
<p>[code]import org.apache.bcel.Repository;<br>
import org.apache.bcel.classfile.JavaClass;<br>
import org.apache.bcel.classfile.Method;</p>
<p>public class MethodsLister {</p>
<pre><code>public static void main(String[] args) {
    new MethodsLister();
}
/** Creates a new instance of MethodsLister */
public MethodsLister() {
    JavaClass jc;
    try {
        jc = Repository.lookupClass("HelloWorld");
    
    for(Method m : jc.getMethods()) {
        System.out.println("Method: " + m.getName());
    }
    } catch (ClassNotFoundException ex) {
        ex.printStackTrace();
    }
}
</code></pre>
<p>}<br>
[/code]</p>
<p>After I knew that my method was injected, I made a file to print out the String using the newly added method</p>
<p>StringReturner:</p>
<p><code>public class StringReturner {
	public static void main(String[] args) {
		HelloWorld l = new HelloWorld();
		System.out.println("Hello: " + l.theString());
	}
}</code></p>
<p>in the batch files I used, I had:</p>
<p>[compile.bat]<br>
javac -cp .;./bcel.jar *.java</p>
<p>[Run HelloWorld]<br>
java -cp . HelloWorld</p>
<p>[Run StringGetter]<br>
java -cp .;./bcel.jar StringGetter</p>
<p>[Run MethodsLister]<br>
java -cp .;./bcel.jar MethodsLister</p>
<p>[Run StringReturner]<br>
java -cp . StringReturner</p>
<p>There ya go, I know it’s a bit long…so sorry lol</p>
<p>Hope I helped someone <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-more-of-me-practicing-in-bcel/76109/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-more-of-me-practicing-in-bcel/76109/1</link>
        <pubDate>Sun, 08 Apr 2007 00:30:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-76109-1</guid>
        <source url="https://forum.moparisthebest.com/t/some-more-of-me-practicing-in-bcel/76109.rss">Some more of me practicing in BCEL</source>
      </item>
  </channel>
</rss>
