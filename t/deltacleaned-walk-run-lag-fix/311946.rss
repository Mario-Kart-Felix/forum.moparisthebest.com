<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>DeltaCleaned walk/run lag fix</title>
    <link>https://forum.moparisthebest.com/t/deltacleaned-walk-run-lag-fix/311946</link>
    <description>Alot of people requested it so here:

Replace the 3 run/walk packets with this

[CODE]        case 248:
            // map walk (has additional 14 bytes added to the end with some junk
            // data)
            packetSize -= 14; // ignore the junk
        case 164:
            // regular walk
        case 98:
            // walk on command
            if (cookingOn) {
                cookingOn = false;
            }
            if (followID &gt; 0) {
                followID = 0;
            }
            if (followID2 &gt; 0) {
                followID2 = 0;
            }
            if (randomed)
                break;
            if (!antiHax())
                break;
            if (inTrade)
                break;
            if (System.currentTimeMillis() - lastEntangle &lt; entangleDelay) {
                sM(&quot;A magical force stops you from moving.&quot;);
                break;
            }
            if (System.currentTimeMillis() - lastWalk &lt; walkDelay)
                break;
            if (faceNPC &gt; 0) {
                faceNPC = 65535;
                faceNPCupdate = true;
            }
            resetAction();
            if (!validClient) {
                sM(&quot;You can&#39;t move on this account&quot;);
                break;
            }
            IsAttackingNPC = false;
            attacknpc = -1;
            closeInterface();
            resetAnimation();
            if (deathStage == 0) {
                newWalkCmdSteps = packetSize - 5;
                if (newWalkCmdSteps % 2 != 0) {
                    println_debug(&quot;Warning: walkTo(&quot; + packetType
                            + &quot;) command malformed: &quot;
                            + Misc.Hex(inStream.buffer, 0, packetSize));
                }
                newWalkCmdSteps /= 2;
                if (++newWalkCmdSteps &gt; walkingQueueSize) {
                    println_debug(&quot;Warning: walkTo(&quot; + packetType
                            + &quot;) command contains too many steps (&quot;
                            + newWalkCmdSteps + &quot;).&quot;);
                    newWalkCmdSteps = 0;
                    break;
                }
                int firstStepX = inStream.readSignedWordBigEndianA();
                int tmpFSX = firstStepX;

                firstStepX -= mapRegionX * 8;
                for (i = 1; i &lt; newWalkCmdSteps; i++) {
                    newWalkCmdX[i] = inStream.readSignedByte();
                    newWalkCmdY[i] = inStream.readSignedByte();
                    tmpNWCX[i] = newWalkCmdX[i];
                    tmpNWCY[i] = newWalkCmdY[i];
                }
                newWalkCmdX[0] = newWalkCmdY[0] = tmpNWCX[0] = tmpNWCY[0] = 0;
                int firstStepY = inStream.readSignedWordBigEndian();
                int tmpFSY = firstStepY;

                firstStepY -= mapRegionY * 8;
                newWalkCmdIsRunning = inStream.readSignedByteC() == 1;
                for (i = 0; i &lt; newWalkCmdSteps; i++) {
                    newWalkCmdX[i] += firstStepX;
                    newWalkCmdY[i] += firstStepY;
                }
                poimiY = firstStepY;
                poimiX = firstStepX;

                // stairs check
                if (stairs &gt; 0) {
                    resetStairs();
                }
                // woodcutting check
                if (woodcutting[0] &gt; 0) {
                    // playerEquipment[playerWeapon] = OriginalWeapon;
                    // OriginalWeapon = -1;
                    resetAnimation();
                    resetWC();
                }
                // pick up item check
                if (WannePickUp == true) {
                    PickUpID = 0;
                    PickUpAmount = 0;
                    PickUpDelete = 0;
                    WannePickUp = false;
                }
                // attack check
                if (IsAttacking == true) {
                    ResetAttack();
                }
                // attack NPC check
                if (IsAttackingNPC == true) {
                    ResetAttackNPC();
                }
                // mining check
                if (mining[0] &gt; 0) {
                    resetAnimation();
                    resetMI();
                }
                // Npc Talking
                if (NpcDialogue &gt; 0) {
                    NpcDialogue = 0;
                    NpcTalkTo = 0;
                    System.out.println(NpcTalkTo);
                    NpcDialogueSend = false;
                    RemoveAllWindows();
                }
                // banking
                if (IsBanking == true) {
                    RemoveAllWindows();
                }
                // shopping
                if (IsShopping == true) {
                    IsShopping = false;
                    MyShopID = 0;
                    UpdateShop = false;
                    RemoveAllWindows();
                }
                // trading

            }
            break;[/CODE]

now replace WalkTimer, Walkto and Walkto2 with these

[CODE]    public void WalkTimer(int i, int j) {
        if (EntangleDelay &gt; 0)
            return;
        newWalkCmdSteps = 0;
        if (++newWalkCmdSteps &gt; 50)
            newWalkCmdSteps = 0;
        int k = absX + i;
        k -= mapRegionX * 8;
        newWalkCmdX[0] = newWalkCmdY[0] = tmpNWCX[0] = tmpNWCY[0] = 0;
        int l = absY + j;
        l -= mapRegionY * 8;
        newWalkCmdIsRunning = ((inStream.readSignedByteC() == 1) &amp;&amp; playerEnergy &gt; 0);
        for (this.i = 0; this.i &lt; newWalkCmdSteps; this.i++) {
            newWalkCmdX[this.i] += k;
            newWalkCmdY[this.i] += l;
        }
        lastWalk = System.currentTimeMillis();
        walkDelay = 8000;
        poimiY = l;
        poimiX = k;
    }

    public void WalkTo2(int i, int j) {
        newWalkCmdSteps = 0;
        if (++newWalkCmdSteps &gt; 50)
            newWalkCmdSteps = 0;
        int k = absX + i;
        k -= mapRegionX * 8;
        newWalkCmdX[0] = newWalkCmdY[0] = tmpNWCX[0] = tmpNWCY[0] = 0;
        int l = absY + j;
        l -= mapRegionY * 8;
        isRunning2 = false;
        isRunning = false;
        for (this.i = 0; this.i &lt; newWalkCmdSteps; this.i++) {
            newWalkCmdX[this.i] += k;
            newWalkCmdY[this.i] += l;
        }
        lastWalk = System.currentTimeMillis();
        walkDelay = 20000;
        poimiY = l;
        poimiX = k;
    }

    public void walkTo(int i, int j) {
        if (EntangleDelay &gt; 0)
            return;
        newWalkCmdSteps = 0;
        if (++newWalkCmdSteps &gt; 50)
            newWalkCmdSteps = 0;
        int k = absX + i;
        k -= mapRegionX * 8;
        newWalkCmdX[0] = newWalkCmdY[0] = tmpNWCX[0] = tmpNWCY[0] = 0;
        int l = absY + j;
        l -= mapRegionY * 8;
        newWalkCmdIsRunning = ((inStream.readSignedByteC() == 1) &amp;&amp; playerEnergy &gt; 0);
        for (this.i = 0; this.i &lt; newWalkCmdSteps; this.i++) {
            newWalkCmdX[this.i] += k;
            newWalkCmdY[this.i] += l;
        }

        poimiY = l;
        poimiX = k;
    }[/CODE]</description>
    
    <lastBuildDate>Sun, 01 Nov 2009 17:54:22 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/deltacleaned-walk-run-lag-fix/311946.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>DeltaCleaned walk/run lag fix</title>
        <dc:creator><![CDATA[@warlock_999 warlock 999]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/warlock_999">@warlock_999</a> wrote:</p>
          <blockquote>
              <p>Alot of people requested it so here:</p>
<p>Replace the 3 run/walk packets with this</p>
<p>[CODE]        case 248:<br>
// map walk (has additional 14 bytes added to the end with some junk<br>
// data)<br>
packetSize -= 14; // ignore the junk<br>
case 164:<br>
// regular walk<br>
case 98:<br>
// walk on command<br>
if (cookingOn) {<br>
cookingOn = false;<br>
}<br>
if (followID &gt; 0) {<br>
followID = 0;<br>
}<br>
if (followID2 &gt; 0) {<br>
followID2 = 0;<br>
}<br>
if (randomed)<br>
break;<br>
if (!antiHax())<br>
break;<br>
if (inTrade)<br>
break;<br>
if (System.currentTimeMillis() - lastEntangle &lt; entangleDelay) {<br>
sM(“A magical force stops you from moving.”);<br>
break;<br>
}<br>
if (System.currentTimeMillis() - lastWalk &lt; walkDelay)<br>
break;<br>
if (faceNPC &gt; 0) {<br>
faceNPC = 65535;<br>
faceNPCupdate = true;<br>
}<br>
resetAction();<br>
if (!validClient) {<br>
sM(“You can’t move on this account”);<br>
break;<br>
}<br>
IsAttackingNPC = false;<br>
attacknpc = -1;<br>
closeInterface();<br>
resetAnimation();<br>
if (deathStage == 0) {<br>
newWalkCmdSteps = packetSize - 5;<br>
if (newWalkCmdSteps % 2 != 0) {<br>
println_debug(“Warning: walkTo(” + packetType<br>
+ ") command malformed: "<br>
+ Misc.Hex(inStream.buffer, 0, packetSize));<br>
}<br>
newWalkCmdSteps /= 2;<br>
if (++newWalkCmdSteps &gt; walkingQueueSize) {<br>
println_debug(“Warning: walkTo(” + packetType<br>
+ “) command contains too many steps (”<br>
+ newWalkCmdSteps + “).”);<br>
newWalkCmdSteps = 0;<br>
break;<br>
}<br>
int firstStepX = inStream.readSignedWordBigEndianA();<br>
int tmpFSX = firstStepX;</p>
<pre><code>            firstStepX -= mapRegionX * 8;
            for (i = 1; i &lt; newWalkCmdSteps; i++) {
                newWalkCmdX[i] = inStream.readSignedByte();
                newWalkCmdY[i] = inStream.readSignedByte();
                tmpNWCX[i] = newWalkCmdX[i];
                tmpNWCY[i] = newWalkCmdY[i];
            }
            newWalkCmdX[0] = newWalkCmdY[0] = tmpNWCX[0] = tmpNWCY[0] = 0;
            int firstStepY = inStream.readSignedWordBigEndian();
            int tmpFSY = firstStepY;

            firstStepY -= mapRegionY * 8;
            newWalkCmdIsRunning = inStream.readSignedByteC() == 1;
            for (i = 0; i &lt; newWalkCmdSteps; i++) {
                newWalkCmdX[i] += firstStepX;
                newWalkCmdY[i] += firstStepY;
            }
            poimiY = firstStepY;
            poimiX = firstStepX;

            // stairs check
            if (stairs &gt; 0) {
                resetStairs();
            }
            // woodcutting check
            if (woodcutting[0] &gt; 0) {
                // playerEquipment[playerWeapon] = OriginalWeapon;
                // OriginalWeapon = -1;
                resetAnimation();
                resetWC();
            }
            // pick up item check
            if (WannePickUp == true) {
                PickUpID = 0;
                PickUpAmount = 0;
                PickUpDelete = 0;
                WannePickUp = false;
            }
            // attack check
            if (IsAttacking == true) {
                ResetAttack();
            }
            // attack NPC check
            if (IsAttackingNPC == true) {
                ResetAttackNPC();
            }
            // mining check
            if (mining[0] &gt; 0) {
                resetAnimation();
                resetMI();
            }
            // Npc Talking
            if (NpcDialogue &gt; 0) {
                NpcDialogue = 0;
                NpcTalkTo = 0;
                System.out.println(NpcTalkTo);
                NpcDialogueSend = false;
                RemoveAllWindows();
            }
            // banking
            if (IsBanking == true) {
                RemoveAllWindows();
            }
            // shopping
            if (IsShopping == true) {
                IsShopping = false;
                MyShopID = 0;
                UpdateShop = false;
                RemoveAllWindows();
            }
            // trading

        }
        break;[/CODE]
</code></pre>
<p>now replace WalkTimer, Walkto and Walkto2 with these</p>
<p>[CODE]    public void WalkTimer(int i, int j) {<br>
if (EntangleDelay &gt; 0)<br>
return;<br>
newWalkCmdSteps = 0;<br>
if (++newWalkCmdSteps &gt; 50)<br>
newWalkCmdSteps = 0;<br>
int k = absX + i;<br>
k -= mapRegionX * 8;<br>
newWalkCmdX[0] = newWalkCmdY[0] = tmpNWCX[0] = tmpNWCY[0] = 0;<br>
int l = absY + j;<br>
l -= mapRegionY * 8;<br>
newWalkCmdIsRunning = ((inStream.readSignedByteC() == 1) &amp;&amp; playerEnergy &gt; 0);<br>
for (this.i = 0; this.i &lt; newWalkCmdSteps; this.i++) {<br>
newWalkCmdX[this.i] += k;<br>
newWalkCmdY[this.i] += l;<br>
}<br>
lastWalk = System.currentTimeMillis();<br>
walkDelay = 8000;<br>
poimiY = l;<br>
poimiX = k;<br>
}</p>
<pre><code>public void WalkTo2(int i, int j) {
    newWalkCmdSteps = 0;
    if (++newWalkCmdSteps &gt; 50)
        newWalkCmdSteps = 0;
    int k = absX + i;
    k -= mapRegionX * 8;
    newWalkCmdX[0] = newWalkCmdY[0] = tmpNWCX[0] = tmpNWCY[0] = 0;
    int l = absY + j;
    l -= mapRegionY * 8;
    isRunning2 = false;
    isRunning = false;
    for (this.i = 0; this.i &lt; newWalkCmdSteps; this.i++) {
        newWalkCmdX[this.i] += k;
        newWalkCmdY[this.i] += l;
    }
    lastWalk = System.currentTimeMillis();
    walkDelay = 20000;
    poimiY = l;
    poimiX = k;
}

public void walkTo(int i, int j) {
    if (EntangleDelay &gt; 0)
        return;
    newWalkCmdSteps = 0;
    if (++newWalkCmdSteps &gt; 50)
        newWalkCmdSteps = 0;
    int k = absX + i;
    k -= mapRegionX * 8;
    newWalkCmdX[0] = newWalkCmdY[0] = tmpNWCX[0] = tmpNWCY[0] = 0;
    int l = absY + j;
    l -= mapRegionY * 8;
    newWalkCmdIsRunning = ((inStream.readSignedByteC() == 1) &amp;&amp; playerEnergy &gt; 0);
    for (this.i = 0; this.i &lt; newWalkCmdSteps; this.i++) {
        newWalkCmdX[this.i] += k;
        newWalkCmdY[this.i] += l;
    }

    poimiY = l;
    poimiX = k;
}[/CODE]</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/deltacleaned-walk-run-lag-fix/311946/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/deltacleaned-walk-run-lag-fix/311946/1</link>
        <pubDate>Sun, 01 Nov 2009 17:54:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-311946-1</guid>
        <source url="https://forum.moparisthebest.com/t/deltacleaned-walk-run-lag-fix/311946.rss">DeltaCleaned walk/run lag fix</source>
      </item>
  </channel>
</rss>
