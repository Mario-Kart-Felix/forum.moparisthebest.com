<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Dijkstra [c#]</title>
    <link>https://forum.moparisthebest.com/t/dijkstra-c/388539</link>
    <description>Im building a graph, using graph and graph nodes and I have currently done breadth first search and depth first search.

However I seem to be having trouble with Dijkstra&#39;s as it is never giving me the correct results, and I thought that I had the concept OK. Can anyone see anything wrong? 

This is my Depth and Breadth first so you know how my system works, sort of:
[code]public void DepthFirstTraverse(T startID, T endID)
        {
            visited.Clear();
            List&lt;T&gt; adjacent;
            MyStack&lt;T&gt; visitingStack = new MyStack&lt;T&gt;(nodes.Count);
            GraphNode&lt;T&gt; current;
            visitingStack.Push(startID);
            while (visitingStack.Count != 0)
            {
                T id = visitingStack.Pop();
                current = GetNodeByID(id);
                adjacent = current.Neighbours;
                visited.Add(id);

                foreach (GraphEdge&lt;T&gt; edge in current.Edges)
                {
                    T ID = edge.node.ID;
                    if (!visitingStack.Contains(ID) &amp;&amp; !visited.Contains(ID))
                    {
                        visitingStack.Push(ID);
                        if (ID.CompareTo(endID) == 0)
                        {
                            return;
                        }
                    }
                }
            }
        }

        public void BreadthFirstTraverse(T startID, T endID)
        {
            visited.Clear();
            List&lt;T&gt; adjacent;
            MyQueue&lt;T&gt; visitingQueue = new MyQueue&lt;T&gt;(nodes.Count);
            GraphNode&lt;T&gt; current;
            visitingQueue.Enqueue(startID);

            while (visitingQueue.Count != 0)
            {
                T id = visitingQueue.Dequeue();
                current = GetNodeByID(id);
                adjacent = current.Neighbours;
                visited.Add(id);
                
                foreach (GraphEdge&lt;T&gt; edge in current.Edges)
                {
                    T ID = edge.node.ID;
                    if (!visitingQueue.Contains(ID) &amp;&amp; !visited.Contains(ID))
                    {
                        visitingQueue.Enqueue(ID);
                        if (ID.CompareTo(endID) == 0)
                        {
                            return;
                        }
                    }
                }
            }
        }[/code]


I know it will be something silly as im tired, but its bugging me to hell!!
[code]public void Dijsktra(T start, T end)
        {
            List&lt;GraphNode&lt;T&gt;&gt; heap = new List&lt;GraphNode&lt;T&gt;&gt;();
            heap.Add(this.GetNodeByID(start));
            foreach (GraphNode&lt;T&gt; node in nodes)
            {
                if (node.ID.Equals(start))
                {
                    node.Distance = 0;
                }
                else
                {
                    node.Distance = int.MaxValue;
                    heap.Add(node);
                }
            }
            visited.Clear();
            while (heap.Count != 0)
            {
                GraphNode&lt;T&gt; node = heap.ElementAt(0);
                GraphNode&lt;T&gt; min = node;
                heap.RemoveAt(0);
                foreach (GraphEdge&lt;T&gt; edge in node.Edges)
                {
                    GraphNode&lt;T&gt; n = edge.node;
                    int arg = edge.Cost + node.Distance;
                    if (arg &lt; n.Distance)
                    {
                        n.Distance = arg;
                        heap.Remove(n);
                        heap.Add(n);
                        min = n;
                    }
                }
                visited.Add(min.ID);
            }[/code]</description>
    
    <lastBuildDate>Tue, 29 Mar 2011 18:37:00 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/dijkstra-c/388539.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Dijkstra [c#]</title>
        <dc:creator><![CDATA[@Ollie Ollie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ollie">@Ollie</a> wrote:</p>
          <blockquote>
              <p>I dont see how that helps me? I do not have a decent decompiled runescape client nor do i have the tools to. Also I have yet to see a decent re-factored client produced with documentation of the dijkstra algorithm.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dijkstra-c/388539/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dijkstra-c/388539/3</link>
        <pubDate>Tue, 29 Mar 2011 18:37:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-388539-3</guid>
        <source url="https://forum.moparisthebest.com/t/dijkstra-c/388539.rss">Dijkstra [c#]</source>
      </item>
      <item>
        <title>Dijkstra [c#]</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>look at runescape</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dijkstra-c/388539/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dijkstra-c/388539/2</link>
        <pubDate>Tue, 29 Mar 2011 13:44:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-388539-2</guid>
        <source url="https://forum.moparisthebest.com/t/dijkstra-c/388539.rss">Dijkstra [c#]</source>
      </item>
      <item>
        <title>Dijkstra [c#]</title>
        <dc:creator><![CDATA[@Ollie Ollie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ollie">@Ollie</a> wrote:</p>
          <blockquote>
              <p>Im building a graph, using graph and graph nodes and I have currently done breadth first search and depth first search.</p>
<p>However I seem to be having trouble with Dijkstraâ€™s as it is never giving me the correct results, and I thought that I had the concept OK. Can anyone see anything wrong?</p>
<p>This is my Depth and Breadth first so you know how my system works, sort of:</p>
<p>[code]public void DepthFirstTraverse(T startID, T endID)<br>
{<br>
visited.Clear();<br>
List adjacent;<br>
MyStack visitingStack = new MyStack(nodes.Count);<br>
GraphNode current;<br>
visitingStack.Push(startID);<br>
while (visitingStack.Count != 0)<br>
{<br>
T id = visitingStack.Pop();<br>
current = GetNodeByID(id);<br>
adjacent = current.Neighbours;<br>
visited.Add(id);</p>
<pre><code>            foreach (GraphEdge&lt;T&gt; edge in current.Edges)
            {
                T ID = edge.node.ID;
                if (!visitingStack.Contains(ID) &amp;&amp; !visited.Contains(ID))
                {
                    visitingStack.Push(ID);
                    if (ID.CompareTo(endID) == 0)
                    {
                        return;
                    }
                }
            }
        }
    }

    public void BreadthFirstTraverse(T startID, T endID)
    {
        visited.Clear();
        List&lt;T&gt; adjacent;
        MyQueue&lt;T&gt; visitingQueue = new MyQueue&lt;T&gt;(nodes.Count);
        GraphNode&lt;T&gt; current;
        visitingQueue.Enqueue(startID);

        while (visitingQueue.Count != 0)
        {
            T id = visitingQueue.Dequeue();
            current = GetNodeByID(id);
            adjacent = current.Neighbours;
            visited.Add(id);
            
            foreach (GraphEdge&lt;T&gt; edge in current.Edges)
            {
                T ID = edge.node.ID;
                if (!visitingQueue.Contains(ID) &amp;&amp; !visited.Contains(ID))
                {
                    visitingQueue.Enqueue(ID);
                    if (ID.CompareTo(endID) == 0)
                    {
                        return;
                    }
                }
            }
        }
    }[/code]
</code></pre>
<p>I know it will be something silly as im tired, but its bugging me to hell!!</p>
<p><code>public void Dijsktra(T start, T end)
        {
            List&lt;GraphNode&lt;T&gt;&gt; heap = new List&lt;GraphNode&lt;T&gt;&gt;();
            heap.Add(this.GetNodeByID(start));
            foreach (GraphNode&lt;T&gt; node in nodes)
            {
                if (node.ID.Equals(start))
                {
                    node.Distance = 0;
                }
                else
                {
                    node.Distance = int.MaxValue;
                    heap.Add(node);
                }
            }
            visited.Clear();
            while (heap.Count != 0)
            {
                GraphNode&lt;T&gt; node = heap.ElementAt(0);
                GraphNode&lt;T&gt; min = node;
                heap.RemoveAt(0);
                foreach (GraphEdge&lt;T&gt; edge in node.Edges)
                {
                    GraphNode&lt;T&gt; n = edge.node;
                    int arg = edge.Cost + node.Distance;
                    if (arg &lt; n.Distance)
                    {
                        n.Distance = arg;
                        heap.Remove(n);
                        heap.Add(n);
                        min = n;
                    }
                }
                visited.Add(min.ID);
            }</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dijkstra-c/388539/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dijkstra-c/388539/1</link>
        <pubDate>Tue, 29 Mar 2011 02:47:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-388539-1</guid>
        <source url="https://forum.moparisthebest.com/t/dijkstra-c/388539.rss">Dijkstra [c#]</source>
      </item>
  </channel>
</rss>
