<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[Java] Text Based Menu Generator</title>
    <link>https://forum.moparisthebest.com/t/java-text-based-menu-generator/414984</link>
    <description>If you&#39;ve seen my text based game, you know what type of menus I&#39;m talking about. I wasted a lot of lines of code hardcoding all those menus in. I started to rewrite the game from scratch and decided to make a menu generator. This is effectively all you have to do to make a menu.

[code=java5]    public void start() {

        String[] options = {&quot;mine&quot;, &quot;shop&quot;, &quot;bank&quot;, &quot;forest&quot;, &quot;dungeon&quot;};
        String[] descriptions = {&quot;Go to the mine&quot;, &quot;Go to the shop&quot;, &quot;Go to the bank&quot;, &quot;Go to the forest&quot;, &quot;Go to the dungeon&quot;};

        builder.getOptions(options);
        builder.getDesriptions(descriptions);
        builder.generate();

    }[/code]

to get this output:

[code]|------------------------------|
| Options: | Descriptions:     |
|----------|-------------------|
| mine     | Go to the mine    |
| shop     | Go to the shop    |
| bank     | Go to the bank    |
| forest   | Go to the forest  |
| dungeon  | Go to the dungeon |
|------------------------------|[/code]

As long as the last option and last description provided are the longest the menu builder will do all the correct spacing. Here&#39;s the code:

[code=java5]package thepunished;

/**
 *
 * @author Mike
 *
 * NOTE: When using this class make the last option and description the longest one
 *
 */
public class MenuBuilder {

    //variables for the options side of the menu
    int optionsLength;
    int optionsLastLength;
    String[] options;

    //variavles for the descriptions side of the menu
    String[] descriptions;
    int descriptionsLength;
    int descriptionsLastLength;

    /*
     * Gets the options and other variables
     * length of array
     * and the last length
     */
    public void getOptions(String[] options) {

        this.options = options;
        optionsLength = options.length - 1;

        optionsLastLength = options[optionsLength].length();

    }


    /*
     * Gets the descriptions and other variables
     * length of array
     * and the last length
     */
    public void getDesriptions(String[] descriptions) {

        this.descriptions = descriptions;
        descriptionsLength = descriptions.length - 1;

        descriptionsLastLength = descriptions[descriptionsLength].length();

    }

    /*
     * Generates the menu
     * There are a FUCK TON of for loops in here.
     */
    public void generate() {


        /*
         * Generates the top line based of the length of the options
         */
        System.out.print(&quot;|&quot;);

        for (int i = 0; i &lt; optionsLastLength +3; i++) {

            System.out.print(&quot;-&quot;);

        }

        /*
         * Finished generation of the top line based of the length of the descriptions
         */
        for (int i = 0; i &lt; descriptionsLastLength +3; i++) {

            System.out.print(&quot;-&quot;);

        }

        System.out.print(&quot;|&quot;);
        System.out.println(&quot;&quot;);

        /*
         * Generates the ammount of space needed after the options label
         */

        System.out.print(&quot;| Options: &quot;);

        for (int i = 11; i &lt; optionsLastLength +4; i++) {

            System.out.print(&quot; &quot;);

        }

        /*
         * Generates the ammount of space needed after the description label
         */

        System.out.print(&quot;|&quot;);
        System.out.print(&quot; Descriptions: &quot;);

        for (int i = 15; i &lt; descriptionsLastLength +2; i++) {

            System.out.print(&quot; &quot;);

        }

        System.out.print(&quot;|&quot;);
        System.out.println(&quot;&quot;);

        System.out.print(&quot;|&quot;);

        /*
         * Generates a break line bewteen the labels and actual content
         */

        for (int i = 0; i &lt; optionsLastLength +3; i++) {

            System.out.print(&quot;-&quot;);

        }

        System.out.print(&quot;|&quot;);

        /*
         * Finishes generation of a break line bewteen the labels and actual content
         */

        for (int i = 0; i &lt; descriptionsLastLength +2; i++) {

            System.out.print(&quot;-&quot;);
            
        }

        System.out.print(&quot;|&quot;);

        System.out.println(&quot;&quot;);

        /*
         * Generates the rows of options and descriptions row by row
         */

        //options content
        for (int i = 0; i &lt; optionsLength +1; i++) {

            System.out.print(&quot;| &quot; + options[i]);

            for(int k = 0; k &lt; optionsLastLength-options[i].length() +2; k++) {

                System.out.print(&quot; &quot;);

            }

            //description content
            System.out.print(&quot;| &quot; + descriptions[i]);

            for(int k = 0; k &lt; descriptionsLastLength-descriptions[i].length() +1; k++) {

                System.out.print(&quot; &quot;);

            }

            System.out.print(&quot;|&quot;);
            System.out.println(&quot;&quot;);

        }

        System.out.print(&quot;|&quot;);

        /*
         * Generates a bottom line to close the menu
         */

        for (int k = 0; k &lt; optionsLastLength +3; k++) {

            System.out.print(&quot;-&quot;);

        }

        /*
         * Finishes generation of a bottom line to close the menu
         */

        for (int k = 0; k &lt; descriptionsLastLength +3; k++) {

            System.out.print(&quot;-&quot;);

        }

        System.out.print(&quot;|&quot;);
        System.out.println(&quot;&quot;);
        
    }

}[/code]

If you want to use this I&#39;d just like a little credit in what ever it is you make.

Also if this should be in the gamedev forum, move it there. I wasn&#39;t sure because I guess you could use this for general purpose things as well.</description>
    
    <lastBuildDate>Sun, 09 Oct 2011 05:02:42 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/java-text-based-menu-generator/414984.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[Java] Text Based Menu Generator</title>
        <dc:creator><![CDATA[@eyeownyew Eyeownyew]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/eyeownyew">@eyeownyew</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="6" data-topic="414984">
<div class="title">
<div class="quote-controls"></div>
 Cyber Sheep:</div>
<blockquote>
<p>[quote]System.out.println("");</p>
</blockquote>
</aside>
<p>If you wanted to print a newline, you could have simply done:</p>
<pre><code class="lang-auto"></code></pre>
<p>With [quote]System.out.print("|");<br>
System.out.println("");</p>
<pre><code>    System.out.print("|");[/quote]
</code></pre>
<p>You could have done</p>
<pre><code class="lang-auto">System.out.print("|\n|");</code></pre>
<p>Also, stop abusing for loops.[/quote]<br>
With the time you spent making this post, you could have:</p>
<pre><code class="lang-auto"></code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-text-based-menu-generator/414984/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-text-based-menu-generator/414984/7</link>
        <pubDate>Sun, 09 Oct 2011 05:02:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-414984-7</guid>
        <source url="https://forum.moparisthebest.com/t/java-text-based-menu-generator/414984.rss">[Java] Text Based Menu Generator</source>
      </item>
      <item>
        <title>[Java] Text Based Menu Generator</title>
        <dc:creator><![CDATA[@Cyber_Sheep Cyber Sheep]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cyber_sheep">@Cyber_Sheep</a> wrote:</p>
          <blockquote>
              <blockquote>System.out.println("");</blockquote>
If you wanted to print a newline, you could have simply done:
[code]System.out.println();[/code]
<p>With </p><blockquote>System.out.print("|");<br>
System.out.println("");
<pre><code>    System.out.print("|");&lt;/blockquote&gt;
</code></pre>
<p>You could have done</p>
<pre><code class="lang-auto">System.out.print("|\n|");</code></pre>
<p>Also, stop abusing for loops.</p>
</blockquote>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-text-based-menu-generator/414984/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-text-based-menu-generator/414984/6</link>
        <pubDate>Sun, 09 Oct 2011 02:25:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-414984-6</guid>
        <source url="https://forum.moparisthebest.com/t/java-text-based-menu-generator/414984.rss">[Java] Text Based Menu Generator</source>
      </item>
      <item>
        <title>[Java] Text Based Menu Generator</title>
        <dc:creator><![CDATA[@sp11k3t3ht3rd sp11k3t3ht3rd]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sp11k3t3ht3rd">@sp11k3t3ht3rd</a> wrote:</p>
          <blockquote>
              <p>[code=java5]package thepunished;</p>
<p>/**<br>
*</p>
<ul>
<li>
<span class="mention">@author</span> Mike</li>
<li>
</li>
</ul>
<p>*/<br>
public class MenuBuilder {</p>
<pre><code>//variables for the options side of the menu
int optionsLength;
int optionsLargestLength = 0;
String[] options;

//variables for the descriptions side of the menu
String[] descriptions;
int descriptionsLength;
int descriptionsLargestLength = 0;

/*
 * Gets the options and other variables
 * length of array
 * and the last length
 */
public void getOptions(String[] options) {

    this.options = options;
    optionsLength = options.length - 1;

    for(int i = 0; i &lt; optionsLength; i++) {

        if (optionsLargestLength &lt; options[i].length()) {

            optionsLargestLength = options[i].length();

        }
        
    }

}


/*
 * Gets the descriptions and other variables
 * length of array
 * and the last length
 */
public void getDesriptions(String[] descriptions) {

    this.descriptions = descriptions;
    descriptionsLength = descriptions.length - 1;

    for(int i = 0; i &lt; descriptionsLength; i++) {

        if (descriptionsLargestLength &lt; descriptions[i].length()) {

            descriptionsLargestLength = descriptions[i].length();

        }

    }

}

/*
 * Generates the menu
 * There are a FUCK TON of for loops in here.
 */
public void generate() {


    /*
     * Generates the top line based of the length of the options
     */
    System.out.print("|");

    for (int i = 0; i &lt; optionsLargestLength +3; i++) {

        System.out.print("-");

    }

    /*
     * Finished generation of the top line based of the length of the descriptions
     */
    for (int i = 0; i &lt; descriptionsLargestLength +3; i++) {

        System.out.print("-");

    }

    System.out.print("|");
    System.out.println("");

    /*
     * Generates the ammount of space needed after the options label
     */

    System.out.print("| Options: ");

    for (int i = 11; i &lt; optionsLargestLength +4; i++) {

        System.out.print(" ");

    }

    /*
     * Generates the ammount of space needed after the description label
     */

    System.out.print("|");
    System.out.print(" Descriptions: ");

    for (int i = 15; i &lt; descriptionsLargestLength +2; i++) {

        System.out.print(" ");

    }

    System.out.print("|");
    System.out.println("");

    System.out.print("|");

    /*
     * Generates a break line bewteen the labels and actual content
     */

    for (int i = 0; i &lt; optionsLargestLength +3; i++) {

        System.out.print("-");

    }

    System.out.print("|");

    /*
     * Finishes generation of a break line bewteen the labels and actual content
     */

    for (int i = 0; i &lt; descriptionsLargestLength +2; i++) {

        System.out.print("-");
        
    }

    System.out.print("|");

    System.out.println("");

    /*
     * Generates the rows of options and descriptions row by row
     */

    //options content
    for (int i = 0; i &lt; optionsLength +1; i++) {

        System.out.print("| " + options[i]);

        for(int k = 0; k &lt; optionsLargestLength-options[i].length() +2; k++) {

            System.out.print(" ");

        }

        //description content
        System.out.print("| " + descriptions[i]);

        for(int k = 0; k &lt; descriptionsLargestLength-descriptions[i].length() +1; k++) {

            System.out.print(" ");

        }

        System.out.print("|");
        System.out.println("");

    }

    System.out.print("|");

    /*
     * Generates a bottom line to close the menu
     */

    for (int k = 0; k &lt; optionsLargestLength +3; k++) {

        System.out.print("-");

    }

    /*
     * Finishes generation of a bottom line to close the menu
     */

    for (int k = 0; k &lt; descriptionsLargestLength +3; k++) {

        System.out.print("-");

    }

    System.out.print("|");
    System.out.println("");
    
}
</code></pre>
<p>}[/code]</p>
<p>Happier? I fixed it so you don’t need to supply the longest one first. I don’t know how to use a hashmap so I didn’t. Simple as that.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-text-based-menu-generator/414984/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-text-based-menu-generator/414984/5</link>
        <pubDate>Sun, 18 Sep 2011 12:01:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-414984-5</guid>
        <source url="https://forum.moparisthebest.com/t/java-text-based-menu-generator/414984.rss">[Java] Text Based Menu Generator</source>
      </item>
      <item>
        <title>[Java] Text Based Menu Generator</title>
        <dc:creator><![CDATA[@Coelho Coelho]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/coelho">@Coelho</a> wrote:</p>
          <blockquote>
              <p>[quote=“sp11k3t3ht3rd, post:3, topic:414984”][quote author=Coelho link=topic=516943.msg3754254#msg3754254 date=1316297929]<br>
For the function “generate” it would be better if it output a string instead of just printing it, for flexibility. Also, the way you did a lot of the code is just a little weird in my opinion.[/quote]</p>
<p>Whats weird about it? Most of it is just loops to get the right spacing based off the largest option.[/quote]<br>
Mostly how you did it was weird. I don’t see an array fit for this situation at all, while a HashMap works much nicer. Plus the fact that in your code, you required the largest option to be last. Mine does not.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-text-based-menu-generator/414984/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-text-based-menu-generator/414984/4</link>
        <pubDate>Sun, 18 Sep 2011 06:52:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-414984-4</guid>
        <source url="https://forum.moparisthebest.com/t/java-text-based-menu-generator/414984.rss">[Java] Text Based Menu Generator</source>
      </item>
      <item>
        <title>[Java] Text Based Menu Generator</title>
        <dc:creator><![CDATA[@sp11k3t3ht3rd sp11k3t3ht3rd]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sp11k3t3ht3rd">@sp11k3t3ht3rd</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="2" data-topic="414984">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/coelho/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Coelho:</div>
<blockquote>
<p>For the function “generate” it would be better if it output a string instead of just printing it, for flexibility. Also, the way you did a lot of the code is just a little weird in my opinion.</p>
</blockquote>
</aside>
<p>Whats weird about it? Most of it is just loops to get the right spacing based off the largest option.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-text-based-menu-generator/414984/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-text-based-menu-generator/414984/3</link>
        <pubDate>Sun, 18 Sep 2011 02:17:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-414984-3</guid>
        <source url="https://forum.moparisthebest.com/t/java-text-based-menu-generator/414984.rss">[Java] Text Based Menu Generator</source>
      </item>
      <item>
        <title>[Java] Text Based Menu Generator</title>
        <dc:creator><![CDATA[@Coelho Coelho]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/coelho">@Coelho</a> wrote:</p>
          <blockquote>
              <p>For the function “generate” it would be better if it output a string instead of just printing it, for flexibility. Also, the way you did a lot of the code is just a little weird in my opinion.</p>
<p><span class="bbcode-b">EDIT:</span><br>
I redid your MenuBuilder with my idea involved.</p>
<p>EXAMPLE:</p>
<pre><code class="lang-auto">public static void main(String[] args) {
    /* Warning: Do not use println or you will get an extra line. */
	System.out.print(new MenuBuilder().add("test", "description").add("test1", "another desc").generate());
}</code></pre>
<p>MENUBUILDER:</p>
<pre><code class="lang-auto">import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

/*
 * @author Coelho
 */
public class MenuBuilder {

	private final Map&lt;String, String&gt; options = new HashMap&lt;String, String&gt;();
	private final String headOption = "Option:";
	private final String headDescription = "Description:";

	public MenuBuilder add(String option, String description) {
		this.options.put(option, description);
		return this;
	}
	
	public MenuBuilder remove(String option) {
		this.options.remove(option);
		return this;
	}

	public MenuBuilder clear() {
		this.options.clear();
		return this;
	}

	public String generate() {
		StringBuilder builder = new StringBuilder();
		int maxOptionLength = 0;
		int maxDescriptionLength = 0;

		this.add(this.headOption, this.headDescription);
		for(Iterator&lt;String&gt; $it = this.options.keySet().iterator(); $it.hasNext();) {
			String option = $it.next();
			String description = this.options.get(option);
			if(maxOptionLength &lt; option.length()) {
				maxOptionLength = option.length();
			}
			if(maxDescriptionLength &lt; description.length()) {
				maxDescriptionLength = description.length();
			}
		}
		this.remove(this.headOption);

		builder.append(this.generateSeperator(maxOptionLength + maxDescriptionLength + 5));
		builder.append(this.generateHeader(maxOptionLength, maxDescriptionLength));
		builder.append(this.generateSeperator(maxOptionLength + maxDescriptionLength + 5));

		for(Iterator&lt;String&gt; $it = this.options.keySet().iterator(); $it.hasNext();) {
			String option = $it.next();
			String description = options.get(option);
			int diffOptionLength = maxOptionLength - option.length();
			int diffDescriptionLength = maxDescriptionLength - description.length();

			builder.append("| " + option);
			for(int i = 0; i &lt; diffOptionLength; i++) {
				builder.append(" ");
			}
			builder.append(" | " + description);
			for(int i = 0; i &lt; diffDescriptionLength; i++) {
				builder.append(" ");
			}
			builder.append(" |\n");
		}

		builder.append(this.generateSeperator(maxOptionLength + maxDescriptionLength + 5));
		return builder.toString();
	}

	private String generateSeperator(int size) {
		StringBuilder builder = new StringBuilder();
		{
			builder.append("|");
			for(int i = 0; i &lt; size; i++) {
				builder.append("-");
			}
			builder.append("|\n");
		}
		return builder.toString();
	}

	private String generateHeader(int maxOptionLength, int maxDescriptionLength) {
		StringBuilder builder = new StringBuilder();
		{
			int diffOptionLength = maxOptionLength - this.headOption.length();
			int diffDescriptionLength = maxDescriptionLength - this.headDescription.length();
			
			builder.append("| " + this.headOption);
			for(int i = 0; i &lt; diffOptionLength; i++) {
				builder.append(" ");
			}
			builder.append(" | " + this.headDescription);
			for(int i = 0; i &lt; diffDescriptionLength; i++) {
				builder.append(" ");
			}
			builder.append(" |\n");
			
		}
		return builder.toString();
	}

}</code></pre>
<p>OUTPUT:</p>
<pre><code class="lang-auto">|------------------------|
| Option: | Description: |
|------------------------|
| test1   | another desc |
| test    | description  |
|------------------------|</code></pre>
<p>This would be much better if it used more of a column and row system, but I was lazy.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-text-based-menu-generator/414984/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-text-based-menu-generator/414984/2</link>
        <pubDate>Sat, 17 Sep 2011 22:18:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-414984-2</guid>
        <source url="https://forum.moparisthebest.com/t/java-text-based-menu-generator/414984.rss">[Java] Text Based Menu Generator</source>
      </item>
      <item>
        <title>[Java] Text Based Menu Generator</title>
        <dc:creator><![CDATA[@sp11k3t3ht3rd sp11k3t3ht3rd]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sp11k3t3ht3rd">@sp11k3t3ht3rd</a> wrote:</p>
          <blockquote>
              <p>If you’ve seen my text based game, you know what type of menus I’m talking about. I wasted a lot of lines of code hardcoding all those menus in. I started to rewrite the game from scratch and decided to make a menu generator. This is effectively all you have to do to make a menu.</p>
<p>[code=java5]    public void start() {</p>
<pre><code>    String[] options = {"mine", "shop", "bank", "forest", "dungeon"};
    String[] descriptions = {"Go to the mine", "Go to the shop", "Go to the bank", "Go to the forest", "Go to the dungeon"};

    builder.getOptions(options);
    builder.getDesriptions(descriptions);
    builder.generate();

}[/code]
</code></pre>
<p>to get this output:</p>
<p>[code]|------------------------------|</p>
<div class="md-table">
<table>
<thead>
<tr>
<th>Options:</th>
<th>Descriptions:</th>
</tr>
</thead>
<tbody>
<tr>
<td>mine</td>
<td>Go to the mine</td>
</tr>
<tr>
<td>shop</td>
<td>Go to the shop</td>
</tr>
<tr>
<td>bank</td>
<td>Go to the bank</td>
</tr>
<tr>
<td>forest</td>
<td>Go to the forest</td>
</tr>
<tr>
<td>dungeon</td>
<td>Go to the dungeon</td>
</tr>
<tr>
<td>------------------------------</td>
<td>[/code]</td>
</tr>
</tbody>
</table>
</div><p>As long as the last option and last description provided are the longest the menu builder will do all the correct spacing. Here’s the code:</p>
<p>[code=java5]package thepunished;</p>
<p>/**<br>
*</p>
<ul>
<li>
<span class="mention">@author</span> Mike</li>
<li>
</li>
<li>NOTE: When using this class make the last option and description the longest one</li>
<li>
</li>
</ul>
<p>*/<br>
public class MenuBuilder {</p>
<pre><code>//variables for the options side of the menu
int optionsLength;
int optionsLastLength;
String[] options;

//variavles for the descriptions side of the menu
String[] descriptions;
int descriptionsLength;
int descriptionsLastLength;

/*
 * Gets the options and other variables
 * length of array
 * and the last length
 */
public void getOptions(String[] options) {

    this.options = options;
    optionsLength = options.length - 1;

    optionsLastLength = options[optionsLength].length();

}


/*
 * Gets the descriptions and other variables
 * length of array
 * and the last length
 */
public void getDesriptions(String[] descriptions) {

    this.descriptions = descriptions;
    descriptionsLength = descriptions.length - 1;

    descriptionsLastLength = descriptions[descriptionsLength].length();

}

/*
 * Generates the menu
 * There are a FUCK TON of for loops in here.
 */
public void generate() {


    /*
     * Generates the top line based of the length of the options
     */
    System.out.print("|");

    for (int i = 0; i &lt; optionsLastLength +3; i++) {

        System.out.print("-");

    }

    /*
     * Finished generation of the top line based of the length of the descriptions
     */
    for (int i = 0; i &lt; descriptionsLastLength +3; i++) {

        System.out.print("-");

    }

    System.out.print("|");
    System.out.println("");

    /*
     * Generates the ammount of space needed after the options label
     */

    System.out.print("| Options: ");

    for (int i = 11; i &lt; optionsLastLength +4; i++) {

        System.out.print(" ");

    }

    /*
     * Generates the ammount of space needed after the description label
     */

    System.out.print("|");
    System.out.print(" Descriptions: ");

    for (int i = 15; i &lt; descriptionsLastLength +2; i++) {

        System.out.print(" ");

    }

    System.out.print("|");
    System.out.println("");

    System.out.print("|");

    /*
     * Generates a break line bewteen the labels and actual content
     */

    for (int i = 0; i &lt; optionsLastLength +3; i++) {

        System.out.print("-");

    }

    System.out.print("|");

    /*
     * Finishes generation of a break line bewteen the labels and actual content
     */

    for (int i = 0; i &lt; descriptionsLastLength +2; i++) {

        System.out.print("-");
        
    }

    System.out.print("|");

    System.out.println("");

    /*
     * Generates the rows of options and descriptions row by row
     */

    //options content
    for (int i = 0; i &lt; optionsLength +1; i++) {

        System.out.print("| " + options[i]);

        for(int k = 0; k &lt; optionsLastLength-options[i].length() +2; k++) {

            System.out.print(" ");

        }

        //description content
        System.out.print("| " + descriptions[i]);

        for(int k = 0; k &lt; descriptionsLastLength-descriptions[i].length() +1; k++) {

            System.out.print(" ");

        }

        System.out.print("|");
        System.out.println("");

    }

    System.out.print("|");

    /*
     * Generates a bottom line to close the menu
     */

    for (int k = 0; k &lt; optionsLastLength +3; k++) {

        System.out.print("-");

    }

    /*
     * Finishes generation of a bottom line to close the menu
     */

    for (int k = 0; k &lt; descriptionsLastLength +3; k++) {

        System.out.print("-");

    }

    System.out.print("|");
    System.out.println("");
    
}
</code></pre>
<p>}[/code]</p>
<p>If you want to use this I’d just like a little credit in what ever it is you make.</p>
<p>Also if this should be in the gamedev forum, move it there. I wasn’t sure because I guess you could use this for general purpose things as well.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-text-based-menu-generator/414984/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-text-based-menu-generator/414984/1</link>
        <pubDate>Sat, 17 Sep 2011 21:42:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-414984-1</guid>
        <source url="https://forum.moparisthebest.com/t/java-text-based-menu-generator/414984.rss">[Java] Text Based Menu Generator</source>
      </item>
  </channel>
</rss>
