<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Need help making npcs attack</title>
    <link>https://forum.moparisthebest.com/t/need-help-making-npcs-attack/237882</link>
    <description>I looked for tut saw awhile ago but didnt see anytime soon please help?</description>
    
    <lastBuildDate>Tue, 21 Oct 2008 19:21:50 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/need-help-making-npcs-attack/237882.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Need help making npcs attack</title>
        <dc:creator><![CDATA[@gamma gamma]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/gamma">@gamma</a> wrote:</p>
          <blockquote>
              <p>yes move this to server helpâ€¦</p>
<p>in your client.java replace your NPCattackmethod with this</p>
<p>[code]public boolean AttackNPC() {<br>
int EnemyX = server.npcHandler.npcs[attacknpc].absX;<br>
int EnemyY = server.npcHandler.npcs[attacknpc].absY;<br>
int EnemyHP = server.npcHandler.npcs[attacknpc].HP;<br>
int hitDiff = 0;<br>
int Npchitdiff = 0;</p>
<pre><code>	CalculateMaxHit();
	hitDiff = misc.random(playerMaxHit);
	int casterX = absX;
	int casterY = absY;
	int offsetX = (casterX - EnemyX) * -1;
	int offsetY = (casterY - EnemyY) * -1;

	poisondmg = false;
	newhptype = false;
	hptype = 0;

	if (server.npcHandler.npcs[attacknpc].npcType != 2745) { //NPC's that do random attacks here
		server.npcHandler.npcs[attacknpc].StartKilling = playerId;
		server.npcHandler.npcs[attacknpc].RandomWalk = false;
		server.npcHandler.npcs[attacknpc].followPlayer = playerId;
		server.npcHandler.npcs[attacknpc].IsUnderAttack = true;
	}

	faceNPC(attacknpc);

	if (Cant) {
		sendMsg("You cannot attack this NPC!");
		ResetAttackNPC();
	}
	if (absX == EnemyX &amp;&amp; absY == EnemyY) {
		WalkTimer(-1, 0);
	}
	if (server.npcHandler.npcs[attacknpc].npcType != 0 &amp;&amp; playerLevel[5] &lt;= 0) {
		playerLevel[5] = 0;
		headIcon = 0;
		sendQuest(" Prayer: "+playerLevel[5]+"/"+getLevelForXP(playerXP[5])+"", 687);
		sendFrame126(""+playerLevel[5]+"", 4012);
		updateRequired = true;
		appearanceUpdateRequired = true;
	}
	if(!healers &amp;&amp; isInFightCaves() &amp;&amp; server.npcHandler.npcs[attacknpc].npcType == 2745 &amp;&amp; server.npcHandler.npcs[attacknpc].HP &lt;= 175){
		SummonNewNPC(2746, 5072, 2382, heightLevel);
		SummonNewNPC(2746, 5081, 2415, heightLevel);
		SummonNewNPC(2746, 5107, 2410, heightLevel);
		SummonNewNPC(2746, 5103, 2388, heightLevel);
		healers = true;
	}
	if (healers &amp;&amp; isInFightCaves() &amp;&amp; server.npcHandler.npcs[attacknpc].npcType == 2745 &amp;&amp; healersCount &lt;= 12 &amp;&amp; server.npcHandler.npcs[attacknpc].HP &lt;= 350) {
		healJad();
		stillgfx(447, EnemyY, EnemyX);
	}
	if(server.npcHandler.npcs[attacknpc].npcType == 1615) {
		if (playerLevel[18] &lt; 85) {
			sendMsg("You need 85 Slayer or higher to attack this monster.");
			ResetAttackNPC();
			return false;
		}
	}
	if(server.npcHandler.npcs[attacknpc].npcType == 1613) {
		if (playerLevel[18] &lt; 80) {
			sendMsg("You need 80 Slayer or higher to attack this monster.");
			ResetAttackNPC();
			return false;
		}
	}
	if(server.npcHandler.npcs[attacknpc].npcType == 2783) {
		if (playerLevel[18] &lt; 90) {
			sendMsg("You need 90 Slayer or higher to attack this monster.");
			ResetAttackNPC();
			return false;
		}
	}
	if(server.npcHandler.npcs[attacknpc].npcType == 1610) {
		if (playerLevel[18] &lt; 70) {
			sendMsg("You need 70 Slayer or higher to attack this monster.");
			ResetAttackNPC();
			return false;
		}
	}
	if(server.npcHandler.npcs[attacknpc].npcType == 1616) {
		if (playerLevel[18] &lt; 20) {
			sendMsg("You need 20 Slayer or higher to attack this monster.");
			ResetAttackNPC();
			return false;
		}
	}
	if(server.npcHandler.npcs[attacknpc].npcType == 1637) {
		if (playerLevel[18] &lt; 35) {
			sendMsg("You need 35 Slayer or higher to attack this monster.");
			ResetAttackNPC();
			return false;
		}
	}
	if(server.npcHandler.npcs[attacknpc].npcType == 1619) {
		if (playerLevel[18] &lt; 45) {
			sendMsg("You need 45 Slayer or higher to attack this monster.");
			ResetAttackNPC();
			return false;
		}
	}
	if(server.npcHandler.npcs[attacknpc].npcType == 1624) {
		if (playerLevel[18] &lt; 60) {
			sendMsg("You need 60 Slayer or higher to attack this monster.");
			ResetAttackNPC();
			return false;
		}	
	}

	if (server.npcHandler.npcs[attacknpc].followPlayer &lt; 1 || server.npcHandler.npcs[attacknpc].followPlayer == playerId || inwildy2 == true) {
		if (playerEquipment[playerWeapon] == 4587 || playerEquipment[playerWeapon] == 1291 || playerEquipment[playerWeapon] == 5698 || playerEquipment[playerWeapon] == 4151 || playerEquipment[playerWeapon] == 7630 || playerEquipment[playerWeapon] == 6528 || playerEquipment[playerWeapon] == 1333 || playerEquipment[playerWeapon] == 4153 || playerEquipment[playerWeapon] == -1 || playerEquipment[playerWeapon] == 6562 || playerEquipment[playerWeapon] == 7409) {
			PkingDelay = 6;
		}	
		if (playerEquipment[playerWeapon] == 1434 || playerEquipment[playerWeapon] == 4710 || playerEquipment[playerWeapon] == 4726 || playerEquipment[playerWeapon] == 4734 || playerEquipment[playerWeapon] == 4747 || playerEquipment[playerWeapon] == 4755 || playerEquipment[playerWeapon] == 2815 || playerEquipment[playerWeapon] == 2821 || playerEquipment[playerWeapon] == 2827 || playerEquipment[playerWeapon] == 1359 || playerEquipment[playerWeapon] == 1275) {
			PkingDelay = 7;
		}
		if (playerEquipment[playerWeapon] == 7158 || playerEquipment[playerWeapon] == 2745 || playerEquipment[playerWeapon] == 2746 || playerEquipment[playerWeapon] == 2747 || playerEquipment[playerWeapon] == 2748 || playerEquipment[playerWeapon] == 1319 || playerEquipment[playerWeapon] == 6739 || playerEquipment[playerWeapon] == 1265 || playerEquipment[playerWeapon] == 3204) {
			PkingDelay = 8;
		}
		if (playerEquipment[playerWeapon] == 1377 || playerEquipment[playerWeapon] == 1373 || playerEquipment[playerWeapon] == 4718 || playerEquipment[playerWeapon] == 4675 || playerEquipment[playerWeapon] == 6914) {
			PkingDelay = 10;
		}

		boolean UseBow = false;

		if (hasCrystalBow()) {
			PkingDelay = 8;
			UseBow = true;
		}
		if (playerEquipment[playerWeapon] == 861) {
			PkingDelay = 5;
			UseBow = true; 
		}
		if (playerEquipment[playerWeapon] == 4734) {
			PkingDelay = 5;
			UseBow = true; 
		}
		if(playerEquipment[playerWeapon] == 7603) {
			PkingDelay = 10;
			if (DDStimer &lt;= 0 &amp;&amp; actionTimer &lt;= 0) {
				dbvoid();
				actionTimer = 1;
				DDS2Damg = true;
				DDStimer = 1;
				UseBow = true;
			}
		}
		if (playerEquipment[playerHat] == 4724 &amp;&amp; playerEquipment[playerChest] == 4728 &amp;&amp; playerEquipment[playerLegs] == 4730 &amp;&amp; playerEquipment[playerWeapon] == 4726) {
			PkingDelay = 6;
			if (misc.random(5) == 1) {
				gfxRich(401);
				NewHP += hitDiff;
				if(NewHP &gt; getLevelForXP(playerXP[3]))
					NewHP = getLevelForXP(playerXP[3]);
			}
		}
		if (playerEquipment[playerWeapon] == 2761) {
			rcvoid();
			PkingDelay = 9;
			addSkillXP(hitDiff * 20, 4);
		}
		if (playerEquipment[playerWeapon] == 859) {
			PkingDelay = 10;
			UseBow = true;
		}
		if (playerEquipment[playerWeapon] == 6724) {
			PkingDelay = 10;
			UseBow = true;
		}
		if (playerEquipment[playerWeapon] == 839 || playerEquipment[playerWeapon] == 841 || playerEquipment[playerWeapon] == 843 || playerEquipment[playerWeapon] == 845 || playerEquipment[playerWeapon] == 847 || playerEquipment[playerWeapon] == 849 || playerEquipment[playerWeapon] == 851 || playerEquipment[playerWeapon] == 853 || playerEquipment[playerWeapon] == 855 || playerEquipment[playerWeapon] == 857 || playerEquipment[playerWeapon] == 861) {
			PkingDelay = 5;
			UseBow = true;
		}

		if (UseBow) {
			inCombat(); 
			CheckArrows();
			CalculateRange();
		}

		if (GoodDistance(EnemyX, EnemyY, absX, absY, 1) == true || playerEquipment[playerWeapon] == 859 || hasCrystalBow() || playerEquipment[playerWeapon] == 839 || playerEquipment[playerWeapon] == 841 || playerEquipment[playerWeapon] == 843 || playerEquipment[playerWeapon] == 845 || playerEquipment[playerWeapon] == 847 || playerEquipment[playerWeapon] == 849 || playerEquipment[playerWeapon] == 851 || playerEquipment[playerWeapon] == 853 || playerEquipment[playerWeapon] == 861 || playerEquipment[playerWeapon] == 855 || playerEquipment[playerWeapon] == 857 || playerEquipment[playerWeapon] == 4734 || playerEquipment[playerWeapon] == 2761 || playerEquipment[playerWeapon] == 4675 || playerEquipment[playerWeapon] == 6914 || playerEquipment[playerWeapon] == 7603 || playerEquipment[playerWeapon] == 6724) {
			if (LoopAttDelay &lt;= 1) {
				if (server.npcHandler.npcs[attacknpc].IsDead == true) {} else if (!UseBow) {
					setAnimation(GetWepAnim());
					if ((EnemyHP - hitDiff) &lt; 0) {
						hitDiff = EnemyHP;
					}
					if (usingSpecial == true) {
						if (playerEquipment[playerWeapon] == 4151 &amp;&amp; specialAmount &gt;= 50) {
							animation(343, EnemyY, EnemyX);
							calculateSpecial();
							hitDiff = specialDamage;
							usingSpecial = false;
							specialDamage = 0;
							specialDamage2 = 0;
						}
						if (playerEquipment[playerWeapon] == 1305 &amp;&amp; specialAmount &gt;= 50) {
							startAnimation(1058);
							gfxRich(248);
							calculateSpecial();
							hitDiff = specialDamage;
							usingSpecial = false;
							specialDamage = 0;
							specialDamage2 = 0;
						}
						if (playerEquipment[playerWeapon] == 2745 &amp;&amp; specialAmount &gt;= 100) {
							gfxRich(482);
							calculateSpecial();
							hitDiff = specialDamage;
							usingSpecial = false;
							specialDamage = 0;
							specialDamage2 = 0;
						}
						if (playerEquipment[playerWeapon] == 2746 &amp;&amp; specialAmount &gt;= 50) {
							gfxRich(263);
							calculateSpecial();
							hitDiff = specialDamage;
							usingSpecial = false;
							specialDamage = 0;
							specialDamage2 = 0;
						}
						if (playerEquipment[playerWeapon] == 7630 &amp;&amp; specialAmount &gt;= 100) {
							stillgfx(656, EnemyY, EnemyX);
							calculateSpecial();
							hitDiff = specialDamage;
							usingSpecial = false;
							specialDamage = 0;
							specialDamage2 = 0;
						}
						if (playerEquipment[playerWeapon] == 2747 &amp;&amp; specialAmount &gt;= 50) {
							gfxRich(285);
							calculateSpecial();
							hitDiff = specialDamage;
							NewHP += hitDiff;
							if(NewHP &gt; getLevelForXP(playerXP[3]))
								NewHP = getLevelForXP(playerXP[3]);
							usingSpecial = false;
							specialDamage = 0;
							specialDamage2 = 0;
						}
						if (playerEquipment[playerWeapon] == 3204 &amp;&amp; specialAmount &gt;= 100) {
							gfxRich(283);
							calculateSpecial();
							hitDiff = specialDamage;
							usingSpecial = false;
							specialDamage = 0;
							specialDamage2 = 0;
						}
						if (playerEquipment[playerWeapon] == 4587 &amp;&amp; specialAmount &gt;= 75) {
							gfxRich(349);
							calculateSpecial();
							hitDiff = specialDamage;
							usingSpecial = false;
							specialDamage = 0;
							specialDamage2 = 0;
						}
						if (playerEquipment[playerWeapon] == 1434 &amp;&amp; specialAmount &gt;= 25) {
							gfxRich(251);
							calculateSpecial();
							hitDiff = specialDamage;
							usingSpecial = false;
							specialDamage = 0;
							specialDamage2 = 0;
						}
						if (playerEquipment[playerWeapon] == 7158 &amp;&amp; specialAmount &gt;= 40) {
							calculateSpecial();
							hitDiff = specialDamage;
							usingSpecial = false;
							specialDamage = 0;
							specialDamage2 = 0;
						}
						if (playerEquipment[playerWeapon] == 5698 &amp;&amp; specialAmount &gt;= 25) {
							calculateSpecial();
							DDSSpecial();
							server.npcHandler.PoisonNPC(attacknpc);
							usingSpecial = false;
							specialDamage = 0;
							specialDamage2 = 0;
						}
						if (playerEquipment[playerWeapon] == 4153 &amp;&amp; specialAmount &gt;= 100) {
							gfxRich(342);
							calculateSpecial();
							maulSpec();
							usingSpecial = false;
							specialDamage = 0;
							specialDamage2 = 0;
						}
						if (playerEquipment[playerWeapon] == 6739 &amp;&amp; specialAmount &gt;= 100) {
							calculateSpecial();
							hitDiff = specialDamage;
							usingSpecial = false;
							specialDamage = 0;
							specialDamage2 = 0;
						}
						usingSpecial = false;
						specialDamage = 0;
						specialDamage2 = 0;
						specialAttacks();
						specialAttacks2();
						specialAttacks3();
						specialAttacks4();
						specialAttacks5();
						specialAttacks6();
					}
					LoopAttDelay = PkingDelay;
					server.npcHandler.npcs[attacknpc].hitDiff = hitDiff;
					server.npcHandler.npcs[attacknpc].Killing[playerId] += hitDiff;
					server.npcHandler.npcs[attacknpc].updateRequired = true;
					server.npcHandler.npcs[attacknpc].hitUpdateRequired = true;
					double TotalExp = 0;

					inCombat();
					if (FightType == 1) {
						TotalExp = (double) (140 * hitDiff);
						TotalExp = (double) (TotalExp * CombatExpRate);
						addSkillXP((int) (TotalExp), playerAttack);
					} else if (FightType == 2) {
						TotalExp = (double) (140 * hitDiff);
						TotalExp = (double) (TotalExp * CombatExpRate);
						addSkillXP((int) (TotalExp), playerStrength);
					} else if (FightType == 4) {
						TotalExp = (double) (140 * hitDiff);
						TotalExp = (double) (TotalExp * CombatExpRate);
						addSkillXP((int) (TotalExp), playerDefence);
					} else if (FightType == 3) {
						TotalExp = (double) (140 * hitDiff);
						TotalExp = (double) (TotalExp * CombatExpRate);
						addSkillXP((int) (TotalExp), playerStrength);
					}
					TotalExp = (double) (80 * hitDiff);
					TotalExp = (double) (TotalExp * CombatExpRate);
					addSkillXP((int) (TotalExp), playerHitpoints);
					if (server.npcHandler.npcs[attacknpc].npcType != 2745) {
						server.npcHandler.npcs[attacknpc].animNumber = server.npcHandler.GetNPCBlockAnim(server.npcHandler.npcs[attacknpc].npcType);
					}
					actionTimer = 7;
				} else if (UseBow) {
					if (!HasArrows &amp;&amp; !hasCrystalBow()) { 
						ResetAttack();
						sendMsg("There's no arrows left in your quiver");
					} else if (HasArrows) {
						LoopAttDelay = PkingDelay;
						if (playerEquipment[playerCape] == 7628 &amp;&amp; !hasCrystalBow() &amp;&amp; misc.random(5) == 1) {
							DeleteArrow();
						} else if (playerEquipment[playerCape] == 7628 &amp;&amp; !hasCrystalBow() &amp;&amp; misc.random(5) == 2) {
							DeleteArrow();
							DropArrowsNPC();
						} else if (playerEquipment[playerCape] != 7628 &amp;&amp; !hasCrystalBow()) {
							DeleteArrow();
							DropArrowsNPC();
						}
						if (!hasCrystalBow() &amp;&amp; playerEquipmentN[playerArrows] != 0)
							setAnimation(426);
							drawback();
							ProjectileRang(offsetX, offsetY, attacknpc, 1);
							if (usingSpecial) {
								if (playerEquipment[playerWeapon] == 861 &amp;&amp; specialAmount &gt;= 60) {
									bowSpecc();
									createProjectile(absY, absX, offsetX, offsetY, 50, 78, 249, 43, 31, attacknpc+1);
									createProjectile(absY, absX, offsetX, offsetY, 50, 70, 249, 43, 31, attacknpc+1);
									calculateSpecial();
									hitDiff = misc.random(getRangeHitDiff(playerEquipment[playerWeapon]) + getArrowHitDiff(playerEquipment[playerArrows]));
									usingSpecial = false;
									specialDamage = 0;
									specialDamage2 = 0;
								}
								if (playerEquipment[playerWeapon] == 7603 &amp;&amp; specialAmount &gt;= 70) {
									darkbow();
									createProjectile(absY, absX, offsetX, offsetY, 50, 78, 643, 43, 31, attacknpc+1);
									createProjectile(absY, absX, offsetX, offsetY, 50, 70, 643, 43, 31, attacknpc+1);
									calculateSpecial();
									hitDiff = misc.random(getRangeHitDiff(playerEquipment[playerWeapon]) + getArrowHitDiff(playerEquipment[playerArrows]));
									usingSpecial = false;
									specialDamage = 0;
									specialDamage2 = 0;
								}
								usingSpecial = false;
								specialDamage = 0;
								specialDamage2 = 0;
								specialAttacks();
								specialAttacks2();
								specialAttacks3();
								specialAttacks4();
								specialAttacks5();
								specialAttacks6();
							}
							inCombat(); 
							if (server.npcHandler.npcs[attacknpc].npcType != 2745) {
								server.npcHandler.npcs[attacknpc].animNumber = server.npcHandler.GetNPCBlockAnim(server.npcHandler.npcs[attacknpc].npcType);
							}
							teleportToX = absX;
							teleportToY = absY;
						}
					}
					return true;
				}
			}
		} else {
			ResetAttackNPC();
	}
	return false;
}[/code]</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/need-help-making-npcs-attack/237882/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/need-help-making-npcs-attack/237882/3</link>
        <pubDate>Tue, 21 Oct 2008 19:21:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-237882-3</guid>
        <source url="https://forum.moparisthebest.com/t/need-help-making-npcs-attack/237882.rss">Need help making npcs attack</source>
      </item>
      <item>
        <title>Need help making npcs attack</title>
        <dc:creator><![CDATA[@Nuke207 Nuke207]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/nuke207">@Nuke207</a> wrote:</p>
          <blockquote>
              <p>This should be in Server Help I think, Move it their pliz <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/need-help-making-npcs-attack/237882/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/need-help-making-npcs-attack/237882/2</link>
        <pubDate>Tue, 21 Oct 2008 01:40:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-237882-2</guid>
        <source url="https://forum.moparisthebest.com/t/need-help-making-npcs-attack/237882.rss">Need help making npcs attack</source>
      </item>
      <item>
        <title>Need help making npcs attack</title>
        <dc:creator><![CDATA[@Jackwebb Jackwebb]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jackwebb">@Jackwebb</a> wrote:</p>
          <blockquote>
              <p>I looked for tut saw awhile ago but didnt see anytime soon please help?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/need-help-making-npcs-attack/237882/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/need-help-making-npcs-attack/237882/1</link>
        <pubDate>Mon, 20 Oct 2008 20:02:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-237882-1</guid>
        <source url="https://forum.moparisthebest.com/t/need-help-making-npcs-attack/237882.rss">Need help making npcs attack</source>
      </item>
  </channel>
</rss>
