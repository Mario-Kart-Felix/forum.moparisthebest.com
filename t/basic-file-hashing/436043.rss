<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Basic File Hashing</title>
    <link>https://forum.moparisthebest.com/t/basic-file-hashing/436043</link>
    <description>Hello, I&#39;ve been making a basic file hash. The only purpose of this is to make files unreadable to the human eye.
Here&#39;s the code, I&#39;m open to criticism and tips (as I should be)...

IO
[code=java]
import java.io.*;


public class IO {


public String test = &quot;./Test.txt&quot;;

byte[] fileBytes;


public void in() {
	try { 
		File file = new File(test); 
		int fileLength = (int)file.length(); 
		fileBytes = new byte[fileLength]; 
		DataInputStream dos = new DataInputStream(new BufferedInputStream(new FileInputStream(test))); 
		dos.readFully(fileBytes, 0, fileLength); 
		dos.close();
		String outputflip = &quot;&quot;;
		for (int i = 0; i &lt; fileLength; i++) {
			outputflip = outputflip + (char)fileBytes[i];
			fileBytes[i] = (byte)~fileBytes[i];
			outputflip = outputflip + (char)fileBytes[i] + &quot;\n&quot;;
		}
		System.out.println(outputflip);
		out();
	} catch(Exception ex) { 
		ex.printStackTrace(); 
	}
}
public void out() {
	try {
		File file = new File(test);
		BufferedWriter out = new BufferedWriter(new FileWriter(file));
		String outS = &quot;&quot;;
		for (int i = 0; i &lt; fileBytes.length; i++){
			fileBytes[i] = (byte)~fileBytes[i];
			System.out.print(&quot;&quot;+(char)fileBytes[i]);
		}
		System.out.println(&quot;&quot;);
		for (int i = 0; i &lt; fileBytes.length; i++){
			outS = outS+(char)fileBytes[i];
		}
		out.write(outS);
		out.flush();
		out.close();
	} catch (Exception e) {
		e.printStackTrace();
	}

}


}[/code]
Try
[code=java]



public class Try implements Runnable {

public IO io;


public static void main(String[] args) {
	try {
		Thread thread = new Thread(new Try());
		thread.run();
	} catch (Exception e) {
		e.printStackTrace();
	}
}

public void run() {
	
	io = new IO();
	io.in();
	/*while(true){
		
	}*/
}

}[/code]
Sample input/output:
Text.txt
[code]
ssssss
[/code]
Console
[code]
s?
s?
s?
s?
s?
s?

ssssss
Press any key to continue . . .[/code]


Some things are thrown in there for later manipulation.... Don&#39;t comment on the class names, I don&#39;t really care about how they&#39;re named for now.</description>
    
    <lastBuildDate>Mon, 12 Mar 2012 03:29:07 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/basic-file-hashing/436043.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Basic File Hashing</title>
        <dc:creator><![CDATA[@eyeownyew Eyeownyew]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/eyeownyew">@eyeownyew</a> wrote:</p>
          <blockquote>
              <p>[quote=“Davidi2, post:16, topic:436043”]Or how about just Integer.toBinaryString(byte)</p>
<p>An integer and a byte of the same value will have the same bit sequence, and the toBinaryString method cuts off leading zero’s.[/quote]<br>
Oh.<br>
Well that is just flat out convenient o.O</p>
<p>Thank you, I’ll try to see what encryption/hashing I can get done by tomorrow <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"> No, I don’t work on it much, don’t call me pathetic for taking that long <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/basic-file-hashing/436043/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/basic-file-hashing/436043/17</link>
        <pubDate>Mon, 12 Mar 2012 03:29:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-436043-17</guid>
        <source url="https://forum.moparisthebest.com/t/basic-file-hashing/436043.rss">Basic File Hashing</source>
      </item>
      <item>
        <title>Basic File Hashing</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>Or how about just Integer.toBinaryString(byte)</p>
<p>An integer and a byte of the same value will have the same bit sequence, and the toBinaryString method cuts off leading zero’s.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/basic-file-hashing/436043/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/basic-file-hashing/436043/16</link>
        <pubDate>Mon, 12 Mar 2012 03:25:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-436043-16</guid>
        <source url="https://forum.moparisthebest.com/t/basic-file-hashing/436043.rss">Basic File Hashing</source>
      </item>
      <item>
        <title>Basic File Hashing</title>
        <dc:creator><![CDATA[@eyeownyew Eyeownyew]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/eyeownyew">@eyeownyew</a> wrote:</p>
          <blockquote>
              <p>[quote=“Davidi2, post:14, topic:436043”][quote author=eyeownyew link=topic=538767.msg3942531#msg3942531 date=1331521578]</p>
<aside class="quote">
<blockquote>
<pre><code class="lang-auto">byte[] fileBytes = //...
MessageDigest messageDigest = MessageDigest.getInstance("MD5");
byte[] digest = messageDigest.digest(fileBytes);
String result = new String(Hex.encodeHex(digest));</code></pre>
</blockquote>
</aside>
<p>…Where’s the fun in that? <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"><br>
[/quote]The fun is in all the extra time you then get to use for anything else <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>Oh, and to answer your question on irc:</p>
<pre><code class="lang-auto"></code></pre>
<p>Can I convert a single byte to an int, making it 26 0s and then 6 digits representing the binary pattern, then bitshift &lt;&lt; 26 then splice the string to get the string of bits? I know that sounds over-complicated, but it’s really the only way I can think of…</p>
<p>Edit:</p>
<p>Nevermind… In base64 you get 24 bytes, then you try to convert it to 32 by splicing it into 6 bit strings and then converting it back to 8 (using 00xxxxxx)… Is there any way to combine what I said in this edit with what I said before, so that I can just get the int, convert it to bits, and not worry about the shifting?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/basic-file-hashing/436043/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/basic-file-hashing/436043/15</link>
        <pubDate>Mon, 12 Mar 2012 03:16:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-436043-15</guid>
        <source url="https://forum.moparisthebest.com/t/basic-file-hashing/436043.rss">Basic File Hashing</source>
      </item>
      <item>
        <title>Basic File Hashing</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>[quote=“eyeownyew, post:13, topic:436043”][quote author=t4 link=topic=538767.msg3942528#msg3942528 date=1331521222]</p>
<pre><code class="lang-auto">byte[] fileBytes = //...
MessageDigest messageDigest = MessageDigest.getInstance("MD5");
byte[] digest = messageDigest.digest(fileBytes);
String result = new String(Hex.encodeHex(digest));</code></pre>
<p>[/quote]<br>
…Where’s the fun in that? ;)[/quote]The fun is in all the extra time you then get to use for anything else <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>Oh, and to answer your question on irc:</p>
<pre><code class="lang-auto"></code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/basic-file-hashing/436043/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/basic-file-hashing/436043/14</link>
        <pubDate>Mon, 12 Mar 2012 03:07:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-436043-14</guid>
        <source url="https://forum.moparisthebest.com/t/basic-file-hashing/436043.rss">Basic File Hashing</source>
      </item>
      <item>
        <title>Basic File Hashing</title>
        <dc:creator><![CDATA[@eyeownyew Eyeownyew]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/eyeownyew">@eyeownyew</a> wrote:</p>
          <blockquote>
              <p>[quote=“t4, post:12, topic:436043”]<code>
byte[] fileBytes = //...
MessageDigest messageDigest = MessageDigest.getInstance("MD5");
byte[] digest = messageDigest.digest(fileBytes);
String result = new String(Hex.encodeHex(digest));
</code>[/quote]<br>
…Where’s the fun in that? <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/basic-file-hashing/436043/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/basic-file-hashing/436043/13</link>
        <pubDate>Mon, 12 Mar 2012 03:06:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-436043-13</guid>
        <source url="https://forum.moparisthebest.com/t/basic-file-hashing/436043.rss">Basic File Hashing</source>
      </item>
      <item>
        <title>Basic File Hashing</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <pre><code class="lang-auto">byte[] fileBytes = //...
MessageDigest messageDigest = MessageDigest.getInstance("MD5");
byte[] digest = messageDigest.digest(fileBytes);
String result = new String(Hex.encodeHex(digest));</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/basic-file-hashing/436043/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/basic-file-hashing/436043/12</link>
        <pubDate>Mon, 12 Mar 2012 03:00:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-436043-12</guid>
        <source url="https://forum.moparisthebest.com/t/basic-file-hashing/436043.rss">Basic File Hashing</source>
      </item>
      <item>
        <title>Basic File Hashing</title>
        <dc:creator><![CDATA[@eyeownyew Eyeownyew]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/eyeownyew">@eyeownyew</a> wrote:</p>
          <blockquote>
              <pre><code class="lang-auto">public String n = "001111";
public void convert() {
	int nn = 0;
	int l = n.length();
	int index = 0;
	int m = 0;
	int[] values = new int[] {32, 16, 8, 4, 2, 1};
	for (int i = 0; i &lt; l; i++) {
		m = (int)n.charAt((l-index)-1);
		m -= 48;	
		m *= values[(l-index)-1];
		nn += m;
		m = 0;
		index++;
	}
	System.out.println(""+nn);
}</code></pre>
<p>Complete.<br>
Output: 15.</p>
<p>Now to implement base64…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/basic-file-hashing/436043/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/basic-file-hashing/436043/11</link>
        <pubDate>Mon, 12 Mar 2012 02:43:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-436043-11</guid>
        <source url="https://forum.moparisthebest.com/t/basic-file-hashing/436043.rss">Basic File Hashing</source>
      </item>
      <item>
        <title>Basic File Hashing</title>
        <dc:creator><![CDATA[@meiscooldude meiscooldude]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/meiscooldude">@meiscooldude</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="2" data-topic="436043">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/sinisoul/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> sinisoul:</div>
<blockquote>
<p>Looks more like obfuscation. Not really ‘hashing’ since one of the key qualities of a hash is that you cannot retrieve the hash with a reverse algorithm. I suggest to you: <a href="http://en.wikipedia.org/wiki/Base64" rel="nofollow noopener">http://en.wikipedia.org/wiki/Base64</a> or 128, 256, whatever. Computer saavy people could identify what base you were using but most people will be too lazy to write a program to decipher it if it’s in an uncommon base.</p>
</blockquote>
</aside>
<p>Laziness is the only reason the web seems as secure as it does.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/basic-file-hashing/436043/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/basic-file-hashing/436043/10</link>
        <pubDate>Mon, 12 Mar 2012 01:45:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-436043-10</guid>
        <source url="https://forum.moparisthebest.com/t/basic-file-hashing/436043.rss">Basic File Hashing</source>
      </item>
      <item>
        <title>Basic File Hashing</title>
        <dc:creator><![CDATA[@eyeownyew Eyeownyew]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/eyeownyew">@eyeownyew</a> wrote:</p>
          <blockquote>
              <p><code>
public String n = "001111";
public void convert() {
	int nn = 0;
	int l = n.length();
	int index = 0;
	int m = 0;
	for (int i = 0; i &lt; l; i++) {
		m = (int)n.charAt(l-++index);
		m *= 2^(l-index);
		nn += m;
		m = 0;
	}
	System.out.println(""+nn);
}</code><br>
Prints out 926, should be 15.<br>
Keeps giving errors, or the wrong number. I’ve messed with it a bit, I can’t figure out what seems to be wrong. It’s definitely something with the math. See anything?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/basic-file-hashing/436043/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/basic-file-hashing/436043/9</link>
        <pubDate>Mon, 12 Mar 2012 00:37:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-436043-9</guid>
        <source url="https://forum.moparisthebest.com/t/basic-file-hashing/436043.rss">Basic File Hashing</source>
      </item>
      <item>
        <title>Basic File Hashing</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>[quote=“eyeownyew, post:7, topic:436043”]Hm, alright. Can a different table be used than the one that is commonly used? Not sure what the point would be, but yeah…</p>
<p>And to convert the 6 bits to a number must I create my own method or does java have a simpler process of doing so?[/quote]</p>
<p><a href="http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Integer.html#toString" rel="nofollow noopener">http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Integer.html#toString</a>(int, int)</p>
<p>Something to look at as well but it doesn’t really fit what you want.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/basic-file-hashing/436043/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/basic-file-hashing/436043/8</link>
        <pubDate>Mon, 12 Mar 2012 00:13:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-436043-8</guid>
        <source url="https://forum.moparisthebest.com/t/basic-file-hashing/436043.rss">Basic File Hashing</source>
      </item>
      <item>
        <title>Basic File Hashing</title>
        <dc:creator><![CDATA[@eyeownyew Eyeownyew]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/eyeownyew">@eyeownyew</a> wrote:</p>
          <blockquote>
              <p>Hm, alright. Can a different table be used than the one that is commonly used? Not sure what the point would be, but yeah…</p>
<p>And to convert the 6 bits to a number must I create my own method or does java have a simpler process of doing so?<br>
Java’s possible already created method:<br>
0x001011 = 11 = K</p>
<p>or<br>
My method:<br>
001011 = 1(2^0) + 1(2^1) … etc</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/basic-file-hashing/436043/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/basic-file-hashing/436043/7</link>
        <pubDate>Mon, 12 Mar 2012 00:10:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-436043-7</guid>
        <source url="https://forum.moparisthebest.com/t/basic-file-hashing/436043.rss">Basic File Hashing</source>
      </item>
      <item>
        <title>Basic File Hashing</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>[quote=“eyeownyew, post:5, topic:436043”]Alright, I now understand how base64 works… What would be an example of converting a 6 bit string into a byte? I know you just add two 0s before, but I’m not sure if you accomplish it this way:</p>
<p>byte b = 0x110100;[/quote]</p>
<p>You have to reference it to a character look up table.</p>
<pre><code class="lang-auto">characters = [ '0', '1', '2', '3', '4', ... ]</code></pre>
<pre><code class="lang-auto">string = ""
for each 6 bits in file data do
    string = string + characters[6 bits]
end
#Take some consideration of padding, don't know how that'd look</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/basic-file-hashing/436043/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/basic-file-hashing/436043/6</link>
        <pubDate>Mon, 12 Mar 2012 00:04:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-436043-6</guid>
        <source url="https://forum.moparisthebest.com/t/basic-file-hashing/436043.rss">Basic File Hashing</source>
      </item>
      <item>
        <title>Basic File Hashing</title>
        <dc:creator><![CDATA[@eyeownyew Eyeownyew]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/eyeownyew">@eyeownyew</a> wrote:</p>
          <blockquote>
              <p>Alright, I now understand how base64 works… What would be an example of converting a 6 bit string into a byte? I know you just add two 0s before, but I’m not sure if you accomplish it this way:</p>
<p>byte b = 0x110100;</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/basic-file-hashing/436043/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/basic-file-hashing/436043/5</link>
        <pubDate>Sun, 11 Mar 2012 23:54:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-436043-5</guid>
        <source url="https://forum.moparisthebest.com/t/basic-file-hashing/436043.rss">Basic File Hashing</source>
      </item>
      <item>
        <title>Basic File Hashing</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>Read my edit.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/basic-file-hashing/436043/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/basic-file-hashing/436043/4</link>
        <pubDate>Sun, 11 Mar 2012 23:45:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-436043-4</guid>
        <source url="https://forum.moparisthebest.com/t/basic-file-hashing/436043.rss">Basic File Hashing</source>
      </item>
      <item>
        <title>Basic File Hashing</title>
        <dc:creator><![CDATA[@eyeownyew Eyeownyew]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/eyeownyew">@eyeownyew</a> wrote:</p>
          <blockquote>
              <p>[quote=“sinisoul, post:2, topic:436043”]Looks more like obfuscation. Not really ‘hashing’ since one of the key qualities of a hash is that you cannot retrieve the hash with a reverse algorithm.</p>
<p>inb4 t4[/quote]<br>
Ah, I’m not familiar with the specifics of each type of ‘encryption’… (I know this isn’t actual encryption)</p>
<p>But like I said, the main point is just to keep users from modifying files that I don’t wish them to see. Saved character files and those sorts of things.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/basic-file-hashing/436043/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/basic-file-hashing/436043/3</link>
        <pubDate>Sun, 11 Mar 2012 23:44:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-436043-3</guid>
        <source url="https://forum.moparisthebest.com/t/basic-file-hashing/436043.rss">Basic File Hashing</source>
      </item>
      <item>
        <title>Basic File Hashing</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>Looks more like obfuscation. Not really ‘hashing’ since one of the key qualities of a hash is that you cannot retrieve the hash with a reverse algorithm. I suggest to you: <a href="http://en.wikipedia.org/wiki/Base64" rel="nofollow noopener">http://en.wikipedia.org/wiki/Base64</a> or 128, 256, whatever. Computer saavy people could identify what base you were using but most people will be too lazy to write a program to decipher it if it’s in an uncommon base.</p>
<p>Runescape clients have a great example of base 37 enciphering!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/basic-file-hashing/436043/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/basic-file-hashing/436043/2</link>
        <pubDate>Sun, 11 Mar 2012 23:42:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-436043-2</guid>
        <source url="https://forum.moparisthebest.com/t/basic-file-hashing/436043.rss">Basic File Hashing</source>
      </item>
      <item>
        <title>Basic File Hashing</title>
        <dc:creator><![CDATA[@eyeownyew Eyeownyew]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/eyeownyew">@eyeownyew</a> wrote:</p>
          <blockquote>
              <p>Hello, I’ve been making a basic file hash. The only purpose of this is to make files unreadable to the human eye.<br>
Here’s the code, I’m open to criticism and tips (as I should be)…</p>
<p>IO</p>
<p>[code=java]<br>
import <a href="http://java.io" rel="nofollow noopener">java.io</a>.*;</p>
<p>public class IO {</p>
<p>public String test = “./Test.txt”;</p>
<p>byte[] fileBytes;</p>
<p>public void in() {<br>
try {<br>
File file = new File(test);<br>
int fileLength = (int)file.length();<br>
fileBytes = new byte[fileLength];<br>
DataInputStream dos = new DataInputStream(new BufferedInputStream(new FileInputStream(test)));<br>
dos.readFully(fileBytes, 0, fileLength);<br>
dos.close();<br>
String outputflip = “”;<br>
for (int i = 0; i &lt; fileLength; i++) {<br>
outputflip = outputflip + (char)fileBytes[i];<br>
fileBytes[i] = (byte)~fileBytes[i];<br>
outputflip = outputflip + (char)fileBytes[i] + “\n”;<br>
}<br>
System.out.println(outputflip);<br>
out();<br>
} catch(Exception ex) {<br>
ex.printStackTrace();<br>
}<br>
}<br>
public void out() {<br>
try {<br>
File file = new File(test);<br>
BufferedWriter out = new BufferedWriter(new FileWriter(file));<br>
String outS = “”;<br>
for (int i = 0; i &lt; fileBytes.length; i++){<br>
fileBytes[i] = (byte)~fileBytes[i];<br>
System.out.print(""+(char)fileBytes[i]);<br>
}<br>
System.out.println("");<br>
for (int i = 0; i &lt; fileBytes.length; i++){<br>
outS = outS+(char)fileBytes[i];<br>
}<br>
out.write(outS);<br>
out.flush();<br>
out.close();<br>
} catch (Exception e) {<br>
e.printStackTrace();<br>
}</p>
<p>}</p>
<p>}[/code]<br>
Try</p>
<p>[code=java]</p>
<p>public class Try implements Runnable {</p>
<p>public IO io;</p>
<p>public static void main(String[] args) {<br>
try {<br>
Thread thread = new Thread(new Try());<br>
thread.run();<br>
} catch (Exception e) {<br>
e.printStackTrace();<br>
}<br>
}</p>
<p>public void run() {</p>
<pre><code>io = new IO();
io.in();
/*while(true){
	
}*/
</code></pre>
<p>}</p>
<p>}[/code]<br>
Sample input/output:<br>
Text.txt</p>
<pre><code class="lang-auto">ssssss</code></pre>
<p>Console</p>
<p>[code]<br>
s?<br>
s?<br>
s?<br>
s?<br>
s?<br>
s?</p>
<p>ssssss<br>
Press any key to continue . . .[/code]</p>
<p>Some things are thrown in there for later manipulation… Don’t comment on the class names, I don’t really care about how they’re named for now.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/basic-file-hashing/436043/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/basic-file-hashing/436043/1</link>
        <pubDate>Sun, 11 Mar 2012 23:36:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-436043-1</guid>
        <source url="https://forum.moparisthebest.com/t/basic-file-hashing/436043.rss">Basic File Hashing</source>
      </item>
  </channel>
</rss>
