<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Better obelisks</title>
    <link>https://forum.moparisthebest.com/t/better-obelisks/525130</link>
    <description>Made this for a side-project of mine, I took the old obelisk handling, optimized it, made some code better, doesn&#39;t use [i]process[/i] anymore, read the documentation for info. Need any help feel free to post.

[code=java]
package net.gielinor.game.model.object.obelisks;

import net.gielinor.Server;
import net.gielinor.game.content.Teleporting;
import net.gielinor.game.model.object.GameObject;
import net.gielinor.game.model.player.Player;
import net.gielinor.game.model.player.PlayerHandler;
import net.gielinor.task.Task;
import net.gielinor.util.RandomUtility;

/**
 * Astrect Development
 * 
 * @author Ryley Kimmel &lt;ryley.kimmel@live.com&gt; (Kept his shitty format, made it better)
 * @author Sanity
 * Jul 16, 2013
 * ObeliskObjectHandler.java
 * 
 * @see java.lang.Object
 */
public final class ObeliskObjectHandler {

	/**
	 * Astrect Development
	 * 
	 * @author Ryley Kimmel &lt;ryley.kimmel@live.com&gt;
	 * Jul 16, 2013
	 * ObeliskObjectHandler#Obelisk.java
	 * 
	 * @see java.lang.Enum
	 */
	public enum Obelisk {
		/**
		 * The obelisk port in level 44 wilderness.
		 */
		PORT_44(2978, 3864),

		/**
		 * The obelisk port in level 27 wilderness.
		 */
		PORT_27(3033, 3730),

		/**
		 * The obelisk port in level 35 wilderness.
		 */
		PORT_35(3104, 3792),

		/**
		 * The obelisk port in level 13 wilderness.
		 */
		PORT_13(3154, 3618),

		/**
		 * The obelisk port in level 19 wilderness.
		 */
		PORT_19(3225, 3665),

		/**
		 * The obelisk port in level 50 wilderness.
		 */
		PORT_50(3305, 3914);

		/**
		 * An &lt;code&gt;int&lt;/code&gt; array of coordinates.
		 */
		private final int[] coordinates;

		/**
		 * A flag to determine whether or not the obelisk is activated.
		 */
		private boolean activated = false;

		/**
		 * Constructs a new {@link Obelisk}.
		 * @param coordinates	The coordinates of this obelisk port.
		 */
		private Obelisk(int... coordinates) {
			this.coordinates = coordinates;
		}

		/**
		 * Returns the id of the obelisk object.
		 * @return	The id of the obelisk object.
		 */
		public final int getId() {
			return 14826 + ordinal();
		}

		/**
		 * Returns whether or not the obelisk port is activated.
		 * @return	&lt;code&gt;true&lt;/code&gt; if the obelisk port is activated, otherwise &lt;code&gt;false&lt;/code&gt;
		 */
		public final boolean isActivated() {
			return activated;
		}

		/**
		 * Returns an &lt;code&gt;int&lt;/code&gt; array of coordinates for this obelisk port.
		 * @return	The coordinates &lt;code&gt;int&lt;/code&gt; array.
		 */
		public final int[] getCoordinates() {
			return coordinates;
		}

		/**
		 * Sets the {@link #activated} flag to that of another value.
		 * @param activated	The new value of the activated flag.
		 */
		public final void setActivated(boolean activated) {
			this.activated = activated;
		}

		/**
		 * Returns a {@link Obelisk} {@link Enum} object if the specified parameters are flagged &lt;code&gt;true&lt;/code&gt;
		 * @param id 	The id of the obelisk port.
		 * @return	A new {@link Obelisk} {@link Enum} object if the specified parameters 
		 * 			are flagged &lt;code&gt;true&lt;/code&gt;, otherwise &lt;code&gt;null&lt;/code&gt;.
		 */
		public static Obelisk forId(int id) {
			for (Obelisk obelisk : Obelisk.values()) {
				if (obelisk != null &amp;&amp; obelisk.getId() == id) {
					return obelisk;
				}
			}
			return null;
		}

	}

	/**
	 * A static single instance accessory (singleton) of {@link ObeliskObjectHandler}. 
	 */
	private static final ObeliskObjectHandler instance = new ObeliskObjectHandler();

	/**
	 * Returns the singleton instance.
	 * @return	The singleton instance.
	 */
	public static ObeliskObjectHandler getInstance() {
		return instance;
	}

	/**
	 * Starts the obelisk port, teleporting a {@link Player} to another port which is pseudo-randomly generated.
	 * @param id	The obelisk ports object id.
	 */
	public void startObelisk(int id) {
		final Obelisk obelisk = Obelisk.forId(id);

		if (obelisk != null) {
			if (!obelisk.isActivated()) {
				obelisk.setActivated(true);
			}
			for (int i = 0; i &lt; 4; i++) {
				Server.objectManager.addObject(new GameObject(14825, (i == 1 || i == 3) ? obelisk.getCoordinates()[0] + 4 : obelisk.getCoordinates()[0], (i == 2 || i == 3) ? obelisk.getCoordinates()[1] + 4 : obelisk.getCoordinates()[1], 0, -1, 10, obelisk.getId(), 16));
			}
		}
		Server.getTaskScheduler().schedule(new Task(16) {
			@Override
			protected void execute() {
				if (obelisk != null) {
					if (obelisk.isActivated()) {
						obelisk.setActivated(false);
					}
					teleportObelisk(obelisk.getId());
				}
				stop();
			}
		});
	}

	/**
	 * Handles the teleportation of the {@link Player} to the pseudo-randomly generated port.
	 * @param port	The initial obelisk ports object id.
	 */
	public void teleportObelisk(int port) {

		Obelisk currentPort = Obelisk.forId(port);
		Obelisk randomPort = getRandomPort(port);

		if (currentPort != null) {
			for (Player player : PlayerHandler.players) {
				if (player != null) {
					int xOffset = player.absX - currentPort.getCoordinates()[0];
					int yOffset = player.absY - currentPort.getCoordinates()[1];
					if (player.goodDistance(player.getX(), player.getY(), currentPort.getCoordinates()[0] + 2, currentPort.getCoordinates()[1] + 2, 1)) {
						if (randomPort != null) {
							Teleporting.startTeleport2(player, randomPort.getCoordinates()[0] + xOffset, randomPort.getCoordinates()[1] + yOffset);
						}
					}
				}
			}
		}
	}

	/**
	 * Pseudo-randomly generates a new obelisk port to teleport to.
	 * @param port	The initial obelisk ports object id.
	 * @return	The new obelisk port.
	 */
	private Obelisk getRandomPort(int port) {
		int random = RandomUtility.random(Obelisk.values().length - 1);
		while (random == port) {
			random = RandomUtility.random(Obelisk.values().length - 1);
		}
		return Obelisk.values()[random];
	}

}[/code]</description>
    
    <lastBuildDate>Tue, 16 Jul 2013 13:18:05 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/better-obelisks/525130.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Better obelisks</title>
        <dc:creator><![CDATA[@Java-RSPS-Noob Java-RSPS-Noob]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/java-rsps-noob">@Java-RSPS-Noob</a> wrote:</p>
          <blockquote>
              <p>[quote=“AtomicInt_, post:3, topic:525130”]ObjectManager#process which is called in the main tick.[/quote]hmm really? Will have to look into this more.</p>
<p>rep++</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/better-obelisks/525130/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/better-obelisks/525130/4</link>
        <pubDate>Tue, 16 Jul 2013 13:18:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-525130-4</guid>
        <source url="https://forum.moparisthebest.com/t/better-obelisks/525130.rss">Better obelisks</source>
      </item>
      <item>
        <title>Better obelisks</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <p>ObjectManager#process which is called in the main tick.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/better-obelisks/525130/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/better-obelisks/525130/3</link>
        <pubDate>Tue, 16 Jul 2013 13:13:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-525130-3</guid>
        <source url="https://forum.moparisthebest.com/t/better-obelisks/525130.rss">Better obelisks</source>
      </item>
      <item>
        <title>Better obelisks</title>
        <dc:creator><![CDATA[@Java-RSPS-Noob Java-RSPS-Noob]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/java-rsps-noob">@Java-RSPS-Noob</a> wrote:</p>
          <blockquote>
              <p>I had no idea the old one used process thanks for pointing that out/for the contrib.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/better-obelisks/525130/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/better-obelisks/525130/2</link>
        <pubDate>Tue, 16 Jul 2013 13:03:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-525130-2</guid>
        <source url="https://forum.moparisthebest.com/t/better-obelisks/525130.rss">Better obelisks</source>
      </item>
      <item>
        <title>Better obelisks</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <p>Made this for a side-project of mine, I took the old obelisk handling, optimized it, made some code better, doesn’t use <span class="bbcode-i">process</span> anymore, read the documentation for info. Need any help feel free to post.</p>
<p>[code=java]<br>
package net.gielinor.game.model.object.obelisks;</p>
<p>import net.gielinor.Server;<br>
import net.gielinor.game.content.Teleporting;<br>
import net.gielinor.game.model.object.GameObject;<br>
import net.gielinor.game.model.player.Player;<br>
import net.gielinor.game.model.player.PlayerHandler;<br>
import net.gielinor.task.Task;<br>
import net.gielinor.util.RandomUtility;</p>
<p>/**</p>
<ul>
<li>
<p>Astrect Development</p>
</li>
<li>
</li>
<li>
<p><span class="mention">@author</span> Ryley Kimmel <a href="mailto:ryley.kimmel@live.com">ryley.kimmel@live.com</a> (Kept his shitty format, made it better)</p>
</li>
<li>
<p><span class="mention">@author</span> Sanity</p>
</li>
<li>
<p>Jul 16, 2013</p>
</li>
<li>
<p>ObeliskObjectHandler.java</p>
</li>
<li>
</li>
<li>
<p><span class="mention">@see</span> java.lang.Object<br>
*/<br>
public final class ObeliskObjectHandler {</p>
<p>/**</p>
<ul>
<li>
<p>Astrect Development</p>
</li>
<li>
</li>
<li>
<p><span class="mention">@author</span> Ryley Kimmel <a href="mailto:ryley.kimmel@live.com">ryley.kimmel@live.com</a></p>
</li>
<li>
<p>Jul 16, 2013</p>
</li>
<li>
<p>ObeliskObjectHandler#Obelisk.java</p>
</li>
<li>
</li>
<li>
<p><span class="mention">@see</span> java.lang.Enum<br>
<em>/<br>
public enum Obelisk {<br>
/</em>*</p>
<ul>
<li>The obelisk port in level 44 wilderness.<br>
*/<br>
PORT_44(2978, 3864),</li>
</ul>
<p>/**</p>
<ul>
<li>The obelisk port in level 27 wilderness.<br>
*/<br>
PORT_27(3033, 3730),</li>
</ul>
<p>/**</p>
<ul>
<li>The obelisk port in level 35 wilderness.<br>
*/<br>
PORT_35(3104, 3792),</li>
</ul>
<p>/**</p>
<ul>
<li>The obelisk port in level 13 wilderness.<br>
*/<br>
PORT_13(3154, 3618),</li>
</ul>
<p>/**</p>
<ul>
<li>The obelisk port in level 19 wilderness.<br>
*/<br>
PORT_19(3225, 3665),</li>
</ul>
<p>/**</p>
<ul>
<li>The obelisk port in level 50 wilderness.<br>
*/<br>
PORT_50(3305, 3914);</li>
</ul>
<p>/**</p>
<ul>
<li>An <code>int</code> array of coordinates.<br>
*/<br>
private final int[] coordinates;</li>
</ul>
<p>/**</p>
<ul>
<li>A flag to determine whether or not the obelisk is activated.<br>
*/<br>
private boolean activated = false;</li>
</ul>
<p>/**</p>
<ul>
<li>Constructs a new {<a class="mention" href="/u/link">@link</a> Obelisk}.</li>
<li>
<a class="mention" href="/u/param">@param</a> coordinates	The coordinates of this obelisk port.<br>
*/<br>
private Obelisk(int… coordinates) {<br>
this.coordinates = coordinates;<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Returns the id of the obelisk object.</li>
<li>
<a class="mention" href="/u/return">@return</a>	The id of the obelisk object.<br>
*/<br>
public final int getId() {<br>
return 14826 + ordinal();<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Returns whether or not the obelisk port is activated.</li>
<li>
<a class="mention" href="/u/return">@return</a>	<code>true</code> if the obelisk port is activated, otherwise <code>false</code><br>
*/<br>
public final boolean isActivated() {<br>
return activated;<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Returns an <code>int</code> array of coordinates for this obelisk port.</li>
<li>
<a class="mention" href="/u/return">@return</a>	The coordinates <code>int</code> array.<br>
*/<br>
public final int[] getCoordinates() {<br>
return coordinates;<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Sets the {<a class="mention" href="/u/link">@link</a> <span class="hashtag">#activated</span>} flag to that of another value.</li>
<li>
<a class="mention" href="/u/param">@param</a> activated	The new value of the activated flag.<br>
*/<br>
public final void setActivated(boolean activated) {<br>
this.activated = activated;<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Returns a {<a class="mention" href="/u/link">@link</a> Obelisk} {<a class="mention" href="/u/link">@link</a> Enum} object if the specified parameters are flagged <code>true</code>
</li>
<li>
<a class="mention" href="/u/param">@param</a> id 	The id of the obelisk port.</li>
<li>
<a class="mention" href="/u/return">@return</a>	A new {<a class="mention" href="/u/link">@link</a> Obelisk} {<a class="mention" href="/u/link">@link</a> Enum} object if the specified parameters</li>
<li>
<pre><code> 	are flagged &lt;code&gt;true&lt;/code&gt;, otherwise &lt;code&gt;null&lt;/code&gt;.
</code></pre>
</li>
</ul>
<p>*/<br>
public static Obelisk forId(int id) {<br>
for (Obelisk obelisk : Obelisk.values()) {<br>
if (obelisk != null &amp;&amp; obelisk.getId() == id) {<br>
return obelisk;<br>
}<br>
}<br>
return null;<br>
}</p>
</li>
</ul>
<p>}</p>
<p>/**</p>
<ul>
<li>A static single instance accessory (singleton) of {<a class="mention" href="/u/link">@link</a> ObeliskObjectHandler}.<br>
*/<br>
private static final ObeliskObjectHandler instance = new ObeliskObjectHandler();</li>
</ul>
<p>/**</p>
<ul>
<li>Returns the singleton instance.</li>
<li>
<a class="mention" href="/u/return">@return</a>	The singleton instance.<br>
*/<br>
public static ObeliskObjectHandler getInstance() {<br>
return instance;<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>
<p>Starts the obelisk port, teleporting a {<a class="mention" href="/u/link">@link</a> Player} to another port which is pseudo-randomly generated.</p>
</li>
<li>
<p><a class="mention" href="/u/param">@param</a> id	The obelisk ports object id.<br>
*/<br>
public void startObelisk(int id) {<br>
final Obelisk obelisk = Obelisk.forId(id);</p>
<p>if (obelisk != null) {<br>
if (!obelisk.isActivated()) {<br>
obelisk.setActivated(true);<br>
}<br>
for (int i = 0; i &lt; 4; i++) {<br>
Server.objectManager.addObject(new GameObject(14825, (i == 1 || i == 3) ? obelisk.getCoordinates()[0] + 4 : obelisk.getCoordinates()[0], (i == 2 || i == 3) ? obelisk.getCoordinates()[1] + 4 : obelisk.getCoordinates()[1], 0, -1, 10, obelisk.getId(), 16));<br>
}<br>
}<br>
Server.getTaskScheduler().schedule(new Task(16) {<br>
<a class="mention" href="/u/override">@Override</a><br>
protected void execute() {<br>
if (obelisk != null) {<br>
if (obelisk.isActivated()) {<br>
obelisk.setActivated(false);<br>
}<br>
teleportObelisk(obelisk.getId());<br>
}<br>
stop();<br>
}<br>
});<br>
}</p>
</li>
</ul>
<p>/**</p>
<ul>
<li>
<p>Handles the teleportation of the {<a class="mention" href="/u/link">@link</a> Player} to the pseudo-randomly generated port.</p>
</li>
<li>
<p><a class="mention" href="/u/param">@param</a> port	The initial obelisk ports object id.<br>
*/<br>
public void teleportObelisk(int port) {</p>
<p>Obelisk currentPort = Obelisk.forId(port);<br>
Obelisk randomPort = getRandomPort(port);</p>
<p>if (currentPort != null) {<br>
for (Player player : PlayerHandler.players) {<br>
if (player != null) {<br>
int xOffset = player.absX - currentPort.getCoordinates()[0];<br>
int yOffset = player.absY - currentPort.getCoordinates()[1];<br>
if (player.goodDistance(player.getX(), player.getY(), currentPort.getCoordinates()[0] + 2, currentPort.getCoordinates()[1] + 2, 1)) {<br>
if (randomPort != null) {<br>
Teleporting.startTeleport2(player, randomPort.getCoordinates()[0] + xOffset, randomPort.getCoordinates()[1] + yOffset);<br>
}<br>
}<br>
}<br>
}<br>
}<br>
}</p>
</li>
</ul>
<p>/**</p>
<ul>
<li>Pseudo-randomly generates a new obelisk port to teleport to.</li>
<li>
<a class="mention" href="/u/param">@param</a> port	The initial obelisk ports object id.</li>
<li>
<a class="mention" href="/u/return">@return</a>	The new obelisk port.<br>
*/<br>
private Obelisk getRandomPort(int port) {<br>
int random = RandomUtility.random(Obelisk.values().length - 1);<br>
while (random == port) {<br>
random = RandomUtility.random(Obelisk.values().length - 1);<br>
}<br>
return Obelisk.values()[random];<br>
}</li>
</ul>
</li>
</ul>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/better-obelisks/525130/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/better-obelisks/525130/1</link>
        <pubDate>Tue, 16 Jul 2013 06:52:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-525130-1</guid>
        <source url="https://forum.moparisthebest.com/t/better-obelisks/525130.rss">Better obelisks</source>
      </item>
  </channel>
</rss>
