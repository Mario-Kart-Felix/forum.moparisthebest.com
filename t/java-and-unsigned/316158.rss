<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Java and Unsigned</title>
    <link>https://forum.moparisthebest.com/t/java-and-unsigned/316158</link>
    <description>I was looking over Block Ciphers after realising I know nothing about them, partically ISAAC and XTEA because of the whole private server business, and it quickly occured to me that Java is disadvantaged in not having unsigned primative types (char doesn&#39;t count.) If you look at a few documented example Ciphers, the code is much larger and messy because the programmer has to do all the bit operations manually.

So I then search around a bit into why Java doesn&#39;t have these and the reason apparently was that having signed and unsigned types and i found this
&lt;blockquote&gt;Gosling: For me as a language designer, which I don&#39;t really count
myself as these days, what &quot;simple&quot; really ended up meaning was could
I expect J. Random Developer to hold the spec in his head. That
definition says that, for instance, Java isn&#39;t -- and in fact a lot of
these languages end up with a lot of corner cases, things that nobody
really understands. Quiz any C developer about unsigned, and pretty
soon you discover that almost no C developers actually understand what
goes on with unsigned, what unsigned arithmetic is. Things like that
made C complex. The language part of Java is, I think, pretty
simple. The libraries you have to look up.&lt;/blockquote&gt;


So that got me wondering 1) Do you understand unsigned arithmatic? 2) Would you like unsigned implemented into java?</description>
    
    <lastBuildDate>Fri, 27 Nov 2009 23:03:05 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/java-and-unsigned/316158.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Java and Unsigned</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>dear idiot, do not use examples where both operands are constants, sincerely frank</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-and-unsigned/316158/33">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-and-unsigned/316158/33</link>
        <pubDate>Fri, 27 Nov 2009 23:03:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-316158-33</guid>
        <source url="https://forum.moparisthebest.com/t/java-and-unsigned/316158.rss">Java and Unsigned</source>
      </item>
      <item>
        <title>Java and Unsigned</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>[quote=“abraham2119, post:31, topic:316158”][quote author=oksuper_ link=topic=412740.msg3043973#msg3043973 date=1259345264]<br>
bitwise and (iand) produced an int, and therefore you need a cast.<br>
[/quote]</p>
<p>[quote author=abraham2119 link=topic=412740.msg3044056#msg3044056 date=1259349631]<br>
try doing ‘byte b = 5 &amp; 1;’ and compiler will NOT complain even though it is using bitwise and (iand), it is valid to be stored as a byte because the result is within range<br>
[/quote][/quote]</p>
<p>look at the operand to the and… 1. 1 bit will surely not overflow a byte.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-and-unsigned/316158/32">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-and-unsigned/316158/32</link>
        <pubDate>Fri, 27 Nov 2009 22:20:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-316158-32</guid>
        <source url="https://forum.moparisthebest.com/t/java-and-unsigned/316158.rss">Java and Unsigned</source>
      </item>
      <item>
        <title>Java and Unsigned</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="28" data-topic="316158">
<div class="title">
<div class="quote-controls"></div>
 oksuper_:</div>
<blockquote>
<p>bitwise and (iand) produced an int, and therefore you need a cast.</p>
</blockquote>
</aside>
<aside class="quote no-group quote-modified" data-post="29" data-topic="316158">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/abraham2119/40/5_513041d5f7104045db30895d3b90af16.png" class="avatar"> abraham2119:</div>
<blockquote>
<p>try doing ‘byte b = 5 &amp; 1;’ and compiler will NOT complain even though it is using bitwise and (iand), it is valid to be stored as a byte because the result is within range</p>
</blockquote>
</aside>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-and-unsigned/316158/31">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-and-unsigned/316158/31</link>
        <pubDate>Fri, 27 Nov 2009 20:45:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-316158-31</guid>
        <source url="https://forum.moparisthebest.com/t/java-and-unsigned/316158.rss">Java and Unsigned</source>
      </item>
      <item>
        <title>Java and Unsigned</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>[quote=“abraham2119, post:29, topic:316158”][quote author=oksuper_ link=topic=412740.msg3043973#msg3043973 date=1259345264]</p>
<p>[quote author=abraham2119 link=topic=412740.msg3043594#msg3043594 date=1259298152]</p>
<p>[quote author=oksuper_ link=topic=412740.msg3043560#msg3043560 date=1259293629]</p>
<aside class="quote no-group">
<blockquote>
<aside class="quote no-group">
<blockquote>
<p>you can always use the AND operator to transform the signed types to unsigned<br>
[/quote]… the point is that a signed data type wouldnt be able to hold an unsigned data type (of the same type)</p>
<p>ie:</p>
<pre><code class="lang-auto">byte b = -1 &amp; 0xFF; //compiler will bitch</code></pre>
<p>a byte is a signed data type and can therefore hold the values -128 (10000000) through 127 (01111111), and therefore wouldnt be able to store a value like ‘255’ (-1 &amp; 0xff). you would have to use at least a short for this, which is a waste of memory (16-bit type rather than an 8-bit type)</p>
</blockquote>
</aside>
<p>it bitches because you’re losing precision… l2 explicit cast<br>
[/quote]i was using that as an example, you idiot… l2 interpret posts</p>
</blockquote>
</aside>
<p>compiler doesn’t bitch because its out of range, like you were trying to portray, idiot, but rather because you are a fucking idiot and didn’t know that bitwise and (iand) produced an int, and therefore you need a cast. back down moron.<br>
[/quote]holy crap you are a moron. it is bitching because it is out of range, and can therefore have a loss of precision. try doing ‘byte b = 5 &amp; 1;’ and compiler will NOT complain even though it is using bitwise and (iand), it is valid to be stored as a byte because the result is within range, so it is not as you say you fucking idiot[/quote]</p>
<p>the compiler doesn’t do partial evaluation to check you fucking idiot. the compiler bitches because there is a POSSIBLE LOSS OF PRECISION. try this:</p>
<p><code>short s = 100;
byte b = s;</code><br>
there is no out-of-bounds there yet the compiler still complains. nice job you retard. i don’t understand why you always try and argue with your superiors when you’re dead wrong.[br][br][size=1]Posted on: November 27, 2009, 07:45:39 pm[/size][hr]ps:</p>
<p>[code]class L {</p>
<pre><code>byte b = 128 &amp; 0xFF;
</code></pre>
<p>}[/code]<br>
isn’t it funny when i’m right and you’re an idiot?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-and-unsigned/316158/30">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-and-unsigned/316158/30</link>
        <pubDate>Fri, 27 Nov 2009 19:44:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-316158-30</guid>
        <source url="https://forum.moparisthebest.com/t/java-and-unsigned/316158.rss">Java and Unsigned</source>
      </item>
      <item>
        <title>Java and Unsigned</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>[quote=“oksuper_, post:28, topic:316158”][quote author=abraham2119 link=topic=412740.msg3043594#msg3043594 date=1259298152]</p>
<p>[quote author=oksuper_ link=topic=412740.msg3043560#msg3043560 date=1259293629]</p>
<aside class="quote no-group">
<blockquote>
<aside class="quote no-group">
<blockquote>
<p>you can always use the AND operator to transform the signed types to unsigned<br>
[/quote]… the point is that a signed data type wouldnt be able to hold an unsigned data type (of the same type)</p>
<p>ie:</p>
<pre><code class="lang-auto">byte b = -1 &amp; 0xFF; //compiler will bitch</code></pre>
<p>a byte is a signed data type and can therefore hold the values -128 (10000000) through 127 (01111111), and therefore wouldnt be able to store a value like ‘255’ (-1 &amp; 0xff). you would have to use at least a short for this, which is a waste of memory (16-bit type rather than an 8-bit type)</p>
</blockquote>
</aside>
<p>it bitches because you’re losing precision… l2 explicit cast<br>
[/quote]i was using that as an example, you idiot… l2 interpret posts</p>
</blockquote>
</aside>
<p>compiler doesn’t bitch because its out of range, like you were trying to portray, idiot, but rather because you are a fucking idiot and didn’t know that bitwise and (iand) produced an int, and therefore you need a cast. back down moron.[/quote]holy crap you are a moron. it is bitching because it is out of range, and can therefore have a loss of precision. try doing ‘byte b = 5 &amp; 1;’ and compiler will NOT complain even though it is using bitwise and (iand), it is valid to be stored as a byte because the result is within range, so it is not as you say you fucking idiot</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-and-unsigned/316158/29">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-and-unsigned/316158/29</link>
        <pubDate>Fri, 27 Nov 2009 19:20:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-316158-29</guid>
        <source url="https://forum.moparisthebest.com/t/java-and-unsigned/316158.rss">Java and Unsigned</source>
      </item>
      <item>
        <title>Java and Unsigned</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>[quote=“abraham2119, post:25, topic:316158”][quote author=oksuper_ link=topic=412740.msg3043560#msg3043560 date=1259293629]</p>
<p>[quote author=abraham2119 link=topic=412740.msg3043384#msg3043384 date=1259283019]</p>
<aside class="quote no-group">
<blockquote>
<p>you can always use the AND operator to transform the signed types to unsigned<br>
[/quote]… the point is that a signed data type wouldnt be able to hold an unsigned data type (of the same type)</p>
<p>ie:</p>
<pre><code class="lang-auto">byte b = -1 &amp; 0xFF; //compiler will bitch</code></pre>
<p>a byte is a signed data type and can therefore hold the values -128 (10000000) through 127 (01111111), and therefore wouldnt be able to store a value like ‘255’ (-1 &amp; 0xff). you would have to use at least a short for this, which is a waste of memory (16-bit type rather than an 8-bit type)</p>
</blockquote>
</aside>
<p>it bitches because you’re losing precision… l2 explicit cast<br>
[/quote]i was using that as an example, you idiot… l2 interpret posts[/quote]</p>
<p>compiler doesn’t bitch because its out of range, like you were trying to portray, idiot, but rather because you are a fucking idiot and didn’t know that bitwise and (iand) produced an int, and therefore you need a cast. back down moron.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-and-unsigned/316158/28">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-and-unsigned/316158/28</link>
        <pubDate>Fri, 27 Nov 2009 18:07:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-316158-28</guid>
        <source url="https://forum.moparisthebest.com/t/java-and-unsigned/316158.rss">Java and Unsigned</source>
      </item>
      <item>
        <title>Java and Unsigned</title>
        <dc:creator><![CDATA[@zstars zstars]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zstars">@zstars</a> wrote:</p>
          <blockquote>
              <p>The fact that you can encode an unsigned integer as a non-matching type in order to be able to fit it in a smaller space is obvious and does not affect the nature of the problem. For all that matters, you could also fit a 32 bits logical unsigned value in an array of 4 bytes, or even in 3, if the upper domain of your concept is low enough, or take any other similar approach. But using any such approach has a high cost, be it processing, maintenability, clarity or a combination of those, which is generally greater than the memory inefficiency one itself, and which is obviously just a work-around and not supported naturally by the language.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-and-unsigned/316158/27">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-and-unsigned/316158/27</link>
        <pubDate>Fri, 27 Nov 2009 10:12:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-316158-27</guid>
        <source url="https://forum.moparisthebest.com/t/java-and-unsigned/316158.rss">Java and Unsigned</source>
      </item>
      <item>
        <title>Java and Unsigned</title>
        <dc:creator><![CDATA[@lawl lawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lawl">@lawl</a> wrote:</p>
          <blockquote>
              <p>[quote=“unlimitedorb, post:21, topic:316158”]What the hell is everybody on about? 64 bits is 64 bits just the same as 32 bits is 32 bits. The concept of unsigned and signed seems to have most of you confused. What does two’s complement representation mean to you? You can store just as much information in a signed integer as you can in an unsigned integer.</p>
<p>There is a distinction between information and representation; I suggest you learn it.[/quote]<br>
thats kinda what i said, but not as specifically</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-and-unsigned/316158/26">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-and-unsigned/316158/26</link>
        <pubDate>Fri, 27 Nov 2009 05:57:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-316158-26</guid>
        <source url="https://forum.moparisthebest.com/t/java-and-unsigned/316158.rss">Java and Unsigned</source>
      </item>
      <item>
        <title>Java and Unsigned</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>[quote=“oksuper_, post:24, topic:316158”][quote author=abraham2119 link=topic=412740.msg3043384#msg3043384 date=1259283019]</p>
<aside class="quote no-group">
<blockquote>
<p>you can always use the AND operator to transform the signed types to unsigned<br>
[/quote]… the point is that a signed data type wouldnt be able to hold an unsigned data type (of the same type)</p>
<p>ie:</p>
<pre><code class="lang-auto">byte b = -1 &amp; 0xFF; //compiler will bitch</code></pre>
<p>a byte is a signed data type and can therefore hold the values -128 (10000000) through 127 (01111111), and therefore wouldnt be able to store a value like ‘255’ (-1 &amp; 0xff). you would have to use at least a short for this, which is a waste of memory (16-bit type rather than an 8-bit type)</p>
</blockquote>
</aside>
<p>it bitches because you’re losing precision… l2 explicit cast[/quote]i was using that as an example, you idiot… l2 interpret posts</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-and-unsigned/316158/25">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-and-unsigned/316158/25</link>
        <pubDate>Fri, 27 Nov 2009 05:02:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-316158-25</guid>
        <source url="https://forum.moparisthebest.com/t/java-and-unsigned/316158.rss">Java and Unsigned</source>
      </item>
      <item>
        <title>Java and Unsigned</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>[quote=“abraham2119, post:19, topic:316158”][quote author=Punniabi16 link=topic=412740.msg3043314#msg3043314 date=1259278751]<br>
you can always use the AND operator to transform the signed types to unsigned<br>
[/quote]… the point is that a signed data type wouldnt be able to hold an unsigned data type (of the same type)</p>
<p>ie:</p>
<pre><code class="lang-auto">byte b = -1 &amp; 0xFF; //compiler will bitch</code></pre>
<p>a byte is a signed data type and can therefore hold the values -128 (10000000) through 127 (01111111), and therefore wouldnt be able to store a value like ‘255’ (-1 &amp; 0xff). you would have to use at least a short for this, which is a waste of memory (16-bit type rather than an 8-bit type)[/quote]</p>
<p>it bitches because you’re losing precision… l2 explicit cast</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-and-unsigned/316158/24">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-and-unsigned/316158/24</link>
        <pubDate>Fri, 27 Nov 2009 03:47:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-316158-24</guid>
        <source url="https://forum.moparisthebest.com/t/java-and-unsigned/316158.rss">Java and Unsigned</source>
      </item>
      <item>
        <title>Java and Unsigned</title>
        <dc:creator><![CDATA[@unlimitedorb unlimitedorb]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unlimitedorb">@unlimitedorb</a> wrote:</p>
          <blockquote>
              <p>There is never a need for a widening conversion or a larger type. The key idea you need to realize is that there is a one to one mapping between what we think of as negative numbers in signed two’s complement form and the positive numbers in unsigned form. -1 in signed two’s complement form is directly equivalent to the unsigned number 255. In binary, they are both represented by 11111111 - it’s all about how we interpret it.</p>
<p>If someone asks what the decimal equivalent of the binary value 11111111 is, then you need to reply “how should I interpret it?”  Otherwise, you are just guessing.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-and-unsigned/316158/23">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-and-unsigned/316158/23</link>
        <pubDate>Fri, 27 Nov 2009 03:25:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-316158-23</guid>
        <source url="https://forum.moparisthebest.com/t/java-and-unsigned/316158.rss">Java and Unsigned</source>
      </item>
      <item>
        <title>Java and Unsigned</title>
        <dc:creator><![CDATA[@BAsh BAsh]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bash">@BAsh</a> wrote:</p>
          <blockquote>
              <p>What operators do you wish to perform on these data types?</p>
<p>If you want to print them then temporarily convert them to a larger type and perform a simple operation to make it positive.</p>
<p>It seems that the size of data stored is the same. Some operators may need a bit of fiddling but otherwise the lack of unsigned types doesn’t matter.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-and-unsigned/316158/22">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-and-unsigned/316158/22</link>
        <pubDate>Fri, 27 Nov 2009 02:27:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-316158-22</guid>
        <source url="https://forum.moparisthebest.com/t/java-and-unsigned/316158.rss">Java and Unsigned</source>
      </item>
      <item>
        <title>Java and Unsigned</title>
        <dc:creator><![CDATA[@unlimitedorb unlimitedorb]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unlimitedorb">@unlimitedorb</a> wrote:</p>
          <blockquote>
              <p>What the hell is everybody on about? 64 bits is 64 bits just the same as 32 bits is 32 bits. The concept of unsigned and signed seems to have most of you confused. What does two’s complement representation mean to you? You can store just as much information in a signed integer as you can in an unsigned integer.</p>
<p>There is a distinction between information and representation; I suggest you learn it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-and-unsigned/316158/21">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-and-unsigned/316158/21</link>
        <pubDate>Fri, 27 Nov 2009 01:55:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-316158-21</guid>
        <source url="https://forum.moparisthebest.com/t/java-and-unsigned/316158.rss">Java and Unsigned</source>
      </item>
      <item>
        <title>Java and Unsigned</title>
        <dc:creator><![CDATA[@lothy Lothy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lothy">@lothy</a> wrote:</p>
          <blockquote>
              <p>[quote=“frank_, post:11, topic:316158”]you are aware that java has a bloody simple instruction set, if it were to have unsigned types the number of instructions would probably double</p>
<p>if you are really worried about 4 bytes of extra data thrown around your app, you shouldnt be using java[/quote]<br>
4 bytes isn’t so small when you have a million instances of an object (perhaps an object with a serial number). It can, and often does, add up.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-and-unsigned/316158/20">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-and-unsigned/316158/20</link>
        <pubDate>Fri, 27 Nov 2009 01:23:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-316158-20</guid>
        <source url="https://forum.moparisthebest.com/t/java-and-unsigned/316158.rss">Java and Unsigned</source>
      </item>
      <item>
        <title>Java and Unsigned</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>[quote=“Punniabi16, post:18, topic:316158”]you can always use the AND operator to transform the signed types to unsigned[/quote]… the point is that a signed data type wouldnt be able to hold an unsigned data type (of the same type)</p>
<p>ie:</p>
<pre><code class="lang-auto">byte b = -1 &amp; 0xFF; //compiler will bitch</code></pre>
<p>a byte is a signed data type and can therefore hold the values -128 (10000000) through 127 (01111111), and therefore wouldnt be able to store a value like ‘255’ (-1 &amp; 0xff). you would have to use at least a short for this, which is a waste of memory (16-bit type rather than an 8-bit type)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-and-unsigned/316158/19">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-and-unsigned/316158/19</link>
        <pubDate>Fri, 27 Nov 2009 00:50:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-316158-19</guid>
        <source url="https://forum.moparisthebest.com/t/java-and-unsigned/316158.rss">Java and Unsigned</source>
      </item>
      <item>
        <title>Java and Unsigned</title>
        <dc:creator><![CDATA[@Punniabi16 Punniabi16]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/punniabi16">@Punniabi16</a> wrote:</p>
          <blockquote>
              <p>you can always use the AND operator to transform the signed types to unsigned</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-and-unsigned/316158/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-and-unsigned/316158/18</link>
        <pubDate>Thu, 26 Nov 2009 23:39:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-316158-18</guid>
        <source url="https://forum.moparisthebest.com/t/java-and-unsigned/316158.rss">Java and Unsigned</source>
      </item>
      <item>
        <title>Java and Unsigned</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>silverlight provides a similar interface…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-and-unsigned/316158/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-and-unsigned/316158/17</link>
        <pubDate>Thu, 26 Nov 2009 22:27:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-316158-17</guid>
        <source url="https://forum.moparisthebest.com/t/java-and-unsigned/316158.rss">Java and Unsigned</source>
      </item>
      <item>
        <title>Java and Unsigned</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>i think he means applets in general</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-and-unsigned/316158/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-and-unsigned/316158/16</link>
        <pubDate>Thu, 26 Nov 2009 21:59:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-316158-16</guid>
        <source url="https://forum.moparisthebest.com/t/java-and-unsigned/316158.rss">Java and Unsigned</source>
      </item>
      <item>
        <title>Java and Unsigned</title>
        <dc:creator><![CDATA[@Speljohan Speljohan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/speljohan">@Speljohan</a> wrote:</p>
          <blockquote>
              <p>[quote=“Tenen, post:13, topic:316158”][quote author=zstars link=topic=412740.msg3043137#msg3043137 date=1259269935]</p>
<aside class="quote no-group">
<blockquote>
<p>you are aware that java has a bloody simple instruction set, if it were to have unsigned types the number of instructions would probably double</p>
<p>if you are really worried about 4 bytes of extra data thrown around your app, you shouldnt be using java</p>
</blockquote>
</aside>
<p>I do use Java very rarely indeed, mostly because of its over-simplified nature (when compared to other languages) and its memory inefficiency.<br>
[/quote]<br>
Yeah, it’s too bad that applet bots can be only made in Java (at least as far as I know).[/quote]What does it matter for a runescape bot (assuming that’s what you are talking about)? Not like it would use much memory or cpu at all.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-and-unsigned/316158/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-and-unsigned/316158/15</link>
        <pubDate>Thu, 26 Nov 2009 21:50:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-316158-15</guid>
        <source url="https://forum.moparisthebest.com/t/java-and-unsigned/316158.rss">Java and Unsigned</source>
      </item>
      <item>
        <title>Java and Unsigned</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>[quote=“Tenen, post:13, topic:316158”][quote author=zstars link=topic=412740.msg3043137#msg3043137 date=1259269935]</p>
<aside class="quote no-group">
<blockquote>
<p>you are aware that java has a bloody simple instruction set, if it were to have unsigned types the number of instructions would probably double</p>
<p>if you are really worried about 4 bytes of extra data thrown around your app, you shouldnt be using java</p>
</blockquote>
</aside>
<p>I do use Java very rarely indeed, mostly because of its over-simplified nature (when compared to other languages) and its memory inefficiency.<br>
[/quote]<br>
Yeah, it’s too bad that applet bots can be only made in Java (at least as far as I know).[/quote]jni can be used</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-and-unsigned/316158/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-and-unsigned/316158/14</link>
        <pubDate>Thu, 26 Nov 2009 21:42:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-316158-14</guid>
        <source url="https://forum.moparisthebest.com/t/java-and-unsigned/316158.rss">Java and Unsigned</source>
      </item>
      <item>
        <title>Java and Unsigned</title>
        <dc:creator><![CDATA[@system system]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/system">@system</a> wrote:</p>
          <blockquote>
              <p>[quote=“zstars, post:12, topic:316158”][quote author=frank_ link=topic=412740.msg3042926#msg3042926 date=1259258978]<br>
you are aware that java has a bloody simple instruction set, if it were to have unsigned types the number of instructions would probably double</p>
<p>if you are really worried about 4 bytes of extra data thrown around your app, you shouldnt be using java<br>
[/quote]</p>
<p>I do use Java very rarely indeed, mostly because of its over-simplified nature (when compared to other languages) and its memory inefficiency.[/quote]<br>
Yeah, it’s too bad that applet bots can be only made in Java (at least as far as I know).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-and-unsigned/316158/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-and-unsigned/316158/13</link>
        <pubDate>Thu, 26 Nov 2009 21:15:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-316158-13</guid>
        <source url="https://forum.moparisthebest.com/t/java-and-unsigned/316158.rss">Java and Unsigned</source>
      </item>
      <item>
        <title>Java and Unsigned</title>
        <dc:creator><![CDATA[@zstars zstars]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zstars">@zstars</a> wrote:</p>
          <blockquote>
              <p>[quote=“frank_, post:11, topic:316158”]you are aware that java has a bloody simple instruction set, if it were to have unsigned types the number of instructions would probably double</p>
<p>if you are really worried about 4 bytes of extra data thrown around your app, you shouldnt be using java[/quote]</p>
<p>I do use Java very rarely indeed, mostly because of its over-simplified nature (when compared to other languages) and its memory inefficiency.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-and-unsigned/316158/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-and-unsigned/316158/12</link>
        <pubDate>Thu, 26 Nov 2009 21:12:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-316158-12</guid>
        <source url="https://forum.moparisthebest.com/t/java-and-unsigned/316158.rss">Java and Unsigned</source>
      </item>
      <item>
        <title>Java and Unsigned</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>you are aware that java has a bloody simple instruction set, if it were to have unsigned types the number of instructions would probably double</p>
<p>if you are really worried about 4 bytes of extra data thrown around your app, you shouldnt be using java</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-and-unsigned/316158/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-and-unsigned/316158/11</link>
        <pubDate>Thu, 26 Nov 2009 18:09:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-316158-11</guid>
        <source url="https://forum.moparisthebest.com/t/java-and-unsigned/316158.rss">Java and Unsigned</source>
      </item>
      <item>
        <title>Java and Unsigned</title>
        <dc:creator><![CDATA[@zstars zstars]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zstars">@zstars</a> wrote:</p>
          <blockquote>
              <p>Java’s a dumbed down language so it doesn’t support it, lest one of its programmers be unable to understand the concept of a natural number.</p>
<p>Though frank and others are right in a way, they aren’t really necessary. Object Oriented programming, classes, objects, operators, functions. They are all unnecessary, as assembler (and machine language) proves.</p>
<p>Note that the lack of unsigned types is probably one of the many reasons that explain why Java is bloated by definition, especially memory wise. As been said, whenever you would in other language use an unsigned long in Java you use an object. But also, whenever you need, for example, a variable to hold a positive integer that can go up to ((2^32)-1), you actually have to use a long (which takes twice as much memory as actually is necessary) essentially doubling memory usage for the case.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-and-unsigned/316158/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-and-unsigned/316158/10</link>
        <pubDate>Thu, 26 Nov 2009 16:36:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-316158-10</guid>
        <source url="https://forum.moparisthebest.com/t/java-and-unsigned/316158.rss">Java and Unsigned</source>
      </item>
      <item>
        <title>Java and Unsigned</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>[quote=“Unhandled, post:8, topic:316158”][quote author=oksuper_ link=topic=412740.msg3041512#msg3041512 date=1259162554]<br>
gosling is underestimating ppl<br>
[/quote]<br>
i hurd operator overloading is too complex as well.[/quote]so is portability?</p>
<p>ontopic: whoever programs c and doesnt know what an unsigned data type is does not program c…</p>
<p>i just find the lack of unsigned data types annoying because id have to define a 32-bit integral data type for a 16-bit value. that may be alright if the memory is statically allocated into the compiled module, but in dynamically interpreted languages, even static data is not truly static</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-and-unsigned/316158/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-and-unsigned/316158/9</link>
        <pubDate>Thu, 26 Nov 2009 01:37:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-316158-9</guid>
        <source url="https://forum.moparisthebest.com/t/java-and-unsigned/316158.rss">Java and Unsigned</source>
      </item>
  </channel>
</rss>
