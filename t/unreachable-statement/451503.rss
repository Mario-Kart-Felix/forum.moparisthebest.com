<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Unreachable statement</title>
    <link>https://forum.moparisthebest.com/t/unreachable-statement/451503</link>
    <description>It is saying that the statement is unreachable on this line. I checked to see if I was missing something but I wasn&#39;t.
[code]if (m != null) {[/code]

Do you know where the problem is?

Here is the class code
[code=java]public static final Animation SPIN_ANIM = Animation.create(896);
	public static final MaterialProduction[] STRING_PRODUCTIONS = {MaterialProduction.BOW_STRING};
	public static final MaterialProduction[] WOOL_PRODUCTIONS = {MaterialProduction.BALL_OF_WOOL};
	
	public enum Material {
		WOOL(new Item(1737), Spinning.WOOL_PRODUCTIONS, &quot;wool&quot;),
		FLAX(new Item(1779), Spinning.STRING_PRODUCTIONS, &quot;string&quot;);
		
		private MaterialProduction[] possibleProductions;
		private Item materialItem;
		private String type;

		private Material(Item materialItem, MaterialProduction[] possibleProductions, String type) {
			this.materialItem = materialItem;
			this.possibleProductions = possibleProductions;
			this.type = type;
			for (MaterialProduction productable : possibleProductions) {
				productable.setMaterial(this);
			}
		}

		private static Map&lt;Integer, Material&gt; materialTypes = new HashMap&lt;Integer, Material&gt;();

		public static Material forId(int id) {
			return materialTypes.get(id);
		}

		static {
			for (Material m : Material.values()) {
				materialTypes.put(m.materialItem.getId(), material);
			}
		}

	}
	
	public enum MaterialProduction {
		BALL_OF_WOOL(1759, 13.75, 1),
		BOW_STRING(1777, 13.75, 10);

		private int itemId;
		private double experience;
		private int levelRequired;
		private ItemDefinition def;
		private String basicName;
		private Material m;

		private MaterialProduction(int itemId, double experience, int levelRequired) {
			this.itemId = itemId;
			this.experience = experience;
			this.levelRequired = levelRequired;
		}

		public void setMaterial(Material m) {
			this.m = m;
		}

		public int getRequiredLevel() {
			return levelRequired;
		}

		private void setDef() {
			if (def == null) {
				def = ItemDefinition.forId(itemId);
			}
		}

		public String getName() {
			setDef();
			return def.getName();
		}

		public String getBasicName() {
			setDef();
			if (basicName == null) {
				String newString = def.getName().toLowerCase().replace(getType(), &quot;&quot;);
				newString = newString.substring(1);
				StringBuilder sb = new StringBuilder(&quot;&quot;);
				if (getType().contains(&quot; &quot;)) {
					sb.append(getType().split(&quot; &quot;)[0]).append(&quot; &quot;).append(newString);
				} else {
					sb.append(newString);
				}
				basicName = Misc.upperFirst(sb.toString());
			}
			return basicName;
		}

		public String getType() {
			return m.type;
		}
	}
	
	public static boolean handleItemOnObject(Player player, Item item, CacheObjectDefinition def) {
		if (def.getName().contains(&quot;pinning wheel&quot;)) {
			return true;
		} else {
			return false;
		}
		Material m = Material.forId(item.getId());
		if (m != null) {
			int amount = player.getInventory().numberOf(m.materialItem.getId());
			ActionSender.sendBConfig(player, 754, 13);
			for (int index = 0; index &lt; m.possibleProductions.length; index++) {
				MaterialProduction materialProduction = m.possibleProductions[index];
				ActionSender.sendBConfig(player, ProduceAction.CONFIG_IDS[index], materialProduction.itemId);
				StringBuilder builder = new StringBuilder();
				if (player.getSkills().getLevel(Skills.CRAFTING) &lt; materialProduction.levelRequired) {
					builder.append(&quot;&lt;col=FF0000&gt;&quot;).append(materialProduction.getBasicName()).append(&quot;&lt;br&gt;&lt;col=FF0000&gt;Level &quot;).append(materialProduction.levelRequired);
				} else {
					builder.append(materialProduction.getBasicName());
				}
				ActionSender.sendSpecialString(player, ProduceAction.NAME_IDS[index], builder.toString());
			}
			ActionSender.sendString(player, 916, 1, &quot;Choose how many you wish to make, then&lt;br&gt;click on the chosen item to begin.&quot;);
			ActionSender.sendInterface(player, 1, 752, 13, 905);
			ActionSender.sendInterface(player, 1, 905, 4, 916);
			ActionSender.sendConfig(player, 1363, amount &lt;&lt; 20 | amount &lt;&lt; 26);
			player.getSettings().setAmountToProduce(amount);
			player.getSettings().setMaxToProduce(amount);
			player.getSettings().setDialougeSkill(Skills.CRAFTING);
			player.getSettings().setPossibleProductions(productionsToIntArray(m.possibleProductions));
			player.setAttribute(&quot;craftingType&quot;, 2);
			return true;
		}
		return false;
	}
	
	public static int[] productionsToIntArray(MaterialProduction[] productions) {
		int[] newArray = new int[productions.length];
		for (int i = 0; i &lt; productions.length; i++) {
			newArray[i] = productions[i].ordinal();
		}
		return newArray;
	}[/code]</description>
    
    <lastBuildDate>Fri, 27 Jul 2012 05:13:00 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/unreachable-statement/451503.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Unreachable statement</title>
        <dc:creator><![CDATA[@wildskiller wildskiller]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wildskiller">@wildskiller</a> wrote:</p>
          <blockquote>
              <p>Ahh, I see it now</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/unreachable-statement/451503/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/unreachable-statement/451503/3</link>
        <pubDate>Fri, 27 Jul 2012 05:13:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-451503-3</guid>
        <source url="https://forum.moparisthebest.com/t/unreachable-statement/451503.rss">Unreachable statement</source>
      </item>
      <item>
        <title>Unreachable statement</title>
        <dc:creator><![CDATA[@the_soul The Soul]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_soul">@the_soul</a> wrote:</p>
          <blockquote>
              <p>You have two different sets of return values in your handleItemOnObject() method.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/unreachable-statement/451503/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/unreachable-statement/451503/2</link>
        <pubDate>Fri, 27 Jul 2012 05:09:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-451503-2</guid>
        <source url="https://forum.moparisthebest.com/t/unreachable-statement/451503.rss">Unreachable statement</source>
      </item>
      <item>
        <title>Unreachable statement</title>
        <dc:creator><![CDATA[@wildskiller wildskiller]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wildskiller">@wildskiller</a> wrote:</p>
          <blockquote>
              <p>It is saying that the statement is unreachable on this line. I checked to see if I was missing something but I wasnâ€™t.</p>
<pre><code class="lang-auto"></code></pre>
<p>Do you know where the problem is?</p>
<p>Here is the class code</p>
<p>[code=java]public static final Animation SPIN_ANIM = Animation.create(896);<br>
public static final MaterialProduction[] STRING_PRODUCTIONS = {MaterialProduction.BOW_STRING};<br>
public static final MaterialProduction[] WOOL_PRODUCTIONS = {MaterialProduction.BALL_OF_WOOL};</p>
<pre><code>public enum Material {
	WOOL(new Item(1737), Spinning.WOOL_PRODUCTIONS, "wool"),
	FLAX(new Item(1779), Spinning.STRING_PRODUCTIONS, "string");
	
	private MaterialProduction[] possibleProductions;
	private Item materialItem;
	private String type;

	private Material(Item materialItem, MaterialProduction[] possibleProductions, String type) {
		this.materialItem = materialItem;
		this.possibleProductions = possibleProductions;
		this.type = type;
		for (MaterialProduction productable : possibleProductions) {
			productable.setMaterial(this);
		}
	}

	private static Map&lt;Integer, Material&gt; materialTypes = new HashMap&lt;Integer, Material&gt;();

	public static Material forId(int id) {
		return materialTypes.get(id);
	}

	static {
		for (Material m : Material.values()) {
			materialTypes.put(m.materialItem.getId(), material);
		}
	}

}

public enum MaterialProduction {
	BALL_OF_WOOL(1759, 13.75, 1),
	BOW_STRING(1777, 13.75, 10);

	private int itemId;
	private double experience;
	private int levelRequired;
	private ItemDefinition def;
	private String basicName;
	private Material m;

	private MaterialProduction(int itemId, double experience, int levelRequired) {
		this.itemId = itemId;
		this.experience = experience;
		this.levelRequired = levelRequired;
	}

	public void setMaterial(Material m) {
		this.m = m;
	}

	public int getRequiredLevel() {
		return levelRequired;
	}

	private void setDef() {
		if (def == null) {
			def = ItemDefinition.forId(itemId);
		}
	}

	public String getName() {
		setDef();
		return def.getName();
	}

	public String getBasicName() {
		setDef();
		if (basicName == null) {
			String newString = def.getName().toLowerCase().replace(getType(), "");
			newString = newString.substring(1);
			StringBuilder sb = new StringBuilder("");
			if (getType().contains(" ")) {
				sb.append(getType().split(" ")[0]).append(" ").append(newString);
			} else {
				sb.append(newString);
			}
			basicName = Misc.upperFirst(sb.toString());
		}
		return basicName;
	}

	public String getType() {
		return m.type;
	}
}

public static boolean handleItemOnObject(Player player, Item item, CacheObjectDefinition def) {
	if (def.getName().contains("pinning wheel")) {
		return true;
	} else {
		return false;
	}
	Material m = Material.forId(item.getId());
	if (m != null) {
		int amount = player.getInventory().numberOf(m.materialItem.getId());
		ActionSender.sendBConfig(player, 754, 13);
		for (int index = 0; index &lt; m.possibleProductions.length; index++) {
			MaterialProduction materialProduction = m.possibleProductions[index];
			ActionSender.sendBConfig(player, ProduceAction.CONFIG_IDS[index], materialProduction.itemId);
			StringBuilder builder = new StringBuilder();
			if (player.getSkills().getLevel(Skills.CRAFTING) &lt; materialProduction.levelRequired) {
				builder.append("&lt;col=FF0000&gt;").append(materialProduction.getBasicName()).append("&lt;br&gt;&lt;col=FF0000&gt;Level ").append(materialProduction.levelRequired);
			} else {
				builder.append(materialProduction.getBasicName());
			}
			ActionSender.sendSpecialString(player, ProduceAction.NAME_IDS[index], builder.toString());
		}
		ActionSender.sendString(player, 916, 1, "Choose how many you wish to make, then&lt;br&gt;click on the chosen item to begin.");
		ActionSender.sendInterface(player, 1, 752, 13, 905);
		ActionSender.sendInterface(player, 1, 905, 4, 916);
		ActionSender.sendConfig(player, 1363, amount &lt;&lt; 20 | amount &lt;&lt; 26);
		player.getSettings().setAmountToProduce(amount);
		player.getSettings().setMaxToProduce(amount);
		player.getSettings().setDialougeSkill(Skills.CRAFTING);
		player.getSettings().setPossibleProductions(productionsToIntArray(m.possibleProductions));
		player.setAttribute("craftingType", 2);
		return true;
	}
	return false;
}

public static int[] productionsToIntArray(MaterialProduction[] productions) {
	int[] newArray = new int[productions.length];
	for (int i = 0; i &lt; productions.length; i++) {
		newArray[i] = productions[i].ordinal();
	}
	return newArray;
}[/code]</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/unreachable-statement/451503/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/unreachable-statement/451503/1</link>
        <pubDate>Fri, 27 Jul 2012 04:43:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-451503-1</guid>
        <source url="https://forum.moparisthebest.com/t/unreachable-statement/451503.rss">Unreachable statement</source>
      </item>
  </channel>
</rss>
