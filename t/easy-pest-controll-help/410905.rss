<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Easy pest controll help</title>
    <link>https://forum.moparisthebest.com/t/easy-pest-controll-help/410905</link>
    <description>Well i have a pest control minigame and it takes like 5 people to get the boat to take you there.. So i want to make it so it only has to be 1+ players, i am using caution x base PI.
Heres the codes so you can work with it.

[code]package server.model.minigames;

import server.model.players.Client;
import server.model.players.PlayerHandler;
import server.Server;
import java.util.HashMap;
import java.util.Iterator;
import server.util.Misc;

/**
 * @author Harlan
 * Credits to Sanity
 */

public class PestControl {


	public final int GAME_TIMER = 200; 
	public final int WAIT_TIMER = 60;

	
	 /*
     * Hashmap for the waitingBoat players
     */
    private static HashMap&lt;Client, Integer&gt; waitingBoat = new HashMap&lt;Client, Integer&gt;();
    /*
     * hashmap for the gameArea players
     */
    private static HashMap&lt;Client, Integer&gt; gameArea = new HashMap&lt;Client, Integer&gt;();
	
	public int gameTimer = -1;
	public int waitTimer = 60;
	
	/** Portals Health ***/
	public static int[] portalHealth = { 200, 200, 200, 200 };
	
	/** Void knights health ***/
	public static int knightHealth = 200;
	
	/** Array used for storing portals location ***/
	public int[][] portalLocation = {{2628,2591},{2680,2588},{2669,2570},{2645,2569}};
	
	/** npcs stored in an array so we can remove them easily **/
	public int[] pcNpcsList = { 6142, 6143, 6144, 6145, 3782 };
	
	
	public static boolean gameStarted = false;

	public void process() {
		try {
			setBoatInterface();
			
			if (waitTimer &gt; 0) {
				waitTimer--;
			} else if (waitTimer == 0) 
			startGame();
			if (gameStarted &amp;&amp; playersInGame() &lt; 1)
			endGame(false);
			if (gameTimer &gt; 0 &amp;&amp; gameStarted) {
				gameTimer--;
				//spawnPcNpcs();    
				setGameInterface();
				if (allPortalsDead()) {
					//Misc.println(&quot;All portals dead: &quot;+ allPortalsDead());
					endGame(true);
					}
			} else if (gameTimer == 0 &amp;&amp; gameStarted)
					endGame(false);
			} catch(Exception e) {
		 	e.printStackTrace();
			}
	}
	
	 public static void removePlayerFromPc(Client player) {
        if (player == null)  
            return;
        if (gameArea.containsKey(player)) {
            player.getPA().movePlayer(2657, 2639, 0);
            gameArea.remove(player);
        }
        
    }

	
	public void setBoatInterface() {
	  Iterator iterator = waitingBoat.keySet().iterator();
        while (iterator.hasNext()) {
			Client c = (Client) iterator.next();
			if (c != null) {
			if(gameStarted)
					c.getPA().sendFrame126(&quot;Next Departure: &quot;+(waitTimer+gameTimer)+&quot;&quot;, 21120);
					else 
					c.getPA().sendFrame126(&quot;Next Departure: &quot;+waitTimer+&quot;&quot;, 21120);
					c.getPA().sendFrame126(&quot;Players Ready: &quot;+playersInBoat()+&quot;&quot;, 21121);
					c.getPA().sendFrame126(&quot;(Need 4 to 25 players)&quot;, 21122);
					c.getPA().sendFrame126(&quot;Points: &quot;+c.pkPoints+&quot;&quot;, 21123);
				}
			}
		}
		
		public int npcCount = 0;
		
		
		public static int random3(int range) { 
			return (int)((java.lang.Math.random() * range));
		}
		
		public void setGameInterface() {
	  Iterator iterator = gameArea.keySet().iterator();
        while (iterator.hasNext()) {
			Client c = (Client) iterator.next();
			if (c != null) {
							for (int i = 0; i &lt; portalHealth.length; i++) {
							if (portalHealth[i] &gt; 0) {
								c.getPA().sendFrame126(&quot;&quot; +portalHealth[i]+ &quot;&quot;, 21111+i);
							} else {
								c.getPA().sendFrame126(&quot;Dead&quot;, 21111+i);
							}
							}
				c.getPA().sendFrame126(&quot;&quot;+knightHealth, 21115);
				c.getPA().sendFrame126(&quot;&quot;+c.pcDamage, 21116);
				c.getPA().sendFrame126(&quot;Time remaining: &quot;+gameTimer+&quot;&quot;, 21117);
			
					}
			}
		}
	
	
	/***
	* Moving players to arena if there&#39;s enough players
	*/
	
	public void startGame() {
		if (playersInBoat() &lt; 3) {
           waitTimer = WAIT_TIMER;
            return;
			}
			for (int i = 0; i &lt; portalHealth.length; i++) 
			portalHealth[i] = 200;		
					gameTimer = GAME_TIMER;
					waitTimer = -1;
					spawnNpcs();
					gameStarted = true;
		Iterator iterator = waitingBoat.keySet().iterator();
        while (iterator.hasNext()) {
            Client player = (Client) iterator.next();
            if (player == null) {
                continue;
            }	
           if(player.inPcBoat() == false &amp;&amp; waitingBoat.containsKey(player)) {
			waitingBoat.remove(player);
			}
					player.getPA().movePlayer(2656+Misc.random3(3),2614-Misc.random3(4),0);
					gameArea.put(player, 1);
					player.sendMessage(&quot;The Pest Control Game has begun!&quot;);
					}
					waitingBoat.clear();
				}
			
	

	public int playersInBoat() {
		int players = 0;
        Iterator iterator = (!waitingBoat.isEmpty()) ? waitingBoat.values().iterator() : gameArea.values().iterator();
        while (iterator.hasNext()) {
            if ((Integer) iterator.next() == 1) {
                players++;
            }
        }
        return players;
    }
	
	public int playersInGame() {
		int players = 0;
        Iterator iterator = (!gameArea.isEmpty()) ? gameArea.values().iterator() : waitingBoat.values().iterator();
        while (iterator.hasNext()) {
            if ((Integer) iterator.next() == 1) {
                players++;
            }
        }
        return players;
    }
	

	public void endGame(boolean won) {
	for (int i = 0; i &lt; portalHealth.length; i++) 
		portalHealth[i] = 200;
	//npcCount = 0;
	gameTimer = -1;
	waitTimer = WAIT_TIMER;
	gameStarted = false;
	Misc.println(&quot;Ending Pest Control Game&quot;);
	for (int i = 0; i &lt; portalHealth.length; i++)
					portalHealth[i] = 0;
	Iterator iterator = gameArea.keySet().iterator();
        while (iterator.hasNext()) {
            Client player = (Client) iterator.next();
            if (player == null) {
                continue;
            }
					player.getPA().movePlayer(2657, 2639, 0);
					if (won) {
						player.getDH().sendDialogues(79, 3790);
						player.sendMessage(&quot;You have won the pest control game and have been awarded 4 Pest Control points.&quot;);
						player.pkPoints += 4;
							player.poisonDamage = 0;
						player.getCombat().resetPrayers();
						for (int i = 0; i &lt; 24; i++) {
					player.playerLevel[i] = player.getPA().getLevelForXP(player.playerXP[i]);
					player.getPA().refreshSkill(i);
						}
						player.specAmount = 10;
						player.getItems().addItem(995, player.combatLevel * 1000);
					
					
					} else {
						player.getDH().sendDialogues(78, 3790);
						player.sendMessage(&quot;You failed to kill all the portals in 3 minutes and have not been awarded any points.&quot;);
					}
					player.pcDamage = 0;
					player.getItems().addSpecialBar(player.playerEquipment[player.playerWeapon]);					
				}
				gameArea.clear();		
				
		for (int i = 0; i &lt; pcNpcsList.length; i++){
		for (int j = 0; j &lt; Server.npcHandler.npcs.length; j++) {
			if (Server.npcHandler.npcs[j] != null) {
				if (Server.npcHandler.npcs[j].npcType == pcNpcsList[i])
					Server.npcHandler.npcs[j] = null;
			
			}
		}
	}

	}
	

	public boolean allPortalsDead() {
		int count = 0;
		for (int i = 0; i &lt; portalHealth.length; i++) {
					if (portalHealth[i] &lt;= 4)
						count++;
			}
			return count &gt;= 4;
			
		}
		
	
	
	
	public static void leaveWaitingBoat(Client c) {
        if (c == null) {
            return;
        }
        if (waitingBoat.containsKey(c)) {
            waitingBoat.remove(c);
			c.getPA().movePlayer(2657,2639,0);
            return;
        }
    }
	
	
	

	public static void addToWaitRoom(Client c) {
		if(c == null)
		return;
		
		waitingBoat.put(c, 1);
		c.sendMessage(&quot;You have joined the Pest Control boat.&quot;);
		c.getPA().movePlayer(2661,2639,0);
	}
	
	 
    public static boolean isInPc(Client player) {
        return gameArea.containsKey(player);
    }

    
    public static boolean isInPcBoat(Client player) {
        return waitingBoat.containsKey(player);
    }

	public void spawnNpcs() {
	
		Server.npcHandler.spawnNpc2(6142,2628,2591,0,0,200,0,0,100);
		Server.npcHandler.spawnNpc2(6143,2680,2588,0,0,200,0,0,100);
		Server.npcHandler.spawnNpc2(6144,2669,2570,0,0,200,0,0,100);
		Server.npcHandler.spawnNpc2(6145,2645,2569,0,0,200,0,0,100);
	Server.npcHandler.spawnNpc2(3782,2656,2592,0,0,knightHealth,0,0, 100);
	}


}[/code]</description>
    
    <lastBuildDate>Fri, 19 Aug 2011 20:53:44 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/easy-pest-controll-help/410905.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Easy pest controll help</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <p>Youâ€™re all fucking retarded,</p>
<pre><code class="lang-auto">
package server.model.minigames;

import java.util.HashMap;
import java.util.Iterator;

import server.Server;
import server.model.npcs.NPCHandler;
import server.model.players.Client;
import server.util.Misc;

public class PestControl {

	private static HashMap&lt;Client, Integer&gt; gameArea = new HashMap&lt;Client, Integer&gt;();
	public static boolean gameStarted = false;

	public static int knightHealth = 200;

	public static int[] portalHealth = { 200, 200, 200, 200 };

	private static HashMap&lt;Client, Integer&gt; waitingBoat = new HashMap&lt;Client, Integer&gt;();

	public static void addToWaitRoom(final Client c) {
		if (c == null) {
			return;
		}

		PestControl.waitingBoat.put(c, 1);
		c.sendMessage("You have joined the Pest Control boat.");
		c.getPA().movePlayer(2661, 2639, 0);
	}

	public static boolean isInPc(final Client player) {
		return PestControl.gameArea.containsKey(player);
	}

	public static boolean isInPcBoat(final Client player) {
		return PestControl.waitingBoat.containsKey(player);
	}

	public static void leaveWaitingBoat(final Client c) {
		if (c == null) {
			return;
		}
		if (PestControl.waitingBoat.containsKey(c)) {
			PestControl.waitingBoat.remove(c);
			c.getPA().movePlayer(2657, 2639, 0);
			return;
		}
	}

	public static int random3(final int range) {
		return (int) ((java.lang.Math.random() * range));
	}

	public static void removePlayerFromPc(final Client player) {
		if (player == null) {
			return;
		}
		if (PestControl.gameArea.containsKey(player)) {
			player.getPA().movePlayer(2657, 2639, 0);
			PestControl.gameArea.remove(player);
		}

	}

	public final int GAME_TIMER = 200;

	public int gameTimer = -1;

	public int npcCount = 0;

	public int[] pcNpcsList = { 6142, 6143, 6144, 6145, 3782 };

	public int[][] portalLocation = { 
		{ 2628, 2591 }, 
		{ 2680, 2588 },
		{ 2669, 2570 }, 
		{ 2645, 2569 } 
	};

	public final int WAIT_TIMER = 60;

	public int waitTimer = 60;

	public boolean allPortalsDead() {
		int count = 0;
		for (final int element : PestControl.portalHealth) {
			if (element &lt;= 4) {
				count++;
			}
		}
		return count &gt;= 1;
	}

	public void endGame(final boolean won) {
		for (int i = 0; i &lt; PestControl.portalHealth.length; i++) {
			PestControl.portalHealth[i] = 200;
		}
		this.gameTimer = -1;
		this.waitTimer = this.WAIT_TIMER;
		PestControl.gameStarted = false;
		Misc.println("Ending Pest Control Game");
		for (int i = 0; i &lt; PestControl.portalHealth.length; i++) {
			PestControl.portalHealth[i] = 0;
		}
		final Iterator&lt;Client&gt; iterator = PestControl.gameArea.keySet()
				.iterator();
		while (iterator.hasNext()) {
			final Client player = iterator.next();
			if (player == null) {
				continue;
			}
			player.getPA().movePlayer(2657, 2639, 0);
			if (won) {
				player.getDH().sendDialogues(79, 3790);
				player.sendMessage("You have won the pest control game and have been awarded 4 Pest Control points.");
				player.pkPoints += 4;
				player.poisonDamage = 0;
				player.getCombat().resetPrayers();
				for (int i = 0; i &lt; 24; i++) {
					player.playerLevel[i] = player.getPA().getLevelForXP(
							player.playerXP[i]);
					player.getPA().refreshSkill(i);
				}
				player.specAmount = 10;
				player.getItems().addItem(995, player.combatLevel * 1000);

			} else {
				player.getDH().sendDialogues(78, 3790);
				player.sendMessage("You failed to kill all the portals in 3 minutes and have not been awarded any points.");
			}
			player.pcDamage = 0;
			player.getItems().addSpecialBar(
					player.playerEquipment[player.playerWeapon]);
		}
		PestControl.gameArea.clear();

		for (final int element : this.pcNpcsList) {
			for (int j = 0; j &lt; NPCHandler.npcs.length; j++) {
				if (NPCHandler.npcs[j] != null) {
					if (NPCHandler.npcs[j].npcType == element) {
						NPCHandler.npcs[j] = null;
					}

				}
			}
		}

	}

	public int playersInBoat() {
		int players = 0;
		final Iterator&lt;Integer&gt; iterator = (!PestControl.waitingBoat.isEmpty()) ? PestControl.waitingBoat
				.values().iterator() : PestControl.gameArea.values().iterator();
		while (iterator.hasNext()) {
			if (iterator.next() == 1) {
				players++;
			}
		}
		return players;
	}

	public int playersInGame() {
		int players = 0;
		final Iterator&lt;Integer&gt; iterator = (!PestControl.gameArea.isEmpty()) ? PestControl.gameArea
				.values().iterator() : PestControl.waitingBoat.values()
				.iterator();
		while (iterator.hasNext()) {
			if (iterator.next() == 1) {
				players++;
			}
		}
		return players;
	}

	public void process() {
		try {
			this.setBoatInterface();

			if (this.waitTimer &gt; 0) {
				this.waitTimer--;
			} else if (this.waitTimer == 0) {
				this.startGame();
			}
			if (PestControl.gameStarted &amp;&amp; (this.playersInGame() &lt; 1)) {
				this.endGame(false);
			}
			if ((this.gameTimer &gt; 0) &amp;&amp; PestControl.gameStarted) {
				this.gameTimer--;
				this.setGameInterface();
				if (this.allPortalsDead()) {
					this.endGame(true);
				}
			} else if ((this.gameTimer == 0) &amp;&amp; PestControl.gameStarted) {
				this.endGame(false);
			}
		} catch (final Exception e) {
			e.printStackTrace();
		}
	}

	public void setBoatInterface() {
		final Iterator&lt;Client&gt; iterator = PestControl.waitingBoat.keySet()
				.iterator();
		while (iterator.hasNext()) {
			final Client c = iterator.next();
			if (c != null) {
				if (PestControl.gameStarted) {
					c.getPA().sendFrame126(
							"Next Departure: "
									+ (this.waitTimer + this.gameTimer), 21120);
				} else {
					c.getPA().sendFrame126("Next Departure: " + this.waitTimer,
							21120);
				}
				c.getPA().sendFrame126("Players Ready: " + playersInBoat(), 21121);
				c.getPA().sendFrame126("(Need 1 to 25 players)", 21122);
				c.getPA().sendFrame126("Points: " + c.pkPoints, 21123);
			}
		}
	}

	public void setGameInterface() {
		final Iterator&lt;Client&gt; iterator = PestControl.gameArea.keySet()
				.iterator();
		while (iterator.hasNext()) {
			final Client c = iterator.next();
			if (c != null) {
				for (int i = 0; i &lt; PestControl.portalHealth.length; i++) {
					if (PestControl.portalHealth[i] &gt; 0) {
						c.getPA().sendFrame126(
								"" + PestControl.portalHealth[i],
								21111 + i);
					} else {
						c.getPA().sendFrame126("Dead", 21111 + i);
					}
				}
				c.getPA().sendFrame126("" + PestControl.knightHealth, 21115);
				c.getPA().sendFrame126("" + c.pcDamage, 21116);
				c.getPA().sendFrame126("Time remaining: " + gameTimer, 21117);

			}
		}
	}

	public void spawnNpcs() {

		Server.npcHandler.spawnNpc2(6142, 2628, 2591, 0, 0, 200, 0, 0, 100);
		Server.npcHandler.spawnNpc2(6143, 2680, 2588, 0, 0, 200, 0, 0, 100);
		Server.npcHandler.spawnNpc2(6144, 2669, 2570, 0, 0, 200, 0, 0, 100);
		Server.npcHandler.spawnNpc2(6145, 2645, 2569, 0, 0, 200, 0, 0, 100);
		Server.npcHandler.spawnNpc2(3782, 2656, 2592, 0, 0, knightHealth, 0, 0, 100);
	}

	/***
	 * Moving players to arena if there's enough players
	 */

	public void startGame() {
		if (this.playersInBoat() &lt; 3) {
			this.waitTimer = this.WAIT_TIMER;
			return;
		}
		for (int i = 0; i &lt; PestControl.portalHealth.length; i++) {
			PestControl.portalHealth[i] = 200;
		}
		this.gameTimer = this.GAME_TIMER;
		this.waitTimer = -1;
		this.spawnNpcs();
		PestControl.gameStarted = true;
		final Iterator&lt;Client&gt; iterator = PestControl.waitingBoat.keySet()
				.iterator();
		while (iterator.hasNext()) {
			final Client player = iterator.next();
			if (player == null) {
				continue;
			}
			if ((player.inPcBoat() == false)
					&amp;&amp; PestControl.waitingBoat.containsKey(player)) {
				PestControl.waitingBoat.remove(player);
			}
			player.getPA().movePlayer(2656 + Misc.random3(3),
					2614 - Misc.random3(4), 0);
			PestControl.gameArea.put(player, 1);
			player.sendMessage("The Pest Control Game has begun!");
		}
		PestControl.waitingBoat.clear();
	}

}
</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/easy-pest-controll-help/410905/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/easy-pest-controll-help/410905/13</link>
        <pubDate>Fri, 19 Aug 2011 20:53:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-410905-13</guid>
        <source url="https://forum.moparisthebest.com/t/easy-pest-controll-help/410905.rss">Easy pest controll help</source>
      </item>
      <item>
        <title>Easy pest controll help</title>
        <dc:creator><![CDATA[@helloimwhite helloimwhite]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/helloimwhite">@helloimwhite</a> wrote:</p>
          <blockquote>
              <p>find <code>public void startGame() {</code> and paste belowâ€¦ <code>if (playersInBoat() &gt; 2) {</code>â€¦ put that above <code>gameTime = GAME_TIMER;</code></p>
<p>should work fine</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/easy-pest-controll-help/410905/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/easy-pest-controll-help/410905/12</link>
        <pubDate>Fri, 19 Aug 2011 20:31:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-410905-12</guid>
        <source url="https://forum.moparisthebest.com/t/easy-pest-controll-help/410905.rss">Easy pest controll help</source>
      </item>
      <item>
        <title>Easy pest controll help</title>
        <dc:creator><![CDATA[@merk_u_zerk merk u zerk]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/merk_u_zerk">@merk_u_zerk</a> wrote:</p>
          <blockquote>
              <p>Please someone help <img src="https://forum.moparisthebest.com/images/emoji/twitter/frowning.png?v=5" title=":frowning:" class="emoji" alt=":frowning:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/easy-pest-controll-help/410905/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/easy-pest-controll-help/410905/11</link>
        <pubDate>Fri, 19 Aug 2011 01:54:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-410905-11</guid>
        <source url="https://forum.moparisthebest.com/t/easy-pest-controll-help/410905.rss">Easy pest controll help</source>
      </item>
      <item>
        <title>Easy pest controll help</title>
        <dc:creator><![CDATA[@mista_pnut mista pnut]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mista_pnut">@mista_pnut</a> wrote:</p>
          <blockquote>
              <p>No clue, I usually stick to deltas. :\</p>
<p>I just re-read it allâ€¦ It should be workingâ€¦</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/easy-pest-controll-help/410905/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/easy-pest-controll-help/410905/10</link>
        <pubDate>Fri, 19 Aug 2011 01:44:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-410905-10</guid>
        <source url="https://forum.moparisthebest.com/t/easy-pest-controll-help/410905.rss">Easy pest controll help</source>
      </item>
      <item>
        <title>Easy pest controll help</title>
        <dc:creator><![CDATA[@merk_u_zerk merk u zerk]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/merk_u_zerk">@merk_u_zerk</a> wrote:</p>
          <blockquote>
              <p><img src="https://forum.moparisthebest.com/images/emoji/twitter/frowning.png?v=5" title=":frowning:" class="emoji" alt=":frowning:"> nothing is working yet and i went into minigames and a see pestcontrol is that the folder im suppose to look in to change?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/easy-pest-controll-help/410905/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/easy-pest-controll-help/410905/9</link>
        <pubDate>Fri, 19 Aug 2011 01:40:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-410905-9</guid>
        <source url="https://forum.moparisthebest.com/t/easy-pest-controll-help/410905.rss">Easy pest controll help</source>
      </item>
      <item>
        <title>Easy pest controll help</title>
        <dc:creator><![CDATA[@mista_pnut mista pnut]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mista_pnut">@mista_pnut</a> wrote:</p>
          <blockquote>
              <pre><code class="lang-auto">                if (playersInBoat() &gt;= 1) {</code></pre>
<p>Thatâ€™s what I changed. It was &lt; 3</p>
<p>It might need to be &lt; 1</p>
<p>And I doubt Iâ€™ll get it, but it never hurts to try. :\</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/easy-pest-controll-help/410905/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/easy-pest-controll-help/410905/8</link>
        <pubDate>Fri, 19 Aug 2011 01:32:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-410905-8</guid>
        <source url="https://forum.moparisthebest.com/t/easy-pest-controll-help/410905.rss">Easy pest controll help</source>
      </item>
      <item>
        <title>Easy pest controll help</title>
        <dc:creator><![CDATA[@merk_u_zerk merk u zerk]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/merk_u_zerk">@merk_u_zerk</a> wrote:</p>
          <blockquote>
              <p>Idiot, iâ€™ts 2m i bot all day long i could care less about 2m.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/easy-pest-controll-help/410905/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/easy-pest-controll-help/410905/7</link>
        <pubDate>Fri, 19 Aug 2011 01:30:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-410905-7</guid>
        <source url="https://forum.moparisthebest.com/t/easy-pest-controll-help/410905.rss">Easy pest controll help</source>
      </item>
      <item>
        <title>Easy pest controll help</title>
        <dc:creator><![CDATA[@lostmyphat lostmyphat]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lostmyphat">@lostmyphat</a> wrote:</p>
          <blockquote>
              <p>Helping is free. As for the guy who wants the RSGP, you actually think he will give it? ROFL, what a joke.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/easy-pest-controll-help/410905/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/easy-pest-controll-help/410905/6</link>
        <pubDate>Fri, 19 Aug 2011 01:28:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-410905-6</guid>
        <source url="https://forum.moparisthebest.com/t/easy-pest-controll-help/410905.rss">Easy pest controll help</source>
      </item>
      <item>
        <title>Easy pest controll help</title>
        <dc:creator><![CDATA[@merk_u_zerk merk u zerk]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/merk_u_zerk">@merk_u_zerk</a> wrote:</p>
          <blockquote>
              <p>What part are you trying to change copy and paste it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/easy-pest-controll-help/410905/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/easy-pest-controll-help/410905/5</link>
        <pubDate>Fri, 19 Aug 2011 01:28:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-410905-5</guid>
        <source url="https://forum.moparisthebest.com/t/easy-pest-controll-help/410905.rss">Easy pest controll help</source>
      </item>
      <item>
        <title>Easy pest controll help</title>
        <dc:creator><![CDATA[@mista_pnut mista pnut]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mista_pnut">@mista_pnut</a> wrote:</p>
          <blockquote>
              <p>[code]package server.model.minigames;</p>
<p>import server.model.players.Client;<br>
import server.model.players.PlayerHandler;<br>
import server.Server;<br>
import java.util.HashMap;<br>
import java.util.Iterator;<br>
import server.util.Misc;</p>
<p>/**</p>
<ul>
<li>
<span class="mention">@author</span> Harlan</li>
<li>Credits to Sanity<br>
*/</li>
</ul>
<p>public class PestControl {</p>
<pre><code>    public final int GAME_TIMER = 200; 
    public final int WAIT_TIMER = 60;

    
     /*
 * Hashmap for the waitingBoat players
 */
private static HashMap&lt;Client, Integer&gt; waitingBoat = new HashMap&lt;Client, Integer&gt;();
/*
 * hashmap for the gameArea players
 */
private static HashMap&lt;Client, Integer&gt; gameArea = new HashMap&lt;Client, Integer&gt;();
    
    public int gameTimer = -1;
    public int waitTimer = 60;
    
    /** Portals Health ***/
    public static int[] portalHealth = { 200, 200, 200, 200 };
    
    /** Void knights health ***/
    public static int knightHealth = 200;
    
    /** Array used for storing portals location ***/
    public int[][] portalLocation = {{2628,2591},{2680,2588},{2669,2570},{2645,2569}};
    
    /** npcs stored in an array so we can remove them easily **/
    public int[] pcNpcsList = { 6142, 6143, 6144, 6145, 3782 };
    
    
    public static boolean gameStarted = false;

    public void process() {
            try {
                    setBoatInterface();
                    
                    if (waitTimer &gt; 0) {
                            waitTimer--;
                    } else if (waitTimer == 0) 
                    startGame();
                    if (gameStarted &amp;&amp; playersInGame() &lt; 1)
                    endGame(false);
                    if (gameTimer &gt; 0 &amp;&amp; gameStarted) {
                            gameTimer--;
                            //spawnPcNpcs();    
                            setGameInterface();
                            if (allPortalsDead()) {
                                    //Misc.println("All portals dead: "+ allPortalsDead());
                                    endGame(true);
                                    }
                    } else if (gameTimer == 0 &amp;&amp; gameStarted)
                                    endGame(false);
                    } catch(Exception e) {
                     e.printStackTrace();
                    }
    }
    
     public static void removePlayerFromPc(Client player) {
    if (player == null)  
        return;
    if (gameArea.containsKey(player)) {
        player.getPA().movePlayer(2657, 2639, 0);
        gameArea.remove(player);
    }
    
}

    
    public void setBoatInterface() {
      Iterator iterator = waitingBoat.keySet().iterator();
    while (iterator.hasNext()) {
                    Client c = (Client) iterator.next();
                    if (c != null) {
                    if(gameStarted)
                                    c.getPA().sendFrame126("Next Departure: "+(waitTimer+gameTimer)+"", 21120);
                                    else 
                                    c.getPA().sendFrame126("Next Departure: "+waitTimer+"", 21120);
                                    c.getPA().sendFrame126("Players Ready: "+playersInBoat()+"", 21121);
                                    c.getPA().sendFrame126("(Need 1 to 25 players)", 21122);
                                    c.getPA().sendFrame126("Points: "+c.pkPoints+"", 21123);
                            }
                    }
            }
            
            public int npcCount = 0;
            
            
            public static int random3(int range) { 
                    return (int)((java.lang.Math.random() * range));
            }
            
            public void setGameInterface() {
      Iterator iterator = gameArea.keySet().iterator();
    while (iterator.hasNext()) {
                    Client c = (Client) iterator.next();
                    if (c != null) {
                                                    for (int i = 0; i &lt; portalHealth.length; i++) {
                                                    if (portalHealth[i] &gt; 0) {
                                                            c.getPA().sendFrame126("" +portalHealth[i]+ "", 21111+i);
                                                    } else {
                                                            c.getPA().sendFrame126("Dead", 21111+i);
                                                    }
                                                    }
                            c.getPA().sendFrame126(""+knightHealth, 21115);
                            c.getPA().sendFrame126(""+c.pcDamage, 21116);
                            c.getPA().sendFrame126("Time remaining: "+gameTimer+"", 21117);
                    
                                    }
                    }
            }
    
    
    /***
    * Moving players to arena if there's enough players
    */
    
    public void startGame() {
            if (playersInBoat() &gt;= 1) {
       waitTimer = WAIT_TIMER;
        return;
                    }
                    for (int i = 0; i &lt; portalHealth.length; i++) 
                    portalHealth[i] = 200;                
                                    gameTimer = GAME_TIMER;
                                    waitTimer = -1;
                                    spawnNpcs();
                                    gameStarted = true;
            Iterator iterator = waitingBoat.keySet().iterator();
    while (iterator.hasNext()) {
        Client player = (Client) iterator.next();
        if (player == null) {
            continue;
        }        
       if(player.inPcBoat() == false &amp;&amp; waitingBoat.containsKey(player)) {
                    waitingBoat.remove(player);
                    }
                                    player.getPA().movePlayer(2656+Misc.random3(3),2614-Misc.random3(1),0);
                                    gameArea.put(player, 1);
                                    player.sendMessage("The Pest Control Game has begun!");
                                    }
                                    waitingBoat.clear();
                            }
                    
    

    public int playersInBoat() {
            int players = 0;
    Iterator iterator = (!waitingBoat.isEmpty()) ? waitingBoat.values().iterator() : gameArea.values().iterator();
    while (iterator.hasNext()) {
        if ((Integer) iterator.next() == 1) {
            players++;
        }
    }
    return players;
}
    
    public int playersInGame() {
            int players = 0;
    Iterator iterator = (!gameArea.isEmpty()) ? gameArea.values().iterator() : waitingBoat.values().iterator();
    while (iterator.hasNext()) {
        if ((Integer) iterator.next() == 1) {
            players++;
        }
    }
    return players;
}
    

    public void endGame(boolean won) {
    for (int i = 0; i &lt; portalHealth.length; i++) 
            portalHealth[i] = 200;
    //npcCount = 0;
    gameTimer = -1;
    waitTimer = WAIT_TIMER;
    gameStarted = false;
    Misc.println("Ending Pest Control Game");
    for (int i = 0; i &lt; portalHealth.length; i++)
                                    portalHealth[i] = 0;
    Iterator iterator = gameArea.keySet().iterator();
    while (iterator.hasNext()) {
        Client player = (Client) iterator.next();
        if (player == null) {
            continue;
        }
                                    player.getPA().movePlayer(2657, 2639, 0);
                                    if (won) {
                                            player.getDH().sendDialogues(79, 3790);
                                            player.sendMessage("You have won the pest control game and have been awarded 4 Pest Control points.");
                                            player.pkPoints += 4;
                                                    player.poisonDamage = 0;
                                            player.getCombat().resetPrayers();
                                            for (int i = 0; i &lt; 24; i++) {
                                    player.playerLevel[i] = player.getPA().getLevelForXP(player.playerXP[i]);
                                    player.getPA().refreshSkill(i);
                                            }
                                            player.specAmount = 10;
                                            player.getItems().addItem(995, player.combatLevel * 1000);
                                    
                                    
                                    } else {
                                            player.getDH().sendDialogues(78, 3790);
                                            player.sendMessage("You failed to kill all the portals in 3 minutes and have not been awarded any points.");
                                    }
                                    player.pcDamage = 0;
                                    player.getItems().addSpecialBar(player.playerEquipment[player.playerWeapon]);                                        
                            }
                            gameArea.clear();                
                            
            for (int i = 0; i &lt; pcNpcsList.length; i++){
            for (int j = 0; j &lt; Server.npcHandler.npcs.length; j++) {
                    if (Server.npcHandler.npcs[j] != null) {
                            if (Server.npcHandler.npcs[j].npcType == pcNpcsList[i])
                                    Server.npcHandler.npcs[j] = null;
                    
                    }
            }
    }

    }
    

    public boolean allPortalsDead() {
            int count = 0;
            for (int i = 0; i &lt; portalHealth.length; i++) {
                                    if (portalHealth[i] &lt;= 4)
                                            count++;
                    }
                    return count &gt;= 4;
                    
            }
            
    
    
    
    public static void leaveWaitingBoat(Client c) {
    if (c == null) {
        return;
    }
    if (waitingBoat.containsKey(c)) {
        waitingBoat.remove(c);
                    c.getPA().movePlayer(2657,2639,0);
        return;
    }
}
    
    
    

    public static void addToWaitRoom(Client c) {
            if(c == null)
            return;
            
            waitingBoat.put(c, 1);
            c.sendMessage("You have joined the Pest Control boat.");
            c.getPA().movePlayer(2661,2639,0);
    }
    
     
public static boolean isInPc(Client player) {
    return gameArea.containsKey(player);
}


public static boolean isInPcBoat(Client player) {
    return waitingBoat.containsKey(player);
}

    public void spawnNpcs() {
    
            Server.npcHandler.spawnNpc2(6142,2628,2591,0,0,200,0,0,100);
            Server.npcHandler.spawnNpc2(6143,2680,2588,0,0,200,0,0,100);
            Server.npcHandler.spawnNpc2(6144,2669,2570,0,0,200,0,0,100);
            Server.npcHandler.spawnNpc2(6145,2645,2569,0,0,200,0,0,100);
    Server.npcHandler.spawnNpc2(3782,2656,2592,0,0,knightHealth,0,0, 100);
    }
</code></pre>
<p>}[/code]</p>
<p>This one should, if it doesnâ€™t I put the arrow backwards. :\</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/easy-pest-controll-help/410905/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/easy-pest-controll-help/410905/4</link>
        <pubDate>Fri, 19 Aug 2011 01:24:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-410905-4</guid>
        <source url="https://forum.moparisthebest.com/t/easy-pest-controll-help/410905.rss">Easy pest controll help</source>
      </item>
      <item>
        <title>Easy pest controll help</title>
        <dc:creator><![CDATA[@merk_u_zerk merk u zerk]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/merk_u_zerk">@merk_u_zerk</a> wrote:</p>
          <blockquote>
              <p>Did not work.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/easy-pest-controll-help/410905/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/easy-pest-controll-help/410905/3</link>
        <pubDate>Fri, 19 Aug 2011 01:20:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-410905-3</guid>
        <source url="https://forum.moparisthebest.com/t/easy-pest-controll-help/410905.rss">Easy pest controll help</source>
      </item>
      <item>
        <title>Easy pest controll help</title>
        <dc:creator><![CDATA[@mista_pnut mista pnut]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mista_pnut">@mista_pnut</a> wrote:</p>
          <blockquote>
              <p>[code]package server.model.minigames;</p>
<p>import server.model.players.Client;<br>
import server.model.players.PlayerHandler;<br>
import server.Server;<br>
import java.util.HashMap;<br>
import java.util.Iterator;<br>
import server.util.Misc;</p>
<p>/**</p>
<ul>
<li>
<span class="mention">@author</span> Harlan</li>
<li>Credits to Sanity<br>
*/</li>
</ul>
<p>public class PestControl {</p>
<pre><code>    public final int GAME_TIMER = 200; 
    public final int WAIT_TIMER = 60;

    
     /*
 * Hashmap for the waitingBoat players
 */
private static HashMap&lt;Client, Integer&gt; waitingBoat = new HashMap&lt;Client, Integer&gt;();
/*
 * hashmap for the gameArea players
 */
private static HashMap&lt;Client, Integer&gt; gameArea = new HashMap&lt;Client, Integer&gt;();
    
    public int gameTimer = -1;
    public int waitTimer = 60;
    
    /** Portals Health ***/
    public static int[] portalHealth = { 200, 200, 200, 200 };
    
    /** Void knights health ***/
    public static int knightHealth = 200;
    
    /** Array used for storing portals location ***/
    public int[][] portalLocation = {{2628,2591},{2680,2588},{2669,2570},{2645,2569}};
    
    /** npcs stored in an array so we can remove them easily **/
    public int[] pcNpcsList = { 6142, 6143, 6144, 6145, 3782 };
    
    
    public static boolean gameStarted = false;

    public void process() {
            try {
                    setBoatInterface();
                    
                    if (waitTimer &gt; 0) {
                            waitTimer--;
                    } else if (waitTimer == 0) 
                    startGame();
                    if (gameStarted &amp;&amp; playersInGame() &lt; 1)
                    endGame(false);
                    if (gameTimer &gt; 0 &amp;&amp; gameStarted) {
                            gameTimer--;
                            //spawnPcNpcs();    
                            setGameInterface();
                            if (allPortalsDead()) {
                                    //Misc.println("All portals dead: "+ allPortalsDead());
                                    endGame(true);
                                    }
                    } else if (gameTimer == 0 &amp;&amp; gameStarted)
                                    endGame(false);
                    } catch(Exception e) {
                     e.printStackTrace();
                    }
    }
    
     public static void removePlayerFromPc(Client player) {
    if (player == null)  
        return;
    if (gameArea.containsKey(player)) {
        player.getPA().movePlayer(2657, 2639, 0);
        gameArea.remove(player);
    }
    
}

    
    public void setBoatInterface() {
      Iterator iterator = waitingBoat.keySet().iterator();
    while (iterator.hasNext()) {
                    Client c = (Client) iterator.next();
                    if (c != null) {
                    if(gameStarted)
                                    c.getPA().sendFrame126("Next Departure: "+(waitTimer+gameTimer)+"", 21120);
                                    else 
                                    c.getPA().sendFrame126("Next Departure: "+waitTimer+"", 21120);
                                    c.getPA().sendFrame126("Players Ready: "+playersInBoat()+"", 21121);
                                    c.getPA().sendFrame126("(Need 1 to 25 players)", 21122);
                                    c.getPA().sendFrame126("Points: "+c.pkPoints+"", 21123);
                            }
                    }
            }
            
            public int npcCount = 0;
            
            
            public static int random3(int range) { 
                    return (int)((java.lang.Math.random() * range));
            }
            
            public void setGameInterface() {
      Iterator iterator = gameArea.keySet().iterator();
    while (iterator.hasNext()) {
                    Client c = (Client) iterator.next();
                    if (c != null) {
                                                    for (int i = 0; i &lt; portalHealth.length; i++) {
                                                    if (portalHealth[i] &gt; 0) {
                                                            c.getPA().sendFrame126("" +portalHealth[i]+ "", 21111+i);
                                                    } else {
                                                            c.getPA().sendFrame126("Dead", 21111+i);
                                                    }
                                                    }
                            c.getPA().sendFrame126(""+knightHealth, 21115);
                            c.getPA().sendFrame126(""+c.pcDamage, 21116);
                            c.getPA().sendFrame126("Time remaining: "+gameTimer+"", 21117);
                    
                                    }
                    }
            }
    
    
    /***
    * Moving players to arena if there's enough players
    */
    
    public void startGame() {
            if (playersInBoat() &lt; 3) {
       waitTimer = WAIT_TIMER;
        return;
                    }
                    for (int i = 0; i &lt; portalHealth.length; i++) 
                    portalHealth[i] = 200;                
                                    gameTimer = GAME_TIMER;
                                    waitTimer = -1;
                                    spawnNpcs();
                                    gameStarted = true;
            Iterator iterator = waitingBoat.keySet().iterator();
    while (iterator.hasNext()) {
        Client player = (Client) iterator.next();
        if (player == null) {
            continue;
        }        
       if(player.inPcBoat() == false &amp;&amp; waitingBoat.containsKey(player)) {
                    waitingBoat.remove(player);
                    }
                                    player.getPA().movePlayer(2656+Misc.random3(3),2614-Misc.random3(1),0);
                                    gameArea.put(player, 1);
                                    player.sendMessage("The Pest Control Game has begun!");
                                    }
                                    waitingBoat.clear();
                            }
                    
    

    public int playersInBoat() {
            int players = 0;
    Iterator iterator = (!waitingBoat.isEmpty()) ? waitingBoat.values().iterator() : gameArea.values().iterator();
    while (iterator.hasNext()) {
        if ((Integer) iterator.next() == 1) {
            players++;
        }
    }
    return players;
}
    
    public int playersInGame() {
            int players = 0;
    Iterator iterator = (!gameArea.isEmpty()) ? gameArea.values().iterator() : waitingBoat.values().iterator();
    while (iterator.hasNext()) {
        if ((Integer) iterator.next() == 1) {
            players++;
        }
    }
    return players;
}
    

    public void endGame(boolean won) {
    for (int i = 0; i &lt; portalHealth.length; i++) 
            portalHealth[i] = 200;
    //npcCount = 0;
    gameTimer = -1;
    waitTimer = WAIT_TIMER;
    gameStarted = false;
    Misc.println("Ending Pest Control Game");
    for (int i = 0; i &lt; portalHealth.length; i++)
                                    portalHealth[i] = 0;
    Iterator iterator = gameArea.keySet().iterator();
    while (iterator.hasNext()) {
        Client player = (Client) iterator.next();
        if (player == null) {
            continue;
        }
                                    player.getPA().movePlayer(2657, 2639, 0);
                                    if (won) {
                                            player.getDH().sendDialogues(79, 3790);
                                            player.sendMessage("You have won the pest control game and have been awarded 4 Pest Control points.");
                                            player.pkPoints += 4;
                                                    player.poisonDamage = 0;
                                            player.getCombat().resetPrayers();
                                            for (int i = 0; i &lt; 24; i++) {
                                    player.playerLevel[i] = player.getPA().getLevelForXP(player.playerXP[i]);
                                    player.getPA().refreshSkill(i);
                                            }
                                            player.specAmount = 10;
                                            player.getItems().addItem(995, player.combatLevel * 1000);
                                    
                                    
                                    } else {
                                            player.getDH().sendDialogues(78, 3790);
                                            player.sendMessage("You failed to kill all the portals in 3 minutes and have not been awarded any points.");
                                    }
                                    player.pcDamage = 0;
                                    player.getItems().addSpecialBar(player.playerEquipment[player.playerWeapon]);                                        
                            }
                            gameArea.clear();                
                            
            for (int i = 0; i &lt; pcNpcsList.length; i++){
            for (int j = 0; j &lt; Server.npcHandler.npcs.length; j++) {
                    if (Server.npcHandler.npcs[j] != null) {
                            if (Server.npcHandler.npcs[j].npcType == pcNpcsList[i])
                                    Server.npcHandler.npcs[j] = null;
                    
                    }
            }
    }

    }
    

    public boolean allPortalsDead() {
            int count = 0;
            for (int i = 0; i &lt; portalHealth.length; i++) {
                                    if (portalHealth[i] &lt;= 4)
                                            count++;
                    }
                    return count &gt;= 4;
                    
            }
            
    
    
    
    public static void leaveWaitingBoat(Client c) {
    if (c == null) {
        return;
    }
    if (waitingBoat.containsKey(c)) {
        waitingBoat.remove(c);
                    c.getPA().movePlayer(2657,2639,0);
        return;
    }
}
    
    
    

    public static void addToWaitRoom(Client c) {
            if(c == null)
            return;
            
            waitingBoat.put(c, 1);
            c.sendMessage("You have joined the Pest Control boat.");
            c.getPA().movePlayer(2661,2639,0);
    }
    
     
public static boolean isInPc(Client player) {
    return gameArea.containsKey(player);
}


public static boolean isInPcBoat(Client player) {
    return waitingBoat.containsKey(player);
}

    public void spawnNpcs() {
    
            Server.npcHandler.spawnNpc2(6142,2628,2591,0,0,200,0,0,100);
            Server.npcHandler.spawnNpc2(6143,2680,2588,0,0,200,0,0,100);
            Server.npcHandler.spawnNpc2(6144,2669,2570,0,0,200,0,0,100);
            Server.npcHandler.spawnNpc2(6145,2645,2569,0,0,200,0,0,100);
    Server.npcHandler.spawnNpc2(3782,2656,2592,0,0,knightHealth,0,0, 100);
    }
</code></pre>
<p>}<br>
[/code]</p>
<p>MistaPnut on runescape. :S<br>
If that doesnâ€™t work tell me, I know what to change.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/easy-pest-controll-help/410905/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/easy-pest-controll-help/410905/2</link>
        <pubDate>Fri, 19 Aug 2011 01:16:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-410905-2</guid>
        <source url="https://forum.moparisthebest.com/t/easy-pest-controll-help/410905.rss">Easy pest controll help</source>
      </item>
      <item>
        <title>Easy pest controll help</title>
        <dc:creator><![CDATA[@merk_u_zerk merk u zerk]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/merk_u_zerk">@merk_u_zerk</a> wrote:</p>
          <blockquote>
              <p>Well i have a pest control minigame and it takes like 5 people to get the boat to take you thereâ€¦ So i want to make it so it only has to be 1+ players, i am using caution x base PI.<br>
Heres the codes so you can work with it.</p>
<p>[code]package server.model.minigames;</p>
<p>import server.model.players.Client;<br>
import server.model.players.PlayerHandler;<br>
import server.Server;<br>
import java.util.HashMap;<br>
import java.util.Iterator;<br>
import server.util.Misc;</p>
<p>/**</p>
<ul>
<li>
<span class="mention">@author</span> Harlan</li>
<li>Credits to Sanity<br>
*/</li>
</ul>
<p>public class PestControl {</p>
<pre><code>public final int GAME_TIMER = 200; 
public final int WAIT_TIMER = 60;


 /*
 * Hashmap for the waitingBoat players
 */
private static HashMap&lt;Client, Integer&gt; waitingBoat = new HashMap&lt;Client, Integer&gt;();
/*
 * hashmap for the gameArea players
 */
private static HashMap&lt;Client, Integer&gt; gameArea = new HashMap&lt;Client, Integer&gt;();

public int gameTimer = -1;
public int waitTimer = 60;

/** Portals Health ***/
public static int[] portalHealth = { 200, 200, 200, 200 };

/** Void knights health ***/
public static int knightHealth = 200;

/** Array used for storing portals location ***/
public int[][] portalLocation = {{2628,2591},{2680,2588},{2669,2570},{2645,2569}};

/** npcs stored in an array so we can remove them easily **/
public int[] pcNpcsList = { 6142, 6143, 6144, 6145, 3782 };


public static boolean gameStarted = false;

public void process() {
	try {
		setBoatInterface();
		
		if (waitTimer &gt; 0) {
			waitTimer--;
		} else if (waitTimer == 0) 
		startGame();
		if (gameStarted &amp;&amp; playersInGame() &lt; 1)
		endGame(false);
		if (gameTimer &gt; 0 &amp;&amp; gameStarted) {
			gameTimer--;
			//spawnPcNpcs();    
			setGameInterface();
			if (allPortalsDead()) {
				//Misc.println("All portals dead: "+ allPortalsDead());
				endGame(true);
				}
		} else if (gameTimer == 0 &amp;&amp; gameStarted)
				endGame(false);
		} catch(Exception e) {
	 	e.printStackTrace();
		}
}

 public static void removePlayerFromPc(Client player) {
    if (player == null)  
        return;
    if (gameArea.containsKey(player)) {
        player.getPA().movePlayer(2657, 2639, 0);
        gameArea.remove(player);
    }
    
}


public void setBoatInterface() {
  Iterator iterator = waitingBoat.keySet().iterator();
    while (iterator.hasNext()) {
		Client c = (Client) iterator.next();
		if (c != null) {
		if(gameStarted)
				c.getPA().sendFrame126("Next Departure: "+(waitTimer+gameTimer)+"", 21120);
				else 
				c.getPA().sendFrame126("Next Departure: "+waitTimer+"", 21120);
				c.getPA().sendFrame126("Players Ready: "+playersInBoat()+"", 21121);
				c.getPA().sendFrame126("(Need 4 to 25 players)", 21122);
				c.getPA().sendFrame126("Points: "+c.pkPoints+"", 21123);
			}
		}
	}
	
	public int npcCount = 0;
	
	
	public static int random3(int range) { 
		return (int)((java.lang.Math.random() * range));
	}
	
	public void setGameInterface() {
  Iterator iterator = gameArea.keySet().iterator();
    while (iterator.hasNext()) {
		Client c = (Client) iterator.next();
		if (c != null) {
						for (int i = 0; i &lt; portalHealth.length; i++) {
						if (portalHealth[i] &gt; 0) {
							c.getPA().sendFrame126("" +portalHealth[i]+ "", 21111+i);
						} else {
							c.getPA().sendFrame126("Dead", 21111+i);
						}
						}
			c.getPA().sendFrame126(""+knightHealth, 21115);
			c.getPA().sendFrame126(""+c.pcDamage, 21116);
			c.getPA().sendFrame126("Time remaining: "+gameTimer+"", 21117);
		
				}
		}
	}


/***
* Moving players to arena if there's enough players
*/

public void startGame() {
	if (playersInBoat() &lt; 3) {
       waitTimer = WAIT_TIMER;
        return;
		}
		for (int i = 0; i &lt; portalHealth.length; i++) 
		portalHealth[i] = 200;		
				gameTimer = GAME_TIMER;
				waitTimer = -1;
				spawnNpcs();
				gameStarted = true;
	Iterator iterator = waitingBoat.keySet().iterator();
    while (iterator.hasNext()) {
        Client player = (Client) iterator.next();
        if (player == null) {
            continue;
        }	
       if(player.inPcBoat() == false &amp;&amp; waitingBoat.containsKey(player)) {
		waitingBoat.remove(player);
		}
				player.getPA().movePlayer(2656+Misc.random3(3),2614-Misc.random3(4),0);
				gameArea.put(player, 1);
				player.sendMessage("The Pest Control Game has begun!");
				}
				waitingBoat.clear();
			}
		


public int playersInBoat() {
	int players = 0;
    Iterator iterator = (!waitingBoat.isEmpty()) ? waitingBoat.values().iterator() : gameArea.values().iterator();
    while (iterator.hasNext()) {
        if ((Integer) iterator.next() == 1) {
            players++;
        }
    }
    return players;
}

public int playersInGame() {
	int players = 0;
    Iterator iterator = (!gameArea.isEmpty()) ? gameArea.values().iterator() : waitingBoat.values().iterator();
    while (iterator.hasNext()) {
        if ((Integer) iterator.next() == 1) {
            players++;
        }
    }
    return players;
}


public void endGame(boolean won) {
for (int i = 0; i &lt; portalHealth.length; i++) 
	portalHealth[i] = 200;
//npcCount = 0;
gameTimer = -1;
waitTimer = WAIT_TIMER;
gameStarted = false;
Misc.println("Ending Pest Control Game");
for (int i = 0; i &lt; portalHealth.length; i++)
				portalHealth[i] = 0;
Iterator iterator = gameArea.keySet().iterator();
    while (iterator.hasNext()) {
        Client player = (Client) iterator.next();
        if (player == null) {
            continue;
        }
				player.getPA().movePlayer(2657, 2639, 0);
				if (won) {
					player.getDH().sendDialogues(79, 3790);
					player.sendMessage("You have won the pest control game and have been awarded 4 Pest Control points.");
					player.pkPoints += 4;
						player.poisonDamage = 0;
					player.getCombat().resetPrayers();
					for (int i = 0; i &lt; 24; i++) {
				player.playerLevel[i] = player.getPA().getLevelForXP(player.playerXP[i]);
				player.getPA().refreshSkill(i);
					}
					player.specAmount = 10;
					player.getItems().addItem(995, player.combatLevel * 1000);
				
				
				} else {
					player.getDH().sendDialogues(78, 3790);
					player.sendMessage("You failed to kill all the portals in 3 minutes and have not been awarded any points.");
				}
				player.pcDamage = 0;
				player.getItems().addSpecialBar(player.playerEquipment[player.playerWeapon]);					
			}
			gameArea.clear();		
			
	for (int i = 0; i &lt; pcNpcsList.length; i++){
	for (int j = 0; j &lt; Server.npcHandler.npcs.length; j++) {
		if (Server.npcHandler.npcs[j] != null) {
			if (Server.npcHandler.npcs[j].npcType == pcNpcsList[i])
				Server.npcHandler.npcs[j] = null;
		
		}
	}
}

}


public boolean allPortalsDead() {
	int count = 0;
	for (int i = 0; i &lt; portalHealth.length; i++) {
				if (portalHealth[i] &lt;= 4)
					count++;
		}
		return count &gt;= 4;
		
	}
	



public static void leaveWaitingBoat(Client c) {
    if (c == null) {
        return;
    }
    if (waitingBoat.containsKey(c)) {
        waitingBoat.remove(c);
		c.getPA().movePlayer(2657,2639,0);
        return;
    }
}




public static void addToWaitRoom(Client c) {
	if(c == null)
	return;
	
	waitingBoat.put(c, 1);
	c.sendMessage("You have joined the Pest Control boat.");
	c.getPA().movePlayer(2661,2639,0);
}

 
public static boolean isInPc(Client player) {
    return gameArea.containsKey(player);
}


public static boolean isInPcBoat(Client player) {
    return waitingBoat.containsKey(player);
}

public void spawnNpcs() {

	Server.npcHandler.spawnNpc2(6142,2628,2591,0,0,200,0,0,100);
	Server.npcHandler.spawnNpc2(6143,2680,2588,0,0,200,0,0,100);
	Server.npcHandler.spawnNpc2(6144,2669,2570,0,0,200,0,0,100);
	Server.npcHandler.spawnNpc2(6145,2645,2569,0,0,200,0,0,100);
Server.npcHandler.spawnNpc2(3782,2656,2592,0,0,knightHealth,0,0, 100);
}
</code></pre>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/easy-pest-controll-help/410905/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/easy-pest-controll-help/410905/1</link>
        <pubDate>Fri, 19 Aug 2011 01:09:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-410905-1</guid>
        <source url="https://forum.moparisthebest.com/t/easy-pest-controll-help/410905.rss">Easy pest controll help</source>
      </item>
  </channel>
</rss>
