<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Golang as a platform</title>
    <link>https://forum.moparisthebest.com/t/golang-as-a-platform/546937</link>
    <description>This week, on [i]&lt;Insert Language Here&gt; as a platform[/i]. We talk about [url=http://golang.org]Go[/url]. It&#39;s a growing platform created by Google that specializes on concurrency. It was specifically designed in mind for servers. It uses pointers, but doesn&#39;t support pointer arithmetic. It&#39;s noted as being 10-20% slower than C - its hard to beat inline assembly. 

Installing an external lib?

[i]go get github.com/&lt;repository&gt;[/i]

You like closures?

[code]
silabLovesDongs := func() (bool, error) { return true, nil } 
[/code]

You like subroutines?

[code]
go fudgeYourself()
[/code]

You like channels?

[code]
hashpipe := make(chan *Hash)
hashpipe &lt;- &amp;Hash { &quot;Dat strawberry fudge you pure kush&quot; }
wutweget := &lt;- hashpipe
[/code]

Given this tool set there&#39;s a lot you could do.

Resources:

http://blog.golang.org/go-videos-from-google-io-2012

Covers concurrency patterns, production use



[b]DISCUSS[/b]</description>
    
    <lastBuildDate>Fri, 17 Oct 2014 23:45:07 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/golang-as-a-platform/546937.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Golang as a platform</title>
        <dc:creator><![CDATA[@Docent Limits]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/docent">@Docent</a> wrote:</p>
          <blockquote>
              <p>I still hate all these new languages that keep rolling out.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/golang-as-a-platform/546937/28">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/golang-as-a-platform/546937/28</link>
        <pubDate>Fri, 17 Oct 2014 23:45:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546937-28</guid>
        <source url="https://forum.moparisthebest.com/t/golang-as-a-platform/546937.rss">Golang as a platform</source>
      </item>
      <item>
        <title>Golang as a platform</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <p>hey look, someone who knows what they’re talking about! <img src="https://forum.moparisthebest.com/images/emoji/twitter/open_mouth.png?v=5" title=":open_mouth:" class="emoji" alt=":open_mouth:"> <img src="https://forum.moparisthebest.com/images/emoji/twitter/open_mouth.png?v=5" title=":open_mouth:" class="emoji" alt=":open_mouth:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/golang-as-a-platform/546937/27">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/golang-as-a-platform/546937/27</link>
        <pubDate>Fri, 17 Oct 2014 23:21:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546937-27</guid>
        <source url="https://forum.moparisthebest.com/t/golang-as-a-platform/546937.rss">Golang as a platform</source>
      </item>
      <item>
        <title>Golang as a platform</title>
        <dc:creator><![CDATA[@lothy Lothy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lothy">@lothy</a> wrote:</p>
          <blockquote>
              <p>Honestly, most of your memory management in C++ should be automatic anyway. Anything on the stack is destroyed on function return. Objects with life that spans the application runtime can go in static memory. Your resource handles (like the std library collections vector etc) will use new/delete internally but they take care of themselves.</p>
<p>And as a rule you almost shouldn’t ever have naked new/delete usage.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/golang-as-a-platform/546937/26">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/golang-as-a-platform/546937/26</link>
        <pubDate>Thu, 16 Oct 2014 11:20:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546937-26</guid>
        <source url="https://forum.moparisthebest.com/t/golang-as-a-platform/546937.rss">Golang as a platform</source>
      </item>
      <item>
        <title>Golang as a platform</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="14" data-topic="546937">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/imthenull/40/1273_1.png" class="avatar"> imthenull:</div>
<blockquote>
<p>I’d rather spend the extra time in C/C++ for the performance gain and ability to manage my own memory. I’m not willing to sacrifice the two for faster development time. I also wouldn’t consider a 10-20% difference in performance as negligible.</p>
</blockquote>
</aside>
<p>smart pointers mannnnnnnnn</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/golang-as-a-platform/546937/25">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/golang-as-a-platform/546937/25</link>
        <pubDate>Wed, 15 Oct 2014 20:49:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546937-25</guid>
        <source url="https://forum.moparisthebest.com/t/golang-as-a-platform/546937.rss">Golang as a platform</source>
      </item>
      <item>
        <title>Golang as a platform</title>
        <dc:creator><![CDATA[@RSCShadow RSCShadow]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rscshadow">@RSCShadow</a> wrote:</p>
          <blockquote>
              <p>[quote=“imthenull, post:23, topic:546937”]Ok Mr.IDontLikeLisp[/quote]I never said that I’ve just never used it yet <img src="https://forum.moparisthebest.com/images/emoji/twitter/frowning.png?v=5" title=":frowning:" class="emoji" alt=":frowning:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/golang-as-a-platform/546937/24">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/golang-as-a-platform/546937/24</link>
        <pubDate>Sat, 27 Sep 2014 20:44:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546937-24</guid>
        <source url="https://forum.moparisthebest.com/t/golang-as-a-platform/546937.rss">Golang as a platform</source>
      </item>
      <item>
        <title>Golang as a platform</title>
        <dc:creator><![CDATA[@imthenull imthenull]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imthenull">@imthenull</a> wrote:</p>
          <blockquote>
              <p>Ok Mr.IDontLikeLisp</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/golang-as-a-platform/546937/23">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/golang-as-a-platform/546937/23</link>
        <pubDate>Sat, 27 Sep 2014 17:37:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546937-23</guid>
        <source url="https://forum.moparisthebest.com/t/golang-as-a-platform/546937.rss">Golang as a platform</source>
      </item>
      <item>
        <title>Golang as a platform</title>
        <dc:creator><![CDATA[@RSCShadow RSCShadow]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rscshadow">@RSCShadow</a> wrote:</p>
          <blockquote>
              <p>[quote=“imthenull, post:20, topic:546937”]yucky syntax.[/quote]Syntax is literally the most superficial aspect of a programming language.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/golang-as-a-platform/546937/22">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/golang-as-a-platform/546937/22</link>
        <pubDate>Sat, 27 Sep 2014 17:14:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546937-22</guid>
        <source url="https://forum.moparisthebest.com/t/golang-as-a-platform/546937.rss">Golang as a platform</source>
      </item>
      <item>
        <title>Golang as a platform</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="20" data-topic="546937">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/imthenull/40/1273_1.png" class="avatar"> imthenull:</div>
<blockquote>
<p>yucky syntax.</p>
</blockquote>
</aside>
<p>How?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/golang-as-a-platform/546937/21">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/golang-as-a-platform/546937/21</link>
        <pubDate>Fri, 26 Sep 2014 05:39:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546937-21</guid>
        <source url="https://forum.moparisthebest.com/t/golang-as-a-platform/546937.rss">Golang as a platform</source>
      </item>
      <item>
        <title>Golang as a platform</title>
        <dc:creator><![CDATA[@imthenull imthenull]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imthenull">@imthenull</a> wrote:</p>
          <blockquote>
              <p>yucky syntax.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/golang-as-a-platform/546937/20">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/golang-as-a-platform/546937/20</link>
        <pubDate>Fri, 26 Sep 2014 04:23:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546937-20</guid>
        <source url="https://forum.moparisthebest.com/t/golang-as-a-platform/546937.rss">Golang as a platform</source>
      </item>
      <item>
        <title>Golang as a platform</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>Imagine doing that, but in go, where things like that are 50000000000000000000000000000000x easier</p>
<pre><code class="lang-auto">package omi

import(
	"net"
)

// The current version of the Application software
const Version = "0.1.0"

type Application struct {
	initializers []Initializer
	world *World
	env *Env
}

type Initializer struct {
	run func(env *Env) error
}

// Binds an initializer to the application
func (app *Application) UseInitializer(fp func(env *Env) error) {
	app.initializers = append(app.initializers, Initializer { fp })
}

// Bootstraps the application by running all of the initializers
func (app *Application) bootstrap() error {
	for _, initializer := range app.initializers {
		err := initializer.run(app.env)
		if err != nil {
			return err
		}
	}
	return nil
}

// Creates a new application from the specified environment
func New(env string) *Application {
	s := &amp;Application { 
		initializers: make([]Initializer, 0),
		world: NewWorld(),
		env: NewEnv(env),
	}
	return s
}

package omi

import(
	"fmt"
	"strconv"
)

// Name constants for all of the environments
const(
	DevelopmentEnv string = "DevelopmentEnv"
	ProductionEnv string = "PRODUCTION"
	TestingEnv string = "TEST"
	DefaultEnv string = DevelopmentEnv
)

// Aggregate all of the environments into an array just for collection purposes
var envs = [...] string { DevelopmentEnv, ProductionEnv, TestingEnv }

type Env struct {
	vals map[string] string
	name string
}

// Base function for setting a value in the environment
func (env *Env) Set(name, value string) { 
	env.vals[name] = value 
}

// Extensive functions for setting other value types in the environment 
func (env *Env) SetInt(name string, value int) { 
	env.Set(name, strconv.FormatInt(int64(value), 10)) 
}

// Base function for getting a value from the environment
func (env *Env) Get(name string) (string, bool) {
	val, ok := env.vals[name]
	return val, ok
}

// Extension functions for getting other value types in the environment
func (env *Env) GetInt(name string) (int, bool) {
	val, ok := env.Get(name)
	if ok {
		n, err := strconv.ParseInt(val, 10, 64)
		if err != nil {
			panic(err)
		}
		return int(n), true
	}
	return -1, false
}

// Creates a new environment
func NewEnv(n string) *Env {
	if !validName(n) { 
		panic(fmt.Sprintf("Unknown environment %s", n)) 
	}
	env := &amp;Env { vals: make(map[string] string), name: n }
	return env
}

// Checks if the specified environment name is valid
func validName(name string) bool {
	for _, v := range envs {
		if v == name { 
			return true 
		}
	}
	return false
}</code></pre>
<p>And testing/benchmarking? Built in</p>
<pre><code class="lang-auto">package omi

import(
	"testing"
	"math/rand"
)

// Test creating new environments
func Test_New(t *testing.T) {
	env  := NewEnv(DefaultEnv)

	// Test that the environment is non nil
	if env == nil {
		t.Error("omi.NewEnv() cannot return nil")
	}

	// Test that the name is properly set
	if env.name != DefaultEnv {
		t.Errorf("expected env to be %s, got %s", DefaultEnv, env.name)
	}
}

// Test the basic set and get methods
func Test_SetAndGet(t *testing.T) {
	arr := []string { "KEY", "VALUE" }

	env := NewEnv(DefaultEnv)
	env.Set(arr[0], arr[1])

	compare, ok := env.Get(arr[0])

	// Test that the value was present in the environment
	if ok {
		// Test that the expected value was valid
		if compare != arr[1] {
			t.Errorf("mismatch expected '%s', got '%s'", arr[1], compare)
		}
	} else {
		t.Error("key and value not present")
	}
}

// Test the integer set and get methods
func Test_SetAndGetInt(t *testing.T) {
	key := "KEY"
	val := rand.Int()

	env := NewEnv(DefaultEnv)
	env.SetInt(key, val)

	compare, ok := env.GetInt(key)

	// Test that the value is present in the environment
	if ok {
		if compare != val {
			t.Errorf("mismatch expected %i, got %i", val, compare)
		}
	} else {
		t.Error("key and value not present")
	}
}

// Test that the valid name function is valid
func Test_validName(t *testing.T) {
	for _, name := range(envs) {
		if !validName(name) {
			t.Errorf("%s is not a valid enviroment", name)
		}
	}
}
</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/golang-as-a-platform/546937/19">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/golang-as-a-platform/546937/19</link>
        <pubDate>Fri, 26 Sep 2014 04:15:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546937-19</guid>
        <source url="https://forum.moparisthebest.com/t/golang-as-a-platform/546937.rss">Golang as a platform</source>
      </item>
      <item>
        <title>Golang as a platform</title>
        <dc:creator><![CDATA[@imthenull imthenull]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imthenull">@imthenull</a> wrote:</p>
          <blockquote>
              <p>[quote=“Lothy, post:17, topic:546937”][quote author=imthenull link=topic=665834.msg4451378#msg4451378 date=1411664366]<br>
I’d rather spend the extra time in C/C++ for the performance gain and ability to manage my own memory. I’m not willing to sacrifice the two for faster development time. I also wouldn’t consider a 10-20% difference in performance as negligible.<br>
[/quote]<br>
I’m thinking about putting together a C++ RSC server at some point in the future.[/quote]I’ve been working on one myself actually, using C++14. It’s turning out pretty well so far, granted I only have a basic server set up so far (no packet decoding just yet). The outcome will most definitely be interesting.</p>
<p>[code=cpp]<span class="hashtag">#include</span> <br>
<span class="hashtag">#include</span> </p>
<p><span class="hashtag">#include</span> “sysd/server.hpp”</p>
<p>class test_handle<br>
: public sysd::session_handler<br>
{<br>
void on_connected(sysd::session::ptr session)<br>
{</p>
<pre><code>}

void on_disconnected(sysd::session::ptr session)
{

}

void on_message(sysd::session::ptr session, sysd::message &amp;message)
{
	session.write(message);
}

void on_error(sysd::session::ptr session, std::exception &amp;e)
{
	session.close();
}
</code></pre>
<p>};</p>
<p>int main(int argc, char* argv[])<br>
{<br>
try<br>
{<br>
sysd::server server(43594);</p>
<pre><code>	server.attach_handler(new test_handle);
	server.start();
	std::cout &lt;&lt; "server is online!" &lt;&lt; std::endl;

	server.run();
	std::cout &lt;&lt; "server is shutting down.." &lt;&lt; std::endl;
}
catch (std::exception &amp;e)
{
	std::cout &lt;&lt; "error starting " &lt;&lt; argv[0] &lt;&lt; "!" &lt;&lt; std::endl;
	std::cout &lt;&lt; "what: "&lt;&lt; e.what() &lt;&lt; std::endl;
}
</code></pre>
<p>}[/code]</p>
<p>There is currently support for multiple threads, which would run the internal io_service event loop. Preeeettttyyy sick.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/golang-as-a-platform/546937/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/golang-as-a-platform/546937/18</link>
        <pubDate>Fri, 26 Sep 2014 03:54:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546937-18</guid>
        <source url="https://forum.moparisthebest.com/t/golang-as-a-platform/546937.rss">Golang as a platform</source>
      </item>
      <item>
        <title>Golang as a platform</title>
        <dc:creator><![CDATA[@lothy Lothy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lothy">@lothy</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="14" data-topic="546937">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/imthenull/40/1273_1.png" class="avatar"> imthenull:</div>
<blockquote>
<p>I’d rather spend the extra time in C/C++ for the performance gain and ability to manage my own memory. I’m not willing to sacrifice the two for faster development time. I also wouldn’t consider a 10-20% difference in performance as negligible.</p>
</blockquote>
</aside>
<p>I’m thinking about putting together a C++ RSC server at some point in the future.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/golang-as-a-platform/546937/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/golang-as-a-platform/546937/17</link>
        <pubDate>Thu, 25 Sep 2014 23:26:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546937-17</guid>
        <source url="https://forum.moparisthebest.com/t/golang-as-a-platform/546937.rss">Golang as a platform</source>
      </item>
      <item>
        <title>Golang as a platform</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="15" data-topic="546937">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/tyb97/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> tyb97:</div>
<blockquote>
<p>Are subroutines anything like coroutines?</p>
</blockquote>
</aside>
<p>They are similar.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/golang-as-a-platform/546937/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/golang-as-a-platform/546937/16</link>
        <pubDate>Thu, 25 Sep 2014 22:39:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546937-16</guid>
        <source url="https://forum.moparisthebest.com/t/golang-as-a-platform/546937.rss">Golang as a platform</source>
      </item>
      <item>
        <title>Golang as a platform</title>
        <dc:creator><![CDATA[@tyb97 tyb97]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tyb97">@tyb97</a> wrote:</p>
          <blockquote>
              <p>Are subroutines anything like coroutines?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/golang-as-a-platform/546937/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/golang-as-a-platform/546937/15</link>
        <pubDate>Thu, 25 Sep 2014 21:50:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546937-15</guid>
        <source url="https://forum.moparisthebest.com/t/golang-as-a-platform/546937.rss">Golang as a platform</source>
      </item>
      <item>
        <title>Golang as a platform</title>
        <dc:creator><![CDATA[@imthenull imthenull]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imthenull">@imthenull</a> wrote:</p>
          <blockquote>
              <p>I’d rather spend the extra time in C/C++ for the performance gain and ability to manage my own memory. I’m not willing to sacrifice the two for faster development time. I also wouldn’t consider a 10-20% difference in performance as negligible.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/golang-as-a-platform/546937/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/golang-as-a-platform/546937/14</link>
        <pubDate>Thu, 25 Sep 2014 16:59:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546937-14</guid>
        <source url="https://forum.moparisthebest.com/t/golang-as-a-platform/546937.rss">Golang as a platform</source>
      </item>
      <item>
        <title>Golang as a platform</title>
        <dc:creator><![CDATA[@lothy Lothy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lothy">@lothy</a> wrote:</p>
          <blockquote>
              <p>Hahaha. I’ve got nothing.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/golang-as-a-platform/546937/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/golang-as-a-platform/546937/13</link>
        <pubDate>Thu, 25 Sep 2014 11:45:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546937-13</guid>
        <source url="https://forum.moparisthebest.com/t/golang-as-a-platform/546937.rss">Golang as a platform</source>
      </item>
      <item>
        <title>Golang as a platform</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="11" data-topic="546937">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/lothy/40/51_1.png" class="avatar"> Lothy:</div>
<blockquote>
<p>I’m sorry, but if you’re 10 - 20% slower at running than I am then you’ll never catch up to me, let alone fudge me sideways.</p>
</blockquote>
</aside>
<p>That’s so negligible when you consider productivity.  So while you’re getting on your shoes to run I’ll be half way up your snatch with my dousing rod.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/golang-as-a-platform/546937/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/golang-as-a-platform/546937/12</link>
        <pubDate>Thu, 25 Sep 2014 09:50:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546937-12</guid>
        <source url="https://forum.moparisthebest.com/t/golang-as-a-platform/546937.rss">Golang as a platform</source>
      </item>
      <item>
        <title>Golang as a platform</title>
        <dc:creator><![CDATA[@lothy Lothy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lothy">@lothy</a> wrote:</p>
          <blockquote>
              <p>I’m sorry, but if you’re 10 - 20% slower at running than I am then you’ll never catch up to me, let alone fuck me sideways.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/golang-as-a-platform/546937/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/golang-as-a-platform/546937/11</link>
        <pubDate>Thu, 25 Sep 2014 09:36:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546937-11</guid>
        <source url="https://forum.moparisthebest.com/t/golang-as-a-platform/546937.rss">Golang as a platform</source>
      </item>
      <item>
        <title>Golang as a platform</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="9" data-topic="546937">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/lothy/40/51_1.png" class="avatar"> Lothy:</div>
<blockquote>
<p>C++ is superior.</p>
</blockquote>
</aside>
<p>I will fuck you sideways</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/golang-as-a-platform/546937/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/golang-as-a-platform/546937/10</link>
        <pubDate>Thu, 25 Sep 2014 05:57:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546937-10</guid>
        <source url="https://forum.moparisthebest.com/t/golang-as-a-platform/546937.rss">Golang as a platform</source>
      </item>
      <item>
        <title>Golang as a platform</title>
        <dc:creator><![CDATA[@lothy Lothy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lothy">@lothy</a> wrote:</p>
          <blockquote>
              <p>C++ is superior.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/golang-as-a-platform/546937/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/golang-as-a-platform/546937/9</link>
        <pubDate>Thu, 25 Sep 2014 05:50:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546937-9</guid>
        <source url="https://forum.moparisthebest.com/t/golang-as-a-platform/546937.rss">Golang as a platform</source>
      </item>
      <item>
        <title>Golang as a platform</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="7" data-topic="546937">
<div class="title">
<div class="quote-controls"></div>
 Jmood:</div>
<blockquote>
<p>inb4Rust.</p>
</blockquote>
</aside>
<p>Rust is way to complex in my book to even consider. It’s cool if you’re coming from C++ but I feel go achieves the same purposes Rust does in a much efficient manner.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/golang-as-a-platform/546937/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/golang-as-a-platform/546937/8</link>
        <pubDate>Thu, 25 Sep 2014 01:25:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546937-8</guid>
        <source url="https://forum.moparisthebest.com/t/golang-as-a-platform/546937.rss">Golang as a platform</source>
      </item>
      <item>
        <title>Golang as a platform</title>
        <dc:creator><![CDATA[@doom_j doom_j]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/doom_j">@doom_j</a> wrote:</p>
          <blockquote>
              <p>inb4Rust.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/golang-as-a-platform/546937/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/golang-as-a-platform/546937/7</link>
        <pubDate>Wed, 24 Sep 2014 18:57:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546937-7</guid>
        <source url="https://forum.moparisthebest.com/t/golang-as-a-platform/546937.rss">Golang as a platform</source>
      </item>
      <item>
        <title>Golang as a platform</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>Yeah I agree but I think it may be something they overlooked when writing the compiler. A lot of the time you only have nil values for errors.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/golang-as-a-platform/546937/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/golang-as-a-platform/546937/6</link>
        <pubDate>Wed, 24 Sep 2014 09:08:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546937-6</guid>
        <source url="https://forum.moparisthebest.com/t/golang-as-a-platform/546937.rss">Golang as a platform</source>
      </item>
      <item>
        <title>Golang as a platform</title>
        <dc:creator><![CDATA[@HcoJustin HcoJustin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hcojustin">@HcoJustin</a> wrote:</p>
          <blockquote>
              <p>[quote=“sinisoul, post:4, topic:546937”][quote author=HcoJustin link=topic=665834.msg4451248#msg4451248 date=1411548836]</p>
<pre><code class="lang-auto"></code></pre>
<p>Do you always have to return something for all parts of the tuple? Or is it smart enough to assume nil for everything missing?<br>
[/quote]</p>
<p>You have to always return the specified amount of arguments in the function signature.[/quote]<br>
That is dumb. The declaration clearly defines what it returns, and in your example where the last value is denoted as an error it would be nice to just skip that completely and let the compiler default to nil</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/golang-as-a-platform/546937/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/golang-as-a-platform/546937/5</link>
        <pubDate>Wed, 24 Sep 2014 09:01:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546937-5</guid>
        <source url="https://forum.moparisthebest.com/t/golang-as-a-platform/546937.rss">Golang as a platform</source>
      </item>
      <item>
        <title>Golang as a platform</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>[quote=“Davidi2, post:2, topic:546937”]Next week on ADHD Anonymous:<br>
Brainfudge as a platform?[/quote]</p>
<p>Can David figure out how to use the debugger on his IDE?</p>
<p>The world may never know</p>
<p>[quote=“HcoJustin, post:3, topic:546937”]<code>silabLovesDongs := func() (bool, error) { return true, nil } </code><br>
Do you always have to return something for all parts of the tuple? Or is it smart enough to assume nil for everything missing?[/quote]</p>
<p>You have to always return the specified amount of arguments in the function signature.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/golang-as-a-platform/546937/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/golang-as-a-platform/546937/4</link>
        <pubDate>Wed, 24 Sep 2014 08:54:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546937-4</guid>
        <source url="https://forum.moparisthebest.com/t/golang-as-a-platform/546937.rss">Golang as a platform</source>
      </item>
  </channel>
</rss>
