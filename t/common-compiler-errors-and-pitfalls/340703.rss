<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Common Compiler Errors and Pitfalls</title>
    <link>https://forum.moparisthebest.com/t/common-compiler-errors-and-pitfalls/340703</link>
    <description>Hello, I decided to make this topic because of all the simple compiler errors people have, and I beleive if they had a resource which focuses on all of these errors there wouldnt be a need for so many future help topics. These are all common errors provided with an example work around to them. 

[size=16pt][b]Table of Contents[/b][/size]
[size=15pt][b]Compiler[/b][/size]

[ul][li][iurl=#hundrederrors]100 Errors[/iurl][/li]
[li][iurl=#cntfindsymbl]Cannot Find Symbol[/iurl][/li]
[li][iurl=#prvteaccess]Variable has Private Access[/iurl][/li]
[li][iurl=#colonexpctd]; Expected[/iurl][/li]
[li][iurl=#bracketexpctd]( or ) Expected[/iurl][/li]
[li][iurl=#toolarge]Code Too Large[/iurl][/li]
[li][iurl=#dupemethod]Duplicate Method[/iurl][/li]
[li][iurl=#dupecase]Duplicate Case Label[/iurl][/li]
[li][iurl=#nortrntype]Missing Return Type[/iurl][/li]
[li][iurl=#nortrnstment]Missing Return Statement[/iurl][/li]
[li][iurl=#dupevar]Variable Already Defined[/iurl][/li]
[li][iurl=#nonstaticvar]Non-static Variable Cannot be Referenced from a static context[/iurl][/li]
[li][iurl=#shldbedeclared]Class ... is public, should be declared in...[/iurl][/li]
[li][iurl=#incmptbletype]Incompatible Type[/iurl][/li]
[li][iurl=#unrprtexc]Unreported Exception[/iurl][/li]
[li][iurl=#illstart]Illegal Start of Expression[/iurl][/li]
[li][iurl=#appliedto]... cannot be applied to ...[/iurl][/li]
[li][iurl=#elsewoutif]Else without if[/iurl][/li][/ul]


[size=15pt][b]Run Console[/b][/size]

[i]Coming soon...[/i]

[hr]

[anchor=hundrederrors]
[size=15pt][b]100 Errors[/b][/size]

This error happens to be a very common problem with beginners. This error is derived from a missing or having too many left or right brace brackets, { and }. 100 errors omit in private servers because thats the maximum the java compiler will output on default settings. Take a look at this example,

class OneHunderedError {
   public static void main(String[] args) {
      System.out.println(&quot;This is an example of 100 errors!&quot;);
}

I want you to focus on the parts highlighted in red. There are 3 brace brackets, two opened but only one was closed! Why? Because there was a missing brace that was supposed to close the main() method also. Since there was only one right brace (the closing brace), it only closed the main() and not the class! A quick fix would be like so,
[code=java]class OneHunderedError {
   public static void main(String[] args) {
      System.out.println(&quot;This is an example of a brace error!&quot;);
   }
}[/code]What did I do differently? Look at line 4, as you can see, a right brace was added to close the other left brace. This also must be the case for statements such as if, do, for, while, etc. Here is a snippet which would give 100 errors (this is relevant to a RSPS),
[code=java]public void doSomething() {
   if (playerLevel == 1) {
      sendMessage(&quot;You are only level 1!&quot;);
      sendMessage(&quot;Level up first!&quot;);
}[/code]Try and figure out how to fix it.

[anchor=cntfindsymbl]
[size=15pt][b]Cannot Find Symbol[/b][/size]

Another common pitfall for novices. This error means a certain variable or method cannot be found or hasnt been defined. Usually this is the case when the variable or method is located in a different class. Take a look,
[code=java]public class ClassOne {
   private int aVariable = 2;
   public int getAVariable() {
      return aVariable;
   }
}[/code]
[code=java]public class ClassTwo {
   public void printTheAVariable() {
      int variable = getAVariable();
      System.out.println(variable);
   }
}[/code]They are both two different classes, and the objective is we want to print the aVariable located in the ClassOne class from the printTheAVariable() in the ClassTwo class. But we get an error, cannot find symbol. Whats the problem? Well, we didnt make a reference to the ClassOne class, so how do we expect the compiler to know what we are asking for? We simply instantiate the ClassOne class like so,
[code=java]ClassOne classOne = new ClassOne();[/code]However we are not done. Now we need to reference our getAVariable() method. Here is what I mean,
[code=java]   public void printTheAVariable() {
      int variable = classOne.getAVariable();
      System.out.println(variable);
   }[/code]This will call the getAVariable() method from the ClassOne class! If done correctly, it will print out the aVariable integer: 2.

What if we wanted to call the aVariable in ClassOne instead of the getAVariable()? &quot;I referenced correctly but it gives me a &#39;variable has private access&#39; error.&quot; Well, thats going to be discussed in the next section. Also, this also partly applies to static variables/methods, read here

Here is an exercise for you to work on,
[code=java]public class PlayerLevel {
   public int playerLevel = 126;
}[/code]
[code=java]public class PrintPlayerLevel {
   public void printPlayerLevel() {
      int playerCbLevel = playerLevel;
      sendMessage(playerCbLevel);
   }
}[/code]Figure out how to fix it.

[anchor=prvteaccess]
[size=15pt][b]Variable has Private Access[/b][/size]

This is an error which applies to all methods/fields(variables) with the private modifier. For example,
[code=java]private int aVariable = 2;[/code]These are methods/fields which arent called outside of the class it is within (however reflection is a different story iirc). Read up on these for more information,
http://java.sun.com/docs/books/tutorial/java/javaOO/variables.html
http://java.sun.com/docs/books/tutorial/java/javaOO/accesscontrol.html

Looking back at the other example, what happens when we try and call the aVariable from the ClassOne class like so,
[code=java]public class ClassOne {
   private int aVariable = 2;
   public int getAVariable() {
      return aVariable;
   }
}[/code]
[code=java]public class ClassTwo {
   ClassOne classOne = new ClassOne();
   public void printTheAVariable() {
      int variable = classOne.aVariable;
      System.out.println(variable);
   }
}[/code]We get: [i]aVariable has private access in ClassOne[/i]. Why? Well, if you read the links I put up above, private modifiers mean methods/fields are only available within the class it is in. How can we fix this? Simply, you can take advantage of the Accessor pattern by making a &#39;getter&#39; method like so,
[code=java]   public int getAVariable() {
      return aVariable;
   }[/code]Which was already used in the first place. Or you can make the aVariable field public. Here is the correct code,
[code=java]public class ClassOne {
   public int aVariable = 2;
   public int getAVariable() {
      return aVariable;
   }
}[/code]
[code=java]public class ClassTwo {
   ClassOne classOne = new ClassOne();
   public void printTheAVariable() {
      int variable = classOne.aVariable;
      System.out.println(variable);
   }
}[/code]This is self explanatory however here is a short excercise. Make a simple getter method for a variable named playerLevel. Look above if you dont understand.

[anchor=colonexpctd]
[size=15pt][b]; Expected[/b][/size]

This is a pretty easy error. Like the error says, your missing a colon in the code. Colons are used to end expressions like so,
[code=java]public boolean expression = true;[/code]
Colons are used a lot. &quot;So why does my code give me a ; expected error?&quot; Well, you obviously were missing a colon somewhere. Take a look at this example,
[code=java]public void doSomething() {
   System.out.println(&quot;Doing something...&quot;)
}[/code]Why was there a ; expected error? Look at the end of the println() method and figure it out, thats your exercise.

[anchor=bracketexpctd]
[size=15pt][b]( or ) Expected[/b][/size]

This error occurs when there are dominating (too many) left or right brackets, ( or ). Another obvious fix, a simple way to fix it is to find where there are too many left brackets against right brackets. Look at this example,
[code=java]if (aVariable1 == aVariable2 {
   // do something here
}[/code]As you can see a right bracket was missing. Here is the correction,
[code=java]if (aVariable1 == aVariable2) {
   // do something here
}[/code]
This also applies to methods like so,
[code=java]System.out.println(variable));[/code]That would give a ; expected, however the problem lies with the fact there is one too many right brackets.

Your exercise for this section is trying to fix this if statement,
[code=java]if ((totalLevel + 1) - (totalLevel + (0+0)) {[/code]You dont have to focus on the variable or what this really does, the ovjective is to fix the brackets.

[anchor=toolarge]
[size=15pt][b]Code Too Large[/b][/size]

This error is popping up more and more, and many people dont know why this happens. In a Jave method, its size cannot exceed 64KB. Why? Google it. What to do when this occurs? Well, you can split the one method into two parts. Say you have a method called parseIncomingPackets() (this is a RSPS reference) and it exceeded 64KB. A simple way to rid of this error would be to split it into two parts by creating a nother method such as parseIncomingPackets2(). Here is an example,
[code=java]public void parseIncomingPackets() {
   // 64KB, compiler gives an error
}[/code]Split up,
[code=java]public void parseIncomingPackets() {
   // below 64KB, no error
}

public void parseIncomingPackets2() {
   // below 64KB, no error
}
[/code]Also, be noted you have to call the second method at one point probably like,
[code=java]public void parseIncomingPackets() {
   // your code here
   parseIncomingPackets2();
}[/code]

[anchor=dupemethod]
[size=15pt][b]Duplicate Method[/b][/size]

This error occurs when a programmer attempts to put two of the same methods in a class like so,
[code=java]class SomeClass {
   public void doSomething() {
      // do something
   }

   public void doSomething() {
      // do something
   }
}[/code]This would give a: [i]doSomething is already defined in SomeClass[/i] error. An easy fix is to just remove the appropriate method. Its usually just removing an older method. However, there can be a workaround. Methods with the same name but different parameters are a different story. Read on,
http://java.sun.com/docs/books/tutorial/java/javaOO/methods.html

These are called [i]overloading methods[/i]. Here is an example of overloaded methods,
[code=java]class SomeClass {
   public void doSomething(Object object) {
      // do something
   }

   public void doSomething() {
      // do something
   }
}[/code]As you can see, one of the doSomething() methods have a parameter which accepts an object. If you compile this class, you will not be given a duplicate method error. Your exercise is to create two different methods BOTH called getPlayer which one of them will accept a string called playerName and the other an integer called playerID.

[anchor=dupecase]
[size=15pt][b]Duplicate Case Label[/b][/size]

This error occurs when a programmer is using a [url=http://java.sun.com/docs/books/tutorial/java/nutsandbolts/switch.html]switch statement[/url] and attempts to compile when there are two of the same case labels. Here is an example of a duplicate case label,
[code=java]switch (expression) {
   case 1:
      // do something
   break;
   case 2:
      // do something
   break;
   case 2:
      // do something
   break;
}[/code]Notice carefully and you will see two cases labelled with the number 2. This isnt allowed by the compiler so a fix would be like so,
[code=java]switch (expression) {
   case 1:
      // do something
   break;
   case 2:
      // do something
   break;
   case 3:
      // do something
   break;
}[/code]You cant have multiple case labels. There is no exercise for this section.

[anchor=nortrntype]
[size=15pt][b]Missing Return Type[/b][/size]

A missing return type error indicates a method with no return type. A return type can be of an integer, boolean, char, string, etc. However this is not the case with constructors. Read up on constructors,
http://java.sun.com/docs/books/tutorial/java/javaOO/constructors.html

Say we have a method like so,
[code=java]public doSomething() {
   // do something here
}[/code]Why is it the compiler returns a [i]missing return type[/i] error? Its due to the fact doSomething has no return type, unless the class was named doSomething it wouldnt invoke an error becasue its a constructor. To fix such an error just place the return type you wish after the public modifier (or before the method name). Here is the fix,
[code=java]public void doSomething() {
   // do something here
}[/code]Remember that void isnt the only thing that can be used! You can use int, char, string, etc.

Study this snippet,
[code=java]class DoSomething {
   public DoSomething() {
      // code goes here
   }
}[/code]Does this give an error? Why or why doesnt it give an error?

[anchor=nortrnstment]
[size=15pt][b]Missing Return Statement[/b][/size]

Missing return statements tie in with the section we went over above. Return types (other than void) must return a value.
[code=java]public int getInt() {
   System.out.println(&quot;Called getInt!&quot;);
}[/code]This simple method displays a message on the console. But there is a problem, a [i]missing return statement[/i] error was thrown. Why? Like it says, we need the method to actually return something. All methods with a return type other than void requires a return statement. So to wrap this up, the fix would be,
[code=java]public int getInt() {
   System.out.println(&quot;Called getInt!&quot;);
   return anInteger;
}[/code]anInteger represents a variable which is of an integer. This also doesnt make a difference to boolean or other return types. Your exercise is to make a method with a boolean return type which will return a boolean variable called aBoolean.

[anchor=dupevar]
[size=15pt][b]Variable Already Defined[/b][/size]

A variable already defined error is similar to the duplicate method error. It means a variable is defined more than once. Take a look at this example which shows two local variables which would give the error,
[code=java]private void doSomething() {
        int number = 1;
        int number = aVariable;
        System.out.println(number);
}[/code]As you should be able to notice, the [i]number[/i] variable is defined twice in the same method. Which isnt allowed. Same thing goes for global variables.

[anchor=nonstaticvar]
[size=15pt][b]Non-static Variable Cannot be Referenced from a static context[/b][/size]

This error comes up when a programmer attempts to use a variable without a static keyword with a method that does. You can read more on static here,
http://java.sun.com/docs/books/tutorial/java/javaOO/initial.html

In the meantime, we have a class like so,
[code=java]class StaticExample {
   public int aVariable = 0;
   public static int getAVariable() {
      return aVariable;
   }
}[/code]The problem lies with the aVariable. As you can see it has no static keyword. The fix would be to either make aVariable a static variable, or to make the getAVariable() method non-static. Very self-explanatory, a exercise shouldnt be needed.

[anchor=shldbedeclared]
[size=15pt][b]Class ... is public, should be declared in...[/b][/size]

This happens when a programmer tries to create a class that doesnt correspond to the name of the java file. Say for example we have a class named Client. Why would we get an error for having the following,
[code=java]public class SomethingElse {
}[/code]The reason behind this is because the class is called SomethingElse when it really should be called Client. See the relationship? Heres an exercise (and perhaps a tricky one for beginners). If I had a constructor that was named after the java file, but NOT named after the class declaration (which is SomethingElse), would it work?

[anchor=unrprtexc]
[size=15pt][b]Unreported Exception[/b][/size]

An unreported exception error will be thrown if a snippet of code requires to be within a try/catch statement. Take a look at this example,
[code=java]    public void readFileInput() {
       FileInputStream fis = new FileInputStream(&quot;file.txt&quot;);
    }[/code]The problem with this code is it is necessary to have it closed in a try/catch block. To read more on those refer here,
http://java.sun.com/docs/books/tutorial/essential/exceptions/handling.html

In this case, a FileNotFoundException would be thrown if there happened to come an error. A fix would be to put all methods that require try/catch statements inside of one. Like so,
[code=java]    public void readFileInput() {
        try {
            FileInputStream fis = new FileInputStream(&quot;file.txt&quot;);
        } catch (FileNotFoundException ex) {
            // Handle error
        }
    }[/code] You also must import the class that corresponds to the exception. In this case you would need to import the FileNotFoundException class.
[code=java]import java.io.FileNotFoundException;[/code]

[anchor=illstart]
[size=15pt][b]Illegal Start of Expression[/b][/size]

An illegal start of expression can come up even when code looks perfectly fine, some common problems with this error are listed below. Defining a static field in a method isnt allowed, if you were to do this,
[code=java]public void aMethod() {
        static int variable = 5;
}[/code]Another would be with unbalanced brace or regular brackets. Take a look at this if statement,
[code=java]if (1+(11)) == 12)[/code]You can see here there is an extra bracket that isnt supposed to be there. [b]This section will be updated more.[/b]

[anchor=appliedto]
[size=15pt][b]... cannot be applied to ...[/b][/size]

This error comes up when the programmer invokes a method with incorrect [url=http://java.sun.com/docs/glossary.html#actual]parameters[/url]. Say for example we have this class,
[code=java]class SomeClass {
   public void sendMessage(String message, boolean isStaff) {
      // code here
   }

   public void run() {
      sendMessage(&quot;This is a message&quot;);
      // other codes here 
   }
}[/code]This would give us an error that [i]sendMessage(java.lang.String, boolean) in SomeClass cannot be applied to (java.lang.String)[/i]. There is a simple explanation, due to the fact the sendMessage() method has two parameters; a string and a boolean, we only invoked the method with a string. To resolve this problem, we would also call sendMessage() with a string and boolean. This would be the fix,
[code=java]class SomeClass {
   public void sendMessage(String message, boolean isStaff) {
      // code here
   }

   public void run() {
      sendMessage(&quot;This is a message&quot;, true); // can be true or false
      // other codes here 
   }
}[/code]This also applies to whether its being called with a wrong type, too little or too many parameters. An exercise for you is, would having two different sendMessage() methods with different parameters fix the problem?

[anchor=elsewoutif]
[size=15pt][b]Else without if[/b][/size]

An else without if error is pretty self explanatory, but I will go over it anyways. The result of such an error happens when using if statements or else/else if statements. Basically, a rule applies to else/else if statements - they need to have a beginning expression. What this means, is there needs to be an if statement before any else/else if statements. This is WRONG,
[code=java]else {
   // shit here
}[/code]This is correct,
[code=java]if (expression) {
   // shit here
} else {
   // shit here
}[/code]
This is WRONG,
[code=java]else if (expression) {
   // shit here
} else {
   // shit here
}[/code]
This is correct,
[code=java]if (expression) {
   // shit here
} else if (expression) {
   // shit here
} else {
   // shit here
}[/code]
Hopefully you get the point.</description>
    
    <lastBuildDate>Fri, 28 May 2010 21:48:13 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/common-compiler-errors-and-pitfalls/340703.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Common Compiler Errors and Pitfalls</title>
        <dc:creator><![CDATA[@si_force Si Force]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/si_force">@si_force</a> wrote:</p>
          <blockquote>
              <p>Anybody up for taking over on this thread? The original poster has been banned. PM me if so.</p>
<p>Edit: Found a taker.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/common-compiler-errors-and-pitfalls/340703/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/common-compiler-errors-and-pitfalls/340703/8</link>
        <pubDate>Fri, 28 May 2010 21:48:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-340703-8</guid>
        <source url="https://forum.moparisthebest.com/t/common-compiler-errors-and-pitfalls/340703.rss">Common Compiler Errors and Pitfalls</source>
      </item>
      <item>
        <title>Common Compiler Errors and Pitfalls</title>
        <dc:creator><![CDATA[@cocky cocky]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cocky">@cocky</a> wrote:</p>
          <blockquote>
              <p>Sup dude, very nice tut thing… I jst have a question, at the end after I compiled the server it said: 100 errors.<br>
Nothing else. If I went up to read some of the details, it said cannot find symbol “:” so I’m wondering, what does it mean? And how can I fix it?</p>
<p>Extra details: I changed the commands and It still doesn’t change, this may be because of these reasons, plz help. I’m new to coding sources and I’m trying, my source is: pvp 4 life (it’s a 517.) Can u maybe get the source an fix the compiling problem and pm me the link, or can u jst tell me exactly what to do? Plz and thank u.</p>
<p>Edit: fixed it, thank u for the tut, it helped.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/common-compiler-errors-and-pitfalls/340703/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/common-compiler-errors-and-pitfalls/340703/7</link>
        <pubDate>Fri, 28 May 2010 03:29:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-340703-7</guid>
        <source url="https://forum.moparisthebest.com/t/common-compiler-errors-and-pitfalls/340703.rss">Common Compiler Errors and Pitfalls</source>
      </item>
      <item>
        <title>Common Compiler Errors and Pitfalls</title>
        <dc:creator><![CDATA[@n10si_t n10si t]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/n10si_t">@n10si_t</a> wrote:</p>
          <blockquote>
              <p>Add reached end of file while parsing to this list</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/common-compiler-errors-and-pitfalls/340703/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/common-compiler-errors-and-pitfalls/340703/6</link>
        <pubDate>Fri, 28 May 2010 01:45:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-340703-6</guid>
        <source url="https://forum.moparisthebest.com/t/common-compiler-errors-and-pitfalls/340703.rss">Common Compiler Errors and Pitfalls</source>
      </item>
      <item>
        <title>Common Compiler Errors and Pitfalls</title>
        <dc:creator><![CDATA[@doom_j doom_j]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/doom_j">@doom_j</a> wrote:</p>
          <blockquote>
              <p>Thanks man, I hope people look here before they ask some of those questions.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/common-compiler-errors-and-pitfalls/340703/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/common-compiler-errors-and-pitfalls/340703/5</link>
        <pubDate>Thu, 20 May 2010 04:46:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-340703-5</guid>
        <source url="https://forum.moparisthebest.com/t/common-compiler-errors-and-pitfalls/340703.rss">Common Compiler Errors and Pitfalls</source>
      </item>
      <item>
        <title>Common Compiler Errors and Pitfalls</title>
        <dc:creator><![CDATA[@Project_Evolution Project Evolution]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/project_evolution">@Project_Evolution</a> wrote:</p>
          <blockquote>
              <p>You could do that, but you would still need to split up the methods because its the method’s size that cannot exceed 64KB. Anyways, thanks for posting. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/common-compiler-errors-and-pitfalls/340703/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/common-compiler-errors-and-pitfalls/340703/4</link>
        <pubDate>Wed, 19 May 2010 23:25:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-340703-4</guid>
        <source url="https://forum.moparisthebest.com/t/common-compiler-errors-and-pitfalls/340703.rss">Common Compiler Errors and Pitfalls</source>
      </item>
      <item>
        <title>Common Compiler Errors and Pitfalls</title>
        <dc:creator><![CDATA[@JaydenD12 JaydenD12]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jaydend12">@JaydenD12</a> wrote:</p>
          <blockquote>
              <p>With the code too large error you could just create a new class for the specific packet that’s full, usually it’s the object action 1 packet;</p>
<p><code>public class ObjectAction1
{
	public static void ObjectAction1(Client c)
	{
		//etc...
	}
}</code></p>
<p><code>case 132: //Object action 1 packet.
	ObjectAction1.ObjectAction1(this);
	break;</code></p>
<p>I think you get the idea.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/common-compiler-errors-and-pitfalls/340703/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/common-compiler-errors-and-pitfalls/340703/3</link>
        <pubDate>Wed, 19 May 2010 23:12:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-340703-3</guid>
        <source url="https://forum.moparisthebest.com/t/common-compiler-errors-and-pitfalls/340703.rss">Common Compiler Errors and Pitfalls</source>
      </item>
      <item>
        <title>Common Compiler Errors and Pitfalls</title>
        <dc:creator><![CDATA[@Project_Evolution Project Evolution]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/project_evolution">@Project_Evolution</a> wrote:</p>
          <blockquote>
              <p>[hr]</p>
<p>You can find wonderful terminology here,<br>
<a href="http://java.sun.com/docs/glossary.html" class="onebox" target="_blank" rel="nofollow noopener">http://java.sun.com/docs/glossary.html</a></p>
<p>In case you are stuck on anything, you can find many Java resources with Google or from here,<br>
<aside class="onebox whitelistedgeneric">
  <header class="source">
      <img src="https://forum.moparisthebest.com/uploads/default/original/2X/1/1f0dc167bcf798bdbd70b03bf0fd1bc836e54e1a.png" class="site-icon" width="32" height="32">
      <a href="https://forum.moparisthebest.com/" target="_blank">moparisthebest.com</a>
  </header>
  <article class="onebox-body">
    <img src="https://forum.moparisthebest.com/uploads/default/original/2X/4/41fecb6185fddc2758aeba68c3f8c9c78e26e4ff.png" class="thumbnail onebox-avatar" width="500" height="500">

<h3><a href="https://forum.moparisthebest.com/" target="_blank">moparisthebest.com</a></h3>

<p>programming, irc, cars</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>
<br>
Thanks for reading, more to come soon.<br>
~ Project Evolution</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/common-compiler-errors-and-pitfalls/340703/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/common-compiler-errors-and-pitfalls/340703/2</link>
        <pubDate>Wed, 19 May 2010 23:06:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-340703-2</guid>
        <source url="https://forum.moparisthebest.com/t/common-compiler-errors-and-pitfalls/340703.rss">Common Compiler Errors and Pitfalls</source>
      </item>
      <item>
        <title>Common Compiler Errors and Pitfalls</title>
        <dc:creator><![CDATA[@Project_Evolution Project Evolution]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/project_evolution">@Project_Evolution</a> wrote:</p>
          <blockquote>
              <p>Hello, I decided to make this topic because of all the simple compiler errors people have, and I beleive if they had a resource which focuses on all of these errors there wouldnt be a need for so many future help topics. These are all common errors provided with an example work around to them.</p>
<p>[size=16pt]<span class="bbcode-b">Table of Contents</span>[/size]<br>
[size=15pt]<span class="bbcode-b">Compiler</span>[/size]</p>
<p>[ul][li][iurl=#hundrederrors]100 Errors[/iurl][/li]<br>
[li][iurl=#cntfindsymbl]Cannot Find Symbol[/iurl][/li]<br>
[li][iurl=#prvteaccess]Variable has Private Access[/iurl][/li]<br>
[li][iurl=#colonexpctd]; Expected[/iurl][/li]<br>
[li]<a>iurl=#bracketexpctd</a> Expected[/iurl][/li]<br>
[li][iurl=#toolarge]Code Too Large[/iurl][/li]<br>
[li][iurl=#dupemethod]Duplicate Method[/iurl][/li]<br>
[li][iurl=#dupecase]Duplicate Case Label[/iurl][/li]<br>
[li][iurl=#nortrntype]Missing Return Type[/iurl][/li]<br>
[li][iurl=#nortrnstment]Missing Return Statement[/iurl][/li]<br>
[li][iurl=#dupevar]Variable Already Defined[/iurl][/li]<br>
[li][iurl=#nonstaticvar]Non-static Variable Cannot be Referenced from a static context[/iurl][/li]<br>
[li][iurl=#shldbedeclared]Class … is public, should be declared in…[/iurl][/li]<br>
[li][iurl=#incmptbletype]Incompatible Type[/iurl][/li]<br>
[li][iurl=#unrprtexc]Unreported Exception[/iurl][/li]<br>
[li][iurl=#illstart]Illegal Start of Expression[/iurl][/li]<br>
[li][iurl=#appliedto]… cannot be applied to …[/iurl][/li]<br>
[li][iurl=#elsewoutif]Else without if[/iurl][/li][/ul]</p>
<p>[size=15pt]<span class="bbcode-b">Run Console</span>[/size]</p>
<p><span class="bbcode-i">Coming soon…</span></p>
<p>[hr]</p>
<p>[anchor=hundrederrors]<br>
[size=15pt]<span class="bbcode-b">100 Errors</span>[/size]</p>
<p>This error happens to be a very common problem with beginners. This error is derived from a missing or having too many left or right brace brackets, { and }. 100 errors omit in private servers because thats the maximum the java compiler will output on default settings. Take a look at this example,</p>
<p>class OneHunderedError {<br>
public static void main(String[] args) {<br>
System.out.println(“This is an example of 100 errors!”);<br>
}</p>
<p>I want you to focus on the parts highlighted in red. There are 3 brace brackets, two opened but only one was closed! Why? Because there was a missing brace that was supposed to close the main() method also. Since there was only one right brace (the closing brace), it only closed the main() and not the class! A quick fix would be like so,</p>
<p><code>class OneHunderedError {
   public static void main(String[] args) {
      System.out.println("This is an example of a brace error!");
   }
}</code>What did I do differently? Look at line 4, as you can see, a right brace was added to close the other left brace. This also must be the case for statements such as if, do, for, while, etc. Here is a snippet which would give 100 errors (this is relevant to a RSPS),</p>
<p><code>public void doSomething() {
   if (playerLevel == 1) {
      sendMessage("You are only level 1!");
      sendMessage("Level up first!");
}</code>Try and figure out how to fix it.</p>
<p>[anchor=cntfindsymbl]<br>
[size=15pt]<span class="bbcode-b">Cannot Find Symbol</span>[/size]</p>
<p>Another common pitfall for novices. This error means a certain variable or method cannot be found or hasnt been defined. Usually this is the case when the variable or method is located in a different class. Take a look,</p>
<p><code>public class ClassOne {
   private int aVariable = 2;
   public int getAVariable() {
      return aVariable;
   }
}</code></p>
<p><code>public class ClassTwo {
   public void printTheAVariable() {
      int variable = getAVariable();
      System.out.println(variable);
   }
}</code>They are both two different classes, and the objective is we want to print the aVariable located in the ClassOne class from the printTheAVariable() in the ClassTwo class. But we get an error, cannot find symbol. Whats the problem? Well, we didnt make a reference to the ClassOne class, so how do we expect the compiler to know what we are asking for? We simply instantiate the ClassOne class like so,</p>
<p><code>ClassOne classOne = new ClassOne();</code>However we are not done. Now we need to reference our getAVariable() method. Here is what I mean,</p>
<p><code>   public void printTheAVariable() {
      int variable = classOne.getAVariable();
      System.out.println(variable);
   }</code>This will call the getAVariable() method from the ClassOne class! If done correctly, it will print out the aVariable integer: 2.</p>
<p>What if we wanted to call the aVariable in ClassOne instead of the getAVariable()? “I referenced correctly but it gives me a ‘variable has private access’ error.” Well, thats going to be discussed in the next section. Also, this also partly applies to static variables/methods, read here</p>
<p>Here is an exercise for you to work on,</p>
<p><code>public class PlayerLevel {
   public int playerLevel = 126;
}</code></p>
<p><code>public class PrintPlayerLevel {
   public void printPlayerLevel() {
      int playerCbLevel = playerLevel;
      sendMessage(playerCbLevel);
   }
}</code>Figure out how to fix it.</p>
<p>[anchor=prvteaccess]<br>
[size=15pt]<span class="bbcode-b">Variable has Private Access</span>[/size]</p>
<p>This is an error which applies to all methods/fields(variables) with the private modifier. For example,</p>
<p><code>private int aVariable = 2;</code>These are methods/fields which arent called outside of the class it is within (however reflection is a different story iirc). Read up on these for more information,<br>
<a href="http://java.sun.com/docs/books/tutorial/java/javaOO/variables.html" class="onebox" target="_blank" rel="nofollow noopener">http://java.sun.com/docs/books/tutorial/java/javaOO/variables.html</a><br>
<a href="http://java.sun.com/docs/books/tutorial/java/javaOO/accesscontrol.html" class="onebox" target="_blank" rel="nofollow noopener">http://java.sun.com/docs/books/tutorial/java/javaOO/accesscontrol.html</a></p>
<p>Looking back at the other example, what happens when we try and call the aVariable from the ClassOne class like so,</p>
<p><code>public class ClassOne {
   private int aVariable = 2;
   public int getAVariable() {
      return aVariable;
   }
}</code></p>
<p><code>public class ClassTwo {
   ClassOne classOne = new ClassOne();
   public void printTheAVariable() {
      int variable = classOne.aVariable;
      System.out.println(variable);
   }
}</code>We get: <span class="bbcode-i">aVariable has private access in ClassOne</span>. Why? Well, if you read the links I put up above, private modifiers mean methods/fields are only available within the class it is in. How can we fix this? Simply, you can take advantage of the Accessor pattern by making a ‘getter’ method like so,</p>
<p><code>   public int getAVariable() {
      return aVariable;
   }</code>Which was already used in the first place. Or you can make the aVariable field public. Here is the correct code,</p>
<p><code>public class ClassOne {
   public int aVariable = 2;
   public int getAVariable() {
      return aVariable;
   }
}</code></p>
<p><code>public class ClassTwo {
   ClassOne classOne = new ClassOne();
   public void printTheAVariable() {
      int variable = classOne.aVariable;
      System.out.println(variable);
   }
}</code>This is self explanatory however here is a short excercise. Make a simple getter method for a variable named playerLevel. Look above if you dont understand.</p>
<p>[anchor=colonexpctd]<br>
[size=15pt]<span class="bbcode-b">; Expected</span>[/size]</p>
<p>This is a pretty easy error. Like the error says, your missing a colon in the code. Colons are used to end expressions like so,</p>
<pre><code class="lang-auto">public boolean expression = true;</code></pre>
<p>Colons are used a lot. “So why does my code give me a ; expected error?” Well, you obviously were missing a colon somewhere. Take a look at this example,</p>
<p><code>public void doSomething() {
   System.out.println("Doing something...")
}</code>Why was there a ; expected error? Look at the end of the println() method and figure it out, thats your exercise.</p>
<p>[anchor=bracketexpctd]<br>
[size=15pt]<a>b</a> Expected[/b][/size]</p>
<p>This error occurs when there are dominating (too many) left or right brackets, ( or ). Another obvious fix, a simple way to fix it is to find where there are too many left brackets against right brackets. Look at this example,</p>
<p><code>if (aVariable1 == aVariable2 {
   // do something here
}</code>As you can see a right bracket was missing. Here is the correction,</p>
<p><code>if (aVariable1 == aVariable2) {
   // do something here
}</code><br>
This also applies to methods like so,</p>
<p><code>System.out.println(variable));</code>That would give a ; expected, however the problem lies with the fact there is one too many right brackets.</p>
<p>Your exercise for this section is trying to fix this if statement,</p>
<p><code>if ((totalLevel + 1) - (totalLevel + (0+0)) {</code>You dont have to focus on the variable or what this really does, the ovjective is to fix the brackets.</p>
<p>[anchor=toolarge]<br>
[size=15pt]<span class="bbcode-b">Code Too Large</span>[/size]</p>
<p>This error is popping up more and more, and many people dont know why this happens. In a Jave method, its size cannot exceed 64KB. Why? Google it. What to do when this occurs? Well, you can split the one method into two parts. Say you have a method called parseIncomingPackets() (this is a RSPS reference) and it exceeded 64KB. A simple way to rid of this error would be to split it into two parts by creating a nother method such as parseIncomingPackets2(). Here is an example,</p>
<p><code>public void parseIncomingPackets() {
   // 64KB, compiler gives an error
}</code>Split up,</p>
<p>[code=java]public void parseIncomingPackets() {<br>
// below 64KB, no error<br>
}</p>
<p>public void parseIncomingPackets2() {<br>
// below 64KB, no error<br>
}<br>
[/code]Also, be noted you have to call the second method at one point probably like,</p>
<p><code>public void parseIncomingPackets() {
   // your code here
   parseIncomingPackets2();
}</code></p>
<p>[anchor=dupemethod]<br>
[size=15pt]<span class="bbcode-b">Duplicate Method</span>[/size]</p>
<p>This error occurs when a programmer attempts to put two of the same methods in a class like so,</p>
<p>[code=java]class SomeClass {<br>
public void doSomething() {<br>
// do something<br>
}</p>
<p>public void doSomething() {<br>
// do something<br>
}<br>
}[/code]This would give a: <span class="bbcode-i">doSomething is already defined in SomeClass</span> error. An easy fix is to just remove the appropriate method. Its usually just removing an older method. However, there can be a workaround. Methods with the same name but different parameters are a different story. Read on,<br>
<a href="http://java.sun.com/docs/books/tutorial/java/javaOO/methods.html" class="onebox" target="_blank" rel="nofollow noopener">http://java.sun.com/docs/books/tutorial/java/javaOO/methods.html</a></p>
<p>These are called <span class="bbcode-i">overloading methods</span>. Here is an example of overloaded methods,</p>
<p>[code=java]class SomeClass {<br>
public void doSomething(Object object) {<br>
// do something<br>
}</p>
<p>public void doSomething() {<br>
// do something<br>
}<br>
}[/code]As you can see, one of the doSomething() methods have a parameter which accepts an object. If you compile this class, you will not be given a duplicate method error. Your exercise is to create two different methods BOTH called getPlayer which one of them will accept a string called playerName and the other an integer called playerID.</p>
<p>[anchor=dupecase]<br>
[size=15pt]<span class="bbcode-b">Duplicate Case Label</span>[/size]</p>
<p>This error occurs when a programmer is using a <a href="http://java.sun.com/docs/books/tutorial/java/nutsandbolts/switch.html" data-bbcode="true" rel="nofollow noopener">switch statement</a> and attempts to compile when there are two of the same case labels. Here is an example of a duplicate case label,</p>
<p><code>switch (expression) {
   case 1:
      // do something
   break;
   case 2:
      // do something
   break;
   case 2:
      // do something
   break;
}</code>Notice carefully and you will see two cases labelled with the number 2. This isnt allowed by the compiler so a fix would be like so,</p>
<p><code>switch (expression) {
   case 1:
      // do something
   break;
   case 2:
      // do something
   break;
   case 3:
      // do something
   break;
}</code>You cant have multiple case labels. There is no exercise for this section.</p>
<p>[anchor=nortrntype]<br>
[size=15pt]<span class="bbcode-b">Missing Return Type</span>[/size]</p>
<p>A missing return type error indicates a method with no return type. A return type can be of an integer, boolean, char, string, etc. However this is not the case with constructors. Read up on constructors,<br>
<a href="http://java.sun.com/docs/books/tutorial/java/javaOO/constructors.html" class="onebox" target="_blank" rel="nofollow noopener">http://java.sun.com/docs/books/tutorial/java/javaOO/constructors.html</a></p>
<p>Say we have a method like so,</p>
<p><code>public doSomething() {
   // do something here
}</code>Why is it the compiler returns a <span class="bbcode-i">missing return type</span> error? Its due to the fact doSomething has no return type, unless the class was named doSomething it wouldnt invoke an error becasue its a constructor. To fix such an error just place the return type you wish after the public modifier (or before the method name). Here is the fix,</p>
<p><code>public void doSomething() {
   // do something here
}</code>Remember that void isnt the only thing that can be used! You can use int, char, string, etc.</p>
<p>Study this snippet,</p>
<p><code>class DoSomething {
   public DoSomething() {
      // code goes here
   }
}</code>Does this give an error? Why or why doesnt it give an error?</p>
<p>[anchor=nortrnstment]<br>
[size=15pt]<span class="bbcode-b">Missing Return Statement</span>[/size]</p>
<p>Missing return statements tie in with the section we went over above. Return types (other than void) must return a value.</p>
<p><code>public int getInt() {
   System.out.println("Called getInt!");
}</code>This simple method displays a message on the console. But there is a problem, a <span class="bbcode-i">missing return statement</span> error was thrown. Why? Like it says, we need the method to actually return something. All methods with a return type other than void requires a return statement. So to wrap this up, the fix would be,</p>
<p><code>public int getInt() {
   System.out.println("Called getInt!");
   return anInteger;
}</code>anInteger represents a variable which is of an integer. This also doesnt make a difference to boolean or other return types. Your exercise is to make a method with a boolean return type which will return a boolean variable called aBoolean.</p>
<p>[anchor=dupevar]<br>
[size=15pt]<span class="bbcode-b">Variable Already Defined</span>[/size]</p>
<p>A variable already defined error is similar to the duplicate method error. It means a variable is defined more than once. Take a look at this example which shows two local variables which would give the error,</p>
<p><code>private void doSomething() {
        int number = 1;
        int number = aVariable;
        System.out.println(number);
}</code>As you should be able to notice, the <span class="bbcode-i">number</span> variable is defined twice in the same method. Which isnt allowed. Same thing goes for global variables.</p>
<p>[anchor=nonstaticvar]<br>
[size=15pt]<span class="bbcode-b">Non-static Variable Cannot be Referenced from a static context</span>[/size]</p>
<p>This error comes up when a programmer attempts to use a variable without a static keyword with a method that does. You can read more on static here,<br>
<a href="http://java.sun.com/docs/books/tutorial/java/javaOO/initial.html" class="onebox" target="_blank" rel="nofollow noopener">http://java.sun.com/docs/books/tutorial/java/javaOO/initial.html</a></p>
<p>In the meantime, we have a class like so,</p>
<p><code>class StaticExample {
   public int aVariable = 0;
   public static int getAVariable() {
      return aVariable;
   }
}</code>The problem lies with the aVariable. As you can see it has no static keyword. The fix would be to either make aVariable a static variable, or to make the getAVariable() method non-static. Very self-explanatory, a exercise shouldnt be needed.</p>
<p>[anchor=shldbedeclared]<br>
[size=15pt]<span class="bbcode-b">Class … is public, should be declared in…</span>[/size]</p>
<p>This happens when a programmer tries to create a class that doesnt correspond to the name of the java file. Say for example we have a class named Client. Why would we get an error for having the following,</p>
<p><code>public class SomethingElse {
}</code>The reason behind this is because the class is called SomethingElse when it really should be called Client. See the relationship? Heres an exercise (and perhaps a tricky one for beginners). If I had a constructor that was named after the java file, but NOT named after the class declaration (which is SomethingElse), would it work?</p>
<p>[anchor=unrprtexc]<br>
[size=15pt]<span class="bbcode-b">Unreported Exception</span>[/size]</p>
<p>An unreported exception error will be thrown if a snippet of code requires to be within a try/catch statement. Take a look at this example,</p>
<p><code>    public void readFileInput() {
       FileInputStream fis = new FileInputStream("file.txt");
    }</code>The problem with this code is it is necessary to have it closed in a try/catch block. To read more on those refer here,<br>
<a href="http://java.sun.com/docs/books/tutorial/essential/exceptions/handling.html" class="onebox" target="_blank" rel="nofollow noopener">http://java.sun.com/docs/books/tutorial/essential/exceptions/handling.html</a></p>
<p>In this case, a FileNotFoundException would be thrown if there happened to come an error. A fix would be to put all methods that require try/catch statements inside of one. Like so,</p>
<p><code>    public void readFileInput() {
        try {
            FileInputStream fis = new FileInputStream("file.txt");
        } catch (FileNotFoundException ex) {
            // Handle error
        }
    }</code> You also must import the class that corresponds to the exception. In this case you would need to import the FileNotFoundException class.</p>
<pre><code class="lang-auto">import java.io.FileNotFoundException;</code></pre>
<p>[anchor=illstart]<br>
[size=15pt]<span class="bbcode-b">Illegal Start of Expression</span>[/size]</p>
<p>An illegal start of expression can come up even when code looks perfectly fine, some common problems with this error are listed below. Defining a static field in a method isnt allowed, if you were to do this,</p>
<p><code>public void aMethod() {
        static int variable = 5;
}</code>Another would be with unbalanced brace or regular brackets. Take a look at this if statement,</p>
<pre><code class="lang-auto">if (1+(11)) == 12)</code></pre>
<p>[anchor=appliedto]<br>
[size=15pt]<span class="bbcode-b">… cannot be applied to …</span>[/size]</p>
<p>This error comes up when the programmer invokes a method with incorrect <a href="http://java.sun.com/docs/glossary.html#actual" data-bbcode="true" rel="nofollow noopener">parameters</a>. Say for example we have this class,</p>
<p>[code=java]class SomeClass {<br>
public void sendMessage(String message, boolean isStaff) {<br>
// code here<br>
}</p>
<p>public void run() {<br>
sendMessage(“This is a message”);<br>
// other codes here<br>
}<br>
}[/code]This would give us an error that <span class="bbcode-i">sendMessage(java.lang.String, boolean) in SomeClass cannot be applied to (java.lang.String)</span>. There is a simple explanation, due to the fact the sendMessage() method has two parameters; a string and a boolean, we only invoked the method with a string. To resolve this problem, we would also call sendMessage() with a string and boolean. This would be the fix,</p>
<p>[code=java]class SomeClass {<br>
public void sendMessage(String message, boolean isStaff) {<br>
// code here<br>
}</p>
<p>public void run() {<br>
sendMessage(“This is a message”, true); // can be true or false<br>
// other codes here<br>
}<br>
}[/code]This also applies to whether its being called with a wrong type, too little or too many parameters. An exercise for you is, would having two different sendMessage() methods with different parameters fix the problem?</p>
<p>[anchor=elsewoutif]<br>
[size=15pt]<span class="bbcode-b">Else without if</span>[/size]</p>
<p>An else without if error is pretty self explanatory, but I will go over it anyways. The result of such an error happens when using if statements or else/else if statements. Basically, a rule applies to else/else if statements - they need to have a beginning expression. What this means, is there needs to be an if statement before any else/else if statements. This is WRONG,</p>
<p><code>else {
   // shit here
}</code>This is correct,</p>
<p><code>if (expression) {
   // shit here
} else {
   // shit here
}</code><br>
This is WRONG,</p>
<p><code>else if (expression) {
   // shit here
} else {
   // shit here
}</code><br>
This is correct,</p>
<p><code>if (expression) {
   // shit here
} else if (expression) {
   // shit here
} else {
   // shit here
}</code><br>
Hopefully you get the point.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/common-compiler-errors-and-pitfalls/340703/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/common-compiler-errors-and-pitfalls/340703/1</link>
        <pubDate>Wed, 19 May 2010 23:05:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-340703-1</guid>
        <source url="https://forum.moparisthebest.com/t/common-compiler-errors-and-pitfalls/340703.rss">Common Compiler Errors and Pitfalls</source>
      </item>
  </channel>
</rss>
