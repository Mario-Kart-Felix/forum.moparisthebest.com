<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Shops</title>
    <link>https://forum.moparisthebest.com/t/shops/417687</link>
    <description>I was wondering which would be the best way to do this. Right now I have an abstract class called Shops.

[code=java]
package org.hyperion.rs2.model.container;

/**
 *
 * @author The Wanderer
 */
public abstract class Shops {
    
    protected static final Container CONTAINER = new Container(Container.Type.ALWAYS_STACK, 40);
    
    abstract String getName();

    abstract boolean isGeneralStore();

    abstract int getCurrency();
}[/code]

And then a class that extends Shops would be the actual shop:
[code]
package org.hyperion.rs2.model.container.impl;

import org.hyperion.rs2.model.Item;
import org.hyperion.rs2.model.container.Shops;
/**
 *
 * @author The Wanderer
 */
public abstract class AlKharidGeneralStore extends Shops {
    
    private static final Item[] DEFAULT_STOCK = new Item[] { new Item(1931, 3),
                    new Item(1935, 2), new Item(5603, 2), new Item(1925, 2),
                    new Item(590, 2), new Item(1755, 2), new Item(2347, 5) };

    private static final int[] NPC_IDS = new int[] { 526 };

    public String getName() {
        return &quot;Al Kharid General Store.&quot;;
    }


    public boolean isGeneralStore() {
        return true;
    }


    public int getCurrency() {
        return 995;
    }
}[/code]

Then I would create a class called ShopHandler to handle each individual shop, right? For example you would have a method
[code=Java]public void buying(Shop shop) {
     if(shop.getCurrency() == 995) {
     }
}
//and so on and so on
[/code]

Well, I was thinking I could also do an enum that would contain the same information. like...
[code=Java]AL_KHARID_GENERAL_STORE(new int[] = { 526 }, true, 995, &quot;Al Kharid General Store.&quot;, new Item[] { new Item(1931, 3), new Item(1935, 2), new Item(5603, 2), new Item(1925, 2), new Item(590, 2), new Item(1755, 2), new Item(2347, 5) });[/code]
Which would be a better system?</description>
    
    <lastBuildDate>Mon, 10 Oct 2011 04:15:40 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/shops/417687.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Shops</title>
        <dc:creator><![CDATA[@the_wanderer The Wanderer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_wanderer">@the_wanderer</a> wrote:</p>
          <blockquote>
              <p>I was wondering which would be the best way to do this. Right now I have an abstract class called Shops.</p>
<p>[code=java]<br>
package org.hyperion.rs2.model.container;</p>
<p>/**<br>
*</p>
<ul>
<li>
<p><span class="mention">@author</span> The Wanderer<br>
*/<br>
public abstract class Shops {</p>
<p>protected static final Container CONTAINER = new Container(Container.Type.ALWAYS_STACK, 40);</p>
<p>abstract String getName();</p>
<p>abstract boolean isGeneralStore();</p>
<p>abstract int getCurrency();<br>
}[/code]</p>
</li>
</ul>
<p>And then a class that extends Shops would be the actual shop:</p>
<pre><code class="lang-auto">package org.hyperion.rs2.model.container.impl;

import org.hyperion.rs2.model.Item;
import org.hyperion.rs2.model.container.Shops;
/**
 *
 * @author The Wanderer
 */
public abstract class AlKharidGeneralStore extends Shops {
    
    private static final Item[] DEFAULT_STOCK = new Item[] { new Item(1931, 3),
                    new Item(1935, 2), new Item(5603, 2), new Item(1925, 2),
                    new Item(590, 2), new Item(1755, 2), new Item(2347, 5) };

    private static final int[] NPC_IDS = new int[] { 526 };

    public String getName() {
        return "Al Kharid General Store.";
    }


    public boolean isGeneralStore() {
        return true;
    }


    public int getCurrency() {
        return 995;
    }
}[/code]

Then I would create a class called ShopHandler to handle each individual shop, right? For example you would have a method
[code=Java]public void buying(Shop shop) {
     if(shop.getCurrency() == 995) {
     }
}
//and so on and so on</code></pre>
<p>Well, I was thinking I could also do an enum that would contain the same information. likeâ€¦</p>
<pre><code class="lang-auto"></code></pre>
<p>Which would be a better system?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/shops/417687/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/shops/417687/1</link>
        <pubDate>Mon, 10 Oct 2011 04:15:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-417687-1</guid>
        <source url="https://forum.moparisthebest.com/t/shops/417687.rss">Shops</source>
      </item>
  </channel>
</rss>
