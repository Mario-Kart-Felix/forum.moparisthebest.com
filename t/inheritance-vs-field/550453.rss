<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Inheritance vs Field</title>
    <link>https://forum.moparisthebest.com/t/inheritance-vs-field/550453</link>
    <description>Say you have a Transform class


[code=java]
public class Transform {


float angleX;
float angleY;
float angleZ;


Vector location;


getAngleX();
getAngleY();
getAngleZ();


getLocation();


}
[/code]


And then say you have a Camera class that uses all of these methods to move around the world.


My question is (and forgive me if this is rudimentary), what is the difference between:


[code=java]
public class Camera {


private Transform transform;


getTransform();


}
[/code]


and


[code=java]
public class Camera extends Transform {




}
[/code]</description>
    
    <lastBuildDate>Tue, 17 Mar 2015 04:01:14 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/inheritance-vs-field/550453.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Inheritance vs Field</title>
        <dc:creator><![CDATA[@Dystin Dystin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/dystin">@Dystin</a> wrote:</p>
          <blockquote>
              <p>Inheritance is to extend functionailty. As mentioned already ‘like a’ is one way of putting it. Lookup design patterns, you’ll learn about why we have interfaces, abstract classes, extending, implementing etc., for the general. A common example of people extending classes for the wrong reasons would be extending to get “easy” access to that classes methods for instance extending JFrame.</p>
<p>It’s a little different in other languages, personally I think OOP is weirdly done in Java but it seems a little better now with Java 8s updates to interfaces.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/inheritance-vs-field/550453/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/inheritance-vs-field/550453/15</link>
        <pubDate>Tue, 17 Mar 2015 04:01:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-550453-15</guid>
        <source url="https://forum.moparisthebest.com/t/inheritance-vs-field/550453.rss">Inheritance vs Field</source>
      </item>
      <item>
        <title>Inheritance vs Field</title>
        <dc:creator><![CDATA[@sk8rdude461 sk8rdude461]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sk8rdude461">@sk8rdude461</a> wrote:</p>
          <blockquote>
              <p>In RuneScape terms, if we’re working with gods… Wouldn’t you want to start off with the Gods? and then the Godswords would be an extension of each god.</p>
<p>So it’d be God &gt; GodType (Saradomin, Zammy, etc) &gt; Godsword for GodType.</p>
<p>Because if my knowledge serves me correctly, only some gods have Godswords, and there’s a lot more tiers than just the ones that have godswords.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/inheritance-vs-field/550453/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/inheritance-vs-field/550453/14</link>
        <pubDate>Wed, 11 Mar 2015 04:24:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-550453-14</guid>
        <source url="https://forum.moparisthebest.com/t/inheritance-vs-field/550453.rss">Inheritance vs Field</source>
      </item>
      <item>
        <title>Inheritance vs Field</title>
        <dc:creator><![CDATA[@tyb97 tyb97]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tyb97">@tyb97</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="12" data-topic="550453">
<div class="title">
<div class="quote-controls"></div>
 Bowser jr:</div>
<blockquote>
<p>tyb97: Any specific reason for why you made the Army and Bandos Godsword classes final?</p>
</blockquote>
</aside>
<p>Mainly because these would not be extended any further. Is this not correct? I was told this was correct by a pretty reliable source around here, doesn’t make him right but in all honesty I haven’t done any personal research on the correctness of the syntax there.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/inheritance-vs-field/550453/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/inheritance-vs-field/550453/13</link>
        <pubDate>Wed, 11 Mar 2015 01:24:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-550453-13</guid>
        <source url="https://forum.moparisthebest.com/t/inheritance-vs-field/550453.rss">Inheritance vs Field</source>
      </item>
      <item>
        <title>Inheritance vs Field</title>
        <dc:creator><![CDATA[@bowserjr2 Bowser jr]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bowserjr2">@bowserjr2</a> wrote:</p>
          <blockquote>
              <p>tyb97: Any specific reason for why you made the Army and Bandos Godsword classes final?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/inheritance-vs-field/550453/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/inheritance-vs-field/550453/12</link>
        <pubDate>Tue, 10 Mar 2015 22:14:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-550453-12</guid>
        <source url="https://forum.moparisthebest.com/t/inheritance-vs-field/550453.rss">Inheritance vs Field</source>
      </item>
      <item>
        <title>Inheritance vs Field</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>Oh god no please limit your usage of enumerations to cases not like this.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/inheritance-vs-field/550453/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/inheritance-vs-field/550453/11</link>
        <pubDate>Tue, 10 Mar 2015 18:23:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-550453-11</guid>
        <source url="https://forum.moparisthebest.com/t/inheritance-vs-field/550453.rss">Inheritance vs Field</source>
      </item>
      <item>
        <title>Inheritance vs Field</title>
        <dc:creator><![CDATA[@tyb97 tyb97]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tyb97">@tyb97</a> wrote:</p>
          <blockquote>
              <p>[quote=“Pipe Dream, post:7, topic:550453”]Or in RuneScape terms.</p>
<pre><code class="lang-auto">public class GodSword {
     public Bandos bandos;
     public Armadyl armadyl;
}</code></pre>
<p>because you wouldn’t do GodSword extends Bandos? I understand the inheritance side of things just sometimes not the logic.[/quote]</p>
<pre><code class="lang-auto">public abstract class Godsword {
}</code></pre>
<pre><code class="lang-auto">public final class BandosGodsword extends Godsword {
}</code></pre>
<pre><code class="lang-auto">public final class ArmadylGodsword extends Godsword {
}</code></pre>
<p>Honestly IMO this is better anyways, for this specific example:</p>
<pre><code class="lang-auto">private enum Godsword {
    BANDOS, ARMADYL;
}</code></pre>
<p>Does the same thing essentially, when you add parameters and methods to the enum.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/inheritance-vs-field/550453/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/inheritance-vs-field/550453/10</link>
        <pubDate>Tue, 10 Mar 2015 14:35:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-550453-10</guid>
        <source url="https://forum.moparisthebest.com/t/inheritance-vs-field/550453.rss">Inheritance vs Field</source>
      </item>
      <item>
        <title>Inheritance vs Field</title>
        <dc:creator><![CDATA[@xx_matty_xx Justin Bieber]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xx_matty_xx">@xx_matty_xx</a> wrote:</p>
          <blockquote>
              <p>[quote=“Pipe Dream, post:7, topic:550453”]Or in RuneScape terms.</p>
<pre><code class="lang-auto">public class GodSword {
     public Bandos bandos;
     public Armadyl armadyl;
}</code></pre>
<p>because you wouldn’t do GodSword extends Bandos? I understand the inheritance side of things just sometimes not the logic.[/quote]<br>
Forgive my lack of runescape knowledge, but wouldn’t you have BandosGodSword and ArmadylGodSword both inheriting from GodSword as they’re both examples of god swords??</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/inheritance-vs-field/550453/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/inheritance-vs-field/550453/9</link>
        <pubDate>Tue, 10 Mar 2015 14:14:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-550453-9</guid>
        <source url="https://forum.moparisthebest.com/t/inheritance-vs-field/550453.rss">Inheritance vs Field</source>
      </item>
      <item>
        <title>Inheritance vs Field</title>
        <dc:creator><![CDATA[@Protosstribe object]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/protosstribe">@Protosstribe</a> wrote:</p>
          <blockquote>
              <p>Limits:</p>
<p>In your specific case you should use a HAS-A relationship (often known as composition), rather than an IS-A relationship (inheritance).</p>
<p>A transform is a data structure for handling various transformations in some coordinate space, using transformation matrices etc. Some of its transformations are rotation, translation and scaling.</p>
<p>A camera on the other hand, is conceptually not the same as a transform. Although it usually use a transform to translate points from its own coordinate space (camera space), to points in the world space (the coordinate space from which every other coordinate space are derived). There are many more coordinate spaces to take into account. And a transform is used in all of them. A camera, on the other hand, is not.</p>
<p>Composition is the most flexible alternative of the two. It should be your default choice.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/inheritance-vs-field/550453/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/inheritance-vs-field/550453/8</link>
        <pubDate>Tue, 10 Mar 2015 10:22:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-550453-8</guid>
        <source url="https://forum.moparisthebest.com/t/inheritance-vs-field/550453.rss">Inheritance vs Field</source>
      </item>
      <item>
        <title>Inheritance vs Field</title>
        <dc:creator><![CDATA[@Pipe_Dream Pipe Dream]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pipe_dream">@Pipe_Dream</a> wrote:</p>
          <blockquote>
              <p>Or in RuneScape terms.</p>
<pre><code class="lang-auto">public class GodSword {
     public Bandos bandos;
     public Armadyl armadyl;
}</code></pre>
<p>because you wouldn’t do GodSword extends Bandos? I understand the inheritance side of things just sometimes not the logic.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/inheritance-vs-field/550453/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/inheritance-vs-field/550453/7</link>
        <pubDate>Tue, 10 Mar 2015 06:08:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-550453-7</guid>
        <source url="https://forum.moparisthebest.com/t/inheritance-vs-field/550453.rss">Inheritance vs Field</source>
      </item>
      <item>
        <title>Inheritance vs Field</title>
        <dc:creator><![CDATA[@Pwnd Pwnd]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pwnd">@Pwnd</a> wrote:</p>
          <blockquote>
              <p>This is the second time in a week I have seen the usage of an automobile to clarify how inheritance works.  Definitely a good example.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/inheritance-vs-field/550453/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/inheritance-vs-field/550453/6</link>
        <pubDate>Tue, 10 Mar 2015 04:07:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-550453-6</guid>
        <source url="https://forum.moparisthebest.com/t/inheritance-vs-field/550453.rss">Inheritance vs Field</source>
      </item>
      <item>
        <title>Inheritance vs Field</title>
        <dc:creator><![CDATA[@Docent Limits]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/docent">@Docent</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="4" data-topic="550453">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/moparisthebest/40/30_1.png" class="avatar"> Moparisthebest:</div>
<blockquote>
<p>You might need to clarify the question a bit, the difference between the two is pretty obvious, I think you might be asking why you’d want to use one over the other?</p>
</blockquote>
</aside>
<p>Ahh thank you, that was a far better explanation. I understand now</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/inheritance-vs-field/550453/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/inheritance-vs-field/550453/5</link>
        <pubDate>Tue, 10 Mar 2015 03:20:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-550453-5</guid>
        <source url="https://forum.moparisthebest.com/t/inheritance-vs-field/550453.rss">Inheritance vs Field</source>
      </item>
      <item>
        <title>Inheritance vs Field</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>You might need to clarify the question a bit, the difference between the two is pretty obvious, I think you might be asking why you’d want to use one over the other?</p>
<p>So in the first case, the Camera has a Transform attribute, maybe it can replace it, or do things with it, but the Camera is not a Transform and cannot be treated as a Transform.  In the second case, the Camera IS a Transform, and can be substituted for a Transform in any method or whatever that requires a Transform.</p>
<p>Since I don’t quite know what Camera/Transform is, I’ll go with another example I’m more familiar with:</p>
<p>With an engine:</p>
<pre><code class="lang-auto">public class Engine {
     public int horsePower;
     public double fuelConsumptionPerMinute;
}</code></pre>
<p>It’s obvious a Car <em>contains</em> an Engine, along with other things:</p>
<pre><code class="lang-auto">public class Car {
     public Engine engine;
     public Transmission transmission;
}</code></pre>
<p>It wouldn’t make sense at all to say that a Car IS an Engine, because, for example, an Engine doesn’t have a Transmission, but a Car would have both an Engine and a Transmission:</p>
<pre><code class="lang-auto">public class Car extends Engine {
     public Transmission transmission;
}</code></pre>
<p>Does that make sense?  I’m not known for my explanations.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/inheritance-vs-field/550453/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/inheritance-vs-field/550453/4</link>
        <pubDate>Tue, 10 Mar 2015 03:18:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-550453-4</guid>
        <source url="https://forum.moparisthebest.com/t/inheritance-vs-field/550453.rss">Inheritance vs Field</source>
      </item>
      <item>
        <title>Inheritance vs Field</title>
        <dc:creator><![CDATA[@Docent Limits]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/docent">@Docent</a> wrote:</p>
          <blockquote>
              <p>[quote=“Bowser jr, post:2, topic:550453”]When you extend a class you inherit all of its properties, so you can use your Camera class as you would use the Transform class and extend it’s capabilities.</p>
<p>And you should change your avatar, someone might think you actually know Java.[/quote]<br>
Lmao okay. I knew there was a reason why I stopped frequenting this forum…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/inheritance-vs-field/550453/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/inheritance-vs-field/550453/3</link>
        <pubDate>Tue, 10 Mar 2015 03:11:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-550453-3</guid>
        <source url="https://forum.moparisthebest.com/t/inheritance-vs-field/550453.rss">Inheritance vs Field</source>
      </item>
      <item>
        <title>Inheritance vs Field</title>
        <dc:creator><![CDATA[@bowserjr2 Bowser jr]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bowserjr2">@bowserjr2</a> wrote:</p>
          <blockquote>
              <p>When you extend a class you inherit all of its properties, so you can use your Camera class as you would use the Transform class and extend it’s capabilities. You cannot overload any of Tranform’s functions unless you extend it.</p>
<p>And you should change your avatar, someone might think you actually know Java.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/inheritance-vs-field/550453/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/inheritance-vs-field/550453/2</link>
        <pubDate>Tue, 10 Mar 2015 03:08:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-550453-2</guid>
        <source url="https://forum.moparisthebest.com/t/inheritance-vs-field/550453.rss">Inheritance vs Field</source>
      </item>
      <item>
        <title>Inheritance vs Field</title>
        <dc:creator><![CDATA[@Docent Limits]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/docent">@Docent</a> wrote:</p>
          <blockquote>
              <p>Say you have a Transform class</p>
<pre><code class="lang-auto">public class Transform {


float angleX;
float angleY;
float angleZ;


Vector location;


getAngleX();
getAngleY();
getAngleZ();


getLocation();


}</code></pre>
<p>And then say you have a Camera class that uses all of these methods to move around the world.</p>
<p>My question is (and forgive me if this is rudimentary), what is the difference between:</p>
<pre><code class="lang-auto">public class Camera {


private Transform transform;


getTransform();


}</code></pre>
<p>and</p>
<pre><code class="lang-auto">public class Camera extends Transform {




}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/inheritance-vs-field/550453/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/inheritance-vs-field/550453/1</link>
        <pubDate>Tue, 10 Mar 2015 03:00:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-550453-1</guid>
        <source url="https://forum.moparisthebest.com/t/inheritance-vs-field/550453.rss">Inheritance vs Field</source>
      </item>
  </channel>
</rss>
