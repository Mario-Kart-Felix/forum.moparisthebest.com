<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Help with coding a safe pk area</title>
    <link>https://forum.moparisthebest.com/t/help-with-coding-a-safe-pk-area/438977</link>
    <description>Hey so i don&#39;t know how to code a safe pk area, i am using matrix&#39;s 664 as my base...this is what i have for code for wilderness at the moment.

[code]package com.rs.game.player.controlers;

import com.rs.cache.loaders.ObjectDefinitions;
import com.rs.game.Animation;
import com.rs.game.Entity;
import com.rs.game.ForceMovement;
import com.rs.game.WorldObject;
import com.rs.game.WorldTile;
import com.rs.game.npc.NPC;
import com.rs.game.item.Item;
import com.rs.game.player.content.Pots;
import com.rs.game.player.Player;
import com.rs.game.player.Skills;
import com.rs.game.tasks.WorldTask;
import com.rs.game.tasks.WorldTasksManager;
import com.rs.utils.Utils;

public class Wilderness extends Controler {

private boolean showingSkull;

@Override
public void start() {
checkBoosts(player);
}

public static void checkBoosts(Player player) {
boolean changed = false;
int level = player.getSkills().getLevelForXp(Skills.ATTACK);
int maxLevel = (int) (level + 5 + (level * 0.15));
if (maxLevel &lt; player.getSkills().getLevel(Skills.ATTACK)) {
player.getSkills().set(Skills.ATTACK, maxLevel);
changed = true;
}
level = player.getSkills().getLevelForXp(Skills.STRENGTH);
maxLevel = (int) (level + 5 + (level * 0.15));
if (maxLevel &lt; player.getSkills().getLevel(Skills.STRENGTH)) {
player.getSkills().set(Skills.STRENGTH, maxLevel);
changed = true;
}
level = player.getSkills().getLevelForXp(Skills.DEFENCE);
maxLevel = (int) (level + 5 + (level * 0.15));
if (maxLevel &lt; player.getSkills().getLevel(Skills.DEFENCE)) {
player.getSkills().set(Skills.DEFENCE, maxLevel);
changed = true;
}
level = player.getSkills().getLevelForXp(Skills.RANGE);
maxLevel = (int) (level + 5 + (level * 0.1));
if (maxLevel &lt; player.getSkills().getLevel(Skills.RANGE)) {
player.getSkills().set(Skills.RANGE, maxLevel);
changed = true;
}
level = player.getSkills().getLevelForXp(Skills.MAGIC);
maxLevel = level + 5;
if (maxLevel &lt; player.getSkills().getLevel(Skills.MAGIC)) {
player.getSkills().set(Skills.MAGIC, maxLevel);
changed = true;
}
if (changed)
player.getPackets().sendGameMessage(
&quot;Your extreme potion bonus has been reduced.&quot;);
}

@Override
public boolean login() {
moved();
return false;
}

@Override
public boolean keepCombating(Entity target) {
if (target instanceof NPC)
return true;
if (!canAttack(target))
return false;
if (target.getAttackedBy() != player
&amp;&amp; player.getAttackedBy() != target)
player.setWildernessSkull();
return true;
}

@Override
public boolean canAttack(Entity target) {
if (target instanceof Player) {
Player p2 = (Player) target;
if (player.isCanPvp() &amp;&amp; !p2.isCanPvp()) {
player.getPackets().sendGameMessage(
&quot;That player is not in the wilderness.&quot;);
return false;
}
if (canHit(target))
return true;

// warning message here
return false;
}
return true;
}

@Override
public boolean canHit(Entity target) {
if (target instanceof NPC)
return true;
Player p2 = (Player) target;
if (Math.abs(player.getSkills().getCombatLevel()
- p2.getSkills().getCombatLevel()) &gt; getWildLevel())
return false;
return true;
}

@Override
public boolean processMagicTeleport(WorldTile toTile) {
if (getWildLevel() &gt; 20) {
player.getPackets().sendGameMessage(
&quot;A mysterious force prevents you from teleporting.&quot;);
return false;
}
if (player.getTeleBlockDelay() &gt; Utils.currentTimeMillis()) {
player.getPackets().sendGameMessage(
&quot;A mysterious force prevents you from teleporting.&quot;);
return false;
}
return true;

}

@Override
public boolean processItemTeleport(WorldTile toTile) {
if (getWildLevel() &gt; 20) {
player.getPackets().sendGameMessage(
&quot;A mysterious force prevents you from teleporting.&quot;);
return false;
}
if (player.getTeleBlockDelay() &gt; Utils.currentTimeMillis()) {
player.getPackets().sendGameMessage(
&quot;A mysterious force prevents you from teleporting.&quot;);
return false;
}
return true;
}

@Override
public boolean processObjectTeleport(WorldTile toTile) {
Long teleblock = (Long) player.getTemporaryAttributtes().get(
&quot;TeleBlocked&quot;);
if (teleblock != null &amp;&amp; teleblock &gt; Utils.currentTimeMillis()) {
player.getPackets().sendGameMessage(
&quot;A mysterious force prevents you from teleporting.&quot;);
return false;
}
return true;
}

        public void showSkull() {
                player.getInterfaceManager().sendTab(player.getInterfaceManager().hasRezizableScreen() ? 10 : 19, 381);
        }

public static boolean isDitch(int id) {
return id &gt;= 1440 &amp;&amp; id &lt;= 1444 || id &gt;= 65076 &amp;&amp; id &lt;= 65087;
}

@Override
public boolean processObjectClick1(final WorldObject object) {
if (isDitch(object.getId())) {
player.setInfiniteStopDelay();
player.setNextAnimation(new Animation(6132));
final WorldTile toTile = new WorldTile(player.getX(),
object.getY() - 1, object.getPlane());
player.setNextForceMovement(new ForceMovement(
new WorldTile(player), 1, toTile, 2, 2));
final ObjectDefinitions objectDef = object.getDefinitions();
WorldTasksManager.schedule(new WorldTask() {
@Override
public void run() {
player.setNextWorldTile(toTile);
player.setNextFaceWorldTile(new WorldTile(
object.getCoordFaceX(objectDef.getSizeX(),
objectDef.getSizeY(), object.getRotation()),
object.getCoordFaceY(objectDef.getSizeX(),
objectDef.getSizeY(), object.getRotation()),
object.getPlane()));
removeIcon();
removeControler();
player.resetStopDelay();
}
}, 2);
return false;
}
return true;
}

@Override
public void sendInterfaces() {
if (isAtWild(player))
showSkull();
}

@Override
public boolean sendDeath() {
removeIcon();
removeControler();
return true; // TODO custom dead without graves
}

@Override
public void moved() {
boolean isAtWild = isAtWild(player);
boolean isAtWildSafe = isAtWildSafe();
if (!showingSkull &amp;&amp; isAtWild &amp;&amp; !isAtWildSafe) {
showingSkull = true;
player.setCanPvp(true);
showSkull();
player.getAppearence().generateAppearenceData();
} else if (showingSkull &amp;&amp; (isAtWildSafe || !isAtWild)) {
removeIcon();
} else if (!isAtWildSafe &amp;&amp; !isAtWild) {
player.setCanPvp(false);
removeIcon();
removeControler();
} else if (Kalaboss.isAtKalaboss(player)) {
removeIcon();
player.setCanPvp(false);
removeControler();
player.getControlerManager().startControler(&quot;Kalab oss&quot;);
}
}

public void removeIcon() {
if (showingSkull) {
showingSkull = false;
player.setCanPvp(false);
player.getPackets()
.closeInterface(
player.getInterfaceManager().hasRezizableScreen() ? 10
: 19);
player.getAppearence().generateAppearenceData();
player.getEquipment().refresh(null);
}
}

@Override
public boolean logout() {
return false; // so doesnt remove script
}

@Override
public void forceClose() {
removeIcon();
}

public static final boolean isAtWild(WorldTile tile) {
return (tile.getX() &gt;= 2940 &amp;&amp; tile.getX() &lt;= 3395
&amp;&amp; tile.getY() &gt;= 3525 &amp;&amp; tile.getY() &lt;= 4000)
|| (tile.getX() &gt;= 3264 &amp;&amp; tile.getX() &lt;= 3279
&amp;&amp; tile.getY() &gt;= 3279 &amp;&amp; tile.getY() &lt;= 3672)
|| (tile.getX() &gt;= 2756 &amp;&amp; tile.getX() &lt;= 2875
&amp;&amp; tile.getY() &gt;= 5512 &amp;&amp; tile.getY() &lt;= 5627)
|| (tile.getX() &gt;= 3158 &amp;&amp; tile.getX() &lt;= 3181
&amp;&amp; tile.getY() &gt;= 3679 &amp;&amp; tile.getY() &lt;= 3697)
|| (tile.getX() &gt;= 3280 &amp;&amp; tile.getX() &lt;= 3183
&amp;&amp; tile.getY() &gt;= 3883 &amp;&amp; tile.getY() &lt;= 3888);
}

public boolean isAtWildSafe() {
return (player.getX() &gt;= 2940 &amp;&amp; player.getX() &lt;= 3395
&amp;&amp; player.getY() &lt;= 3524 &amp;&amp; player.getY() &gt;= 3523);
}

public int getWildLevel() {
return (player.getY() - 3520) / 8 + 1;
}
@Override
public boolean handleItemOption1(Player playerr, int slotId, int itemId,
Item item) {
if (itemId != item.getId())
return false;
switch (itemId) {
case -1: //Noobs
return false;
}
return true;
}
} [/code]

This is the wilderness ditch

[code]package com.rs.game.player.dialogues;

import com.rs.cache.loaders.ObjectDefinitions;
import com.rs.game.Animation;
import com.rs.game.ForceMovement;
import com.rs.game.WorldObject;
import com.rs.game.WorldTile;
import com.rs.game.tasks.WorldTask;
import com.rs.game.tasks.WorldTasksManager;

public class WildernessDitch extends Dialogue {

        private WorldObject ditch;

        @Override
        public void start() {
                ditch = (WorldObject) parameters[0];
                player.getInterfaceManager().sendInterface(382);
        }

        @Override
        public void run(int interfaceId, int componentId) {
                if (interfaceId == 382 &amp;&amp; componentId == 19) {
                        player.stopAll();
                        player.addStopDelay(4);
                        player.setNextAnimation(new Animation(6132));
                        final WorldTile toTile = new WorldTile(player.getX(),
                                        ditch.getY() + 2, ditch.getPlane());
                        player.setNextForceMovement(new ForceMovement(
                                        new WorldTile(player), 1, toTile, 2, 0));
                        final ObjectDefinitions objectDef = ditch.getDefinitions();
                        WorldTasksManager.schedule(new WorldTask() {
                                @Override
                                public void run() {
                                        player.setNextWorldTile(toTile);
                                        player.setNextFaceWorldTile(new WorldTile(ditch
                                                        .getCoordFaceX(objectDef.getSizeX(),
                                                                        objectDef.getSizeY(), ditch.getRotation()),
                                                        ditch.getCoordFaceY(objectDef.getSizeX(),
                                                                        objectDef.getSizeY(), ditch.getRotation()),
                                                        ditch.getPlane()));
                                        player.getControlerManager().startControler(&quot;Wilderness&quot;);
                                }
                        }, 2);
                } else
                        player.closeInterfaces();
                end();
        }

        @Override
        public void finish() {

        }

}[/code]

The area i would like to be my safe &quot;wilderness&quot; is

[b][u]Top Left[/u][/b] - X-3135 Y-3520

[b][u]Bottom Left[/u][/b] - X-3135 Y-3417

[b][u]Top Right [/u][/b]- X-3274 Y-3520

[b][u]Bottom Right[/u][/b] - X-3274 Y-3417

I would also like a safe zone box inside this with the location of

[b][u]Top Left[/u][/b] - X-3145 Y-3508

[b][u]Bottom Left[/u][/b] - X-3145 Y-3474

[b][u]Top Right[/u][/b] - X-3185 Y-3508

[b][u]Bottom Right[/u][/b] - X-3185 Y-3474

Also, if you need any more information i would be more than happy to post it up.
Guys if you could help me with this it would be awesome...it is the last step i need before i launch my server. Thanks!


**edit sorry to repost this i just really need it and i cant find any guides on coding this level server :/</description>
    
    <lastBuildDate>Sun, 08 Apr 2012 20:11:58 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/help-with-coding-a-safe-pk-area/438977.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Help with coding a safe pk area</title>
        <dc:creator><![CDATA[@2_drag_claws 2 drag claws]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/2_drag_claws">@2_drag_claws</a> wrote:</p>
          <blockquote>
              <p>Hey so i don’t know how to code a safe pk area, i am using matrix’s 664 as my base…this is what i have for code for wilderness at the moment.</p>
<p>[code]package com.rs.game.player.controlers;</p>
<p>import com.rs.cache.loaders.ObjectDefinitions;<br>
import com.rs.game.Animation;<br>
import com.rs.game.Entity;<br>
import com.rs.game.ForceMovement;<br>
import com.rs.game.WorldObject;<br>
import com.rs.game.WorldTile;<br>
import com.rs.game.npc.NPC;<br>
import com.rs.game.item.Item;<br>
import com.rs.game.player.content.Pots;<br>
import com.rs.game.player.Player;<br>
import com.rs.game.player.Skills;<br>
import com.rs.game.tasks.WorldTask;<br>
import com.rs.game.tasks.WorldTasksManager;<br>
import com.rs.utils.Utils;</p>
<p>public class Wilderness extends Controler {</p>
<p>private boolean showingSkull;</p>
<p><a class="mention" href="/u/override">@Override</a><br>
public void start() {<br>
checkBoosts(player);<br>
}</p>
<p>public static void checkBoosts(Player player) {<br>
boolean changed = false;<br>
int level = player.getSkills().getLevelForXp(Skills.ATTACK);<br>
int maxLevel = (int) (level + 5 + (level * 0.15));<br>
if (maxLevel &lt; player.getSkills().getLevel(Skills.ATTACK)) {<br>
player.getSkills().set(Skills.ATTACK, maxLevel);<br>
changed = true;<br>
}<br>
level = player.getSkills().getLevelForXp(Skills.STRENGTH);<br>
maxLevel = (int) (level + 5 + (level * 0.15));<br>
if (maxLevel &lt; player.getSkills().getLevel(Skills.STRENGTH)) {<br>
player.getSkills().set(Skills.STRENGTH, maxLevel);<br>
changed = true;<br>
}<br>
level = player.getSkills().getLevelForXp(Skills.DEFENCE);<br>
maxLevel = (int) (level + 5 + (level * 0.15));<br>
if (maxLevel &lt; player.getSkills().getLevel(Skills.DEFENCE)) {<br>
player.getSkills().set(Skills.DEFENCE, maxLevel);<br>
changed = true;<br>
}<br>
level = player.getSkills().getLevelForXp(Skills.RANGE);<br>
maxLevel = (int) (level + 5 + (level * 0.1));<br>
if (maxLevel &lt; player.getSkills().getLevel(Skills.RANGE)) {<br>
player.getSkills().set(Skills.RANGE, maxLevel);<br>
changed = true;<br>
}<br>
level = player.getSkills().getLevelForXp(Skills.MAGIC);<br>
maxLevel = level + 5;<br>
if (maxLevel &lt; player.getSkills().getLevel(Skills.MAGIC)) {<br>
player.getSkills().set(Skills.MAGIC, maxLevel);<br>
changed = true;<br>
}<br>
if (changed)<br>
player.getPackets().sendGameMessage(<br>
“Your extreme potion bonus has been reduced.”);<br>
}</p>
<p><a class="mention" href="/u/override">@Override</a><br>
public boolean login() {<br>
moved();<br>
return false;<br>
}</p>
<p><a class="mention" href="/u/override">@Override</a><br>
public boolean keepCombating(Entity target) {<br>
if (target instanceof NPC)<br>
return true;<br>
if (!canAttack(target))<br>
return false;<br>
if (target.getAttackedBy() != player<br>
&amp;&amp; player.getAttackedBy() != target)<br>
player.setWildernessSkull();<br>
return true;<br>
}</p>
<p><a class="mention" href="/u/override">@Override</a><br>
public boolean canAttack(Entity target) {<br>
if (target instanceof Player) {<br>
Player p2 = (Player) target;<br>
if (player.isCanPvp() &amp;&amp; !p2.isCanPvp()) {<br>
player.getPackets().sendGameMessage(<br>
“That player is not in the wilderness.”);<br>
return false;<br>
}<br>
if (canHit(target))<br>
return true;</p>
<p>// warning message here<br>
return false;<br>
}<br>
return true;<br>
}</p>
<p><a class="mention" href="/u/override">@Override</a><br>
public boolean canHit(Entity target) {<br>
if (target instanceof NPC)<br>
return true;<br>
Player p2 = (Player) target;<br>
if (Math.abs(player.getSkills().getCombatLevel()</p>
<ul>
<li>p2.getSkills().getCombatLevel()) &gt; getWildLevel())<br>
return false;<br>
return true;<br>
}</li>
</ul>
<p><a class="mention" href="/u/override">@Override</a><br>
public boolean processMagicTeleport(WorldTile toTile) {<br>
if (getWildLevel() &gt; 20) {<br>
player.getPackets().sendGameMessage(<br>
“A mysterious force prevents you from teleporting.”);<br>
return false;<br>
}<br>
if (player.getTeleBlockDelay() &gt; Utils.currentTimeMillis()) {<br>
player.getPackets().sendGameMessage(<br>
“A mysterious force prevents you from teleporting.”);<br>
return false;<br>
}<br>
return true;</p>
<p>}</p>
<p><a class="mention" href="/u/override">@Override</a><br>
public boolean processItemTeleport(WorldTile toTile) {<br>
if (getWildLevel() &gt; 20) {<br>
player.getPackets().sendGameMessage(<br>
“A mysterious force prevents you from teleporting.”);<br>
return false;<br>
}<br>
if (player.getTeleBlockDelay() &gt; Utils.currentTimeMillis()) {<br>
player.getPackets().sendGameMessage(<br>
“A mysterious force prevents you from teleporting.”);<br>
return false;<br>
}<br>
return true;<br>
}</p>
<p><a class="mention" href="/u/override">@Override</a><br>
public boolean processObjectTeleport(WorldTile toTile) {<br>
Long teleblock = (Long) player.getTemporaryAttributtes().get(<br>
“TeleBlocked”);<br>
if (teleblock != null &amp;&amp; teleblock &gt; Utils.currentTimeMillis()) {<br>
player.getPackets().sendGameMessage(<br>
“A mysterious force prevents you from teleporting.”);<br>
return false;<br>
}<br>
return true;<br>
}</p>
<pre><code>    public void showSkull() {
            player.getInterfaceManager().sendTab(player.getInterfaceManager().hasRezizableScreen() ? 10 : 19, 381);
    }
</code></pre>
<p>public static boolean isDitch(int id) {<br>
return id &gt;= 1440 &amp;&amp; id &lt;= 1444 || id &gt;= 65076 &amp;&amp; id &lt;= 65087;<br>
}</p>
<p><a class="mention" href="/u/override">@Override</a><br>
public boolean processObjectClick1(final WorldObject object) {<br>
if (isDitch(object.getId())) {<br>
player.setInfiniteStopDelay();<br>
player.setNextAnimation(new Animation(6132));<br>
final WorldTile toTile = new WorldTile(player.getX(),<br>
object.getY() - 1, object.getPlane());<br>
player.setNextForceMovement(new ForceMovement(<br>
new WorldTile(player), 1, toTile, 2, 2));<br>
final ObjectDefinitions objectDef = object.getDefinitions();<br>
WorldTasksManager.schedule(new WorldTask() {<br>
<a class="mention" href="/u/override">@Override</a><br>
public void run() {<br>
player.setNextWorldTile(toTile);<br>
player.setNextFaceWorldTile(new WorldTile(<br>
object.getCoordFaceX(objectDef.getSizeX(),<br>
objectDef.getSizeY(), object.getRotation()),<br>
object.getCoordFaceY(objectDef.getSizeX(),<br>
objectDef.getSizeY(), object.getRotation()),<br>
object.getPlane()));<br>
removeIcon();<br>
removeControler();<br>
player.resetStopDelay();<br>
}<br>
}, 2);<br>
return false;<br>
}<br>
return true;<br>
}</p>
<p><a class="mention" href="/u/override">@Override</a><br>
public void sendInterfaces() {<br>
if (isAtWild(player))<br>
showSkull();<br>
}</p>
<p><a class="mention" href="/u/override">@Override</a><br>
public boolean sendDeath() {<br>
removeIcon();<br>
removeControler();<br>
return true; // TODO custom dead without graves<br>
}</p>
<p><a class="mention" href="/u/override">@Override</a><br>
public void moved() {<br>
boolean isAtWild = isAtWild(player);<br>
boolean isAtWildSafe = isAtWildSafe();<br>
if (!showingSkull &amp;&amp; isAtWild &amp;&amp; !isAtWildSafe) {<br>
showingSkull = true;<br>
player.setCanPvp(true);<br>
showSkull();<br>
player.getAppearence().generateAppearenceData();<br>
} else if (showingSkull &amp;&amp; (isAtWildSafe || !isAtWild)) {<br>
removeIcon();<br>
} else if (!isAtWildSafe &amp;&amp; !isAtWild) {<br>
player.setCanPvp(false);<br>
removeIcon();<br>
removeControler();<br>
} else if (Kalaboss.isAtKalaboss(player)) {<br>
removeIcon();<br>
player.setCanPvp(false);<br>
removeControler();<br>
player.getControlerManager().startControler(“Kalab oss”);<br>
}<br>
}</p>
<p>public void removeIcon() {<br>
if (showingSkull) {<br>
showingSkull = false;<br>
player.setCanPvp(false);<br>
player.getPackets()<br>
.closeInterface(<br>
player.getInterfaceManager().hasRezizableScreen() ? 10<br>
: 19);<br>
player.getAppearence().generateAppearenceData();<br>
player.getEquipment().refresh(null);<br>
}<br>
}</p>
<p><a class="mention" href="/u/override">@Override</a><br>
public boolean logout() {<br>
return false; // so doesnt remove script<br>
}</p>
<p><a class="mention" href="/u/override">@Override</a><br>
public void forceClose() {<br>
removeIcon();<br>
}</p>
<p>public static final boolean isAtWild(WorldTile tile) {<br>
return (tile.getX() &gt;= 2940 &amp;&amp; tile.getX() &lt;= 3395<br>
&amp;&amp; tile.getY() &gt;= 3525 &amp;&amp; tile.getY() &lt;= 4000)<br>
|| (tile.getX() &gt;= 3264 &amp;&amp; tile.getX() &lt;= 3279<br>
&amp;&amp; tile.getY() &gt;= 3279 &amp;&amp; tile.getY() &lt;= 3672)<br>
|| (tile.getX() &gt;= 2756 &amp;&amp; tile.getX() &lt;= 2875<br>
&amp;&amp; tile.getY() &gt;= 5512 &amp;&amp; tile.getY() &lt;= 5627)<br>
|| (tile.getX() &gt;= 3158 &amp;&amp; tile.getX() &lt;= 3181<br>
&amp;&amp; tile.getY() &gt;= 3679 &amp;&amp; tile.getY() &lt;= 3697)<br>
|| (tile.getX() &gt;= 3280 &amp;&amp; tile.getX() &lt;= 3183<br>
&amp;&amp; tile.getY() &gt;= 3883 &amp;&amp; tile.getY() &lt;= 3888);<br>
}</p>
<p>public boolean isAtWildSafe() {<br>
return (player.getX() &gt;= 2940 &amp;&amp; player.getX() &lt;= 3395<br>
&amp;&amp; player.getY() &lt;= 3524 &amp;&amp; player.getY() &gt;= 3523);<br>
}</p>
<p>public int getWildLevel() {<br>
return (player.getY() - 3520) / 8 + 1;<br>
}<br>
<a class="mention" href="/u/override">@Override</a><br>
public boolean handleItemOption1(Player playerr, int slotId, int itemId,<br>
Item item) {<br>
if (itemId != item.getId())<br>
return false;<br>
switch (itemId) {<br>
case -1: //Noobs<br>
return false;<br>
}<br>
return true;<br>
}<br>
} [/code]</p>
<p>This is the wilderness ditch</p>
<p>[code]package com.rs.game.player.dialogues;</p>
<p>import com.rs.cache.loaders.ObjectDefinitions;<br>
import com.rs.game.Animation;<br>
import com.rs.game.ForceMovement;<br>
import com.rs.game.WorldObject;<br>
import com.rs.game.WorldTile;<br>
import com.rs.game.tasks.WorldTask;<br>
import com.rs.game.tasks.WorldTasksManager;</p>
<p>public class WildernessDitch extends Dialogue {</p>
<pre><code>    private WorldObject ditch;

    @Override
    public void start() {
            ditch = (WorldObject) parameters[0];
            player.getInterfaceManager().sendInterface(382);
    }

    @Override
    public void run(int interfaceId, int componentId) {
            if (interfaceId == 382 &amp;&amp; componentId == 19) {
                    player.stopAll();
                    player.addStopDelay(4);
                    player.setNextAnimation(new Animation(6132));
                    final WorldTile toTile = new WorldTile(player.getX(),
                                    ditch.getY() + 2, ditch.getPlane());
                    player.setNextForceMovement(new ForceMovement(
                                    new WorldTile(player), 1, toTile, 2, 0));
                    final ObjectDefinitions objectDef = ditch.getDefinitions();
                    WorldTasksManager.schedule(new WorldTask() {
                            @Override
                            public void run() {
                                    player.setNextWorldTile(toTile);
                                    player.setNextFaceWorldTile(new WorldTile(ditch
                                                    .getCoordFaceX(objectDef.getSizeX(),
                                                                    objectDef.getSizeY(), ditch.getRotation()),
                                                    ditch.getCoordFaceY(objectDef.getSizeX(),
                                                                    objectDef.getSizeY(), ditch.getRotation()),
                                                    ditch.getPlane()));
                                    player.getControlerManager().startControler("Wilderness");
                            }
                    }, 2);
            } else
                    player.closeInterfaces();
            end();
    }

    @Override
    public void finish() {

    }
</code></pre>
<p>}[/code]</p>
<p>The area i would like to be my safe “wilderness” is</p>
<p><span class="bbcode-b"><span class="bbcode-u">Top Left</span></span> - X-3135 Y-3520</p>
<p><span class="bbcode-b"><span class="bbcode-u">Bottom Left</span></span> - X-3135 Y-3417</p>
<p><span class="bbcode-b"><span class="bbcode-u">Top Right </span></span>- X-3274 Y-3520</p>
<p><span class="bbcode-b"><span class="bbcode-u">Bottom Right</span></span> - X-3274 Y-3417</p>
<p>I would also like a safe zone box inside this with the location of</p>
<p><span class="bbcode-b"><span class="bbcode-u">Top Left</span></span> - X-3145 Y-3508</p>
<p><span class="bbcode-b"><span class="bbcode-u">Bottom Left</span></span> - X-3145 Y-3474</p>
<p><span class="bbcode-b"><span class="bbcode-u">Top Right</span></span> - X-3185 Y-3508</p>
<p><span class="bbcode-b"><span class="bbcode-u">Bottom Right</span></span> - X-3185 Y-3474</p>
<p>Also, if you need any more information i would be more than happy to post it up.<br>
Guys if you could help me with this it would be awesome…it is the last step i need before i launch my server. Thanks!</p>
<p>**edit sorry to repost this i just really need it and i cant find any guides on coding this level server <img src="https://forum.moparisthebest.com/images/emoji/twitter/confused.png?v=5" title=":confused:" class="emoji" alt=":confused:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/help-with-coding-a-safe-pk-area/438977/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/help-with-coding-a-safe-pk-area/438977/1</link>
        <pubDate>Sun, 08 Apr 2012 20:11:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-438977-1</guid>
        <source url="https://forum.moparisthebest.com/t/help-with-coding-a-safe-pk-area/438977.rss">Help with coding a safe pk area</source>
      </item>
  </channel>
</rss>
