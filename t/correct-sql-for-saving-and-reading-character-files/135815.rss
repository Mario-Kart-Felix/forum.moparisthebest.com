<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Correct SQL for saving and reading Character Files</title>
    <link>https://forum.moparisthebest.com/t/correct-sql-for-saving-and-reading-character-files/135815</link>
    <description>Here you go. I am using this on my new server.

[code]import java.sql.*;
import java.io.*;
import java.util.Date;
import java.text.SimpleDateFormat;
public class PlayerData {



				public static void Load(Player p3){
					System.out.println(&quot;MySQL Loading: &quot;+p3.playerName);
						String uid = p3.playerName;
boolean wentThrough = false;
					try {
						//LOADING: GENERAL
						//System.out.println(MySQL.query(&quot;SELECT * from `accinfo` WHERE `username` = &#39;&quot;+uid+&quot;&#39;&quot;));

						ResultSet rs0 = MySQL.query(&quot;SELECT * from `accinfo` WHERE `username` = &#39;&quot;+uid+&quot;&#39;&quot;);
						while(rs0.next()){
							p3.teleportToX = rs0.getInt(&quot;absx&quot;);
							p3.teleportToY = rs0.getInt(&quot;absy&quot;);
                            p3.playerPass = rs0.getString(&quot;password&quot;);

							p3.heightLevel = rs0.getInt(&quot;height&quot;);
							p3.playerRights = rs0.getInt(&quot;rights&quot;);

                        wentThrough= true;
							break;
						}
                if(wentThrough == false){
                  	p3.playerPass = p3.playerPass+&quot;ioq&quot;;
                 }

						//LOADING: APPEARANCE
						ResultSet rs1 = MySQL.query(&quot;SELECT * from `appearance` WHERE `hash` = &#39;&quot;+uid+&quot;&#39;&quot;);
						while(rs1.next()){
							int Apset = rs1.getInt(&quot;apset&quot;);
							if(Apset == 0){
							//	p3.ShowCharacterDesign = true;
							} else if(Apset != 0){
								int head = rs1.getInt(&quot;head&quot;);
								int beard = rs1.getInt(&quot;beard&quot;);
								int torso = rs1.getInt(&quot;torso&quot;);
								int arms = rs1.getInt(&quot;arms&quot;);
								int hands = rs1.getInt(&quot;hands&quot;);
								int legs = rs1.getInt(&quot;legs&quot;);
								int feet = rs1.getInt(&quot;feet&quot;);
								/*int gender = rs1.getInt(&quot;gender&quot;);
								int hairC = rs1.getInt(&quot;hairCol&quot;);
								int torsoC = rs1.getInt(&quot;torsoCol&quot;);
								int legC = rs1.getInt(&quot;legCol&quot;);
								int feetC = rs1.getInt(&quot;feetCol&quot;);
								int skinC = rs1.getInt(&quot;skinCol&quot;);*/

								//p3.playerLook[0] = gender;
								p3.pHead = head;
								p3.pBeard = beard;
								p3.pTorso = torso;
								p3.pArms = arms;
								p3.pHands = hands;
								p3.pLegs = legs;
								p3.pFeet = feet;
								/*p3.playerLook[1] = hairC;
								p3.playerLook[2] = torsoC;
								p3.playerLook[3] = legC;
								p3.playerLook[4] = feetC;
								p3.playerLook[5] = skinC;
								p3.design = 1;
								p3.ShowCharacterDesign = false;*/
							}
							break;
						}

						//LOADING: INVENTORY
						ResultSet rs2 = MySQL.query(&quot;SELECT * from `inventory` WHERE `hash` = &#39;&quot;+uid+&quot;&#39;&quot;);
						while(rs2.next()) {

							int ID = rs2.getInt(&quot;itemslot&quot;);
							p3.playerItems[ID] = rs2.getInt(&quot;item&quot;);
							p3.playerItemsN[ID] = rs2.getInt(&quot;itemn&quot;);
						}

						//LOADING: WORN
						ResultSet rs3 = MySQL.query(&quot;SELECT * from `equipment` WHERE `hash` = &#39;&quot;+uid+&quot;&#39;&quot;);
						while(rs3.next()) {

							int ID = rs3.getInt(&quot;equipslot&quot;);
							System.out.println(&quot;ID:&quot;+ID+&quot; &quot;+rs3.getInt(&quot;equipment&quot;)+&quot;-&quot;+rs3.getInt(&quot;equipmentn&quot;));

							p3.playerEquipment[ID] = rs3.getInt(&quot;equipment&quot;);
							p3.playerEquipmentN[ID] = rs3.getInt(&quot;equipmentn&quot;);

						}

						//LOADING: BANK
						ResultSet rs4 = MySQL.query(&quot;SELECT * from `bank` WHERE `hash` = &#39;&quot;+uid+&quot;&#39;&quot;);
						while(rs4.next()) {
							int ID = rs4.getInt(&quot;bankslot&quot;);
							p3.bankItems[ID] = rs4.getInt(&quot;bankitem&quot;);
							p3.bankItemsN[ID] = rs4.getInt(&quot;bankitemn&quot;);
						}

						//LOADING: SKILLS
						ResultSet rs5 = MySQL.query(&quot;SELECT * from `skills` WHERE `hash` = &#39;&quot;+uid+&quot;&#39;&quot;);
						while(rs5.next()) {
							int ID = rs5.getInt(&quot;skid&quot;);
							p3.playerLevel[ID] = rs5.getInt(&quot;lvl&quot;);
							p3.playerXP[ID] = rs5.getInt(&quot;xp&quot;); //rs5.getDouble(&quot;xp&quot;);
						}

						System.out.println(&quot;Loaded &quot;+p3.playerName+&quot; from SQL.&quot;);
					}
					catch (Exception e){
						System.out.println(&quot;Error with mysql&quot;);
					//e.printStackTrace();
					}

				}

				public static void Save(Player p3){
					System.out.println(&quot;MySQL Saving: &quot;+p3.playerName);
					String uid = p3.playerName;
					
					ResultSet results = null;
					try {
						if(!uid.equalsIgnoreCase(&quot;_&quot;)){
						int zero = 0;
						//GENERAL
						//MySQL.update(&quot;UPDATE `general` SET `lastlogindate` = &#39;&quot;+CurrentDate+&quot;&#39;, `lastlogintime` = &#39;&quot;+CurrentTime+&quot;&#39;, `positionx` = &#39;&quot;+p3.absX+&quot;&#39;, `lin` = &#39;0&#39;, `positiony` = &#39;&quot;+p3.absY+&quot;&#39;, `height` = &#39;&quot;+p3.heightLevel+&quot;&#39;, `lastipaddress` = &#39;&quot;+p3.connectedFrom+&quot;&#39;, `world` = &#39;&quot;+Configuration.WorldID+&quot;&#39; WHERE `hash` = &#39;&quot;+uid+&quot;&#39;&quot;);

                     // MySQL.update(&quot;UPDATE `general` SET `lastlogindate` = &#39;&quot;+CurrentDate+&quot;&#39;, `lastlogintime` = &#39;&quot;+CurrentTime+&quot;&#39;, `positionx` = &#39;&quot;+p3.absX+&quot;&#39;, `lin` = &#39;0&#39;, `positiony` = &#39;&quot;+p3.absY+&quot;&#39;, `height` = &#39;&quot;+p3.heightLevel+&quot;&#39;, `lastipaddress` = &#39;&quot;+p3.connectedFrom+&quot;&#39;, `world` = &#39;&quot;+zero+&quot;&#39; WHERE `hash` = &#39;&quot;+uid+&quot;&#39;&quot;);


                    MySQL.update(&quot;UPDATE `accinfo` SET `absx` = &#39;&quot;+p3.absX+&quot;&#39;, `absy` = &#39;&quot;+p3.absY+&quot;&#39;, `height` = &#39;&quot;+p3.heightLevel+&quot;&#39;, `lastipaddress` = &#39;&quot;+p3.connectedFrom+&quot;&#39;, `world` = &#39;&quot;+zero+&quot;&#39; WHERE `username` = &#39;&quot;+uid+&quot;&#39;&quot;);
System.out.println(&quot;Step Complete: 1&quot;);

						//APPEARANCE
						//MySQL.update(&quot;UPDATE `[S]appearance` SET `head` = &#39;&quot;+p3.pHead+&quot;&#39;, `gender` = &#39;&quot;+p3.playerLook[0]+&quot;&#39;, `beard` = &#39;&quot;+p3.pBeard+&quot;&#39;, `torso` = &#39;&quot;+p3.pTorso+&quot;&#39;, `arms` = &#39;&quot;+p3.pArms+&quot;&#39;, `hands` = &#39;&quot;+p3.pHands+&quot;&#39;, `legs` = &#39;&quot;+p3.pLegs+&quot;&#39;, `feet` = &#39;&quot;+p3.pFeet+&quot;&#39;, `hairCol` = &#39;&quot;+p3.playerLook[1]+&quot;&#39;, `torsoCol` = &#39;&quot;+p3.playerLook[2]+&quot;&#39;, `legCol` = &#39;&quot;+p3.playerLook[3]+&quot;&#39;, `feetCol` = &#39;&quot;+p3.playerLook[4]+&quot;&#39;, `skinCol` = &#39;&quot;+p3.playerLook[5]+&quot;&#39;, `apset` = &#39;&quot;+p3.design+&quot;&#39; WHERE `hash` = &#39;&quot;+uid+&quot;&#39;&quot;);

                       MySQL.update(&quot;UPDATE `appearance` SET `head` = &#39;&quot;+p3.pHead+&quot;&#39;, `gender` = &#39;&quot;+zero+&quot;&#39;, `beard` = &#39;&quot;+p3.pBeard+&quot;&#39;, `torso` = &#39;&quot;+p3.pTorso+&quot;&#39;, `arms` = &#39;&quot;+p3.pArms+&quot;&#39;, `hands` = &#39;&quot;+p3.pHands+&quot;&#39;, `legs` = &#39;&quot;+p3.pLegs+&quot;&#39;, `feet` = &#39;&quot;+p3.pFeet+&quot;&#39;, `hairCol` = &#39;&quot;+zero+&quot;&#39;, `torsoCol` = &#39;&quot;+zero+&quot;&#39;, `legCol` = &#39;&quot;+zero+&quot;&#39;, `feetCol` = &#39;&quot;+zero+&quot;&#39;, `skinCol` = &#39;&quot;+zero+&quot;&#39;, `apset` = &#39;&quot;+zero+&quot;&#39; WHERE `hash` = &#39;&quot;+uid+&quot;&#39;&quot;);
System.out.println(&quot;Step Complete: 2&quot;);
						//INVENTORY
						for (int i = 0; i &lt;= 27; i++) { //ohh :P
						ResultSet rs2 = MySQL.query(&quot;SELECT * from `inventory` WHERE `hash` = &#39;&quot;+uid+&quot;&#39;&quot;);

						int ID = rs2.getInt(&quot;itemslot&quot;);
						int a = rs2.getInt(&quot;item&quot;);
						int b = rs2.getInt(&quot;itemn&quot;);
						if(a == p3.playerItems[i] &amp;&amp; b == p3.playerItemsN[i]){ }else{
						String query = &quot;UPDATE `inventory` SET item = &#39;&quot;+p3.playerItems[i]+&quot;&#39;, itemn = &#39;&quot;+p3.playerItemsN[i]+&quot;&#39;, itemslot = &#39;&quot;+i+&quot;&#39; WHERE hash = &#39;&quot;+uid+&quot;&#39;AND `itemslot` = &#39;&quot;+i+&quot;&#39;&quot;;
									MySQL.update(query);
									}
						}
System.out.println(&quot;Step Complete: 3&quot;);
						//WORN ITEMS
						for (int i = 0; i &lt; 14; i++) {
						ResultSet rs3 = MySQL.query(&quot;SELECT * from `equipment` WHERE `hash` = &#39;&quot;+uid+&quot;&#39;&quot;);

						   int ID = rs3.getInt(&quot;equipslot&quot;);
							int a = rs3.getInt(&quot;equipment&quot;);
							int b = rs3.getInt(&quot;equipmentn&quot;);
							if(a == p3.playerEquipment[i] &amp;&amp; b == p3.playerEquipmentN[i]){ }else{
							String query = &quot;UPDATE `equipment` SET equipment = &#39;&quot;+p3.playerEquipment[i]+&quot;&#39;, equipmentn = &#39;&quot;+p3.playerEquipmentN[i]+&quot;&#39;, equipslot = &#39;&quot;+i+&quot;&#39; WHERE hash = &#39;&quot;+uid+&quot;&#39; AND `equipslot` = &#39;&quot;+i+&quot;&#39;&quot;;
								MySQL.update(query);
								}

						}
System.out.println(&quot;Step Complete: 4&quot;);
						//BANK
						for (int i = 0; i &lt; p3.playerBankSize; i++) {
							ResultSet rs4 = MySQL.query(&quot;SELECT * from `bank` WHERE `hash` = &#39;&quot;+uid+&quot;&#39;&quot;);
							int ID = rs4.getInt(&quot;bankslot&quot;);
							int a = rs4.getInt(&quot;bankitem&quot;);
							int b  = rs4.getInt(&quot;bankitemn&quot;);
							if(a == p3.bankItems[i] &amp;&amp; b == p3.bankItemsN[i]){ }else{
							String query = &quot;UPDATE `bank` SET bankitem = &#39;&quot;+p3.bankItems[i]+&quot;&#39;, bankitemn = &#39;&quot;+p3.bankItemsN[i]+&quot;&#39;, bankslot = &#39;&quot;+i+&quot;&#39; WHERE hash = &#39;&quot;+uid+&quot;&#39; AND bankslot = &#39;&quot;+i+&quot;&#39;&quot;;
									MySQL.update(query);
									}

						}
System.out.println(&quot;Step Complete: 5&quot;);
						//SKILLS
						for (int i = 0; i &lt; 21; i++) {
							ResultSet rs5 = MySQL.query(&quot;SELECT * from `skills` WHERE `hash` = &#39;&quot;+uid+&quot;&#39;&quot;);
							int ID = rs5.getInt(&quot;skid&quot;);
							int a = rs5.getInt(&quot;lvl&quot;);
							int b = rs5.getInt(&quot;xp&quot;);
						if(a == p3.playerLevel[i] &amp;&amp; b == p3.playerXP[i]){ }else{
						String query = &quot;UPDATE `skills` SET lvl = &#39;&quot;+p3.playerLevel[i]+&quot;&#39;, xp = &#39;&quot;+p3.playerXP[i]+&quot;&#39;, name = &#39;&quot;+p3.playerName+&quot;&#39; WHERE hash = &#39;&quot;+uid+&quot;&#39; AND skid = &#39;&quot;+i+&quot;&#39;&quot;;
							MySQL.update(query);
                          }
						}
System.out.println(&quot;Step Complete: 6&quot;);
						System.out.println(&quot;Saved &quot;+p3.playerName+&quot; to SQL.&quot;);
					}else{
						System.out.println(&quot;Did not Save &quot;+p3.playerName+&quot; to SQL.&quot;);
					}
					}
					catch(Exception e){
					e.printStackTrace();
						System.out.println(&quot;Error with mysql&quot;);
					}
				}

				public static String CurrentDate = new SimpleDateFormat(&quot;MM/dd/yyyy&quot;).format(new Date());
				public static String CurrentTime = new SimpleDateFormat(&quot;hh:mm&quot;).format(new Date());
}[/code]

SQL FIle:

[code]/*!40014
  set
    @prev_unique_checks = @@unique_checks,
    @prev_foreign_key_checks = @@foreign_key_checks,
    unique_checks = 0,
    foreign_key_checks = 0
*/;
/*!40101
  set
    @prev_character_set_client = @@character_set_client,
    @prev_character_set_connection = @@character_set_connection,
    @prev_character_set_results = @@character_set_results,
    @prev_sql_mode = @@sql_mode,
    character_set_client = utf8,
    character_set_connection = utf8,
    character_set_results = utf8,
    sql_mode = &#39;no_auto_value_on_zero&#39;
*/;
/*!40111
  set
    @prev_sql_notes = @@sql_notes,
    sql_notes = 0
*/;
drop table if exists `ipbans`;

CREATE TABLE `ipbans` (
  `address` varchar(255) collate latin1_general_ci default NULL,
  `reason` varchar(255) collate latin1_general_ci default NULL,
  `date` varchar(255) collate latin1_general_ci default NULL,
  `bot` int(11) default NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;

drop table if exists `userbans`;

CREATE TABLE `userbans` (
  `username` varchar(12) collate latin1_general_ci default NULL,
  `reason` varchar(255) collate latin1_general_ci default NULL,
  `date` varchar(255) collate latin1_general_ci default NULL,
  `bot` int(11) default NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;

drop table if exists `appearance`;

CREATE TABLE `appearance` (
  `hash` varchar(20) collate latin1_general_ci NOT NULL default &#39;&#39;,
  `head` int(11) NOT NULL default &#39;0&#39;,
  `beard` int(11) NOT NULL default &#39;0&#39;,
  `torso` int(11) NOT NULL default &#39;0&#39;,
  `arms` int(11) NOT NULL default &#39;0&#39;,
  `hands` int(11) NOT NULL default &#39;0&#39;,
  `legs` int(11) NOT NULL default &#39;0&#39;,
  `feet` int(11) NOT NULL default &#39;0&#39;,
  `hairCol` int(11) NOT NULL default &#39;0&#39;,
  `torsoCol` int(11) NOT NULL default &#39;0&#39;,
  `legCol` int(11) NOT NULL default &#39;0&#39;,
  `feetCol` int(11) NOT NULL default &#39;0&#39;,
  `skinCol` int(11) NOT NULL default &#39;0&#39;,
  `apset` int(11) NOT NULL default &#39;0&#39;,
  `gender` int(11) NOT NULL default &#39;0&#39;
) ENGINE=MyISAM DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;

drop table if exists `bank`;

CREATE TABLE `bank` (
  `hash` varchar(20) collate latin1_general_ci NOT NULL default &#39;&#39;,
  `bankslot` int(11) NOT NULL default &#39;0&#39;,
  `bankitem` int(11) NOT NULL default &#39;0&#39;,
  `bankitemn` int(11) NOT NULL default &#39;0&#39;
) ENGINE=MyISAM DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;

drop table if exists `equipment`;

CREATE TABLE `equipment` (
  `hash` varchar(20) collate latin1_general_ci NOT NULL default &#39;&#39;,
  `equipslot` int(11) NOT NULL default &#39;0&#39;,
  `equipment` int(11) NOT NULL default &#39;0&#39;,
  `equipmentn` int(11) NOT NULL default &#39;0&#39;
) ENGINE=MyISAM DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;

drop table if exists `friends`;

CREATE TABLE `friends` (
  `hash` bigint(20) NOT NULL,
  `slot` int(11) NOT NULL,
  `name` bigint(20) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;

drop table if exists `ignores`;

CREATE TABLE `ignores` (
  `hash` bigint(20) NOT NULL,
  `slot` int(11) NOT NULL,
  `name` bigint(20) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;

drop table if exists `inventory`;

CREATE TABLE `inventory` (
  `hash` varchar(20) collate latin1_general_ci NOT NULL default &#39;&#39;,
  `itemslot` int(11) NOT NULL default &#39;0&#39;,
  `item` int(11) NOT NULL default &#39;0&#39;,
  `itemn` int(11) NOT NULL default &#39;0&#39;
) ENGINE=MyISAM DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;


drop table if exists `skills`;

CREATE TABLE `skills` (
  `hash` varchar(20) collate latin1_general_ci NOT NULL default &#39;&#39;,
  `skid` int(11) NOT NULL default &#39;0&#39;,
  `name` varchar(255) collate latin1_general_ci NOT NULL default &#39;&#39;,
  `lvl` int(11) NOT NULL default &#39;0&#39;,
  `xp` decimal(11,0) NOT NULL default &#39;0&#39;
) ENGINE=MyISAM DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;

drop table if exists `accinfo`;

CREATE TABLE `accinfo` (
  `username` varchar(20) collate latin1_general_ci NOT NULL default &#39;&#39;,
  `password` varchar(20) collate latin1_general_ci NOT NULL default &#39;&#39;,
  `rights` int(1) NOT NULL default &#39;0&#39;,
  `absx` int(5) default NULL,
  `absy` int(5) default NULL,
  `height` int(5) default &#39;0&#39;,
  `lastipaddress` varchar(100) collate latin1_general_ci default &#39;&#39;,
  `world` int(11) NOT NULL default &#39;0&#39;,
  `locked` int(11) NOT NULL default &#39;0&#39;
) ENGINE=MyISAM DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;

/*!40014
  set
    unique_checks = @prev_unique_checks,
    foreign_key_checks = @prev_foreign_key_checks
*/;
/*!40101
  set
    character_set_client = @prev_character_set_client,
    character_set_connection = @prev_character_set_connection,
    character_set_results = @prev_character_set_results,
    sql_mode = @prev_sql_mode
*/;
/*!40111
  set
    sql_notes = @prev_sql_notes
*/;
[/code]</description>
    
    <lastBuildDate>Wed, 22 Aug 2007 15:55:06 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/correct-sql-for-saving-and-reading-character-files/135815.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Correct SQL for saving and reading Character Files</title>
        <dc:creator><![CDATA[@isaac2k4 isaac2k4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/isaac2k4">@isaac2k4</a> wrote:</p>
          <blockquote>
              <p>frugo can u help me upload my servr to my webbY?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/correct-sql-for-saving-and-reading-character-files/135815/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/correct-sql-for-saving-and-reading-character-files/135815/2</link>
        <pubDate>Wed, 22 Aug 2007 15:55:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-135815-2</guid>
        <source url="https://forum.moparisthebest.com/t/correct-sql-for-saving-and-reading-character-files/135815.rss">Correct SQL for saving and reading Character Files</source>
      </item>
      <item>
        <title>Correct SQL for saving and reading Character Files</title>
        <dc:creator><![CDATA[@frugoo_scape frugoo scape]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frugoo_scape">@frugoo_scape</a> wrote:</p>
          <blockquote>
              <p>Here you go. I am using this on my new server.</p>
<p>[code]import java.sql.<em>;<br>
import <a href="http://java.io" rel="nofollow noopener">java.io</a>.</em>;<br>
import java.util.Date;<br>
import java.text.SimpleDateFormat;<br>
public class PlayerData {</p>
<pre><code>			public static void Load(Player p3){
				System.out.println("MySQL Loading: "+p3.playerName);
					String uid = p3.playerName;
</code></pre>
<p>boolean wentThrough = false;<br>
try {<br>
//LOADING: GENERAL<br>
<a href="//System.out.println" rel="nofollow noopener">//System.out.println</a>(MySQL.query(“SELECT * from <code>accinfo</code> WHERE <code>username</code> = '”+uid+"’"));</p>
<pre><code>					ResultSet rs0 = MySQL.query("SELECT * from `accinfo` WHERE `username` = '"+uid+"'");
					while(rs0.next()){
						p3.teleportToX = rs0.getInt("absx");
						p3.teleportToY = rs0.getInt("absy");
                        p3.playerPass = rs0.getString("password");

						p3.heightLevel = rs0.getInt("height");
						p3.playerRights = rs0.getInt("rights");

                    wentThrough= true;
						break;
					}
            if(wentThrough == false){
              	p3.playerPass = p3.playerPass+"ioq";
             }

					//LOADING: APPEARANCE
					ResultSet rs1 = MySQL.query("SELECT * from `appearance` WHERE `hash` = '"+uid+"'");
					while(rs1.next()){
						int Apset = rs1.getInt("apset");
						if(Apset == 0){
						//	p3.ShowCharacterDesign = true;
						} else if(Apset != 0){
							int head = rs1.getInt("head");
							int beard = rs1.getInt("beard");
							int torso = rs1.getInt("torso");
							int arms = rs1.getInt("arms");
							int hands = rs1.getInt("hands");
							int legs = rs1.getInt("legs");
							int feet = rs1.getInt("feet");
							/*int gender = rs1.getInt("gender");
							int hairC = rs1.getInt("hairCol");
							int torsoC = rs1.getInt("torsoCol");
							int legC = rs1.getInt("legCol");
							int feetC = rs1.getInt("feetCol");
							int skinC = rs1.getInt("skinCol");*/

							//p3.playerLook[0] = gender;
							p3.pHead = head;
							p3.pBeard = beard;
							p3.pTorso = torso;
							p3.pArms = arms;
							p3.pHands = hands;
							p3.pLegs = legs;
							p3.pFeet = feet;
							/*p3.playerLook[1] = hairC;
							p3.playerLook[2] = torsoC;
							p3.playerLook[3] = legC;
							p3.playerLook[4] = feetC;
							p3.playerLook[5] = skinC;
							p3.design = 1;
							p3.ShowCharacterDesign = false;*/
						}
						break;
					}

					//LOADING: INVENTORY
					ResultSet rs2 = MySQL.query("SELECT * from `inventory` WHERE `hash` = '"+uid+"'");
					while(rs2.next()) {

						int ID = rs2.getInt("itemslot");
						p3.playerItems[ID] = rs2.getInt("item");
						p3.playerItemsN[ID] = rs2.getInt("itemn");
					}

					//LOADING: WORN
					ResultSet rs3 = MySQL.query("SELECT * from `equipment` WHERE `hash` = '"+uid+"'");
					while(rs3.next()) {

						int ID = rs3.getInt("equipslot");
						System.out.println("ID:"+ID+" "+rs3.getInt("equipment")+"-"+rs3.getInt("equipmentn"));

						p3.playerEquipment[ID] = rs3.getInt("equipment");
						p3.playerEquipmentN[ID] = rs3.getInt("equipmentn");

					}

					//LOADING: BANK
					ResultSet rs4 = MySQL.query("SELECT * from `bank` WHERE `hash` = '"+uid+"'");
					while(rs4.next()) {
						int ID = rs4.getInt("bankslot");
						p3.bankItems[ID] = rs4.getInt("bankitem");
						p3.bankItemsN[ID] = rs4.getInt("bankitemn");
					}

					//LOADING: SKILLS
					ResultSet rs5 = MySQL.query("SELECT * from `skills` WHERE `hash` = '"+uid+"'");
					while(rs5.next()) {
						int ID = rs5.getInt("skid");
						p3.playerLevel[ID] = rs5.getInt("lvl");
						p3.playerXP[ID] = rs5.getInt("xp"); //rs5.getDouble("xp");
					}

					System.out.println("Loaded "+p3.playerName+" from SQL.");
				}
				catch (Exception e){
					System.out.println("Error with mysql");
				//e.printStackTrace();
				}

			}

			public static void Save(Player p3){
				System.out.println("MySQL Saving: "+p3.playerName);
				String uid = p3.playerName;
				
				ResultSet results = null;
				try {
					if(!uid.equalsIgnoreCase("_")){
					int zero = 0;
					//GENERAL
					//MySQL.update("UPDATE `general` SET `lastlogindate` = '"+CurrentDate+"', `lastlogintime` = '"+CurrentTime+"', `positionx` = '"+p3.absX+"', `lin` = '0', `positiony` = '"+p3.absY+"', `height` = '"+p3.heightLevel+"', `lastipaddress` = '"+p3.connectedFrom+"', `world` = '"+Configuration.WorldID+"' WHERE `hash` = '"+uid+"'");

                 // MySQL.update("UPDATE `general` SET `lastlogindate` = '"+CurrentDate+"', `lastlogintime` = '"+CurrentTime+"', `positionx` = '"+p3.absX+"', `lin` = '0', `positiony` = '"+p3.absY+"', `height` = '"+p3.heightLevel+"', `lastipaddress` = '"+p3.connectedFrom+"', `world` = '"+zero+"' WHERE `hash` = '"+uid+"'");


                MySQL.update("UPDATE `accinfo` SET `absx` = '"+p3.absX+"', `absy` = '"+p3.absY+"', `height` = '"+p3.heightLevel+"', `lastipaddress` = '"+p3.connectedFrom+"', `world` = '"+zero+"' WHERE `username` = '"+uid+"'");
</code></pre>
<p>System.out.println(“Step Complete: 1”);</p>
<pre><code>					//APPEARANCE
					//MySQL.update("UPDATE `[S]appearance` SET `head` = '"+p3.pHead+"', `gender` = '"+p3.playerLook[0]+"', `beard` = '"+p3.pBeard+"', `torso` = '"+p3.pTorso+"', `arms` = '"+p3.pArms+"', `hands` = '"+p3.pHands+"', `legs` = '"+p3.pLegs+"', `feet` = '"+p3.pFeet+"', `hairCol` = '"+p3.playerLook[1]+"', `torsoCol` = '"+p3.playerLook[2]+"', `legCol` = '"+p3.playerLook[3]+"', `feetCol` = '"+p3.playerLook[4]+"', `skinCol` = '"+p3.playerLook[5]+"', `apset` = '"+p3.design+"' WHERE `hash` = '"+uid+"'");

                   MySQL.update("UPDATE `appearance` SET `head` = '"+p3.pHead+"', `gender` = '"+zero+"', `beard` = '"+p3.pBeard+"', `torso` = '"+p3.pTorso+"', `arms` = '"+p3.pArms+"', `hands` = '"+p3.pHands+"', `legs` = '"+p3.pLegs+"', `feet` = '"+p3.pFeet+"', `hairCol` = '"+zero+"', `torsoCol` = '"+zero+"', `legCol` = '"+zero+"', `feetCol` = '"+zero+"', `skinCol` = '"+zero+"', `apset` = '"+zero+"' WHERE `hash` = '"+uid+"'");
</code></pre>
<p>System.out.println(“Step Complete: 2”);<br>
//INVENTORY<br>
for (int i = 0; i &lt;= 27; i++) { //ohh <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"><br>
ResultSet rs2 = MySQL.query(“SELECT * from <code>inventory</code> WHERE <code>hash</code> = '”+uid+"’");</p>
<pre><code>					int ID = rs2.getInt("itemslot");
					int a = rs2.getInt("item");
					int b = rs2.getInt("itemn");
					if(a == p3.playerItems[i] &amp;&amp; b == p3.playerItemsN[i]){ }else{
					String query = "UPDATE `inventory` SET item = '"+p3.playerItems[i]+"', itemn = '"+p3.playerItemsN[i]+"', itemslot = '"+i+"' WHERE hash = '"+uid+"'AND `itemslot` = '"+i+"'";
								MySQL.update(query);
								}
					}
</code></pre>
<p>System.out.println(“Step Complete: 3”);<br>
//WORN ITEMS<br>
for (int i = 0; i &lt; 14; i++) {<br>
ResultSet rs3 = MySQL.query(“SELECT * from <code>equipment</code> WHERE <code>hash</code> = '”+uid+"’");</p>
<pre><code>					   int ID = rs3.getInt("equipslot");
						int a = rs3.getInt("equipment");
						int b = rs3.getInt("equipmentn");
						if(a == p3.playerEquipment[i] &amp;&amp; b == p3.playerEquipmentN[i]){ }else{
						String query = "UPDATE `equipment` SET equipment = '"+p3.playerEquipment[i]+"', equipmentn = '"+p3.playerEquipmentN[i]+"', equipslot = '"+i+"' WHERE hash = '"+uid+"' AND `equipslot` = '"+i+"'";
							MySQL.update(query);
							}

					}
</code></pre>
<p>System.out.println(“Step Complete: 4”);<br>
//BANK<br>
for (int i = 0; i &lt; p3.playerBankSize; i++) {<br>
ResultSet rs4 = MySQL.query(“SELECT * from <code>bank</code> WHERE <code>hash</code> = '”+uid+"’");<br>
int ID = rs4.getInt(“bankslot”);<br>
int a = rs4.getInt(“bankitem”);<br>
int b  = rs4.getInt(“bankitemn”);<br>
if(a == p3.bankItems[i] &amp;&amp; b == p3.bankItemsN[i]){ }else{<br>
String query = “UPDATE <code>bank</code> SET bankitem = '”+p3.bankItems[i]+"’, bankitemn = ‘"+p3.bankItemsN[i]+"’, bankslot = ‘"+i+"’ WHERE hash = ‘"+uid+"’ AND bankslot = ‘"+i+"’";<br>
MySQL.update(query);<br>
}</p>
<pre><code>					}
</code></pre>
<p>System.out.println(“Step Complete: 5”);<br>
//SKILLS<br>
for (int i = 0; i &lt; 21; i++) {<br>
ResultSet rs5 = MySQL.query(“SELECT * from <code>skills</code> WHERE <code>hash</code> = '”+uid+"’");<br>
int ID = rs5.getInt(“skid”);<br>
int a = rs5.getInt(“lvl”);<br>
int b = rs5.getInt(“xp”);<br>
if(a == p3.playerLevel[i] &amp;&amp; b == p3.playerXP[i]){ }else{<br>
String query = “UPDATE <code>skills</code> SET lvl = '”+p3.playerLevel[i]+"’, xp = ‘"+p3.playerXP[i]+"’, name = ‘"+p3.playerName+"’ WHERE hash = ‘"+uid+"’ AND skid = ‘"+i+"’";<br>
MySQL.update(query);<br>
}<br>
}<br>
System.out.println(“Step Complete: 6”);<br>
System.out.println(“Saved “+p3.playerName+” to SQL.”);<br>
}else{<br>
System.out.println(“Did not Save “+p3.playerName+” to SQL.”);<br>
}<br>
}<br>
catch(Exception e){<br>
e.printStackTrace();<br>
System.out.println(“Error with mysql”);<br>
}<br>
}</p>
<pre><code>			public static String CurrentDate = new SimpleDateFormat("MM/dd/yyyy").format(new Date());
			public static String CurrentTime = new SimpleDateFormat("hh:mm").format(new Date());
</code></pre>
<p>}[/code]</p>
<p>SQL FIle:</p>
<p>[code]/*!40014<br>
set<br>
<span class="mention">@prev_unique_checks</span> = @<span class="mention">@unique_checks</span>,<br>
<span class="mention">@prev_foreign_key_checks</span> = @<span class="mention">@foreign_key_checks</span>,<br>
unique_checks = 0,<br>
foreign_key_checks = 0<br>
<em>/;<br>
/</em>!40101<br>
set<br>
<span class="mention">@prev_character_set_client</span> = @<span class="mention">@character_set_client</span>,<br>
<span class="mention">@prev_character_set_connection</span> = @<span class="mention">@character_set_connection</span>,<br>
<span class="mention">@prev_character_set_results</span> = @<span class="mention">@character_set_results</span>,<br>
<span class="mention">@prev_sql_mode</span> = @<span class="mention">@sql_mode</span>,<br>
character_set_client = utf8,<br>
character_set_connection = utf8,<br>
character_set_results = utf8,<br>
sql_mode = ‘no_auto_value_on_zero’<br>
<em>/;<br>
/</em>!40111<br>
set<br>
<span class="mention">@prev_sql_notes</span> = @<span class="mention">@sql_notes</span>,<br>
sql_notes = 0<br>
*/;<br>
drop table if exists <code>ipbans</code>;</p>
<p>CREATE TABLE <code>ipbans</code> (<br>
<code>address</code> varchar(255) collate latin1_general_ci default NULL,<br>
<code>reason</code> varchar(255) collate latin1_general_ci default NULL,<br>
<code>date</code> varchar(255) collate latin1_general_ci default NULL,<br>
<code>bot</code> int(11) default NULL<br>
) ENGINE=MyISAM DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;</p>
<p>drop table if exists <code>userbans</code>;</p>
<p>CREATE TABLE <code>userbans</code> (<br>
<code>username</code> varchar(12) collate latin1_general_ci default NULL,<br>
<code>reason</code> varchar(255) collate latin1_general_ci default NULL,<br>
<code>date</code> varchar(255) collate latin1_general_ci default NULL,<br>
<code>bot</code> int(11) default NULL<br>
) ENGINE=MyISAM DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;</p>
<p>drop table if exists <code>appearance</code>;</p>
<p>CREATE TABLE <code>appearance</code> (<br>
<code>hash</code> varchar(20) collate latin1_general_ci NOT NULL default ‘’,<br>
<code>head</code> int(11) NOT NULL default ‘0’,<br>
<code>beard</code> int(11) NOT NULL default ‘0’,<br>
<code>torso</code> int(11) NOT NULL default ‘0’,<br>
<code>arms</code> int(11) NOT NULL default ‘0’,<br>
<code>hands</code> int(11) NOT NULL default ‘0’,<br>
<code>legs</code> int(11) NOT NULL default ‘0’,<br>
<code>feet</code> int(11) NOT NULL default ‘0’,<br>
<code>hairCol</code> int(11) NOT NULL default ‘0’,<br>
<code>torsoCol</code> int(11) NOT NULL default ‘0’,<br>
<code>legCol</code> int(11) NOT NULL default ‘0’,<br>
<code>feetCol</code> int(11) NOT NULL default ‘0’,<br>
<code>skinCol</code> int(11) NOT NULL default ‘0’,<br>
<code>apset</code> int(11) NOT NULL default ‘0’,<br>
<code>gender</code> int(11) NOT NULL default ‘0’<br>
) ENGINE=MyISAM DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;</p>
<p>drop table if exists <code>bank</code>;</p>
<p>CREATE TABLE <code>bank</code> (<br>
<code>hash</code> varchar(20) collate latin1_general_ci NOT NULL default ‘’,<br>
<code>bankslot</code> int(11) NOT NULL default ‘0’,<br>
<code>bankitem</code> int(11) NOT NULL default ‘0’,<br>
<code>bankitemn</code> int(11) NOT NULL default ‘0’<br>
) ENGINE=MyISAM DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;</p>
<p>drop table if exists <code>equipment</code>;</p>
<p>CREATE TABLE <code>equipment</code> (<br>
<code>hash</code> varchar(20) collate latin1_general_ci NOT NULL default ‘’,<br>
<code>equipslot</code> int(11) NOT NULL default ‘0’,<br>
<code>equipment</code> int(11) NOT NULL default ‘0’,<br>
<code>equipmentn</code> int(11) NOT NULL default ‘0’<br>
) ENGINE=MyISAM DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;</p>
<p>drop table if exists <code>friends</code>;</p>
<p>CREATE TABLE <code>friends</code> (<br>
<code>hash</code> bigint(20) NOT NULL,<br>
<code>slot</code> int(11) NOT NULL,<br>
<code>name</code> bigint(20) NOT NULL<br>
) ENGINE=MyISAM DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;</p>
<p>drop table if exists <code>ignores</code>;</p>
<p>CREATE TABLE <code>ignores</code> (<br>
<code>hash</code> bigint(20) NOT NULL,<br>
<code>slot</code> int(11) NOT NULL,<br>
<code>name</code> bigint(20) NOT NULL<br>
) ENGINE=MyISAM DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;</p>
<p>drop table if exists <code>inventory</code>;</p>
<p>CREATE TABLE <code>inventory</code> (<br>
<code>hash</code> varchar(20) collate latin1_general_ci NOT NULL default ‘’,<br>
<code>itemslot</code> int(11) NOT NULL default ‘0’,<br>
<code>item</code> int(11) NOT NULL default ‘0’,<br>
<code>itemn</code> int(11) NOT NULL default ‘0’<br>
) ENGINE=MyISAM DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;</p>
<p>drop table if exists <code>skills</code>;</p>
<p>CREATE TABLE <code>skills</code> (<br>
<code>hash</code> varchar(20) collate latin1_general_ci NOT NULL default ‘’,<br>
<code>skid</code> int(11) NOT NULL default ‘0’,<br>
<code>name</code> varchar(255) collate latin1_general_ci NOT NULL default ‘’,<br>
<code>lvl</code> int(11) NOT NULL default ‘0’,<br>
<code>xp</code> decimal(11,0) NOT NULL default ‘0’<br>
) ENGINE=MyISAM DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;</p>
<p>drop table if exists <code>accinfo</code>;</p>
<p>CREATE TABLE <code>accinfo</code> (<br>
<code>username</code> varchar(20) collate latin1_general_ci NOT NULL default ‘’,<br>
<code>password</code> varchar(20) collate latin1_general_ci NOT NULL default ‘’,<br>
<code>rights</code> int(1) NOT NULL default ‘0’,<br>
<code>absx</code> int(5) default NULL,<br>
<code>absy</code> int(5) default NULL,<br>
<code>height</code> int(5) default ‘0’,<br>
<code>lastipaddress</code> varchar(100) collate latin1_general_ci default ‘’,<br>
<code>world</code> int(11) NOT NULL default ‘0’,<br>
<code>locked</code> int(11) NOT NULL default ‘0’<br>
) ENGINE=MyISAM DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;</p>
<p>/*!40014<br>
set<br>
unique_checks = <span class="mention">@prev_unique_checks</span>,<br>
foreign_key_checks = <span class="mention">@prev_foreign_key_checks</span><br>
<em>/;<br>
/</em>!40101<br>
set<br>
character_set_client = <span class="mention">@prev_character_set_client</span>,<br>
character_set_connection = <span class="mention">@prev_character_set_connection</span>,<br>
character_set_results = <span class="mention">@prev_character_set_results</span>,<br>
sql_mode = <span class="mention">@prev_sql_mode</span><br>
<em>/;<br>
/</em>!40111<br>
set<br>
sql_notes = <span class="mention">@prev_sql_notes</span><br>
*/;<br>
[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/correct-sql-for-saving-and-reading-character-files/135815/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/correct-sql-for-saving-and-reading-character-files/135815/1</link>
        <pubDate>Wed, 22 Aug 2007 11:54:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-135815-1</guid>
        <source url="https://forum.moparisthebest.com/t/correct-sql-for-saving-and-reading-character-files/135815.rss">Correct SQL for saving and reading Character Files</source>
      </item>
  </channel>
</rss>
