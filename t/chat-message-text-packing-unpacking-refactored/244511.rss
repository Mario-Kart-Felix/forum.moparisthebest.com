<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Chat message text packing/unpacking refactored</title>
    <link>https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511</link>
    <description>[code]// Decompiled by Jad v1.5.8f. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 


public class TextPackingUtils {

    public static String unpackText(byte buffer[], int bufferOffset, int j) {
        try {
            int unpackedOffset = 0;
            int upperNibble = -1;
            for (int i1 = 0; i1 &lt; j; i1++) {
                int nextByte = buffer[bufferOffset++] &amp; 0xff;
                int nextNibble = nextByte &gt;&gt; 4 &amp; 0xf;
                if (upperNibble == -1) {
                    if (nextNibble &lt; 13)
                        unpackedText[unpackedOffset++] = validCharacters[nextNibble];
                    else
                        upperNibble = nextNibble;
                } else {
                    unpackedText[unpackedOffset++] = validCharacters[((upperNibble &lt;&lt; 4) + nextNibble) - 195];
                    upperNibble = -1;
                }
                nextNibble = nextByte &amp; 0xf;
                if (upperNibble == -1) {
                    if (nextNibble &lt; 13)
                        unpackedText[unpackedOffset++] = validCharacters[nextNibble];
                    else
                        upperNibble = nextNibble;
                } else {
                    unpackedText[unpackedOffset++] = validCharacters[((upperNibble &lt;&lt; 4) + nextNibble) - 195];
                    upperNibble = -1;
                }
            }

            boolean endOfSentence = true;
            for (int i = 0; i &lt; unpackedOffset; i++) {
                char nextChar = unpackedText[i];
                if (i &gt; 4 &amp;&amp; nextChar == &#39;@&#39;)
                    unpackedText[i] = &#39; &#39;;
                if (nextChar == &#39;%&#39;)
                    unpackedText[i] = &#39; &#39;;
                if (endOfSentence &amp;&amp; nextChar &gt;= &#39;a&#39; &amp;&amp; nextChar &lt;= &#39;z&#39;) {
                    unpackedText[i] += &#39;\uFFE0&#39;; //make capital
                    endOfSentence = false;
                }
                if (nextChar == &#39;.&#39; || nextChar == &#39;!&#39; || nextChar == &#39;:&#39;)
                    endOfSentence = true;
            }

            return new String(unpackedText, 0, unpackedOffset);
        }
        catch (Exception _ex) {
            return &quot;.&quot;;
        }
    }

    public static int packText(String text) {
        if (text.length() &gt; 80)
            text = text.substring(0, 80);
        text = text.toLowerCase();
        int packedTextOffset = 0;
        int upperNibble = -1;
        for (int textOffset = 0; textOffset &lt; text.length(); textOffset++) {
            char nextChar = text.charAt(textOffset);
            int validCharTableIndex = 0;
            for (int validCharPtr = 0; validCharPtr &lt; validCharacters.length; validCharPtr++) {
                if (nextChar != validCharacters[validCharPtr])
                    continue;
                validCharTableIndex = validCharPtr;
                break;
            }

            if (validCharTableIndex &gt; 12)
                validCharTableIndex += 195;
            if (upperNibble == -1) {
                if (validCharTableIndex &lt; 13)
                    upperNibble = validCharTableIndex;
                else
                    packedText[packedTextOffset++] = (byte) validCharTableIndex;
            } else if (validCharTableIndex &lt; 13) { //index fits in a nibble
                packedText[packedTextOffset++] = (byte) ((upperNibble &lt;&lt; 4) + validCharTableIndex);
                upperNibble = -1;
            } else {
                packedText[packedTextOffset++] = (byte) ((upperNibble &lt;&lt; 4) + (validCharTableIndex &gt;&gt; 4));
                upperNibble = validCharTableIndex &amp; 0xf;
            }
        }

        if (upperNibble != -1)
            packedText[packedTextOffset++] = (byte) (upperNibble &lt;&lt; 4);
        return packedTextOffset;
    }

    public static byte packedText[] = new byte[100];
    public static char unpackedText[] = new char[100];
    private static char validCharacters[] = {
            &#39; &#39;, &#39;e&#39;, &#39;t&#39;, &#39;a&#39;, &#39;o&#39;, &#39;i&#39;, &#39;h&#39;, &#39;n&#39;, &#39;s&#39;, &#39;r&#39;,
            &#39;d&#39;, &#39;l&#39;, &#39;u&#39;, &#39;m&#39;, &#39;w&#39;, &#39;c&#39;, &#39;y&#39;, &#39;f&#39;, &#39;g&#39;, &#39;p&#39;,
            &#39;b&#39;, &#39;v&#39;, &#39;k&#39;, &#39;x&#39;, &#39;j&#39;, &#39;q&#39;, &#39;z&#39;, &#39;0&#39;, &#39;1&#39;, &#39;2&#39;,
            &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;, &#39;7&#39;, &#39;8&#39;, &#39;9&#39;, &#39; &#39;, &#39;!&#39;, &#39;?&#39;,
            &#39;.&#39;, &#39;,&#39;, &#39;:&#39;, &#39;;&#39;, &#39;(&#39;, &#39;)&#39;, &#39;-&#39;, &#39;&amp;&#39;, &#39;*&#39;, &#39;\\&#39;,
            &#39;\&#39;&#39;, &#39;@&#39;, &#39;#&#39;, &#39;+&#39;, &#39;=&#39;, &#39;\243&#39;, &#39;$&#39;, &#39;%&#39;, &#39;&quot;&#39;, &#39;[&#39;,
            &#39;]&#39;
    };

}
[/code]

dunno, basically converts the index of the character (if its valid) inside the valid character table, if its under 13 (i.e. can fit in 4 bits; a nibble), it writes the index as a nibble. if it CANNOT be expressed in 4 bits, it writes the upper nibble of the index along with the lower nibble of the last index... im sure people have already figured it out, but its just that most people use premade bases by reines, exemplar, sean, etc. (RSCD) but dont have any clue as to how stuff works on (relatively) &#39;low&#39; level</description>
    
    <lastBuildDate>Wed, 19 Nov 2008 12:00:57 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Chat message text packing/unpacking refactored</title>
        <dc:creator><![CDATA[@m.dog311 m.dog311]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/m.dog311">@m.dog311</a> wrote:</p>
          <blockquote>
              <p>[quote=“freaky5000, post:9, topic:244511”][quote author=Yz85Racer link=topic=320887.msg2539130#msg2539130 date=1226902142]<br>
You’re an idiot fuck off.<br>
[/quote]</p>
<p>Seriously where did they recruit you from?[/quote]<br>
The gates of hell.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511/12</link>
        <pubDate>Wed, 19 Nov 2008 12:00:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-244511-12</guid>
        <source url="https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511.rss">Chat message text packing/unpacking refactored</source>
      </item>
      <item>
        <title>Chat message text packing/unpacking refactored</title>
        <dc:creator><![CDATA[@Yz85Racer Yz85Racer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/yz85racer">@Yz85Racer</a> wrote:</p>
          <blockquote>
              <p>[quote=“freaky5000, post:9, topic:244511”][quote author=Yz85Racer link=topic=320887.msg2539130#msg2539130 date=1226902142]<br>
You’re an idiot fuck off.<br>
[/quote]</p>
<p>Seriously where did they recruit you from?[/quote]<br>
The fact I have been with this scene for a while now, but is this post REALLY needed? Everyone has this, it would like be me posting a topic about “DOWNLOAD MSN MESSENGER HERE”.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511/11</link>
        <pubDate>Wed, 19 Nov 2008 08:57:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-244511-11</guid>
        <source url="https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511.rss">Chat message text packing/unpacking refactored</source>
      </item>
      <item>
        <title>Chat message text packing/unpacking refactored</title>
        <dc:creator><![CDATA[@KO9 KO9]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ko9">@KO9</a> wrote:</p>
          <blockquote>
              <p>can i nibble on your refactorisation?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511/10</link>
        <pubDate>Tue, 18 Nov 2008 16:24:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-244511-10</guid>
        <source url="https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511.rss">Chat message text packing/unpacking refactored</source>
      </item>
      <item>
        <title>Chat message text packing/unpacking refactored</title>
        <dc:creator><![CDATA[@freaky5000 freaky5000]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/freaky5000">@freaky5000</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="6" data-topic="244511">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/yz85racer/40/5_6bca9977b612b7aeef77ba1ec1cd67b3.png" class="avatar"> Yz85Racer:</div>
<blockquote>
<p>You’re an idiot fuck off.</p>
</blockquote>
</aside>
<p>Seriously where did they recruit you from?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511/9</link>
        <pubDate>Tue, 18 Nov 2008 13:37:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-244511-9</guid>
        <source url="https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511.rss">Chat message text packing/unpacking refactored</source>
      </item>
      <item>
        <title>Chat message text packing/unpacking refactored</title>
        <dc:creator><![CDATA[@xEnt xEnt]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xent">@xEnt</a> wrote:</p>
          <blockquote>
              <p>[quote=“meatstick, post:7, topic:244511”]"// Decompiled by Jad v1.5.8f. Copyright 2001 Pavel Kouznetsov.<br>
// Jad home page: <a href="http://www.kpdus.com/jad.html" rel="nofollow noopener">http://www.kpdus.com/jad.html</a><br>
// Decompiler options: packimports(3)"<br>
?[/quote]</p>
<p>Because it was decompiled?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511/8</link>
        <pubDate>Mon, 17 Nov 2008 15:45:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-244511-8</guid>
        <source url="https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511.rss">Chat message text packing/unpacking refactored</source>
      </item>
      <item>
        <title>Chat message text packing/unpacking refactored</title>
        <dc:creator><![CDATA[@meatstick meatstick]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/meatstick">@meatstick</a> wrote:</p>
          <blockquote>
              <p>“// Decompiled by Jad v1.5.8f. Copyright 2001 Pavel Kouznetsov.<br>
// Jad home page: <a href="http://www.kpdus.com/jad.html" rel="nofollow noopener">http://www.kpdus.com/jad.html</a><br>
// Decompiler options: packimports(3)”<br>
?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511/7</link>
        <pubDate>Mon, 17 Nov 2008 15:34:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-244511-7</guid>
        <source url="https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511.rss">Chat message text packing/unpacking refactored</source>
      </item>
      <item>
        <title>Chat message text packing/unpacking refactored</title>
        <dc:creator><![CDATA[@Yz85Racer Yz85Racer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/yz85racer">@Yz85Racer</a> wrote:</p>
          <blockquote>
              <p>You’re an idiot fuck off.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511/6</link>
        <pubDate>Mon, 17 Nov 2008 06:09:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-244511-6</guid>
        <source url="https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511.rss">Chat message text packing/unpacking refactored</source>
      </item>
      <item>
        <title>Chat message text packing/unpacking refactored</title>
        <dc:creator><![CDATA[@Ian Ian]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ian">@Ian</a> wrote:</p>
          <blockquote>
              <p>[quote=“xEnt, post:4, topic:244511”][quote author=Ian link=topic=320887.msg2538743#msg2538743 date=1226879106]</p>
<aside class="quote no-group">
<blockquote>
<p>This is a piss poor “guide” or speech if you call it, about transferring text over network. Why did you need to c&amp;p this here, most of the users on this forum have trouble understanding a basic programming language, having this here badly detailed is going to make them think wtf?.</p>
<p>This is not relevant to anything, someone can go into RSCProtocolDecoder/Encoder and view how it’s all properly structured through the RSCPacket and Packet classes.</p>
</blockquote>
</aside>
<p>xEnt, this isnt supposed to be a guide nor a speech… and it never mentions transferring text over a network. yes i agree my description is pretty bad… but my code has verbose names so you can actually SEE what it is doing. anyway xEnt, this isnt ‘tx’ nor this ‘ian’ guy… this is super_ from <span class="hashtag">#mopar</span>… go on and i will verify <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"><br>
[/quote]<br>
super_ you idiot what are you doing on that account, shame. I don’t need to know who wrote it, i just like writing what i think.[/quote]</p>
<p>dunno cbf to register so i am just using this acc… anyway sir IT IS NOT A GUIDE!!! i know frank_ will come along and be like ‘whats with verbose identifiers for local variables…’ blah blah like he did earlier on IRC when i was refactoring a class…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511/5</link>
        <pubDate>Sun, 16 Nov 2008 23:58:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-244511-5</guid>
        <source url="https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511.rss">Chat message text packing/unpacking refactored</source>
      </item>
      <item>
        <title>Chat message text packing/unpacking refactored</title>
        <dc:creator><![CDATA[@xEnt xEnt]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xent">@xEnt</a> wrote:</p>
          <blockquote>
              <p>[quote=“Ian, post:3, topic:244511”][quote author=xEnt link=topic=320887.msg2538734#msg2538734 date=1226878606]<br>
This is a piss poor “guide” or speech if you call it, about transferring text over network. Why did you need to c&amp;p this here, most of the users on this forum have trouble understanding a basic programming language, having this here badly detailed is going to make them think wtf?.</p>
<p>This is not relevant to anything, someone can go into RSCProtocolDecoder/Encoder and view how it’s all properly structured through the RSCPacket and Packet classes.<br>
[/quote]</p>
<p>xEnt, this isnt supposed to be a guide nor a speech… and it never mentions transferring text over a network. yes i agree my description is pretty bad… but my code has verbose names so you can actually SEE what it is doing. anyway xEnt, this isnt ‘tx’ nor this ‘ian’ guy… this is super_ from <span class="hashtag">#mopar</span>… go on and i will verify :p[/quote]<br>
super_ you idiot what are you doing on that account, shame. I don’t need to know who wrote it, i just like writing what i think.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511/4</link>
        <pubDate>Sun, 16 Nov 2008 23:51:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-244511-4</guid>
        <source url="https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511.rss">Chat message text packing/unpacking refactored</source>
      </item>
      <item>
        <title>Chat message text packing/unpacking refactored</title>
        <dc:creator><![CDATA[@Ian Ian]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ian">@Ian</a> wrote:</p>
          <blockquote>
              <p>[quote=“xEnt, post:2, topic:244511”]This is a piss poor “guide” or speech if you call it, about transferring text over network. Why did you need to c&amp;p this here, most of the users on this forum have trouble understanding a basic programming language, having this here badly detailed is going to make them think wtf?.</p>
<p>This is not relevant to anything, someone can go into RSCProtocolDecoder/Encoder and view how it’s all properly structured through the RSCPacket and Packet classes.[/quote]</p>
<p>xEnt, this isnt supposed to be a guide nor a speech… and it never mentions transferring text over a network. yes i agree my description is pretty bad… but my code has verbose names so you can actually SEE what it is doing. anyway xEnt, this isnt ‘tx’ nor this ‘ian’ guy… this is super_ from <span class="hashtag">#mopar</span>… go on and i will verify <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511/3</link>
        <pubDate>Sun, 16 Nov 2008 23:45:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-244511-3</guid>
        <source url="https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511.rss">Chat message text packing/unpacking refactored</source>
      </item>
      <item>
        <title>Chat message text packing/unpacking refactored</title>
        <dc:creator><![CDATA[@xEnt xEnt]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xent">@xEnt</a> wrote:</p>
          <blockquote>
              <p>This is a piss poor “guide” or speech if you call it, about transferring text over network. Why did you need to c&amp;p this here, most of the users on this forum have trouble understanding a basic programming language, having this here badly detailed is going to make them think wtf?.</p>
<p>This is not relevant to anything, someone can go into RSCProtocolDecoder/Encoder and view how it’s all properly structured through the RSCPacket and Packet classes.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511/2</link>
        <pubDate>Sun, 16 Nov 2008 23:36:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-244511-2</guid>
        <source url="https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511.rss">Chat message text packing/unpacking refactored</source>
      </item>
      <item>
        <title>Chat message text packing/unpacking refactored</title>
        <dc:creator><![CDATA[@Ian Ian]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ian">@Ian</a> wrote:</p>
          <blockquote>
              <p>[code]// Decompiled by Jad v1.5.8f. Copyright 2001 Pavel Kouznetsov.<br>
// Jad home page: <a href="http://www.kpdus.com/jad.html" rel="nofollow noopener">http://www.kpdus.com/jad.html</a><br>
// Decompiler options: packimports(3)</p>
<p>public class TextPackingUtils {</p>
<pre><code>public static String unpackText(byte buffer[], int bufferOffset, int j) {
    try {
        int unpackedOffset = 0;
        int upperNibble = -1;
        for (int i1 = 0; i1 &lt; j; i1++) {
            int nextByte = buffer[bufferOffset++] &amp; 0xff;
            int nextNibble = nextByte &gt;&gt; 4 &amp; 0xf;
            if (upperNibble == -1) {
                if (nextNibble &lt; 13)
                    unpackedText[unpackedOffset++] = validCharacters[nextNibble];
                else
                    upperNibble = nextNibble;
            } else {
                unpackedText[unpackedOffset++] = validCharacters[((upperNibble &lt;&lt; 4) + nextNibble) - 195];
                upperNibble = -1;
            }
            nextNibble = nextByte &amp; 0xf;
            if (upperNibble == -1) {
                if (nextNibble &lt; 13)
                    unpackedText[unpackedOffset++] = validCharacters[nextNibble];
                else
                    upperNibble = nextNibble;
            } else {
                unpackedText[unpackedOffset++] = validCharacters[((upperNibble &lt;&lt; 4) + nextNibble) - 195];
                upperNibble = -1;
            }
        }

        boolean endOfSentence = true;
        for (int i = 0; i &lt; unpackedOffset; i++) {
            char nextChar = unpackedText[i];
            if (i &gt; 4 &amp;&amp; nextChar == '@')
                unpackedText[i] = ' ';
            if (nextChar == '%')
                unpackedText[i] = ' ';
            if (endOfSentence &amp;&amp; nextChar &gt;= 'a' &amp;&amp; nextChar &lt;= 'z') {
                unpackedText[i] += '\uFFE0'; //make capital
                endOfSentence = false;
            }
            if (nextChar == '.' || nextChar == '!' || nextChar == ':')
                endOfSentence = true;
        }

        return new String(unpackedText, 0, unpackedOffset);
    }
    catch (Exception _ex) {
        return ".";
    }
}

public static int packText(String text) {
    if (text.length() &gt; 80)
        text = text.substring(0, 80);
    text = text.toLowerCase();
    int packedTextOffset = 0;
    int upperNibble = -1;
    for (int textOffset = 0; textOffset &lt; text.length(); textOffset++) {
        char nextChar = text.charAt(textOffset);
        int validCharTableIndex = 0;
        for (int validCharPtr = 0; validCharPtr &lt; validCharacters.length; validCharPtr++) {
            if (nextChar != validCharacters[validCharPtr])
                continue;
            validCharTableIndex = validCharPtr;
            break;
        }

        if (validCharTableIndex &gt; 12)
            validCharTableIndex += 195;
        if (upperNibble == -1) {
            if (validCharTableIndex &lt; 13)
                upperNibble = validCharTableIndex;
            else
                packedText[packedTextOffset++] = (byte) validCharTableIndex;
        } else if (validCharTableIndex &lt; 13) { //index fits in a nibble
            packedText[packedTextOffset++] = (byte) ((upperNibble &lt;&lt; 4) + validCharTableIndex);
            upperNibble = -1;
        } else {
            packedText[packedTextOffset++] = (byte) ((upperNibble &lt;&lt; 4) + (validCharTableIndex &gt;&gt; 4));
            upperNibble = validCharTableIndex &amp; 0xf;
        }
    }

    if (upperNibble != -1)
        packedText[packedTextOffset++] = (byte) (upperNibble &lt;&lt; 4);
    return packedTextOffset;
}

public static byte packedText[] = new byte[100];
public static char unpackedText[] = new char[100];
private static char validCharacters[] = {
        ' ', 'e', 't', 'a', 'o', 'i', 'h', 'n', 's', 'r',
        'd', 'l', 'u', 'm', 'w', 'c', 'y', 'f', 'g', 'p',
        'b', 'v', 'k', 'x', 'j', 'q', 'z', '0', '1', '2',
        '3', '4', '5', '6', '7', '8', '9', ' ', '!', '?',
        '.', ',', ':', ';', '(', ')', '-', '&amp;', '*', '\\',
        '\'', '@', '#', '+', '=', '\243', '$', '%', '"', '[',
        ']'
};
</code></pre>
<p>}<br>
[/code]</p>
<p>dunno, basically converts the index of the character (if its valid) inside the valid character table, if its under 13 (i.e. can fit in 4 bits; a nibble), it writes the index as a nibble. if it CANNOT be expressed in 4 bits, it writes the upper nibble of the index along with the lower nibble of the last index… im sure people have already figured it out, but its just that most people use premade bases by reines, exemplar, sean, etc. (RSCD) but dont have any clue as to how stuff works on (relatively) ‘low’ level</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511/1</link>
        <pubDate>Sun, 16 Nov 2008 23:03:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-244511-1</guid>
        <source url="https://forum.moparisthebest.com/t/chat-message-text-packing-unpacking-refactored/244511.rss">Chat message text packing/unpacking refactored</source>
      </item>
  </channel>
</rss>
