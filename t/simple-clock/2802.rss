<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Simple clock</title>
    <link>https://forum.moparisthebest.com/t/simple-clock/2802</link>
    <description>This really isn&#39;t a how-to, but here is the source to make a little applet with a clock in it.  I commented every line, but it&#39;d be better if you had some knowledge in applets, threading in java, and a jew other things.

[code]import java.util.*; 
import java.awt.*;   
import java.applet.*;

//THis bit after this is for the applet size, ect.. So you can run the applet by itself.
/*
 &lt;object code=&quot;Clock&quot; width=200 height=50&gt;
 &lt;/object&gt;
*/

public class Clock extends Applet implements Runnable { //Extend applet and runnabe(we&#39;re using threads)
  String msg;
  Thread t;         //Define variables
  Calendar clock;
  
  boolean stopFlag;
  
  public void init() { //Initializes the variables.
    t = null; //The t thread is off.
    msg = &quot;&quot;; //Default message to begin with.
  }
  
  public void start() {
    t = new Thread(this); // Defines t as a new thread
    stopFlag = false; //stopFlag is set to false to keep the clock going.
    t.start(); //Starts the t thread
  }
  
  public void run() {
    for( ; ; ) { // for(ever)
      try {
        showStatus(&quot;Simple clock by Pwnd.&quot;); //Put this string into the status bar of the gui
        clock = Calendar.getInstance(); //Set the clock variable
        msg = &quot;Current time is &quot; + Integer.toString(clock.get(Calendar.HOUR)); //Get the hour as an integer
        msg = msg + &quot;:&quot; + 
            Integer.toString(clock.get(Calendar.MINUTE)); //Get the minute as an integer and seperate it by a colon
        
        if((Integer)clock.get(Calendar.SECOND) &lt; (Integer) 10) //if the seconds is below 10
          msg = msg + &quot;:0&quot; +
              Integer.toString(clock.get(Calendar.SECOND)); // add a 0 before the second
        else
          msg = msg + &quot;:&quot; +
              Integer.toString(clock.get(Calendar.SECOND)); //don&#39;t add the 0
        
        repaint(); //repaint the applet
        Thread.sleep(1000); //Wait for a second before going on
        if(stopFlag) //if true
          break;    //come out of the for loop
      } catch (InterruptedException ie) {}
    }
  }
  
  public void stop() { //Stops the program and puts it into a &quot;pause&quot; state
    stopFlag = true; //Stop flag is true
    t = null; //t thread is paused/stopped
  }
  
  public void paint(Graphics g) {
    g.drawString(msg, 30, 30); //Draw to the applet
  }
}[/code]

To run this, make a .bat with the following in it:
[code]@echo off
appletviewer Clock.java
pause[/code]
You use the same thing you use to compile every other .java file.
[code]
@echo off
javac *.java
pause[/code]
Hope you learn something.</description>
    
    <lastBuildDate>Sun, 14 May 2006 06:25:08 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/simple-clock/2802.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Simple clock</title>
        <dc:creator><![CDATA[@Pwnd Pwnd]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pwnd">@Pwnd</a> wrote:</p>
          <blockquote>
              <p>This really isn’t a how-to, but here is the source to make a little applet with a clock in it.  I commented every line, but it’d be better if you had some knowledge in applets, threading in java, and a jew other things.</p>
<p>[code]import java.util.<em>;<br>
import java.awt.</em>;<br>
import java.applet.*;</p>
<p>//THis bit after this is for the applet size, ect… So you can run the applet by itself.<br>
/*<br>
<br>
<br>
*/</p>
<p>public class Clock extends Applet implements Runnable { //Extend applet and runnabe(we’re using threads)<br>
String msg;<br>
Thread t;         //Define variables<br>
Calendar clock;</p>
<p>boolean stopFlag;</p>
<p>public void init() { //Initializes the variables.<br>
t = null; //The t thread is off.<br>
msg = “”; //Default message to begin with.<br>
}</p>
<p>public void start() {<br>
t = new Thread(this); // Defines t as a new thread<br>
stopFlag = false; //stopFlag is set to false to keep the clock going.<br>
t.start(); //Starts the t thread<br>
}</p>
<p>public void run() {<br>
for( ; ; ) { // for(ever)<br>
try {<br>
showStatus(“Simple clock by Pwnd.”); //Put this string into the status bar of the gui<br>
clock = Calendar.getInstance(); //Set the clock variable<br>
msg = "Current time is " + Integer.toString(clock.get(Calendar.HOUR)); //Get the hour as an integer<br>
msg = msg + “:” +<br>
Integer.toString(clock.get(Calendar.MINUTE)); //Get the minute as an integer and seperate it by a colon</p>
<pre><code>    if((Integer)clock.get(Calendar.SECOND) &lt; (Integer) 10) //if the seconds is below 10
      msg = msg + ":0" +
          Integer.toString(clock.get(Calendar.SECOND)); // add a 0 before the second
    else
      msg = msg + ":" +
          Integer.toString(clock.get(Calendar.SECOND)); //don't add the 0
    
    repaint(); //repaint the applet
    Thread.sleep(1000); //Wait for a second before going on
    if(stopFlag) //if true
      break;    //come out of the for loop
  } catch (InterruptedException ie) {}
}
</code></pre>
<p>}</p>
<p>public void stop() { //Stops the program and puts it into a “pause” state<br>
stopFlag = true; //Stop flag is true<br>
t = null; //t thread is paused/stopped<br>
}</p>
<p>public void paint(Graphics g) {<br>
g.drawString(msg, 30, 30); //Draw to the applet<br>
}<br>
}[/code]</p>
<p>To run this, make a .bat with the following in it:</p>
<p><code>@echo off
appletviewer Clock.java
pause</code><br>
You use the same thing you use to compile every other .java file.</p>
<p><code>
@echo off
javac *.java
pause</code><br>
Hope you learn something.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/simple-clock/2802/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/simple-clock/2802/1</link>
        <pubDate>Sun, 14 May 2006 06:25:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-2802-1</guid>
        <source url="https://forum.moparisthebest.com/t/simple-clock/2802.rss">Simple clock</source>
      </item>
  </channel>
</rss>
