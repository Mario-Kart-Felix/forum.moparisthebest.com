<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Pouches</title>
    <link>https://forum.moparisthebest.com/t/pouches/469682</link>
    <description>So I started working on pouches now that my RC works. However, I get a nullpointer. Also, it starts after clicking it twice.

Runecrafting.java
[code=java]
package server.content.skill.runecrafting;

import server.content.skill.Skill;
import server.model.players.Client;

/**
 * Handles Runecrafting.
 * 
 * @author Arham 4
 * 
 */
public class Runecrafting extends Skill {

	/**
	 * Allows us to call Client through c.
	 */
	Client c;

	/**
	 * Constructor of the class.
	 * 
	 * @param c
	 *            Allows us to call class Client
	 */
	public Runecrafting(Client c) {
		this.c = c;
	}
	
	/**
	 * All the constructors here
	 */
	private RunecraftingData rd = new RunecraftingData();
	public RunecraftingData getData() {
		return rd;
	}
	
	private CraftRunes cr = new CraftRunes(c);
	public CraftRunes getCraftingRunes() {
		return cr;
	}
	
	private Pouches p = new Pouches(c);

	public int set;

	@Override
	public void handleSkill(String section) {
		if (section == &quot;craftRunes&quot;)
			cr.checkAlters(set);
		if (section == &quot;pouch&quot;)
			p.startStoring(set);
	}

}
[/code]

RunecraftingData.java
[code=java]
package server.content.skill.runecrafting;

/**
 * Handles all the data of the class.
 * 
 * @author Arham 4
 * 
 */
public class RunecraftingData {

	/**
	 * What are the essences that are allowed in runecrafting? Answer: Rune
	 * Essence and Pure Essence. These are the item ID codes of them.
	 */
	public int[] viableEssence = { 1436, 7936 };
	

    /**
     * What are the alter IDs for runecrafting?
     */
	public int[] alterId = { 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2487,
			2486, 2485, 2488, 3624 };
	
    /**
     * So what level should you be to produce only one rune? What&#39;s the EXP
     * given afterwards? What&#39;s the ID of the rune produced? All these questions
     * are answered in this array.
     */
    public int[][] singularEssence = {
    /*
     * Layout for adding more essence: { LEVELREQUIRED, EXPERIENCEGIVEN,
     * RUNEPRODUCED }, // RUNENAME
     */
    { 1, 5, 556 }, // Air
                    { 2, 5, 558 }, // Mind
                    { 5, 6, 555 }, // Water
                    { 9, 6, 557 }, // Earth
                    { 14, 7, 554 }, // Fire
                    { 20, 7, 559 }, // Body
                    { 27, 8, 564 }, // Cosmic
                    { 35, 8, 562 }, // Chaos
                    { 44, 9, 561 }, // Nature
                    { 54, 9, 563 }, // Law
                    { 65, 10, 560 }, // Death
                    { 75, 11, 565 }, // Blood
    };

    /**
     * Well, what this is defining the same data as above but also defines for
     * multiple essence support.
     */
    public int[][] multipleEssence = {
    /*
     * Layout for adding more essence: { LEVELREQUIRED, EXPERIENCEGIVEN,
     * RUNEPRODUCED, RUNEAMOUNT }, // RUNENAME - AMOUNTGIVEN Please make sure
     * it&#39;s in the right * RUNENAME * category.
     */
    /* Air */
    { 11, 10, 556, 2 }, // Air - 2
                    { 22, 20, 556, 3 }, // Air - 3
                    { 33, 30, 556, 4 }, // Air - 4
                    { 44, 40, 556, 5 }, // Air - 5
                    { 55, 50, 556, 6 }, // Air - 6
                    { 66, 60, 556, 7 }, // Air - 7
                    { 77, 70, 556, 8 }, // Air - 8
                    { 88, 80, 556, 9 }, // Air - 9
                    { 99, 90, 556, 10 }, // Air - 10
                    /* Mind */
                    { 14, 10, 558, 2 }, // Mind - 2
                    { 28, 20, 558, 3 }, // Mind - 3
                    { 42, 30, 558, 4 }, // Mind - 4
                    { 56, 40, 558, 5 }, // Mind - 5
                    { 70, 50, 558, 6 }, // Mind - 6
                    { 84, 60, 558, 7 }, // Mind - 7
                    /* Water */
                    { 19, 12, 558, 2 }, // Water - 2
                    { 38, 18, 558, 3 }, // Water - 3
                    { 57, 24, 558, 4 }, // Water - 4
                    { 77, 30, 558, 5 }, // Water - 5
                    { 95, 36, 558, 6 }, // Water - 6
                    /* Earth */
                    { 26, 12, 557, 2 }, // Earth - 2
                    { 52, 18, 557, 3 }, // Earth - 3
                    { 82, 24, 557, 4 }, // Earth - 4
                    /* Fire */
                    { 35, 14, 554, 2 }, // Fire - 2
                    { 74, 21, 554, 3 }, // Fire - 3
                    /* Body */
                    { 46, 14, 559, 2 }, // Body - 2
                    { 92, 21, 559, 2 }, // Body - 3
                    /* Cosmic */
                    { 59, 16, 564, 2 }, // Cosmic - 2
                    /* Chaos */
                    { 74, 16, 562, 2 }, // Chaos - 2
                    /* Nature */
                    { 91, 18, 561, 2 }, // Nature - 2
    };

    /**
     * What&#39;s the level required to store in a pouch?
     * How many essence can be stored in a pouch?
     * What&#39;s the pouch&#39;s item ID?
     * Pouch size?
     * All of these are answered in this array.
     */
    public int[][] pouchData = {
    		/*
    		 * Layout to add more:
    		 * { LEVELREQUIRED, ESSENCESTORED, POUCHID }, // POUCHSIZE
    		 */
    		{ 1, 3, 5509 }, // Small
    		{ 25, 6, 5510 }, // Medium
    		{ 50, 9, 5512 }, // Large
    		{ 75, 12, 5514 }, // Giant
    };
}
[/code]

Pouches.java
[code=java]
package server.content.skill.runecrafting;

import server.content.skill.SkillConstants;
import server.model.players.Client;

/**
 * Manages items for runecrafting called Pouches.
 * 
 * @author Arham 4
 * 
 */
public class Pouches extends RunecraftingData {

	/**
	 * Stores the rune essence deleted so we can add them again if the player
	 * clicks the pouch again.
	 */
	private int storedRune;

	/**
	 * Stores the pure essence deleted so we can add them again if the player
	 * clicks the pouch again.
	 */
	private int storedPure;

	/**
	 * Total stored essence in the pouch.
	 */
	private int totalStored;

	/**
	 * Starts the storing of the rune/pure essence.
	 * 
	 * @param c
	 *            Allows us to call Client
	 * @param itemId
	 *            Detector for the item ID
	 */
	public void startStoring(Client c, int itemId) {
		switch (itemId) {
		case 5509:
			storeSmall(c);
			break;
		case 5510:
			storeMedium(c);
			break;
		case 5512:
			storeLarge(c);
			break;
		case 5514:
			storeGiant(c);
			break;
		}
	}

	/**
	 * Starts withdrawing the rune/pure essence.
	 * 
	 * @param c
	 *            Allows us to call Client
	 * @param itemId
	 *            Detector for the item ID
	 */
	public void startWithdraw(Client c, int itemId) {
		switch (itemId) {
		case 5509:
			withdrawSmall(c);
			break;
		case 5510:
			withdrawMedium(c);
			break;
		case 5512:
			withdrawLarge(c);
			break;
		case 5514:
			withdrawGiant(c);
			break;
		}
	}

	/**
	 * Start storing a giant pouch
	 */
	private void storeGiant(Client c) {
		store(c, 3);
	}

	private void storeLarge(Client c) {
		store(c, 2);
	}

	private void storeMedium(Client c) {
		store(c, 3);
	}

	private void storeSmall(Client c) {
		store(c, 4);
	}

	/**
	 * Start withdrawing rune/pure essence.
	 */
	private void withdrawGiant(Client c) {
		withdraw(c, 3);
	}

	private void withdrawLarge(Client c) {
		withdraw(c, 2);
	}

	private void withdrawMedium(Client c) {
		withdraw(c, 1);
	}

	private void withdrawSmall(Client c) {
		withdraw(c, 0);
	}

	/**
	 * Does all the actions for storing.
	 * 
	 * @param c
	 *            Allows us to call Client
	 * @param section
	 *            What section in the array is it?
	 */
	private void store(Client c, int section) {
		if (c.playerLevel[SkillConstants.RUNECRAFTING] &gt;= pouchData[section][0]) {
			while (c.getItems().playerHasItem(1436)) {
				if (totalStored &lt; pouchData[section][1]) {
					c.getItems().deleteItem(1436, 1);
					storedRune++;
					totalStored++;
				} else
					c.sendMessage(&quot;Your pouch is full!&quot;);
			}
			while (c.getItems().playerHasItem(7936)) {
				if (totalStored &lt; pouchData[section][1]) {
					c.getItems().deleteItem(7936, 1);
					storedPure++;
					totalStored++;
				} else
					c.sendMessage(&quot;Your pouch is full!&quot;);
			}
		} else
			c.sendMessage(&quot;You need a runecrafting level of &quot;
					+ pouchData[section][0] + &quot; to fill this pouch.&quot;);
	}

	/**
	 * Does all the actions for withdrawing.
	 * 
	 * @param c
	 *            Allows us to call Client
	 * @param section
	 *            What section in the array is it?
	 */
	private void withdraw(Client c, int section) {
		if (c.playerLevel[SkillConstants.RUNECRAFTING] &gt;= pouchData[section][0]) {
			while (totalStored &gt; 0) {
				if (c.getItems().freeSlots() &gt; 0) {
					c.getItems().addItem(1436, storedRune);
					storedRune--;
					c.getItems().addItem(7936, storedPure);
					storedPure--;
					totalStored--;
				} else
					c.sendMessage(&quot;Not enough space in your inventory.&quot;);
			}
		} else
			c.sendMessage(&quot;You need a runecrafting level of &quot;
					+ pouchData[section][0] + &quot; to withdraw from this pouch.&quot;);
	}
}
[/code]

ClickItem.java
[code=java]
		for (int i = 0; i &lt; c.getRunecrafting().getData().pouchData.length; i++) {
			if (itemId == c.getRunecrafting().getData().pouchData[i][2]) {
				c.getRunecrafting().handleSkill(&quot;pouch&quot;);
				c.getRunecrafting().set = itemId;
			}
		}
[/code]

Nullpointer Exception:
[code]
[11/23/12 3:06 PM]: java.lang.NullPointerException
[11/23/12 3:06 PM]: 	at server.content.skill.runecrafting.Pouches.store(Pouches.java:119)
[11/23/12 3:06 PM]: 	at server.content.skill.runecrafting.Pouches.storeSmall(Pouches.java:99)
[11/23/12 3:06 PM]: 	at server.content.skill.runecrafting.Pouches.startStoring(Pouches.java:52)
[11/23/12 3:06 PM]: 	at server.content.skill.runecrafting.Runecrafting.handleSkill(Runecrafting.java:51)
[11/23/12 3:06 PM]: 	at server.model.players.packets.ClickItem.processPacket(ClickItem.java:27)
[11/23/12 3:06 PM]: 	at server.model.players.PacketHandler.processPacket(PacketHandler.java:138)
[11/23/12 3:06 PM]: 	at server.model.players.Client.processQueuedPackets(Client.java:699)
[11/23/12 3:06 PM]: 	at server.model.players.PlayerHandler.process(PlayerHandler.java:136)
[11/23/12 3:06 PM]: 	at server.Server$1.execute(Server.java:211)
[11/23/12 3:06 PM]: 	at server.event.Task.tick(Task.java:118)
[11/23/12 3:06 PM]: 	at server.event.TaskScheduler.run(TaskScheduler.java:103)
[11/23/12 3:06 PM]: 	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
[11/23/12 3:06 PM]: 	at java.util.concurrent.FutureTask$Sync.innerRunAndReset(Unknown Source)
[11/23/12 3:06 PM]: 	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
[11/23/12 3:06 PM]: 	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
[11/23/12 3:06 PM]: 	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
[11/23/12 3:06 PM]: 	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
[11/23/12 3:06 PM]: 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
[11/23/12 3:06 PM]: 	at java.lang.Thread.run(Unknown Source)
[/code]</description>
    
    <lastBuildDate>Sun, 25 Nov 2012 02:51:10 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/pouches/469682.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Pouches</title>
        <dc:creator><![CDATA[@arham_4 arham 4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/arham_4">@arham_4</a> wrote:</p>
          <blockquote>
              <p>Don’t worry. I was so stupid, I said 4 when there wasn’t any slot 5. I meant to do 0. Before:</p>
<pre><code class="lang-auto">        private void storeSmall(Client c) {
                store(c, 4);
        }</code></pre>
<p>After:</p>
<pre><code class="lang-auto">        private void storeSmall(Client c) {
                store(c, 0);
        }</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pouches/469682/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pouches/469682/9</link>
        <pubDate>Sun, 25 Nov 2012 02:51:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-469682-9</guid>
        <source url="https://forum.moparisthebest.com/t/pouches/469682.rss">Pouches</source>
      </item>
      <item>
        <title>Pouches</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>Add this</p>
<pre><code class="lang-auto">if (c == null) {
    System.out.println("client");
}
else if (pouchData == null) {
    System.out.println("pouchData");
}</code></pre>
<p>right under</p>
<pre><code class="lang-auto"></code></pre>
<p>Whatever is printed will be what’s null at that point.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pouches/469682/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pouches/469682/8</link>
        <pubDate>Sat, 24 Nov 2012 22:39:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-469682-8</guid>
        <source url="https://forum.moparisthebest.com/t/pouches/469682.rss">Pouches</source>
      </item>
      <item>
        <title>Pouches</title>
        <dc:creator><![CDATA[@arham_4 arham 4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/arham_4">@arham_4</a> wrote:</p>
          <blockquote>
              <p>[quote=“Vain_, post:6, topic:469682”]<code>
                                c.getRunecrafting().handleSkill("pouch");
                                c.getRunecrafting().set = itemId;
</code></p>
<p>‘set’ is being called as a parameter via handleSkill before it’s even initialized as the itemId[/quote]</p>
<p>That still doesnt explain my nullpointer.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pouches/469682/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pouches/469682/7</link>
        <pubDate>Sat, 24 Nov 2012 21:35:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-469682-7</guid>
        <source url="https://forum.moparisthebest.com/t/pouches/469682.rss">Pouches</source>
      </item>
      <item>
        <title>Pouches</title>
        <dc:creator><![CDATA[@Vain1 Vain_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/vain1">@Vain1</a> wrote:</p>
          <blockquote>
              <pre><code class="lang-auto">                                c.getRunecrafting().handleSkill("pouch");
                                c.getRunecrafting().set = itemId;</code></pre>
<p>‘set’ is being called as a parameter via handleSkill before it’s even initialized as the itemId</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pouches/469682/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pouches/469682/6</link>
        <pubDate>Sat, 24 Nov 2012 20:27:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-469682-6</guid>
        <source url="https://forum.moparisthebest.com/t/pouches/469682.rss">Pouches</source>
      </item>
      <item>
        <title>Pouches</title>
        <dc:creator><![CDATA[@RandQm RandQm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/randqm">@RandQm</a> wrote:</p>
          <blockquote>
              <p>Debug and see where it’s coming from?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pouches/469682/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pouches/469682/5</link>
        <pubDate>Sat, 24 Nov 2012 20:16:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-469682-5</guid>
        <source url="https://forum.moparisthebest.com/t/pouches/469682.rss">Pouches</source>
      </item>
      <item>
        <title>Pouches</title>
        <dc:creator><![CDATA[@arham_4 arham 4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/arham_4">@arham_4</a> wrote:</p>
          <blockquote>
              <p>EDIT: Pouch.java</p>
<pre><code class="lang-auto">package server.content.skill.runecrafting;

import server.content.skill.SkillConstants;
import server.model.players.Client;

/**
 * Manages items for runecrafting called Pouches.
 * 
 * @author Arham 4
 * 
 */
public class Pouches extends RunecraftingData {

	/**
	 * Stores the rune essence deleted so we can add them again if the player
	 * clicks the pouch again.
	 */
	private int storedRune;

	/**
	 * Stores the pure essence deleted so we can add them again if the player
	 * clicks the pouch again.
	 */
	private int storedPure;

	/**
	 * Total stored essence in the pouch.
	 */
	private int totalStored;

	/**
	 * Starts the storing of the rune/pure essence.
	 * 
	 * @param c
	 *            Allows us to call Client
	 * @param itemId
	 *            Detector for the item ID
	 */
	public void startStoring(Client c, int itemId) {
		switch (itemId) {
		case 5509:
			storeSmall(c);
			break;
		case 5510:
			storeMedium(c);
			break;
		case 5512:
			storeLarge(c);
			break;
		case 5514:
			storeGiant(c);
			break;
		}
	}

	/**
	 * Starts withdrawing the rune/pure essence.
	 * 
	 * @param c
	 *            Allows us to call Client
	 * @param itemId
	 *            Detector for the item ID
	 */
	public void startWithdraw(Client c, int itemId) {
		switch (itemId) {
		case 5509:
			withdrawSmall(c);
			break;
		case 5510:
			withdrawMedium(c);
			break;
		case 5512:
			withdrawLarge(c);
			break;
		case 5514:
			withdrawGiant(c);
			break;
		}
	}

	/**
	 * Start storing a giant pouch
	 */
	private void storeGiant(Client c) {
		store(c, 3);
	}

	private void storeLarge(Client c) {
		store(c, 2);
	}

	private void storeMedium(Client c) {
		store(c, 3);
	}

	private void storeSmall(Client c) {
		store(c, 4);
	}

	/**
	 * Start withdrawing rune/pure essence.
	 */
	private void withdrawGiant(Client c) {
		withdraw(c, 3);
	}

	private void withdrawLarge(Client c) {
		withdraw(c, 2);
	}

	private void withdrawMedium(Client c) {
		withdraw(c, 1);
	}

	private void withdrawSmall(Client c) {
		withdraw(c, 0);
	}

	/**
	 * Does all the actions for storing.
	 * 
	 * @param c
	 *            Allows us to call Client
	 * @param section
	 *            What section in the array is it?
	 */
	private void store(Client c, int section) {
		if (c.playerLevel[SkillConstants.RUNECRAFTING] &gt;= pouchData[section][0]) {
			while (c.getItems().playerHasItem(1436)) {
				if (totalStored &lt; pouchData[section][1]) {
					c.getItems().deleteItem(1436, 1);
					storedRune++;
					totalStored++;
				} else
					c.sendMessage("Your pouch is full!");
			}
			while (c.getItems().playerHasItem(7936)) {
				if (totalStored &lt; pouchData[section][1]) {
					c.getItems().deleteItem(7936, 1);
					storedPure++;
					totalStored++;
				} else
					c.sendMessage("Your pouch is full!");
			}
		} else
			c.sendMessage("You need a runecrafting level of "
					+ pouchData[section][0] + " to fill this pouch.");
	}

	/**
	 * Does all the actions for withdrawing.
	 * 
	 * @param c
	 *            Allows us to call Client
	 * @param section
	 *            What section in the array is it?
	 */
	private void withdraw(Client c, int section) {
		if (c.playerLevel[SkillConstants.RUNECRAFTING] &gt;= pouchData[section][0]) {
			while (totalStored &gt; 0) {
				if (c.getItems().freeSlots() &gt; 0) {
					c.getItems().addItem(1436, storedRune);
					storedRune--;
					c.getItems().addItem(7936, storedPure);
					storedPure--;
					totalStored--;
				} else
					c.sendMessage("Not enough space in your inventory.");
			}
		} else
			c.sendMessage("You need a runecrafting level of "
					+ pouchData[section][0] + " to withdraw from this pouch.");
	}
}</code></pre>
<p>Still get the nullpointer in the same place. Nullpointer:</p>
<pre><code class="lang-auto">if (c.playerLevel[SkillConstants.RUNECRAFTING] &gt;= pouchData[section][0]) {</code></pre>
<p>As you guys said, it’s probably due to c., however, I just make it in the params and it still doesnt work :/.</p>
<p>Thanks.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pouches/469682/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pouches/469682/4</link>
        <pubDate>Sat, 24 Nov 2012 17:18:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-469682-4</guid>
        <source url="https://forum.moparisthebest.com/t/pouches/469682.rss">Pouches</source>
      </item>
      <item>
        <title>Pouches</title>
        <dc:creator><![CDATA[@asshole_rule asshole_rule]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/asshole_rule">@asshole_rule</a> wrote:</p>
          <blockquote>
              <p>Don’t you have to make a Pouches constructor in the client class then? I think i’ve had this happen before.</p>
<pre><code class="lang-auto"></code></pre>
<p>ect, ect</p>
<p>Or you could eliminate that in the first place, and just use</p>
<p><code>method(Client c, int parameter)
{
//lol
}</code></p>
<p>Which would be the road i take.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pouches/469682/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pouches/469682/3</link>
        <pubDate>Sat, 24 Nov 2012 15:14:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-469682-3</guid>
        <source url="https://forum.moparisthebest.com/t/pouches/469682.rss">Pouches</source>
      </item>
      <item>
        <title>Pouches</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>It looks like the null is the client in Pouches.java</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pouches/469682/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pouches/469682/2</link>
        <pubDate>Sat, 24 Nov 2012 10:01:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-469682-2</guid>
        <source url="https://forum.moparisthebest.com/t/pouches/469682.rss">Pouches</source>
      </item>
      <item>
        <title>Pouches</title>
        <dc:creator><![CDATA[@arham_4 arham 4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/arham_4">@arham_4</a> wrote:</p>
          <blockquote>
              <p>So I started working on pouches now that my RC works. However, I get a nullpointer. Also, it starts after clicking it twice.</p>
<p>Runecrafting.java</p>
<pre><code class="lang-auto">package server.content.skill.runecrafting;

import server.content.skill.Skill;
import server.model.players.Client;

/**
 * Handles Runecrafting.
 * 
 * @author Arham 4
 * 
 */
public class Runecrafting extends Skill {

	/**
	 * Allows us to call Client through c.
	 */
	Client c;

	/**
	 * Constructor of the class.
	 * 
	 * @param c
	 *            Allows us to call class Client
	 */
	public Runecrafting(Client c) {
		this.c = c;
	}
	
	/**
	 * All the constructors here
	 */
	private RunecraftingData rd = new RunecraftingData();
	public RunecraftingData getData() {
		return rd;
	}
	
	private CraftRunes cr = new CraftRunes(c);
	public CraftRunes getCraftingRunes() {
		return cr;
	}
	
	private Pouches p = new Pouches(c);

	public int set;

	@Override
	public void handleSkill(String section) {
		if (section == "craftRunes")
			cr.checkAlters(set);
		if (section == "pouch")
			p.startStoring(set);
	}

}</code></pre>
<p>RunecraftingData.java</p>
<pre><code class="lang-auto">package server.content.skill.runecrafting;

/**
 * Handles all the data of the class.
 * 
 * @author Arham 4
 * 
 */
public class RunecraftingData {

	/**
	 * What are the essences that are allowed in runecrafting? Answer: Rune
	 * Essence and Pure Essence. These are the item ID codes of them.
	 */
	public int[] viableEssence = { 1436, 7936 };
	

    /**
     * What are the alter IDs for runecrafting?
     */
	public int[] alterId = { 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2487,
			2486, 2485, 2488, 3624 };
	
    /**
     * So what level should you be to produce only one rune? What's the EXP
     * given afterwards? What's the ID of the rune produced? All these questions
     * are answered in this array.
     */
    public int[][] singularEssence = {
    /*
     * Layout for adding more essence: { LEVELREQUIRED, EXPERIENCEGIVEN,
     * RUNEPRODUCED }, // RUNENAME
     */
    { 1, 5, 556 }, // Air
                    { 2, 5, 558 }, // Mind
                    { 5, 6, 555 }, // Water
                    { 9, 6, 557 }, // Earth
                    { 14, 7, 554 }, // Fire
                    { 20, 7, 559 }, // Body
                    { 27, 8, 564 }, // Cosmic
                    { 35, 8, 562 }, // Chaos
                    { 44, 9, 561 }, // Nature
                    { 54, 9, 563 }, // Law
                    { 65, 10, 560 }, // Death
                    { 75, 11, 565 }, // Blood
    };

    /**
     * Well, what this is defining the same data as above but also defines for
     * multiple essence support.
     */
    public int[][] multipleEssence = {
    /*
     * Layout for adding more essence: { LEVELREQUIRED, EXPERIENCEGIVEN,
     * RUNEPRODUCED, RUNEAMOUNT }, // RUNENAME - AMOUNTGIVEN Please make sure
     * it's in the right * RUNENAME * category.
     */
    /* Air */
    { 11, 10, 556, 2 }, // Air - 2
                    { 22, 20, 556, 3 }, // Air - 3
                    { 33, 30, 556, 4 }, // Air - 4
                    { 44, 40, 556, 5 }, // Air - 5
                    { 55, 50, 556, 6 }, // Air - 6
                    { 66, 60, 556, 7 }, // Air - 7
                    { 77, 70, 556, 8 }, // Air - 8
                    { 88, 80, 556, 9 }, // Air - 9
                    { 99, 90, 556, 10 }, // Air - 10
                    /* Mind */
                    { 14, 10, 558, 2 }, // Mind - 2
                    { 28, 20, 558, 3 }, // Mind - 3
                    { 42, 30, 558, 4 }, // Mind - 4
                    { 56, 40, 558, 5 }, // Mind - 5
                    { 70, 50, 558, 6 }, // Mind - 6
                    { 84, 60, 558, 7 }, // Mind - 7
                    /* Water */
                    { 19, 12, 558, 2 }, // Water - 2
                    { 38, 18, 558, 3 }, // Water - 3
                    { 57, 24, 558, 4 }, // Water - 4
                    { 77, 30, 558, 5 }, // Water - 5
                    { 95, 36, 558, 6 }, // Water - 6
                    /* Earth */
                    { 26, 12, 557, 2 }, // Earth - 2
                    { 52, 18, 557, 3 }, // Earth - 3
                    { 82, 24, 557, 4 }, // Earth - 4
                    /* Fire */
                    { 35, 14, 554, 2 }, // Fire - 2
                    { 74, 21, 554, 3 }, // Fire - 3
                    /* Body */
                    { 46, 14, 559, 2 }, // Body - 2
                    { 92, 21, 559, 2 }, // Body - 3
                    /* Cosmic */
                    { 59, 16, 564, 2 }, // Cosmic - 2
                    /* Chaos */
                    { 74, 16, 562, 2 }, // Chaos - 2
                    /* Nature */
                    { 91, 18, 561, 2 }, // Nature - 2
    };

    /**
     * What's the level required to store in a pouch?
     * How many essence can be stored in a pouch?
     * What's the pouch's item ID?
     * Pouch size?
     * All of these are answered in this array.
     */
    public int[][] pouchData = {
    		/*
    		 * Layout to add more:
    		 * { LEVELREQUIRED, ESSENCESTORED, POUCHID }, // POUCHSIZE
    		 */
    		{ 1, 3, 5509 }, // Small
    		{ 25, 6, 5510 }, // Medium
    		{ 50, 9, 5512 }, // Large
    		{ 75, 12, 5514 }, // Giant
    };
}</code></pre>
<p>Pouches.java</p>
<pre><code class="lang-auto">package server.content.skill.runecrafting;

import server.content.skill.SkillConstants;
import server.model.players.Client;

/**
 * Manages items for runecrafting called Pouches.
 * 
 * @author Arham 4
 * 
 */
public class Pouches extends RunecraftingData {

	/**
	 * Stores the rune essence deleted so we can add them again if the player
	 * clicks the pouch again.
	 */
	private int storedRune;

	/**
	 * Stores the pure essence deleted so we can add them again if the player
	 * clicks the pouch again.
	 */
	private int storedPure;

	/**
	 * Total stored essence in the pouch.
	 */
	private int totalStored;

	/**
	 * Starts the storing of the rune/pure essence.
	 * 
	 * @param c
	 *            Allows us to call Client
	 * @param itemId
	 *            Detector for the item ID
	 */
	public void startStoring(Client c, int itemId) {
		switch (itemId) {
		case 5509:
			storeSmall(c);
			break;
		case 5510:
			storeMedium(c);
			break;
		case 5512:
			storeLarge(c);
			break;
		case 5514:
			storeGiant(c);
			break;
		}
	}

	/**
	 * Starts withdrawing the rune/pure essence.
	 * 
	 * @param c
	 *            Allows us to call Client
	 * @param itemId
	 *            Detector for the item ID
	 */
	public void startWithdraw(Client c, int itemId) {
		switch (itemId) {
		case 5509:
			withdrawSmall(c);
			break;
		case 5510:
			withdrawMedium(c);
			break;
		case 5512:
			withdrawLarge(c);
			break;
		case 5514:
			withdrawGiant(c);
			break;
		}
	}

	/**
	 * Start storing a giant pouch
	 */
	private void storeGiant(Client c) {
		store(c, 3);
	}

	private void storeLarge(Client c) {
		store(c, 2);
	}

	private void storeMedium(Client c) {
		store(c, 3);
	}

	private void storeSmall(Client c) {
		store(c, 4);
	}

	/**
	 * Start withdrawing rune/pure essence.
	 */
	private void withdrawGiant(Client c) {
		withdraw(c, 3);
	}

	private void withdrawLarge(Client c) {
		withdraw(c, 2);
	}

	private void withdrawMedium(Client c) {
		withdraw(c, 1);
	}

	private void withdrawSmall(Client c) {
		withdraw(c, 0);
	}

	/**
	 * Does all the actions for storing.
	 * 
	 * @param c
	 *            Allows us to call Client
	 * @param section
	 *            What section in the array is it?
	 */
	private void store(Client c, int section) {
		if (c.playerLevel[SkillConstants.RUNECRAFTING] &gt;= pouchData[section][0]) {
			while (c.getItems().playerHasItem(1436)) {
				if (totalStored &lt; pouchData[section][1]) {
					c.getItems().deleteItem(1436, 1);
					storedRune++;
					totalStored++;
				} else
					c.sendMessage("Your pouch is full!");
			}
			while (c.getItems().playerHasItem(7936)) {
				if (totalStored &lt; pouchData[section][1]) {
					c.getItems().deleteItem(7936, 1);
					storedPure++;
					totalStored++;
				} else
					c.sendMessage("Your pouch is full!");
			}
		} else
			c.sendMessage("You need a runecrafting level of "
					+ pouchData[section][0] + " to fill this pouch.");
	}

	/**
	 * Does all the actions for withdrawing.
	 * 
	 * @param c
	 *            Allows us to call Client
	 * @param section
	 *            What section in the array is it?
	 */
	private void withdraw(Client c, int section) {
		if (c.playerLevel[SkillConstants.RUNECRAFTING] &gt;= pouchData[section][0]) {
			while (totalStored &gt; 0) {
				if (c.getItems().freeSlots() &gt; 0) {
					c.getItems().addItem(1436, storedRune);
					storedRune--;
					c.getItems().addItem(7936, storedPure);
					storedPure--;
					totalStored--;
				} else
					c.sendMessage("Not enough space in your inventory.");
			}
		} else
			c.sendMessage("You need a runecrafting level of "
					+ pouchData[section][0] + " to withdraw from this pouch.");
	}
}</code></pre>
<p>ClickItem.java</p>
<pre><code class="lang-auto">		for (int i = 0; i &lt; c.getRunecrafting().getData().pouchData.length; i++) {
			if (itemId == c.getRunecrafting().getData().pouchData[i][2]) {
				c.getRunecrafting().handleSkill("pouch");
				c.getRunecrafting().set = itemId;
			}
		}</code></pre>
<p>Nullpointer Exception:</p>
<pre><code class="lang-auto">[11/23/12 3:06 PM]: java.lang.NullPointerException
[11/23/12 3:06 PM]: 	at server.content.skill.runecrafting.Pouches.store(Pouches.java:119)
[11/23/12 3:06 PM]: 	at server.content.skill.runecrafting.Pouches.storeSmall(Pouches.java:99)
[11/23/12 3:06 PM]: 	at server.content.skill.runecrafting.Pouches.startStoring(Pouches.java:52)
[11/23/12 3:06 PM]: 	at server.content.skill.runecrafting.Runecrafting.handleSkill(Runecrafting.java:51)
[11/23/12 3:06 PM]: 	at server.model.players.packets.ClickItem.processPacket(ClickItem.java:27)
[11/23/12 3:06 PM]: 	at server.model.players.PacketHandler.processPacket(PacketHandler.java:138)
[11/23/12 3:06 PM]: 	at server.model.players.Client.processQueuedPackets(Client.java:699)
[11/23/12 3:06 PM]: 	at server.model.players.PlayerHandler.process(PlayerHandler.java:136)
[11/23/12 3:06 PM]: 	at server.Server$1.execute(Server.java:211)
[11/23/12 3:06 PM]: 	at server.event.Task.tick(Task.java:118)
[11/23/12 3:06 PM]: 	at server.event.TaskScheduler.run(TaskScheduler.java:103)
[11/23/12 3:06 PM]: 	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
[11/23/12 3:06 PM]: 	at java.util.concurrent.FutureTask$Sync.innerRunAndReset(Unknown Source)
[11/23/12 3:06 PM]: 	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
[11/23/12 3:06 PM]: 	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
[11/23/12 3:06 PM]: 	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
[11/23/12 3:06 PM]: 	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
[11/23/12 3:06 PM]: 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
[11/23/12 3:06 PM]: 	at java.lang.Thread.run(Unknown Source)</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pouches/469682/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pouches/469682/1</link>
        <pubDate>Fri, 23 Nov 2012 22:34:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-469682-1</guid>
        <source url="https://forum.moparisthebest.com/t/pouches/469682.rss">Pouches</source>
      </item>
  </channel>
</rss>
