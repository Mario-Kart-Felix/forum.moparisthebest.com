<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Hacky Swing MVC</title>
    <link>https://forum.moparisthebest.com/t/hacky-swing-mvc/553166</link>
    <description>Hey, I&#39;m just messing about with swing and was wondering if what I&#39;m doing is considering &quot;hacky&quot;? 

[spoiler][code=java]package view;
import javax.swing.JPanel;

import controller.Controller;

public abstract class View {
	private JPanel panel;
	protected Controller controller;
	
	public View() {
		panel = new JPanel();
	}
	
	public void setController(Controller c) {
		this.controller = c;
	}
	
	public Controller getController() {
		return controller;
	}
	
	public JPanel getPanel() {
		return panel;
	}

	public abstract void init();
	public abstract void render();
}
[/code]

[code=java]package view;

import javax.swing.JFrame;

public class Screen implements Runnable {
	private JFrame frame;
	private View currentView;
	private int tick;
	
	public static class Views {
		public static final LauncherView LAUNCHER = new LauncherView();
	}
	
	public Screen(String name, int height, int width, int tick, boolean resizable) {
		frame = new JFrame(name);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setSize(width, height);
		frame.setLocationRelativeTo(null);
		frame.setResizable(resizable);
		start();
	}
	
	private void start() {
		new Thread(this).start();
	}
	
	public void display(View view) {
		if (currentView != null) {
			frame.remove(currentView.getPanel());
		}
		view.init();
		frame.add(view.getPanel());
		currentView = view;
		setVisible(true);
	}
	
	public void setVisible(boolean b) {
		frame.setVisible(true);
	}
	
	public void setTick(int tick) {
		this.tick = tick;
	}
	
	public int getTick() {
		return tick;
	}

	@Override
	public void run() {
		while (true) {
			
			if (currentView != null) {
				currentView.render();
				currentView.getPanel().repaint();
			}
			
			frame.repaint();
			
			try {
				Thread.sleep(tick);
			} catch (InterruptedException e) {
				Thread.currentThread().interrupt();
				System.err.println(e);
			}
		}
	}
}
[/code][/spoiler]

Just concept code. Should I being updating the view like this or what? In sense it feels nicer then using cardlayout.</description>
    
    <lastBuildDate>Wed, 02 Sep 2015 11:22:55 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/hacky-swing-mvc/553166.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Hacky Swing MVC</title>
        <dc:creator><![CDATA[@my-swagger my-swagger]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/my-swagger">@my-swagger</a> wrote:</p>
          <blockquote>
              <p>Hey, I’m just messing about with swing and was wondering if what I’m doing is considering “hacky”?</p>
<p>[spoiler][code=java]package view;<br>
import javax.swing.JPanel;</p>
<p>import controller.Controller;</p>
<p>public abstract class View {<br>
private JPanel panel;<br>
protected Controller controller;</p>
<pre><code>public View() {
	panel = new JPanel();
}

public void setController(Controller c) {
	this.controller = c;
}

public Controller getController() {
	return controller;
}

public JPanel getPanel() {
	return panel;
}

public abstract void init();
public abstract void render();
</code></pre>
<p>}<br>
[/code]</p>
<p>[code=java]package view;</p>
<p>import javax.swing.JFrame;</p>
<p>public class Screen implements Runnable {<br>
private JFrame frame;<br>
private View currentView;<br>
private int tick;</p>
<pre><code>public static class Views {
	public static final LauncherView LAUNCHER = new LauncherView();
}

public Screen(String name, int height, int width, int tick, boolean resizable) {
	frame = new JFrame(name);
	frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	frame.setSize(width, height);
	frame.setLocationRelativeTo(null);
	frame.setResizable(resizable);
	start();
}

private void start() {
	new Thread(this).start();
}

public void display(View view) {
	if (currentView != null) {
		frame.remove(currentView.getPanel());
	}
	view.init();
	frame.add(view.getPanel());
	currentView = view;
	setVisible(true);
}

public void setVisible(boolean b) {
	frame.setVisible(true);
}

public void setTick(int tick) {
	this.tick = tick;
}

public int getTick() {
	return tick;
}

@Override
public void run() {
	while (true) {
		
		if (currentView != null) {
			currentView.render();
			currentView.getPanel().repaint();
		}
		
		frame.repaint();
		
		try {
			Thread.sleep(tick);
		} catch (InterruptedException e) {
			Thread.currentThread().interrupt();
			System.err.println(e);
		}
	}
}
</code></pre>
<p>}<br>
[/code][/spoiler]</p>
<p>Just concept code. Should I being updating the view like this or what? In sense it feels nicer then using cardlayout.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/hacky-swing-mvc/553166/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/hacky-swing-mvc/553166/1</link>
        <pubDate>Wed, 02 Sep 2015 11:22:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-553166-1</guid>
        <source url="https://forum.moparisthebest.com/t/hacky-swing-mvc/553166.rss">Hacky Swing MVC</source>
      </item>
  </channel>
</rss>
