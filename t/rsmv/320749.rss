<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Rsmv</title>
    <link>https://forum.moparisthebest.com/t/rsmv/320749</link>
    <description>Does someone how to make the Rsmv work properly? because I need it, something is wrong in this code, the link to rs cache? But I&#39;m not sure can someone help?

[code]public class Main {
    private UnPack pack = new UnPack();
    public Main() {
		try{
		}
		catch(Exception e){}
        System.out.println(&quot;Runescape Model Grabber&quot;);
        System.out.println(&quot;Thanks to Silabsoft&quot;);
        System.out.println(&quot;~~~~~~~~~~&quot;);
        findVersion();
        System.out.println(&quot;~~~~~~~~~~&quot;);
        try {
            for(int i = new File(&quot;./Models/&quot;).listFiles().length; i &lt; 9999999; i++){
//		if(i &gt; min-1 &amp;&amp; i &lt; max) {//for grabbing a range of models
//		if(i == ) {//for grabbing 1 model
		if(i &gt; 0) {//grabs all models
                System.out.println(&quot;Sending request for Model: &quot;+i);
                addRequest( 7, i);
                byte b[] =  pack.unpack(download().buffer);
                if(pack.unpacked) {
                    savemodel(i,b);
                    System.out.println(&quot;Model Saved&quot;);
                }else{
                    System.out.println(&quot;Model Grabbing Complete&quot;);
                    break;
                }
		}
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void savemodel(int id, byte[] b){
            try {
            FileOutputStream fileoutputstream = new FileOutputStream(&quot;./Models/&quot;+id+&quot;.dat&quot;);
            fileoutputstream.write(b, 0, b.length);
            fileoutputstream.close();
        } catch(Throwable _ex) {}
}

    public static void main(String[] args) {
        new Main();
    }

    public void findVersion() {
        System.out.println(&quot;Grabbing Cache Version.&quot;);
        while (true) {
            try {
                System.out.print(&quot;Trying: &quot; + version);
                if (connect(address, port, version) == false) {
                    System.out.println(&quot; Rejected.&quot;);
                    version++;
                } else {
                    System.out.println(&quot; Accepted.&quot;);
                    break;
                }
            } catch (Exception _ex) {
                System.out.println(&quot; Rejected.&quot;);
            }
        }
    }

    public boolean connect(String server, int port, int version) throws IOException {
        socket = new Socket(server, port);
        input = socket.getInputStream();
        output = socket.getOutputStream();
        output.write(15);
        output.write(0);
        output.write(0);
        output.write(version &gt;&gt; 8);
        output.write(version);
        output.flush();
        int r = input.read();
        if (r == 0) {
            return true;
        } else {
            close();
            return false;
        }
    }

    public void addRequest(int c, int i) throws IOException {
		output.write(0);
		output.write(c);
		output.write(i &gt;&gt; 8);
		output.write(i);
		output.flush();
	}
    public CacheChunk download() throws IOException {
        CacheChunk chunk = new CacheChunk();
        byte dHead[] = new byte[3];
        byte jHead[] = new byte[5];
        input.read(dHead);
        input.read(jHead);
        chunk.cache = dHead[0];
        chunk.type = jHead[0];
        chunk.index = ((dHead[1] &amp; 0xff) &lt;&lt; 8) + (dHead[2] &amp; 0xff);
        int s = ((jHead[1] &amp; 0xff) &lt;&lt; 24);
        s += ((jHead[2] &amp; 0xff) &lt;&lt; 16);
        s += ((jHead[3] &amp; 0xff) &lt;&lt; 8);
        s += (jHead[4] &amp; 0xff) + 5;
        if (chunk.type == 2 || chunk.type == 1)
            s += 4;
        chunk.buffer = new byte[s];
        System.arraycopy(jHead, 0, chunk.buffer, 0, 5);
        int c = 5;
        int m = 8;
        while (c &lt; s) {
            if (m == 512) {
                m = 1;
                input.read();
            } else {
                chunk.buffer[c] = (byte) input.read();
                c++;
                m++;
            }
        }
        return chunk;
    }

	public void close() {
		try{
			output.close();
			input.close();
			socket.close();
		} catch (Exception _ex) {}
	}
    private int version = 525;
    private static String address = &quot;mn3.runescape.com&quot;;
    private static int port = 43594;

    private Socket socket;
    private InputStream input;
    private OutputStream output;
}[/code]</description>
    
    <lastBuildDate>Sun, 20 Dec 2009 20:48:34 +0000</lastBuildDate>
    <category>Game Development</category>
    <atom:link href="https://forum.moparisthebest.com/t/rsmv/320749.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Rsmv</title>
        <dc:creator><![CDATA[@CoonHunter CoonHunter]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/coonhunter">@CoonHunter</a> wrote:</p>
          <blockquote>
              <p>Yea its the link to cache, might me more though if someone messed that up, so just replace it with this:</p>
<pre><code class="lang-auto">import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.Socket;
import java.io.*;

public class Main {
    private UnPack pack = new UnPack();
    public Main() {
		try{
		}
		catch(Exception e){}
        System.out.println("Runescape Model Grabber");
        System.out.println("Thanks to Silabsoft");
        System.out.println("~~~~~~~~~~");
        findVersion();
        System.out.println("~~~~~~~~~~");
        try {



	    File mf = new File("./Models/");
	    if(!mf.exists()){
		System.out.println("Models folder does not exist, creating it");
		if(mf.mkdir()){
		   System.out.println("Models folder created");
		} else {
		   System.out.println("Error creating Models folder!");
		   return;
		}
	    }
/*			Love from javacisnotrecognized			*/



            for(int i = mf.listFiles().length; i &lt; 9999999; i++){
//		if(i &gt;= 0 &amp;&amp; i &lt;= 1000) {//for grabbing a range of models
//		if(i == 486)  {//for grabbing 1 model
		if(i &gt; 0) {//grabs all models
                System.out.println("Sending request for Model: "+i);
                addRequest( 7, i);
                byte b[] =  pack.unpack(download().buffer);
                if(pack.unpacked) {
                    savemodel(i,b);
                    System.out.println("Model Saved");
                }else{
                    System.out.println("Model Grabbing Complete");
                    break;
                }
		}
            }
        } catch (Exception e) {
            System.out.println(e);
	e.printStackTrace();
        }
    }

    public void savemodel(int id, byte[] b){
            try {
            FileOutputStream fileoutputstream = new FileOutputStream("./Models/"+id+".dat");
            fileoutputstream.write(b, 0, b.length);
            fileoutputstream.close();
        } catch(Throwable _ex) {}
}

    public static void main(String[] args) {
        new Main();
    }

    public void findVersion() {
        System.out.println("Grabbing Cache Version.");
        while (true) {
            try {
                System.out.print("Trying: " + version);
                if (connect(address, port, version) == false) {
                    System.out.println(" Rejected.");
                    version += 1;
                } else {
                    System.out.println(" Accepted.");
                    break;
                }
            } catch (Exception _ex) {
                System.out.println(" Rejected.");
            }
        }
    }

    public boolean connect(String server, int port, int version) throws IOException {
        socket = new Socket(server, port);
        input = socket.getInputStream();
        output = socket.getOutputStream();
        output.write(15);
        output.write(0);
        output.write(0);
        output.write(version &gt;&gt; 8);
        output.write(version);
        output.flush();
        int r = input.read();
        if (r == 0) {
            return true;
        } else {
            close();
            return false;
        }
    }

    public void addRequest(int c, int i) throws IOException {
		output.write(0);
		output.write(c);
		output.write(i &gt;&gt; 8);
		output.write(i);
		output.flush();
	}
    public CacheChunk download() throws IOException {
        CacheChunk chunk = new CacheChunk();
        byte dHead[] = new byte[3];
        byte jHead[] = new byte[5];
        input.read(dHead);
        input.read(jHead);
        chunk.cache = dHead[0];
        chunk.type = jHead[0];
        chunk.index = ((dHead[1] &amp; 0xff) &lt;&lt; 8) + (dHead[2] &amp; 0xff);
        int s = ((jHead[1] &amp; 0xff) &lt;&lt; 24);
        s += ((jHead[2] &amp; 0xff) &lt;&lt; 16);
        s += ((jHead[3] &amp; 0xff) &lt;&lt; 8);
        s += (jHead[4] &amp; 0xff) + 5;
        if (chunk.type == 2 || chunk.type == 1)
            s += 4;
        chunk.buffer = new byte[s];
        System.arraycopy(jHead, 0, chunk.buffer, 0, 5);
        int c = 5;
        int m = 8;
        while (c &lt; s) {
            if (m == 512) {
                m = 1;
                input.read();
            } else {
                chunk.buffer[c] = (byte) input.read();
                c++;
                m++;
            }
        }
        return chunk;
    }

	public void close() {
		try{
			output.close();
			input.close();
			socket.close();
		} catch (Exception _ex) {}
	}
    private int version = 574;
    private static String address = "world169.runescape.com";
    private static int port = 43594;

    private Socket socket;
    private InputStream input;
    private OutputStream output;
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/rsmv/320749/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/rsmv/320749/2</link>
        <pubDate>Sun, 20 Dec 2009 20:48:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-320749-2</guid>
        <source url="https://forum.moparisthebest.com/t/rsmv/320749.rss">Rsmv</source>
      </item>
      <item>
        <title>Rsmv</title>
        <dc:creator><![CDATA[@Berky-Scape Berky-Scape]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/berky-scape">@Berky-Scape</a> wrote:</p>
          <blockquote>
              <p>Does someone how to make the Rsmv work properly? because I need it, something is wrong in this code, the link to rs cache? But I’m not sure can someone help?</p>
<p>[code]public class Main {<br>
private UnPack pack = new UnPack();<br>
public Main() {<br>
try{<br>
}<br>
catch(Exception e){}<br>
System.out.println(“Runescape Model Grabber”);<br>
System.out.println(“Thanks to Silabsoft”);<br>
System.out.println("<s><s><s><s><s>");<br>
findVersion();<br>
System.out.println("</s></s></s></s></s>");<br>
try {<br>
for(int i = new File("./Models/").listFiles().length; i &lt; 9999999; i++){<br>
//		if(i &gt; min-1 &amp;&amp; i &lt; max) {//for grabbing a range of models<br>
//		if(i == ) {//for grabbing 1 model<br>
if(i &gt; 0) {//grabs all models<br>
System.out.println("Sending request for Model: "+i);<br>
addRequest( 7, i);<br>
byte b[] =  pack.unpack(download().buffer);<br>
if(pack.unpacked) {<br>
savemodel(i,b);<br>
System.out.println(“Model Saved”);<br>
}else{<br>
System.out.println(“Model Grabbing Complete”);<br>
break;<br>
}<br>
}<br>
}<br>
} catch (Exception e) {<br>
System.out.println(e);<br>
}<br>
}</p>
<pre><code>public void savemodel(int id, byte[] b){
        try {
        FileOutputStream fileoutputstream = new FileOutputStream("./Models/"+id+".dat");
        fileoutputstream.write(b, 0, b.length);
        fileoutputstream.close();
    } catch(Throwable _ex) {}
</code></pre>
<p>}</p>
<pre><code>public static void main(String[] args) {
    new Main();
}

public void findVersion() {
    System.out.println("Grabbing Cache Version.");
    while (true) {
        try {
            System.out.print("Trying: " + version);
            if (connect(address, port, version) == false) {
                System.out.println(" Rejected.");
                version++;
            } else {
                System.out.println(" Accepted.");
                break;
            }
        } catch (Exception _ex) {
            System.out.println(" Rejected.");
        }
    }
}

public boolean connect(String server, int port, int version) throws IOException {
    socket = new Socket(server, port);
    input = socket.getInputStream();
    output = socket.getOutputStream();
    output.write(15);
    output.write(0);
    output.write(0);
    output.write(version &gt;&gt; 8);
    output.write(version);
    output.flush();
    int r = input.read();
    if (r == 0) {
        return true;
    } else {
        close();
        return false;
    }
}

public void addRequest(int c, int i) throws IOException {
	output.write(0);
	output.write(c);
	output.write(i &gt;&gt; 8);
	output.write(i);
	output.flush();
}
public CacheChunk download() throws IOException {
    CacheChunk chunk = new CacheChunk();
    byte dHead[] = new byte[3];
    byte jHead[] = new byte[5];
    input.read(dHead);
    input.read(jHead);
    chunk.cache = dHead[0];
    chunk.type = jHead[0];
    chunk.index = ((dHead[1] &amp; 0xff) &lt;&lt; 8) + (dHead[2] &amp; 0xff);
    int s = ((jHead[1] &amp; 0xff) &lt;&lt; 24);
    s += ((jHead[2] &amp; 0xff) &lt;&lt; 16);
    s += ((jHead[3] &amp; 0xff) &lt;&lt; 8);
    s += (jHead[4] &amp; 0xff) + 5;
    if (chunk.type == 2 || chunk.type == 1)
        s += 4;
    chunk.buffer = new byte[s];
    System.arraycopy(jHead, 0, chunk.buffer, 0, 5);
    int c = 5;
    int m = 8;
    while (c &lt; s) {
        if (m == 512) {
            m = 1;
            input.read();
        } else {
            chunk.buffer[c] = (byte) input.read();
            c++;
            m++;
        }
    }
    return chunk;
}

public void close() {
	try{
		output.close();
		input.close();
		socket.close();
	} catch (Exception _ex) {}
}
private int version = 525;
private static String address = "mn3.runescape.com";
private static int port = 43594;

private Socket socket;
private InputStream input;
private OutputStream output;
</code></pre>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/rsmv/320749/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/rsmv/320749/1</link>
        <pubDate>Sun, 20 Dec 2009 20:31:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-320749-1</guid>
        <source url="https://forum.moparisthebest.com/t/rsmv/320749.rss">Rsmv</source>
      </item>
  </channel>
</rss>
