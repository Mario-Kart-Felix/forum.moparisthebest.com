<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Shop Trade [PI] Free Cookie if you can help :P</title>
    <link>https://forum.moparisthebest.com/t/shop-trade-pi-free-cookie-if-you-can-help-p/407651</link>
    <description>No one can really fix the problem yet and i&#39;ve tried many times to. So basically for my chaotics, if i try to put them in my slayer shop and/or my pc shop they are buyable ONLY by coins and not the points. Also, if i have the correct amount of pkp or pc points you CANNOT buy the item. i&#39;ve tried one more pkp or one less. still doesnt work. also in my funpk if you kill someone you gain 5pkp how can i make it to where only in that place you DONOT get pkp?</description>
    
    <lastBuildDate>Mon, 01 Aug 2011 12:15:23 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/shop-trade-pi-free-cookie-if-you-can-help-p/407651.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Shop Trade [PI] Free Cookie if you can help :P</title>
        <dc:creator><![CDATA[@Brandontan Brandontan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/brandontan">@Brandontan</a> wrote:</p>
          <blockquote>
              <p>Yeah thats what i think it isâ€¦ here is my shopassist. (half):</p>
<p>[code]package server.model.shops;</p>
<p>import server.Config;<br>
import server.Server;<br>
import server.model.items.Item;<br>
import server.model.players.Client;</p>
<p>public class ShopAssistant {</p>
<pre><code>private Client c;

public ShopAssistant(Client client) {
	this.c = client;
}

/**
*Shops
**/

public void openShop(int ShopID){		
	c.getItems().resetItems(3823);
	resetShop(ShopID);
	c.isShopping = true;
	c.myShopId = ShopID;
	c.getPA().sendFrame248(3824, 3822);
	c.getPA().sendFrame126(Server.shopHandler.ShopName[ShopID], 3901);
}

public boolean shopSellsItem(int itemID) {
	for (int i = 0; i &lt; Server.shopHandler.ShopItems.length; i++) {
		if(itemID == (Server.shopHandler.ShopItems[c.myShopId][i] - 1)) {
			return true;
		}
	}
	return false;
}

public void updatePlayerShop() {
	for (int i = 1; i &lt; Config.MAX_PLAYERS; i++) {
		if (Server.playerHandler.players[i] != null) {
			if (Server.playerHandler.players[i].isShopping == true &amp;&amp; Server.playerHandler.players[i].myShopId == c.myShopId &amp;&amp; i != c.playerId) {
				Server.playerHandler.players[i].updateShop = true;
			}
		}
	}
}


public void updateshop(int i){
	resetShop(i);
}

public void resetShop(int ShopID) {
	synchronized(c) {
		int TotalItems = 0;
		for (int i = 0; i &lt; Server.shopHandler.MaxShopItems; i++) {
			if (Server.shopHandler.ShopItems[ShopID][i] &gt; 0) {
				TotalItems++;
			}
		}
		if (TotalItems &gt; Server.shopHandler.MaxShopItems) {
			TotalItems = Server.shopHandler.MaxShopItems;
		}
		c.getOutStream().createFrameVarSizeWord(53);
		c.getOutStream().writeWord(3900);
		c.getOutStream().writeWord(TotalItems);
		int TotalCount = 0;
		for (int i = 0; i &lt; Server.shopHandler.ShopItems.length; i++) {
			if (Server.shopHandler.ShopItems[ShopID][i] &gt; 0 || i &lt;= Server.shopHandler.ShopItemsStandard[ShopID]) {
				if (Server.shopHandler.ShopItemsN[ShopID][i] &gt; 254) {
					c.getOutStream().writeByte(255); 					
					c.getOutStream().writeDWord_v2(Server.shopHandler.ShopItemsN[ShopID][i]);	
				} else {
					c.getOutStream().writeByte(Server.shopHandler.ShopItemsN[ShopID][i]);
				}
				if (Server.shopHandler.ShopItems[ShopID][i] &gt; Config.ITEM_LIMIT || Server.shopHandler.ShopItems[ShopID][i] &lt; 0) {
					Server.shopHandler.ShopItems[ShopID][i] = Config.ITEM_LIMIT;
				}
				c.getOutStream().writeWordBigEndianA(Server.shopHandler.ShopItems[ShopID][i]);
				TotalCount++;
			}
			if (TotalCount &gt; TotalItems) {
				break;
			}
		}
		c.getOutStream().endFrameVarSizeWord();
		c.flushOutStream();	
	}
}


public double getItemShopValue(int ItemID, int Type, int fromSlot) {
	double ShopValue = 1;
	double Overstock = 0;
	double TotPrice = 0;
	for (int i = 0; i &lt; Config.ITEM_LIMIT; i++) {
		if (Server.itemHandler.ItemList[i] != null) {
			if (Server.itemHandler.ItemList[i].itemId == ItemID) {
				ShopValue = Server.itemHandler.ItemList[i].ShopValue;
			}
		}
	}
	
	TotPrice = ShopValue;

	if (Server.shopHandler.ShopBModifier[c.myShopId] == 1) {
		TotPrice *= 1; 
		TotPrice *= 1;
		if (Type == 1) {
			TotPrice *= 1; 
		}
	} else if (Type == 1) {
		TotPrice *= 1; 
	}
	return TotPrice;
}

public int getItemShopValue(int itemId) {
	for (int i = 0; i &lt; Config.ITEM_LIMIT; i++) {
		if (Server.itemHandler.ItemList[i] != null) {
			if (Server.itemHandler.ItemList[i].itemId == itemId) {
				return (int)Server.itemHandler.ItemList[i].ShopValue;
			}
		}	
	}
	return 0;
}



/**
*buy item from shop (Shop Price)
**/

public void buyFromShopPrice(int removeId, int removeSlot){
	int ShopValue = (int)Math.floor(getItemShopValue(removeId, 0, removeSlot));
	ShopValue *= 1;
	String ShopAdd = "";
	if (c.myShopId == 18) {
		c.sendMessage(c.getItems().getItemName(removeId)+": currently costs " + getSpecialItemValue(removeId) + " PC points.");
		return;
	}
	if (c.myShopId == 73) {
		c.sendMessage(c.getItems().getItemName(removeId)+": currently costs " + getSpecialItemValue(removeId) + " PK points.");
		return;
	}
	if (c.myShopId == 74) {
		c.sendMessage(c.getItems().getItemName(removeId)+": currently costs " + getSpecialItemValue(removeId) + " PK points.");
		return;
	}
	if (c.myShopId == 15) {
		c.sendMessage("This item current costs " + c.getItems().getUntradePrice(removeId) + " coins.");
		return;
	}
	if (c.myShopId == 48) {
		c.sendMessage(c.getItems().getItemName(removeId)+": currently costs " + getSpecialItemValue(removeId) + " Slayer points.");
		return;
	}
	if (ShopValue &gt;= 1000 &amp;&amp; ShopValue &lt; 1000000) {
		ShopAdd = " (" + (ShopValue / 1000) + "K)";
	} else if (ShopValue &gt;= 1000000) {
		ShopAdd = " (" + (ShopValue / 1000000) + " million)";
	}
	c.sendMessage(c.getItems().getItemName(removeId)+": currently costs "+ShopValue+" coins"+ShopAdd);
}

public int getSpecialItemValue(int id) {
	switch (id) {
		case 6889:
		case 6914:
		case 15604:
		case 15606:
		case 15600:
		case 15610:
		case 15612:
		case 15616:
		case 15618:
		return 100;
		case 6916:
		case 6918:
		case 6920:
		case 6922:
		case 6924:
		return 50;
		case 11663:
		case 11664:
		case 11665:
		case 8842:
		return 30;
		case 8839:
		case 8840:
		case 15602:
		case 15608:
		case 15614:
		case 15620:
</code></pre>
<p>case 19272:<br>
case 19275:<br>
case 19278:<br>
case 19281:<br>
case 19284:<br>
case 19287:<br>
case 19290:<br>
case 19293:<br>
case 19296:<br>
case 19299:<br>
case 19302:<br>
case 19305:<br>
case 13107:<br>
case 13109:<br>
case 13111:<br>
case 13113:<br>
case 13115:<br>
case 13858:<br>
case 13861:<br>
case 13864:<br>
case 13870:<br>
case 13873:<br>
case 13876:<br>
case 13896:<br>
case 13884:<br>
case 13890:<br>
case 13887:<br>
case 13893:<br>
case 13905:<br>
case 13867:<br>
return 75;<br>
case 13883:<br>
case 13879:<br>
return 1;<br>
case 10499:<br>
return 20;<br>
case 8845:<br>
return 5;<br>
case 8846:<br>
return 10;<br>
case 8847:<br>
return 15;<br>
case 8848:<br>
return 20;<br>
case 8849:<br>
case 8850:<br>
return 25;<br>
case 10551:<br>
case 10531:<br>
case 10533:<br>
case 10534:<br>
case 10537:<br>
return 50;<br>
case 6570:<br>
return 35;<br>
case 11730:<br>
case 13902:<br>
case 13899:<br>
return 150;		<br>
case 11696:<br>
case 11698:<br>
case 11700:<br>
return 200;<br>
case 11694:<br>
return 350;<br>
case 6585:<br>
return 15;<br>
case 15051:<br>
return 300;<br>
case 11235:<br>
return 200;<br>
case 4151:<br>
return 150;</p>
<pre><code>		case 15039:
		case 13736:
		case 13738:
		case 13740:
		case 13742:
		case 13744:
		case 18359:
		case 18349://from here
		case 18351:
		case 18353:
		case 18355:
		case 18357://to here don't work. (chaotics)
		return 1000;
		case 15272:
		return 10;
		
		
		case 14484:
		return 500;
		
		
	}
	return 0;
}



/**
*Sell item to shop (Shop Price)
**/
public void sellToShopPrice(int removeId, int removeSlot) {
	for (int i : Config.ITEM_SELLABLE) {

		
		if (i == removeId) {
			c.sendMessage("You can't sell "+c.getItems().getItemName(removeId).toLowerCase()+".");
			return;
		} 

	}
	boolean IsIn = false;
	if (Server.shopHandler.ShopSModifier[c.myShopId] &gt; 1) {
		for (int j = 0; j &lt;= Server.shopHandler.ShopItemsStandard[c.myShopId]; j++) {
			if (removeId == (Server.shopHandler.ShopItems[c.myShopId][j] - 1)) {
				IsIn = true;
				break;
			}
		}
	} else {
		IsIn = true;
	}
	if (IsIn == false) {
		c.sendMessage("You can't sell "+c.getItems().getItemName(removeId).toLowerCase()+" to this store.");
	} else {
		int ShopValue = (int)Math.floor(getItemShopValue(removeId, 1, removeSlot));
		String ShopAdd = "";
		if (ShopValue &gt;= 1000 &amp;&amp; ShopValue &lt; 1000000) {
			ShopAdd = " (" + (ShopValue / 1000) + "K)";
		} else if (ShopValue &gt;= 1000000) {
			ShopAdd = " (" + (ShopValue / 1000000) + " million)";
		}
		c.sendMessage(c.getItems().getItemName(removeId)+": shop will buy for "+ShopValue+" coins"+ShopAdd);
	}
}



public boolean sellItem(int itemID, int fromSlot, int amount) {
		if(c.inTrade) {
        		c.sendMessage("You cant sell items to the shop while your in trade!");
       		return false;
        		}
	if (c.myShopId == 14)
		return false;
	for (int i : Config.ITEM_SELLABLE) {
		if (i == itemID) {
			c.sendMessage("You can't sell "+c.getItems().getItemName(itemID).toLowerCase()+".");
			return false;
		} 
	}
	
	if (amount &gt; 0 &amp;&amp; itemID == (c.playerItems[fromSlot] - 1)) {
		if (Server.shopHandler.ShopSModifier[c.myShopId] &gt; 1) {
			boolean IsIn = false;
			for (int i = 0; i &lt;= Server.shopHandler.ShopItemsStandard[c.myShopId]; i++) {
				if (itemID == (Server.shopHandler.ShopItems[c.myShopId][i] - 1)) {
					IsIn = true;
					break;
				}
			}
			if (IsIn == false) {
				c.sendMessage("You can't sell "+c.getItems().getItemName(itemID).toLowerCase()+" to this store.");
				return false;
			}
		}

		if (amount &gt; c.playerItemsN[fromSlot] &amp;&amp; (Item.itemIsNote[(c.playerItems[fromSlot] - 1)] == true || Item.itemStackable[(c.playerItems[fromSlot] - 1)] == true)) {
			amount = c.playerItemsN[fromSlot];
		} else if (amount &gt; c.getItems().getItemAmount(itemID) &amp;&amp; Item.itemIsNote[(c.playerItems[fromSlot] - 1)] == false &amp;&amp; Item.itemStackable[(c.playerItems[fromSlot] - 1)] == false) {
			amount = c.getItems().getItemAmount(itemID);
		}
		//double ShopValue;
		//double TotPrice;
		int TotPrice2 = 0;
		//int Overstock;
		for (int i = amount; i &gt; 0; i--) {
			TotPrice2 = (int)Math.floor(getItemShopValue(itemID, 1, fromSlot));
			if (c.getItems().freeSlots() &gt; 0 || c.getItems().playerHasItem(995)) {
				if (Item.itemIsNote[itemID] == false) {
					c.getItems().deleteItem(itemID, c.getItems().getItemSlot(itemID), 1);
				} else {
					c.getItems().deleteItem(itemID, fromSlot, 1);
				}
				c.getItems().addItem(995, TotPrice2);
				addShopItem(itemID, 1);
			} else {
				c.sendMessage("You don't have enough space in your inventory.");
				break;
			}
		}
		c.getItems().resetItems(3823);
		resetShop(c.myShopId);
		updatePlayerShop();
		return true;
	}
	return true;
}
</code></pre>
<p>public boolean addShopItem(int itemID, int amount) {<br>
boolean Added = false;<br>
if (amount &lt;= 0) {<br>
return false;<br>
}<br>
if (Item.itemIsNote[itemID] == true) {<br>
itemID = c.getItems().getUnnotedItem(itemID);<br>
}<br>
for (int i = 0; i &lt; Server.shopHandler.ShopItems.length; i++) {<br>
if ((Server.shopHandler.ShopItems[c.myShopId][i] - 1) == itemID) {<br>
Server.shopHandler.ShopItemsN[c.myShopId][i] += amount;<br>
Added = true;<br>
}<br>
}<br>
if (Added == false) {<br>
for (int i = 0; i &lt; Server.shopHandler.ShopItems.length; i++) {<br>
if (Server.shopHandler.ShopItems[c.myShopId][i] == 0) {<br>
Server.shopHandler.ShopItems[c.myShopId][i] = (itemID + 1);<br>
Server.shopHandler.ShopItemsN[c.myShopId][i] = amount;<br>
Server.shopHandler.ShopItemsDelay[c.myShopId][i] = 0;<br>
break;<br>
}<br>
}<br>
}<br>
return true;<br>
}</p>
<pre><code>public long buyDelay;
public boolean buyItem(int itemID, int fromSlot, int amount) {
	if(System.currentTimeMillis() - buyDelay &lt; 1500) {
		return false;
	}

	if (c.myShopId == 14) {
		skillBuy(itemID);
		return false;

	} else if (c.myShopId == 15) {
		buyVoid(itemID);
		return false;		
	
	} else if (c.myShopId == 1) {
		buyVoid(itemID);
		return false;
            }
	if(itemID != itemID) {
		c.sendMessage("Don't dupe or you will be IP Banned");
		return false;
	}

	if(!shopSellsItem(itemID))
		return false;

	if (amount &gt; 0) {
		if (amount &gt; Server.shopHandler.ShopItemsN[c.myShopId][fromSlot]) {
			amount = Server.shopHandler.ShopItemsN[c.myShopId][fromSlot];
		}
		//double ShopValue;
		//double TotPrice;
		int TotPrice2 = 0;
		//int Overstock;
		int Slot = 0;
		int Slot1 = 0;//Tokkul
		int Slot2 = 0;//Pking Points
		int Slot3 = 0;//Donator Gold

		if (c.myShopId == 18) {
			handleOtherShop(itemID);
			return false;
		}	
		if (c.myShopId == 73) {
			handleOtherShop(itemID);
			return false;
		}	
		if (c.myShopId == 74) {
			handleOtherShop(itemID);
			return false;
		}	
		for (int i = amount; i &gt; 0; i--) {
			TotPrice2 = (int)Math.floor(getItemShopValue(itemID, 0, fromSlot));
			Slot = c.getItems().getItemSlot(995);
			Slot1 = c.getItems().getItemSlot(6529);
			Slot3 = c.getItems().getItemSlot(5555);
			if (Slot == -1 &amp;&amp; c.myShopId != 11 &amp;&amp; c.myShopId != 29 &amp;&amp; c.myShopId != 30 &amp;&amp; c.myShopId != 31 &amp;&amp; c.myShopId != 47) {
				c.sendMessage("You don't have enough coins.");
				break;
			}
			if(Slot1 == -1 &amp;&amp; c.myShopId == 29 || c.myShopId == 30 || c.myShopId == 31) {
				c.sendMessage("You don't have enough tokkul.");
				break;
			}
			if(Slot3 == -1 &amp;&amp; c.myShopId == 11) {
				c.sendMessage("You don't have enough donator gold.");
				break;
			}
		
            if(TotPrice2 &lt;= 1) {
            	TotPrice2 = (int)Math.floor(getItemShopValue(itemID, 0, fromSlot));
            	TotPrice2 *= 1.66;
            }
            if(c.myShopId == 29 || c.myShopId == 30 || c.myShopId == 31) {
            	if (c.playerItemsN[Slot1] &gt;= TotPrice2) {
					if (c.getItems().freeSlots() &gt; 0) {
						buyDelay = System.currentTimeMillis();
						c.getItems().deleteItem(6529, c.getItems().getItemSlot(6529), TotPrice2);
						c.getItems().addItem(itemID, 1);
						Server.shopHandler.ShopItemsN[c.myShopId][fromSlot] -= 1;
						Server.shopHandler.ShopItemsDelay[c.myShopId][fromSlot] = 0;
						if ((fromSlot + 1) &gt; Server.shopHandler.ShopItemsStandard[c.myShopId]) {
							Server.shopHandler.ShopItems[c.myShopId][fromSlot] = 0;
						}
					} else {
						c.sendMessage("You don't have enough space in your inventory.");
						break;
					}
				} else {
					c.sendMessage("You don't have enough tokkul.");
					break;
				}
            }
            else if(c.myShopId == 47) {
            	if (c.pkPoints &gt;= TotPrice2) {
					if (c.getItems().freeSlots() &gt; 0) {
						buyDelay = System.currentTimeMillis();
						c.pkPoints -= TotPrice2;
						c.getItems().addItem(itemID, 1);
						Server.shopHandler.ShopItemsN[c.myShopId][fromSlot] -= 1;
						Server.shopHandler.ShopItemsDelay[c.myShopId][fromSlot] = 0;
						if ((fromSlot + 1) &gt; Server.shopHandler.ShopItemsStandard[c.myShopId]) {
							Server.shopHandler.ShopItems[c.myShopId][fromSlot] = 0;
						}
					} else {
						c.sendMessage("You don't have enough space in your inventory.");
						break;
					}
				} else {
					c.sendMessage("You don't have enough Pk Points.");
					break;
				}
            }
			                else if(c.myShopId == 48) {
            	if (c.magePoints &gt;= TotPrice2) {
					if (c.getItems().freeSlots() &gt; 0) {
						buyDelay = System.currentTimeMillis();
						c.magePoints -= TotPrice2;
						c.getItems().addItem(itemID, 1);
						Server.shopHandler.ShopItemsN[c.myShopId][fromSlot] -= 1;
						Server.shopHandler.ShopItemsDelay[c.myShopId][fromSlot] = 0;
						if ((fromSlot + 1) &gt; Server.shopHandler.ShopItemsStandard[c.myShopId]) {
							Server.shopHandler.ShopItems[c.myShopId][fromSlot] = 0;
						}
					} else {
						c.sendMessage("You don't have enough space in your inventory.");
						break;
					}
				} else {
					c.sendMessage("You don't have enough slayer points.");
					break;
				}
            }
</code></pre>
<p>[/code](48 shop is the slayer shop.)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/shop-trade-pi-free-cookie-if-you-can-help-p/407651/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/shop-trade-pi-free-cookie-if-you-can-help-p/407651/5</link>
        <pubDate>Mon, 01 Aug 2011 12:15:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-407651-5</guid>
        <source url="https://forum.moparisthebest.com/t/shop-trade-pi-free-cookie-if-you-can-help-p/407651.rss">Shop Trade [PI] Free Cookie if you can help :P</source>
      </item>
      <item>
        <title>Shop Trade [PI] Free Cookie if you can help :P</title>
        <dc:creator><![CDATA[@JavaTC JavaTC]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/javatc">@JavaTC</a> wrote:</p>
          <blockquote>
              <p>I never said I was technologically inclined with Java, plus itâ€™s different for most sources.  For mine, itâ€™s ShopAssistant, give us a bit more info maybe?</p>
<p>It could be your ShopAssistant is fucked up.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/shop-trade-pi-free-cookie-if-you-can-help-p/407651/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/shop-trade-pi-free-cookie-if-you-can-help-p/407651/4</link>
        <pubDate>Mon, 01 Aug 2011 10:40:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-407651-4</guid>
        <source url="https://forum.moparisthebest.com/t/shop-trade-pi-free-cookie-if-you-can-help-p/407651.rss">Shop Trade [PI] Free Cookie if you can help :P</source>
      </item>
      <item>
        <title>Shop Trade [PI] Free Cookie if you can help :P</title>
        <dc:creator><![CDATA[@Brandontan Brandontan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/brandontan">@Brandontan</a> wrote:</p>
          <blockquote>
              <p>lol thats just delcaring and returning a method thats already there. no help.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/shop-trade-pi-free-cookie-if-you-can-help-p/407651/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/shop-trade-pi-free-cookie-if-you-can-help-p/407651/3</link>
        <pubDate>Mon, 01 Aug 2011 10:22:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-407651-3</guid>
        <source url="https://forum.moparisthebest.com/t/shop-trade-pi-free-cookie-if-you-can-help-p/407651.rss">Shop Trade [PI] Free Cookie if you can help :P</source>
      </item>
      <item>
        <title>Shop Trade [PI] Free Cookie if you can help :P</title>
        <dc:creator><![CDATA[@JavaTC JavaTC]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/javatc">@JavaTC</a> wrote:</p>
          <blockquote>
              <p>Well, where did you add the items?  With my experence, the pcpoints and pkp shop are handled though ShopAssistant.java, not shops.cfg (though they stiil need to be in cfg).</p>
<p>Look for the shop you want and add something like this</p>
<p><code>
Case itemid;
Return price</code></p>
<p>Iâ€™m not to sure, but that should work.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/shop-trade-pi-free-cookie-if-you-can-help-p/407651/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/shop-trade-pi-free-cookie-if-you-can-help-p/407651/2</link>
        <pubDate>Mon, 01 Aug 2011 10:19:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-407651-2</guid>
        <source url="https://forum.moparisthebest.com/t/shop-trade-pi-free-cookie-if-you-can-help-p/407651.rss">Shop Trade [PI] Free Cookie if you can help :P</source>
      </item>
      <item>
        <title>Shop Trade [PI] Free Cookie if you can help :P</title>
        <dc:creator><![CDATA[@Brandontan Brandontan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/brandontan">@Brandontan</a> wrote:</p>
          <blockquote>
              <p>No one can really fix the problem yet and iâ€™ve tried many times to. So basically for my chaotics, if i try to put them in my slayer shop and/or my pc shop they are buyable ONLY by coins and not the points. Also, if i have the correct amount of pkp or pc points you CANNOT buy the item. iâ€™ve tried one more pkp or one less. still doesnt work. also in my funpk if you kill someone you gain 5pkp how can i make it to where only in that place you DONOT get pkp?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/shop-trade-pi-free-cookie-if-you-can-help-p/407651/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/shop-trade-pi-free-cookie-if-you-can-help-p/407651/1</link>
        <pubDate>Mon, 01 Aug 2011 09:53:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-407651-1</guid>
        <source url="https://forum.moparisthebest.com/t/shop-trade-pi-free-cookie-if-you-can-help-p/407651.rss">Shop Trade [PI] Free Cookie if you can help :P</source>
      </item>
  </channel>
</rss>
