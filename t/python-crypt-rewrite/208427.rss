<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[Python]Crypt - Rewrite</title>
    <link>https://forum.moparisthebest.com/t/python-crypt-rewrite/208427</link>
    <description>Well, some of you may remember me writing a little program to encode and decode files or strings using different encodings, well I decided to rewrite it to make it easier on the eyes and a bit better (Split into different classes, made cleaner and more simple ).

[code]
#!/usr/bin/env python
#
#       Crypt-Version2.py
#       
#       Copyright 2008 Jamie &lt;Jamie@JAMIE-PC&gt;
#       
#       This program is free software; you can redistribute it and/or modify
#       it under the terms of the GNU General Public License as published by
#       the Free Software Foundation; either version 2 of the License, or
#       (at your option) any later version.
#       
#       This program is distributed in the hope that it will be useful,
#       but WITHOUT ANY WARRANTY; without even the implied warranty of
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#       GNU General Public License for more details.
#       
#       You should have received a copy of the GNU General Public License
#       along with this program; if not, write to the Free Software
#       Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#       MA 02110-1301, USA.

class Encryption(object):
    def fileEncryption(self):
        initialFile = raw_input(&quot;What file would you like to encode (Please use extension): &quot;)
        openedInitial = open(initialFile, &quot;r&quot;)
        outputFile = raw_input(&quot;What would you like the name of the output file to be, yet again please include the extension: &quot;)
        createdOutput = open(outputFile, &quot;w&quot;)
        readingInitial = openedInitial.read()
        encodingRot13 = readingInitial.encode(&quot;rot13&quot;)
        encodingBase64 = encodingRot13.encode(&quot;base64&quot;)
        encodingHex = encodingBase64.encode(&quot;hex&quot;)
        createdOutput.write(encodingHex)
        createdOutput.close()
        openedInitial.close()
        print &quot;Wrote the output to &quot;, outputFile
    
    def stringEncryption(self):
        initialString = raw_input(&quot;What string would you like to encode: &quot;)
        encodingRot13 = initialString.encode(&quot;rot13&quot;)
        encodingBase64 = encodingRot13.encode(&quot;base64&quot;)
        encodingHex = encodingBase64.encode(&quot;hex&quot;)
        print &quot;The output is:&quot;, encodingHex
        
class Decryption(object):
    def fileDecryption(self):
        initialFile = raw_input(&quot;What file would you like to decode (Please use extension): &quot;)
        openedInitial = open(initialFile, &quot;r&quot;)
        outputFile = raw_input(&quot;What would you like the name of the output file to be, yet again please include the extension: &quot;)
        createdOutput = open(outputFile, &quot;w&quot;)
        readingInitial = openedInitial.read()
        DecodingRot13 = readingInitial.decode(&quot;hex&quot;)
        DecodingBase64 = DecodingRot13.decode(&quot;base64&quot;)
        DecodingHex = DecodingBase64.decode(&quot;rot13&quot;)
        createdOutput.write(DecodingHex)
        createdOutput.close()
        openedInitial.close()
        print &quot;Wrote the output to &quot;, outputFile
    
    def stringDecryption(self):
        initialString = raw_input(&quot;What string would you like to Decode: &quot;)
        DecodingRot13 = initialString.decode(&quot;hex&quot;)
        DecodingBase64 = DecodingRot13.decode(&quot;base64&quot;)
        DecodingHex = DecodingBase64.decode(&quot;rot13&quot;)
        print &quot;The output is:&quot;, DecodingHex
        
Encryption = Encryption()
Decryption = Decryption()
print &quot;Welcome to Crypt&quot;

y = raw_input(&quot;Press e to Encode, or d to Decode: &quot;)
if y == &quot;e&quot;:
    z = raw_input(&quot;Press f to Encode a file, or s to Encode a string: &quot;)
    if z == &quot;f&quot;:
        Encryption.fileEncryption()
    elif z == &quot;s&quot;:
        Encryption.stringEncryption()
elif y == &quot;d&quot;:
    z = raw_input(&quot;Press f to Decode a file, or s to Decode a string: &quot;)
    if z == &quot;f&quot;:
        Decryption.fileDecryption()
    elif z == &quot;s&quot;:
        Decryption.stringDecryption()
[/code]

Have fun etc.</description>
    
    <lastBuildDate>Tue, 27 May 2008 04:20:44 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/python-crypt-rewrite/208427.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[Python]Crypt - Rewrite</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>as you are probably already aware, the only encryption that you used was the ceasar cipher, but because you didnt let people give their own key, it may as well be encoding</p>
<p>the point of this post, it is encoding not encryption. other than that, looks ok</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/python-crypt-rewrite/208427/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/python-crypt-rewrite/208427/2</link>
        <pubDate>Tue, 27 May 2008 04:20:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-208427-2</guid>
        <source url="https://forum.moparisthebest.com/t/python-crypt-rewrite/208427.rss">[Python]Crypt - Rewrite</source>
      </item>
      <item>
        <title>[Python]Crypt - Rewrite</title>
        <dc:creator><![CDATA[@eVokki1 Cowie`]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/evokki1">@eVokki1</a> wrote:</p>
          <blockquote>
              <p>Well, some of you may remember me writing a little program to encode and decode files or strings using different encodings, well I decided to rewrite it to make it easier on the eyes and a bit better (Split into different classes, made cleaner and more simple ).</p>
<pre><code class="lang-auto">#!/usr/bin/env python
#
#       Crypt-Version2.py
#       
#       Copyright 2008 Jamie &lt;Jamie@JAMIE-PC&gt;
#       
#       This program is free software; you can redistribute it and/or modify
#       it under the terms of the GNU General Public License as published by
#       the Free Software Foundation; either version 2 of the License, or
#       (at your option) any later version.
#       
#       This program is distributed in the hope that it will be useful,
#       but WITHOUT ANY WARRANTY; without even the implied warranty of
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#       GNU General Public License for more details.
#       
#       You should have received a copy of the GNU General Public License
#       along with this program; if not, write to the Free Software
#       Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#       MA 02110-1301, USA.

class Encryption(object):
    def fileEncryption(self):
        initialFile = raw_input("What file would you like to encode (Please use extension): ")
        openedInitial = open(initialFile, "r")
        outputFile = raw_input("What would you like the name of the output file to be, yet again please include the extension: ")
        createdOutput = open(outputFile, "w")
        readingInitial = openedInitial.read()
        encodingRot13 = readingInitial.encode("rot13")
        encodingBase64 = encodingRot13.encode("base64")
        encodingHex = encodingBase64.encode("hex")
        createdOutput.write(encodingHex)
        createdOutput.close()
        openedInitial.close()
        print "Wrote the output to ", outputFile
    
    def stringEncryption(self):
        initialString = raw_input("What string would you like to encode: ")
        encodingRot13 = initialString.encode("rot13")
        encodingBase64 = encodingRot13.encode("base64")
        encodingHex = encodingBase64.encode("hex")
        print "The output is:", encodingHex
        
class Decryption(object):
    def fileDecryption(self):
        initialFile = raw_input("What file would you like to decode (Please use extension): ")
        openedInitial = open(initialFile, "r")
        outputFile = raw_input("What would you like the name of the output file to be, yet again please include the extension: ")
        createdOutput = open(outputFile, "w")
        readingInitial = openedInitial.read()
        DecodingRot13 = readingInitial.decode("hex")
        DecodingBase64 = DecodingRot13.decode("base64")
        DecodingHex = DecodingBase64.decode("rot13")
        createdOutput.write(DecodingHex)
        createdOutput.close()
        openedInitial.close()
        print "Wrote the output to ", outputFile
    
    def stringDecryption(self):
        initialString = raw_input("What string would you like to Decode: ")
        DecodingRot13 = initialString.decode("hex")
        DecodingBase64 = DecodingRot13.decode("base64")
        DecodingHex = DecodingBase64.decode("rot13")
        print "The output is:", DecodingHex
        
Encryption = Encryption()
Decryption = Decryption()
print "Welcome to Crypt"

y = raw_input("Press e to Encode, or d to Decode: ")
if y == "e":
    z = raw_input("Press f to Encode a file, or s to Encode a string: ")
    if z == "f":
        Encryption.fileEncryption()
    elif z == "s":
        Encryption.stringEncryption()
elif y == "d":
    z = raw_input("Press f to Decode a file, or s to Decode a string: ")
    if z == "f":
        Decryption.fileDecryption()
    elif z == "s":
        Decryption.stringDecryption()</code></pre>
<p>Have fun etc.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/python-crypt-rewrite/208427/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/python-crypt-rewrite/208427/1</link>
        <pubDate>Tue, 27 May 2008 02:50:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-208427-1</guid>
        <source url="https://forum.moparisthebest.com/t/python-crypt-rewrite/208427.rss">[Python]Crypt - Rewrite</source>
      </item>
  </channel>
</rss>
