<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>PI Combat assistant magic casting problen</title>
    <link>https://forum.moparisthebest.com/t/pi-combat-assistant-magic-casting-problen/446385</link>
    <description>[code]

		[code=]public void attackPlayer(int i) {

		if (Server.playerHandler.players[i] != null) {
			
			if (Server.playerHandler.players[i] != null) {
				
				if (Server.playerHandler.players[i].isDead) {
					resetPlayerAttack();
					return;
				}
				
				if(c.respawnTimer &gt; 0 || Server.playerHandler.players[i].respawnTimer &gt; 0) {
					resetPlayerAttack();
					return;
				}
				
				if(!c.getCombat().checkReqs()) {
					return;
				}
			
			boolean sameSpot = c.absX == Server.playerHandler.players[i].getX() &amp;&amp; c.absY == Server.playerHandler.players[i].getY();
			if(!c.goodDistance(Server.playerHandler.players[i].getX(), Server.playerHandler.players[i].getY(), c.getX(), c.getY(), 25) &amp;&amp; !sameSpot) {
				resetPlayerAttack();
				return;
			}

			if(Server.playerHandler.players[i].respawnTimer &gt; 0) {
				Server.playerHandler.players[i].playerIndex = 0;
				resetPlayerAttack();
				return;
			}
			
			if (Server.playerHandler.players[i].heightLevel != c.heightLevel) {
				resetPlayerAttack();
				return;
			}
			
			c.followId = i;
			c.followId2 = 0;
			if(c.attackTimer &lt;= 0) {
				c.usingBow = false;
				c.specEffect = 0;
				c.usingRangeWeapon = false;
				c.rangeItemUsed = 0;
				boolean usingBow = false;
				boolean usingArrows = false;
				boolean usingOtherRangeWeapons = false;
				boolean usingCross = c.playerEquipment[c.playerWeapon] == 9185;
				c.projectileStage = 0;
				if (c.autocasting) {
					c.spellId = c.autocastId;
					c.usingMagic = true;
					c.stopMovement();
				}
				if(c.spellId &gt; 0) {
                    c.usingMagic = true;
                }
				if (c.absX == Server.playerHandler.players[i].absX &amp;&amp; c.absY == Server.playerHandler.players[i].absY) {
					if (c.freezeTimer &gt; 0) {
						c.stopMovement();
						resetPlayerAttack();
						return;
					}	
					c.followId = i;
					c.attackTimer = 0;
					return;
				}
				
				if(!c.usingMagic){
					for (int bowId : c.BOWS) {
						if(c.playerEquipment[c.playerWeapon] == bowId) {
							usingBow = true;
							for (int arrowId : c.ARROWS) {
								if(c.playerEquipment[c.playerArrows] == arrowId) {
									usingArrows = true;
								}
							}
						}
					}				
				
					for (int otherRangeId : c.OTHER_RANGE_WEAPONS) {
						if(c.playerEquipment[c.playerWeapon] == otherRangeId) {
							usingOtherRangeWeapons = true;
						}
					}
				}

				if (c.autocasting) {
					c.stopMovement();
					c.spellId = c.autocastId;
					c.usingMagic = true;
				}
				//c.sendMessage(&quot;Made it here2.&quot;);
				if(c.spellId &gt; 0) {
                    c.usingMagic = true;
		    c.stopMovement();
                }
				c.attackTimer = getAttackDelay(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase());

				if(c.duelRule[9]){
				boolean canUseWeapon = false;
					for(int funWeapon: Config.FUN_WEAPONS) {
						if(c.playerEquipment[c.playerWeapon] == funWeapon) {
							canUseWeapon = true;
						}
					}
					if(!canUseWeapon) {
						c.sendMessage(&quot;You can only use fun weapons in this duel!&quot;);
						resetPlayerAttack();
						return;
					}
				}
				//c.sendMessage(&quot;Made it here3.&quot;);
				if(c.duelRule[2] &amp;&amp; (usingBow || usingOtherRangeWeapons)) {
					c.sendMessage(&quot;Range has been disabled in this duel!&quot;);
					return;
				}
				if(c.duelRule[3] &amp;&amp; (!usingBow &amp;&amp; !usingOtherRangeWeapons &amp;&amp; !c.usingMagic)) {
					c.sendMessage(&quot;Melee has been disabled in this duel!&quot;);
					return;
				}
				
				if(c.duelRule[4] &amp;&amp; c.usingMagic) {
					c.sendMessage(&quot;Magic has been disabled in this duel!&quot;);
					resetPlayerAttack();
					return;
				}
				
				if((!c.goodDistance(c.getX(), c.getY(), Server.playerHandler.players[i].getX(), Server.playerHandler.players[i].getY(), 4) &amp;&amp; (usingOtherRangeWeapons &amp;&amp; !usingBow &amp;&amp; !c.usingMagic)) 
				|| (!c.goodDistance(c.getX(), c.getY(), Server.playerHandler.players[i].getX(), Server.playerHandler.players[i].getY(), 2) &amp;&amp; (!usingOtherRangeWeapons &amp;&amp; usingHally() &amp;&amp; !usingBow &amp;&amp; !c.usingMagic))
				|| (!c.goodDistance(c.getX(), c.getY(), Server.playerHandler.players[i].getX(), Server.playerHandler.players[i].getY(), getRequiredDistance()) &amp;&amp; (!usingOtherRangeWeapons &amp;&amp; !usingHally() &amp;&amp; !usingBow &amp;&amp; !c.usingMagic)) 
				|| (!c.goodDistance(c.getX(), c.getY(), Server.playerHandler.players[i].getX(), Server.playerHandler.players[i].getY(), 10) &amp;&amp; (usingBow || c.usingMagic))) {
					//c.sendMessage(&quot;Setting attack timer to 1&quot;);
					c.attackTimer = 2;
					c.stopMovement();
					if (!usingBow &amp;&amp; !c.usingMagic &amp;&amp; !usingOtherRangeWeapons &amp;&amp; c.freezeTimer &gt; 0)
						resetPlayerAttack();
						c.stopMovement();
					return;
				}
				if(!usingCross &amp;&amp; !usingArrows &amp;&amp; usingBow &amp;&amp; (c.playerEquipment[c.playerWeapon] &lt; 4212 || c.playerEquipment[c.playerWeapon] &gt; 4223) &amp;&amp; !c.usingMagic) {
					c.sendMessage(&quot;You have run out of arrows!&quot;);
					c.stopMovement();
					resetPlayerAttack();
					return;
				}
				if(correctBowAndArrows() &lt; c.playerEquipment[c.playerArrows] &amp;&amp; Config.CORRECT_ARROWS &amp;&amp; usingBow &amp;&amp; !usingCrystalBow() &amp;&amp; c.playerEquipment[c.playerWeapon] != 9185 &amp;&amp; !c.usingMagic) {
					c.sendMessage(&quot;You can&#39;t use &quot;+c.getItems().getItemName(c.playerEquipment[c.playerArrows]).toLowerCase()+&quot;s with a &quot;+c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase()+&quot;.&quot;);
					c.stopMovement();
					resetPlayerAttack();
					return;
				}
				if (c.playerEquipment[c.playerWeapon] == 9185 &amp;&amp; !properBolts() &amp;&amp; !c.usingMagic) {
					c.sendMessage(&quot;You must use bolts with a crossbow.&quot;);
					c.stopMovement();
					resetPlayerAttack();
					return;				
				}
				
				
				if(usingBow || c.usingMagic || usingOtherRangeWeapons || usingHally()) {
					c.stopMovement();
				}
				

				if(!checkMagicReqs(c.spellId)) {
					c.stopMovement();
					c.npcIndex = 0;
					return;
				}
				
				if(!checkMagicReqs(c.spellId)) {
					c.stopMovement();
					resetPlayerAttack();
					return;
				}

				if(!checkMagicReqs(c.spellId)) {
					c.stopMovement();
					c.npcIndex = 0;
					return;
				}
				
				c.faceUpdate(i+32768);
				
				if(c.duelStatus != 5) {
					if(!c.attackedPlayers.contains(c.playerIndex) &amp;&amp; !Server.playerHandler.players[c.playerIndex].attackedPlayers.contains(c.playerId)) {
						c.attackedPlayers.add(c.playerIndex);
						c.isSkulled = true;
						c.skullTimer = Config.SKULL_TIMER;
						c.headIconPk = 0;
						c.getPA().requestUpdates();
					} 
				}
				c.specAccuracy = 1.0;
				c.specDamage = 1.0;
				c.delayedDamage = c.delayedDamage2 = 0;
				if(c.usingSpecial &amp;&amp; !c.usingMagic) {
					if(c.duelRule[10] &amp;&amp; c.duelStatus == 5) {
						c.sendMessage(&quot;Special attacks have been disabled during this duel!&quot;);
						c.usingSpecial = false;
						c.stopMovement();
						c.getItems().updateSpecialBar();
						resetPlayerAttack();
						return;
					}
					if(checkSpecAmount(c.playerEquipment[c.playerWeapon])){
						c.lastArrowUsed = c.playerEquipment[c.playerArrows];
						activateSpecial(c.playerEquipment[c.playerWeapon], i);
						c.followId = c.playerIndex;
						return;
					} else {
						c.sendMessage(&quot;You don&#39;t have the required special energy to use this attack.&quot;);
						c.usingSpecial = false;
						c.getItems().updateSpecialBar();
						c.stopMovement();
						c.playerIndex = 0;
						return;
					}	
				}
				
				if(!c.usingMagic) {
					c.startAnimation(getWepAnim(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase()));
					c.mageFollow = false;
					c.stopMovement();
				} else {
					c.startAnimation(c.MAGIC_SPELLS[c.spellId][2]);
					c.mageFollow = true;
					c.followId = c.playerIndex;
				}
				Server.playerHandler.players[i].underAttackBy = c.playerId;
				Server.playerHandler.players[i].logoutDelay = System.currentTimeMillis();
				Server.playerHandler.players[i].singleCombatDelay = System.currentTimeMillis();
				Server.playerHandler.players[i].killerId = c.playerId;
				c.lastArrowUsed = 0;
				c.rangeItemUsed = 0;
				if(!usingBow &amp;&amp; !c.usingMagic &amp;&amp; !usingOtherRangeWeapons) { // melee hit delay
					c.followId = Server.playerHandler.players[c.playerIndex].playerId;
					c.getPA().followPlayer();
					c.stopMovement();
					c.hitDelay = getHitDelay(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase());
					c.delayedDamage = Misc.random(calculateMeleeMaxHit());
					c.projectileStage = 0;
					c.oldPlayerIndex = i;
				}
								
				if(usingBow &amp;&amp; !usingOtherRangeWeapons &amp;&amp; !c.usingMagic || usingCross) { // range hit delay
					if(c.playerEquipment[c.playerWeapon] &gt;= 4212 &amp;&amp; c.playerEquipment[c.playerWeapon] &lt;= 4223) {
						c.rangeItemUsed = c.playerEquipment[c.playerWeapon];
						c.crystalBowArrowCount++;
						c.stopMovement();
					} else {
						c.rangeItemUsed = c.playerEquipment[c.playerArrows];
						c.getItems().deleteArrow();
					}
					if (c.fightMode == 2)
						c.attackTimer--;
					if (usingCross)
						c.usingBow = true;
					c.usingBow = true;
					c.followId = Server.playerHandler.players[c.playerIndex].playerId;
					c.getPA().followPlayer();
					c.lastWeaponUsed = c.playerEquipment[c.playerWeapon];
					c.lastArrowUsed = c.playerEquipment[c.playerArrows];
					c.gfx100(getRangeStartGFX());	
					c.hitDelay = getHitDelay(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase());
					c.projectileStage = 1;
					c.oldPlayerIndex = i;
					fireProjectilePlayer();
				}
											
				if(usingOtherRangeWeapons) {	// knives, darts, etc hit delay
					c.rangeItemUsed = c.playerEquipment[c.playerWeapon];
					c.getItems().deleteEquipment();
					c.usingRangeWeapon = true;
					c.followId = Server.playerHandler.players[c.playerIndex].playerId;
					c.getPA().followPlayer();
					c.stopMovement();
					c.gfx100(getRangeStartGFX());
					if (c.fightMode == 2)
						c.attackTimer--;
					c.hitDelay = getHitDelay(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase());
					c.projectileStage = 1;
					c.oldPlayerIndex = i;
					fireProjectilePlayer();
				}

				if(c.usingMagic) {	// magic hit delay
					int pX = c.getX();
					int pY = c.getY();
					int nX = Server.playerHandler.players[i].getX();
					int nY = Server.playerHandler.players[i].getY();
					int offX = (pY - nY)* -1;
					int offY = (pX - nX)* -1;
					c.castingMagic = true;
					c.stopMovement();
					c.projectileStage = 2;
					if(c.MAGIC_SPELLS[c.spellId][3] &gt; 0) {
						if(getStartGfxHeight() == 100) {
							c.gfx100(c.MAGIC_SPELLS[c.spellId][3]);
						} else {
							c.gfx0(c.MAGIC_SPELLS[c.spellId][3]);
						}
					}
					if(c.MAGIC_SPELLS[c.spellId][4] &gt; 0) {
						c.getPA().createPlayersProjectile(pX, pY, offX, offY, 50, 78, c.MAGIC_SPELLS[c.spellId][4], getStartHeight(), getEndHeight(), -i - 1, getStartDelay());
						c.stopMovement();
					}
					if (c.autocastId &gt; 0) {
						c.followId = c.playerIndex;
						//c.followDistance = 5;
					}	
					c.hitDelay = getHitDelay(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase());
					c.oldPlayerIndex = i;
					c.oldSpellId = c.spellId;
                   			c.spellId = 0;
					Client o = (Client)Server.playerHandler.players[i];
					if(c.MAGIC_SPELLS[c.oldSpellId][0] == 12891 &amp;&amp; o.isMoving) {
						//c.sendMessage(&quot;Barrage projectile..&quot;);
						c.getPA().createPlayersProjectile(pX, pY, offX, offY, 50, 85, 368, 25, 25, -i - 1, getStartDelay());
					}
					if(Misc.random(mageAtk()) &gt; Misc.random(o.getCombat().mageDef())) {
						c.magicFailed = false;
					} else if(Misc.random(mageAtk()) &lt; Misc.random(o.getCombat().mageDef())) {
						c.magicFailed = true;
					}
					int freezeDelay = getFreezeTime();//freeze time
					if(freezeDelay &gt; 0 &amp;&amp; Server.playerHandler.players[i].freezeTimer &lt;= -3 &amp;&amp; !c.magicFailed) { 
						Server.playerHandler.players[i].freezeTimer = freezeDelay;
						o.resetWalkingQueue();
						o.sendMessage(&quot;You have been frozen.&quot;);
						o.frozenBy = c.playerId;
					}
					if (!c.autocasting &amp;&amp; c.spellId &lt;= 0)
						c.playerIndex = 0;
						c.stopMovement();
				}

				if(usingBow &amp;&amp; Config.CRYSTAL_BOW_DEGRADES) { // crystal bow degrading
					if(c.playerEquipment[c.playerWeapon] == 4212) { // new crystal bow becomes full bow on the first shot
						c.getItems().wearItem(4214, 1, 3);
					}
					
					if(c.crystalBowArrowCount &gt;= 250){
						switch(c.playerEquipment[c.playerWeapon]) {
							
							case 4223: // 1/10 bow
							c.getItems().wearItem(-1, 1, 3);
							c.sendMessage(&quot;Your crystal bow has fully degraded.&quot;);
							if(!c.getItems().addItem(4207, 1)) {
								Server.itemHandler.createGroundItem(c, 4207, c.getX(), c.getY(), 1, c.getId());
							}
							c.crystalBowArrowCount = 0;
							break;
							
							default:
							c.getItems().wearItem(++c.playerEquipment[c.playerWeapon], 1, 3);
							c.sendMessage(&quot;Your crystal bow degrades.&quot;);
							c.crystalBowArrowCount = 0;
							break;
						}
					}	
				}
			}
		}
	}
		}[/code]

Hey guys so i am making a rs-remake 2006 Player killing server and combat&#39;s finished accept for 1 problem i cannot fix :( the problem is when ever you cast a spell normally to a player, your character automatically runs up to your opponent.. i need help adding a method to stop the movement. i got a hint (get distance) i am not good with making methods. please help. also, the person said it&#39;s in attack player which i knew.. lol. here&#39;s the attack player. void in combat assistant ABOVE</description>
    
    <lastBuildDate>Fri, 22 Jun 2012 18:50:02 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/pi-combat-assistant-magic-casting-problen/446385.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>PI Combat assistant magic casting problen</title>
        <dc:creator><![CDATA[@mr_extremez mr extremez]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mr_extremez">@mr_extremez</a> wrote:</p>
          <blockquote>
              <p>[quote=“shank beast, post:5, topic:446385”]thanksi still have a annoying problem, i fucking don’t have madeithere1 in my combat assistant and whenever i add a code it doesnt find symbol i shud just quit lol[/quote]Way to be positive <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-combat-assistant-magic-casting-problen/446385/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-combat-assistant-magic-casting-problen/446385/6</link>
        <pubDate>Fri, 22 Jun 2012 18:50:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-446385-6</guid>
        <source url="https://forum.moparisthebest.com/t/pi-combat-assistant-magic-casting-problen/446385.rss">PI Combat assistant magic casting problen</source>
      </item>
      <item>
        <title>PI Combat assistant magic casting problen</title>
        <dc:creator><![CDATA[@shank_beast shank beast]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/shank_beast">@shank_beast</a> wrote:</p>
          <blockquote>
              <p>thanksi still have a annoying problem, i fucking don’t have madeithere1 in my combat assistant and whenever i add a code it doesnt find symbol i shud just quit lol</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-combat-assistant-magic-casting-problen/446385/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-combat-assistant-magic-casting-problen/446385/5</link>
        <pubDate>Fri, 22 Jun 2012 18:10:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-446385-5</guid>
        <source url="https://forum.moparisthebest.com/t/pi-combat-assistant-magic-casting-problen/446385.rss">PI Combat assistant magic casting problen</source>
      </item>
      <item>
        <title>PI Combat assistant magic casting problen</title>
        <dc:creator><![CDATA[@mr_extremez mr extremez]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mr_extremez">@mr_extremez</a> wrote:</p>
          <blockquote>
              <p>If you can’t do this your remake will never suceed…</p>
<p>But…</p>
<p>Either this, <a href="http://www.rune-serber.org/runescape-development/rs2-server/snippets/337978-pi-diagonal-attack-fix-pi.html" rel="nofollow noopener">http://www.rune-serber.org/runescape-development/rs2-server/snippets/337978-pi-diagonal-attack-fix-pi.html</a></p>
<p>or <a href="http://www.rune-serber.org/runescape-development/rs2-server/snippets/378386-pi-fixing-npc-attacking-distance.html" rel="nofollow noopener">http://www.rune-serber.org/runescape-development/rs2-server/snippets/378386-pi-fixing-npc-attacking-distance.html</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-combat-assistant-magic-casting-problen/446385/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-combat-assistant-magic-casting-problen/446385/4</link>
        <pubDate>Fri, 22 Jun 2012 16:52:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-446385-4</guid>
        <source url="https://forum.moparisthebest.com/t/pi-combat-assistant-magic-casting-problen/446385.rss">PI Combat assistant magic casting problen</source>
      </item>
      <item>
        <title>PI Combat assistant magic casting problen</title>
        <dc:creator><![CDATA[@shank_beast shank beast]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/shank_beast">@shank_beast</a> wrote:</p>
          <blockquote>
              <p>[quote=“Arcik, post:2, topic:446385”]You could add a freeze delay if you get me? like make the player freeze and cast spell from that distance. Add it to the actual spell properties to freeze player and only move apon click.</p>
<p>I can’t remeber how I did it on my 317 (sorry). There are other ways but this worked perfect for me. Just make sure to add the region stuff too if you try this.[/quote]</p>
<p>Too bad i suck at making methods D: thanks tho <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-combat-assistant-magic-casting-problen/446385/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-combat-assistant-magic-casting-problen/446385/3</link>
        <pubDate>Fri, 22 Jun 2012 16:22:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-446385-3</guid>
        <source url="https://forum.moparisthebest.com/t/pi-combat-assistant-magic-casting-problen/446385.rss">PI Combat assistant magic casting problen</source>
      </item>
      <item>
        <title>PI Combat assistant magic casting problen</title>
        <dc:creator><![CDATA[@Ashi Ashi]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ashi">@Ashi</a> wrote:</p>
          <blockquote>
              <p>You could add a freeze delay if you get me? like make the player freeze and cast spell from that distance. Add it to the actual spell properties to freeze player and only move apon click.</p>
<p>I can’t remeber how I did it on my 317 (sorry). There are other ways but this worked perfect for me. Just make sure to add the region stuff too if you try this.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-combat-assistant-magic-casting-problen/446385/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-combat-assistant-magic-casting-problen/446385/2</link>
        <pubDate>Fri, 22 Jun 2012 16:07:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-446385-2</guid>
        <source url="https://forum.moparisthebest.com/t/pi-combat-assistant-magic-casting-problen/446385.rss">PI Combat assistant magic casting problen</source>
      </item>
      <item>
        <title>PI Combat assistant magic casting problen</title>
        <dc:creator><![CDATA[@shank_beast shank beast]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/shank_beast">@shank_beast</a> wrote:</p>
          <blockquote>
              <p>[code]</p>
<pre><code>	[code=]public void attackPlayer(int i) {

	if (Server.playerHandler.players[i] != null) {
		
		if (Server.playerHandler.players[i] != null) {
			
			if (Server.playerHandler.players[i].isDead) {
				resetPlayerAttack();
				return;
			}
			
			if(c.respawnTimer &gt; 0 || Server.playerHandler.players[i].respawnTimer &gt; 0) {
				resetPlayerAttack();
				return;
			}
			
			if(!c.getCombat().checkReqs()) {
				return;
			}
		
		boolean sameSpot = c.absX == Server.playerHandler.players[i].getX() &amp;&amp; c.absY == Server.playerHandler.players[i].getY();
		if(!c.goodDistance(Server.playerHandler.players[i].getX(), Server.playerHandler.players[i].getY(), c.getX(), c.getY(), 25) &amp;&amp; !sameSpot) {
			resetPlayerAttack();
			return;
		}

		if(Server.playerHandler.players[i].respawnTimer &gt; 0) {
			Server.playerHandler.players[i].playerIndex = 0;
			resetPlayerAttack();
			return;
		}
		
		if (Server.playerHandler.players[i].heightLevel != c.heightLevel) {
			resetPlayerAttack();
			return;
		}
		
		c.followId = i;
		c.followId2 = 0;
		if(c.attackTimer &lt;= 0) {
			c.usingBow = false;
			c.specEffect = 0;
			c.usingRangeWeapon = false;
			c.rangeItemUsed = 0;
			boolean usingBow = false;
			boolean usingArrows = false;
			boolean usingOtherRangeWeapons = false;
			boolean usingCross = c.playerEquipment[c.playerWeapon] == 9185;
			c.projectileStage = 0;
			if (c.autocasting) {
				c.spellId = c.autocastId;
				c.usingMagic = true;
				c.stopMovement();
			}
			if(c.spellId &gt; 0) {
                c.usingMagic = true;
            }
			if (c.absX == Server.playerHandler.players[i].absX &amp;&amp; c.absY == Server.playerHandler.players[i].absY) {
				if (c.freezeTimer &gt; 0) {
					c.stopMovement();
					resetPlayerAttack();
					return;
				}	
				c.followId = i;
				c.attackTimer = 0;
				return;
			}
			
			if(!c.usingMagic){
				for (int bowId : c.BOWS) {
					if(c.playerEquipment[c.playerWeapon] == bowId) {
						usingBow = true;
						for (int arrowId : c.ARROWS) {
							if(c.playerEquipment[c.playerArrows] == arrowId) {
								usingArrows = true;
							}
						}
					}
				}				
			
				for (int otherRangeId : c.OTHER_RANGE_WEAPONS) {
					if(c.playerEquipment[c.playerWeapon] == otherRangeId) {
						usingOtherRangeWeapons = true;
					}
				}
			}

			if (c.autocasting) {
				c.stopMovement();
				c.spellId = c.autocastId;
				c.usingMagic = true;
			}
			//c.sendMessage("Made it here2.");
			if(c.spellId &gt; 0) {
                c.usingMagic = true;
	    c.stopMovement();
            }
			c.attackTimer = getAttackDelay(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase());

			if(c.duelRule[9]){
			boolean canUseWeapon = false;
				for(int funWeapon: Config.FUN_WEAPONS) {
					if(c.playerEquipment[c.playerWeapon] == funWeapon) {
						canUseWeapon = true;
					}
				}
				if(!canUseWeapon) {
					c.sendMessage("You can only use fun weapons in this duel!");
					resetPlayerAttack();
					return;
				}
			}
			//c.sendMessage("Made it here3.");
			if(c.duelRule[2] &amp;&amp; (usingBow || usingOtherRangeWeapons)) {
				c.sendMessage("Range has been disabled in this duel!");
				return;
			}
			if(c.duelRule[3] &amp;&amp; (!usingBow &amp;&amp; !usingOtherRangeWeapons &amp;&amp; !c.usingMagic)) {
				c.sendMessage("Melee has been disabled in this duel!");
				return;
			}
			
			if(c.duelRule[4] &amp;&amp; c.usingMagic) {
				c.sendMessage("Magic has been disabled in this duel!");
				resetPlayerAttack();
				return;
			}
			
			if((!c.goodDistance(c.getX(), c.getY(), Server.playerHandler.players[i].getX(), Server.playerHandler.players[i].getY(), 4) &amp;&amp; (usingOtherRangeWeapons &amp;&amp; !usingBow &amp;&amp; !c.usingMagic)) 
			|| (!c.goodDistance(c.getX(), c.getY(), Server.playerHandler.players[i].getX(), Server.playerHandler.players[i].getY(), 2) &amp;&amp; (!usingOtherRangeWeapons &amp;&amp; usingHally() &amp;&amp; !usingBow &amp;&amp; !c.usingMagic))
			|| (!c.goodDistance(c.getX(), c.getY(), Server.playerHandler.players[i].getX(), Server.playerHandler.players[i].getY(), getRequiredDistance()) &amp;&amp; (!usingOtherRangeWeapons &amp;&amp; !usingHally() &amp;&amp; !usingBow &amp;&amp; !c.usingMagic)) 
			|| (!c.goodDistance(c.getX(), c.getY(), Server.playerHandler.players[i].getX(), Server.playerHandler.players[i].getY(), 10) &amp;&amp; (usingBow || c.usingMagic))) {
				//c.sendMessage("Setting attack timer to 1");
				c.attackTimer = 2;
				c.stopMovement();
				if (!usingBow &amp;&amp; !c.usingMagic &amp;&amp; !usingOtherRangeWeapons &amp;&amp; c.freezeTimer &gt; 0)
					resetPlayerAttack();
					c.stopMovement();
				return;
			}
			if(!usingCross &amp;&amp; !usingArrows &amp;&amp; usingBow &amp;&amp; (c.playerEquipment[c.playerWeapon] &lt; 4212 || c.playerEquipment[c.playerWeapon] &gt; 4223) &amp;&amp; !c.usingMagic) {
				c.sendMessage("You have run out of arrows!");
				c.stopMovement();
				resetPlayerAttack();
				return;
			}
			if(correctBowAndArrows() &lt; c.playerEquipment[c.playerArrows] &amp;&amp; Config.CORRECT_ARROWS &amp;&amp; usingBow &amp;&amp; !usingCrystalBow() &amp;&amp; c.playerEquipment[c.playerWeapon] != 9185 &amp;&amp; !c.usingMagic) {
				c.sendMessage("You can't use "+c.getItems().getItemName(c.playerEquipment[c.playerArrows]).toLowerCase()+"s with a "+c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase()+".");
				c.stopMovement();
				resetPlayerAttack();
				return;
			}
			if (c.playerEquipment[c.playerWeapon] == 9185 &amp;&amp; !properBolts() &amp;&amp; !c.usingMagic) {
				c.sendMessage("You must use bolts with a crossbow.");
				c.stopMovement();
				resetPlayerAttack();
				return;				
			}
			
			
			if(usingBow || c.usingMagic || usingOtherRangeWeapons || usingHally()) {
				c.stopMovement();
			}
			

			if(!checkMagicReqs(c.spellId)) {
				c.stopMovement();
				c.npcIndex = 0;
				return;
			}
			
			if(!checkMagicReqs(c.spellId)) {
				c.stopMovement();
				resetPlayerAttack();
				return;
			}

			if(!checkMagicReqs(c.spellId)) {
				c.stopMovement();
				c.npcIndex = 0;
				return;
			}
			
			c.faceUpdate(i+32768);
			
			if(c.duelStatus != 5) {
				if(!c.attackedPlayers.contains(c.playerIndex) &amp;&amp; !Server.playerHandler.players[c.playerIndex].attackedPlayers.contains(c.playerId)) {
					c.attackedPlayers.add(c.playerIndex);
					c.isSkulled = true;
					c.skullTimer = Config.SKULL_TIMER;
					c.headIconPk = 0;
					c.getPA().requestUpdates();
				} 
			}
			c.specAccuracy = 1.0;
			c.specDamage = 1.0;
			c.delayedDamage = c.delayedDamage2 = 0;
			if(c.usingSpecial &amp;&amp; !c.usingMagic) {
				if(c.duelRule[10] &amp;&amp; c.duelStatus == 5) {
					c.sendMessage("Special attacks have been disabled during this duel!");
					c.usingSpecial = false;
					c.stopMovement();
					c.getItems().updateSpecialBar();
					resetPlayerAttack();
					return;
				}
				if(checkSpecAmount(c.playerEquipment[c.playerWeapon])){
					c.lastArrowUsed = c.playerEquipment[c.playerArrows];
					activateSpecial(c.playerEquipment[c.playerWeapon], i);
					c.followId = c.playerIndex;
					return;
				} else {
					c.sendMessage("You don't have the required special energy to use this attack.");
					c.usingSpecial = false;
					c.getItems().updateSpecialBar();
					c.stopMovement();
					c.playerIndex = 0;
					return;
				}	
			}
			
			if(!c.usingMagic) {
				c.startAnimation(getWepAnim(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase()));
				c.mageFollow = false;
				c.stopMovement();
			} else {
				c.startAnimation(c.MAGIC_SPELLS[c.spellId][2]);
				c.mageFollow = true;
				c.followId = c.playerIndex;
			}
			Server.playerHandler.players[i].underAttackBy = c.playerId;
			Server.playerHandler.players[i].logoutDelay = System.currentTimeMillis();
			Server.playerHandler.players[i].singleCombatDelay = System.currentTimeMillis();
			Server.playerHandler.players[i].killerId = c.playerId;
			c.lastArrowUsed = 0;
			c.rangeItemUsed = 0;
			if(!usingBow &amp;&amp; !c.usingMagic &amp;&amp; !usingOtherRangeWeapons) { // melee hit delay
				c.followId = Server.playerHandler.players[c.playerIndex].playerId;
				c.getPA().followPlayer();
				c.stopMovement();
				c.hitDelay = getHitDelay(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase());
				c.delayedDamage = Misc.random(calculateMeleeMaxHit());
				c.projectileStage = 0;
				c.oldPlayerIndex = i;
			}
							
			if(usingBow &amp;&amp; !usingOtherRangeWeapons &amp;&amp; !c.usingMagic || usingCross) { // range hit delay
				if(c.playerEquipment[c.playerWeapon] &gt;= 4212 &amp;&amp; c.playerEquipment[c.playerWeapon] &lt;= 4223) {
					c.rangeItemUsed = c.playerEquipment[c.playerWeapon];
					c.crystalBowArrowCount++;
					c.stopMovement();
				} else {
					c.rangeItemUsed = c.playerEquipment[c.playerArrows];
					c.getItems().deleteArrow();
				}
				if (c.fightMode == 2)
					c.attackTimer--;
				if (usingCross)
					c.usingBow = true;
				c.usingBow = true;
				c.followId = Server.playerHandler.players[c.playerIndex].playerId;
				c.getPA().followPlayer();
				c.lastWeaponUsed = c.playerEquipment[c.playerWeapon];
				c.lastArrowUsed = c.playerEquipment[c.playerArrows];
				c.gfx100(getRangeStartGFX());	
				c.hitDelay = getHitDelay(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase());
				c.projectileStage = 1;
				c.oldPlayerIndex = i;
				fireProjectilePlayer();
			}
										
			if(usingOtherRangeWeapons) {	// knives, darts, etc hit delay
				c.rangeItemUsed = c.playerEquipment[c.playerWeapon];
				c.getItems().deleteEquipment();
				c.usingRangeWeapon = true;
				c.followId = Server.playerHandler.players[c.playerIndex].playerId;
				c.getPA().followPlayer();
				c.stopMovement();
				c.gfx100(getRangeStartGFX());
				if (c.fightMode == 2)
					c.attackTimer--;
				c.hitDelay = getHitDelay(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase());
				c.projectileStage = 1;
				c.oldPlayerIndex = i;
				fireProjectilePlayer();
			}

			if(c.usingMagic) {	// magic hit delay
				int pX = c.getX();
				int pY = c.getY();
				int nX = Server.playerHandler.players[i].getX();
				int nY = Server.playerHandler.players[i].getY();
				int offX = (pY - nY)* -1;
				int offY = (pX - nX)* -1;
				c.castingMagic = true;
				c.stopMovement();
				c.projectileStage = 2;
				if(c.MAGIC_SPELLS[c.spellId][3] &gt; 0) {
					if(getStartGfxHeight() == 100) {
						c.gfx100(c.MAGIC_SPELLS[c.spellId][3]);
					} else {
						c.gfx0(c.MAGIC_SPELLS[c.spellId][3]);
					}
				}
				if(c.MAGIC_SPELLS[c.spellId][4] &gt; 0) {
					c.getPA().createPlayersProjectile(pX, pY, offX, offY, 50, 78, c.MAGIC_SPELLS[c.spellId][4], getStartHeight(), getEndHeight(), -i - 1, getStartDelay());
					c.stopMovement();
				}
				if (c.autocastId &gt; 0) {
					c.followId = c.playerIndex;
					//c.followDistance = 5;
				}	
				c.hitDelay = getHitDelay(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase());
				c.oldPlayerIndex = i;
				c.oldSpellId = c.spellId;
               			c.spellId = 0;
				Client o = (Client)Server.playerHandler.players[i];
				if(c.MAGIC_SPELLS[c.oldSpellId][0] == 12891 &amp;&amp; o.isMoving) {
					//c.sendMessage("Barrage projectile..");
					c.getPA().createPlayersProjectile(pX, pY, offX, offY, 50, 85, 368, 25, 25, -i - 1, getStartDelay());
				}
				if(Misc.random(mageAtk()) &gt; Misc.random(o.getCombat().mageDef())) {
					c.magicFailed = false;
				} else if(Misc.random(mageAtk()) &lt; Misc.random(o.getCombat().mageDef())) {
					c.magicFailed = true;
				}
				int freezeDelay = getFreezeTime();//freeze time
				if(freezeDelay &gt; 0 &amp;&amp; Server.playerHandler.players[i].freezeTimer &lt;= -3 &amp;&amp; !c.magicFailed) { 
					Server.playerHandler.players[i].freezeTimer = freezeDelay;
					o.resetWalkingQueue();
					o.sendMessage("You have been frozen.");
					o.frozenBy = c.playerId;
				}
				if (!c.autocasting &amp;&amp; c.spellId &lt;= 0)
					c.playerIndex = 0;
					c.stopMovement();
			}

			if(usingBow &amp;&amp; Config.CRYSTAL_BOW_DEGRADES) { // crystal bow degrading
				if(c.playerEquipment[c.playerWeapon] == 4212) { // new crystal bow becomes full bow on the first shot
					c.getItems().wearItem(4214, 1, 3);
				}
				
				if(c.crystalBowArrowCount &gt;= 250){
					switch(c.playerEquipment[c.playerWeapon]) {
						
						case 4223: // 1/10 bow
						c.getItems().wearItem(-1, 1, 3);
						c.sendMessage("Your crystal bow has fully degraded.");
						if(!c.getItems().addItem(4207, 1)) {
							Server.itemHandler.createGroundItem(c, 4207, c.getX(), c.getY(), 1, c.getId());
						}
						c.crystalBowArrowCount = 0;
						break;
						
						default:
						c.getItems().wearItem(++c.playerEquipment[c.playerWeapon], 1, 3);
						c.sendMessage("Your crystal bow degrades.");
						c.crystalBowArrowCount = 0;
						break;
					}
				}	
			}
		}
	}
}
	}[/code]
</code></pre>
<p>Hey guys so i am making a rs-remake 2006 Player killing server and combat’s finished accept for 1 problem i cannot fix <img src="https://forum.moparisthebest.com/images/emoji/twitter/frowning.png?v=5" title=":frowning:" class="emoji" alt=":frowning:"> the problem is when ever you cast a spell normally to a player, your character automatically runs up to your opponent… i need help adding a method to stop the movement. i got a hint (get distance) i am not good with making methods. please help. also, the person said it’s in attack player which i knew… lol. here’s the attack player. void in combat assistant ABOVE</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-combat-assistant-magic-casting-problen/446385/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-combat-assistant-magic-casting-problen/446385/1</link>
        <pubDate>Fri, 22 Jun 2012 15:48:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-446385-1</guid>
        <source url="https://forum.moparisthebest.com/t/pi-combat-assistant-magic-casting-problen/446385.rss">PI Combat assistant magic casting problen</source>
      </item>
  </channel>
</rss>
