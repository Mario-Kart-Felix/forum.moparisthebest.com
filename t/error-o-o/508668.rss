<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Error ? o.o</title>
    <link>https://forum.moparisthebest.com/t/error-o-o/508668</link>
    <description>Parse error: syntax error, unexpected &#39;&lt;&#39; in /home/penthium/public_html/donate/paypal.php on line 120
I get this error when i tried to add a background + box to my &quot;success&quot; page when i added this code 

[code]      &lt;!-- Colors and Style --&gt;
	&lt;style type=&quot;text/css&quot;&gt;
			body {
				background-color: #363434;
				color: white;
				font-family: sans-serif;
			}
			
			
			div#box_body {
				width: 650px;
				/* Centers the box */
				margin-left: auto;
				margin-right: auto;
				
				/* Round the Edges */
				-webkit-border-radius: 5px;
				-moz-border-radius: 5px;
				-o-border-radius: 5px;
				
				/* Border */
				border: 1px solid white;
				
				/* Background */
				background-color: #540001;
				
				/* Padding and other properties */
				margin-top: 10px;
				margin-bottom: 10px;
				padding: 5px;
				
				-webkit-box-shadow: 3px 8px #000;
				-moz-box-shadow: 3px 8px #000;
				-o-box-shadow: 3px 8px #000;
			}
			
			header.box_header {
				font-size: 28px;
				text-align: center;
				margin: 5px;
			}
			
			form.box_donate_form {
				margin-left: auto;
				margin-right: auto;
				width: 75%;
			}
			
			tr {
				padding-top: 5px;
				padding-bottom: 5px;
			}
			
			input[type=&quot;submit&quot;] {
				background: #5d0000;
				color: white;
				border: 0px;
				padding: 5px 10px;
				border-top: 1px solid #a40000;
				-webkit-border-radius: 5px;
				-moz-border-radius: 5px;
				-o-border-radius: 5px;
			}
			
			input[type=&quot;submit&quot;]:hover {
				background: #9c0000;
				border-top: 1px solid #d20000;				
				-webkit-transition: all 0.5s;
				-moz-transition: all 0.5s;
				-o-transition: all 0.5s;
				cursor: hand;
			}
			
			input[type=&quot;text&quot;] {
				background: #530000;
				color: white;
				padding: 5px 10px;
				border: 1px solid #a40000;
				-webkit-border-radius: 5px;
				-moz-border-radius: 5px;
				-o-border-radius: 5px;
			}
		&lt;/style&gt;
	&lt;/head&gt;
	&lt;body&gt;
		&lt;div id=&quot;box_body&quot;&gt;
			&lt;header class=&quot;box_header&quot;&gt;Donate&lt;/header&gt;
			&lt;center&gt;
				&lt;p&gt;
				&lt;b&gt;SUCCESS&lt;/b&gt;
                                You&#39;ve successfully donated to Penthium. Type ::redeem ingame to receive your Items / Status !
				&lt;/p&gt;
				&lt;p&gt;;[/code]

Thats the whole code

[code]&lt;?php
 
/*  PHP Paypal IPN Integration Class Demonstration File
 *  4.16.2005 - Micah Carrick, email@micahcarrick.com
 *
 *  This file demonstrates the usage of paypal.class.php, a class designed  
 *  to aid in the interfacing between your website, paypal, and the instant
 *  payment notification (IPN) interface.  This single file serves as 4
 *  virtual pages depending on the &quot;action&quot; varialble passed in the URL. It&#39;s
 *  the processing page which processes form data being submitted to paypal, it
 *  is the page paypal returns a user to upon success, it&#39;s the page paypal
 *  returns a user to upon canceling an order, and finally, it&#39;s the page that
 *  handles the IPN request from Paypal.
 *
 *  I tried to comment this file, aswell as the acutall class file, as well as
 *  I possibly could.  Please email me with questions, comments, and suggestions.
 *  See the header of paypal.class.php for additional resources and information.
*/
session_start();
$base = &quot;/var/www/html/&quot;;
include(&quot;db.php&quot;);
require_once(&#39;paypal.class.php&#39;);  // include the class file
$p = new paypal_class;             // initiate an instance of the class
//$p-&gt;paypal_url = &#39;https://www.sandbox.paypal.com/cgi-bin/webscr&#39;;   // testing paypal url
$p-&gt;paypal_url = &#39;https://www.paypal.com/cgi-bin/webscr&#39;;     // paypal url
           
// setup a variable for this script (ie: &#39;http://www.micahcarrick.com/paypal.php&#39;)
$this_script = &#39;http://&#39;.$_SERVER[&#39;HTTP_HOST&#39;].$_SERVER[&#39;PHP_SELF&#39;];
 
// if there is not action variable, set the default action of &#39;process&#39;
if (empty($_GET[&#39;action&#39;])) $_GET[&#39;action&#39;] = &#39;process&#39;;  

if (empty($_GET[&#39;amm&#39;])) $_GET[&#39;amm&#39;] = &#39;1&#39;;

$EMAIL = &#39;rspspenthium@gmail.com&#39;; 
 
 
switch ($_GET[&#39;action&#39;]) {
   
   case &#39;process&#39;:      // Process and order...
 
if (empty($_GET[&#39;prod&#39;])){
header(&quot;Location: donate.php&quot;);
 exit;
}

if (empty($_GET[&#39;username&#39;])){
if($_GET[&#39;action&#39;] = &#39;process&#39;){
header(&quot;Location: donate.php&quot;);
 exit;
}
} 
      //if(!isset($_SESSION[&quot;username&quot;])) {
      //    header(&quot;Location: login.php&quot;);
      //    exit;
      //}
 
      //include(&quot;include.php&quot;);
//die(&quot;donation is temporarily disabled!&quot;);
 
      // There should be no output at this point.  To process the POST data,
      // the submit_paypal_post() function will output all the HTML tags which
      // contains a FORM which is submited instantaneously using the BODY onload
      // attribute.  In other words, don&#39;t echo or printf anything when you&#39;re
      // going to be calling the submit_paypal_post() function.
 
      // This is where you would have your form validation  and all that jazz.
      // You would take your POST vars and load them into the class like below,
      // only using the POST values instead of constant string expressions.
 
      // For example, after ensureing all the POST variables from your custom
      // order form are valid, you might have:
      //
      // $p-&gt;add_field(&#39;first_name&#39;, $_POST[&#39;first_name&#39;]);
      // $p-&gt;add_field(&#39;last_name&#39;, $_POST[&#39;last_name&#39;]);
	
	$price = &#39;3.00&#39;;
		if($_GET[&#39;prod&#39;] == 1)
			$price = &#39;0.20&#39;;
		if($_GET[&#39;prod&#39;] == 2)
			$price = &#39;9.00&#39;;
		if($_GET[&#39;prod&#39;] == 3)
			$price = &#39;13.00&#39;;
	        if($_GET[&#39;prod&#39;] == 4)
			$price = &#39;3.00&#39;;
		if($_GET[&#39;prod&#39;] == 5)
			$price = &#39;3.00&#39;;
		if($_GET[&#39;prod&#39;] == 6)
			$price = &#39;3.00&#39;;
                if($_GET[&#39;prod&#39;] == 7)
			$price = &#39;3.00&#39;;
		if($_GET[&#39;prod&#39;] == 8)
			$price = &#39;4.00&#39;;
      
      $p-&gt;add_field(&#39;custom&#39;, $_GET[&#39;username&#39;]);
      $p-&gt;add_field(&#39;business&#39;, $EMAIL);
      $p-&gt;add_field(&#39;return&#39;, $this_script.&#39;?action=success&#39;);
      $p-&gt;add_field(&#39;cancel_return&#39;, $this_script.&#39;?action=cancel&#39;);
      $p-&gt;add_field(&#39;notify_url&#39;, $this_script.&#39;?action=ipn&#39;);
      $p-&gt;add_field(&#39;item_name&#39;, &#39;Package &#39;.$_GET[&#39;prod&#39;]);
	  $p-&gt;add_field(&#39;item_number&#39;, $_GET[&#39;prod&#39;]);
      $p-&gt;add_field(&#39;currency_code&#39;, &#39;USD&#39;);
      $p-&gt;add_field(&#39;amount&#39;, $price);
      //$p-&gt;add_field(&#39;quantity&#39;, $_GET[&#39;amm&#39;]);
      $p-&gt;add_field(&#39;lc&#39;, &#39;GB&#39;);
      $p-&gt;submit_paypal_post(); // submit the fields to paypal
      //$p-&gt;dump_fields();      // for debugging, output a table of all the fields
      break;
     
   case &#39;success&#39;:      // Order was successful...
   
      // This is where you would probably want to thank the user for their order
      // or what have you.  The order information at this point is in POST
      // variables.  However, you don&#39;t want to &quot;process&quot; the order until you
      // get validation from the IPN.  That&#39;s where you would have the code to
      // email an admin, update the database with payment status, activate a
      // membership, etc.  
 
      //include(&quot;include.php&quot;);
      &lt;!-- Colors and Style --&gt;
	&lt;style type=&quot;text/css&quot;&gt;
			body {
				background-color: #363434;
				color: white;
				font-family: sans-serif;
			}
			
			
			div#box_body {
				width: 650px;
				/* Centers the box */
				margin-left: auto;
				margin-right: auto;
				
				/* Round the Edges */
				-webkit-border-radius: 5px;
				-moz-border-radius: 5px;
				-o-border-radius: 5px;
				
				/* Border */
				border: 1px solid white;
				
				/* Background */
				background-color: #540001;
				
				/* Padding and other properties */
				margin-top: 10px;
				margin-bottom: 10px;
				padding: 5px;
				
				-webkit-box-shadow: 3px 8px #000;
				-moz-box-shadow: 3px 8px #000;
				-o-box-shadow: 3px 8px #000;
			}
			
			header.box_header {
				font-size: 28px;
				text-align: center;
				margin: 5px;
			}
			
			form.box_donate_form {
				margin-left: auto;
				margin-right: auto;
				width: 75%;
			}
			
			tr {
				padding-top: 5px;
				padding-bottom: 5px;
			}
			
			input[type=&quot;submit&quot;] {
				background: #5d0000;
				color: white;
				border: 0px;
				padding: 5px 10px;
				border-top: 1px solid #a40000;
				-webkit-border-radius: 5px;
				-moz-border-radius: 5px;
				-o-border-radius: 5px;
			}
			
			input[type=&quot;submit&quot;]:hover {
				background: #9c0000;
				border-top: 1px solid #d20000;				
				-webkit-transition: all 0.5s;
				-moz-transition: all 0.5s;
				-o-transition: all 0.5s;
				cursor: hand;
			}
			
			input[type=&quot;text&quot;] {
				background: #530000;
				color: white;
				padding: 5px 10px;
				border: 1px solid #a40000;
				-webkit-border-radius: 5px;
				-moz-border-radius: 5px;
				-o-border-radius: 5px;
			}
		&lt;/style&gt;
	&lt;/head&gt;
	&lt;body&gt;
		&lt;div id=&quot;box_body&quot;&gt;
			&lt;header class=&quot;box_header&quot;&gt;Donate&lt;/header&gt;
			&lt;center&gt;
				&lt;p&gt;
				&lt;b&gt;SUCCESS&lt;/b&gt;
                                You&#39;ve successfully donated to Penthium. Type ::redeem ingame to receive your Items / Status !
				&lt;/p&gt;
				&lt;p&gt;;

      // You could also simply re-direct them to another page, or your own
      // order status page which presents the user with the status of their
      // order based on a database (which can be modified with the IPN code
      // below).
     
      break;
     
   case &#39;cancel&#39;:       // Order was canceled...
 
      // The order was canceled before being completed.
      //include(&quot;include.php&quot;);
      echo &quot;&lt;h2&gt;Donation Cancelled&lt;/h2&gt;&lt;p&gt;Your donation was cancelled.&lt;/p&gt;&quot;;
     
      break;
     
   case &#39;ipn&#39;:          // Paypal is calling page for IPN validation...
   
      // It&#39;s important to remember that paypal calling this script.  There
      // is no output here.  This is where you validate the IPN data and if it&#39;s
      // valid, update your database to signify that the user has payed.  If
      // you try and use an echo or printf function here it&#39;s not going to do you
      // a bit of good.  This is on the &quot;backend&quot;.  That is why, by default, the
      // class logs all IPN data to a text file.
      if ($p-&gt;validate_ipn()) {
         
         // Payment has been recieved and IPN is verified.  This is where you
         // update your database to activate or process the order, or setup
         // the database with the user&#39;s order details, email an administrator,
         // etc.  You can access a slew of information via the ipn_data() array.
 
         // Check the paypal documentation for specifics on what information
         // is available in the IPN POST variables.  Basically, all the POST vars
         // which paypal sends, which we send back for validation, are now stored
         // in the ipn_data() array.
         //$fh = fopen(&quot;.ipn&quot;, &quot;a&quot;);
         //fwrite($fh, print_r($p-&gt;ipn_data, true));
         //fclose($fh);
 
         // For this example, we&#39;ll just email ourselves ALL the data.
         if($p-&gt;ipn_data[&quot;payment_status&quot;] != &quot;Completed&quot;) die();
 
         if($p-&gt;ipn_data[&quot;mc_gross&quot;] &gt; 0 &amp;&amp; strcmp ($p-&gt;ipn_data[&quot;business&quot;],$EMAIL) == 0) {
             $user = $p-&gt;ipn_data[&quot;custom&quot;];
             $date = $p-&gt;ipn_data[&quot;payment_date&quot;];
             $prodid = $p-&gt;ipn_data[&quot;item_number&quot;];
             $amount = $p-&gt;ipn_data[&quot;mc_gross&quot;];
             $amountTickets = 1;
   
             $user = str_replace(&quot;-&quot;, &quot;_&quot;, $user);
             $user = str_replace(&quot; &quot;, &quot;_&quot;, $user);
             $user = mysql_real_escape_string($user);
             mysql_query(&quot;INSERT INTO donation (username, time, productid, price, tickets) VALUES (&#39;&quot; . $user . &quot;&#39;, &#39;&quot; . $date . &quot;&#39;, &#39;&quot; . $prodid . &quot;&#39;, &quot; . $amount . &quot;, &quot; . $amountTickets . &quot;);&quot;);
             $fh = fopen(&quot;.ipnerr&quot;, &quot;a&quot;);
             fwrite($fh, mysql_error());
             fclose($fh);
         }
      }
      break;
 }    
 
?&gt;[/code]

Anyone tell me if there&#39;s a php block or how to fix it ? 
i tried with echo text here ; didnt work tho</description>
    
    <lastBuildDate>Sun, 17 Mar 2013 13:38:10 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/error-o-o/508668.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Error ? o.o</title>
        <dc:creator><![CDATA[@Lirimoo Lirimoo]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lirimoo">@Lirimoo</a> wrote:</p>
          <blockquote>
              <p>[quote=“SilentCJ, post:4, topic:508668”][quote author=Flame_ link=topic=626907.msg4261649#msg4261649 date=1363522435]<br>
This might be just me being ignorant, but why are you tacking another </p><p> at this end of the top piece of code?</p>
<p>[code]                </p><div>
<br>
Donate<br>
<br>
<p><br>
<b>SUCCESS</b><br>
You’ve successfully donated to Penthium. Type ::redeem ingame to receive your Items / Status !<br>
</p>
                 <p>;[/code] 
</p>
<p>[/quote]<br>
Looks like it was meant to be &lt;?php instead[/quote]</p>
</div>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/error-o-o/508668/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/error-o-o/508668/5</link>
        <pubDate>Sun, 17 Mar 2013 13:38:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-508668-5</guid>
        <source url="https://forum.moparisthebest.com/t/error-o-o/508668.rss">Error ? o.o</source>
      </item>
      <item>
        <title>Error ? o.o</title>
        <dc:creator><![CDATA[@SilentCJ SilentCJ]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silentcj">@SilentCJ</a> wrote:</p>
          <blockquote>
              <p>[quote=“Flame_, post:3, topic:508668”]This might be just me being ignorant, but why are you tacking another </p><p> at this end of the top piece of code?</p>
<p>[code]                </p><div>
<br>
Donate<br>
<br>
<p><br>
<b>SUCCESS</b><br>
You’ve successfully donated to Penthium. Type ::redeem ingame to receive your Items / Status !<br>
</p>
                 <p>;[/code][/quote]
</p>
<p>Looks like it was meant to be &lt;?php instead</p>
</div>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/error-o-o/508668/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/error-o-o/508668/4</link>
        <pubDate>Sun, 17 Mar 2013 12:16:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-508668-4</guid>
        <source url="https://forum.moparisthebest.com/t/error-o-o/508668.rss">Error ? o.o</source>
      </item>
      <item>
        <title>Error ? o.o</title>
        <dc:creator><![CDATA[@Flame3 John]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/flame3">@Flame3</a> wrote:</p>
          <blockquote>
              <p>This might be just me being ignorant, but why are you tacking another </p><p> at this end of the top piece of code?</p>
<p>[code]                </p><div>
<br>
Donate<br>
<br>
<p><br>
<b>SUCCESS</b><br>
You’ve successfully donated to Penthium. Type ::redeem ingame to receive your Items / Status !<br>
</p>
                 <p>;[/code]</p>
</div>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/error-o-o/508668/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/error-o-o/508668/3</link>
        <pubDate>Sun, 17 Mar 2013 12:13:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-508668-3</guid>
        <source url="https://forum.moparisthebest.com/t/error-o-o/508668.rss">Error ? o.o</source>
      </item>
      <item>
        <title>Error ? o.o</title>
        <dc:creator><![CDATA[@SilentCJ SilentCJ]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silentcj">@SilentCJ</a> wrote:</p>
          <blockquote>
              <p>End the PHP code block before starting the html…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/error-o-o/508668/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/error-o-o/508668/2</link>
        <pubDate>Sun, 17 Mar 2013 12:13:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-508668-2</guid>
        <source url="https://forum.moparisthebest.com/t/error-o-o/508668.rss">Error ? o.o</source>
      </item>
      <item>
        <title>Error ? o.o</title>
        <dc:creator><![CDATA[@Lirimoo Lirimoo]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lirimoo">@Lirimoo</a> wrote:</p>
          <blockquote>
              <p>Parse error: syntax error, unexpected ‘&lt;’ in /home/penthium/public_html/donate/paypal.php on line 120<br>
I get this error when i tried to add a background + box to my “success” page when i added this code</p>
<p>[code]      <br>
<br>
body {<br>
background-color: <span class="hashtag">#363434</span>;<br>
color: white;<br>
font-family: sans-serif;<br>
}</p>
<pre><code>		div#box_body {
			width: 650px;
			/* Centers the box */
			margin-left: auto;
			margin-right: auto;
			
			/* Round the Edges */
			-webkit-border-radius: 5px;
			-moz-border-radius: 5px;
			-o-border-radius: 5px;
			
			/* Border */
			border: 1px solid white;
			
			/* Background */
			background-color: #540001;
			
			/* Padding and other properties */
			margin-top: 10px;
			margin-bottom: 10px;
			padding: 5px;
			
			-webkit-box-shadow: 3px 8px #000;
			-moz-box-shadow: 3px 8px #000;
			-o-box-shadow: 3px 8px #000;
		}
		
		header.box_header {
			font-size: 28px;
			text-align: center;
			margin: 5px;
		}
		
		form.box_donate_form {
			margin-left: auto;
			margin-right: auto;
			width: 75%;
		}
		
		tr {
			padding-top: 5px;
			padding-bottom: 5px;
		}
		
		input[type="submit"] {
			background: #5d0000;
			color: white;
			border: 0px;
			padding: 5px 10px;
			border-top: 1px solid #a40000;
			-webkit-border-radius: 5px;
			-moz-border-radius: 5px;
			-o-border-radius: 5px;
		}
		
		input[type="submit"]:hover {
			background: #9c0000;
			border-top: 1px solid #d20000;				
			-webkit-transition: all 0.5s;
			-moz-transition: all 0.5s;
			-o-transition: all 0.5s;
			cursor: hand;
		}
		
		input[type="text"] {
			background: #530000;
			color: white;
			padding: 5px 10px;
			border: 1px solid #a40000;
			-webkit-border-radius: 5px;
			-moz-border-radius: 5px;
			-o-border-radius: 5px;
		}
	&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
	&lt;div id="box_body"&gt;
		&lt;header class="box_header"&gt;Donate&lt;/header&gt;
		&lt;center&gt;
			&lt;p&gt;
			&lt;b&gt;SUCCESS&lt;/b&gt;
                            You've successfully donated to Penthium. Type ::redeem ingame to receive your Items / Status !
			&lt;/p&gt;
			&lt;p&gt;;[/code]
</code></pre>
<p>Thats the whole code</p>
<p>[code]&lt;?php</p>
<p>/*  PHP Paypal IPN Integration Class Demonstration File</p>
<ul>
<li>4.16.2005 - Micah Carrick, <a href="mailto:email@micahcarrick.com">email@micahcarrick.com</a>
</li>
<li>
</li>
<li>This file demonstrates the usage of paypal.class.php, a class designed</li>
<li>to aid in the interfacing between your website, paypal, and the instant</li>
<li>payment notification (IPN) interface.  This single file serves as 4</li>
<li>virtual pages depending on the “action” varialble passed in the URL. It’s</li>
<li>the processing page which processes form data being submitted to paypal, it</li>
<li>is the page paypal returns a user to upon success, it’s the page paypal</li>
<li>returns a user to upon canceling an order, and finally, it’s the page that</li>
<li>handles the IPN request from Paypal.</li>
<li>
</li>
<li>I tried to comment this file, aswell as the acutall class file, as well as</li>
<li>I possibly could.  Please email me with questions, comments, and suggestions.</li>
<li>See the header of paypal.class.php for additional resources and information.<br>
*/<br>
session_start();<br>
$base = “/var/www/html/”;<br>
include(“db.php”);<br>
require_once(‘paypal.class.php’);  // include the class file<br>
$p = new paypal_class;             // initiate an instance of the class<br>
//$p-&gt;paypal_url = ‘<a href="https://www.sandbox.paypal.com/cgi-bin/webscr" rel="nofollow noopener">https://www.sandbox.paypal.com/cgi-bin/webscr</a>’;   // testing paypal url<br>
$p-&gt;paypal_url = ‘<a href="https://www.paypal.com/cgi-bin/webscr" rel="nofollow noopener">https://www.paypal.com/cgi-bin/webscr</a>’;     // paypal url</li>
</ul>
<p>// setup a variable for this script (ie: ‘<a href="http://www.micahcarrick.com/paypal.php" rel="nofollow noopener">http://www.micahcarrick.com/paypal.php</a>’)<br>
$this_script = ‘http://’.$_SERVER[‘HTTP_HOST’].$_SERVER[‘PHP_SELF’];</p>
<p>// if there is not action variable, set the default action of ‘process’<br>
if (empty($_GET[‘action’])) $_GET[‘action’] = ‘process’;</p>
<p>if (empty($_GET[‘amm’])) $_GET[‘amm’] = ‘1’;</p>
<p>$EMAIL = ‘rspspenthium@gmail.com’;</p>
<p>switch ($_GET[‘action’]) {</p>
<p>case ‘process’:      // Process and order…</p>
<p>if (empty($_GET[‘prod’])){<br>
header(“Location: donate.php”);<br>
exit;<br>
}</p>
<p>if (empty($_GET[‘username’])){<br>
if($_GET[‘action’] = ‘process’){<br>
header(“Location: donate.php”);<br>
exit;<br>
}<br>
}<br>
//if(!isset($_SESSION[“username”])) {<br>
//    header(“Location: login.php”);<br>
//    exit;<br>
//}</p>
<pre><code>  //include("include.php");
</code></pre>
<p>//die(“donation is temporarily disabled!”);</p>
<pre><code>  // There should be no output at this point.  To process the POST data,
  // the submit_paypal_post() function will output all the HTML tags which
  // contains a FORM which is submited instantaneously using the BODY onload
  // attribute.  In other words, don't echo or printf anything when you're
  // going to be calling the submit_paypal_post() function.

  // This is where you would have your form validation  and all that jazz.
  // You would take your POST vars and load them into the class like below,
  // only using the POST values instead of constant string expressions.

  // For example, after ensureing all the POST variables from your custom
  // order form are valid, you might have:
  //
  // $p-&gt;add_field('first_name', $_POST['first_name']);
  // $p-&gt;add_field('last_name', $_POST['last_name']);

$price = '3.00';
	if($_GET['prod'] == 1)
		$price = '0.20';
	if($_GET['prod'] == 2)
		$price = '9.00';
	if($_GET['prod'] == 3)
		$price = '13.00';
        if($_GET['prod'] == 4)
		$price = '3.00';
	if($_GET['prod'] == 5)
		$price = '3.00';
	if($_GET['prod'] == 6)
		$price = '3.00';
            if($_GET['prod'] == 7)
		$price = '3.00';
	if($_GET['prod'] == 8)
		$price = '4.00';
  
  $p-&gt;add_field('custom', $_GET['username']);
  $p-&gt;add_field('business', $EMAIL);
  $p-&gt;add_field('return', $this_script.'?action=success');
  $p-&gt;add_field('cancel_return', $this_script.'?action=cancel');
  $p-&gt;add_field('notify_url', $this_script.'?action=ipn');
  $p-&gt;add_field('item_name', 'Package '.$_GET['prod']);
  $p-&gt;add_field('item_number', $_GET['prod']);
  $p-&gt;add_field('currency_code', 'USD');
  $p-&gt;add_field('amount', $price);
  //$p-&gt;add_field('quantity', $_GET['amm']);
  $p-&gt;add_field('lc', 'GB');
  $p-&gt;submit_paypal_post(); // submit the fields to paypal
  //$p-&gt;dump_fields();      // for debugging, output a table of all the fields
  break;
</code></pre>
<p>case ‘success’:      // Order was successful…</p>
<pre><code>  // This is where you would probably want to thank the user for their order
  // or what have you.  The order information at this point is in POST
  // variables.  However, you don't want to "process" the order until you
  // get validation from the IPN.  That's where you would have the code to
  // email an admin, update the database with payment status, activate a
  // membership, etc.  

  //include("include.php");
  &lt;!-- Colors and Style --&gt;
&lt;style type="text/css"&gt;
		body {
			background-color: #363434;
			color: white;
			font-family: sans-serif;
		}
		
		
		div#box_body {
			width: 650px;
			/* Centers the box */
			margin-left: auto;
			margin-right: auto;
			
			/* Round the Edges */
			-webkit-border-radius: 5px;
			-moz-border-radius: 5px;
			-o-border-radius: 5px;
			
			/* Border */
			border: 1px solid white;
			
			/* Background */
			background-color: #540001;
			
			/* Padding and other properties */
			margin-top: 10px;
			margin-bottom: 10px;
			padding: 5px;
			
			-webkit-box-shadow: 3px 8px #000;
			-moz-box-shadow: 3px 8px #000;
			-o-box-shadow: 3px 8px #000;
		}
		
		header.box_header {
			font-size: 28px;
			text-align: center;
			margin: 5px;
		}
		
		form.box_donate_form {
			margin-left: auto;
			margin-right: auto;
			width: 75%;
		}
		
		tr {
			padding-top: 5px;
			padding-bottom: 5px;
		}
		
		input[type="submit"] {
			background: #5d0000;
			color: white;
			border: 0px;
			padding: 5px 10px;
			border-top: 1px solid #a40000;
			-webkit-border-radius: 5px;
			-moz-border-radius: 5px;
			-o-border-radius: 5px;
		}
		
		input[type="submit"]:hover {
			background: #9c0000;
			border-top: 1px solid #d20000;				
			-webkit-transition: all 0.5s;
			-moz-transition: all 0.5s;
			-o-transition: all 0.5s;
			cursor: hand;
		}
		
		input[type="text"] {
			background: #530000;
			color: white;
			padding: 5px 10px;
			border: 1px solid #a40000;
			-webkit-border-radius: 5px;
			-moz-border-radius: 5px;
			-o-border-radius: 5px;
		}
	&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
	&lt;div id="box_body"&gt;
		&lt;header class="box_header"&gt;Donate&lt;/header&gt;
		&lt;center&gt;
			&lt;p&gt;
			&lt;b&gt;SUCCESS&lt;/b&gt;
                            You've successfully donated to Penthium. Type ::redeem ingame to receive your Items / Status !
			&lt;/p&gt;
			&lt;p&gt;;

  // You could also simply re-direct them to another page, or your own
  // order status page which presents the user with the status of their
  // order based on a database (which can be modified with the IPN code
  // below).
 
  break;
</code></pre>
<p>case ‘cancel’:       // Order was canceled…</p>
<pre><code>  // The order was canceled before being completed.
  //include("include.php");
  echo "&lt;h2&gt;Donation Cancelled&lt;/h2&gt;&lt;p&gt;Your donation was cancelled.&lt;/p&gt;";
 
  break;
</code></pre>
<p>case ‘ipn’:          // Paypal is calling page for IPN validation…</p>
<pre><code>  // It's important to remember that paypal calling this script.  There
  // is no output here.  This is where you validate the IPN data and if it's
  // valid, update your database to signify that the user has payed.  If
  // you try and use an echo or printf function here it's not going to do you
  // a bit of good.  This is on the "backend".  That is why, by default, the
  // class logs all IPN data to a text file.
  if ($p-&gt;validate_ipn()) {
     
     // Payment has been recieved and IPN is verified.  This is where you
     // update your database to activate or process the order, or setup
     // the database with the user's order details, email an administrator,
     // etc.  You can access a slew of information via the ipn_data() array.

     // Check the paypal documentation for specifics on what information
     // is available in the IPN POST variables.  Basically, all the POST vars
     // which paypal sends, which we send back for validation, are now stored
     // in the ipn_data() array.
     //$fh = fopen(".ipn", "a");
     //fwrite($fh, print_r($p-&gt;ipn_data, true));
     //fclose($fh);

     // For this example, we'll just email ourselves ALL the data.
     if($p-&gt;ipn_data["payment_status"] != "Completed") die();

     if($p-&gt;ipn_data["mc_gross"] &gt; 0 &amp;&amp; strcmp ($p-&gt;ipn_data["business"],$EMAIL) == 0) {
         $user = $p-&gt;ipn_data["custom"];
         $date = $p-&gt;ipn_data["payment_date"];
         $prodid = $p-&gt;ipn_data["item_number"];
         $amount = $p-&gt;ipn_data["mc_gross"];
         $amountTickets = 1;

         $user = str_replace("-", "_", $user);
         $user = str_replace(" ", "_", $user);
         $user = mysql_real_escape_string($user);
         mysql_query("INSERT INTO donation (username, time, productid, price, tickets) VALUES ('" . $user . "', '" . $date . "', '" . $prodid . "', " . $amount . ", " . $amountTickets . ");");
         $fh = fopen(".ipnerr", "a");
         fwrite($fh, mysql_error());
         fclose($fh);
     }
  }
  break;
</code></pre>
<p>}</p>
<p>?&gt;[/code]</p>
<p>Anyone tell me if there’s a php block or how to fix it ?<br>
i tried with echo text here ; didnt work tho</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/error-o-o/508668/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/error-o-o/508668/1</link>
        <pubDate>Sun, 17 Mar 2013 10:38:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-508668-1</guid>
        <source url="https://forum.moparisthebest.com/t/error-o-o/508668.rss">Error ? o.o</source>
      </item>
  </channel>
</rss>
