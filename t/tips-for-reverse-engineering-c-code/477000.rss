<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Tips for Reverse Engineering C++ Code</title>
    <link>https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000</link>
    <description>I&#39;m trying to reverse engineer a game written in C++, I&#39;m using Hex Rays to decompile the executable and I was wondering if anybody had any tips to understanding the output of the code. I know for a fact that the game is written in C++, but the code is decompiled as C. I read a blog giving a basic explanation of how to reverse engineer classes and creating structures for those classes (vtable, variables, etc). I&#39;ve come across a few anomalies like multiple vtables when  (I think) a super constructor was called (ClassA : ClassB). At first it will point to the vtable of Class A and then it will pass a subsequent pointer to the constructor of Class B but usually the vtable gets set in the Class B constructor and then overriden. It&#39;s just generally confusing. Suggestions, tips, reading material, explanations?</description>
    
    <lastBuildDate>Tue, 01 Jan 2013 02:40:41 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Tips for Reverse Engineering C++ Code</title>
        <dc:creator><![CDATA[@_s11 s1gma]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_s11">@_s11</a> wrote:</p>
          <blockquote>
              <p>[quote=“Hash1, post:10, topic:477000”]:o eax and ecx are Intel processors registers, I wonder why it’s in their comments.[/quote]…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000/12</link>
        <pubDate>Tue, 01 Jan 2013 02:40:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-477000-12</guid>
        <source url="https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000.rss">Tips for Reverse Engineering C++ Code</source>
      </item>
      <item>
        <title>Tips for Reverse Engineering C++ Code</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="10" data-topic="477000">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/hash1/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Hash1:</div>
<blockquote>
<p>:o eax and ecx are Intel processors registers, I wonder why it’s in their comments.</p>
</blockquote>
</aside>
<p>Its not in their comments that is auto generated comments from the decompiler.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000/11</link>
        <pubDate>Mon, 31 Dec 2012 09:28:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-477000-11</guid>
        <source url="https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000.rss">Tips for Reverse Engineering C++ Code</source>
      </item>
      <item>
        <title>Tips for Reverse Engineering C++ Code</title>
        <dc:creator><![CDATA[@Hash1 Hash1]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hash1">@Hash1</a> wrote:</p>
          <blockquote>
              <p>:o eax and ecx are Intel processors registers, I wonder why it’s in their comments.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000/10</link>
        <pubDate>Sun, 30 Dec 2012 22:46:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-477000-10</guid>
        <source url="https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000.rss">Tips for Reverse Engineering C++ Code</source>
      </item>
      <item>
        <title>Tips for Reverse Engineering C++ Code</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="8" data-topic="477000">
<div class="title">
<div class="quote-controls"></div>
 Bowser jr:</div>
<blockquote>
<p>Are the packets non-encrypted?</p>
</blockquote>
</aside>
<p>As far as I know, yes. But the packet architecture is a bit odd and I’m still trying to figure out exactly how that works. This is called first when a new buffer is created:</p>
<pre><code class="lang-auto">signed int __thiscall writeHeader(Buffer *this, int a2)
{
  Buffer *buf; // esi@1
  int len; // eax@1
  int v4; // eax@3
  int off; // eax@3
  int new_off; // ecx@3
  int v7; // eax@5
  int v8; // eax@5
  int v9; // ecx@5
  int v10; // eax@7
  int v11; // eax@7
  int v12; // ecx@7
  int v13; // eax@9
  int v14; // eax@9
  int v15; // ecx@9

  buf = this;
  this[1].vtable = a2;
  len = this-&gt;length;
  this-&gt;offset = 0;
  if ( !len )
    resizeBuffer((Class7 *)this, 0);
  *(_BYTE *)(buf-&gt;buffer + buf-&gt;offset) = 0;    // int40 + int16LE
  off = buf-&gt;offset + 1;
  new_off = off;
  buf-&gt;offset = off;
  v4 = buf-&gt;length;
  if ( new_off &gt;= (unsigned int)v4 )
    resizeBuffer((Class7 *)buf, 2 * v4);
  *(_BYTE *)(buf-&gt;buffer + buf-&gt;offset) = 0;
  v8 = buf-&gt;offset + 1;
  v9 = v8;
  buf-&gt;offset = v8;
  v7 = buf-&gt;length;
  if ( v9 &gt;= (unsigned int)v7 )
    resizeBuffer((Class7 *)buf, 2 * v7);
  *(_BYTE *)(buf-&gt;buffer + buf-&gt;offset) = 0;
  v11 = buf-&gt;offset + 1;
  v12 = v11;
  buf-&gt;offset = v11;
  v10 = buf-&gt;length;
  if ( v12 &gt;= (unsigned int)v10 )
    resizeBuffer((Class7 *)buf, 2 * v10);
  *(_BYTE *)(buf-&gt;buffer + buf-&gt;offset) = 0;
  v14 = buf-&gt;offset + 1;
  v15 = v14;
  buf-&gt;offset = v14;
  v13 = buf-&gt;length;
  if ( v15 &gt;= (unsigned int)v13 )
    resizeBuffer((Class7 *)buf, 2 * v13);
  *(_BYTE *)(buf-&gt;buffer + buf-&gt;offset++) = 0;
  return putInt16LE((Class7 *)buf, LOWORD(buf[1].vtable));
}</code></pre>
<pre><code class="lang-auto">LOWORD(buf[1].vtable)</code></pre>
<p>I think this is named incorrectly, but, that I think is the packet id. What the rest of the crap is for I have no idea. Class7 is just a subclass of Buffer that contains an extra field.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000/9</link>
        <pubDate>Sun, 30 Dec 2012 01:30:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-477000-9</guid>
        <source url="https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000.rss">Tips for Reverse Engineering C++ Code</source>
      </item>
      <item>
        <title>Tips for Reverse Engineering C++ Code</title>
        <dc:creator><![CDATA[@bowserjr2 Bowser jr]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bowserjr2">@bowserjr2</a> wrote:</p>
          <blockquote>
              <p>Are the packets non-encrypted? I would download the game when I have time. (The downloader takes all the bandwidth, rendering the rest of my net useless)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000/8</link>
        <pubDate>Sun, 30 Dec 2012 01:26:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-477000-8</guid>
        <source url="https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000.rss">Tips for Reverse Engineering C++ Code</source>
      </item>
      <item>
        <title>Tips for Reverse Engineering C++ Code</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="6" data-topic="477000">
<div class="title">
<div class="quote-controls"></div>
 Bowser jr:</div>
<blockquote>
<p>I’m not poking fun of you, I’ve played it myself. I would love to help you if I gained some knowledge. Isn’t it private servers for it already? And don’t you think the trajectory is calculated server-sided?</p>
</blockquote>
</aside>
<p>That’s shocking but cool. Yes, there are some private servers but there aren’t many. The ones that pop up don’t have a solid infrastructure and die quickly. The trajectory is calculated client-sided because if you have ever used a wind hack before, and set the wind speed to 0 then you can just literally point and shoot the ball at the hole without having to compensate for the wind send by the server. That’s in tournament mode though, in versus you can only do that if you are the one hosting the game. I think in versus if you are the one hosting the game then you keep the position of everyone’s ball.</p>
<p>I have some information, like I said I’m trying to decipher a few packets but not nearly enough. I was going to point the game at a quick java server write up and see if I can decipher what is being sent just so that I could get login working. We’ll see how it goes, I’d be glad to share with you what I find out.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000/7</link>
        <pubDate>Sun, 30 Dec 2012 01:13:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-477000-7</guid>
        <source url="https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000.rss">Tips for Reverse Engineering C++ Code</source>
      </item>
      <item>
        <title>Tips for Reverse Engineering C++ Code</title>
        <dc:creator><![CDATA[@bowserjr2 Bowser jr]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bowserjr2">@bowserjr2</a> wrote:</p>
          <blockquote>
              <p>I’m not poking fun of you, I’ve played it myself. I would love to help you if I gained some knowledge. Isn’t it private servers for it already? And don’t you think the trajectory is calculated server-sided?</p>
<p>You should however gather data in a more automatic way.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000/6</link>
        <pubDate>Sun, 30 Dec 2012 01:09:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-477000-6</guid>
        <source url="https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000.rss">Tips for Reverse Engineering C++ Code</source>
      </item>
      <item>
        <title>Tips for Reverse Engineering C++ Code</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>[quote=“Bowser jr, post:4, topic:477000”][quote author=sinisoul link=topic=595191.msg4191210#msg4191210 date=1356828992]</p>
<aside class="quote">
<blockquote>
<p>Just curious, what to you plan to do with the game?</p>
</blockquote>
</aside>
<p>There is specifically a trajectory algorithm I want to find in order to cheat. It’s a physics based game. Also, I want to possibly work on a private server as well. I found the buffer class but I’m having a hard time trying to decipher the class that contains the socket reference and read/write buffers.<br>
[/quote]<br>
Would it be easier to just work out the algorithm with some knowledge and a program like Eureqa?</p>
<p>What game are you trying to reverse engineer?[/quote]</p>
<p>Pangya, Korean based anime golf game. Don’t poke fun at me I’ve been playing it since I was a kid and the mathematics behind it keep me coming back. It’s challenging, minus the ‘cute’ factor. And I’m a golf junkie, most realistic golf game I’ve ever played.</p>
<p>Well the thing is that there are attempts behind trying to understand the algorithms behind how the wind influences the ball but if you adjust the distance at which you shoot then its hard to predict if your interpolated equation will continue to work for every case because the amount of precision you have to have to be dead on perfect for every shot is incredibly high. I want to probe the game just to see how they calculate the trajectory of the ball, there has yet to be correct documentation on how to exactly calculate where your ball will land.</p>
<p>I’ve TRIED to collect data to figure out the algorithms behind the inner workings but that costs money, and a lot of time. In the range of a lot of time it took me around ~1 hour to get 2 data points for each club which gave me terribly unreliable graphs.</p>
<p>Also the private server bit is something I’d like to go for, because of the large community, it could really skyrocket. There aren’t that many people who are willing to share the network protocols of the game though so I rather help release some public information to get the ball rolling.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000/5</link>
        <pubDate>Sun, 30 Dec 2012 01:04:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-477000-5</guid>
        <source url="https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000.rss">Tips for Reverse Engineering C++ Code</source>
      </item>
      <item>
        <title>Tips for Reverse Engineering C++ Code</title>
        <dc:creator><![CDATA[@bowserjr2 Bowser jr]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bowserjr2">@bowserjr2</a> wrote:</p>
          <blockquote>
              <p>[quote=“sinisoul, post:3, topic:477000”][quote author=Bowser jr link=topic=595191.msg4191196#msg4191196 date=1356828578]<br>
Just curious, what to you plan to do with the game?<br>
[/quote]</p>
<p>There is specifically a trajectory algorithm I want to find in order to cheat. It’s a physics based game. Also, I want to possibly work on a private server as well. I found the buffer class but I’m having a hard time trying to decipher the class that contains the socket reference and read/write buffers.[/quote]<br>
Wouldn’t it be easier to just work out the algorithm with some knowledge and a program like Eureqa?</p>
<p>What game are you trying to reverse engineer?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000/4</link>
        <pubDate>Sun, 30 Dec 2012 00:58:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-477000-4</guid>
        <source url="https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000.rss">Tips for Reverse Engineering C++ Code</source>
      </item>
      <item>
        <title>Tips for Reverse Engineering C++ Code</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="477000">
<div class="title">
<div class="quote-controls"></div>
 Bowser jr:</div>
<blockquote>
<p>Just curious, what to you plan to do with the game?</p>
</blockquote>
</aside>
<p>There is specifically a trajectory algorithm I want to find in order to cheat. It’s a physics based game. Also, I want to possibly work on a private server as well. I found the buffer class but I’m having a hard time trying to decipher the class that contains the socket reference and read/write buffers.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000/3</link>
        <pubDate>Sun, 30 Dec 2012 00:56:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-477000-3</guid>
        <source url="https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000.rss">Tips for Reverse Engineering C++ Code</source>
      </item>
      <item>
        <title>Tips for Reverse Engineering C++ Code</title>
        <dc:creator><![CDATA[@bowserjr2 Bowser jr]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bowserjr2">@bowserjr2</a> wrote:</p>
          <blockquote>
              <p>Just curious, what to you plan to do with the game?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000/2</link>
        <pubDate>Sun, 30 Dec 2012 00:49:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-477000-2</guid>
        <source url="https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000.rss">Tips for Reverse Engineering C++ Code</source>
      </item>
      <item>
        <title>Tips for Reverse Engineering C++ Code</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>I’m trying to reverse engineer a game written in C++, I’m using Hex Rays to decompile the executable and I was wondering if anybody had any tips to understanding the output of the code. I know for a fact that the game is written in C++, but the code is decompiled as C. I read a blog giving a basic explanation of how to reverse engineer classes and creating structures for those classes (vtable, variables, etc). I’ve come across a few anomalies like multiple vtables when  (I think) a super constructor was called (ClassA : ClassB). At first it will point to the vtable of Class A and then it will pass a subsequent pointer to the constructor of Class B but usually the vtable gets set in the Class B constructor and then overriden. It’s just generally confusing. Suggestions, tips, reading material, explanations?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000/1</link>
        <pubDate>Sun, 30 Dec 2012 00:34:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-477000-1</guid>
        <source url="https://forum.moparisthebest.com/t/tips-for-reverse-engineering-c-code/477000.rss">Tips for Reverse Engineering C++ Code</source>
      </item>
  </channel>
</rss>
