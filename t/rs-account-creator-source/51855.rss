<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>RS Account Creator (source)</title>
    <link>https://forum.moparisthebest.com/t/rs-account-creator-source/51855</link>
    <description>I have decided to jump back into programming for RS again and decided to start from ground up. It all begins with the account creation therefore thats what I started with. The following is a working standalone program though with some modification can be implented into any bot or I guess do whatever you want with it lol. Also, each name that is created will be outputted to a file named list.txt along with the password used. The paramaters for the program are pretty simple String String boolean. In Proper order it is Username Password useSuggestedNames.

[code]/**
 * Created by IntelliJ IDEA.
 * User: Portal
 * Date: Jan 25, 2007
 * Time: 2:58:28 AM
 *
 * This program was designed to assist in account creation and be called
 * from an outside source if modified. It appears the maximum amount of
 * accounts that can be made is 5 at a time and you are able to make one
 * new account every 15 minutes or so(estimated not tested). So within
 * 1.5 hours you should be able to do a batch of 5 names again.
 * Uses: check account availability, directly make account given username
 * and password, and make suggested accounts if the one chosen was
 * unavailable and suggested names were proposed.
 */
import java.io.*;
import java.net.*;

public class UserCreation{

    public String[] suggestedNames = new String[5];
    public boolean listed = false;
    int counter = 0;

    public static void main(String args[]){
        if(args != null &amp;&amp; args.length == 3 &amp;&amp; args[0].length() &lt; 13  &amp;&amp; args[1].length() &gt; 5 &amp;&amp; args[1].length() &lt; 21){
            try{
                new UserCreation(args[0], args[1], args[2].trim().toLowerCase());
            }catch (Exception e){}
        }else
            System.out.println(&quot;Invalid Paramaters, Necessary: Username, Password, boolean&quot;);
    }

    public UserCreation(String user, String pass, String useSuggested)throws Exception{
        int caseAvailable = userAvailability(user);
        if(caseAvailable == 1)
            System.out.println(&quot;User unavailable, now ending.&quot;);
        else if(caseAvailable == 2 &amp;&amp; useSuggested.equals(&quot;true&quot;))
            createSuggestedNames(suggestedNames, pass);
        else if(caseAvailable == 3)
            createUser(user, pass);
        else if(caseAvailable == 4)
            System.out.println(&quot;Did not match specified cases&quot;);
    }

    public void createUser(String user, String pass)throws Exception{
        grabPageCode(&quot;https://create.runescape.com/lang/en/aff/runescape/createaccount.ws?username=&quot; + user + &quot;&amp;password1=&quot; + pass + &quot;&amp;password2=&quot; + pass + &quot;&amp;termsandcond=1&quot;);
        if(userAvailability(user) == 3){
            System.out.println(&quot;Failed at creating: &quot; + user);
            counter++;
            if(counter == 5)
                System.out.println(&quot;You are most likely temporarily banned from making accounts. Wait a while&quot;);
        }else{
            try {
                BufferedWriter out = new BufferedWriter(new FileWriter(&quot;list.txt&quot;,true));
                out.write(&quot;\nUsername: &quot; + user + &quot;\t\t Pass: &quot; + pass);
                out.close();
                System.out.println(&quot;Created user: &quot; + user);
            } catch (IOException e) {}
        }
    }

    public void createSuggestedNames(String[] names, String pass)throws Exception{
        String name = &quot;&quot;;
        for(int i=0; i&lt;5; i++){
            name = names[i];
            createUser(name, pass);
        }
        counter = 0;
    }

    public int userAvailability(String user)throws Exception{
        String check;
        check = grabPageCode(&quot;https://create.runescape.com/lang/en/aff/runescape/chooseusername.ws?username=&quot; + user);
        if(check.indexOf(&quot;name:&quot;) != -1) return 1;
        else if(check.indexOf(&quot;following:&quot;) != -1){
            suggestedNames = getSuggestedNames(check);
            return 2;
        }
        else if(check.indexOf(&quot;currently&quot;) != -1) return 3;
        else return 4;
    }

    public String[] getSuggestedNames(String check){
        int indexradiopos, indexpos = 0;
        String names[] = new String[5];

        for(int i=0; i&lt;5; i++){
            indexradiopos = check.indexOf(&quot;\&quot;username\&quot;&quot;, indexpos);
            indexpos = check.indexOf(&quot;&amp;n&quot;, indexpos+2);
            names[i] = check.substring(indexradiopos + 18, indexpos - 2 );
            if(!listed)
                System.out.println(&quot;Suggested name: &quot; + names[i]);
        }
        listed = true;

        return names;
    }

    public String grabPageCode(String site) throws Exception{
        URL url = new URL(site);
        URLConnection rs = url.openConnection();

        String contsize = rs.getHeaderField(&quot;Content-length&quot;);
        if (contsize == null) contsize = &quot;0&quot;;

        byte buffer[] = new byte[Integer.parseInt(contsize)];
        DataInputStream rspage = new DataInputStream(rs.getInputStream());
        rspage.readFully(buffer);
        rspage.close();

        return new String(buffer);
    }
}[/code]

Please let me know how you like it. And I am very open to feedback and criticism especially if it would make the program run more efficiently. Enjoy :)

Credits: well I thank mopar for steering me away from what I originally had in mind and telling me to find an easier way :).

Edit: Fixed a few bugs</description>
    
    <lastBuildDate>Fri, 26 Jan 2007 09:09:50 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/rs-account-creator-source/51855.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>RS Account Creator (source)</title>
        <dc:creator><![CDATA[@Portal Portal]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/portal">@Portal</a> wrote:</p>
          <blockquote>
              <p>I have decided to jump back into programming for RS again and decided to start from ground up. It all begins with the account creation therefore thats what I started with. The following is a working standalone program though with some modification can be implented into any bot or I guess do whatever you want with it lol. Also, each name that is created will be outputted to a file named list.txt along with the password used. The paramaters for the program are pretty simple String String boolean. In Proper order it is Username Password useSuggestedNames.</p>
<p>[code]/**</p>
<ul>
<li>Created by IntelliJ IDEA.</li>
<li>User: Portal</li>
<li>Date: Jan 25, 2007</li>
<li>Time: 2:58:28 AM</li>
<li>
</li>
<li>This program was designed to assist in account creation and be called</li>
<li>from an outside source if modified. It appears the maximum amount of</li>
<li>accounts that can be made is 5 at a time and you are able to make one</li>
<li>new account every 15 minutes or so(estimated not tested). So within</li>
<li>1.5 hours you should be able to do a batch of 5 names again.</li>
<li>Uses: check account availability, directly make account given username</li>
<li>and password, and make suggested accounts if the one chosen was</li>
<li>unavailable and suggested names were proposed.<br>
<em>/<br>
import <a href="http://java.io" rel="nofollow noopener">java.io</a>.</em>;<br>
import <a href="http://java.net" rel="nofollow noopener">java.net</a>.*;</li>
</ul>
<p>public class UserCreation{</p>
<pre><code>public String[] suggestedNames = new String[5];
public boolean listed = false;
int counter = 0;

public static void main(String args[]){
    if(args != null &amp;&amp; args.length == 3 &amp;&amp; args[0].length() &lt; 13  &amp;&amp; args[1].length() &gt; 5 &amp;&amp; args[1].length() &lt; 21){
        try{
            new UserCreation(args[0], args[1], args[2].trim().toLowerCase());
        }catch (Exception e){}
    }else
        System.out.println("Invalid Paramaters, Necessary: Username, Password, boolean");
}

public UserCreation(String user, String pass, String useSuggested)throws Exception{
    int caseAvailable = userAvailability(user);
    if(caseAvailable == 1)
        System.out.println("User unavailable, now ending.");
    else if(caseAvailable == 2 &amp;&amp; useSuggested.equals("true"))
        createSuggestedNames(suggestedNames, pass);
    else if(caseAvailable == 3)
        createUser(user, pass);
    else if(caseAvailable == 4)
        System.out.println("Did not match specified cases");
}

public void createUser(String user, String pass)throws Exception{
    grabPageCode("https://create.runescape.com/lang/en/aff/runescape/createaccount.ws?username=" + user + "&amp;password1=" + pass + "&amp;password2=" + pass + "&amp;termsandcond=1");
    if(userAvailability(user) == 3){
        System.out.println("Failed at creating: " + user);
        counter++;
        if(counter == 5)
            System.out.println("You are most likely temporarily banned from making accounts. Wait a while");
    }else{
        try {
            BufferedWriter out = new BufferedWriter(new FileWriter("list.txt",true));
            out.write("\nUsername: " + user + "\t\t Pass: " + pass);
            out.close();
            System.out.println("Created user: " + user);
        } catch (IOException e) {}
    }
}

public void createSuggestedNames(String[] names, String pass)throws Exception{
    String name = "";
    for(int i=0; i&lt;5; i++){
        name = names[i];
        createUser(name, pass);
    }
    counter = 0;
}

public int userAvailability(String user)throws Exception{
    String check;
    check = grabPageCode("https://create.runescape.com/lang/en/aff/runescape/chooseusername.ws?username=" + user);
    if(check.indexOf("name:") != -1) return 1;
    else if(check.indexOf("following:") != -1){
        suggestedNames = getSuggestedNames(check);
        return 2;
    }
    else if(check.indexOf("currently") != -1) return 3;
    else return 4;
}

public String[] getSuggestedNames(String check){
    int indexradiopos, indexpos = 0;
    String names[] = new String[5];

    for(int i=0; i&lt;5; i++){
        indexradiopos = check.indexOf("\"username\"", indexpos);
        indexpos = check.indexOf("&amp;n", indexpos+2);
        names[i] = check.substring(indexradiopos + 18, indexpos - 2 );
        if(!listed)
            System.out.println("Suggested name: " + names[i]);
    }
    listed = true;

    return names;
}

public String grabPageCode(String site) throws Exception{
    URL url = new URL(site);
    URLConnection rs = url.openConnection();

    String contsize = rs.getHeaderField("Content-length");
    if (contsize == null) contsize = "0";

    byte buffer[] = new byte[Integer.parseInt(contsize)];
    DataInputStream rspage = new DataInputStream(rs.getInputStream());
    rspage.readFully(buffer);
    rspage.close();

    return new String(buffer);
}
</code></pre>
<p>}[/code]</p>
<p>Please let me know how you like it. And I am very open to feedback and criticism especially if it would make the program run more efficiently. Enjoy <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>Credits: well I thank mopar for steering me away from what I originally had in mind and telling me to find an easier way :).</p>
<p>Edit: Fixed a few bugs</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/rs-account-creator-source/51855/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/rs-account-creator-source/51855/1</link>
        <pubDate>Fri, 26 Jan 2007 09:09:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-51855-1</guid>
        <source url="https://forum.moparisthebest.com/t/rs-account-creator-source/51855.rss">RS Account Creator (source)</source>
      </item>
  </channel>
</rss>
