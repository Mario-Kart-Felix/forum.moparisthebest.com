<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Java Auto Downloader/UnZipper Help</title>
    <link>https://forum.moparisthebest.com/t/java-auto-downloader-unzipper-help/440208</link>
    <description>Hello everyone, i&#39;ve been working on a auto downloader/unzipper for my server, and I am coding to as an example, as you can see....
Anyways, I am having troubles with my unzipper-

&lt;blockquote&gt;package main;
/*
 * Credits,
 * Ryan Thibodeau - 100%
 * Cache Downloader
 */
import java.io.FileOutputStream;
import java.io.InputStream;
import java.net.URL;	 
import java.util.*;
import java.util.logging.Logger;
import java.util.zip.*;
import java.io.*;
	 
	public class Example {
	    private static String archive = &quot;C:/Users/Thibodeau/ryanstest.zip&quot;;
		Logger log;
		   final static int BUFFER = 2048;
	  public static void main(String[] args)
	  {
	     try
	     {
	        /*
	         * Get a connection to the URL and start up
	         * a buffered reader.
	         */
	        long startTime = System.currentTimeMillis();
	 
	        System.out.println(&quot;Downloading Test... 0%&quot;);
	 
	        URL url = new URL(&quot;http://dl.dropbox.com/u/70008126/TestRyan.zip&quot;);
	        url.openConnection();
	        InputStream reader = url.openStream();
	        System.out.println(&quot;Cache Downloaded. 25%&quot;);
	        /*
	         * Setup a buffered file writer to write
	         * out what we read from the website.
	         */
	        System.out.println(&quot;Saving ZIP File To Users...50%&quot;);
	        FileOutputStream writer = new FileOutputStream(&quot;C:/Users/Thibodeau/ryanstest.zip&quot;);
	        byte[] buffer = new byte[153600];
	        int totalBytesRead = 0;
	        int bytesRead = 0;
	        System.out.println(&quot;Test Download Complete. 100%&quot;);
	 
	        while ((bytesRead = reader.read(buffer)) &gt; 0)
	        {  
	           writer.write(buffer, 0, bytesRead);
	           buffer = new byte[153600];
	           totalBytesRead += bytesRead;
	           System.out.println(&quot;&quot;);
	           unzipArchive(null);
	        }}	        catch(Exception e) {
		         e.printStackTrace();
		     
	            }
	  }
		    public static void unzipArchive(File outputDir) {
		        try {
		            ZipFile zipfile = new ZipFile(archive);
		            for (Enumeration&lt;?&gt; e = zipfile.entries(); e.hasMoreElements(); ) {
		                ZipEntry entry = (ZipEntry) e.nextElement();
		                unzipEntry(zipfile, entry, outputDir);
		            }
		        } catch (Exception e) {
		            System.out.println(&quot;Error while extracting file &quot; + archive);
		        }
		    }

		    private static void unzipEntry(ZipFile zipfile, ZipEntry entry, File outputDir) throws IOException {


		        if (entry.isDirectory()) {
		            createDir(new File(outputDir, entry.getName()));
		            return;
		        }
		        
		        File outputFile = new File(outputDir, entry.getName());
		        if (!outputFile.getParentFile().exists()){
		            createDir(outputFile.getParentFile());
		        }

		        System.out.println(&quot;Extracting: &quot; + entry);
		        BufferedInputStream inputStream = new BufferedInputStream(zipfile.getInputStream(entry));
		        BufferedOutputStream outputStream = new BufferedOutputStream(new FileOutputStream(outputFile));

		        try {
		            copy(inputStream, outputStream);
		        } finally {
		            outputStream.close();
		            inputStream.close();
		        }
		    }

		    private static void createDir(File dir) {
		    	System.out.println(&quot;Creating dir &quot;+dir.getName());
		        if(!dir.mkdirs()) throw new RuntimeException(&quot;Can not create dir &quot;+dir);
		    }
		
	public static void copy(InputStream in, OutputStream out)
			throws IOException
			{
			if (in == null)
			System.out.println(&quot;InputStream is null&quot;);
			if (out == null)
			System.out.println(&quot;OutputStream is null&quot;);

			// Transfer bytes from in to out
			byte[] buf = new byte[1024];
			int len;
			while ((len = in.read(buf)) &gt; 0)
			{
			out.write(buf, 0, len);
			}
			in.close();
			out.close();
			}
	}&lt;/blockquote&gt;

When I run it is downloads it all good, but when I get to unzipping this happenes-

&lt;blockquote&gt;Creating dir TestRyan
Error while extracting file C:/Users/Thibodeau/ryanstest.zip&lt;/blockquote&gt;</description>
    
    <lastBuildDate>Sat, 21 Apr 2012 06:19:41 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/java-auto-downloader-unzipper-help/440208.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Java Auto Downloader/UnZipper Help</title>
        <dc:creator><![CDATA[@skillingman8 skillingman8]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/skillingman8">@skillingman8</a> wrote:</p>
          <blockquote>
              <p>Hello everyone, i’ve been working on a auto downloader/unzipper for my server, and I am coding to as an example, as you can see…<br>
Anyways, I am having troubles with my unzipper-</p>
<blockquote>package main;
/*
 * Credits,
 * Ryan Thibodeau - 100%
 * Cache Downloader
 */
import java.io.FileOutputStream;
import java.io.InputStream;
import java.net.URL;	 
import java.util.*;
import java.util.logging.Logger;
import java.util.zip.*;
import java.io.*;
<pre><code>public class Example {
    private static String archive = "C:/Users/Thibodeau/ryanstest.zip";
	Logger log;
	   final static int BUFFER = 2048;
  public static void main(String[] args)
  {
     try
     {
        /*
         * Get a connection to the URL and start up
         * a buffered reader.
         */
        long startTime = System.currentTimeMillis();
 
        System.out.println("Downloading Test... 0%");
 
        URL url = new URL("http://dl.dropbox.com/u/70008126/TestRyan.zip");
        url.openConnection();
        InputStream reader = url.openStream();
        System.out.println("Cache Downloaded. 25%");
        /*
         * Setup a buffered file writer to write
         * out what we read from the website.
         */
        System.out.println("Saving ZIP File To Users...50%");
        FileOutputStream writer = new FileOutputStream("C:/Users/Thibodeau/ryanstest.zip");
        byte[] buffer = new byte[153600];
        int totalBytesRead = 0;
        int bytesRead = 0;
        System.out.println("Test Download Complete. 100%");
 
        while ((bytesRead = reader.read(buffer)) &gt; 0)
        {  
           writer.write(buffer, 0, bytesRead);
           buffer = new byte[153600];
           totalBytesRead += bytesRead;
           System.out.println("");
           unzipArchive(null);
        }}	        catch(Exception e) {
	         e.printStackTrace();
	     
            }
  }
	    public static void unzipArchive(File outputDir) {
	        try {
	            ZipFile zipfile = new ZipFile(archive);
	            for (Enumeration&lt;?&gt; e = zipfile.entries(); e.hasMoreElements(); ) {
	                ZipEntry entry = (ZipEntry) e.nextElement();
	                unzipEntry(zipfile, entry, outputDir);
	            }
	        } catch (Exception e) {
	            System.out.println("Error while extracting file " + archive);
	        }
	    }

	    private static void unzipEntry(ZipFile zipfile, ZipEntry entry, File outputDir) throws IOException {


	        if (entry.isDirectory()) {
	            createDir(new File(outputDir, entry.getName()));
	            return;
	        }
	        
	        File outputFile = new File(outputDir, entry.getName());
	        if (!outputFile.getParentFile().exists()){
	            createDir(outputFile.getParentFile());
	        }

	        System.out.println("Extracting: " + entry);
	        BufferedInputStream inputStream = new BufferedInputStream(zipfile.getInputStream(entry));
	        BufferedOutputStream outputStream = new BufferedOutputStream(new FileOutputStream(outputFile));

	        try {
	            copy(inputStream, outputStream);
	        } finally {
	            outputStream.close();
	            inputStream.close();
	        }
	    }

	    private static void createDir(File dir) {
	    	System.out.println("Creating dir "+dir.getName());
	        if(!dir.mkdirs()) throw new RuntimeException("Can not create dir "+dir);
	    }
	
public static void copy(InputStream in, OutputStream out)
		throws IOException
		{
		if (in == null)
		System.out.println("InputStream is null");
		if (out == null)
		System.out.println("OutputStream is null");

		// Transfer bytes from in to out
		byte[] buf = new byte[1024];
		int len;
		while ((len = in.read(buf)) &gt; 0)
		{
		out.write(buf, 0, len);
		}
		in.close();
		out.close();
		}
}&lt;/blockquote&gt;
</code></pre>
<p>When I run it is downloads it all good, but when I get to unzipping this happenes-</p>
<blockquote>Creating dir TestRyan
Error while extracting file C:/Users/Thibodeau/ryanstest.zip</blockquote>
</blockquote>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-auto-downloader-unzipper-help/440208/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-auto-downloader-unzipper-help/440208/1</link>
        <pubDate>Sat, 21 Apr 2012 06:19:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-440208-1</guid>
        <source url="https://forum.moparisthebest.com/t/java-auto-downloader-unzipper-help/440208.rss">Java Auto Downloader/UnZipper Help</source>
      </item>
  </channel>
</rss>
