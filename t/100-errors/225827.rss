<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>100 Errors</title>
    <link>https://forum.moparisthebest.com/t/100-errors/225827</link>
    <description>[code]                  ^
client.java:12698: &#39;;&#39; expected
                } else if (command.equalsIgnoreCase(&quot;savebackup&quot;)) {
                      ^
client.java:12698: illegal start of type
                } else if (command.equalsIgnoreCase(&quot;savebackup&quot;)) {
                          ^
client.java:12698: &#39;;&#39; expected
                } else if (command.equalsIgnoreCase(&quot;savebackup&quot;)) {
                                  ^
client.java:12698: invalid method declaration; return type required
                } else if (command.equalsIgnoreCase(&quot;savebackup&quot;)) {
                                   ^
client.java:12698: illegal start of type
                } else if (command.equalsIgnoreCase(&quot;savebackup&quot;)) {
                                                    ^
client.java:12698: &#39;;&#39; expected
                } else if (command.equalsIgnoreCase(&quot;savebackup&quot;)) {
                                                                 ^
client.java:12710: illegal start of type
                } else if (command.equalsIgnoreCase(&quot;loadbackup&quot;) &amp;&amp; playerName.
equalsIgnoreCase(&quot;admin&quot;)) {
                  ^
client.java:12710: &#39;;&#39; expected
                } else if (command.equalsIgnoreCase(&quot;loadbackup&quot;) &amp;&amp; playerName.
equalsIgnoreCase(&quot;admin&quot;)) {
                      ^
client.java:12710: illegal start of type
                } else if (command.equalsIgnoreCase(&quot;loadbackup&quot;) &amp;&amp; playerName.
equalsIgnoreCase(&quot;admin&quot;)) {
                          ^
client.java:12710: &#39;;&#39; expected
                } else if (command.equalsIgnoreCase(&quot;loadbackup&quot;) &amp;&amp; playerName.
equalsIgnoreCase(&quot;admin&quot;)) {
                                  ^
client.java:12710: invalid method declaration; return type required
                } else if (command.equalsIgnoreCase(&quot;loadbackup&quot;) &amp;&amp; playerName.
equalsIgnoreCase(&quot;admin&quot;)) {
                                   ^
client.java:12710: illegal start of type
                } else if (command.equalsIgnoreCase(&quot;loadbackup&quot;) &amp;&amp; playerName.
equalsIgnoreCase(&quot;admin&quot;)) {
                                                    ^
client.java:12710: &#39;;&#39; expected
                } else if (command.equalsIgnoreCase(&quot;loadbackup&quot;) &amp;&amp; playerName.
equalsIgnoreCase(&quot;admin&quot;)) {
                                                                 ^
client.java:12737: illegal start of type
                }else if (command.equalsIgnoreCase(&quot;mypk&quot;)) {
                 ^
client.java:12737: &#39;;&#39; expected
                }else if (command.equalsIgnoreCase(&quot;mypk&quot;)) {
                     ^
client.java:12737: illegal start of type
                }else if (command.equalsIgnoreCase(&quot;mypk&quot;)) {
                         ^
client.java:12737: &#39;;&#39; expected
                }else if (command.equalsIgnoreCase(&quot;mypk&quot;)) {
                                 ^
client.java:12737: invalid method declaration; return type required
                }else if (command.equalsIgnoreCase(&quot;mypk&quot;)) {
                                  ^
client.java:12737: illegal start of type
                }else if (command.equalsIgnoreCase(&quot;mypk&quot;)) {
                                                   ^
client.java:12737: &#39;;&#39; expected
                }else if (command.equalsIgnoreCase(&quot;mypk&quot;)) {
                                                          ^
client.java:12739: illegal start of type
                }else if (command.equalsIgnoreCase(&quot;mystats&quot;)) {
                 ^
client.java:12739: &#39;;&#39; expected
                }else if (command.equalsIgnoreCase(&quot;mystats&quot;)) {
                     ^
client.java:12739: illegal start of type
                }else if (command.equalsIgnoreCase(&quot;mystats&quot;)) {
                         ^
client.java:12739: &#39;;&#39; expected
                }else if (command.equalsIgnoreCase(&quot;mystats&quot;)) {
                                 ^
client.java:12739: invalid method declaration; return type required
                }else if (command.equalsIgnoreCase(&quot;mystats&quot;)) {
                                  ^
client.java:12739: illegal start of type
                }else if (command.equalsIgnoreCase(&quot;mystats&quot;)) {
                                                   ^
client.java:12739: &#39;;&#39; expected
                }else if (command.equalsIgnoreCase(&quot;mystats&quot;)) {
                                                             ^
client.java:12748: illegal start of type
                } else if (command.equalsIgnoreCase(&quot;help&quot;)) {
                  ^
client.java:12748: &#39;;&#39; expected
                } else if (command.equalsIgnoreCase(&quot;help&quot;)) {
                      ^
client.java:12748: illegal start of type
                } else if (command.equalsIgnoreCase(&quot;help&quot;)) {
                          ^
client.java:12748: &#39;;&#39; expected
                } else if (command.equalsIgnoreCase(&quot;help&quot;)) {
                                  ^
client.java:12748: invalid method declaration; return type required
                } else if (command.equalsIgnoreCase(&quot;help&quot;)) {
                                   ^
client.java:12748: illegal start of type
                } else if (command.equalsIgnoreCase(&quot;help&quot;)) {
                                                    ^
client.java:12748: &#39;;&#39; expected
                } else if (command.equalsIgnoreCase(&quot;help&quot;)) {
                                                           ^
client.java:12750: illegal start of type
                } else if (command.equalsIgnoreCase(&quot;players&quot;)) {
                  ^
client.java:12750: &#39;;&#39; expected
                } else if (command.equalsIgnoreCase(&quot;players&quot;)) {
                      ^
client.java:12750: illegal start of type
                } else if (command.equalsIgnoreCase(&quot;players&quot;)) {
                          ^
client.java:12750: &#39;;&#39; expected
                } else if (command.equalsIgnoreCase(&quot;players&quot;)) {
                                  ^
client.java:12750: invalid method declaration; return type required
                } else if (command.equalsIgnoreCase(&quot;players&quot;)) {
                                   ^
client.java:12750: illegal start of type
                } else if (command.equalsIgnoreCase(&quot;players&quot;)) {
                                                    ^
client.java:12750: &#39;;&#39; expected
                } else if (command.equalsIgnoreCase(&quot;players&quot;)) {
                                                              ^
client.java:12752: illegal start of type
                } else if (command.startsWith(&quot;mypos&quot;)) {
                  ^
client.java:12752: &#39;;&#39; expected
                } else if (command.startsWith(&quot;mypos&quot;)) {
                      ^
client.java:12752: illegal start of type
                } else if (command.startsWith(&quot;mypos&quot;)) {
                          ^
client.java:12752: &#39;;&#39; expected
                } else if (command.startsWith(&quot;mypos&quot;)) {
                                  ^
client.java:12752: invalid method declaration; return type required
                } else if (command.startsWith(&quot;mypos&quot;)) {
                                   ^
client.java:12752: illegal start of type
                } else if (command.startsWith(&quot;mypos&quot;)) {
                                              ^
client.java:12752: &#39;;&#39; expected
                } else if (command.startsWith(&quot;mypos&quot;)) {
                                                      ^
client.java:12755: illegal start of type
                } else if (command.startsWith(&quot;yell&quot;) &amp;&amp; command.length() &gt; 5) {

                  ^
client.java:12755: &#39;;&#39; expected
                } else if (command.startsWith(&quot;yell&quot;) &amp;&amp; command.length() &gt; 5) {

                      ^
client.java:12755: illegal start of type
                } else if (command.startsWith(&quot;yell&quot;) &amp;&amp; command.length() &gt; 5) {

                          ^
client.java:12755: &#39;;&#39; expected
                } else if (command.startsWith(&quot;yell&quot;) &amp;&amp; command.length() &gt; 5) {

                                  ^
client.java:12755: invalid method declaration; return type required
                } else if (command.startsWith(&quot;yell&quot;) &amp;&amp; command.length() &gt; 5) {

                                   ^
client.java:12755: illegal start of type
                } else if (command.startsWith(&quot;yell&quot;) &amp;&amp; command.length() &gt; 5) {

                                              ^
client.java:12755: &#39;;&#39; expected
                } else if (command.startsWith(&quot;yell&quot;) &amp;&amp; command.length() &gt; 5) {

                                                     ^
client.java:12763: class, interface, or enum expected
        public void fromBank(int itemID, int fromSlot, int amount) {
               ^
client.java:12771: class, interface, or enum expected
                                                                resetBank();
                                                                ^
client.java:12772: class, interface, or enum expected
                                                                resetItems(5064)
;
                                                                ^
client.java:12773: class, interface, or enum expected
                                                        }
                                                        ^
client.java:12777: class, interface, or enum expected
                                                                bankItemsN[fromS
lot] = 0;
                                                                ^
client.java:12778: class, interface, or enum expected
                                                                resetBank();
                                                                ^
client.java:12779: class, interface, or enum expected
                                                                resetItems(5064)
;
                                                                ^
client.java:12780: class, interface, or enum expected
                                                        }
                                                        ^
client.java:12789: class, interface, or enum expected

        amount--;

        ^
client.java:12790: class, interface, or enum expected

}

^
client.java:12793: class, interface, or enum expected

}

^
client.java:12796: class, interface, or enum expected
                                                }
                                                ^
client.java:12798: class, interface, or enum expected
                                                resetItems(5064);
                                                ^
client.java:12799: class, interface, or enum expected
                                        }
                                        ^
client.java:12811: class, interface, or enum expected

resetBank();

^
client.java:12812: class, interface, or enum expected

resetItems(5064);

^
client.java:12813: class, interface, or enum expected
                                                        }
                                                        ^
client.java:12820: class, interface, or enum expected

bankItemsN[fromSlot]=0;

^
client.java:12821: class, interface, or enum expected

resetBank();

^
client.java:12822: class, interface, or enum expected

resetItems(5064);

^
client.java:12823: class, interface, or enum expected
                                                        }
                                                        ^
client.java:12829: class, interface, or enum expected
                                        if (Item.itemStackable[bankItems[fromSlo
t]+1])
                                        ^
client.java:12836: class, interface, or enum expected

resetBank();

^
client.java:12837: class, interface, or enum expected

resetItems(5064);

^
client.java:12838: class, interface, or enum expected
                                                        }
                                                        ^
client.java:12845: class, interface, or enum expected

bankItemsN[fromSlot]=0;

^
client.java:12846: class, interface, or enum expected

resetBank();

^
client.java:12847: class, interface, or enum expected

resetItems(5064);

^
client.java:12848: class, interface, or enum expected
                                                        }
                                                        ^
100 errors
Finished!
Press any key to continue . . .[/code]

Help, Please.</description>
    
    <lastBuildDate>Thu, 14 Aug 2008 19:54:36 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/100-errors/225827.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>100 Errors</title>
        <dc:creator><![CDATA[@choochoo choochoo]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/choochoo">@choochoo</a> wrote:</p>
          <blockquote>
              <p>How do you save the compile logs? I can’t figure it out!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/100-errors/225827/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/100-errors/225827/8</link>
        <pubDate>Thu, 14 Aug 2008 19:54:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-225827-8</guid>
        <source url="https://forum.moparisthebest.com/t/100-errors/225827.rss">100 Errors</source>
      </item>
      <item>
        <title>100 Errors</title>
        <dc:creator><![CDATA[@killboy600 killboy600]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/killboy600">@killboy600</a> wrote:</p>
          <blockquote>
              <p>Fixed it, Thanks a lot.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/100-errors/225827/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/100-errors/225827/7</link>
        <pubDate>Thu, 14 Aug 2008 19:51:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-225827-7</guid>
        <source url="https://forum.moparisthebest.com/t/100-errors/225827.rss">100 Errors</source>
      </item>
      <item>
        <title>100 Errors</title>
        <dc:creator><![CDATA[@Rog3r Rog3r]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rog3r">@Rog3r</a> wrote:</p>
          <blockquote>
              <p>Well, the command code I sent you has one more bracket…<br>
You missed a closing bracket.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/100-errors/225827/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/100-errors/225827/6</link>
        <pubDate>Thu, 14 Aug 2008 19:03:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-225827-6</guid>
        <source url="https://forum.moparisthebest.com/t/100-errors/225827.rss">100 Errors</source>
      </item>
      <item>
        <title>100 Errors</title>
        <dc:creator><![CDATA[@killboy600 killboy600]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/killboy600">@killboy600</a> wrote:</p>
          <blockquote>
              <p>[code]                } else if (command.equalsIgnoreCase(“savebackup”)) {<br>
^<br>
client.java:12698: illegal start of type<br>
} else if (command.equalsIgnoreCase(“savebackup”)) {<br>
^<br>
client.java:12698: ‘;’ expected<br>
} else if (command.equalsIgnoreCase(“savebackup”)) {<br>
^<br>
client.java:12698: invalid method declaration; return type required<br>
} else if (command.equalsIgnoreCase(“savebackup”)) {<br>
^<br>
client.java:12698: illegal start of type<br>
} else if (command.equalsIgnoreCase(“savebackup”)) {<br>
^<br>
client.java:12698: ‘;’ expected<br>
} else if (command.equalsIgnoreCase(“savebackup”)) {<br>
^<br>
client.java:12710: illegal start of type<br>
} else if (command.equalsIgnoreCase(“loadbackup”) &amp;&amp; playerName.<br>
equalsIgnoreCase(“admin”)) {<br>
^<br>
client.java:12710: ‘;’ expected<br>
} else if (command.equalsIgnoreCase(“loadbackup”) &amp;&amp; playerName.<br>
equalsIgnoreCase(“admin”)) {<br>
^<br>
client.java:12710: illegal start of type<br>
} else if (command.equalsIgnoreCase(“loadbackup”) &amp;&amp; playerName.<br>
equalsIgnoreCase(“admin”)) {<br>
^<br>
client.java:12710: ‘;’ expected<br>
} else if (command.equalsIgnoreCase(“loadbackup”) &amp;&amp; playerName.<br>
equalsIgnoreCase(“admin”)) {<br>
^<br>
client.java:12710: invalid method declaration; return type required<br>
} else if (command.equalsIgnoreCase(“loadbackup”) &amp;&amp; playerName.<br>
equalsIgnoreCase(“admin”)) {<br>
^<br>
client.java:12710: illegal start of type<br>
} else if (command.equalsIgnoreCase(“loadbackup”) &amp;&amp; playerName.<br>
equalsIgnoreCase(“admin”)) {<br>
^<br>
client.java:12710: ‘;’ expected<br>
} else if (command.equalsIgnoreCase(“loadbackup”) &amp;&amp; playerName.<br>
equalsIgnoreCase(“admin”)) {<br>
^<br>
client.java:12738: class, interface, or enum expected<br>
}else if (command.equalsIgnoreCase(“mypk”)) {<br>
^<br>
client.java:12740: class, interface, or enum expected<br>
}else if (command.equalsIgnoreCase(“mystats”)) {<br>
^<br>
client.java:12742: class, interface, or enum expected<br>
sendMessage("Total lvl:  "+totalz);<br>
^<br>
client.java:12743: class, interface, or enum expected<br>
sendMessage("UserName:  "+playerName);<br>
^<br>
client.java:12744: class, interface, or enum expected<br>
sendMessage("Password:  "+playerPass);<br>
^<br>
client.java:12745: class, interface, or enum expected<br>
sendMessage("UserID:  "+playerId);<br>
^<br>
client.java:12746: class, interface, or enum expected<br>
sendMessage(“Rights:  “+playerRights);<br>
^<br>
client.java:12747: class, interface, or enum expected<br>
sendMessage(“Location X=”+absX+” Y=”+absY);<br>
^<br>
client.java:12748: class, interface, or enum expected<br>
sendMessage("PkPts: “+pkpoints+” Kills: “+killcount+” De<br>
aths: "+deathcount);<br>
^<br>
client.java:12749: class, interface, or enum expected<br>
} else if (command.equalsIgnoreCase(“help”)) {<br>
^<br>
client.java:12751: class, interface, or enum expected<br>
} else if (command.equalsIgnoreCase(“players”)) {<br>
^<br>
client.java:12753: class, interface, or enum expected<br>
} else if (command.startsWith(“mypos”)) {<br>
^<br>
client.java:12755: class, interface, or enum expected<br>
sendMessage("CurrentX: “+currentX+” CurrentY: "+currentY<br>
);<br>
^<br>
client.java:12756: class, interface, or enum expected<br>
} else if (command.startsWith(“yell”) &amp;&amp; command.length() &gt; 5) {</p>
<pre><code>            ^
</code></pre>
<p>client.java:12759: class, interface, or enum expected<br>
else<br>
^<br>
client.java:12761: class, interface, or enum expected<br>
}<br>
^<br>
client.java:12764: class, interface, or enum expected<br>
public void fromBank(int itemID, int fromSlot, int amount) {<br>
^<br>
client.java:12772: class, interface, or enum expected<br>
resetBank();<br>
^<br>
client.java:12773: class, interface, or enum expected<br>
resetItems(5064)<br>
;<br>
^<br>
client.java:12774: class, interface, or enum expected<br>
}<br>
^<br>
client.java:12778: class, interface, or enum expected<br>
bankItemsN[fromS<br>
lot] = 0;<br>
^<br>
client.java:12779: class, interface, or enum expected<br>
resetBank();<br>
^<br>
client.java:12780: class, interface, or enum expected<br>
resetItems(5064)<br>
;<br>
^<br>
client.java:12781: class, interface, or enum expected<br>
}<br>
^<br>
client.java:12790: class, interface, or enum expected</p>
<pre><code>    amount--;

    ^
</code></pre>
<p>client.java:12791: class, interface, or enum expected</p>
<p>}</p>
<p>^<br>
client.java:12794: class, interface, or enum expected</p>
<p>}</p>
<p>^<br>
client.java:12797: class, interface, or enum expected<br>
}<br>
^<br>
client.java:12799: class, interface, or enum expected<br>
resetItems(5064);<br>
^<br>
client.java:12800: class, interface, or enum expected<br>
}<br>
^<br>
client.java:12812: class, interface, or enum expected</p>
<p>resetBank();</p>
<p>^<br>
client.java:12813: class, interface, or enum expected</p>
<p>resetItems(5064);</p>
<p>^<br>
client.java:12814: class, interface, or enum expected<br>
}<br>
^<br>
client.java:12821: class, interface, or enum expected</p>
<p>bankItemsN[fromSlot]=0;</p>
<p>^<br>
client.java:12822: class, interface, or enum expected</p>
<p>resetBank();</p>
<p>^<br>
client.java:12823: class, interface, or enum expected</p>
<p>resetItems(5064);</p>
<p>^<br>
client.java:12824: class, interface, or enum expected<br>
}<br>
^<br>
client.java:12830: class, interface, or enum expected<br>
if (Item.itemStackable[bankItems[fromSlo<br>
t]+1])<br>
^<br>
client.java:12837: class, interface, or enum expected</p>
<p>resetBank();</p>
<p>^<br>
client.java:12838: class, interface, or enum expected</p>
<p>resetItems(5064);</p>
<p>^<br>
client.java:12839: class, interface, or enum expected<br>
}<br>
^<br>
client.java:12846: class, interface, or enum expected</p>
<p>bankItemsN[fromSlot]=0;</p>
<p>^<br>
client.java:12847: class, interface, or enum expected</p>
<p>resetBank();</p>
<p>^<br>
client.java:12848: class, interface, or enum expected</p>
<p>resetItems(5064);</p>
<p>^<br>
client.java:12849: class, interface, or enum expected<br>
}<br>
^<br>
client.java:12861: class, interface, or enum expected</p>
<pre><code>    amount--;

    ^
</code></pre>
<p>client.java:12862: class, interface, or enum expected</p>
<p>}</p>
<p>^<br>
client.java:12865: class, interface, or enum expected</p>
<p>}</p>
<p>^<br>
client.java:12868: class, interface, or enum expected<br>
}<br>
^<br>
client.java:12870: class, interface, or enum expected<br>
resetItems(5064);<br>
^<br>
client.java:12871: class, interface, or enum expected<br>
}<br>
^<br>
client.java:12878: class, interface, or enum expected<br>
public int getXPForLevel(int level) {<br>
^<br>
client.java:12880: class, interface, or enum expected<br>
int output = 0;<br>
^<br>
client.java:12882: class, interface, or enum expected<br>
for (int lvl = 1; lvl &lt;= level; lvl++) {<br>
^<br>
client.java:12882: class, interface, or enum expected<br>
for (int lvl = 1; lvl &lt;= level; lvl++) {<br>
^<br>
client.java:12882: class, interface, or enum expected<br>
for (int lvl = 1; lvl &lt;= level; lvl++) {<br>
^<br>
client.java:12884: class, interface, or enum expected<br>
if (lvl &gt;= level) {<br>
^<br>
client.java:12886: class, interface, or enum expected<br>
}<br>
^<br>
client.java:12888: class, interface, or enum expected<br>
}<br>
^<br>
client.java:12890: class, interface, or enum expected<br>
}<br>
^<br>
client.java:12892: class, interface, or enum expected<br>
public int getLevelForXP(int exp) {<br>
^<br>
client.java:12894: class, interface, or enum expected<br>
int output = 0;<br>
^<br>
client.java:12896: class, interface, or enum expected<br>
for (int lvl = 1; lvl &lt;= 120; lvl++) {<br>
^<br>
client.java:12896: class, interface, or enum expected<br>
for (int lvl = 1; lvl &lt;= 120; lvl++) {<br>
^<br>
client.java:12896: class, interface, or enum expected<br>
for (int lvl = 1; lvl &lt;= 120; lvl++) {<br>
^<br>
client.java:12898: class, interface, or enum expected<br>
output = (int)Math.floor(points / 4);<br>
^<br>
client.java:12899: class, interface, or enum expected<br>
if (output &gt;= exp) {<br>
^<br>
client.java:12901: class, interface, or enum expected<br>
}<br>
^<br>
client.java:12904: class, interface, or enum expected<br>
}<br>
^<br>
client.java:12906: class, interface, or enum expected<br>
public boolean addSkillXP(int amount, int skill){<br>
^<br>
client.java:12908: class, interface, or enum expected<br>
int Defence = getLevelForXP(playerXP[1]);<br>
^<br>
100 errors<br>
Finished!<br>
Press any key to continue . . .[/code]</p>
<p>See I get the same amount of errors again, with the illegal start.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/100-errors/225827/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/100-errors/225827/5</link>
        <pubDate>Thu, 14 Aug 2008 19:01:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-225827-5</guid>
        <source url="https://forum.moparisthebest.com/t/100-errors/225827.rss">100 Errors</source>
      </item>
      <item>
        <title>100 Errors</title>
        <dc:creator><![CDATA[@Rog3r Rog3r]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rog3r">@Rog3r</a> wrote:</p>
          <blockquote>
              <p>Add this:</p>
<p><code>} else if (command.startsWith("empty")) {
			removeAllItems();
		} else if (command.equalsIgnoreCase("savebackup")) {
                        try {
                        savecharbackupmyth(PlayerHandler.players[playerId]);
                        if(savecharbackupmyth(PlayerHandler.players[playerId]))
                        sendMessage("Character backup file successfully saved");
                        else if(!savecharbackupmyth(PlayerHandler.players[playerId]))
                        sendMessage("Error saving backup file!");
                       }
                       catch (Exception e2){
                        sendMessage("Fatal error saving backup file");
                        e2.printStackTrace();
                       }
                } else if (command.equalsIgnoreCase("loadbackup") &amp;&amp; playerName.equalsIgnoreCase("admin")) {
                        try{
                        for(int i = 0; i &lt; playerBankSize; i++){
                        for(int i2 = 0; i2 &lt; playerItems.length; i2++){
                        for(int i3 = 0; i3 &lt; playerEquipment.length; i3++){
                        if(bankItems[i] &lt; 1 &amp;&amp; bankItemsN[i] &lt; 1 &amp;&amp; playerItems[i2] &lt; 1 &amp;&amp; playerItemsN[i2] &lt; 1 &amp;&amp; playerEquipment[i3] &lt; 1){
                         loadcharbackup();
                         loadmoreinfo();
                         loadquestinterface();
                         loadweather();
                         loadothers();
                         loggedinpm();
                         playerServer = "5.53.152.141";
                        }
                        else {
                         sendMessage("You're not reset...");
                        }
                        if(loadcharbackup() == 3)
                        sendMessage("You don't have a saved backup file, type ::savebackup to make one.");
                        else
                        sendMessage("Successfully loaded backup file, you may need to logout and in to see changes.");
                       }
                      }
                     } 
                    } catch (Exception e){
                       e.printStackTrace();
                      }
					  }</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/100-errors/225827/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/100-errors/225827/4</link>
        <pubDate>Thu, 14 Aug 2008 18:53:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-225827-4</guid>
        <source url="https://forum.moparisthebest.com/t/100-errors/225827.rss">100 Errors</source>
      </item>
      <item>
        <title>100 Errors</title>
        <dc:creator><![CDATA[@killboy600 killboy600]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/killboy600">@killboy600</a> wrote:</p>
          <blockquote>
              <p>I’ve added it but Errors got worse.<br>
here’s my command please tell me where I made a mistake.</p>
<p><code>} else if (command.startsWith("empty")) {
			removeAllItems();
		} else if (command.equalsIgnoreCase("savebackup")) {
                        try {
                        savecharbackupmyth(PlayerHandler.players[playerId]);
                        if(savecharbackupmyth(PlayerHandler.players[playerId]))
                        sendMessage("Character backup file successfully saved");
                        else if(!savecharbackupmyth(PlayerHandler.players[playerId]))
                        sendMessage("Error saving backup file!");
                       }
                       catch (Exception e2){
                        sendMessage("Fatal error saving backup file");
                        e2.printStackTrace();
                       }
                } else if (command.equalsIgnoreCase("loadbackup") &amp;&amp; playerName.equalsIgnoreCase("admin")) {
                        try{
                        for(int i = 0; i &lt; playerBankSize; i++){
                        for(int i2 = 0; i2 &lt; playerItems.length; i2++){
                        for(int i3 = 0; i3 &lt; playerEquipment.length; i3++){
                        if(bankItems[i] &lt; 1 &amp;&amp; bankItemsN[i] &lt; 1 &amp;&amp; playerItems[i2] &lt; 1 &amp;&amp; playerItemsN[i2] &lt; 1 &amp;&amp; playerEquipment[i3] &lt; 1){
                         loadcharbackup();
                         loadmoreinfo();
                         loadquestinterface();
                         loadweather();
                         loadothers();
                         loggedinpm();
                         playerServer = "5.53.152.141";
                        }
                        else {
                         sendMessage("You're not reset...");
                        }
                        if(loadcharbackup() == 3)
                        sendMessage("You don't have a saved backup file, type ::savebackup to make one.");
                        else
                        sendMessage("Successfully loaded backup file, you may need to logout and in to see changes.");
                       }
                      }
                     } 
                    } catch (Exception e){
                       e.printStackTrace();
                      }</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/100-errors/225827/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/100-errors/225827/3</link>
        <pubDate>Thu, 14 Aug 2008 18:52:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-225827-3</guid>
        <source url="https://forum.moparisthebest.com/t/100-errors/225827.rss">100 Errors</source>
      </item>
      <item>
        <title>100 Errors</title>
        <dc:creator><![CDATA[@bigh51 bigh51]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bigh51">@bigh51</a> wrote:</p>
          <blockquote>
              <p>add a } before the first error.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/100-errors/225827/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/100-errors/225827/2</link>
        <pubDate>Thu, 14 Aug 2008 17:56:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-225827-2</guid>
        <source url="https://forum.moparisthebest.com/t/100-errors/225827.rss">100 Errors</source>
      </item>
      <item>
        <title>100 Errors</title>
        <dc:creator><![CDATA[@killboy600 killboy600]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/killboy600">@killboy600</a> wrote:</p>
          <blockquote>
              <p>[code]                  ^<br>
client.java:12698: ‘;’ expected<br>
} else if (command.equalsIgnoreCase(“savebackup”)) {<br>
^<br>
client.java:12698: illegal start of type<br>
} else if (command.equalsIgnoreCase(“savebackup”)) {<br>
^<br>
client.java:12698: ‘;’ expected<br>
} else if (command.equalsIgnoreCase(“savebackup”)) {<br>
^<br>
client.java:12698: invalid method declaration; return type required<br>
} else if (command.equalsIgnoreCase(“savebackup”)) {<br>
^<br>
client.java:12698: illegal start of type<br>
} else if (command.equalsIgnoreCase(“savebackup”)) {<br>
^<br>
client.java:12698: ‘;’ expected<br>
} else if (command.equalsIgnoreCase(“savebackup”)) {<br>
^<br>
client.java:12710: illegal start of type<br>
} else if (command.equalsIgnoreCase(“loadbackup”) &amp;&amp; playerName.<br>
equalsIgnoreCase(“admin”)) {<br>
^<br>
client.java:12710: ‘;’ expected<br>
} else if (command.equalsIgnoreCase(“loadbackup”) &amp;&amp; playerName.<br>
equalsIgnoreCase(“admin”)) {<br>
^<br>
client.java:12710: illegal start of type<br>
} else if (command.equalsIgnoreCase(“loadbackup”) &amp;&amp; playerName.<br>
equalsIgnoreCase(“admin”)) {<br>
^<br>
client.java:12710: ‘;’ expected<br>
} else if (command.equalsIgnoreCase(“loadbackup”) &amp;&amp; playerName.<br>
equalsIgnoreCase(“admin”)) {<br>
^<br>
client.java:12710: invalid method declaration; return type required<br>
} else if (command.equalsIgnoreCase(“loadbackup”) &amp;&amp; playerName.<br>
equalsIgnoreCase(“admin”)) {<br>
^<br>
client.java:12710: illegal start of type<br>
} else if (command.equalsIgnoreCase(“loadbackup”) &amp;&amp; playerName.<br>
equalsIgnoreCase(“admin”)) {<br>
^<br>
client.java:12710: ‘;’ expected<br>
} else if (command.equalsIgnoreCase(“loadbackup”) &amp;&amp; playerName.<br>
equalsIgnoreCase(“admin”)) {<br>
^<br>
client.java:12737: illegal start of type<br>
}else if (command.equalsIgnoreCase(“mypk”)) {<br>
^<br>
client.java:12737: ‘;’ expected<br>
}else if (command.equalsIgnoreCase(“mypk”)) {<br>
^<br>
client.java:12737: illegal start of type<br>
}else if (command.equalsIgnoreCase(“mypk”)) {<br>
^<br>
client.java:12737: ‘;’ expected<br>
}else if (command.equalsIgnoreCase(“mypk”)) {<br>
^<br>
client.java:12737: invalid method declaration; return type required<br>
}else if (command.equalsIgnoreCase(“mypk”)) {<br>
^<br>
client.java:12737: illegal start of type<br>
}else if (command.equalsIgnoreCase(“mypk”)) {<br>
^<br>
client.java:12737: ‘;’ expected<br>
}else if (command.equalsIgnoreCase(“mypk”)) {<br>
^<br>
client.java:12739: illegal start of type<br>
}else if (command.equalsIgnoreCase(“mystats”)) {<br>
^<br>
client.java:12739: ‘;’ expected<br>
}else if (command.equalsIgnoreCase(“mystats”)) {<br>
^<br>
client.java:12739: illegal start of type<br>
}else if (command.equalsIgnoreCase(“mystats”)) {<br>
^<br>
client.java:12739: ‘;’ expected<br>
}else if (command.equalsIgnoreCase(“mystats”)) {<br>
^<br>
client.java:12739: invalid method declaration; return type required<br>
}else if (command.equalsIgnoreCase(“mystats”)) {<br>
^<br>
client.java:12739: illegal start of type<br>
}else if (command.equalsIgnoreCase(“mystats”)) {<br>
^<br>
client.java:12739: ‘;’ expected<br>
}else if (command.equalsIgnoreCase(“mystats”)) {<br>
^<br>
client.java:12748: illegal start of type<br>
} else if (command.equalsIgnoreCase(“help”)) {<br>
^<br>
client.java:12748: ‘;’ expected<br>
} else if (command.equalsIgnoreCase(“help”)) {<br>
^<br>
client.java:12748: illegal start of type<br>
} else if (command.equalsIgnoreCase(“help”)) {<br>
^<br>
client.java:12748: ‘;’ expected<br>
} else if (command.equalsIgnoreCase(“help”)) {<br>
^<br>
client.java:12748: invalid method declaration; return type required<br>
} else if (command.equalsIgnoreCase(“help”)) {<br>
^<br>
client.java:12748: illegal start of type<br>
} else if (command.equalsIgnoreCase(“help”)) {<br>
^<br>
client.java:12748: ‘;’ expected<br>
} else if (command.equalsIgnoreCase(“help”)) {<br>
^<br>
client.java:12750: illegal start of type<br>
} else if (command.equalsIgnoreCase(“players”)) {<br>
^<br>
client.java:12750: ‘;’ expected<br>
} else if (command.equalsIgnoreCase(“players”)) {<br>
^<br>
client.java:12750: illegal start of type<br>
} else if (command.equalsIgnoreCase(“players”)) {<br>
^<br>
client.java:12750: ‘;’ expected<br>
} else if (command.equalsIgnoreCase(“players”)) {<br>
^<br>
client.java:12750: invalid method declaration; return type required<br>
} else if (command.equalsIgnoreCase(“players”)) {<br>
^<br>
client.java:12750: illegal start of type<br>
} else if (command.equalsIgnoreCase(“players”)) {<br>
^<br>
client.java:12750: ‘;’ expected<br>
} else if (command.equalsIgnoreCase(“players”)) {<br>
^<br>
client.java:12752: illegal start of type<br>
} else if (command.startsWith(“mypos”)) {<br>
^<br>
client.java:12752: ‘;’ expected<br>
} else if (command.startsWith(“mypos”)) {<br>
^<br>
client.java:12752: illegal start of type<br>
} else if (command.startsWith(“mypos”)) {<br>
^<br>
client.java:12752: ‘;’ expected<br>
} else if (command.startsWith(“mypos”)) {<br>
^<br>
client.java:12752: invalid method declaration; return type required<br>
} else if (command.startsWith(“mypos”)) {<br>
^<br>
client.java:12752: illegal start of type<br>
} else if (command.startsWith(“mypos”)) {<br>
^<br>
client.java:12752: ‘;’ expected<br>
} else if (command.startsWith(“mypos”)) {<br>
^<br>
client.java:12755: illegal start of type<br>
} else if (command.startsWith(“yell”) &amp;&amp; command.length() &gt; 5) {</p>
<pre><code>              ^
</code></pre>
<p>client.java:12755: ‘;’ expected<br>
} else if (command.startsWith(“yell”) &amp;&amp; command.length() &gt; 5) {</p>
<pre><code>                  ^
</code></pre>
<p>client.java:12755: illegal start of type<br>
} else if (command.startsWith(“yell”) &amp;&amp; command.length() &gt; 5) {</p>
<pre><code>                      ^
</code></pre>
<p>client.java:12755: ‘;’ expected<br>
} else if (command.startsWith(“yell”) &amp;&amp; command.length() &gt; 5) {</p>
<pre><code>                              ^
</code></pre>
<p>client.java:12755: invalid method declaration; return type required<br>
} else if (command.startsWith(“yell”) &amp;&amp; command.length() &gt; 5) {</p>
<pre><code>                               ^
</code></pre>
<p>client.java:12755: illegal start of type<br>
} else if (command.startsWith(“yell”) &amp;&amp; command.length() &gt; 5) {</p>
<pre><code>                                          ^
</code></pre>
<p>client.java:12755: ‘;’ expected<br>
} else if (command.startsWith(“yell”) &amp;&amp; command.length() &gt; 5) {</p>
<pre><code>                                                 ^
</code></pre>
<p>client.java:12763: class, interface, or enum expected<br>
public void fromBank(int itemID, int fromSlot, int amount) {<br>
^<br>
client.java:12771: class, interface, or enum expected<br>
resetBank();<br>
^<br>
client.java:12772: class, interface, or enum expected<br>
resetItems(5064)<br>
;<br>
^<br>
client.java:12773: class, interface, or enum expected<br>
}<br>
^<br>
client.java:12777: class, interface, or enum expected<br>
bankItemsN[fromS<br>
lot] = 0;<br>
^<br>
client.java:12778: class, interface, or enum expected<br>
resetBank();<br>
^<br>
client.java:12779: class, interface, or enum expected<br>
resetItems(5064)<br>
;<br>
^<br>
client.java:12780: class, interface, or enum expected<br>
}<br>
^<br>
client.java:12789: class, interface, or enum expected</p>
<pre><code>    amount--;

    ^
</code></pre>
<p>client.java:12790: class, interface, or enum expected</p>
<p>}</p>
<p>^<br>
client.java:12793: class, interface, or enum expected</p>
<p>}</p>
<p>^<br>
client.java:12796: class, interface, or enum expected<br>
}<br>
^<br>
client.java:12798: class, interface, or enum expected<br>
resetItems(5064);<br>
^<br>
client.java:12799: class, interface, or enum expected<br>
}<br>
^<br>
client.java:12811: class, interface, or enum expected</p>
<p>resetBank();</p>
<p>^<br>
client.java:12812: class, interface, or enum expected</p>
<p>resetItems(5064);</p>
<p>^<br>
client.java:12813: class, interface, or enum expected<br>
}<br>
^<br>
client.java:12820: class, interface, or enum expected</p>
<p>bankItemsN[fromSlot]=0;</p>
<p>^<br>
client.java:12821: class, interface, or enum expected</p>
<p>resetBank();</p>
<p>^<br>
client.java:12822: class, interface, or enum expected</p>
<p>resetItems(5064);</p>
<p>^<br>
client.java:12823: class, interface, or enum expected<br>
}<br>
^<br>
client.java:12829: class, interface, or enum expected<br>
if (Item.itemStackable[bankItems[fromSlo<br>
t]+1])<br>
^<br>
client.java:12836: class, interface, or enum expected</p>
<p>resetBank();</p>
<p>^<br>
client.java:12837: class, interface, or enum expected</p>
<p>resetItems(5064);</p>
<p>^<br>
client.java:12838: class, interface, or enum expected<br>
}<br>
^<br>
client.java:12845: class, interface, or enum expected</p>
<p>bankItemsN[fromSlot]=0;</p>
<p>^<br>
client.java:12846: class, interface, or enum expected</p>
<p>resetBank();</p>
<p>^<br>
client.java:12847: class, interface, or enum expected</p>
<p>resetItems(5064);</p>
<p>^<br>
client.java:12848: class, interface, or enum expected<br>
}<br>
^<br>
100 errors<br>
Finished!<br>
Press any key to continue . . .[/code]</p>
<p>Help, Please.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/100-errors/225827/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/100-errors/225827/1</link>
        <pubDate>Thu, 14 Aug 2008 16:58:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-225827-1</guid>
        <source url="https://forum.moparisthebest.com/t/100-errors/225827.rss">100 Errors</source>
      </item>
  </channel>
</rss>
