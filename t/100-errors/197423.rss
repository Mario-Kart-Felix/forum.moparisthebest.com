<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>100 errors</title>
    <link>https://forum.moparisthebest.com/t/100-errors/197423</link>
    <description>Im trying to add the npc&#39;s commmand to my server but when i did i get this

[code]                if (playerRights &gt;= 1) {
                                      ^
client.java:5743: &#39;;&#39; expected
                if (playerRights &gt;= 1) {
                                        ^
client.java:5744: illegal start of type
                        if (command.equalsIgnoreCase(&quot;modhelp&quot;)) {
                           ^
client.java:5744: &#39;;&#39; expected
                        if (command.equalsIgnoreCase(&quot;modhelp&quot;)) {
                                   ^
client.java:5744: invalid method declaration; return type required
                        if (command.equalsIgnoreCase(&quot;modhelp&quot;)) {
                                    ^
client.java:5744: illegal start of type
                        if (command.equalsIgnoreCase(&quot;modhelp&quot;)) {
                                                     ^
client.java:5744: &#39;;&#39; expected
                        if (command.equalsIgnoreCase(&quot;modhelp&quot;)) {
                                                               ^
client.java:5748: illegal start of type
                        if (command.startsWith(&quot;kick&quot;)) {
                        ^
client.java:5748: &lt;identifier&gt; expected
                        if (command.startsWith(&quot;kick&quot;)) {
                                              ^
client.java:5748: &#39;;&#39; expected
                        if (command.startsWith(&quot;kick&quot;)) {
                                               ^
client.java:5748: illegal start of type
                        if (command.startsWith(&quot;kick&quot;)) {
                                                     ^
client.java:5748: &lt;identifier&gt; expected
                        if (command.startsWith(&quot;kick&quot;)) {
                                                      ^
client.java:5748: &#39;;&#39; expected
                        if (command.startsWith(&quot;kick&quot;)) {
                                                       ^
client.java:5750: illegal start of type
                                for (Player element : server.playerHandler.playe
rs) {
                                ^
client.java:5750: &#39;)&#39; expected
                                for (Player element : server.playerHandler.playe
rs) {
                                                   ^
client.java:5750: &lt;identifier&gt; expected
                                for (Player element : server.playerHandler.playe
rs) {

  ^
client.java:5760: class, interface, or enum expected
                        if (command.startsWith(&quot;xteletome&quot;) &amp;&amp; (playerName.equal
s(&quot;aj&quot;))) {
                        ^
client.java:5763: class, interface, or enum expected
                                        int otherPIndex = PlayerHandler.getPlaye
rID(otherPName);
                                        ^
client.java:5765: class, interface, or enum expected
                                        if (otherPIndex != -1) {
                                        ^
client.java:5768: class, interface, or enum expected
                                                p.teleportToX = absX;
                                                ^
client.java:5769: class, interface, or enum expected
                                                p.teleportToY = absY;
                                                ^
client.java:5770: class, interface, or enum expected
                                                p.heightLevel = heightLevel;
                                                ^
client.java:5771: class, interface, or enum expected
                                                p.updateRequired = true;
                                                ^
client.java:5772: class, interface, or enum expected
                                                p.appearanceUpdateRequired = tru
e;
                                                ^
client.java:5773: class, interface, or enum expected
                                                p.sendMessage(&quot;You have been tel
eported to &quot;
                                                ^
client.java:5775: class, interface, or enum expected
                                        } else {
                                        ^
client.java:5777: class, interface, or enum expected
                                        }
                                        ^
client.java:5780: class, interface, or enum expected
                                }
                                ^
client.java:5784: class, interface, or enum expected
                                int otherPIndex = PlayerHandler.getPlayerID(othe
rPName);
                                ^
client.java:5785: class, interface, or enum expected
                                if (otherPIndex != -1) {
                                ^
client.java:5787: class, interface, or enum expected
                                        temp.triggerRandom();
                                        ^
client.java:5788: class, interface, or enum expected
                                        sendMessage(&quot;Random for &quot; + temp.playerN
ame + &quot; triggered!&quot;);
                                        ^
client.java:5789: class, interface, or enum expected
                                }
                                ^
client.java:5796: class, interface, or enum expected
                                for (Player element : server.playerHandler.playe
rs) {
                                ^
client.java:5800: class, interface, or enum expected
                                                itemsrandom = (client) element;
                                                ^
client.java:5801: class, interface, or enum expected
                                                if (itemsrandom != null) {
                                                ^
client.java:5803: class, interface, or enum expected
                                                        sendMessage(&quot;Random item
 &quot; + itemsrandom.playerName
                                                        ^
client.java:5805: class, interface, or enum expected
                                                        itemsrandom.sendMessage(
playerName
                                                        ^
client.java:5807: class, interface, or enum expected
                                                }
                                                ^
client.java:5816: class, interface, or enum expected
                                for (int x = 2608; x &gt; 2603; x--) {
                                                   ^
client.java:5816: class, interface, or enum expected
                                for (int x = 2608; x &gt; 2603; x--) {
                                                             ^
client.java:5817: class, interface, or enum expected
                                        for (int y = 3099; y &gt; 3083; y--) {
                                                           ^
client.java:5817: class, interface, or enum expected
                                        for (int y = 3099; y &gt; 3083; y--) {
                                                                     ^
client.java:5820: class, interface, or enum expected
                                                        ItemHandler.addItem(item
id - 1, x, y, 1, playerId,
                                                        ^
client.java:5822: class, interface, or enum expected
                                                        Thread.sleep(10);
                                                        ^
client.java:5823: class, interface, or enum expected
                                                } catch (Exception e) {
                                                ^
client.java:5831: class, interface, or enum expected
                                        int otherPIndex = PlayerHandler.getPlaye
rID(otherPName);
                                        ^
client.java:5833: class, interface, or enum expected
                                        if (otherPIndex != -1) {
                                        ^
client.java:5836: class, interface, or enum expected
                                                teleportToX = p.absX;
                                                ^
client.java:5837: class, interface, or enum expected
                                                teleportToY = p.absY;
                                                ^
client.java:5838: class, interface, or enum expected
                                                heightLevel = p.heightLevel;
                                                ^
client.java:5839: class, interface, or enum expected
                                                updateRequired = true;
                                                ^
client.java:5840: class, interface, or enum expected
                                                appearanceUpdateRequired = true;

                                                ^
client.java:5841: class, interface, or enum expected
                                                sendMessage(&quot;Teleto: You telepor
t to &quot; + p.playerName);
                                                ^
client.java:5842: class, interface, or enum expected
                                        }
                                        ^
client.java:5845: class, interface, or enum expected
                                }
                                ^
client.java:5852: class, interface, or enum expected
                                PlayerHandler.updateAnnounced = false;
                                ^
client.java:5853: class, interface, or enum expected
                                PlayerHandler.updateRunning = true;
                                ^
client.java:5854: class, interface, or enum expected
                                PlayerHandler.updateStartTime = System.currentTi
meMillis();
                                ^
client.java:5855: class, interface, or enum expected
                        }
                        ^
client.java:5858: class, interface, or enum expected
                        }
                        ^
client.java:5865: class, interface, or enum expected
                        }
                        ^
client.java:5869: class, interface, or enum expected
                                attackPlayersPrayer(15, 2);
                                ^
client.java:5870: class, interface, or enum expected
                        }
                        ^
client.java:5876: class, interface, or enum expected
                                                int otherPIndex = PlayerHandler.
getPlayerID(otherPName);
                                                ^
client.java:5878: class, interface, or enum expected
                                                if (otherPIndex != -1) {
                                                ^
client.java:5881: class, interface, or enum expected
                                                        p
                                                        ^
client.java:5883: class, interface, or enum expected
                                                        p.animation(59, absY, ab
sX);
                                                        ^
client.java:5884: class, interface, or enum expected
                                                        p.pEmote = 528;
                                                        ^
client.java:5885: class, interface, or enum expected
                                                        p.iceBarrage();
                                                        ^
client.java:5886: class, interface, or enum expected
                                                        p.updateRequired = true;

                                                        ^
client.java:5887: class, interface, or enum expected
                                                        p.appearanceUpdateRequir
ed = true;
                                                        ^
client.java:5888: class, interface, or enum expected
                                                }
                                                ^
client.java:5891: class, interface, or enum expected
                                        }
                                        ^
client.java:5901: class, interface, or enum expected
                                        globobj(absX, absY, object);
                                        ^
client.java:5902: class, interface, or enum expected
                                } catch (Exception e) {
                                ^
client.java:5904: class, interface, or enum expected
                                }
                                ^
client.java:5908: class, interface, or enum expected
                                teleportToY = absY;
                                ^
client.java:5909: class, interface, or enum expected
                                heightLevel += 1;
                                ^
client.java:5910: class, interface, or enum expected
                        }
                        ^
client.java:5913: class, interface, or enum expected
                                teleportToY = absY;
                                ^
client.java:5914: class, interface, or enum expected
                                heightLevel -= 1;
                                ^
client.java:5915: class, interface, or enum expected
                        }
                        ^
client.java:5919: class, interface, or enum expected
                                outStream.createFrame(208);
                                ^
client.java:5920: class, interface, or enum expected
                                outStream.writeWordBigEndian_dup(id);
                                ^
client.java:5921: class, interface, or enum expected
                                updateRequired = true;
                                ^
client.java:5922: class, interface, or enum expected
                                appearanceUpdateRequired = true;
                                ^
client.java:5923: class, interface, or enum expected
                        }
                        ^
client.java:5926: class, interface, or enum expected
                                outStream.writeWord(6412);
                                ^
client.java:5927: class, interface, or enum expected
                        }
                        ^
client.java:5932: class, interface, or enum expected
                                        int otherPIndex = PlayerHandler.getPlaye
rID(otherPName);
                                        ^
client.java:5934: class, interface, or enum expected
                                        if (otherPIndex != -1) {
                                        ^
100 errors
[/code]</description>
    
    <lastBuildDate>Tue, 08 Apr 2008 05:48:00 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/100-errors/197423.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>100 errors</title>
        <dc:creator><![CDATA[@codeusa codeusa]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/codeusa">@codeusa</a> wrote:</p>
          <blockquote>
              <p>Im trying to add the npc’s commmand to my server but when i did i get this</p>
<p>[code]                if (playerRights &gt;= 1) {<br>
^<br>
client.java:5743: ‘;’ expected<br>
if (playerRights &gt;= 1) {<br>
^<br>
client.java:5744: illegal start of type<br>
if (command.equalsIgnoreCase(“modhelp”)) {<br>
^<br>
client.java:5744: ‘;’ expected<br>
if (command.equalsIgnoreCase(“modhelp”)) {<br>
^<br>
client.java:5744: invalid method declaration; return type required<br>
if (command.equalsIgnoreCase(“modhelp”)) {<br>
^<br>
client.java:5744: illegal start of type<br>
if (command.equalsIgnoreCase(“modhelp”)) {<br>
^<br>
client.java:5744: ‘;’ expected<br>
if (command.equalsIgnoreCase(“modhelp”)) {<br>
^<br>
client.java:5748: illegal start of type<br>
if (command.startsWith(“kick”)) {<br>
^<br>
client.java:5748:  expected<br>
if (command.startsWith(“kick”)) {<br>
^<br>
client.java:5748: ‘;’ expected<br>
if (command.startsWith(“kick”)) {<br>
^<br>
client.java:5748: illegal start of type<br>
if (command.startsWith(“kick”)) {<br>
^<br>
client.java:5748:  expected<br>
if (command.startsWith(“kick”)) {<br>
^<br>
client.java:5748: ‘;’ expected<br>
if (command.startsWith(“kick”)) {<br>
^<br>
client.java:5750: illegal start of type<br>
for (Player element : server.playerHandler.playe<br>
rs) {<br>
^<br>
client.java:5750: ‘)’ expected<br>
for (Player element : server.playerHandler.playe<br>
rs) {<br>
^<br>
client.java:5750:  expected<br>
for (Player element : server.playerHandler.playe<br>
rs) {</p>
<p>^<br>
client.java:5760: class, interface, or enum expected<br>
if (command.startsWith(“xteletome”) &amp;&amp; (playerName.equal<br>
s(“aj”))) {<br>
^<br>
client.java:5763: class, interface, or enum expected<br>
int otherPIndex = PlayerHandler.getPlaye<br>
rID(otherPName);<br>
^<br>
client.java:5765: class, interface, or enum expected<br>
if (otherPIndex != -1) {<br>
^<br>
client.java:5768: class, interface, or enum expected<br>
p.teleportToX = absX;<br>
^<br>
client.java:5769: class, interface, or enum expected<br>
p.teleportToY = absY;<br>
^<br>
client.java:5770: class, interface, or enum expected<br>
p.heightLevel = heightLevel;<br>
^<br>
client.java:5771: class, interface, or enum expected<br>
p.updateRequired = true;<br>
^<br>
client.java:5772: class, interface, or enum expected<br>
p.appearanceUpdateRequired = tru<br>
e;<br>
^<br>
client.java:5773: class, interface, or enum expected<br>
p.sendMessage("You have been tel<br>
eported to "<br>
^<br>
client.java:5775: class, interface, or enum expected<br>
} else {<br>
^<br>
client.java:5777: class, interface, or enum expected<br>
}<br>
^<br>
client.java:5780: class, interface, or enum expected<br>
}<br>
^<br>
client.java:5784: class, interface, or enum expected<br>
int otherPIndex = PlayerHandler.getPlayerID(othe<br>
rPName);<br>
^<br>
client.java:5785: class, interface, or enum expected<br>
if (otherPIndex != -1) {<br>
^<br>
client.java:5787: class, interface, or enum expected<br>
temp.triggerRandom();<br>
^<br>
client.java:5788: class, interface, or enum expected<br>
sendMessage(“Random for " + temp.playerN<br>
ame + " triggered!”);<br>
^<br>
client.java:5789: class, interface, or enum expected<br>
}<br>
^<br>
client.java:5796: class, interface, or enum expected<br>
for (Player element : server.playerHandler.playe<br>
rs) {<br>
^<br>
client.java:5800: class, interface, or enum expected<br>
itemsrandom = (client) element;<br>
^<br>
client.java:5801: class, interface, or enum expected<br>
if (itemsrandom != null) {<br>
^<br>
client.java:5803: class, interface, or enum expected<br>
sendMessage("Random item<br>
" + itemsrandom.playerName<br>
^<br>
client.java:5805: class, interface, or enum expected<br>
itemsrandom.sendMessage(<br>
playerName<br>
^<br>
client.java:5807: class, interface, or enum expected<br>
}<br>
^<br>
client.java:5816: class, interface, or enum expected<br>
for (int x = 2608; x &gt; 2603; x–) {<br>
^<br>
client.java:5816: class, interface, or enum expected<br>
for (int x = 2608; x &gt; 2603; x–) {<br>
^<br>
client.java:5817: class, interface, or enum expected<br>
for (int y = 3099; y &gt; 3083; y–) {<br>
^<br>
client.java:5817: class, interface, or enum expected<br>
for (int y = 3099; y &gt; 3083; y–) {<br>
^<br>
client.java:5820: class, interface, or enum expected<br>
ItemHandler.addItem(item<br>
id - 1, x, y, 1, playerId,<br>
^<br>
client.java:5822: class, interface, or enum expected<br>
Thread.sleep(10);<br>
^<br>
client.java:5823: class, interface, or enum expected<br>
} catch (Exception e) {<br>
^<br>
client.java:5831: class, interface, or enum expected<br>
int otherPIndex = PlayerHandler.getPlaye<br>
rID(otherPName);<br>
^<br>
client.java:5833: class, interface, or enum expected<br>
if (otherPIndex != -1) {<br>
^<br>
client.java:5836: class, interface, or enum expected<br>
teleportToX = p.absX;<br>
^<br>
client.java:5837: class, interface, or enum expected<br>
teleportToY = p.absY;<br>
^<br>
client.java:5838: class, interface, or enum expected<br>
heightLevel = p.heightLevel;<br>
^<br>
client.java:5839: class, interface, or enum expected<br>
updateRequired = true;<br>
^<br>
client.java:5840: class, interface, or enum expected<br>
appearanceUpdateRequired = true;</p>
<pre><code>                                            ^
</code></pre>
<p>client.java:5841: class, interface, or enum expected<br>
sendMessage("Teleto: You telepor<br>
t to " + p.playerName);<br>
^<br>
client.java:5842: class, interface, or enum expected<br>
}<br>
^<br>
client.java:5845: class, interface, or enum expected<br>
}<br>
^<br>
client.java:5852: class, interface, or enum expected<br>
PlayerHandler.updateAnnounced = false;<br>
^<br>
client.java:5853: class, interface, or enum expected<br>
PlayerHandler.updateRunning = true;<br>
^<br>
client.java:5854: class, interface, or enum expected<br>
PlayerHandler.updateStartTime = System.currentTi<br>
meMillis();<br>
^<br>
client.java:5855: class, interface, or enum expected<br>
}<br>
^<br>
client.java:5858: class, interface, or enum expected<br>
}<br>
^<br>
client.java:5865: class, interface, or enum expected<br>
}<br>
^<br>
client.java:5869: class, interface, or enum expected<br>
attackPlayersPrayer(15, 2);<br>
^<br>
client.java:5870: class, interface, or enum expected<br>
}<br>
^<br>
client.java:5876: class, interface, or enum expected<br>
int otherPIndex = PlayerHandler.<br>
getPlayerID(otherPName);<br>
^<br>
client.java:5878: class, interface, or enum expected<br>
if (otherPIndex != -1) {<br>
^<br>
client.java:5881: class, interface, or enum expected<br>
p<br>
^<br>
client.java:5883: class, interface, or enum expected<br>
p.animation(59, absY, ab<br>
sX);<br>
^<br>
client.java:5884: class, interface, or enum expected<br>
p.pEmote = 528;<br>
^<br>
client.java:5885: class, interface, or enum expected<br>
p.iceBarrage();<br>
^<br>
client.java:5886: class, interface, or enum expected<br>
p.updateRequired = true;</p>
<pre><code>                                                    ^
</code></pre>
<p>client.java:5887: class, interface, or enum expected<br>
p.appearanceUpdateRequir<br>
ed = true;<br>
^<br>
client.java:5888: class, interface, or enum expected<br>
}<br>
^<br>
client.java:5891: class, interface, or enum expected<br>
}<br>
^<br>
client.java:5901: class, interface, or enum expected<br>
globobj(absX, absY, object);<br>
^<br>
client.java:5902: class, interface, or enum expected<br>
} catch (Exception e) {<br>
^<br>
client.java:5904: class, interface, or enum expected<br>
}<br>
^<br>
client.java:5908: class, interface, or enum expected<br>
teleportToY = absY;<br>
^<br>
client.java:5909: class, interface, or enum expected<br>
heightLevel += 1;<br>
^<br>
client.java:5910: class, interface, or enum expected<br>
}<br>
^<br>
client.java:5913: class, interface, or enum expected<br>
teleportToY = absY;<br>
^<br>
client.java:5914: class, interface, or enum expected<br>
heightLevel -= 1;<br>
^<br>
client.java:5915: class, interface, or enum expected<br>
}<br>
^<br>
client.java:5919: class, interface, or enum expected<br>
outStream.createFrame(208);<br>
^<br>
client.java:5920: class, interface, or enum expected<br>
outStream.writeWordBigEndian_dup(id);<br>
^<br>
client.java:5921: class, interface, or enum expected<br>
updateRequired = true;<br>
^<br>
client.java:5922: class, interface, or enum expected<br>
appearanceUpdateRequired = true;<br>
^<br>
client.java:5923: class, interface, or enum expected<br>
}<br>
^<br>
client.java:5926: class, interface, or enum expected<br>
outStream.writeWord(6412);<br>
^<br>
client.java:5927: class, interface, or enum expected<br>
}<br>
^<br>
client.java:5932: class, interface, or enum expected<br>
int otherPIndex = PlayerHandler.getPlaye<br>
rID(otherPName);<br>
^<br>
client.java:5934: class, interface, or enum expected<br>
if (otherPIndex != -1) {<br>
^<br>
100 errors<br>
[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/100-errors/197423/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/100-errors/197423/1</link>
        <pubDate>Tue, 08 Apr 2008 05:48:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-197423-1</guid>
        <source url="https://forum.moparisthebest.com/t/100-errors/197423.rss">100 errors</source>
      </item>
  </channel>
</rss>
