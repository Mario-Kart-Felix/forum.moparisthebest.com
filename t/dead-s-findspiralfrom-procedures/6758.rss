<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>*DEAD*s findspiralfrom procedures</title>
    <link>https://forum.moparisthebest.com/t/dead-s-findspiralfrom-procedures/6758</link>
    <description>hi, something that always bothered me about scar (and i honestly dont know why i still use scar) is the get spiral function. back when i was building my robot way way back, i needed to a way to find high concentrations of colours. i wound up using a rather complicated algrithm, but before that i figured that i needed something just like the findspiral commands. when i ran some tests to find out exactly how they worked, i found that its not as impressive as it sounds. i thought it found high concentrations of colours, in reality, it just draws a spiral starting in the top left hand corner and gradually gets bigger until its searched the whole box. i found this rather annoying, so some time ago i made a &quot;findspiralfrom&quot; script which instead of starting in the corner, it starts at a specified points, and continues outward to a radius.

theres a few really neat thigns that this allows you to do. instead of searching for random ores, you can now find the ore closest to you. i also added a &quot;start radius&quot; function which will start the search from outside a box with a radius of whatever. i did this because i figured it was rather useless scanning yourself all the time, as thats where you usually initiated the search from. futher more, if you modify the curradius to be a global variable, or a variable from another procedure, you can find out how far out it was when you last stopped searching. so suppose you find an object with a colour, but it wasnt the right object you were looking for. if you reapeat the search, youll find the same object, but if you know the radius to start at, you can ignore the area youve already searched.

as always, enjoy.

[code]
function findspiralfrom(var x,y : integer; radius,startradius,colour : integer) : boolean;
var
   curradius,i : integer;
begin
     x := x - startradius;
     y := y - startradius;
     curradius := 2 * startradius;
     repeat
           curradius := curradius + 1;
           i := 0;
           while(i &lt;&gt; curradius) and (not(result)) do
           begin
                x := x + 1;
                if(getcolor(x,y) = colour)then result := true;
                i := i + 1;
           end;
           i := 0;
           while(i &lt;&gt; curradius) and (not(result)) do
           begin
                y := y - 1;
                if(getcolor(x,y) = colour)then result := true;
                i := i + 1;
           end;
           i := 0;
           curradius := curradius + 1;
           while(i &lt;&gt; curradius) and (not(result)) do
           begin
                x := x - 1;
                if(getcolor(x,y) = colour)then result := true;
                i := i + 1;
           end;
           i := 0;
           while(i &lt;&gt; curradius) and (not(result)) do
           begin
                y := y + 1;
                if(getcolor(x,y) = colour)then result := true;
                i := i + 1;
           end;
     until(radius * 2 = curradius) or (result);
     if(not(result))then
     begin
          x := 0;
          y := 0;
     end;
end;

function findspiralfromtolerance(var x,y : integer; radius,startradius,colour,tolerance : integer) : boolean;
var
   curradius,i : integer;
begin
     x := x - startradius;
     y := y - startradius;
     curradius := 2 * startradius;
     repeat
           curradius := curradius + 1;
           i := 0;
           while(i &lt;&gt; curradius) and (not(result)) do
           begin
                x := x + 1;
                if(similarcolors(getcolor(x,y),colour,tolerance))then result := true;
                i := i + 1;
           end;
           i := 0;
           while(i &lt;&gt; curradius) and (not(result)) do
           begin
                y := y - 1;
                if(similarcolors(getcolor(x,y),colour,tolerance))then result := true;
                i := i + 1;
           end;
           i := 0;
           curradius := curradius + 1;
           while(i &lt;&gt; curradius) and (not(result)) do
           begin
                x := x - 1;
                if(similarcolors(getcolor(x,y),colour,tolerance))then result := true;
                i := i + 1;
           end;
           i := 0;
           while(i &lt;&gt; curradius) and (not(result)) do
           begin
                y := y + 1;
                if(similarcolors(getcolor(x,y),colour,tolerance))then result := true;
                i := i + 1;
           end;
     until(radius * 2 = curradius) or (result);
     if(not(result))then
     begin
          x := 0;
          y := 0;
     end;
end;
[/code]

edit: i just read the definition of get colour spiral from the manual. i guess i never read it before, because it does exactly as mine does, exept it scans a box starting from position x,y. o well, my functions could still be useful for the starting radius, but other than that, this is redundant. (lol im probally gonna still use it tho)</description>
    
    <lastBuildDate>Sun, 30 Jul 2006 11:27:16 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/dead-s-findspiralfrom-procedures/6758.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>*DEAD*s findspiralfrom procedures</title>
        <dc:creator><![CDATA[@Pyro Pyro]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pyro">@Pyro</a> wrote:</p>
          <blockquote>
              <p>Although dead i think freddy did somethign like this but used it for missing pixels.  but i think he found it too slow so ended up making it in delphi as a plugin. Went much quicker.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dead-s-findspiralfrom-procedures/6758/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dead-s-findspiralfrom-procedures/6758/7</link>
        <pubDate>Sun, 30 Jul 2006 11:27:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-6758-7</guid>
        <source url="https://forum.moparisthebest.com/t/dead-s-findspiralfrom-procedures/6758.rss">*DEAD*s findspiralfrom procedures</source>
      </item>
      <item>
        <title>*DEAD*s findspiralfrom procedures</title>
        <dc:creator><![CDATA[@_DEAD *DEAD*]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_dead">@_DEAD</a> wrote:</p>
          <blockquote>
              <p>in the edit at the end of my first post, i said that findcolorspiral did that. and it is slow, but i do find it useful.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dead-s-findspiralfrom-procedures/6758/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dead-s-findspiralfrom-procedures/6758/6</link>
        <pubDate>Sun, 30 Jul 2006 09:32:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-6758-6</guid>
        <source url="https://forum.moparisthebest.com/t/dead-s-findspiralfrom-procedures/6758.rss">*DEAD*s findspiralfrom procedures</source>
      </item>
      <item>
        <title>*DEAD*s findspiralfrom procedures</title>
        <dc:creator><![CDATA[@Pyro Pyro]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pyro">@Pyro</a> wrote:</p>
          <blockquote>
              <p>But if you set the x and y to the center it will spiral outwards form the point.  when usign findcolor it will move in like enlarging the box so to speak from the top left corner. Maybe thats what you said iunno</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dead-s-findspiralfrom-procedures/6758/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dead-s-findspiralfrom-procedures/6758/5</link>
        <pubDate>Sun, 30 Jul 2006 06:29:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-6758-5</guid>
        <source url="https://forum.moparisthebest.com/t/dead-s-findspiralfrom-procedures/6758.rss">*DEAD*s findspiralfrom procedures</source>
      </item>
      <item>
        <title>*DEAD*s findspiralfrom procedures</title>
        <dc:creator><![CDATA[@tarajunky tarajunky]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tarajunky">@tarajunky</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="2" data-topic="6758">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/1337_macro/40/5_6259e4fa9dfe0dec282fb0955bb1974c.png" class="avatar"> 1337_macro:</div>
<blockquote>
<p>But findcolorspiral finds the set color from the center not the corner</p>
</blockquote>
</aside>
<p>No, as I understand it, it searches from the starting point that you specify.</p>
<p><code>x:=230;
y:=100;
FindColorSpiral(x,y,color);</code> will start searching from 230,100.</p>
<p>If you don’t pre-set the x and y, it will usually start from 0,0 which is the top left corner.  The only way it will start from the center is if you tell it to start there by giving x and y those values.</p>
<p>I had no idea what the difference between findcolor and findcolospiral was for literally months.  Now of course I use it for many things where appropriate.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dead-s-findspiralfrom-procedures/6758/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dead-s-findspiralfrom-procedures/6758/4</link>
        <pubDate>Sat, 29 Jul 2006 21:14:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-6758-4</guid>
        <source url="https://forum.moparisthebest.com/t/dead-s-findspiralfrom-procedures/6758.rss">*DEAD*s findspiralfrom procedures</source>
      </item>
      <item>
        <title>*DEAD*s findspiralfrom procedures</title>
        <dc:creator><![CDATA[@realrune realrune]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/realrune">@realrune</a> wrote:</p>
          <blockquote>
              <p>Looks nice, except it might be a little slow because of get color.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dead-s-findspiralfrom-procedures/6758/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dead-s-findspiralfrom-procedures/6758/3</link>
        <pubDate>Sat, 29 Jul 2006 17:38:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-6758-3</guid>
        <source url="https://forum.moparisthebest.com/t/dead-s-findspiralfrom-procedures/6758.rss">*DEAD*s findspiralfrom procedures</source>
      </item>
      <item>
        <title>*DEAD*s findspiralfrom procedures</title>
        <dc:creator><![CDATA[@1337_macro 1337_macro]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/1337_macro">@1337_macro</a> wrote:</p>
          <blockquote>
              <p>But findcolorspiral finds the set color from the center not the corner</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dead-s-findspiralfrom-procedures/6758/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dead-s-findspiralfrom-procedures/6758/2</link>
        <pubDate>Sat, 29 Jul 2006 15:58:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-6758-2</guid>
        <source url="https://forum.moparisthebest.com/t/dead-s-findspiralfrom-procedures/6758.rss">*DEAD*s findspiralfrom procedures</source>
      </item>
      <item>
        <title>*DEAD*s findspiralfrom procedures</title>
        <dc:creator><![CDATA[@_DEAD *DEAD*]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_dead">@_DEAD</a> wrote:</p>
          <blockquote>
              <p>hi, something that always bothered me about scar (and i honestly dont know why i still use scar) is the get spiral function. back when i was building my robot way way back, i needed to a way to find high concentrations of colours. i wound up using a rather complicated algrithm, but before that i figured that i needed something just like the findspiral commands. when i ran some tests to find out exactly how they worked, i found that its not as impressive as it sounds. i thought it found high concentrations of colours, in reality, it just draws a spiral starting in the top left hand corner and gradually gets bigger until its searched the whole box. i found this rather annoying, so some time ago i made a “findspiralfrom” script which instead of starting in the corner, it starts at a specified points, and continues outward to a radius.</p>
<p>theres a few really neat thigns that this allows you to do. instead of searching for random ores, you can now find the ore closest to you. i also added a “start radius” function which will start the search from outside a box with a radius of whatever. i did this because i figured it was rather useless scanning yourself all the time, as thats where you usually initiated the search from. futher more, if you modify the curradius to be a global variable, or a variable from another procedure, you can find out how far out it was when you last stopped searching. so suppose you find an object with a colour, but it wasnt the right object you were looking for. if you reapeat the search, youll find the same object, but if you know the radius to start at, you can ignore the area youve already searched.</p>
<p>as always, enjoy.</p>
<pre><code class="lang-auto">function findspiralfrom(var x,y : integer; radius,startradius,colour : integer) : boolean;
var
   curradius,i : integer;
begin
     x := x - startradius;
     y := y - startradius;
     curradius := 2 * startradius;
     repeat
           curradius := curradius + 1;
           i := 0;
           while(i &lt;&gt; curradius) and (not(result)) do
           begin
                x := x + 1;
                if(getcolor(x,y) = colour)then result := true;
                i := i + 1;
           end;
           i := 0;
           while(i &lt;&gt; curradius) and (not(result)) do
           begin
                y := y - 1;
                if(getcolor(x,y) = colour)then result := true;
                i := i + 1;
           end;
           i := 0;
           curradius := curradius + 1;
           while(i &lt;&gt; curradius) and (not(result)) do
           begin
                x := x - 1;
                if(getcolor(x,y) = colour)then result := true;
                i := i + 1;
           end;
           i := 0;
           while(i &lt;&gt; curradius) and (not(result)) do
           begin
                y := y + 1;
                if(getcolor(x,y) = colour)then result := true;
                i := i + 1;
           end;
     until(radius * 2 = curradius) or (result);
     if(not(result))then
     begin
          x := 0;
          y := 0;
     end;
end;

function findspiralfromtolerance(var x,y : integer; radius,startradius,colour,tolerance : integer) : boolean;
var
   curradius,i : integer;
begin
     x := x - startradius;
     y := y - startradius;
     curradius := 2 * startradius;
     repeat
           curradius := curradius + 1;
           i := 0;
           while(i &lt;&gt; curradius) and (not(result)) do
           begin
                x := x + 1;
                if(similarcolors(getcolor(x,y),colour,tolerance))then result := true;
                i := i + 1;
           end;
           i := 0;
           while(i &lt;&gt; curradius) and (not(result)) do
           begin
                y := y - 1;
                if(similarcolors(getcolor(x,y),colour,tolerance))then result := true;
                i := i + 1;
           end;
           i := 0;
           curradius := curradius + 1;
           while(i &lt;&gt; curradius) and (not(result)) do
           begin
                x := x - 1;
                if(similarcolors(getcolor(x,y),colour,tolerance))then result := true;
                i := i + 1;
           end;
           i := 0;
           while(i &lt;&gt; curradius) and (not(result)) do
           begin
                y := y + 1;
                if(similarcolors(getcolor(x,y),colour,tolerance))then result := true;
                i := i + 1;
           end;
     until(radius * 2 = curradius) or (result);
     if(not(result))then
     begin
          x := 0;
          y := 0;
     end;
end;</code></pre>
<p>edit: i just read the definition of get colour spiral from the manual. i guess i never read it before, because it does exactly as mine does, exept it scans a box starting from position x,y. o well, my functions could still be useful for the starting radius, but other than that, this is redundant. (lol im probally gonna still use it tho)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dead-s-findspiralfrom-procedures/6758/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dead-s-findspiralfrom-procedures/6758/1</link>
        <pubDate>Sat, 29 Jul 2006 14:24:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-6758-1</guid>
        <source url="https://forum.moparisthebest.com/t/dead-s-findspiralfrom-procedures/6758.rss">*DEAD*s findspiralfrom procedures</source>
      </item>
  </channel>
</rss>
