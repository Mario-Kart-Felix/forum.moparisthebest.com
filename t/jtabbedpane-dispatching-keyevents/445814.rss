<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>JTabbedPane Dispatching KeyEvents</title>
    <link>https://forum.moparisthebest.com/t/jtabbedpane-dispatching-keyevents/445814</link>
    <description>Hi Guys,

I have been trying to figure this one out for a little while and feel like I am getting no where so I have made up a dummy project to show my problem.

[u][b]The Problem:[/b][/u]
In a tabbed pane when trying to dispatch event&#39;s to a &quot;inactive tab&#39;s component&quot; it will fail to send the event&#39;s.

[u][b]Eclipse Project + Source:[/b][/u]
[url=https://ossietronics.com/download/TabTest.zip]https://ossietronics.com/download/TabTest.zip[/url]

Can anyone shed any light onto why these event&#39;s will not be dispatched to the &quot;inactive&quot; tab?

[u][b]Resolved - see below:[/b][/u]
&lt;blockquote&gt;CasiOo, on 19 June 2012 - 06:12 PM, said:
I bet that JTextField checks if it is showing or not. If it is not showing, then it will not handle the keyevents. I think you will have to extend and override a method(s) in JTextField or some of the inherited ones from JTextComponent if you want it to process events, but this will kinda ruin the purpose of making the keyboard class in the first place.
It is not worth the effort to try and understand how exactly awt &amp; swing works in its event processing, I would advice you to look at other solutions.&lt;/blockquote&gt;

So I created a Class which extended JTextField and then Overrode the isShowing method to always return true and this gave the desired results.

[b]MyTextField.java[/b]
[code]import javax.swing.JTextField;

public class MyTextField extends JTextField{
    private static final long serialVersionUID = 6211721186962220788L;

    @Override
    public boolean isShowing(){
        return true;
    }
}
[/code]

Thank you very much for your help now I have a workaround :)</description>
    
    <lastBuildDate>Mon, 25 Jun 2012 05:15:54 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/jtabbedpane-dispatching-keyevents/445814.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>JTabbedPane Dispatching KeyEvents</title>
        <dc:creator><![CDATA[@Fsig Fsig]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/fsig">@Fsig</a> wrote:</p>
          <blockquote>
              <p>[quote=“veer, post:2, topic:445814”]Why exactly are you sending raw key events? Depending on the context, it might be a whole lot easier to directly mutate the model rather than going through the controller event dispatch interface, i.e. something like (in the context of the event dispatch thread, of course):</p>
<pre><code class="lang-auto">final Document doc = text_field.getDocument();
doc.insertString("what did you want to add?", doc.getLength(), null);</code></pre>
<p>Or you might instead prefer to use a JTextArea:</p>
<p><code>
text_area.append("hmmm...");
</code>[/quote]</p>
<p>This was just a example project, probably a bad example.</p>
<p>I needed this to dispatch KeyEvents to the canvas in a tabbed pane for RS.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/jtabbedpane-dispatching-keyevents/445814/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/jtabbedpane-dispatching-keyevents/445814/3</link>
        <pubDate>Mon, 25 Jun 2012 05:15:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-445814-3</guid>
        <source url="https://forum.moparisthebest.com/t/jtabbedpane-dispatching-keyevents/445814.rss">JTabbedPane Dispatching KeyEvents</source>
      </item>
      <item>
        <title>JTabbedPane Dispatching KeyEvents</title>
        <dc:creator><![CDATA[@slavemaster veer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/slavemaster">@slavemaster</a> wrote:</p>
          <blockquote>
              <p>Why exactly are you sending raw key events? Depending on the context, it might be a whole lot easier to directly mutate the model rather than going through the controller event dispatch interface, i.e. something like (in the context of the event dispatch thread, of course):</p>
<pre><code class="lang-auto">final Document doc = text_field.getDocument();
doc.insertString("what did you want to add?", doc.getLength(), null);</code></pre>
<p>Or you might instead prefer to use a JTextArea:</p>
<pre><code class="lang-auto">text_area.append("hmmm...");</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/jtabbedpane-dispatching-keyevents/445814/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/jtabbedpane-dispatching-keyevents/445814/2</link>
        <pubDate>Sun, 24 Jun 2012 23:48:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-445814-2</guid>
        <source url="https://forum.moparisthebest.com/t/jtabbedpane-dispatching-keyevents/445814.rss">JTabbedPane Dispatching KeyEvents</source>
      </item>
      <item>
        <title>JTabbedPane Dispatching KeyEvents</title>
        <dc:creator><![CDATA[@Fsig Fsig]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/fsig">@Fsig</a> wrote:</p>
          <blockquote>
              <p>Hi Guys,</p>
<p>I have been trying to figure this one out for a little while and feel like I am getting no where so I have made up a dummy project to show my problem.</p>
<p><span class="bbcode-u"><span class="bbcode-b">The Problem:</span></span><br>
In a tabbed pane when trying to dispatch event’s to a “inactive tab’s component” it will fail to send the event’s.</p>
<p><span class="bbcode-u"><span class="bbcode-b">Eclipse Project + Source:</span></span><br>
<a href="https://ossietronics.com/download/TabTest.zip" data-bbcode="true" rel="nofollow noopener">https://ossietronics.com/download/TabTest.zip</a></p>
<p>Can anyone shed any light onto why these event’s will not be dispatched to the “inactive” tab?</p>
<p><span class="bbcode-u"><span class="bbcode-b">Resolved - see below:</span></span></p>
<blockquote>CasiOo, on 19 June 2012 - 06:12 PM, said:
I bet that JTextField checks if it is showing or not. If it is not showing, then it will not handle the keyevents. I think you will have to extend and override a method(s) in JTextField or some of the inherited ones from JTextComponent if you want it to process events, but this will kinda ruin the purpose of making the keyboard class in the first place.
It is not worth the effort to try and understand how exactly awt &amp; swing works in its event processing, I would advice you to look at other solutions.</blockquote>
<p>So I created a Class which extended JTextField and then Overrode the isShowing method to always return true and this gave the desired results.</p>
<p><span class="bbcode-b">MyTextField.java</span></p>
<p>[code]import javax.swing.JTextField;</p>
<p>public class MyTextField extends JTextField{<br>
private static final long serialVersionUID = 6211721186962220788L;</p>
<pre><code>@Override
public boolean isShowing(){
    return true;
}
</code></pre>
<p>}<br>
[/code]</p>
<p>Thank you very much for your help now I have a workaround <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/jtabbedpane-dispatching-keyevents/445814/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/jtabbedpane-dispatching-keyevents/445814/1</link>
        <pubDate>Tue, 19 Jun 2012 04:10:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-445814-1</guid>
        <source url="https://forum.moparisthebest.com/t/jtabbedpane-dispatching-keyevents/445814.rss">JTabbedPane Dispatching KeyEvents</source>
      </item>
  </channel>
</rss>
