<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>ISAAC Cipher C impl. (RSA in the works as well)</title>
    <link>https://forum.moparisthebest.com/t/isaac-cipher-c-impl-rsa-in-the-works-as-well/538189</link>
    <description>In case anyone wanted these to avoid having to do it themselves if they planned on writing a RuneScape private server in C. The RSA module at the time of the post is bugged, but it appears that it is an issue with the library (programming error or lack of good documentation, I&#39;m hoping it&#39;s the documentation!). If anyone is wondering why I am trying to use Tomcrypt, it is because I want to avoid having to use keyfiles for the sake of people wanting to use this.

[b]Example[/b]
[code=c]
/**
  FILE:        test.c
  AUTHOR:      t4
  DESCRIPTION: Test module.
  LICENSE:     See LICENSE.
*/

#include &quot;isaac.h&quot;
#include &quot;rsa.h&quot;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;

#define RSA_PRIVATE_EXPONENT &quot;5619664045908831135405113830837622935618085603599503423402863983838948530196116092095605683192468571950626582779765176018884224752374913260518099520065073&quot;
#define RSA_PUBLIC_EXPONENT &quot;65537&quot;
#define RSA_MODULUS &quot;7169474840894044503037666831450365862012896169030575352531701321955483157941825374118145355691304099554818090694185579799948503371294810857419425026906919&quot;

void test_isaac(void)
{
  uint32_t seed[2] = { 0x97, 0x56 };
  struct prng_isaac_info *isaac = prng_isaac_new(seed, 2);
  printf(&quot;%x\n&quot;, prng_isaac_rand(isaac)); //This is correct, trust me :)
  free(isaac);
}


void test_rsa(void) //TODO: bug
{
  unsigned char str[255];
  memset(str, &#39;\0&#39;, 255);

  rsa_biginteger *priv_exp = rsa_biginteger_new(RSA_PRIVATE_EXPONENT);
  rsa_biginteger *publ_exp = rsa_biginteger_new(RSA_PUBLIC_EXPONENT);
  rsa_biginteger *modulus  = rsa_biginteger_new(RSA_MODULUS);

  rsa_biginteger *m  = rsa_biginteger_new_str(&quot;hue&quot;, 3);
  rsa_biginteger *c  = rsa_modpow(m, publ_exp, modulus);
  rsa_biginteger *m2 = rsa_modpow(c, priv_exp, modulus);

  rsa_biginteger_to_buffer(m2, str);
  printf(&quot;%s\n&quot;, str);

  rsa_biginteger_free(priv_exp);
  rsa_biginteger_free(publ_exp);
  rsa_biginteger_free(modulus);
  rsa_biginteger_free(m);
  rsa_biginteger_free(c);
  rsa_biginteger_free(m2);
}


int main(void)
{
  test_isaac();
  test_rsa();
  return 0;
}
[/code]

&lt;blockquote&gt;https://bitbucket.org/pseudoist/rsciphers/src&lt;/blockquote&gt;</description>
    
    <lastBuildDate>Mon, 06 Jan 2014 21:29:21 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/isaac-cipher-c-impl-rsa-in-the-works-as-well/538189.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>ISAAC Cipher C impl. (RSA in the works as well)</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <p>[quote=“Taharok, post:2, topic:538189”]<a href="http://burtleburtle.net/bob/c/rand.c" rel="nofollow noopener">http://burtleburtle.net/bob/c/rand.c</a></p>
<p>Why not just use the copy written by the author? That particular one is optimized, also.[/quote]<br>
I did, I just wrapped the state in a struct so it could be passed around. Remember, there’s a cipher instance for each client.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/isaac-cipher-c-impl-rsa-in-the-works-as-well/538189/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/isaac-cipher-c-impl-rsa-in-the-works-as-well/538189/4</link>
        <pubDate>Mon, 06 Jan 2014 21:29:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-538189-4</guid>
        <source url="https://forum.moparisthebest.com/t/isaac-cipher-c-impl-rsa-in-the-works-as-well/538189.rss">ISAAC Cipher C impl. (RSA in the works as well)</source>
      </item>
      <item>
        <title>ISAAC Cipher C impl. (RSA in the works as well)</title>
        <dc:creator><![CDATA[@imthenull imthenull]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imthenull">@imthenull</a> wrote:</p>
          <blockquote>
              <p>coolio. i always love reading code written in C.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/isaac-cipher-c-impl-rsa-in-the-works-as-well/538189/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/isaac-cipher-c-impl-rsa-in-the-works-as-well/538189/3</link>
        <pubDate>Mon, 06 Jan 2014 19:48:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-538189-3</guid>
        <source url="https://forum.moparisthebest.com/t/isaac-cipher-c-impl-rsa-in-the-works-as-well/538189.rss">ISAAC Cipher C impl. (RSA in the works as well)</source>
      </item>
      <item>
        <title>ISAAC Cipher C impl. (RSA in the works as well)</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <p><a href="http://burtleburtle.net/bob/c/rand.c" class="onebox" target="_blank" rel="nofollow noopener">http://burtleburtle.net/bob/c/rand.c</a></p>
<p>Why not just use the copy written by the author? That particular one is optimized, also.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/isaac-cipher-c-impl-rsa-in-the-works-as-well/538189/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/isaac-cipher-c-impl-rsa-in-the-works-as-well/538189/2</link>
        <pubDate>Mon, 06 Jan 2014 19:28:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-538189-2</guid>
        <source url="https://forum.moparisthebest.com/t/isaac-cipher-c-impl-rsa-in-the-works-as-well/538189.rss">ISAAC Cipher C impl. (RSA in the works as well)</source>
      </item>
      <item>
        <title>ISAAC Cipher C impl. (RSA in the works as well)</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <p>In case anyone wanted these to avoid having to do it themselves if they planned on writing a RuneScape private server in C. The RSA module at the time of the post is bugged, but it appears that it is an issue with the library (programming error or lack of good documentation, I’m hoping it’s the documentation!). If anyone is wondering why I am trying to use Tomcrypt, it is because I want to avoid having to use keyfiles for the sake of people wanting to use this.</p>
<p><span class="bbcode-b">Example</span></p>
<pre><code class="lang-auto">/**
  FILE:        test.c
  AUTHOR:      t4
  DESCRIPTION: Test module.
  LICENSE:     See LICENSE.
*/

#include "isaac.h"
#include "rsa.h"
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;

#define RSA_PRIVATE_EXPONENT "5619664045908831135405113830837622935618085603599503423402863983838948530196116092095605683192468571950626582779765176018884224752374913260518099520065073"
#define RSA_PUBLIC_EXPONENT "65537"
#define RSA_MODULUS "7169474840894044503037666831450365862012896169030575352531701321955483157941825374118145355691304099554818090694185579799948503371294810857419425026906919"

void test_isaac(void)
{
  uint32_t seed[2] = { 0x97, 0x56 };
  struct prng_isaac_info *isaac = prng_isaac_new(seed, 2);
  printf("%x\n", prng_isaac_rand(isaac)); //This is correct, trust me :)
  free(isaac);
}


void test_rsa(void) //TODO: bug
{
  unsigned char str[255];
  memset(str, '\0', 255);

  rsa_biginteger *priv_exp = rsa_biginteger_new(RSA_PRIVATE_EXPONENT);
  rsa_biginteger *publ_exp = rsa_biginteger_new(RSA_PUBLIC_EXPONENT);
  rsa_biginteger *modulus  = rsa_biginteger_new(RSA_MODULUS);

  rsa_biginteger *m  = rsa_biginteger_new_str("hue", 3);
  rsa_biginteger *c  = rsa_modpow(m, publ_exp, modulus);
  rsa_biginteger *m2 = rsa_modpow(c, priv_exp, modulus);

  rsa_biginteger_to_buffer(m2, str);
  printf("%s\n", str);

  rsa_biginteger_free(priv_exp);
  rsa_biginteger_free(publ_exp);
  rsa_biginteger_free(modulus);
  rsa_biginteger_free(m);
  rsa_biginteger_free(c);
  rsa_biginteger_free(m2);
}


int main(void)
{
  test_isaac();
  test_rsa();
  return 0;
}</code></pre>
<blockquote>https://bitbucket.org/pseudoist/rsciphers/src</blockquote>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/isaac-cipher-c-impl-rsa-in-the-works-as-well/538189/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/isaac-cipher-c-impl-rsa-in-the-works-as-well/538189/1</link>
        <pubDate>Mon, 06 Jan 2014 09:12:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-538189-1</guid>
        <source url="https://forum.moparisthebest.com/t/isaac-cipher-c-impl-rsa-in-the-works-as-well/538189.rss">ISAAC Cipher C impl. (RSA in the works as well)</source>
      </item>
  </channel>
</rss>
