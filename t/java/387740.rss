<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Java</title>
    <link>https://forum.moparisthebest.com/t/java/387740</link>
    <description>If someone who actually knows what they are doing (5.99% Of Mopar) can help me with these things I will sex you.

1. Can someone explain &#39;Enums&#39;?

2. I don&#39;t really understand Ternary, can someone explain it?

3. Thanks to Graham &amp; Blake, I understand partially how WinterLove works, I would say the only thing I don&#39;t understand very well is packets. How they are received from the server and sent from the client; and just the whole process of loading them.

4. When I am creating a new thread, I know I either have to: implement the runnable interface, or extend the thread class. Does it matter which one?</description>
    
    <lastBuildDate>Thu, 24 Mar 2011 11:52:19 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/java/387740.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Java</title>
        <dc:creator><![CDATA[@relmitos relmitos]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/relmitos">@relmitos</a> wrote:</p>
          <blockquote>
              <p>Implementing the Runnable interface instead of extending Thread allows you to extend another class. So, implementing Runnable is more flexible.</p>
<p>Remember: Whenever your class has to extend another class, implement Runnable.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java/387740/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java/387740/4</link>
        <pubDate>Thu, 24 Mar 2011 11:52:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-387740-4</guid>
        <source url="https://forum.moparisthebest.com/t/java/387740.rss">Java</source>
      </item>
      <item>
        <title>Java</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>[quote=“Epic Steve, post:2, topic:387740”]1. “An enum type is a type whose fields consist of a fixed set of constants. Common examples include compass directions (values of NORTH, SOUTH, EAST, and WEST) and the days of the week.”<br>
o<br>
For example; Here’s some snippets of a class I wrote earlier today;<br>
NOTE: The enum doesn’t have to be static, I just made it that was as I’ll be using it from outside classes everytime I create a new Item object.</p>
<pre><code class="lang-auto">public class Item {
...
    /**
     * Contains the list of item types.
     * 
     * EG:
     * WEAPON
     * ARMOUR
     * CONSUMABLE
     */
    public static enum ITEM_TYPES {

        WEAPON, ARMOUR, CONSUMABLE
    };

    public Item(..., ITEM_TYPES itemType) {
      ...
        this.itemType = itemType;
    }
    
    ...
        /**
     * Gets the item type of the item.
     *
     * @return itemType
     */
    public ITEM_TYPES getItemType() {
        return itemType;
    }</code></pre>
<p>With this, I can now use if statements such as</p>
<pre><code class="lang-auto">if(item.getItemType() == Item.WEAPON) {
    // I now know it's a weapon, do something with this weapon.
}</code></pre>
<ol start="2">
<li>This is a bitch to explain. So I’ll copy something I found that made it easy for me to understand.</li>
</ol>
<p>The ternary operator “?:” earns its name because it’s the only operator to take three operands. It is a conditional operator that provides a shorter syntax for the if…then…else statement. The first operand is a boolean expression; if the expression is true then the value of the second operand is returned otherwise the value of the third operand is returned:</p>
<pre><code>boolean expression ? value1 : value2 
</code></pre>
<p>For example, the following if…then…else statement</p>
<pre><code class="lang-auto">boolean isHappy = true;
String mood = "";
if (isHappy) {
    mood = "I'm Happy!";
} else {
    mood = "I'm Sad!";
}</code></pre>
<p>can be reduced to one line using the ternary operator:</p>
<pre><code class="lang-auto">boolean isHappy = true;
String mood = (isHappy)?"I'm Happy!":"I'm Sad!"; </code></pre>
<ol start="3">
<li>
<p>This is also a hard one, you should probably read up about networking on the Java site. Here’s a link: <a href="http://download.oracle.com/javase/tutorial/networking/sockets/" rel="nofollow noopener">http://download.oracle.com/javase/tutorial/networking/sockets/</a></p>
</li>
<li>
<p>I think that implementing runnable is the prefered way to do it.[/quote]<br>
Thanks &lt;3, you really helped.</p>
</li>
</ol>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java/387740/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java/387740/3</link>
        <pubDate>Thu, 24 Mar 2011 11:40:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-387740-3</guid>
        <source url="https://forum.moparisthebest.com/t/java/387740.rss">Java</source>
      </item>
      <item>
        <title>Java</title>
        <dc:creator><![CDATA[@Epic_Steve Epic Steve]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/epic_steve">@Epic_Steve</a> wrote:</p>
          <blockquote>
              <ol>
<li>“An enum type is a type whose fields consist of a fixed set of constants. Common examples include compass directions (values of NORTH, SOUTH, EAST, and WEST) and the days of the week.”<br>
o<br>
For example; Here’s some snippets of a class I wrote earlier today;<br>
NOTE: The enum doesn’t have to be static, I just made it that was as I’ll be using it from outside classes everytime I create a new Item object.</li>
</ol>
<pre><code class="lang-auto">public class Item {
...
    /**
     * Contains the list of item types.
     * 
     * EG:
     * WEAPON
     * ARMOUR
     * CONSUMABLE
     */
    public static enum ITEM_TYPES {

        WEAPON, ARMOUR, CONSUMABLE
    };

    public Item(..., ITEM_TYPES itemType) {
      ...
        this.itemType = itemType;
    }
    
    ...
        /**
     * Gets the item type of the item.
     *
     * @return itemType
     */
    public ITEM_TYPES getItemType() {
        return itemType;
    }</code></pre>
<p>With this, I can now use if statements such as</p>
<pre><code class="lang-auto">if(item.getItemType() == Item.WEAPON) {
    // I now know it's a weapon, do something with this weapon.
}</code></pre>
<ol start="2">
<li>This is a bitch to explain. So I’ll copy something I found that made it easy for me to understand.</li>
</ol>
<p>The ternary operator “?:” earns its name because it’s the only operator to take three operands. It is a conditional operator that provides a shorter syntax for the if…then…else statement. The first operand is a boolean expression; if the expression is true then the value of the second operand is returned otherwise the value of the third operand is returned:</p>
<pre><code>boolean expression ? value1 : value2 
</code></pre>
<p>For example, the following if…then…else statement</p>
<pre><code class="lang-auto">boolean isHappy = true;
String mood = "";
if (isHappy) {
    mood = "I'm Happy!";
} else {
    mood = "I'm Sad!";
}</code></pre>
<p>can be reduced to one line using the ternary operator:</p>
<pre><code class="lang-auto">boolean isHappy = true;
String mood = (isHappy)?"I'm Happy!":"I'm Sad!"; </code></pre>
<ol start="3">
<li>
<p>This is also a hard one, you should probably read up about networking on the Java site. Here’s a link: <a href="http://download.oracle.com/javase/tutorial/networking/sockets/" rel="nofollow noopener">http://download.oracle.com/javase/tutorial/networking/sockets/</a></p>
</li>
<li>
<p>I think that implementing runnable is the prefered way to do it.</p>
</li>
</ol>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java/387740/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java/387740/2</link>
        <pubDate>Thu, 24 Mar 2011 04:19:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-387740-2</guid>
        <source url="https://forum.moparisthebest.com/t/java/387740.rss">Java</source>
      </item>
      <item>
        <title>Java</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>If someone who actually knows what they are doing (5.99% Of Mopar) can help me with these things I will sex you.</p>
<ol>
<li>
<p>Can someone explain ‘Enums’?</p>
</li>
<li>
<p>I don’t really understand Ternary, can someone explain it?</p>
</li>
<li>
<p>Thanks to Graham &amp; Blake, I understand partially how WinterLove works, I would say the only thing I don’t understand very well is packets. How they are received from the server and sent from the client; and just the whole process of loading them.</p>
</li>
<li>
<p>When I am creating a new thread, I know I either have to: implement the runnable interface, or extend the thread class. Does it matter which one?</p>
</li>
</ol>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java/387740/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java/387740/1</link>
        <pubDate>Thu, 24 Mar 2011 03:44:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-387740-1</guid>
        <source url="https://forum.moparisthebest.com/t/java/387740.rss">Java</source>
      </item>
  </channel>
</rss>
