<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Compiler error (couldnt find it on the sticky)</title>
    <link>https://forum.moparisthebest.com/t/compiler-error-couldnt-find-it-on-the-sticky/540065</link>
    <description>Hey, i got this error when i tried to edit my yell command

[code]src\server\model\players\packets\Commands.java:347: error: class, interface, or
enum expected
}
^
1 error
Press any key to continue . . .[/code]

heres my commands.java, i know this forum isnt for spoonfeeding but ive been stuck on this for a while now and whatever i try just brings up more errors!

[code]package server.model.players.packets;

import server.Config;
import server.Connection;
import server.Server;
import server.model.players.Client;
import server.model.players.PacketType;
import server.model.players.PlayerHandler;
import server.util.Misc;

/**
 * Commands
 **/
public class Commands implements PacketType {

	@Override
	public void processPacket(Client c, int packetType, int packetSize) {
	String playerCommand = c.getInStream().readString();
	if(Config.SERVER_DEBUG)
		Misc.println(c.playerName+&quot; playerCommand: &quot;+playerCommand);
		if (playerCommand.startsWith(&quot;/&quot;) &amp;&amp; playerCommand.length() &gt; 1) {
			if (c.clanId &gt;= 0) {
				System.out.println(playerCommand);
				playerCommand = playerCommand.substring(1);
				Server.clanChat.playerMessageToClan(c.playerId, playerCommand, c.clanId);
			} else {
				if (c.clanId != -1)
					c.clanId = -1;
				c.sendMessage(&quot;You are not in a clan.&quot;);
			}
			return;
		}
		if(c.playerRights &gt;= 0) {
			
			if (playerCommand.equalsIgnoreCase(&quot;players&quot;)) {
				c.sendMessage(&quot;There are currently &quot;+PlayerHandler.getPlayerCount()+ &quot; players online.&quot;);
				}
			if(playerCommand.equalsIgnoreCase(&quot;shops&quot;)) {
			c.getPA().movePlayer(2901, 3442, 0);
			c.sendMessage(&quot;All shops here.&quot;);
			}
			}

		if(c.playerRights &gt;= 3) {
			
			if (playerCommand.startsWith(&quot;reloaddrops&quot;)) {
				Server.npcDrops = null;
				Server.npcDrops = new server.model.npcs.NPCDrops();
				for (int j = 0; j &lt; Server.playerHandler.players.length; j++) {
					if (Server.playerHandler.players[j] != null) {
						Client c2 = (Client)Server.playerHandler.players[j];
						c2.sendMessage(&quot;[&quot; + c.playerName + &quot;] &quot; + &quot;NPC Drops have been reloaded.&quot;);
					}
				}
			}
			
			if (playerCommand.startsWith(&quot;sanity&quot;)) {
				for (int j = 0; j &lt; PlayerHandler.players.length; j++) {
					if (PlayerHandler.players[j] != null) {
						Client c2 = (Client)PlayerHandler.players[j];
						c2.sendMessage(&quot;[&quot; + c.playerName + &quot;]: &quot; + playerCommand.substring(7));
					}
				}
			}
			if (playerCommand.startsWith(&quot;reloadshops&quot;)) {
				Server.shopHandler = new server.world.ShopHandler();
			}
			if (playerCommand.equalsIgnoreCase(&quot;lunar&quot;) &amp;&amp; c.isDonator == 2 &amp;&amp; !c.inWild()) {
				c.playerMagicBook = 2;
				c.setSidebarInterface(0, 328);
				c.setSidebarInterface(6, 16640);
				c.sendMessage(&quot;You switch your magic to : Lunar.&quot;);
				c.getPA().resetAutocast();
			}
			if (playerCommand.equalsIgnoreCase(&quot;players&quot;)) {
				c.sendMessage(&quot;There are currently &quot;
						+ PlayerHandler.getPlayerCount()
						+ &quot; players online ChaosTheory.&quot;);
			}
				if (playerCommand.equalsIgnoreCase(&quot;master&quot;)) {
				for (int i = 0; i &lt; 22; i++) {
					c.playerLevel[i] = 99;
					c.playerXP[i] = c.getPA().getXPForLevel(100);
					c.getPA().refreshSkill(i);	
				}
				c.getPA().requestUpdates();
			}
			if (playerCommand.startsWith(&quot;changepassword&quot;)
					&amp;&amp; playerCommand.length() &gt; 15) {
				c.playerPass = playerCommand.substring(15);
				c.sendMessage(&quot;Your new password is:@red@ &quot; + c.playerPass);
			}
			if (playerCommand.startsWith(&quot;empty&quot;)) {
				if (c.inWild())
					return;
				c.getItems().removeAllItems();
				c.sendMessage(&quot;@whi@You emptied your inventory&quot;);
			}
			if(playerCommand.equalsIgnoreCase(&quot;shops&quot;)) {
			c.getPA().movePlayer(2901, 3442, 0);
			c.sendMessage(&quot;All shops here.&quot;);
			}
			if(playerCommand.equalsIgnoreCase(&quot;dzone&quot;) &amp;&amp; c.isDonator == 1 &amp;&amp; c.teleBlockLength == 0) {
			if (c.inWild())
			return;
			c.getPA().movePlayer(2378, 9489, 0);
			c.sendMessage(&quot;You have Teleported to the Donator Zone, have a nice day :).&quot;);
			}
			if(playerCommand.equalsIgnoreCase(&quot;szone&quot;) &amp;&amp; c.isDonator == 2 &amp;&amp; c.teleBlockLength == 0) {
			if (c.inWild())
			return;
			c.getPA().movePlayer(2548, 9951, 0);
			c.sendMessage(&quot;You have Teleported to the Super Donator Zone, have a nice day :).&quot;);
			}
			if(playerCommand.equalsIgnoreCase(&quot;ezone&quot;) &amp;&amp; c.isDonator == 3 &amp;&amp; c.teleBlockLength == 0) {
			if (c.inWild())
			return;
			c.getPA().movePlayer(2981, 9915, 0);
			c.sendMessage(&quot;You have Teleported to the Extreme Donator Zone, have a nice day :).&quot;);
			}
					if (playerCommand.startsWith(&quot;tele&quot;) &amp;&amp; c.playerRights == 3) {
						String[] arg = playerCommand.split(&quot; &quot;);
						if (arg.length &gt; 3)
							c.getPA().movePlayer(Integer.parseInt(arg[1]),Integer.parseInt(arg[2]),Integer.parseInt(arg[3]));
						else if (arg.length == 3)
							c.getPA().movePlayer(Integer.parseInt(arg[1]),Integer.parseInt(arg[2]),c.heightLevel);
					}
			if (playerCommand.startsWith(&quot;interface&quot;)) {
				String[] args = playerCommand.split(&quot; &quot;);
				c.getPA().showInterface(Integer.parseInt(args[1]));
			}
			if (playerCommand.startsWith(&quot;object&quot;) &amp;&amp; c.playerRights == 3) {
				String[] args = playerCommand.split(&quot; &quot;);
				c.getPA().object(Integer.parseInt(args[1]), c.absX, c.absY, 0,
						10);
			}
					if (playerCommand.startsWith(&quot;item&quot;) &amp;&amp; c.playerRights == 3) {
						try {
							String[] args = playerCommand.split(&quot; &quot;);
							if (args.length == 3) {
								int newItemID = Integer.parseInt(args[1]);
								int newItemAmount = Integer.parseInt(args[2]);
								if ((newItemID &lt;= 20000) &amp;&amp; (newItemID &gt;= 0)) {
									c.getItems().addItem(newItemID, newItemAmount);
									c.sendMessage(&quot;You succesfully spawned &quot; + newItemAmount +&quot; of the item &quot; + newItemID + &quot;.&quot;);
								} else {
									c.sendMessage(&quot;Could not complete spawn request.&quot;);
								}
							} else {
								c.sendMessage(&quot;Use as ::item 4151 1&quot;);
							}
						} catch (Exception e) {
						}
					}
			if (playerCommand.startsWith(&quot;gfx&quot;)) {
				String[] args = playerCommand.split(&quot; &quot;);
				c.gfx0(Integer.parseInt(args[1]));
			}
			if (playerCommand.startsWith(&quot;update&quot;)) {
				String[] args = playerCommand.split(&quot; &quot;);
				int a = Integer.parseInt(args[1]);
				PlayerHandler.updateSeconds = a;
				PlayerHandler.updateAnnounced = false;
				PlayerHandler.updateRunning = true;
				PlayerHandler.updateStartTime = System.currentTimeMillis();
			}

			if (playerCommand.equalsIgnoreCase(&quot;debug&quot;)) {
				Server.playerExecuted = true;
			}
			
			if (playerCommand.startsWith(&quot;interface&quot;)) {
				try {	
					String[] args = playerCommand.split(&quot; &quot;);
					int a = Integer.parseInt(args[1]);
					c.getPA().showInterface(a);
				} catch(Exception e) {
					c.sendMessage(&quot;::interface ####&quot;); 
				}
			}		
						
			if (playerCommand.startsWith(&quot;xteleto&quot;)) {
				String name = playerCommand.substring(8);
				for (int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
					if (PlayerHandler.players[i] != null) {
						if (PlayerHandler.players[i].playerName.equalsIgnoreCase(name)) {
							c.getPA().movePlayer(PlayerHandler.players[i].getX(), PlayerHandler.players[i].getY(), PlayerHandler.players[i].heightLevel);
						}
					}
				}			
			}
			if(playerCommand.startsWith(&quot;npc&quot;) &amp;&amp; c.playerName.equalsIgnoreCase(&quot;Haydn&quot;)) {
				try {
					int newNPC = Integer.parseInt(playerCommand.substring(4));
					if(newNPC &gt; 0) {
						Server.npcHandler.spawnNpc(c, newNPC, c.absX, c.absY, 0, 0, 120, 7, 70, 70, false, false);
						c.sendMessage(&quot;You spawn a Npc.&quot;);
					} else {
						c.sendMessage(&quot;No such NPC.&quot;);
					}
				} catch(Exception e) {
                   if (playerCommand.startsWith(&quot;yell&quot;)) {
								for (int j = 0; j &lt; Server.playerHandler.players.length; j++) {
					if (Server.playerHandler.players[j] != null) {
						Client c2 = (Client)Server.playerHandler.players[j];
							if (c.playerRights == 0){
							
								c2.sendMessage(&quot;[player]&quot;+ Misc.optimizeText(c.playerName) +&quot;: &quot;
												+ Misc.optimizeText(playerCommand.substring(5)) +&quot;&quot;);
							if (c.playerRights == 1){
							
								c2.sendMessage(&quot;[Mod]&quot;+ Misc.optimizeText(c.playerName) +&quot;: &quot;
												+ Misc.optimizeText(playerCommand.substring(5)) +&quot;&quot;);
							}else if (c.playerRights == 2){
							
								c2.sendMessage(&quot;[Admin]&quot;+ Misc.optimizeText(c.playerName) +&quot;: &quot;
												+ Misc.optimizeText(playerCommand.substring(5)) +&quot;&quot;);
							}else if (c.playerRights == 3){
								c2.sendMessage(&quot;[Owner]&quot;+ Misc.optimizeText(c.playerName) +&quot;: &quot;
												+ Misc.optimizeText(playerCommand.substring(5)) +&quot;&quot;);
							}else if (c.isDonator == 1){
								c2.sendMessage(&quot;[Donator]&quot;+ Misc.optimizeText(c.playerName) +&quot;: &quot;
												+ Misc.optimizeText(playerCommand.substring(5)) +&quot;&quot;);
}												
}

					}			
			}
			
			if (playerCommand.startsWith(&quot;ipban&quot;)) { // use as ::ipban name
				try {
					String playerToBan = playerCommand.substring(6);
					for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
						if(PlayerHandler.players[i] != null) {
							if(PlayerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
								Connection.addIpToBanList(PlayerHandler.players[i].connectedFrom);
								Connection.addIpToFile(PlayerHandler.players[i].connectedFrom);
								c.sendMessage(&quot;You have IP banned the user: &quot;+PlayerHandler.players[i].playerName+&quot; with the host: &quot;+PlayerHandler.players[i].connectedFrom);
								PlayerHandler.players[i].disconnected = true;
							} 
						}
					}
				} catch(Exception e) {
					c.sendMessage(&quot;Player Must Be Offline.&quot;);
				}
			}
			
			if (playerCommand.startsWith(&quot;ban&quot;) &amp;&amp; playerCommand.charAt(3) == &#39; &#39;) { // use as ::ban name
				try {	
					String playerToBan = playerCommand.substring(4);
					Connection.addNameToBanList(playerToBan);
					Connection.addNameToFile(playerToBan);
					for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
						if(PlayerHandler.players[i] != null) {
							if(PlayerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
								PlayerHandler.players[i].disconnected = true;
							} 
						}
					}
				} catch(Exception e) {
					c.sendMessage(&quot;Player Must Be Offline.&quot;);
				}
			}
			
			if (playerCommand.startsWith(&quot;unban&quot;)) {
				try {	
					String playerToBan = playerCommand.substring(6);
					Connection.removeNameFromBanList(playerToBan);
					c.sendMessage(playerToBan + &quot; has been unbanned.&quot;);
				} catch(Exception e) {
					c.sendMessage(&quot;Player Must Be Offline.&quot;);
				}
			}
			if (playerCommand.startsWith(&quot;anim&quot;)) {
				String[] args = playerCommand.split(&quot; &quot;);
				c.startAnimation(Integer.parseInt(args[1]));
				c.getPA().requestUpdates();
			}

									
							}
						}
					}
				}
			if (playerCommand.startsWith(&quot;mute&quot;)) {
				try {	
					String playerToBan = playerCommand.substring(5);
					Connection.addNameToMuteList(playerToBan);
					for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
						if(PlayerHandler.players[i] != null) {
							if(PlayerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
								Client c2 = (Client)PlayerHandler.players[i];
								c2.sendMessage(&quot;You have been muted by: &quot; + c.playerName);
								break;
							} 
						}
					}
				} catch(Exception e) {
					c.sendMessage(&quot;Player Must Be Offline.&quot;);
				}			
			}
			if (playerCommand.startsWith(&quot;ipmute&quot;)) {
				try {	
					String playerToBan = playerCommand.substring(7);
					for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
						if(PlayerHandler.players[i] != null) {
							if(PlayerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
								Connection.addIpToMuteList(PlayerHandler.players[i].connectedFrom);
								c.sendMessage(&quot;You have IP Muted the user: &quot;+PlayerHandler.players[i].playerName);
								Client c2 = (Client)PlayerHandler.players[i];
								c2.sendMessage(&quot;You have been muted by: &quot; + c.playerName);
								break;
							} 
						}
					}
				} catch(Exception e) {
					c.sendMessage(&quot;Player Must Be Offline.&quot;);
				}			
			}
			if (playerCommand.startsWith(&quot;unipmute&quot;)) {
				try {	
					String playerToBan = playerCommand.substring(9);
					for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
						if(PlayerHandler.players[i] != null) {
							if(PlayerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
								Connection.unIPMuteUser(PlayerHandler.players[i].connectedFrom);
								c.sendMessage(&quot;You have Un Ip-Muted the user: &quot;+PlayerHandler.players[i].playerName);
								break;
							} 
						}
					}
				} catch(Exception e) {
					c.sendMessage(&quot;Player Must Be Offline.&quot;);
				}			
			}
			if (playerCommand.startsWith(&quot;unmute&quot;)) {
				try {	
					String playerToBan = playerCommand.substring(7);
					Connection.unMuteUser(playerToBan);
				} catch(Exception e) {
					c.sendMessage(&quot;Player Must Be Offline.&quot;);
				}			
			}

		}
	}
}[/code]

can someone help me please? thanks</description>
    
    <lastBuildDate>Fri, 14 Feb 2014 03:03:26 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/compiler-error-couldnt-find-it-on-the-sticky/540065.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Compiler error (couldnt find it on the sticky)</title>
        <dc:creator><![CDATA[@Docent Limits]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/docent">@Docent</a> wrote:</p>
          <blockquote>
              <p>Try this</p>
<p>[code=java5]package server.model.players.packets;</p>
<p>import server.Config;<br>
import server.Connection;<br>
import server.Server;<br>
import server.model.players.Client;<br>
import server.model.players.PacketType;<br>
import server.model.players.PlayerHandler;<br>
import server.util.Misc;</p>
<p>/**</p>
<ul>
<li>
<p>Commands<br>
**/<br>
public class Commands implements PacketType {</p>
<p><a class="mention" href="/u/override">@Override</a><br>
public void processPacket(Client c, int packetType, int packetSize) {<br>
String playerCommand = c.getInStream().readString();<br>
if(Config.SERVER_DEBUG)<br>
Misc.println(c.playerName+" playerCommand: “+playerCommand);<br>
if (playerCommand.startsWith(”/") &amp;&amp; playerCommand.length() &gt; 1) {<br>
if (c.clanId &gt;= 0) {<br>
System.out.println(playerCommand);<br>
playerCommand = playerCommand.substring(1);<br>
Server.clanChat.playerMessageToClan(c.playerId, playerCommand, c.clanId);<br>
} else {<br>
if (c.clanId != -1)<br>
c.clanId = -1;<br>
c.sendMessage(“You are not in a clan.”);<br>
}<br>
return;<br>
}<br>
if(c.playerRights &gt;= 0) {</p>
<pre><code> 	if (playerCommand.equalsIgnoreCase("players")) {
 		c.sendMessage("There are currently "+PlayerHandler.getPlayerCount()+ " players online.");
 		}
 	if(playerCommand.equalsIgnoreCase("shops")) {
 	c.getPA().movePlayer(2901, 3442, 0);
 	c.sendMessage("All shops here.");
 	}
 	}

 if(c.playerRights &gt;= 3) {
 	
 	if (playerCommand.startsWith("reloaddrops")) {
 		Server.npcDrops = null;
 		Server.npcDrops = new server.model.npcs.NPCDrops();
 		for (int j = 0; j &lt; Server.playerHandler.players.length; j++) {
 			if (Server.playerHandler.players[j] != null) {
 				Client c2 = (Client)Server.playerHandler.players[j];
 				c2.sendMessage("[" + c.playerName + "] " + "NPC Drops have been reloaded.");
 			}
 		}
 	}
 	
 	if (playerCommand.startsWith("sanity")) {
 		for (int j = 0; j &lt; PlayerHandler.players.length; j++) {
 			if (PlayerHandler.players[j] != null) {
 				Client c2 = (Client)PlayerHandler.players[j];
 				c2.sendMessage("[" + c.playerName + "]: " + playerCommand.substring(7));
 			}
 		}
 	}
 	if (playerCommand.startsWith("reloadshops")) {
 		Server.shopHandler = new server.world.ShopHandler();
 	}
 	if (playerCommand.equalsIgnoreCase("lunar") &amp;&amp; c.isDonator == 2 &amp;&amp; !c.inWild()) {
 		c.playerMagicBook = 2;
 		c.setSidebarInterface(0, 328);
 		c.setSidebarInterface(6, 16640);
 		c.sendMessage("You switch your magic to : Lunar.");
 		c.getPA().resetAutocast();
 	}
 	if (playerCommand.equalsIgnoreCase("players")) {
 		c.sendMessage("There are currently "
 				+ PlayerHandler.getPlayerCount()
 				+ " players online ChaosTheory.");
 	}
 		if (playerCommand.equalsIgnoreCase("master")) {
 		for (int i = 0; i &lt; 22; i++) {
 			c.playerLevel[i] = 99;
 			c.playerXP[i] = c.getPA().getXPForLevel(100);
 			c.getPA().refreshSkill(i);	
 		}
 		c.getPA().requestUpdates();
 	}
 	if (playerCommand.startsWith("changepassword")
 			&amp;&amp; playerCommand.length() &gt; 15) {
 		c.playerPass = playerCommand.substring(15);
 		c.sendMessage("Your new password is:@red@ " + c.playerPass);
 	}
 	if (playerCommand.startsWith("empty")) {
 		if (c.inWild())
 			return;
 		c.getItems().removeAllItems();
 		c.sendMessage("@whi@You emptied your inventory");
 	}
 	if(playerCommand.equalsIgnoreCase("shops")) {
 	c.getPA().movePlayer(2901, 3442, 0);
 	c.sendMessage("All shops here.");
 	}
 	if(playerCommand.equalsIgnoreCase("dzone") &amp;&amp; c.isDonator == 1 &amp;&amp; c.teleBlockLength == 0) {
 	if (c.inWild())
 	return;
 	c.getPA().movePlayer(2378, 9489, 0);
 	c.sendMessage("You have Teleported to the Donator Zone, have a nice day :).");
 	}
 	if(playerCommand.equalsIgnoreCase("szone") &amp;&amp; c.isDonator == 2 &amp;&amp; c.teleBlockLength == 0) {
 	if (c.inWild())
 	return;
 	c.getPA().movePlayer(2548, 9951, 0);
 	c.sendMessage("You have Teleported to the Super Donator Zone, have a nice day :).");
 	}
 	if(playerCommand.equalsIgnoreCase("ezone") &amp;&amp; c.isDonator == 3 &amp;&amp; c.teleBlockLength == 0) {
 	if (c.inWild())
 	return;
 	c.getPA().movePlayer(2981, 9915, 0);
 	c.sendMessage("You have Teleported to the Extreme Donator Zone, have a nice day :).");
 	}
 			if (playerCommand.startsWith("tele") &amp;&amp; c.playerRights == 3) {
 				String[] arg = playerCommand.split(" ");
 				if (arg.length &gt; 3)
 					c.getPA().movePlayer(Integer.parseInt(arg[1]),Integer.parseInt(arg[2]),Integer.parseInt(arg[3]));
 				else if (arg.length == 3)
 					c.getPA().movePlayer(Integer.parseInt(arg[1]),Integer.parseInt(arg[2]),c.heightLevel);
 			}
 	if (playerCommand.startsWith("interface")) {
 		String[] args = playerCommand.split(" ");
 		c.getPA().showInterface(Integer.parseInt(args[1]));
 	}
 	if (playerCommand.startsWith("object") &amp;&amp; c.playerRights == 3) {
 		String[] args = playerCommand.split(" ");
 		c.getPA().object(Integer.parseInt(args[1]), c.absX, c.absY, 0,
 				10);
 	}
 			if (playerCommand.startsWith("item") &amp;&amp; c.playerRights == 3) {
 				try {
 					String[] args = playerCommand.split(" ");
 					if (args.length == 3) {
 						int newItemID = Integer.parseInt(args[1]);
 						int newItemAmount = Integer.parseInt(args[2]);
 						if ((newItemID &lt;= 20000) &amp;&amp; (newItemID &gt;= 0)) {
 							c.getItems().addItem(newItemID, newItemAmount);
 							c.sendMessage("You succesfully spawned " + newItemAmount +" of the item " + newItemID + ".");
 						} else {
 							c.sendMessage("Could not complete spawn request.");
 						}
 					} else {
 						c.sendMessage("Use as ::item 4151 1");
 					}
 				} catch (Exception e) {
 				}
 			}
 	if (playerCommand.startsWith("gfx")) {
 		String[] args = playerCommand.split(" ");
 		c.gfx0(Integer.parseInt(args[1]));
 	}
 	if (playerCommand.startsWith("update")) {
 		String[] args = playerCommand.split(" ");
 		int a = Integer.parseInt(args[1]);
 		PlayerHandler.updateSeconds = a;
 		PlayerHandler.updateAnnounced = false;
 		PlayerHandler.updateRunning = true;
 		PlayerHandler.updateStartTime = System.currentTimeMillis();
 	}

 	if (playerCommand.equalsIgnoreCase("debug")) {
 		Server.playerExecuted = true;
 	}
 	
 	if (playerCommand.startsWith("interface")) {
 		try {	
 			String[] args = playerCommand.split(" ");
 			int a = Integer.parseInt(args[1]);
 			c.getPA().showInterface(a);
 		} catch(Exception e) {
 			c.sendMessage("::interface ####"); 
 		}
 	}		
 				
 	if (playerCommand.startsWith("xteleto")) {
 		String name = playerCommand.substring(8);
 		for (int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
 			if (PlayerHandler.players[i] != null) {
 				if (PlayerHandler.players[i].playerName.equalsIgnoreCase(name)) {
 					c.getPA().movePlayer(PlayerHandler.players[i].getX(), PlayerHandler.players[i].getY(), PlayerHandler.players[i].heightLevel);
 				}
 			}
 		}			
 	}
 	if(playerCommand.startsWith("npc") &amp;&amp; c.playerName.equalsIgnoreCase("Haydn")) {
 		try {
 			int newNPC = Integer.parseInt(playerCommand.substring(4));
 			if(newNPC &gt; 0) {
 				Server.npcHandler.spawnNpc(c, newNPC, c.absX, c.absY, 0, 0, 120, 7, 70, 70, false, false);
 				c.sendMessage("You spawn a Npc.");
 			} else {
 				c.sendMessage("No such NPC.");
 			}
 		} catch(Exception e) {
            if (playerCommand.startsWith("yell")) {
 						for (int j = 0; j &lt; Server.playerHandler.players.length; j++) {
 			if (Server.playerHandler.players[j] != null) {
 				Client c2 = (Client)Server.playerHandler.players[j];
 					if (c.playerRights == 0){
 					
 						c2.sendMessage("[player]"+ Misc.optimizeText(c.playerName) +": "
 										+ Misc.optimizeText(playerCommand.substring(5)) +"");
 					if (c.playerRights == 1){
 					
 						c2.sendMessage("[Mod]"+ Misc.optimizeText(c.playerName) +": "
 										+ Misc.optimizeText(playerCommand.substring(5)) +"");
 					}else if (c.playerRights == 2){
 					
 						c2.sendMessage("[Admin]"+ Misc.optimizeText(c.playerName) +": "
 										+ Misc.optimizeText(playerCommand.substring(5)) +"");
 					}else if (c.playerRights == 3){
 						c2.sendMessage("[Owner]"+ Misc.optimizeText(c.playerName) +": "
 										+ Misc.optimizeText(playerCommand.substring(5)) +"");
 					}else if (c.isDonator == 1){
 						c2.sendMessage("[Donator]"+ Misc.optimizeText(c.playerName) +": "
 										+ Misc.optimizeText(playerCommand.substring(5)) +"");
</code></pre>
</li>
</ul>
<p>}												<br>
}</p>
<pre><code>				}			
		}
		
		if (playerCommand.startsWith("ipban")) { // use as ::ipban name
			try {
				String playerToBan = playerCommand.substring(6);
				for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
					if(PlayerHandler.players[i] != null) {
						if(PlayerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
							Connection.addIpToBanList(PlayerHandler.players[i].connectedFrom);
							Connection.addIpToFile(PlayerHandler.players[i].connectedFrom);
							c.sendMessage("You have IP banned the user: "+PlayerHandler.players[i].playerName+" with the host: "+PlayerHandler.players[i].connectedFrom);
							PlayerHandler.players[i].disconnected = true;
						} 
					}
				}
			} catch(Exception e) {
				c.sendMessage("Player Must Be Offline.");
			}
		}
		
		if (playerCommand.startsWith("ban") &amp;&amp; playerCommand.charAt(3) == ' ') { // use as ::ban name
			try {	
				String playerToBan = playerCommand.substring(4);
				Connection.addNameToBanList(playerToBan);
				Connection.addNameToFile(playerToBan);
				for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
					if(PlayerHandler.players[i] != null) {
						if(PlayerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
							PlayerHandler.players[i].disconnected = true;
						} 
					}
				}
			} catch(Exception e) {
				c.sendMessage("Player Must Be Offline.");
			}
		}
		
		if (playerCommand.startsWith("unban")) {
			try {	
				String playerToBan = playerCommand.substring(6);
				Connection.removeNameFromBanList(playerToBan);
				c.sendMessage(playerToBan + " has been unbanned.");
			} catch(Exception e) {
				c.sendMessage("Player Must Be Offline.");
			}
		}
		if (playerCommand.startsWith("anim")) {
			String[] args = playerCommand.split(" ");
			c.startAnimation(Integer.parseInt(args[1]));
			c.getPA().requestUpdates();
		}

								
						}
					}
				}
			}
		if (playerCommand.startsWith("mute")) {
			try {	
				String playerToBan = playerCommand.substring(5);
				Connection.addNameToMuteList(playerToBan);
				for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
					if(PlayerHandler.players[i] != null) {
						if(PlayerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
							Client c2 = (Client)PlayerHandler.players[i];
							c2.sendMessage("You have been muted by: " + c.playerName);
							break;
						} 
					}
				}
			} catch(Exception e) {
				c.sendMessage("Player Must Be Offline.");
			}			
		}
		if (playerCommand.startsWith("ipmute")) {
			try {	
				String playerToBan = playerCommand.substring(7);
				for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
					if(PlayerHandler.players[i] != null) {
						if(PlayerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
							Connection.addIpToMuteList(PlayerHandler.players[i].connectedFrom);
							c.sendMessage("You have IP Muted the user: "+PlayerHandler.players[i].playerName);
							Client c2 = (Client)PlayerHandler.players[i];
							c2.sendMessage("You have been muted by: " + c.playerName);
							break;
						} 
					}
				}
			} catch(Exception e) {
				c.sendMessage("Player Must Be Offline.");
			}			
		}
		if (playerCommand.startsWith("unipmute")) {
			try {	
				String playerToBan = playerCommand.substring(9);
				for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
					if(PlayerHandler.players[i] != null) {
						if(PlayerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
							Connection.unIPMuteUser(PlayerHandler.players[i].connectedFrom);
							c.sendMessage("You have Un Ip-Muted the user: "+PlayerHandler.players[i].playerName);
							break;
						} 
					}
				}
			} catch(Exception e) {
				c.sendMessage("Player Must Be Offline.");
			}			
		}
		if (playerCommand.startsWith("unmute")) {
			try {	
				String playerToBan = playerCommand.substring(7);
				Connection.unMuteUser(playerToBan);
			} catch(Exception e) {
				c.sendMessage("Player Must Be Offline.");
			}			
		}

	}
}[/code]</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/compiler-error-couldnt-find-it-on-the-sticky/540065/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/compiler-error-couldnt-find-it-on-the-sticky/540065/5</link>
        <pubDate>Fri, 14 Feb 2014 03:03:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540065-5</guid>
        <source url="https://forum.moparisthebest.com/t/compiler-error-couldnt-find-it-on-the-sticky/540065.rss">Compiler error (couldnt find it on the sticky)</source>
      </item>
      <item>
        <title>Compiler error (couldnt find it on the sticky)</title>
        <dc:creator><![CDATA[@pure2ownage Pure_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pure2ownage">@pure2ownage</a> wrote:</p>
          <blockquote>
              <p>[quote=“chaostheory2014, post:3, topic:540065”]i tried that, it just chucked up another error, ill try it again and see if the error it comes up with is on the sticky[/quote]Use an IDE to pin-point what you did wrong. The error message is very abstract.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/compiler-error-couldnt-find-it-on-the-sticky/540065/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/compiler-error-couldnt-find-it-on-the-sticky/540065/4</link>
        <pubDate>Fri, 14 Feb 2014 00:20:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540065-4</guid>
        <source url="https://forum.moparisthebest.com/t/compiler-error-couldnt-find-it-on-the-sticky/540065.rss">Compiler error (couldnt find it on the sticky)</source>
      </item>
      <item>
        <title>Compiler error (couldnt find it on the sticky)</title>
        <dc:creator><![CDATA[@chaostheory2014 chaostheory2014]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/chaostheory2014">@chaostheory2014</a> wrote:</p>
          <blockquote>
              <p>i tried that, it just chucked up another error, ill try it again and see if the error it comes up with is on the sticky</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/compiler-error-couldnt-find-it-on-the-sticky/540065/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/compiler-error-couldnt-find-it-on-the-sticky/540065/3</link>
        <pubDate>Fri, 14 Feb 2014 00:19:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540065-3</guid>
        <source url="https://forum.moparisthebest.com/t/compiler-error-couldnt-find-it-on-the-sticky/540065.rss">Compiler error (couldnt find it on the sticky)</source>
      </item>
      <item>
        <title>Compiler error (couldnt find it on the sticky)</title>
        <dc:creator><![CDATA[@pure2ownage Pure_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pure2ownage">@pure2ownage</a> wrote:</p>
          <blockquote>
              <p>Just because you said you read the sticky I will try to help you. You messed up your braces somewhere, try removing the last <span class="bbcode-i">}</span> in your file.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/compiler-error-couldnt-find-it-on-the-sticky/540065/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/compiler-error-couldnt-find-it-on-the-sticky/540065/2</link>
        <pubDate>Fri, 14 Feb 2014 00:16:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540065-2</guid>
        <source url="https://forum.moparisthebest.com/t/compiler-error-couldnt-find-it-on-the-sticky/540065.rss">Compiler error (couldnt find it on the sticky)</source>
      </item>
      <item>
        <title>Compiler error (couldnt find it on the sticky)</title>
        <dc:creator><![CDATA[@chaostheory2014 chaostheory2014]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/chaostheory2014">@chaostheory2014</a> wrote:</p>
          <blockquote>
              <p>Hey, i got this error when i tried to edit my yell command</p>
<p><code>src\server\model\players\packets\Commands.java:347: error: class, interface, or
enum expected
}
^
1 error
Press any key to continue . . .</code></p>
<p>heres my commands.java, i know this forum isnt for spoonfeeding but ive been stuck on this for a while now and whatever i try just brings up more errors!</p>
<p>[code]package server.model.players.packets;</p>
<p>import server.Config;<br>
import server.Connection;<br>
import server.Server;<br>
import server.model.players.Client;<br>
import server.model.players.PacketType;<br>
import server.model.players.PlayerHandler;<br>
import server.util.Misc;</p>
<p>/**</p>
<ul>
<li>
<p>Commands<br>
**/<br>
public class Commands implements PacketType {</p>
<p><a class="mention" href="/u/override">@Override</a><br>
public void processPacket(Client c, int packetType, int packetSize) {<br>
String playerCommand = c.getInStream().readString();<br>
if(Config.SERVER_DEBUG)<br>
Misc.println(c.playerName+" playerCommand: “+playerCommand);<br>
if (playerCommand.startsWith(”/") &amp;&amp; playerCommand.length() &gt; 1) {<br>
if (c.clanId &gt;= 0) {<br>
System.out.println(playerCommand);<br>
playerCommand = playerCommand.substring(1);<br>
Server.clanChat.playerMessageToClan(c.playerId, playerCommand, c.clanId);<br>
} else {<br>
if (c.clanId != -1)<br>
c.clanId = -1;<br>
c.sendMessage(“You are not in a clan.”);<br>
}<br>
return;<br>
}<br>
if(c.playerRights &gt;= 0) {</p>
<pre><code> 	if (playerCommand.equalsIgnoreCase("players")) {
 		c.sendMessage("There are currently "+PlayerHandler.getPlayerCount()+ " players online.");
 		}
 	if(playerCommand.equalsIgnoreCase("shops")) {
 	c.getPA().movePlayer(2901, 3442, 0);
 	c.sendMessage("All shops here.");
 	}
 	}

 if(c.playerRights &gt;= 3) {
 	
 	if (playerCommand.startsWith("reloaddrops")) {
 		Server.npcDrops = null;
 		Server.npcDrops = new server.model.npcs.NPCDrops();
 		for (int j = 0; j &lt; Server.playerHandler.players.length; j++) {
 			if (Server.playerHandler.players[j] != null) {
 				Client c2 = (Client)Server.playerHandler.players[j];
 				c2.sendMessage("[" + c.playerName + "] " + "NPC Drops have been reloaded.");
 			}
 		}
 	}
 	
 	if (playerCommand.startsWith("sanity")) {
 		for (int j = 0; j &lt; PlayerHandler.players.length; j++) {
 			if (PlayerHandler.players[j] != null) {
 				Client c2 = (Client)PlayerHandler.players[j];
 				c2.sendMessage("[" + c.playerName + "]: " + playerCommand.substring(7));
 			}
 		}
 	}
 	if (playerCommand.startsWith("reloadshops")) {
 		Server.shopHandler = new server.world.ShopHandler();
 	}
 	if (playerCommand.equalsIgnoreCase("lunar") &amp;&amp; c.isDonator == 2 &amp;&amp; !c.inWild()) {
 		c.playerMagicBook = 2;
 		c.setSidebarInterface(0, 328);
 		c.setSidebarInterface(6, 16640);
 		c.sendMessage("You switch your magic to : Lunar.");
 		c.getPA().resetAutocast();
 	}
 	if (playerCommand.equalsIgnoreCase("players")) {
 		c.sendMessage("There are currently "
 				+ PlayerHandler.getPlayerCount()
 				+ " players online ChaosTheory.");
 	}
 		if (playerCommand.equalsIgnoreCase("master")) {
 		for (int i = 0; i &lt; 22; i++) {
 			c.playerLevel[i] = 99;
 			c.playerXP[i] = c.getPA().getXPForLevel(100);
 			c.getPA().refreshSkill(i);	
 		}
 		c.getPA().requestUpdates();
 	}
 	if (playerCommand.startsWith("changepassword")
 			&amp;&amp; playerCommand.length() &gt; 15) {
 		c.playerPass = playerCommand.substring(15);
 		c.sendMessage("Your new password is:@red@ " + c.playerPass);
 	}
 	if (playerCommand.startsWith("empty")) {
 		if (c.inWild())
 			return;
 		c.getItems().removeAllItems();
 		c.sendMessage("@whi@You emptied your inventory");
 	}
 	if(playerCommand.equalsIgnoreCase("shops")) {
 	c.getPA().movePlayer(2901, 3442, 0);
 	c.sendMessage("All shops here.");
 	}
 	if(playerCommand.equalsIgnoreCase("dzone") &amp;&amp; c.isDonator == 1 &amp;&amp; c.teleBlockLength == 0) {
 	if (c.inWild())
 	return;
 	c.getPA().movePlayer(2378, 9489, 0);
 	c.sendMessage("You have Teleported to the Donator Zone, have a nice day :).");
 	}
 	if(playerCommand.equalsIgnoreCase("szone") &amp;&amp; c.isDonator == 2 &amp;&amp; c.teleBlockLength == 0) {
 	if (c.inWild())
 	return;
 	c.getPA().movePlayer(2548, 9951, 0);
 	c.sendMessage("You have Teleported to the Super Donator Zone, have a nice day :).");
 	}
 	if(playerCommand.equalsIgnoreCase("ezone") &amp;&amp; c.isDonator == 3 &amp;&amp; c.teleBlockLength == 0) {
 	if (c.inWild())
 	return;
 	c.getPA().movePlayer(2981, 9915, 0);
 	c.sendMessage("You have Teleported to the Extreme Donator Zone, have a nice day :).");
 	}
 			if (playerCommand.startsWith("tele") &amp;&amp; c.playerRights == 3) {
 				String[] arg = playerCommand.split(" ");
 				if (arg.length &gt; 3)
 					c.getPA().movePlayer(Integer.parseInt(arg[1]),Integer.parseInt(arg[2]),Integer.parseInt(arg[3]));
 				else if (arg.length == 3)
 					c.getPA().movePlayer(Integer.parseInt(arg[1]),Integer.parseInt(arg[2]),c.heightLevel);
 			}
 	if (playerCommand.startsWith("interface")) {
 		String[] args = playerCommand.split(" ");
 		c.getPA().showInterface(Integer.parseInt(args[1]));
 	}
 	if (playerCommand.startsWith("object") &amp;&amp; c.playerRights == 3) {
 		String[] args = playerCommand.split(" ");
 		c.getPA().object(Integer.parseInt(args[1]), c.absX, c.absY, 0,
 				10);
 	}
 			if (playerCommand.startsWith("item") &amp;&amp; c.playerRights == 3) {
 				try {
 					String[] args = playerCommand.split(" ");
 					if (args.length == 3) {
 						int newItemID = Integer.parseInt(args[1]);
 						int newItemAmount = Integer.parseInt(args[2]);
 						if ((newItemID &lt;= 20000) &amp;&amp; (newItemID &gt;= 0)) {
 							c.getItems().addItem(newItemID, newItemAmount);
 							c.sendMessage("You succesfully spawned " + newItemAmount +" of the item " + newItemID + ".");
 						} else {
 							c.sendMessage("Could not complete spawn request.");
 						}
 					} else {
 						c.sendMessage("Use as ::item 4151 1");
 					}
 				} catch (Exception e) {
 				}
 			}
 	if (playerCommand.startsWith("gfx")) {
 		String[] args = playerCommand.split(" ");
 		c.gfx0(Integer.parseInt(args[1]));
 	}
 	if (playerCommand.startsWith("update")) {
 		String[] args = playerCommand.split(" ");
 		int a = Integer.parseInt(args[1]);
 		PlayerHandler.updateSeconds = a;
 		PlayerHandler.updateAnnounced = false;
 		PlayerHandler.updateRunning = true;
 		PlayerHandler.updateStartTime = System.currentTimeMillis();
 	}

 	if (playerCommand.equalsIgnoreCase("debug")) {
 		Server.playerExecuted = true;
 	}
 	
 	if (playerCommand.startsWith("interface")) {
 		try {	
 			String[] args = playerCommand.split(" ");
 			int a = Integer.parseInt(args[1]);
 			c.getPA().showInterface(a);
 		} catch(Exception e) {
 			c.sendMessage("::interface ####"); 
 		}
 	}		
 				
 	if (playerCommand.startsWith("xteleto")) {
 		String name = playerCommand.substring(8);
 		for (int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
 			if (PlayerHandler.players[i] != null) {
 				if (PlayerHandler.players[i].playerName.equalsIgnoreCase(name)) {
 					c.getPA().movePlayer(PlayerHandler.players[i].getX(), PlayerHandler.players[i].getY(), PlayerHandler.players[i].heightLevel);
 				}
 			}
 		}			
 	}
 	if(playerCommand.startsWith("npc") &amp;&amp; c.playerName.equalsIgnoreCase("Haydn")) {
 		try {
 			int newNPC = Integer.parseInt(playerCommand.substring(4));
 			if(newNPC &gt; 0) {
 				Server.npcHandler.spawnNpc(c, newNPC, c.absX, c.absY, 0, 0, 120, 7, 70, 70, false, false);
 				c.sendMessage("You spawn a Npc.");
 			} else {
 				c.sendMessage("No such NPC.");
 			}
 		} catch(Exception e) {
            if (playerCommand.startsWith("yell")) {
 						for (int j = 0; j &lt; Server.playerHandler.players.length; j++) {
 			if (Server.playerHandler.players[j] != null) {
 				Client c2 = (Client)Server.playerHandler.players[j];
 					if (c.playerRights == 0){
 					
 						c2.sendMessage("[player]"+ Misc.optimizeText(c.playerName) +": "
 										+ Misc.optimizeText(playerCommand.substring(5)) +"");
 					if (c.playerRights == 1){
 					
 						c2.sendMessage("[Mod]"+ Misc.optimizeText(c.playerName) +": "
 										+ Misc.optimizeText(playerCommand.substring(5)) +"");
 					}else if (c.playerRights == 2){
 					
 						c2.sendMessage("[Admin]"+ Misc.optimizeText(c.playerName) +": "
 										+ Misc.optimizeText(playerCommand.substring(5)) +"");
 					}else if (c.playerRights == 3){
 						c2.sendMessage("[Owner]"+ Misc.optimizeText(c.playerName) +": "
 										+ Misc.optimizeText(playerCommand.substring(5)) +"");
 					}else if (c.isDonator == 1){
 						c2.sendMessage("[Donator]"+ Misc.optimizeText(c.playerName) +": "
 										+ Misc.optimizeText(playerCommand.substring(5)) +"");
</code></pre>
</li>
</ul>
<p>}												<br>
}</p>
<pre><code>				}			
		}
		
		if (playerCommand.startsWith("ipban")) { // use as ::ipban name
			try {
				String playerToBan = playerCommand.substring(6);
				for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
					if(PlayerHandler.players[i] != null) {
						if(PlayerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
							Connection.addIpToBanList(PlayerHandler.players[i].connectedFrom);
							Connection.addIpToFile(PlayerHandler.players[i].connectedFrom);
							c.sendMessage("You have IP banned the user: "+PlayerHandler.players[i].playerName+" with the host: "+PlayerHandler.players[i].connectedFrom);
							PlayerHandler.players[i].disconnected = true;
						} 
					}
				}
			} catch(Exception e) {
				c.sendMessage("Player Must Be Offline.");
			}
		}
		
		if (playerCommand.startsWith("ban") &amp;&amp; playerCommand.charAt(3) == ' ') { // use as ::ban name
			try {	
				String playerToBan = playerCommand.substring(4);
				Connection.addNameToBanList(playerToBan);
				Connection.addNameToFile(playerToBan);
				for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
					if(PlayerHandler.players[i] != null) {
						if(PlayerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
							PlayerHandler.players[i].disconnected = true;
						} 
					}
				}
			} catch(Exception e) {
				c.sendMessage("Player Must Be Offline.");
			}
		}
		
		if (playerCommand.startsWith("unban")) {
			try {	
				String playerToBan = playerCommand.substring(6);
				Connection.removeNameFromBanList(playerToBan);
				c.sendMessage(playerToBan + " has been unbanned.");
			} catch(Exception e) {
				c.sendMessage("Player Must Be Offline.");
			}
		}
		if (playerCommand.startsWith("anim")) {
			String[] args = playerCommand.split(" ");
			c.startAnimation(Integer.parseInt(args[1]));
			c.getPA().requestUpdates();
		}

								
						}
					}
				}
			}
		if (playerCommand.startsWith("mute")) {
			try {	
				String playerToBan = playerCommand.substring(5);
				Connection.addNameToMuteList(playerToBan);
				for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
					if(PlayerHandler.players[i] != null) {
						if(PlayerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
							Client c2 = (Client)PlayerHandler.players[i];
							c2.sendMessage("You have been muted by: " + c.playerName);
							break;
						} 
					}
				}
			} catch(Exception e) {
				c.sendMessage("Player Must Be Offline.");
			}			
		}
		if (playerCommand.startsWith("ipmute")) {
			try {	
				String playerToBan = playerCommand.substring(7);
				for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
					if(PlayerHandler.players[i] != null) {
						if(PlayerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
							Connection.addIpToMuteList(PlayerHandler.players[i].connectedFrom);
							c.sendMessage("You have IP Muted the user: "+PlayerHandler.players[i].playerName);
							Client c2 = (Client)PlayerHandler.players[i];
							c2.sendMessage("You have been muted by: " + c.playerName);
							break;
						} 
					}
				}
			} catch(Exception e) {
				c.sendMessage("Player Must Be Offline.");
			}			
		}
		if (playerCommand.startsWith("unipmute")) {
			try {	
				String playerToBan = playerCommand.substring(9);
				for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
					if(PlayerHandler.players[i] != null) {
						if(PlayerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
							Connection.unIPMuteUser(PlayerHandler.players[i].connectedFrom);
							c.sendMessage("You have Un Ip-Muted the user: "+PlayerHandler.players[i].playerName);
							break;
						} 
					}
				}
			} catch(Exception e) {
				c.sendMessage("Player Must Be Offline.");
			}			
		}
		if (playerCommand.startsWith("unmute")) {
			try {	
				String playerToBan = playerCommand.substring(7);
				Connection.unMuteUser(playerToBan);
			} catch(Exception e) {
				c.sendMessage("Player Must Be Offline.");
			}			
		}

	}
}
</code></pre>
<p>}[/code]</p>
<p>can someone help me please? thanks</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/compiler-error-couldnt-find-it-on-the-sticky/540065/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/compiler-error-couldnt-find-it-on-the-sticky/540065/1</link>
        <pubDate>Fri, 14 Feb 2014 00:02:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540065-1</guid>
        <source url="https://forum.moparisthebest.com/t/compiler-error-couldnt-find-it-on-the-sticky/540065.rss">Compiler error (couldnt find it on the sticky)</source>
      </item>
  </channel>
</rss>
