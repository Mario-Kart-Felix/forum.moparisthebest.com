<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>C++ - deleting dynamically allocated memory wont free it all</title>
    <link>https://forum.moparisthebest.com/t/c-deleting-dynamically-allocated-memory-wont-free-it-all/322601</link>
    <description>I was doing some tests. Dynamically allocating memory and then freeing it. After freeing it all up the memory used in the end depends on where I delete the allocated memory.

Deleting in the same for loop.
[code]
#include &lt;iostream&gt;
#include &lt;conio.h&gt;

using namespace std;

int main()
{
    getch(); //starting with 336K used
    int *memB[100] = {};
    for (int i = 0; i &lt; 100; i++)
    {
        memB[i] = new int[9000];
        for (int j = 0; j &lt; 9000; j++)
        {
            (memB[i])[j] = 100;
        }
        delete [] memB[i];
    }
    getch();
    for (int i = 0; i &lt; 100; i++)
    {
        //delete [] memB[i];
    }
    getch(); //ending with 372K used
    return 0;
}
[/code]
As you can see, the end result is almost the same as when the program started.

Deleting in a separate for loop.
[code]
#include &lt;iostream&gt;
#include &lt;conio.h&gt;

using namespace std;

int main()
{
    getch(); //starting with 336K used
    int *memB[100] = {};
    for (int i = 0; i &lt; 100; i++)
    {
        memB[i] = new int[9000];
        for (int j = 0; j &lt; 9000; j++)
        {
            (memB[i])[j] = 100;
        }
        //delete [] memB[i];
    }
    getch(); //3960K used
    for (int i = 0; i &lt; 100; i++)
    {
        delete [] memB[i];
    }
    getch(); //ending with 972K used
    return 0;
}
[/code]
In the end the program is using almost 3 times more memory as when it started.

I also tested it with bigger arrays and it was pretty bad. Started with 336K and ended with 6000K. Anyone knows what can cause this?</description>
    
    <lastBuildDate>Mon, 11 Jan 2010 23:57:33 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/c-deleting-dynamically-allocated-memory-wont-free-it-all/322601.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>C++ - deleting dynamically allocated memory wont free it all</title>
        <dc:creator><![CDATA[@ripzone Triton]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ripzone">@ripzone</a> wrote:</p>
          <blockquote>
              <p>free()/delete does not really give mem back to the OS. The memory manager asks memory to the OS (using the brk() system call) and manages some ammount of pages returned by the OS. It divides it in different bucks for different allocation sizes (usually) so when you free most likely the memory isn’t returned to the OS, it’s just made available to the following allocations.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-deleting-dynamically-allocated-memory-wont-free-it-all/322601/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-deleting-dynamically-allocated-memory-wont-free-it-all/322601/5</link>
        <pubDate>Mon, 11 Jan 2010 23:57:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-322601-5</guid>
        <source url="https://forum.moparisthebest.com/t/c-deleting-dynamically-allocated-memory-wont-free-it-all/322601.rss">C++ - deleting dynamically allocated memory wont free it all</source>
      </item>
      <item>
        <title>C++ - deleting dynamically allocated memory wont free it all</title>
        <dc:creator><![CDATA[@The_Beatz The Beatz]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_beatz">@The_Beatz</a> wrote:</p>
          <blockquote>
              <p>There seems to be no problem. Did some different tests yesterday. I looped the allocation/reallocating process 5 times and after allocating the memory used always stayed between 3900-4000K. So there’s no memory leak, seems to be the OS that doesn’t free it up immediatelly.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-deleting-dynamically-allocated-memory-wont-free-it-all/322601/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-deleting-dynamically-allocated-memory-wont-free-it-all/322601/4</link>
        <pubDate>Wed, 30 Dec 2009 12:54:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-322601-4</guid>
        <source url="https://forum.moparisthebest.com/t/c-deleting-dynamically-allocated-memory-wont-free-it-all/322601.rss">C++ - deleting dynamically allocated memory wont free it all</source>
      </item>
      <item>
        <title>C++ - deleting dynamically allocated memory wont free it all</title>
        <dc:creator><![CDATA[@zstars zstars]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zstars">@zstars</a> wrote:</p>
          <blockquote>
              <p>Your code looks fine, make sure you’re not running in debugging mode.<br>
It’s also kinda likely that simply your OS or DMA system doesn’t immediately free all memory, or that, for example, the getch() calls take up some memory.</p>
<p>(Note btw that getch and conio.h aren’t standard).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-deleting-dynamically-allocated-memory-wont-free-it-all/322601/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-deleting-dynamically-allocated-memory-wont-free-it-all/322601/3</link>
        <pubDate>Tue, 29 Dec 2009 16:34:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-322601-3</guid>
        <source url="https://forum.moparisthebest.com/t/c-deleting-dynamically-allocated-memory-wont-free-it-all/322601.rss">C++ - deleting dynamically allocated memory wont free it all</source>
      </item>
      <item>
        <title>C++ - deleting dynamically allocated memory wont free it all</title>
        <dc:creator><![CDATA[@unlimitedorb unlimitedorb]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unlimitedorb">@unlimitedorb</a> wrote:</p>
          <blockquote>
              <p>This is a fallacy. Does the way you check for array memory usage account for how the compiler handles each source? What are you using to measure memory allocation? At any rate, there’s nothing wrong with the code involved… it’s how you’re drawing conclusions that might be the problem.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-deleting-dynamically-allocated-memory-wont-free-it-all/322601/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-deleting-dynamically-allocated-memory-wont-free-it-all/322601/2</link>
        <pubDate>Tue, 29 Dec 2009 16:30:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-322601-2</guid>
        <source url="https://forum.moparisthebest.com/t/c-deleting-dynamically-allocated-memory-wont-free-it-all/322601.rss">C++ - deleting dynamically allocated memory wont free it all</source>
      </item>
      <item>
        <title>C++ - deleting dynamically allocated memory wont free it all</title>
        <dc:creator><![CDATA[@The_Beatz The Beatz]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_beatz">@The_Beatz</a> wrote:</p>
          <blockquote>
              <p>I was doing some tests. Dynamically allocating memory and then freeing it. After freeing it all up the memory used in the end depends on where I delete the allocated memory.</p>
<p>Deleting in the same for loop.</p>
<pre><code class="lang-auto">#include &lt;iostream&gt;
#include &lt;conio.h&gt;

using namespace std;

int main()
{
    getch(); //starting with 336K used
    int *memB[100] = {};
    for (int i = 0; i &lt; 100; i++)
    {
        memB[i] = new int[9000];
        for (int j = 0; j &lt; 9000; j++)
        {
            (memB[i])[j] = 100;
        }
        delete [] memB[i];
    }
    getch();
    for (int i = 0; i &lt; 100; i++)
    {
        //delete [] memB[i];
    }
    getch(); //ending with 372K used
    return 0;
}</code></pre>
<p>As you can see, the end result is almost the same as when the program started.</p>
<p>Deleting in a separate for loop.</p>
<pre><code class="lang-auto">#include &lt;iostream&gt;
#include &lt;conio.h&gt;

using namespace std;

int main()
{
    getch(); //starting with 336K used
    int *memB[100] = {};
    for (int i = 0; i &lt; 100; i++)
    {
        memB[i] = new int[9000];
        for (int j = 0; j &lt; 9000; j++)
        {
            (memB[i])[j] = 100;
        }
        //delete [] memB[i];
    }
    getch(); //3960K used
    for (int i = 0; i &lt; 100; i++)
    {
        delete [] memB[i];
    }
    getch(); //ending with 972K used
    return 0;
}</code></pre>
<p>In the end the program is using almost 3 times more memory as when it started.</p>
<p>I also tested it with bigger arrays and it was pretty bad. Started with 336K and ended with 6000K. Anyone knows what can cause this?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-deleting-dynamically-allocated-memory-wont-free-it-all/322601/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-deleting-dynamically-allocated-memory-wont-free-it-all/322601/1</link>
        <pubDate>Mon, 28 Dec 2009 20:05:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-322601-1</guid>
        <source url="https://forum.moparisthebest.com/t/c-deleting-dynamically-allocated-memory-wont-free-it-all/322601.rss">C++ - deleting dynamically allocated memory wont free it all</source>
      </item>
  </channel>
</rss>
