<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>BufferedImage problem</title>
    <link>https://forum.moparisthebest.com/t/bufferedimage-problem/228233</link>
    <description>i cant work out why my method isn&#39;t working, its meant to print a BufferdImage on a BufferedImage with color being a mask :( but i cant see the problem with it

[code]
	public static BufferedImage fuse(Color color,BufferedImage... image) {
 		BufferedImage bfi = image[0];
 		for(int ax = 0; ax &lt; bfi.getWidth() ; ax++){
			for(int ay = 0; ay &lt; bfi.getHeight() ; ay++){
				for(int aid = 1; aid &lt; image.length;aid++){
					if(image[aid] != null){
						if(image[aid].getRGB(ax,ay) != color.getRGB()){
							bfi.setRGB(ax,ay,image[aid].getRGB(ax,ay));
						}
					}
				}
			}
		}
		return bfi;
        }
[/code]</description>
    
    <lastBuildDate>Thu, 04 Sep 2008 19:40:33 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/bufferedimage-problem/228233.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>BufferedImage problem</title>
        <dc:creator><![CDATA[@ilyaostr9 io9]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ilyaostr9">@ilyaostr9</a> wrote:</p>
          <blockquote>
              <p>Assuming you just wanna make a certain color transparent, just make an implementation of RGBImageFilter, here’s how I did it in my pokemon game:<br>
(Please disregard the crappy indentation)</p>
<p>[code]import java.awt.<em>;<br>
import java.awt.image.</em>;<br>
import javax.imageio.<em>;<br>
import <a href="http://java.io" rel="nofollow noopener">java.io</a>.</em>;</p>
<p>/**</p>
<ul>
<li>
<span class="mention">@author</span> io9</li>
<li>
</li>
</ul>
<p>*/<br>
public class ImageLoader extends RGBImageFilter {<br>
public ImageLoader(int colorToFlip) {<br>
this.colorToFlip = colorToFlip;<br>
}</p>
<pre><code>public Image loadImageFromFile(String src) throws IOException {
	BufferedImage loadedImage = ImageIO.read(new File(src));
	BufferedImage argbImage = new BufferedImage(loadedImage.getWidth(),
			loadedImage.getHeight(), BufferedImage.TYPE_INT_ARGB);
	argbImage.getGraphics().drawImage(loadedImage, 0, 0, null);

	ImageProducer ip = new FilteredImageSource(argbImage.getSource(), this);
	return Toolkit.getDefaultToolkit().createImage(ip);
    }

public final int filterRGB(int x, int y, int rgb) {
	if ((rgb | 0xFF000000) == colorToFlip) {
		return (rgb &amp; 0x00FFFFFF); // make sure alpha bits stay at 0
	} else {
		return rgb;
	}
}

public int getColorToFlip() {
	return colorToFlip;
}

public void setColorToFlip(int colorToFlip) {
	this.colorToFlip = colorToFlip;
}
</code></pre>
<p>}[/code]</p>
<p>Also, if you wanna simply change the color, just change</p>
<pre><code class="lang-auto">			return (rgb &amp; 0x00FFFFFF); // make sure alpha bits stay at 0</code></pre>
<p>in filterRGB() to whatever color mask you want</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bufferedimage-problem/228233/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bufferedimage-problem/228233/4</link>
        <pubDate>Thu, 04 Sep 2008 19:40:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-228233-4</guid>
        <source url="https://forum.moparisthebest.com/t/bufferedimage-problem/228233.rss">BufferedImage problem</source>
      </item>
      <item>
        <title>BufferedImage problem</title>
        <dc:creator><![CDATA[@newbiehacker newbiehacker]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/newbiehacker">@newbiehacker</a> wrote:</p>
          <blockquote>
              <p>Taharok, that’s nasty.</p>
<p>What you should do (pro way, I wrote it):</p>
<pre><code class="lang-auto">public static BufferedImage fuse(Color color, BufferedImage... images) {
    BufferedImage bfi = images[0];
    int rgb = color.getRGB(), tempRGB = 0;
    final int width = bfi.getWidth();
    final int height = bfi.getHeight();
    final int pixelCount = width*height;
    int[] fPix = new int[pixelCount], iPix = new int[pixelCount];

    // Get bfi's pixels into our pixel array
    bfi.getRGB(fPix, 0, 0, width, height, 0, width); // Typing this in the quick-post box, argument ordering may be different

    // Temp vars
    int i, j, w, h;
    BufferedImage img;


    for(i = 1; i &lt; images.length; i++) {
        img = images[i];
        img.getRGB(iPix, 0, 0, width, height, 0, width); // Same as above!
        for(j = 0; j &lt; pixelCount; j++) {
            tempRGB = fPix[j];
            if (tempRGB != rgb)
                fPix[j] = tempRGB;
        }
    }

    // Write the raster data back to the image
    bfi.setRGB(fPix, 0, 0, width, height, 0, width);
}</code></pre>
<p>It may not do what you want it to though, seeing as it doesn’t blend any pixels, it simply overwrites.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bufferedimage-problem/228233/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bufferedimage-problem/228233/3</link>
        <pubDate>Thu, 04 Sep 2008 18:20:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-228233-3</guid>
        <source url="https://forum.moparisthebest.com/t/bufferedimage-problem/228233.rss">BufferedImage problem</source>
      </item>
      <item>
        <title>BufferedImage problem</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <p>Firstly, you should get used to using a foreach loop with varargs. Instead of doing</p>
<pre><code class="lang-auto">for (int idx = 0; idx &lt; varargs.length; idx++) {
	Object obj = varargs[idx];
}</code></pre>
<p>you can do</p>
<pre><code class="lang-auto">for (Object obj : varargs) {

}</code></pre>
<p>Much simpler.</p>
<p>Next, try using a single loop instead of a double when iterating through pixels. It cleans up the code, and makes things easier to read. Since pixels are row-column based, you have to logically construct a loop that will handle both the columns and the rows. You can do something of the following:</p>
<pre><code class="lang-auto">int width = image.getWidth(null);
int height = image.getHeight(null);
int total = width * height;
for (int i = 0; i &lt; total; i++) {
	int y = i / width;
	int x = i - (y * height);
}</code></pre>
<p>Thirdly, have you thoroughly debugged to ensure that the global image colors are equal at all to the color supplied? Just because they look that way doesn’t always mean they are. Print out the RGB values on every pixel iteration, just to be sure that things are working properly.</p>
<p>Anyway, here is a cleaned-up version of your code, using what I said above:</p>
<pre><code class="lang-auto">	public static BufferedImage fuse(Color color,BufferedImage... images) {
 		BufferedImage bfi = images[0];
		int rgb = color.getRGB(), tempRGB = 0;
		int width = bfi.getWidth();
		int height = bfi.getHeight();
		int pixelCount = width*height;

		for (int i = 0; i &lt; pixelCount; i++) {
			for (BufferedImage img : images) {
				if (img == bfi) // on first iteration
					continue;
				int y = i / width;
				int x = i - (y * height);
				tempRGB = img.getRGB(x, y);
				if (tempRGB != rgb)
					bfi.setRGB(x, y, tempRGB);
			}
		}
	}</code></pre>
<p>Oh, and one other thing I never said, you want to watch method calls. Instead of calling [tt]getRGB(int,int)[/tt] twice in two lines of code, you should store it to a local variable and use the variable. It saves on timing and barely effects memory allocation (plus, the GC will collect it if the [tt]fuse[/tt] method is not called frequently enough to need the variable).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bufferedimage-problem/228233/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bufferedimage-problem/228233/2</link>
        <pubDate>Sat, 30 Aug 2008 04:46:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-228233-2</guid>
        <source url="https://forum.moparisthebest.com/t/bufferedimage-problem/228233.rss">BufferedImage problem</source>
      </item>
      <item>
        <title>BufferedImage problem</title>
        <dc:creator><![CDATA[@shangtsung1 shangtsung1]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/shangtsung1">@shangtsung1</a> wrote:</p>
          <blockquote>
              <p>i cant work out why my method isn’t working, its meant to print a BufferdImage on a BufferedImage with color being a mask <img src="https://forum.moparisthebest.com/images/emoji/twitter/frowning.png?v=6" title=":frowning:" class="emoji" alt=":frowning:"> but i cant see the problem with it</p>
<pre><code class="lang-auto">	public static BufferedImage fuse(Color color,BufferedImage... image) {
 		BufferedImage bfi = image[0];
 		for(int ax = 0; ax &lt; bfi.getWidth() ; ax++){
			for(int ay = 0; ay &lt; bfi.getHeight() ; ay++){
				for(int aid = 1; aid &lt; image.length;aid++){
					if(image[aid] != null){
						if(image[aid].getRGB(ax,ay) != color.getRGB()){
							bfi.setRGB(ax,ay,image[aid].getRGB(ax,ay));
						}
					}
				}
			}
		}
		return bfi;
        }</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bufferedimage-problem/228233/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bufferedimage-problem/228233/1</link>
        <pubDate>Wed, 27 Aug 2008 08:33:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-228233-1</guid>
        <source url="https://forum.moparisthebest.com/t/bufferedimage-problem/228233.rss">BufferedImage problem</source>
      </item>
  </channel>
</rss>
