<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Avoiding ConcurrentModificationException when multi-threading??</title>
    <link>https://forum.moparisthebest.com/t/avoiding-concurrentmodificationexception-when-multi-threading/554013</link>
    <description>What I&#39;m trying to do is replicate a Network in some sense. 
There are 2 clients which both have access to the same channel. When they both try to read from the channel a ConcurrentModificationException (well A exception) is thrown. 

With my lack of understanding, how should I be handling the channel? In a real life server/client network sceanario are clients queued when reading channel? 
How could I implement something to work around what I&#39;ve got? 

My code:

[code=java]class Client1 implements Runnable {
   void run() {
      while (true) {
         ...
        List&lt;Packet&gt; packets = channel.locate(&quot;b9:f5:8e:52:65:f7&quot;); //ConcurrentModificationException
      }
   }
}[/code]

[code=java]class Client2 implements Runnable {
   void run() {
      while (true) {
         ...
        List&lt;Packet&gt; packets = channel.locate(&quot;b3:f2:7e:92:12:f1&quot;); //ConcurrentModificationException
      }
   }
}[/code]

[code=java]
class Channel {
   List&lt;Packet&gt; queue = new ArrayList&lt;&gt;();

   List&lt;Packet&gt; locate(String address) {
      List&lt;Data&gt; packets = new ArrayList&lt;&gt;();
      Iterator&lt;Packet&gt; it = queue.iterator();
      while (it.hasNext() &amp;&amp; packets.size() &gt; 0) {
         Packet p = it.next();
	 if (p.getDestination().equals(address)) {
	    packets.add(p);
            it.remove();
	  }
       }
       return packets;
    }
}[/code]

Thanks for the help.</description>
    
    <lastBuildDate>Sat, 05 Dec 2015 13:29:24 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/avoiding-concurrentmodificationexception-when-multi-threading/554013.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Avoiding ConcurrentModificationException when multi-threading??</title>
        <dc:creator><![CDATA[@z z]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/z">@z</a> wrote:</p>
          <blockquote>
              <p>why not just have a client and server and establish a binary protocol between the two using UDP/TCP? or is that overkill</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/avoiding-concurrentmodificationexception-when-multi-threading/554013/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/avoiding-concurrentmodificationexception-when-multi-threading/554013/6</link>
        <pubDate>Sat, 05 Dec 2015 13:29:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554013-6</guid>
        <source url="https://forum.moparisthebest.com/t/avoiding-concurrentmodificationexception-when-multi-threading/554013.rss">Avoiding ConcurrentModificationException when multi-threading??</source>
      </item>
      <item>
        <title>Avoiding ConcurrentModificationException when multi-threading??</title>
        <dc:creator><![CDATA[@my-swagger my-swagger]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/my-swagger">@my-swagger</a> wrote:</p>
          <blockquote>
              <p>My assignment requires me to model a Network. The Clients did not need multi threading so I’m handling it like tasks now.<br>
As for design, it was a mistake on my part.</p>
<p>Thanks everybody who helped.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/avoiding-concurrentmodificationexception-when-multi-threading/554013/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/avoiding-concurrentmodificationexception-when-multi-threading/554013/5</link>
        <pubDate>Sat, 05 Dec 2015 12:32:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554013-5</guid>
        <source url="https://forum.moparisthebest.com/t/avoiding-concurrentmodificationexception-when-multi-threading/554013.rss">Avoiding ConcurrentModificationException when multi-threading??</source>
      </item>
      <item>
        <title>Avoiding ConcurrentModificationException when multi-threading??</title>
        <dc:creator><![CDATA[@xx_matty_xx Justin Bieber]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xx_matty_xx">@xx_matty_xx</a> wrote:</p>
          <blockquote>
              <p>not really sure what you’re going for with this design, but a bumfuc<span class="bbcode-b"></span>k easy way of allowing concurrent access to a list is to change the type from ArrayList to CopyOnWriteArrayList</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/avoiding-concurrentmodificationexception-when-multi-threading/554013/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/avoiding-concurrentmodificationexception-when-multi-threading/554013/4</link>
        <pubDate>Sat, 05 Dec 2015 09:15:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554013-4</guid>
        <source url="https://forum.moparisthebest.com/t/avoiding-concurrentmodificationexception-when-multi-threading/554013.rss">Avoiding ConcurrentModificationException when multi-threading??</source>
      </item>
      <item>
        <title>Avoiding ConcurrentModificationException when multi-threading??</title>
        <dc:creator><![CDATA[@silabsoft RuneAgent]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silabsoft">@silabsoft</a> wrote:</p>
          <blockquote>
              <p>you could clone the list I guess but the design itself feels like it’s going to be a disaster</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/avoiding-concurrentmodificationexception-when-multi-threading/554013/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/avoiding-concurrentmodificationexception-when-multi-threading/554013/3</link>
        <pubDate>Sat, 05 Dec 2015 08:13:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554013-3</guid>
        <source url="https://forum.moparisthebest.com/t/avoiding-concurrentmodificationexception-when-multi-threading/554013.rss">Avoiding ConcurrentModificationException when multi-threading??</source>
      </item>
      <item>
        <title>Avoiding ConcurrentModificationException when multi-threading??</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>Can’t iterate over a list in multiple threads. Usually there is a modification counter and if it is mismatched from the internal state of an iterator you will get that exception.</p>
<p>ie:</p>
<pre><code class="lang-auto">class Iterator {
    next() { if(mc != modificationCount) throw new ModificationException("..."); ... }
}

class Collection {
    add(Element e) { mc++; ... }
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/avoiding-concurrentmodificationexception-when-multi-threading/554013/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/avoiding-concurrentmodificationexception-when-multi-threading/554013/2</link>
        <pubDate>Fri, 04 Dec 2015 23:27:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554013-2</guid>
        <source url="https://forum.moparisthebest.com/t/avoiding-concurrentmodificationexception-when-multi-threading/554013.rss">Avoiding ConcurrentModificationException when multi-threading??</source>
      </item>
      <item>
        <title>Avoiding ConcurrentModificationException when multi-threading??</title>
        <dc:creator><![CDATA[@my-swagger my-swagger]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/my-swagger">@my-swagger</a> wrote:</p>
          <blockquote>
              <p>What I’m trying to do is replicate a Network in some sense.<br>
There are 2 clients which both have access to the same channel. When they both try to read from the channel a ConcurrentModificationException (well A exception) is thrown.</p>
<p>With my lack of understanding, how should I be handling the channel? In a real life server/client network sceanario are clients queued when reading channel?<br>
How could I implement something to work around what I’ve got?</p>
<p>My code:</p>
<p><code>class Client1 implements Runnable {
   void run() {
      while (true) {
         ...
        List&lt;Packet&gt; packets = channel.locate("b9:f5:8e:52:65:f7"); //ConcurrentModificationException
      }
   }
}</code></p>
<p><code>class Client2 implements Runnable {
   void run() {
      while (true) {
         ...
        List&lt;Packet&gt; packets = channel.locate("b3:f2:7e:92:12:f1"); //ConcurrentModificationException
      }
   }
}</code></p>
<p>[code=java]<br>
class Channel {<br>
List queue = new ArrayList&lt;&gt;();</p>
<p>List locate(String address) {<br>
List packets = new ArrayList&lt;&gt;();<br>
Iterator it = queue.iterator();<br>
while (it.hasNext() &amp;&amp; packets.size() &gt; 0) {<br>
Packet p = it.next();<br>
if (p.getDestination().equals(address)) {<br>
packets.add§;<br>
it.remove();<br>
}<br>
}<br>
return packets;<br>
}<br>
}[/code]</p>
<p>Thanks for the help.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/avoiding-concurrentmodificationexception-when-multi-threading/554013/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/avoiding-concurrentmodificationexception-when-multi-threading/554013/1</link>
        <pubDate>Fri, 04 Dec 2015 23:16:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554013-1</guid>
        <source url="https://forum.moparisthebest.com/t/avoiding-concurrentmodificationexception-when-multi-threading/554013.rss">Avoiding ConcurrentModificationException when multi-threading??</source>
      </item>
  </channel>
</rss>
