<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Runecrating</title>
    <link>https://forum.moparisthebest.com/t/runecrating/355199</link>
    <description>okay so primadude released his runecrafting for iclarity after 30 mins of work i converted it to delta so here you go

THIS IS COMMENT THROUGH OUT THE TUTORIAL IN THE RUNECRAFTING.JAVA 


step 1:
make a new java file called RuneCrafting.java
and stick this in there

[code]import java.io.IOException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Random;

/**
 * Class to manage the skill: RuneCrafting.
 * @author Primadude
 */
public class RuneCrafting {
		public long runeCraftDelay;

        /**
         * Rune essence ID constant.
         */
        private static final int RUNE_ESS = 1436;

        /**
         * Pure essence ID constant.
         */
        private static final int PURE_ESS = 7936;

        /**
         * An array containing the rune item numbers.
         */
        private int[] runes = {
                556, 558, 555, 557, 554, 559, 564, 562, 561, 563, 560, 565
        };

        /**
         * An array containing the object IDs of the runecrafting altars.
         */
        public int[] altarID = {
                2478, 2479, 2480, 2481, 2482, 2483, 2484, 2487, 2486, 2485, 2488, 2489
        };

        private double[] exp ={
                5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5, 9, 9.5, 10, 11
        };

        /**
         * 2D Array containing the levels required to craft the specific rune.
         */
        private int[][] craftLevelReq = {
                {556, 1}, {558, 2}, {555, 5}, {557, 9}, {554, 14}, {559, 20},
                {564, 27}, {562, 35}, {561, 44}, {563, 54}, {560, 65}, {565, 77}
        };

        /**
         * 2D Array containing the levels that you can craft multiple runes.
         */
        private int[][] multipleRunes = {
                {11, 22, 33, 44, 55, 66, 77, 88, 99},
                {14, 28, 42, 56, 70, 84, 98},
                {14, 38, 57, 76, 95},
                {26, 52, 78},
                {35, 70},
                {46, 92},
                {59},
                {74},
                {91}
        };

        /**
         * Checks through all 28 item inventory slots for the specified item.
         */
        private boolean itemInInv(Client c, int itemID, int slot, boolean checkWholeInv) {
                if (checkWholeInv) {
                        for (int i = 0; i &lt; 28; i++) {
                                if (c.playerItems[i] == itemID + 1) {
                                        return true;
                                }
                        }
                } else {
                        if (c.playerItems[slot] == itemID + 1) {
                                return true;
                        }
                }
                return false;
        }

        /**
         * Replaces essence in the inventory with the specified rune.
         */
        private void replaceEssence(Client c, int essType, int runeID, int multiplier) {
                for (int i = 0; i &lt; 28; i++) {
                        if (itemInInv(c, essType, i, false)) {
                                c.deleteItem(essType, i, 1);
                                c.addItem(runeID, 1 * multiplier);
                        }
                }
        }

        /**
         * Crafts the specific rune.
         */
        public void craftRunes(final Client c, int altarID) {
                if (System.currentTimeMillis() - runeCraftDelay &lt; 1000) {
                        return;
                }
                int runeID = 0;

                for (int i = 0; i &lt; this.altarID.length; i++) {
                        if (altarID == this.altarID[i]) {
                                runeID = runes[i];
                        }
                }
                for (int i = 0; i &lt; craftLevelReq.length; i++) {
                        if (runeID == runes[i]) {
                                if (c.playerLevel[20] &gt; craftLevelReq[i][1]) {
                                        if (c.playerHasItem(RUNE_ESS) || c.playerHasItem(PURE_ESS)) {
                                                int multiplier = 0;

                                                int[] nonMultiples = {
                                                        561, 563, 560, 565
                                                };

                                                boolean isMultipleRune = true;

                                                for (int j = 0; j &lt; nonMultiples.length; j++) {
                                                        if (runeID == nonMultiples[j]) {
                                                                isMultipleRune = false;
                                                        }
                                                }
                                                if (isMultipleRune) {
                                                        for (int j = 0; j &lt; multipleRunes[i].length; j++) {
                                                                if (c.playerLevel[20] &gt; multipleRunes[i][j]) {
                                                                        multiplier = multipleRunes[i][j] + 2;
                                                                } else {
                                                                        multiplier = 1;
                                                                }
                                                        }
                                                }
                                                replaceEssence(c, itemInInv(c, RUNE_ESS, 0, true) ? RUNE_ESS : PURE_ESS, runeID, multiplier);
                                                runeCraftDelay = System.currentTimeMillis();
                                                c.startAnimation(791);
                                                c.addSkillXP((int) exp[i], 20);
                                                return;
                                        }
                                        c.sM(&quot;You need to have essence to craft runes!&quot;);
                                        return;
                                }
                                c.sM(&quot;You need a Runecrafting level of &quot;+ craftLevelReq[i][1] +&quot; to craft this rune.&quot;);
                        }
                }
        }

}[/code]

step 2:
declare this in client.java
[code]/**
 * The RuneCrafting instance.
 */
private RuneCrafting RuneCrafting = new RuneCrafting();

/**
 * The RuneCrafting Singleton.
 */
public RuneCrafting getRuneCrafting() {
        return RuneCrafting;
}[/code]

step 3:
in client java search for
[code]int objectY = inStream.readUnsignedWordA();[/code]
and right under it add this
[code]	if (objectID == getRuneCrafting().altarID[0]) {
					getRuneCrafting().craftRunes(this, objectID);
			}
		}[/code]

step 4:
Open server.java
and add
[code]public static RuneCrafting RuneCrafting = null;[/code]
and
[code]RuneCrafting = new RuneCrafting();[/code]

save close compile</description>
    
    <lastBuildDate>Sat, 21 Aug 2010 00:25:13 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/runecrating/355199.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Runecrating</title>
        <dc:creator><![CDATA[@badger41 badger41]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/badger41">@badger41</a> wrote:</p>
          <blockquote>
              <p>its not a tutorial unless you explain what everything does.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/runecrating/355199/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/runecrating/355199/4</link>
        <pubDate>Sat, 21 Aug 2010 00:25:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-355199-4</guid>
        <source url="https://forum.moparisthebest.com/t/runecrating/355199.rss">Runecrating</source>
      </item>
      <item>
        <title>Runecrating</title>
        <dc:creator><![CDATA[@i_code_rsps i code rsps]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/i_code_rsps">@i_code_rsps</a> wrote:</p>
          <blockquote>
              <p>Explain the code, pl0x?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/runecrating/355199/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/runecrating/355199/3</link>
        <pubDate>Fri, 20 Aug 2010 23:37:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-355199-3</guid>
        <source url="https://forum.moparisthebest.com/t/runecrating/355199.rss">Runecrating</source>
      </item>
      <item>
        <title>Runecrating</title>
        <dc:creator><![CDATA[@LilXCj LilXCj]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lilxcj">@LilXCj</a> wrote:</p>
          <blockquote>
              <p>snippet</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/runecrating/355199/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/runecrating/355199/2</link>
        <pubDate>Mon, 16 Aug 2010 22:48:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-355199-2</guid>
        <source url="https://forum.moparisthebest.com/t/runecrating/355199.rss">Runecrating</source>
      </item>
      <item>
        <title>Runecrating</title>
        <dc:creator><![CDATA[@destroynoobz destroynoobz]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/destroynoobz">@destroynoobz</a> wrote:</p>
          <blockquote>
              <p>okay so primadude released his runecrafting for iclarity after 30 mins of work i converted it to delta so here you go</p>
<p>THIS IS COMMENT THROUGH OUT THE TUTORIAL IN THE RUNECRAFTING.JAVA</p>
<p>step 1:<br>
make a new java file called RuneCrafting.java<br>
and stick this in there</p>
<p>[code]import java.io.IOException;<br>
import java.io.IOException;<br>
import java.util.ArrayList;<br>
import java.util.Random;</p>
<p>/**</p>
<ul>
<li>
<p>Class to manage the skill: RuneCrafting.</p>
</li>
<li>
<p><span class="mention">@author</span> Primadude<br>
*/<br>
public class RuneCrafting {<br>
public long runeCraftDelay;</p>
<pre><code> /**
  * Rune essence ID constant.
  */
 private static final int RUNE_ESS = 1436;

 /**
  * Pure essence ID constant.
  */
 private static final int PURE_ESS = 7936;

 /**
  * An array containing the rune item numbers.
  */
 private int[] runes = {
         556, 558, 555, 557, 554, 559, 564, 562, 561, 563, 560, 565
 };

 /**
  * An array containing the object IDs of the runecrafting altars.
  */
 public int[] altarID = {
         2478, 2479, 2480, 2481, 2482, 2483, 2484, 2487, 2486, 2485, 2488, 2489
 };

 private double[] exp ={
         5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5, 9, 9.5, 10, 11
 };

 /**
  * 2D Array containing the levels required to craft the specific rune.
  */
 private int[][] craftLevelReq = {
         {556, 1}, {558, 2}, {555, 5}, {557, 9}, {554, 14}, {559, 20},
         {564, 27}, {562, 35}, {561, 44}, {563, 54}, {560, 65}, {565, 77}
 };

 /**
  * 2D Array containing the levels that you can craft multiple runes.
  */
 private int[][] multipleRunes = {
         {11, 22, 33, 44, 55, 66, 77, 88, 99},
         {14, 28, 42, 56, 70, 84, 98},
         {14, 38, 57, 76, 95},
         {26, 52, 78},
         {35, 70},
         {46, 92},
         {59},
         {74},
         {91}
 };

 /**
  * Checks through all 28 item inventory slots for the specified item.
  */
 private boolean itemInInv(Client c, int itemID, int slot, boolean checkWholeInv) {
         if (checkWholeInv) {
                 for (int i = 0; i &lt; 28; i++) {
                         if (c.playerItems[i] == itemID + 1) {
                                 return true;
                         }
                 }
         } else {
                 if (c.playerItems[slot] == itemID + 1) {
                         return true;
                 }
         }
         return false;
 }

 /**
  * Replaces essence in the inventory with the specified rune.
  */
 private void replaceEssence(Client c, int essType, int runeID, int multiplier) {
         for (int i = 0; i &lt; 28; i++) {
                 if (itemInInv(c, essType, i, false)) {
                         c.deleteItem(essType, i, 1);
                         c.addItem(runeID, 1 * multiplier);
                 }
         }
 }

 /**
  * Crafts the specific rune.
  */
 public void craftRunes(final Client c, int altarID) {
         if (System.currentTimeMillis() - runeCraftDelay &lt; 1000) {
                 return;
         }
         int runeID = 0;

         for (int i = 0; i &lt; this.altarID.length; i++) {
                 if (altarID == this.altarID[i]) {
                         runeID = runes[i];
                 }
         }
         for (int i = 0; i &lt; craftLevelReq.length; i++) {
                 if (runeID == runes[i]) {
                         if (c.playerLevel[20] &gt; craftLevelReq[i][1]) {
                                 if (c.playerHasItem(RUNE_ESS) || c.playerHasItem(PURE_ESS)) {
                                         int multiplier = 0;

                                         int[] nonMultiples = {
                                                 561, 563, 560, 565
                                         };

                                         boolean isMultipleRune = true;

                                         for (int j = 0; j &lt; nonMultiples.length; j++) {
                                                 if (runeID == nonMultiples[j]) {
                                                         isMultipleRune = false;
                                                 }
                                         }
                                         if (isMultipleRune) {
                                                 for (int j = 0; j &lt; multipleRunes[i].length; j++) {
                                                         if (c.playerLevel[20] &gt; multipleRunes[i][j]) {
                                                                 multiplier = multipleRunes[i][j] + 2;
                                                         } else {
                                                                 multiplier = 1;
                                                         }
                                                 }
                                         }
                                         replaceEssence(c, itemInInv(c, RUNE_ESS, 0, true) ? RUNE_ESS : PURE_ESS, runeID, multiplier);
                                         runeCraftDelay = System.currentTimeMillis();
                                         c.startAnimation(791);
                                         c.addSkillXP((int) exp[i], 20);
                                         return;
                                 }
                                 c.sM("You need to have essence to craft runes!");
                                 return;
                         }
                         c.sM("You need a Runecrafting level of "+ craftLevelReq[i][1] +" to craft this rune.");
                 }
         }
 }
</code></pre>
</li>
</ul>
<p>}[/code]</p>
<p>step 2:<br>
declare this in client.java</p>
<p>[code]/**</p>
<ul>
<li>The RuneCrafting instance.<br>
*/<br>
private RuneCrafting RuneCrafting = new RuneCrafting();</li>
</ul>
<p>/**</p>
<ul>
<li>The RuneCrafting Singleton.<br>
*/<br>
public RuneCrafting getRuneCrafting() {<br>
return RuneCrafting;<br>
}[/code]</li>
</ul>
<p>step 3:<br>
in client java search for</p>
<pre><code class="lang-auto">int objectY = inStream.readUnsignedWordA();</code></pre>
<p>and right under it add this</p>
<p><code>	if (objectID == getRuneCrafting().altarID[0]) {
					getRuneCrafting().craftRunes(this, objectID);
			}
		}</code></p>
<p>step 4:<br>
Open server.java<br>
and add</p>
<pre><code class="lang-auto">public static RuneCrafting RuneCrafting = null;</code></pre>
<p>and</p>
<pre><code class="lang-auto">RuneCrafting = new RuneCrafting();</code></pre>
<p>save close compile</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/runecrating/355199/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/runecrating/355199/1</link>
        <pubDate>Mon, 16 Aug 2010 16:08:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-355199-1</guid>
        <source url="https://forum.moparisthebest.com/t/runecrating/355199.rss">Runecrating</source>
      </item>
  </channel>
</rss>
