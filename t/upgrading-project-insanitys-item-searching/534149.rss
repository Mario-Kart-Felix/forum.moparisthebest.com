<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Upgrading Project Insanity&#39;s item searching</title>
    <link>https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149</link>
    <description>[center][size=24pt][b][u][color=teal]Upgrading Project Insanity&#39;s item searching[/color][/u][/b][/size][/center]

[center][size=18pt][b][u][color=teal]Introduction[/color][/u][/b][/size][/center]
This tutorial will build off of knowledge gained in my previous tutorial, [url=http://www.moparisthebest.com/smf/index.php/topic,652205.0.html]Understanding and implementing a binary search algorithm[/url]. If you&#39;ve not yet read that tutorial, please head on over and read it - the knowledge will be useful and will help you get the most out of this tutorial.

This tutorial will not cover the [i]playerHasItem(itemID, amt, slot)[/i] method. I can&#39;t think of a good enough way to improve that, yet.

[hr]

[center][size=18pt][b][u][color=teal]Let&#39;s get started[/color][/u][/b][/size][/center]
Firstly, either copy the BinarySearch method in my first tutorial or write your own, but you&#39;ll need some kind of binary search method for this to work. The item searching methods are found in server.model.items.ItemAssistant.

Let&#39;s rewrite the method, it&#39;ll be a lot simpler than trying to write around it, and it&#39;s only a short method.
[code=Java]public boolean playerHasItem(int _itemID)
{
    int itemID = (_itemID + 1);
}[/code]
For some reason, Project Insanity requires us to search for items with their ID increased by one. Who knows why? I don&#39;t, but I&#39;d be grateful if anyone could shed light on the subject.
Anyway, we now need to clone the array of items so that we can sort it (binary search only works on sorted values, remember?) To do this, we can simply use the clone() method on an array.
[code=Java]public boolean playerHasItem(int _itemID)
{
    int itemID = (_itemID + 1);
    int[] sortedItems = (int[]) c.playerItems.clone();
}[/code]
And now we need to sort the new array.
[code=Java]public boolean playerHasItem(int _itemID)
{
    int itemID = (_itemID + 1);
    int[] sortedItems = (int[]) c.playerItems.clone();
    Arrays.sort(sortedItems);
}[/code]
Now that the array is sorted, all we need to do is call the binary search method and return a true/false value. The below example is for using a binary search algorithm that return the item&#39;s position in the list, but you could very easily modify the algorithm itself to just return true or false. I&#39;ll leave that to you.
[code=Java]public boolean playerHasItem(int _itemID)
{
    int itemID = (_itemID + 1);
    int[] sortedItems = (int[]) c.playerItems.clone();
    Arrays.sort(sortedItems);
    int response = BinarySearch.binarySearch(sortedItems, itemID);
    if (response &gt; -1)
        return true;
    return false;
}[/code]

[hr]

[center][size=18pt][b][u][color=teal]Thank you[/color][/u][/b][/size][/center]
Thank you for reading this tutorial, hopefully you&#39;ve learned some things from it and have seen a practical use for binary search, as well as a way to improve your server. There are many other places you could use a binary search, feel free to post them if you find them so that others can benefit!</description>
    
    <lastBuildDate>Fri, 25 Oct 2013 17:20:28 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Upgrading Project Insanity&#39;s item searching</title>
        <dc:creator><![CDATA[@Ambokile Ambokile]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ambokile">@Ambokile</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="8" data-topic="534149">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/wintercanon/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Wintercanon:</div>
<blockquote>
<p>Why do you use a prepended underscore for parameters? It’s not common practice for Java. I only bring it up because this is a tutorial.</p>
</blockquote>
</aside>
<p>I’m not sure where I picked it up, I just use it to clarify that it is a parameter.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149/10</link>
        <pubDate>Fri, 25 Oct 2013 17:20:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534149-10</guid>
        <source url="https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149.rss">Upgrading Project Insanity&#39;s item searching</source>
      </item>
      <item>
        <title>Upgrading Project Insanity&#39;s item searching</title>
        <dc:creator><![CDATA[@Loveandpower Loveandpower]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/loveandpower">@Loveandpower</a> wrote:</p>
          <blockquote>
              <p>[quote=“Clawz fury, post:6, topic:534149”][quote author=Davidi2 link=topic=652946.msg4378196#msg4378196 date=1382680866]<br>
You do know this is about 10x less efficient than just using a for loop, right? Having to sort the array every time completely negates any possible positive influence the binary search* would give you, especially on an array this small.<br>
[/quote]<br>
Couldn’t you just sort the array every time equipment is changed? or would that still be inefficient?[/quote]still going to be inefficient I would iamgine.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149/9</link>
        <pubDate>Fri, 25 Oct 2013 13:34:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534149-9</guid>
        <source url="https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149.rss">Upgrading Project Insanity&#39;s item searching</source>
      </item>
      <item>
        <title>Upgrading Project Insanity&#39;s item searching</title>
        <dc:creator><![CDATA[@Wintercanon Wintercanon]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wintercanon">@Wintercanon</a> wrote:</p>
          <blockquote>
              <p>Why do you use a prepended underscore for parameters? It’s not common practice for Java. I only bring it up because this is a tutorial.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149/8</link>
        <pubDate>Fri, 25 Oct 2013 12:39:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534149-8</guid>
        <source url="https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149.rss">Upgrading Project Insanity&#39;s item searching</source>
      </item>
      <item>
        <title>Upgrading Project Insanity&#39;s item searching</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>[quote=“Clawz fury, post:6, topic:534149”][quote author=Davidi2 link=topic=652946.msg4378196#msg4378196 date=1382680866]<br>
You do know this is about 10x less efficient than just using a for loop, right? Having to sort the array every time completely negates any possible positive influence the binary search* would give you, especially on an array this small.<br>
[/quote]<br>
Couldn’t you just sort the array every time equipment is changed? or would that still be inefficient?[/quote]You’d have to have a separate array pair for equipment/items and their amounts. One that stores them sorted (which as you said you could limit to only sort when updated), and the other that stores them in the order they appear in your inventory/equipment slots. If this was more object oriented, you could technically have an Item class that stored the slot id, item id, and amount, and then have one Item[] that is sorted.</p>
<p>Frankly it’s just not worth it for a 28 length array to bother.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149/7</link>
        <pubDate>Fri, 25 Oct 2013 11:51:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534149-7</guid>
        <source url="https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149.rss">Upgrading Project Insanity&#39;s item searching</source>
      </item>
      <item>
        <title>Upgrading Project Insanity&#39;s item searching</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="5" data-topic="534149">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/davidi2/40/2579_1.png" class="avatar"> Davidi2:</div>
<blockquote>
<p>You do know this is about 10x less efficient than just using a for loop, right? Having to sort the array every time completely negates any possible positive influence the binary search* would give you, especially on an array this small.</p>
</blockquote>
</aside>
<p>Couldn’t you just sort the array every time equipment is changed? or would that still be inefficient?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149/6</link>
        <pubDate>Fri, 25 Oct 2013 11:24:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534149-6</guid>
        <source url="https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149.rss">Upgrading Project Insanity&#39;s item searching</source>
      </item>
      <item>
        <title>Upgrading Project Insanity&#39;s item searching</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>You do know this is about 10x less efficient than just using a for loop, right? Having to sort the array every time completely negates any possible positive influence the binary search* would give you, especially on an array this small.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149/5</link>
        <pubDate>Fri, 25 Oct 2013 06:01:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534149-5</guid>
        <source url="https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149.rss">Upgrading Project Insanity&#39;s item searching</source>
      </item>
      <item>
        <title>Upgrading Project Insanity&#39;s item searching</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>nice tutorial man <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149/4</link>
        <pubDate>Fri, 25 Oct 2013 04:08:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534149-4</guid>
        <source url="https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149.rss">Upgrading Project Insanity&#39;s item searching</source>
      </item>
      <item>
        <title>Upgrading Project Insanity&#39;s item searching</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <p>IIRC reason for + 1 is because within the array index 0 is used, which gives the length a weird offset when searching.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149/3</link>
        <pubDate>Fri, 25 Oct 2013 03:27:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534149-3</guid>
        <source url="https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149.rss">Upgrading Project Insanity&#39;s item searching</source>
      </item>
      <item>
        <title>Upgrading Project Insanity&#39;s item searching</title>
        <dc:creator><![CDATA[@arham_4 arham 4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/arham_4">@arham_4</a> wrote:</p>
          <blockquote>
              <p>So now you wanna hop on over to the Server Tutorials section [size=1pt]Good job though bby &lt;3[/size] NOT GONNA HAPPEN!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149/2</link>
        <pubDate>Tue, 15 Oct 2013 15:20:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534149-2</guid>
        <source url="https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149.rss">Upgrading Project Insanity&#39;s item searching</source>
      </item>
      <item>
        <title>Upgrading Project Insanity&#39;s item searching</title>
        <dc:creator><![CDATA[@Ambokile Ambokile]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ambokile">@Ambokile</a> wrote:</p>
          <blockquote>
              <p>[center][size=24pt]<span class="bbcode-b"><span class="bbcode-u">[color=teal]Upgrading Project Insanity’s item searching[/color]</span></span>[/size][/center]</p>
<p>[center][size=18pt]<span class="bbcode-b"><span class="bbcode-u">[color=teal]Introduction[/color]</span></span>[/size][/center]<br>
This tutorial will build off of knowledge gained in my previous tutorial, <a href="http://www.moparisthebest.com/smf/index.php/topic,652205.0.html" data-bbcode="true" rel="nofollow noopener">Understanding and implementing a binary search algorithm</a>. If you’ve not yet read that tutorial, please head on over and read it - the knowledge will be useful and will help you get the most out of this tutorial.</p>
<p>This tutorial will not cover the <span class="bbcode-i">playerHasItem(itemID, amt, slot)</span> method. I can’t think of a good enough way to improve that, yet.</p>
<p>[hr]</p>
<p>[center][size=18pt]<span class="bbcode-b"><span class="bbcode-u">[color=teal]Let’s get started[/color]</span></span>[/size][/center]<br>
Firstly, either copy the BinarySearch method in my first tutorial or write your own, but you’ll need some kind of binary search method for this to work. The item searching methods are found in server.model.items.ItemAssistant.</p>
<p>Let’s rewrite the method, it’ll be a lot simpler than trying to write around it, and it’s only a short method.</p>
<p><code>public boolean playerHasItem(int _itemID)
{
    int itemID = (_itemID + 1);
}</code><br>
For some reason, Project Insanity requires us to search for items with their ID increased by one. Who knows why? I don’t, but I’d be grateful if anyone could shed light on the subject.<br>
Anyway, we now need to clone the array of items so that we can sort it (binary search only works on sorted values, remember?) To do this, we can simply use the clone() method on an array.</p>
<p><code>public boolean playerHasItem(int _itemID)
{
    int itemID = (_itemID + 1);
    int[] sortedItems = (int[]) c.playerItems.clone();
}</code><br>
And now we need to sort the new array.</p>
<p><code>public boolean playerHasItem(int _itemID)
{
    int itemID = (_itemID + 1);
    int[] sortedItems = (int[]) c.playerItems.clone();
    Arrays.sort(sortedItems);
}</code><br>
Now that the array is sorted, all we need to do is call the binary search method and return a true/false value. The below example is for using a binary search algorithm that return the item’s position in the list, but you could very easily modify the algorithm itself to just return true or false. I’ll leave that to you.</p>
<p><code>public boolean playerHasItem(int _itemID)
{
    int itemID = (_itemID + 1);
    int[] sortedItems = (int[]) c.playerItems.clone();
    Arrays.sort(sortedItems);
    int response = BinarySearch.binarySearch(sortedItems, itemID);
    if (response &gt; -1)
        return true;
    return false;
}</code></p>
<p>[hr]</p>
<p>[center][size=18pt]<span class="bbcode-b"><span class="bbcode-u">[color=teal]Thank you[/color]</span></span>[/size][/center]<br>
Thank you for reading this tutorial, hopefully you’ve learned some things from it and have seen a practical use for binary search, as well as a way to improve your server. There are many other places you could use a binary search, feel free to post them if you find them so that others can benefit!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149/1</link>
        <pubDate>Tue, 15 Oct 2013 15:14:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534149-1</guid>
        <source url="https://forum.moparisthebest.com/t/upgrading-project-insanitys-item-searching/534149.rss">Upgrading Project Insanity&#39;s item searching</source>
      </item>
  </channel>
</rss>
