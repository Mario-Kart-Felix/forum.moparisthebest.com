<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Help with java class assignment</title>
    <link>https://forum.moparisthebest.com/t/help-with-java-class-assignment/443344</link>
    <description>In this exercise you will implement a shopping cart using the ArrayList class. The file Item.java contains the definition of a class named Item that models an item one would purchase. An item has a name, price, and quantity (the quantity purchased). The file Shop.java is an incomplete program that models shopping.

1. Complete Shop.java as follows:
a. Declare and instantiate a variable cart to be an empty ArrayList.
b. Fill in the statements in the loop to add an item to the cart and to print the cart contents (using the default toString in the ArrayList class). Comments in the code indicate where these statements go.
c. Compile your program and run it.

2. You should have observed two problems with using the default printing for the cart object: the output doesn’t look very good and the total price of the goods in the cart after each item is added is not computed or printed. Modify the program to correct these problems by replacing the print statement with a loop that does the following:
a. gets each item from the cart and prints the item
b. computes the total price of the items in the cart (you need to use the getPrice and getQuantity methods of the Item class). The total price should be printed after the loop.

3. Compile and run your program.



[code]// ****************************************…
// Item.java
//
// Represents an item in a shopping cart.
// ****************************************…

import java.text.NumberFormat;

public class Item
{
private String name;
private double price;
private int quantity;

// ----------------------------------------…
// Create a new item with the given attributes.
// ----------------------------------------…
public Item (String itemName, double itemPrice, int numPurchased)
{
name = itemName;
price = itemPrice;
quantity = numPurchased;
}

// ----------------------------------------…
// Return a string with the information about the item
// ----------------------------------------…
public String toString ()
{
NumberFormat fmt = NumberFormat.getCurrencyInstance();

return (name + &quot;\t&quot; + fmt.format(price) + &quot;\t&quot; + quantity + &quot;\t&quot;
+ fmt.format(price*quantity));
}

// ----------------------------------------…
// Returns the unit price of the item
// ----------------------------------------…
public double getPrice()
{
return price;
}

// ----------------------------------------…
// Returns the name of the item
// ----------------------------------------…
public String getName()
{
return name;
}

// ----------------------------------------…
// Returns the quantity of the item
// ----------------------------------------…
public int getQuantity()
{
return quantity;
}
}[/code]

[code]// ****************************************…
// Shop.java
//
// Uses the Item class to create items and add them to a shopping
// cart stored in an ArrayList.
// ****************************************…
import java.util.ArrayList;
import java.util.Scanner;
public class Shop
{
public static void main (String[] args)
{
//*** declare and instantiate a variable cart to be an empty ArrayList


Item item;
String itemName;
double itemPrice;
int quantity;
double totalPrice = 0.0;
Scanner scan = new Scanner(System.in);
String keepShopping = &quot;y&quot;;
do
{
System.out.print (&quot;Enter the name of the item: &quot;);
itemName = scan.nextLine();
System.out.print (&quot;Enter the unit price: &quot;);
itemPrice = scan.nextDouble();
System.out.print (&quot;Enter the quantity: &quot;);
quantity = scan.nextInt();
// *** create a new item and add it to the cart


// *** print the contents of the cart object using println



System.out.print (&quot;Continue shopping (y/n)? &quot;);
scan.nextLine();
keepShopping = scan.nextLine();
}while (keepShopping.equals(&quot;y&quot;));
}
}[/code]</description>
    
    <lastBuildDate>Mon, 28 May 2012 18:19:38 +0000</lastBuildDate>
    <category>General Discussion</category>
    <atom:link href="https://forum.moparisthebest.com/t/help-with-java-class-assignment/443344.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Help with java class assignment</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>So what exactly do you want help with?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/help-with-java-class-assignment/443344/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/help-with-java-class-assignment/443344/2</link>
        <pubDate>Mon, 28 May 2012 18:19:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-443344-2</guid>
        <source url="https://forum.moparisthebest.com/t/help-with-java-class-assignment/443344.rss">Help with java class assignment</source>
      </item>
      <item>
        <title>Help with java class assignment</title>
        <dc:creator><![CDATA[@legendzpk legendzpk]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/legendzpk">@legendzpk</a> wrote:</p>
          <blockquote>
              <p>In this exercise you will implement a shopping cart using the ArrayList class. The file Item.java contains the definition of a class named Item that models an item one would purchase. An item has a name, price, and quantity (the quantity purchased). The file Shop.java is an incomplete program that models shopping.</p>
<ol>
<li>
<p>Complete Shop.java as follows:<br>
a. Declare and instantiate a variable cart to be an empty ArrayList.<br>
b. Fill in the statements in the loop to add an item to the cart and to print the cart contents (using the default toString in the ArrayList class). Comments in the code indicate where these statements go.<br>
c. Compile your program and run it.</p>
</li>
<li>
<p>You should have observed two problems with using the default printing for the cart object: the output doesn’t look very good and the total price of the goods in the cart after each item is added is not computed or printed. Modify the program to correct these problems by replacing the print statement with a loop that does the following:<br>
a. gets each item from the cart and prints the item<br>
b. computes the total price of the items in the cart (you need to use the getPrice and getQuantity methods of the Item class). The total price should be printed after the loop.</p>
</li>
<li>
<p>Compile and run your program.</p>
</li>
</ol>
<p>[code]// ****************************************…<br>
// Item.java<br>
//<br>
// Represents an item in a shopping cart.<br>
// ****************************************…</p>
<p>import java.text.NumberFormat;</p>
<p>public class Item<br>
{<br>
private String name;<br>
private double price;<br>
private int quantity;</p>
<p>// ----------------------------------------…<br>
// Create a new item with the given attributes.<br>
// ----------------------------------------…<br>
public Item (String itemName, double itemPrice, int numPurchased)<br>
{<br>
name = itemName;<br>
price = itemPrice;<br>
quantity = numPurchased;<br>
}</p>
<p>// ----------------------------------------…<br>
// Return a string with the information about the item<br>
// ----------------------------------------…<br>
public String toString ()<br>
{<br>
NumberFormat fmt = NumberFormat.getCurrencyInstance();</p>
<p>return (name + “\t” + fmt.format(price) + “\t” + quantity + “\t”</p>
<ul>
<li>fmt.format(price*quantity));<br>
}</li>
</ul>
<p>// ----------------------------------------…<br>
// Returns the unit price of the item<br>
// ----------------------------------------…<br>
public double getPrice()<br>
{<br>
return price;<br>
}</p>
<p>// ----------------------------------------…<br>
// Returns the name of the item<br>
// ----------------------------------------…<br>
public String getName()<br>
{<br>
return name;<br>
}</p>
<p>// ----------------------------------------…<br>
// Returns the quantity of the item<br>
// ----------------------------------------…<br>
public int getQuantity()<br>
{<br>
return quantity;<br>
}<br>
}[/code]</p>
<p>[code]// ****************************************…<br>
// Shop.java<br>
//<br>
// Uses the Item class to create items and add them to a shopping<br>
// cart stored in an ArrayList.<br>
// *************************************<em><strong>…<br>
import java.util.ArrayList;<br>
import java.util.Scanner;<br>
public class Shop<br>
{<br>
public static void main (String[] args)<br>
{<br>
//</strong></em> declare and instantiate a variable cart to be an empty ArrayList</p>
<p>Item item;<br>
String itemName;<br>
double itemPrice;<br>
int quantity;<br>
double totalPrice = 0.0;<br>
Scanner scan = new Scanner(System.in);<br>
String keepShopping = “y”;<br>
do<br>
{<br>
System.out.print ("Enter the name of the item: ");<br>
itemName = scan.nextLine();<br>
System.out.print ("Enter the unit price: ");<br>
itemPrice = scan.nextDouble();<br>
System.out.print ("Enter the quantity: ");<br>
quantity = scan.nextInt();<br>
// *** create a new item and add it to the cart</p>
<p>// *** print the contents of the cart object using println</p>
<p>System.out.print ("Continue shopping (y/n)? ");<br>
scan.nextLine();<br>
keepShopping = scan.nextLine();<br>
}while (keepShopping.equals(“y”));<br>
}<br>
}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/help-with-java-class-assignment/443344/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/help-with-java-class-assignment/443344/1</link>
        <pubDate>Mon, 28 May 2012 18:17:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-443344-1</guid>
        <source url="https://forum.moparisthebest.com/t/help-with-java-class-assignment/443344.rss">Help with java class assignment</source>
      </item>
  </channel>
</rss>
