<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Too many compiling errors o.0</title>
    <link>https://forum.moparisthebest.com/t/too-many-compiling-errors-o-0/186056</link>
    <description>i made some minor changes to my server and went to compile and all that junk popped up. i have no clue where to start on fixing it o.0

[table][tr][td][code]client.java:10709: illegal start of type
                }else if (command.equalsIgnoreCase(&quot;mypk&quot;)) {
                                                   ^
client.java:10711: illegal start of type
                }else if (command.equalsIgnoreCase(&quot;mystats&quot;)) {
                 ^
client.java:10711: &lt;identifier&gt; expected
                }else if (command.equalsIgnoreCase(&quot;mystats&quot;)) {
                                                  ^
client.java:10711: illegal start of type
                }else if (command.equalsIgnoreCase(&quot;mystats&quot;)) {
                                                   ^
client.java:10720: illegal start of type
                } else if (command.equalsIgnoreCase(&quot;players&quot;)) {
                  ^
client.java:10720: &lt;identifier&gt; expected
                } else if (command.equalsIgnoreCase(&quot;players&quot;)) {
                                                   ^
client.java:10720: illegal start of type
                } else if (command.equalsIgnoreCase(&quot;players&quot;)) {
                                                    ^
client.java:10722: illegal start of type
                } else if (command.startsWith(&quot;mypos&quot;)) {
                  ^
client.java:10722: &lt;identifier&gt; expected
                } else if (command.startsWith(&quot;mypos&quot;)) {
                                             ^
client.java:10722: illegal start of type
                } else if (command.startsWith(&quot;mypos&quot;)) {
                                              ^
client.java:10725: illegal start of type
                } else if (command.startsWith(&quot;yell&quot;) &amp;&amp; command.length() &gt; 5) {

                  ^
client.java:10725: &lt;identifier&gt; expected
                } else if (command.startsWith(&quot;yell&quot;) &amp;&amp; command.length() &gt; 5) {

                                             ^
client.java:10725: illegal start of type
                } else if (command.startsWith(&quot;yell&quot;) &amp;&amp; command.length() &gt; 5) {

                                              ^
client.java:10733: class, interface, or enum expected
        public void fromBank(int itemID, int fromSlot, int amount) {
               ^
client.java:10741: class, interface, or enum expected
                                                                resetBank();
                                                                ^
client.java:10742: class, interface, or enum expected
                                                                resetItems(5064)
;
                                                                ^
client.java:10743: class, interface, or enum expected
                                                        }
                                                        ^
client.java:10747: class, interface, or enum expected
                                                                bankItemsN[fromS
lot] = 0;
                                                                ^
client.java:10748: class, interface, or enum expected
                                                                resetBank();
                                                                ^
client.java:10749: class, interface, or enum expected
                                                                resetItems(5064)
;
                                                                ^
client.java:10750: class, interface, or enum expected
                                                        }
                                                        ^
client.java:10759: class, interface, or enum expected

        amount--;

        ^
client.java:10760: class, interface, or enum expected

}

^
client.java:10763: class, interface, or enum expected

}

^
client.java:10766: class, interface, or enum expected
                                                }
                                                ^
client.java:10768: class, interface, or enum expected
                                                resetItems(5064);
                                                ^
client.java:10769: class, interface, or enum expected
                                        }
                                        ^
client.java:10781: class, interface, or enum expected

resetBank();

^
client.java:10782: class, interface, or enum expected

resetItems(5064);

^
client.java:10783: class, interface, or enum expected
                                                        }
                                                        ^
client.java:10790: class, interface, or enum expected

bankItemsN[fromSlot]=0;

^
client.java:10791: class, interface, or enum expected

resetBank();

^
client.java:10792: class, interface, or enum expected

resetItems(5064);

^
client.java:10793: class, interface, or enum expected
                                                        }
                                                        ^
client.java:10799: class, interface, or enum expected
                                        if (Item.itemStackable[bankItems[fromSlo
t]+1])
                                        ^
client.java:10806: class, interface, or enum expected

resetBank();

^
client.java:10807: class, interface, or enum expected

resetItems(5064);

^
client.java:10808: class, interface, or enum expected
                                                        }
                                                        ^
client.java:10815: class, interface, or enum expected

bankItemsN[fromSlot]=0;

^
client.java:10816: class, interface, or enum expected

resetBank();

^
client.java:10817: class, interface, or enum expected

resetItems(5064);

^
client.java:10818: class, interface, or enum expected
                                                        }
                                                        ^
client.java:10830: class, interface, or enum expected

        amount--;

        ^
client.java:10831: class, interface, or enum expected

}

^
client.java:10834: class, interface, or enum expected

}

^
client.java:10837: class, interface, or enum expected
                                                }
                                                ^
client.java:10839: class, interface, or enum expected
                                                resetItems(5064);
                                                ^
client.java:10840: class, interface, or enum expected
                                        }
                                        ^
client.java:10847: class, interface, or enum expected
        public int getXPForLevel(int level) {
               ^
client.java:10849: class, interface, or enum expected
                int output = 0;
                ^
client.java:10851: class, interface, or enum expected
                for (int lvl = 1; lvl &lt;= level; lvl++) {
                ^
client.java:10851: class, interface, or enum expected
                for (int lvl = 1; lvl &lt;= level; lvl++) {
                                  ^
client.java:10851: class, interface, or enum expected
                for (int lvl = 1; lvl &lt;= level; lvl++) {
                                                ^
client.java:10853: class, interface, or enum expected
                        if (lvl &gt;= level) {
                        ^
client.java:10855: class, interface, or enum expected
                        }
                        ^
client.java:10857: class, interface, or enum expected
                }
                ^
client.java:10859: class, interface, or enum expected
        }
        ^
client.java:10861: class, interface, or enum expected
        public int getLevelForXP(int exp) {
               ^
client.java:10863: class, interface, or enum expected
                int output = 0;
                ^
client.java:10865: class, interface, or enum expected
                for (int lvl = 1; lvl &lt;= 100; lvl++) {
                ^
client.java:10865: class, interface, or enum expected
                for (int lvl = 1; lvl &lt;= 100; lvl++) {
                                  ^
client.java:10865: class, interface, or enum expected
                for (int lvl = 1; lvl &lt;= 100; lvl++) {
                                              ^
client.java:10867: class, interface, or enum expected
                        output = (int)Math.floor(points / 4);
                        ^
client.java:10868: class, interface, or enum expected
                        if (output &gt;= exp) {
                        ^
client.java:10870: class, interface, or enum expected
                        }
                        ^
client.java:10873: class, interface, or enum expected
        }
        ^
client.java:10875: class, interface, or enum expected
public boolean addSkillXP(int amount, int skill){
       ^
client.java:10877: class, interface, or enum expected
      int Defence = getLevelForXP(playerXP[1]);
      ^
client.java:10878: class, interface, or enum expected
      int Strength = getLevelForXP(playerXP[2]);
      ^
client.java:10879: class, interface, or enum expected
      int Hitpoints = getLevelForXP(playerXP[3]);
      ^
client.java:10880: class, interface, or enum expected
      int Ranging = getLevelForXP(playerXP[4]);
      ^
client.java:10881: class, interface, or enum expected
      int Prayer = getLevelForXP(playerXP[5]);
      ^
client.java:10882: class, interface, or enum expected
      int Magic = getLevelForXP(playerXP[6]);
      ^
client.java:10883: class, interface, or enum expected
      int Cooking = getLevelForXP(playerXP[7]);
      ^
client.java:10884: class, interface, or enum expected
      int Woodcutting = getLevelForXP(playerXP[8]);
      ^
client.java:10885: class, interface, or enum expected
      int Fletching = getLevelForXP(playerXP[9]);
      ^
client.java:10886: class, interface, or enum expected
      int Fishing = getLevelForXP(playerXP[10]);
      ^
client.java:10887: class, interface, or enum expected
      int Firemaking = getLevelForXP(playerXP[11]);
      ^
client.java:10888: class, interface, or enum expected
      int Crafting = getLevelForXP(playerXP[12]);
      ^
client.java:10889: class, interface, or enum expected
      int Smithing = getLevelForXP(playerXP[13]);
      ^
client.java:10890: class, interface, or enum expected
      int Mining = getLevelForXP(playerXP[14]);
      ^
client.java:10891: class, interface, or enum expected
      int Herblore = getLevelForXP(playerXP[15]);
      ^
client.java:10892: class, interface, or enum expected
      int Agility = getLevelForXP(playerXP[16]);
      ^
client.java:10893: class, interface, or enum expected
      int Thieving = getLevelForXP(playerXP[17]);
      ^
client.java:10894: class, interface, or enum expected
      int Slayer = getLevelForXP(playerXP[18]);
      ^
client.java:10895: class, interface, or enum expected
      int Farming = getLevelForXP(playerXP[19]);
      ^
100 errors
Files Compiled Successfully!
Press any key to continue . . .[/code][/table]

im lost completely on what went wrong -.- anyone have any idea (even though i doubt anyone would read it all XD)</description>
    
    <lastBuildDate>Mon, 03 Mar 2008 11:36:03 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/too-many-compiling-errors-o-0/186056.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Too many compiling errors o.0</title>
        <dc:creator><![CDATA[@1_that_sk1ll 1 that sk1ll]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/1_that_sk1ll">@1_that_sk1ll</a> wrote:</p>
          <blockquote>
              <p>check your brackets {} make sure they are in the right spot and not one space over</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/too-many-compiling-errors-o-0/186056/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/too-many-compiling-errors-o-0/186056/2</link>
        <pubDate>Mon, 03 Mar 2008 11:36:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-186056-2</guid>
        <source url="https://forum.moparisthebest.com/t/too-many-compiling-errors-o-0/186056.rss">Too many compiling errors o.0</source>
      </item>
      <item>
        <title>Too many compiling errors o.0</title>
        <dc:creator><![CDATA[@moneymike261 moneymike261]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moneymike261">@moneymike261</a> wrote:</p>
          <blockquote>
              <p>i made some minor changes to my server and went to compile and all that junk popped up. i have no clue where to start on fixing it o.0</p>
<p>[table][tr][td][code]client.java:10709: illegal start of type<br>
}else if (command.equalsIgnoreCase(“mypk”)) {<br>
^<br>
client.java:10711: illegal start of type<br>
}else if (command.equalsIgnoreCase(“mystats”)) {<br>
^<br>
client.java:10711:  expected<br>
}else if (command.equalsIgnoreCase(“mystats”)) {<br>
^<br>
client.java:10711: illegal start of type<br>
}else if (command.equalsIgnoreCase(“mystats”)) {<br>
^<br>
client.java:10720: illegal start of type<br>
} else if (command.equalsIgnoreCase(“players”)) {<br>
^<br>
client.java:10720:  expected<br>
} else if (command.equalsIgnoreCase(“players”)) {<br>
^<br>
client.java:10720: illegal start of type<br>
} else if (command.equalsIgnoreCase(“players”)) {<br>
^<br>
client.java:10722: illegal start of type<br>
} else if (command.startsWith(“mypos”)) {<br>
^<br>
client.java:10722:  expected<br>
} else if (command.startsWith(“mypos”)) {<br>
^<br>
client.java:10722: illegal start of type<br>
} else if (command.startsWith(“mypos”)) {<br>
^<br>
client.java:10725: illegal start of type<br>
} else if (command.startsWith(“yell”) &amp;&amp; command.length() &gt; 5) {</p>
<pre><code>              ^
</code></pre>
<p>client.java:10725:  expected<br>
} else if (command.startsWith(“yell”) &amp;&amp; command.length() &gt; 5) {</p>
<pre><code>                                         ^
</code></pre>
<p>client.java:10725: illegal start of type<br>
} else if (command.startsWith(“yell”) &amp;&amp; command.length() &gt; 5) {</p>
<pre><code>                                          ^
</code></pre>
<p>client.java:10733: class, interface, or enum expected<br>
public void fromBank(int itemID, int fromSlot, int amount) {<br>
^<br>
client.java:10741: class, interface, or enum expected<br>
resetBank();<br>
^<br>
client.java:10742: class, interface, or enum expected<br>
resetItems(5064)<br>
;<br>
^<br>
client.java:10743: class, interface, or enum expected<br>
}<br>
^<br>
client.java:10747: class, interface, or enum expected<br>
bankItemsN[fromS<br>
lot] = 0;<br>
^<br>
client.java:10748: class, interface, or enum expected<br>
resetBank();<br>
^<br>
client.java:10749: class, interface, or enum expected<br>
resetItems(5064)<br>
;<br>
^<br>
client.java:10750: class, interface, or enum expected<br>
}<br>
^<br>
client.java:10759: class, interface, or enum expected</p>
<pre><code>    amount--;

    ^
</code></pre>
<p>client.java:10760: class, interface, or enum expected</p>
<p>}</p>
<p>^<br>
client.java:10763: class, interface, or enum expected</p>
<p>}</p>
<p>^<br>
client.java:10766: class, interface, or enum expected<br>
}<br>
^<br>
client.java:10768: class, interface, or enum expected<br>
resetItems(5064);<br>
^<br>
client.java:10769: class, interface, or enum expected<br>
}<br>
^<br>
client.java:10781: class, interface, or enum expected</p>
<p>resetBank();</p>
<p>^<br>
client.java:10782: class, interface, or enum expected</p>
<p>resetItems(5064);</p>
<p>^<br>
client.java:10783: class, interface, or enum expected<br>
}<br>
^<br>
client.java:10790: class, interface, or enum expected</p>
<p>bankItemsN[fromSlot]=0;</p>
<p>^<br>
client.java:10791: class, interface, or enum expected</p>
<p>resetBank();</p>
<p>^<br>
client.java:10792: class, interface, or enum expected</p>
<p>resetItems(5064);</p>
<p>^<br>
client.java:10793: class, interface, or enum expected<br>
}<br>
^<br>
client.java:10799: class, interface, or enum expected<br>
if (Item.itemStackable[bankItems[fromSlo<br>
t]+1])<br>
^<br>
client.java:10806: class, interface, or enum expected</p>
<p>resetBank();</p>
<p>^<br>
client.java:10807: class, interface, or enum expected</p>
<p>resetItems(5064);</p>
<p>^<br>
client.java:10808: class, interface, or enum expected<br>
}<br>
^<br>
client.java:10815: class, interface, or enum expected</p>
<p>bankItemsN[fromSlot]=0;</p>
<p>^<br>
client.java:10816: class, interface, or enum expected</p>
<p>resetBank();</p>
<p>^<br>
client.java:10817: class, interface, or enum expected</p>
<p>resetItems(5064);</p>
<p>^<br>
client.java:10818: class, interface, or enum expected<br>
}<br>
^<br>
client.java:10830: class, interface, or enum expected</p>
<pre><code>    amount--;

    ^
</code></pre>
<p>client.java:10831: class, interface, or enum expected</p>
<p>}</p>
<p>^<br>
client.java:10834: class, interface, or enum expected</p>
<p>}</p>
<p>^<br>
client.java:10837: class, interface, or enum expected<br>
}<br>
^<br>
client.java:10839: class, interface, or enum expected<br>
resetItems(5064);<br>
^<br>
client.java:10840: class, interface, or enum expected<br>
}<br>
^<br>
client.java:10847: class, interface, or enum expected<br>
public int getXPForLevel(int level) {<br>
^<br>
client.java:10849: class, interface, or enum expected<br>
int output = 0;<br>
^<br>
client.java:10851: class, interface, or enum expected<br>
for (int lvl = 1; lvl &lt;= level; lvl++) {<br>
^<br>
client.java:10851: class, interface, or enum expected<br>
for (int lvl = 1; lvl &lt;= level; lvl++) {<br>
^<br>
client.java:10851: class, interface, or enum expected<br>
for (int lvl = 1; lvl &lt;= level; lvl++) {<br>
^<br>
client.java:10853: class, interface, or enum expected<br>
if (lvl &gt;= level) {<br>
^<br>
client.java:10855: class, interface, or enum expected<br>
}<br>
^<br>
client.java:10857: class, interface, or enum expected<br>
}<br>
^<br>
client.java:10859: class, interface, or enum expected<br>
}<br>
^<br>
client.java:10861: class, interface, or enum expected<br>
public int getLevelForXP(int exp) {<br>
^<br>
client.java:10863: class, interface, or enum expected<br>
int output = 0;<br>
^<br>
client.java:10865: class, interface, or enum expected<br>
for (int lvl = 1; lvl &lt;= 100; lvl++) {<br>
^<br>
client.java:10865: class, interface, or enum expected<br>
for (int lvl = 1; lvl &lt;= 100; lvl++) {<br>
^<br>
client.java:10865: class, interface, or enum expected<br>
for (int lvl = 1; lvl &lt;= 100; lvl++) {<br>
^<br>
client.java:10867: class, interface, or enum expected<br>
output = (int)Math.floor(points / 4);<br>
^<br>
client.java:10868: class, interface, or enum expected<br>
if (output &gt;= exp) {<br>
^<br>
client.java:10870: class, interface, or enum expected<br>
}<br>
^<br>
client.java:10873: class, interface, or enum expected<br>
}<br>
^<br>
client.java:10875: class, interface, or enum expected<br>
public boolean addSkillXP(int amount, int skill){<br>
^<br>
client.java:10877: class, interface, or enum expected<br>
int Defence = getLevelForXP(playerXP[1]);<br>
^<br>
client.java:10878: class, interface, or enum expected<br>
int Strength = getLevelForXP(playerXP[2]);<br>
^<br>
client.java:10879: class, interface, or enum expected<br>
int Hitpoints = getLevelForXP(playerXP[3]);<br>
^<br>
client.java:10880: class, interface, or enum expected<br>
int Ranging = getLevelForXP(playerXP[4]);<br>
^<br>
client.java:10881: class, interface, or enum expected<br>
int Prayer = getLevelForXP(playerXP[5]);<br>
^<br>
client.java:10882: class, interface, or enum expected<br>
int Magic = getLevelForXP(playerXP[6]);<br>
^<br>
client.java:10883: class, interface, or enum expected<br>
int Cooking = getLevelForXP(playerXP[7]);<br>
^<br>
client.java:10884: class, interface, or enum expected<br>
int Woodcutting = getLevelForXP(playerXP[8]);<br>
^<br>
client.java:10885: class, interface, or enum expected<br>
int Fletching = getLevelForXP(playerXP[9]);<br>
^<br>
client.java:10886: class, interface, or enum expected<br>
int Fishing = getLevelForXP(playerXP[10]);<br>
^<br>
client.java:10887: class, interface, or enum expected<br>
int Firemaking = getLevelForXP(playerXP[11]);<br>
^<br>
client.java:10888: class, interface, or enum expected<br>
int Crafting = getLevelForXP(playerXP[12]);<br>
^<br>
client.java:10889: class, interface, or enum expected<br>
int Smithing = getLevelForXP(playerXP[13]);<br>
^<br>
client.java:10890: class, interface, or enum expected<br>
int Mining = getLevelForXP(playerXP[14]);<br>
^<br>
client.java:10891: class, interface, or enum expected<br>
int Herblore = getLevelForXP(playerXP[15]);<br>
^<br>
client.java:10892: class, interface, or enum expected<br>
int Agility = getLevelForXP(playerXP[16]);<br>
^<br>
client.java:10893: class, interface, or enum expected<br>
int Thieving = getLevelForXP(playerXP[17]);<br>
^<br>
client.java:10894: class, interface, or enum expected<br>
int Slayer = getLevelForXP(playerXP[18]);<br>
^<br>
client.java:10895: class, interface, or enum expected<br>
int Farming = getLevelForXP(playerXP[19]);<br>
^<br>
100 errors<br>
Files Compiled Successfully!<br>
Press any key to continue . . .[/code][/table]</p>
<p>im lost completely on what went wrong -.- anyone have any idea (even though i doubt anyone would read it all XD)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/too-many-compiling-errors-o-0/186056/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/too-many-compiling-errors-o-0/186056/1</link>
        <pubDate>Mon, 03 Mar 2008 11:24:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-186056-1</guid>
        <source url="https://forum.moparisthebest.com/t/too-many-compiling-errors-o-0/186056.rss">Too many compiling errors o.0</source>
      </item>
  </channel>
</rss>
