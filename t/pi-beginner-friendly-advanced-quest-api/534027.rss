<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[PI - Beginner friendly]Advanced Quest API</title>
    <link>https://forum.moparisthebest.com/t/pi-beginner-friendly-advanced-quest-api/534027</link>
    <description>I decided to rewrite the quest system I released sometime ago since it was an absolute cluster****. This one is much easier to use and it has a more logical design. For example, in my old quest system, you had to set the stages each time a quest was added to the system. With this one, it gets the amount of stages automatically. That&#39;s just a simple improvement. 

First of all, create the following package &quot;server.model.players.quest&quot; (src/server/model/player/quest) and add the following classes to the package:
http://pastebin.com/JKJBSkez - AbstractQuest
http://pastebin.com/iGFL4bP3 - AbstractQuestJournal
http://pastebin.com/DRrCDhWz - Quest
http://pastebin.com/caDZSmLp - QuestAction
http://pastebin.com/p24BNqnA - QuestConstants
http://pastebin.com/F3n8xuWD - QuestDefinition
http://pastebin.com/BzwtdW1g - QuestJournal
http://pastebin.com/5p841PfJ - QuestManager
http://pastebin.com/JQykqC70 - QuestStage
http://pastebin.com/tW7mEG7U - QuestReward
http://pastebin.com/kKWW1xXj - QuestState

Secondly, define an array of integers in the client class with the same amount of slots as the length of the arraylist in the questmanager class.
Those will act as the save variables. I&#39;m not going to show you how to make them save since every server will probably have a different saving system.
The positions of the elements on the array must be equal to the positions of the quest objects in the arraylist, otherwise you&#39;ll be in a mess. For example, if you intended the stage of an example quest to be &#39;1&#39;, but if &#39;1&#39; was after the first element
on the array and the intended quest on the arraylist was the first element, the save variable would be the first element on the array instead of &#39;1&#39;. This is because the array and the arraylist need to be related to each other for the saving to work.
[CODE]
import server.model.players.quests.QuestManager;
[/CODE]

[CODE]
public int[] saves = new int[QuestManager.getQuests().toArray().length];
[/CODE]

Then add the updateList() method in the client class
[CODE]
public void updateList() {
for(int stages:saves)
QuestManager.updateQuestListInterfaceForAllQuests(this, stages);
}
[/CODE]

Search &quot;initialize()&quot; in the client class and add this beneath it
[CODE]
updateList();
[/CODE]

Finally, add the following statements in the ClickingButton class. These are required for the ActionListener to work properly. 
Add these imports:
[CODE]
import server.model.players.quest.AbstractQuest;
import server.model.players.quest.Quest;
import server.model.players.quest.QuestAction;
import server.model.players.quest.QuestAction.QuestActionType;
import server.model.players.quest.QuestManager;
import server.model.players.quest.QuestStage;
[/CODE]
[CODE]
        for(Quest q: QuestManager.getQuests()) {//loops through all quests
            final AbstractQuest quest = ((AbstractQuest)q);//all quests
            if(quest.getClickId() == actionButtonId)
                    quest.getJournal(c, c.saves[quest.getDefinition().ordinal()]);
}
        for (Quest q : QuestManager.getQuests()) {// loops through all quests
            final AbstractQuest quest = ((AbstractQuest) q);// all quests
            for (int i = 0; i&lt;quest.getStages().toArray().length;i++)
            	if(i == c.saves[quest.getDefinition().ordinal()])

                                                                                            // equal to the save
                            for (QuestAction actions : quest.getStage(i).getActions())
                                    // loops through all actions
                                    if (actions.getType() == QuestActionType.CLICK_BUTTON
                                                    &amp;&amp; actions.getId() == actionButtonId)
                                            actions.execute(c);

    }
[/CODE]

An example of a quest created using this system (follow this format if you wanna create more quests)
[CODE]
package server.model.players.quest.impl;

import java.util.ArrayList;
import java.util.List;

import server.model.players.Client;
import server.model.players.quest.AbstractQuest;
import server.model.players.quest.QuestAction;
import server.model.players.quest.QuestDefinition;
import server.model.players.quest.QuestReward;
import server.model.players.quest.QuestStage;

public class QuestTest extends AbstractQuest {

	@Override
	public int getClickId() {
		return 28173;
	}

	@Override
	public QuestDefinition getDefinition() {
		// TODO Auto-generated method stub
		return QuestDefinition.QUEST_TEST;
	}

	@Override
	public int getFrameId() {
		// TODO Auto-generated method stub
		return 7133;
	}

	@Override
	public List&lt;QuestStage&gt; getStages() {
		final List&lt;QuestStage&gt; stages = new ArrayList&lt;&gt;();
		final QuestStage firstStage = new QuestStage() {

			@Override
			public boolean canStart(Client player) {
				// TODO Auto-generated method stub
				return true;
			}

			@Override
			public QuestAction[] getActions() {
				// TODO Auto-generated method stub
				return null;
			}

			@Override
			public String[] getContext() {
				// TODO Auto-generated method stub
				return new String[] { &quot;lol&quot;, &quot;first line nigga&quot; };
			}

			@Override
			public String getName() {
				// TODO Auto-generated method stub
				return null;
			}

			@Override
			public QuestReward[] getReward() {
				// TODO Auto-generated method stub
				return new QuestReward[] { new QuestReward() {

					@Override
					public int[] getItem() {
						// TODO Auto-generated method stub
						return new int[] { 995, 1 };
					}

					@Override
					public int[] getSkill() {
						// TODO Auto-generated method stub
						return new int[] { 0, 1000000 };
					}
				}, new QuestReward() {

					@Override
					public int[] getItem() {
						// TODO Auto-generated method stub
						return null;
					}

					@Override
					public int[] getSkill() {
						// TODO Auto-generated method stub
						return null;
					}
				} };
			}

		};
		final QuestStage secondStage = new QuestStage() {

			@Override
			public boolean canStart(Client player) {
				// TODO Auto-generated method stub
				return true;
			}

			@Override
			public QuestAction[] getActions() {
				return new QuestAction[] { new QuestAction() {

					@Override
					public void execute(final Client player) {
						System.out.println(&quot;African&quot;);

					}

					@Override
					public int getId() {
						// TODO Auto-generated method stub
						return 1;
					}

					@Override
					public QuestActionType getType() {
						// TODO Auto-generated method stub
						return QuestActionType.CLICK_BUTTON;
					}

				} };
			}

			@Override
			public String[] getContext() {
				// TODO Auto-generated method stub
				return new String[] { &quot;nigga fish me a fish&quot;,
						&quot;fish will never let you down&quot;,
						&quot;fish will never let you go&quot; };
			}

			@Override
			public String getName() {
				// TODO Auto-generated method stub
				return null;
			}

			@Override
			public QuestReward[] getReward() {
				// TODO Auto-generated method stub
				return null;
			}
		};
		stages.add(firstStage);
		stages.add(secondStage);
		return stages;
	}
}
[/CODE]

TODO:
- Make the reward interface appear and the show the reward items once a stage has been completed
- Implement the actionlistener for killing npcs, killing players, clicking objects, clicking items, dialogue sessions, clicking npcs etc

Please post some feedback, Thanks. (Also please thank if you use)</description>
    
    <lastBuildDate>Sun, 13 Oct 2013 01:01:01 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/pi-beginner-friendly-advanced-quest-api/534027.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[PI - Beginner friendly]Advanced Quest API</title>
        <dc:creator><![CDATA[@iget_active iget active]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/iget_active">@iget_active</a> wrote:</p>
          <blockquote>
              <p>Looks good, thanks.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-beginner-friendly-advanced-quest-api/534027/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-beginner-friendly-advanced-quest-api/534027/8</link>
        <pubDate>Sun, 13 Oct 2013 01:01:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534027-8</guid>
        <source url="https://forum.moparisthebest.com/t/pi-beginner-friendly-advanced-quest-api/534027.rss">[PI - Beginner friendly]Advanced Quest API</source>
      </item>
      <item>
        <title>[PI - Beginner friendly]Advanced Quest API</title>
        <dc:creator><![CDATA[@legionx legionx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/legionx">@legionx</a> wrote:</p>
          <blockquote>
              <p>[quote=“sinisoul, post:6, topic:534027”][code]<br>
<a class="mention" href="/u/override">@Override</a><br>
public QuestRewardContext getContext() {<br>
// TODO Auto-generated method stub<br>
return QuestRewardContext.ITEM;<br>
}</p>
<pre><code>                                    @Override
                                    public int[] getValue() {
                                            // TODO Auto-generated method stub
                                            return new int[] { 995, 1 };
                                    }
</code></pre>
<p>[/code]</p>
<p>I would do this differently.[/quote]</p>
<p>If this was programmed on a server other than PI, I would have used the Item and Skill object instead of an int[] and context instance.<br>
The context and single int[] instance have been replaced with two int[] instances (one for skill and one for item).</p>
<p>[CODE]<br>
<a class="mention" href="/u/override">@Override</a><br>
public QuestReward[] getReward() {<br>
// TODO Auto-generated method stub<br>
return new QuestReward[] { new QuestReward() {</p>
<pre><code>				@Override
				public int[] getItem() {
					// TODO Auto-generated method stub
					return new int[] { 995, 1 };
				}

				@Override
				public int[] getSkill() {
					// TODO Auto-generated method stub
					return new int[] { 0, 1000000 };
				}
			}, new QuestReward() {

				@Override
				public int[] getItem() {
					// TODO Auto-generated method stub
					return null;
				}

				@Override
				public int[] getSkill() {
					// TODO Auto-generated method stub
					return null;
				}
			} };
		}
</code></pre>
<p>[/CODE]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-beginner-friendly-advanced-quest-api/534027/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-beginner-friendly-advanced-quest-api/534027/7</link>
        <pubDate>Sun, 13 Oct 2013 00:39:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534027-7</guid>
        <source url="https://forum.moparisthebest.com/t/pi-beginner-friendly-advanced-quest-api/534027.rss">[PI - Beginner friendly]Advanced Quest API</source>
      </item>
      <item>
        <title>[PI - Beginner friendly]Advanced Quest API</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <pre><code class="lang-auto"> @Override
                                        public QuestRewardContext getContext() {
                                                // TODO Auto-generated method stub
                                                return QuestRewardContext.ITEM;
                                        }

                                        @Override
                                        public int[] getValue() {
                                                // TODO Auto-generated method stub
                                                return new int[] { 995, 1 };
                                        }</code></pre>
<p>I would do this differently.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-beginner-friendly-advanced-quest-api/534027/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-beginner-friendly-advanced-quest-api/534027/6</link>
        <pubDate>Sun, 13 Oct 2013 00:02:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534027-6</guid>
        <source url="https://forum.moparisthebest.com/t/pi-beginner-friendly-advanced-quest-api/534027.rss">[PI - Beginner friendly]Advanced Quest API</source>
      </item>
      <item>
        <title>[PI - Beginner friendly]Advanced Quest API</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <p>Looking better, indeed.</p>
<p>One more thing; this is rather confusing and badly thought out.</p>
<p>[code=java]<br>
<a class="mention" href="/u/override">@Override</a><br>
public List getStages() {<br>
final List stages = new ArrayList&lt;&gt;();<br>
final QuestStage firstStage = new QuestStage() {</p>
<pre><code>                    @Override
                    public boolean canStart(Client player) {
                            // TODO Auto-generated method stub
                            return true;
                    }

                    @Override
                    public String[] getContext() {
                            // TODO Auto-generated method stub
                            return new String[] { "lol", "first line nigga" };
                    }

                    @Override
                    public QuestReward getReward() {
                            // TODO Auto-generated method stub
                            return new QuestReward() {

                                    @Override
                                    public QuestRewardContext getContext() {
                                            // TODO Auto-generated method stub
                                            return QuestRewardContext.ITEM;
                                    }

                                    @Override
                                    public int[] getValue() {
                                            // TODO Auto-generated method stub
                                            return new int[] { 995, 1 };
                                    }

                            };
                    }

                    @Override
                    public String getName() {
                            // TODO Auto-generated method stub
                            return null;
                    }

                    @Override
                    public QuestAction[] getActions() {
                            // TODO Auto-generated method stub
                            return null;
                    }

            };
            final QuestStage secondStage = new QuestStage() {

                    @Override
                    public boolean canStart(Client player) {
                            // TODO Auto-generated method stub
                            return true;
                    }

                    @Override
                    public String[] getContext() {
                            // TODO Auto-generated method stub
                            return new String[] { "nigga fish me a fish",
                                            "fish will never let you down",
                                            "fish will never let you go" };
                    }

                    @Override
                    public QuestReward getReward() {
                            // TODO Auto-generated method stub
                            return new QuestReward() {

                                    @Override
                                    public QuestRewardContext getContext() {
                                            // TODO Auto-generated method stub
                                            return QuestRewardContext.EXPERIENCE;
                                    }

                                    @Override
                                    public int[] getValue() {
                                            // TODO Auto-generated method stub
                                            return new int[] { 1, 1000000 };
                                    }

                            };
                    }

                    @Override
                    public String getName() {
                            // TODO Auto-generated method stub
                            return null;
                    }

                    @Override
                    public QuestAction[] getActions() {
                            return new QuestAction[] { new QuestAction() {

                                    @Override
                                    public QuestActionType getType() {
                                            // TODO Auto-generated method stub
                                            return QuestActionType.CLICK_ITEM;
                                    }

                                    @Override
                                    public int getId() {
                                            // TODO Auto-generated method stub
                                            return 1;
                                    }

                                    @Override
                                    public void execute(final Client player) {
                                            System.out.println("African");

                                    }

                            } };
                    }
            };
            stages.add(firstStage);
            stages.add(secondStage);
            return stages;
    }[/code]
</code></pre>
<p>You could have an abstract method [tt]QuestStage getNextStage();[/tt] rather than adding all of the stages to a list.</p>
<p>Also, you should not have mutable fields within an enumeration.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-beginner-friendly-advanced-quest-api/534027/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-beginner-friendly-advanced-quest-api/534027/5</link>
        <pubDate>Sat, 12 Oct 2013 22:43:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534027-5</guid>
        <source url="https://forum.moparisthebest.com/t/pi-beginner-friendly-advanced-quest-api/534027.rss">[PI - Beginner friendly]Advanced Quest API</source>
      </item>
      <item>
        <title>[PI - Beginner friendly]Advanced Quest API</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>looking so much better</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-beginner-friendly-advanced-quest-api/534027/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-beginner-friendly-advanced-quest-api/534027/4</link>
        <pubDate>Sat, 12 Oct 2013 22:22:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534027-4</guid>
        <source url="https://forum.moparisthebest.com/t/pi-beginner-friendly-advanced-quest-api/534027.rss">[PI - Beginner friendly]Advanced Quest API</source>
      </item>
      <item>
        <title>[PI - Beginner friendly]Advanced Quest API</title>
        <dc:creator><![CDATA[@legionx legionx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/legionx">@legionx</a> wrote:</p>
          <blockquote>
              <p>[quote=“AtomicInt_, post:2, topic:534027”]Looks fairly decent, should have an ability to give experience, items and abilities as you can receive all three during a quest.<br>
Also [tt]canStart(Player)[/tt] should be redesigned as each stage could have different requirements.<br>
[tt]String[][] getStates()[/tt] is an eyesore, try and think of a easier way to implement that, perhaps you could fully abstract quests, like I said above; each stage could be its own class, set requisites per stage, etc.[/quote]</p>
<p>Thank you for pointing out that flaw, I’ve removed the 2D array that previously stored stages and replaced it with a stage model that contains an array of information and an instance of the QuestReward object.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-beginner-friendly-advanced-quest-api/534027/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-beginner-friendly-advanced-quest-api/534027/3</link>
        <pubDate>Sat, 12 Oct 2013 18:58:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534027-3</guid>
        <source url="https://forum.moparisthebest.com/t/pi-beginner-friendly-advanced-quest-api/534027.rss">[PI - Beginner friendly]Advanced Quest API</source>
      </item>
      <item>
        <title>[PI - Beginner friendly]Advanced Quest API</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <p>Looks fairly decent, should have an ability to give experience, items and abilities as you can receive all three during a quest.<br>
Also [tt]canStart(Player)[/tt] should be redesigned as each stage could have different requirements.<br>
[tt]String[][] getStates()[/tt] is an eyesore, try and think of a easier way to implement that, perhaps you could fully abstract quests, like I said above; each stage could be its own class, set requisites per stage, etc.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-beginner-friendly-advanced-quest-api/534027/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-beginner-friendly-advanced-quest-api/534027/2</link>
        <pubDate>Sat, 12 Oct 2013 16:15:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534027-2</guid>
        <source url="https://forum.moparisthebest.com/t/pi-beginner-friendly-advanced-quest-api/534027.rss">[PI - Beginner friendly]Advanced Quest API</source>
      </item>
      <item>
        <title>[PI - Beginner friendly]Advanced Quest API</title>
        <dc:creator><![CDATA[@legionx legionx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/legionx">@legionx</a> wrote:</p>
          <blockquote>
              <p>I decided to rewrite the quest system I released sometime ago since it was an absolute cluster****. This one is much easier to use and it has a more logical design. For example, in my old quest system, you had to set the stages each time a quest was added to the system. With this one, it gets the amount of stages automatically. That’s just a simple improvement.</p>
<p>First of all, create the following package “server.model.players.quest” (src/server/model/player/quest) and add the following classes to the package:<br>
<a href="http://pastebin.com/JKJBSkez" rel="nofollow noopener">http://pastebin.com/JKJBSkez</a> - AbstractQuest<br>
<a href="http://pastebin.com/iGFL4bP3" rel="nofollow noopener">http://pastebin.com/iGFL4bP3</a> - AbstractQuestJournal<br>
<a href="http://pastebin.com/DRrCDhWz" rel="nofollow noopener">http://pastebin.com/DRrCDhWz</a> - Quest<br>
<a href="http://pastebin.com/caDZSmLp" rel="nofollow noopener">http://pastebin.com/caDZSmLp</a> - QuestAction<br>
<a href="http://pastebin.com/p24BNqnA" rel="nofollow noopener">http://pastebin.com/p24BNqnA</a> - QuestConstants<br>
<a href="http://pastebin.com/F3n8xuWD" rel="nofollow noopener">http://pastebin.com/F3n8xuWD</a> - QuestDefinition<br>
<a href="http://pastebin.com/BzwtdW1g" rel="nofollow noopener">http://pastebin.com/BzwtdW1g</a> - QuestJournal<br>
<a href="http://pastebin.com/5p841PfJ" rel="nofollow noopener">http://pastebin.com/5p841PfJ</a> - QuestManager<br>
<a href="http://pastebin.com/JQykqC70" rel="nofollow noopener">http://pastebin.com/JQykqC70</a> - QuestStage<br>
<a href="http://pastebin.com/tW7mEG7U" rel="nofollow noopener">http://pastebin.com/tW7mEG7U</a> - QuestReward<br>
<a href="http://pastebin.com/kKWW1xXj" rel="nofollow noopener">http://pastebin.com/kKWW1xXj</a> - QuestState</p>
<p>Secondly, define an array of integers in the client class with the same amount of slots as the length of the arraylist in the questmanager class.<br>
Those will act as the save variables. I’m not going to show you how to make them save since every server will probably have a different saving system.<br>
The positions of the elements on the array must be equal to the positions of the quest objects in the arraylist, otherwise you’ll be in a mess. For example, if you intended the stage of an example quest to be ‘1’, but if ‘1’ was after the first element<br>
on the array and the intended quest on the arraylist was the first element, the save variable would be the first element on the array instead of ‘1’. This is because the array and the arraylist need to be related to each other for the saving to work.</p>
<p><code>
import server.model.players.quests.QuestManager;
</code></p>
<p><code>
public int[] saves = new int[QuestManager.getQuests().toArray().length];
</code></p>
<p>Then add the updateList() method in the client class</p>
<p><code>
public void updateList() {
for(int stages:saves)
QuestManager.updateQuestListInterfaceForAllQuests(this, stages);
}
</code></p>
<p>Search “initialize()” in the client class and add this beneath it</p>
<p><code>
updateList();
</code></p>
<p>Finally, add the following statements in the ClickingButton class. These are required for the ActionListener to work properly.<br>
Add these imports:</p>
<p><code>
import server.model.players.quest.AbstractQuest;
import server.model.players.quest.Quest;
import server.model.players.quest.QuestAction;
import server.model.players.quest.QuestAction.QuestActionType;
import server.model.players.quest.QuestManager;
import server.model.players.quest.QuestStage;
</code></p>
<p>[CODE]<br>
for(Quest q: QuestManager.getQuests()) {//loops through all quests<br>
final AbstractQuest quest = ((AbstractQuest)q);//all quests<br>
if(quest.getClickId() == actionButtonId)<br>
quest.getJournal(c, c.saves[quest.getDefinition().ordinal()]);<br>
}<br>
for (Quest q : QuestManager.getQuests()) {// loops through all quests<br>
final AbstractQuest quest = ((AbstractQuest) q);// all quests<br>
for (int i = 0; i&lt;quest.getStages().toArray().length;i++)<br>
if(i == c.saves[quest.getDefinition().ordinal()])</p>
<pre><code>                                                                                        // equal to the save
                        for (QuestAction actions : quest.getStage(i).getActions())
                                // loops through all actions
                                if (actions.getType() == QuestActionType.CLICK_BUTTON
                                                &amp;&amp; actions.getId() == actionButtonId)
                                        actions.execute(c);

}
</code></pre>
<p>[/CODE]</p>
<p>An example of a quest created using this system (follow this format if you wanna create more quests)</p>
<p>[CODE]<br>
package server.model.players.quest.impl;</p>
<p>import java.util.ArrayList;<br>
import java.util.List;</p>
<p>import server.model.players.Client;<br>
import server.model.players.quest.AbstractQuest;<br>
import server.model.players.quest.QuestAction;<br>
import server.model.players.quest.QuestDefinition;<br>
import server.model.players.quest.QuestReward;<br>
import server.model.players.quest.QuestStage;</p>
<p>public class QuestTest extends AbstractQuest {</p>
<pre><code>@Override
public int getClickId() {
	return 28173;
}

@Override
public QuestDefinition getDefinition() {
	// TODO Auto-generated method stub
	return QuestDefinition.QUEST_TEST;
}

@Override
public int getFrameId() {
	// TODO Auto-generated method stub
	return 7133;
}

@Override
public List&lt;QuestStage&gt; getStages() {
	final List&lt;QuestStage&gt; stages = new ArrayList&lt;&gt;();
	final QuestStage firstStage = new QuestStage() {

		@Override
		public boolean canStart(Client player) {
			// TODO Auto-generated method stub
			return true;
		}

		@Override
		public QuestAction[] getActions() {
			// TODO Auto-generated method stub
			return null;
		}

		@Override
		public String[] getContext() {
			// TODO Auto-generated method stub
			return new String[] { "lol", "first line nigga" };
		}

		@Override
		public String getName() {
			// TODO Auto-generated method stub
			return null;
		}

		@Override
		public QuestReward[] getReward() {
			// TODO Auto-generated method stub
			return new QuestReward[] { new QuestReward() {

				@Override
				public int[] getItem() {
					// TODO Auto-generated method stub
					return new int[] { 995, 1 };
				}

				@Override
				public int[] getSkill() {
					// TODO Auto-generated method stub
					return new int[] { 0, 1000000 };
				}
			}, new QuestReward() {

				@Override
				public int[] getItem() {
					// TODO Auto-generated method stub
					return null;
				}

				@Override
				public int[] getSkill() {
					// TODO Auto-generated method stub
					return null;
				}
			} };
		}

	};
	final QuestStage secondStage = new QuestStage() {

		@Override
		public boolean canStart(Client player) {
			// TODO Auto-generated method stub
			return true;
		}

		@Override
		public QuestAction[] getActions() {
			return new QuestAction[] { new QuestAction() {

				@Override
				public void execute(final Client player) {
					System.out.println("African");

				}

				@Override
				public int getId() {
					// TODO Auto-generated method stub
					return 1;
				}

				@Override
				public QuestActionType getType() {
					// TODO Auto-generated method stub
					return QuestActionType.CLICK_BUTTON;
				}

			} };
		}

		@Override
		public String[] getContext() {
			// TODO Auto-generated method stub
			return new String[] { "nigga fish me a fish",
					"fish will never let you down",
					"fish will never let you go" };
		}

		@Override
		public String getName() {
			// TODO Auto-generated method stub
			return null;
		}

		@Override
		public QuestReward[] getReward() {
			// TODO Auto-generated method stub
			return null;
		}
	};
	stages.add(firstStage);
	stages.add(secondStage);
	return stages;
}
</code></pre>
<p>}<br>
[/CODE]</p>
<p>TODO:</p>
<ul>
<li>Make the reward interface appear and the show the reward items once a stage has been completed</li>
<li>Implement the actionlistener for killing npcs, killing players, clicking objects, clicking items, dialogue sessions, clicking npcs etc</li>
</ul>
<p>Please post some feedback, Thanks. (Also please thank if you use)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-beginner-friendly-advanced-quest-api/534027/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-beginner-friendly-advanced-quest-api/534027/1</link>
        <pubDate>Sat, 12 Oct 2013 13:15:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534027-1</guid>
        <source url="https://forum.moparisthebest.com/t/pi-beginner-friendly-advanced-quest-api/534027.rss">[PI - Beginner friendly]Advanced Quest API</source>
      </item>
  </channel>
</rss>
