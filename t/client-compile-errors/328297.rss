<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Client Compile Errors</title>
    <link>https://forum.moparisthebest.com/t/client-compile-errors/328297</link>
    <description>[code]client.java:6306: illegal start of type
                                if (isInPitGame() &amp;&amp; !AttackingOn2.isInPitRoom()
 || isInWilderness(absX, absY, 1) == true &amp;&amp; AttackingOn2.isInWilderness(Attacki
ngOn2.absX, AttackingOn2.absY, 1) == true) {
                                                                  ^
client.java:6306: &#39;;&#39; expected
                                if (isInPitGame() &amp;&amp; !AttackingOn2.isInPitRoom()
 || isInWilderness(absX, absY, 1) == true &amp;&amp; AttackingOn2.isInWilderness(Attacki
ngOn2.absX, AttackingOn2.absY, 1) == true) {

^
client.java:6395: illegal start of type
                                } else {
                                  ^
client.java:6395: &#39;;&#39; expected
                                } else {
                                      ^
client.java:6396: invalid method declaration; return type required
                                        sM(&quot;This player is not in the wilderness
!&quot;);
                                        ^
client.java:6396: illegal start of type
                                        sM(&quot;This player is not in the wilderness
!&quot;);
                                           ^
client.java:6397: invalid method declaration; return type required
                                        ResetAttack();
                                        ^
client.java:6399: class, interface, or enum expected
                return false;
                ^
client.java:6400: class, interface, or enum expected
        }
        ^
client.java:6405: class, interface, or enum expected
ResetAttackNPC();
^
client.java:6406: class, interface, or enum expected
return false;
^
client.java:6407: class, interface, or enum expected
}
^
client.java:6409: class, interface, or enum expected
                int EnemyY = server.npcHandler.npcs[attacknpc].absY;
                ^
client.java:6410: class, interface, or enum expected
                int EnemyHP = server.npcHandler.npcs[attacknpc].HP;
                ^
client.java:6411: class, interface, or enum expected
                int hitDiff = 0;
                ^
client.java:6412: class, interface, or enum expected
                if (EnemyHP &lt; 1) {
                ^
client.java:6414: class, interface, or enum expected
                        return false;
                        ^
client.java:6415: class, interface, or enum expected
                }
                ^
client.java:6417: class, interface, or enum expected
                int[] staffs = {1381, 1383, 1385, 1387, 4675};
                ^
client.java:6418: class, interface, or enum expected
                int[] arrowIds = { 882, 884, 886, 888, 890, 892, 78 };
                ^
client.java:6419: class, interface, or enum expected
                int[] arrowGfx = { 10, 9, 11, 12, 13, 15, 16 };
                ^
client.java:6420: class, interface, or enum expected
if(!healers &amp;&amp; IsInFightCave() &amp;&amp; type == 2745 &amp;&amp; server.npcHandler.npcs[attackn
pc].HP &lt;= 125){
^
client.java:6422: class, interface, or enum expected
server.npcHandler.spawnANPC(2746, 2404, 5100, heightLevel);
^
client.java:6423: class, interface, or enum expected
server.npcHandler.spawnANPC(2746, 2390, 5067, heightLevel);
^
client.java:6424: class, interface, or enum expected
server.npcHandler.spawnANPC(2746, 2404, 5067, heightLevel);
^
client.java:6425: class, interface, or enum expected
healers = true;
^
client.java:6426: class, interface, or enum expected
}
^
client.java:6429: class, interface, or enum expected
ResetAttackNPC();
^
client.java:6430: class, interface, or enum expected
return false;
^
client.java:6431: class, interface, or enum expected
}
^
client.java:6435: class, interface, or enum expected
                                ResetAttackNPC();
                                ^
client.java:6436: class, interface, or enum expected
                                return false;
                                ^
client.java:6437: class, interface, or enum expected
                        }
                        ^
client.java:6442: class, interface, or enum expected
                                ResetAttackNPC();
                                ^
client.java:6443: class, interface, or enum expected
                                return false;
                                ^
client.java:6444: class, interface, or enum expected
                        }
                        ^
client.java:6449: class, interface, or enum expected
                                ResetAttackNPC();
                                ^
client.java:6450: class, interface, or enum expected
                                return false;
                                ^
client.java:6451: class, interface, or enum expected
                        }
                        ^
client.java:6456: class, interface, or enum expected
                                ResetAttackNPC();
                                ^
client.java:6457: class, interface, or enum expected
                                return false;
                                ^
client.java:6458: class, interface, or enum expected
                        }
                        ^
client.java:6463: class, interface, or enum expected
                                ResetAttackNPC();
                                ^
client.java:6464: class, interface, or enum expected
                                return false;
                                ^
client.java:6465: class, interface, or enum expected
                        }
                        ^
client.java:6470: class, interface, or enum expected
                                ResetAttackNPC();
                                ^
client.java:6471: class, interface, or enum expected
                                return false;
                                ^
client.java:6472: class, interface, or enum expected
                        }
                        ^
client.java:6477: class, interface, or enum expected
                                ResetAttackNPC();
                                ^
client.java:6478: class, interface, or enum expected
                                return false;
                                ^
client.java:6479: class, interface, or enum expected
                        }
                        ^
client.java:6484: class, interface, or enum expected
                                ResetAttackNPC();
                                ^
client.java:6485: class, interface, or enum expected
                                return false;
                                ^
client.java:6486: class, interface, or enum expected
                        }
                        ^
client.java:6491: class, interface, or enum expected
                                ResetAttackNPC();
                                ^
client.java:6492: class, interface, or enum expected
                                return false;
                                ^
client.java:6493: class, interface, or enum expected
                        }
                        ^
client.java:6499: class, interface, or enum expected
                                int npcTargetY = server.npcHandler.npcs[attacknp
c].absY;
                                ^
client.java:6500: class, interface, or enum expected
                                int npcTargetHealth = server.npcHandler.npcs[att
acknpc].HP;
                                ^
client.java:6501: class, interface, or enum expected
                                if (System.currentTimeMillis() - lastAttack &lt; 40
00) {
                                ^
client.java:6504: class, interface, or enum expected
                                }
                                ^
client.java:6507: class, interface, or enum expected
                                }
                                ^
client.java:6509: class, interface, or enum expected
                                lastCombat = System.currentTimeMillis();
                                ^
client.java:6510: class, interface, or enum expected
                                lastAttack = lastCombat;
                                ^
client.java:6512: class, interface, or enum expected
                                TurnPlayerTo(npcTargetX, npcTargetY);
                                ^
client.java:6513: class, interface, or enum expected
                                updateRequired = true;
                                ^
client.java:6514: class, interface, or enum expected
                                appearanceUpdateRequired = true;
                                ^
client.java:6516: class, interface, or enum expected
                                toX = absX;
                                ^
client.java:6517: class, interface, or enum expected
                                toY = absY;
                                ^
client.java:6518: class, interface, or enum expected
                                newWalkCmdSteps = 0;
                                ^
client.java:6519: class, interface, or enum expected
                                newWalkCmdX[0] = newWalkCmdY[0] = tmpNWCX[0] = t
mpNWCY[0] = 0;
                                ^
client.java:6520: class, interface, or enum expected
                                getNextPlayerMovement();
                                ^
client.java:6521: class, interface, or enum expected
                                MagicHandler.npcX = npcTargetX;
                                ^
client.java:6522: class, interface, or enum expected
                                MagicHandler.npcY = npcTargetY;
                                ^
client.java:6523: class, interface, or enum expected
                                MagicHandler.npcHP = npcTargetHealth;
                                ^
client.java:6524: class, interface, or enum expected
                                server.npcHandler.npcs[attacknpc].hitIDNPC = pla
yerId;
                                ^
client.java:6525: class, interface, or enum expected
                                server.npcHandler.npcs[attacknpc].offTimerNPC =
12;
                                ^
client.java:6526: class, interface, or enum expected
                                spellNpcIndex = MagicHandler.magicSpellNpc(autoc
astID,
                                ^
client.java:6528: class, interface, or enum expected
                                return true;
                                ^
client.java:6529: class, interface, or enum expected
                }
                ^
client.java:6532: class, interface, or enum expected
                int voidmelee = 0;
                ^
client.java:6533: class, interface, or enum expected
                if(FullVMelee()){
                ^
client.java:6535: class, interface, or enum expected
                }
                ^
client.java:6538: class, interface, or enum expected
                } else {
                ^
client.java:6540: class, interface, or enum expected
                }
                ^
client.java:6542: class, interface, or enum expected
                boolean UseCrossBow = false;
                ^
client.java:6543: class, interface, or enum expected
                boolean UseRing = false;
                ^
client.java:6545: class, interface, or enum expected
                for (int i = 0; i &lt; shortbow.length; i++) {
                ^
client.java:6545: class, interface, or enum expected
                for (int i = 0; i &lt; shortbow.length; i++) {
                                ^
client.java:6545: class, interface, or enum expected
                for (int i = 0; i &lt; shortbow.length; i++) {
                                                     ^
client.java:6549: class, interface, or enum expected
                                break;
                                ^
client.java:6550: class, interface, or enum expected
                        }
                        ^
client.java:6554: class, interface, or enum expected
                }
                ^
client.java:6557: class, interface, or enum expected
                }
                ^
100 errors
Finished!
Press any key to continue . . .[/code]



I&#39;m not quite sure where I&#39;ve gone wrong - I&#39;ve gathered its an enum (&quot;{&quot; or &quot;}&quot;) somewhere... but I have no idea where to look.

Recently I&#39;ve added some updates and tried backtracking but haven&#39;t seemed to find which one was the one to cause it.

It looks as if I&#39;ve left a statement unended.. but dang I can&#39;t find jack shit XD</description>
    
    <lastBuildDate>Fri, 05 Feb 2010 00:07:16 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/client-compile-errors/328297.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Client Compile Errors</title>
        <dc:creator><![CDATA[@deathschaos9 DeathsChaos9]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/deathschaos9">@deathschaos9</a> wrote:</p>
          <blockquote>
              <p>Well there’s no way we can find it for you.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/client-compile-errors/328297/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/client-compile-errors/328297/2</link>
        <pubDate>Fri, 05 Feb 2010 00:07:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-328297-2</guid>
        <source url="https://forum.moparisthebest.com/t/client-compile-errors/328297.rss">Client Compile Errors</source>
      </item>
      <item>
        <title>Client Compile Errors</title>
        <dc:creator><![CDATA[@I_Hawk_I I Hawk I]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/i_hawk_i">@I_Hawk_I</a> wrote:</p>
          <blockquote>
              <p>[code]client.java:6306: illegal start of type<br>
if (isInPitGame() &amp;&amp; !AttackingOn2.isInPitRoom()<br>
|| isInWilderness(absX, absY, 1) == true &amp;&amp; AttackingOn2.isInWilderness(Attacki<br>
ngOn2.absX, AttackingOn2.absY, 1) == true) {<br>
^<br>
client.java:6306: ‘;’ expected<br>
if (isInPitGame() &amp;&amp; !AttackingOn2.isInPitRoom()<br>
|| isInWilderness(absX, absY, 1) == true &amp;&amp; AttackingOn2.isInWilderness(Attacki<br>
ngOn2.absX, AttackingOn2.absY, 1) == true) {</p>
<p>^<br>
client.java:6395: illegal start of type<br>
} else {<br>
^<br>
client.java:6395: ‘;’ expected<br>
} else {<br>
^<br>
client.java:6396: invalid method declaration; return type required<br>
sM(“This player is not in the wilderness<br>
!”);<br>
^<br>
client.java:6396: illegal start of type<br>
sM(“This player is not in the wilderness<br>
!”);<br>
^<br>
client.java:6397: invalid method declaration; return type required<br>
ResetAttack();<br>
^<br>
client.java:6399: class, interface, or enum expected<br>
return false;<br>
^<br>
client.java:6400: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6405: class, interface, or enum expected<br>
ResetAttackNPC();<br>
^<br>
client.java:6406: class, interface, or enum expected<br>
return false;<br>
^<br>
client.java:6407: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6409: class, interface, or enum expected<br>
int EnemyY = server.npcHandler.npcs[attacknpc].absY;<br>
^<br>
client.java:6410: class, interface, or enum expected<br>
int EnemyHP = server.npcHandler.npcs[attacknpc].HP;<br>
^<br>
client.java:6411: class, interface, or enum expected<br>
int hitDiff = 0;<br>
^<br>
client.java:6412: class, interface, or enum expected<br>
if (EnemyHP &lt; 1) {<br>
^<br>
client.java:6414: class, interface, or enum expected<br>
return false;<br>
^<br>
client.java:6415: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6417: class, interface, or enum expected<br>
int[] staffs = {1381, 1383, 1385, 1387, 4675};<br>
^<br>
client.java:6418: class, interface, or enum expected<br>
int[] arrowIds = { 882, 884, 886, 888, 890, 892, 78 };<br>
^<br>
client.java:6419: class, interface, or enum expected<br>
int[] arrowGfx = { 10, 9, 11, 12, 13, 15, 16 };<br>
^<br>
client.java:6420: class, interface, or enum expected<br>
if(!healers &amp;&amp; IsInFightCave() &amp;&amp; type == 2745 &amp;&amp; server.npcHandler.npcs[attackn<br>
pc].HP &lt;= 125){<br>
^<br>
client.java:6422: class, interface, or enum expected<br>
server.npcHandler.spawnANPC(2746, 2404, 5100, heightLevel);<br>
^<br>
client.java:6423: class, interface, or enum expected<br>
server.npcHandler.spawnANPC(2746, 2390, 5067, heightLevel);<br>
^<br>
client.java:6424: class, interface, or enum expected<br>
server.npcHandler.spawnANPC(2746, 2404, 5067, heightLevel);<br>
^<br>
client.java:6425: class, interface, or enum expected<br>
healers = true;<br>
^<br>
client.java:6426: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6429: class, interface, or enum expected<br>
ResetAttackNPC();<br>
^<br>
client.java:6430: class, interface, or enum expected<br>
return false;<br>
^<br>
client.java:6431: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6435: class, interface, or enum expected<br>
ResetAttackNPC();<br>
^<br>
client.java:6436: class, interface, or enum expected<br>
return false;<br>
^<br>
client.java:6437: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6442: class, interface, or enum expected<br>
ResetAttackNPC();<br>
^<br>
client.java:6443: class, interface, or enum expected<br>
return false;<br>
^<br>
client.java:6444: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6449: class, interface, or enum expected<br>
ResetAttackNPC();<br>
^<br>
client.java:6450: class, interface, or enum expected<br>
return false;<br>
^<br>
client.java:6451: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6456: class, interface, or enum expected<br>
ResetAttackNPC();<br>
^<br>
client.java:6457: class, interface, or enum expected<br>
return false;<br>
^<br>
client.java:6458: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6463: class, interface, or enum expected<br>
ResetAttackNPC();<br>
^<br>
client.java:6464: class, interface, or enum expected<br>
return false;<br>
^<br>
client.java:6465: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6470: class, interface, or enum expected<br>
ResetAttackNPC();<br>
^<br>
client.java:6471: class, interface, or enum expected<br>
return false;<br>
^<br>
client.java:6472: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6477: class, interface, or enum expected<br>
ResetAttackNPC();<br>
^<br>
client.java:6478: class, interface, or enum expected<br>
return false;<br>
^<br>
client.java:6479: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6484: class, interface, or enum expected<br>
ResetAttackNPC();<br>
^<br>
client.java:6485: class, interface, or enum expected<br>
return false;<br>
^<br>
client.java:6486: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6491: class, interface, or enum expected<br>
ResetAttackNPC();<br>
^<br>
client.java:6492: class, interface, or enum expected<br>
return false;<br>
^<br>
client.java:6493: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6499: class, interface, or enum expected<br>
int npcTargetY = server.npcHandler.npcs[attacknp<br>
c].absY;<br>
^<br>
client.java:6500: class, interface, or enum expected<br>
int npcTargetHealth = server.npcHandler.npcs[att<br>
acknpc].HP;<br>
^<br>
client.java:6501: class, interface, or enum expected<br>
if (System.currentTimeMillis() - lastAttack &lt; 40<br>
00) {<br>
^<br>
client.java:6504: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6507: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6509: class, interface, or enum expected<br>
lastCombat = System.currentTimeMillis();<br>
^<br>
client.java:6510: class, interface, or enum expected<br>
lastAttack = lastCombat;<br>
^<br>
client.java:6512: class, interface, or enum expected<br>
TurnPlayerTo(npcTargetX, npcTargetY);<br>
^<br>
client.java:6513: class, interface, or enum expected<br>
updateRequired = true;<br>
^<br>
client.java:6514: class, interface, or enum expected<br>
appearanceUpdateRequired = true;<br>
^<br>
client.java:6516: class, interface, or enum expected<br>
toX = absX;<br>
^<br>
client.java:6517: class, interface, or enum expected<br>
toY = absY;<br>
^<br>
client.java:6518: class, interface, or enum expected<br>
newWalkCmdSteps = 0;<br>
^<br>
client.java:6519: class, interface, or enum expected<br>
newWalkCmdX[0] = newWalkCmdY[0] = tmpNWCX[0] = t<br>
mpNWCY[0] = 0;<br>
^<br>
client.java:6520: class, interface, or enum expected<br>
getNextPlayerMovement();<br>
^<br>
client.java:6521: class, interface, or enum expected<br>
MagicHandler.npcX = npcTargetX;<br>
^<br>
client.java:6522: class, interface, or enum expected<br>
MagicHandler.npcY = npcTargetY;<br>
^<br>
client.java:6523: class, interface, or enum expected<br>
MagicHandler.npcHP = npcTargetHealth;<br>
^<br>
client.java:6524: class, interface, or enum expected<br>
server.npcHandler.npcs[attacknpc].hitIDNPC = pla<br>
yerId;<br>
^<br>
client.java:6525: class, interface, or enum expected<br>
server.npcHandler.npcs[attacknpc].offTimerNPC =<br>
12;<br>
^<br>
client.java:6526: class, interface, or enum expected<br>
spellNpcIndex = MagicHandler.magicSpellNpc(autoc<br>
astID,<br>
^<br>
client.java:6528: class, interface, or enum expected<br>
return true;<br>
^<br>
client.java:6529: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6532: class, interface, or enum expected<br>
int voidmelee = 0;<br>
^<br>
client.java:6533: class, interface, or enum expected<br>
if(FullVMelee()){<br>
^<br>
client.java:6535: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6538: class, interface, or enum expected<br>
} else {<br>
^<br>
client.java:6540: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6542: class, interface, or enum expected<br>
boolean UseCrossBow = false;<br>
^<br>
client.java:6543: class, interface, or enum expected<br>
boolean UseRing = false;<br>
^<br>
client.java:6545: class, interface, or enum expected<br>
for (int i = 0; i &lt; shortbow.length; i++) {<br>
^<br>
client.java:6545: class, interface, or enum expected<br>
for (int i = 0; i &lt; shortbow.length; i++) {<br>
^<br>
client.java:6545: class, interface, or enum expected<br>
for (int i = 0; i &lt; shortbow.length; i++) {<br>
^<br>
client.java:6549: class, interface, or enum expected<br>
break;<br>
^<br>
client.java:6550: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6554: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6557: class, interface, or enum expected<br>
}<br>
^<br>
100 errors<br>
Finished!<br>
Press any key to continue . . .[/code]</p>
<p>I’m not quite sure where I’ve gone wrong - I’ve gathered its an enum ("{" or “}”) somewhere… but I have no idea where to look.</p>
<p>Recently I’ve added some updates and tried backtracking but haven’t seemed to find which one was the one to cause it.</p>
<p>It looks as if I’ve left a statement unended… but dang I can’t find jack shit XD</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/client-compile-errors/328297/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/client-compile-errors/328297/1</link>
        <pubDate>Thu, 04 Feb 2010 23:39:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-328297-1</guid>
        <source url="https://forum.moparisthebest.com/t/client-compile-errors/328297.rss">Client Compile Errors</source>
      </item>
  </channel>
</rss>
