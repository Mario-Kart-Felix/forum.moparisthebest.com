<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[614] Impression [614] Shop Help!</title>
    <link>https://forum.moparisthebest.com/t/614-impression-614-shop-help/447565</link>
    <description>So i want it so that when i click on a item in the shop it&#39;ll say the price of how many tokens is required to purchase the item. 

Example: I left click an item in the shop (ags) and it says &quot;This item&#39;s price is currently 350 tokens.&quot; 

Does anyone know how that can be done?

This is a DragonKk Based Source.

ShopManager.Java

[CODE]package dragonkk.rs2rsps.model.shops;

import dragonkk.rs2rsps.model.Item;
import dragonkk.rs2rsps.model.player.Player;
import dragonkk.rs2rsps.model.ItemConstants;
import dragonkk.rs2rsps.util.Misc;

/**
 * @author Mihan J.
 * @version 1.0
 */
 
public class ShopManager {

	public Shops shops;

	public ShopManager() {
		shops = new Shops();
	}

	public void openShop(Player player, int i) {
		player.shopID = i;
		player.getFrames().sendString(Misc.formatPlayerNameForDisplay(shops.getShop(player.shopID).getName()), 620, 20);
		player.getFrames().sendItems(3, shops.getShop(player.shopID).items, false);
		player.getFrames().sendConfig(118, 3);
		player.getFrames().sendConfig(1496, 553);
		player.getFrames().sendConfig(532, 12852);
		player.getFrames().sendBConfig(199, -1);
		player.getFrames().sendInterface(620);
		player.getFrames().sendInventoryInterface(621);
		for (int index = 0; index &lt; 40; index++) {
			if (index == 0) {
				player.getFrames().sendBConfig(946 + index, 1000);
				continue;
			}
			player.getFrames().sendBConfig(946 + index, -1);
		}
		Object[] params = new Object[] { &quot;Sell 50&quot;, &quot;Sell 10&quot;, &quot;Sell 5&quot;,
				&quot;Sell 1&quot;, &quot;Value&quot;, -1, 1, 7, 4, 93, 40697856 };
		player.getFrames().sendClientScript(149, params, &quot;IviiiIsssss&quot;);
		player.getFrames().sendAMask(0, 27, 621, 0, 36, 1086);
		player.getFrames().sendAMask(0, 12, 620, 26, 0, 1150);
		player.getFrames().sendAMask(0, 240, 620, 25, 0, 1150);
		
	}
	
	public void refreshShop(Player p, int shopID) {
		p.getFrames().sendItems(3, shops.getShop(shopID).items,	false);
	}
	
	public Shop shop(int slot) {
		return shops.getShop(slot);
	}
	
	public void buyItem(Player p, int shopID, int slot, int amount) {
		try {
			if(shop(shopID).members() &amp;&amp; !p.isDonator) {
				p.getFrames().sendChatMessage(0, &quot;You need to be a donator to access this shop!&quot;);
				return;
			}
			int itemID = shop(shopID).items.get(slot)[0];
			int currency = shop(shopID).getCurrency();
			int value = ItemConstants.getValue(itemID)*amount;
			if(p.getInventory().numberOf(currency) &lt; value) {
				p.getFrames().sendChatMessage(0, &quot;You don&#39;t have enough &quot; + (new Item(currency).getDefinition().name).toLowerCase() + &quot;.&quot;);
				return;
			} else {
				if(shop(shopID).items.get(slot)[1] == 0) {
					p.getFrames().sendChatMessage(0, &quot;Shop has run out of stock!&quot;);
					return;
				}
				if(shop(shopID).items.get(slot)[1] &lt; amount) {
					amount = shop(shopID).items.get(slot)[1];
					p.getFrames().sendChatMessage(0, &quot;Shop has run out of stock!&quot;);
				}
				boolean stackable = new Item(itemID, 1).getDefinition().isStackable();
				if(p.getInventory().getFreeSlots() &lt; amount &amp;&amp; stackable == false) {
					p.getFrames().sendChatMessage(0, &quot;Not enough space in your inventory.&quot;);
					return;
				} else if(p.getInventory().getFreeSlots() &lt; 1 &amp;&amp; stackable &amp;&amp; p.getInventory().contains(itemID)) {
					p.getFrames().sendChatMessage(0, &quot;Not enough space in your inventory.&quot;);					
					return;
				}
				shop(shopID).removeItem(slot, amount);
				p.getInventory().deleteItem(currency, value);
				p.getInventory().addItem(itemID, amount);
				p.getFrames().sendChatMessage(0, &quot;You purchase &quot; + amount + &quot; &quot; + (new Item(itemID).getDefinition().name).toLowerCase() + &quot;.&quot;);
				refreshShop(p, shopID);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void sellItem(Player p, int shopID, int slot, int amount) {
		if(!p.isDonator &amp;&amp; shop(shopID).members()) {
			p.getFrames().sendChatMessage(0, &quot;You need to be a donator to access this shop!&quot;);
			return;
		} 		
		Item item = new Item(p.getInventory().getContainer().get(slot).getId(), 1);
		boolean noted = item.getDefinition().isNoted();
		if(!shop(shopID).contains(noted ? item.getId()-1 : item.getId())) {
			p.getFrames().sendChatMessage(0, &quot;You can sell that item in this shop!&quot;);
			return;
		}
		int playerAmount = p.getInventory().getContainer().getNumberOf(new Item(item.getId(), 1));
		if(playerAmount == 0) 
			return;
		if(amount &gt; playerAmount) {
			amount = playerAmount;[/CODE]</description>
    
    <lastBuildDate>Sat, 30 Jun 2012 17:03:58 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/614-impression-614-shop-help/447565.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[614] Impression [614] Shop Help!</title>
        <dc:creator><![CDATA[@All_Time_Low All Time Low]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/all_time_low">@All_Time_Low</a> wrote:</p>
          <blockquote>
              <p>So i want it so that when i click on a item in the shop it’ll say the price of how many tokens is required to purchase the item.</p>
<p>Example: I left click an item in the shop (ags) and it says “This item’s price is currently 350 tokens.”</p>
<p>Does anyone know how that can be done?</p>
<p>This is a DragonKk Based Source.</p>
<p>ShopManager.Java</p>
<p>[CODE]package dragonkk.rs2rsps.model.shops;</p>
<p>import dragonkk.rs2rsps.model.Item;<br>
import dragonkk.rs2rsps.model.player.Player;<br>
import dragonkk.rs2rsps.model.ItemConstants;<br>
import dragonkk.rs2rsps.util.Misc;</p>
<p>/**</p>
<ul>
<li>
<span class="mention">@author</span> Mihan J.</li>
<li>
<a class="mention" href="/u/version">@version</a> 1.0<br>
*/</li>
</ul>
<p>public class ShopManager {</p>
<pre><code>public Shops shops;

public ShopManager() {
	shops = new Shops();
}

public void openShop(Player player, int i) {
	player.shopID = i;
	player.getFrames().sendString(Misc.formatPlayerNameForDisplay(shops.getShop(player.shopID).getName()), 620, 20);
	player.getFrames().sendItems(3, shops.getShop(player.shopID).items, false);
	player.getFrames().sendConfig(118, 3);
	player.getFrames().sendConfig(1496, 553);
	player.getFrames().sendConfig(532, 12852);
	player.getFrames().sendBConfig(199, -1);
	player.getFrames().sendInterface(620);
	player.getFrames().sendInventoryInterface(621);
	for (int index = 0; index &lt; 40; index++) {
		if (index == 0) {
			player.getFrames().sendBConfig(946 + index, 1000);
			continue;
		}
		player.getFrames().sendBConfig(946 + index, -1);
	}
	Object[] params = new Object[] { "Sell 50", "Sell 10", "Sell 5",
			"Sell 1", "Value", -1, 1, 7, 4, 93, 40697856 };
	player.getFrames().sendClientScript(149, params, "IviiiIsssss");
	player.getFrames().sendAMask(0, 27, 621, 0, 36, 1086);
	player.getFrames().sendAMask(0, 12, 620, 26, 0, 1150);
	player.getFrames().sendAMask(0, 240, 620, 25, 0, 1150);
	
}

public void refreshShop(Player p, int shopID) {
	p.getFrames().sendItems(3, shops.getShop(shopID).items,	false);
}

public Shop shop(int slot) {
	return shops.getShop(slot);
}

public void buyItem(Player p, int shopID, int slot, int amount) {
	try {
		if(shop(shopID).members() &amp;&amp; !p.isDonator) {
			p.getFrames().sendChatMessage(0, "You need to be a donator to access this shop!");
			return;
		}
		int itemID = shop(shopID).items.get(slot)[0];
		int currency = shop(shopID).getCurrency();
		int value = ItemConstants.getValue(itemID)*amount;
		if(p.getInventory().numberOf(currency) &lt; value) {
			p.getFrames().sendChatMessage(0, "You don't have enough " + (new Item(currency).getDefinition().name).toLowerCase() + ".");
			return;
		} else {
			if(shop(shopID).items.get(slot)[1] == 0) {
				p.getFrames().sendChatMessage(0, "Shop has run out of stock!");
				return;
			}
			if(shop(shopID).items.get(slot)[1] &lt; amount) {
				amount = shop(shopID).items.get(slot)[1];
				p.getFrames().sendChatMessage(0, "Shop has run out of stock!");
			}
			boolean stackable = new Item(itemID, 1).getDefinition().isStackable();
			if(p.getInventory().getFreeSlots() &lt; amount &amp;&amp; stackable == false) {
				p.getFrames().sendChatMessage(0, "Not enough space in your inventory.");
				return;
			} else if(p.getInventory().getFreeSlots() &lt; 1 &amp;&amp; stackable &amp;&amp; p.getInventory().contains(itemID)) {
				p.getFrames().sendChatMessage(0, "Not enough space in your inventory.");					
				return;
			}
			shop(shopID).removeItem(slot, amount);
			p.getInventory().deleteItem(currency, value);
			p.getInventory().addItem(itemID, amount);
			p.getFrames().sendChatMessage(0, "You purchase " + amount + " " + (new Item(itemID).getDefinition().name).toLowerCase() + ".");
			refreshShop(p, shopID);
		}
	} catch (Exception e) {
		e.printStackTrace();
	}
}

public void sellItem(Player p, int shopID, int slot, int amount) {
	if(!p.isDonator &amp;&amp; shop(shopID).members()) {
		p.getFrames().sendChatMessage(0, "You need to be a donator to access this shop!");
		return;
	} 		
	Item item = new Item(p.getInventory().getContainer().get(slot).getId(), 1);
	boolean noted = item.getDefinition().isNoted();
	if(!shop(shopID).contains(noted ? item.getId()-1 : item.getId())) {
		p.getFrames().sendChatMessage(0, "You can sell that item in this shop!");
		return;
	}
	int playerAmount = p.getInventory().getContainer().getNumberOf(new Item(item.getId(), 1));
	if(playerAmount == 0) 
		return;
	if(amount &gt; playerAmount) {
		amount = playerAmount;[/CODE]</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/614-impression-614-shop-help/447565/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/614-impression-614-shop-help/447565/1</link>
        <pubDate>Sat, 30 Jun 2012 17:03:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-447565-1</guid>
        <source url="https://forum.moparisthebest.com/t/614-impression-614-shop-help/447565.rss">[614] Impression [614] Shop Help!</source>
      </item>
  </channel>
</rss>
