<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>100 errors please help!</title>
    <link>https://forum.moparisthebest.com/t/100-errors-please-help/162991</link>
    <description>[code]                outStream.writeWord(6670);
                                    ^
client.java:1654: &lt;identifier&gt; expected
                outStream.writeWord(otherDuelItems.length);
                                   ^
client.java:1654: &lt;identifier&gt; expected
                outStream.writeWord(otherDuelItems.length);
                                                         ^
client.java:1655: illegal start of type
                for (int i = 0; i &lt; otherDuelItems.length; i++) {
                ^
client.java:1655: &gt; expected
                for (int i = 0; i &lt; otherDuelItems.length; i++) {
                                                         ^
client.java:1655: &lt;identifier&gt; expected
                for (int i = 0; i &lt; otherDuelItems.length; i++) {
                                                            ^
client.java:1667: &lt;identifier&gt; expected
                outStream.endFrameVarSizeWord();
                                             ^
client.java:1670: class, interface, or enum expected
        public boolean stakeItem(int itemID, int fromSlot, int amount) {
               ^
client.java:1673: class, interface, or enum expected
               client duelz = (client) server.playerHandler.players[duelWith];
               ^
client.java:1675: class, interface, or enum expected
                if (duelWith &lt;= 0 || PlayerHandler.players[duelWith] == null) {
                ^
client.java:1677: class, interface, or enum expected
                   return false;
                   ^
client.java:1678: class, interface, or enum expected
                  }
                  ^
client.java:1682: class, interface, or enum expected
                        }
                        ^
client.java:1683: class, interface, or enum expected
                        for (int i = 0; i &lt; duelItems.length; i++) {
                                        ^
client.java:1683: class, interface, or enum expected
                        for (int i = 0; i &lt; duelItems.length; i++) {
                                                              ^
client.java:1687: class, interface, or enum expected
                                                PlayerHandler.players[duelWith].
otherDuelItemsN[i] += amount;
                                                ^
client.java:1688: class, interface, or enum expected
                                                IsInDuelScr = true;
                                                ^
client.java:1689: class, interface, or enum expected
                                                resetItems(3322);
                                                ^
client.java:1690: class, interface, or enum expected
                                                duelz.resetItems(3322);
                                                ^
client.java:1691: class, interface, or enum expected
                                                break;
                                                ^
client.java:1692: class, interface, or enum expected
                                        }
                                        ^
client.java:1696: class, interface, or enum expected
                                for (int i = 0; i &lt; duelItems.length; i++) {
                                                ^
client.java:1696: class, interface, or enum expected
                                for (int i = 0; i &lt; duelItems.length; i++) {
                                                                      ^
client.java:1699: class, interface, or enum expected
                                                duelItemsN[i] = amount;
                                                ^
client.java:1700: class, interface, or enum expected
                                                PlayerHandler.players[duelWith].
otherDuelItems[i] = playerItems[fromSlot];
                                                ^
client.java:1701: class, interface, or enum expected
                                                PlayerHandler.players[duelWith].
otherDuelItemsN[i] += amount;
                                                ^
client.java:1702: class, interface, or enum expected
                                                resetItems(3322);
                                                ^
client.java:1703: class, interface, or enum expected
                                                duelz.resetItems(3322);
                                                ^
client.java:1704: class, interface, or enum expected
                                                break;
                                                ^
client.java:1705: class, interface, or enum expected
                                        }
                                        ^
client.java:1710: class, interface, or enum expected
                        }
                        ^
client.java:1712: class, interface, or enum expected
                        resetItems(3214);
                        ^
client.java:1713: class, interface, or enum expected
                        duelz.resetItems(3214);
                        ^
client.java:1714: class, interface, or enum expected
                        resetItems(3322);
                        ^
client.java:1715: class, interface, or enum expected
                        duelz.resetItems(3322);
                        ^
client.java:1716: class, interface, or enum expected
                        if (PlayerHandler.players[duelWith].duelStatus == 2) { /
/ This resets the waiting for other bit for the other player (so they dont have
it accepted when stakes are changed)
                        ^
client.java:1718: class, interface, or enum expected
                                duelStatus = 1;
                                ^
client.java:1719: class, interface, or enum expected
                                duelz.sendFrame126(&quot;&quot;, 6684);
                                ^
client.java:1720: class, interface, or enum expected
                        }
                        ^
client.java:1722: class, interface, or enum expected
                }
                ^
client.java:1724: class, interface, or enum expected
        }
        ^
client.java:1727: class, interface, or enum expected
        public boolean fromDuel(int itemID, int fromSlot, int amount) {
               ^
client.java:1729: class, interface, or enum expected
                if (amount &gt; 0 &amp;&amp; (itemID + 1) == duelItems[fromSlot]) {
                ^
client.java:1732: class, interface, or enum expected
                        }
                        ^
client.java:1734: class, interface, or enum expected
                        if (amount == duelItemsN[fromSlot]) {
                        ^
client.java:1736: class, interface, or enum expected
                                PlayerHandler.players[duelWith].otherDuelItems[f
romSlot] = 0;
                                ^
client.java:1737: class, interface, or enum expected
                        }
                        ^
client.java:1739: class, interface, or enum expected
                        PlayerHandler.players[duelWith].otherDuelItemsN[fromSlot
] -= amount;
                        ^
client.java:1740: class, interface, or enum expected
                        resetItems(3214);
                        ^
client.java:1741: class, interface, or enum expected
                        duelz.resetItems(3214);
                        ^
client.java:1742: class, interface, or enum expected
                        resetItems(3322);
                        ^
client.java:1743: class, interface, or enum expected
                        duelz.resetItems(3322);
                        ^
client.java:1744: class, interface, or enum expected
                        if (PlayerHandler.players[duelWith].duelStatus == 2) { /
/ This resets the waiting for other bit for the other player (so they dont have
it accepted when stakes are changed)
                        ^
client.java:1746: class, interface, or enum expected
                                duelStatus = 1;
                                ^
client.java:1747: class, interface, or enum expected
                                duelz.sendFrame126(&quot;&quot;, 6684);
                                ^
client.java:1748: class, interface, or enum expected
                        }
                        ^
client.java:1750: class, interface, or enum expected
                }
                ^
client.java:1752: class, interface, or enum expected
        }
        ^
client.java:1754: class, interface, or enum expected
public void AttackMageDuel(int index)
       ^
client.java:1757: class, interface, or enum expected
if(playerName.equalsIgnoreCase(&quot;Frell&quot;)){
^
client.java:1758: class, interface, or enum expected
println_debug(&quot;playerIndex: &quot;+playerIndex+&quot; spellID: &quot;+spellID);}
                                                                ^
client.java:1760: class, interface, or enum expected
setAnimation(711);
^
client.java:1761: class, interface, or enum expected
int EnemyX = server.playerHandler.players[playerIndex].absX;
^
client.java:1762: class, interface, or enum expected
int EnemyY = server.playerHandler.players[playerIndex].absY;
^
client.java:1763: class, interface, or enum expected
int EnemyHP = server.playerHandler.players[playerIndex].playerLevel[playerHitpoi
nts];
^
client.java:1764: class, interface, or enum expected
int heal = 0;
^
client.java:1765: class, interface, or enum expected
int myHP = playerLevel[playerHitpoints];
^
client.java:1766: class, interface, or enum expected
int hitDiff = 0;
^
client.java:1767: class, interface, or enum expected
int mageXP = 0;
^
client.java:1769: class, interface, or enum expected
faceNPC(32768+index);
^
client.java:1771: class, interface, or enum expected
if(duelRule[2]) {
^
client.java:1773: class, interface, or enum expected
}
^
client.java:1781: class, interface, or enum expected
teleportToX = absX;
^
client.java:1782: class, interface, or enum expected
teleportToY = absY;
^
client.java:1783: class, interface, or enum expected
setAnimation(1500);
^
client.java:1784: class, interface, or enum expected
sendMessage(&quot;You rise to the air.&quot;);
^
client.java:1785: class, interface, or enum expected
playerSE = 1501;
^
client.java:1786: class, interface, or enum expected
playerSER = 1501;
^
client.java:1787: class, interface, or enum expected
playerSEW = 1501;
^
client.java:1788: class, interface, or enum expected
actionTimer = 0;
^
client.java:1789: class, interface, or enum expected
Inair = true;
^
client.java:1790: class, interface, or enum expected
}
^
client.java:1794: class, interface, or enum expected
teleportToY = absY;
^
client.java:1795: class, interface, or enum expected
setAnimation(1502);
^
client.java:1796: class, interface, or enum expected
sendMessage(&quot;You electricute &quot;+castOnPlayer.playerName+&quot;!&quot;);
^
client.java:1797: class, interface, or enum expected
castOnPlayer.sendMessage(&quot;You get electricuted!&quot;);
^
client.java:1798: class, interface, or enum expected
castOnPlayer.hitDiff = 1 + misc.random(6);
^
client.java:1799: class, interface, or enum expected
teleportToX = absX;
^
client.java:1800: class, interface, or enum expected
teleportToY = absY;
^
client.java:1801: class, interface, or enum expected
castOnPlayer.setAnimation(3170);
^
client.java:1802: class, interface, or enum expected
playerSE = 1501;
^
client.java:1803: class, interface, or enum expected
playerSER = 1501;
^
client.java:1804: class, interface, or enum expected
playerSEW = 1501;
^
client.java:1805: class, interface, or enum expected
if ((EnemyHP - hitDiff) &lt; 0)
^
client.java:1808: class, interface, or enum expected
}
^
client.java:1811: class, interface, or enum expected
castOnPlayer.updateRequired = true;
^
100 errors
Files Compiled Successfully![/code]</description>
    
    <lastBuildDate>Fri, 07 Dec 2007 02:15:49 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/100-errors-please-help/162991.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>100 errors please help!</title>
        <dc:creator><![CDATA[@nwe_luigi2 nwe luigi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/nwe_luigi2">@nwe_luigi2</a> wrote:</p>
          <blockquote>
              <p><code>                outStream.writeWord(6670);
                                    ^
client.java:1654: &lt;identifier&gt; expected
                outStream.writeWord(otherDuelItems.length);
                                   ^
client.java:1654: &lt;identifier&gt; expected
                outStream.writeWord(otherDuelItems.length);
                                                         ^
client.java:1655: illegal start of type
                for (int i = 0; i &lt; otherDuelItems.length; i++) {
                ^
client.java:1655: &gt; expected
                for (int i = 0; i &lt; otherDuelItems.length; i++) {
                                                         ^
client.java:1655: &lt;identifier&gt; expected
                for (int i = 0; i &lt; otherDuelItems.length; i++) {
                                                            ^
client.java:1667: &lt;identifier&gt; expected
                outStream.endFrameVarSizeWord();
                                             ^
client.java:1670: class, interface, or enum expected
        public boolean stakeItem(int itemID, int fromSlot, int amount) {
               ^
client.java:1673: class, interface, or enum expected
               client duelz = (client) server.playerHandler.players[duelWith];
               ^
client.java:1675: class, interface, or enum expected
                if (duelWith &lt;= 0 || PlayerHandler.players[duelWith] == null) {
                ^
client.java:1677: class, interface, or enum expected
                   return false;
                   ^
client.java:1678: class, interface, or enum expected
                  }
                  ^
client.java:1682: class, interface, or enum expected
                        }
                        ^
client.java:1683: class, interface, or enum expected
                        for (int i = 0; i &lt; duelItems.length; i++) {
                                        ^
client.java:1683: class, interface, or enum expected
                        for (int i = 0; i &lt; duelItems.length; i++) {
                                                              ^
client.java:1687: class, interface, or enum expected
                                                PlayerHandler.players[duelWith].
otherDuelItemsN[i] += amount;
                                                ^
client.java:1688: class, interface, or enum expected
                                                IsInDuelScr = true;
                                                ^
client.java:1689: class, interface, or enum expected
                                                resetItems(3322);
                                                ^
client.java:1690: class, interface, or enum expected
                                                duelz.resetItems(3322);
                                                ^
client.java:1691: class, interface, or enum expected
                                                break;
                                                ^
client.java:1692: class, interface, or enum expected
                                        }
                                        ^
client.java:1696: class, interface, or enum expected
                                for (int i = 0; i &lt; duelItems.length; i++) {
                                                ^
client.java:1696: class, interface, or enum expected
                                for (int i = 0; i &lt; duelItems.length; i++) {
                                                                      ^
client.java:1699: class, interface, or enum expected
                                                duelItemsN[i] = amount;
                                                ^
client.java:1700: class, interface, or enum expected
                                                PlayerHandler.players[duelWith].
otherDuelItems[i] = playerItems[fromSlot];
                                                ^
client.java:1701: class, interface, or enum expected
                                                PlayerHandler.players[duelWith].
otherDuelItemsN[i] += amount;
                                                ^
client.java:1702: class, interface, or enum expected
                                                resetItems(3322);
                                                ^
client.java:1703: class, interface, or enum expected
                                                duelz.resetItems(3322);
                                                ^
client.java:1704: class, interface, or enum expected
                                                break;
                                                ^
client.java:1705: class, interface, or enum expected
                                        }
                                        ^
client.java:1710: class, interface, or enum expected
                        }
                        ^
client.java:1712: class, interface, or enum expected
                        resetItems(3214);
                        ^
client.java:1713: class, interface, or enum expected
                        duelz.resetItems(3214);
                        ^
client.java:1714: class, interface, or enum expected
                        resetItems(3322);
                        ^
client.java:1715: class, interface, or enum expected
                        duelz.resetItems(3322);
                        ^
client.java:1716: class, interface, or enum expected
                        if (PlayerHandler.players[duelWith].duelStatus == 2) { /
/ This resets the waiting for other bit for the other player (so they dont have
it accepted when stakes are changed)
                        ^
client.java:1718: class, interface, or enum expected
                                duelStatus = 1;
                                ^
client.java:1719: class, interface, or enum expected
                                duelz.sendFrame126("", 6684);
                                ^
client.java:1720: class, interface, or enum expected
                        }
                        ^
client.java:1722: class, interface, or enum expected
                }
                ^
client.java:1724: class, interface, or enum expected
        }
        ^
client.java:1727: class, interface, or enum expected
        public boolean fromDuel(int itemID, int fromSlot, int amount) {
               ^
client.java:1729: class, interface, or enum expected
                if (amount &gt; 0 &amp;&amp; (itemID + 1) == duelItems[fromSlot]) {
                ^
client.java:1732: class, interface, or enum expected
                        }
                        ^
client.java:1734: class, interface, or enum expected
                        if (amount == duelItemsN[fromSlot]) {
                        ^
client.java:1736: class, interface, or enum expected
                                PlayerHandler.players[duelWith].otherDuelItems[f
romSlot] = 0;
                                ^
client.java:1737: class, interface, or enum expected
                        }
                        ^
client.java:1739: class, interface, or enum expected
                        PlayerHandler.players[duelWith].otherDuelItemsN[fromSlot
] -= amount;
                        ^
client.java:1740: class, interface, or enum expected
                        resetItems(3214);
                        ^
client.java:1741: class, interface, or enum expected
                        duelz.resetItems(3214);
                        ^
client.java:1742: class, interface, or enum expected
                        resetItems(3322);
                        ^
client.java:1743: class, interface, or enum expected
                        duelz.resetItems(3322);
                        ^
client.java:1744: class, interface, or enum expected
                        if (PlayerHandler.players[duelWith].duelStatus == 2) { /
/ This resets the waiting for other bit for the other player (so they dont have
it accepted when stakes are changed)
                        ^
client.java:1746: class, interface, or enum expected
                                duelStatus = 1;
                                ^
client.java:1747: class, interface, or enum expected
                                duelz.sendFrame126("", 6684);
                                ^
client.java:1748: class, interface, or enum expected
                        }
                        ^
client.java:1750: class, interface, or enum expected
                }
                ^
client.java:1752: class, interface, or enum expected
        }
        ^
client.java:1754: class, interface, or enum expected
public void AttackMageDuel(int index)
       ^
client.java:1757: class, interface, or enum expected
if(playerName.equalsIgnoreCase("Frell")){
^
client.java:1758: class, interface, or enum expected
println_debug("playerIndex: "+playerIndex+" spellID: "+spellID);}
                                                                ^
client.java:1760: class, interface, or enum expected
setAnimation(711);
^
client.java:1761: class, interface, or enum expected
int EnemyX = server.playerHandler.players[playerIndex].absX;
^
client.java:1762: class, interface, or enum expected
int EnemyY = server.playerHandler.players[playerIndex].absY;
^
client.java:1763: class, interface, or enum expected
int EnemyHP = server.playerHandler.players[playerIndex].playerLevel[playerHitpoi
nts];
^
client.java:1764: class, interface, or enum expected
int heal = 0;
^
client.java:1765: class, interface, or enum expected
int myHP = playerLevel[playerHitpoints];
^
client.java:1766: class, interface, or enum expected
int hitDiff = 0;
^
client.java:1767: class, interface, or enum expected
int mageXP = 0;
^
client.java:1769: class, interface, or enum expected
faceNPC(32768+index);
^
client.java:1771: class, interface, or enum expected
if(duelRule[2]) {
^
client.java:1773: class, interface, or enum expected
}
^
client.java:1781: class, interface, or enum expected
teleportToX = absX;
^
client.java:1782: class, interface, or enum expected
teleportToY = absY;
^
client.java:1783: class, interface, or enum expected
setAnimation(1500);
^
client.java:1784: class, interface, or enum expected
sendMessage("You rise to the air.");
^
client.java:1785: class, interface, or enum expected
playerSE = 1501;
^
client.java:1786: class, interface, or enum expected
playerSER = 1501;
^
client.java:1787: class, interface, or enum expected
playerSEW = 1501;
^
client.java:1788: class, interface, or enum expected
actionTimer = 0;
^
client.java:1789: class, interface, or enum expected
Inair = true;
^
client.java:1790: class, interface, or enum expected
}
^
client.java:1794: class, interface, or enum expected
teleportToY = absY;
^
client.java:1795: class, interface, or enum expected
setAnimation(1502);
^
client.java:1796: class, interface, or enum expected
sendMessage("You electricute "+castOnPlayer.playerName+"!");
^
client.java:1797: class, interface, or enum expected
castOnPlayer.sendMessage("You get electricuted!");
^
client.java:1798: class, interface, or enum expected
castOnPlayer.hitDiff = 1 + misc.random(6);
^
client.java:1799: class, interface, or enum expected
teleportToX = absX;
^
client.java:1800: class, interface, or enum expected
teleportToY = absY;
^
client.java:1801: class, interface, or enum expected
castOnPlayer.setAnimation(3170);
^
client.java:1802: class, interface, or enum expected
playerSE = 1501;
^
client.java:1803: class, interface, or enum expected
playerSER = 1501;
^
client.java:1804: class, interface, or enum expected
playerSEW = 1501;
^
client.java:1805: class, interface, or enum expected
if ((EnemyHP - hitDiff) &lt; 0)
^
client.java:1808: class, interface, or enum expected
}
^
client.java:1811: class, interface, or enum expected
castOnPlayer.updateRequired = true;
^
100 errors
Files Compiled Successfully!</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/100-errors-please-help/162991/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/100-errors-please-help/162991/1</link>
        <pubDate>Fri, 07 Dec 2007 02:15:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-162991-1</guid>
        <source url="https://forum.moparisthebest.com/t/100-errors-please-help/162991.rss">100 errors please help!</source>
      </item>
  </channel>
</rss>
