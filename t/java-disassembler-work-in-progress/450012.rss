<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Java Disassembler (Work in progress)</title>
    <link>https://forum.moparisthebest.com/t/java-disassembler-work-in-progress/450012</link>
    <description>So today at work I started this project...

This is a start to a disassembler project... certain components need
a serious refactor. The purpose of this was to become more familiar
with the JVM spec/class file format. The final outcome of this
adventure should be a lot cleaner!

Notes:
	* Only a few instructions are supported (for testing purposes)
	* Instruction arguments are ignored
	* Exception table is ignored
	* Some attribute parsing isn&#39;t impl yet
	* You&#39;re really only supposed to use this on the supplied &#39;test.class&#39; (this is not a complete project)
	* If you don&#39;t feel like compiling and executing yourself, take a look at:
		&#39;test.disassembler.asm&#39; for &#39;test.class&#39; output in this disassembler
		&#39;test.javap.asm&#39; for &#39;test.class&#39; output in oracle&#39;s disassembler (javap)
	* I haven&#39;t a clue when I&#39;ll finalize this project, so just stay tuned - it is near the top of my list, though!

[b]github:[/b]
https://github.com/t4/disassembler

Disassembler output so far:
[code]
Magic Number: -889275714
Minor Version: 0
Major Version: 51

Class Name: test
Super Class: java/lang/Object
Access Flags: public synchronized
Interfaces: []

Fields: 0

Methods: 2
	Name: &lt;init&gt;
	Access Flags: public
	Descriptor: ()V
	Attributes: 1
	Code:
		2a b7 0 8 b1 
		[aload_0, invokespecial, return]

	Name: main
	Access Flags: public static
	Descriptor: ([Ljava/lang/String;)V
	Attributes: 1
	Code:
		b2 0 10 12 16 b6 0 18 b1 
		[getstatic, ldc, invokevirtual, return]


Attributes: 1
	SourceFile: test.java
[/code]
i do realize this is very sloppy at times, but i plan to do a major rework of the design. this branch is just to mess around in. i do plan on finishing it. some of the naming is atrocious... The nature of this isn&#39;t very OO at all, in fact, I may just port the final project to C.

if anyone has any suggestions as far as parsing goes, feel free to comment.</description>
    
    <lastBuildDate>Wed, 25 Jul 2012 03:21:08 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/java-disassembler-work-in-progress/450012.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Java Disassembler (Work in progress)</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="3" data-topic="450012">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/abraham2119/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> abraham2119:</div>
<blockquote>
<p>If you plan on porting it to C, take a look at the bytecode library I wrote a few years ago: <a href="http://www.moparisthebest.com/smf/index.php/topic,394024.msg2929395.html" rel="nofollow noopener">http://www.moparisthebest.com/smf/index.php/topic,394024.msg2929395.html</a></p>
</blockquote>
</aside>
<p>oh cool, thanks</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-disassembler-work-in-progress/450012/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-disassembler-work-in-progress/450012/4</link>
        <pubDate>Wed, 25 Jul 2012 03:21:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-450012-4</guid>
        <source url="https://forum.moparisthebest.com/t/java-disassembler-work-in-progress/450012.rss">Java Disassembler (Work in progress)</source>
      </item>
      <item>
        <title>Java Disassembler (Work in progress)</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>If you plan on porting it to C, take a look at the bytecode library I wrote a few years ago: <a href="http://www.moparisthebest.com/smf/index.php/topic,394024.msg2929395.html" rel="nofollow noopener">http://www.moparisthebest.com/smf/index.php/topic,394024.msg2929395.html</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-disassembler-work-in-progress/450012/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-disassembler-work-in-progress/450012/3</link>
        <pubDate>Tue, 24 Jul 2012 22:59:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-450012-3</guid>
        <source url="https://forum.moparisthebest.com/t/java-disassembler-work-in-progress/450012.rss">Java Disassembler (Work in progress)</source>
      </item>
      <item>
        <title>Java Disassembler (Work in progress)</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>[quote=“The Enforcer, post:8, topic:450013”][quote author=t4 link=topic=552907.msg4051439#msg4051439 date=1342557449]<br>
I may just port the final project to C.<br>
[/quote]</p>
<p>Do yourself a favor and use the superior C++ language.[/quote]</p>
<div class="lazyYT" data-youtube-id="lITBGjNEp08" data-youtube-title="how about no!" data-width="480" data-height="270" data-parameters="feature=oembed&amp;wmode=opaque"></div>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-disassembler-work-in-progress/450012/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-disassembler-work-in-progress/450012/2</link>
        <pubDate>Wed, 18 Jul 2012 11:45:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-450012-2</guid>
        <source url="https://forum.moparisthebest.com/t/java-disassembler-work-in-progress/450012.rss">Java Disassembler (Work in progress)</source>
      </item>
      <item>
        <title>Java Disassembler (Work in progress)</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <p>So today at work I started this project…</p>
<p>This is a start to a disassembler project… certain components need<br>
a serious refactor. The purpose of this was to become more familiar<br>
with the JVM spec/class file format. The final outcome of this<br>
adventure should be a lot cleaner!</p>
<p>Notes:<br>
* Only a few instructions are supported (for testing purposes)<br>
* Instruction arguments are ignored<br>
* Exception table is ignored<br>
* Some attribute parsing isn’t impl yet<br>
* You’re really only supposed to use this on the supplied ‘test.class’ (this is not a complete project)<br>
* If you don’t feel like compiling and executing yourself, take a look at:<br>
‘test.disassembler.asm’ for ‘test.class’ output in this disassembler<br>
‘test.javap.asm’ for ‘test.class’ output in oracle’s disassembler (javap)<br>
* I haven’t a clue when I’ll finalize this project, so just stay tuned - it is near the top of my list, though!</p>
<p><span class="bbcode-b">github:</span><br>
<a href="https://github.com/t4/disassembler" class="onebox" target="_blank" rel="nofollow noopener">https://github.com/t4/disassembler</a></p>
<p>Disassembler output so far:</p>
<pre><code class="lang-auto">Magic Number: -889275714
Minor Version: 0
Major Version: 51

Class Name: test
Super Class: java/lang/Object
Access Flags: public synchronized
Interfaces: []

Fields: 0

Methods: 2
	Name: &lt;init&gt;
	Access Flags: public
	Descriptor: ()V
	Attributes: 1
	Code:
		2a b7 0 8 b1 
		[aload_0, invokespecial, return]

	Name: main
	Access Flags: public static
	Descriptor: ([Ljava/lang/String;)V
	Attributes: 1
	Code:
		b2 0 10 12 16 b6 0 18 b1 
		[getstatic, ldc, invokevirtual, return]


Attributes: 1
	SourceFile: test.java</code></pre>
<p>i do realize this is very sloppy at times, but i plan to do a major rework of the design. this branch is just to mess around in. i do plan on finishing it. some of the naming is atrocious… The nature of this isn’t very OO at all, in fact, I may just port the final project to C.</p>
<p>if anyone has any suggestions as far as parsing goes, feel free to comment.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-disassembler-work-in-progress/450012/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-disassembler-work-in-progress/450012/1</link>
        <pubDate>Tue, 17 Jul 2012 20:37:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-450012-1</guid>
        <source url="https://forum.moparisthebest.com/t/java-disassembler-work-in-progress/450012.rss">Java Disassembler (Work in progress)</source>
      </item>
  </channel>
</rss>
