<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Elevators: Stairs, Ladders etc</title>
    <link>https://forum.moparisthebest.com/t/elevators-stairs-ladders-etc/525606</link>
    <description>This is a class to manage the use of stairs and ladders and other objects that alter a player&#39;s height level.

I use xml to load my elevator data, which is what the loadElevators() method does, but I&#39;ve edited the class here to make it more simplistic for others wanting to use it. 

To add a new elevator that only changes the height to 1 or 0, add the object id of that elevator to this array:
[code=java]	/**
	 * An array containing the object id&#39;s of default elevators that
	 * only alter&#39;s a player&#39;s height by 1 or -1.
	 */
	private static int[] elevators = {
		// Add ID&#39;s.
	};[/code]

For other elevators that you want to change the height by more than that, add another &#39;customElevators.add(new CustomElevator(upElevatorId, downElevatorId, upHeight, downHeight));&#39; to:
[code=java]	/**
	 * A list of custom elevators. These alter a player&#39;s height by a
	 * custom amount, rather than just 1 or -1.
	 */
	private static List&lt;CustomElevator&gt; customElevators = new ArrayList&lt;CustomElevator&gt;();
	static {
		/**
		 * upElevatorId: The object id of the elevator that sends you up.
		 * downElevatorId: The object id of the corresponding elevator that sends you down.
		 * upHeight: The height you change to when you use the upElevator.
		 * downHeight: The height you change to when you use the downElevator.
		 */
		//customElevators.add(new CustomElevator(upElevatorId, downElevatorId, upHeight, downHeight));
	}[/code]

And here&#39;s the full class:

[code=java]package org.iClarity.rs2.model.object;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.List;

import org.iClarity.rs2.model.player.Player;
import org.iClarity.rs2.util.Position;
import org.iClarity.rs2.util.XStreamUtil;

/**
 * Manages all height-level-changing objects. i.e. stairs, ladders, etc.
 * @author PrimaDude
 */
public class ElevationObjects {
	
	/**
	 * An array containing the object id&#39;s of default elevators that
	 * only altar&#39;s a player&#39;s height by 1 or -1.
	 */
	private static int[] elevators = {
		// Add ID&#39;s.
	};
	
	/**
	 * A list of custom elevators. These altar a player&#39;s height by a
	 * custom amount, rather than just 1 or -1.
	 */
	private static List&lt;CustomElevator&gt; customElevators = new ArrayList&lt;CustomElevator&gt;();
	static {
		/**
		 * upElevatorId: The object id of the elevator that sends you up.
		 * downElevatorId: The object id of the corresponding elevator that sends you down.
		 * upHeight: The height you change to when you use the upElevator.
		 * downHeight: The height you change to when you use the downElevator.
		 */
		//customElevators.add(new CustomElevator(upElevatorId, downElevatorId, upHeight, downHeight));
	}
	
	/**
	 * Checks if the object is a custom elevator.
	 * @param object The object id.
	 * @return True or false.
	 */
	private boolean isCustomElevator(int object) {
		return !(getCustomElevator(object) == null);
	}
	
	/**
	 * Checks if the object is an elevator.
	 * @param object The object id.
	 * @return True or false.
	 */
	private boolean isElevator(int object) {
		for (int stair : elevators) {
			if (object == stair) {
				return true;
			}
		}
		return false;
	}
	
	/**
	 * Gets the instance of the custom elevator.
	 * @param object The elevator object id.
	 * @return The CustomElevator instance.
	 */
	private CustomElevator getCustomElevator(int object) {
		for (CustomElevator elevator : customElevators) {
			if (object == elevator.upElevatorId) {
				return elevator;
			} else if (object == elevator.getDownElevatorId()) {
				return elevator;
			}
		}
		return null;
	}
	
	/**
	 * Moves the player to the appropriate height-level.
	 * @param player The player.
	 * @param object The id of the used object.
	 */
	public void elevate(Player player, int object) {
		if (!isElevator(object)) {
			return;
		}
		Position newPos = player.getPosition();
		if (isCustomElevator(object)) {
			CustomElevator elevator = getCustomElevator(object);
			newPos.setZ((object == elevator.getUpElevatorId()) ? elevator.getUpHeight() : elevator.getDownHeight());
		} else {
			newPos.setZ((player.getPosition().getZ() == 0) ? 1 : 0);
		}
		player.teleport(newPos);
	}
	
	/**
	 * Loads the elevator ID&#39;s.
	 * @throws FileNotFoundException If the specified file cannot be found.
	 */
	@SuppressWarnings(&quot;unchecked&quot;)
	public static void loadElevators() throws FileNotFoundException {
		List&lt;Integer&gt; list = (List&lt;Integer&gt;) XStreamUtil.getXStream().fromXML(new FileInputStream(&quot;data/elevators.xml&quot;));
		elevators = new int[list.size()];
		for (int slot = 0; slot &lt; list.size(); slot++) {
			elevators[slot] = list.get(slot);
		}
	}
	
	/**
	 * Used for custom height-level changes.
	 * Default height-level change is dependent upon
	 * the player&#39;s current height-level.
	 * @author PrimaDude
	 */
	private class CustomElevator {
		
		/**
		 * The object id of the elevator going up.
		 */
		private int upElevatorId;
		
		/**
		 * The object id of the elevator going down.
		 */
		private int downElevatorId;
		
		/**
		 * The height-level to change to when going up.
		 */
		private int upHeight;
		
		/**
		 * The height-level to change to when going down.
		 */
		private int downHeight;

		/**
		 * Gets the up-elevator id.
		 * @return The up-elevator id.
		 */
		public int getUpElevatorId() {
			return upElevatorId;
		}

		/**
		 * Gets the down-elevator id.
		 * @return The down-elevator id.
		 */
		public int getDownElevatorId() {
			return downElevatorId;
		}

		/**
		 * Gets the up-height.
		 * @return The up-height.
		 */
		public int getUpHeight() {
			return upHeight;
		}

		/**
		 * Gets the down-height.
		 * @return The down-height.
		 */
		public int getDownHeight() {
			return downHeight;
		}

		/**
		 * Constructs a new CustomElevator.
		 * @param upElevatorId The object id of the elevator going up.
		 * @param downElevatorId The object id of the elevator going down.
		 * @param upHeight The height-level to change to when going up.
		 * @param downHeight The height-level to change to when going down.
		 */
		private CustomElevator(int upElevatorId, int downElevatorId, int upHeight, int downHeight) {
			this.upElevatorId = upElevatorId;
			this.downElevatorId = downElevatorId;
			this.upHeight = upHeight;
			this.downHeight = downHeight;
		}
		
	}

}[/code]

It will obviously need editing to work with your server, which shouldn&#39;t be hard at all.</description>
    
    <lastBuildDate>Sun, 21 Jul 2013 19:03:31 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/elevators-stairs-ladders-etc/525606.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Elevators: Stairs, Ladders etc</title>
        <dc:creator><![CDATA[@arham_4 arham 4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/arham_4">@arham_4</a> wrote:</p>
          <blockquote>
              <p>[quote=“Primadude, post:3, topic:525606”][quote author=arham 4 link=topic=644347.msg4335762#msg4335762 date=1374344080]<br>
Much rather use XML but I like this.<br>
[/quote]</p>
<p>Like I said, I use xml to load my data, but not everyone does and the way I’ve edited the class slightly here makes it simpler for those who do not want to. If they do, then it shouldn’t be hard for them to implement it.[/quote]<br>
Oh, sorry, I didn’t read that.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/elevators-stairs-ladders-etc/525606/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/elevators-stairs-ladders-etc/525606/5</link>
        <pubDate>Sun, 21 Jul 2013 19:03:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-525606-5</guid>
        <source url="https://forum.moparisthebest.com/t/elevators-stairs-ladders-etc/525606.rss">Elevators: Stairs, Ladders etc</source>
      </item>
      <item>
        <title>Elevators: Stairs, Ladders etc</title>
        <dc:creator><![CDATA[@Pwnd Pwnd]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pwnd">@Pwnd</a> wrote:</p>
          <blockquote>
              <p>[quote=“Primadude, post:3, topic:525606”][quote author=arham 4 link=topic=644347.msg4335762#msg4335762 date=1374344080]<br>
Much rather use XML but I like this.<br>
[/quote]</p>
<p>Like I said, I use xml to load my data, but not everyone does and the way I’ve edited the class slightly here makes it simpler for those who do not want to. If they do, then it shouldn’t be hard for them to implement it.[/quote]You should encourage people to use good practices.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/elevators-stairs-ladders-etc/525606/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/elevators-stairs-ladders-etc/525606/4</link>
        <pubDate>Sun, 21 Jul 2013 18:11:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-525606-4</guid>
        <source url="https://forum.moparisthebest.com/t/elevators-stairs-ladders-etc/525606.rss">Elevators: Stairs, Ladders etc</source>
      </item>
      <item>
        <title>Elevators: Stairs, Ladders etc</title>
        <dc:creator><![CDATA[@primadude Primadude]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/primadude">@primadude</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="525606">
<div class="title">
<div class="quote-controls"></div>
 arham 4:</div>
<blockquote>
<p>Much rather use XML but I like this.</p>
</blockquote>
</aside>
<p>Like I said, I use xml to load my data, but not everyone does and the way I’ve edited the class slightly here makes it simpler for those who do not want to. If they do, then it shouldn’t be hard for them to implement it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/elevators-stairs-ladders-etc/525606/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/elevators-stairs-ladders-etc/525606/3</link>
        <pubDate>Sat, 20 Jul 2013 18:15:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-525606-3</guid>
        <source url="https://forum.moparisthebest.com/t/elevators-stairs-ladders-etc/525606.rss">Elevators: Stairs, Ladders etc</source>
      </item>
      <item>
        <title>Elevators: Stairs, Ladders etc</title>
        <dc:creator><![CDATA[@arham_4 arham 4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/arham_4">@arham_4</a> wrote:</p>
          <blockquote>
              <p>Much rather use XML but I like this.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/elevators-stairs-ladders-etc/525606/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/elevators-stairs-ladders-etc/525606/2</link>
        <pubDate>Sat, 20 Jul 2013 18:14:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-525606-2</guid>
        <source url="https://forum.moparisthebest.com/t/elevators-stairs-ladders-etc/525606.rss">Elevators: Stairs, Ladders etc</source>
      </item>
      <item>
        <title>Elevators: Stairs, Ladders etc</title>
        <dc:creator><![CDATA[@primadude Primadude]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/primadude">@primadude</a> wrote:</p>
          <blockquote>
              <p>This is a class to manage the use of stairs and ladders and other objects that alter a player’s height level.</p>
<p>I use xml to load my elevator data, which is what the loadElevators() method does, but I’ve edited the class here to make it more simplistic for others wanting to use it.</p>
<p>To add a new elevator that only changes the height to 1 or 0, add the object id of that elevator to this array:</p>
<p><code>	/**
	 * An array containing the object id's of default elevators that
	 * only alter's a player's height by 1 or -1.
	 */
	private static int[] elevators = {
		// Add ID's.
	};</code></p>
<p>For other elevators that you want to change the height by more than that, add another ‘customElevators.add(new CustomElevator(upElevatorId, downElevatorId, upHeight, downHeight));’ to:</p>
<p><code>	/**
	 * A list of custom elevators. These alter a player's height by a
	 * custom amount, rather than just 1 or -1.
	 */
	private static List&lt;CustomElevator&gt; customElevators = new ArrayList&lt;CustomElevator&gt;();
	static {
		/**
		 * upElevatorId: The object id of the elevator that sends you up.
		 * downElevatorId: The object id of the corresponding elevator that sends you down.
		 * upHeight: The height you change to when you use the upElevator.
		 * downHeight: The height you change to when you use the downElevator.
		 */
		//customElevators.add(new CustomElevator(upElevatorId, downElevatorId, upHeight, downHeight));
	}</code></p>
<p>And here’s the full class:</p>
<p>[code=java]package org.iClarity.rs2.model.object;</p>
<p>import java.io.FileInputStream;<br>
import java.io.FileNotFoundException;<br>
import java.util.ArrayList;<br>
import java.util.List;</p>
<p>import org.iClarity.rs2.model.player.Player;<br>
import org.iClarity.rs2.util.Position;<br>
import org.iClarity.rs2.util.XStreamUtil;</p>
<p>/**</p>
<ul>
<li>
<p>Manages all height-level-changing objects. i.e. stairs, ladders, etc.</p>
</li>
<li>
<p><span class="mention">@author</span> PrimaDude<br>
*/<br>
public class ElevationObjects {</p>
<p>/**</p>
<ul>
<li>An array containing the object id’s of default elevators that</li>
<li>only altar’s a player’s height by 1 or -1.<br>
*/<br>
private static int[] elevators = {<br>
// Add ID’s.<br>
};</li>
</ul>
<p>/**</p>
<ul>
<li>A list of custom elevators. These altar a player’s height by a</li>
<li>custom amount, rather than just 1 or -1.<br>
<em>/<br>
private static List customElevators = new ArrayList();<br>
static {<br>
/</em>*
<ul>
<li>upElevatorId: The object id of the elevator that sends you up.</li>
<li>downElevatorId: The object id of the corresponding elevator that sends you down.</li>
<li>upHeight: The height you change to when you use the upElevator.</li>
<li>downHeight: The height you change to when you use the downElevator.<br>
*/<br>
<a href="//customElevators.add" rel="nofollow noopener">//customElevators.add</a>(new CustomElevator(upElevatorId, downElevatorId, upHeight, downHeight));<br>
}</li>
</ul>
</li>
</ul>
<p>/**</p>
<ul>
<li>Checks if the object is a custom elevator.</li>
<li>
<a class="mention" href="/u/param">@param</a> object The object id.</li>
<li>
<a class="mention" href="/u/return">@return</a> True or false.<br>
*/<br>
private boolean isCustomElevator(int object) {<br>
return !(getCustomElevator(object) == null);<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Checks if the object is an elevator.</li>
<li>
<a class="mention" href="/u/param">@param</a> object The object id.</li>
<li>
<a class="mention" href="/u/return">@return</a> True or false.<br>
*/<br>
private boolean isElevator(int object) {<br>
for (int stair : elevators) {<br>
if (object == stair) {<br>
return true;<br>
}<br>
}<br>
return false;<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Gets the instance of the custom elevator.</li>
<li>
<a class="mention" href="/u/param">@param</a> object The elevator object id.</li>
<li>
<a class="mention" href="/u/return">@return</a> The CustomElevator instance.<br>
*/<br>
private CustomElevator getCustomElevator(int object) {<br>
for (CustomElevator elevator : customElevators) {<br>
if (object == elevator.upElevatorId) {<br>
return elevator;<br>
} else if (object == elevator.getDownElevatorId()) {<br>
return elevator;<br>
}<br>
}<br>
return null;<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Moves the player to the appropriate height-level.</li>
<li>
<a class="mention" href="/u/param">@param</a> player The player.</li>
<li>
<a class="mention" href="/u/param">@param</a> object The id of the used object.<br>
*/<br>
public void elevate(Player player, int object) {<br>
if (!isElevator(object)) {<br>
return;<br>
}<br>
Position newPos = player.getPosition();<br>
if (isCustomElevator(object)) {<br>
CustomElevator elevator = getCustomElevator(object);<br>
newPos.setZ((object == elevator.getUpElevatorId()) ? elevator.getUpHeight() : elevator.getDownHeight());<br>
} else {<br>
newPos.setZ((player.getPosition().getZ() == 0) ? 1 : 0);<br>
}<br>
player.teleport(newPos);<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Loads the elevator ID’s.</li>
<li>
<span class="mention">@throws</span> FileNotFoundException If the specified file cannot be found.<br>
*/<br>
<span class="mention">@SuppressWarnings</span>(“unchecked”)<br>
public static void loadElevators() throws FileNotFoundException {<br>
List list = (List) XStreamUtil.getXStream().fromXML(new FileInputStream(“data/elevators.xml”));<br>
elevators = new int[list.size()];<br>
for (int slot = 0; slot &lt; list.size(); slot++) {<br>
elevators[slot] = list.get(slot);<br>
}<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>
<p>Used for custom height-level changes.</p>
</li>
<li>
<p>Default height-level change is dependent upon</p>
</li>
<li>
<p>the player’s current height-level.</p>
</li>
<li>
<p><span class="mention">@author</span> PrimaDude<br>
*/<br>
private class CustomElevator {</p>
<p>/**</p>
<ul>
<li>The object id of the elevator going up.<br>
*/<br>
private int upElevatorId;</li>
</ul>
<p>/**</p>
<ul>
<li>The object id of the elevator going down.<br>
*/<br>
private int downElevatorId;</li>
</ul>
<p>/**</p>
<ul>
<li>The height-level to change to when going up.<br>
*/<br>
private int upHeight;</li>
</ul>
<p>/**</p>
<ul>
<li>The height-level to change to when going down.<br>
*/<br>
private int downHeight;</li>
</ul>
<p>/**</p>
<ul>
<li>Gets the up-elevator id.</li>
<li>
<a class="mention" href="/u/return">@return</a> The up-elevator id.<br>
*/<br>
public int getUpElevatorId() {<br>
return upElevatorId;<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Gets the down-elevator id.</li>
<li>
<a class="mention" href="/u/return">@return</a> The down-elevator id.<br>
*/<br>
public int getDownElevatorId() {<br>
return downElevatorId;<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Gets the up-height.</li>
<li>
<a class="mention" href="/u/return">@return</a> The up-height.<br>
*/<br>
public int getUpHeight() {<br>
return upHeight;<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Gets the down-height.</li>
<li>
<a class="mention" href="/u/return">@return</a> The down-height.<br>
*/<br>
public int getDownHeight() {<br>
return downHeight;<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Constructs a new CustomElevator.</li>
<li>
<a class="mention" href="/u/param">@param</a> upElevatorId The object id of the elevator going up.</li>
<li>
<a class="mention" href="/u/param">@param</a> downElevatorId The object id of the elevator going down.</li>
<li>
<a class="mention" href="/u/param">@param</a> upHeight The height-level to change to when going up.</li>
<li>
<a class="mention" href="/u/param">@param</a> downHeight The height-level to change to when going down.<br>
*/<br>
private CustomElevator(int upElevatorId, int downElevatorId, int upHeight, int downHeight) {<br>
this.upElevatorId = upElevatorId;<br>
this.downElevatorId = downElevatorId;<br>
this.upHeight = upHeight;<br>
this.downHeight = downHeight;<br>
}</li>
</ul>
</li>
</ul>
<p>}</p>
</li>
</ul>
<p>}[/code]</p>
<p>It will obviously need editing to work with your server, which shouldn’t be hard at all.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/elevators-stairs-ladders-etc/525606/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/elevators-stairs-ladders-etc/525606/1</link>
        <pubDate>Sat, 20 Jul 2013 17:46:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-525606-1</guid>
        <source url="https://forum.moparisthebest.com/t/elevators-stairs-ladders-etc/525606.rss">Elevators: Stairs, Ladders etc</source>
      </item>
  </channel>
</rss>
