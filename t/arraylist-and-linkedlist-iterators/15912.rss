<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>ArrayList and LinkedList Iterators</title>
    <link>https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912</link>
    <description>greetings everyone,

I am completely confused with Iterators and how to even instantiate them.  So here&#39;s all I have so far:

[code]
private class ALIterator&lt;E2 extends E&gt; implements Iterator&lt;E&gt;{
        public boolean hasNext(){
        }
       
        public E next(){
        }
   
        public void remove(){
        }
}
[/code]

So as you can see, I have no idea how to write this.  This code is for the ARRAYLIST (hence the AL) Iterator.  I can&#39;t even begin to fathom how to do the LinkedList.  Any help would be greatly appreciated.</description>
    
    <lastBuildDate>Sun, 24 Sep 2006 03:19:51 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>ArrayList and LinkedList Iterators</title>
        <dc:creator><![CDATA[@BobDole81 BobDole81]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bobdole81">@BobDole81</a> wrote:</p>
          <blockquote>
              <p>I only suggested you do two classes for ease of reading…but you can make a single class implementing ListIterator.  If you do <span class="bbcode-i">that</span>, you can downcast to an Iterator object.  So you can make a single class if you like instead of both.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912/13</link>
        <pubDate>Sun, 24 Sep 2006 03:19:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-15912-13</guid>
        <source url="https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912.rss">ArrayList and LinkedList Iterators</source>
      </item>
      <item>
        <title>ArrayList and LinkedList Iterators</title>
        <dc:creator><![CDATA[@iwasinmoparseas101cl iwasinmoparseas101class]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/iwasinmoparseas101cl">@iwasinmoparseas101cl</a> wrote:</p>
          <blockquote>
              <p>alright, thanks a lot BobDole.  Since there’s a LIstIterator and Iterator method in the ArrayList class, I’ll just have to make both <img src="https://forum.moparisthebest.com/images/emoji/twitter/frowning.png?v=9" title=":frowning:" class="emoji" alt=":frowning:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912/12</link>
        <pubDate>Sun, 24 Sep 2006 01:15:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-15912-12</guid>
        <source url="https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912.rss">ArrayList and LinkedList Iterators</source>
      </item>
      <item>
        <title>ArrayList and LinkedList Iterators</title>
        <dc:creator><![CDATA[@BobDole81 BobDole81]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bobdole81">@BobDole81</a> wrote:</p>
          <blockquote>
              <p>OK then:  1st error was a bit of logic error on my part - inner classes are more difficult to use than reg classes in this sense.  Anyway, to fix the first error, you can change the remove method to this:</p>
<pre><code class="lang-auto">public void remove() {
    ArrayList.this.remove(lastElement);
}</code></pre>
<p>As for the second error, you can’t upcast with interfaces unless the class implements both…so you’d need to implement ListIterator instead of Iterator.  Or you can do what sun did and use this ALIterator as a base and create a private inner ALListIterator class extending ALIterator…for cleanliness.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912/11</link>
        <pubDate>Sun, 24 Sep 2006 01:01:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-15912-11</guid>
        <source url="https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912.rss">ArrayList and LinkedList Iterators</source>
      </item>
      <item>
        <title>ArrayList and LinkedList Iterators</title>
        <dc:creator><![CDATA[@Stork Stork]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/stork">@Stork</a> wrote:</p>
          <blockquote>
              <p>E stands for Element, which represents anything that extends Object.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912/10</link>
        <pubDate>Sun, 24 Sep 2006 00:55:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-15912-10</guid>
        <source url="https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912.rss">ArrayList and LinkedList Iterators</source>
      </item>
      <item>
        <title>ArrayList and LinkedList Iterators</title>
        <dc:creator><![CDATA[@iwasinmoparseas101cl iwasinmoparseas101class]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/iwasinmoparseas101cl">@iwasinmoparseas101cl</a> wrote:</p>
          <blockquote>
              <p>it’s Java Generics… It’s like when you call ArrayList str = new ArrayList();   the  is the generic type…it can be replaced with Integer, Double, String, Object, lots of stuff.  so the  is just saying what type you can store in the list</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912/9</link>
        <pubDate>Sun, 24 Sep 2006 00:17:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-15912-9</guid>
        <source url="https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912.rss">ArrayList and LinkedList Iterators</source>
      </item>
      <item>
        <title>ArrayList and LinkedList Iterators</title>
        <dc:creator><![CDATA[@White_Castle White Castle]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/white_castle">@White_Castle</a> wrote:</p>
          <blockquote>
              <p>What’s an ? <img src="https://forum.moparisthebest.com/images/emoji/twitter/open_mouth.png?v=9" title=":open_mouth:" class="emoji" alt=":open_mouth:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912/8</link>
        <pubDate>Sun, 24 Sep 2006 00:15:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-15912-8</guid>
        <source url="https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912.rss">ArrayList and LinkedList Iterators</source>
      </item>
      <item>
        <title>ArrayList and LinkedList Iterators</title>
        <dc:creator><![CDATA[@iwasinmoparseas101cl iwasinmoparseas101class]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/iwasinmoparseas101cl">@iwasinmoparseas101cl</a> wrote:</p>
          <blockquote>
              <p>just the remove method won’t work:</p>
<p>The method remove() in the type ArrayList.ALIterator is not applicable for the<br>
arguments (E)</p>
<p>also when I try to:</p>
<p>public ListIterator listIterator() {<br>
return new ALIterator();<br>
}</p>
<p>error message : Type mismatch: cannot convert from ArrayList.ALIterator to ListIterator</p>
<p>since ALIterator implements Iterator, it should be able to convert to a ListIterator right?  Or do I also have to write the methods required for the ListIerator as well?[br][size=1]Posted at: September 23, 2006, 02:12:52 PM[/size][hr]here’s my ArrayList class:</p>
<pre><code class="lang-auto">package src.kloftaj;

import java.lang.reflect.Array;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;

public class ArrayList&lt;E&gt; implements List&lt;E&gt;{
	/**
	 * Instance Variables
	 */
	private int size;
	private E[] data;
	private static final int DEFAULT_VALUE = 10;
	private int modCount;
	
	/**
	 * WORKS CORRECTLY!
	 * Creates a new ArrayList with the Default Value (10)
	 */
	public ArrayList(){
		data = (E[]) new Object[DEFAULT_VALUE];
		size = 0;
	}
	
	/**
	 * WORKS CORRECTLY!
	 * Creates a new ArrayList with the value given
	 * @param size
	 */
	public ArrayList(int capacity){
		data = (E[])new Object[capacity];
		size = 0;
	}
	
	public ArrayList(Collection&lt;? extends E&gt; c){
		Iterator iterator = c.iterator();
		while(iterator.hasNext()){
			add((E)iterator.next());
		}
	}
	
	/**
	 * WORKS CORRECTLY
	 * Adds the given E to the end of the List
	 * If list is filled, it allocates more memory
	 * @return true by default
	 */
	public boolean add(E o) {
		if(o != null){
			checkSpace();
			data[size++] = o;
			modCount++;
		}
		return true;
	}

	/**
	 * Adds the given element to the given index
	 * @param index for element to be placed at, element to be placed
	 */
	public void add(int index, E element) {
		checkIndex(index);
		
		if(index &lt; data.length &amp;&amp; size &lt; data.length){
			data[index] = element;
			size++;
				//Need to shift elements
		}
		if(size == data.length){
			E[] moreMemory = (E[]) new Object[size*2];
			System.arraycopy(data, 0, moreMemory, 0, size);
			data = moreMemory;
			data[index] = element;
			size++;
		}
	}

	public boolean addAll(Collection&lt;? extends E&gt; c) {
		for(E item: c){
			add(item);
		}
		return true;
	}

	public boolean addAll(int index, Collection&lt;? extends E&gt; c) {
		checkIndex(index);
		Object[] d = c.toArray();
		int dSize = d.length;
		int destination = size-index;
		if(destination &gt; 0){
			System.arraycopy(d, index, data, index+dSize, destination);
		}
		else{
			System.arraycopy(d, 0, data, index, dSize);
		}
		size += dSize;
		modCount++;
		return dSize != 0;
	}

	/**
	 * WORKS CORRECTLY
	 * Clears the date in the ArrayList
	 */
	public void clear() {
		for(int i=0; i&lt;data.length; i++){
			data[i] = null;
		}
		size = 0;
		modCount = 0;
	}

	/**
	 * WORKS CORRECTLY
	 * Checks for the object specified in the ArrayList
	 * @return true object found
	 * 		   false object not found
	 */
	public boolean contains(Object o) {
		return indexOf(o) &gt;= 0;
	}

	public boolean containsAll(Collection&lt;?&gt; c) {		
		Object[] d = c.toArray();
		for(Object e : d){
			if(contains(e)){
				//do nothing
			}
			else{
				return false;
			}
		}
		return true;
	}
	
	/**
	 * WORKS CORRECTLY
	 * Returns the E at the given position
	 * @return E at given postion
	 */
	public E get(int index) {
		return (E)data[index];
	}

	/**
	 * WORKS CORRECTLY
	 * Returns the position of the given Object
	 * @returns position if found, -1 if it's not found
	 */
	public int indexOf(Object o) {
		int i = 0;
		for(i=0; i &lt; size; i++){
			if(data[i] != null &amp;&amp; data[i].equals(o)){
				return i;
			}
		}
		return -1;
	}

	/**
	 * WORKS CORRECTLY
	 * Checks to see if the ArrayList is empty
	 * @return true if ArrayList's size is 0, else returns false
	 */
	public boolean isEmpty() {
		return this.size() == 0; 
	}

	public Iterator&lt;E&gt; iterator() {
		return null;
	}

	/**
	 * Returns the last position of the given Object
	 * @return index of last object instance
	 *         -1 if object is not found
	 */
	public int lastIndexOf(Object o) {
		int i = 0;
		for(i=size-1; i&lt;=0; i--){
			if(data[i] != null &amp;&amp; data[i].equals(o)){
				return i;
			}
		}
		return -1;
	}

	public ListIterator&lt;E&gt; listIterator() {
		return new ALIterator&lt;E&gt;();
	}

	public ListIterator&lt;E&gt; listIterator(int index) {
		return null;
	}

	/**
	 * WORKS CORRECTLY!
	 * Removes the given Object from the list
	 * @return true by default
	 */
	public boolean remove(Object o) {
		if(contains(o)){
			remove(indexOf(o));
			return true;
		}
		return true;
	}

	/**
	 * WORKS CORRECTLY!!!!
	 * Removes the E at the given index
	 * @return E item that was removed
	 */
	public E remove(int index) {
		checkIndex(index);
		E toRemove = (E)data[index];
		int removedPosition = size - index - 1;
		if (removedPosition &gt; 0){
		    System.arraycopy(data, index+1, data, index, removedPosition);
		}
		data[--size] = null;
		modCount++;
		return toRemove;
	}

	public boolean removeAll(Collection&lt;?&gt; c) {
		Object[] d = c.toArray();
		for(Object e: d){
			if(remove(e)){
				//do nothing
			}
			else{
				return false;
			}
		}
		return true;
	}

	public boolean retainAll(Collection&lt;?&gt; c) {
		return false;
	}

	/**
	 * WORKS CORRECTLY
	 * Overwrites the currect element at index with the new element
	 * @return the replaced element at index
	 */
	public E set(int index, E element) {
		checkIndex(index);
		E copy = (E)data[index];
		data[index] = element;
		modCount++;
		return copy;
	}

	/**
	 * WORKS CORRECTLY
	 * Returns the number of elements in the ArrayList
	 * @return the size of the list
	 */
	public int size() {
		return size;
	}

	public List&lt;E&gt; subList(int fromIndex, int toIndex) {
		return null;
	}

	/**
	 * Creates an Object[] of the data array so it's not an instance of type E
	 * @return copy of data array as an object array
	 */
	public Object[] toArray() {
		 Object[] copy = new Object[size];
		 System.arraycopy(data, 0, copy, 0, size);
		 return copy;
	}

	public &lt;T&gt; T[] toArray(T[] a) {
		if(a.length &lt; size){
		    a = (T[]) Array.newInstance(a.getClass().getComponentType(),size);
		    System.arraycopy(data, 0, a, 0, size);
		}
		if (a.length &gt; size){
			a[size] = null;
		}
		return a;
	}
	
	/**
	 * WORKS CORRECTLY
	 * Creates the list in the form of a String
	 * @retun StringBuffer string representation of the list
	 */
	public String toString(){
		StringBuffer sb = new StringBuffer();
		if(data != null){
			for(int i=0; i&lt;data.length; i++){
				if(data[i] != null){
					sb.append(data[i]+" ");
				}
			}
		}
		return sb.toString();
	}
	
	/**
	 * Checks to see if the data array needs to be increased in size	 *
	 */
	private void checkSpace(){
		if(size == data.length){
			E[] data2 = (E[]) new Object[data.length*2];
			System.arraycopy(data, 0, data2, 0, size);
			data = data2;
		}
		else{
			//do nothing
		}
	}
	
	/**
	 * Checks for valid index
	 * @param index 
	 * @throws IndexOutOfBoundsException for index &lt; 0 || index &gt;= data.length
	 */
	private void checkIndex(int index){
		if(index &lt; 0 || index &gt; data.length){
			throw new IndexOutOfBoundsException("" + index);
		}
	}
	
	private class ALIterator&lt;E2 extends E&gt; implements Iterator&lt;E&gt;{
		private E lastElement = null;
		private int pos = 0;
		
		public boolean hasNext() {
			return pos &lt; size() -1;
		}

		public E next() {
			return (lastElement = get(++pos));
		}

		public void remove() {
			remove(lastElement);
		}
	}

}
</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912/7</link>
        <pubDate>Sun, 24 Sep 2006 00:14:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-15912-7</guid>
        <source url="https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912.rss">ArrayList and LinkedList Iterators</source>
      </item>
      <item>
        <title>ArrayList and LinkedList Iterators</title>
        <dc:creator><![CDATA[@BobDole81 BobDole81]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bobdole81">@BobDole81</a> wrote:</p>
          <blockquote>
              <p>You could create a constructor, but its not necessarily if you just want to set the value of a single instance variable.  Take a look at my code example above to see what I mean.</p>
<p>Btw, does my code above not help fully then?  What else are you confused about?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912/6</link>
        <pubDate>Sun, 24 Sep 2006 00:07:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-15912-6</guid>
        <source url="https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912.rss">ArrayList and LinkedList Iterators</source>
      </item>
      <item>
        <title>ArrayList and LinkedList Iterators</title>
        <dc:creator><![CDATA[@iwasinmoparseas101cl iwasinmoparseas101class]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/iwasinmoparseas101cl">@iwasinmoparseas101cl</a> wrote:</p>
          <blockquote>
              <p>creating the ArrayList class for my CSA class.  ArrayList implements List, and I’ve been defining the ArrayList methods…I’m just stuck on the Iterator methods that need to be written.  And should the ALIterator inner class have constructor methods that just set int offset?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912/5</link>
        <pubDate>Sun, 24 Sep 2006 00:01:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-15912-5</guid>
        <source url="https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912.rss">ArrayList and LinkedList Iterators</source>
      </item>
      <item>
        <title>ArrayList and LinkedList Iterators</title>
        <dc:creator><![CDATA[@BobDole81 BobDole81]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bobdole81">@BobDole81</a> wrote:</p>
          <blockquote>
              <p>ListIterator just an interfact that extends the Iterator interface…for simplicity, Iterator is fine really.</p>
<p>Anyway, are you redoing the ArrayList collections yourself or something for class?  What exactly is the project?  If I follow correctly, then you’re ArrayList should be able to implement List, but you still need to define the methods yourself…its just an interface after all.  So what you do for the List.iterator() is create a new instance of the ALIterator, which can be a private inner class in your ArrayList…and then the ALIterator will, of course, imlpement Iterator.</p>
<p>Please let me know if i’m on the wrong track.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912/4</link>
        <pubDate>Sat, 23 Sep 2006 23:56:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-15912-4</guid>
        <source url="https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912.rss">ArrayList and LinkedList Iterators</source>
      </item>
      <item>
        <title>ArrayList and LinkedList Iterators</title>
        <dc:creator><![CDATA[@iwasinmoparseas101cl iwasinmoparseas101class]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/iwasinmoparseas101cl">@iwasinmoparseas101cl</a> wrote:</p>
          <blockquote>
              <p>in the base class I just implemented List and it made it so it automatically had the Iterator method stuctures, but my professor said that the ALIterator should Implement Iterator in the little e-mail he sent me.  He didn’t mention anything about list iterator</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912/3</link>
        <pubDate>Sat, 23 Sep 2006 23:49:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-15912-3</guid>
        <source url="https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912.rss">ArrayList and LinkedList Iterators</source>
      </item>
      <item>
        <title>ArrayList and LinkedList Iterators</title>
        <dc:creator><![CDATA[@BobDole81 BobDole81]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bobdole81">@BobDole81</a> wrote:</p>
          <blockquote>
              <p>You mean you want to write your own?  Ok…<img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<p>Well first, LinkedList and ArrayList use ListIterator, but that’s not very important.  Second, you don’t need E2 extends E…you don’t know if that applies to the object being added.  If you want to see how sun did it, you can look in the AbstractList or LinkedList source, but here’s a very simple and uninvolved version of what I’d do (assuming this is in the ArrayList code or something)…a lot more comes into play when checking to make sure the user didn’t add/remove elements of certain indices and whatnot:</p>
<pre><code class="lang-auto">private class ALIterator&lt;E&gt; implements Iterator&lt;E&gt; {
    private int listOffset = 0;
    private E lastElement = null;

    public boolean hasNext() {
        listOffset &lt; size() - 1;
    }

    public E next() {
        return (lastElement = get(++listOffset));
    }

    public void remove() {
        remove(lastElement);
    }
}</code></pre>
<p>I dunno if that’s really what you want, but it should also work for LinkedList and other List implementations.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912/2</link>
        <pubDate>Sat, 23 Sep 2006 23:43:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-15912-2</guid>
        <source url="https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912.rss">ArrayList and LinkedList Iterators</source>
      </item>
      <item>
        <title>ArrayList and LinkedList Iterators</title>
        <dc:creator><![CDATA[@iwasinmoparseas101cl iwasinmoparseas101class]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/iwasinmoparseas101cl">@iwasinmoparseas101cl</a> wrote:</p>
          <blockquote>
              <p>greetings everyone,</p>
<p>I am completely confused with Iterators and how to even instantiate them.  So here’s all I have so far:</p>
<pre><code class="lang-auto">private class ALIterator&lt;E2 extends E&gt; implements Iterator&lt;E&gt;{
        public boolean hasNext(){
        }
       
        public E next(){
        }
   
        public void remove(){
        }
}</code></pre>
<p>So as you can see, I have no idea how to write this.  This code is for the ARRAYLIST (hence the AL) Iterator.  I can’t even begin to fathom how to do the LinkedList.  Any help would be greatly appreciated.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912/1</link>
        <pubDate>Sat, 23 Sep 2006 21:37:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-15912-1</guid>
        <source url="https://forum.moparisthebest.com/t/arraylist-and-linkedlist-iterators/15912.rss">ArrayList and LinkedList Iterators</source>
      </item>
  </channel>
</rss>
