<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[PI] Agility Obstacles</title>
    <link>https://forum.moparisthebest.com/t/pi-agility-obstacles/545507</link>
    <description>replace your Agility class in server.model.players.skills with this:

[code=java]
package server.model.players.skills;

import java.util.HashMap;

import server.Config;
import server.event.Event;
import server.event.EventContainer;
import server.event.EventManager;
import server.model.players.Client;
import server.util.Misc;
/**
 * Agility.java
 *
 * @author Sanity/n10si_t
 *
 **/
 
public class Agility {
	
	private Client c;
		
	public Agility(Client c) {
		this.c = c;
	}
	
	public static enum Obstacles {
		CREVICE(9325, 50, 10, 756, 7, &quot;Crevice&quot;),
		STILE(7527, 1, 2, 839, 3, &quot;Stile&quot;);
	
		private int objectID; private int levelReq; private int experience; private int animation; private int spacesToMove; private String name;
	
		private Obstacles(int objectID, int levelReq, int experience, int animation, int spacesToMove, String name) {
			this.objectID = objectID;
			this.levelReq = levelReq;
			this.experience = experience;
			this.animation = animation;
			this.spacesToMove = spacesToMove;
			this.name = name;		
		}
	
		public int getObject() {
			return objectID;
		}

		public int getLevelReq() {
			return levelReq;
		}
	
		public int getXP() {
			return experience;
		}
	
		public int getAnim() {
			return animation;
		}
	
		public int getSpacesToMove() {
			return spacesToMove;
		}
	
		public String getName() {
			return name;
		}
		
		public static HashMap &lt;Integer,Obstacles&gt; obstacles = new HashMap&lt;Integer,Obstacles&gt;();
		
		public static Obstacles forId(int id) {
			return obstacles.get(id);
		}
		
		static {
			for (Obstacles o : Obstacles.values())
				obstacles.put(o.getObject(), o);
		}
	
	}
	
	public void doObstacle(int id) {
		final Obstacles o = Obstacles.obstacles.get(id);
		if (System.currentTimeMillis() - c.agilityDelay &gt;= 3000) {
			if (c.playerLevel[c.playerAgility] &gt;= o.getLevelReq()) {
				c.isRunning = false;
				c.turnPlayerTo(c.objectX, c.objectY);
				c.playerWalkIndex = c.playerRunIndex = o.getAnim();
				c.getPA().requestUpdates();
				switch(Misc.direction(c.getX(), c.getY(), c.objectX, c.objectY)) {
					case 0: //north
						c.getPA().walkTo(0, o.getSpacesToMove());
						break;
					case 8: //south
						c.getPA().walkTo(0, -o.getSpacesToMove());
						break;
					case 4: //east
						c.getPA().walkTo(o.getSpacesToMove(), 0);
						break;
					case 12: //west
						c.getPA().walkTo(-o.getSpacesToMove(), 0);
						break;
						default:
							c.sendMessage(&quot;error&quot;);
							break;
				}
				c.sendMessage(&quot;You manuever the &quot;+o.getName()+&quot;.&quot;);
				c.getPA().addSkillXP(o.getXP()*Config.AGILITY_EXPERIENCE, c.playerAgility);
				c.agilityDelay = System.currentTimeMillis();
				EventManager.getSingleton().addEvent(new Event() {
					public void execute(EventContainer e) {
						c.playerWalkIndex = 0x333;
						c.playerRunIndex = 0x338;
						c.isRunning = true;
						c.getPA().requestUpdates();
						e.stop();
					}
				}, 2200);
			} else {
				c.sendMessage(&quot;You need an agility level of &quot;+o.getLevelReq()+&quot; to navigate this obstacle.&quot;);
			}
		}
		
	}
	
	
	
	public boolean isObstacle(int id) {
		return Obstacles.obstacles.containsKey(id);
	}	
	
}[/code]

then in the ClickObject class under case FIRST_CLICK: 

[code=java]	if (c.getAgility().isObstacle(c.objectId))
				c.getAgility().doObstacle(c.objectId);[/code]

to add an obstacle, add it to the enum in the agility class in this format:

[code=]
NAME(object id, level required, experience gained, animation used, tiles to move, &quot;name&quot;)[/code]

i take very little credit for this, it&#39;s basically just a copy of the Food class with some very simple walking and animation code added, so shoutout to Sanity</description>
    
    <lastBuildDate>Sat, 02 Aug 2014 05:26:45 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/pi-agility-obstacles/545507.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[PI] Agility Obstacles</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="4" data-topic="545507">
<div class="title">
<div class="quote-controls"></div>
 n10si t:</div>
<blockquote>
<p>like i said, it’s basically a rip of the Food class. i don’t really care about efficiency or whatever and as i’m sure you can tell i’m very lazy… i just did this because it works. i’m not hosting that game i’m making anyways so who cares. thanks for your help though i’m sure people will use your ideas</p>
</blockquote>
</aside>
<p>you’re releasing the code to the community, so yeah you should care</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-agility-obstacles/545507/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-agility-obstacles/545507/5</link>
        <pubDate>Sat, 02 Aug 2014 05:26:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-545507-5</guid>
        <source url="https://forum.moparisthebest.com/t/pi-agility-obstacles/545507.rss">[PI] Agility Obstacles</source>
      </item>
      <item>
        <title>[PI] Agility Obstacles</title>
        <dc:creator><![CDATA[@n10si_t n10si t]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/n10si_t">@n10si_t</a> wrote:</p>
          <blockquote>
              <p>like i said, it’s basically a rip of the Food class. i don’t really care about efficiency or whatever and as i’m sure you can tell i’m very lazy… i just did this because it works. i’m not hosting that game i’m making anyways so who cares. thanks for your help though i’m sure people will use your ideas</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-agility-obstacles/545507/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-agility-obstacles/545507/4</link>
        <pubDate>Wed, 30 Jul 2014 23:23:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-545507-4</guid>
        <source url="https://forum.moparisthebest.com/t/pi-agility-obstacles/545507.rss">[PI] Agility Obstacles</source>
      </item>
      <item>
        <title>[PI] Agility Obstacles</title>
        <dc:creator><![CDATA[@Dan0194 Dan0194]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/dan0194">@Dan0194</a> wrote:</p>
          <blockquote>
              <p>No reason for a hashmap and your not even putting the excepted size of the map when you know it which you should.</p>
<p>just use this.</p>
<p><code>public static Obstacles forId(int id) {
for(Obstacles obstacle : values()) {
if(obstacle.getObject() == id) {
return obstacle;
}
}
return null;
}</code></p>
<p>And in your first click object or whatever you can just do</p>
<p>[code=java5]Obstacles obstacle = Obstacles.forId(objectId);</p>
<p>if(obstacle != null) {<br>
Agility.execute(obstacle);<br>
return;<br>
}[/code]</p>
<p>Anyways you should have some sort of skill handler system in your server. Just my 2 cents</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-agility-obstacles/545507/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-agility-obstacles/545507/3</link>
        <pubDate>Wed, 30 Jul 2014 23:06:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-545507-3</guid>
        <source url="https://forum.moparisthebest.com/t/pi-agility-obstacles/545507.rss">[PI] Agility Obstacles</source>
      </item>
      <item>
        <title>[PI] Agility Obstacles</title>
        <dc:creator><![CDATA[@Kozs Kozs]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/kozs">@Kozs</a> wrote:</p>
          <blockquote>
              <p>Thanks I might use.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-agility-obstacles/545507/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-agility-obstacles/545507/2</link>
        <pubDate>Wed, 30 Jul 2014 22:50:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-545507-2</guid>
        <source url="https://forum.moparisthebest.com/t/pi-agility-obstacles/545507.rss">[PI] Agility Obstacles</source>
      </item>
      <item>
        <title>[PI] Agility Obstacles</title>
        <dc:creator><![CDATA[@n10si_t n10si t]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/n10si_t">@n10si_t</a> wrote:</p>
          <blockquote>
              <p>replace your Agility class in server.model.players.skills with this:</p>
<p>[code=java]<br>
package server.model.players.skills;</p>
<p>import java.util.HashMap;</p>
<p>import server.Config;<br>
import server.event.Event;<br>
import server.event.EventContainer;<br>
import server.event.EventManager;<br>
import server.model.players.Client;<br>
import server.util.Misc;<br>
/**</p>
<ul>
<li>Agility.java</li>
<li>
</li>
<li>
<span class="mention">@author</span> Sanity/n10si_t</li>
<li>
</li>
</ul>
<p>**/</p>
<p>public class Agility {</p>
<pre><code>private Client c;
	
public Agility(Client c) {
	this.c = c;
}

public static enum Obstacles {
	CREVICE(9325, 50, 10, 756, 7, "Crevice"),
	STILE(7527, 1, 2, 839, 3, "Stile");

	private int objectID; private int levelReq; private int experience; private int animation; private int spacesToMove; private String name;

	private Obstacles(int objectID, int levelReq, int experience, int animation, int spacesToMove, String name) {
		this.objectID = objectID;
		this.levelReq = levelReq;
		this.experience = experience;
		this.animation = animation;
		this.spacesToMove = spacesToMove;
		this.name = name;		
	}

	public int getObject() {
		return objectID;
	}

	public int getLevelReq() {
		return levelReq;
	}

	public int getXP() {
		return experience;
	}

	public int getAnim() {
		return animation;
	}

	public int getSpacesToMove() {
		return spacesToMove;
	}

	public String getName() {
		return name;
	}
	
	public static HashMap &lt;Integer,Obstacles&gt; obstacles = new HashMap&lt;Integer,Obstacles&gt;();
	
	public static Obstacles forId(int id) {
		return obstacles.get(id);
	}
	
	static {
		for (Obstacles o : Obstacles.values())
			obstacles.put(o.getObject(), o);
	}

}

public void doObstacle(int id) {
	final Obstacles o = Obstacles.obstacles.get(id);
	if (System.currentTimeMillis() - c.agilityDelay &gt;= 3000) {
		if (c.playerLevel[c.playerAgility] &gt;= o.getLevelReq()) {
			c.isRunning = false;
			c.turnPlayerTo(c.objectX, c.objectY);
			c.playerWalkIndex = c.playerRunIndex = o.getAnim();
			c.getPA().requestUpdates();
			switch(Misc.direction(c.getX(), c.getY(), c.objectX, c.objectY)) {
				case 0: //north
					c.getPA().walkTo(0, o.getSpacesToMove());
					break;
				case 8: //south
					c.getPA().walkTo(0, -o.getSpacesToMove());
					break;
				case 4: //east
					c.getPA().walkTo(o.getSpacesToMove(), 0);
					break;
				case 12: //west
					c.getPA().walkTo(-o.getSpacesToMove(), 0);
					break;
					default:
						c.sendMessage("error");
						break;
			}
			c.sendMessage("You manuever the "+o.getName()+".");
			c.getPA().addSkillXP(o.getXP()*Config.AGILITY_EXPERIENCE, c.playerAgility);
			c.agilityDelay = System.currentTimeMillis();
			EventManager.getSingleton().addEvent(new Event() {
				public void execute(EventContainer e) {
					c.playerWalkIndex = 0x333;
					c.playerRunIndex = 0x338;
					c.isRunning = true;
					c.getPA().requestUpdates();
					e.stop();
				}
			}, 2200);
		} else {
			c.sendMessage("You need an agility level of "+o.getLevelReq()+" to navigate this obstacle.");
		}
	}
	
}



public boolean isObstacle(int id) {
	return Obstacles.obstacles.containsKey(id);
}	
</code></pre>
<p>}[/code]</p>
<p>then in the ClickObject class under case FIRST_CLICK:</p>
<p><code>	if (c.getAgility().isObstacle(c.objectId))
				c.getAgility().doObstacle(c.objectId);</code></p>
<p>to add an obstacle, add it to the enum in the agility class in this format:</p>
<p><code>
NAME(object id, level required, experience gained, animation used, tiles to move, "name")</code></p>
<p>i take very little credit for this, it’s basically just a copy of the Food class with some very simple walking and animation code added, so shoutout to Sanity</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-agility-obstacles/545507/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-agility-obstacles/545507/1</link>
        <pubDate>Wed, 30 Jul 2014 20:20:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-545507-1</guid>
        <source url="https://forum.moparisthebest.com/t/pi-agility-obstacles/545507.rss">[PI] Agility Obstacles</source>
      </item>
  </channel>
</rss>
