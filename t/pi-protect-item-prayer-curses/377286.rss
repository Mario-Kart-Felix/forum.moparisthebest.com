<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[PI] Protect Item Prayer[Curses]</title>
    <link>https://forum.moparisthebest.com/t/pi-protect-item-prayer-curses/377286</link>
    <description>Im having problems with my ancient curse prayer(The protect item one only...)

Ive tried a few different things myself, none of them worked , but anyways if anyone could help me out, it would be greatly appreciated.

Heres my code.

This is a destination-pk source.


Heres my givelife Void.(Its in my PlayerAssistant class.)
[code]	public void giveLife() {
		c.isDead = false;
		c.faceUpdate(-1);
		c.freezeTimer = 0;
		if(c.duelStatus &lt;= 4) { // if we are not in a duel we must be in wildy so remove items
			if (!c.inFightCaves()) {
					c.getItems().resetKeepItems();
				if((c.playerRights == 2 &amp;&amp; Config.ADMIN_DROP_ITEMS) || c.playerRights != 2) {
					if(!c.isSkulled) {	// what items to keep
						c.getItems().keepItem(0, true);
						c.getItems().keepItem(1, true);	
						c.getItems().keepItem(2, true);
					}	
					if(c.prayerActive[10] || c.curseActive[0] &amp;&amp; System.currentTimeMillis() - c.lastProtItem &gt; 700) {
						c.getItems().keepItem(3, true);
					}
                                        c.getItems().dropAllItemsPVP();
					if(c.trade11 &lt; 1 &amp;&amp; !c.inRFD() &amp;&amp; !c.isInFala() &amp;&amp; !c.isInArd()) {
					c.getItems().dropAllItems(); // drop all items
					c.getItems().deleteAllItems(); // delete all items
				        }
				        if(c.inRFD()) {
					c.getItems().deleteAllItems(); // delete all items
				        }
					c.getPA().ResetGWKC();

					
					if(!c.isSkulled) { // add the kept items once we finish deleting and dropping them	
						for (int i1 = 0; i1 &lt; 3; i1++) {
							if(c.itemKeptId[i1] &gt; 0) {
								c.getItems().addItem(c.itemKeptId[i1], 1);
							}
						}
					}	
					if(c.prayerActive[10]) { // if we have protect items 
						if(c.itemKeptId[3] &gt; 0) {
							c.getItems().addItem(c.itemKeptId[3], 1);
						}
					}
				}
				c.getItems().resetKeepItems();
			} else if (c.inPits) {
				Server.fightPits.removePlayerFromPits(c.playerId);
				c.pitsStatus = 1;
			}
		}
		c.getCombat().resetPrayers();
		for (int i = 0; i &lt; 20; i++) {
			c.playerLevel[i] = getLevelForXP(c.playerXP[i]);
			c.getPA().refreshSkill(i);
		}
		if (c.pitsStatus == 1) {
			movePlayer(2399, 5173, 0);
		} else if(c.duelStatus &lt;= 4) { // if we are not in a duel repawn to wildy
			movePlayer(Config.RESPAWN_X, Config.RESPAWN_Y, 0);
			c.isSkulled = false;
			c.skullTimer = 0;
			c.attackedPlayers.clear();
		} else if (c.inFightCaves()) {
			c.getPA().resetTzhaar();
		} else if (c.inRFD()) {
			c.getPA().resetRFD();
		} else { // we are in a duel, respawn outside of arena
			Client o = (Client) Server.playerHandler.players[c.duelingWith];
			if(o != null) {
				o.getPA().createPlayerHints(10, -1);
				if(o.duelStatus == 6) {
					o.getTradeAndDuel().duelVictory();
					//o.pcPoints += 1;
					//o.sendMessage(&quot;You have gained 1 Soul Split Points for winning a duel&quot;);
				}
			}
			movePlayer(Config.DUELING_RESPAWN_X+(Misc.random(Config.RANDOM_DUELING_RESPAWN)), Config.DUELING_RESPAWN_Y+(Misc.random(Config.RANDOM_DUELING_RESPAWN)), 0);
			if(c.duelStatus != 6) { // if we have won but have died, don&#39;t reset the duel status.
				c.getTradeAndDuel().resetDuel();
			}
		}
		//PlayerSaving.getSingleton().requestSave(c.playerId);
		PlayerSave.saveGame(c);
		c.getCombat().resetPlayerAttack();
		resetAnimation();
		c.startAnimation(65535);
		frame1();
		resetTb();
		c.isSkulled = false;
		c.attackedPlayers.clear();
		c.headIconPk = -1;
		removeAllWindows();
		c.tradeResetNeeded = true;
		c.skullTimer = -1;
		c.damageTaken = new int[Config.MAX_PLAYERS];
		c.getPA().requestUpdates();
	}[/code]

Heres my entire curse class.
[code]
package server.model.players;

import server.Config;
import server.Server;
import server.util.Misc;
import server.model.players.*;

public class Curse {

	private Client c;
	public Curse(Client c) {
		this.c = c;
	}
	
	public void resetCurse() {
		for(int p = 0; p &lt; c.curseActive.length; p++) {
			c.curseActive[p] = false;
			c.getPA().sendFrame36(c.CURSE_GLOW[p], 0);
		}
		c.headIcon = -1;
		c.getPA().requestUpdates();
	}
	
	public void strCurse(int i) {
		for (int j = 0; j &lt; str.length; j++) {
			if (str[j] != i) {
				c.curseActive[str[j]] = false;
				c.getPA().sendFrame36(c.CURSE_GLOW[str[j]], 0);
			}								
		}
	}
	public void atkCurse(int i) {
		for (int j = 0; j &lt; atk.length; j++) {
			if (atk[j] != i) {
				c.curseActive[atk[j]] = false;
				c.getPA().sendFrame36(c.CURSE_GLOW[atk[j]], 0);
			}						
		}
	}
	public void defCurse(int i) {
		for (int j = 0; j &lt; def.length; j++) {
			if (def[j] != i) {
				c.curseActive[def[j]] = false;
				c.getPA().sendFrame36(c.CURSE_GLOW[def[j]], 0);
			}								
		}
	}
	public void rngCurse(int i) {
		for (int j = 0; j &lt; rng.length; j++) {
			if (rng[j] != i) {
				c.curseActive[rng[j]] = false;
				c.getPA().sendFrame36(c.CURSE_GLOW[rng[j]], 0);
			}								
		}
	}
	public void mgeCurse(int i) {
		for (int j = 0; j &lt; mge.length; j++) {
			if (mge[j] != i) {
				c.curseActive[mge[j]] = false;
				c.getPA().sendFrame36(c.CURSE_GLOW[mge[j]], 0);
			}								
		}
	}
	public void sprtCurse(int i) {
		for (int j = 0; j &lt; sprt.length; j++) {
			if (sprt[j] != i) {
				c.curseActive[sprt[j]] = false;
				c.getPA().sendFrame36(c.CURSE_GLOW[sprt[j]], 0);
			}								
		}
	}
	
	public int[] def = {13, 19};
	public int[] str = {14, 19};
	public int[] atk = {1, 10, 19};
	public int[] rng = {2, 11, 19};
	public int[] mge = {3, 12, 19};
	public int[] sprt = {4, 16};//spirit
		
	public void activateCurse(int i) {
		if(c.duelRule[7]) {
			resetCurse();
			c.sendMessage(&quot;Prayer has been disabled in this duel!&quot;);
			return;
		}
		if(c.inRFD()){
			resetCurse();
			c.sendMessage(&quot;You cannot use prayer in here!&quot;);
			return;
		}
		if (c.playerLevel[1] &lt; 30) {
			c.getPA().sendFrame36(c.CURSE_GLOW[i], 0);
			c.sendMessage(&quot;You need 30 Defence to use this prayer.&quot;);
			return;
		}
		//0 = pItem//1 = sapWar//2 = sapRng//3 = sapMge//4 = sapSprt
		//5 = berserk//6 = defSum//7 = defMge//8 = defRng//9 = defMel
		//10 = leechAtk//11 = leechRng//12 = leechMge//13 = leechDef//14 = leechStr
		//15 = leechEnrgy//16 = leechSpec//17 = wrath//18 = soul//19 = turmoil
		
		if(c.playerLevel[5] &gt; 0 || !Config.PRAYER_POINTS_REQUIRED) {
			if(c.getPA().getLevelForXP(c.playerXP[5]) &gt;= c.CURSE_LEVEL_REQUIRED[i] || !Config.PRAYER_LEVEL_REQUIRED) {
				boolean headIcon = false;
				switch(i) {
					case 0://pItem
						c.lastProtItem = System.currentTimeMillis();
					break;
					
					//case 1:
					case 10:
						if (c.curseActive[i] == false) {
							atkCurse(i); // FUNKAR LÅT VA!
						}
					break;
					
					case 2:
					case 11:
						if (c.curseActive[i] == false) {
							rngCurse(i); // FUNKAR!! LÅT VA!!!
						}
					break;
					
					case 3:
					case 12:
						if (c.curseActive[i] == false) {
							mgeCurse(i); // FUNKAR LÅT STÅ!
						}
					break;
					
					case 4:
					case 16:
						if (c.curseActive[i] == false) {
							sprtCurse(i); // FUNKAR!!
						}
					break;
					
					case 13:
						if (c.curseActive[i] == false) {
							defCurse(i); // FUNKARRRR
						}
					break;
					case 14:
						if (c.curseActive[i] == false) {
							strCurse(i); // ALLL GOOOD
						}
					break;
					
					case 6:	
					case 7:					
					case 8:
					case 9:
						if(System.currentTimeMillis() - c.stopPrayerDelay &lt; 5000) {
							c.sendMessage(&quot;You have been injured and can&#39;t use this prayer!&quot;);
							c.getPA().sendFrame36(c.CURSE_GLOW[7], 0);
							c.getPA().sendFrame36(c.CURSE_GLOW[8], 0);
							c.getPA().sendFrame36(c.CURSE_GLOW[9], 0);
							return;
						}
						if (i == 7)
							c.protMageDelay = System.currentTimeMillis();
						else if (i == 8)
							c.protRangeDelay = System.currentTimeMillis();
						else if (i == 9)
							c.protMeleeDelay = System.currentTimeMillis();
					case 17:
					case 18:
						headIcon = true;		
						for(int p = 6; p &lt; 19; p++) {
							if(i != p &amp;&amp; p != 10 &amp;&amp; p != 11 &amp;&amp; p != 10 &amp;&amp; p != 12 &amp;&amp; p != 13 &amp;&amp; p != 14 &amp;&amp; p != 15 &amp;&amp; p != 16) {
								c.curseActive[p] = false;
								c.getPA().sendFrame36(c.CURSE_GLOW[p], 0);
							}
						}
					break;
					
					case 19://Turmoil - DONE
						if (c.curseActive[i] == false) {
							c.startAnimation(12565);
							c.gfx0(2226);
							strCurse(i);
							atkCurse(i);
							defCurse(i);
							mgeCurse(i);
							rngCurse(i);
						}
					break;
				}
				if(!headIcon) {
					if(c.curseActive[i] == false) {
						c.curseActive[i] = true;
						c.getPA().sendFrame36(c.CURSE_GLOW[i], 1);					
					} else {
						c.curseActive[i] = false;
						c.getPA().sendFrame36(c.CURSE_GLOW[i], 0);
					}
				} else {
					if(c.curseActive[i] == false) {
						c.curseActive[i] = true;
						c.getPA().sendFrame36(c.CURSE_GLOW[i], 1);
						c.headIcon = c.CURSE_HEAD_ICONS[i];
						c.getPA().requestUpdates();
					} else {
						c.curseActive[i] = false;
						c.getPA().sendFrame36(c.CURSE_GLOW[i], 0);
						c.headIcon = -1;
						c.getPA().requestUpdates();
					}
				}
			} else {
				c.getPA().sendFrame36(c.CURSE_GLOW[i],0);
				c.getPA().sendFrame126(&quot;You need a @blu@Prayer level of &quot;+c.CURSE_LEVEL_REQUIRED[i]+&quot; to use &quot;+c.CURSE_NAME[i]+&quot;.&quot;, 357);
				c.getPA().sendFrame126(&quot;Click here to continue&quot;, 358);
				c.getPA().sendFrame164(356);
			}
		} else {
			c.getPA().sendFrame36(c.CURSE_GLOW[i],0);
			c.sendMessage(&quot;You have run out of prayer points!&quot;);
		}		
	}
	
}[/code]

And heres the stuff that has to do with prayer in my clickingbuttons class
[code]			/**Prayers**/
			case 87231: // thick skin
			if(c.trade11 &gt; 1) {
			for(int p = 0; p &lt; c.PRAYER.length; p++) { // reset prayer glows 
				c.prayerActive[p] = false;
				c.getPA().sendFrame36(c.PRAYER_GLOW[p], 0);	
			}
			c.sendMessage(&quot;You must wait 15 minutes before using this!&quot;);
			return;
			}
			c.getCurse().activateCurse(0);
			break;	
			case 87233: // burst of str
			c.getCurse().activateCurse(1);
			break;	
			case 87235: // charity of thought
			c.getCurse().activateCurse(2);
			break;	
			case 87237: // range
			c.getCurse().activateCurse(3);
			break;
			case 87239: // mage
			c.getCurse().activateCurse(4);
			break;
			case 87241: // rockskin
			c.getCurse().activateCurse(5);
			break;
			case 87243: // super human
			c.getCurse().activateCurse(6);
			break;
			case 87245:	// improved reflexes
			c.getCurse().activateCurse(7);
			break;
			case 87247: //hawk eye
			c.getCurse().activateCurse(8);
			break;
			case 87249:
			c.getCurse().activateCurse(9);
			break;
			case 87251: // protect Item
			c.getCurse().activateCurse(10);
			break;			
			case 87253: // 26 range
			c.getCurse().activateCurse(11);
			break;
			case 87255: // 27 mage
			c.getCurse().activateCurse(12);
			break;	
			case 88001: // steel skin
			c.getCurse().activateCurse(13);
			break;
			case 88003: // ultimate str
			c.getCurse().activateCurse(14);
			break;
			case 88005: // incredible reflex
			c.getCurse().activateCurse(15);
			break;	
			case 88007: // protect from magic
			c.getCurse().activateCurse(16);
			break;					
			case 88009: // protect from range
			c.getCurse().activateCurse(17);
			break;
			case 88011: // protect from melee
			c.getCurse().activateCurse(18);
			break;
			case 88013: // 44 range
			c.getCurse().activateCurse(19);
			break;	
			/**End of curse prayers**/
			
			
			/**Prayers**/
			case 97168: // thick skin
			c.getCombat().activatePrayer(0);
			break;	
			case 97170: // burst of str
			c.getCombat().activatePrayer(1);
			break;	
			case 97172: // charity of thought
			c.getCombat().activatePrayer(2);
			break;	
			case 97174: // range
			c.getCombat().activatePrayer(3);
			break;
			case 97176: // mage
			c.getCombat().activatePrayer(4);
			break;
			case 97178: // rockskin
			c.getCombat().activatePrayer(5);
			break;
			case 97180: // super human
			c.getCombat().activatePrayer(6);
			break;
			case 97182:	// improved reflexes
			c.getCombat().activatePrayer(7);
			break;
			case 97184: //hawk eye
			c.getCombat().activatePrayer(8);
			break;
			case 97186:
			c.getCombat().activatePrayer(9);
			break;
			case 97188: // protect Item
			/*if(c.trade11 &gt; 1) {
			for(int p = 0; p &lt; c.PRAYER.length; p++) { // reset prayer glows 
				c.prayerActive[p] = false;
				c.getPA().sendFrame36(c.PRAYER_GLOW[p], 0);	
			}
			c.sendMessage(&quot;You must wait 15 minutes before using this!&quot;);
			return;
			}*/
			c.getCombat().activatePrayer(10);
			break;			
			case 97190: // 26 range
			c.getCombat().activatePrayer(11);
			break;
			case 97192: // 27 mage
			c.getCombat().activatePrayer(12);
			break;	
			case 97194: // steel skin
			c.getCombat().activatePrayer(13);
			break;
			case 97196: // ultimate str
			c.getCombat().activatePrayer(14);
			break;
			case 97198: // incredible reflex
			c.getCombat().activatePrayer(15);
			break;	
			case 97200: // protect from magic
			c.getCombat().activatePrayer(16);
			break;					
			case 97202: // protect from range
			c.getCombat().activatePrayer(17);
			break;
			case 97204: // protect from melee
			c.getCombat().activatePrayer(18);
			break;
			case 97206: // 44 range
			c.getCombat().activatePrayer(19);
			break;	
			case 97208: // 45 mystic
			c.getCombat().activatePrayer(20);
			break;				
			case 97210: // retrui
			c.getCombat().activatePrayer(21);
			break;					
			case 97212: // redem
			c.getCombat().activatePrayer(22);
			break;					
			case 97214: // smite
			c.getCombat().activatePrayer(23);
			break;
			case 97216: // chiv
			c.getCombat().activatePrayer(24);
			break;
			case 97218: // piety
			c.getCombat().activatePrayer(25);
			break;[/code]</description>
    
    <lastBuildDate>Fri, 07 Jan 2011 21:36:43 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/pi-protect-item-prayer-curses/377286.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[PI] Protect Item Prayer[Curses]</title>
        <dc:creator><![CDATA[@E_z_Range E z Range]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/e_z_range">@E_z_Range</a> wrote:</p>
          <blockquote>
              <p>Im having problems with my ancient curse prayer(The protect item one only…)</p>
<p>Ive tried a few different things myself, none of them worked , but anyways if anyone could help me out, it would be greatly appreciated.</p>
<p>Heres my code.</p>
<p>This is a destination-pk source.</p>
<p>Heres my givelife Void.(Its in my PlayerAssistant class.)</p>
<p>[code]	public void giveLife() {<br>
c.isDead = false;<br>
c.faceUpdate(-1);<br>
c.freezeTimer = 0;<br>
if(c.duelStatus &lt;= 4) { // if we are not in a duel we must be in wildy so remove items<br>
if (!c.inFightCaves()) {<br>
c.getItems().resetKeepItems();<br>
if((c.playerRights == 2 &amp;&amp; Config.ADMIN_DROP_ITEMS) || c.playerRights != 2) {<br>
if(!c.isSkulled) {	// what items to keep<br>
c.getItems().keepItem(0, true);<br>
c.getItems().keepItem(1, true);	<br>
c.getItems().keepItem(2, true);<br>
}	<br>
if(c.prayerActive[10] || c.curseActive[0] &amp;&amp; System.currentTimeMillis() - c.lastProtItem &gt; 700) {<br>
c.getItems().keepItem(3, true);<br>
}<br>
c.getItems().dropAllItemsPVP();<br>
if(c.trade11 &lt; 1 &amp;&amp; !c.inRFD() &amp;&amp; !c.isInFala() &amp;&amp; !c.isInArd()) {<br>
c.getItems().dropAllItems(); // drop all items<br>
c.getItems().deleteAllItems(); // delete all items<br>
}<br>
if(c.inRFD()) {<br>
c.getItems().deleteAllItems(); // delete all items<br>
}<br>
c.getPA().ResetGWKC();</p>
<pre><code>				if(!c.isSkulled) { // add the kept items once we finish deleting and dropping them	
					for (int i1 = 0; i1 &lt; 3; i1++) {
						if(c.itemKeptId[i1] &gt; 0) {
							c.getItems().addItem(c.itemKeptId[i1], 1);
						}
					}
				}	
				if(c.prayerActive[10]) { // if we have protect items 
					if(c.itemKeptId[3] &gt; 0) {
						c.getItems().addItem(c.itemKeptId[3], 1);
					}
				}
			}
			c.getItems().resetKeepItems();
		} else if (c.inPits) {
			Server.fightPits.removePlayerFromPits(c.playerId);
			c.pitsStatus = 1;
		}
	}
	c.getCombat().resetPrayers();
	for (int i = 0; i &lt; 20; i++) {
		c.playerLevel[i] = getLevelForXP(c.playerXP[i]);
		c.getPA().refreshSkill(i);
	}
	if (c.pitsStatus == 1) {
		movePlayer(2399, 5173, 0);
	} else if(c.duelStatus &lt;= 4) { // if we are not in a duel repawn to wildy
		movePlayer(Config.RESPAWN_X, Config.RESPAWN_Y, 0);
		c.isSkulled = false;
		c.skullTimer = 0;
		c.attackedPlayers.clear();
	} else if (c.inFightCaves()) {
		c.getPA().resetTzhaar();
	} else if (c.inRFD()) {
		c.getPA().resetRFD();
	} else { // we are in a duel, respawn outside of arena
		Client o = (Client) Server.playerHandler.players[c.duelingWith];
		if(o != null) {
			o.getPA().createPlayerHints(10, -1);
			if(o.duelStatus == 6) {
				o.getTradeAndDuel().duelVictory();
				//o.pcPoints += 1;
				//o.sendMessage("You have gained 1 Soul Split Points for winning a duel");
			}
		}
		movePlayer(Config.DUELING_RESPAWN_X+(Misc.random(Config.RANDOM_DUELING_RESPAWN)), Config.DUELING_RESPAWN_Y+(Misc.random(Config.RANDOM_DUELING_RESPAWN)), 0);
		if(c.duelStatus != 6) { // if we have won but have died, don't reset the duel status.
			c.getTradeAndDuel().resetDuel();
		}
	}
	//PlayerSaving.getSingleton().requestSave(c.playerId);
	PlayerSave.saveGame(c);
	c.getCombat().resetPlayerAttack();
	resetAnimation();
	c.startAnimation(65535);
	frame1();
	resetTb();
	c.isSkulled = false;
	c.attackedPlayers.clear();
	c.headIconPk = -1;
	removeAllWindows();
	c.tradeResetNeeded = true;
	c.skullTimer = -1;
	c.damageTaken = new int[Config.MAX_PLAYERS];
	c.getPA().requestUpdates();
}[/code]
</code></pre>
<p>Heres my entire curse class.</p>
<p>[code]<br>
package server.model.players;</p>
<p>import server.Config;<br>
import server.Server;<br>
import server.util.Misc;<br>
import server.model.players.*;</p>
<p>public class Curse {</p>
<pre><code>private Client c;
public Curse(Client c) {
	this.c = c;
}

public void resetCurse() {
	for(int p = 0; p &lt; c.curseActive.length; p++) {
		c.curseActive[p] = false;
		c.getPA().sendFrame36(c.CURSE_GLOW[p], 0);
	}
	c.headIcon = -1;
	c.getPA().requestUpdates();
}

public void strCurse(int i) {
	for (int j = 0; j &lt; str.length; j++) {
		if (str[j] != i) {
			c.curseActive[str[j]] = false;
			c.getPA().sendFrame36(c.CURSE_GLOW[str[j]], 0);
		}								
	}
}
public void atkCurse(int i) {
	for (int j = 0; j &lt; atk.length; j++) {
		if (atk[j] != i) {
			c.curseActive[atk[j]] = false;
			c.getPA().sendFrame36(c.CURSE_GLOW[atk[j]], 0);
		}						
	}
}
public void defCurse(int i) {
	for (int j = 0; j &lt; def.length; j++) {
		if (def[j] != i) {
			c.curseActive[def[j]] = false;
			c.getPA().sendFrame36(c.CURSE_GLOW[def[j]], 0);
		}								
	}
}
public void rngCurse(int i) {
	for (int j = 0; j &lt; rng.length; j++) {
		if (rng[j] != i) {
			c.curseActive[rng[j]] = false;
			c.getPA().sendFrame36(c.CURSE_GLOW[rng[j]], 0);
		}								
	}
}
public void mgeCurse(int i) {
	for (int j = 0; j &lt; mge.length; j++) {
		if (mge[j] != i) {
			c.curseActive[mge[j]] = false;
			c.getPA().sendFrame36(c.CURSE_GLOW[mge[j]], 0);
		}								
	}
}
public void sprtCurse(int i) {
	for (int j = 0; j &lt; sprt.length; j++) {
		if (sprt[j] != i) {
			c.curseActive[sprt[j]] = false;
			c.getPA().sendFrame36(c.CURSE_GLOW[sprt[j]], 0);
		}								
	}
}

public int[] def = {13, 19};
public int[] str = {14, 19};
public int[] atk = {1, 10, 19};
public int[] rng = {2, 11, 19};
public int[] mge = {3, 12, 19};
public int[] sprt = {4, 16};//spirit
	
public void activateCurse(int i) {
	if(c.duelRule[7]) {
		resetCurse();
		c.sendMessage("Prayer has been disabled in this duel!");
		return;
	}
	if(c.inRFD()){
		resetCurse();
		c.sendMessage("You cannot use prayer in here!");
		return;
	}
	if (c.playerLevel[1] &lt; 30) {
		c.getPA().sendFrame36(c.CURSE_GLOW[i], 0);
		c.sendMessage("You need 30 Defence to use this prayer.");
		return;
	}
	//0 = pItem//1 = sapWar//2 = sapRng//3 = sapMge//4 = sapSprt
	//5 = berserk//6 = defSum//7 = defMge//8 = defRng//9 = defMel
	//10 = leechAtk//11 = leechRng//12 = leechMge//13 = leechDef//14 = leechStr
	//15 = leechEnrgy//16 = leechSpec//17 = wrath//18 = soul//19 = turmoil
	
	if(c.playerLevel[5] &gt; 0 || !Config.PRAYER_POINTS_REQUIRED) {
		if(c.getPA().getLevelForXP(c.playerXP[5]) &gt;= c.CURSE_LEVEL_REQUIRED[i] || !Config.PRAYER_LEVEL_REQUIRED) {
			boolean headIcon = false;
			switch(i) {
				case 0://pItem
					c.lastProtItem = System.currentTimeMillis();
				break;
				
				//case 1:
				case 10:
					if (c.curseActive[i] == false) {
						atkCurse(i); // FUNKAR LÅT VA!
					}
				break;
				
				case 2:
				case 11:
					if (c.curseActive[i] == false) {
						rngCurse(i); // FUNKAR!! LÅT VA!!!
					}
				break;
				
				case 3:
				case 12:
					if (c.curseActive[i] == false) {
						mgeCurse(i); // FUNKAR LÅT STÅ!
					}
				break;
				
				case 4:
				case 16:
					if (c.curseActive[i] == false) {
						sprtCurse(i); // FUNKAR!!
					}
				break;
				
				case 13:
					if (c.curseActive[i] == false) {
						defCurse(i); // FUNKARRRR
					}
				break;
				case 14:
					if (c.curseActive[i] == false) {
						strCurse(i); // ALLL GOOOD
					}
				break;
				
				case 6:	
				case 7:					
				case 8:
				case 9:
					if(System.currentTimeMillis() - c.stopPrayerDelay &lt; 5000) {
						c.sendMessage("You have been injured and can't use this prayer!");
						c.getPA().sendFrame36(c.CURSE_GLOW[7], 0);
						c.getPA().sendFrame36(c.CURSE_GLOW[8], 0);
						c.getPA().sendFrame36(c.CURSE_GLOW[9], 0);
						return;
					}
					if (i == 7)
						c.protMageDelay = System.currentTimeMillis();
					else if (i == 8)
						c.protRangeDelay = System.currentTimeMillis();
					else if (i == 9)
						c.protMeleeDelay = System.currentTimeMillis();
				case 17:
				case 18:
					headIcon = true;		
					for(int p = 6; p &lt; 19; p++) {
						if(i != p &amp;&amp; p != 10 &amp;&amp; p != 11 &amp;&amp; p != 10 &amp;&amp; p != 12 &amp;&amp; p != 13 &amp;&amp; p != 14 &amp;&amp; p != 15 &amp;&amp; p != 16) {
							c.curseActive[p] = false;
							c.getPA().sendFrame36(c.CURSE_GLOW[p], 0);
						}
					}
				break;
				
				case 19://Turmoil - DONE
					if (c.curseActive[i] == false) {
						c.startAnimation(12565);
						c.gfx0(2226);
						strCurse(i);
						atkCurse(i);
						defCurse(i);
						mgeCurse(i);
						rngCurse(i);
					}
				break;
			}
			if(!headIcon) {
				if(c.curseActive[i] == false) {
					c.curseActive[i] = true;
					c.getPA().sendFrame36(c.CURSE_GLOW[i], 1);					
				} else {
					c.curseActive[i] = false;
					c.getPA().sendFrame36(c.CURSE_GLOW[i], 0);
				}
			} else {
				if(c.curseActive[i] == false) {
					c.curseActive[i] = true;
					c.getPA().sendFrame36(c.CURSE_GLOW[i], 1);
					c.headIcon = c.CURSE_HEAD_ICONS[i];
					c.getPA().requestUpdates();
				} else {
					c.curseActive[i] = false;
					c.getPA().sendFrame36(c.CURSE_GLOW[i], 0);
					c.headIcon = -1;
					c.getPA().requestUpdates();
				}
			}
		} else {
			c.getPA().sendFrame36(c.CURSE_GLOW[i],0);
			c.getPA().sendFrame126("You need a @blu@Prayer level of "+c.CURSE_LEVEL_REQUIRED[i]+" to use "+c.CURSE_NAME[i]+".", 357);
			c.getPA().sendFrame126("Click here to continue", 358);
			c.getPA().sendFrame164(356);
		}
	} else {
		c.getPA().sendFrame36(c.CURSE_GLOW[i],0);
		c.sendMessage("You have run out of prayer points!");
	}		
}
</code></pre>
<p>}[/code]</p>
<p>And heres the stuff that has to do with prayer in my clickingbuttons class</p>
<p>[code]			/<strong>Prayers</strong>/<br>
case 87231: // thick skin<br>
if(c.trade11 &gt; 1) {<br>
for(int p = 0; p &lt; c.PRAYER.length; p++) { // reset prayer glows<br>
c.prayerActive[p] = false;<br>
c.getPA().sendFrame36(c.PRAYER_GLOW[p], 0);	<br>
}<br>
c.sendMessage(“You must wait 15 minutes before using this!”);<br>
return;<br>
}<br>
c.getCurse().activateCurse(0);<br>
break;	<br>
case 87233: // burst of str<br>
c.getCurse().activateCurse(1);<br>
break;	<br>
case 87235: // charity of thought<br>
c.getCurse().activateCurse(2);<br>
break;	<br>
case 87237: // range<br>
c.getCurse().activateCurse(3);<br>
break;<br>
case 87239: // mage<br>
c.getCurse().activateCurse(4);<br>
break;<br>
case 87241: // rockskin<br>
c.getCurse().activateCurse(5);<br>
break;<br>
case 87243: // super human<br>
c.getCurse().activateCurse(6);<br>
break;<br>
case 87245:	// improved reflexes<br>
c.getCurse().activateCurse(7);<br>
break;<br>
case 87247: //hawk eye<br>
c.getCurse().activateCurse(8);<br>
break;<br>
case 87249:<br>
c.getCurse().activateCurse(9);<br>
break;<br>
case 87251: // protect Item<br>
c.getCurse().activateCurse(10);<br>
break;			<br>
case 87253: // 26 range<br>
c.getCurse().activateCurse(11);<br>
break;<br>
case 87255: // 27 mage<br>
c.getCurse().activateCurse(12);<br>
break;	<br>
case 88001: // steel skin<br>
c.getCurse().activateCurse(13);<br>
break;<br>
case 88003: // ultimate str<br>
c.getCurse().activateCurse(14);<br>
break;<br>
case 88005: // incredible reflex<br>
c.getCurse().activateCurse(15);<br>
break;	<br>
case 88007: // protect from magic<br>
c.getCurse().activateCurse(16);<br>
break;					<br>
case 88009: // protect from range<br>
c.getCurse().activateCurse(17);<br>
break;<br>
case 88011: // protect from melee<br>
c.getCurse().activateCurse(18);<br>
break;<br>
case 88013: // 44 range<br>
c.getCurse().activateCurse(19);<br>
break;	<br>
/<strong>End of curse prayers</strong>/</p>
<pre><code>		/**Prayers**/
		case 97168: // thick skin
		c.getCombat().activatePrayer(0);
		break;	
		case 97170: // burst of str
		c.getCombat().activatePrayer(1);
		break;	
		case 97172: // charity of thought
		c.getCombat().activatePrayer(2);
		break;	
		case 97174: // range
		c.getCombat().activatePrayer(3);
		break;
		case 97176: // mage
		c.getCombat().activatePrayer(4);
		break;
		case 97178: // rockskin
		c.getCombat().activatePrayer(5);
		break;
		case 97180: // super human
		c.getCombat().activatePrayer(6);
		break;
		case 97182:	// improved reflexes
		c.getCombat().activatePrayer(7);
		break;
		case 97184: //hawk eye
		c.getCombat().activatePrayer(8);
		break;
		case 97186:
		c.getCombat().activatePrayer(9);
		break;
		case 97188: // protect Item
		/*if(c.trade11 &gt; 1) {
		for(int p = 0; p &lt; c.PRAYER.length; p++) { // reset prayer glows 
			c.prayerActive[p] = false;
			c.getPA().sendFrame36(c.PRAYER_GLOW[p], 0);	
		}
		c.sendMessage("You must wait 15 minutes before using this!");
		return;
		}*/
		c.getCombat().activatePrayer(10);
		break;			
		case 97190: // 26 range
		c.getCombat().activatePrayer(11);
		break;
		case 97192: // 27 mage
		c.getCombat().activatePrayer(12);
		break;	
		case 97194: // steel skin
		c.getCombat().activatePrayer(13);
		break;
		case 97196: // ultimate str
		c.getCombat().activatePrayer(14);
		break;
		case 97198: // incredible reflex
		c.getCombat().activatePrayer(15);
		break;	
		case 97200: // protect from magic
		c.getCombat().activatePrayer(16);
		break;					
		case 97202: // protect from range
		c.getCombat().activatePrayer(17);
		break;
		case 97204: // protect from melee
		c.getCombat().activatePrayer(18);
		break;
		case 97206: // 44 range
		c.getCombat().activatePrayer(19);
		break;	
		case 97208: // 45 mystic
		c.getCombat().activatePrayer(20);
		break;				
		case 97210: // retrui
		c.getCombat().activatePrayer(21);
		break;					
		case 97212: // redem
		c.getCombat().activatePrayer(22);
		break;					
		case 97214: // smite
		c.getCombat().activatePrayer(23);
		break;
		case 97216: // chiv
		c.getCombat().activatePrayer(24);
		break;
		case 97218: // piety
		c.getCombat().activatePrayer(25);
		break;[/code]</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-protect-item-prayer-curses/377286/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-protect-item-prayer-curses/377286/1</link>
        <pubDate>Fri, 07 Jan 2011 21:36:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-377286-1</guid>
        <source url="https://forum.moparisthebest.com/t/pi-protect-item-prayer-curses/377286.rss">[PI] Protect Item Prayer[Curses]</source>
      </item>
  </channel>
</rss>
