<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[PI] Runecrafting Pouches</title>
    <link>https://forum.moparisthebest.com/t/pi-runecrafting-pouches/409031</link>
    <description>This will give you 100% Runecrafting pouches, with degrading and repairing. You shouldn&#39;t get any errors.

Declare these in PlayerAssistant.java:

	[code]private final int RUNE_ESS = 1436;
	private final int PURE_ESS = 7936;

	public final int SMALL_POUCH = 5509;
	public final int MEDIUM_POUCH = 5510;
	public final int LARGE_POUCH = 5512;
	public final int GIANT_POUCH = 5514;

	public final int BROKEN_MEDIUM_POUCH = 5511;
	public final int BROKEN_LARGE_POUCH = 5513;
	public final int BROKEN_GIANT_POUCH = 5515;

	public int mediumPouchCapacity;
	public int largePouchCapacity;
	public int giantPouchCapacity;[/code]

Add these methods in PlayerAssistant.java:

[code]	public void addPouches() {
		if (c.getItems().getItemCount(SMALL_POUCH) &lt; 1 &amp;&amp; c.getItems().getBankAmount(SMALL_POUCH) &lt; 1) {
			if (c.getItems().freeSlots() &gt; 0) {
				c.getItems().addItem(SMALL_POUCH, 1);
			} else {
				c.sendMessage(&quot;You have run out of inventory slots.&quot;);
				return;
			}
		}
		if ((c.getItems().getItemCount(MEDIUM_POUCH) &lt; 1 &amp;&amp; c.getItems().getBankAmount(MEDIUM_POUCH) &gt; 1)) {
			if (!(c.getItems().getItemCount(BROKEN_MEDIUM_POUCH) &lt; 1 &amp;&amp; c.getItems().getBankAmount(BROKEN_MEDIUM_POUCH) &gt; 1)) {
				if (c.playerLevel[20] &gt;= 25) {
					if (c.getItems().freeSlots() &gt; 0) {
						c.getItems().addItem(MEDIUM_POUCH, 1);
						c.mediumPouchDecay = 45;
					} else {
						c.sendMessage(&quot;You have run out of inventory slots.&quot;);
						return;
					}
				}
			}
		}
		if ((c.getItems().getItemCount(LARGE_POUCH) &lt; 1 &amp;&amp; c.getItems().getBankAmount(LARGE_POUCH) &gt; 1)) {
			if (!(c.getItems().getItemCount(BROKEN_LARGE_POUCH) &lt; 1 &amp;&amp; c.getItems().getBankAmount(BROKEN_LARGE_POUCH) &gt; 1)) {
				if (c.playerLevel[20] &gt;= 50) {
					if (c.getItems().freeSlots() &gt; 0) {
						c.getItems().addItem(LARGE_POUCH, 1);
						c.largePouchDecay = 29;
					} else {
						c.sendMessage(&quot;You have run out of inventory slots.&quot;);
						return;
					}
				}
			}
		}
		if ((c.getItems().getItemCount(GIANT_POUCH) &lt; 1 &amp;&amp; c.getItems().getBankAmount(GIANT_POUCH) &gt; 1)) {
			if (!(c.getItems().getItemCount(BROKEN_GIANT_POUCH) &lt; 1 &amp;&amp; c.getItems().getBankAmount(BROKEN_GIANT_POUCH) &gt; 1)) {
				if (c.playerLevel[20] &gt;= 75) {
					if (c.getItems().freeSlots() &gt; 0) {
						c.getItems().addItem(GIANT_POUCH, 1);
						c.giantPouchDecay = 10;
					} else {
						c.sendMessage(&quot;You have run out of inventory slots.&quot;);
						return;
					}
				}
			}
		}
	}

	public void repairPouches() {
		if (c.getItems().playerHasItem(BROKEN_MEDIUM_POUCH, 1)) {
			c.getItems().deleteItem(BROKEN_MEDIUM_POUCH, 1);
			c.getItems().addItem(MEDIUM_POUCH, 1);
		}
		if (c.getItems().playerHasItem(BROKEN_LARGE_POUCH, 1)) {
			c.getItems().deleteItem(BROKEN_LARGE_POUCH, 1);
			c.getItems().addItem(LARGE_POUCH, 1);
		}
		if (c.getItems().playerHasItem(BROKEN_GIANT_POUCH, 1)) {
			c.getItems().deleteItem(BROKEN_GIANT_POUCH, 1);
			c.getItems().addItem(GIANT_POUCH, 1);
		}
		c.mediumPouchDecay = 45;
		c.largePouchDecay = 29;
		c.giantPouchDecay = 10;
	}

	public void addSmallPouch() {
		if (c.smallPouchP + c.smallPouchE &gt;= 3)
			return;
		int pEss = c.getItems().getItemCount(PURE_ESS);
		int rEss = c.getItems().getItemCount(RUNE_ESS);
		if (pEss &gt; 3)
			pEss = 3;
		if (rEss &gt; 3)
			rEss = 3;
		for (int i = 0; i &lt; pEss; i++) {
			c.smallPouchP++;
			c.getItems().deleteItem(PURE_ESS, 1);
			if (c.smallPouchP + c.smallPouchE &gt;= 3)
				return;
		}
		for (int j = 0; j &lt; rEss; j++) {
			c.smallPouchE++;
			c.getItems().deleteItem(RUNE_ESS, 1);
			if (c.smallPouchP + c.smallPouchE &gt;= 3)
				return;
		}
	}

	public void removeSmallPouch() {
		if (c.smallPouchE == 0 &amp;&amp; c.smallPouchP == 0)
			return;
		int pouchp = c.smallPouchP;
		int pouche = c.smallPouchE;
		for (int i = 0; i &lt; c.smallPouchP; i++) {
			int invSlots = c.getItems().freeSlots();
			if (invSlots &gt; 0) {
				c.getItems().addItem(PURE_ESS, 1);
				pouchp--;
			} else {
				c.sendMessage(&quot;You have run out of free inventory slots.&quot;);
				c.smallPouchP = pouchp;
				return;
			}
		}
		c.smallPouchP = pouchp;
		for (int i = 0; i &lt; c.smallPouchE; i++) {
			int invSlots = c.getItems().freeSlots();
			if (invSlots &gt; 0) {
				c.getItems().addItem(RUNE_ESS, 1);
				pouche--;
			} else {
				c.sendMessage(&quot;You have run out of free inventory slots.&quot;);
				c.smallPouchE = pouche;
				return;
			}
		}
		c.smallPouchE = pouche;
	}

	public void addMediumPouch() {
		if (c.mediumPouchDecay &lt; 0)
			mediumPouchCapacity = 3;
		else
			mediumPouchCapacity = 6;
		if (c.mediumPouchP + c.mediumPouchE &gt;= mediumPouchCapacity)
			return;
		if (c.mediumPouchDecay &gt; 0)
			c.mediumPouchDecay--;
		if (c.mediumPouchDecay == 0) {
			c.getItems().deleteItem(MEDIUM_POUCH, 1);
			c.getItems().addItem(BROKEN_MEDIUM_POUCH, 1);
			mediumPouchCapacity = 3;
			c.mediumPouchDecay = -1;
		}
		if (c.mediumPouchP + c.mediumPouchE &gt;= mediumPouchCapacity)
			return;
		int pEss = c.getItems().getItemCount(PURE_ESS);
		int rEss = c.getItems().getItemCount(RUNE_ESS);
		if (pEss &gt; mediumPouchCapacity)
			pEss = mediumPouchCapacity;
		if (rEss &gt; mediumPouchCapacity)
			rEss = mediumPouchCapacity;
		for (int i = 0; i &lt; pEss; i++) {
			c.mediumPouchP++;
			c.getItems().deleteItem(PURE_ESS, 1);
			if (c.mediumPouchP + c.mediumPouchE &gt;= mediumPouchCapacity)
				return;
		}
		for (int j = 0; j &lt; rEss; j++) {
			c.mediumPouchE++;
			c.getItems().deleteItem(RUNE_ESS, 1);
			if (c.mediumPouchP + c.mediumPouchE &gt;= mediumPouchCapacity)
				return;
		}
	}

	public void removeMediumPouch() {
		if (c.mediumPouchE == 0 &amp;&amp; c.mediumPouchP == 0)
			return;
		int pouchp = c.mediumPouchP;
		int pouche = c.mediumPouchE;
		for (int i = 0; i &lt; c.mediumPouchP; i++) {
			int invSlots = c.getItems().freeSlots();
			if (invSlots &gt; 0) {
				c.getItems().addItem(PURE_ESS, 1);
				pouchp--;
			} else {
				c.sendMessage(&quot;You have run out of free inventory slots.&quot;);
				c.mediumPouchP = pouchp;
				return;
			}
		}
		c.mediumPouchP = pouchp;
		for (int i = 0; i &lt; c.mediumPouchE; i++) {
			int invSlots = c.getItems().freeSlots();
			if (invSlots &gt; 0) {
				c.getItems().addItem(RUNE_ESS, 1);
				pouche--;
			} else {
				c.sendMessage(&quot;You have run out of free inventory slots.&quot;);
				c.mediumPouchE = pouche;
				return;
			}
		}
		c.mediumPouchE = pouche;
	}

	public void addLargePouch() {
		if (c.largePouchDecay &lt; 0)
			largePouchCapacity = 6;
		else
			largePouchCapacity = 9;
		if (c.largePouchP + c.largePouchE &gt;= largePouchCapacity)
			return;
		if (c.largePouchDecay &gt; 0)
			c.largePouchDecay--;
		if (c.largePouchDecay == 0) {
			c.getItems().deleteItem(LARGE_POUCH, 1);
			c.getItems().addItem(BROKEN_LARGE_POUCH, 1);
			largePouchCapacity = 6;
			c.largePouchDecay = -1;
		}
		if (c.largePouchP + c.largePouchE &gt;= largePouchCapacity)
			return;
		int pEss = c.getItems().getItemCount(PURE_ESS);
		int rEss = c.getItems().getItemCount(RUNE_ESS);
		if (pEss &gt; largePouchCapacity)
			pEss = largePouchCapacity;
		if (rEss &gt; largePouchCapacity)
			rEss = largePouchCapacity;
		for (int i = 0; i &lt; pEss; i++) {
			c.largePouchP++;
			c.getItems().deleteItem(PURE_ESS, 1);
			if (c.largePouchP + c.largePouchE &gt;= largePouchCapacity)
				return;
		}
		for (int j = 0; j &lt; rEss; j++) {
			c.largePouchE++;
			c.getItems().deleteItem(RUNE_ESS, 1);
			if (c.largePouchP + c.largePouchE &gt;= largePouchCapacity)
				return;
		}
	}

	public void removeLargePouch() {
		if (c.largePouchE == 0 &amp;&amp; c.largePouchP == 0)
			return;
		int pouchp = c.largePouchP;
		int pouche = c.largePouchE;
		for (int i = 0; i &lt; c.largePouchP; i++) {
			int invSlots = c.getItems().freeSlots();
			if (invSlots &gt; 0) {
				c.getItems().addItem(PURE_ESS, 1);
				pouchp--;
			} else {
				c.sendMessage(&quot;You have run out of free inventory slots.&quot;);
				c.largePouchP = pouchp;
				return;
			}
		}
		c.largePouchP = pouchp;
		for (int i = 0; i &lt; c.largePouchE; i++) {
			int invSlots = c.getItems().freeSlots();
			if (invSlots &gt; 0) {
				c.getItems().addItem(RUNE_ESS, 1);
				pouche--;
			} else {
				c.sendMessage(&quot;You have run out of free inventory slots.&quot;);
				c.largePouchE = pouche;
				return;
			}
		}
		c.largePouchE = pouche;
	}

	public void addGiantPouch() {
		if (c.giantPouchDecay &lt; 0)
			giantPouchCapacity = 9;
		else
			giantPouchCapacity = 12;
		if (c.giantPouchP + c.giantPouchE &gt;= giantPouchCapacity)
			return;
		if (c.giantPouchDecay &gt; 0)
			c.giantPouchDecay--;
		if (c.giantPouchDecay == 0) {
			c.getItems().deleteItem(GIANT_POUCH, 1);
			c.getItems().addItem(BROKEN_GIANT_POUCH, 1);
			giantPouchCapacity = 9;
			c.giantPouchDecay = -1;
		}
		if (c.giantPouchP + c.giantPouchE &gt;= giantPouchCapacity)
			return;
		int pEss = c.getItems().getItemCount(PURE_ESS);
		int rEss = c.getItems().getItemCount(RUNE_ESS);
		if (pEss &gt; giantPouchCapacity)
			pEss = giantPouchCapacity;
		if (rEss &gt; giantPouchCapacity)
			rEss = giantPouchCapacity;
		for (int i = 0; i &lt; pEss; i++) {
			c.giantPouchP++;
			c.getItems().deleteItem(PURE_ESS, 1);
			if (c.giantPouchP + c.giantPouchE &gt;= giantPouchCapacity)
				return;
		}
		for (int j = 0; j &lt; rEss; j++) {
			c.giantPouchE++;
			c.getItems().deleteItem(RUNE_ESS, 1);
			if (c.giantPouchP + c.giantPouchE &gt;= giantPouchCapacity)
				return;
		}
	}

	public void removeGiantPouch() {
		if (c.giantPouchE == 0 &amp;&amp; c.giantPouchP == 0)
			return;
		int pouchp = c.giantPouchP;
		int pouche = c.giantPouchE;
		for (int i = 0; i &lt; c.giantPouchP; i++) {
			int invSlots = c.getItems().freeSlots();
			if (invSlots &gt; 0) {
				c.getItems().addItem(PURE_ESS, 1);
				pouchp--;
			} else {
				c.sendMessage(&quot;You have run out of free inventory slots.&quot;);
				c.giantPouchP = pouchp;
				return;
			}
		}
		c.giantPouchP = pouchp;
		for (int i = 0; i &lt; c.giantPouchE; i++) {
			int invSlots = c.getItems().freeSlots();
			if (invSlots &gt; 0) {
				c.getItems().addItem(RUNE_ESS, 1);
				pouche--;
			} else {
				c.sendMessage(&quot;You have run out of free inventory slots.&quot;);
				c.giantPouchE = pouche;
				return;
			}
		}
		c.giantPouchE = pouche;
	}[/code]

Declare these in Player.java:

[code]	public int smallPouchP, smallPouchE;
	public int mediumPouchP, mediumPouchE;
	public int largePouchP, largePouchE;
	public int giantPouchP, giantPouchE;
	public int mediumPouchDecay, largePouchDecay, giantPouchDecay;[/code]

In PlayerSave.java, under:

[code]					} else if (token.equals(&quot;Sara-KC&quot;)) {
						p.Sara = Integer.parseInt(token2);[/code]

Add:

[code]					} else if (token.equals(&quot;mediumPouchDecay&quot;)) {
						p.mediumPouchDecay = Integer.parseInt(token2);
					} else if (token.equals(&quot;largePouchDecay&quot;)) {
						p.largePouchDecay = Integer.parseInt(token2);
					} else if (token.equals(&quot;giantPouchDecay&quot;)) {
						p.giantPouchDecay = Integer.parseInt(token2);[/code]

Under:

			[code]characterfile.write(&quot;Sara-KC = &quot;, 0, 10);
			characterfile.write(Integer.toString(p.Sara), 0, Integer.toString(p.Sara).length());
			characterfile.newLine();[/code]

Add:

[code]			characterfile.write(&quot;mediumPouchDecay = &quot;, 0, 19);
			characterfile.write(Integer.toString(p.mediumPouchDecay), 0, Integer.toString(p.mediumPouchDecay).length());
			characterfile.newLine();
			characterfile.write(&quot;largePouchDecay = &quot;, 0, 18);
			characterfile.write(Integer.toString(p.largePouchDecay), 0, Integer.toString(p.largePouchDecay).length());
			characterfile.newLine();
			characterfile.write(&quot;giantPouchDecay = &quot;, 0, 18);
			characterfile.write(Integer.toString(p.giantPouchDecay), 0, Integer.toString(p.giantPouchDecay).length());
			characterfile.newLine();[/code]

In WearItem.java, under:

[code]		c.wearId = c.getInStream().readUnsignedWord();
		c.wearSlot = c.getInStream().readUnsignedWordA();
		c.interfaceId = c.getInStream().readUnsignedWordA();[/code]

Add:

[code]		if (c.wearId == 5509) {
			c.getPA().removeSmallPouch();
			return;
		}
		if (c.wearId == 5510) {
			c.getPA().removeMediumPouch();
			return;
		}
		if (c.wearId == 5511) {
			c.getPA().removeMediumPouch();
			return;
		}
		if (c.wearId == 5512) {
			c.getPA().removeLargePouch();
			return;
		}
		if (c.wearId == 5513) {
			c.getPA().removeLargePouch();
			return;
		}
		if (c.wearId == 5514) {
			c.getPA().removeGiantPouch();
			return;
		}
		if (c.wearId == 5515) {
			c.getPA().removeGiantPouch();
			return;
		}[/code]

In ClickItem.java, with the other items, add:

[code]		if (itemId == 5509) {
			c.getPA().addSmallPouch();
		}
		if (itemId == 5510) {
			c.getPA().addMediumPouch();
		}
		if (itemId == 5511) {
			c.getPA().addMediumPouch();
		}
		if (itemId == 5512) {
			c.getPA().addLargePouch();
		}
		if (itemId == 5513) {
			c.getPA().addLargePouch();
		}
		if (itemId == 5514) {
			c.getPA().addGiantPouch();
		}
		if (itemId == 5515) {
			c.getPA().addGiantPouch();
		}[/code]

Let me know if I forgot something.

If you want Dark Mage to give you pouches and repair them, add this:

In ActionHandler.java, under:

[code]	public void firstClickNpc(int npcType) {
		c.clickNpcType = 0;
		c.npcClickIndex = 0;
		switch(npcType) {[/code]

Add:

[code]			case 2262:
				c.getPA().addPouches();
				break;[/code]

Under:

[code]	public void secondClickNpc(int npcType) {
		c.clickNpcType = 0;
		c.npcClickIndex = 0;
		switch(npcType) {[/code]

Add:

[code]			case 2262:
				c.getPA().repairPouches();
				break;[/code]

EDIT: If you have this in WearItem.java, delete it:

[code]		if (c.wearId &gt;= 5509 &amp;&amp; c.wearId &lt;= 5515) {
			int pouch = -1;
			int a = c.wearId;
			if (a == 5509)
				pouch = 0;
			if (a == 5510)
				pouch = 1;
			if (a == 5512)
				pouch = 2;
			if (a == 5514)
				pouch = 3;
			c.getPA().emptyPouch(pouch);
			return;
		}[/code]

And if you have:

[code]		if (itemId &gt;= 5509 &amp;&amp; itemId &lt;= 5514) {
			int pouch = -1;
			int a = itemId;
			if (a == 5509)
				pouch = 0;
			if (a == 5510)
				pouch = 1;
			if (a == 5512)
				pouch = 2;
			if (a == 5514)
				pouch = 3;
			c.getPA().fillPouch(pouch);
			return;
		}[/code]

In ClickItem.java, delete it.

Rep++ if you use ;D</description>
    
    <lastBuildDate>Tue, 09 Aug 2011 02:19:02 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/pi-runecrafting-pouches/409031.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[PI] Runecrafting Pouches</title>
        <dc:creator><![CDATA[@imsuperman05 imsuperman05]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imsuperman05">@imsuperman05</a> wrote:</p>
          <blockquote>
              <p>Did you really…<br>
<a href="http://www.rune%20-%20server.org/runescape-development/google/tutorials/336995-pi-runecrafting-pouches.html" data-bbcode="true" rel="nofollow noopener">http://www.rune -server.org/runescape-development/google/tutorials/336995-pi-runecrafting-pouches.html</a></p>
<p>None of those tutorials are yours your just rep hungry.</p>
<p>[quote=“Primadude, post:2, topic:409031”]First thing I see:</p>
<p>[code=java]        private final int RUNE_ESS = 1436;<br>
private final int PURE_ESS = 7936;</p>
<pre><code>    public final int SMALL_POUCH = 5509;
    public final int MEDIUM_POUCH = 5510;
    public final int LARGE_POUCH = 5512;
    public final int GIANT_POUCH = 5514;

    public final int BROKEN_MEDIUM_POUCH = 5511;
    public final int BROKEN_LARGE_POUCH = 5513;
    public final int BROKEN_GIANT_POUCH = 5515;[/code]
</code></pre>
<p>Use the static modifier for constants. Also, all those constants are only being used within the same class they’re declared in, so make them all private.</p>
<p><code>        private static final int RUNE_ESS = 1436;
        private static final int PURE_ESS = 7936;
        private static final int SMALL_POUCH = 5509;
        private static final int MEDIUM_POUCH = 5510;
        private static final int LARGE_POUCH = 5512;
        private static final int GIANT_POUCH = 5514;
        private static final int BROKEN_MEDIUM_POUCH = 5511;
        private static final int BROKEN_LARGE_POUCH = 5513;
        private static final int BROKEN_GIANT_POUCH = 5515;</code>[/quote]<br>
Bro, he doesn’t know wtf your talking about, he didn’t make this.  He leeched this from rune - server and the other snippet from moh.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-runecrafting-pouches/409031/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-runecrafting-pouches/409031/4</link>
        <pubDate>Tue, 09 Aug 2011 02:19:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-409031-4</guid>
        <source url="https://forum.moparisthebest.com/t/pi-runecrafting-pouches/409031.rss">[PI] Runecrafting Pouches</source>
      </item>
      <item>
        <title>[PI] Runecrafting Pouches</title>
        <dc:creator><![CDATA[@zoomer zoomer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zoomer">@zoomer</a> wrote:</p>
          <blockquote>
              <p>[quote=“Primadude, post:2, topic:409031”]First thing I see:</p>
<p>[code=java]        private final int RUNE_ESS = 1436;<br>
private final int PURE_ESS = 7936;</p>
<pre><code>    public final int SMALL_POUCH = 5509;
    public final int MEDIUM_POUCH = 5510;
    public final int LARGE_POUCH = 5512;
    public final int GIANT_POUCH = 5514;

    public final int BROKEN_MEDIUM_POUCH = 5511;
    public final int BROKEN_LARGE_POUCH = 5513;
    public final int BROKEN_GIANT_POUCH = 5515;[/code]
</code></pre>
<p>Use the static modifier for constants. Also, all those constants are only being used within the same class they’re declared in, so make them all private.</p>
<p><code>        private static final int RUNE_ESS = 1436;
        private static final int PURE_ESS = 7936;
        private static final int SMALL_POUCH = 5509;
        private static final int MEDIUM_POUCH = 5510;
        private static final int LARGE_POUCH = 5512;
        private static final int GIANT_POUCH = 5514;
        private static final int BROKEN_MEDIUM_POUCH = 5511;
        private static final int BROKEN_LARGE_POUCH = 5513;
        private static final int BROKEN_GIANT_POUCH = 5515;</code>[/quote]<br>
thanks</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-runecrafting-pouches/409031/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-runecrafting-pouches/409031/3</link>
        <pubDate>Tue, 09 Aug 2011 01:59:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-409031-3</guid>
        <source url="https://forum.moparisthebest.com/t/pi-runecrafting-pouches/409031.rss">[PI] Runecrafting Pouches</source>
      </item>
      <item>
        <title>[PI] Runecrafting Pouches</title>
        <dc:creator><![CDATA[@primadude Primadude]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/primadude">@primadude</a> wrote:</p>
          <blockquote>
              <p>First thing I see:</p>
<p>[code=java]        private final int RUNE_ESS = 1436;<br>
private final int PURE_ESS = 7936;</p>
<pre><code>    public final int SMALL_POUCH = 5509;
    public final int MEDIUM_POUCH = 5510;
    public final int LARGE_POUCH = 5512;
    public final int GIANT_POUCH = 5514;

    public final int BROKEN_MEDIUM_POUCH = 5511;
    public final int BROKEN_LARGE_POUCH = 5513;
    public final int BROKEN_GIANT_POUCH = 5515;[/code]
</code></pre>
<p>Use the static modifier for constants. Also, all those constants are only being used within the same class they’re declared in, so make them all private.</p>
<p><code>        private static final int RUNE_ESS = 1436;
        private static final int PURE_ESS = 7936;
        private static final int SMALL_POUCH = 5509;
        private static final int MEDIUM_POUCH = 5510;
        private static final int LARGE_POUCH = 5512;
        private static final int GIANT_POUCH = 5514;
        private static final int BROKEN_MEDIUM_POUCH = 5511;
        private static final int BROKEN_LARGE_POUCH = 5513;
        private static final int BROKEN_GIANT_POUCH = 5515;</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-runecrafting-pouches/409031/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-runecrafting-pouches/409031/2</link>
        <pubDate>Tue, 09 Aug 2011 01:51:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-409031-2</guid>
        <source url="https://forum.moparisthebest.com/t/pi-runecrafting-pouches/409031.rss">[PI] Runecrafting Pouches</source>
      </item>
      <item>
        <title>[PI] Runecrafting Pouches</title>
        <dc:creator><![CDATA[@zoomer zoomer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zoomer">@zoomer</a> wrote:</p>
          <blockquote>
              <p>This will give you 100% Runecrafting pouches, with degrading and repairing. You shouldn’t get any errors.</p>
<p>Declare these in PlayerAssistant.java:</p>
<pre><code>[code]private final int RUNE_ESS = 1436;
private final int PURE_ESS = 7936;

public final int SMALL_POUCH = 5509;
public final int MEDIUM_POUCH = 5510;
public final int LARGE_POUCH = 5512;
public final int GIANT_POUCH = 5514;

public final int BROKEN_MEDIUM_POUCH = 5511;
public final int BROKEN_LARGE_POUCH = 5513;
public final int BROKEN_GIANT_POUCH = 5515;

public int mediumPouchCapacity;
public int largePouchCapacity;
public int giantPouchCapacity;[/code]
</code></pre>
<p>Add these methods in PlayerAssistant.java:</p>
<p>[code]	public void addPouches() {<br>
if (c.getItems().getItemCount(SMALL_POUCH) &lt; 1 &amp;&amp; c.getItems().getBankAmount(SMALL_POUCH) &lt; 1) {<br>
if (c.getItems().freeSlots() &gt; 0) {<br>
c.getItems().addItem(SMALL_POUCH, 1);<br>
} else {<br>
c.sendMessage(“You have run out of inventory slots.”);<br>
return;<br>
}<br>
}<br>
if ((c.getItems().getItemCount(MEDIUM_POUCH) &lt; 1 &amp;&amp; c.getItems().getBankAmount(MEDIUM_POUCH) &gt; 1)) {<br>
if (!(c.getItems().getItemCount(BROKEN_MEDIUM_POUCH) &lt; 1 &amp;&amp; c.getItems().getBankAmount(BROKEN_MEDIUM_POUCH) &gt; 1)) {<br>
if (c.playerLevel[20] &gt;= 25) {<br>
if (c.getItems().freeSlots() &gt; 0) {<br>
c.getItems().addItem(MEDIUM_POUCH, 1);<br>
c.mediumPouchDecay = 45;<br>
} else {<br>
c.sendMessage(“You have run out of inventory slots.”);<br>
return;<br>
}<br>
}<br>
}<br>
}<br>
if ((c.getItems().getItemCount(LARGE_POUCH) &lt; 1 &amp;&amp; c.getItems().getBankAmount(LARGE_POUCH) &gt; 1)) {<br>
if (!(c.getItems().getItemCount(BROKEN_LARGE_POUCH) &lt; 1 &amp;&amp; c.getItems().getBankAmount(BROKEN_LARGE_POUCH) &gt; 1)) {<br>
if (c.playerLevel[20] &gt;= 50) {<br>
if (c.getItems().freeSlots() &gt; 0) {<br>
c.getItems().addItem(LARGE_POUCH, 1);<br>
c.largePouchDecay = 29;<br>
} else {<br>
c.sendMessage(“You have run out of inventory slots.”);<br>
return;<br>
}<br>
}<br>
}<br>
}<br>
if ((c.getItems().getItemCount(GIANT_POUCH) &lt; 1 &amp;&amp; c.getItems().getBankAmount(GIANT_POUCH) &gt; 1)) {<br>
if (!(c.getItems().getItemCount(BROKEN_GIANT_POUCH) &lt; 1 &amp;&amp; c.getItems().getBankAmount(BROKEN_GIANT_POUCH) &gt; 1)) {<br>
if (c.playerLevel[20] &gt;= 75) {<br>
if (c.getItems().freeSlots() &gt; 0) {<br>
c.getItems().addItem(GIANT_POUCH, 1);<br>
c.giantPouchDecay = 10;<br>
} else {<br>
c.sendMessage(“You have run out of inventory slots.”);<br>
return;<br>
}<br>
}<br>
}<br>
}<br>
}</p>
<pre><code>public void repairPouches() {
	if (c.getItems().playerHasItem(BROKEN_MEDIUM_POUCH, 1)) {
		c.getItems().deleteItem(BROKEN_MEDIUM_POUCH, 1);
		c.getItems().addItem(MEDIUM_POUCH, 1);
	}
	if (c.getItems().playerHasItem(BROKEN_LARGE_POUCH, 1)) {
		c.getItems().deleteItem(BROKEN_LARGE_POUCH, 1);
		c.getItems().addItem(LARGE_POUCH, 1);
	}
	if (c.getItems().playerHasItem(BROKEN_GIANT_POUCH, 1)) {
		c.getItems().deleteItem(BROKEN_GIANT_POUCH, 1);
		c.getItems().addItem(GIANT_POUCH, 1);
	}
	c.mediumPouchDecay = 45;
	c.largePouchDecay = 29;
	c.giantPouchDecay = 10;
}

public void addSmallPouch() {
	if (c.smallPouchP + c.smallPouchE &gt;= 3)
		return;
	int pEss = c.getItems().getItemCount(PURE_ESS);
	int rEss = c.getItems().getItemCount(RUNE_ESS);
	if (pEss &gt; 3)
		pEss = 3;
	if (rEss &gt; 3)
		rEss = 3;
	for (int i = 0; i &lt; pEss; i++) {
		c.smallPouchP++;
		c.getItems().deleteItem(PURE_ESS, 1);
		if (c.smallPouchP + c.smallPouchE &gt;= 3)
			return;
	}
	for (int j = 0; j &lt; rEss; j++) {
		c.smallPouchE++;
		c.getItems().deleteItem(RUNE_ESS, 1);
		if (c.smallPouchP + c.smallPouchE &gt;= 3)
			return;
	}
}

public void removeSmallPouch() {
	if (c.smallPouchE == 0 &amp;&amp; c.smallPouchP == 0)
		return;
	int pouchp = c.smallPouchP;
	int pouche = c.smallPouchE;
	for (int i = 0; i &lt; c.smallPouchP; i++) {
		int invSlots = c.getItems().freeSlots();
		if (invSlots &gt; 0) {
			c.getItems().addItem(PURE_ESS, 1);
			pouchp--;
		} else {
			c.sendMessage("You have run out of free inventory slots.");
			c.smallPouchP = pouchp;
			return;
		}
	}
	c.smallPouchP = pouchp;
	for (int i = 0; i &lt; c.smallPouchE; i++) {
		int invSlots = c.getItems().freeSlots();
		if (invSlots &gt; 0) {
			c.getItems().addItem(RUNE_ESS, 1);
			pouche--;
		} else {
			c.sendMessage("You have run out of free inventory slots.");
			c.smallPouchE = pouche;
			return;
		}
	}
	c.smallPouchE = pouche;
}

public void addMediumPouch() {
	if (c.mediumPouchDecay &lt; 0)
		mediumPouchCapacity = 3;
	else
		mediumPouchCapacity = 6;
	if (c.mediumPouchP + c.mediumPouchE &gt;= mediumPouchCapacity)
		return;
	if (c.mediumPouchDecay &gt; 0)
		c.mediumPouchDecay--;
	if (c.mediumPouchDecay == 0) {
		c.getItems().deleteItem(MEDIUM_POUCH, 1);
		c.getItems().addItem(BROKEN_MEDIUM_POUCH, 1);
		mediumPouchCapacity = 3;
		c.mediumPouchDecay = -1;
	}
	if (c.mediumPouchP + c.mediumPouchE &gt;= mediumPouchCapacity)
		return;
	int pEss = c.getItems().getItemCount(PURE_ESS);
	int rEss = c.getItems().getItemCount(RUNE_ESS);
	if (pEss &gt; mediumPouchCapacity)
		pEss = mediumPouchCapacity;
	if (rEss &gt; mediumPouchCapacity)
		rEss = mediumPouchCapacity;
	for (int i = 0; i &lt; pEss; i++) {
		c.mediumPouchP++;
		c.getItems().deleteItem(PURE_ESS, 1);
		if (c.mediumPouchP + c.mediumPouchE &gt;= mediumPouchCapacity)
			return;
	}
	for (int j = 0; j &lt; rEss; j++) {
		c.mediumPouchE++;
		c.getItems().deleteItem(RUNE_ESS, 1);
		if (c.mediumPouchP + c.mediumPouchE &gt;= mediumPouchCapacity)
			return;
	}
}

public void removeMediumPouch() {
	if (c.mediumPouchE == 0 &amp;&amp; c.mediumPouchP == 0)
		return;
	int pouchp = c.mediumPouchP;
	int pouche = c.mediumPouchE;
	for (int i = 0; i &lt; c.mediumPouchP; i++) {
		int invSlots = c.getItems().freeSlots();
		if (invSlots &gt; 0) {
			c.getItems().addItem(PURE_ESS, 1);
			pouchp--;
		} else {
			c.sendMessage("You have run out of free inventory slots.");
			c.mediumPouchP = pouchp;
			return;
		}
	}
	c.mediumPouchP = pouchp;
	for (int i = 0; i &lt; c.mediumPouchE; i++) {
		int invSlots = c.getItems().freeSlots();
		if (invSlots &gt; 0) {
			c.getItems().addItem(RUNE_ESS, 1);
			pouche--;
		} else {
			c.sendMessage("You have run out of free inventory slots.");
			c.mediumPouchE = pouche;
			return;
		}
	}
	c.mediumPouchE = pouche;
}

public void addLargePouch() {
	if (c.largePouchDecay &lt; 0)
		largePouchCapacity = 6;
	else
		largePouchCapacity = 9;
	if (c.largePouchP + c.largePouchE &gt;= largePouchCapacity)
		return;
	if (c.largePouchDecay &gt; 0)
		c.largePouchDecay--;
	if (c.largePouchDecay == 0) {
		c.getItems().deleteItem(LARGE_POUCH, 1);
		c.getItems().addItem(BROKEN_LARGE_POUCH, 1);
		largePouchCapacity = 6;
		c.largePouchDecay = -1;
	}
	if (c.largePouchP + c.largePouchE &gt;= largePouchCapacity)
		return;
	int pEss = c.getItems().getItemCount(PURE_ESS);
	int rEss = c.getItems().getItemCount(RUNE_ESS);
	if (pEss &gt; largePouchCapacity)
		pEss = largePouchCapacity;
	if (rEss &gt; largePouchCapacity)
		rEss = largePouchCapacity;
	for (int i = 0; i &lt; pEss; i++) {
		c.largePouchP++;
		c.getItems().deleteItem(PURE_ESS, 1);
		if (c.largePouchP + c.largePouchE &gt;= largePouchCapacity)
			return;
	}
	for (int j = 0; j &lt; rEss; j++) {
		c.largePouchE++;
		c.getItems().deleteItem(RUNE_ESS, 1);
		if (c.largePouchP + c.largePouchE &gt;= largePouchCapacity)
			return;
	}
}

public void removeLargePouch() {
	if (c.largePouchE == 0 &amp;&amp; c.largePouchP == 0)
		return;
	int pouchp = c.largePouchP;
	int pouche = c.largePouchE;
	for (int i = 0; i &lt; c.largePouchP; i++) {
		int invSlots = c.getItems().freeSlots();
		if (invSlots &gt; 0) {
			c.getItems().addItem(PURE_ESS, 1);
			pouchp--;
		} else {
			c.sendMessage("You have run out of free inventory slots.");
			c.largePouchP = pouchp;
			return;
		}
	}
	c.largePouchP = pouchp;
	for (int i = 0; i &lt; c.largePouchE; i++) {
		int invSlots = c.getItems().freeSlots();
		if (invSlots &gt; 0) {
			c.getItems().addItem(RUNE_ESS, 1);
			pouche--;
		} else {
			c.sendMessage("You have run out of free inventory slots.");
			c.largePouchE = pouche;
			return;
		}
	}
	c.largePouchE = pouche;
}

public void addGiantPouch() {
	if (c.giantPouchDecay &lt; 0)
		giantPouchCapacity = 9;
	else
		giantPouchCapacity = 12;
	if (c.giantPouchP + c.giantPouchE &gt;= giantPouchCapacity)
		return;
	if (c.giantPouchDecay &gt; 0)
		c.giantPouchDecay--;
	if (c.giantPouchDecay == 0) {
		c.getItems().deleteItem(GIANT_POUCH, 1);
		c.getItems().addItem(BROKEN_GIANT_POUCH, 1);
		giantPouchCapacity = 9;
		c.giantPouchDecay = -1;
	}
	if (c.giantPouchP + c.giantPouchE &gt;= giantPouchCapacity)
		return;
	int pEss = c.getItems().getItemCount(PURE_ESS);
	int rEss = c.getItems().getItemCount(RUNE_ESS);
	if (pEss &gt; giantPouchCapacity)
		pEss = giantPouchCapacity;
	if (rEss &gt; giantPouchCapacity)
		rEss = giantPouchCapacity;
	for (int i = 0; i &lt; pEss; i++) {
		c.giantPouchP++;
		c.getItems().deleteItem(PURE_ESS, 1);
		if (c.giantPouchP + c.giantPouchE &gt;= giantPouchCapacity)
			return;
	}
	for (int j = 0; j &lt; rEss; j++) {
		c.giantPouchE++;
		c.getItems().deleteItem(RUNE_ESS, 1);
		if (c.giantPouchP + c.giantPouchE &gt;= giantPouchCapacity)
			return;
	}
}

public void removeGiantPouch() {
	if (c.giantPouchE == 0 &amp;&amp; c.giantPouchP == 0)
		return;
	int pouchp = c.giantPouchP;
	int pouche = c.giantPouchE;
	for (int i = 0; i &lt; c.giantPouchP; i++) {
		int invSlots = c.getItems().freeSlots();
		if (invSlots &gt; 0) {
			c.getItems().addItem(PURE_ESS, 1);
			pouchp--;
		} else {
			c.sendMessage("You have run out of free inventory slots.");
			c.giantPouchP = pouchp;
			return;
		}
	}
	c.giantPouchP = pouchp;
	for (int i = 0; i &lt; c.giantPouchE; i++) {
		int invSlots = c.getItems().freeSlots();
		if (invSlots &gt; 0) {
			c.getItems().addItem(RUNE_ESS, 1);
			pouche--;
		} else {
			c.sendMessage("You have run out of free inventory slots.");
			c.giantPouchE = pouche;
			return;
		}
	}
	c.giantPouchE = pouche;
}[/code]
</code></pre>
<p>Declare these in Player.java:</p>
<p><code>	public int smallPouchP, smallPouchE;
	public int mediumPouchP, mediumPouchE;
	public int largePouchP, largePouchE;
	public int giantPouchP, giantPouchE;
	public int mediumPouchDecay, largePouchDecay, giantPouchDecay;</code></p>
<p>In PlayerSave.java, under:</p>
<p><code>					} else if (token.equals("Sara-KC")) {
						p.Sara = Integer.parseInt(token2);</code></p>
<p>Add:</p>
<p><code>					} else if (token.equals("mediumPouchDecay")) {
						p.mediumPouchDecay = Integer.parseInt(token2);
					} else if (token.equals("largePouchDecay")) {
						p.largePouchDecay = Integer.parseInt(token2);
					} else if (token.equals("giantPouchDecay")) {
						p.giantPouchDecay = Integer.parseInt(token2);</code></p>
<p>Under:</p>
<pre><code>		[code]characterfile.write("Sara-KC = ", 0, 10);
		characterfile.write(Integer.toString(p.Sara), 0, Integer.toString(p.Sara).length());
		characterfile.newLine();[/code]
</code></pre>
<p>Add:</p>
<p><code>			characterfile.write("mediumPouchDecay = ", 0, 19);
			characterfile.write(Integer.toString(p.mediumPouchDecay), 0, Integer.toString(p.mediumPouchDecay).length());
			characterfile.newLine();
			characterfile.write("largePouchDecay = ", 0, 18);
			characterfile.write(Integer.toString(p.largePouchDecay), 0, Integer.toString(p.largePouchDecay).length());
			characterfile.newLine();
			characterfile.write("giantPouchDecay = ", 0, 18);
			characterfile.write(Integer.toString(p.giantPouchDecay), 0, Integer.toString(p.giantPouchDecay).length());
			characterfile.newLine();</code></p>
<p>In WearItem.java, under:</p>
<p><code>		c.wearId = c.getInStream().readUnsignedWord();
		c.wearSlot = c.getInStream().readUnsignedWordA();
		c.interfaceId = c.getInStream().readUnsignedWordA();</code></p>
<p>Add:</p>
<p><code>		if (c.wearId == 5509) {
			c.getPA().removeSmallPouch();
			return;
		}
		if (c.wearId == 5510) {
			c.getPA().removeMediumPouch();
			return;
		}
		if (c.wearId == 5511) {
			c.getPA().removeMediumPouch();
			return;
		}
		if (c.wearId == 5512) {
			c.getPA().removeLargePouch();
			return;
		}
		if (c.wearId == 5513) {
			c.getPA().removeLargePouch();
			return;
		}
		if (c.wearId == 5514) {
			c.getPA().removeGiantPouch();
			return;
		}
		if (c.wearId == 5515) {
			c.getPA().removeGiantPouch();
			return;
		}</code></p>
<p>In ClickItem.java, with the other items, add:</p>
<p><code>		if (itemId == 5509) {
			c.getPA().addSmallPouch();
		}
		if (itemId == 5510) {
			c.getPA().addMediumPouch();
		}
		if (itemId == 5511) {
			c.getPA().addMediumPouch();
		}
		if (itemId == 5512) {
			c.getPA().addLargePouch();
		}
		if (itemId == 5513) {
			c.getPA().addLargePouch();
		}
		if (itemId == 5514) {
			c.getPA().addGiantPouch();
		}
		if (itemId == 5515) {
			c.getPA().addGiantPouch();
		}</code></p>
<p>Let me know if I forgot something.</p>
<p>If you want Dark Mage to give you pouches and repair them, add this:</p>
<p>In ActionHandler.java, under:</p>
<p><code>	public void firstClickNpc(int npcType) {
		c.clickNpcType = 0;
		c.npcClickIndex = 0;
		switch(npcType) {</code></p>
<p>Add:</p>
<p><code>			case 2262:
				c.getPA().addPouches();
				break;</code></p>
<p>Under:</p>
<p><code>	public void secondClickNpc(int npcType) {
		c.clickNpcType = 0;
		c.npcClickIndex = 0;
		switch(npcType) {</code></p>
<p>Add:</p>
<p><code>			case 2262:
				c.getPA().repairPouches();
				break;</code></p>
<p>EDIT: If you have this in WearItem.java, delete it:</p>
<p><code>		if (c.wearId &gt;= 5509 &amp;&amp; c.wearId &lt;= 5515) {
			int pouch = -1;
			int a = c.wearId;
			if (a == 5509)
				pouch = 0;
			if (a == 5510)
				pouch = 1;
			if (a == 5512)
				pouch = 2;
			if (a == 5514)
				pouch = 3;
			c.getPA().emptyPouch(pouch);
			return;
		}</code></p>
<p>And if you have:</p>
<p><code>		if (itemId &gt;= 5509 &amp;&amp; itemId &lt;= 5514) {
			int pouch = -1;
			int a = itemId;
			if (a == 5509)
				pouch = 0;
			if (a == 5510)
				pouch = 1;
			if (a == 5512)
				pouch = 2;
			if (a == 5514)
				pouch = 3;
			c.getPA().fillPouch(pouch);
			return;
		}</code></p>
<p>In ClickItem.java, delete it.</p>
<p>Rep++ if you use ;D</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-runecrafting-pouches/409031/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-runecrafting-pouches/409031/1</link>
        <pubDate>Tue, 09 Aug 2011 01:15:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-409031-1</guid>
        <source url="https://forum.moparisthebest.com/t/pi-runecrafting-pouches/409031.rss">[PI] Runecrafting Pouches</source>
      </item>
  </channel>
</rss>
