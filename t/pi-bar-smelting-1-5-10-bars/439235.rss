<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[PI]Bar Smelting (1, 5, 10) bars</title>
    <link>https://forum.moparisthebest.com/t/pi-bar-smelting-1-5-10-bars/439235</link>
    <description>Hello, this is a tutorial for bar smelting in Project Insanity. I will be releasing Item on anvil later also.

Lets get started.

[size=12pt]STEP 1:[/size]
First in ClickingButtons.java we will need to add this.
[code]case 15147://Bronze, 1
							c.getSmithing().startSmelting(0, 1);
							break;
						case 15146://Bronze, 5
							c.getSmithing().startSmelting(0, 5);
							break;
						case 10247://Bronze, 10
							c.getSmithing().startSmelting(0, 10);
							break;
						case 15151://Iron, 1
							c.getSmithing().startSmelting(1, 1);
							break;
						case 15150://Iron, 5
							c.getSmithing().startSmelting(1, 5);
							break;
						case 15149://Iron, 10
							c.getSmithing().startSmelting(1, 10);
							break;
						case 15155://silver, 1
							c.getSmithing().startSmelting(2, 1);
							break;
						case 15154://silver, 5
							c.getSmithing().startSmelting(2, 5);
							break;
						case 15153://silver, 10
							c.getSmithing().startSmelting(2, 10);
							break;
						case 15159://steel, 1
							c.getSmithing().startSmelting(3, 1);
							break;
						case 15158://steel, 5
							c.getSmithing().startSmelting(3, 5);
							break;
						case 15157://steel, 10
							c.getSmithing().startSmelting(3, 10);
							break;
						case 15163://gold, 1
							c.getSmithing().startSmelting(4, 1);
							break;
						case 15162://gold, 5
							c.getSmithing().startSmelting(4, 5);
							break;
						case 15161://gold, 10
							c.getSmithing().startSmelting(4, 10);
							break;
						case 29017://mithril, 1
							c.getSmithing().startSmelting(5, 1);
							break;
						case 29016://mithril, 5
							c.getSmithing().startSmelting(5, 5);
							break;
						case 24253://mithril, 10
							c.getSmithing().startSmelting(5, 10);
							break;
						case 29022://addy, 1
							c.getSmithing().startSmelting(6, 1);
							break;
						case 29021://addy, 5
							c.getSmithing().startSmelting(6, 5);
							break;
						case 29019://addy, 10
							c.getSmithing().startSmelting(6, 10);
							break;
						case 29026://rune, 1
							c.getSmithing().startSmelting(7, 1);
							break;
						case 29025://rune, 5
							c.getSmithing().startSmelting(7, 5);
							break;
						case 29024://rune, 10
							c.getSmithing().startSmelting(7, 10);
							break;[/code]

Explaination:

[b]Case 15147[/b] is the ID of the button being clicked ingame.

[b]c.getSmithing().startSmelting(0, 1);[/b] is saying in the Smithing class, do method startSmelthing with arguments of 0, 1. 0 stands for it being the first type of bar and 1 stands for 1 bar.

[code]case 15147://Bronze, 1
							c.getSmithing().startSmelting(0, 1);
							break;[/code]

[size=12pt]STEP 2:[/size]

Next in ClickObject.java we will need to add this in the switch statements under [b]case SECOND_CLICK:[/b]
[code]case 11666:
	case 2781:
	case 3994:
		c.getSmithing().sendSmelting();
		break;[/code]

Explanation:

[b]case 11666:[/b] These are the cases of the Furnaces.

[b]c.getSmithing().sendSmelting();[/b] This is saying in the Smithing class, do the method sendSmelting. This will display the bar with the bars to be smelted.

[size=10pt]STEP 3:[/size]
In Smithing.java we will need to add:
[code]package server.model.players.skills;

import server.Config;
import server.model.players.Client;
import server.event.CycleEvent;
import server.event.CycleEventContainer;
import server.event.CycleEventHandler;
/**
 * Smithing.java
 *
 * @author Sanity @Editor blkancients
 *
 **/
 
public class Smithing {
	
	private Client c;
	private final int[] SMELT_BARS = {2349,2351,2355,2353,2357,2359,2361,2363};
	private final int[] SMELT_FRAME = {2405,2406,2407,2409,2410,2411,2412,2413};
	private final int[] BAR_REQS = {1,15,20,30,40,50,70,85};
	private final int[] ORE_1 = {438,440,442,440,444,447,449,451};
	private final int[] ORE_2 = {436,-1,-1,453,-1,453,453,453};
	private final int[] SMELT_EXP = {6,13,14,18,23,30,38,50};
	private final int[] ORE_2_REQ = {1, -1, -1, 2, -1, 4, 6, 8};

	private int barsMade = 0;
	private int finalBars = 0;
	public Smithing(Client c) {
		this.c = c;
	}
	
	public void sendSmelting() {
		for (int j = 0; j &lt; SMELT_FRAME.length; j++) {
			c.getPA().sendFrame246(SMELT_FRAME[j], 150, SMELT_BARS[j]);
		}
		c.getPA().sendFrame164(2400);
		c.smeltInterface = true;	
	}
	
	public void startSmelting(int barType, int a) {
		if (canSmelt(barType)) {
			if (hasOres(barType)) {
				smeltIt(barType, a);		
			} else {
				c.getPA().removeAllWindows();
				c.sendMessage(&quot;You do not have the required ores to smelt this.&quot;);
				c.getPA().resetVariables();
			}
		} else {
			c.getPA().removeAllWindows();
			c.sendMessage(&quot;You must have a higher smithing level to smith this.&quot;);
			c.getPA().resetVariables();
		}
	}

	
	public boolean canSmelt(int barType) {
		for (int j = 0; j &lt; SMELT_BARS.length; j++) {
			if (barType == j) {
				return c.playerLevel[c.playerSmithing] &gt;= BAR_REQS[j];
			}
		}
		return false;
	}
	
	public boolean hasOres(int barType) {
		if (ORE_2_REQ[barType] &gt; 0)
			return c.getItems().playerHasItem(ORE_1[barType]) &amp;&amp; c.getItems().playerHasItem(ORE_2[barType]);
		else
			return c.getItems().playerHasItem(ORE_1[barType]);
	}
	
	public int barsPossible(int barType) {
		if (hasOres(barType)) {
			if (c.getItems().getItemCount(ORE_2[barType]) &gt;= ORE_2_REQ[barType]) {
				barsMade = c.getItems().getItemCount(ORE_2[barType]);
				barsMade = barsMade / ORE_2_REQ[barType];
				if (c.getItems().getItemCount(ORE_1[barType]) &lt;= barsMade)
					return c.getItems().getItemCount(ORE_1[barType]);
				else 
					return barsMade;
			} else
				return c.getItems().getItemCount(ORE_1[barType]);
		} else
			return 0;
	}
	
	public void smeltIt(final int barType, int a) {
			final int bars = barsPossible(barType);
			if (bars &gt; a &amp;&amp; bars != 0)
				finalBars = a;
			else
				finalBars = bars;
			c.getPA().removeAllWindows();
			c.isSmelting = true;
			if (finalBars != 0) {
				CycleEventHandler.getSingleton().addEvent(c, new CycleEvent() {
				int timer = finalBars;
				@Override
				public void execute(CycleEventContainer container) {
					if (!c.isSmelting)
						container.stop();
					if (c.isSmelting) {
						if (timer != 0) {
							if (c.getItems().getItemCount(ORE_1[barType]) &gt; 0) {
								c.startAnimation(899);
								c.getItems().deleteItem(ORE_1[barType], 1);
								if (ORE_2[barType] &gt; 0)
									c.getItems().deleteItem(ORE_2[barType], ORE_2_REQ[barType]);
								c.getItems().addItem(SMELT_BARS[barType] ,1);
								c.getPA().addSkillXP(SMELT_EXP[barType], c.playerSmithing);
								c.getPA().refreshSkill(c.playerSmithing);
							}
						}
						if (timer &lt;= 0) {
							container.stop();
						}
						timer--;
					}
				}
				@Override
				public void stop() {}
			}, 3);
			}
	}
	
	 public void resetSmithing() {
		c.isSmelting = false;
    }[/code]

Explanation:
[b]sendSmelting()[/b] method is sending the smelting frame that displays the bars to choose from to be smelted.

[b]startSmelting(int barType, int a)[/b] This method checks if you have the required level to smelt the bars, if you have the required ores and if so, it will smeltIt()

[b]canSmelt()[/b] This method checks if the players level is equal or great than what is required by the bar.

[b]hasOres()[/b] This method checks if you have the required ores to smelt the bars.

[b]barsPossible()[/b] This method checks how many bars are possible to be made. If you select 5 bars, but only 3 bars can be made, this method with make it so only 3 bars are made instead of 5.

[b]smeltIt()[/b] This method applies most of what is already explained. It gets the barsPossible(), then using CycleEventContainer, it will smelt the bars with a delay of 3 game ticks which is 1.8 seconds i believe. It will remove the ores, add the bars, and apply the experience. If you walk away from the furnace, you will not continue to smelt.

[b]resetSmithing()[/b] This method resets smithing. Used in the walking packet to stop a player from smithing.

[size=10pt]STEP 4:[/size]
Next in Walking.java add this under processPacket();
[code]c.getSmithing().resetSmithing();[/code]

[b]c.getSmithing().resetSmithing();[/b] This will stop a playing from smelting when they walk away.

In client.java add this near all your variables:
[code]	public boolean isSmelting = false;[/code]

[b]public boolean isSmelting = false;[/b] This variable keeps track of whether the playing is smelting or not.

[size=12pt]STEP 5:[/size]
If you do not already have these, add them in client.java near the others.

[code]private Smithing smith = new Smithing(this);
public Smithing getSmithing() {
		return smith;
	}[/code]

[size=10pt]STEP 6:[/size]
In PlayerAssistant.java you will need to add this under the resetVariables() method.

[code]c.isSmelting = false;[/code]

[b]c.isSmelting = false;[/b] If you want to cancel smelting in anyother way, just apply the resetVariables method there.

This will get the smithing class for the walking packet and such.

Now you have working smelting with 1, 5 and 10 bars at a time!

Any feedback would be GREAT as this is my first tutorial on here and I hope to bring more!

If everything is done correctly, it should turn out like this!

[IMG]http://i41.tinypic.com/2ap7xy.jpg[/img]

NOTE:
Some methods were found in a smithing class already on my source, but others were added. I fully added smeltit(), barsPossible() and resetSmithing(). I editted a few of the other methods to make it work for what I did.</description>
    
    <lastBuildDate>Thu, 13 Dec 2012 03:25:22 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/pi-bar-smelting-1-5-10-bars/439235.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[PI]Bar Smelting (1, 5, 10) bars</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>pretty good.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-bar-smelting-1-5-10-bars/439235/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-bar-smelting-1-5-10-bars/439235/7</link>
        <pubDate>Thu, 13 Dec 2012 03:25:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-439235-7</guid>
        <source url="https://forum.moparisthebest.com/t/pi-bar-smelting-1-5-10-bars/439235.rss">[PI]Bar Smelting (1, 5, 10) bars</source>
      </item>
      <item>
        <title>[PI]Bar Smelting (1, 5, 10) bars</title>
        <dc:creator><![CDATA[@makersprivate123 makersprivate123]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/makersprivate123">@makersprivate123</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="5" data-topic="439235">
<div class="title">
<div class="quote-controls"></div>
 KroniKz_:</div>
<blockquote>
<p>Good job man!</p>
</blockquote>
</aside>
<p>Thx <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-bar-smelting-1-5-10-bars/439235/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-bar-smelting-1-5-10-bars/439235/6</link>
        <pubDate>Wed, 12 Dec 2012 19:51:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-439235-6</guid>
        <source url="https://forum.moparisthebest.com/t/pi-bar-smelting-1-5-10-bars/439235.rss">[PI]Bar Smelting (1, 5, 10) bars</source>
      </item>
      <item>
        <title>[PI]Bar Smelting (1, 5, 10) bars</title>
        <dc:creator><![CDATA[@kronixz kronikz]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/kronixz">@kronixz</a> wrote:</p>
          <blockquote>
              <p>Good job man!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-bar-smelting-1-5-10-bars/439235/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-bar-smelting-1-5-10-bars/439235/5</link>
        <pubDate>Wed, 12 Dec 2012 15:12:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-439235-5</guid>
        <source url="https://forum.moparisthebest.com/t/pi-bar-smelting-1-5-10-bars/439235.rss">[PI]Bar Smelting (1, 5, 10) bars</source>
      </item>
      <item>
        <title>[PI]Bar Smelting (1, 5, 10) bars</title>
        <dc:creator><![CDATA[@makersprivate123 makersprivate123]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/makersprivate123">@makersprivate123</a> wrote:</p>
          <blockquote>
              <p>[quote=“KroniKz_, post:3, topic:439235”]Last Active: May 09, 2012, 07:43:10 PM<br>
He wont be responding to you[/quote]<br>
yeah <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"> But I fixed anvil myself! <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-bar-smelting-1-5-10-bars/439235/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-bar-smelting-1-5-10-bars/439235/4</link>
        <pubDate>Wed, 12 Dec 2012 14:54:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-439235-4</guid>
        <source url="https://forum.moparisthebest.com/t/pi-bar-smelting-1-5-10-bars/439235.rss">[PI]Bar Smelting (1, 5, 10) bars</source>
      </item>
      <item>
        <title>[PI]Bar Smelting (1, 5, 10) bars</title>
        <dc:creator><![CDATA[@kronixz kronikz]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/kronixz">@kronixz</a> wrote:</p>
          <blockquote>
              <p>Last Active: May 09, 2012, 07:43:10 PM<br>
He wont be responding to you</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-bar-smelting-1-5-10-bars/439235/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-bar-smelting-1-5-10-bars/439235/3</link>
        <pubDate>Wed, 12 Dec 2012 14:40:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-439235-3</guid>
        <source url="https://forum.moparisthebest.com/t/pi-bar-smelting-1-5-10-bars/439235.rss">[PI]Bar Smelting (1, 5, 10) bars</source>
      </item>
      <item>
        <title>[PI]Bar Smelting (1, 5, 10) bars</title>
        <dc:creator><![CDATA[@makersprivate123 makersprivate123]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/makersprivate123">@makersprivate123</a> wrote:</p>
          <blockquote>
              <p>[quote=“blkancients, post:1, topic:439235”]Hello, this is a tutorial for bar smelting in Project Insanity. I will be releasing Item on anvil later also.</p>
<p>Lets get started.</p>
<p>[size=12pt]STEP 1:[/size]<br>
First in ClickingButtons.java we will need to add this.</p>
<p><code>case 15147://Bronze, 1
							c.getSmithing().startSmelting(0, 1);
							break;
						case 15146://Bronze, 5
							c.getSmithing().startSmelting(0, 5);
							break;
						case 10247://Bronze, 10
							c.getSmithing().startSmelting(0, 10);
							break;
						case 15151://Iron, 1
							c.getSmithing().startSmelting(1, 1);
							break;
						case 15150://Iron, 5
							c.getSmithing().startSmelting(1, 5);
							break;
						case 15149://Iron, 10
							c.getSmithing().startSmelting(1, 10);
							break;
						case 15155://silver, 1
							c.getSmithing().startSmelting(2, 1);
							break;
						case 15154://silver, 5
							c.getSmithing().startSmelting(2, 5);
							break;
						case 15153://silver, 10
							c.getSmithing().startSmelting(2, 10);
							break;
						case 15159://steel, 1
							c.getSmithing().startSmelting(3, 1);
							break;
						case 15158://steel, 5
							c.getSmithing().startSmelting(3, 5);
							break;
						case 15157://steel, 10
							c.getSmithing().startSmelting(3, 10);
							break;
						case 15163://gold, 1
							c.getSmithing().startSmelting(4, 1);
							break;
						case 15162://gold, 5
							c.getSmithing().startSmelting(4, 5);
							break;
						case 15161://gold, 10
							c.getSmithing().startSmelting(4, 10);
							break;
						case 29017://mithril, 1
							c.getSmithing().startSmelting(5, 1);
							break;
						case 29016://mithril, 5
							c.getSmithing().startSmelting(5, 5);
							break;
						case 24253://mithril, 10
							c.getSmithing().startSmelting(5, 10);
							break;
						case 29022://addy, 1
							c.getSmithing().startSmelting(6, 1);
							break;
						case 29021://addy, 5
							c.getSmithing().startSmelting(6, 5);
							break;
						case 29019://addy, 10
							c.getSmithing().startSmelting(6, 10);
							break;
						case 29026://rune, 1
							c.getSmithing().startSmelting(7, 1);
							break;
						case 29025://rune, 5
							c.getSmithing().startSmelting(7, 5);
							break;
						case 29024://rune, 10
							c.getSmithing().startSmelting(7, 10);
							break;</code></p>
<p>Explaination:</p>
<p><span class="bbcode-b">Case 15147</span> is the ID of the button being clicked ingame.</p>
<p><span class="bbcode-b">c.getSmithing().startSmelting(0, 1);</span> is saying in the Smithing class, do method startSmelthing with arguments of 0, 1. 0 stands for it being the first type of bar and 1 stands for 1 bar.</p>
<p><code>case 15147://Bronze, 1
							c.getSmithing().startSmelting(0, 1);
							break;</code></p>
<p>[size=12pt]STEP 2:[/size]</p>
<p>Next in ClickObject.java we will need to add this in the switch statements under <span class="bbcode-b">case SECOND_CLICK:</span></p>
<p><code>case 11666:
	case 2781:
	case 3994:
		c.getSmithing().sendSmelting();
		break;</code></p>
<p>Explanation:</p>
<p><span class="bbcode-b">case 11666:</span> These are the cases of the Furnaces.</p>
<p><span class="bbcode-b">c.getSmithing().sendSmelting();</span> This is saying in the Smithing class, do the method sendSmelting. This will display the bar with the bars to be smelted.</p>
<p>[size=10pt]STEP 3:[/size]<br>
In Smithing.java we will need to add:</p>
<p>[code]package server.model.players.skills;</p>
<p>import server.Config;<br>
import server.model.players.Client;<br>
import server.event.CycleEvent;<br>
import server.event.CycleEventContainer;<br>
import server.event.CycleEventHandler;<br>
/**</p>
<ul>
<li>Smithing.java</li>
<li>
</li>
<li>
<span class="mention">@author</span> Sanity <span class="mention">@Editor</span> blkancients</li>
<li>
</li>
</ul>
<p>**/</p>
<p>public class Smithing {</p>
<pre><code>private Client c;
private final int[] SMELT_BARS = {2349,2351,2355,2353,2357,2359,2361,2363};
private final int[] SMELT_FRAME = {2405,2406,2407,2409,2410,2411,2412,2413};
private final int[] BAR_REQS = {1,15,20,30,40,50,70,85};
private final int[] ORE_1 = {438,440,442,440,444,447,449,451};
private final int[] ORE_2 = {436,-1,-1,453,-1,453,453,453};
private final int[] SMELT_EXP = {6,13,14,18,23,30,38,50};
private final int[] ORE_2_REQ = {1, -1, -1, 2, -1, 4, 6, 8};

private int barsMade = 0;
private int finalBars = 0;
public Smithing(Client c) {
	this.c = c;
}

public void sendSmelting() {
	for (int j = 0; j &lt; SMELT_FRAME.length; j++) {
		c.getPA().sendFrame246(SMELT_FRAME[j], 150, SMELT_BARS[j]);
	}
	c.getPA().sendFrame164(2400);
	c.smeltInterface = true;	
}

public void startSmelting(int barType, int a) {
	if (canSmelt(barType)) {
		if (hasOres(barType)) {
			smeltIt(barType, a);		
		} else {
			c.getPA().removeAllWindows();
			c.sendMessage("You do not have the required ores to smelt this.");
			c.getPA().resetVariables();
		}
	} else {
		c.getPA().removeAllWindows();
		c.sendMessage("You must have a higher smithing level to smith this.");
		c.getPA().resetVariables();
	}
}


public boolean canSmelt(int barType) {
	for (int j = 0; j &lt; SMELT_BARS.length; j++) {
		if (barType == j) {
			return c.playerLevel[c.playerSmithing] &gt;= BAR_REQS[j];
		}
	}
	return false;
}

public boolean hasOres(int barType) {
	if (ORE_2_REQ[barType] &gt; 0)
		return c.getItems().playerHasItem(ORE_1[barType]) &amp;&amp; c.getItems().playerHasItem(ORE_2[barType]);
	else
		return c.getItems().playerHasItem(ORE_1[barType]);
}

public int barsPossible(int barType) {
	if (hasOres(barType)) {
		if (c.getItems().getItemCount(ORE_2[barType]) &gt;= ORE_2_REQ[barType]) {
			barsMade = c.getItems().getItemCount(ORE_2[barType]);
			barsMade = barsMade / ORE_2_REQ[barType];
			if (c.getItems().getItemCount(ORE_1[barType]) &lt;= barsMade)
				return c.getItems().getItemCount(ORE_1[barType]);
			else 
				return barsMade;
		} else
			return c.getItems().getItemCount(ORE_1[barType]);
	} else
		return 0;
}

public void smeltIt(final int barType, int a) {
		final int bars = barsPossible(barType);
		if (bars &gt; a &amp;&amp; bars != 0)
			finalBars = a;
		else
			finalBars = bars;
		c.getPA().removeAllWindows();
		c.isSmelting = true;
		if (finalBars != 0) {
			CycleEventHandler.getSingleton().addEvent(c, new CycleEvent() {
			int timer = finalBars;
			@Override
			public void execute(CycleEventContainer container) {
				if (!c.isSmelting)
					container.stop();
				if (c.isSmelting) {
					if (timer != 0) {
						if (c.getItems().getItemCount(ORE_1[barType]) &gt; 0) {
							c.startAnimation(899);
							c.getItems().deleteItem(ORE_1[barType], 1);
							if (ORE_2[barType] &gt; 0)
								c.getItems().deleteItem(ORE_2[barType], ORE_2_REQ[barType]);
							c.getItems().addItem(SMELT_BARS[barType] ,1);
							c.getPA().addSkillXP(SMELT_EXP[barType], c.playerSmithing);
							c.getPA().refreshSkill(c.playerSmithing);
						}
					}
					if (timer &lt;= 0) {
						container.stop();
					}
					timer--;
				}
			}
			@Override
			public void stop() {}
		}, 3);
		}
}

 public void resetSmithing() {
	c.isSmelting = false;
}[/code]
</code></pre>
<p>Explanation:<br>
<span class="bbcode-b">sendSmelting()</span> method is sending the smelting frame that displays the bars to choose from to be smelted.</p>
<p><span class="bbcode-b">startSmelting(int barType, int a)</span> This method checks if you have the required level to smelt the bars, if you have the required ores and if so, it will smeltIt()</p>
<p><span class="bbcode-b">canSmelt()</span> This method checks if the players level is equal or great than what is required by the bar.</p>
<p><span class="bbcode-b">hasOres()</span> This method checks if you have the required ores to smelt the bars.</p>
<p><span class="bbcode-b">barsPossible()</span> This method checks how many bars are possible to be made. If you select 5 bars, but only 3 bars can be made, this method with make it so only 3 bars are made instead of 5.</p>
<p><span class="bbcode-b">smeltIt()</span> This method applies most of what is already explained. It gets the barsPossible(), then using CycleEventContainer, it will smelt the bars with a delay of 3 game ticks which is 1.8 seconds i believe. It will remove the ores, add the bars, and apply the experience. If you walk away from the furnace, you will not continue to smelt.</p>
<p><span class="bbcode-b">resetSmithing()</span> This method resets smithing. Used in the walking packet to stop a player from smithing.</p>
<p>[size=10pt]STEP 4:[/size]<br>
Next in Walking.java add this under processPacket();</p>
<pre><code class="lang-auto">c.getSmithing().resetSmithing();</code></pre>
<p><span class="bbcode-b">c.getSmithing().resetSmithing();</span> This will stop a playing from smelting when they walk away.</p>
<p>In client.java add this near all your variables:</p>
<pre><code class="lang-auto">	public boolean isSmelting = false;</code></pre>
<p><span class="bbcode-b">public boolean isSmelting = false;</span> This variable keeps track of whether the playing is smelting or not.</p>
<p>[size=12pt]STEP 5:[/size]<br>
If you do not already have these, add them in client.java near the others.</p>
<p><code>private Smithing smith = new Smithing(this);
public Smithing getSmithing() {
		return smith;
	}</code></p>
<p>[size=10pt]STEP 6:[/size]<br>
In PlayerAssistant.java you will need to add this under the resetVariables() method.</p>
<pre><code class="lang-auto">c.isSmelting = false;</code></pre>
<p><span class="bbcode-b">c.isSmelting = false;</span> If you want to cancel smelting in anyother way, just apply the resetVariables method there.</p>
<p>This will get the smithing class for the walking packet and such.</p>
<p>Now you have working smelting with 1, 5 and 10 bars at a time!</p>
<p>Any feedback would be GREAT as this is my first tutorial on here and I hope to bring more!</p>
<p>If everything is done correctly, it should turn out like this!</p>
<p><div class="lightbox-wrapper"><a class="lightbox" href="http://i41.tinypic.com/2ap7xy.jpg" title="2ap7xy.jpg" rel="nofollow noopener"><img src="http://i41.tinypic.com/2ap7xy.jpg" alt width="690" height="473"><div class="meta">
<svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use xlink:href="#far-image"></use></svg><span class="filename">2ap7xy.jpg</span><span class="informations">769×528</span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use xlink:href="#discourse-expand"></use></svg>
</div></a></div></p>
<p>NOTE:<br>
Some methods were found in a smithing class already on my source, but others were added. I fully added smeltit(), barsPossible() and resetSmithing(). I editted a few of the other methods to make it work for what I did.[/quote]<br>
Nice tutorial! Sorry for brining this old thread up, not that many has seen it!<br>
Could you, if you still maintain in rsps, could you put up anvil?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-bar-smelting-1-5-10-bars/439235/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-bar-smelting-1-5-10-bars/439235/2</link>
        <pubDate>Wed, 12 Dec 2012 12:56:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-439235-2</guid>
        <source url="https://forum.moparisthebest.com/t/pi-bar-smelting-1-5-10-bars/439235.rss">[PI]Bar Smelting (1, 5, 10) bars</source>
      </item>
      <item>
        <title>[PI]Bar Smelting (1, 5, 10) bars</title>
        <dc:creator><![CDATA[@blkancients blkancients]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/blkancients">@blkancients</a> wrote:</p>
          <blockquote>
              <p>Hello, this is a tutorial for bar smelting in Project Insanity. I will be releasing Item on anvil later also.</p>
<p>Lets get started.</p>
<p>[size=12pt]STEP 1:[/size]<br>
First in ClickingButtons.java we will need to add this.</p>
<p><code>case 15147://Bronze, 1
							c.getSmithing().startSmelting(0, 1);
							break;
						case 15146://Bronze, 5
							c.getSmithing().startSmelting(0, 5);
							break;
						case 10247://Bronze, 10
							c.getSmithing().startSmelting(0, 10);
							break;
						case 15151://Iron, 1
							c.getSmithing().startSmelting(1, 1);
							break;
						case 15150://Iron, 5
							c.getSmithing().startSmelting(1, 5);
							break;
						case 15149://Iron, 10
							c.getSmithing().startSmelting(1, 10);
							break;
						case 15155://silver, 1
							c.getSmithing().startSmelting(2, 1);
							break;
						case 15154://silver, 5
							c.getSmithing().startSmelting(2, 5);
							break;
						case 15153://silver, 10
							c.getSmithing().startSmelting(2, 10);
							break;
						case 15159://steel, 1
							c.getSmithing().startSmelting(3, 1);
							break;
						case 15158://steel, 5
							c.getSmithing().startSmelting(3, 5);
							break;
						case 15157://steel, 10
							c.getSmithing().startSmelting(3, 10);
							break;
						case 15163://gold, 1
							c.getSmithing().startSmelting(4, 1);
							break;
						case 15162://gold, 5
							c.getSmithing().startSmelting(4, 5);
							break;
						case 15161://gold, 10
							c.getSmithing().startSmelting(4, 10);
							break;
						case 29017://mithril, 1
							c.getSmithing().startSmelting(5, 1);
							break;
						case 29016://mithril, 5
							c.getSmithing().startSmelting(5, 5);
							break;
						case 24253://mithril, 10
							c.getSmithing().startSmelting(5, 10);
							break;
						case 29022://addy, 1
							c.getSmithing().startSmelting(6, 1);
							break;
						case 29021://addy, 5
							c.getSmithing().startSmelting(6, 5);
							break;
						case 29019://addy, 10
							c.getSmithing().startSmelting(6, 10);
							break;
						case 29026://rune, 1
							c.getSmithing().startSmelting(7, 1);
							break;
						case 29025://rune, 5
							c.getSmithing().startSmelting(7, 5);
							break;
						case 29024://rune, 10
							c.getSmithing().startSmelting(7, 10);
							break;</code></p>
<p>Explaination:</p>
<p><span class="bbcode-b">Case 15147</span> is the ID of the button being clicked ingame.</p>
<p><span class="bbcode-b">c.getSmithing().startSmelting(0, 1);</span> is saying in the Smithing class, do method startSmelthing with arguments of 0, 1. 0 stands for it being the first type of bar and 1 stands for 1 bar.</p>
<p><code>case 15147://Bronze, 1
							c.getSmithing().startSmelting(0, 1);
							break;</code></p>
<p>[size=12pt]STEP 2:[/size]</p>
<p>Next in ClickObject.java we will need to add this in the switch statements under <span class="bbcode-b">case SECOND_CLICK:</span></p>
<p><code>case 11666:
	case 2781:
	case 3994:
		c.getSmithing().sendSmelting();
		break;</code></p>
<p>Explanation:</p>
<p><span class="bbcode-b">case 11666:</span> These are the cases of the Furnaces.</p>
<p><span class="bbcode-b">c.getSmithing().sendSmelting();</span> This is saying in the Smithing class, do the method sendSmelting. This will display the bar with the bars to be smelted.</p>
<p>[size=10pt]STEP 3:[/size]<br>
In Smithing.java we will need to add:</p>
<p>[code]package server.model.players.skills;</p>
<p>import server.Config;<br>
import server.model.players.Client;<br>
import server.event.CycleEvent;<br>
import server.event.CycleEventContainer;<br>
import server.event.CycleEventHandler;<br>
/**</p>
<ul>
<li>Smithing.java</li>
<li>
</li>
<li>
<span class="mention">@author</span> Sanity <span class="mention">@Editor</span> blkancients</li>
<li>
</li>
</ul>
<p>**/</p>
<p>public class Smithing {</p>
<pre><code>private Client c;
private final int[] SMELT_BARS = {2349,2351,2355,2353,2357,2359,2361,2363};
private final int[] SMELT_FRAME = {2405,2406,2407,2409,2410,2411,2412,2413};
private final int[] BAR_REQS = {1,15,20,30,40,50,70,85};
private final int[] ORE_1 = {438,440,442,440,444,447,449,451};
private final int[] ORE_2 = {436,-1,-1,453,-1,453,453,453};
private final int[] SMELT_EXP = {6,13,14,18,23,30,38,50};
private final int[] ORE_2_REQ = {1, -1, -1, 2, -1, 4, 6, 8};

private int barsMade = 0;
private int finalBars = 0;
public Smithing(Client c) {
	this.c = c;
}

public void sendSmelting() {
	for (int j = 0; j &lt; SMELT_FRAME.length; j++) {
		c.getPA().sendFrame246(SMELT_FRAME[j], 150, SMELT_BARS[j]);
	}
	c.getPA().sendFrame164(2400);
	c.smeltInterface = true;	
}

public void startSmelting(int barType, int a) {
	if (canSmelt(barType)) {
		if (hasOres(barType)) {
			smeltIt(barType, a);		
		} else {
			c.getPA().removeAllWindows();
			c.sendMessage("You do not have the required ores to smelt this.");
			c.getPA().resetVariables();
		}
	} else {
		c.getPA().removeAllWindows();
		c.sendMessage("You must have a higher smithing level to smith this.");
		c.getPA().resetVariables();
	}
}


public boolean canSmelt(int barType) {
	for (int j = 0; j &lt; SMELT_BARS.length; j++) {
		if (barType == j) {
			return c.playerLevel[c.playerSmithing] &gt;= BAR_REQS[j];
		}
	}
	return false;
}

public boolean hasOres(int barType) {
	if (ORE_2_REQ[barType] &gt; 0)
		return c.getItems().playerHasItem(ORE_1[barType]) &amp;&amp; c.getItems().playerHasItem(ORE_2[barType]);
	else
		return c.getItems().playerHasItem(ORE_1[barType]);
}

public int barsPossible(int barType) {
	if (hasOres(barType)) {
		if (c.getItems().getItemCount(ORE_2[barType]) &gt;= ORE_2_REQ[barType]) {
			barsMade = c.getItems().getItemCount(ORE_2[barType]);
			barsMade = barsMade / ORE_2_REQ[barType];
			if (c.getItems().getItemCount(ORE_1[barType]) &lt;= barsMade)
				return c.getItems().getItemCount(ORE_1[barType]);
			else 
				return barsMade;
		} else
			return c.getItems().getItemCount(ORE_1[barType]);
	} else
		return 0;
}

public void smeltIt(final int barType, int a) {
		final int bars = barsPossible(barType);
		if (bars &gt; a &amp;&amp; bars != 0)
			finalBars = a;
		else
			finalBars = bars;
		c.getPA().removeAllWindows();
		c.isSmelting = true;
		if (finalBars != 0) {
			CycleEventHandler.getSingleton().addEvent(c, new CycleEvent() {
			int timer = finalBars;
			@Override
			public void execute(CycleEventContainer container) {
				if (!c.isSmelting)
					container.stop();
				if (c.isSmelting) {
					if (timer != 0) {
						if (c.getItems().getItemCount(ORE_1[barType]) &gt; 0) {
							c.startAnimation(899);
							c.getItems().deleteItem(ORE_1[barType], 1);
							if (ORE_2[barType] &gt; 0)
								c.getItems().deleteItem(ORE_2[barType], ORE_2_REQ[barType]);
							c.getItems().addItem(SMELT_BARS[barType] ,1);
							c.getPA().addSkillXP(SMELT_EXP[barType], c.playerSmithing);
							c.getPA().refreshSkill(c.playerSmithing);
						}
					}
					if (timer &lt;= 0) {
						container.stop();
					}
					timer--;
				}
			}
			@Override
			public void stop() {}
		}, 3);
		}
}

 public void resetSmithing() {
	c.isSmelting = false;
}[/code]
</code></pre>
<p>Explanation:<br>
<span class="bbcode-b">sendSmelting()</span> method is sending the smelting frame that displays the bars to choose from to be smelted.</p>
<p><span class="bbcode-b">startSmelting(int barType, int a)</span> This method checks if you have the required level to smelt the bars, if you have the required ores and if so, it will smeltIt()</p>
<p><span class="bbcode-b">canSmelt()</span> This method checks if the players level is equal or great than what is required by the bar.</p>
<p><span class="bbcode-b">hasOres()</span> This method checks if you have the required ores to smelt the bars.</p>
<p><span class="bbcode-b">barsPossible()</span> This method checks how many bars are possible to be made. If you select 5 bars, but only 3 bars can be made, this method with make it so only 3 bars are made instead of 5.</p>
<p><span class="bbcode-b">smeltIt()</span> This method applies most of what is already explained. It gets the barsPossible(), then using CycleEventContainer, it will smelt the bars with a delay of 3 game ticks which is 1.8 seconds i believe. It will remove the ores, add the bars, and apply the experience. If you walk away from the furnace, you will not continue to smelt.</p>
<p><span class="bbcode-b">resetSmithing()</span> This method resets smithing. Used in the walking packet to stop a player from smithing.</p>
<p>[size=10pt]STEP 4:[/size]<br>
Next in Walking.java add this under processPacket();</p>
<pre><code class="lang-auto">c.getSmithing().resetSmithing();</code></pre>
<p><span class="bbcode-b">c.getSmithing().resetSmithing();</span> This will stop a playing from smelting when they walk away.</p>
<p>In client.java add this near all your variables:</p>
<pre><code class="lang-auto">	public boolean isSmelting = false;</code></pre>
<p><span class="bbcode-b">public boolean isSmelting = false;</span> This variable keeps track of whether the playing is smelting or not.</p>
<p>[size=12pt]STEP 5:[/size]<br>
If you do not already have these, add them in client.java near the others.</p>
<p><code>private Smithing smith = new Smithing(this);
public Smithing getSmithing() {
		return smith;
	}</code></p>
<p>[size=10pt]STEP 6:[/size]<br>
In PlayerAssistant.java you will need to add this under the resetVariables() method.</p>
<pre><code class="lang-auto">c.isSmelting = false;</code></pre>
<p><span class="bbcode-b">c.isSmelting = false;</span> If you want to cancel smelting in anyother way, just apply the resetVariables method there.</p>
<p>This will get the smithing class for the walking packet and such.</p>
<p>Now you have working smelting with 1, 5 and 10 bars at a time!</p>
<p>Any feedback would be GREAT as this is my first tutorial on here and I hope to bring more!</p>
<p>If everything is done correctly, it should turn out like this!</p>
<p><div class="lightbox-wrapper"><a class="lightbox" href="http://i41.tinypic.com/2ap7xy.jpg" title="2ap7xy.jpg" rel="nofollow noopener"><img src="http://i41.tinypic.com/2ap7xy.jpg" alt width="690" height="473"><div class="meta">
<svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use xlink:href="#far-image"></use></svg><span class="filename">2ap7xy.jpg</span><span class="informations">769×528</span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use xlink:href="#discourse-expand"></use></svg>
</div></a></div></p>
<p>NOTE:<br>
Some methods were found in a smithing class already on my source, but others were added. I fully added smeltit(), barsPossible() and resetSmithing(). I editted a few of the other methods to make it work for what I did.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-bar-smelting-1-5-10-bars/439235/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-bar-smelting-1-5-10-bars/439235/1</link>
        <pubDate>Tue, 10 Apr 2012 23:29:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-439235-1</guid>
        <source url="https://forum.moparisthebest.com/t/pi-bar-smelting-1-5-10-bars/439235.rss">[PI]Bar Smelting (1, 5, 10) bars</source>
      </item>
  </channel>
</rss>
