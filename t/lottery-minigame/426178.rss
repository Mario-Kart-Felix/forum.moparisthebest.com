<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Lottery Minigame</title>
    <link>https://forum.moparisthebest.com/t/lottery-minigame/426178</link>
    <description>I found this :)  :eek:

Okay, first go into (src -- org -- rscdaemon -- server) and create a new folder called [u]minigames[/u]. In that folder make a new class called [b]Lottery.java[/b]

[code]
package org.rscdaemon.server.minigames;

import org.rscdaemon.server.util.Formulae;
import org.rscdaemon.server.model.Player;
import org.rscdaemon.server.model.World;
import org.rscdaemon.server.model.InvItem;
import org.rscdaemon.server.event.DelayedEvent;
import org.rscdaemon.server.event.SingleEvent;

import java.util.ArrayList;

public class Lottery {

	 public static final World world = World.getWorld();
	 static Player player;

	 public static ArrayList&lt;Player&gt; players = new ArrayList&lt;Player&gt;();
	 public static ArrayList&lt;String&gt; playersUsername = new ArrayList&lt;String&gt;();
	 public static int entryFee = 75000;
	 public static int lotteryReward = 0;
	
	 public static String findLotteryWinner() {
		 if(players.size() &lt;= 0) { // Shouldn&#39;t Happen
			 return &quot;No-one participated!&quot;;
		 }
		 Player p = players.get(Formulae.Rand(0, (players.size() - 1)));
		 if((p != null) &amp;&amp; (p.getUsername() != null)) {
			 p.getActionSender().sendMessage(&quot;Congratulations! You have won the lottery!&quot;);
			 InvItem coins = new InvItem(10);
			 coins.setAmount(lotteryReward);
			 p.getInventory().add(coins);
			 p.getActionSender().sendInventory();
			 p.getActionSender().sendMessage(lotteryReward + &quot; coins has been added to your inventory!&quot;);
			 world.sendToAll(&quot;The lottery has been drawn! The winner is: @or1@&quot; + p.getUsername());
			 endLottery();
			 return p.getUsername();
		 } else {
			 players.remove(p);
			 return findLotteryWinner();
		 }
	 }
	
	 public static void addLotteryEntry(Player p) {
		 if(world.getLotteryStatus() == false) {
			 p.getActionSender().sendMessage(&quot;The lottery isn&#39;t running at the moment!&quot;);
			 return;
		 }
		 if(players.contains(p)) {
			 p.getActionSender().sendMessage(&quot;You have already joined the lottery!&quot;);
			 return;
		 }
		 if(p.getInventory().countId(10) &gt;= entryFee) {
			 if(p.getInventory().remove(10, entryFee) != -1) {
				 players.add(p);
				 playersUsername.add(p.getUsername());
				 p.getActionSender().sendInventory();
				 lotteryReward += entryFee;
				 p.getActionSender().sendAlert(&quot;You have been entered successfully into the lottery! The current jackpot prize is: @or1@&quot; + (lotteryReward &gt; 1000 ? (lotteryReward / 1000) + &quot;k&quot; : lotteryReward) + &quot;@whi@ coins!&quot;, false);
				 return;
			 }
		 }
		 p.getActionSender().sendMessage(&quot;It looks like you don&#39;t have enough money! You need 75K to join!&quot;);
	 }
	
	 public static void endLottery() {
		 world.setLotteryStatus(false);
		 players = new ArrayList&lt;Player&gt;();
		 playersUsername = new ArrayList&lt;String&gt;();
		 lotteryReward = 0;
	 }
	
	 public static void requestPrizeFund() {
		 if(world.getLotteryStatus() == false) {
			 player.getActionSender().sendMessage(&quot;The lottery is not running at the moment!&quot;);
		 } else {
			 player.getActionSender().sendMessage(&quot;The current lottery fund is: &quot; + (lotteryReward &gt; 1000 ? (lotteryReward / 1000) + &quot;k&quot; : lotteryReward));
		 }
	 }
}
[/code]

Now in World.java (src -- org -- rscdaemon -- server -- model)
First import:

[code]
import org.rscdaemon.server.minigames.Lottery;
[/code]

Then Add:

[code]
	/**
	 * Lottery System @author Yong Min
	 */
	 public boolean lotteryStatus = false;
	
	 public void setLotteryStatus(boolean lotto) {
		 lotteryStatus = lotto;
	 }
	
	 public boolean getLotteryStatus() {
		 return lotteryStatus;
	 }
[/code]

Then in CommandHandler.java (src -- org -- rscdaemon -- server -- packethandler\client -- org -- client) First import:

[code]
import org.rscdaemon.server.minigames.Lottery;
[/code]

Then add:

[code]
		/**
		 * Lottery System Commands
		 *	   @author Yong Min
		 */
		 if((cmd.equalsIgnoreCase(&quot;start&quot;)) &amp;&amp; (player.isAdmin())) {
			 if(world.getLotteryStatus() == false) {
				 world.setLotteryStatus(true);
				 world.sendToAll(&quot;The lottery has been started. Use @or1@::lottery @whi@to enter!&quot;);
			 } else {
				 player.getActionSender().sendMessage(&quot;The lottery is already running!&quot;);
			 }
			 return;
		 }
		 if((cmd.equalsIgnoreCase(&quot;draw&quot;)) &amp;&amp; (player.isAdmin())) {
			 if((Lottery.players.size() &lt;= 2) &amp;&amp; (world.getLotteryStatus() == true)) {
				 player.getActionSender().sendMessage(&quot;Please wait for more people to join before drawing the lottery!&quot;);
			 } else if(world.getLotteryStatus() == false) {
				 player.getActionSender().sendMessage(&quot;The lottery is not running at the moment!&quot;);
			 } else {
				 Lottery.findLotteryWinner();
			 }
			 return;
		 }
		 if(cmd.equalsIgnoreCase(&quot;lottery&quot;)) {
			 Lottery.addLotteryEntry(player);
		 }
		 if(cmd.equalsIgnoreCase(&quot;fund&quot;)) {
			 int lotteryReward = Lottery.lotteryReward;
			 if(world.getLotteryStatus() == false) {
				 player.getActionSender().sendMessage(&quot;The lottery is not running at the moment!&quot;);
			 } else {
				 player.getActionSender().sendMessage(&quot;The current lottery fund is: &quot; + (lotteryReward &gt; 1000 ? (lotteryReward / 1000) + &quot;k&quot; : lotteryReward));
			 }
			 return;
		 }
[/code]

The Commands are easy to do and understand. Here is a breif explination of what they do:

&lt;blockquote&gt;::start     *this will set the lottery status to &#39;true&#39;, meaning that people will be able to enter the lottery.&lt;/blockquote&gt;

&lt;blockquote&gt;:: draw     *this will draw the lottery and declare the winner. You will only be able to draw the lottery once 3 or more people have entered.&lt;/blockquote&gt;

&lt;blockquote&gt;::lottery     *this will allow people to enter the lottery if they have the correct amount of cash to enter. You can alter the amount in the Lottery class.&lt;/blockquote&gt;

&lt;blockquote&gt;::fund     *this will display the current jackpot fund. This is worked out by all the entry fees added together. The winner will receive the full amount.&lt;/blockquote&gt;

Have fun &amp; enjoy!</description>
    
    <lastBuildDate>Thu, 22 Dec 2011 04:27:49 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/lottery-minigame/426178.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Lottery Minigame</title>
        <dc:creator><![CDATA[@nacional nacional]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/nacional">@nacional</a> wrote:</p>
          <blockquote>
              <p>yup. dp all day every day</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/lottery-minigame/426178/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/lottery-minigame/426178/3</link>
        <pubDate>Thu, 22 Dec 2011 04:27:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-426178-3</guid>
        <source url="https://forum.moparisthebest.com/t/lottery-minigame/426178.rss">Lottery Minigame</source>
      </item>
      <item>
        <title>Lottery Minigame</title>
        <dc:creator><![CDATA[@vortex vortex]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/vortex">@vortex</a> wrote:</p>
          <blockquote>
              <p><span class="mention">@author</span> Yong Min<br>
good for sopme people though</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/lottery-minigame/426178/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/lottery-minigame/426178/2</link>
        <pubDate>Wed, 21 Dec 2011 18:21:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-426178-2</guid>
        <source url="https://forum.moparisthebest.com/t/lottery-minigame/426178.rss">Lottery Minigame</source>
      </item>
      <item>
        <title>Lottery Minigame</title>
        <dc:creator><![CDATA[@RSCDream RSCDream]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rscdream">@RSCDream</a> wrote:</p>
          <blockquote>
              <p>I found this <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:">  :eek:</p>
<p>Okay, first go into (src – org – rscdaemon – server) and create a new folder called <span class="bbcode-u">minigames</span>. In that folder make a new class called <span class="bbcode-b">Lottery.java</span></p>
<pre><code class="lang-auto">package org.rscdaemon.server.minigames;

import org.rscdaemon.server.util.Formulae;
import org.rscdaemon.server.model.Player;
import org.rscdaemon.server.model.World;
import org.rscdaemon.server.model.InvItem;
import org.rscdaemon.server.event.DelayedEvent;
import org.rscdaemon.server.event.SingleEvent;

import java.util.ArrayList;

public class Lottery {

	 public static final World world = World.getWorld();
	 static Player player;

	 public static ArrayList&lt;Player&gt; players = new ArrayList&lt;Player&gt;();
	 public static ArrayList&lt;String&gt; playersUsername = new ArrayList&lt;String&gt;();
	 public static int entryFee = 75000;
	 public static int lotteryReward = 0;
	
	 public static String findLotteryWinner() {
		 if(players.size() &lt;= 0) { // Shouldn't Happen
			 return "No-one participated!";
		 }
		 Player p = players.get(Formulae.Rand(0, (players.size() - 1)));
		 if((p != null) &amp;&amp; (p.getUsername() != null)) {
			 p.getActionSender().sendMessage("Congratulations! You have won the lottery!");
			 InvItem coins = new InvItem(10);
			 coins.setAmount(lotteryReward);
			 p.getInventory().add(coins);
			 p.getActionSender().sendInventory();
			 p.getActionSender().sendMessage(lotteryReward + " coins has been added to your inventory!");
			 world.sendToAll("The lottery has been drawn! The winner is: @or1@" + p.getUsername());
			 endLottery();
			 return p.getUsername();
		 } else {
			 players.remove(p);
			 return findLotteryWinner();
		 }
	 }
	
	 public static void addLotteryEntry(Player p) {
		 if(world.getLotteryStatus() == false) {
			 p.getActionSender().sendMessage("The lottery isn't running at the moment!");
			 return;
		 }
		 if(players.contains(p)) {
			 p.getActionSender().sendMessage("You have already joined the lottery!");
			 return;
		 }
		 if(p.getInventory().countId(10) &gt;= entryFee) {
			 if(p.getInventory().remove(10, entryFee) != -1) {
				 players.add(p);
				 playersUsername.add(p.getUsername());
				 p.getActionSender().sendInventory();
				 lotteryReward += entryFee;
				 p.getActionSender().sendAlert("You have been entered successfully into the lottery! The current jackpot prize is: @or1@" + (lotteryReward &gt; 1000 ? (lotteryReward / 1000) + "k" : lotteryReward) + "@whi@ coins!", false);
				 return;
			 }
		 }
		 p.getActionSender().sendMessage("It looks like you don't have enough money! You need 75K to join!");
	 }
	
	 public static void endLottery() {
		 world.setLotteryStatus(false);
		 players = new ArrayList&lt;Player&gt;();
		 playersUsername = new ArrayList&lt;String&gt;();
		 lotteryReward = 0;
	 }
	
	 public static void requestPrizeFund() {
		 if(world.getLotteryStatus() == false) {
			 player.getActionSender().sendMessage("The lottery is not running at the moment!");
		 } else {
			 player.getActionSender().sendMessage("The current lottery fund is: " + (lotteryReward &gt; 1000 ? (lotteryReward / 1000) + "k" : lotteryReward));
		 }
	 }
}</code></pre>
<p>Now in World.java (src – org – rscdaemon – server – model)<br>
First import:</p>
<pre><code class="lang-auto">import org.rscdaemon.server.minigames.Lottery;</code></pre>
<p>Then Add:</p>
<pre><code class="lang-auto">	/**
	 * Lottery System @author Yong Min
	 */
	 public boolean lotteryStatus = false;
	
	 public void setLotteryStatus(boolean lotto) {
		 lotteryStatus = lotto;
	 }
	
	 public boolean getLotteryStatus() {
		 return lotteryStatus;
	 }</code></pre>
<p>Then in CommandHandler.java (src – org – rscdaemon – server – packethandler\client – org – client) First import:</p>
<pre><code class="lang-auto">import org.rscdaemon.server.minigames.Lottery;</code></pre>
<p>Then add:</p>
<pre><code class="lang-auto">		/**
		 * Lottery System Commands
		 *	   @author Yong Min
		 */
		 if((cmd.equalsIgnoreCase("start")) &amp;&amp; (player.isAdmin())) {
			 if(world.getLotteryStatus() == false) {
				 world.setLotteryStatus(true);
				 world.sendToAll("The lottery has been started. Use @or1@::lottery @whi@to enter!");
			 } else {
				 player.getActionSender().sendMessage("The lottery is already running!");
			 }
			 return;
		 }
		 if((cmd.equalsIgnoreCase("draw")) &amp;&amp; (player.isAdmin())) {
			 if((Lottery.players.size() &lt;= 2) &amp;&amp; (world.getLotteryStatus() == true)) {
				 player.getActionSender().sendMessage("Please wait for more people to join before drawing the lottery!");
			 } else if(world.getLotteryStatus() == false) {
				 player.getActionSender().sendMessage("The lottery is not running at the moment!");
			 } else {
				 Lottery.findLotteryWinner();
			 }
			 return;
		 }
		 if(cmd.equalsIgnoreCase("lottery")) {
			 Lottery.addLotteryEntry(player);
		 }
		 if(cmd.equalsIgnoreCase("fund")) {
			 int lotteryReward = Lottery.lotteryReward;
			 if(world.getLotteryStatus() == false) {
				 player.getActionSender().sendMessage("The lottery is not running at the moment!");
			 } else {
				 player.getActionSender().sendMessage("The current lottery fund is: " + (lotteryReward &gt; 1000 ? (lotteryReward / 1000) + "k" : lotteryReward));
			 }
			 return;
		 }</code></pre>
<p>The Commands are easy to do and understand. Here is a breif explination of what they do:</p>
<blockquote>::start     *this will set the lottery status to 'true', meaning that people will be able to enter the lottery.</blockquote>
<blockquote>:: draw     *this will draw the lottery and declare the winner. You will only be able to draw the lottery once 3 or more people have entered.</blockquote>
<blockquote>::lottery     *this will allow people to enter the lottery if they have the correct amount of cash to enter. You can alter the amount in the Lottery class.</blockquote>
<blockquote>::fund     *this will display the current jackpot fund. This is worked out by all the entry fees added together. The winner will receive the full amount.</blockquote>
<p>Have fun &amp; enjoy!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/lottery-minigame/426178/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/lottery-minigame/426178/1</link>
        <pubDate>Wed, 21 Dec 2011 15:24:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-426178-1</guid>
        <source url="https://forum.moparisthebest.com/t/lottery-minigame/426178.rss">Lottery Minigame</source>
      </item>
  </channel>
</rss>
