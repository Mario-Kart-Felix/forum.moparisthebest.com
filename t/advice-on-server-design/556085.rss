<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Advice on server design</title>
    <link>https://forum.moparisthebest.com/t/advice-on-server-design/556085</link>
    <description>Hey guys, 

I&#39;m designing the backend for my app and had a couple of ideas that I wanted to talk you guys about. 

Everything is going to be related to Java:

So the bare basics of programming would tell you that a class is a blueprint e.g. a Person class would describe a person. Nothing more, right? 

Let&#39;s think of a game more specifically RSPS (since we all love those) - The typical Player.java may contain some unrelated Player code such as a reference to a Socket or methods to send the user information. 
 - Does this not violate the concept of what a player should be? 

Stuff like Apollo and Scapeemulator do this. In fact, what is this Player.java class really suppose to be doing? https://github.com/apollo-rsps/apollo/blob/master/game/src/main/org/apollo/game/model/entity/Player.java 

Seems like a lot going on for a class that is supposed to just model a Player.

Now what I think the correct approach would be is to have the player class actually define a player and nothing else e.g.

class Player { String name; String health; String runEnergy; } 

Then have some other entity dealing with player updating, network calls etc. In regards to &quot;how would we then send a player messages?&quot; Maybe a map or a repo? Be creative ;)
 
Going a little deeper into the core of a rsps, let&#39;s talk about how some people implement networking (example). 
When I was using Scapeemulator, I wanted to swap the networking library (that does the job a little better for what I wanted). I couldn&#39;t, netty was everywhere making it impossible to do what I wanted. 

What do you guys think about writing lightweight wrappers or strictly private modules? Maybe? 

Hopefully, you guys could give a novice like me some advice on how I should be coding :)</description>
    
    <lastBuildDate>Fri, 19 May 2017 11:47:15 +0000</lastBuildDate>
    <category>Uncategorized</category>
    <atom:link href="https://forum.moparisthebest.com/t/advice-on-server-design/556085.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Advice on server design</title>
        <dc:creator><![CDATA[@lothy Lothy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lothy">@lothy</a> wrote:</p>
          <blockquote>
              <p>If you’re going to use a JVM language, why not give Kotlin a try? It has some pretty nice things (e.g.: coroutines, a means to cooperative scheduling) going for it.</p>
<p>At the end of the day, the design doesn’t matter that much - as long as it’s maintainable in the eyes of whoever needs to maintain it. In a managed runtime like the JVM though, you’ll want to be mindful of things like garbage collection and the latency/jitter it introduces.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/advice-on-server-design/556085/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/advice-on-server-design/556085/2</link>
        <pubDate>Fri, 19 May 2017 11:47:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-556085-2</guid>
        <source url="https://forum.moparisthebest.com/t/advice-on-server-design/556085.rss">Advice on server design</source>
      </item>
      <item>
        <title>Advice on server design</title>
        <dc:creator><![CDATA[@my-swagger my-swagger]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/my-swagger">@my-swagger</a> wrote:</p>
          <blockquote>
              <p>Hey guys,</p>
<p>I’m designing the backend for my app and had a couple of ideas that I wanted to talk you guys about.</p>
<p>Everything is going to be related to Java:</p>
<p>So the bare basics of programming would tell you that a class is a blueprint e.g. a Person class would describe a person. Nothing more, right?</p>
<p>Let’s think of a game more specifically RSPS (since we all love those) - The typical Player.java may contain some unrelated Player code such as a reference to a Socket or methods to send the user information.</p>
<ul>
<li>Does this not violate the concept of what a player should be?</li>
</ul>
<p>Stuff like Apollo and Scapeemulator do this. In fact, what is this Player.java class really suppose to be doing? <a href="https://github.com/apollo-rsps/apollo/blob/master/game/src/main/org/apollo/game/model/entity/Player.java" rel="nofollow noopener">https://github.com/apollo-rsps/apollo/blob/master/game/src/main/org/apollo/game/model/entity/Player.java</a></p>
<p>Seems like a lot going on for a class that is supposed to just model a Player.</p>
<p>Now what I think the correct approach would be is to have the player class actually define a player and nothing else e.g.</p>
<p>class Player { String name; String health; String runEnergy; }</p>
<p>Then have some other entity dealing with player updating, network calls etc. In regards to “how would we then send a player messages?” Maybe a map or a repo? Be creative <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>
<p>Going a little deeper into the core of a rsps, let’s talk about how some people implement networking (example).<br>
When I was using Scapeemulator, I wanted to swap the networking library (that does the job a little better for what I wanted). I couldn’t, netty was everywhere making it impossible to do what I wanted.</p>
<p>What do you guys think about writing lightweight wrappers or strictly private modules? Maybe?</p>
<p>Hopefully, you guys could give a novice like me some advice on how I should be coding <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/advice-on-server-design/556085/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/advice-on-server-design/556085/1</link>
        <pubDate>Sat, 13 May 2017 22:21:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-556085-1</guid>
        <source url="https://forum.moparisthebest.com/t/advice-on-server-design/556085.rss">Advice on server design</source>
      </item>
  </channel>
</rss>
