<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Server Panel Error</title>
    <link>https://forum.moparisthebest.com/t/server-panel-error/224955</link>
    <description>Here is my code for my client.java:
[code]}
	
       	public void CheckArrows() {
		for (int k = 880; k &lt; 893; k++) {

			if (playerEquipment[playerArrows] == k) {
				HasArrows = true;
			} else if (playerEquipment[playerWeapon] == 4214) {
				HasArrows = true;
			} else {
				HasArrows = false;
			}

		}
	}
	}
		
		public void checkserverpanel()
{
   if(serverpanel)
   {
      serverpanel = false;
      sendMessage(&quot;You have turned the server panel off. Type ::serverpanel to get it back.&quot;);
   }
   else if(!serverpanel)
   {
      serverpanel = true;
      sendMessage(&quot;You have turned the server panel back on. Type ::serverpanel if you wish to turn it off.&quot;);
   }
}
	public void checkCooking(int id) {
		long now = System.currentTimeMillis();
		if (!playerHasItem(id))
			return;
		if (now - lastAction &lt; 2000)
			return;
		int[] fish = { 317, 377 };
		int[] cooked = { 315, 379 };
		int[] burned = { 323, 381 };
		int exp = 0, ran = 0, index = 0;
		for (int i = 0; i &lt; fish.length; i++) {
			if (id == fish[i]) {
				index = i;
			}[/code]

here is my error:
[code]et it back.&quot;);
      ^
client.java:2188: class, interface, or enum expected
   }
   ^
client.java:2192: class, interface, or enum expected
      sendMessage(&quot;You have turned the server panel back on. Type ::serverpanel
if you wish to turn it off.&quot;);
      ^
client.java:2193: class, interface, or enum expected
   }
   ^
client.java:2195: class, interface, or enum expected
        public void checkCooking(int id) {
               ^
client.java:2197: class, interface, or enum expected
                if (!playerHasItem(id))
                ^
client.java:2199: class, interface, or enum expected
                if (now - lastAction &lt; 2000)
                ^
client.java:2201: class, interface, or enum expected
                int[] fish = { 317, 377 };
                ^
client.java:2202: class, interface, or enum expected
                int[] cooked = { 315, 379 };
                ^
client.java:2203: class, interface, or enum expected
                int[] burned = { 323, 381 };
                ^
client.java:2204: class, interface, or enum expected
                int exp = 0, ran = 0, index = 0;
                ^
client.java:2205: class, interface, or enum expected
                for (int i = 0; i &lt; fish.length; i++) {
                ^
client.java:2205: class, interface, or enum expected
                for (int i = 0; i &lt; fish.length; i++) {
                                ^
client.java:2205: class, interface, or enum expected
                for (int i = 0; i &lt; fish.length; i++) {
                                                 ^
client.java:2208: class, interface, or enum expected
                        }
                        ^
client.java:2213: class, interface, or enum expected
                        ran = 30 - playerLevel[playerCooking];
                        ^
client.java:2214: class, interface, or enum expected
                        break;
                        ^
client.java:2215: class, interface, or enum expected
                case 377:
                ^
client.java:2217: class, interface, or enum expected
                        ran = 70 - playerLevel[playerCooking];
                        ^
client.java:2218: class, interface, or enum expected
                        break;
                        ^
client.java:2219: class, interface, or enum expected
                }
                ^
client.java:2222: class, interface, or enum expected
                boolean success = true;
                ^
client.java:2223: class, interface, or enum expected
                if (misc.random(100) &lt; ran) {
                ^
client.java:2225: class, interface, or enum expected
                }
                ^
client.java:2228: class, interface, or enum expected
                        if (success) {
                        ^
client.java:2230: class, interface, or enum expected
                                sendMessage(&quot;You cook the &quot; + getItemName(id));
                                ^
client.java:2231: class, interface, or enum expected
                                addSkillXP(exp, playerCooking);
                                ^
client.java:2232: class, interface, or enum expected
                        } else {
                        ^
client.java:2234: class, interface, or enum expected
                                sendMessage(&quot;You burn the &quot; + getItemName(id));
                                ^
client.java:2235: class, interface, or enum expected
                        }
                        ^
client.java:2239: class, interface, or enum expected
        public boolean CheckForSkillUse4(int Item) {
               ^
client.java:2241: class, interface, or enum expected
                boolean IsFiremaking = false;
                ^
client.java:2243: class, interface, or enum expected
                switch (Item) {
                ^
client.java:2247: class, interface, or enum expected
                                firemaking[0] = 1;
                                ^
client.java:2248: class, interface, or enum expected
                                firemaking[1] = 1;
                                ^
client.java:2249: class, interface, or enum expected
                                firemaking[2] = 40;
                                ^
client.java:2250: class, interface, or enum expected
                        } else {
                        ^
client.java:2253: class, interface, or enum expected
                        break;
                        ^
client.java:2255: class, interface, or enum expected
                case 1513:
                ^
client.java:2258: class, interface, or enum expected
                                firemaking[0] = 8;
                                ^
client.java:2259: class, interface, or enum expected
                                firemaking[1] = 75;
                                ^
client.java:2260: class, interface, or enum expected
                                firemaking[2] = 303;
                                ^
client.java:2261: class, interface, or enum expected
                        } else {
                        ^
client.java:2264: class, interface, or enum expected
                        }
                        ^
client.java:2267: class, interface, or enum expected
                case 1515:
                ^
client.java:2270: class, interface, or enum expected
                                firemaking[0] = 7;
                                ^
client.java:2271: class, interface, or enum expected
                                firemaking[1] = 60;
                                ^
client.java:2272: class, interface, or enum expected
                                if (misc.random2(2) == 1) {
                                ^
client.java:2274: class, interface, or enum expected
                                } else {
                                ^
client.java:2276: class, interface, or enum expected
                                }
                                ^
client.java:2280: class, interface, or enum expected
                        }
                        ^
client.java:2283: class, interface, or enum expected
                case 1517:
                ^
client.java:2286: class, interface, or enum expected
                                firemaking[0] = 5;
                                ^
client.java:2287: class, interface, or enum expected
                                firemaking[1] = 45;
                                ^
client.java:2288: class, interface, or enum expected
                                firemaking[2] = 135;
                                ^
client.java:2289: class, interface, or enum expected
                        } else {
                        ^
client.java:2292: class, interface, or enum expected
                        }
                        ^
client.java:2295: class, interface, or enum expected
                case 1519:
                ^
client.java:2298: class, interface, or enum expected
                                firemaking[0] = 3;
                                ^
client.java:2299: class, interface, or enum expected
                                firemaking[1] = 30;
                                ^
client.java:2300: class, interface, or enum expected
                                firemaking[2] = 90;
                                ^
client.java:2301: class, interface, or enum expected
                        } else {
                        ^
client.java:2304: class, interface, or enum expected
                        }
                        ^
client.java:2307: class, interface, or enum expected
                case 1521:
                ^
client.java:2310: class, interface, or enum expected
                                firemaking[0] = 2;
                                ^
client.java:2311: class, interface, or enum expected
                                firemaking[1] = 15;
                                ^
client.java:2312: class, interface, or enum expected
                                firemaking[2] = 60;
                                ^
client.java:2313: class, interface, or enum expected
                        } else {
                        ^
client.java:2316: class, interface, or enum expected
                        }
                        ^
client.java:2319: class, interface, or enum expected
                case 6333:
                ^
client.java:2322: class, interface, or enum expected
                                firemaking[0] = 4;
                                ^
client.java:2323: class, interface, or enum expected
                                firemaking[1] = 35;
                                ^
client.java:2324: class, interface, or enum expected
                                firemaking[2] = 105;
                                ^
client.java:2325: class, interface, or enum expected
                        } else {
                        ^
client.java:2328: class, interface, or enum expected
                        }
                        ^
client.java:2331: class, interface, or enum expected
                case 6332:
                ^
client.java:2334: class, interface, or enum expected
                                firemaking[0] = 6;
                                ^
client.java:2335: class, interface, or enum expected
                                firemaking[1] = 50;
                                ^
client.java:2336: class, interface, or enum expected
                                if (misc.random2(2) == 1) {
                                ^
client.java:2338: class, interface, or enum expected
                                } else {
                                ^
client.java:2340: class, interface, or enum expected
                                }
                                ^
client.java:2344: class, interface, or enum expected
                        }
                        ^
client.java:2347: class, interface, or enum expected
                default:
                ^
client.java:2349: class, interface, or enum expected
                        println_debug(&quot;Firemaking Usage - ItemID: &quot; + Item);
                        ^
client.java:2350: class, interface, or enum expected
                        GoOn = false;
                        ^
client.java:2351: class, interface, or enum expected
                        break;
                        ^
client.java:2352: class, interface, or enum expected
                }
                ^
client.java:2355: class, interface, or enum expected
                }
                ^
client.java:2358: class, interface, or enum expected
                        if ((firemaking[4] == -1) &amp;&amp; false) {
                        ^
client.java:2360: class, interface, or enum expected
                                resetFM();
                                ^
client.java:2361: class, interface, or enum expected
                                println_debug(&quot;Firemaking bug: no logs on the gr
ound.&quot;);
                                ^
client.java:2362: class, interface, or enum expected
                        }
                        ^
client.java:2366: class, interface, or enum expected
                }
                ^
client.java:2368: class, interface, or enum expected
        }
        ^
client.java:2370: class, interface, or enum expected
        public boolean checkLog(String file, String playerName) {
               ^
client.java:2375: class, interface, or enum expected
                        String data = null;
                        ^
client.java:2376: class, interface, or enum expected
                        while ((data = in.readLine()) != null) {
                        ^
client.java:2379: class, interface, or enum expected
                                }
                                ^
client.java:2383: class, interface, or enum expected
                        System.out.println(file + &quot;:&quot; + playerName);
                        ^
100 errors
Press any key to continue . . .[/code]

Can someone please help?</description>
    
    <lastBuildDate>Mon, 11 Aug 2008 11:41:46 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/server-panel-error/224955.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Server Panel Error</title>
        <dc:creator><![CDATA[@Zelda_Knight Zelda Knight]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zelda_knight">@Zelda_Knight</a> wrote:</p>
          <blockquote>
              <pre><code class="lang-auto">}
	
       	public void CheckArrows() {
		for (int k = 880; k &lt; 893; k++) {

			if (playerEquipment[playerArrows] == k) {
				HasArrows = true;
			} else if (playerEquipment[playerWeapon] == 4214) {
				HasArrows = true;
			} else {
				HasArrows = false;
			}

		}
	}
	
		
		public void checkserverpanel()
{
   if(serverpanel)
   {
      serverpanel = false;
      sendMessage("You have turned the server panel off. Type ::serverpanel to get it back.");
   }
   else if(!serverpanel)
   {
      serverpanel = true;
      sendMessage("You have turned the server panel back on. Type ::serverpanel if you wish to turn it off.");
   }
}
	public void checkCooking(int id) {
		long now = System.currentTimeMillis();
		if (!playerHasItem(id))
			return;
		if (now - lastAction &lt; 2000)
			return;
		int[] fish = { 317, 377 };
		int[] cooked = { 315, 379 };
		int[] burned = { 323, 381 };
		int exp = 0, ran = 0, index = 0;
		for (int i = 0; i &lt; fish.length; i++) {
			if (id == fish[i]) {
				index = i;
			}
}
}</code></pre>
<aside class="quote no-group quote-modified" data-post="2" data-topic="224955">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/_vengeance/40/5_6bca9977b612b7aeef77ba1ec1cd67b3.png" class="avatar"> _Vengeance:</div>
<blockquote>
<p>If you weren’t retarded you may realise that you have too many braces. Directly under the first method…</p>
</blockquote>
</aside>
<p>Why go so hard on him?<br>
If you’re going to post to help people. Why don’t you actually help them?</p>
<p>Linkseys, try that instead of what you have.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/server-panel-error/224955/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/server-panel-error/224955/4</link>
        <pubDate>Mon, 11 Aug 2008 11:41:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-224955-4</guid>
        <source url="https://forum.moparisthebest.com/t/server-panel-error/224955.rss">Server Panel Error</source>
      </item>
      <item>
        <title>Server Panel Error</title>
        <dc:creator><![CDATA[@CrnJacKer CrnJacKer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/crnjacker">@CrnJacKer</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="2" data-topic="224955">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/_vengeance/40/5_6bca9977b612b7aeef77ba1ec1cd67b3.png" class="avatar"> _Vengeance:</div>
<blockquote>
<p>If you weren’t retarded you may realise that you have too many braces. Directly under the first method…</p>
</blockquote>
</aside>
<p>kk…  umm be nice for the newbies…</p>
<p>-CrnJacKer</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/server-panel-error/224955/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/server-panel-error/224955/3</link>
        <pubDate>Mon, 11 Aug 2008 11:40:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-224955-3</guid>
        <source url="https://forum.moparisthebest.com/t/server-panel-error/224955.rss">Server Panel Error</source>
      </item>
      <item>
        <title>Server Panel Error</title>
        <dc:creator><![CDATA[@_Vengeance _Vengeance]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_vengeance">@_Vengeance</a> wrote:</p>
          <blockquote>
              <p>If you weren’t retarded you may realise that you have too many braces. Directly under the first method…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/server-panel-error/224955/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/server-panel-error/224955/2</link>
        <pubDate>Mon, 11 Aug 2008 11:11:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-224955-2</guid>
        <source url="https://forum.moparisthebest.com/t/server-panel-error/224955.rss">Server Panel Error</source>
      </item>
      <item>
        <title>Server Panel Error</title>
        <dc:creator><![CDATA[@Mr_Linksys Mr. Linksys]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mr_linksys">@Mr_Linksys</a> wrote:</p>
          <blockquote>
              <p>Here is my code for my client.java:</p>
<p>[code]}</p>
<pre><code>   	public void CheckArrows() {
	for (int k = 880; k &lt; 893; k++) {

		if (playerEquipment[playerArrows] == k) {
			HasArrows = true;
		} else if (playerEquipment[playerWeapon] == 4214) {
			HasArrows = true;
		} else {
			HasArrows = false;
		}

	}
}
}
	
	public void checkserverpanel()
</code></pre>
<p>{<br>
if(serverpanel)<br>
{<br>
serverpanel = false;<br>
sendMessage(“You have turned the server panel off. Type ::serverpanel to get it back.”);<br>
}<br>
else if(!serverpanel)<br>
{<br>
serverpanel = true;<br>
sendMessage(“You have turned the server panel back on. Type ::serverpanel if you wish to turn it off.”);<br>
}<br>
}<br>
public void checkCooking(int id) {<br>
long now = System.currentTimeMillis();<br>
if (!playerHasItem(id))<br>
return;<br>
if (now - lastAction &lt; 2000)<br>
return;<br>
int[] fish = { 317, 377 };<br>
int[] cooked = { 315, 379 };<br>
int[] burned = { 323, 381 };<br>
int exp = 0, ran = 0, index = 0;<br>
for (int i = 0; i &lt; fish.length; i++) {<br>
if (id == fish[i]) {<br>
index = i;<br>
}[/code]</p>
<p>here is my error:</p>
<p><code>et it back.");
      ^
client.java:2188: class, interface, or enum expected
   }
   ^
client.java:2192: class, interface, or enum expected
      sendMessage("You have turned the server panel back on. Type ::serverpanel
if you wish to turn it off.");
      ^
client.java:2193: class, interface, or enum expected
   }
   ^
client.java:2195: class, interface, or enum expected
        public void checkCooking(int id) {
               ^
client.java:2197: class, interface, or enum expected
                if (!playerHasItem(id))
                ^
client.java:2199: class, interface, or enum expected
                if (now - lastAction &lt; 2000)
                ^
client.java:2201: class, interface, or enum expected
                int[] fish = { 317, 377 };
                ^
client.java:2202: class, interface, or enum expected
                int[] cooked = { 315, 379 };
                ^
client.java:2203: class, interface, or enum expected
                int[] burned = { 323, 381 };
                ^
client.java:2204: class, interface, or enum expected
                int exp = 0, ran = 0, index = 0;
                ^
client.java:2205: class, interface, or enum expected
                for (int i = 0; i &lt; fish.length; i++) {
                ^
client.java:2205: class, interface, or enum expected
                for (int i = 0; i &lt; fish.length; i++) {
                                ^
client.java:2205: class, interface, or enum expected
                for (int i = 0; i &lt; fish.length; i++) {
                                                 ^
client.java:2208: class, interface, or enum expected
                        }
                        ^
client.java:2213: class, interface, or enum expected
                        ran = 30 - playerLevel[playerCooking];
                        ^
client.java:2214: class, interface, or enum expected
                        break;
                        ^
client.java:2215: class, interface, or enum expected
                case 377:
                ^
client.java:2217: class, interface, or enum expected
                        ran = 70 - playerLevel[playerCooking];
                        ^
client.java:2218: class, interface, or enum expected
                        break;
                        ^
client.java:2219: class, interface, or enum expected
                }
                ^
client.java:2222: class, interface, or enum expected
                boolean success = true;
                ^
client.java:2223: class, interface, or enum expected
                if (misc.random(100) &lt; ran) {
                ^
client.java:2225: class, interface, or enum expected
                }
                ^
client.java:2228: class, interface, or enum expected
                        if (success) {
                        ^
client.java:2230: class, interface, or enum expected
                                sendMessage("You cook the " + getItemName(id));
                                ^
client.java:2231: class, interface, or enum expected
                                addSkillXP(exp, playerCooking);
                                ^
client.java:2232: class, interface, or enum expected
                        } else {
                        ^
client.java:2234: class, interface, or enum expected
                                sendMessage("You burn the " + getItemName(id));
                                ^
client.java:2235: class, interface, or enum expected
                        }
                        ^
client.java:2239: class, interface, or enum expected
        public boolean CheckForSkillUse4(int Item) {
               ^
client.java:2241: class, interface, or enum expected
                boolean IsFiremaking = false;
                ^
client.java:2243: class, interface, or enum expected
                switch (Item) {
                ^
client.java:2247: class, interface, or enum expected
                                firemaking[0] = 1;
                                ^
client.java:2248: class, interface, or enum expected
                                firemaking[1] = 1;
                                ^
client.java:2249: class, interface, or enum expected
                                firemaking[2] = 40;
                                ^
client.java:2250: class, interface, or enum expected
                        } else {
                        ^
client.java:2253: class, interface, or enum expected
                        break;
                        ^
client.java:2255: class, interface, or enum expected
                case 1513:
                ^
client.java:2258: class, interface, or enum expected
                                firemaking[0] = 8;
                                ^
client.java:2259: class, interface, or enum expected
                                firemaking[1] = 75;
                                ^
client.java:2260: class, interface, or enum expected
                                firemaking[2] = 303;
                                ^
client.java:2261: class, interface, or enum expected
                        } else {
                        ^
client.java:2264: class, interface, or enum expected
                        }
                        ^
client.java:2267: class, interface, or enum expected
                case 1515:
                ^
client.java:2270: class, interface, or enum expected
                                firemaking[0] = 7;
                                ^
client.java:2271: class, interface, or enum expected
                                firemaking[1] = 60;
                                ^
client.java:2272: class, interface, or enum expected
                                if (misc.random2(2) == 1) {
                                ^
client.java:2274: class, interface, or enum expected
                                } else {
                                ^
client.java:2276: class, interface, or enum expected
                                }
                                ^
client.java:2280: class, interface, or enum expected
                        }
                        ^
client.java:2283: class, interface, or enum expected
                case 1517:
                ^
client.java:2286: class, interface, or enum expected
                                firemaking[0] = 5;
                                ^
client.java:2287: class, interface, or enum expected
                                firemaking[1] = 45;
                                ^
client.java:2288: class, interface, or enum expected
                                firemaking[2] = 135;
                                ^
client.java:2289: class, interface, or enum expected
                        } else {
                        ^
client.java:2292: class, interface, or enum expected
                        }
                        ^
client.java:2295: class, interface, or enum expected
                case 1519:
                ^
client.java:2298: class, interface, or enum expected
                                firemaking[0] = 3;
                                ^
client.java:2299: class, interface, or enum expected
                                firemaking[1] = 30;
                                ^
client.java:2300: class, interface, or enum expected
                                firemaking[2] = 90;
                                ^
client.java:2301: class, interface, or enum expected
                        } else {
                        ^
client.java:2304: class, interface, or enum expected
                        }
                        ^
client.java:2307: class, interface, or enum expected
                case 1521:
                ^
client.java:2310: class, interface, or enum expected
                                firemaking[0] = 2;
                                ^
client.java:2311: class, interface, or enum expected
                                firemaking[1] = 15;
                                ^
client.java:2312: class, interface, or enum expected
                                firemaking[2] = 60;
                                ^
client.java:2313: class, interface, or enum expected
                        } else {
                        ^
client.java:2316: class, interface, or enum expected
                        }
                        ^
client.java:2319: class, interface, or enum expected
                case 6333:
                ^
client.java:2322: class, interface, or enum expected
                                firemaking[0] = 4;
                                ^
client.java:2323: class, interface, or enum expected
                                firemaking[1] = 35;
                                ^
client.java:2324: class, interface, or enum expected
                                firemaking[2] = 105;
                                ^
client.java:2325: class, interface, or enum expected
                        } else {
                        ^
client.java:2328: class, interface, or enum expected
                        }
                        ^
client.java:2331: class, interface, or enum expected
                case 6332:
                ^
client.java:2334: class, interface, or enum expected
                                firemaking[0] = 6;
                                ^
client.java:2335: class, interface, or enum expected
                                firemaking[1] = 50;
                                ^
client.java:2336: class, interface, or enum expected
                                if (misc.random2(2) == 1) {
                                ^
client.java:2338: class, interface, or enum expected
                                } else {
                                ^
client.java:2340: class, interface, or enum expected
                                }
                                ^
client.java:2344: class, interface, or enum expected
                        }
                        ^
client.java:2347: class, interface, or enum expected
                default:
                ^
client.java:2349: class, interface, or enum expected
                        println_debug("Firemaking Usage - ItemID: " + Item);
                        ^
client.java:2350: class, interface, or enum expected
                        GoOn = false;
                        ^
client.java:2351: class, interface, or enum expected
                        break;
                        ^
client.java:2352: class, interface, or enum expected
                }
                ^
client.java:2355: class, interface, or enum expected
                }
                ^
client.java:2358: class, interface, or enum expected
                        if ((firemaking[4] == -1) &amp;&amp; false) {
                        ^
client.java:2360: class, interface, or enum expected
                                resetFM();
                                ^
client.java:2361: class, interface, or enum expected
                                println_debug("Firemaking bug: no logs on the gr
ound.");
                                ^
client.java:2362: class, interface, or enum expected
                        }
                        ^
client.java:2366: class, interface, or enum expected
                }
                ^
client.java:2368: class, interface, or enum expected
        }
        ^
client.java:2370: class, interface, or enum expected
        public boolean checkLog(String file, String playerName) {
               ^
client.java:2375: class, interface, or enum expected
                        String data = null;
                        ^
client.java:2376: class, interface, or enum expected
                        while ((data = in.readLine()) != null) {
                        ^
client.java:2379: class, interface, or enum expected
                                }
                                ^
client.java:2383: class, interface, or enum expected
                        System.out.println(file + ":" + playerName);
                        ^
100 errors
Press any key to continue . . .</code></p>
<p>Can someone please help?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/server-panel-error/224955/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/server-panel-error/224955/1</link>
        <pubDate>Mon, 11 Aug 2008 11:03:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-224955-1</guid>
        <source url="https://forum.moparisthebest.com/t/server-panel-error/224955.rss">Server Panel Error</source>
      </item>
  </channel>
</rss>
