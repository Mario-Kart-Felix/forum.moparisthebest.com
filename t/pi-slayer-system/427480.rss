<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[PI] Slayer System</title>
    <link>https://forum.moparisthebest.com/t/pi-slayer-system/427480</link>
    <description>[B]
Difficulty: 1/10
Time Needed: 5 Minutes
What you are adding:[/B] A slayer system that is handled through enums, and instead of a difficulty automatically being assigned to you, you choose one.

[B]First:[/B]
Replace your Slayer class with mine, don&#39;t forget to change the packaging/importing.
[CODE=java]/**
 * Slayer Class
 * @author Jili X I
 * @date 12/14/11 
 */

package server.model.content.skills;

import server.Config;
import server.model.npcs.NPCHandler;
import server.model.players.Client;
import server.model.players.PlayerHandler;
import server.util.Misc;

public class Slayer {
	
	public static SlayerTask getEasyTask(Client c){
		SlayerTask task = null;
		do {
			task = EasyTask.values()[(int)(Math.random()*EasyTask.values().length)];
		} while(task.getReq() &gt;= c.playerLevel[c.playerSlayer]);
			String description = task.getDesc();
			c.slayerTask = task.getId();
			c.taskAmount = Misc.random(50) + 25;
			c.sendMessage(&quot;You have been assigned to kill &quot; + c.taskAmount + &quot; &quot; + description + &quot;.&quot;);
			return task;
	}

	public static SlayerTask getMediumTask(Client c) {
		SlayerTask task = null;
		do {
			task = MediumTask.values()[(int)(Math.random()*MediumTask.values().length)];
		} while(task.getReq() &gt;= c.playerLevel[c.playerSlayer]);
			String description = task.getDesc();
			c.slayerTask = task.getId();
			c.taskAmount = Misc.random(70) + 25;
			c.sendMessage(&quot;You have been assigned to kill &quot; + c.taskAmount + &quot; &quot; + description + &quot;.&quot;);
			return task;		
	}
	
	public static SlayerTask getHardTask(Client c) {
		SlayerTask task = null;
		do {
			task = HardTask.values()[(int)(Math.random()*HardTask.values().length)];
		} while(task.getReq() &gt;= c.playerLevel[c.playerSlayer]);
			String description = task.getDesc();
			c.slayerTask = task.getId();
			c.taskAmount = Misc.random(90) + 25;
			c.sendMessage(&quot;You have been assigned to kill &quot; + c.taskAmount + &quot; &quot; + description + &quot;.&quot;);
			return task;			
	}
	
	public boolean canSlay(Client c, int i) {
		for(EasyTask e : EasyTask.values()) {
			if(c.playerLevel[c.playerSlayer] &lt; e.getReq() &amp;&amp; NPCHandler.npcs[i].npcType == e.getId())
				return false;
		}
		for(MediumTask m: MediumTask.values()) {
			if(c.playerLevel[c.playerSlayer] &lt; m.getReq() &amp;&amp; NPCHandler.npcs[i].npcType == m.getId())
				return false;
		}
		for(HardTask h: HardTask.values()) {
			if(c.playerLevel[c.playerSlayer] &lt; h.getReq() &amp;&amp; NPCHandler.npcs[i].npcType == h.getId())
				return false;
		}
		for(NonTask n: NonTask.values()) {
			if(c.playerLevel[c.playerSlayer] &lt; n.getReq() &amp;&amp; NPCHandler.npcs[i].npcType == n.getId())
				return false;
		}
		return true;
	}
	
	public void appendSlayerExperience(int i) {
		Client c = (Client)PlayerHandler.players[NPCHandler.npcs[i].killedBy];
		if(c != null) {
			if (c.slayerTask == NPCHandler.npcs[i].npcType){
				c.taskAmount--;
				c.getPA().addSkillXP(NPCHandler.npcs[i].MaxHP * Config.SLAYER_EXPERIENCE, c.playerSlayer);
				if (c.taskAmount &lt;= 0) {
					c.getPA().addSkillXP((NPCHandler.npcs[i].MaxHP * 8) * Config.SLAYER_EXPERIENCE, c.playerSlayer);
					c.slayerTask = -1;
					c.sendMessage(&quot;You have completed your slayer task, please see the slayer master to get a new one.&quot;);
				}
			}
		}
	}
	
	interface SlayerTask {
		public int getId();
		public int getReq();
		public String getDesc();
	}

	enum EasyTask implements SlayerTask {
		YAK(5529, 1, &quot;Yak&#39;s&quot;),
		GOBLIN(101, 1, &quot;Goblin&#39;s&quot;),
		ROCK_CRAB(1265, 1, &quot;Rock Crab&#39;s&quot;),
		AL_KHARID_WARRIOR(18, 1, &quot;Al-Kharid Warrior&#39;s&quot;),
		CHAOS_DRUID(181, 1, &quot;Chaos Druid&#39;s&quot;),
		GHOST(103, 1, &quot;Ghost&#39;s&quot;),
		GIANT_BAT(78, 1, &quot;Giant Bat&#39;s&quot;),
		HILL_GIANT(117, 1, &quot;Hill Giants&quot;),
		CHAOS_DWARF(119, 1, &quot;Chaos Dwarf&#39;s&quot;),
		CRAWLING_HAND(1648, 5, &quot;Crawling hand&#39;s&quot;),
		BANSHEE(1612, 15, &quot;Banshee&#39;s&quot;);
		
		private int id, req;
		private String desc;
		
		EasyTask(int id, int req, String desc) {
			this.id = id;
			this.req = req;
			this.desc = desc;
		}

		@Override
		public int getId() {
			return id;
		}

		@Override
		public int getReq() {
			return req;
		}

		@Override
		public String getDesc() {
			return desc;
		}
		
		

	}
	
	enum MediumTask implements SlayerTask {
		MOSS_GIANT(112, 1, &quot;Moss Giant&#39;s&quot;),
		ICE_WARRIOR(125, 1, &quot;Ice Warrior&#39;s&quot;),
		BABY_BLUE_DRAGON(48, 1, &quot;Baby Blue Dragon&#39;s&quot;),
		INFERNAL_MAGE(1643, 45, &quot;Infernal Mage&#39;s&quot;),
		BLOODVELD(1618, 50, &quot;Bloodveld&#39;s&quot;),
		GREEN_DRAGON(1610, 1, &quot;Green Dragon&#39;s&quot;),
		LESSER_DEMON(82, 1, &quot;Lesser Demon&#39;s&quot;),
		DAGANNOTH(1341, 1, &quot;Dagannoth&#39;s&quot;);
		
		private int id, req;
		private String desc;
		
		MediumTask(int id, int req, String desc) {
			this.id = id;
			this.req = req;
			this.desc = desc;
		}

		@Override
		public int getId() {
			return id;
		}

		@Override
		public int getReq() {
			return req;
		}

		@Override
		public String getDesc() {
			return desc;
		}
	}
	
	enum HardTask implements SlayerTask {
		DUST_DEVIL(1624, 65, &quot;Dust Devil&#39;s&quot;),
		GARGOYLE(1610, 75, &quot;Gargoyle&#39;s&quot;),
		NECHRYAEL(1613, 80, &quot;Nechryael&#39;s&quot;),
		ABYSSAL_DEMON(1615, 85, &quot;Abyssal Demon&#39;s&quot;),
		DARK_BEAST(2783, 90, &quot;Dark Beast&#39;s&quot;),
		BLUE_DRAGON(55, 1, &quot;Blue Dragon&#39;s&quot;),
		BLACK_DEMON(84, 1, &quot;Black Demon&#39;s&quot;),
		HELL_HOUND(49, 1, &quot;Hell Hound&#39;s&quot;);
		
		
		private int id, req;
		private String desc;
		
		HardTask(int id, int req, String desc) {
			this.id = id;
			this.req = req;
			this.desc = desc;
		}

		@Override
		public int getId() {
			return id;
		}

		@Override
		public int getReq() {
			return req;
		}

		@Override
		public String getDesc() {
			return desc;
		}
	}
	
	enum NonTask implements SlayerTask {
		ICE_STRYKEWYRM(9463, 93, &quot;Ice Strykewyrm&#39;s&quot;),
		DESERT_STRYKEWYRM(9465, 77, &quot;Desert Strykewyrm&#39;s&quot;),
		JUNGLE_STRYKEWYRM(9467, 73, &quot;Jungle Strykewyrm&#39;s&quot;);
		
		private int id, req;
		private String desc;
		
		NonTask(int id, int req, String desc) {
			this.id = id;
			this.req = req;
			this.desc = desc;
		}

		@Override
		public int getId() {
			return id;
		}

		@Override
		public int getReq() {
			return req;
		}

		@Override
		public String getDesc() {
			return desc;
		}
	}
	
}[/CODE]
That is seperating slayer tasks into 3 enums: easy, medium, and hard. This is good because you can use to allow users to choose slayer difficulty, split them between multiple slayer masters, or do it based on combat. This also grabs the requirements from the enums instead of from a array located in combat assistant.

[B]Second:[/B]
Go into your CombatAssistant class and delete:
[CODE=java]	public int[][] slayerReqs = {
		{1648,5},{1612,15},{1643,45},{1618,50},{1624,65},
		{1610,75},{1613,80},{1615,85},{2783,90}
	};
	
	public boolean goodSlayer(int i) {
		for (int j = 0; j &lt; slayerReqs.length; j++) {
			if (slayerReqs[j][0] == Server.npcHandler.npcs[i].npcType) {
				if (slayerReqs[j][1] &gt; c.playerLevel[c.playerSlayer]) {
					c.sendMessage(&quot;You need a slayer level of &quot; + slayerReqs[j][1] + &quot; to harm this NPC.&quot;);
					return false;
				}
			}
		}
		return true;
	}[/CODE]
Then replace:
[CODE=java]			if (!goodSlayer(i)) {
				resetPlayerAttack();
				return;
			}[/CODE]
with
[CODE=java]			if (!c.getSlayer().canSlay(c, i)) {
				resetPlayerAttack();
				return;
			}[/CODE]
That is loading requirements from Slayer class instead of from CombatAssistant class.

[B]Third:[/B]
Go into your NPCHandler class and delete:
[CODE=java]	/**
	* Slayer Experience
	**/	
	public void appendSlayerExperience(int i) {
		int npc = 0;
		Client c = (Client)Server.playerHandler.players[npcs[i].killedBy];
		if(c != null) {
			if (c.slayerTask == npcs[i].npcType){
				c.taskAmount--;
				c.getPA().addSkillXP(npcs[i].MaxHP * Config.SLAYER_EXPERIENCE, 18);
				if (c.taskAmount &lt;= 0) {
					c.getPA().addSkillXP((npcs[i].MaxHP * 8) * Config.SLAYER_EXPERIENCE, 18);
					c.slayerTask = -1;
					c.sendMessage(&quot;You completed your slayer task. Please see a slayer master to get a new one.&quot;);
				}
			}
		}
	}[/CODE]
Then replace:
[CODE=java]appendSlayerExperience(i);[/CODE]
with
[CODE=java]Client c = (Client)PlayerHandler.players[NPCHandler.npcs[i].killedBy];
c.getSlayer().appendSlayerExperience(i);[/CODE]
That is loading experience from Slayer class instead of NPCHandler class.

[B]Credits:[/B]
-Me
-Those who helped me.

[B][I]NOTE: To make this work you will have to add some way of giving a play the option of choosing between: Easy, medium, and hard tasks.[/I][/B]</description>
    
    <lastBuildDate>Fri, 08 Jun 2012 17:49:17 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/pi-slayer-system/427480.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[PI] Slayer System</title>
        <dc:creator><![CDATA[@MrFun MrFun]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mrfun">@MrFun</a> wrote:</p>
          <blockquote>
              <p>[quote=“itai, post:1, topic:427480”]<span class="bbcode-b"><br>
Difficulty: 1/10<br>
Time Needed: 5 Minutes<br>
What you are adding:</span> A slayer system that is handled through enums, and instead of a difficulty automatically being assigned to you, you choose one.</p>
<p><span class="bbcode-b">First:</span><br>
Replace your Slayer class with mine, don’t forget to change the packaging/importing.</p>
<p>[CODE=java]/**</p>
<ul>
<li>Slayer Class</li>
<li>
<span class="mention">@author</span> Jili X I</li>
<li>
<a class="mention" href="/u/date">@date</a> 12/14/11<br>
*/</li>
</ul>
<p>package server.model.content.skills;</p>
<p>import server.Config;<br>
import server.model.npcs.NPCHandler;<br>
import server.model.players.Client;<br>
import server.model.players.PlayerHandler;<br>
import server.util.Misc;</p>
<p>public class Slayer {</p>
<pre><code>public static SlayerTask getEasyTask(Client c){
	SlayerTask task = null;
	do {
		task = EasyTask.values()[(int)(Math.random()*EasyTask.values().length)];
	} while(task.getReq() &gt;= c.playerLevel[c.playerSlayer]);
		String description = task.getDesc();
		c.slayerTask = task.getId();
		c.taskAmount = Misc.random(50) + 25;
		c.sendMessage("You have been assigned to kill " + c.taskAmount + " " + description + ".");
		return task;
}

public static SlayerTask getMediumTask(Client c) {
	SlayerTask task = null;
	do {
		task = MediumTask.values()[(int)(Math.random()*MediumTask.values().length)];
	} while(task.getReq() &gt;= c.playerLevel[c.playerSlayer]);
		String description = task.getDesc();
		c.slayerTask = task.getId();
		c.taskAmount = Misc.random(70) + 25;
		c.sendMessage("You have been assigned to kill " + c.taskAmount + " " + description + ".");
		return task;		
}

public static SlayerTask getHardTask(Client c) {
	SlayerTask task = null;
	do {
		task = HardTask.values()[(int)(Math.random()*HardTask.values().length)];
	} while(task.getReq() &gt;= c.playerLevel[c.playerSlayer]);
		String description = task.getDesc();
		c.slayerTask = task.getId();
		c.taskAmount = Misc.random(90) + 25;
		c.sendMessage("You have been assigned to kill " + c.taskAmount + " " + description + ".");
		return task;			
}

public boolean canSlay(Client c, int i) {
	for(EasyTask e : EasyTask.values()) {
		if(c.playerLevel[c.playerSlayer] &lt; e.getReq() &amp;&amp; NPCHandler.npcs[i].npcType == e.getId())
			return false;
	}
	for(MediumTask m: MediumTask.values()) {
		if(c.playerLevel[c.playerSlayer] &lt; m.getReq() &amp;&amp; NPCHandler.npcs[i].npcType == m.getId())
			return false;
	}
	for(HardTask h: HardTask.values()) {
		if(c.playerLevel[c.playerSlayer] &lt; h.getReq() &amp;&amp; NPCHandler.npcs[i].npcType == h.getId())
			return false;
	}
	for(NonTask n: NonTask.values()) {
		if(c.playerLevel[c.playerSlayer] &lt; n.getReq() &amp;&amp; NPCHandler.npcs[i].npcType == n.getId())
			return false;
	}
	return true;
}

public void appendSlayerExperience(int i) {
	Client c = (Client)PlayerHandler.players[NPCHandler.npcs[i].killedBy];
	if(c != null) {
		if (c.slayerTask == NPCHandler.npcs[i].npcType){
			c.taskAmount--;
			c.getPA().addSkillXP(NPCHandler.npcs[i].MaxHP * Config.SLAYER_EXPERIENCE, c.playerSlayer);
			if (c.taskAmount &lt;= 0) {
				c.getPA().addSkillXP((NPCHandler.npcs[i].MaxHP * 8) * Config.SLAYER_EXPERIENCE, c.playerSlayer);
				c.slayerTask = -1;
				c.sendMessage("You have completed your slayer task, please see the slayer master to get a new one.");
			}
		}
	}
}

interface SlayerTask {
	public int getId();
	public int getReq();
	public String getDesc();
}

enum EasyTask implements SlayerTask {
	YAK(5529, 1, "Yak's"),
	GOBLIN(101, 1, "Goblin's"),
	ROCK_CRAB(1265, 1, "Rock Crab's"),
	AL_KHARID_WARRIOR(18, 1, "Al-Kharid Warrior's"),
	CHAOS_DRUID(181, 1, "Chaos Druid's"),
	GHOST(103, 1, "Ghost's"),
	GIANT_BAT(78, 1, "Giant Bat's"),
	HILL_GIANT(117, 1, "Hill Giants"),
	CHAOS_DWARF(119, 1, "Chaos Dwarf's"),
	CRAWLING_HAND(1648, 5, "Crawling hand's"),
	BANSHEE(1612, 15, "Banshee's");
	
	private int id, req;
	private String desc;
	
	EasyTask(int id, int req, String desc) {
		this.id = id;
		this.req = req;
		this.desc = desc;
	}

	@Override
	public int getId() {
		return id;
	}

	@Override
	public int getReq() {
		return req;
	}

	@Override
	public String getDesc() {
		return desc;
	}
	
	

}

enum MediumTask implements SlayerTask {
	MOSS_GIANT(112, 1, "Moss Giant's"),
	ICE_WARRIOR(125, 1, "Ice Warrior's"),
	BABY_BLUE_DRAGON(48, 1, "Baby Blue Dragon's"),
	INFERNAL_MAGE(1643, 45, "Infernal Mage's"),
	BLOODVELD(1618, 50, "Bloodveld's"),
	GREEN_DRAGON(1610, 1, "Green Dragon's"),
	LESSER_DEMON(82, 1, "Lesser Demon's"),
	DAGANNOTH(1341, 1, "Dagannoth's");
	
	private int id, req;
	private String desc;
	
	MediumTask(int id, int req, String desc) {
		this.id = id;
		this.req = req;
		this.desc = desc;
	}

	@Override
	public int getId() {
		return id;
	}

	@Override
	public int getReq() {
		return req;
	}

	@Override
	public String getDesc() {
		return desc;
	}
}

enum HardTask implements SlayerTask {
	DUST_DEVIL(1624, 65, "Dust Devil's"),
	GARGOYLE(1610, 75, "Gargoyle's"),
	NECHRYAEL(1613, 80, "Nechryael's"),
	ABYSSAL_DEMON(1615, 85, "Abyssal Demon's"),
	DARK_BEAST(2783, 90, "Dark Beast's"),
	BLUE_DRAGON(55, 1, "Blue Dragon's"),
	BLACK_DEMON(84, 1, "Black Demon's"),
	HELL_HOUND(49, 1, "Hell Hound's");
	
	
	private int id, req;
	private String desc;
	
	HardTask(int id, int req, String desc) {
		this.id = id;
		this.req = req;
		this.desc = desc;
	}

	@Override
	public int getId() {
		return id;
	}

	@Override
	public int getReq() {
		return req;
	}

	@Override
	public String getDesc() {
		return desc;
	}
}

enum NonTask implements SlayerTask {
	ICE_STRYKEWYRM(9463, 93, "Ice Strykewyrm's"),
	DESERT_STRYKEWYRM(9465, 77, "Desert Strykewyrm's"),
	JUNGLE_STRYKEWYRM(9467, 73, "Jungle Strykewyrm's");
	
	private int id, req;
	private String desc;
	
	NonTask(int id, int req, String desc) {
		this.id = id;
		this.req = req;
		this.desc = desc;
	}

	@Override
	public int getId() {
		return id;
	}

	@Override
	public int getReq() {
		return req;
	}

	@Override
	public String getDesc() {
		return desc;
	}
}
</code></pre>
<p>}[/CODE]<br>
That is seperating slayer tasks into 3 enums: easy, medium, and hard. This is good because you can use to allow users to choose slayer difficulty, split them between multiple slayer masters, or do it based on combat. This also grabs the requirements from the enums instead of from a array located in combat assistant.</p>
<p><span class="bbcode-b">Second:</span><br>
Go into your CombatAssistant class and delete:</p>
<p>[CODE=java]	public int[][] slayerReqs = {<br>
{1648,5},{1612,15},{1643,45},{1618,50},{1624,65},<br>
{1610,75},{1613,80},{1615,85},{2783,90}<br>
};</p>
<pre><code>public boolean goodSlayer(int i) {
	for (int j = 0; j &lt; slayerReqs.length; j++) {
		if (slayerReqs[j][0] == Server.npcHandler.npcs[i].npcType) {
			if (slayerReqs[j][1] &gt; c.playerLevel[c.playerSlayer]) {
				c.sendMessage("You need a slayer level of " + slayerReqs[j][1] + " to harm this NPC.");
				return false;
			}
		}
	}
	return true;
}[/CODE]
</code></pre>
<p>Then replace:</p>
<p><code>			if (!goodSlayer(i)) {
				resetPlayerAttack();
				return;
			}</code><br>
with</p>
<p><code>			if (!c.getSlayer().canSlay(c, i)) {
				resetPlayerAttack();
				return;
			}</code><br>
That is loading requirements from Slayer class instead of from CombatAssistant class.</p>
<p><span class="bbcode-b">Third:</span><br>
Go into your NPCHandler class and delete:</p>
<p><code>	/**
	* Slayer Experience
	**/	
	public void appendSlayerExperience(int i) {
		int npc = 0;
		Client c = (Client)Server.playerHandler.players[npcs[i].killedBy];
		if(c != null) {
			if (c.slayerTask == npcs[i].npcType){
				c.taskAmount--;
				c.getPA().addSkillXP(npcs[i].MaxHP * Config.SLAYER_EXPERIENCE, 18);
				if (c.taskAmount &lt;= 0) {
					c.getPA().addSkillXP((npcs[i].MaxHP * 8) * Config.SLAYER_EXPERIENCE, 18);
					c.slayerTask = -1;
					c.sendMessage("You completed your slayer task. Please see a slayer master to get a new one.");
				}
			}
		}
	}</code><br>
Then replace:</p>
<pre><code class="lang-auto"></code></pre>
<p>with</p>
<p><code>Client c = (Client)PlayerHandler.players[NPCHandler.npcs[i].killedBy];
c.getSlayer().appendSlayerExperience(i);</code><br>
That is loading experience from Slayer class instead of NPCHandler class.</p>
<p><span class="bbcode-b">Credits:</span><br>
-Me<br>
-Those who helped me.</p>
<p><span class="bbcode-b"><span class="bbcode-i">NOTE: To make this work you will have to add some way of giving a play the option of choosing between: Easy, medium, and hard tasks.</span></span>[/quote]<br>
I’m using a 317 and my does not have a “CombatAssistant class” and i looked up the stuff u want me use, yet nothing came up</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-slayer-system/427480/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-slayer-system/427480/6</link>
        <pubDate>Fri, 08 Jun 2012 17:49:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-427480-6</guid>
        <source url="https://forum.moparisthebest.com/t/pi-slayer-system/427480.rss">[PI] Slayer System</source>
      </item>
      <item>
        <title>[PI] Slayer System</title>
        <dc:creator><![CDATA[@johnl17 johnl17]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/johnl17">@johnl17</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="3" data-topic="427480">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/wildskiller/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> wildskiller:</div>
<blockquote>
<p>SNIPPET</p>
</blockquote>
</aside>
<p>Ill violate your mum!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-slayer-system/427480/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-slayer-system/427480/5</link>
        <pubDate>Sun, 01 Jan 2012 06:31:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-427480-5</guid>
        <source url="https://forum.moparisthebest.com/t/pi-slayer-system/427480.rss">[PI] Slayer System</source>
      </item>
      <item>
        <title>[PI] Slayer System</title>
        <dc:creator><![CDATA[@itai itai]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/itai">@itai</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="3" data-topic="427480">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/wildskiller/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> wildskiller:</div>
<blockquote>
<p>SNIPPET</p>
</blockquote>
</aside>
<p>That was, quite frankly, a useless post; nonetheless, I went back and explained the code.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-slayer-system/427480/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-slayer-system/427480/4</link>
        <pubDate>Sun, 01 Jan 2012 06:26:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-427480-4</guid>
        <source url="https://forum.moparisthebest.com/t/pi-slayer-system/427480.rss">[PI] Slayer System</source>
      </item>
      <item>
        <title>[PI] Slayer System</title>
        <dc:creator><![CDATA[@wildskiller wildskiller]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wildskiller">@wildskiller</a> wrote:</p>
          <blockquote>
              <p>SNIPPET</p>
<p>I did not post this^<br>
I swear someone is messing with me.  <img src="https://forum.moparisthebest.com/images/emoji/twitter/expressionless.png?v=5" title=":expressionless:" class="emoji" alt=":expressionless:"> <img src="https://forum.moparisthebest.com/images/emoji/twitter/confused.png?v=5" title=":confused:" class="emoji" alt=":confused:"> <img src="https://forum.moparisthebest.com/images/emoji/twitter/expressionless.png?v=5" title=":expressionless:" class="emoji" alt=":expressionless:"> <img src="https://forum.moparisthebest.com/images/emoji/twitter/confused.png?v=5" title=":confused:" class="emoji" alt=":confused:"><br>
I don’t make these useless posts</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-slayer-system/427480/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-slayer-system/427480/3</link>
        <pubDate>Sun, 01 Jan 2012 03:04:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-427480-3</guid>
        <source url="https://forum.moparisthebest.com/t/pi-slayer-system/427480.rss">[PI] Slayer System</source>
      </item>
      <item>
        <title>[PI] Slayer System</title>
        <dc:creator><![CDATA[@johnl17 johnl17]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/johnl17">@johnl17</a> wrote:</p>
          <blockquote>
              <p>Nice work Repped <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-slayer-system/427480/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-slayer-system/427480/2</link>
        <pubDate>Sat, 31 Dec 2011 23:55:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-427480-2</guid>
        <source url="https://forum.moparisthebest.com/t/pi-slayer-system/427480.rss">[PI] Slayer System</source>
      </item>
      <item>
        <title>[PI] Slayer System</title>
        <dc:creator><![CDATA[@itai itai]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/itai">@itai</a> wrote:</p>
          <blockquote>
              <p><span class="bbcode-b"><br>
Difficulty: 1/10<br>
Time Needed: 5 Minutes<br>
What you are adding:</span> A slayer system that is handled through enums, and instead of a difficulty automatically being assigned to you, you choose one.</p>
<p><span class="bbcode-b">First:</span><br>
Replace your Slayer class with mine, don’t forget to change the packaging/importing.</p>
<p>[CODE=java]/**</p>
<ul>
<li>Slayer Class</li>
<li>
<span class="mention">@author</span> Jili X I</li>
<li>
<a class="mention" href="/u/date">@date</a> 12/14/11<br>
*/</li>
</ul>
<p>package server.model.content.skills;</p>
<p>import server.Config;<br>
import server.model.npcs.NPCHandler;<br>
import server.model.players.Client;<br>
import server.model.players.PlayerHandler;<br>
import server.util.Misc;</p>
<p>public class Slayer {</p>
<pre><code>public static SlayerTask getEasyTask(Client c){
	SlayerTask task = null;
	do {
		task = EasyTask.values()[(int)(Math.random()*EasyTask.values().length)];
	} while(task.getReq() &gt;= c.playerLevel[c.playerSlayer]);
		String description = task.getDesc();
		c.slayerTask = task.getId();
		c.taskAmount = Misc.random(50) + 25;
		c.sendMessage("You have been assigned to kill " + c.taskAmount + " " + description + ".");
		return task;
}

public static SlayerTask getMediumTask(Client c) {
	SlayerTask task = null;
	do {
		task = MediumTask.values()[(int)(Math.random()*MediumTask.values().length)];
	} while(task.getReq() &gt;= c.playerLevel[c.playerSlayer]);
		String description = task.getDesc();
		c.slayerTask = task.getId();
		c.taskAmount = Misc.random(70) + 25;
		c.sendMessage("You have been assigned to kill " + c.taskAmount + " " + description + ".");
		return task;		
}

public static SlayerTask getHardTask(Client c) {
	SlayerTask task = null;
	do {
		task = HardTask.values()[(int)(Math.random()*HardTask.values().length)];
	} while(task.getReq() &gt;= c.playerLevel[c.playerSlayer]);
		String description = task.getDesc();
		c.slayerTask = task.getId();
		c.taskAmount = Misc.random(90) + 25;
		c.sendMessage("You have been assigned to kill " + c.taskAmount + " " + description + ".");
		return task;			
}

public boolean canSlay(Client c, int i) {
	for(EasyTask e : EasyTask.values()) {
		if(c.playerLevel[c.playerSlayer] &lt; e.getReq() &amp;&amp; NPCHandler.npcs[i].npcType == e.getId())
			return false;
	}
	for(MediumTask m: MediumTask.values()) {
		if(c.playerLevel[c.playerSlayer] &lt; m.getReq() &amp;&amp; NPCHandler.npcs[i].npcType == m.getId())
			return false;
	}
	for(HardTask h: HardTask.values()) {
		if(c.playerLevel[c.playerSlayer] &lt; h.getReq() &amp;&amp; NPCHandler.npcs[i].npcType == h.getId())
			return false;
	}
	for(NonTask n: NonTask.values()) {
		if(c.playerLevel[c.playerSlayer] &lt; n.getReq() &amp;&amp; NPCHandler.npcs[i].npcType == n.getId())
			return false;
	}
	return true;
}

public void appendSlayerExperience(int i) {
	Client c = (Client)PlayerHandler.players[NPCHandler.npcs[i].killedBy];
	if(c != null) {
		if (c.slayerTask == NPCHandler.npcs[i].npcType){
			c.taskAmount--;
			c.getPA().addSkillXP(NPCHandler.npcs[i].MaxHP * Config.SLAYER_EXPERIENCE, c.playerSlayer);
			if (c.taskAmount &lt;= 0) {
				c.getPA().addSkillXP((NPCHandler.npcs[i].MaxHP * 8) * Config.SLAYER_EXPERIENCE, c.playerSlayer);
				c.slayerTask = -1;
				c.sendMessage("You have completed your slayer task, please see the slayer master to get a new one.");
			}
		}
	}
}

interface SlayerTask {
	public int getId();
	public int getReq();
	public String getDesc();
}

enum EasyTask implements SlayerTask {
	YAK(5529, 1, "Yak's"),
	GOBLIN(101, 1, "Goblin's"),
	ROCK_CRAB(1265, 1, "Rock Crab's"),
	AL_KHARID_WARRIOR(18, 1, "Al-Kharid Warrior's"),
	CHAOS_DRUID(181, 1, "Chaos Druid's"),
	GHOST(103, 1, "Ghost's"),
	GIANT_BAT(78, 1, "Giant Bat's"),
	HILL_GIANT(117, 1, "Hill Giants"),
	CHAOS_DWARF(119, 1, "Chaos Dwarf's"),
	CRAWLING_HAND(1648, 5, "Crawling hand's"),
	BANSHEE(1612, 15, "Banshee's");
	
	private int id, req;
	private String desc;
	
	EasyTask(int id, int req, String desc) {
		this.id = id;
		this.req = req;
		this.desc = desc;
	}

	@Override
	public int getId() {
		return id;
	}

	@Override
	public int getReq() {
		return req;
	}

	@Override
	public String getDesc() {
		return desc;
	}
	
	

}

enum MediumTask implements SlayerTask {
	MOSS_GIANT(112, 1, "Moss Giant's"),
	ICE_WARRIOR(125, 1, "Ice Warrior's"),
	BABY_BLUE_DRAGON(48, 1, "Baby Blue Dragon's"),
	INFERNAL_MAGE(1643, 45, "Infernal Mage's"),
	BLOODVELD(1618, 50, "Bloodveld's"),
	GREEN_DRAGON(1610, 1, "Green Dragon's"),
	LESSER_DEMON(82, 1, "Lesser Demon's"),
	DAGANNOTH(1341, 1, "Dagannoth's");
	
	private int id, req;
	private String desc;
	
	MediumTask(int id, int req, String desc) {
		this.id = id;
		this.req = req;
		this.desc = desc;
	}

	@Override
	public int getId() {
		return id;
	}

	@Override
	public int getReq() {
		return req;
	}

	@Override
	public String getDesc() {
		return desc;
	}
}

enum HardTask implements SlayerTask {
	DUST_DEVIL(1624, 65, "Dust Devil's"),
	GARGOYLE(1610, 75, "Gargoyle's"),
	NECHRYAEL(1613, 80, "Nechryael's"),
	ABYSSAL_DEMON(1615, 85, "Abyssal Demon's"),
	DARK_BEAST(2783, 90, "Dark Beast's"),
	BLUE_DRAGON(55, 1, "Blue Dragon's"),
	BLACK_DEMON(84, 1, "Black Demon's"),
	HELL_HOUND(49, 1, "Hell Hound's");
	
	
	private int id, req;
	private String desc;
	
	HardTask(int id, int req, String desc) {
		this.id = id;
		this.req = req;
		this.desc = desc;
	}

	@Override
	public int getId() {
		return id;
	}

	@Override
	public int getReq() {
		return req;
	}

	@Override
	public String getDesc() {
		return desc;
	}
}

enum NonTask implements SlayerTask {
	ICE_STRYKEWYRM(9463, 93, "Ice Strykewyrm's"),
	DESERT_STRYKEWYRM(9465, 77, "Desert Strykewyrm's"),
	JUNGLE_STRYKEWYRM(9467, 73, "Jungle Strykewyrm's");
	
	private int id, req;
	private String desc;
	
	NonTask(int id, int req, String desc) {
		this.id = id;
		this.req = req;
		this.desc = desc;
	}

	@Override
	public int getId() {
		return id;
	}

	@Override
	public int getReq() {
		return req;
	}

	@Override
	public String getDesc() {
		return desc;
	}
}
</code></pre>
<p>}[/CODE]<br>
That is seperating slayer tasks into 3 enums: easy, medium, and hard. This is good because you can use to allow users to choose slayer difficulty, split them between multiple slayer masters, or do it based on combat. This also grabs the requirements from the enums instead of from a array located in combat assistant.</p>
<p><span class="bbcode-b">Second:</span><br>
Go into your CombatAssistant class and delete:</p>
<p>[CODE=java]	public int[][] slayerReqs = {<br>
{1648,5},{1612,15},{1643,45},{1618,50},{1624,65},<br>
{1610,75},{1613,80},{1615,85},{2783,90}<br>
};</p>
<pre><code>public boolean goodSlayer(int i) {
	for (int j = 0; j &lt; slayerReqs.length; j++) {
		if (slayerReqs[j][0] == Server.npcHandler.npcs[i].npcType) {
			if (slayerReqs[j][1] &gt; c.playerLevel[c.playerSlayer]) {
				c.sendMessage("You need a slayer level of " + slayerReqs[j][1] + " to harm this NPC.");
				return false;
			}
		}
	}
	return true;
}[/CODE]
</code></pre>
<p>Then replace:</p>
<p><code>			if (!goodSlayer(i)) {
				resetPlayerAttack();
				return;
			}</code><br>
with</p>
<p><code>			if (!c.getSlayer().canSlay(c, i)) {
				resetPlayerAttack();
				return;
			}</code><br>
That is loading requirements from Slayer class instead of from CombatAssistant class.</p>
<p><span class="bbcode-b">Third:</span><br>
Go into your NPCHandler class and delete:</p>
<p><code>	/**
	* Slayer Experience
	**/	
	public void appendSlayerExperience(int i) {
		int npc = 0;
		Client c = (Client)Server.playerHandler.players[npcs[i].killedBy];
		if(c != null) {
			if (c.slayerTask == npcs[i].npcType){
				c.taskAmount--;
				c.getPA().addSkillXP(npcs[i].MaxHP * Config.SLAYER_EXPERIENCE, 18);
				if (c.taskAmount &lt;= 0) {
					c.getPA().addSkillXP((npcs[i].MaxHP * 8) * Config.SLAYER_EXPERIENCE, 18);
					c.slayerTask = -1;
					c.sendMessage("You completed your slayer task. Please see a slayer master to get a new one.");
				}
			}
		}
	}</code><br>
Then replace:</p>
<pre><code class="lang-auto"></code></pre>
<p>with</p>
<p><code>Client c = (Client)PlayerHandler.players[NPCHandler.npcs[i].killedBy];
c.getSlayer().appendSlayerExperience(i);</code><br>
That is loading experience from Slayer class instead of NPCHandler class.</p>
<p><span class="bbcode-b">Credits:</span><br>
-Me<br>
-Those who helped me.</p>
<p><span class="bbcode-b"><span class="bbcode-i">NOTE: To make this work you will have to add some way of giving a play the option of choosing between: Easy, medium, and hard tasks.</span></span></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-slayer-system/427480/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-slayer-system/427480/1</link>
        <pubDate>Sat, 31 Dec 2011 05:31:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-427480-1</guid>
        <source url="https://forum.moparisthebest.com/t/pi-slayer-system/427480.rss">[PI] Slayer System</source>
      </item>
  </channel>
</rss>
