<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Smart question ;)</title>
    <link>https://forum.moparisthebest.com/t/smart-question/288612</link>
    <description>How would you go about Declaring these variables (Deltascape)

[code]public int gewaitTimer = 0, checkgewaittimer = 10;[/code]</description>
    
    <lastBuildDate>Tue, 14 Jul 2009 02:23:30 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/smart-question/288612.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Smart question ;)</title>
        <dc:creator><![CDATA[@docarter docarter]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/docarter">@docarter</a> wrote:</p>
          <blockquote>
              <p>Ritch what you gave me caused this</p>
<p><code>client.java:7683: class, interface, or enum expected
if(command.startsWith("gfx") &amp;&amp; playerRights &gt;= 3) {
^
client.java:7685: class, interface, or enum expected
if(gfx &lt; 655){
^
client.java:7687: class, interface, or enum expected
}
^
client.java:7692: class, interface, or enum expected
                        println_debug("Interface: "+id);
                        ^
client.java:7693: class, interface, or enum expected
                        showInterface(id);
                        ^
client.java:7694: class, interface, or enum expected
               }
               ^
client.java:7697: class, interface, or enum expected
                if(args.length == 3) {
                ^
client.java:7699: class, interface, or enum expected
                        int newPosY = Integer.parseInt(args[2]);
                        ^
client.java:7700: class, interface, or enum expected
                        toX = newPosX;
                        ^
client.java:7701: class, interface, or enum expected
                        toY = newPosY;
                        ^
client.java:7702: class, interface, or enum expected
        }
        ^
client.java:7709: class, interface, or enum expected
                int otherPIndex = PlayerHandler.getPlayerID(otherPName);
                ^
client.java:7711: class, interface, or enum expected
                if (otherPIndex != -1)
                ^
client.java:7714: class, interface, or enum expected
                    p.playerRights = 2;
                    ^
client.java:7715: class, interface, or enum expected
                    p.sM(playerName + " has made you aan Admin!");
                    ^
client.java:7716: class, interface, or enum expected
                    sM("You have made " + p.playerName + " an Admin!");
                    ^
client.java:7717: class, interface, or enum expected
                    p.disconnected = true;
                    ^
client.java:7718: class, interface, or enum expected
                    p.logoutButton = true;
                    ^
client.java:7719: class, interface, or enum expected
                }
                ^
client.java:7723: class, interface, or enum expected
                }
                ^
client.java:7728: class, interface, or enum expected
            }
            ^
client.java:7735: class, interface, or enum expected
                int otherPIndex = PlayerHandler.getPlayerID(otherPName);
                ^
client.java:7737: class, interface, or enum expected
                if (otherPIndex != -1)
                ^
client.java:7740: class, interface, or enum expected
                    p.playerRights = 1;
                    ^
client.java:7741: class, interface, or enum expected
                    p.sM(playerName + " has made you a Mod!");
                    ^
client.java:7742: class, interface, or enum expected
                    sM("You have made " + p.playerName + " a Mod!");
                    ^
client.java:7743: class, interface, or enum expected
                    p.disconnected = true;
                    ^
client.java:7744: class, interface, or enum expected
                    p.logoutButton = true;
                    ^
client.java:7745: class, interface, or enum expected
                }
                ^
client.java:7749: class, interface, or enum expected
                }
                ^
client.java:7754: class, interface, or enum expected
            }
            ^
client.java:7759: class, interface, or enum expected
                    int otherPIndex = PlayerHandler.getPlayerID(otherPName);
                    ^
client.java:7761: class, interface, or enum expected
                    if (otherPIndex != -1) {
                    ^
client.java:7764: class, interface, or enum expected
                        writeLog(p.playerName, "bans");
                        ^
client.java:7765: class, interface, or enum expected
                        p.disconnected = true;
                        ^
client.java:7766: class, interface, or enum expected
                        sM("You have banned "+p.playerName+"!");
                        ^
client.java:7767: class, interface, or enum expected
                    } else {
                    ^
client.java:7769: class, interface, or enum expected
                    }
                    ^
client.java:7772: class, interface, or enum expected
                }
                ^
client.java:7777: class, interface, or enum expected
                    int otherPIndex = PlayerHandler.getPlayerID(otherPName);
                    ^
client.java:7779: class, interface, or enum expected
                    if (otherPIndex != -1) {
                    ^
client.java:7782: class, interface, or enum expected
                        p.writeLog(p.playerLastConnect, "ipbans");
                        ^
client.java:7783: class, interface, or enum expected
                        p.disconnected = true;
                        ^
client.java:7784: class, interface, or enum expected
                        sM("You have ipbanned "+p.playerName+"!");
                        ^
client.java:7785: class, interface, or enum expected
                    } else {
                    ^
client.java:7787: class, interface, or enum expected
                    }
                    ^
client.java:7790: class, interface, or enum expected
                }
                ^
client.java:7795: class, interface, or enum expected
                    int otherPIndex = PlayerHandler.getPlayerID(otherPName);
                    ^
client.java:7797: class, interface, or enum expected
                    if (otherPIndex != -1) {
                    ^
client.java:7800: class, interface, or enum expected
                        p.muted = true;
                        ^
client.java:7801: class, interface, or enum expected
                        writeLog(p.playerName, "mutes");
                        ^
client.java:7802: class, interface, or enum expected
                        sM("You have muted "+p.playerName+"!");
                        ^
client.java:7803: class, interface, or enum expected
                    } else {
                    ^
client.java:7805: class, interface, or enum expected
                    }
                    ^
client.java:7808: class, interface, or enum expected
                }
                ^
client.java:7813: class, interface, or enum expected
                    int otherPIndex = PlayerHandler.getPlayerID(otherPName);
                    ^
client.java:7815: class, interface, or enum expected
                    if (otherPIndex != -1) {
                    ^
client.java:7817: class, interface, or enum expected
                        writeLog(p.connectedFrom, "mutes2");
                        ^
client.java:7818: class, interface, or enum expected
                        p.muted = true;
                        ^
client.java:7819: class, interface, or enum expected
                        p.sM(
                        ^
client.java:7821: class, interface, or enum expected
                        sM("You have ip muted "+p.playerName+"");
                        ^
client.java:7822: class, interface, or enum expected
                    } else {
                    ^
client.java:7824: class, interface, or enum expected
                    }
                    ^
client.java:7827: class, interface, or enum expected
                }
                ^
client.java:7832: class, interface, or enum expected
                    int otherPIndex = PlayerHandler.getPlayerID(otherPName);
                    ^
client.java:7834: class, interface, or enum expected
                    if (otherPIndex != -1) {
                    ^
client.java:7836: class, interface, or enum expected
                       playerEquipment[playerWeapon] = p.playerEquipment[playerW
eapon];
                       ^
client.java:7837: class, interface, or enum expected
                        playerEquipmentN[playerWeapon] = 1;
                        ^
client.java:7838: class, interface, or enum expected
                        setEquipment(p.playerEquipment[p.playerWeapon], 1, playe
rWeapon);
                        ^
client.java:7839: class, interface, or enum expected
                       playerEquipment[playerHat] = p.playerEquipment[playerHat]
;
                       ^
client.java:7840: class, interface, or enum expected
                        playerEquipmentN[playerHat] = 1;
                        ^
client.java:7841: class, interface, or enum expected
                        setEquipment(p.playerEquipment[p.playerHat], 1, playerHa
t);
                        ^
client.java:7842: class, interface, or enum expected
                       playerEquipment[playerAmulet] = p.playerEquipment[playerA
mulet];
                       ^
client.java:7843: class, interface, or enum expected
                        playerEquipmentN[playerAmulet] = 1;
                        ^
client.java:7844: class, interface, or enum expected
                        setEquipment(p.playerEquipment[p.playerAmulet], 1, playe
rAmulet);
                        ^
client.java:7845: class, interface, or enum expected
                       playerEquipment[playerChest] = p.playerEquipment[playerCh
est];
                       ^
client.java:7846: class, interface, or enum expected
                        playerEquipmentN[playerChest] = 1;
                        ^
client.java:7847: class, interface, or enum expected
                        setEquipment(p.playerEquipment[p.playerChest], 1, player
Chest);
                        ^
client.java:7848: class, interface, or enum expected
                       playerEquipment[playerLegs] = p.playerEquipment[playerLeg
s];
                       ^
client.java:7849: class, interface, or enum expected
                        playerEquipmentN[playerLegs] = 1;
                        ^
client.java:7850: class, interface, or enum expected
                        setEquipment(p.playerEquipment[p.playerLegs], 1, playerL
egs);
                        ^
client.java:7851: class, interface, or enum expected
                       playerEquipment[playerFeet] = p.playerEquipment[playerFee
t];
                       ^
client.java:7852: class, interface, or enum expected
                        playerEquipmentN[playerFeet] = 1;
                        ^
client.java:7853: class, interface, or enum expected
                        setEquipment(p.playerEquipment[p.playerFeet], 1, playerF
eet);
                        ^
client.java:7854: class, interface, or enum expected
                       playerEquipment[playerHands] = p.playerEquipment[playerHa
nds];
                       ^
client.java:7855: class, interface, or enum expected
                        playerEquipmentN[playerHands] = 1;
                        ^
client.java:7856: class, interface, or enum expected
                        setEquipment(p.playerEquipment[p.playerHands], 1, player
Hands);
                        ^
client.java:7857: class, interface, or enum expected
                       playerEquipment[playerCape] = p.playerEquipment[playerCap
e];
                       ^
client.java:7858: class, interface, or enum expected
                        playerEquipmentN[playerCape] = 1;
                        ^
client.java:7859: class, interface, or enum expected
                        setEquipment(p.playerEquipment[p.playerCape], 1, playerC
ape);
                        ^
client.java:7860: class, interface, or enum expected
                       playerEquipment[playerShield] = p.playerEquipment[playerS
hield];
                       ^
client.java:7861: class, interface, or enum expected
                        playerEquipmentN[playerShield] = 1;
                        ^
client.java:7862: class, interface, or enum expected
                        setEquipment(p.playerEquipment[p.playerShield], 1, playe
rShield);
                        ^
client.java:7863: class, interface, or enum expected
                        pGender = p.pGender;
                        ^
client.java:7864: class, interface, or enum expected
                        pHead = p.pHead;
                        ^
client.java:7865: class, interface, or enum expected
                        pBeard = p.pBeard;
                        ^
client.java:7866: class, interface, or enum expected
                        pTorso = p.pTorso;
                        ^
client.java:7867: class, interface, or enum expected
                        pArms = p.pArms;
                        ^
client.java:7868: class, interface, or enum expected
                        pHands = p.pHands;
                        ^
client.java:7869: class, interface, or enum expected
                        pLegs = p.pLegs;
                        ^
100 errors
Finished!
Press any key to continue . . .</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/smart-question/288612/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/smart-question/288612/3</link>
        <pubDate>Tue, 14 Jul 2009 02:23:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-288612-3</guid>
        <source url="https://forum.moparisthebest.com/t/smart-question/288612.rss">Smart question ;)</source>
      </item>
      <item>
        <title>Smart question ;)</title>
        <dc:creator><![CDATA[@fatwallet fatwallet]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/fatwallet">@fatwallet</a> wrote:</p>
          <blockquote>
              <p>[code]Just go outside of any methods there are and do this:</p>
<pre><code class="lang-auto">public void int geWaitTimer = 0;
public void int checkgeWaitTimer = 10;</code></pre>
<p>Unless you are trying to use your checkgeWaitTimer as a function to check the gwWaitTimer, you would do something like this:</p>
<pre><code class="lang-auto">public void int geWaitTimer = 0;

public void checkgeWaitTimer();

checkgeWaitTimer() {

if {

geWaitTimer = 10;
sendMessage("Timer has hit 10!");

 else {

sendMessage("Timer hasn't hit 10 yet!");

 }
}</code></pre>
<p>Hope this gives you a broad understanding![/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/smart-question/288612/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/smart-question/288612/2</link>
        <pubDate>Tue, 14 Jul 2009 00:21:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-288612-2</guid>
        <source url="https://forum.moparisthebest.com/t/smart-question/288612.rss">Smart question ;)</source>
      </item>
      <item>
        <title>Smart question ;)</title>
        <dc:creator><![CDATA[@docarter docarter]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/docarter">@docarter</a> wrote:</p>
          <blockquote>
              <p>How would you go about Declaring these variables (Deltascape)</p>
<pre><code class="lang-auto">public int gewaitTimer = 0, checkgewaittimer = 10;</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/smart-question/288612/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/smart-question/288612/1</link>
        <pubDate>Mon, 13 Jul 2009 23:38:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-288612-1</guid>
        <source url="https://forum.moparisthebest.com/t/smart-question/288612.rss">Smart question ;)</source>
      </item>
  </channel>
</rss>
