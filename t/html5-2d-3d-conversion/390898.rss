<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Html5 2d-3d conversion</title>
    <link>https://forum.moparisthebest.com/t/html5-2d-3d-conversion/390898</link>
    <description>ok i found this script for avisynth that converts 2d video to pseudo-3d video. and i know you can take images from a video tag in html5 and manipulate it.

show this is what i came up with this demo(i converted the script for avisynth to javascript the best i could. there is a little bit i need to work on though):
[code]
&lt;!DOCTYPE html&gt; 
&lt;!-- saved from url=(0058)http://html5doctor.com/demos/video-canvas-magic/demo2.html --&gt; 
&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;

&lt;title&gt;Video/Canvas Demo 2&lt;/title&gt; 

&lt;script&gt;

document.addEventListener(&#39;DOMContentLoaded&#39;, function(){

    var v = document.getElementById(&#39;v&#39;);

    right = true;

    var canvas1 = document.getElementById(&#39;f1&#39;);

    var canvas2 = document.getElementById(&#39;f2&#39;);

    var context1 = canvas1.getContext(&#39;2d&#39;);

    var context2 = canvas2.getContext(&#39;2d&#39;);



    var videow,videoh;



    v.addEventListener(&#39;play&#39;, function(){

        videow = v.clientWidth;

        videoh = v.clientHeight;

        canvas1.width = videow;

        canvas1.height = videoh;

	canvas2.width = videow;

        canvas2.height = videoh;

	resw = videow+(videow/100);

	cropw = (resw-videow)/2;

        draw(v,Math.ceil(cropw),context1,context2,videow,videoh);

    },false);



},false);

 




/*function drawCurrent(){



var v = document.getElementById(&#39;v&#39;);

right = true;

    var canvas1 = document.getElementById(&#39;f1&#39;);

    var canvas2 = document.getElementById(&#39;f2&#39;);

    var context1 = canvas1.getContext(&#39;2d&#39;);

    var context2 = canvas2.getContext(&#39;2d&#39;);



    var videow,videoh;



 videow = v.clientWidth;

        videoh = v.clientHeight;

        canvas1.width = videow;

        canvas1.height = videoh;

	canvas2.width = videow;

        canvas2.height = videoh;

	resw = videow+(videow/100);

	cropw = (resw-videow)/2;

        draw(v,Math.ceil(cropw),context1,context2,videow,videoh);

}*/



function draw(v,cropw,f1,f2,w,h) {

    if(v.paused || v.ended) return false;

    if(right){

	f1.drawImage(v,0,0,w,h);

	f1.drawImage(document.getElementById(&#39;f1&#39;),0,0,w,h,0,0,w,h);

	f2.fillStyle = &quot;rgba(0,0,0,0.05)&quot;;

	f2.fillRect(0,0,w,h);

	right = false;

    } else {

    f2.drawImage(v,0,0,w,h);

    f2.drawImage(document.getElementById(&#39;f2&#39;),0,0,w,h,0,0,w,h);

//alert(console.log(f2));

    f1.fillStyle = &quot;rgba(0,0,0,0.05)&quot;;

    f1.fillRect(0,0,w,h);

    right = true;

    }

    setTimeout(draw,33,v,cropw,f1,f2,w,h);

}&lt;/script&gt;



 
 
 
 
&lt;/head&gt;



&lt;body&gt;



&lt;video id=&quot;v&quot; controls loop&gt;

 
	&lt;source src=&quot;http://html5doctor.com/demos/video-canvas-magic/video.webm&quot; type=&quot;video/webm&quot; &gt;

 
&lt;/video&gt; 





 
&lt;canvas id=&quot;f1&quot;&gt;&lt;/canvas&gt;

&lt;canvas id=&quot;f2&quot;&gt;&lt;/canvas&gt;



 
 
&lt;style&gt; 

 


#f1 {

 
	position: absolute;

 
	top: 50%;

 
	left: 50%;

 
	margin: 40px 0 0 -480px;

 
}

 


#f2 {
	

	position: absolute;

 
	top: 50%;

 
	left: 50%;

 
	margin: 40px 0 0 0px;

 
}
 



#v {

	position: absolute;

	top: 50%;

	left: 50%;

	margin: -320px 0 0 -200px;

}

&lt;/style&gt; 

&lt;/body&gt;

&lt;/html&gt;[/code]

NOTE: i just figured out why i got the error mentioned in the below paragraph. the correct crop method is f2.drawImage(document.getElementById(&#39;f2&#39;),cropw,0,w-cropw,h,0,0,w,h); b/c the crop area went part the area of the image. well i guess it pays to rest and come back and look at the code.

this line(  f2.drawImage(document.getElementById(&#39;f2&#39;),0,0,w,h,0,0,w,h);  ) should be(  f2.drawImage(document.getElementById(&#39;f2&#39;),cropw,0,w,h,0,0,w,h);  ) but when i do that it ends up with a index_size_err. i have googled that error and i come up with something about rounded edges or something and it may be going out of bound... which neither of those make since. im thinking i need to add this lanczosresize method to it.

the method:
[code]function lanczosCreate(lobes){
  return function(x){
    if (x &gt; lobes) 
      return 0;
    x *= Math.PI;
    if (Math.abs(x) &lt; 1e-16) 
      return 1
    var xx = x / lobes;
    return Math.sin(x) * Math.sin(xx) / x / xx;
  }
}

//elem: canvas element, img: image element, sx: scaled width, lobes: kernel radius
function thumbnailer(elem, img, sx, lobes){ 
    this.canvas = elem;
    elem.width = img.width;
    elem.height = img.height;
    elem.style.display = &quot;none&quot;;
    this.ctx = elem.getContext(&quot;2d&quot;);
    this.ctx.drawImage(img, 0, 0);
    this.img = img;
    this.src = this.ctx.getImageData(0, 0, img.width, img.height);
    this.dest = {
        width: sx,
        height: Math.round(img.height * sx / img.width),
    };
    this.dest.data = new Array(this.dest.width * this.dest.height * 3);
    this.lanczos = lanczosCreate(lobes);
    this.ratio = img.width / sx;
    this.rcp_ratio = 2 / this.ratio;
    this.range2 = Math.ceil(this.ratio * lobes / 2);
    this.cacheLanc = {};
    this.center = {};
    this.icenter = {};
    setTimeout(this.process1, 0, this, 0);
}

thumbnailer.prototype.process1 = function(self, u){
    self.center.x = (u + 0.5) * self.ratio;
    self.icenter.x = Math.floor(self.center.x);
    for (var v = 0; v &lt; self.dest.height; v++) {
        self.center.y = (v + 0.5) * self.ratio;
        self.icenter.y = Math.floor(self.center.y);
        var a, r, g, b;
        a = r = g = b = 0;
        for (var i = self.icenter.x - self.range2; i &lt;= self.icenter.x + self.range2; i++) {
            if (i &lt; 0 || i &gt;= self.src.width) 
                continue;
            var f_x = Math.floor(1000 * Math.abs(i - self.center.x));
            if (!self.cacheLanc[f_x]) 
                self.cacheLanc[f_x] = {};
            for (var j = self.icenter.y - self.range2; j &lt;= self.icenter.y + self.range2; j++) {
                if (j &lt; 0 || j &gt;= self.src.height) 
                    continue;
                var f_y = Math.floor(1000 * Math.abs(j - self.center.y));
                if (self.cacheLanc[f_x][f_y] == undefined) 
                    self.cacheLanc[f_x][f_y] = self.lanczos(Math.sqrt(Math.pow(f_x * self.rcp_ratio, 2) + Math.pow(f_y * self.rcp_ratio, 2)) / 1000);
                weight = self.cacheLanc[f_x][f_y];
                if (weight &gt; 0) {
                    var idx = (j * self.src.width + i) * 4;
                    a += weight;
                    r += weight * self.src.data[idx];
                    g += weight * self.src.data[idx + 1];
                    b += weight * self.src.data[idx + 2];
                }
            }
        }
        var idx = (v * self.dest.width + u) * 3;
        self.dest.data[idx] = r / a;
        self.dest.data[idx + 1] = g / a;
        self.dest.data[idx + 2] = b / a;
    }

    if (++u &lt; self.dest.width) 
        setTimeout(self.process1, 0, self, u);
    else 
        setTimeout(self.process2, 0, self);
};
thumbnailer.prototype.process2 = function(self){
    self.canvas.width = self.dest.width;
    self.canvas.height = self.dest.height;
    self.ctx.drawImage(self.img, 0, 0);
    self.src = self.ctx.getImageData(0, 0, self.dest.width, self.dest.height);
    var idx, idx2;
    for (var i = 0; i &lt; self.dest.width; i++) {
        for (var j = 0; j &lt; self.dest.height; j++) {
            idx = (j * self.dest.width + i) * 3;
            idx2 = (j * self.dest.width + i) * 4;
            self.src.data[idx2] = self.dest.data[idx];
            self.src.data[idx2 + 1] = self.dest.data[idx + 1];
            self.src.data[idx2 + 2] = self.dest.data[idx + 2];
        }
    }
    self.ctx.putImageData(self.src, 0, 0);
    self.canvas.style.display = &quot;block&quot;;
}[/code]

of course i could just use 1 canvas and make it the size of the 2, and just draw the second image to the correct coordinate.

after i get the cropping working and maybe the lanczosresize it will be the same rendering as the avisynth script does.

i have a question that i could answer myself if i did an experiment. but can u do this same method that they use on the video tag, with say an applet tag or flash object?

if you could you could make pseudo-3d games from 2d games. like runescape. it seems do able but i dont have the resources to do the experiment(either a small test applet that draws animations, that you grab it as an image and drawl it on the canvas).

EDIT:
this is an updated working script w/ a single canvas, w/o lanczosresizing(im going to have to rework it).
[code]&lt;!DOCTYPE html&gt;
&lt;!-- saved from url=(0058)http://html5doctor.com/demos/video-canvas-

magic/demo2.html --&gt;
&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; 

charset=UTF-8&quot;&gt;
&lt;title&gt;Video/Canvas Demo 2&lt;/title&gt; 
&lt;script&gt;
document.addEventListener(&#39;DOMContentLoaded&#39;, function(){
    var v = document.getElementById(&#39;v&#39;);
    right = true;
    var canvas1 = document.getElementById(&#39;f1&#39;);
    var context1 = canvas1.getContext(&#39;2d&#39;);

    var videow,videoh;

    v.addEventListener(&#39;play&#39;, function(){
        videow = v.clientWidth;
        videoh = v.clientHeight;
        canvas1.width = videow*2;
        canvas1.height = videoh;
	resw = videow+(videow/100);
	cropw = (resw-videow)/2;
        draw(v,Math.ceil(cropw),context1,videow,videoh);
    },false);

},false);

function draw(v,cropw,f1,w,h) {
    if(v.paused || v.ended) return false;
    if(right){
	f1.drawImage(v,0,0,w,h);
	f1.drawImage(v,0,0,w,h,0,0,w,h);
	f1.fillStyle = &quot;rgba(0,0,0,0.05)&quot;;
	f1.fillRect(w,0,w,h);
	right = false;
    } else {
    f1.drawImage(v,w,0,w,h);
    f1.drawImage(v,cropw,0,w-cropw,h,w,0,w,h);
    f1.fillStyle = &quot;rgba(0,0,0,0.05)&quot;;
    f1.fillRect(0,0,w,h);
    right = true;
    }
    setTimeout(draw,33,v,cropw,f1,w,h);
}&lt;/script&gt;

 
 

 
&lt;/head&gt;

&lt;body&gt;

&lt;video id=&quot;v&quot; controls loop&gt;
 
	&lt;source src=&quot;http://html5doctor.com/demos/video-canvas-magic/video.webm&quot; 

type=&quot;video/webm&quot; &gt;
 
&lt;/video&gt; 



&lt;canvas id=&quot;f1&quot;&gt;&lt;/canvas&gt;

 
 
&lt;style&gt; 


#f1 {

	position: absolute;

	top: 50%;

	left: 50%;

	margin: 40px 0 0 -480px;

}

#v {
	position: absolute;
	top: 50%;
	left: 50%;
	margin: -320px 0 0 -200px;
}
&lt;/style&gt; 
&lt;/body&gt;
&lt;/html&gt;[/code]</description>
    
    <lastBuildDate>Thu, 14 Apr 2011 20:59:04 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/html5-2d-3d-conversion/390898.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Html5 2d-3d conversion</title>
        <dc:creator><![CDATA[@xryz xryz]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xryz">@xryz</a> wrote:</p>
          <blockquote>
              <p>ok i found this script for avisynth that converts 2d video to pseudo-3d video. and i know you can take images from a video tag in html5 and manipulate it.</p>
<p>show this is what i came up with this demo(i converted the script for avisynth to javascript the best i could. there is a little bit i need to work on though):</p>
<p>[code]</p>
 
 

Video/Canvas Demo 2 




<pre><code>&lt;source src="http://html5doctor.com/demos/video-canvas-magic/video.webm" type="video/webm" &gt;
</code></pre>
 
<p></p>
<p></p>
 

 


#f1 {

 
	position: absolute;

 
	top: 50%;

 
	left: 50%;

 
	margin: 40px 0 0 -480px;

 
}

 


#f2 {
	

	position: absolute;

 
	top: 50%;

 
	left: 50%;

 
	margin: 40px 0 0 0px;

 
}
 



#v {

	position: absolute;

	top: 50%;

	left: 50%;

	margin: -320px 0 0 -200px;

}

 

[/code]
<p>NOTE: i just figured out why i got the error mentioned in the below paragraph. the correct crop method is f2.drawImage(document.getElementById(‘f2’),cropw,0,w-cropw,h,0,0,w,h); b/c the crop area went part the area of the image. well i guess it pays to rest and come back and look at the code.</p>
<p>this line(  f2.drawImage(document.getElementById(‘f2’),0,0,w,h,0,0,w,h);  ) should be(  f2.drawImage(document.getElementById(‘f2’),cropw,0,w,h,0,0,w,h);  ) but when i do that it ends up with a index_size_err. i have googled that error and i come up with something about rounded edges or something and it may be going out of bound… which neither of those make since. im thinking i need to add this lanczosresize method to it.</p>
<p>the method:</p>
<p>[code]function lanczosCreate(lobes){<br>
return function(x){<br>
if (x &gt; lobes)<br>
return 0;<br>
x *= Math.PI;<br>
if (Math.abs(x) &lt; 1e-16)<br>
return 1<br>
var xx = x / lobes;<br>
return Math.sin(x) * Math.sin(xx) / x / xx;<br>
}<br>
}</p>
<p>//elem: canvas element, img: image element, sx: scaled width, lobes: kernel radius<br>
function thumbnailer(elem, img, sx, lobes){<br>
this.canvas = elem;<br>
elem.width = img.width;<br>
elem.height = img.height;<br>
elem.style.display = “none”;<br>
this.ctx = elem.getContext(“2d”);<br>
this.ctx.drawImage(img, 0, 0);<br>
this.img = img;<br>
this.src = this.ctx.getImageData(0, 0, img.width, img.height);<br>
this.dest = {<br>
width: sx,<br>
height: Math.round(img.height * sx / img.width),<br>
};<br>
this.dest.data = new Array(this.dest.width * this.dest.height * 3);<br>
this.lanczos = lanczosCreate(lobes);<br>
this.ratio = img.width / sx;<br>
this.rcp_ratio = 2 / this.ratio;<br>
this.range2 = Math.ceil(this.ratio * lobes / 2);<br>
this.cacheLanc = {};<br>
this.center = {};<br>
this.icenter = {};<br>
setTimeout(this.process1, 0, this, 0);<br>
}</p>
<p>thumbnailer.prototype.process1 = function(self, u){<br>
self.center.x = (u + 0.5) * self.ratio;<br>
self.icenter.x = Math.floor(self.center.x);<br>
for (var v = 0; v &lt; self.dest.height; v++) {<br>
self.center.y = (v + 0.5) * self.ratio;<br>
self.icenter.y = Math.floor(self.center.y);<br>
var a, r, g, b;<br>
a = r = g = b = 0;<br>
for (var i = self.icenter.x - self.range2; i &lt;= self.icenter.x + self.range2; i++) {<br>
if (i &lt; 0 || i &gt;= self.src.width)<br>
continue;<br>
var f_x = Math.floor(1000 * Math.abs(i - self.center.x));<br>
if (!self.cacheLanc[f_x])<br>
self.cacheLanc[f_x] = {};<br>
for (var j = self.icenter.y - self.range2; j &lt;= self.icenter.y + self.range2; j++) {<br>
if (j &lt; 0 || j &gt;= self.src.height)<br>
continue;<br>
var f_y = Math.floor(1000 * Math.abs(j - self.center.y));<br>
if (self.cacheLanc[f_x][f_y] == undefined)<br>
self.cacheLanc[f_x][f_y] = self.lanczos(Math.sqrt(Math.pow(f_x * self.rcp_ratio, 2) + Math.pow(f_y * self.rcp_ratio, 2)) / 1000);<br>
weight = self.cacheLanc[f_x][f_y];<br>
if (weight &gt; 0) {<br>
var idx = (j * self.src.width + i) * 4;<br>
a += weight;<br>
r += weight * self.src.data[idx];<br>
g += weight * self.src.data[idx + 1];<br>
b += weight * self.src.data[idx + 2];<br>
}<br>
}<br>
}<br>
var idx = (v * self.dest.width + u) * 3;<br>
self.dest.data[idx] = r / a;<br>
self.dest.data[idx + 1] = g / a;<br>
self.dest.data[idx + 2] = b / a;<br>
}</p>
<pre><code>if (++u &lt; self.dest.width) 
    setTimeout(self.process1, 0, self, u);
else 
    setTimeout(self.process2, 0, self);
</code></pre>
<p>};<br>
thumbnailer.prototype.process2 = function(self){<br>
self.canvas.width = self.dest.width;<br>
self.canvas.height = self.dest.height;<br>
self.ctx.drawImage(self.img, 0, 0);<br>
self.src = self.ctx.getImageData(0, 0, self.dest.width, self.dest.height);<br>
var idx, idx2;<br>
for (var i = 0; i &lt; self.dest.width; i++) {<br>
for (var j = 0; j &lt; self.dest.height; j++) {<br>
idx = (j * self.dest.width + i) * 3;<br>
idx2 = (j * self.dest.width + i) * 4;<br>
self.src.data[idx2] = self.dest.data[idx];<br>
self.src.data[idx2 + 1] = self.dest.data[idx + 1];<br>
self.src.data[idx2 + 2] = self.dest.data[idx + 2];<br>
}<br>
}<br>
self.ctx.putImageData(self.src, 0, 0);<br>
self.canvas.style.display = “block”;<br>
}[/code]</p>
<p>of course i could just use 1 canvas and make it the size of the 2, and just draw the second image to the correct coordinate.</p>
<p>after i get the cropping working and maybe the lanczosresize it will be the same rendering as the avisynth script does.</p>
<p>i have a question that i could answer myself if i did an experiment. but can u do this same method that they use on the video tag, with say an applet tag or flash object?</p>
<p>if you could you could make pseudo-3d games from 2d games. like runescape. it seems do able but i dont have the resources to do the experiment(either a small test applet that draws animations, that you grab it as an image and drawl it on the canvas).</p>
<p>EDIT:<br>
this is an updated working script w/ a single canvas, w/o lanczosresizing(im going to have to rework it).</p>
<p>[code]</p>


<pre><code>&lt;source src="http://html5doctor.com/demos/video-canvas-magic/video.webm" 
</code></pre>
<p>type=“video/webm” &gt;</p>
 
<p></p>
 


#f1 {

	position: absolute;

	top: 50%;

	left: 50%;

	margin: 40px 0 0 -480px;

}

#v {
	position: absolute;
	top: 50%;
	left: 50%;
	margin: -320px 0 0 -200px;
}
 

[/code]
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/html5-2d-3d-conversion/390898/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/html5-2d-3d-conversion/390898/1</link>
        <pubDate>Thu, 14 Apr 2011 20:59:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-390898-1</guid>
        <source url="https://forum.moparisthebest.com/t/html5-2d-3d-conversion/390898.rss">Html5 2d-3d conversion</source>
      </item>
  </channel>
</rss>
