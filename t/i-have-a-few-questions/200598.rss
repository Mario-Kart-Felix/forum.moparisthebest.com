<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>I have a few questions</title>
    <link>https://forum.moparisthebest.com/t/i-have-a-few-questions/200598</link>
    <description>Ok i have a few questions and i hope people can help me.

Well i am currently working on adding mining, firemaking, crafting and herblore into my server. I have a few questions on how to do this. I am sort of a noob coder and adding skills is hard for me.

1) How do i make it so the exp goes up? Like with my farming skill it always says they have -1 xp even thought they gain levels. So how would i make that change as they get exp.

2) I know how to use an item with an object, but how would i use and item with an item. Like with my crafting skill i want to make it so when i use a uncut gem with a chisel I get exp and a cut gem, but how do i do this.

3) Why do the things below not work?



Fire Making:

[code]/*FIREMAKING*/
	public boolean firemaking() {
		if (playerLevel[playerFiremaking] &gt;= firemaking[1]) {
			if (actionTimer == 0 &amp;&amp; IsMakingFire == false) {
				actionAmount++;
				sendMessage(&quot;You attempt to light a fire...&quot;);
				OriginalWeapon = playerEquipment[playerWeapon];
				OriginalShield = playerEquipment[playerShield];
				playerEquipment[playerWeapon] = 590;
				playerEquipment[playerShield] = -1;
				actionTimer = 5;
				if (actionTimer &lt; 1) {
					actionTimer = 1;
				}
				setAnimation(0x2DD);
				IsMakingFire = true;
			}
			if (actionTimer == 0 &amp;&amp; IsMakingFire == true) {
				addSkillXP((firemaking[2] * firemaking[3]), playerFiremaking);
				server.itemHandler.DroppedItemsSDelay[firemaking[4]] = server.itemHandler.MaxDropShowDelay + 1;
				CreateNewFire();
				sendMessage(&quot;You light a fire.&quot;);
				playerEquipment[playerWeapon] = OriginalWeapon;
				OriginalWeapon = -1;
				resetAnimation();
				IsMakingFire = false;
				resetFM();
			}
		} else {
			sendMessage(&quot;You need &quot;+firemaking[1]+&quot; &quot;+statName[playerFiremaking]+&quot; to light these logs.&quot;);
			resetFM();
			return false;
		}
		return true;
	}
	public boolean resetFM() {
		firemaking[0] = 0;
		firemaking[1] = 0;
		firemaking[2] = 0;
		firemaking[4] = 0;
		skillX = -1;
		skillY = -1;
		IsUsingSkill = false;
		IsMakingFire = false;
		return true;
	}
	public void CreateNewFire() {
		for(int i = 0; i &lt; server.objectHandler.MaxObjects; i++) {
			if (server.objectHandler.ObjectFireID[i] == -1) {
				server.objectHandler.ObjectFireID[i] = 2732;
				server.objectHandler.ObjectFireX[i] = skillX;
				server.objectHandler.ObjectFireY[i] = skillY;
				server.objectHandler.ObjectFireH[i] = heightLevel;
				server.objectHandler.ObjectFireMaxDelay[i] = server.objectHandler.FireDelay + (server.objectHandler.FireGianDelay * firemaking[0]);
				break;
			}
		}
	}
	public void AddObjectFire() {
		if (IsFireing == false) {
			IsFireing = true;
			int tmpX = 0;
			int tmpY = 0;
			int calcX = 0;
			int calcY = 0;
			for (int i = 0; i &lt; server.objectHandler.MaxObjects; i++) {
				if (server.itemHandler.DroppedItemsID[i] &gt; -1) {
					tmpX = server.objectHandler.ObjectFireX[i];
					tmpY = server.objectHandler.ObjectFireY[i];
					calcX = tmpX - absX;
					calcY = tmpY - absY;
					if (calcX &gt;= -16 &amp;&amp; calcX &lt;= 15 &amp;&amp; calcY &gt;= -16 &amp;&amp; calcY &lt;= 15 &amp;&amp; FireDelete[i] == false &amp;&amp; server.objectHandler.ObjectFireH[i] == heightLevel) {
						if (IsFireShowed[i] == false) {
							IsFireShowed[i] = true;
							ReplaceObject2(server.objectHandler.ObjectFireX[i], server.objectHandler.ObjectFireY[i], server.objectHandler.ObjectFireID[i], 0, 10);
						}
					} else if (IsFireShowed[i] == true || FireDelete[i] == true) {
						ReplaceObject2(server.objectHandler.ObjectFireX[i], server.objectHandler.ObjectFireY[i], -1, 0, 10);
						int LastPlayerInList = -1;
						int TotalPlayers = 0;
						for (int j = 1; j &lt; PlayerHandler.maxPlayers; j++) {
							if (PlayerHandler.players[j] != null) {
								LastPlayerInList = j;
								TotalPlayers++;
							}
						}
						if (FireDelete[i] == true) {
                                                        int fireX = server.objectHandler.ObjectFireX[i];
                                                        int fireY = server.objectHandler.ObjectFireY[i];
							FireDelete[i] = false;
							server.objectHandler.ObjectFireDeletecount[i]++;
							if ((LastPlayerInList == playerId || LastPlayerInList == -1) &amp;&amp; server.objectHandler.ObjectFireDeletecount[i] == TotalPlayers) {
								server.objectHandler.ResetFire(i);
								for (int j = 1; j &lt; PlayerHandler.maxPlayers; j++) {
									if (PlayerHandler.players[j] != null) {
										PlayerHandler.players[j].IsFireShowed[i] = false;
									}
								}
								if (misc.random(2) == 1) {
									ItemHandler.addItem(592, fireX, fireY, 1, playerId, false);
								}
							}
						} else {
							IsFireShowed[i] = false;
						}
					}
				}
			}
			IsFireing = false;
		}
	}[/code]

Mining:

[code]/*

MINING

*/
			case 2491: //rune essence
				mining[0] = 1;
				mining[1] = 1;
				mining[2] = 5;
				mining[4] = 1436;
				break;
			case 2108:
			case 2109: //clay rock
				mining[0] = 1;
				mining[1] = 1;
				mining[2] = 5;
				mining[4] = 434;
				break;
			case 2090:
			case 2091: //copper rock
				mining[0] = 1;
				mining[1] = 1;
				if (misc.random(2) == 1) {
					mining[2] = 17;
				} else {
					mining[2] = 18;
				}
				mining[4] = 436;
				break;
			case 2094:
			case 2095: //tin rock
				mining[0] = 1;
				mining[1] = 1;
				if (misc.random(2) == 1) {
					mining[2] = 17;
				} else {
					mining[2] = 18;
				}
				mining[4] = 438;
				break;
			case 2110: //blurite rock
				mining[0] = 2;
				mining[1] = 10;
				if (misc.random(2) == 1) {
					mining[2] = 17;
				} else {
					mining[2] = 18;
				}
				mining[4] = 668;
				break;
			case 4028:
			case 4029:
			case 4030: //lime rock
				mining[0] = 1;
				mining[1] = 1;
				if (misc.random(2) == 1) {
					mining[2] = 26;
				} else {
					mining[2] = 27;
				}
				mining[4] = 3211;
				break;
			case 2092:
			case 2093: //iron rock
				mining[0] = 3;
				mining[1] = 15;
				mining[2] = 35;
				mining[4] = 440;
				break;
			case 2100:
			case 2101: //silver rock
				mining[0] = 4;
				mining[1] = 20;
				mining[2] = 40;
				mining[4] = 442;
				break;
			case 3403: //elemental rock
				mining[0] = 4;
				mining[1] = 20;
				mining[2] = 20;
				mining[4] = 2892;
				break;
			case 2096:
			case 2097: //coal rock
				mining[0] = 5;
				mining[1] = 30;
				mining[2] = 50;
				mining[4] = 453;
				break;
			case 2098:
			case 2099: //gold rock
				mining[0] = 6;
				mining[1] = 40;
				mining[2] = 65;
				break;
/*GEM ROCK
			case :
			case : //gem rock
				mining[0] = 6;
				mining[1] = 40;
				mining[2] = 65;
				mining[4] = Item.randomSGems();
				break;
*/
			case 2102:
			case 2103: //mithril rock
				mining[0] = 7;
				mining[1] = 55;
				mining[2] = 80;
				mining[4] = 447;
				break;
			case 2104:
			case 2105: //adamant rock
				mining[0] = 8;
				mining[1] = 70;
				mining[2] = 95;
				mining[4] = 449;
				break;
			case 2106:
			case 2107: //rune rock
				mining[0] = 9;
				mining[1] = 85;
				mining[2] = 125;
				mining[4] = 451;
				break;
			default:
				GoFalse = true;
				break;
		}
		if (GoFalse == true) {
			return false;
		}
		return true;
	}[/code]

and here is more i found for mining:

[code]/*MINING*/
	public boolean mining() {
		int MIPickAxe = 0;
		int RndGems = 50;
		if (IsMining == true) {
			MIPickAxe = 1; //If Mining -&gt; Go trough loop, passby MICheckPickAxe to prevent originalweapon loss, 1 to tell you got pick axe, no function left for MIPickAxe if mining, so 1 is enough.
		} else {
			MIPickAxe = MICheckPickAxe();
		}
		if (MIPickAxe &gt; 0) {
			if (playerLevel[playerMining] &gt;= mining[1]) {
				if (freeSlots() &gt; 0) {
					if (actionTimer == 0 &amp;&amp; IsMining == false) {
						actionAmount++;
						sendMessage(&quot;You swing your pick axe at the rock...&quot;);
						actionTimer = (int)((mining[0] + 10) - MIPickAxe);
						if (actionTimer &lt; 1) {
							actionTimer = 1;
						}
						setAnimation(0x554);
						IsMining = true;
					}
					if (actionTimer == 0 &amp;&amp; IsMining == true) {
						if (IsItemInBag(1706) == true || IsItemInBag(1708) == true || IsItemInBag(1710) == true || IsItemInBag(1712) == true) {
							RndGems /= 2;
						}
						if (misc.random(RndGems) == (int)(RndGems / 4)) {
							addSkillXP((65 * mining[3]), playerMining);
							addItem(Item.randomNGems(), 1);
							sendMessage(&quot;You get a gem!&quot;);
						} else {
							addSkillXP((mining[2] * mining[3]), playerMining);
							addItem(mining[4], 1);
							sendMessage(&quot;You get some ores.&quot;);
						}
						playerEquipment[playerWeapon] = OriginalWeapon;
						OriginalWeapon = -1;
						playerEquipment[playerShield] = OriginalShield;
						OriginalShield = -1;
						resetAnimation();
						resetMI();
					}
				} else {
					sendMessage(&quot;Not enough space in your inventory.&quot;);
					resetMI();
					return false;
				}
			} else {
				sendMessage(&quot;You need &quot;+mining[1]+&quot; &quot;+statName[playerMining]+&quot; to mine those ores.&quot;);
				resetMI();
				return false;
			}
		} else {
			sendMessage(&quot;You need a pick axe to mine ores.&quot;);
			resetMI();
			return false;
		}
		return true;
	}
	public boolean resetMI() {
		mining[0] = 0;
		mining[1] = 0;
		mining[2] = 0;
		mining[4] = 0;
		skillX = -1;
		skillY = -1;
		IsMining = false;
		IsUsingSkill = false;
		return true;
	}
	public int MICheckPickAxe() {
		int Hand;
		int Shield;
		int Bag;
		int PickAxe;
		Hand = playerEquipment[playerWeapon];
		Shield = playerEquipment[playerShield];
		PickAxe = 0;
		switch (Hand) {
			case 1265: //Bronze Pick Axe
				PickAxe = 1; break;
			case 1267: //Iron Pick Axe
				PickAxe = 2; break;
			case 1269: //Steel Pick Axe
				PickAxe = 3; break;
			case 1273: //Mithril Pick Axe
				PickAxe = 4; break;
			case 1271: //Adamant Pick Axe
				PickAxe = 5; break;
			case 1275: //Rune Pick Axe
				PickAxe = 6; break;
		}
		if (PickAxe &gt; 0) {
			OriginalWeapon = Hand;
			OriginalShield = Shield;
			playerEquipment[playerShield] = -1;
			return PickAxe;
		}
		Bag = -1;
		for (int i = 0; i &lt; playerItems.length; i++) {
			Bag = playerItems[i];
			Bag -=1; //Only to fix the ID !
			if (Bag == 1265 || Bag == 1267 || Bag == 1269 || Bag == 1271 || Bag == 1273 || Bag == 1275) {
				break;
			}
		}
		switch (Bag) {
			case 1265: //Bronze Pick Axe
				PickAxe = 1; break;
			case 1267: //Iron Pick Axe
				PickAxe = 2; break;
			case 1269: //Steel Pick Axe
				PickAxe = 3; break;
			case 1273: //Mithril Pick Axe
				PickAxe = 4; break;
			case 1271: //Adamant Pick Axe
				PickAxe = 5; break;
			case 1275: //Rune Pick Axe
				PickAxe = 6; break;
		}
		if (PickAxe &gt; 0) {
			OriginalWeapon = Hand;
			OriginalShield = Shield;
			playerEquipment[playerShield] = -1;
			playerEquipment[playerWeapon] = Bag;
		}
		return PickAxe;
	}[/code]

Crafting:

[code]	public void CheckDyeCape() {
		boolean GoOn = true;
		int CapeXP = 0;
		int NewCape = -1;
		switch (useitems[0]) {
			case 1763: //red dye
				NewCape = 1007;
				CapeXP = 2;
			case 1767: //blue dye
				NewCape = 1021;
				CapeXP = 2;
			case 1765: //yellow dye
				NewCape = 1023;
				CapeXP = 2;
			case 1771: //green dye
				NewCape = 1027;
				CapeXP = 3;
			case 1773: //purple dye
				NewCape = 1029;
				CapeXP = 3;
			case 1769: //orange dye
				NewCape = 1031;
				CapeXP = 3;
			default:
				sendMessage(&quot;Nothing interesting is happening.&quot;);
				GoOn = false;
				break;
		}
		if (GoOn == true) {
			deleteItem(useitems[0], useitems[3], playerItemsN[useitems[3]]);
			deleteItem(useitems[1], useitems[2], playerItemsN[useitems[2]]);
			addItem(NewCape, 1);
			addSkillXP((CapeXP * crafting[3]), playerCrafting);
		}
	}
	public void CheckCuttingGem() {
		boolean GoOn = true;
		switch (useitems[1]) {
			case 1617: //uncut diamond
				crafting[1] = 43;
				if (misc.random2(2) == 1) {
					crafting[2] = 107;
				} else {
					crafting[2] = 108;
				}
				break;
			case 1619: //uncut ruby
				crafting[1] = 34;
				crafting[2] = 85;
				break;
			case 1621: //uncut emerald
				crafting[1] = 27;
				if (misc.random2(2) == 1) {
					crafting[2] = 67;
				} else {
					crafting[2] = 68;
				}
				break;
			case 1623: //uncut sapphire
				crafting[1] = 20;
				crafting[2] = 50;
				break;
			case 1625: //uncut opal
				if (misc.random2(2) == 1) {
					crafting[4] = 1633;
				}
				crafting[1] = 1;
				crafting[2] = 15;
				break;
			case 1627: //uncut jada
				if (misc.random2(2) == 1) {
					crafting[4] = 1633;
				}
				crafting[1] = 13;
				crafting[2] = 20;
				break;
			case 1629: //uncut red topaz
				if (misc.random2(2) == 1) {
						crafting[4] = 1633;
				}
				crafting[1] = 16;
				crafting[2] = 25;
				break;
			case 1631: //uncut dragonstone
				crafting[1] = 55;
				if (misc.random2(2) == 1) {
					crafting[2] = 127;
				} else {
					crafting[2] = 128;
				}
				break;
			default:
				sendMessage(&quot;Nothing interesting is happening.&quot;);
				GoOn = false;
				break;
		}
		if (GoOn == true) {
			crafting[0] = 1;
			if (crafting[4] == -1) {
				crafting[4] = (useitems[1] - 16); //16 item id&#39;s lower is the cutted gem.
			}
		}
	}
	public boolean crafting() {
		if (playerLevel[playerCrafting] &gt;= crafting[1] &amp;&amp; playerEquipment[playerWeapon] &gt;= 0) {
			if (actionTimer == 0 &amp;&amp; crafting[0] == 1) {
				actionAmount++;
				actionTimer = 4;
				OriginalShield = playerEquipment[playerShield];
				OriginalWeapon = playerEquipment[playerWeapon];
				playerEquipment[playerShield] = useitems[0];
				playerEquipment[playerWeapon] = useitems[1];
				setAnimation(0x8DD);
				crafting[0] = 2;
			}
			if (actionTimer == 0 &amp;&amp; crafting[0] == 2) {
				deleteItem(useitems[1], useitems[2], playerItemsN[useitems[2]]);
				addItem(crafting[4], 1);
				if (crafting[4] == 1633) {
					sendMessage(&quot;You crushed the gem.&quot;);
				} else {
					addSkillXP((crafting[2] * crafting[3]), playerCrafting);
					sendMessage(&quot;You successfully cut the gem.&quot;);
				}
				playerEquipment[playerWeapon] = OriginalWeapon;
				playerEquipment[playerShield] = OriginalShield;
				OriginalWeapon = -1;
				OriginalShield = -1;
				resetAnimation();
				resetCR();
			}
		} else {
			sendMessage(&quot;You need &quot;+crafting[1]+&quot; &quot;+statName[playerCrafting]+&quot; to cut this gem.&quot;);
			resetCR();
			return false;
		}
		return true;
	}
	public boolean resetCR() {
		crafting[0] = 0;
		crafting[1] = 0;
		crafting[2] = 0;
		crafting[4] = -1;
		useitems[0] = -1;
		useitems[1] = -1;
		useitems[2] = -1;
		useitems[3] = -1;
		IsUsingSkill = false;
		return true;
	}[/code]

Why don&#39;t the above things work and if they do, can you tell me what im doing wrong while trying to train them?

last qesution, a noob one. How do i change the about of exp i get for doing something. Thank you everyone in advance.</description>
    
    <lastBuildDate>Wed, 09 Jul 2008 21:52:27 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/i-have-a-few-questions/200598.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>I have a few questions</title>
        <dc:creator><![CDATA[@wtfnub wtfnub]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wtfnub">@wtfnub</a> wrote:</p>
          <blockquote>
              <p>well idk if ur works but mine works for me here:</p>
<p>case 3403: //elemental rock<br>
if(playerEquipment[playerWeapon] == 1265 || playerEquipment[playerWeapon] == 1267 || playerEquipment[playerWeapon] == 1269 || playerEquipment[playerWeapon] == 1271 || playerEquipment[playerWeapon] == 1273 || playerEquipment[playerWeapon] == 1275)			<br>
if (playerLevel[14] &gt;=1) {			<br>
if (actionTimer == 0)<br>
{<br>
sendMessage(“You mine an elemental ore”);<br>
addSkillXP((350*playerLevel[14]), 14);<br>
actionTimer = 10;<br>
setAnimation(625);<br>
updateRequired = true; appearanceUpdateRequired = true;<br>
}else if (playerLevel[14] &lt;= 0); {<br>
sendMessage(“You need a pickaxe to mine this rock”)		<br>
}<br>
}<br>
break;</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/i-have-a-few-questions/200598/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/i-have-a-few-questions/200598/2</link>
        <pubDate>Wed, 09 Jul 2008 21:52:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-200598-2</guid>
        <source url="https://forum.moparisthebest.com/t/i-have-a-few-questions/200598.rss">I have a few questions</source>
      </item>
      <item>
        <title>I have a few questions</title>
        <dc:creator><![CDATA[@josh555 josh555]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/josh555">@josh555</a> wrote:</p>
          <blockquote>
              <p>Ok i have a few questions and i hope people can help me.</p>
<p>Well i am currently working on adding mining, firemaking, crafting and herblore into my server. I have a few questions on how to do this. I am sort of a noob coder and adding skills is hard for me.</p>
<ol>
<li>
<p>How do i make it so the exp goes up? Like with my farming skill it always says they have -1 xp even thought they gain levels. So how would i make that change as they get exp.</p>
</li>
<li>
<p>I know how to use an item with an object, but how would i use and item with an item. Like with my crafting skill i want to make it so when i use a uncut gem with a chisel I get exp and a cut gem, but how do i do this.</p>
</li>
<li>
<p>Why do the things below not work?</p>
</li>
</ol>
<p>Fire Making:</p>
<p><code>/*FIREMAKING*/
	public boolean firemaking() {
		if (playerLevel[playerFiremaking] &gt;= firemaking[1]) {
			if (actionTimer == 0 &amp;&amp; IsMakingFire == false) {
				actionAmount++;
				sendMessage("You attempt to light a fire...");
				OriginalWeapon = playerEquipment[playerWeapon];
				OriginalShield = playerEquipment[playerShield];
				playerEquipment[playerWeapon] = 590;
				playerEquipment[playerShield] = -1;
				actionTimer = 5;
				if (actionTimer &lt; 1) {
					actionTimer = 1;
				}
				setAnimation(0x2DD);
				IsMakingFire = true;
			}
			if (actionTimer == 0 &amp;&amp; IsMakingFire == true) {
				addSkillXP((firemaking[2] * firemaking[3]), playerFiremaking);
				server.itemHandler.DroppedItemsSDelay[firemaking[4]] = server.itemHandler.MaxDropShowDelay + 1;
				CreateNewFire();
				sendMessage("You light a fire.");
				playerEquipment[playerWeapon] = OriginalWeapon;
				OriginalWeapon = -1;
				resetAnimation();
				IsMakingFire = false;
				resetFM();
			}
		} else {
			sendMessage("You need "+firemaking[1]+" "+statName[playerFiremaking]+" to light these logs.");
			resetFM();
			return false;
		}
		return true;
	}
	public boolean resetFM() {
		firemaking[0] = 0;
		firemaking[1] = 0;
		firemaking[2] = 0;
		firemaking[4] = 0;
		skillX = -1;
		skillY = -1;
		IsUsingSkill = false;
		IsMakingFire = false;
		return true;
	}
	public void CreateNewFire() {
		for(int i = 0; i &lt; server.objectHandler.MaxObjects; i++) {
			if (server.objectHandler.ObjectFireID[i] == -1) {
				server.objectHandler.ObjectFireID[i] = 2732;
				server.objectHandler.ObjectFireX[i] = skillX;
				server.objectHandler.ObjectFireY[i] = skillY;
				server.objectHandler.ObjectFireH[i] = heightLevel;
				server.objectHandler.ObjectFireMaxDelay[i] = server.objectHandler.FireDelay + (server.objectHandler.FireGianDelay * firemaking[0]);
				break;
			}
		}
	}
	public void AddObjectFire() {
		if (IsFireing == false) {
			IsFireing = true;
			int tmpX = 0;
			int tmpY = 0;
			int calcX = 0;
			int calcY = 0;
			for (int i = 0; i &lt; server.objectHandler.MaxObjects; i++) {
				if (server.itemHandler.DroppedItemsID[i] &gt; -1) {
					tmpX = server.objectHandler.ObjectFireX[i];
					tmpY = server.objectHandler.ObjectFireY[i];
					calcX = tmpX - absX;
					calcY = tmpY - absY;
					if (calcX &gt;= -16 &amp;&amp; calcX &lt;= 15 &amp;&amp; calcY &gt;= -16 &amp;&amp; calcY &lt;= 15 &amp;&amp; FireDelete[i] == false &amp;&amp; server.objectHandler.ObjectFireH[i] == heightLevel) {
						if (IsFireShowed[i] == false) {
							IsFireShowed[i] = true;
							ReplaceObject2(server.objectHandler.ObjectFireX[i], server.objectHandler.ObjectFireY[i], server.objectHandler.ObjectFireID[i], 0, 10);
						}
					} else if (IsFireShowed[i] == true || FireDelete[i] == true) {
						ReplaceObject2(server.objectHandler.ObjectFireX[i], server.objectHandler.ObjectFireY[i], -1, 0, 10);
						int LastPlayerInList = -1;
						int TotalPlayers = 0;
						for (int j = 1; j &lt; PlayerHandler.maxPlayers; j++) {
							if (PlayerHandler.players[j] != null) {
								LastPlayerInList = j;
								TotalPlayers++;
							}
						}
						if (FireDelete[i] == true) {
                                                        int fireX = server.objectHandler.ObjectFireX[i];
                                                        int fireY = server.objectHandler.ObjectFireY[i];
							FireDelete[i] = false;
							server.objectHandler.ObjectFireDeletecount[i]++;
							if ((LastPlayerInList == playerId || LastPlayerInList == -1) &amp;&amp; server.objectHandler.ObjectFireDeletecount[i] == TotalPlayers) {
								server.objectHandler.ResetFire(i);
								for (int j = 1; j &lt; PlayerHandler.maxPlayers; j++) {
									if (PlayerHandler.players[j] != null) {
										PlayerHandler.players[j].IsFireShowed[i] = false;
									}
								}
								if (misc.random(2) == 1) {
									ItemHandler.addItem(592, fireX, fireY, 1, playerId, false);
								}
							}
						} else {
							IsFireShowed[i] = false;
						}
					}
				}
			}
			IsFireing = false;
		}
	}</code></p>
<p>Mining:</p>
<p>[code]/*</p>
<p>MINING</p>
<p>*/<br>
case 2491: //rune essence<br>
mining[0] = 1;<br>
mining[1] = 1;<br>
mining[2] = 5;<br>
mining[4] = 1436;<br>
break;<br>
case 2108:<br>
case 2109: //clay rock<br>
mining[0] = 1;<br>
mining[1] = 1;<br>
mining[2] = 5;<br>
mining[4] = 434;<br>
break;<br>
case 2090:<br>
case 2091: //copper rock<br>
mining[0] = 1;<br>
mining[1] = 1;<br>
if (misc.random(2) == 1) {<br>
mining[2] = 17;<br>
} else {<br>
mining[2] = 18;<br>
}<br>
mining[4] = 436;<br>
break;<br>
case 2094:<br>
case 2095: //tin rock<br>
mining[0] = 1;<br>
mining[1] = 1;<br>
if (misc.random(2) == 1) {<br>
mining[2] = 17;<br>
} else {<br>
mining[2] = 18;<br>
}<br>
mining[4] = 438;<br>
break;<br>
case 2110: //blurite rock<br>
mining[0] = 2;<br>
mining[1] = 10;<br>
if (misc.random(2) == 1) {<br>
mining[2] = 17;<br>
} else {<br>
mining[2] = 18;<br>
}<br>
mining[4] = 668;<br>
break;<br>
case 4028:<br>
case 4029:<br>
case 4030: //lime rock<br>
mining[0] = 1;<br>
mining[1] = 1;<br>
if (misc.random(2) == 1) {<br>
mining[2] = 26;<br>
} else {<br>
mining[2] = 27;<br>
}<br>
mining[4] = 3211;<br>
break;<br>
case 2092:<br>
case 2093: //iron rock<br>
mining[0] = 3;<br>
mining[1] = 15;<br>
mining[2] = 35;<br>
mining[4] = 440;<br>
break;<br>
case 2100:<br>
case 2101: //silver rock<br>
mining[0] = 4;<br>
mining[1] = 20;<br>
mining[2] = 40;<br>
mining[4] = 442;<br>
break;<br>
case 3403: //elemental rock<br>
mining[0] = 4;<br>
mining[1] = 20;<br>
mining[2] = 20;<br>
mining[4] = 2892;<br>
break;<br>
case 2096:<br>
case 2097: //coal rock<br>
mining[0] = 5;<br>
mining[1] = 30;<br>
mining[2] = 50;<br>
mining[4] = 453;<br>
break;<br>
case 2098:<br>
case 2099: //gold rock<br>
mining[0] = 6;<br>
mining[1] = 40;<br>
mining[2] = 65;<br>
break;<br>
/*GEM ROCK<br>
case :<br>
case : //gem rock<br>
mining[0] = 6;<br>
mining[1] = 40;<br>
mining[2] = 65;<br>
mining[4] = Item.randomSGems();<br>
break;<br>
*/<br>
case 2102:<br>
case 2103: //mithril rock<br>
mining[0] = 7;<br>
mining[1] = 55;<br>
mining[2] = 80;<br>
mining[4] = 447;<br>
break;<br>
case 2104:<br>
case 2105: //adamant rock<br>
mining[0] = 8;<br>
mining[1] = 70;<br>
mining[2] = 95;<br>
mining[4] = 449;<br>
break;<br>
case 2106:<br>
case 2107: //rune rock<br>
mining[0] = 9;<br>
mining[1] = 85;<br>
mining[2] = 125;<br>
mining[4] = 451;<br>
break;<br>
default:<br>
GoFalse = true;<br>
break;<br>
}<br>
if (GoFalse == true) {<br>
return false;<br>
}<br>
return true;<br>
}[/code]</p>
<p>and here is more i found for mining:</p>
<p><code>/*MINING*/
	public boolean mining() {
		int MIPickAxe = 0;
		int RndGems = 50;
		if (IsMining == true) {
			MIPickAxe = 1; //If Mining -&gt; Go trough loop, passby MICheckPickAxe to prevent originalweapon loss, 1 to tell you got pick axe, no function left for MIPickAxe if mining, so 1 is enough.
		} else {
			MIPickAxe = MICheckPickAxe();
		}
		if (MIPickAxe &gt; 0) {
			if (playerLevel[playerMining] &gt;= mining[1]) {
				if (freeSlots() &gt; 0) {
					if (actionTimer == 0 &amp;&amp; IsMining == false) {
						actionAmount++;
						sendMessage("You swing your pick axe at the rock...");
						actionTimer = (int)((mining[0] + 10) - MIPickAxe);
						if (actionTimer &lt; 1) {
							actionTimer = 1;
						}
						setAnimation(0x554);
						IsMining = true;
					}
					if (actionTimer == 0 &amp;&amp; IsMining == true) {
						if (IsItemInBag(1706) == true || IsItemInBag(1708) == true || IsItemInBag(1710) == true || IsItemInBag(1712) == true) {
							RndGems /= 2;
						}
						if (misc.random(RndGems) == (int)(RndGems / 4)) {
							addSkillXP((65 * mining[3]), playerMining);
							addItem(Item.randomNGems(), 1);
							sendMessage("You get a gem!");
						} else {
							addSkillXP((mining[2] * mining[3]), playerMining);
							addItem(mining[4], 1);
							sendMessage("You get some ores.");
						}
						playerEquipment[playerWeapon] = OriginalWeapon;
						OriginalWeapon = -1;
						playerEquipment[playerShield] = OriginalShield;
						OriginalShield = -1;
						resetAnimation();
						resetMI();
					}
				} else {
					sendMessage("Not enough space in your inventory.");
					resetMI();
					return false;
				}
			} else {
				sendMessage("You need "+mining[1]+" "+statName[playerMining]+" to mine those ores.");
				resetMI();
				return false;
			}
		} else {
			sendMessage("You need a pick axe to mine ores.");
			resetMI();
			return false;
		}
		return true;
	}
	public boolean resetMI() {
		mining[0] = 0;
		mining[1] = 0;
		mining[2] = 0;
		mining[4] = 0;
		skillX = -1;
		skillY = -1;
		IsMining = false;
		IsUsingSkill = false;
		return true;
	}
	public int MICheckPickAxe() {
		int Hand;
		int Shield;
		int Bag;
		int PickAxe;
		Hand = playerEquipment[playerWeapon];
		Shield = playerEquipment[playerShield];
		PickAxe = 0;
		switch (Hand) {
			case 1265: //Bronze Pick Axe
				PickAxe = 1; break;
			case 1267: //Iron Pick Axe
				PickAxe = 2; break;
			case 1269: //Steel Pick Axe
				PickAxe = 3; break;
			case 1273: //Mithril Pick Axe
				PickAxe = 4; break;
			case 1271: //Adamant Pick Axe
				PickAxe = 5; break;
			case 1275: //Rune Pick Axe
				PickAxe = 6; break;
		}
		if (PickAxe &gt; 0) {
			OriginalWeapon = Hand;
			OriginalShield = Shield;
			playerEquipment[playerShield] = -1;
			return PickAxe;
		}
		Bag = -1;
		for (int i = 0; i &lt; playerItems.length; i++) {
			Bag = playerItems[i];
			Bag -=1; //Only to fix the ID !
			if (Bag == 1265 || Bag == 1267 || Bag == 1269 || Bag == 1271 || Bag == 1273 || Bag == 1275) {
				break;
			}
		}
		switch (Bag) {
			case 1265: //Bronze Pick Axe
				PickAxe = 1; break;
			case 1267: //Iron Pick Axe
				PickAxe = 2; break;
			case 1269: //Steel Pick Axe
				PickAxe = 3; break;
			case 1273: //Mithril Pick Axe
				PickAxe = 4; break;
			case 1271: //Adamant Pick Axe
				PickAxe = 5; break;
			case 1275: //Rune Pick Axe
				PickAxe = 6; break;
		}
		if (PickAxe &gt; 0) {
			OriginalWeapon = Hand;
			OriginalShield = Shield;
			playerEquipment[playerShield] = -1;
			playerEquipment[playerWeapon] = Bag;
		}
		return PickAxe;
	}</code></p>
<p>Crafting:</p>
<p><code>	public void CheckDyeCape() {
		boolean GoOn = true;
		int CapeXP = 0;
		int NewCape = -1;
		switch (useitems[0]) {
			case 1763: //red dye
				NewCape = 1007;
				CapeXP = 2;
			case 1767: //blue dye
				NewCape = 1021;
				CapeXP = 2;
			case 1765: //yellow dye
				NewCape = 1023;
				CapeXP = 2;
			case 1771: //green dye
				NewCape = 1027;
				CapeXP = 3;
			case 1773: //purple dye
				NewCape = 1029;
				CapeXP = 3;
			case 1769: //orange dye
				NewCape = 1031;
				CapeXP = 3;
			default:
				sendMessage("Nothing interesting is happening.");
				GoOn = false;
				break;
		}
		if (GoOn == true) {
			deleteItem(useitems[0], useitems[3], playerItemsN[useitems[3]]);
			deleteItem(useitems[1], useitems[2], playerItemsN[useitems[2]]);
			addItem(NewCape, 1);
			addSkillXP((CapeXP * crafting[3]), playerCrafting);
		}
	}
	public void CheckCuttingGem() {
		boolean GoOn = true;
		switch (useitems[1]) {
			case 1617: //uncut diamond
				crafting[1] = 43;
				if (misc.random2(2) == 1) {
					crafting[2] = 107;
				} else {
					crafting[2] = 108;
				}
				break;
			case 1619: //uncut ruby
				crafting[1] = 34;
				crafting[2] = 85;
				break;
			case 1621: //uncut emerald
				crafting[1] = 27;
				if (misc.random2(2) == 1) {
					crafting[2] = 67;
				} else {
					crafting[2] = 68;
				}
				break;
			case 1623: //uncut sapphire
				crafting[1] = 20;
				crafting[2] = 50;
				break;
			case 1625: //uncut opal
				if (misc.random2(2) == 1) {
					crafting[4] = 1633;
				}
				crafting[1] = 1;
				crafting[2] = 15;
				break;
			case 1627: //uncut jada
				if (misc.random2(2) == 1) {
					crafting[4] = 1633;
				}
				crafting[1] = 13;
				crafting[2] = 20;
				break;
			case 1629: //uncut red topaz
				if (misc.random2(2) == 1) {
						crafting[4] = 1633;
				}
				crafting[1] = 16;
				crafting[2] = 25;
				break;
			case 1631: //uncut dragonstone
				crafting[1] = 55;
				if (misc.random2(2) == 1) {
					crafting[2] = 127;
				} else {
					crafting[2] = 128;
				}
				break;
			default:
				sendMessage("Nothing interesting is happening.");
				GoOn = false;
				break;
		}
		if (GoOn == true) {
			crafting[0] = 1;
			if (crafting[4] == -1) {
				crafting[4] = (useitems[1] - 16); //16 item id's lower is the cutted gem.
			}
		}
	}
	public boolean crafting() {
		if (playerLevel[playerCrafting] &gt;= crafting[1] &amp;&amp; playerEquipment[playerWeapon] &gt;= 0) {
			if (actionTimer == 0 &amp;&amp; crafting[0] == 1) {
				actionAmount++;
				actionTimer = 4;
				OriginalShield = playerEquipment[playerShield];
				OriginalWeapon = playerEquipment[playerWeapon];
				playerEquipment[playerShield] = useitems[0];
				playerEquipment[playerWeapon] = useitems[1];
				setAnimation(0x8DD);
				crafting[0] = 2;
			}
			if (actionTimer == 0 &amp;&amp; crafting[0] == 2) {
				deleteItem(useitems[1], useitems[2], playerItemsN[useitems[2]]);
				addItem(crafting[4], 1);
				if (crafting[4] == 1633) {
					sendMessage("You crushed the gem.");
				} else {
					addSkillXP((crafting[2] * crafting[3]), playerCrafting);
					sendMessage("You successfully cut the gem.");
				}
				playerEquipment[playerWeapon] = OriginalWeapon;
				playerEquipment[playerShield] = OriginalShield;
				OriginalWeapon = -1;
				OriginalShield = -1;
				resetAnimation();
				resetCR();
			}
		} else {
			sendMessage("You need "+crafting[1]+" "+statName[playerCrafting]+" to cut this gem.");
			resetCR();
			return false;
		}
		return true;
	}
	public boolean resetCR() {
		crafting[0] = 0;
		crafting[1] = 0;
		crafting[2] = 0;
		crafting[4] = -1;
		useitems[0] = -1;
		useitems[1] = -1;
		useitems[2] = -1;
		useitems[3] = -1;
		IsUsingSkill = false;
		return true;
	}</code></p>
<p>Why don’t the above things work and if they do, can you tell me what im doing wrong while trying to train them?</p>
<p>last qesution, a noob one. How do i change the about of exp i get for doing something. Thank you everyone in advance.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/i-have-a-few-questions/200598/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/i-have-a-few-questions/200598/1</link>
        <pubDate>Thu, 17 Apr 2008 04:37:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-200598-1</guid>
        <source url="https://forum.moparisthebest.com/t/i-have-a-few-questions/200598.rss">I have a few questions</source>
      </item>
  </channel>
</rss>
