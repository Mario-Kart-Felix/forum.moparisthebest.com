<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>AccessorMethodsGen</title>
    <link>https://forum.moparisthebest.com/t/accessormethodsgen/52446</link>
    <description>It&#39;s been beautified so I&#39;m no longer shamed by it. It doesn&#39;t actually generate anything, it&#39;ll just tell you the following: the NPC class, the entity class, the player class, and the string wrapper class. Thus far I&#39;ve tested it on 421, 443, and 445.

[code=java]import org.apache.bcel.classfile.*;
import java.util.jar.JarInputStream;
import java.util.zip.ZipEntry;
import java.io.FileInputStream;
import java.io.File;
import java.io.IOException;

public class AccessorMethodsGen{
    String entityclass = null;
    String npcclass = null;
    String stringwrapper = null;
    public static void main(String[] args){
        AccessorMethodsGen am = new AccessorMethodsGen();
        am.new StringWrapper();
        am.new NPC();
        am.new Player();
    }
    public class Player{
        String s = null;
        public Player(){
            try{
                JarInputStream jis = new JarInputStream(new FileInputStream(new File(&quot;runescape.jar&quot;)));
                ZipEntry ze;
                while((ze = jis.getNextEntry()) != null){
                    if(ze.getName().endsWith(&quot;.class&quot;)){
                        runCheck1(new ClassParser(jis, ze.getName()).parse());
                        if(s != null){
                            System.out.println(&quot;Player class is &quot;+s);
                            return;
                        }
                    }
                }
            }
            catch(NullPointerException e){}
            catch(Exception e){ e.printStackTrace();}
            System.out.println(&quot;Failed!&quot;);
        }
        public void runCheck1(JavaClass jc){
            if(jc.getSuperclassName().equals(entityclass) &amp;&amp; !jc.getClassName().equals(npcclass)) s = jc.getClassName();
        }
    }
    public class StringWrapper{
        public StringWrapper(){
            try{
                JarInputStream jis = new JarInputStream(new FileInputStream(new File(&quot;runescape.jar&quot;)));
                ZipEntry ze;
                while((ze = jis.getNextEntry()) != null){
                    if(ze.getName().endsWith(&quot;.class&quot;)){
                        runCheck1(new ClassParser(jis, ze.getName()).parse());
                        if(stringwrapper != null){
                            System.out.println(&quot;String wrapper class is &quot;+ stringwrapper);
                            return;
                        }
                    }
                }
            }
            catch(NullPointerException e){}
            catch(Exception e){ e.printStackTrace();}
            System.out.println(&quot;Failed!&quot;);
        }
        public void runCheck1(JavaClass jc){
            if(jc.getSuperclassName().endsWith(&quot;Object&quot;) &amp;&amp; !jc.isAbstract()){
                for(Method m : jc.getMethods()){
                    if(m.getName().equals(&quot;toString&quot;)){
                        for(Field f : jc.getFields()){
                            if(f.getType().toString().equals(&quot;byte[]&quot;)) stringwrapper = jc.getClassName();
                        }
                    }
                }
            }
        }
    }
    public class NPC{
        public NPC(){
            try{
                JarInputStream jis = new JarInputStream(new FileInputStream(new File(&quot;runescape.jar&quot;)));
                ZipEntry ze;
                while((ze = jis.getNextEntry()) != null){
                    if(ze.getName().endsWith(&quot;.class&quot;)){
                        runCheck1(new ClassParser(jis, ze.getName()).parse());
                        if(npcclass != null){
                            System.out.println(&quot;NPC class is &quot;+ npcclass);
                            return;
                        }
                    }
                }
            }
            catch(NullPointerException e){}
            catch(Exception e){ e.printStackTrace();}
            System.out.println(&quot;Failed!&quot;);
        }
        public boolean runCheck1(JavaClass input){
            if(!input.getSuperclassName().endsWith(&quot;Object&quot;)){
                try{
                    JarInputStream jis = new JarInputStream(new FileInputStream(new File(&quot;runescape.jar&quot;)));
                    int nonStaticCount = 0;
                    String s = &quot;&quot;;
                    for(Field f : input.getFields()){
                        if(!f.isStatic() &amp;&amp; !f.isPrivate()){
                            nonStaticCount++;
                            s += f.getType().toString();
                        }
                    }
                    if(nonStaticCount == 1){
                        try{
                            if(getSubclasses(input) == 0 &amp;&amp; !input.getSuperclassName().endsWith(&quot;Object&quot;) &amp;&amp; input.getInterfaceNames().length == 0 &amp;&amp; s.length() &lt; 3 &amp;&amp; !s.equalsIgnoreCase(stringwrapper)){
                                npcclass = input.getClassName();
                                System.out.println(&quot;Entity class is &quot;+(entityclass = input.getSuperclassName()));
                                return true;
                           }
                        }
                        catch(Exception e){ e.printStackTrace(); return false; }
                    }
                }
                catch(IOException e){}
            }
            return false;
        }
        public int getSubclasses(JavaClass jc){
            int i = 0;
            try{
                JarInputStream jis = new JarInputStream(new FileInputStream(new File(&quot;runescape.jar&quot;)));
                ZipEntry ze;
                while((ze = jis.getNextEntry()) != null){
                    if(ze.getName().endsWith(&quot;.class&quot;)){
                        JavaClass jav = new ClassParser(jis, ze.getName()).parse();
                        if(jav.getSuperclassName().equals(jc.getClassName())) i++;
                    }
                }
            }
            catch(IOException e){ return 0; }
            return i;
        }
    }
}[/code]</description>
    
    <lastBuildDate>Sun, 28 Jan 2007 13:50:23 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/accessormethodsgen/52446.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>AccessorMethodsGen</title>
        <dc:creator><![CDATA[@pplsuqbawlz pplsuqbawlz]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pplsuqbawlz">@pplsuqbawlz</a> wrote:</p>
          <blockquote>
              <p>Go go go, pick up the pieces.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/accessormethodsgen/52446/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/accessormethodsgen/52446/8</link>
        <pubDate>Sun, 28 Jan 2007 13:50:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-52446-8</guid>
        <source url="https://forum.moparisthebest.com/t/accessormethodsgen/52446.rss">AccessorMethodsGen</source>
      </item>
      <item>
        <title>AccessorMethodsGen</title>
        <dc:creator><![CDATA[@Silver_Lining Silver Lining]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silver_lining">@Silver_Lining</a> wrote:</p>
          <blockquote>
              <p>It works both ways, and I think it looks cooler my way.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/accessormethodsgen/52446/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/accessormethodsgen/52446/7</link>
        <pubDate>Sun, 28 Jan 2007 11:02:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-52446-7</guid>
        <source url="https://forum.moparisthebest.com/t/accessormethodsgen/52446.rss">AccessorMethodsGen</source>
      </item>
      <item>
        <title>AccessorMethodsGen</title>
        <dc:creator><![CDATA[@Silver_Lining Silver Lining]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silver_lining">@Silver_Lining</a> wrote:</p>
          <blockquote>
              <p>Whoever said I wanted to make a bot?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/accessormethodsgen/52446/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/accessormethodsgen/52446/6</link>
        <pubDate>Sun, 28 Jan 2007 04:54:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-52446-6</guid>
        <source url="https://forum.moparisthebest.com/t/accessormethodsgen/52446.rss">AccessorMethodsGen</source>
      </item>
      <item>
        <title>AccessorMethodsGen</title>
        <dc:creator><![CDATA[@ownagesbot ownagesbot]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ownagesbot">@ownagesbot</a> wrote:</p>
          <blockquote>
              <p>Silver, when my tutorial is completed (RSR vet section), you should read it, im sure itll help you understand how bots function. I think once you’ve read it you’ll be able to make one fuck off bot <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"> Your heading down the right path, but your missing a few things.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/accessormethodsgen/52446/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/accessormethodsgen/52446/5</link>
        <pubDate>Sun, 28 Jan 2007 04:27:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-52446-5</guid>
        <source url="https://forum.moparisthebest.com/t/accessormethodsgen/52446.rss">AccessorMethodsGen</source>
      </item>
      <item>
        <title>AccessorMethodsGen</title>
        <dc:creator><![CDATA[@Ollie Ollie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ollie">@Ollie</a> wrote:</p>
          <blockquote>
              <p>ugly way of doing things, but hey if it works.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/accessormethodsgen/52446/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/accessormethodsgen/52446/4</link>
        <pubDate>Sun, 28 Jan 2007 03:05:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-52446-4</guid>
        <source url="https://forum.moparisthebest.com/t/accessormethodsgen/52446.rss">AccessorMethodsGen</source>
      </item>
      <item>
        <title>AccessorMethodsGen</title>
        <dc:creator><![CDATA[@Silver_Lining Silver Lining]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silver_lining">@Silver_Lining</a> wrote:</p>
          <blockquote>
              <p>Speaking of which, the names are a bit off right now. I’ll fix them.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/accessormethodsgen/52446/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/accessormethodsgen/52446/3</link>
        <pubDate>Sun, 28 Jan 2007 01:35:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-52446-3</guid>
        <source url="https://forum.moparisthebest.com/t/accessormethodsgen/52446.rss">AccessorMethodsGen</source>
      </item>
      <item>
        <title>AccessorMethodsGen</title>
        <dc:creator><![CDATA[@Portal Portal]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/portal">@Portal</a> wrote:</p>
          <blockquote>
              <p>That is assuming that the jar file is already on your computer in the bin directory and has the appropriate name applied in case someone doesnt understand it. Very nice add Silver Lining, I think I can learn from this.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/accessormethodsgen/52446/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/accessormethodsgen/52446/2</link>
        <pubDate>Sun, 28 Jan 2007 01:27:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-52446-2</guid>
        <source url="https://forum.moparisthebest.com/t/accessormethodsgen/52446.rss">AccessorMethodsGen</source>
      </item>
      <item>
        <title>AccessorMethodsGen</title>
        <dc:creator><![CDATA[@Silver_Lining Silver Lining]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silver_lining">@Silver_Lining</a> wrote:</p>
          <blockquote>
              <p>It’s been beautified so I’m no longer shamed by it. It doesn’t actually generate anything, it’ll just tell you the following: the NPC class, the entity class, the player class, and the string wrapper class. Thus far I’ve tested it on 421, 443, and 445.</p>
<p>[code=java]import org.apache.bcel.classfile.*;<br>
import java.util.jar.JarInputStream;<br>
import java.util.zip.ZipEntry;<br>
import java.io.FileInputStream;<br>
import java.io.File;<br>
import java.io.IOException;</p>
<p>public class AccessorMethodsGen{<br>
String entityclass = null;<br>
String npcclass = null;<br>
String stringwrapper = null;<br>
public static void main(String[] args){<br>
AccessorMethodsGen am = new AccessorMethodsGen();<br>
am.new StringWrapper();<br>
am.new NPC();<br>
am.new Player();<br>
}<br>
public class Player{<br>
String s = null;<br>
public Player(){<br>
try{<br>
JarInputStream jis = new JarInputStream(new FileInputStream(new File(“runescape.jar”)));<br>
ZipEntry ze;<br>
while((ze = jis.getNextEntry()) != null){<br>
if(ze.getName().endsWith(".class")){<br>
runCheck1(new ClassParser(jis, ze.getName()).parse());<br>
if(s != null){<br>
System.out.println(“Player class is “+s);<br>
return;<br>
}<br>
}<br>
}<br>
}<br>
catch(NullPointerException e){}<br>
catch(Exception e){ e.printStackTrace();}<br>
System.out.println(“Failed!”);<br>
}<br>
public void runCheck1(JavaClass jc){<br>
if(jc.getSuperclassName().equals(entityclass) &amp;&amp; !jc.getClassName().equals(npcclass)) s = jc.getClassName();<br>
}<br>
}<br>
public class StringWrapper{<br>
public StringWrapper(){<br>
try{<br>
JarInputStream jis = new JarInputStream(new FileInputStream(new File(“runescape.jar”)));<br>
ZipEntry ze;<br>
while((ze = jis.getNextEntry()) != null){<br>
if(ze.getName().endsWith(”.class”)){<br>
runCheck1(new ClassParser(jis, ze.getName()).parse());<br>
if(stringwrapper != null){<br>
System.out.println(“String wrapper class is “+ stringwrapper);<br>
return;<br>
}<br>
}<br>
}<br>
}<br>
catch(NullPointerException e){}<br>
catch(Exception e){ e.printStackTrace();}<br>
System.out.println(“Failed!”);<br>
}<br>
public void runCheck1(JavaClass jc){<br>
if(jc.getSuperclassName().endsWith(“Object”) &amp;&amp; !jc.isAbstract()){<br>
for(Method m : jc.getMethods()){<br>
if(m.getName().equals(“toString”)){<br>
for(Field f : jc.getFields()){<br>
if(f.getType().toString().equals(“byte[]”)) stringwrapper = jc.getClassName();<br>
}<br>
}<br>
}<br>
}<br>
}<br>
}<br>
public class NPC{<br>
public NPC(){<br>
try{<br>
JarInputStream jis = new JarInputStream(new FileInputStream(new File(“runescape.jar”)));<br>
ZipEntry ze;<br>
while((ze = jis.getNextEntry()) != null){<br>
if(ze.getName().endsWith(”.class”)){<br>
runCheck1(new ClassParser(jis, ze.getName()).parse());<br>
if(npcclass != null){<br>
System.out.println("NPC class is "+ npcclass);<br>
return;<br>
}<br>
}<br>
}<br>
}<br>
catch(NullPointerException e){}<br>
catch(Exception e){ e.printStackTrace();}<br>
System.out.println(“Failed!”);<br>
}<br>
public boolean runCheck1(JavaClass input){<br>
if(!input.getSuperclassName().endsWith(“Object”)){<br>
try{<br>
JarInputStream jis = new JarInputStream(new FileInputStream(new File(“runescape.jar”)));<br>
int nonStaticCount = 0;<br>
String s = “”;<br>
for(Field f : input.getFields()){<br>
if(!f.isStatic() &amp;&amp; !f.isPrivate()){<br>
nonStaticCount++;<br>
s += f.getType().toString();<br>
}<br>
}<br>
if(nonStaticCount == 1){<br>
try{<br>
if(getSubclasses(input) == 0 &amp;&amp; !input.getSuperclassName().endsWith(“Object”) &amp;&amp; input.getInterfaceNames().length == 0 &amp;&amp; s.length() &lt; 3 &amp;&amp; !s.equalsIgnoreCase(stringwrapper)){<br>
npcclass = input.getClassName();<br>
System.out.println(“Entity class is “+(entityclass = input.getSuperclassName()));<br>
return true;<br>
}<br>
}<br>
catch(Exception e){ e.printStackTrace(); return false; }<br>
}<br>
}<br>
catch(IOException e){}<br>
}<br>
return false;<br>
}<br>
public int getSubclasses(JavaClass jc){<br>
int i = 0;<br>
try{<br>
JarInputStream jis = new JarInputStream(new FileInputStream(new File(“runescape.jar”)));<br>
ZipEntry ze;<br>
while((ze = jis.getNextEntry()) != null){<br>
if(ze.getName().endsWith(”.class”)){<br>
JavaClass jav = new ClassParser(jis, ze.getName()).parse();<br>
if(jav.getSuperclassName().equals(jc.getClassName())) i++;<br>
}<br>
}<br>
}<br>
catch(IOException e){ return 0; }<br>
return i;<br>
}<br>
}<br>
}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/accessormethodsgen/52446/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/accessormethodsgen/52446/1</link>
        <pubDate>Sat, 27 Jan 2007 22:17:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-52446-1</guid>
        <source url="https://forum.moparisthebest.com/t/accessormethodsgen/52446.rss">AccessorMethodsGen</source>
      </item>
  </channel>
</rss>
