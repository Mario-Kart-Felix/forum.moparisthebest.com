<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Java Robot Class</title>
    <link>https://forum.moparisthebest.com/t/java-robot-class/357850</link>
    <description>Hey guys,

Forgive any technical stupidities/illiteracy on my part in advance.
I&#39;m considering using Java to create on my own, incredibly primitive bots to carry out simple tasks (for instance, simply to keep the user logged into RS) using the default Robot class. My main concern is whether or not Jagex can detect from where mouse or keyboard events originate (i.e. physically from a user and their peripherals, or from a different Java program or driver). This program would be run from the Eclipse IDE and would not send or retrieve any information in any form or any way.

Also, I would only assume that Jagex would have some kind of algorithm that detects suspicious events, like a user that clicks in the same pixel location repeatedly, same exact actions, etc. Confirmation of this would be helpful.

The idea is to use very primitive systems and programming to manipulate the game via the Robot class alone in a controlled and standardized applet environment. I can post the code of what I had in mind if requested. Just let me know if it&#39;d be helpful.

Thanks!</description>
    
    <lastBuildDate>Mon, 30 Aug 2010 23:01:11 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/java-robot-class/357850.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Java Robot Class</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>[quote=“Elestian, post:4, topic:357850”]So basically, aside from repetitive, suspicious behavior, using the Robot class to manipulate RS is wholly undetectable?[/quote]By “wholly undetectable” do you mean from Runescape or from anything?</p>
<p>Technically, you can interface with the actual mouse driver and query whether there are/were events to be dispatched and so on, and deduce from that whether it was an actual mouse event or a simple call to a system function, like win32’s “mouse_event” (which is what the Robot class undoubtedly does abstractly).</p>
<p>An easier, but much more invasive approach would be to inject a DLL into every process spawned. For already existing processes, you can register a global hook using the infamous “SetWindowsHookEx” function, which would in turn load the DLL into each process (as it is a global hook). Additionally, you can also insert a key into the “AppInit_DLLs” registry directory, which would attach the specified DLL(s) to any future new instance of any process. Once you’re in the actual process, you can hook the dozens of functions available in the system DLLs related to emulating mouse and/or key events.</p>
<p>As to whether it is detectable, yes, it is potentially detectable - but so is anything else. As for the Runescape-specific question, no. They don’t and most likely never will go to such an invasive extent, as they can have legal repercussions and mainly because implementing all these technicalities in a portable manner is way too time-consuming. Regardless, it’s always safer to run an unsigned client, as its privileges would be completely restricted, and performing actions like loading native libraries would not be allowed.</p>
<p>edit: Keep in mind, the methods I posted to actually finding out whether the mouse events were spoofed or not were directed towards native programs. For Java programs, there are a thousand other (and simpler) methods of detection. Of course, with the attach API and reflection being the prime alternative, there is really no need for anything else. You can also use the many available debugging/monitoring APIs and such, completely specific to the JVM. Or, go along with a simple Java agent and make use of the Instrumentation API. Or, write a native agent and use libraries like JVMTI. As you can see, the options are endless.</p>
<p>But as I said before, run the client within a sandbox and don’t worry about the input detectability, just the complex algorithms involved in making these sequence of events seem remotely humane.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-robot-class/357850/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-robot-class/357850/5</link>
        <pubDate>Mon, 30 Aug 2010 23:01:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357850-5</guid>
        <source url="https://forum.moparisthebest.com/t/java-robot-class/357850.rss">Java Robot Class</source>
      </item>
      <item>
        <title>Java Robot Class</title>
        <dc:creator><![CDATA[@Elestian Elestian]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/elestian">@Elestian</a> wrote:</p>
          <blockquote>
              <p>So basically, aside from repetitive, suspicious behavior, using the Robot class to manipulate RS is wholly undetectable?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-robot-class/357850/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-robot-class/357850/4</link>
        <pubDate>Mon, 30 Aug 2010 20:15:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357850-4</guid>
        <source url="https://forum.moparisthebest.com/t/java-robot-class/357850.rss">Java Robot Class</source>
      </item>
      <item>
        <title>Java Robot Class</title>
        <dc:creator><![CDATA[@eczema3 eczema3]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/eczema3">@eczema3</a> wrote:</p>
          <blockquote>
              <p>The robot class doesn’t send mouse events to an applet, it just moves the actual mouse.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-robot-class/357850/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-robot-class/357850/3</link>
        <pubDate>Mon, 30 Aug 2010 20:09:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357850-3</guid>
        <source url="https://forum.moparisthebest.com/t/java-robot-class/357850.rss">Java Robot Class</source>
      </item>
      <item>
        <title>Java Robot Class</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>jagex can likely detect it</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-robot-class/357850/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-robot-class/357850/2</link>
        <pubDate>Mon, 30 Aug 2010 20:05:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357850-2</guid>
        <source url="https://forum.moparisthebest.com/t/java-robot-class/357850.rss">Java Robot Class</source>
      </item>
      <item>
        <title>Java Robot Class</title>
        <dc:creator><![CDATA[@Elestian Elestian]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/elestian">@Elestian</a> wrote:</p>
          <blockquote>
              <p>Hey guys,</p>
<p>Forgive any technical stupidities/illiteracy on my part in advance.<br>
I’m considering using Java to create on my own, incredibly primitive bots to carry out simple tasks (for instance, simply to keep the user logged into RS) using the default Robot class. My main concern is whether or not Jagex can detect from where mouse or keyboard events originate (i.e. physically from a user and their peripherals, or from a different Java program or driver). This program would be run from the Eclipse IDE and would not send or retrieve any information in any form or any way.</p>
<p>Also, I would only assume that Jagex would have some kind of algorithm that detects suspicious events, like a user that clicks in the same pixel location repeatedly, same exact actions, etc. Confirmation of this would be helpful.</p>
<p>The idea is to use very primitive systems and programming to manipulate the game via the Robot class alone in a controlled and standardized applet environment. I can post the code of what I had in mind if requested. Just let me know if it’d be helpful.</p>
<p>Thanks!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-robot-class/357850/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-robot-class/357850/1</link>
        <pubDate>Mon, 30 Aug 2010 19:42:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357850-1</guid>
        <source url="https://forum.moparisthebest.com/t/java-robot-class/357850.rss">Java Robot Class</source>
      </item>
  </channel>
</rss>
