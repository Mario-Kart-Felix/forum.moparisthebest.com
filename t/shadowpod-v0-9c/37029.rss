<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>ShadowPod v0.9c</title>
    <link>https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029</link>
    <description>Hello. If I&#39;m going to stay, I should atleast contribute stuff. :P

A few months ago I wrote this sexy tool for &quot;packing&quot; a single class Java application.
You pass it your application, it [i]lightly[/i] encrypts your application and crafts a new launcher class, which decrypts and runs your application. The launcher class&#39; code should be greatly optimized and uses a complex control flow, so that decompilers fail to decompile it into Java. It is easily cracked, far from secure, but it&#39;s an easy way to protect a single class application from decompiling newbies. :D

No third party APIs were harmed.

[url=http://koti.mbnet.fi/jass0/Example.class]Example of a &quot;ShadowPodded&quot; class[/url]

[code]
 /* ShadowPod 0.9c

  * ShadowPod is a tool written in java that hides an encrypted copy of your java
  * application in an innocent dummy class, that works as a launcher to your application.
  * Copyright (C) 2006 k00dr

  * This program is free software; you can redistribute it and/or
  * modify it under the terms of the GNU General Public License
  * as published by the Free Software Foundation; either version 2
  * of the License, or (at your option) any later version.

  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.

  * You should have received a copy of the GNU General Public License
  * along with this program; if not, write to the Free Software
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

  */

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import java.util.Random;

public final class ShadowPod {

  private final byte[] buffer;
  private int offset;

  public ShadowPod() {
    buffer = new byte[0x10000 + 740];
    order = new int[43 + 1];
    traceback = new int[43 + 1];
    rand = new Random(System.nanoTime());
  }

  private final Random rand;
  private final int[] order, traceback;

  //randomizes the order of the constant pool entries
  private final void randomizeOrder() {
    Random r = rand;
    for(int i[] = order, j[] = traceback, k = 1, l, m, n = m = 0, o; k &lt;= 43; ) {
      while((l = 1 + r.nextInt(43)) == n || l == m);
      for(m = n, n = l, o = 1; o &lt;= k &amp;&amp; i[o++] != l; );
      if(o &gt; k)
        j[i[k] = l] = k++;
    }
  }

  //the actual &quot;packing&quot; method, returns the length of the written launcher class
  public final int pack(File src, File dest) throws IOException {

    int i, j = 0, k, m, n, o;
    long l;
    String s, name;

    //checking if the source file doesn&#39;t exist, if it&#39;s extension is not .class, 
    //if it&#39;s size exceeds the max size of an utf8 entry divided by two
    //or if the destination file extension is not .class
    if(!src.exists() || !src.getName().endsWith(&quot;.class&quot;) || (i = (int)src.length()) &gt; 0x7fff || !(name = dest.getName()).endsWith(&quot;.class&quot;))
      return 0;

    //drop the source file extension to make the dummy class name
    name = name.substring(0, name.length() - 6);

    //clear buffer
    clear();

    //magic
    putInt(0xcafebabe);

    //minor version
    putShort(0x0000);

    //major version
    putShort(0x0031);

    //constant pool length, reserved entry + this class&#39; entries
    putShort(1 + 43);

    //randomize constant pool order
    randomizeOrder();

    int[] cp = order, tb = traceback;

    //the constant entries
    for(n = 1; n &lt;= 43; ) {
      switch(cp[n++]) {

        case 1:
          putByte(0x01);
          putShort((s = &quot;File generated with ShadowPod (0.9c) by k00dr&quot;).length());
          putString(s);
          break;

        case 2:
          putByte(0x07);
          putShort(tb[3]);
          break;

        case 3:
          putByte(0x01);
          putShort(name.length());
          putString(name);
          break;

        case 4:
          putByte(0x07);
          putShort(tb[5]);
          break;

        case 5:
          putByte(0x01);
          putShort((s = &quot;java/lang/ClassLoader&quot;).length());
          putString(s);
          break;

        case 6:
          putByte(0x08);
          putShort(tb[7]);
          break;

        case 7:

          putByte(0x01);
          putShort(j = i &lt;&lt; 1);
          byte[] buf = buffer;
          FileInputStream in = new FileInputStream(src);
          for(k = (m = offset) + j; i &gt; 0; m += j)
            i -= j = in.read(buf, m, i);
          in.close();
          in = null;
          Random r = rand;
          for(j = k - offset, offset = k; k != m; ) {
            buf[--k] = (byte)(1 + r.nextInt(0x07) &lt;&lt; 4 | ((i = buf[--m]) &amp; 0x0f));
            buf[--k] = (byte)(1 + r.nextInt(0x07) &lt;&lt; 4 | (i &gt;&gt;&gt; 4 &amp; 0x0f));
          }
          break;

        case 8:
          putByte(0x01);
          putShort((s = &quot;&lt;init&gt;&quot;).length());
          putString(s);
          break;

        case 9:
          putByte(0x01);
          putShort((s = &quot;()V&quot;).length());
          putString(s);
          break;

        case 10:
          putByte(0x01);
          putShort((s = &quot;main&quot;).length());
          putString(s);
          break;

        case 11:
          putByte(0x01);
          putShort((s = &quot;([Ljava/lang/String;)V&quot;).length());
          putString(s);
          break;

        case 12:
          putByte(0x01);
          putShort((s = &quot;Code&quot;).length());
          putString(s);
          break;

        case 13:
          putByte(0x0a);
          putShort(tb[14]);
          putShort(tb[16]);
          break;

        case 14:
          putByte(0x07);
          putShort(tb[15]);
          break;

        case 15:
          putByte(0x01);
          putShort((s = &quot;java/lang/String&quot;).length());
          putString(s);
          break;

        case 16:
          putByte(0x0c);
          putShort(tb[17]);
          putShort(tb[18]);
          break;

        case 17:
          putByte(0x01);
          putShort((s = &quot;getBytes&quot;).length());
          putString(s);
          break;

        case 18:
          putByte(0x01);
          putShort((s = &quot;()[B&quot;).length());
          putString(s);
          break;

        case 19:
          putByte(0x0a);
          putShort(tb[2]);
          putShort(tb[21]);
          break;

        case 20:
          putByte(0x0a);
          putShort(tb[4]);
          putShort(tb[21]);
          break;

        case 21:
          putByte(0x0c);
          putShort(tb[8]);
          putShort(tb[9]);
          break;

        case 22:
          putByte(0x07);
          putShort(tb[23]);
          break;

        case 23:
          putByte(0x01);
          putShort((s = &quot;java/lang/Class&quot;).length());
          putString(s);
          break;

        case 24:
          putByte(0x0a);
          putShort(tb[22]);
          putShort(tb[25]);
          break;

        case 25:
          putByte(0x0c);
          putShort(tb[26]);
          putShort(tb[27]);
          break;

        case 26:
          putByte(0x01);
          putShort((s = &quot;getDeclaredMethod&quot;).length());
          putString(s);
          break;

        case 27:
          putByte(0x01);
          putShort((s = &quot;(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;&quot;).length());
          putString(s);
          break;

        case 28:
          putByte(0x0a);
          putShort(tb[4]);
          putShort(tb[29]);
          break;

        case 29:
          putByte(0x0c);
          putShort(tb[30]);
          putShort(tb[31]);
          break;

        case 30:
          putByte(0x01);
          putShort((s = &quot;defineClass&quot;).length());
          putString(s);
          break;

        case 31:
          putByte(0x01);
          putShort((s = &quot;([BII)Ljava/lang/Class;&quot;).length());
          putString(s);
          break;

        case 32:
          putByte(0x0a);
          putShort(tb[33]);
          putShort(tb[35]);
          break;

        case 33:
          putByte(0x07);
          putShort(tb[34]);
          break;

        case 34:
          putByte(0x01);
          putShort((s = &quot;java/lang/reflect/Method&quot;).length());
          putString(s);
          break;

        case 35:
          putByte(0x0c);
          putShort(tb[36]);
          putShort(tb[37]);
          break;

        case 36:
          putByte(0x01);
          putShort((s = &quot;invoke&quot;).length());
          putString(s);
          break;

        case 37:
          putByte(0x01);
          putShort((s = &quot;(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;&quot;).length());
          putString(s);
          break;

        case 38:
          putByte(0x08);
          putShort(tb[1]);
          break;

        case 39:
          putByte(0x07);
          putShort(tb[40]);
          break;

        case 40:
          putByte(0x01);
          putShort((s = &quot;[Ljava/lang/String;&quot;).length());
          putString(s);
          break;

        case 41:
          putByte(0x08);
          putShort(tb[10]);
          break;

        case 42:
          putByte(0x07);
          putShort(tb[43]);
          break;

        case 43:
          putByte(0x01);
          putShort((s = &quot;java/lang/Object&quot;).length());
          putString(s);
          break;

      }
    }

    //class accessflags, final + public
    putShort(0x0010 | 0x0001);

    //class name
    putShort(tb[2]);

    //superclass name
    putShort(tb[4]);

    //interfaces count
    putShort(0);

    //fields count
    putShort(0);

    //methods count
    putShort(2);

    //method accessflags, private
    putShort(0x0002);

    //method name index
    putShort(tb[8]);

    //method descriptor index
    putShort(tb[9]);

    //method attributes count
    putShort(1);

    //attribute name index
    putShort(tb[12]);

    //attribute length
    putInt(12 + 8);

    //max stack
    putShort(2);

    //max locals
    putShort(1);

    //code length
    putInt(8);

    //0: aload_0
    putByte(0x2a);

    //1: ldc
    putByte(0x12);
    putByte(tb[38]);

    //3: astore_0
    putByte(0x4b);

    //4: invokespecial void java.lang.ClassLoader.&lt;init&gt;();
    putByte(0xb7);
    putShort(tb[20]);

    //7: return
    putByte(0xb1);

    //exception table length
    putShort(0);

    //attributes count
    putShort(0);

    //method accessflags, final + static + public
    putShort(0x0010 | 0x0008 | 0x0001);

    //method name index
    putShort(tb[10]);

    //method descriptor index
    putShort(tb[11]);

    //method attributes count
    putShort(1);

    //attribute name index
    putShort(tb[12]);

    //attribute length
    putInt(12 + 101);

    //max stack
    putShort(8);

    //max locals
    putShort(3);

    //code length
    putInt(101);

    //0: aload_0
    putByte(0x2a);

    //1: astore_2
    putByte(0x4d);

    //2: new
    putByte(0xbb);
    putShort(tb[2]);

    //5: dup
    putByte(0x59);

    //6: invokespecial void CLASS.&lt;init&gt;()
    putByte(0xb7);
    putShort(tb[19]);

    //9: ldc
    putByte(0x12);
    putByte(tb[6]);

    //11: invokevirtual void java.lang.String.getBytes()
    putByte(0xb6);
    putShort(tb[13]);

    //14: iconst_0
    putByte(0x03);

    //15: dup
    putByte(0x59);

    //16: istore_0
    putByte(0x3b);

    //17: dup
    putByte(0x59);

    //18: sipush CLASS length
    putByte(0x11);
    putShort(j);

    //21: if_icmpeq
    putByte(0x9f);
    putShort(31);

    //24: dup2
    putByte(0x5c);

    //25: baload
    putByte(0x33);

    //26: iconst_4
    putByte(0x07);

    //27: ishl
    putByte(0x78);

    //28: istore_1
    putByte(0x3c);

    //29: iconst_1
    putByte(0x04);

    //30: iadd
    putByte(0x60);

    //31: dup2
    putByte(0x5c);

    //32: baload
    putByte(0x33);

    //33: bipush 0x0f
    putByte(0x10);
    putByte(0x0f);

    //35: iand
    putByte(0x7e);

    //36: iload_1
    putByte(0x1b);

    //37: ior
    putByte(0x80);

    //38: istore_1
    putByte(0x3c);

    //39: swap
    putByte(0x5f);

    //40: dup_x1
    putByte(0x5a);

    //41: iload_0
    putByte(0x1a);

    //42: iload_1
    putByte(0x1b);

    //43: bastore
    putByte(0x54);

    //44: iinc 0 1
    putByte(0x84);
    putByte(0);
    putByte(1);

    //47: iconst_1
    putByte(0x04);

    //48: iadd
    putByte(0x60);

    //49: goto
    putByte(0xa7);
    putShort(-32);

    //52: pop
    putByte(0x57);

    //53: iconst_0
    putByte(0x03);

    //54: sipush CLASS length
    putByte(0x11);
    putShort(j &gt;&gt;&gt; 1);

    //57: invokevirtual Class CLASS.defineClass(byte[], int, int)
    putByte(0xb6);
    putShort(tb[28]);

    //60: ldc
    putByte(0x12);
    putByte(tb[41]);

    //62: iconst_1
    putByte(0x04);

    //63: anewarray
    putByte(0xbd);
    putShort(tb[22]);

    //66: dup
    putByte(0x59);

    //67: iconst_0
    putByte(0x03);

    //68: ldc
    putByte(0x12);
    putByte(tb[39]);

    //70: aastore
    putByte(0x53);

    //71: invokevirtual java.lang.reflect.Method java.lang.Class.getDeclaredMethod(java.lang.String, java.lang.Class[])
    putByte(0xb6);
    putShort(tb[24]);

    //74: aconst_null
    putByte(0x01);

    //75: iconst_1
    putByte(0x04);

    //76: anewarray
    putByte(0xbd);
    putShort(tb[42]);

    //79: dup
    putByte(0x59);

    //80: iconst_0
    putByte(0x03);

    //81: dup
    putByte(0x59);

    //82: aload_2
    putByte(0x2c);

    //83: dup
    putByte(0x59);

    //84: ifnonnull
    putByte(0xc7);
    putShort(10);

    //87: pop
    putByte(0x57);

    //88: anewarray
    putByte(0xbd);
    putShort(tb[14]);

    //91: goto
    putByte(0xa7);
    putShort(5);

    //94: swap
    putByte(0x5f);

    //95: pop
    putByte(0x57);

    //96: aastore
    putByte(0x53);

    //97: invokevirtual java.lang.Object java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])
    putByte(0xb6);
    putShort(tb[32]);

    //100: return
    putByte(0xb1);

    //exception table length
    putShort(0);

    //attributes count
    putShort(0);

    //class attributes count
    putShort(1);

    //attribute name index
    putShort(tb[1]);

    //attribute length
    putInt(8);

    //creation time
    putInt((int)((l = System.currentTimeMillis()) &gt;&gt;&gt; 32));
    putInt((int)l);

    //write to file
    FileOutputStream out = new FileOutputStream(dest);
    out.write(buffer, 0, i = offset);
    out.close();

    return i;
  }

  //clears the buffer by resetting the offset
  private final void clear() {
    offset = 0;
  }

  //copies the least significant byte (big endian byte order) of the passed int to the buffer
  private final void putByte(int i) {
    int j;
    buffer[j = offset] = (byte)i;
    offset = j + 1;
  }

  //copies the two least significant bytes (big endian byte order) of the passed int to the buffer
  private final void putShort(int i) {
    byte[] buf;
    int j;
    (buf = buffer)[j = offset + 1] = (byte)i;
    buf[j - 1] = (byte)(i &gt;&gt;&gt; 8);
    offset = j + 1;
  }

  //copies all four bytes (big endian byte order) of the passed int to the buffer
  private final void putInt(int i) {
    byte[] buf;
    int j;
    (buf = buffer)[j = offset + 3] = (byte)i;
    buf[--j] = (byte)(i &gt;&gt;&gt;= 8);
    buf[--j] = (byte)(i &gt;&gt;&gt;= 8);
    buf[j - 1] = (byte)(i &gt;&gt;&gt; 8);
    offset = j + 3;
  }

  //copies the passed String value in bytes to the buffer
  private final void putString(String s) {
    int i, j;
    System.arraycopy(s.getBytes(), 0, buffer, i = offset, j = s.length());
    offset = i + j;
  }

}[/code]</description>
    
    <lastBuildDate>Wed, 20 Dec 2006 04:06:22 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>ShadowPod v0.9c</title>
        <dc:creator><![CDATA[@Javacisnotrecognized _^_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/javacisnotrecognized">@Javacisnotrecognized</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="5" data-topic="37029">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/javacisnotrecognized/40/5_6259e4fa9dfe0dec282fb0955bb1974c.png" class="avatar"> Javacisnotrecognized:</div>
<blockquote>
<p>I was able how to figure out how to decompile it <img src="https://forum.moparisthebest.com/images/emoji/twitter/frowning.png?v=6" title=":frowning:" class="emoji" alt=":frowning:"></p>
</blockquote>
</aside>
<p>Figured out how to decompile it, didn’t say I had actually done so.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/15</link>
        <pubDate>Wed, 20 Dec 2006 04:06:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-37029-15</guid>
        <source url="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029.rss">ShadowPod v0.9c</source>
      </item>
      <item>
        <title>ShadowPod v0.9c</title>
        <dc:creator><![CDATA[@k00dr k00dr]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/k00dr">@k00dr</a> wrote:</p>
          <blockquote>
              <p>Nope.</p>
<p>Earlier you said you had decompiled the class. <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=6" title=":smiley:" class="emoji" alt=":smiley:"> (I assumed you had cracked it)</p>
<p>I’m sorry for crushing your balls…<br>
No hard feelings, I just had to see behind that big ego of yours. <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=6" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/14</link>
        <pubDate>Wed, 20 Dec 2006 04:00:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-37029-14</guid>
        <source url="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029.rss">ShadowPod v0.9c</source>
      </item>
      <item>
        <title>ShadowPod v0.9c</title>
        <dc:creator><![CDATA[@Javacisnotrecognized _^_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/javacisnotrecognized">@Javacisnotrecognized</a> wrote:</p>
          <blockquote>
              <p>You mean</p>
<pre><code class="lang-auto">
 "lZ/&gt;[\032[. 00\020 0\023BP\020\"APZp``&amp;p0ASPi@ AT`@\0215@\030p !fpj0p!gp@aXpGp a" +
"v@'`Pai0\021P@`a\0273\020a` 1\"d,FJF\021G&amp;&amp;!\022\177FLf\021F&gt;&amp;'B\0375cw$\0272v)&amp;" +
"&gt;67#\033\020a`\020\020\03543v/&amp;\036\027SWT\026!&amp;~g$uv&amp;a\026,gU\026U@X``Qz q @ Fs" +
"LvI\026&gt;\026\0317\024C.01@P`cRX\"Y5fP\021 p0TtSV?FTfE@\021`PP_T\0346yvNfU4&gt;\027E" +
"&amp;]FB&amp;Ew\022UTV!6r\026l&amp;eP!P pd&amp;]V!VIvnpa0P\021vR\0305k\024&lt;&amp;:F\0217&amp;&amp;qR?\026&lt;6qv" +
"NFw\"/\0253gt\027R&amp;\031&amp;\036vW\023kBiE6\0201 0\020j%sV_7%G2&amp;SV5\024&amp;&amp;Iv,vEpapp0y" +
"68fI\023r'E\"~F*f!wFv1`, \020P+PP`,0g@p![P\034@ a, \020\021]0A0@@t6HfycrGU`W@PA&gt;" +
"pLPpQ_  bp q  a0\026jVaWVv!Ro6\034VQ\026nvgRo$oF2f:&amp;\025f3\027\024pa pb}5If?gEr`" +
"&amp;S7\022&amp;!vcv{6EF$r \026I7TB^rNR~rP$C&amp;,6!wc7#\024L&amp;oV\021&amp;dFegbr`ws\027 \026?6\037" +
"F6B`'DG2Fi6Sv;S\037R@s:e`P10P\021 fjv!\027VVQB\177F|&amp;\021F\036v\027R\177%3gi7cwd" +
"V\025&amp;-Pa@0\020s&amp;?W\025w\024`1\020`\021\025t,fJ6Q'vV!bO6y\026?bO\025\020'BVyfn\027" +
"te\023W$7bf5v1f-SK`!`@Q\023\026z\02617fFA\"ovY6\037R\177\025\020w\"\0269v^G$USg4" +
"'R&amp;%vaV]0q P`''0gbviF^wTv|6n@qp A5bhT&lt;&amp;*V\021gvv\021\"/V|\0261VNfGb_5SG\024grF9\026" +
"N6G\023{BYu&amp;\020`C!`\020 %@0`v@  `\020p@!p`QJ@@@7p 0x0``a PpiP0P   prp PjP`P\"0`" +
"PQ\020 Pk000&lt;\020`@Q0@P}@p@00pQ-0`pa\020\020 \021`\020P P0@u\022:+7ppP!{q\020PPP" +
"`@Pq@p`.@ P``@ \026@ @APP`P\020`@1 \020qY`@@_`@q0`0\020Qp\020@MpP@P` r%P0 \" p\020" +
"A\020 ``\020`\020i[R@0`RABpc{v0\020pTk!@P0\020`0@1PP`&gt;p 0` PPj0P r  P`PppD00\020" +
"h\020Pp%p0@q`p1\021@@0@P@P\"p@ab"
</code></pre>
<p>that? Would I waste my time converting that into a byte array, and then doing defineClass(byte[]).getDeclaredMethod(“main”, new Class[0]).invoke(“main”,new String[1]) ?</p>
<p>Sorry, I have other things to do.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/13</link>
        <pubDate>Wed, 20 Dec 2006 03:53:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-37029-13</guid>
        <source url="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029.rss">ShadowPod v0.9c</source>
      </item>
      <item>
        <title>ShadowPod v0.9c</title>
        <dc:creator><![CDATA[@k00dr k00dr]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/k00dr">@k00dr</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="11" data-topic="37029">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/javacisnotrecognized/40/5_6259e4fa9dfe0dec282fb0955bb1974c.png" class="avatar"> Javacisnotrecognized:</div>
<blockquote>
<p>Nice.</p>
</blockquote>
</aside>
<p>Thank you, but I’ll still continue crushing your balls. <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=6" title=":smiley:" class="emoji" alt=":smiley:"><br>
Did you get my message in the decompiled class?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/12</link>
        <pubDate>Wed, 20 Dec 2006 03:18:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-37029-12</guid>
        <source url="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029.rss">ShadowPod v0.9c</source>
      </item>
      <item>
        <title>ShadowPod v0.9c</title>
        <dc:creator><![CDATA[@Javacisnotrecognized _^_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/javacisnotrecognized">@Javacisnotrecognized</a> wrote:</p>
          <blockquote>
              <p>Nice.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/11</link>
        <pubDate>Wed, 20 Dec 2006 03:15:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-37029-11</guid>
        <source url="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029.rss">ShadowPod v0.9c</source>
      </item>
      <item>
        <title>ShadowPod v0.9c</title>
        <dc:creator><![CDATA[@k00dr k00dr]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/k00dr">@k00dr</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="8" data-topic="37029">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/javacisnotrecognized/40/5_6259e4fa9dfe0dec282fb0955bb1974c.png" class="avatar"> Javacisnotrecognized:</div>
<blockquote>
<p>Is it of any relation to <a href="http://www.syi.cc/viewtopic.php?pid=405068" data-bbcode="true" rel="nofollow noopener">this</a> ?</p>
</blockquote>
</aside>
<p>Well now that you got me, I’m the person. Heh Krich. <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/10</link>
        <pubDate>Wed, 20 Dec 2006 03:00:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-37029-10</guid>
        <source url="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029.rss">ShadowPod v0.9c</source>
      </item>
      <item>
        <title>ShadowPod v0.9c</title>
        <dc:creator><![CDATA[@Krichevskoy Krichevskoy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/krichevskoy">@Krichevskoy</a> wrote:</p>
          <blockquote>
              <p>l337, mister <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>I like seeing real coding around here again.</p>
<p>edit: aww, so much for subtlety.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/9</link>
        <pubDate>Wed, 20 Dec 2006 02:18:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-37029-9</guid>
        <source url="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029.rss">ShadowPod v0.9c</source>
      </item>
      <item>
        <title>ShadowPod v0.9c</title>
        <dc:creator><![CDATA[@Javacisnotrecognized _^_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/javacisnotrecognized">@Javacisnotrecognized</a> wrote:</p>
          <blockquote>
              <p>Is it of any relation to <a href="http://www.syi.cc/viewtopic.php?pid=405068" data-bbcode="true" rel="nofollow noopener">this</a> ?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/8</link>
        <pubDate>Wed, 20 Dec 2006 02:09:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-37029-8</guid>
        <source url="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029.rss">ShadowPod v0.9c</source>
      </item>
      <item>
        <title>ShadowPod v0.9c</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>Looks like something interesting to play with, nice job. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/7</link>
        <pubDate>Wed, 20 Dec 2006 01:50:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-37029-7</guid>
        <source url="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029.rss">ShadowPod v0.9c</source>
      </item>
      <item>
        <title>ShadowPod v0.9c</title>
        <dc:creator><![CDATA[@k00dr k00dr]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/k00dr">@k00dr</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="5" data-topic="37029">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/javacisnotrecognized/40/5_6259e4fa9dfe0dec282fb0955bb1974c.png" class="avatar"> Javacisnotrecognized:</div>
<blockquote>
<p>I was able how to figure out how to decompile it <img src="https://forum.moparisthebest.com/images/emoji/twitter/frowning.png?v=6" title=":frowning:" class="emoji" alt=":frowning:"></p>
</blockquote>
</aside>
<p>Therefore you got my message?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/6</link>
        <pubDate>Wed, 20 Dec 2006 01:31:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-37029-6</guid>
        <source url="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029.rss">ShadowPod v0.9c</source>
      </item>
      <item>
        <title>ShadowPod v0.9c</title>
        <dc:creator><![CDATA[@Javacisnotrecognized _^_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/javacisnotrecognized">@Javacisnotrecognized</a> wrote:</p>
          <blockquote>
              <p>I was able how to figure out how to decompile it <img src="https://forum.moparisthebest.com/images/emoji/twitter/frowning.png?v=6" title=":frowning:" class="emoji" alt=":frowning:"></p>
<p>But thanks for showing me this <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=6" title=":wink:" class="emoji" alt=":wink:"> [quote=“Ollie, post:2, topic:37029”]fucking leet &lt;3[/quote]</p>
<p>I will have to add an extension to the decompiler I’m making</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/5</link>
        <pubDate>Wed, 20 Dec 2006 01:18:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-37029-5</guid>
        <source url="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029.rss">ShadowPod v0.9c</source>
      </item>
      <item>
        <title>ShadowPod v0.9c</title>
        <dc:creator><![CDATA[@Pwnd Pwnd]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pwnd">@Pwnd</a> wrote:</p>
          <blockquote>
              <p>Ollie, stfu about rep.  Stop hanging out at Impshit.</p>
<p>Very nice job.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/4</link>
        <pubDate>Wed, 20 Dec 2006 01:11:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-37029-4</guid>
        <source url="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029.rss">ShadowPod v0.9c</source>
      </item>
      <item>
        <title>ShadowPod v0.9c</title>
        <dc:creator><![CDATA[@RLN RLN]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rln">@RLN</a> wrote:</p>
          <blockquote>
              <p>nice job <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/3</link>
        <pubDate>Tue, 19 Dec 2006 20:51:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-37029-3</guid>
        <source url="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029.rss">ShadowPod v0.9c</source>
      </item>
      <item>
        <title>ShadowPod v0.9c</title>
        <dc:creator><![CDATA[@Ollie Ollie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ollie">@Ollie</a> wrote:</p>
          <blockquote>
              <p>fucking leet &lt;3</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/2</link>
        <pubDate>Tue, 19 Dec 2006 17:28:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-37029-2</guid>
        <source url="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029.rss">ShadowPod v0.9c</source>
      </item>
      <item>
        <title>ShadowPod v0.9c</title>
        <dc:creator><![CDATA[@k00dr k00dr]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/k00dr">@k00dr</a> wrote:</p>
          <blockquote>
              <p>Hello. If I’m going to stay, I should atleast contribute stuff. <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<p>A few months ago I wrote this sexy tool for “packing” a single class Java application.<br>
You pass it your application, it <span class="bbcode-i">lightly</span> encrypts your application and crafts a new launcher class, which decrypts and runs your application. The launcher class’ code should be greatly optimized and uses a complex control flow, so that decompilers fail to decompile it into Java. It is easily cracked, far from secure, but it’s an easy way to protect a single class application from decompiling newbies. <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=6" title=":smiley:" class="emoji" alt=":smiley:"></p>
<p>No third party APIs were harmed.</p>
<p><a href="http://koti.mbnet.fi/jass0/Example.class" data-bbcode="true" rel="nofollow noopener">Example of a “ShadowPodded” class</a></p>
<p>[code]<br>
/* ShadowPod 0.9c</p>
<ul>
<li>
<p>ShadowPod is a tool written in java that hides an encrypted copy of your java</p>
</li>
<li>
<p>application in an innocent dummy class, that works as a launcher to your application.</p>
</li>
<li>
<p>Copyright © 2006 k00dr</p>
</li>
<li>
<p>This program is free software; you can redistribute it and/or</p>
</li>
<li>
<p>modify it under the terms of the GNU General Public License</p>
</li>
<li>
<p>as published by the Free Software Foundation; either version 2</p>
</li>
<li>
<p>of the License, or (at your option) any later version.</p>
</li>
<li>
<p>This program is distributed in the hope that it will be useful,</p>
</li>
<li>
<p>but WITHOUT ANY WARRANTY; without even the implied warranty of</p>
</li>
<li>
<p>MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</p>
</li>
<li>
<p>GNU General Public License for more details.</p>
</li>
<li>
<p>You should have received a copy of the GNU General Public License</p>
</li>
<li>
<p>along with this program; if not, write to the Free Software</p>
</li>
<li>
<p>Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.</p>
</li>
</ul>
<p>*/</p>
<p>import java.io.File;<br>
import java.io.FileInputStream;<br>
import java.io.FileOutputStream;<br>
import java.io.IOException;</p>
<p>import java.util.Random;</p>
<p>public final class ShadowPod {</p>
<p>private final byte[] buffer;<br>
private int offset;</p>
<p>public ShadowPod() {<br>
buffer = new byte[0x10000 + 740];<br>
order = new int[43 + 1];<br>
traceback = new int[43 + 1];<br>
rand = new Random(System.nanoTime());<br>
}</p>
<p>private final Random rand;<br>
private final int[] order, traceback;</p>
<p>//randomizes the order of the constant pool entries<br>
private final void randomizeOrder() {<br>
Random r = rand;<br>
for(int i[] = order, j[] = traceback, k = 1, l, m, n = m = 0, o; k &lt;= 43; ) {<br>
while((l = 1 + r.nextInt(43)) == n || l == m);<br>
for(m = n, n = l, o = 1; o &lt;= k &amp;&amp; i[o++] != l; );<br>
if(o &gt; k)<br>
j[i[k] = l] = k++;<br>
}<br>
}</p>
<p>//the actual “packing” method, returns the length of the written launcher class<br>
public final int pack(File src, File dest) throws IOException {</p>
<pre><code>int i, j = 0, k, m, n, o;
long l;
String s, name;

//checking if the source file doesn't exist, if it's extension is not .class, 
//if it's size exceeds the max size of an utf8 entry divided by two
//or if the destination file extension is not .class
if(!src.exists() || !src.getName().endsWith(".class") || (i = (int)src.length()) &gt; 0x7fff || !(name = dest.getName()).endsWith(".class"))
  return 0;

//drop the source file extension to make the dummy class name
name = name.substring(0, name.length() - 6);

//clear buffer
clear();

//magic
putInt(0xcafebabe);

//minor version
putShort(0x0000);

//major version
putShort(0x0031);

//constant pool length, reserved entry + this class' entries
putShort(1 + 43);

//randomize constant pool order
randomizeOrder();

int[] cp = order, tb = traceback;

//the constant entries
for(n = 1; n &lt;= 43; ) {
  switch(cp[n++]) {

    case 1:
      putByte(0x01);
      putShort((s = "File generated with ShadowPod (0.9c) by k00dr").length());
      putString(s);
      break;

    case 2:
      putByte(0x07);
      putShort(tb[3]);
      break;

    case 3:
      putByte(0x01);
      putShort(name.length());
      putString(name);
      break;

    case 4:
      putByte(0x07);
      putShort(tb[5]);
      break;

    case 5:
      putByte(0x01);
      putShort((s = "java/lang/ClassLoader").length());
      putString(s);
      break;

    case 6:
      putByte(0x08);
      putShort(tb[7]);
      break;

    case 7:

      putByte(0x01);
      putShort(j = i &lt;&lt; 1);
      byte[] buf = buffer;
      FileInputStream in = new FileInputStream(src);
      for(k = (m = offset) + j; i &gt; 0; m += j)
        i -= j = in.read(buf, m, i);
      in.close();
      in = null;
      Random r = rand;
      for(j = k - offset, offset = k; k != m; ) {
        buf[--k] = (byte)(1 + r.nextInt(0x07) &lt;&lt; 4 | ((i = buf[--m]) &amp; 0x0f));
        buf[--k] = (byte)(1 + r.nextInt(0x07) &lt;&lt; 4 | (i &gt;&gt;&gt; 4 &amp; 0x0f));
      }
      break;

    case 8:
      putByte(0x01);
      putShort((s = "&lt;init&gt;").length());
      putString(s);
      break;

    case 9:
      putByte(0x01);
      putShort((s = "()V").length());
      putString(s);
      break;

    case 10:
      putByte(0x01);
      putShort((s = "main").length());
      putString(s);
      break;

    case 11:
      putByte(0x01);
      putShort((s = "([Ljava/lang/String;)V").length());
      putString(s);
      break;

    case 12:
      putByte(0x01);
      putShort((s = "Code").length());
      putString(s);
      break;

    case 13:
      putByte(0x0a);
      putShort(tb[14]);
      putShort(tb[16]);
      break;

    case 14:
      putByte(0x07);
      putShort(tb[15]);
      break;

    case 15:
      putByte(0x01);
      putShort((s = "java/lang/String").length());
      putString(s);
      break;

    case 16:
      putByte(0x0c);
      putShort(tb[17]);
      putShort(tb[18]);
      break;

    case 17:
      putByte(0x01);
      putShort((s = "getBytes").length());
      putString(s);
      break;

    case 18:
      putByte(0x01);
      putShort((s = "()[B").length());
      putString(s);
      break;

    case 19:
      putByte(0x0a);
      putShort(tb[2]);
      putShort(tb[21]);
      break;

    case 20:
      putByte(0x0a);
      putShort(tb[4]);
      putShort(tb[21]);
      break;

    case 21:
      putByte(0x0c);
      putShort(tb[8]);
      putShort(tb[9]);
      break;

    case 22:
      putByte(0x07);
      putShort(tb[23]);
      break;

    case 23:
      putByte(0x01);
      putShort((s = "java/lang/Class").length());
      putString(s);
      break;

    case 24:
      putByte(0x0a);
      putShort(tb[22]);
      putShort(tb[25]);
      break;

    case 25:
      putByte(0x0c);
      putShort(tb[26]);
      putShort(tb[27]);
      break;

    case 26:
      putByte(0x01);
      putShort((s = "getDeclaredMethod").length());
      putString(s);
      break;

    case 27:
      putByte(0x01);
      putShort((s = "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;").length());
      putString(s);
      break;

    case 28:
      putByte(0x0a);
      putShort(tb[4]);
      putShort(tb[29]);
      break;

    case 29:
      putByte(0x0c);
      putShort(tb[30]);
      putShort(tb[31]);
      break;

    case 30:
      putByte(0x01);
      putShort((s = "defineClass").length());
      putString(s);
      break;

    case 31:
      putByte(0x01);
      putShort((s = "([BII)Ljava/lang/Class;").length());
      putString(s);
      break;

    case 32:
      putByte(0x0a);
      putShort(tb[33]);
      putShort(tb[35]);
      break;

    case 33:
      putByte(0x07);
      putShort(tb[34]);
      break;

    case 34:
      putByte(0x01);
      putShort((s = "java/lang/reflect/Method").length());
      putString(s);
      break;

    case 35:
      putByte(0x0c);
      putShort(tb[36]);
      putShort(tb[37]);
      break;

    case 36:
      putByte(0x01);
      putShort((s = "invoke").length());
      putString(s);
      break;

    case 37:
      putByte(0x01);
      putShort((s = "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;").length());
      putString(s);
      break;

    case 38:
      putByte(0x08);
      putShort(tb[1]);
      break;

    case 39:
      putByte(0x07);
      putShort(tb[40]);
      break;

    case 40:
      putByte(0x01);
      putShort((s = "[Ljava/lang/String;").length());
      putString(s);
      break;

    case 41:
      putByte(0x08);
      putShort(tb[10]);
      break;

    case 42:
      putByte(0x07);
      putShort(tb[43]);
      break;

    case 43:
      putByte(0x01);
      putShort((s = "java/lang/Object").length());
      putString(s);
      break;

  }
}

//class accessflags, final + public
putShort(0x0010 | 0x0001);

//class name
putShort(tb[2]);

//superclass name
putShort(tb[4]);

//interfaces count
putShort(0);

//fields count
putShort(0);

//methods count
putShort(2);

//method accessflags, private
putShort(0x0002);

//method name index
putShort(tb[8]);

//method descriptor index
putShort(tb[9]);

//method attributes count
putShort(1);

//attribute name index
putShort(tb[12]);

//attribute length
putInt(12 + 8);

//max stack
putShort(2);

//max locals
putShort(1);

//code length
putInt(8);

//0: aload_0
putByte(0x2a);

//1: ldc
putByte(0x12);
putByte(tb[38]);

//3: astore_0
putByte(0x4b);

//4: invokespecial void java.lang.ClassLoader.&lt;init&gt;();
putByte(0xb7);
putShort(tb[20]);

//7: return
putByte(0xb1);

//exception table length
putShort(0);

//attributes count
putShort(0);

//method accessflags, final + static + public
putShort(0x0010 | 0x0008 | 0x0001);

//method name index
putShort(tb[10]);

//method descriptor index
putShort(tb[11]);

//method attributes count
putShort(1);

//attribute name index
putShort(tb[12]);

//attribute length
putInt(12 + 101);

//max stack
putShort(8);

//max locals
putShort(3);

//code length
putInt(101);

//0: aload_0
putByte(0x2a);

//1: astore_2
putByte(0x4d);

//2: new
putByte(0xbb);
putShort(tb[2]);

//5: dup
putByte(0x59);

//6: invokespecial void CLASS.&lt;init&gt;()
putByte(0xb7);
putShort(tb[19]);

//9: ldc
putByte(0x12);
putByte(tb[6]);

//11: invokevirtual void java.lang.String.getBytes()
putByte(0xb6);
putShort(tb[13]);

//14: iconst_0
putByte(0x03);

//15: dup
putByte(0x59);

//16: istore_0
putByte(0x3b);

//17: dup
putByte(0x59);

//18: sipush CLASS length
putByte(0x11);
putShort(j);

//21: if_icmpeq
putByte(0x9f);
putShort(31);

//24: dup2
putByte(0x5c);

//25: baload
putByte(0x33);

//26: iconst_4
putByte(0x07);

//27: ishl
putByte(0x78);

//28: istore_1
putByte(0x3c);

//29: iconst_1
putByte(0x04);

//30: iadd
putByte(0x60);

//31: dup2
putByte(0x5c);

//32: baload
putByte(0x33);

//33: bipush 0x0f
putByte(0x10);
putByte(0x0f);

//35: iand
putByte(0x7e);

//36: iload_1
putByte(0x1b);

//37: ior
putByte(0x80);

//38: istore_1
putByte(0x3c);

//39: swap
putByte(0x5f);

//40: dup_x1
putByte(0x5a);

//41: iload_0
putByte(0x1a);

//42: iload_1
putByte(0x1b);

//43: bastore
putByte(0x54);

//44: iinc 0 1
putByte(0x84);
putByte(0);
putByte(1);

//47: iconst_1
putByte(0x04);

//48: iadd
putByte(0x60);

//49: goto
putByte(0xa7);
putShort(-32);

//52: pop
putByte(0x57);

//53: iconst_0
putByte(0x03);

//54: sipush CLASS length
putByte(0x11);
putShort(j &gt;&gt;&gt; 1);

//57: invokevirtual Class CLASS.defineClass(byte[], int, int)
putByte(0xb6);
putShort(tb[28]);

//60: ldc
putByte(0x12);
putByte(tb[41]);

//62: iconst_1
putByte(0x04);

//63: anewarray
putByte(0xbd);
putShort(tb[22]);

//66: dup
putByte(0x59);

//67: iconst_0
putByte(0x03);

//68: ldc
putByte(0x12);
putByte(tb[39]);

//70: aastore
putByte(0x53);

//71: invokevirtual java.lang.reflect.Method java.lang.Class.getDeclaredMethod(java.lang.String, java.lang.Class[])
putByte(0xb6);
putShort(tb[24]);

//74: aconst_null
putByte(0x01);

//75: iconst_1
putByte(0x04);

//76: anewarray
putByte(0xbd);
putShort(tb[42]);

//79: dup
putByte(0x59);

//80: iconst_0
putByte(0x03);

//81: dup
putByte(0x59);

//82: aload_2
putByte(0x2c);

//83: dup
putByte(0x59);

//84: ifnonnull
putByte(0xc7);
putShort(10);

//87: pop
putByte(0x57);

//88: anewarray
putByte(0xbd);
putShort(tb[14]);

//91: goto
putByte(0xa7);
putShort(5);

//94: swap
putByte(0x5f);

//95: pop
putByte(0x57);

//96: aastore
putByte(0x53);

//97: invokevirtual java.lang.Object java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])
putByte(0xb6);
putShort(tb[32]);

//100: return
putByte(0xb1);

//exception table length
putShort(0);

//attributes count
putShort(0);

//class attributes count
putShort(1);

//attribute name index
putShort(tb[1]);

//attribute length
putInt(8);

//creation time
putInt((int)((l = System.currentTimeMillis()) &gt;&gt;&gt; 32));
putInt((int)l);

//write to file
FileOutputStream out = new FileOutputStream(dest);
out.write(buffer, 0, i = offset);
out.close();

return i;
</code></pre>
<p>}</p>
<p>//clears the buffer by resetting the offset<br>
private final void clear() {<br>
offset = 0;<br>
}</p>
<p>//copies the least significant byte (big endian byte order) of the passed int to the buffer<br>
private final void putByte(int i) {<br>
int j;<br>
buffer[j = offset] = (byte)i;<br>
offset = j + 1;<br>
}</p>
<p>//copies the two least significant bytes (big endian byte order) of the passed int to the buffer<br>
private final void putShort(int i) {<br>
byte[] buf;<br>
int j;<br>
(buf = buffer)[j = offset + 1] = (byte)i;<br>
buf[j - 1] = (byte)(i &gt;&gt;&gt; 8);<br>
offset = j + 1;<br>
}</p>
<p>//copies all four bytes (big endian byte order) of the passed int to the buffer<br>
private final void putInt(int i) {<br>
byte[] buf;<br>
int j;<br>
(buf = buffer)[j = offset + 3] = (byte)i;<br>
buf[–j] = (byte)(i &gt;&gt;&gt;= 8);<br>
buf[–j] = (byte)(i &gt;&gt;&gt;= 8);<br>
buf[j - 1] = (byte)(i &gt;&gt;&gt; 8);<br>
offset = j + 3;<br>
}</p>
<p>//copies the passed String value in bytes to the buffer<br>
private final void putString(String s) {<br>
int i, j;<br>
System.arraycopy(s.getBytes(), 0, buffer, i = offset, j = s.length());<br>
offset = i + j;<br>
}</p>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029/1</link>
        <pubDate>Tue, 19 Dec 2006 10:58:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-37029-1</guid>
        <source url="https://forum.moparisthebest.com/t/shadowpod-v0-9c/37029.rss">ShadowPod v0.9c</source>
      </item>
  </channel>
</rss>
