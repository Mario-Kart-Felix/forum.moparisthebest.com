<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>StringBuilders</title>
    <link>https://forum.moparisthebest.com/t/stringbuilders/414503</link>
    <description>My dad used Jprofiler and ran it through Eclipse, to see where the memory is being used the most.. and it&#39;s in this file.

My dad is gonna look at it tomorrow.  It&#39;s using an Stringbuilder for some reason, and he&#39;s gonna find a way to either counteract all the strings being built even though no players are online, or rewrite the file.
[code=java]package server.world.map;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.Iterator;


public class I
{

    public I()
    {
    }

    public static final void I(boolean flag)
    {
        try
        {
            if(flag)
            {
                B.I();
                containsKey();
                close();
                equals = null;
                get = null;
                for(int i = 0; i &lt; 10331; i++)
                    if(VirtualWorld.I[i].size() &lt;= 0)
                        VirtualWorld.I[i] = null;

            }
        }
        catch(Exception exception)
        {
            exception.printStackTrace();
        }
    }

    private static int KKLI(int i)
    {
        return equals[i];
    }

    private static int add(int i)
    {
        return get[i];
    }

    public static final int append(int i, int j)
    {
        int k = i + j;
        if(k &lt;= 3 &amp;&amp; k &gt;= 0)
            return k;
        if(k &gt; 3)
        {
            int l = k - 4;
            k = l;
        } else
        if(k &lt; 0)
        {
			int i1 = k + 4;
            k = k;
        }
        return k;
    }

    private static void close()
    {
        RandomAccessFile randomaccessfile = null;
        int i = 0;
        byte byte0 = 70;
        byte abyte0[] = null;
        int j = 0;
        long l = System.currentTimeMillis();
        try
        {
            randomaccessfile = new RandomAccessFile(&quot;./Data/worldmap.bin&quot;, &quot;r&quot;);
            abyte0 = new byte[(int)randomaccessfile.length()];
            randomaccessfile.read(abyte0, 0, (int)randomaccessfile.length());
            randomaccessfile.close();
        }
        catch(Exception exception)
        {
            exception.printStackTrace();
        }
        long l1 = System.currentTimeMillis() - l;
        System.out.println((new StringBuilder()).append(&quot;Loaded WorldMap In (&quot;).append(l1).append(&quot; ms)... &quot;).toString());
        for(int k = 0; k &lt; B.j[0]; k++)
        {
            int i1 = 0;
            int j1 = 0;
            int k1 = 0;
            int i2 = 0;
            int j2 = 0;
            int k2 = 0;
            int l2 = 0;
            try
            {
                i1 = (abyte0[j++] &amp; 0xff) &lt;&lt; B.j[2] | abyte0[j++] &amp; 0xff;
                j1 = (abyte0[j++] &amp; 0xff) &lt;&lt; B.j[2] | abyte0[j++] &amp; 0xff;
                k1 = (abyte0[j++] &amp; 0xff) &lt;&lt; B.j[2] | abyte0[j++] &amp; 0xff;
                i2 = abyte0[j++] &amp; 0xff;
                j2 = abyte0[j++] &amp; 0xff;
                l2 = k2 = abyte0[j++] &amp; 0xff;
            }
            catch(Exception exception1)
            {
                exception1.printStackTrace();
            }
            int i3 = 0;
            int j3 = 0;
            boolean flag = false;
            if(j2 &gt;= B.j[3] &amp;&amp; j2 &lt;= B.j[4] || j2 == B.j[5])
                continue;
            Z az[] = new Z[byte0];
            int ai[] = new int[byte0];
            int k3 = add(i1);
            int l3 = KKLI(i1);
            byte byte1 = -1;
            for(int i4 = 0; i4 &lt; byte0; i4++)
                ai[i4] = -1;

            if(j2 &lt;= 5)
            {
                if(j2 == B.j[10])
                {
                    if(k2 == 0)
                        k2 = B.j[6];
                    else
                    if(k2 == 1)
                        k2 = B.j[7];
                    else
                    if(k2 == 2)
                        k2 = B.j[8];
                    else
                    if(k2 == 3)
                        k2 = B.j[9];
                    else
                        System.out.println((new StringBuilder()).append(&quot;Invalid face: &quot;).append(k2).toString());
                } else
                if(j2 == B.j[11])
                {
                    if(k2 == 0)
                    {
                        k2 = -1;
                        j1++;
                    } else
                    if(k2 == 1)
                    {
                        k2 = -1;
                        k1++;
                    } else
                    if(k2 == 2)
                    {
                        k2 = -1;
                        j1++;
                    } else
                    if(k2 == 3)
                    {
                        k2 = -1;
                        k1++;
                    } else
                    {
                        System.out.println((new StringBuilder()).append(&quot;Invalid face: &quot;).append(k2).toString());
                    }
                } else
                if(j2 == B.j[12])
                {
                    if(k2 == 0)
                        k2 = -1;
                    else
                    if(k2 == 1)
                        k2 = -1;
                    else
                    if(k2 == 2)
                        k2 = -1;
                    else
                    if(k2 == 3)
                        k2 = -1;
                    else
                        System.out.println((new StringBuilder()).append(&quot;Invalid face: &quot;).append(k2).toString());
                } else
                if(j2 == B.j[14])
                {
                    if(k2 == 0)
                        k2 = B.j[14];
                    else
                    if(k2 == 1)
                        k2 = 0;
                    else
                    if(k2 == 2)
                        k2 = 12;
                    else
                    if(k2 == 3)
                        k2 = 8;
                    else
                        System.out.println((new StringBuilder()).append(&quot;Invalid face: &quot;).append(k2).toString());
                } else
                if(j2 == B.j[15] || j2 == B.j[13])
                {
                    k2 = -1;
                    flag = true;
                } else
                if(j2 &gt;= B.j[16] &amp;&amp; j2 &lt;= B.j[19])
                    k2 = -1;
            } else
            {
                if((k2 == 0 || k2 == 2) &amp;&amp; j2 &gt;= 10)
                {
                    int j4 = k3;
                    k3 = l3;
                    l3 = j4;
                }
                k2 = -1;
            }
            int k4 = k2;
            if(i1 == 9374 || i1 == 4513 || i1 &gt;= 4518 &amp;&amp; i1 &lt;= 4520 || i1 &gt;= 5122 &amp;&amp; i1 &lt;= 5125 || i1 == 5112 || i1 &gt;= 1140 &amp;&amp; i1 &lt;= 1205 || i1 &gt;= 4735 &amp;&amp; i1 &lt;= 4740 || i1 &lt;= 1299 &amp;&amp; i1 &gt;= 1298 || i1 == 1174 || i1 &gt;= 446 &amp;&amp; i1 &lt;= 447 || i1 &gt;= 1240 &amp;&amp; i1 &lt;= 1265 || i1 &gt;= 950 &amp;&amp; i1 &lt;= 953 || i1 &gt;= 4342 &amp;&amp; i1 &lt;= 4345 || i1 &gt;= 3948 &amp;&amp; i1 &lt;= 3950 || i1 == 1032 || i1 == 4436 || i1 == 4446 || i1 == 4447)
            {
                flag = true;
                i3 = 1;
            } else
            if(i1 == 5113 || i1 &gt;= 471 &amp;&amp; i1 &lt;= 474 || i1 == 1161 || i1 == 312 || i1 == 1341 || i1 &gt;= 312 &amp;&amp; i1 &lt;= 313 || i1 == 1341 || i1 == 336 || i1 == 11603 || i1 &gt;= 11930 &amp;&amp; i1 &lt;= 11945 || i1 == 11629 || i1 == 9623 || i1 == 1392 || i1 == 1394 || i1 &gt;= 980 &amp;&amp; i1 &lt;= 982 || i1 == 1297 || i1 == 9375)
                i3 = 1;
            else
            if(j1 &lt;= 2425 &amp;&amp; k1 &lt;= 3091 &amp;&amp; j1 &gt;= 2411 &amp;&amp; k1 &gt;= 3085 || j1 &gt;= 2413 &amp;&amp; k1 &gt;= 3074 &amp;&amp; j1 &lt;= 2417 &amp;&amp; k1 &lt;= 3084 || j1 &gt;= 2374 &amp;&amp; k1 &gt;= 3116 &amp;&amp; j1 &lt;= 2387 &amp;&amp; k1 &lt;= 3122 || j1 &lt;= 2386 &amp;&amp; k1 &lt;= 3133 &amp;&amp; j1 &gt;= 2382 &amp;&amp; k1 &gt;= 3122)
                i3 = 1;
            else
            if(i1 &gt;= 6716 &amp;&amp; i1 &lt;= 6750)
                k4 = -1;
            if(!flag)
                if(k3 &gt;= 2 || l3 &gt;= 2)
                {
                    for(int l4 = 0; l4 &lt; k3; l4++)
                    {
                        for(int i5 = 0; i5 &lt; l3; i5++)
                            az[j3++] = new Z(j1 + l4, k1 + i5, i2, i3);

                    }

                } else
                {
                    if(k4 != -1)
                        if(k4 == B.j[20])
                        {
                            ai[j3] = 0;
                            az[j3++] = new Z(j1, k1 - 1, i2, i3);
                            byte1 = 0;
                        } else
                        if(k4 == B.j[21])
                        {
                            ai[j3] = 4;
                            az[j3++] = new Z(j1 + 1, k1, i2, i3);
                            byte1 = 12;
                        } else
                        if(k4 == B.j[22])
                        {
                            ai[j3] = 8;
                            az[j3++] = new Z(j1, k1 + 1, i2, i3);
                            byte1 = 8;
                        } else
                        if(k4 == B.j[23])
                        {
                            ai[j3] = 12;
                            az[j3++] = new Z(j1 - 1, k1, i2, i3);
                            byte1 = 4;
                        } else
                        if(k4 != 2 &amp;&amp; k4 != 6 &amp;&amp; k4 != 14)
                            if(k4 != 10);
                    az[j3++] = new Z(j1, k1, i2, i3);
                }
            byte byte2 = -1;
            int j5 = contains(j1, k1);
            for(int k5 = 0; k5 &lt; j3; k5++)
            {
                if(byte1 != -1 &amp;&amp; k5 == 1)
                    k4 = byte1;
                if(VirtualWorld.I[j5].containsKey(az[k5]))
                {
                    C c1 = (C)VirtualWorld.I[j5].get(az[k5]);
                    ArrayList&lt;Integer&gt; arraylist1 = new ArrayList&lt;Integer&gt;();
                    int l5;
                    for(Iterator iterator = c1.I.iterator(); iterator.hasNext(); arraylist1.add(Integer.valueOf(l5)))
                        l5 = ((Integer)iterator.next()).intValue();

                    if(arraylist1.contains(Integer.valueOf(k4)))
                        continue;
                    ArrayList&lt;Integer&gt; arraylist2 = new ArrayList&lt;Integer&gt;();
                    if(!arraylist1.contains(Integer.valueOf(-1)))
                    {
                        Iterator&lt;Integer&gt; iterator1 = arraylist1.iterator();
                        do
                        {
                            if(!iterator1.hasNext())
                                break;
                            int i6 = iterator1.next().intValue();
                            if(!arraylist2.contains(Integer.valueOf(i6)))
                                arraylist2.add(Integer.valueOf(i6));
                        } while(true);
                        arraylist2.add(Integer.valueOf(k4));
                    } else
                    {
                        arraylist2.add(Integer.valueOf(-1));
                    }
                    C c3 = new C(arraylist2, l2);
                    VirtualWorld.I[j5].remove(az[k5]);
                    VirtualWorld.I[j5].put(az[k5], c3);
                    i++;
                } else
                {
                    ArrayList&lt;Integer&gt; arraylist = new ArrayList&lt;Integer&gt;();
                    arraylist.add(Integer.valueOf(k4));
                    C c2 = new C(arraylist, l2);
                    VirtualWorld.I[j5].put(az[k5], c2);
                    i++;
                }
            }

            az = null;
            ai = null;
        }

        l1 = System.currentTimeMillis() - l;
        System.out.println((new StringBuilder()).append(&quot;	-Fully Processed in (&quot;).append(l1).append(&quot; ms)... &quot;).toString());
        System.out.println((new StringBuilder()).append(&quot;	-Loaded &quot;).append(i).append(&quot; world objects&quot;).toString());
        abyte0 = null;
        randomaccessfile = null;
    }

    //(futureX, futureY)
    public static final int contains(int futureX, int futureY)
    {
        String s = (new StringBuilder()).append(futureY / 100).append(&quot;&quot;).append(futureX / 100).toString();
        int k = Integer.parseInt(s);
        if(k &gt; hasNext)
            hasNext = k;
        return k;
    }

    public static final void containsKey()
    {
        equals = new byte[B.j[24]];
        get = new byte[B.j[24]];
        String s = &quot;&quot;;
        String s1 = &quot;&quot;;
        String s3 = &quot;&quot;;
        String s5 = &quot;&quot;;
        String as[] = new String[10];
        boolean flag = false;
        BufferedReader bufferedreader = null;
        try
        {
            bufferedreader = new BufferedReader(new FileReader(&quot;./Data/objectSize.cfg&quot;));
        }
        catch(FileNotFoundException filenotfoundexception)
        {
            filenotfoundexception.printStackTrace();
            return;
        }
        try
        {
            s = bufferedreader.readLine();
        }
        catch(IOException ioexception)
        {
            ioexception.printStackTrace();
            return;
        }
        while(!flag &amp;&amp; s != null) 
        {
            s = s.trim();
            int i = s.indexOf(&quot;=&quot;);
            if(i &gt; -1)
            {
                String s2 = s.substring(0, i);
                s2 = s2.trim();
                String s4 = s.substring(i + 1);
                s4 = s4.trim();
                String s6 = s4.replaceAll(&quot;		&quot;, &quot;	&quot;);
                s6 = s6.replaceAll(&quot;		&quot;, &quot;	&quot;);
                s6 = s6.replaceAll(&quot;		&quot;, &quot;	&quot;);
                s6 = s6.replaceAll(&quot;		&quot;, &quot;	&quot;);
                s6 = s6.replaceAll(&quot;		&quot;, &quot;	&quot;);
                String as1[] = s6.split(&quot;	&quot;);
                if(s2.startsWith(&quot;object&quot;))
                {
                    int j = Integer.parseInt(as1[0]);
                    String s7 = as1[2];
                    String as2[] = s7.split(&quot;x&quot;);
                    equals[j] = (byte)Integer.parseInt(as2[0]);
                    get[j] = (byte)Integer.parseInt(as2[1]);
                }
            } else
            if(s.equals(&quot;[END]&quot;))
            {
                try
                {
                    bufferedreader.close();
                }
                catch(IOException ioexception2) { }
                return;
            }
            try
            {
                s = bufferedreader.readLine();
            }
            catch(IOException ioexception3)
            {
                flag = true;
            }
        }
        try
        {
            bufferedreader.close();
        }
        catch(IOException ioexception1) { }
    }

    public static final int currentTimeMillis(int i, int j, int k)
    {
        Z z = new Z(i, j, k, 0);
        int l = contains(i, j);
        if(VirtualWorld.I[l] == null)
            return -1;
        if(VirtualWorld.I[l].containsKey(z))
        {
            C c1 = (C)VirtualWorld.I[l].get(z);
            return c1.Z;
        } else
        {
            return -1;
        }
    }
    
    //(int height, int currentX, int currentY, int futureX, int futureY, int a)
    public static final boolean I(int height, int currentX, int currentY, int futureX, int futureY, int j1)
    {
        if(currentY == futureX &amp;&amp; currentY == futureY)
            return true;
        Z z = new Z(futureX, futureY, height, 0);
        Z z1 = new Z(futureX, futureY, height, 1);
        int k1 = contains(futureX, futureY);
        int l1 = equals(currentX, currentY, futureX, futureY);
        C c1 = null;
        C c2 = null;
        if(k1 &gt; 14000)
        {
            System.out.println((new StringBuilder()).append(&quot;error in WorldMap X: &quot;).append(currentY).append(&quot; Y: &quot;).append(currentY).toString());
            return false;
        }
        if(VirtualWorld.I[k1] == null)
            return true;
        if(VirtualWorld.I[k1].containsKey(z))
            c1 = (C)VirtualWorld.I[k1].get(z);
        else
        if(VirtualWorld.I[k1].containsKey(z1))
            c2 = (C)VirtualWorld.I[k1].get(z1);
        if(c1 == null &amp;&amp; c2 == null)
            return true;
        ArrayList arraylist = null;
        if(c1 != null)
            arraylist = c1.I;
        else
        if(c2 != null)
            arraylist = c2.I;
        for(Iterator iterator = arraylist.iterator(); iterator.hasNext();)
        {
            int i2 = ((Integer)iterator.next()).intValue();
            if(l1 == B.j[25])
                return I(height, currentX, currentY, futureX - 1, futureY, j1) &amp;&amp; I(height, currentX, currentY, futureX, futureY - 1, j1);
            if(l1 == B.j[26])
                return I(height, currentX, currentY, futureX + 1, futureY, j1) &amp;&amp; I(height, currentX, currentY, futureX, futureY - 1, j1);
            if(l1 == B.j[27])
                return I(height, currentX, currentY, futureX + 1, futureY, j1) &amp;&amp; I(height, currentX, currentY, futureX, futureY + 1, j1);
            if(l1 == B.j[28])
                return I(height, currentX, currentY, futureX - 1, futureY, j1) &amp;&amp; I(height, currentX, currentY, futureX, futureY + 1, j1);
            if(i2 != -1)
            {
                if(j1 == 1 &amp;&amp; VirtualWorld.I[k1].containsKey(z1))
                    return true;
                if(j1 == 0 &amp;&amp; VirtualWorld.I[k1].containsKey(z1) &amp;&amp; i2 == l1)
                    return false;
                if(VirtualWorld.I[k1].containsKey(z) &amp;&amp; i2 == l1)
                    return false;
            } else
            {
                if(j1 == 1 &amp;&amp; VirtualWorld.I[k1].containsKey(z1))
                    return true;
                if(j1 == 0 &amp;&amp; VirtualWorld.I[k1].containsKey(z1))
                    return false;
                if(VirtualWorld.I[k1].containsKey(z))
                    return false;
            }
        }

        return true;
    }

    public static final int equals(int currentX, int currentY, int futureX, int futureY)
    {
        int valX = futureX - currentX;
        int valY = futureY - currentY;
        if(valX &lt; 0)
        {
            if(valY &lt; 0)
            {
                if(valX &lt; valY)
                    return 11;
                return valX &lt;= valY ? 10 : 9;
            }
            if(valY &gt; 0)
            {
                if(-valX &lt; valY)
                    return 15;
                return -valX &lt;= valY ? 14 : 13;
            } else
            {
                return 12;
            }
        }
        if(valX &gt; 0)
        {
            if(valY &lt; 0)
            {
                if(valX &lt; -valY)
                    return 7;
                return valX &lt;= -valY ? 6 : 5;
            }
            if(valY &gt; 0)
            {
                if(valX &lt; valY)
                    return 1;
                return valX &lt;= valY ? 2 : 3;
            } else
            {
                return 4;
            }
        }
        if(valY &lt; 0)
            return 8;
        return valY &lt;= 0 ? -1 : 0;
    }

    public static int c;
    public static int KKLI;
    public static int add;
    public static int append;
    public static int close;
    public static int contains;
    public static int containsKey;
    public static int currentTimeMillis = 0;
    public static byte equals[];
    public static byte get[];
    public static int hasNext = 0;

}
[/code]
char[] dont matter for now.</description>
    
    <lastBuildDate>Fri, 30 Sep 2011 12:49:59 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/stringbuilders/414503.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>StringBuilders</title>
        <dc:creator><![CDATA[@imsuperman05 imsuperman05]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imsuperman05">@imsuperman05</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="11" data-topic="414503">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/pwnd/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Pwnd:</div>
<blockquote>
<p>There shouldn’t be any code in Python in a java source file, just saying… </p>
</blockquote>
</aside>
<p>There is. idk why.  Somewhere in here…</p>
<p>Anybody know how to make this more efficient?  Should I use runnable?</p>
<p>[code=java]package org.rs2server;</p>
<p>import java.io.IOException;<br>
import java.net.InetSocketAddress;<br>
import java.text.DecimalFormat;<br>
import java.util.logging.Level;<br>
import java.util.logging.Logger;</p>
<p>import org.apache.mina.common.IoAcceptor;<br>
import org.apache.mina.transport.socket.nio.SocketAcceptor;<br>
import org.apache.mina.transport.socket.nio.SocketAcceptorConfig;<br>
import org.rs2server.net.ConnectionHandler;<br>
import org.rs2server.net.ConnectionThrottleFilter;<br>
import org.rs2server.rs2.model.combat.NPCDrops;<br>
import org.rs2server.rs2.model.combat.NPCHandler;<br>
import org.rs2server.rs2.model.items.ItemHandler;<br>
import org.rs2server.rs2.model.minigames.Barrows;<br>
import org.rs2server.rs2.model.minigames.FFA;<br>
import org.rs2server.rs2.model.minigames.FightCaves;<br>
import org.rs2server.rs2.model.minigames.FightPits;<br>
import org.rs2server.rs2.model.minigames.PestControl;<br>
import org.rs2server.rs2.model.minigames.lottery;<br>
import org.rs2server.rs2.model.players.Client;<br>
import org.rs2server.rs2.model.players.player.Player;<br>
import org.rs2server.rs2.model.players.player.PlayerHandler;<br>
import org.rs2server.rs2.model.players.player.PlayerSave;<br>
import org.rs2server.rs2.model.players.player.PlayerSaving;<br>
import org.rs2server.rs2.model.shops.ShopHandler;<br>
import org.rs2server.rs2.world.ClanChatHandler;<br>
import org.rs2server.rs2.world.ObjectHandler;<br>
import org.rs2server.rs2.world.ObjectManager;<br>
import org.rs2server.util.ScriptManager;<br>
import org.rs2server.util.SimpleTimer;<br>
import org.rs2server.util.event.CycleEvent;<br>
import org.rs2server.util.event.CycleEventContainer;<br>
import org.rs2server.util.event.CycleEventHandler;</p>
<p>public class Server {</p>
<pre><code>static IoAcceptor acceptor;
public static Barrows barrows = new Barrows(null);
public static ClanChatHandler clanChat = new ClanChatHandler();
static ConnectionHandler connectionHandler;
public static final int cycleRate;
static long cycleTime, cycles, totalCycleTime, sleepTime;
static DecimalFormat debugPercentFormat;
static SimpleTimer engineTimer, debugTimer;
public static FFA FFA = new FFA(null);
public static FightCaves fightCaves = new FightCaves();
public static FightPits fightPits = new FightPits();
public static final String GroundItem = null;
public static ItemHandler itemHandler = new ItemHandler();
static final Logger logger = Logger.getLogger(Server.class.getName());
public static lottery lottery = new lottery(null);
public static NPCDrops npcDrops = new NPCDrops();
public static NPCHandler npcHandler = new NPCHandler();
public static ObjectHandler objectHandler = new ObjectHandler();
public static ObjectManager objectManager = new ObjectManager();
public static PestControl pestControl = new PestControl();
public static boolean playerExecuted = false;
public static PlayerHandler playerHandler = new PlayerHandler();
public static int serverlistenerPort;
public static final String ShopAssistant = null;
public static ShopHandler shopHandler = new ShopHandler();
public static boolean shutdownClientHandler;
public static boolean shutdownServer = false;
public static boolean sleeping;
static ConnectionThrottleFilter throttleFilter;

public static boolean UpdateServer = false;

static {
	if (!Config.SERVER_DEBUG) {
		serverlistenerPort = 43594;
	} else {
		serverlistenerPort = 43594;
	}
	cycleRate = 600;
	Server.shutdownServer = false;
	Server.engineTimer = new SimpleTimer();
	Server.debugTimer = new SimpleTimer();
	Server.sleepTime = 0;
	Server.debugPercentFormat = new DecimalFormat("0.0#%");
}
private static void debug() {
	if ((Server.debugTimer.elapsed() &gt; (360 * 1000))
			|| Server.playerExecuted) {
		final long averageCycleTime = Server.totalCycleTime / Server.cycles;
		System.out.println(new StringBuilder()
				.append("Average Cycle Time: ").append(averageCycleTime)
				.append("MS").toString());
		final double engineLoad = ((double) averageCycleTime / (double) Server.cycleRate);
		Server.logger.log(
				Level.INFO,
				new StringBuilder()
						.append("Players online: ")
						.append(PlayerHandler.playerCount)
						.append(", Engine load: ")
						.append(Server.debugPercentFormat
								.format(engineLoad)).toString());
		Server.totalCycleTime = 0;
		Server.cycles = 0;
		Server.debugTimer.reset();
		Server.playerExecuted = false;
	}
}
/**
 * @author Rodrigo(Imsuperman05);
 * @author Ryley;
 * @param c
 */

public static void GC(final Client c) {
	CycleEventHandler.getSingleton().addEvent(UpdateServer, new CycleEvent() {
		@Override
		public void execute(CycleEventContainer container) {
			System.gc();
		}
		@Override
		public void stop() {
			System.out.println("System Cleared all Allocated Memory");
		}
	}, 144 * 100 * 100);
}

public static long getSleepTimer() {
	return Server.sleepTime;
}


public static void main(final java.lang.String args[])
		throws NullPointerException, IOException {

	/**
	 * Garbage Collecter
	 */
	GC(null);
	ScriptManager.loadScripts();
	Server.acceptor = new SocketAcceptor();
	Server.connectionHandler = new ConnectionHandler();

	SocketAcceptorConfig sac = new SocketAcceptorConfig();
	sac.getSessionConfig().setTcpNoDelay(false);
	sac.setReuseAddress(true);
	sac.setBacklog(100);

	Server.throttleFilter = new ConnectionThrottleFilter(
			Config.CONNECTION_DELAY);
	sac.getFilterChain().addFirst("throttleFilter", Server.throttleFilter);
	Server.acceptor.bind(new InetSocketAddress(Server.serverlistenerPort),
			Server.connectionHandler, sac);

	Connection.initialize();
	PlayerSaving.initialize();

	Server.logger.log(Level.INFO, "Server listening on port 127.0.0.1:"
			+ Server.serverlistenerPort);
	System.out.println("INFO: Spirit-Scape is now online!");
	try {
		while (!Server.shutdownServer) {
			if (Server.sleepTime &gt;= 0) {
				Thread.sleep(Server.sleepTime);
			} else {
				Thread.sleep(600);
			}
			/**
			 * Shitty ass process here &gt;.&lt;
			 */
			Server.FFA.ffa();
			Server.fightPits.process();
			Server.engineTimer.reset();
			Server.itemHandler.process();
			Server.playerHandler.process();
			Server.npcHandler.process();
			Server.shopHandler.process();
			Server.objectManager.process();
			Server.cycleTime = Server.engineTimer.elapsed();
			Server.sleepTime = Server.cycleRate - Server.cycleTime;
			Server.totalCycleTime += Server.cycleTime;
			Server.cycles++;
			Server.debug();
		}
	} catch (final Exception ex) {
		ex.printStackTrace();
		Server.logger.log(Level.SEVERE, "Fatal Error", ex);
		for (final Player p : PlayerHandler.players) {
			if (p == null) {
				continue;
			}
			PlayerSave.saveGame((Client) p);
			System.out.println("Saved game for " + p.playerName + ".");
		}
	}

	Runtime.getRuntime().addShutdownHook(new Thread());
	Server.acceptor = null;
	Server.connectionHandler = null;
	sac = null;

	System.exit(0);
}

public static void processAllPackets() {
	for (final Player player : PlayerHandler.players) {
		if (player != null) {
			while (player.processQueuedPackets()) {
				;
			}
		}
	}
}
</code></pre>
<p>}<br>
[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/stringbuilders/414503/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/stringbuilders/414503/12</link>
        <pubDate>Fri, 30 Sep 2011 12:49:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-414503-12</guid>
        <source url="https://forum.moparisthebest.com/t/stringbuilders/414503.rss">StringBuilders</source>
      </item>
      <item>
        <title>StringBuilders</title>
        <dc:creator><![CDATA[@Pwnd Pwnd]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pwnd">@Pwnd</a> wrote:</p>
          <blockquote>
              <p>There shouldn’t be any code in Python in a java source file, just saying…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/stringbuilders/414503/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/stringbuilders/414503/11</link>
        <pubDate>Tue, 27 Sep 2011 19:54:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-414503-11</guid>
        <source url="https://forum.moparisthebest.com/t/stringbuilders/414503.rss">StringBuilders</source>
      </item>
      <item>
        <title>StringBuilders</title>
        <dc:creator><![CDATA[@imsuperman05 imsuperman05]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imsuperman05">@imsuperman05</a> wrote:</p>
          <blockquote>
              <p>[quote=“Pwnd, post:7, topic:414503”]When you do “wiener” + " " + “faggot”<br>
It automatically compiles the same way you would using a StringBuilder object… if I recall correctly.</p>
<p>And none of that paste is in python[/quote]<br>
I know that, I took out all empty strings to save memory.  There’s some code in Server.java in python.</p>
<p>I took out the maps folder containing those files because it was not needed, and just used memory.  It did not affect the server.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/stringbuilders/414503/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/stringbuilders/414503/10</link>
        <pubDate>Tue, 27 Sep 2011 19:35:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-414503-10</guid>
        <source url="https://forum.moparisthebest.com/t/stringbuilders/414503.rss">StringBuilders</source>
      </item>
      <item>
        <title>StringBuilders</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>It may have something to do with</p>
<pre><code class="lang-auto">public static final void containsKey()
    {
        equals = new byte[B.j[24]];
        get = new byte[B.j[24]];
        String s = "";
        String s1 = "";
        String s3 = "";
        String s5 = "";
        String as[] = new String[10];
        boolean flag = false;
        BufferedReader bufferedreader = null;
        try
        {
            bufferedreader = new BufferedReader(new FileReader("./Data/objectSize.cfg"));
        }
        catch(FileNotFoundException filenotfoundexception)
        {
            filenotfoundexception.printStackTrace();
            return;
        }
        try
        {
            s = bufferedreader.readLine();
        }
        catch(IOException ioexception)
        {
            ioexception.printStackTrace();
            return;
        }
        while(!flag &amp;&amp; s != null)
        {
            s = s.trim();
            int i = s.indexOf("=");
            if(i &gt; -1)
            {
                String s2 = s.substring(0, i);
                s2 = s2.trim();
                String s4 = s.substring(i + 1);
                s4 = s4.trim();
                String s6 = s4.replaceAll("             ", "    ");
                s6 = s6.replaceAll("            ", "    ");
                s6 = s6.replaceAll("            ", "    ");
                s6 = s6.replaceAll("            ", "    ");
                s6 = s6.replaceAll("            ", "    ");
                String as1[] = s6.split("       ");
                if(s2.startsWith("object"))
                {
                    int j = Integer.parseInt(as1[0]);
                    String s7 = as1[2];
                    String as2[] = s7.split("x");
                    equals[j] = (byte)Integer.parseInt(as2[0]);
                    get[j] = (byte)Integer.parseInt(as2[1]);
                }
            } else
            if(s.equals("[END]"))
            {
                try
                {
                    bufferedreader.close();
                }
                catch(IOException ioexception2) { }
                return;
            }
            try
            {
                s = bufferedreader.readLine();
            }
            catch(IOException ioexception3)
            {
                flag = true;
            }
        }
        try
        {
            bufferedreader.close();
        }
        catch(IOException ioexception1) { }
    }</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/stringbuilders/414503/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/stringbuilders/414503/9</link>
        <pubDate>Sat, 24 Sep 2011 08:31:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-414503-9</guid>
        <source url="https://forum.moparisthebest.com/t/stringbuilders/414503.rss">StringBuilders</source>
      </item>
      <item>
        <title>StringBuilders</title>
        <dc:creator><![CDATA[@Fat_Cookies Fat Cookies]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/fat_cookies">@Fat_Cookies</a> wrote:</p>
          <blockquote>
              <p>[quote=“Pwnd, post:7, topic:414503”]When you do “wiener” + " " + “faggot”<br>
It automatically compiles the same way you would using a StringBuilder object… if I recall correctly.[/quote]</p>
<p>And to add to that, if I recall correctly String.concat() is much slower than both the alternatives.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/stringbuilders/414503/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/stringbuilders/414503/8</link>
        <pubDate>Sat, 17 Sep 2011 10:34:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-414503-8</guid>
        <source url="https://forum.moparisthebest.com/t/stringbuilders/414503.rss">StringBuilders</source>
      </item>
      <item>
        <title>StringBuilders</title>
        <dc:creator><![CDATA[@Pwnd Pwnd]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pwnd">@Pwnd</a> wrote:</p>
          <blockquote>
              <p>When you do “wiener” + " " + “faggot”<br>
It automatically compiles the same way you would using a StringBuilder object… if I recall correctly.</p>
<p>And none of that paste is in python</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/stringbuilders/414503/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/stringbuilders/414503/7</link>
        <pubDate>Fri, 16 Sep 2011 01:58:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-414503-7</guid>
        <source url="https://forum.moparisthebest.com/t/stringbuilders/414503.rss">StringBuilders</source>
      </item>
      <item>
        <title>StringBuilders</title>
        <dc:creator><![CDATA[@imsuperman05 imsuperman05]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imsuperman05">@imsuperman05</a> wrote:</p>
          <blockquote>
              <p>Well, my dad also told me that parts of the codes are in Python.  But don’t strings allocate a lot of memory, and it keeps building more strings and allocating tons of memory.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/stringbuilders/414503/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/stringbuilders/414503/6</link>
        <pubDate>Wed, 14 Sep 2011 23:35:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-414503-6</guid>
        <source url="https://forum.moparisthebest.com/t/stringbuilders/414503.rss">StringBuilders</source>
      </item>
      <item>
        <title>StringBuilders</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>JShrink, eh?</p>
<p>The problem could likely be all those string constants there… although realistically these aren’t actual problems. StringBuilders are only used there as they implement string concatenation using the language-level operator +.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/stringbuilders/414503/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/stringbuilders/414503/5</link>
        <pubDate>Wed, 14 Sep 2011 23:30:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-414503-5</guid>
        <source url="https://forum.moparisthebest.com/t/stringbuilders/414503.rss">StringBuilders</source>
      </item>
      <item>
        <title>StringBuilders</title>
        <dc:creator><![CDATA[@imsuperman05 imsuperman05]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imsuperman05">@imsuperman05</a> wrote:</p>
          <blockquote>
              <p>My dad used Jprofiler and ran it through Eclipse, to see where the memory is being used the most… and it’s in this file.</p>
<p>My dad is gonna look at it tomorrow.  It’s using an Stringbuilder for some reason, and he’s gonna find a way to either counteract all the strings being built even though no players are online, or rewrite the file.</p>
<p>[code=java]package server.world.map;</p>
<p>import java.io.BufferedReader;<br>
import java.io.FileNotFoundException;<br>
import java.io.FileReader;<br>
import java.io.IOException;<br>
import java.io.RandomAccessFile;<br>
import java.util.ArrayList;<br>
import java.util.Iterator;</p>
<p>public class I<br>
{</p>
<pre><code>public I()
{
}

public static final void I(boolean flag)
{
    try
    {
        if(flag)
        {
            B.I();
            containsKey();
            close();
            equals = null;
            get = null;
            for(int i = 0; i &lt; 10331; i++)
                if(VirtualWorld.I[i].size() &lt;= 0)
                    VirtualWorld.I[i] = null;

        }
    }
    catch(Exception exception)
    {
        exception.printStackTrace();
    }
}

private static int KKLI(int i)
{
    return equals[i];
}

private static int add(int i)
{
    return get[i];
}

public static final int append(int i, int j)
{
    int k = i + j;
    if(k &lt;= 3 &amp;&amp; k &gt;= 0)
        return k;
    if(k &gt; 3)
    {
        int l = k - 4;
        k = l;
    } else
    if(k &lt; 0)
    {
		int i1 = k + 4;
        k = k;
    }
    return k;
}

private static void close()
{
    RandomAccessFile randomaccessfile = null;
    int i = 0;
    byte byte0 = 70;
    byte abyte0[] = null;
    int j = 0;
    long l = System.currentTimeMillis();
    try
    {
        randomaccessfile = new RandomAccessFile("./Data/worldmap.bin", "r");
        abyte0 = new byte[(int)randomaccessfile.length()];
        randomaccessfile.read(abyte0, 0, (int)randomaccessfile.length());
        randomaccessfile.close();
    }
    catch(Exception exception)
    {
        exception.printStackTrace();
    }
    long l1 = System.currentTimeMillis() - l;
    System.out.println((new StringBuilder()).append("Loaded WorldMap In (").append(l1).append(" ms)... ").toString());
    for(int k = 0; k &lt; B.j[0]; k++)
    {
        int i1 = 0;
        int j1 = 0;
        int k1 = 0;
        int i2 = 0;
        int j2 = 0;
        int k2 = 0;
        int l2 = 0;
        try
        {
            i1 = (abyte0[j++] &amp; 0xff) &lt;&lt; B.j[2] | abyte0[j++] &amp; 0xff;
            j1 = (abyte0[j++] &amp; 0xff) &lt;&lt; B.j[2] | abyte0[j++] &amp; 0xff;
            k1 = (abyte0[j++] &amp; 0xff) &lt;&lt; B.j[2] | abyte0[j++] &amp; 0xff;
            i2 = abyte0[j++] &amp; 0xff;
            j2 = abyte0[j++] &amp; 0xff;
            l2 = k2 = abyte0[j++] &amp; 0xff;
        }
        catch(Exception exception1)
        {
            exception1.printStackTrace();
        }
        int i3 = 0;
        int j3 = 0;
        boolean flag = false;
        if(j2 &gt;= B.j[3] &amp;&amp; j2 &lt;= B.j[4] || j2 == B.j[5])
            continue;
        Z az[] = new Z[byte0];
        int ai[] = new int[byte0];
        int k3 = add(i1);
        int l3 = KKLI(i1);
        byte byte1 = -1;
        for(int i4 = 0; i4 &lt; byte0; i4++)
            ai[i4] = -1;

        if(j2 &lt;= 5)
        {
            if(j2 == B.j[10])
            {
                if(k2 == 0)
                    k2 = B.j[6];
                else
                if(k2 == 1)
                    k2 = B.j[7];
                else
                if(k2 == 2)
                    k2 = B.j[8];
                else
                if(k2 == 3)
                    k2 = B.j[9];
                else
                    System.out.println((new StringBuilder()).append("Invalid face: ").append(k2).toString());
            } else
            if(j2 == B.j[11])
            {
                if(k2 == 0)
                {
                    k2 = -1;
                    j1++;
                } else
                if(k2 == 1)
                {
                    k2 = -1;
                    k1++;
                } else
                if(k2 == 2)
                {
                    k2 = -1;
                    j1++;
                } else
                if(k2 == 3)
                {
                    k2 = -1;
                    k1++;
                } else
                {
                    System.out.println((new StringBuilder()).append("Invalid face: ").append(k2).toString());
                }
            } else
            if(j2 == B.j[12])
            {
                if(k2 == 0)
                    k2 = -1;
                else
                if(k2 == 1)
                    k2 = -1;
                else
                if(k2 == 2)
                    k2 = -1;
                else
                if(k2 == 3)
                    k2 = -1;
                else
                    System.out.println((new StringBuilder()).append("Invalid face: ").append(k2).toString());
            } else
            if(j2 == B.j[14])
            {
                if(k2 == 0)
                    k2 = B.j[14];
                else
                if(k2 == 1)
                    k2 = 0;
                else
                if(k2 == 2)
                    k2 = 12;
                else
                if(k2 == 3)
                    k2 = 8;
                else
                    System.out.println((new StringBuilder()).append("Invalid face: ").append(k2).toString());
            } else
            if(j2 == B.j[15] || j2 == B.j[13])
            {
                k2 = -1;
                flag = true;
            } else
            if(j2 &gt;= B.j[16] &amp;&amp; j2 &lt;= B.j[19])
                k2 = -1;
        } else
        {
            if((k2 == 0 || k2 == 2) &amp;&amp; j2 &gt;= 10)
            {
                int j4 = k3;
                k3 = l3;
                l3 = j4;
            }
            k2 = -1;
        }
        int k4 = k2;
        if(i1 == 9374 || i1 == 4513 || i1 &gt;= 4518 &amp;&amp; i1 &lt;= 4520 || i1 &gt;= 5122 &amp;&amp; i1 &lt;= 5125 || i1 == 5112 || i1 &gt;= 1140 &amp;&amp; i1 &lt;= 1205 || i1 &gt;= 4735 &amp;&amp; i1 &lt;= 4740 || i1 &lt;= 1299 &amp;&amp; i1 &gt;= 1298 || i1 == 1174 || i1 &gt;= 446 &amp;&amp; i1 &lt;= 447 || i1 &gt;= 1240 &amp;&amp; i1 &lt;= 1265 || i1 &gt;= 950 &amp;&amp; i1 &lt;= 953 || i1 &gt;= 4342 &amp;&amp; i1 &lt;= 4345 || i1 &gt;= 3948 &amp;&amp; i1 &lt;= 3950 || i1 == 1032 || i1 == 4436 || i1 == 4446 || i1 == 4447)
        {
            flag = true;
            i3 = 1;
        } else
        if(i1 == 5113 || i1 &gt;= 471 &amp;&amp; i1 &lt;= 474 || i1 == 1161 || i1 == 312 || i1 == 1341 || i1 &gt;= 312 &amp;&amp; i1 &lt;= 313 || i1 == 1341 || i1 == 336 || i1 == 11603 || i1 &gt;= 11930 &amp;&amp; i1 &lt;= 11945 || i1 == 11629 || i1 == 9623 || i1 == 1392 || i1 == 1394 || i1 &gt;= 980 &amp;&amp; i1 &lt;= 982 || i1 == 1297 || i1 == 9375)
            i3 = 1;
        else
        if(j1 &lt;= 2425 &amp;&amp; k1 &lt;= 3091 &amp;&amp; j1 &gt;= 2411 &amp;&amp; k1 &gt;= 3085 || j1 &gt;= 2413 &amp;&amp; k1 &gt;= 3074 &amp;&amp; j1 &lt;= 2417 &amp;&amp; k1 &lt;= 3084 || j1 &gt;= 2374 &amp;&amp; k1 &gt;= 3116 &amp;&amp; j1 &lt;= 2387 &amp;&amp; k1 &lt;= 3122 || j1 &lt;= 2386 &amp;&amp; k1 &lt;= 3133 &amp;&amp; j1 &gt;= 2382 &amp;&amp; k1 &gt;= 3122)
            i3 = 1;
        else
        if(i1 &gt;= 6716 &amp;&amp; i1 &lt;= 6750)
            k4 = -1;
        if(!flag)
            if(k3 &gt;= 2 || l3 &gt;= 2)
            {
                for(int l4 = 0; l4 &lt; k3; l4++)
                {
                    for(int i5 = 0; i5 &lt; l3; i5++)
                        az[j3++] = new Z(j1 + l4, k1 + i5, i2, i3);

                }

            } else
            {
                if(k4 != -1)
                    if(k4 == B.j[20])
                    {
                        ai[j3] = 0;
                        az[j3++] = new Z(j1, k1 - 1, i2, i3);
                        byte1 = 0;
                    } else
                    if(k4 == B.j[21])
                    {
                        ai[j3] = 4;
                        az[j3++] = new Z(j1 + 1, k1, i2, i3);
                        byte1 = 12;
                    } else
                    if(k4 == B.j[22])
                    {
                        ai[j3] = 8;
                        az[j3++] = new Z(j1, k1 + 1, i2, i3);
                        byte1 = 8;
                    } else
                    if(k4 == B.j[23])
                    {
                        ai[j3] = 12;
                        az[j3++] = new Z(j1 - 1, k1, i2, i3);
                        byte1 = 4;
                    } else
                    if(k4 != 2 &amp;&amp; k4 != 6 &amp;&amp; k4 != 14)
                        if(k4 != 10);
                az[j3++] = new Z(j1, k1, i2, i3);
            }
        byte byte2 = -1;
        int j5 = contains(j1, k1);
        for(int k5 = 0; k5 &lt; j3; k5++)
        {
            if(byte1 != -1 &amp;&amp; k5 == 1)
                k4 = byte1;
            if(VirtualWorld.I[j5].containsKey(az[k5]))
            {
                C c1 = (C)VirtualWorld.I[j5].get(az[k5]);
                ArrayList&lt;Integer&gt; arraylist1 = new ArrayList&lt;Integer&gt;();
                int l5;
                for(Iterator iterator = c1.I.iterator(); iterator.hasNext(); arraylist1.add(Integer.valueOf(l5)))
                    l5 = ((Integer)iterator.next()).intValue();

                if(arraylist1.contains(Integer.valueOf(k4)))
                    continue;
                ArrayList&lt;Integer&gt; arraylist2 = new ArrayList&lt;Integer&gt;();
                if(!arraylist1.contains(Integer.valueOf(-1)))
                {
                    Iterator&lt;Integer&gt; iterator1 = arraylist1.iterator();
                    do
                    {
                        if(!iterator1.hasNext())
                            break;
                        int i6 = iterator1.next().intValue();
                        if(!arraylist2.contains(Integer.valueOf(i6)))
                            arraylist2.add(Integer.valueOf(i6));
                    } while(true);
                    arraylist2.add(Integer.valueOf(k4));
                } else
                {
                    arraylist2.add(Integer.valueOf(-1));
                }
                C c3 = new C(arraylist2, l2);
                VirtualWorld.I[j5].remove(az[k5]);
                VirtualWorld.I[j5].put(az[k5], c3);
                i++;
            } else
            {
                ArrayList&lt;Integer&gt; arraylist = new ArrayList&lt;Integer&gt;();
                arraylist.add(Integer.valueOf(k4));
                C c2 = new C(arraylist, l2);
                VirtualWorld.I[j5].put(az[k5], c2);
                i++;
            }
        }

        az = null;
        ai = null;
    }

    l1 = System.currentTimeMillis() - l;
    System.out.println((new StringBuilder()).append("	-Fully Processed in (").append(l1).append(" ms)... ").toString());
    System.out.println((new StringBuilder()).append("	-Loaded ").append(i).append(" world objects").toString());
    abyte0 = null;
    randomaccessfile = null;
}

//(futureX, futureY)
public static final int contains(int futureX, int futureY)
{
    String s = (new StringBuilder()).append(futureY / 100).append("").append(futureX / 100).toString();
    int k = Integer.parseInt(s);
    if(k &gt; hasNext)
        hasNext = k;
    return k;
}

public static final void containsKey()
{
    equals = new byte[B.j[24]];
    get = new byte[B.j[24]];
    String s = "";
    String s1 = "";
    String s3 = "";
    String s5 = "";
    String as[] = new String[10];
    boolean flag = false;
    BufferedReader bufferedreader = null;
    try
    {
        bufferedreader = new BufferedReader(new FileReader("./Data/objectSize.cfg"));
    }
    catch(FileNotFoundException filenotfoundexception)
    {
        filenotfoundexception.printStackTrace();
        return;
    }
    try
    {
        s = bufferedreader.readLine();
    }
    catch(IOException ioexception)
    {
        ioexception.printStackTrace();
        return;
    }
    while(!flag &amp;&amp; s != null) 
    {
        s = s.trim();
        int i = s.indexOf("=");
        if(i &gt; -1)
        {
            String s2 = s.substring(0, i);
            s2 = s2.trim();
            String s4 = s.substring(i + 1);
            s4 = s4.trim();
            String s6 = s4.replaceAll("		", "	");
            s6 = s6.replaceAll("		", "	");
            s6 = s6.replaceAll("		", "	");
            s6 = s6.replaceAll("		", "	");
            s6 = s6.replaceAll("		", "	");
            String as1[] = s6.split("	");
            if(s2.startsWith("object"))
            {
                int j = Integer.parseInt(as1[0]);
                String s7 = as1[2];
                String as2[] = s7.split("x");
                equals[j] = (byte)Integer.parseInt(as2[0]);
                get[j] = (byte)Integer.parseInt(as2[1]);
            }
        } else
        if(s.equals("[END]"))
        {
            try
            {
                bufferedreader.close();
            }
            catch(IOException ioexception2) { }
            return;
        }
        try
        {
            s = bufferedreader.readLine();
        }
        catch(IOException ioexception3)
        {
            flag = true;
        }
    }
    try
    {
        bufferedreader.close();
    }
    catch(IOException ioexception1) { }
}

public static final int currentTimeMillis(int i, int j, int k)
{
    Z z = new Z(i, j, k, 0);
    int l = contains(i, j);
    if(VirtualWorld.I[l] == null)
        return -1;
    if(VirtualWorld.I[l].containsKey(z))
    {
        C c1 = (C)VirtualWorld.I[l].get(z);
        return c1.Z;
    } else
    {
        return -1;
    }
}

//(int height, int currentX, int currentY, int futureX, int futureY, int a)
public static final boolean I(int height, int currentX, int currentY, int futureX, int futureY, int j1)
{
    if(currentY == futureX &amp;&amp; currentY == futureY)
        return true;
    Z z = new Z(futureX, futureY, height, 0);
    Z z1 = new Z(futureX, futureY, height, 1);
    int k1 = contains(futureX, futureY);
    int l1 = equals(currentX, currentY, futureX, futureY);
    C c1 = null;
    C c2 = null;
    if(k1 &gt; 14000)
    {
        System.out.println((new StringBuilder()).append("error in WorldMap X: ").append(currentY).append(" Y: ").append(currentY).toString());
        return false;
    }
    if(VirtualWorld.I[k1] == null)
        return true;
    if(VirtualWorld.I[k1].containsKey(z))
        c1 = (C)VirtualWorld.I[k1].get(z);
    else
    if(VirtualWorld.I[k1].containsKey(z1))
        c2 = (C)VirtualWorld.I[k1].get(z1);
    if(c1 == null &amp;&amp; c2 == null)
        return true;
    ArrayList arraylist = null;
    if(c1 != null)
        arraylist = c1.I;
    else
    if(c2 != null)
        arraylist = c2.I;
    for(Iterator iterator = arraylist.iterator(); iterator.hasNext();)
    {
        int i2 = ((Integer)iterator.next()).intValue();
        if(l1 == B.j[25])
            return I(height, currentX, currentY, futureX - 1, futureY, j1) &amp;&amp; I(height, currentX, currentY, futureX, futureY - 1, j1);
        if(l1 == B.j[26])
            return I(height, currentX, currentY, futureX + 1, futureY, j1) &amp;&amp; I(height, currentX, currentY, futureX, futureY - 1, j1);
        if(l1 == B.j[27])
            return I(height, currentX, currentY, futureX + 1, futureY, j1) &amp;&amp; I(height, currentX, currentY, futureX, futureY + 1, j1);
        if(l1 == B.j[28])
            return I(height, currentX, currentY, futureX - 1, futureY, j1) &amp;&amp; I(height, currentX, currentY, futureX, futureY + 1, j1);
        if(i2 != -1)
        {
            if(j1 == 1 &amp;&amp; VirtualWorld.I[k1].containsKey(z1))
                return true;
            if(j1 == 0 &amp;&amp; VirtualWorld.I[k1].containsKey(z1) &amp;&amp; i2 == l1)
                return false;
            if(VirtualWorld.I[k1].containsKey(z) &amp;&amp; i2 == l1)
                return false;
        } else
        {
            if(j1 == 1 &amp;&amp; VirtualWorld.I[k1].containsKey(z1))
                return true;
            if(j1 == 0 &amp;&amp; VirtualWorld.I[k1].containsKey(z1))
                return false;
            if(VirtualWorld.I[k1].containsKey(z))
                return false;
        }
    }

    return true;
}

public static final int equals(int currentX, int currentY, int futureX, int futureY)
{
    int valX = futureX - currentX;
    int valY = futureY - currentY;
    if(valX &lt; 0)
    {
        if(valY &lt; 0)
        {
            if(valX &lt; valY)
                return 11;
            return valX &lt;= valY ? 10 : 9;
        }
        if(valY &gt; 0)
        {
            if(-valX &lt; valY)
                return 15;
            return -valX &lt;= valY ? 14 : 13;
        } else
        {
            return 12;
        }
    }
    if(valX &gt; 0)
    {
        if(valY &lt; 0)
        {
            if(valX &lt; -valY)
                return 7;
            return valX &lt;= -valY ? 6 : 5;
        }
        if(valY &gt; 0)
        {
            if(valX &lt; valY)
                return 1;
            return valX &lt;= valY ? 2 : 3;
        } else
        {
            return 4;
        }
    }
    if(valY &lt; 0)
        return 8;
    return valY &lt;= 0 ? -1 : 0;
}

public static int c;
public static int KKLI;
public static int add;
public static int append;
public static int close;
public static int contains;
public static int containsKey;
public static int currentTimeMillis = 0;
public static byte equals[];
public static byte get[];
public static int hasNext = 0;
</code></pre>
<p>}<br>
[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/stringbuilders/414503/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/stringbuilders/414503/4</link>
        <pubDate>Wed, 14 Sep 2011 23:23:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-414503-4</guid>
        <source url="https://forum.moparisthebest.com/t/stringbuilders/414503.rss">StringBuilders</source>
      </item>
      <item>
        <title>StringBuilders</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>The char[] are most likely a side-effect of Strings that persist throughout VM runtime without being collected.<br>
This is most likely due to many string literals in code, which internally are interned into a pool which keeps them from being collected as garbage by the VM.</p>
<blockquote>A pool of strings, initially empty, is maintained privately by the class [i]String[/i].
<p>When the <span class="bbcode-i">intern</span> method is invoked, if the pool already contains a string equal to this <span class="bbcode-i">String</span> object as determined by the <span class="bbcode-i">equals(Object)</span> method, then the string from the pool is returned. Otherwise, this <span class="bbcode-i">String</span> object is added to the pool and a reference to this <span class="bbcode-i">String</span> object is returned.</p>
<p>It follows that for any two strings s and t, <span class="bbcode-i">s.intern() == t.intern()</span> is <span class="bbcode-i">true</span> if and only if <span class="bbcode-i">s.equals(t)</span> is true.</p>
<p>All literal strings and string-valued constant expressions are interned. String literals are defined in §3.10.5 of the Java Language Specification</p>
</blockquote>
<p>The referenced section of the JLS is <a href="http://java.sun.com/docs/books/jls/third_edition/html/lexical.html#3.10.5" data-bbcode="true" rel="nofollow noopener">here.</a><br>
<img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/stringbuilders/414503/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/stringbuilders/414503/3</link>
        <pubDate>Wed, 14 Sep 2011 23:03:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-414503-3</guid>
        <source url="https://forum.moparisthebest.com/t/stringbuilders/414503.rss">StringBuilders</source>
      </item>
      <item>
        <title>StringBuilders</title>
        <dc:creator><![CDATA[@nueb35 Nueb35]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/nueb35">@nueb35</a> wrote:</p>
          <blockquote>
              <p>start &gt; run &gt; jvisualvm</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/stringbuilders/414503/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/stringbuilders/414503/2</link>
        <pubDate>Tue, 13 Sep 2011 01:57:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-414503-2</guid>
        <source url="https://forum.moparisthebest.com/t/stringbuilders/414503.rss">StringBuilders</source>
      </item>
      <item>
        <title>StringBuilders</title>
        <dc:creator><![CDATA[@imsuperman05 imsuperman05]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imsuperman05">@imsuperman05</a> wrote:</p>
          <blockquote>
              <p>My dad used Jprofiler and ran it through Eclipse, to see where the memory is being used the most… and it’s in this file.</p>
<p>My dad is gonna look at it tomorrow.  It’s using an Stringbuilder for some reason, and he’s gonna find a way to either counteract all the strings being built even though no players are online, or rewrite the file.</p>
<p>[code=java]package server.world.map;</p>
<p>import java.io.BufferedReader;<br>
import java.io.FileNotFoundException;<br>
import java.io.FileReader;<br>
import java.io.IOException;<br>
import java.io.RandomAccessFile;<br>
import java.util.ArrayList;<br>
import java.util.Iterator;</p>
<p>public class I<br>
{</p>
<pre><code>public I()
{
}

public static final void I(boolean flag)
{
    try
    {
        if(flag)
        {
            B.I();
            containsKey();
            close();
            equals = null;
            get = null;
            for(int i = 0; i &lt; 10331; i++)
                if(VirtualWorld.I[i].size() &lt;= 0)
                    VirtualWorld.I[i] = null;

        }
    }
    catch(Exception exception)
    {
        exception.printStackTrace();
    }
}

private static int KKLI(int i)
{
    return equals[i];
}

private static int add(int i)
{
    return get[i];
}

public static final int append(int i, int j)
{
    int k = i + j;
    if(k &lt;= 3 &amp;&amp; k &gt;= 0)
        return k;
    if(k &gt; 3)
    {
        int l = k - 4;
        k = l;
    } else
    if(k &lt; 0)
    {
		int i1 = k + 4;
        k = k;
    }
    return k;
}

private static void close()
{
    RandomAccessFile randomaccessfile = null;
    int i = 0;
    byte byte0 = 70;
    byte abyte0[] = null;
    int j = 0;
    long l = System.currentTimeMillis();
    try
    {
        randomaccessfile = new RandomAccessFile("./Data/worldmap.bin", "r");
        abyte0 = new byte[(int)randomaccessfile.length()];
        randomaccessfile.read(abyte0, 0, (int)randomaccessfile.length());
        randomaccessfile.close();
    }
    catch(Exception exception)
    {
        exception.printStackTrace();
    }
    long l1 = System.currentTimeMillis() - l;
    System.out.println((new StringBuilder()).append("Loaded WorldMap In (").append(l1).append(" ms)... ").toString());
    for(int k = 0; k &lt; B.j[0]; k++)
    {
        int i1 = 0;
        int j1 = 0;
        int k1 = 0;
        int i2 = 0;
        int j2 = 0;
        int k2 = 0;
        int l2 = 0;
        try
        {
            i1 = (abyte0[j++] &amp; 0xff) &lt;&lt; B.j[2] | abyte0[j++] &amp; 0xff;
            j1 = (abyte0[j++] &amp; 0xff) &lt;&lt; B.j[2] | abyte0[j++] &amp; 0xff;
            k1 = (abyte0[j++] &amp; 0xff) &lt;&lt; B.j[2] | abyte0[j++] &amp; 0xff;
            i2 = abyte0[j++] &amp; 0xff;
            j2 = abyte0[j++] &amp; 0xff;
            l2 = k2 = abyte0[j++] &amp; 0xff;
        }
        catch(Exception exception1)
        {
            exception1.printStackTrace();
        }
        int i3 = 0;
        int j3 = 0;
        boolean flag = false;
        if(j2 &gt;= B.j[3] &amp;&amp; j2 &lt;= B.j[4] || j2 == B.j[5])
            continue;
        Z az[] = new Z[byte0];
        int ai[] = new int[byte0];
        int k3 = add(i1);
        int l3 = KKLI(i1);
        byte byte1 = -1;
        for(int i4 = 0; i4 &lt; byte0; i4++)
            ai[i4] = -1;

        if(j2 &lt;= 5)
        {
            if(j2 == B.j[10])
            {
                if(k2 == 0)
                    k2 = B.j[6];
                else
                if(k2 == 1)
                    k2 = B.j[7];
                else
                if(k2 == 2)
                    k2 = B.j[8];
                else
                if(k2 == 3)
                    k2 = B.j[9];
                else
                    System.out.println((new StringBuilder()).append("Invalid face: ").append(k2).toString());
            } else
            if(j2 == B.j[11])
            {
                if(k2 == 0)
                {
                    k2 = -1;
                    j1++;
                } else
                if(k2 == 1)
                {
                    k2 = -1;
                    k1++;
                } else
                if(k2 == 2)
                {
                    k2 = -1;
                    j1++;
                } else
                if(k2 == 3)
                {
                    k2 = -1;
                    k1++;
                } else
                {
                    System.out.println((new StringBuilder()).append("Invalid face: ").append(k2).toString());
                }
            } else
            if(j2 == B.j[12])
            {
                if(k2 == 0)
                    k2 = -1;
                else
                if(k2 == 1)
                    k2 = -1;
                else
                if(k2 == 2)
                    k2 = -1;
                else
                if(k2 == 3)
                    k2 = -1;
                else
                    System.out.println((new StringBuilder()).append("Invalid face: ").append(k2).toString());
            } else
            if(j2 == B.j[14])
            {
                if(k2 == 0)
                    k2 = B.j[14];
                else
                if(k2 == 1)
                    k2 = 0;
                else
                if(k2 == 2)
                    k2 = 12;
                else
                if(k2 == 3)
                    k2 = 8;
                else
                    System.out.println((new StringBuilder()).append("Invalid face: ").append(k2).toString());
            } else
            if(j2 == B.j[15] || j2 == B.j[13])
            {
                k2 = -1;
                flag = true;
            } else
            if(j2 &gt;= B.j[16] &amp;&amp; j2 &lt;= B.j[19])
                k2 = -1;
        } else
        {
            if((k2 == 0 || k2 == 2) &amp;&amp; j2 &gt;= 10)
            {
                int j4 = k3;
                k3 = l3;
                l3 = j4;
            }
            k2 = -1;
        }
        int k4 = k2;
        if(i1 == 9374 || i1 == 4513 || i1 &gt;= 4518 &amp;&amp; i1 &lt;= 4520 || i1 &gt;= 5122 &amp;&amp; i1 &lt;= 5125 || i1 == 5112 || i1 &gt;= 1140 &amp;&amp; i1 &lt;= 1205 || i1 &gt;= 4735 &amp;&amp; i1 &lt;= 4740 || i1 &lt;= 1299 &amp;&amp; i1 &gt;= 1298 || i1 == 1174 || i1 &gt;= 446 &amp;&amp; i1 &lt;= 447 || i1 &gt;= 1240 &amp;&amp; i1 &lt;= 1265 || i1 &gt;= 950 &amp;&amp; i1 &lt;= 953 || i1 &gt;= 4342 &amp;&amp; i1 &lt;= 4345 || i1 &gt;= 3948 &amp;&amp; i1 &lt;= 3950 || i1 == 1032 || i1 == 4436 || i1 == 4446 || i1 == 4447)
        {
            flag = true;
            i3 = 1;
        } else
        if(i1 == 5113 || i1 &gt;= 471 &amp;&amp; i1 &lt;= 474 || i1 == 1161 || i1 == 312 || i1 == 1341 || i1 &gt;= 312 &amp;&amp; i1 &lt;= 313 || i1 == 1341 || i1 == 336 || i1 == 11603 || i1 &gt;= 11930 &amp;&amp; i1 &lt;= 11945 || i1 == 11629 || i1 == 9623 || i1 == 1392 || i1 == 1394 || i1 &gt;= 980 &amp;&amp; i1 &lt;= 982 || i1 == 1297 || i1 == 9375)
            i3 = 1;
        else
        if(j1 &lt;= 2425 &amp;&amp; k1 &lt;= 3091 &amp;&amp; j1 &gt;= 2411 &amp;&amp; k1 &gt;= 3085 || j1 &gt;= 2413 &amp;&amp; k1 &gt;= 3074 &amp;&amp; j1 &lt;= 2417 &amp;&amp; k1 &lt;= 3084 || j1 &gt;= 2374 &amp;&amp; k1 &gt;= 3116 &amp;&amp; j1 &lt;= 2387 &amp;&amp; k1 &lt;= 3122 || j1 &lt;= 2386 &amp;&amp; k1 &lt;= 3133 &amp;&amp; j1 &gt;= 2382 &amp;&amp; k1 &gt;= 3122)
            i3 = 1;
        else
        if(i1 &gt;= 6716 &amp;&amp; i1 &lt;= 6750)
            k4 = -1;
        if(!flag)
            if(k3 &gt;= 2 || l3 &gt;= 2)
            {
                for(int l4 = 0; l4 &lt; k3; l4++)
                {
                    for(int i5 = 0; i5 &lt; l3; i5++)
                        az[j3++] = new Z(j1 + l4, k1 + i5, i2, i3);

                }

            } else
            {
                if(k4 != -1)
                    if(k4 == B.j[20])
                    {
                        ai[j3] = 0;
                        az[j3++] = new Z(j1, k1 - 1, i2, i3);
                        byte1 = 0;
                    } else
                    if(k4 == B.j[21])
                    {
                        ai[j3] = 4;
                        az[j3++] = new Z(j1 + 1, k1, i2, i3);
                        byte1 = 12;
                    } else
                    if(k4 == B.j[22])
                    {
                        ai[j3] = 8;
                        az[j3++] = new Z(j1, k1 + 1, i2, i3);
                        byte1 = 8;
                    } else
                    if(k4 == B.j[23])
                    {
                        ai[j3] = 12;
                        az[j3++] = new Z(j1 - 1, k1, i2, i3);
                        byte1 = 4;
                    } else
                    if(k4 != 2 &amp;&amp; k4 != 6 &amp;&amp; k4 != 14)
                        if(k4 != 10);
                az[j3++] = new Z(j1, k1, i2, i3);
            }
        byte byte2 = -1;
        int j5 = contains(j1, k1);
        for(int k5 = 0; k5 &lt; j3; k5++)
        {
            if(byte1 != -1 &amp;&amp; k5 == 1)
                k4 = byte1;
            if(VirtualWorld.I[j5].containsKey(az[k5]))
            {
                C c1 = (C)VirtualWorld.I[j5].get(az[k5]);
                ArrayList&lt;Integer&gt; arraylist1 = new ArrayList&lt;Integer&gt;();
                int l5;
                for(Iterator iterator = c1.I.iterator(); iterator.hasNext(); arraylist1.add(Integer.valueOf(l5)))
                    l5 = ((Integer)iterator.next()).intValue();

                if(arraylist1.contains(Integer.valueOf(k4)))
                    continue;
                ArrayList&lt;Integer&gt; arraylist2 = new ArrayList&lt;Integer&gt;();
                if(!arraylist1.contains(Integer.valueOf(-1)))
                {
                    Iterator&lt;Integer&gt; iterator1 = arraylist1.iterator();
                    do
                    {
                        if(!iterator1.hasNext())
                            break;
                        int i6 = iterator1.next().intValue();
                        if(!arraylist2.contains(Integer.valueOf(i6)))
                            arraylist2.add(Integer.valueOf(i6));
                    } while(true);
                    arraylist2.add(Integer.valueOf(k4));
                } else
                {
                    arraylist2.add(Integer.valueOf(-1));
                }
                C c3 = new C(arraylist2, l2);
                VirtualWorld.I[j5].remove(az[k5]);
                VirtualWorld.I[j5].put(az[k5], c3);
                i++;
            } else
            {
                ArrayList&lt;Integer&gt; arraylist = new ArrayList&lt;Integer&gt;();
                arraylist.add(Integer.valueOf(k4));
                C c2 = new C(arraylist, l2);
                VirtualWorld.I[j5].put(az[k5], c2);
                i++;
            }
        }

        az = null;
        ai = null;
    }

    l1 = System.currentTimeMillis() - l;
    System.out.println((new StringBuilder()).append("	-Fully Processed in (").append(l1).append(" ms)... ").toString());
    System.out.println((new StringBuilder()).append("	-Loaded ").append(i).append(" world objects").toString());
    abyte0 = null;
    randomaccessfile = null;
}

//(futureX, futureY)
public static final int contains(int futureX, int futureY)
{
    String s = (new StringBuilder()).append(futureY / 100).append("").append(futureX / 100).toString();
    int k = Integer.parseInt(s);
    if(k &gt; hasNext)
        hasNext = k;
    return k;
}

public static final void containsKey()
{
    equals = new byte[B.j[24]];
    get = new byte[B.j[24]];
    String s = "";
    String s1 = "";
    String s3 = "";
    String s5 = "";
    String as[] = new String[10];
    boolean flag = false;
    BufferedReader bufferedreader = null;
    try
    {
        bufferedreader = new BufferedReader(new FileReader("./Data/objectSize.cfg"));
    }
    catch(FileNotFoundException filenotfoundexception)
    {
        filenotfoundexception.printStackTrace();
        return;
    }
    try
    {
        s = bufferedreader.readLine();
    }
    catch(IOException ioexception)
    {
        ioexception.printStackTrace();
        return;
    }
    while(!flag &amp;&amp; s != null) 
    {
        s = s.trim();
        int i = s.indexOf("=");
        if(i &gt; -1)
        {
            String s2 = s.substring(0, i);
            s2 = s2.trim();
            String s4 = s.substring(i + 1);
            s4 = s4.trim();
            String s6 = s4.replaceAll("		", "	");
            s6 = s6.replaceAll("		", "	");
            s6 = s6.replaceAll("		", "	");
            s6 = s6.replaceAll("		", "	");
            s6 = s6.replaceAll("		", "	");
            String as1[] = s6.split("	");
            if(s2.startsWith("object"))
            {
                int j = Integer.parseInt(as1[0]);
                String s7 = as1[2];
                String as2[] = s7.split("x");
                equals[j] = (byte)Integer.parseInt(as2[0]);
                get[j] = (byte)Integer.parseInt(as2[1]);
            }
        } else
        if(s.equals("[END]"))
        {
            try
            {
                bufferedreader.close();
            }
            catch(IOException ioexception2) { }
            return;
        }
        try
        {
            s = bufferedreader.readLine();
        }
        catch(IOException ioexception3)
        {
            flag = true;
        }
    }
    try
    {
        bufferedreader.close();
    }
    catch(IOException ioexception1) { }
}

public static final int currentTimeMillis(int i, int j, int k)
{
    Z z = new Z(i, j, k, 0);
    int l = contains(i, j);
    if(VirtualWorld.I[l] == null)
        return -1;
    if(VirtualWorld.I[l].containsKey(z))
    {
        C c1 = (C)VirtualWorld.I[l].get(z);
        return c1.Z;
    } else
    {
        return -1;
    }
}

//(int height, int currentX, int currentY, int futureX, int futureY, int a)
public static final boolean I(int height, int currentX, int currentY, int futureX, int futureY, int j1)
{
    if(currentY == futureX &amp;&amp; currentY == futureY)
        return true;
    Z z = new Z(futureX, futureY, height, 0);
    Z z1 = new Z(futureX, futureY, height, 1);
    int k1 = contains(futureX, futureY);
    int l1 = equals(currentX, currentY, futureX, futureY);
    C c1 = null;
    C c2 = null;
    if(k1 &gt; 14000)
    {
        System.out.println((new StringBuilder()).append("error in WorldMap X: ").append(currentY).append(" Y: ").append(currentY).toString());
        return false;
    }
    if(VirtualWorld.I[k1] == null)
        return true;
    if(VirtualWorld.I[k1].containsKey(z))
        c1 = (C)VirtualWorld.I[k1].get(z);
    else
    if(VirtualWorld.I[k1].containsKey(z1))
        c2 = (C)VirtualWorld.I[k1].get(z1);
    if(c1 == null &amp;&amp; c2 == null)
        return true;
    ArrayList arraylist = null;
    if(c1 != null)
        arraylist = c1.I;
    else
    if(c2 != null)
        arraylist = c2.I;
    for(Iterator iterator = arraylist.iterator(); iterator.hasNext();)
    {
        int i2 = ((Integer)iterator.next()).intValue();
        if(l1 == B.j[25])
            return I(height, currentX, currentY, futureX - 1, futureY, j1) &amp;&amp; I(height, currentX, currentY, futureX, futureY - 1, j1);
        if(l1 == B.j[26])
            return I(height, currentX, currentY, futureX + 1, futureY, j1) &amp;&amp; I(height, currentX, currentY, futureX, futureY - 1, j1);
        if(l1 == B.j[27])
            return I(height, currentX, currentY, futureX + 1, futureY, j1) &amp;&amp; I(height, currentX, currentY, futureX, futureY + 1, j1);
        if(l1 == B.j[28])
            return I(height, currentX, currentY, futureX - 1, futureY, j1) &amp;&amp; I(height, currentX, currentY, futureX, futureY + 1, j1);
        if(i2 != -1)
        {
            if(j1 == 1 &amp;&amp; VirtualWorld.I[k1].containsKey(z1))
                return true;
            if(j1 == 0 &amp;&amp; VirtualWorld.I[k1].containsKey(z1) &amp;&amp; i2 == l1)
                return false;
            if(VirtualWorld.I[k1].containsKey(z) &amp;&amp; i2 == l1)
                return false;
        } else
        {
            if(j1 == 1 &amp;&amp; VirtualWorld.I[k1].containsKey(z1))
                return true;
            if(j1 == 0 &amp;&amp; VirtualWorld.I[k1].containsKey(z1))
                return false;
            if(VirtualWorld.I[k1].containsKey(z))
                return false;
        }
    }

    return true;
}

public static final int equals(int currentX, int currentY, int futureX, int futureY)
{
    int valX = futureX - currentX;
    int valY = futureY - currentY;
    if(valX &lt; 0)
    {
        if(valY &lt; 0)
        {
            if(valX &lt; valY)
                return 11;
            return valX &lt;= valY ? 10 : 9;
        }
        if(valY &gt; 0)
        {
            if(-valX &lt; valY)
                return 15;
            return -valX &lt;= valY ? 14 : 13;
        } else
        {
            return 12;
        }
    }
    if(valX &gt; 0)
    {
        if(valY &lt; 0)
        {
            if(valX &lt; -valY)
                return 7;
            return valX &lt;= -valY ? 6 : 5;
        }
        if(valY &gt; 0)
        {
            if(valX &lt; valY)
                return 1;
            return valX &lt;= valY ? 2 : 3;
        } else
        {
            return 4;
        }
    }
    if(valY &lt; 0)
        return 8;
    return valY &lt;= 0 ? -1 : 0;
}

public static int c;
public static int KKLI;
public static int add;
public static int append;
public static int close;
public static int contains;
public static int containsKey;
public static int currentTimeMillis = 0;
public static byte equals[];
public static byte get[];
public static int hasNext = 0;
</code></pre>
<p>}<br>
[/code]<br>
char[] dont matter for now.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/stringbuilders/414503/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/stringbuilders/414503/1</link>
        <pubDate>Tue, 13 Sep 2011 00:38:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-414503-1</guid>
        <source url="https://forum.moparisthebest.com/t/stringbuilders/414503.rss">StringBuilders</source>
      </item>
  </channel>
</rss>
