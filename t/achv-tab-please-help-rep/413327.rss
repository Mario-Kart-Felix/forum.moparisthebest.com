<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>&#39;Achv Tab&#39; Please help ++REP</title>
    <link>https://forum.moparisthebest.com/t/achv-tab-please-help-rep/413327</link>
    <description>So im trying to make the achv tab my dung tab but when i click on it nothing happens and when i go the quest tab click the little icon in the top right client freezes.
Help?will ++rep

Error
&quot;Exception in thread &quot;Thread-6&quot; java.lang.NullPointerException&quot;

[IMG]http://i1132.photobucket.com/albums/m575/BlahBerrys/untitled-7.jpg[/img]

my draw interface code
[code]


[code]
	private void drawInterface(int j, int k, RSInterface class9, int l) {
		if (class9.type != 0 || class9.children == null)
			return;
		if (class9.isMouseoverTriggered &amp;&amp; anInt1026 != class9.id
				&amp;&amp; anInt1048 != class9.id &amp;&amp; anInt1039 != class9.id)
			return;
		int i1 = DrawingArea.topX;
		int j1 = DrawingArea.topY;
		int k1 = DrawingArea.bottomX;
		int l1 = DrawingArea.bottomY;
		DrawingArea.setDrawingArea(l + class9.height, k, k + class9.width, l);
		int i2 = class9.children.length;
		for (int j2 = 0; j2 &lt; i2; j2++) {
			int k2 = class9.childX[j2] + k;
			int l2 = (class9.childY[j2] + l) - j;
			RSInterface class9_1 = RSInterface.interfaceCache[class9.children[j2]];
			k2 += class9_1.anInt263;
			l2 += class9_1.anInt265;
			if (class9_1.contentType &gt; 0)
				drawFriendsListOrWelcomeScreen(class9_1);
			// here
			int[] IDs = { 1196, 1199, 1206, 1215, 1224, 1231, 1240, 1249, 1258,
					1267, 1274, 1283, 1573, 1290, 1299, 1308, 1315, 1324, 1333,
					1340, 1349, 1358, 1367, 1374, 1381, 1388, 1397, 1404, 1583,
					12038, 1414, 1421, 1430, 1437, 1446, 1453, 1460, 1469,
					15878, 1602, 1613, 1624, 7456, 1478, 1485, 1494, 1503,
					1512, 1521, 1530, 1544, 1553, 1563, 1593, 1635, 12426,
					12436, 12446, 12456, 6004, 18471,
					/* Ancients */
					12940, 12988, 13036, 12902, 12862, 13046, 12964, 13012,
					13054, 12920, 12882, 13062, 12952, 13000, 13070, 12912,
					12872, 13080, 12976, 13024, 13088, 12930, 12892, 13096 };
			for (int m5 = 0; m5 &lt; IDs.length; m5++) {
				if (class9_1.id == IDs[m5] + 1) {
					if (m5 &gt; 61)
						drawBlackBox(k2 + 1, l2);
					else
						drawBlackBox(k2, l2 + 1);
				}
			}
			int[] runeChildren = { 1202, 1203, 1209, 1210, 1211, 1218, 1219,
					1220, 1227, 1228, 1234, 1235, 1236, 1243, 1244, 1245, 1252,
					1253, 1254, 1261, 1262, 1263, 1270, 1271, 1277, 1278, 1279,
					1286, 1287, 1293, 1294, 1295, 1302, 1303, 1304, 1311, 1312,
					1318, 1319, 1320, 1327, 1328, 1329, 1336, 1337, 1343, 1344,
					1345, 1352, 1353, 1354, 1361, 1362, 1363, 1370, 1371, 1377,
					1378, 1384, 1385, 1391, 1392, 1393, 1400, 1401, 1407, 1408,
					1410, 1417, 1418, 1424, 1425, 1426, 1433, 1434, 1440, 1441,
					1442, 1449, 1450, 1456, 1457, 1463, 1464, 1465, 1472, 1473,
					1474, 1481, 1482, 1488, 1489, 1490, 1497, 1498, 1499, 1506,
					1507, 1508, 1515, 1516, 1517, 1524, 1525, 1526, 1533, 1534,
					1535, 1547, 1548, 1549, 1556, 1557, 1558, 1566, 1567, 1568,
					1576, 1577, 1578, 1586, 1587, 1588, 1596, 1597, 1598, 1605,
					1606, 1607, 1616, 1617, 1618, 1627, 1628, 1629, 1638, 1639,
					1640, 6007, 6008, 6011, 8673, 8674, 12041, 12042, 12429,
					12430, 12431, 12439, 12440, 12441, 12449, 12450, 12451,
					12459, 12460, 15881, 15882, 15885, 18474, 18475, 18478 };
			for (int r = 0; r &lt; runeChildren.length; r++)
				if (class9_1.id == runeChildren[r])
					class9_1.modelZoom = 775;
			if (class9_1.type == 0) {
				if (class9_1.scrollPosition &gt; class9_1.scrollMax
						- class9_1.height)
					class9_1.scrollPosition = class9_1.scrollMax
					- class9_1.height;
				if (class9_1.scrollPosition &lt; 0)
					class9_1.scrollPosition = 0;
				drawInterface(class9_1.scrollPosition, k2, class9_1, l2);
				if (class9_1.scrollMax &gt; class9_1.height)
					drawScrollbar(class9_1.height, class9_1.scrollPosition, l2,
							k2 + class9_1.width, class9_1.scrollMax);
			} else if (class9_1.type != 1)
				if (class9_1.type == 2) {
					int i3 = 0;
					for (int l3 = 0; l3 &lt; class9_1.height; l3++) {
						for (int l4 = 0; l4 &lt; class9_1.width; l4++) {
							int k5 = k2 + l4 * (32 + class9_1.invSpritePadX);
							int j6 = l2 + l3 * (32 + class9_1.invSpritePadY);
							if (i3 &lt; 20) {
								k5 += class9_1.spritesX[i3];
								j6 += class9_1.spritesY[i3];
							}
							if (class9_1.inv[i3] &gt; 0) {
								int k6 = 0;
								int j7 = 0;
								int j9 = class9_1.inv[i3] - 1;
								if (k5 &gt; DrawingArea.topX - 32
										&amp;&amp; k5 &lt; DrawingArea.bottomX
										&amp;&amp; j6 &gt; DrawingArea.topY - 32
										&amp;&amp; j6 &lt; DrawingArea.bottomY
										|| activeInterfaceType != 0
										&amp;&amp; anInt1085 == i3) {
									int l9 = 0;
									if (itemSelected == 1 &amp;&amp; anInt1283 == i3
											&amp;&amp; anInt1284 == class9_1.id)
										l9 = 0xffffff;
									Sprite class30_sub2_sub1_sub1_2 = ItemDef
									.getSprite(j9,
											class9_1.invStackSizes[i3],
											l9);
									if (class30_sub2_sub1_sub1_2 != null) {
										if (activeInterfaceType != 0
												&amp;&amp; anInt1085 == i3
												&amp;&amp; anInt1084 == class9_1.id) {
											k6 = super.mouseX - anInt1087;
											j7 = super.mouseY - anInt1088;
											if (k6 &lt; 5 &amp;&amp; k6 &gt; -5)
												k6 = 0;
											if (j7 &lt; 5 &amp;&amp; j7 &gt; -5)
												j7 = 0;
											if (anInt989 &lt; 5) {
												k6 = 0;
												j7 = 0;
											}
											class30_sub2_sub1_sub1_2
											.drawSprite1(k5 + k6, j6
													+ j7);
											if (j6 + j7 &lt; DrawingArea.topY
													&amp;&amp; class9.scrollPosition &gt; 0) {
												int i10 = (anInt945 * (DrawingArea.topY
														- j6 - j7)) / 3;
												if (i10 &gt; anInt945 * 10)
													i10 = anInt945 * 10;
												if (i10 &gt; class9.scrollPosition)
													i10 = class9.scrollPosition;
												class9.scrollPosition -= i10;
												anInt1088 += i10;
											}
											if (j6 + j7 + 32 &gt; DrawingArea.bottomY
													&amp;&amp; class9.scrollPosition &lt; class9.scrollMax
													- class9.height) {
												int j10 = (anInt945 * ((j6 + j7 + 32) - DrawingArea.bottomY)) / 3;
												if (j10 &gt; anInt945 * 10)
													j10 = anInt945 * 10;
												if (j10 &gt; class9.scrollMax
														- class9.height
														- class9.scrollPosition)
													j10 = class9.scrollMax
													- class9.height
													- class9.scrollPosition;
												class9.scrollPosition += j10;
												anInt1088 -= j10;
											}
										} else if (atInventoryInterfaceType != 0
												&amp;&amp; atInventoryIndex == i3
												&amp;&amp; atInventoryInterface == class9_1.id)
											class30_sub2_sub1_sub1_2
											.drawSprite1(k5, j6);
										else
											class30_sub2_sub1_sub1_2
											.drawSprite(k5, j6);
										if (class30_sub2_sub1_sub1_2.anInt1444 == 33
												|| class9_1.invStackSizes[i3] != 1) {
											int k10 = class9_1.invStackSizes[i3];
											if (intToKOrMil(k10) == &quot;@inf@&quot;) {
												infinity.drawSprite(k5 + k6, j6
														+ j7);
											} else {
												if (k10 &gt;= 1) {
													smallText.method385(0,
															intToKOrMil(k10),
															j6 + 10 + j7, k5
															+ 1 + k6);
													smallText.method385(
															0xFFFF00,
															intToKOrMil(k10),
															j6 + 9 + j7, k5
															+ k6);
												}
												if (k10 &gt;= 100000) {
													smallText.method385(0,
															intToKOrMil(k10),
															j6 + 10 + j7, k5
															+ 1 + k6);
													smallText.method385(
															0xFFFFFF,
															intToKOrMil(k10),
															j6 + 9 + j7, k5
															+ k6);
												}
												if (k10 &gt;= 10000000) {
													smallText.method385(0,
															intToKOrMil(k10),
															j6 + 10 + j7, k5
															+ 1 + k6);
													smallText.method385(
															0x00ff80,
															intToKOrMil(k10),
															j6 + 9 + j7, k5
															+ k6);
												}
												/*
												 * smallText.method385(0,
												 * intToKOrMil(k10), j6 + 10 +
												 * j7, k5 + 1 + k6);
												 * smallText.method385(0xffff00,
												 * intToKOrMil(k10), j6 + 9 +
												 * j7, k5 + k6);
												 */
											}
										}
									}
								}
							} else if (class9_1.sprites != null &amp;&amp; i3 &lt; 20) {
								Sprite class30_sub2_sub1_sub1_1 = class9_1.sprites[i3];
								if (class30_sub2_sub1_sub1_1 != null)
									class30_sub2_sub1_sub1_1.drawSprite(k5, j6);
							}
							i3++;
						}
					}
				} else if (class9_1.type == 3) {
					boolean flag = false;
					if (anInt1039 == class9_1.id || anInt1048 == class9_1.id
							|| anInt1026 == class9_1.id)
						flag = true;
					int j3;
					if (interfaceIsSelected(class9_1)) {
						j3 = class9_1.anInt219;
						if (flag &amp;&amp; class9_1.anInt239 != 0)
							j3 = class9_1.anInt239;
					} else {
						j3 = class9_1.textColor;
						if (flag &amp;&amp; class9_1.anInt216 != 0)
							j3 = class9_1.anInt216;
					}
					if (class9_1.aByte254 == 0) {
						if (class9_1.aBoolean227)
							DrawingArea.drawPixels(class9_1.height, l2, k2, j3,
									class9_1.width);
						else
							DrawingArea.fillPixels(k2, class9_1.width,
									class9_1.height, j3, l2);
					} else if (class9_1.aBoolean227)
						DrawingArea.method335(j3, l2, class9_1.width,
								class9_1.height,
								256 - (class9_1.aByte254 &amp; 0xff), k2);
					else
						DrawingArea.method338(l2, class9_1.height,
								256 - (class9_1.aByte254 &amp; 0xff), j3,
								class9_1.width, k2);
				} else if (class9_1.type == 4) {
					TextDrawingArea textDrawingArea = class9_1.textDrawingAreas;
					String s = class9_1.message;
					boolean flag1 = false;
					if (anInt1039 == class9_1.id || anInt1048 == class9_1.id
							|| anInt1026 == class9_1.id)
						flag1 = true;
					int i4;
					if (interfaceIsSelected(class9_1)) {
						i4 = class9_1.anInt219;
						if (flag1 &amp;&amp; class9_1.anInt239 != 0)
							i4 = class9_1.anInt239;
						if (class9_1.aString228.length() &gt; 0)
							s = class9_1.aString228;
					} else {
						i4 = class9_1.textColor;
						if (flag1 &amp;&amp; class9_1.anInt216 != 0)
							i4 = class9_1.anInt216;
					}
					if (class9_1.atActionType == 6 &amp;&amp; aBoolean1149) {
						s = &quot;Please wait...&quot;;
						i4 = class9_1.textColor;
					}
					if (DrawingArea.width == 519) {
						if (i4 == 0xffff00)
							i4 = 255;
						if (i4 == 49152)
							i4 = 0xffffff;
					}
					if ((class9_1.parentID == 1151)
							|| (class9_1.parentID == 12855)) {
						switch (i4) {
						case 16773120:
							i4 = 0xFE981F;
							break;
						case 7040819:
							i4 = 0xAF6A1A;
							break;
						}
					}
					// Skill interface
					int id = 4004;
					int id2 = 4005;
					if (class9_1.parentID == 3917 &amp;&amp; class9_1.id != id
							&amp;&amp; class9_1.id != id + 2 &amp;&amp; class9_1.id != id + 4
							&amp;&amp; class9_1.id != id + 6 &amp;&amp; class9_1.id != id + 8
							&amp;&amp; class9_1.id != id + 10 &amp;&amp; class9_1.id != id + 12
							&amp;&amp; class9_1.id != id + 14 &amp;&amp; class9_1.id != id + 16
							&amp;&amp; class9_1.id != id + 18 &amp;&amp; class9_1.id != id + 20
							&amp;&amp; class9_1.id != id + 23 &amp;&amp; class9_1.id != id + 24
							&amp;&amp; class9_1.id != id + 26 &amp;&amp; class9_1.id != id + 28
							&amp;&amp; class9_1.id != id + 30 &amp;&amp; class9_1.id != id + 32
							&amp;&amp; class9_1.id != id + 34 &amp;&amp; class9_1.id != 13926
							&amp;&amp; class9_1.id != 4152 &amp;&amp; class9_1.id != 12166
							&amp;&amp; class9_1.id != id2 &amp;&amp; class9_1.id != id2 + 2
							&amp;&amp; class9_1.id != id2 + 4 &amp;&amp; class9_1.id != id2 + 6
							&amp;&amp; class9_1.id != id2 + 8
							&amp;&amp; class9_1.id != id2 + 10
							&amp;&amp; class9_1.id != id2 + 12
							&amp;&amp; class9_1.id != id2 + 14
							&amp;&amp; class9_1.id != id2 + 16
							&amp;&amp; class9_1.id != id2 + 18
							&amp;&amp; class9_1.id != id2 + 20
							&amp;&amp; class9_1.id != id2 + 23
							&amp;&amp; class9_1.id != id2 + 24
							&amp;&amp; class9_1.id != id2 + 26
							&amp;&amp; class9_1.id != id2 + 28
							&amp;&amp; class9_1.id != id2 + 30
							&amp;&amp; class9_1.id != id2 + 32
							&amp;&amp; class9_1.id != id2 + 34 &amp;&amp; class9_1.id != 13927
							&amp;&amp; class9_1.id != 4153 &amp;&amp; class9_1.id != 12167
							&amp;&amp; class9_1.id != 4026) {
						if (i4 == 16776960)
							i4 = 0x0000;
						class9_1.textShadow = false;
					}
					for (int l6 = l2 + textDrawingArea.anInt1497; s.length() &gt; 0; l6 += textDrawingArea.anInt1497) {
						if (s.indexOf(&quot;%&quot;) != -1) {
							do {
								int k7 = s.indexOf(&quot;%1&quot;);
								if (k7 == -1)
									break;
								if (class9_1.id &lt; 4000 || class9_1.id &gt; 5000
										&amp;&amp; class9_1.id != 13921
										&amp;&amp; class9_1.id != 13922
										&amp;&amp; class9_1.id != 12171
										&amp;&amp; class9_1.id != 12172)
									s = s.substring(0, k7)
									+ methodR(extractInterfaceValues(
											class9_1, 0))
											+ s.substring(k7 + 2);
								else
									s = s.substring(0, k7)
									+ interfaceIntToString(extractInterfaceValues(
											class9_1, 0))
											+ s.substring(k7 + 2);
							} while (true);
							do {
								int l7 = s.indexOf(&quot;%2&quot;);
								if (l7 == -1)
									break;
								s = s.substring(0, l7)
								+ interfaceIntToString(extractInterfaceValues(
										class9_1, 1))
										+ s.substring(l7 + 2);
							} while (true);
							do {
								int i8 = s.indexOf(&quot;%3&quot;);
								if (i8 == -1)
									break;
								s = s.substring(0, i8)
								+ interfaceIntToString(extractInterfaceValues(
										class9_1, 2))
										+ s.substring(i8 + 2);
							} while (true);
							do {
								int j8 = s.indexOf(&quot;%4&quot;);
								if (j8 == -1)
									break;
								s = s.substring(0, j8)
								+ interfaceIntToString(extractInterfaceValues(
										class9_1, 3))
										+ s.substring(j8 + 2);
							} while (true);
							do {
								int k8 = s.indexOf(&quot;%5&quot;);
								if (k8 == -1)
									break;
								s = s.substring(0, k8)
								+ interfaceIntToString(extractInterfaceValues(
										class9_1, 4))
										+ s.substring(k8 + 2);
							} while (true);
						}
						int l8 = s.indexOf(&quot;\\n&quot;);
						String s1;
						if (l8 != -1) {
							s1 = s.substring(0, l8);
							s = s.substring(l8 + 2);
						} else {
							s1 = s;
							s = &quot;&quot;;
						}
						if (class9_1.centerText)
							textDrawingArea.method382(i4, k2 + class9_1.width
									/ 2, s1, l6, class9_1.textShadow);
						else
							textDrawingArea.method389(class9_1.textShadow, k2,
									i4, s1, l6);
					}
				} else if (class9_1.type == 5) {
					// whats this?

					Sprite sprite;
					if (interfaceIsSelected(class9_1))
						sprite = class9_1.sprite2;
					else
						sprite = class9_1.sprite1;
					if (sprite != null) {
						if (spellSelected == 1 &amp;&amp; class9_1.id == spellID &amp;&amp; spellID != 0)
							sprite.Outlining(k2, l2, 0xffffff);
						else
							sprite.drawSprite(k2, l2);
					}
					if (Autocast &amp;&amp; class9_1.id == autocastId)
						magicAuto.drawSprite(k2 - 3, l2 - 3);
					if (sprite != null)
						sprite.drawSprite(k2, l2);
				} else if (class9_1.type == 6) {
					int k3 = Texture.textureInt1;
					int j4 = Texture.textureInt2;
					Texture.textureInt1 = k2 + class9_1.width / 2;
					Texture.textureInt2 = l2 + class9_1.height / 2;
					int i5 = Texture.anIntArray1470[class9_1.modelRotation1]
					                                * class9_1.modelZoom &gt;&gt; 16;
					                                int l5 = Texture.anIntArray1471[class9_1.modelRotation1]
					                                                                * class9_1.modelZoom &gt;&gt; 16;
					                                                                boolean flag2 = interfaceIsSelected(class9_1);
					                                                                int i7;
					                                                                if (flag2)
					                                                                	i7 = class9_1.anInt258;
					                                                                else
					                                                                	i7 = class9_1.anInt257;
					                                                                Model model;
					                                                                if (i7 == -1) {
					                                                                	model = class9_1.method209(-1, -1, flag2);
					                                                                } else {
					                                                                	Animation animation = Animation.anims[i7];
					                                                                	model = class9_1.method209(
					                                                                			animation.anIntArray354[class9_1.anInt246],
					                                                                			animation.anIntArray353[class9_1.anInt246],
					                                                                			flag2);
					                                                                }
					                                                                if (model != null)
					                                                                	model.method482(class9_1.modelRotation2, 0,
					                                                                			class9_1.modelRotation1, 0, i5, l5);
					                                                                Texture.textureInt1 = k3;
					                                                                Texture.textureInt2 = j4;
				} else if (class9_1.type == 7) {
					TextDrawingArea textDrawingArea_1 = class9_1.textDrawingAreas;
					int k4 = 0;
					for (int j5 = 0; j5 &lt; class9_1.height; j5++) {
						for (int i6 = 0; i6 &lt; class9_1.width; i6++) {
							if (class9_1.inv[k4] &gt; 0) {
								ItemDef itemDef = ItemDef
								.forID(class9_1.inv[k4] - 1);
								String s2 = itemDef.name;
								if (itemDef.stackable
										|| class9_1.invStackSizes[k4] != 1)
									s2 = s2
									+ &quot; x&quot;
									+ intToKOrMilLongName(class9_1.invStackSizes[k4]);
								int i9 = k2 + i6
								* (115 + class9_1.invSpritePadX);
								int k9 = l2 + j5
								* (12 + class9_1.invSpritePadY);
								if (class9_1.centerText)
									textDrawingArea_1.method382(
											class9_1.textColor, i9
											+ class9_1.width / 2, s2,
											k9, class9_1.textShadow);
								else
									textDrawingArea_1.method389(
											class9_1.textShadow, i9,
											class9_1.textColor, s2, k9);
							}
							k4++;
						}
					}
				} else if (class9_1.type == 8) {
					String hoverText;
					if (interfaceIsSelected(class9_1)) {
						hoverText = class9_1.aString228;
					} else
						hoverText = class9_1.message;
					drawHoverBox(k2, l2, hoverText);
					// drawHoverBox(k2, l2, class9_1.popupString);
				}
		}
		DrawingArea.setDrawingArea(l1, i1, k1, j1);
	}
[/code]
[/code]</description>
    
    <lastBuildDate>Sat, 03 Sep 2011 17:23:18 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/achv-tab-please-help-rep/413327.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>&#39;Achv Tab&#39; Please help ++REP</title>
        <dc:creator><![CDATA[@eballer48 eballer48]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/eballer48">@eballer48</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="413327">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/pk2play/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> pk2play:</div>
<blockquote>
<p>What is line 10926?</p>
</blockquote>
</aside>
<p>This is hard as hell to do on my phone lol but its the second line of code</p>
<p>“Class9.type == 0” etc “class9.children == null”</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/achv-tab-please-help-rep/413327/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/achv-tab-please-help-rep/413327/3</link>
        <pubDate>Sat, 03 Sep 2011 17:23:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-413327-3</guid>
        <source url="https://forum.moparisthebest.com/t/achv-tab-please-help-rep/413327.rss">&#39;Achv Tab&#39; Please help ++REP</source>
      </item>
      <item>
        <title>&#39;Achv Tab&#39; Please help ++REP</title>
        <dc:creator><![CDATA[@pk2play pk2play]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pk2play">@pk2play</a> wrote:</p>
          <blockquote>
              <p>What is line 10926?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/achv-tab-please-help-rep/413327/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/achv-tab-please-help-rep/413327/2</link>
        <pubDate>Sat, 03 Sep 2011 17:18:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-413327-2</guid>
        <source url="https://forum.moparisthebest.com/t/achv-tab-please-help-rep/413327.rss">&#39;Achv Tab&#39; Please help ++REP</source>
      </item>
      <item>
        <title>&#39;Achv Tab&#39; Please help ++REP</title>
        <dc:creator><![CDATA[@eballer48 eballer48]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/eballer48">@eballer48</a> wrote:</p>
          <blockquote>
              <p>So im trying to make the achv tab my dung tab but when i click on it nothing happens and when i go the quest tab click the little icon in the top right client freezes.<br>
Help?will ++rep</p>
<p>Error<br>
“Exception in thread “Thread-6” java.lang.NullPointerException”</p>
<p><img src="http://i1132.photobucket.com/albums/m575/BlahBerrys/untitled-7.jpg" alt width="514" height="156"></p>
<p>my draw interface code</p>
<pre><code class="lang-auto">

[code]
	private void drawInterface(int j, int k, RSInterface class9, int l) {
		if (class9.type != 0 || class9.children == null)
			return;
		if (class9.isMouseoverTriggered &amp;&amp; anInt1026 != class9.id
				&amp;&amp; anInt1048 != class9.id &amp;&amp; anInt1039 != class9.id)
			return;
		int i1 = DrawingArea.topX;
		int j1 = DrawingArea.topY;
		int k1 = DrawingArea.bottomX;
		int l1 = DrawingArea.bottomY;
		DrawingArea.setDrawingArea(l + class9.height, k, k + class9.width, l);
		int i2 = class9.children.length;
		for (int j2 = 0; j2 &lt; i2; j2++) {
			int k2 = class9.childX[j2] + k;
			int l2 = (class9.childY[j2] + l) - j;
			RSInterface class9_1 = RSInterface.interfaceCache[class9.children[j2]];
			k2 += class9_1.anInt263;
			l2 += class9_1.anInt265;
			if (class9_1.contentType &gt; 0)
				drawFriendsListOrWelcomeScreen(class9_1);
			// here
			int[] IDs = { 1196, 1199, 1206, 1215, 1224, 1231, 1240, 1249, 1258,
					1267, 1274, 1283, 1573, 1290, 1299, 1308, 1315, 1324, 1333,
					1340, 1349, 1358, 1367, 1374, 1381, 1388, 1397, 1404, 1583,
					12038, 1414, 1421, 1430, 1437, 1446, 1453, 1460, 1469,
					15878, 1602, 1613, 1624, 7456, 1478, 1485, 1494, 1503,
					1512, 1521, 1530, 1544, 1553, 1563, 1593, 1635, 12426,
					12436, 12446, 12456, 6004, 18471,
					/* Ancients */
					12940, 12988, 13036, 12902, 12862, 13046, 12964, 13012,
					13054, 12920, 12882, 13062, 12952, 13000, 13070, 12912,
					12872, 13080, 12976, 13024, 13088, 12930, 12892, 13096 };
			for (int m5 = 0; m5 &lt; IDs.length; m5++) {
				if (class9_1.id == IDs[m5] + 1) {
					if (m5 &gt; 61)
						drawBlackBox(k2 + 1, l2);
					else
						drawBlackBox(k2, l2 + 1);
				}
			}
			int[] runeChildren = { 1202, 1203, 1209, 1210, 1211, 1218, 1219,
					1220, 1227, 1228, 1234, 1235, 1236, 1243, 1244, 1245, 1252,
					1253, 1254, 1261, 1262, 1263, 1270, 1271, 1277, 1278, 1279,
					1286, 1287, 1293, 1294, 1295, 1302, 1303, 1304, 1311, 1312,
					1318, 1319, 1320, 1327, 1328, 1329, 1336, 1337, 1343, 1344,
					1345, 1352, 1353, 1354, 1361, 1362, 1363, 1370, 1371, 1377,
					1378, 1384, 1385, 1391, 1392, 1393, 1400, 1401, 1407, 1408,
					1410, 1417, 1418, 1424, 1425, 1426, 1433, 1434, 1440, 1441,
					1442, 1449, 1450, 1456, 1457, 1463, 1464, 1465, 1472, 1473,
					1474, 1481, 1482, 1488, 1489, 1490, 1497, 1498, 1499, 1506,
					1507, 1508, 1515, 1516, 1517, 1524, 1525, 1526, 1533, 1534,
					1535, 1547, 1548, 1549, 1556, 1557, 1558, 1566, 1567, 1568,
					1576, 1577, 1578, 1586, 1587, 1588, 1596, 1597, 1598, 1605,
					1606, 1607, 1616, 1617, 1618, 1627, 1628, 1629, 1638, 1639,
					1640, 6007, 6008, 6011, 8673, 8674, 12041, 12042, 12429,
					12430, 12431, 12439, 12440, 12441, 12449, 12450, 12451,
					12459, 12460, 15881, 15882, 15885, 18474, 18475, 18478 };
			for (int r = 0; r &lt; runeChildren.length; r++)
				if (class9_1.id == runeChildren[r])
					class9_1.modelZoom = 775;
			if (class9_1.type == 0) {
				if (class9_1.scrollPosition &gt; class9_1.scrollMax
						- class9_1.height)
					class9_1.scrollPosition = class9_1.scrollMax
					- class9_1.height;
				if (class9_1.scrollPosition &lt; 0)
					class9_1.scrollPosition = 0;
				drawInterface(class9_1.scrollPosition, k2, class9_1, l2);
				if (class9_1.scrollMax &gt; class9_1.height)
					drawScrollbar(class9_1.height, class9_1.scrollPosition, l2,
							k2 + class9_1.width, class9_1.scrollMax);
			} else if (class9_1.type != 1)
				if (class9_1.type == 2) {
					int i3 = 0;
					for (int l3 = 0; l3 &lt; class9_1.height; l3++) {
						for (int l4 = 0; l4 &lt; class9_1.width; l4++) {
							int k5 = k2 + l4 * (32 + class9_1.invSpritePadX);
							int j6 = l2 + l3 * (32 + class9_1.invSpritePadY);
							if (i3 &lt; 20) {
								k5 += class9_1.spritesX[i3];
								j6 += class9_1.spritesY[i3];
							}
							if (class9_1.inv[i3] &gt; 0) {
								int k6 = 0;
								int j7 = 0;
								int j9 = class9_1.inv[i3] - 1;
								if (k5 &gt; DrawingArea.topX - 32
										&amp;&amp; k5 &lt; DrawingArea.bottomX
										&amp;&amp; j6 &gt; DrawingArea.topY - 32
										&amp;&amp; j6 &lt; DrawingArea.bottomY
										|| activeInterfaceType != 0
										&amp;&amp; anInt1085 == i3) {
									int l9 = 0;
									if (itemSelected == 1 &amp;&amp; anInt1283 == i3
											&amp;&amp; anInt1284 == class9_1.id)
										l9 = 0xffffff;
									Sprite class30_sub2_sub1_sub1_2 = ItemDef
									.getSprite(j9,
											class9_1.invStackSizes[i3],
											l9);
									if (class30_sub2_sub1_sub1_2 != null) {
										if (activeInterfaceType != 0
												&amp;&amp; anInt1085 == i3
												&amp;&amp; anInt1084 == class9_1.id) {
											k6 = super.mouseX - anInt1087;
											j7 = super.mouseY - anInt1088;
											if (k6 &lt; 5 &amp;&amp; k6 &gt; -5)
												k6 = 0;
											if (j7 &lt; 5 &amp;&amp; j7 &gt; -5)
												j7 = 0;
											if (anInt989 &lt; 5) {
												k6 = 0;
												j7 = 0;
											}
											class30_sub2_sub1_sub1_2
											.drawSprite1(k5 + k6, j6
													+ j7);
											if (j6 + j7 &lt; DrawingArea.topY
													&amp;&amp; class9.scrollPosition &gt; 0) {
												int i10 = (anInt945 * (DrawingArea.topY
														- j6 - j7)) / 3;
												if (i10 &gt; anInt945 * 10)
													i10 = anInt945 * 10;
												if (i10 &gt; class9.scrollPosition)
													i10 = class9.scrollPosition;
												class9.scrollPosition -= i10;
												anInt1088 += i10;
											}
											if (j6 + j7 + 32 &gt; DrawingArea.bottomY
													&amp;&amp; class9.scrollPosition &lt; class9.scrollMax
													- class9.height) {
												int j10 = (anInt945 * ((j6 + j7 + 32) - DrawingArea.bottomY)) / 3;
												if (j10 &gt; anInt945 * 10)
													j10 = anInt945 * 10;
												if (j10 &gt; class9.scrollMax
														- class9.height
														- class9.scrollPosition)
													j10 = class9.scrollMax
													- class9.height
													- class9.scrollPosition;
												class9.scrollPosition += j10;
												anInt1088 -= j10;
											}
										} else if (atInventoryInterfaceType != 0
												&amp;&amp; atInventoryIndex == i3
												&amp;&amp; atInventoryInterface == class9_1.id)
											class30_sub2_sub1_sub1_2
											.drawSprite1(k5, j6);
										else
											class30_sub2_sub1_sub1_2
											.drawSprite(k5, j6);
										if (class30_sub2_sub1_sub1_2.anInt1444 == 33
												|| class9_1.invStackSizes[i3] != 1) {
											int k10 = class9_1.invStackSizes[i3];
											if (intToKOrMil(k10) == "@inf@") {
												infinity.drawSprite(k5 + k6, j6
														+ j7);
											} else {
												if (k10 &gt;= 1) {
													smallText.method385(0,
															intToKOrMil(k10),
															j6 + 10 + j7, k5
															+ 1 + k6);
													smallText.method385(
															0xFFFF00,
															intToKOrMil(k10),
															j6 + 9 + j7, k5
															+ k6);
												}
												if (k10 &gt;= 100000) {
													smallText.method385(0,
															intToKOrMil(k10),
															j6 + 10 + j7, k5
															+ 1 + k6);
													smallText.method385(
															0xFFFFFF,
															intToKOrMil(k10),
															j6 + 9 + j7, k5
															+ k6);
												}
												if (k10 &gt;= 10000000) {
													smallText.method385(0,
															intToKOrMil(k10),
															j6 + 10 + j7, k5
															+ 1 + k6);
													smallText.method385(
															0x00ff80,
															intToKOrMil(k10),
															j6 + 9 + j7, k5
															+ k6);
												}
												/*
												 * smallText.method385(0,
												 * intToKOrMil(k10), j6 + 10 +
												 * j7, k5 + 1 + k6);
												 * smallText.method385(0xffff00,
												 * intToKOrMil(k10), j6 + 9 +
												 * j7, k5 + k6);
												 */
											}
										}
									}
								}
							} else if (class9_1.sprites != null &amp;&amp; i3 &lt; 20) {
								Sprite class30_sub2_sub1_sub1_1 = class9_1.sprites[i3];
								if (class30_sub2_sub1_sub1_1 != null)
									class30_sub2_sub1_sub1_1.drawSprite(k5, j6);
							}
							i3++;
						}
					}
				} else if (class9_1.type == 3) {
					boolean flag = false;
					if (anInt1039 == class9_1.id || anInt1048 == class9_1.id
							|| anInt1026 == class9_1.id)
						flag = true;
					int j3;
					if (interfaceIsSelected(class9_1)) {
						j3 = class9_1.anInt219;
						if (flag &amp;&amp; class9_1.anInt239 != 0)
							j3 = class9_1.anInt239;
					} else {
						j3 = class9_1.textColor;
						if (flag &amp;&amp; class9_1.anInt216 != 0)
							j3 = class9_1.anInt216;
					}
					if (class9_1.aByte254 == 0) {
						if (class9_1.aBoolean227)
							DrawingArea.drawPixels(class9_1.height, l2, k2, j3,
									class9_1.width);
						else
							DrawingArea.fillPixels(k2, class9_1.width,
									class9_1.height, j3, l2);
					} else if (class9_1.aBoolean227)
						DrawingArea.method335(j3, l2, class9_1.width,
								class9_1.height,
								256 - (class9_1.aByte254 &amp; 0xff), k2);
					else
						DrawingArea.method338(l2, class9_1.height,
								256 - (class9_1.aByte254 &amp; 0xff), j3,
								class9_1.width, k2);
				} else if (class9_1.type == 4) {
					TextDrawingArea textDrawingArea = class9_1.textDrawingAreas;
					String s = class9_1.message;
					boolean flag1 = false;
					if (anInt1039 == class9_1.id || anInt1048 == class9_1.id
							|| anInt1026 == class9_1.id)
						flag1 = true;
					int i4;
					if (interfaceIsSelected(class9_1)) {
						i4 = class9_1.anInt219;
						if (flag1 &amp;&amp; class9_1.anInt239 != 0)
							i4 = class9_1.anInt239;
						if (class9_1.aString228.length() &gt; 0)
							s = class9_1.aString228;
					} else {
						i4 = class9_1.textColor;
						if (flag1 &amp;&amp; class9_1.anInt216 != 0)
							i4 = class9_1.anInt216;
					}
					if (class9_1.atActionType == 6 &amp;&amp; aBoolean1149) {
						s = "Please wait...";
						i4 = class9_1.textColor;
					}
					if (DrawingArea.width == 519) {
						if (i4 == 0xffff00)
							i4 = 255;
						if (i4 == 49152)
							i4 = 0xffffff;
					}
					if ((class9_1.parentID == 1151)
							|| (class9_1.parentID == 12855)) {
						switch (i4) {
						case 16773120:
							i4 = 0xFE981F;
							break;
						case 7040819:
							i4 = 0xAF6A1A;
							break;
						}
					}
					// Skill interface
					int id = 4004;
					int id2 = 4005;
					if (class9_1.parentID == 3917 &amp;&amp; class9_1.id != id
							&amp;&amp; class9_1.id != id + 2 &amp;&amp; class9_1.id != id + 4
							&amp;&amp; class9_1.id != id + 6 &amp;&amp; class9_1.id != id + 8
							&amp;&amp; class9_1.id != id + 10 &amp;&amp; class9_1.id != id + 12
							&amp;&amp; class9_1.id != id + 14 &amp;&amp; class9_1.id != id + 16
							&amp;&amp; class9_1.id != id + 18 &amp;&amp; class9_1.id != id + 20
							&amp;&amp; class9_1.id != id + 23 &amp;&amp; class9_1.id != id + 24
							&amp;&amp; class9_1.id != id + 26 &amp;&amp; class9_1.id != id + 28
							&amp;&amp; class9_1.id != id + 30 &amp;&amp; class9_1.id != id + 32
							&amp;&amp; class9_1.id != id + 34 &amp;&amp; class9_1.id != 13926
							&amp;&amp; class9_1.id != 4152 &amp;&amp; class9_1.id != 12166
							&amp;&amp; class9_1.id != id2 &amp;&amp; class9_1.id != id2 + 2
							&amp;&amp; class9_1.id != id2 + 4 &amp;&amp; class9_1.id != id2 + 6
							&amp;&amp; class9_1.id != id2 + 8
							&amp;&amp; class9_1.id != id2 + 10
							&amp;&amp; class9_1.id != id2 + 12
							&amp;&amp; class9_1.id != id2 + 14
							&amp;&amp; class9_1.id != id2 + 16
							&amp;&amp; class9_1.id != id2 + 18
							&amp;&amp; class9_1.id != id2 + 20
							&amp;&amp; class9_1.id != id2 + 23
							&amp;&amp; class9_1.id != id2 + 24
							&amp;&amp; class9_1.id != id2 + 26
							&amp;&amp; class9_1.id != id2 + 28
							&amp;&amp; class9_1.id != id2 + 30
							&amp;&amp; class9_1.id != id2 + 32
							&amp;&amp; class9_1.id != id2 + 34 &amp;&amp; class9_1.id != 13927
							&amp;&amp; class9_1.id != 4153 &amp;&amp; class9_1.id != 12167
							&amp;&amp; class9_1.id != 4026) {
						if (i4 == 16776960)
							i4 = 0x0000;
						class9_1.textShadow = false;
					}
					for (int l6 = l2 + textDrawingArea.anInt1497; s.length() &gt; 0; l6 += textDrawingArea.anInt1497) {
						if (s.indexOf("%") != -1) {
							do {
								int k7 = s.indexOf("%1");
								if (k7 == -1)
									break;
								if (class9_1.id &lt; 4000 || class9_1.id &gt; 5000
										&amp;&amp; class9_1.id != 13921
										&amp;&amp; class9_1.id != 13922
										&amp;&amp; class9_1.id != 12171
										&amp;&amp; class9_1.id != 12172)
									s = s.substring(0, k7)
									+ methodR(extractInterfaceValues(
											class9_1, 0))
											+ s.substring(k7 + 2);
								else
									s = s.substring(0, k7)
									+ interfaceIntToString(extractInterfaceValues(
											class9_1, 0))
											+ s.substring(k7 + 2);
							} while (true);
							do {
								int l7 = s.indexOf("%2");
								if (l7 == -1)
									break;
								s = s.substring(0, l7)
								+ interfaceIntToString(extractInterfaceValues(
										class9_1, 1))
										+ s.substring(l7 + 2);
							} while (true);
							do {
								int i8 = s.indexOf("%3");
								if (i8 == -1)
									break;
								s = s.substring(0, i8)
								+ interfaceIntToString(extractInterfaceValues(
										class9_1, 2))
										+ s.substring(i8 + 2);
							} while (true);
							do {
								int j8 = s.indexOf("%4");
								if (j8 == -1)
									break;
								s = s.substring(0, j8)
								+ interfaceIntToString(extractInterfaceValues(
										class9_1, 3))
										+ s.substring(j8 + 2);
							} while (true);
							do {
								int k8 = s.indexOf("%5");
								if (k8 == -1)
									break;
								s = s.substring(0, k8)
								+ interfaceIntToString(extractInterfaceValues(
										class9_1, 4))
										+ s.substring(k8 + 2);
							} while (true);
						}
						int l8 = s.indexOf("\\n");
						String s1;
						if (l8 != -1) {
							s1 = s.substring(0, l8);
							s = s.substring(l8 + 2);
						} else {
							s1 = s;
							s = "";
						}
						if (class9_1.centerText)
							textDrawingArea.method382(i4, k2 + class9_1.width
									/ 2, s1, l6, class9_1.textShadow);
						else
							textDrawingArea.method389(class9_1.textShadow, k2,
									i4, s1, l6);
					}
				} else if (class9_1.type == 5) {
					// whats this?

					Sprite sprite;
					if (interfaceIsSelected(class9_1))
						sprite = class9_1.sprite2;
					else
						sprite = class9_1.sprite1;
					if (sprite != null) {
						if (spellSelected == 1 &amp;&amp; class9_1.id == spellID &amp;&amp; spellID != 0)
							sprite.Outlining(k2, l2, 0xffffff);
						else
							sprite.drawSprite(k2, l2);
					}
					if (Autocast &amp;&amp; class9_1.id == autocastId)
						magicAuto.drawSprite(k2 - 3, l2 - 3);
					if (sprite != null)
						sprite.drawSprite(k2, l2);
				} else if (class9_1.type == 6) {
					int k3 = Texture.textureInt1;
					int j4 = Texture.textureInt2;
					Texture.textureInt1 = k2 + class9_1.width / 2;
					Texture.textureInt2 = l2 + class9_1.height / 2;
					int i5 = Texture.anIntArray1470[class9_1.modelRotation1]
					                                * class9_1.modelZoom &gt;&gt; 16;
					                                int l5 = Texture.anIntArray1471[class9_1.modelRotation1]
					                                                                * class9_1.modelZoom &gt;&gt; 16;
					                                                                boolean flag2 = interfaceIsSelected(class9_1);
					                                                                int i7;
					                                                                if (flag2)
					                                                                	i7 = class9_1.anInt258;
					                                                                else
					                                                                	i7 = class9_1.anInt257;
					                                                                Model model;
					                                                                if (i7 == -1) {
					                                                                	model = class9_1.method209(-1, -1, flag2);
					                                                                } else {
					                                                                	Animation animation = Animation.anims[i7];
					                                                                	model = class9_1.method209(
					                                                                			animation.anIntArray354[class9_1.anInt246],
					                                                                			animation.anIntArray353[class9_1.anInt246],
					                                                                			flag2);
					                                                                }
					                                                                if (model != null)
					                                                                	model.method482(class9_1.modelRotation2, 0,
					                                                                			class9_1.modelRotation1, 0, i5, l5);
					                                                                Texture.textureInt1 = k3;
					                                                                Texture.textureInt2 = j4;
				} else if (class9_1.type == 7) {
					TextDrawingArea textDrawingArea_1 = class9_1.textDrawingAreas;
					int k4 = 0;
					for (int j5 = 0; j5 &lt; class9_1.height; j5++) {
						for (int i6 = 0; i6 &lt; class9_1.width; i6++) {
							if (class9_1.inv[k4] &gt; 0) {
								ItemDef itemDef = ItemDef
								.forID(class9_1.inv[k4] - 1);
								String s2 = itemDef.name;
								if (itemDef.stackable
										|| class9_1.invStackSizes[k4] != 1)
									s2 = s2
									+ " x"
									+ intToKOrMilLongName(class9_1.invStackSizes[k4]);
								int i9 = k2 + i6
								* (115 + class9_1.invSpritePadX);
								int k9 = l2 + j5
								* (12 + class9_1.invSpritePadY);
								if (class9_1.centerText)
									textDrawingArea_1.method382(
											class9_1.textColor, i9
											+ class9_1.width / 2, s2,
											k9, class9_1.textShadow);
								else
									textDrawingArea_1.method389(
											class9_1.textShadow, i9,
											class9_1.textColor, s2, k9);
							}
							k4++;
						}
					}
				} else if (class9_1.type == 8) {
					String hoverText;
					if (interfaceIsSelected(class9_1)) {
						hoverText = class9_1.aString228;
					} else
						hoverText = class9_1.message;
					drawHoverBox(k2, l2, hoverText);
					// drawHoverBox(k2, l2, class9_1.popupString);
				}
		}
		DrawingArea.setDrawingArea(l1, i1, k1, j1);
	}
[/code]</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/achv-tab-please-help-rep/413327/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/achv-tab-please-help-rep/413327/1</link>
        <pubDate>Sat, 03 Sep 2011 17:18:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-413327-1</guid>
        <source url="https://forum.moparisthebest.com/t/achv-tab-please-help-rep/413327.rss">&#39;Achv Tab&#39; Please help ++REP</source>
      </item>
  </channel>
</rss>
