<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Can&#39;t eat/drink anything</title>
    <link>https://forum.moparisthebest.com/t/cant-eat-drink-anything/465376</link>
    <description>Nuff said.. When I click on food or pots nothing happens.

Clickitem.java:

&lt;blockquote&gt;package server.model.players.packets;
import server.util.Misc;
import server.model.players.Client;
import server.model.players.PacketType;

/**
* Clicking an item, bury bone, eat food etc
**/
public class ClickItem implements PacketType {

@Override

public void processPacket(Client c, int packetType, int packetSize) {
int junk = c.getInStream().readSignedWordBigEndianA();
int itemSlot = c.getInStream().readUnsignedWordA();
int itemId = c.getInStream().readUnsignedWordBigEndian();
if (itemId != c.playerItems[itemSlot] - 1) {
return;
}

if (itemId &gt;= 5509 &amp;&amp; itemId &lt;= 5514) {
int pouch = -1;
int a = itemId;
if (a == 5509)
pouch = 0;
if (a == 5510)
pouch = 1;
if (a == 5512)
pouch = 2;
if (a == 5514)
pouch = 3;
c.getPA().fillPouch(pouch);
return;
}
if (c.getHerblore().isUnidHerb(itemId))
c.getHerblore().handleHerbClick(itemId);
if (c.getFood().isFood(itemId))
c.getFood().eat(itemId,itemSlot);
//ScriptManager.callFunc(&quot;itemClick_&quot;+itemId, c, itemId, itemSlot);
if (c.getPotions().isPotion(itemId))
c.getPotions().handlePotion(itemId,itemSlot);
if (c.getPrayer().isBone(itemId))
c.getPrayer().buryBone(itemId, itemSlot);
if (itemId == 952) {
if(c.inArea(3553, 3301, 3561, 3294)) {
c.teleTimer = 3;
c.newLocation = 1;
} else if(c.inArea(3550, 3287, 3557, 3278)) {
c.teleTimer = 3;
c.newLocation = 2;
} else if(c.inArea(3561, 3292, 3568, 3285)) {
c.teleTimer = 3;
c.newLocation = 3;
} else if(c.inArea(3570, 3302, 3579, 3293)) {
c.teleTimer = 3;
c.newLocation = 4;
} else if(c.inArea(3571, 3285, 3582, 3278)) {
c.teleTimer = 3;
c.newLocation = 5;
} else if(c.inArea(3562, 3279, 3569, 3273)) {
c.teleTimer = 3;
c.newLocation = 6;
}
}
}
}
}&lt;/blockquote&gt;

Food.java:

&lt;blockquote&gt;package server.model.players;

import java.util.HashMap;
import server.util.Misc;

/**
* @author Sanity
*/

public class Food {


private Client c;

public Food (Client c) {
this.c = c;
}
public static enum FoodToEat {
MANTA(391, 22, &quot;Manta ray&quot;),
SHARK(385, 20, &quot;Shark&quot;),
LOBSTER(379, 12, &quot;Lobster&quot;),
TROUT(333, 7, &quot;Trout&quot;),
SALMON(329, 9, &quot;Salmon&quot;),
SWORDFISH(373, 14, &quot;Swordfish&quot;),
TUNA(361, 10, &quot;Tuna&quot;),
MONKFISH(7946, 16, &quot;Monkfish&quot;),
SEA_TURTLE(397, 22, &quot;Sea turtle&quot;),
COOKED_KARAMBWAN(3144, 18, &quot;Cooked karambwan&quot;),
TUNA_POTATO(7060, 22, &quot;Tuna potato&quot;),
ROCKTAIL(15272, 23, &quot;Rocktail&quot;),
PURPLE_SWEETS(10476, Misc.random(2) + 1, &quot;Purple sweets&quot;);


private int id; private int heal; private String name;

private FoodToEat(int id, int heal, String name) {
this.id = id;
this.heal = heal;
this.name = name;
}

public int getId() {
return id;
}

public int getHeal() {
return heal;
}

public String getName() {
return name;
}
public static HashMap &lt;Integer,FoodToEat&gt; food = new HashMap&lt;Integer,FoodToEat&gt;();

public static FoodToEat forId(int id) {
return food.get(id);
}

static {
for (FoodToEat f : FoodToEat.values())
food.put(f.getId(), f);
}
}

public void eat(int id, int slot) {
if (c.duelRule[6]) {
c.sendMessage(&quot;You may not eat in this duel.&quot;);
return;
}
if (System.currentTimeMillis() - c.foodDelay &gt;= 1500 &amp;&amp; c.constitution &gt; 0) {
c.getCombat().resetPlayerAttack();
c.attackTimer += 2;
c.startAnimation(829);
c.getItems().deleteItem(id,slot,1);
FoodToEat f = FoodToEat.food.get(id);
if (c.constitution &lt; (f.getId() == 15272 ? (c.maxConstitution * 1.1) : c.maxConstitution)) {
c.constitution += f.getHeal() * 10;
if (c.constitution &gt; (f.getId() == 15272 ? (c.maxConstitution * 1.1) : c.maxConstitution))
c.constitution = (int) (f.getId() == 15272 ? (c.maxConstitution * 1.1) : c.maxConstitution);
}
c.foodDelay = System.currentTimeMillis();
c.sendMessage(&quot;You eat the &quot; + f.getName() + &quot;.&quot;);
}
}


public boolean isFood(int id) {
return FoodToEat.food.containsKey(id);
}


}&lt;/blockquote&gt;</description>
    
    <lastBuildDate>Sun, 28 Oct 2012 03:53:02 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/cant-eat-drink-anything/465376.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Can&#39;t eat/drink anything</title>
        <dc:creator><![CDATA[@I_L I L]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/i_l">@I_L</a> wrote:</p>
          <blockquote>
              <p>Nuff said… When I click on food or pots nothing happens.</p>
<p>Clickitem.java:</p>
<blockquote>package server.model.players.packets;
import server.util.Misc;
import server.model.players.Client;
import server.model.players.PacketType;
<p>/**</p>
<ul>
<li>Clicking an item, bury bone, eat food etc<br>
**/<br>
public class ClickItem implements PacketType {</li>
</ul>
<p><a class="mention" href="/u/override">@Override</a></p>
<p>public void processPacket(Client c, int packetType, int packetSize) {<br>
int junk = c.getInStream().readSignedWordBigEndianA();<br>
int itemSlot = c.getInStream().readUnsignedWordA();<br>
int itemId = c.getInStream().readUnsignedWordBigEndian();<br>
if (itemId != c.playerItems[itemSlot] - 1) {<br>
return;<br>
}</p>
<p>if (itemId &gt;= 5509 &amp;&amp; itemId &lt;= 5514) {<br>
int pouch = -1;<br>
int a = itemId;<br>
if (a == 5509)<br>
pouch = 0;<br>
if (a == 5510)<br>
pouch = 1;<br>
if (a == 5512)<br>
pouch = 2;<br>
if (a == 5514)<br>
pouch = 3;<br>
c.getPA().fillPouch(pouch);<br>
return;<br>
}<br>
if (c.getHerblore().isUnidHerb(itemId))<br>
c.getHerblore().handleHerbClick(itemId);<br>
if (c.getFood().isFood(itemId))<br>
c.getFood().eat(itemId,itemSlot);<br>
<a href="//ScriptManager.callFunc" rel="nofollow noopener">//ScriptManager.callFunc</a>(“itemClick_”+itemId, c, itemId, itemSlot);<br>
if (c.getPotions().isPotion(itemId))<br>
c.getPotions().handlePotion(itemId,itemSlot);<br>
if (c.getPrayer().isBone(itemId))<br>
c.getPrayer().buryBone(itemId, itemSlot);<br>
if (itemId == 952) {<br>
if(c.inArea(3553, 3301, 3561, 3294)) {<br>
c.teleTimer = 3;<br>
c.newLocation = 1;<br>
} else if(c.inArea(3550, 3287, 3557, 3278)) {<br>
c.teleTimer = 3;<br>
c.newLocation = 2;<br>
} else if(c.inArea(3561, 3292, 3568, 3285)) {<br>
c.teleTimer = 3;<br>
c.newLocation = 3;<br>
} else if(c.inArea(3570, 3302, 3579, 3293)) {<br>
c.teleTimer = 3;<br>
c.newLocation = 4;<br>
} else if(c.inArea(3571, 3285, 3582, 3278)) {<br>
c.teleTimer = 3;<br>
c.newLocation = 5;<br>
} else if(c.inArea(3562, 3279, 3569, 3273)) {<br>
c.teleTimer = 3;<br>
c.newLocation = 6;<br>
}<br>
}<br>
}<br>
}<br>
}</p>
</blockquote>
<p>Food.java:</p>
<blockquote>package server.model.players;
<p>import java.util.HashMap;<br>
import server.util.Misc;</p>
<p>/**</p>
<ul>
<li>
<span class="mention">@author</span> Sanity<br>
*/</li>
</ul>
<p>public class Food {</p>
<p>private Client c;</p>
<p>public Food (Client c) {<br>
this.c = c;<br>
}<br>
public static enum FoodToEat {<br>
MANTA(391, 22, “Manta ray”),<br>
SHARK(385, 20, “Shark”),<br>
LOBSTER(379, 12, “Lobster”),<br>
TROUT(333, 7, “Trout”),<br>
SALMON(329, 9, “Salmon”),<br>
SWORDFISH(373, 14, “Swordfish”),<br>
TUNA(361, 10, “Tuna”),<br>
MONKFISH(7946, 16, “Monkfish”),<br>
SEA_TURTLE(397, 22, “Sea turtle”),<br>
COOKED_KARAMBWAN(3144, 18, “Cooked karambwan”),<br>
TUNA_POTATO(7060, 22, “Tuna potato”),<br>
ROCKTAIL(15272, 23, “Rocktail”),<br>
PURPLE_SWEETS(10476, Misc.random(2) + 1, “Purple sweets”);</p>
<p>private int id; private int heal; private String name;</p>
<p>private FoodToEat(int id, int heal, String name) {<br>
this.id = id;<br>
this.heal = heal;<br>
this.name = name;<br>
}</p>
<p>public int getId() {<br>
return id;<br>
}</p>
<p>public int getHeal() {<br>
return heal;<br>
}</p>
<p>public String getName() {<br>
return name;<br>
}<br>
public static HashMap &lt;Integer,FoodToEat&gt; food = new HashMap&lt;Integer,FoodToEat&gt;();</p>
<p>public static FoodToEat forId(int id) {<br>
return food.get(id);<br>
}</p>
<p>static {<br>
for (FoodToEat f : FoodToEat.values())<br>
food.put(f.getId(), f);<br>
}<br>
}</p>
<p>public void eat(int id, int slot) {<br>
if (c.duelRule[6]) {<br>
c.sendMessage(“You may not eat in this duel.”);<br>
return;<br>
}<br>
if (System.currentTimeMillis() - c.foodDelay &gt;= 1500 &amp;&amp; c.constitution &gt; 0) {<br>
c.getCombat().resetPlayerAttack();<br>
c.attackTimer += 2;<br>
c.startAnimation(829);<br>
c.getItems().deleteItem(id,slot,1);<br>
FoodToEat f = FoodToEat.food.get(id);<br>
if (c.constitution &lt; (f.getId() == 15272 ? (c.maxConstitution * 1.1) : c.maxConstitution)) {<br>
c.constitution += f.getHeal() * 10;<br>
if (c.constitution &gt; (f.getId() == 15272 ? (c.maxConstitution * 1.1) : c.maxConstitution))<br>
c.constitution = (int) (f.getId() == 15272 ? (c.maxConstitution * 1.1) : c.maxConstitution);<br>
}<br>
c.foodDelay = System.currentTimeMillis();<br>
c.sendMessage("You eat the " + f.getName() + “.”);<br>
}<br>
}</p>
<p>public boolean isFood(int id) {<br>
return FoodToEat.food.containsKey(id);<br>
}</p>
<p>}</p>
</blockquote>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cant-eat-drink-anything/465376/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cant-eat-drink-anything/465376/1</link>
        <pubDate>Sun, 28 Oct 2012 03:53:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-465376-1</guid>
        <source url="https://forum.moparisthebest.com/t/cant-eat-drink-anything/465376.rss">Can&#39;t eat/drink anything</source>
      </item>
  </channel>
</rss>
