<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[PI] Auto Cache Downloader Help</title>
    <link>https://forum.moparisthebest.com/t/pi-auto-cache-downloader-help/519622</link>
    <description>[code]
import java.io.File;
import java.io.IOException;
import java.io.OutputStream;
import java.io.FileWriter;
import java.io.BufferedWriter;
import java.io.BufferedOutputStream;
import java.io.BufferedInputStream;
import java.io.FileOutputStream;
import java.io.FileInputStream;
import java.io.InputStream;
import java.net.URLConnection;
import java.net.URL;
import java.util.zip.ZipFile;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;
import java.util.Enumeration;

import sign.signlink;

public class CacheDownloader {

        private client client;

        private final int BUFFER = 1024;

        /*
         * Only things you need to change
         *
         */
        private final int VERSION = 1; // Version of cache
        private String cacheLink = &quot;https://dl-web.dropbox.com/get/Avalon/AvalonCache.zip?w=AACiH381FuxaOHBM3eGghk0k8Fsm57i2QRsU6dvMoMpNpQ&quot;; // Link to cache

        private String fileToExtract = getCacheDir() + getArchivedName();

        public CacheDownloader(client client) {
                this.client = client;
        }

        private void drawLoadingText(String text) {
                client.drawLoadingText(35, text);
                System.out.println(text);
        }


        private void drawLoadingText(int amount, String text) {
                client.drawLoadingText(amount, text);
                System.out.println(text);
        }

        private String getCacheDir() {
                return signlink.findcachedir();
        }

        private String getCacheLink() {
                return cacheLink;
        }

        private int getCacheVersion() {
                return VERSION;
        }

        public CacheDownloader downloadCache() {
                try {
                File location = new File(getCacheDir());
                File version = new File(getCacheDir() + &quot;/cacheVersion&quot; + getCacheVersion() + &quot;.dat&quot;);
                
                if(!location.exists()) {
                        //drawLoadingText(&quot;Downloading Cache Please wait...&quot;);
                        downloadFile(getCacheLink(), getArchivedName());

                        unZip();
                        System.out.println(&quot;UNZIP&quot;);

                        BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + &quot;/cacheVersion&quot; + getCacheVersion() + &quot;.dat&quot;));
                        versionFile.close();
                } else {
                        if(!version.exists()) {
                                //drawLoadingText(&quot;Downloading Cache Please wait...&quot;);
                                downloadFile(getCacheLink(), getArchivedName());

                                unZip();
                                System.out.println(&quot;UNZIP&quot;);

                                BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + &quot;/cacheVersion&quot; + getCacheVersion() + &quot;.dat&quot;));
                                versionFile.close();

                        } else {
                                return null;
                        }
                }
                } catch(Exception e) {

                }
                return null;
        }
        
        private void downloadFile(String adress, String localFileName) {
                OutputStream out = null;
                URLConnection conn;
                InputStream in = null;
                
                try {

                        URL url = new URL(adress);
                        out = new BufferedOutputStream(
                                new FileOutputStream(getCacheDir() + &quot;/&quot; +localFileName)); 

                        conn = url.openConnection();
                        in = conn.getInputStream(); 
                
                        byte[] data = new byte[BUFFER]; 
        
                        int numRead;
                        long numWritten = 0;
                        int length = conn.getContentLength();

        
                        while((numRead = in.read(data)) != -1) {
                                out.write(data, 0, numRead);
                                numWritten += numRead;

                                    int percentage = (int)(((double)numWritten / (double)length) * 100D);
                                drawLoadingText(percentage, &quot;Downloading Cache &quot; + percentage + &quot;%&quot;);

                        }

                        System.out.println(localFileName + &quot;\t&quot; + numWritten);
                        drawLoadingText(&quot;Finished downloading &quot;+getArchivedName()+&quot;!&quot;);

                } catch (Exception exception) {
                        exception.printStackTrace();
                } finally {
                        try {
                                if (in != null) {
                                        in.close();
                                }
                                if (out != null) {
                                        out.close();
                                }
                        } catch (IOException ioe) {
                        }
                }

        }

        private String getArchivedName() {
                int lastSlashIndex = getCacheLink().lastIndexOf(&#39;/&#39;);
                if (lastSlashIndex &gt;= 0 
                        &amp;&amp; lastSlashIndex &lt; getCacheLink().length() -1) { 
                        return getCacheLink().substring(lastSlashIndex + 1);
                } else {
                        System.err.println(&quot;error retreiving archivaed name.&quot;);
                }
                return &quot;&quot;;
        }



        private void unZip() {

                try {
                            InputStream in = 
                                new BufferedInputStream(new FileInputStream(fileToExtract));
                        ZipInputStream zin = new ZipInputStream(in);
                        ZipEntry e;

                        while((e=zin.getNextEntry()) != null) {


                                if (e.getName().equals(fileToExtract)) {
                                        unzip(zin, fileToExtract);
                                        break;
                                }
                                       unzip(zin, getCacheDir() + e.getName());
                                //unzip(zin, getCacheDir() + e.getName());
                                System.out.println(&quot;unzipping2 &quot; + e.getName());
                        }
                        zin.close();

                } catch(Exception e) {
                        e.printStackTrace();
                }
        }

        private void unzip(ZipInputStream zin, String s) 
                throws IOException {

                FileOutputStream out = new FileOutputStream(s);
                //System.out.println(&quot;unzipping &quot; + s);
                byte [] b = new byte[BUFFER];
                int len = 0;

                while ((len = zin.read(b)) != -1) {
                        out.write(b,0,len);
                }
                out.close();
        }
}
[/code]

This wont download my cache, please help

I get this error when I run the client

java.io.FileNotFoundException: C:\AvalonCache\AvalonCache.zip?token_hash=AAG_Z_t
c1i2HmznPE16ytqSFakPUAPvf0lxocf6wzhTXPw&amp;dl=1 (The filename, directory name, or v
olume label syntax is incorrect)
        at java.io.FileOutputStream.open(Native Method)
        at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:212)
        at java.io.FileOutputStream.&lt;init&gt;(FileOutputStream.java:104)
        at CacheDownloader.downloadFile(CacheDownloader.java:105)
        at CacheDownloader.downloadCache(CacheDownloader.java:79)
        at client.startUp(client.java:8301)
        at RSApplet.run(RSApplet.java:84)
        at client.run(client.java:5291)
        at java.lang.Thread.run(Thread.java:722)
java.io.FileNotFoundException: C:\AvalonCache\AvalonCache.zip?token_hash=AAG_Z_t
c1i2HmznPE16ytqSFakPUAPvf0lxocf6wzhTXPw&amp;dl=1 (The filename, directory name, or v
olume label syntax is incorrect)
        at java.io.FileInputStream.open(Native Method)
        at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:138)
        at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:97)
        at CacheDownloader.unZip(CacheDownloader.java:162)
        at CacheDownloader.downloadCache(CacheDownloader.java:81)
        at client.startUp(client.java:8301)
        at RSApplet.run(RSApplet.java:84)
        at client.run(client.java:5291)
        at java.lang.Thread.run(Thread.java:722)
UNZIP
java.io.FileNotFoundException: C:\AvalonCache\Data\Maps\mapConfig.txt (The syste
m cannot find the path specified)
        at java.io.FileInputStream.open(Native Method)
        at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:138)
        at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:97)
        at java.io.FileReader.&lt;init&gt;(FileReader.java:58)
        at client.setNewMaps(client.java:176)
        at client.startUp(client.java:8302)
        at RSApplet.run(RSApplet.java:84)
        at client.run(client.java:5291)
        at java.lang.Thread.run(Thread.java:722)</description>
    
    <lastBuildDate>Mon, 20 May 2013 17:56:46 +0000</lastBuildDate>
    <category>Game Development</category>
    <atom:link href="https://forum.moparisthebest.com/t/pi-auto-cache-downloader-help/519622.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[PI] Auto Cache Downloader Help</title>
        <dc:creator><![CDATA[@m4x_pwng3 m4x pwng3]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/m4x_pwng3">@m4x_pwng3</a> wrote:</p>
          <blockquote>
              <p>[quote=“Vain_, post:7, topic:519622”]link is not a valid link</p>
<p>put it in your public folder and get a public link</p>
<p>also, keep client stuff in the CLIENT SECTION[/quote]</p>
<p>Said it better than I did lol.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-auto-cache-downloader-help/519622/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-auto-cache-downloader-help/519622/8</link>
        <pubDate>Mon, 20 May 2013 17:56:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-519622-8</guid>
        <source url="https://forum.moparisthebest.com/t/pi-auto-cache-downloader-help/519622.rss">[PI] Auto Cache Downloader Help</source>
      </item>
      <item>
        <title>[PI] Auto Cache Downloader Help</title>
        <dc:creator><![CDATA[@Vain1 Vain_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/vain1">@Vain1</a> wrote:</p>
          <blockquote>
              <p>link is not a valid link</p>
<p>put it in your public folder and get a public link</p>
<p>also, keep client stuff in the CLIENT SECTION</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-auto-cache-downloader-help/519622/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-auto-cache-downloader-help/519622/7</link>
        <pubDate>Mon, 20 May 2013 17:52:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-519622-7</guid>
        <source url="https://forum.moparisthebest.com/t/pi-auto-cache-downloader-help/519622.rss">[PI] Auto Cache Downloader Help</source>
      </item>
      <item>
        <title>[PI] Auto Cache Downloader Help</title>
        <dc:creator><![CDATA[@m4x_pwng3 m4x pwng3]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/m4x_pwng3">@m4x_pwng3</a> wrote:</p>
          <blockquote>
              <p>[quote=“johno, post:1, topic:519622”][code]<br>
import java.io.File;<br>
import java.io.IOException;<br>
import java.io.OutputStream;<br>
import java.io.FileWriter;<br>
import java.io.BufferedWriter;<br>
import java.io.BufferedOutputStream;<br>
import java.io.BufferedInputStream;<br>
import java.io.FileOutputStream;<br>
import java.io.FileInputStream;<br>
import java.io.InputStream;<br>
import java.net.URLConnection;<br>
import java.net.URL;<br>
import java.util.zip.ZipFile;<br>
import java.util.zip.ZipEntry;<br>
import java.util.zip.ZipInputStream;<br>
import java.util.Enumeration;</p>
<p>import sign.signlink;</p>
<p>public class CacheDownloader {</p>
<pre><code>    private client client;

    private final int BUFFER = 1024;

    /*
     * Only things you need to change
     *
     */
    private final int VERSION = 1; // Version of cache
    private String cacheLink = "https://dl-web.dropbox.com/get/Avalon/AvalonCache.zip?w=AACiH381FuxaOHBM3eGghk0k8Fsm57i2QRsU6dvMoMpNpQ"; // Link to cache

    private String fileToExtract = getCacheDir() + getArchivedName();

    public CacheDownloader(client client) {
            this.client = client;
    }

    private void drawLoadingText(String text) {
            client.drawLoadingText(35, text);
            System.out.println(text);
    }


    private void drawLoadingText(int amount, String text) {
            client.drawLoadingText(amount, text);
            System.out.println(text);
    }

    private String getCacheDir() {
            return signlink.findcachedir();
    }

    private String getCacheLink() {
            return cacheLink;
    }

    private int getCacheVersion() {
            return VERSION;
    }

    public CacheDownloader downloadCache() {
            try {
            File location = new File(getCacheDir());
            File version = new File(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat");
            
            if(!location.exists()) {
                    //drawLoadingText("Downloading Cache Please wait...");
                    downloadFile(getCacheLink(), getArchivedName());

                    unZip();
                    System.out.println("UNZIP");

                    BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat"));
                    versionFile.close();
            } else {
                    if(!version.exists()) {
                            //drawLoadingText("Downloading Cache Please wait...");
                            downloadFile(getCacheLink(), getArchivedName());

                            unZip();
                            System.out.println("UNZIP");

                            BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat"));
                            versionFile.close();

                    } else {
                            return null;
                    }
            }
            } catch(Exception e) {

            }
            return null;
    }
    
    private void downloadFile(String adress, String localFileName) {
            OutputStream out = null;
            URLConnection conn;
            InputStream in = null;
            
            try {

                    URL url = new URL(adress);
                    out = new BufferedOutputStream(
                            new FileOutputStream(getCacheDir() + "/" +localFileName)); 

                    conn = url.openConnection();
                    in = conn.getInputStream(); 
            
                    byte[] data = new byte[BUFFER]; 
    
                    int numRead;
                    long numWritten = 0;
                    int length = conn.getContentLength();

    
                    while((numRead = in.read(data)) != -1) {
                            out.write(data, 0, numRead);
                            numWritten += numRead;

                                int percentage = (int)(((double)numWritten / (double)length) * 100D);
                            drawLoadingText(percentage, "Downloading Cache " + percentage + "%");

                    }

                    System.out.println(localFileName + "\t" + numWritten);
                    drawLoadingText("Finished downloading "+getArchivedName()+"!");

            } catch (Exception exception) {
                    exception.printStackTrace();
            } finally {
                    try {
                            if (in != null) {
                                    in.close();
                            }
                            if (out != null) {
                                    out.close();
                            }
                    } catch (IOException ioe) {
                    }
            }

    }

    private String getArchivedName() {
            int lastSlashIndex = getCacheLink().lastIndexOf('/');
            if (lastSlashIndex &gt;= 0 
                    &amp;&amp; lastSlashIndex &lt; getCacheLink().length() -1) { 
                    return getCacheLink().substring(lastSlashIndex + 1);
            } else {
                    System.err.println("error retreiving archivaed name.");
            }
            return "";
    }



    private void unZip() {

            try {
                        InputStream in = 
                            new BufferedInputStream(new FileInputStream(fileToExtract));
                    ZipInputStream zin = new ZipInputStream(in);
                    ZipEntry e;

                    while((e=zin.getNextEntry()) != null) {


                            if (e.getName().equals(fileToExtract)) {
                                    unzip(zin, fileToExtract);
                                    break;
                            }
                                   unzip(zin, getCacheDir() + e.getName());
                            //unzip(zin, getCacheDir() + e.getName());
                            System.out.println("unzipping2 " + e.getName());
                    }
                    zin.close();

            } catch(Exception e) {
                    e.printStackTrace();
            }
    }

    private void unzip(ZipInputStream zin, String s) 
            throws IOException {

            FileOutputStream out = new FileOutputStream(s);
            //System.out.println("unzipping " + s);
            byte [] b = new byte[BUFFER];
            int len = 0;

            while ((len = zin.read(b)) != -1) {
                    out.write(b,0,len);
            }
            out.close();
    }
</code></pre>
<p>}<br>
[/code]</p>
<p>This wont download my cache, please help</p>
<p>I get this error when I run the client</p>
<p>java.io.FileNotFoundException: C:\AvalonCache\AvalonCache.zip?token_hash=AAG_Z_t<br>
c1i2HmznPE16ytqSFakPUAPvf0lxocf6wzhTXPw&amp;dl=1 (The filename, directory name, or v<br>
olume label syntax is incorrect)<br>
at java.io.FileOutputStream.open(Native Method)<br>
at java.io.FileOutputStream.(FileOutputStream.java:212)<br>
at java.io.FileOutputStream.(FileOutputStream.java:104)<br>
at CacheDownloader.downloadFile(CacheDownloader.java:105)<br>
at CacheDownloader.downloadCache(CacheDownloader.java:79)<br>
at client.startUp(client.java:8301)<br>
at RSApplet.run(RSApplet.java:84)<br>
at client.run(client.java:5291)<br>
at java.lang.Thread.run(Thread.java:722)<br>
java.io.FileNotFoundException: C:\AvalonCache\AvalonCache.zip?token_hash=AAG_Z_t<br>
c1i2HmznPE16ytqSFakPUAPvf0lxocf6wzhTXPw&amp;dl=1 (The filename, directory name, or v<br>
olume label syntax is incorrect)<br>
at java.io.FileInputStream.open(Native Method)<br>
at java.io.FileInputStream.(FileInputStream.java:138)<br>
at java.io.FileInputStream.(FileInputStream.java:97)<br>
at CacheDownloader.unZip(CacheDownloader.java:162)<br>
at CacheDownloader.downloadCache(CacheDownloader.java:81)<br>
at client.startUp(client.java:8301)<br>
at RSApplet.run(RSApplet.java:84)<br>
at client.run(client.java:5291)<br>
at java.lang.Thread.run(Thread.java:722)<br>
UNZIP<br>
java.io.FileNotFoundException: C:\AvalonCache\Data\Maps\mapConfig.txt (The syste<br>
m cannot find the path specified)<br>
at java.io.FileInputStream.open(Native Method)<br>
at java.io.FileInputStream.(FileInputStream.java:138)<br>
at java.io.FileInputStream.(FileInputStream.java:97)<br>
at java.io.FileReader.(FileReader.java:58)<br>
at client.setNewMaps(client.java:176)<br>
at client.startUp(client.java:8302)<br>
at RSApplet.run(RSApplet.java:84)<br>
at client.run(client.java:5291)<br>
at java.lang.Thread.run(Thread.java:722)[/quote]</p>
<p>upload your cache to dropbox and see if you get the same error. I don’t know too much about clients but it seems your link is bad.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-auto-cache-downloader-help/519622/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-auto-cache-downloader-help/519622/6</link>
        <pubDate>Mon, 20 May 2013 17:12:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-519622-6</guid>
        <source url="https://forum.moparisthebest.com/t/pi-auto-cache-downloader-help/519622.rss">[PI] Auto Cache Downloader Help</source>
      </item>
      <item>
        <title>[PI] Auto Cache Downloader Help</title>
        <dc:creator><![CDATA[@xXSh0ckXx xXSh0ckXx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xxsh0ckxx">@xXSh0ckXx</a> wrote:</p>
          <blockquote>
              <p>Hmm weird:/</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-auto-cache-downloader-help/519622/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-auto-cache-downloader-help/519622/5</link>
        <pubDate>Mon, 20 May 2013 15:42:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-519622-5</guid>
        <source url="https://forum.moparisthebest.com/t/pi-auto-cache-downloader-help/519622.rss">[PI] Auto Cache Downloader Help</source>
      </item>
      <item>
        <title>[PI] Auto Cache Downloader Help</title>
        <dc:creator><![CDATA[@chazion chazion]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/chazion">@chazion</a> wrote:</p>
          <blockquote>
              <p>The url for your cache doesn’t work</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-auto-cache-downloader-help/519622/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-auto-cache-downloader-help/519622/4</link>
        <pubDate>Sun, 19 May 2013 16:38:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-519622-4</guid>
        <source url="https://forum.moparisthebest.com/t/pi-auto-cache-downloader-help/519622.rss">[PI] Auto Cache Downloader Help</source>
      </item>
      <item>
        <title>[PI] Auto Cache Downloader Help</title>
        <dc:creator><![CDATA[@johno johno]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/johno">@johno</a> wrote:</p>
          <blockquote>
              <p>Any way you know of to fix this?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-auto-cache-downloader-help/519622/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-auto-cache-downloader-help/519622/3</link>
        <pubDate>Sun, 19 May 2013 16:19:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-519622-3</guid>
        <source url="https://forum.moparisthebest.com/t/pi-auto-cache-downloader-help/519622.rss">[PI] Auto Cache Downloader Help</source>
      </item>
      <item>
        <title>[PI] Auto Cache Downloader Help</title>
        <dc:creator><![CDATA[@strucker Strucker]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/strucker">@strucker</a> wrote:</p>
          <blockquote>
              <p>seems like its trying to be unzipped before its downloaded</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-auto-cache-downloader-help/519622/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-auto-cache-downloader-help/519622/2</link>
        <pubDate>Sun, 19 May 2013 15:50:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-519622-2</guid>
        <source url="https://forum.moparisthebest.com/t/pi-auto-cache-downloader-help/519622.rss">[PI] Auto Cache Downloader Help</source>
      </item>
      <item>
        <title>[PI] Auto Cache Downloader Help</title>
        <dc:creator><![CDATA[@johno johno]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/johno">@johno</a> wrote:</p>
          <blockquote>
              <pre><code class="lang-auto">import java.io.File;
import java.io.IOException;
import java.io.OutputStream;
import java.io.FileWriter;
import java.io.BufferedWriter;
import java.io.BufferedOutputStream;
import java.io.BufferedInputStream;
import java.io.FileOutputStream;
import java.io.FileInputStream;
import java.io.InputStream;
import java.net.URLConnection;
import java.net.URL;
import java.util.zip.ZipFile;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;
import java.util.Enumeration;

import sign.signlink;

public class CacheDownloader {

        private client client;

        private final int BUFFER = 1024;

        /*
         * Only things you need to change
         *
         */
        private final int VERSION = 1; // Version of cache
        private String cacheLink = "https://dl-web.dropbox.com/get/Avalon/AvalonCache.zip?w=AACiH381FuxaOHBM3eGghk0k8Fsm57i2QRsU6dvMoMpNpQ"; // Link to cache

        private String fileToExtract = getCacheDir() + getArchivedName();

        public CacheDownloader(client client) {
                this.client = client;
        }

        private void drawLoadingText(String text) {
                client.drawLoadingText(35, text);
                System.out.println(text);
        }


        private void drawLoadingText(int amount, String text) {
                client.drawLoadingText(amount, text);
                System.out.println(text);
        }

        private String getCacheDir() {
                return signlink.findcachedir();
        }

        private String getCacheLink() {
                return cacheLink;
        }

        private int getCacheVersion() {
                return VERSION;
        }

        public CacheDownloader downloadCache() {
                try {
                File location = new File(getCacheDir());
                File version = new File(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat");
                
                if(!location.exists()) {
                        //drawLoadingText("Downloading Cache Please wait...");
                        downloadFile(getCacheLink(), getArchivedName());

                        unZip();
                        System.out.println("UNZIP");

                        BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat"));
                        versionFile.close();
                } else {
                        if(!version.exists()) {
                                //drawLoadingText("Downloading Cache Please wait...");
                                downloadFile(getCacheLink(), getArchivedName());

                                unZip();
                                System.out.println("UNZIP");

                                BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat"));
                                versionFile.close();

                        } else {
                                return null;
                        }
                }
                } catch(Exception e) {

                }
                return null;
        }
        
        private void downloadFile(String adress, String localFileName) {
                OutputStream out = null;
                URLConnection conn;
                InputStream in = null;
                
                try {

                        URL url = new URL(adress);
                        out = new BufferedOutputStream(
                                new FileOutputStream(getCacheDir() + "/" +localFileName)); 

                        conn = url.openConnection();
                        in = conn.getInputStream(); 
                
                        byte[] data = new byte[BUFFER]; 
        
                        int numRead;
                        long numWritten = 0;
                        int length = conn.getContentLength();

        
                        while((numRead = in.read(data)) != -1) {
                                out.write(data, 0, numRead);
                                numWritten += numRead;

                                    int percentage = (int)(((double)numWritten / (double)length) * 100D);
                                drawLoadingText(percentage, "Downloading Cache " + percentage + "%");

                        }

                        System.out.println(localFileName + "\t" + numWritten);
                        drawLoadingText("Finished downloading "+getArchivedName()+"!");

                } catch (Exception exception) {
                        exception.printStackTrace();
                } finally {
                        try {
                                if (in != null) {
                                        in.close();
                                }
                                if (out != null) {
                                        out.close();
                                }
                        } catch (IOException ioe) {
                        }
                }

        }

        private String getArchivedName() {
                int lastSlashIndex = getCacheLink().lastIndexOf('/');
                if (lastSlashIndex &gt;= 0 
                        &amp;&amp; lastSlashIndex &lt; getCacheLink().length() -1) { 
                        return getCacheLink().substring(lastSlashIndex + 1);
                } else {
                        System.err.println("error retreiving archivaed name.");
                }
                return "";
        }



        private void unZip() {

                try {
                            InputStream in = 
                                new BufferedInputStream(new FileInputStream(fileToExtract));
                        ZipInputStream zin = new ZipInputStream(in);
                        ZipEntry e;

                        while((e=zin.getNextEntry()) != null) {


                                if (e.getName().equals(fileToExtract)) {
                                        unzip(zin, fileToExtract);
                                        break;
                                }
                                       unzip(zin, getCacheDir() + e.getName());
                                //unzip(zin, getCacheDir() + e.getName());
                                System.out.println("unzipping2 " + e.getName());
                        }
                        zin.close();

                } catch(Exception e) {
                        e.printStackTrace();
                }
        }

        private void unzip(ZipInputStream zin, String s) 
                throws IOException {

                FileOutputStream out = new FileOutputStream(s);
                //System.out.println("unzipping " + s);
                byte [] b = new byte[BUFFER];
                int len = 0;

                while ((len = zin.read(b)) != -1) {
                        out.write(b,0,len);
                }
                out.close();
        }
}</code></pre>
<p>This wont download my cache, please help</p>
<p>I get this error when I run the client</p>
<p>java.io.FileNotFoundException: C:\AvalonCache\AvalonCache.zip?token_hash=AAG_Z_t<br>
c1i2HmznPE16ytqSFakPUAPvf0lxocf6wzhTXPw&amp;dl=1 (The filename, directory name, or v<br>
olume label syntax is incorrect)<br>
at java.io.FileOutputStream.open(Native Method)<br>
at java.io.FileOutputStream.(FileOutputStream.java:212)<br>
at java.io.FileOutputStream.(FileOutputStream.java:104)<br>
at CacheDownloader.downloadFile(CacheDownloader.java:105)<br>
at CacheDownloader.downloadCache(CacheDownloader.java:79)<br>
at client.startUp(client.java:8301)<br>
at RSApplet.run(RSApplet.java:84)<br>
at client.run(client.java:5291)<br>
at java.lang.Thread.run(Thread.java:722)<br>
java.io.FileNotFoundException: C:\AvalonCache\AvalonCache.zip?token_hash=AAG_Z_t<br>
c1i2HmznPE16ytqSFakPUAPvf0lxocf6wzhTXPw&amp;dl=1 (The filename, directory name, or v<br>
olume label syntax is incorrect)<br>
at java.io.FileInputStream.open(Native Method)<br>
at java.io.FileInputStream.(FileInputStream.java:138)<br>
at java.io.FileInputStream.(FileInputStream.java:97)<br>
at CacheDownloader.unZip(CacheDownloader.java:162)<br>
at CacheDownloader.downloadCache(CacheDownloader.java:81)<br>
at client.startUp(client.java:8301)<br>
at RSApplet.run(RSApplet.java:84)<br>
at client.run(client.java:5291)<br>
at java.lang.Thread.run(Thread.java:722)<br>
UNZIP<br>
java.io.FileNotFoundException: C:\AvalonCache\Data\Maps\mapConfig.txt (The syste<br>
m cannot find the path specified)<br>
at java.io.FileInputStream.open(Native Method)<br>
at java.io.FileInputStream.(FileInputStream.java:138)<br>
at java.io.FileInputStream.(FileInputStream.java:97)<br>
at java.io.FileReader.(FileReader.java:58)<br>
at client.setNewMaps(client.java:176)<br>
at client.startUp(client.java:8302)<br>
at RSApplet.run(RSApplet.java:84)<br>
at client.run(client.java:5291)<br>
at java.lang.Thread.run(Thread.java:722)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-auto-cache-downloader-help/519622/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-auto-cache-downloader-help/519622/1</link>
        <pubDate>Sun, 19 May 2013 14:17:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-519622-1</guid>
        <source url="https://forum.moparisthebest.com/t/pi-auto-cache-downloader-help/519622.rss">[PI] Auto Cache Downloader Help</source>
      </item>
  </channel>
</rss>
