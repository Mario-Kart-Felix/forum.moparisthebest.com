<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Sound Volume Config Id&#39;s</title>
    <link>https://forum.moparisthebest.com/t/sound-volume-config-ids/554743</link>
    <description>I didn&#39;t like how the sounds always were default at full blast and couldn&#39;t find anything saying what the config Id&#39;s were. This was tested with a 474 Client but I assume its the same for most revisions.

Adjust Music Volume - [code]Config id = 168[/code]
Adjust Sound Volume - [code]Config id = 169[/code]
Adjust Area Sound Effect Volume - [code]Config id = 872[/code]

Volume off = 4, Volume full blast = 0</description>
    
    <lastBuildDate>Mon, 23 May 2016 13:39:52 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/sound-volume-config-ids/554743.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Sound Volume Config Id&#39;s</title>
        <dc:creator><![CDATA[@Vult-R Vult-R]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/vult-r">@Vult-R</a> wrote:</p>
          <blockquote>
              <p>you can get all of those ids right here</p>
<p>[code]      private int executeScript(Widget widget, int id) {<br>
if (widget.scripts == null || id &gt;= widget.scripts.length)<br>
return -2;<br>
try {<br>
int script[] = widget.scripts[id];<br>
int accumulator = 0;<br>
int counter = 0;<br>
int operator = 0;<br>
do {<br>
int instruction = script[counter++];<br>
int value = 0;<br>
byte next = 0;</p>
<pre><code>                    if (instruction == 0) {
                          return accumulator;
                    }
                    
                    if (instruction == 1) {
                          value = currentStats[script[counter++]];
                    }
                    
                    if (instruction == 2) {
                          value = maximumLevels[script[counter++]];
                    }
                    
                    if (instruction == 3) {
                          value = currentExp[script[counter++]];
                    }
                    
                    if (instruction == 4) {
                          Widget other = Widget.interfaceCache[script[counter++]];
                          int item = script[counter++];
                          if (item &gt;= 0 &amp;&amp; item &lt; ItemDefinition.item_count
                                      &amp;&amp; (!ItemDefinition.lookup(item).is_members_only
                                                  || isMembers)) {
                                for (int slot = 0; slot &lt; other.inventoryItemId.length; slot++)
                                      if (other.inventoryItemId[slot] == item + 1)
                                            value += other.inventoryAmounts[slot];

                          }
                    }
                    if (instruction == 5) {
                          value = settings[script[counter++]];
                    }
                    
                    if (instruction == 6) {
                          value = SKILL_EXPERIENCE[maximumLevels[script[counter++]] - 1];
                    }
                    
                    if (instruction == 7) {
                          value = (settings[script[counter++]] * 100) / 46875;
                    }
                    
                    if (instruction == 8) {
                          value = localPlayer.combatLevel;
                    }
                    
                    if (instruction == 9) {
                          for (int skill = 0; skill &lt; SkillConstants.SKILL_COUNT; skill++)
                                if (SkillConstants.ENABLED_SKILLS[skill])
                                      value += maximumLevels[skill];

                    }
                    
                    if (instruction == 10) {
                          Widget other = Widget.interfaceCache[script[counter++]];
                          int item = script[counter++] + 1;
                          if (item &gt;= 0 &amp;&amp; item &lt; ItemDefinition.item_count &amp;&amp; isMembers) {
                                for (int stored =
                                            0; stored &lt; other.inventoryItemId.length; stored++) {
                                      if (other.inventoryItemId[stored] != item)
                                            continue;
                                      value = 0x3b9ac9ff;
                                      break;
                                }

                          }
                    }
                    
                    if (instruction == 11) {
                          value = runEnergy;
                    }
                    
                    if (instruction == 12) {
                          value = weight;
                    }
                    
                    if (instruction == 13) {
                          int bool = settings[script[counter++]];
                          int shift = script[counter++];
                          value = (bool &amp; 1 &lt;&lt; shift) == 0 ? 0 : 1;
                    }
                    
                    if (instruction == 14) {
                          int index = script[counter++];
                          VariableBits bits = VariableBits.cache[index];
                          int setting = bits.getSetting();
                          int low = bits.getLow();
                          int high = bits.getHigh();
                          int mask = BIT_MASKS[high - low];
                          value = settings[setting] &gt;&gt; low &amp; mask;
                    }
                    
                    if (instruction == 15) {
                          next = 1;
                    }
                    
                    if (instruction == 16) {
                          next = 2;
                    }
                    
                    if (instruction == 17) {
                          next = 3;
                    }
                    
                    if (instruction == 18) {
                          value = (localPlayer.x &gt;&gt; 7) + regionBaseX;
                    }
                    
                    if (instruction == 19) {
                          value = (localPlayer.y &gt;&gt; 7) + regionBaseY;
                    }
                    
                    if (instruction == 20) {
                          value = script[counter++];
                    }
                    
                    if (next == 0) {
                          
                          if (operator == 0) {
                                accumulator += value;
                          }
                          
                          if (operator == 1) {
                                accumulator -= value;
                          }
                          
                          if (operator == 2 &amp;&amp; value != 0) {
                                accumulator /= value;
                          }
                          
                          if (operator == 3) {
                                accumulator *= value;
                          }
                          operator = 0;
                    } else {
                          operator = next;
                    }
              } while (true);
        } catch (Exception _ex) {
              return -1;
        }
  }[/code]
</code></pre>
<p>the id is the id of the config</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/sound-volume-config-ids/554743/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/sound-volume-config-ids/554743/2</link>
        <pubDate>Mon, 23 May 2016 13:39:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554743-2</guid>
        <source url="https://forum.moparisthebest.com/t/sound-volume-config-ids/554743.rss">Sound Volume Config Id&#39;s</source>
      </item>
      <item>
        <title>Sound Volume Config Id&#39;s</title>
        <dc:creator><![CDATA[@kile392 kile392]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/kile392">@kile392</a> wrote:</p>
          <blockquote>
              <p>I didn’t like how the sounds always were default at full blast and couldn’t find anything saying what the config Id’s were. This was tested with a 474 Client but I assume its the same for most revisions.</p>
<p>Adjust Music Volume - <code>Config id = 168</code><br>
Adjust Sound Volume - <code>Config id = 169</code><br>
Adjust Area Sound Effect Volume - <code>Config id = 872</code></p>
<p>Volume off = 4, Volume full blast = 0</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/sound-volume-config-ids/554743/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/sound-volume-config-ids/554743/1</link>
        <pubDate>Mon, 15 Feb 2016 20:46:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554743-1</guid>
        <source url="https://forum.moparisthebest.com/t/sound-volume-config-ids/554743.rss">Sound Volume Config Id&#39;s</source>
      </item>
  </channel>
</rss>
