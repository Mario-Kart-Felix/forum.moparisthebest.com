<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Java Basics: A beginner&#39;s tutorial</title>
    <link>https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408</link>
    <description>Alright, in this tutorial you will be learning about some of the more basics of the java programming language. Since barley no one goes to the java.sun websites, I will post my own version. However, the java tutorials can be found [url=http://java.sun.com/docs/books/tutorial/]here[/url].

First I&#39;m going to start off with some basic and more common java keywords. It is important to know these words if you get errors in your codes, otherwise you won&#39;t know how to fix them. If you would like to view the full list, go [url=http://www.runelocus.com/java/keywords.php]here[/url].

[size=11pt][font=java][b][u]Chapter 1: Keywords[/u][/b][/font][/size]
[b]Boolean[/b] - [i]Indicates whether a value is true or false[/i]
[b]Break[/b] - [i]Jumps out of a loop or switch[/i]
[b]Byte[/b] - [i]Indicates that a value is an 8-bit whole number[/i]
[b]Case[/b] - [i]Introduces one of several possible paths of execution in a [/i][iurl=#switch][font=lucida console]switch[/iurl]
[b]Class[/b] - [i]Introduces a class-a blueprint for an object[/i]
[b]Else[/b] - [i]Introduces statements that are executed when the condition in an[/i] [iurl=#if][font=lucida console]if[/iurl][i] statement isn&#39;t true[/i]
[b]Enum[/b] - [i]Creates a newly defined type-a group of values that a variable can have[/i]
[anchor=if][b]If[/b][/anchor] - [i]Tests to see whether a condition is true. If it&#39;s true, the computer executes certain statements; otherwise, the computer executes other statements[/i]
[b]New[/b] - [i]Creates an object from an existing class[/i]
[b]Private[/b] - [i]Indicates that a variable or method can be used only within a certain class[/i]
[b]Public[/b] - [i]Indicates that a variable or method can be used in subclasses from another package[/i]
[anchor=switch][b]Switch[/b][/anchor] - [i]Tells the computer to follow one of many possible paths of execution (one of many possible cases), depending on the value of the expression[/i]
[b]This[/b] - [i]A self-reference-refers to the object in which the word this appears[/i]
[b]Try[/b] - [i]Introduces statements that are watched (during runtime) for things that can go wrong[/i]
[b]Void[/b] - [i]Indicates that a method doesn&#39;t return a value[/i]

[b]Please Note:[/b] [i]I do not take credit for these definitions, they are directly from the book [url=http://www.dummies.com/WileyCDA/DummiesTitle/Beginning-Programming-with-Java-For-Dummies-2nd-Edition.productCd-0764588745,subcat-PROGRAMMING.html]Beginning Programming with Java For Dummies[/url].


[center][size=13pt][font=java][b][u]Chapter 2: Java Symbols and Punctuation[/u][/b][/font][/size][/center]
This is quite a short chapter, you will learn the basic Java Symbols and Punctuation, and learn that each and every one of the symbols and punctuations, has a purpose, and without them it would be meaningless.
&lt;blockquote&gt;class ryleeIsLeet [b]{[/b]

    public static void main[b]([/b]String args[b][]) {[/b]
         System.out.println[b](&quot;[/b]I am leet[b]&quot;);[/b]
    [b]}
}[/b]&lt;/blockquote&gt;

Every one of the bolded symbols has a meaning, if you look below, you will see what role a curly bracket({, }) plays in a Java code.
&lt;blockquote&gt;class ryleeIsLeet {
[quote]
    public static void main(String args[]) {
[quote]
         System.out.println(&quot;I am leet&quot;);[/quote]
    }[/quote]
}&lt;/blockquote&gt;
If you notice, the curly bracket acts like a box around the code, when you start, your code goes inside your main class, in this case the class is &quot;ryleeIsLeet&quot; and you keep building things inside of the main class, which has a meaning. If you were to code like in the picture below, the code is meaningless, as nothing is inside the main class.
&lt;blockquote&gt;class ryleeIsLeet {
}
[quote]
    public static void main(String args[]) {
}
[quote]
         System.out.println(&quot;I am leet&quot;);[/quote]
[/quote]&lt;/blockquote&gt;

[size=11pt][font=java][b][u]Punctuation[/u][/b][/font][/size]
Punctuation is key in the Java Programming Language. A simple switch of an uppercase and lowercase letter can change the meaning of a code to nothing at all, or something you didn&#39;t want to happen.

If you were to change this lines uppercase letters to lowercase, and vise versa, the code goes from:
[code]         System.out.println(&quot;I am leet&quot;);[/code]
A meanful code.
[code]         system.Out.Println(&quot;I am leet&quot;);[/code]
To a completely worthless and unmeaningful code.

It is also extremely important that you know when naming classes, [b]they [u]must[/u] be in all Caps(uppercase) [u]or[/u] each word [u]must[/u] start with a capital[/b], like I have in my code.

Variables don&#39;t start with capital letters. They follow the format lowercaseUppercase and continue uppercase for every word. An example would be:
[code]
if(ryleeIsLeet) {[/code]

[b]Don&#39;t name classes &quot;class public&quot; because public is a keyword and posses a meaning in the Java Language. This goes for all other keywords as well.[/b]

[size=11pt][font=java][b][u]Indentation[/u][/b][/font][/size]
When coding java, you will learn to indent your code to organize it, indentation is very easy, but it is very important you learn to do it properly. Bad indentation is not a habit you want to have. The code below, is good indentation.
[code]   if(ryleeIsLeet) {
   System.out.println(&quot;Rylee is leet!&quot;);
   } else {
   System.out.println(&quot;Rylee isn&#39;t leet! :(&quot;);
}[/code]
This code has good indentation because everything is aligned, the code below is bad indentation because everything is indented differently.
[code]if(ryleeIsLeet) {
         sendMessage(&quot;Rylee Is Leet!!!);
                  } else {
    System.out.println(&quot;Rylee isn&#39;t leet! :(&quot;);
            }[/code]

[size=11pt][font=java][b][u]Slashes[/u][/b][/font][/size]
In Java, there are things you can do to write a message in a code, but make it meaningless. In your server, you probably have seen &quot;//&quot; after some codes. This will do nothing, as long as you have two slashes at the end of the code. 
[code]         System.out.println(&quot;I am leet&quot;); //Displays message on the screen[/code]
This code is fine, and you can write whatever you want after the two slashes, and you will have no errors.

There is also another way to do this. Generally at the top of most programs you probably see something like:
[code]
/*
 * Made by Rylee
 *
 */[/code]
This is another way to do the same thing as above, but it is usually for more of a credit based thing. It can also be useful when you are trying to figure out what a code does, so you put a &quot;/*CODEHERE */&quot; around it which will disable that particular code or line. 


[center][size=13pt][font=java][b][u]Chapter 3: Very Simple Programs[/u][/b][/font][/size][/center]
This is a very short Chapter, you will learn probably the most basic program, and what it does.

We are going to take the code above, and explain all of it&#39;s functions.
[code]
class RyleeIsLeet {

    public static void main(String args[]) {
         System.out.println(&quot;I am leet&quot;);
    }
}[/code]

&quot;class RyleeIsLeet&quot; is a new class, when you name a new class, be sure to name it something that is meaningful, I don&#39;t suggest naming a class &quot;CuddlePuppy&quot; or something cute like that. It&#39;s not very meaningful and may confuse you. &quot;public static void main(String args[])&quot; pretty much explains itself, but nonetheless, it is the main void. &quot;args&quot; has no meaning, just like &quot;RyleeIsLeet,&quot; it&#39;s just a name, I could name my string &quot;(String goat[])&quot; if I wanted to. &quot;System.out.println(&quot;I am leet&quot;);&quot; displays the text &quot;I am leet&quot; on the screen, or depending on the program you run it in, the output box.

[center][size=13pt][font=java][b][u]Chapter 4: Teaching Methods[/u][/b][/font][/size][/center]
In Java many codes are explained by more the less a to-do-list, or a step-by-step guide on doing something. I could write a could for making a peanut butter sandwich, which would probably look a lot like this.
[code]
void MakePeanuutButterSandwich() {
     walkInto(feet, kitchen);
     Open(breadbag);
     Grab(bread);
     Open(cupboard);
     Grab(peanutbutter);
     Open(lid);
     Open(drawer);
     Grab(knife);
     Spread(penutbutter);
     Fold(sandwich);
     Eat(sandwich);
}[/code]
However, that method is meaningless unless it is called upon somewhere else.
[code]MakePeanutButterSandwich(peanutButterSandwich);[/code]

[b]I am not by any means saying this code will work, it&#39;s just an example.[/b]       

When writing a method, it must have four things:

[ul][li][b]Method Header[/b][/li]
[li][b]Method Body[/b][/li]
[li][b]Method Declaration[/b][/li]
[li][b]Method Call[/b][/li][/ul]

The diagram below illustrates each part of the method.
[IMG]http://i184.photobucket.com/albums/x231/Rylee1010/method-1.jpg[/img]

[center][size=13pt][font=java][b][u]Chapter 5: Java Statements[/u][/b][/font][/size][/center]
In this chapter you will learn the most commonly used Java statements, what they do, and what they can be used for. I will only be explaining a few of them, as the other ones may be a little bit more advanced. You can learn those with a quick search on google. :)

[b]The Break Statement[/b]
[code]break;[/code]

[b]The If Statement[/b]
[code]if(expression) {
       //statements 
} else {
      //statements
}[/code]

[b]The Switch Statement[/b]
[code]switch(expression) 
{
     case constant;
          statements;
          break;
     default;
          statements;
          break;
}[/code]

[b]The Throw Statement[/b]
[code]throw (exception)[/code]

[b]The Try Statement[/b]
[code]try {
        //statements
} catch (exception-class e) {
        //statements
} finally {
        //statements
} try {
        //statements
} finally {
        //statements
}[/code]

[b]The Break Statement[/b]
First off we are going to explain the break; statement, it&#39;s meaning, and what it&#39;s used for.

A break jumps out of a loop or a switch, and even in our above examples you can see it in the switch statement. [b]Some times we need to exit from a loop before the completion of the loop then we use break statement and exit from the loop and loop is terminated. The break statement is used in while loop, do - while loop, for loop and also used in the switch statement.[/b] - Bolded sentence is from [url=http://www.roseindia.net/java/beginners/Break.shtml]this site[/url].

[b]The If Statement[/b]
The If statement heavily relies on the use of boolean expression (a boolean indicates whether a value is true or false). You may not even do the simplest if statement without a boolean expression. I will talk about the use of boolean expressions later on (may not get added for a day or two). The if statement is probably the most common statement in the java language. 

In the most basic if statement you may execute a single statement or a block of statements only if a boolean expression returns true. A simple if statement can look like this.
[code]
if(ryleeIsLeet)  { //ryleeIsLeet must be declared as a boolean expression
   System.out.println(&quot;Rylee is leet!&quot;);
}[/code]
When opening an if statement you use curly brackets (in my style of coding anyway :) it just makes things easier to understand) to start and finish the statement. I suggest putting the opening curly bracket on the same line as the if statement (again that is just my preference). 

Generally if statements are in way like to-do-lists. If the boolean expression returns true, then you follow the statements. If not, you skip the statements. I could make a code like this
[code]
private boolean ryleeIsLeet = true;

if(ryleeIsLeet) {
   System.out.println(&quot;Rylee is leet!&quot;);
}[/code]
and everything would work because the boolean expression is true, so the code carries on. Now if I was to make a boolean expression with ryleeIsLeet = false, the code changes, and the System.out.println message is skipped. Use the image below for more clarification.

[IMG]http://i184.photobucket.com/albums/x231/Rylee1010/ifstatement.jpg[/img]

With the if statement comes the else statement. The if statement stays the same as explained above, except instead of skipping the statement if the value returns false, it goes to the else statement, where you can make the message &quot;Rylee is leet&quot; regardless of whether the value returns true or false as long as you have System.out.println(&quot;Rylee is leet!&quot;); on both sides of the else statement. You can also make it display a different message, or change the statement to whatever you want. It really is up to you. This is an example of an if and else statement where if the value returns true &quot;Rylee is leet&quot; is displayed, and if the value returns false, &quot;Rylee isn&#39;t leet&quot; is displayed.
[code]
if(ryleeIsLeet) {
     System.out.println(&quot;Rylee is leet!&quot;); 
} else {
     System.out.println(&quot;Rylee isn&#39;t leet!&quot;);
}[/code]


[b]The Throw Statement[/b]
The throw statement is quite simple. You cannot throw a new exception if the object is not throwable. To make an object throwable you can use the throws statement. The throw statement can also be incorporated with the if statement, so instead of the earlier example, you could use this:
[code]
if(ryleeIsLeet) {
    throw new LeetBarException();
}[/code]
To make the LeetBar object throwable, somewhere else in your code you need to have
[code]throws LeetBarException();[/code]
for it to work properly.

If I feel up to it later I may add the try and switch statements. :)



[center][size=13pt][font=java][b][u]Chapter 6: Boolean Expressions[/u][/b][/font][/size][/center]
This will be a very short chapter, as I will just be teaching the basics of booleans and what role they play.

Booleans are very easy to understand. As we should&#39;ve learned by now, booleans indicate whether a value returns true or false. 

[center][size=13pt][font=java][b][u]Chapter 7: Java Operators[/u][/b][/font][/size][/center]
Operators are just basic mathematical sings and other types of sings that you will probably have seen before, that posses meanings in the Java language.

There are three different types of Operators. They are:

[ul][li][b]Arithmetic[/b][/li]
[li][b]Relational[/b][/li]
[li][b]Logical[/b][/li][/ul]


[b][u]Arithmetic[/u][/b]
+     Addition
-     Subtraction
*     Multiplication
/     Division
%    Remainder
++   Increment    
--    Decrement
+=   Addition and assignment
-=   Subtraction and assignment
*=   Multiplication and assignment
/=    Division and assignment
%=  Remainder and assignment

[b][u]Relational[/u][/b]
==   Equal
!=    Not equal
&lt;     Less than
&lt;=   Less than or equal to
&gt;     Greater than
&gt;=   Greater than or equal to

[b][u]Logical[/u][/b]
!      Not
&amp;     And
&amp;&amp;   Conditional and
|     Or
||    Conditional or
^     xor

[size=12pt][font=java][b][u]Arithmetic Operators[/u][/b][/font][/size]
Arithmetic Operators are extremely simple as long as you are at least 9 years old... :| I won&#39;t even make up equations for you as Math is what you learn at school, I won&#39;t torture you. :) If you know how to add, subtract, multiply, and divide, you are pretty much capable of understanding Arithmetic Operators.

[size=12pt][font=java][b][u]Relational Operators[/u][/b][/font][/size]
Relational operators are very simple as well. You will have seen most of the operators (arithmetic, relational, and logical) before if you have ever seen a server. These can also be used elsewhere in java math. Just be logical when using them, make sure everything makes sense, and you&#39;ve used the right operator.

[size=12pt][font=java][b][u]Logical Operators[/u][/b][/font][/size]
A logical operator is another word for a boolean operator. A logical operator is an operator that returns a boolean result (true or false) that is based on the boolean result of one or two other expressions. Expressions that use logical operators are usually called compound expressions because they allow you to combine two or more expressions into one single expression. Below is a list of the operators, their names, their type and their description.

Operator ! - This operator is named &quot;not,&quot; and is a unary operator. This operator returns true if the operand to the right returns false, and if the operand to the right returns true, this operator returns false.

Operator &amp; - This operator is named &quot;and,&quot; and is a binary operator. This operator returns true if both of the operands evaluate to true. Both operands are evaluated before the &quot;and&quot; operator is applied.

Operator &amp;&amp; - This operator is named &quot;conditional and,&quot; and is a binary operator. This operator is the same as &amp;, but if the operand on the left returns false, it is returned false without evaluating the operand on the right.

Operator | - This operator is named &quot;or,&quot; and is a binary operator. This operator returns true if at least one of the operands evaluates to true. Both operands are evaluated before the &quot;or&quot; operator is applied.

Operator || - This operator is named &quot;conditional or,&quot; and is a binary operator. This is the same as |, but if the operand on the left returns true, it returns true without evaluating the operand on the right.

Operator ^ - This operator is named &quot;xor,&quot; and is a binary operator. This operator returns true if one and only one of the operands evaluates to true. If both operands evaluate to true or if both operands evaluate to false, it will return false.

[b]I will add the rest in the morning, for now I need some sleep.[/b]

I will be adding more, this will get you started for a while if you are just learning :)

Enjoy! :)</description>
    
    <lastBuildDate>Wed, 20 Feb 2008 09:54:09 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Java Basics: A beginner&#39;s tutorial</title>
        <dc:creator><![CDATA[@Yz85Racer Yz85Racer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/yz85racer">@Yz85Racer</a> wrote:</p>
          <blockquote>
              <p>[quote=“Tico135, post:23, topic:181408”][quote author=Yz85Racer link=topic=242912.msg2061508#msg2061508 date=1203327247]</p>
<aside class="quote no-group">
<blockquote>
<p>Why did you post this tutorial here anyway, majority of moparscapers tend to stay in their own death hole…</p>
</blockquote>
</aside>
<p>Most moparscapers aren’t cool, but Tico is an example. &lt;3<br>
[/quote]</p>
<p>I’m gonna guess that’s a compliment…:P[/quote]<br>
Fuck, exception**.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/24">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/24</link>
        <pubDate>Wed, 20 Feb 2008 09:54:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-181408-24</guid>
        <source url="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408.rss">Java Basics: A beginner&#39;s tutorial</source>
      </item>
      <item>
        <title>Java Basics: A beginner&#39;s tutorial</title>
        <dc:creator><![CDATA[@Tico135 Tico]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tico135">@Tico135</a> wrote:</p>
          <blockquote>
              <p>[quote=“Yz85Racer, post:22, topic:181408”][quote author=Cheese_Police link=topic=242912.msg2059567#msg2059567 date=1203285520]<br>
Why did you post this tutorial here anyway, majority of moparscapers tend to stay in their own death hole…<br>
[/quote]<br>
Most moparscapers aren’t cool, but Tico is an example. &lt;3[/quote]</p>
<p>I’m gonna guess that’s a compliment…<img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/23">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/23</link>
        <pubDate>Wed, 20 Feb 2008 06:41:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-181408-23</guid>
        <source url="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408.rss">Java Basics: A beginner&#39;s tutorial</source>
      </item>
      <item>
        <title>Java Basics: A beginner&#39;s tutorial</title>
        <dc:creator><![CDATA[@Yz85Racer Yz85Racer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/yz85racer">@Yz85Racer</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="20" data-topic="181408">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/cheese_police/40/5_6bca9977b612b7aeef77ba1ec1cd67b3.png" class="avatar"> Cheese_Police:</div>
<blockquote>
<p>Why did you post this tutorial here anyway, majority of moparscapers tend to stay in their own death hole…</p>
</blockquote>
</aside>
<p>Most moparscapers aren’t cool, but Tico is an example. &lt;3</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/22">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/22</link>
        <pubDate>Mon, 18 Feb 2008 09:34:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-181408-22</guid>
        <source url="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408.rss">Java Basics: A beginner&#39;s tutorial</source>
      </item>
      <item>
        <title>Java Basics: A beginner&#39;s tutorial</title>
        <dc:creator><![CDATA[@moerin moerin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moerin">@moerin</a> wrote:</p>
          <blockquote>
              <p>Wow, nice tutorial dude.<br>
Thanks, cant ++ you :S</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/21">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/21</link>
        <pubDate>Sun, 17 Feb 2008 22:24:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-181408-21</guid>
        <source url="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408.rss">Java Basics: A beginner&#39;s tutorial</source>
      </item>
      <item>
        <title>Java Basics: A beginner&#39;s tutorial</title>
        <dc:creator><![CDATA[@Cheese_Police c|p]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cheese_police">@Cheese_Police</a> wrote:</p>
          <blockquote>
              <p>Why did you post this tutorial here anyway, majority of moparscapers tend to stay in their own death hole…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/20">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/20</link>
        <pubDate>Sun, 17 Feb 2008 21:58:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-181408-20</guid>
        <source url="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408.rss">Java Basics: A beginner&#39;s tutorial</source>
      </item>
      <item>
        <title>Java Basics: A beginner&#39;s tutorial</title>
        <dc:creator><![CDATA[@Tico135 Tico]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tico135">@Tico135</a> wrote:</p>
          <blockquote>
              <p>[quote=“Unhandled, post:18, topic:181408”][quote author=Ollie link=topic=242912.msg2053493#msg2053493 date=1203044335]<br>
i can tell a moparscaper wrote this<br>
[/quote]<br>
What other kind of breed would spell ‘beginner’ as ‘begginer’.[/quote]</p>
<p>Ever heard of a simple spelling error? <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/19">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/19</link>
        <pubDate>Fri, 15 Feb 2008 21:46:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-181408-19</guid>
        <source url="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408.rss">Java Basics: A beginner&#39;s tutorial</source>
      </item>
      <item>
        <title>Java Basics: A beginner&#39;s tutorial</title>
        <dc:creator><![CDATA[@Unhandled Unhandled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unhandled">@Unhandled</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="8" data-topic="181408">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/ollie/40/5_6bca9977b612b7aeef77ba1ec1cd67b3.png" class="avatar"> Ollie:</div>
<blockquote>
<p>i can tell a moparscaper wrote this</p>
</blockquote>
</aside>
<p>What other kind of breed would spell ‘beginner’ as ‘begginer’.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/18</link>
        <pubDate>Fri, 15 Feb 2008 18:43:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-181408-18</guid>
        <source url="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408.rss">Java Basics: A beginner&#39;s tutorial</source>
      </item>
      <item>
        <title>Java Basics: A beginner&#39;s tutorial</title>
        <dc:creator><![CDATA[@_Vengeance _Vengeance]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_vengeance">@_Vengeance</a> wrote:</p>
          <blockquote>
              <p>[quote=“Tico135, post:16, topic:181408”][quote author=regecks` link=topic=242912.msg2054712#msg2054712 date=1203099174]<br>
They do, the problem is that they read each others’.</p>
<p><a href="http://java.sun.com" rel="nofollow noopener">http://java.sun.com</a> has the greatest Java tutorials of them all.<br>
[/quote]</p>
<p>I know, I just thought I’d post one as the majority of the members don’t bother going there. :)[/quote]</p>
<p>A majority of the members don’t realise there is another part of the site, or just don’t bother coming here.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/17</link>
        <pubDate>Fri, 15 Feb 2008 18:22:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-181408-17</guid>
        <source url="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408.rss">Java Basics: A beginner&#39;s tutorial</source>
      </item>
      <item>
        <title>Java Basics: A beginner&#39;s tutorial</title>
        <dc:creator><![CDATA[@Tico135 Tico]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tico135">@Tico135</a> wrote:</p>
          <blockquote>
              <p>[quote=“regecks`, post:15, topic:181408”]They do, the problem is that they read each others’.</p>
<p><a href="http://java.sun.com" rel="nofollow noopener">http://java.sun.com</a> has the greatest Java tutorials of them all.[/quote]</p>
<p>I know, I just thought I’d post one as the majority of the members don’t bother going there. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/16</link>
        <pubDate>Fri, 15 Feb 2008 18:14:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-181408-16</guid>
        <source url="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408.rss">Java Basics: A beginner&#39;s tutorial</source>
      </item>
      <item>
        <title>Java Basics: A beginner&#39;s tutorial</title>
        <dc:creator><![CDATA[@regecks1 regecks`]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/regecks1">@regecks1</a> wrote:</p>
          <blockquote>
              <p>They do, the problem is that they read each others’.</p>
<p><a href="http://java.sun.com/docs/books/tutorial/" data-bbcode="true" rel="nofollow noopener">Sun’s Java site</a> has the greatest Java tutorials of them all.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/15</link>
        <pubDate>Fri, 15 Feb 2008 18:12:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-181408-15</guid>
        <source url="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408.rss">Java Basics: A beginner&#39;s tutorial</source>
      </item>
      <item>
        <title>Java Basics: A beginner&#39;s tutorial</title>
        <dc:creator><![CDATA[@_Vengeance _Vengeance]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_vengeance">@_Vengeance</a> wrote:</p>
          <blockquote>
              <p>Would be nice if moparscapers would read some tutorials.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/14</link>
        <pubDate>Fri, 15 Feb 2008 18:09:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-181408-14</guid>
        <source url="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408.rss">Java Basics: A beginner&#39;s tutorial</source>
      </item>
      <item>
        <title>Java Basics: A beginner&#39;s tutorial</title>
        <dc:creator><![CDATA[@x19 x19]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/x19">@x19</a> wrote:</p>
          <blockquote>
              <p>Thanks for this, very well explained. XD</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/13</link>
        <pubDate>Fri, 15 Feb 2008 15:11:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-181408-13</guid>
        <source url="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408.rss">Java Basics: A beginner&#39;s tutorial</source>
      </item>
      <item>
        <title>Java Basics: A beginner&#39;s tutorial</title>
        <dc:creator><![CDATA[@Yz85Racer Yz85Racer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/yz85racer">@Yz85Racer</a> wrote:</p>
          <blockquote>
              <p>It’s ok, well done Tico135.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/12</link>
        <pubDate>Fri, 15 Feb 2008 12:41:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-181408-12</guid>
        <source url="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408.rss">Java Basics: A beginner&#39;s tutorial</source>
      </item>
      <item>
        <title>Java Basics: A beginner&#39;s tutorial</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>[quote=“Taharok, post:9, topic:181408”]If you are following convention you don’t capitalize the first ‘word’ or part of a method name. So, [tt]WalkInto[/tt] would be [tt]walkInto[/tt].[/quote]your face doesnt follow convention</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/11</link>
        <pubDate>Fri, 15 Feb 2008 10:04:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-181408-11</guid>
        <source url="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408.rss">Java Basics: A beginner&#39;s tutorial</source>
      </item>
      <item>
        <title>Java Basics: A beginner&#39;s tutorial</title>
        <dc:creator><![CDATA[@Cheese_Police c|p]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cheese_police">@Cheese_Police</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="9" data-topic="181408">
<div class="title">
<div class="quote-controls"></div>
 Taharok:</div>
<blockquote>
<p>If you are following convention you don’t capitalize the first ‘word’ or part of a method name. So, [tt]WalkInto[/tt] would be [tt]walkInto[/tt].</p>
</blockquote>
</aside>
<p>wow ur a genieus ++</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/10</link>
        <pubDate>Fri, 15 Feb 2008 08:25:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-181408-10</guid>
        <source url="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408.rss">Java Basics: A beginner&#39;s tutorial</source>
      </item>
      <item>
        <title>Java Basics: A beginner&#39;s tutorial</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <p>If you are following convention you don’t capitalize the first ‘word’ or part of a method name. So, [tt]WalkInto[/tt] would be [tt]walkInto[/tt].</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/9</link>
        <pubDate>Fri, 15 Feb 2008 03:28:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-181408-9</guid>
        <source url="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408.rss">Java Basics: A beginner&#39;s tutorial</source>
      </item>
      <item>
        <title>Java Basics: A beginner&#39;s tutorial</title>
        <dc:creator><![CDATA[@Ollie Ollie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ollie">@Ollie</a> wrote:</p>
          <blockquote>
              <p>i can tell a moparscaper wrote this</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/8</link>
        <pubDate>Fri, 15 Feb 2008 02:58:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-181408-8</guid>
        <source url="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408.rss">Java Basics: A beginner&#39;s tutorial</source>
      </item>
      <item>
        <title>Java Basics: A beginner&#39;s tutorial</title>
        <dc:creator><![CDATA[@Evil1 Evil_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/evil1">@Evil1</a> wrote:</p>
          <blockquote>
              <blockquote>Indentation
When coding java, you will learn to indent your code to organize it, indentation is very easy, but it is very important you learn to do it properly. Bad indentation is not a habit you want to have. The code below, is good indentation.
[code]
   if(RyleeIsLeet) {
   sendMessage("Rylee Is Leet!!!);
   } else {
   RyleeIsLeet = false;
}[/code]</blockquote>
<p>variables shouldn’t start with a capital letter, not by conventions, and I personally think</p>
<pre><code class="lang-auto">if(ryleeIsLeet) {
    sendMessage("Rylee is leet"); // why are we using private server stuff? :(, and you missed a "
} else {
    ryleeIsLeet = false; // Why this? Obviously ryleeIsLeet is already false, since it came here.
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/7</link>
        <pubDate>Fri, 15 Feb 2008 02:57:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-181408-7</guid>
        <source url="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408.rss">Java Basics: A beginner&#39;s tutorial</source>
      </item>
      <item>
        <title>Java Basics: A beginner&#39;s tutorial</title>
        <dc:creator><![CDATA[@Speljohan Speljohan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/speljohan">@Speljohan</a> wrote:</p>
          <blockquote>
              <p>[quote=“chrisn2323, post:5, topic:181408”]it is String[] args, not the other way around.[/quote]Doesn’t matter tbh. It’s just a convention and personal preference.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/6</link>
        <pubDate>Fri, 15 Feb 2008 02:36:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-181408-6</guid>
        <source url="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408.rss">Java Basics: A beginner&#39;s tutorial</source>
      </item>
      <item>
        <title>Java Basics: A beginner&#39;s tutorial</title>
        <dc:creator><![CDATA[@chrisn2323 chrisn2323]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/chrisn2323">@chrisn2323</a> wrote:</p>
          <blockquote>
              <p>it is String[] args, not the other way around.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/5</link>
        <pubDate>Fri, 15 Feb 2008 02:27:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-181408-5</guid>
        <source url="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408.rss">Java Basics: A beginner&#39;s tutorial</source>
      </item>
      <item>
        <title>Java Basics: A beginner&#39;s tutorial</title>
        <dc:creator><![CDATA[@god_of_ikiliki god of ikiliki]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/god_of_ikiliki">@god_of_ikiliki</a> wrote:</p>
          <blockquote>
              <p>Nice nice nice Tico135.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/4</link>
        <pubDate>Fri, 15 Feb 2008 00:56:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-181408-4</guid>
        <source url="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408.rss">Java Basics: A beginner&#39;s tutorial</source>
      </item>
      <item>
        <title>Java Basics: A beginner&#39;s tutorial</title>
        <dc:creator><![CDATA[@Tico135 Tico]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tico135">@Tico135</a> wrote:</p>
          <blockquote>
              <p>[quote=“Swordskid61, post:2, topic:181408”]Fairly well done. Very well explained.<br>
LOLOL++[/quote]</p>
<p>Thanks, I’m going to be adding some more things with operators and such. After I finish adding all the keywords that is. <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=6" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/3</link>
        <pubDate>Fri, 15 Feb 2008 00:55:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-181408-3</guid>
        <source url="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408.rss">Java Basics: A beginner&#39;s tutorial</source>
      </item>
      <item>
        <title>Java Basics: A beginner&#39;s tutorial</title>
        <dc:creator><![CDATA[@swordskid61 Swordskid61]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/swordskid61">@swordskid61</a> wrote:</p>
          <blockquote>
              <p>Fairly well done. Very well explained.<br>
LOLOL++</p>
<p>/edit<br>
owait i r only 14 rep <img src="https://forum.moparisthebest.com/images/emoji/twitter/frowning.png?v=6" title=":frowning:" class="emoji" alt=":frowning:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/2</link>
        <pubDate>Fri, 15 Feb 2008 00:53:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-181408-2</guid>
        <source url="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408.rss">Java Basics: A beginner&#39;s tutorial</source>
      </item>
      <item>
        <title>Java Basics: A beginner&#39;s tutorial</title>
        <dc:creator><![CDATA[@Tico135 Tico]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tico135">@Tico135</a> wrote:</p>
          <blockquote>
              <p>Alright, in this tutorial you will be learning about some of the more basics of the java programming language. Since barley no one goes to the java.sun websites, I will post my own version. However, the java tutorials can be found <a href="http://java.sun.com/docs/books/tutorial/" data-bbcode="true" rel="nofollow noopener">here</a>.</p>
<p>First I’m going to start off with some basic and more common java keywords. It is important to know these words if you get errors in your codes, otherwise you won’t know how to fix them. If you would like to view the full list, go <a href="http://www.runelocus.com/java/keywords.php" data-bbcode="true" rel="nofollow noopener">here</a>.</p>
<p>[size=11pt][font=java]<span class="bbcode-b"><span class="bbcode-u">Chapter 1: Keywords</span></span>[/font][/size]<br>
<span class="bbcode-b">Boolean</span> - <span class="bbcode-i">Indicates whether a value is true or false</span><br>
<span class="bbcode-b">Break</span> - <span class="bbcode-i">Jumps out of a loop or switch</span><br>
<span class="bbcode-b">Byte</span> - <span class="bbcode-i">Indicates that a value is an 8-bit whole number</span><br>
<span class="bbcode-b">Case</span> - <span class="bbcode-i">Introduces one of several possible paths of execution in a </span>[iurl=#switch][font=lucida console]switch[/iurl]<br>
<span class="bbcode-b">Class</span> - <span class="bbcode-i">Introduces a class-a blueprint for an object</span><br>
<span class="bbcode-b">Else</span> - <span class="bbcode-i">Introduces statements that are executed when the condition in an</span> [iurl=#if][font=lucida console]if[/iurl]<span class="bbcode-i"> statement isn’t true</span><br>
<span class="bbcode-b">Enum</span> - <span class="bbcode-i">Creates a newly defined type-a group of values that a variable can have</span><br>
[anchor=if]<span class="bbcode-b">If</span>[/anchor] - <span class="bbcode-i">Tests to see whether a condition is true. If it’s true, the computer executes certain statements; otherwise, the computer executes other statements</span><br>
<span class="bbcode-b">New</span> - <span class="bbcode-i">Creates an object from an existing class</span><br>
<span class="bbcode-b">Private</span> - <span class="bbcode-i">Indicates that a variable or method can be used only within a certain class</span><br>
<span class="bbcode-b">Public</span> - <span class="bbcode-i">Indicates that a variable or method can be used in subclasses from another package</span><br>
[anchor=switch]<span class="bbcode-b">Switch</span>[/anchor] - <span class="bbcode-i">Tells the computer to follow one of many possible paths of execution (one of many possible cases), depending on the value of the expression</span><br>
<span class="bbcode-b">This</span> - <span class="bbcode-i">A self-reference-refers to the object in which the word this appears</span><br>
<span class="bbcode-b">Try</span> - <span class="bbcode-i">Introduces statements that are watched (during runtime) for things that can go wrong</span><br>
<span class="bbcode-b">Void</span> - <span class="bbcode-i">Indicates that a method doesn’t return a value</span></p>
<p><span class="bbcode-b">Please Note:</span> [i]I do not take credit for these definitions, they are directly from the book <a href="http://www.dummies.com/WileyCDA/DummiesTitle/Beginning-Programming-with-Java-For-Dummies-2nd-Edition.productCd-0764588745,subcat-PROGRAMMING.html" data-bbcode="true" rel="nofollow noopener">Beginning Programming with Java For Dummies</a>.</p>
<p>[center][size=13pt][font=java]<span class="bbcode-b"><span class="bbcode-u">Chapter 2: Java Symbols and Punctuation</span></span>[/font][/size][/center]<br>
This is quite a short chapter, you will learn the basic Java Symbols and Punctuation, and learn that each and every one of the symbols and punctuations, has a purpose, and without them it would be meaningless.</p>
<blockquote>class ryleeIsLeet [b]{[/b]
<pre><code>public static void main[b]([/b]String args[b][]) {[/b]
     System.out.println[b]("[/b]I am leet[b]");[/b]
[b]}
</code></pre>
<p>}[/b]</p>
</blockquote>
<p>Every one of the bolded symbols has a meaning, if you look below, you will see what role a curly bracket({, }) plays in a Java code.</p>
<blockquote>class ryleeIsLeet {
[quote]
    public static void main(String args[]) {
[quote]
         System.out.println("I am leet");[/quote]
    }[/quote]
}</blockquote>
If you notice, the curly bracket acts like a box around the code, when you start, your code goes inside your main class, in this case the class is "ryleeIsLeet" and you keep building things inside of the main class, which has a meaning. If you were to code like in the picture below, the code is meaningless, as nothing is inside the main class.
<blockquote>class ryleeIsLeet {
}
[quote]
    public static void main(String args[]) {
}
[quote]
         System.out.println("I am leet");[/quote]
[/quote]</blockquote>
<p>[size=11pt][font=java]<span class="bbcode-b"><span class="bbcode-u">Punctuation</span></span>[/font][/size]<br>
Punctuation is key in the Java Programming Language. A simple switch of an uppercase and lowercase letter can change the meaning of a code to nothing at all, or something you didn’t want to happen.</p>
<p>If you were to change this lines uppercase letters to lowercase, and vise versa, the code goes from:</p>
<pre><code class="lang-auto">         System.out.println("I am leet");</code></pre>
<p>A meanful code.</p>
<pre><code class="lang-auto">         system.Out.Println("I am leet");</code></pre>
<p>To a completely worthless and unmeaningful code.</p>
<p>It is also extremely important that you know when naming classes, <span class="bbcode-b">they <span class="bbcode-u">must</span> be in all Caps(uppercase) <span class="bbcode-u">or</span> each word <span class="bbcode-u">must</span> start with a capital</span>, like I have in my code.</p>
<p>Variables don’t start with capital letters. They follow the format lowercaseUppercase and continue uppercase for every word. An example would be:</p>
<p><code>
if(ryleeIsLeet) {</code></p>
<p><span class="bbcode-b">Don’t name classes “class public” because public is a keyword and posses a meaning in the Java Language. This goes for all other keywords as well.</span></p>
<p>[size=11pt][font=java]<span class="bbcode-b"><span class="bbcode-u">Indentation</span></span>[/font][/size]<br>
When coding java, you will learn to indent your code to organize it, indentation is very easy, but it is very important you learn to do it properly. Bad indentation is not a habit you want to have. The code below, is good indentation.</p>
<p><code>   if(ryleeIsLeet) {
   System.out.println("Rylee is leet!");
   } else {
   System.out.println("Rylee isn't leet! :(");
}</code><br>
This code has good indentation because everything is aligned, the code below is bad indentation because everything is indented differently.</p>
<p><code>if(ryleeIsLeet) {
         sendMessage("Rylee Is Leet!!!);
                  } else {
    System.out.println("Rylee isn't leet! :(");
            }</code></p>
<p>[size=11pt][font=java]<span class="bbcode-b"><span class="bbcode-u">Slashes</span></span>[/font][/size]<br>
In Java, there are things you can do to write a message in a code, but make it meaningless. In your server, you probably have seen “//” after some codes. This will do nothing, as long as you have two slashes at the end of the code.</p>
<pre><code class="lang-auto">         System.out.println("I am leet"); //Displays message on the screen</code></pre>
<p>This code is fine, and you can write whatever you want after the two slashes, and you will have no errors.</p>
<p>There is also another way to do this. Generally at the top of most programs you probably see something like:</p>
<p>[code]<br>
/*</p>
<ul>
<li>Made by Rylee</li>
<li>
</li>
</ul>
<p>*/[/code]<br>
This is another way to do the same thing as above, but it is usually for more of a credit based thing. It can also be useful when you are trying to figure out what a code does, so you put a “/*CODEHERE */” around it which will disable that particular code or line.</p>
<p>[center][size=13pt][font=java]<span class="bbcode-b"><span class="bbcode-u">Chapter 3: Very Simple Programs</span></span>[/font][/size][/center]<br>
This is a very short Chapter, you will learn probably the most basic program, and what it does.</p>
<p>We are going to take the code above, and explain all of it’s functions.</p>
<p>[code]<br>
class RyleeIsLeet {</p>
<pre><code>public static void main(String args[]) {
     System.out.println("I am leet");
}
</code></pre>
<p>}[/code]</p>
<p>“class RyleeIsLeet” is a new class, when you name a new class, be sure to name it something that is meaningful, I don’t suggest naming a class “CuddlePuppy” or something cute like that. It’s not very meaningful and may confuse you. “public static void main(String args[])” pretty much explains itself, but nonetheless, it is the main void. “args” has no meaning, just like “RyleeIsLeet,” it’s just a name, I could name my string “(String goat[])” if I wanted to. “System.out.println(“I am leet”);” displays the text “I am leet” on the screen, or depending on the program you run it in, the output box.</p>
<p>[center][size=13pt][font=java]<span class="bbcode-b"><span class="bbcode-u">Chapter 4: Teaching Methods</span></span>[/font][/size][/center]<br>
In Java many codes are explained by more the less a to-do-list, or a step-by-step guide on doing something. I could write a could for making a peanut butter sandwich, which would probably look a lot like this.</p>
<p><code>
void MakePeanuutButterSandwich() {
     walkInto(feet, kitchen);
     Open(breadbag);
     Grab(bread);
     Open(cupboard);
     Grab(peanutbutter);
     Open(lid);
     Open(drawer);
     Grab(knife);
     Spread(penutbutter);
     Fold(sandwich);
     Eat(sandwich);
}</code><br>
However, that method is meaningless unless it is called upon somewhere else.</p>
<pre><code class="lang-auto">MakePeanutButterSandwich(peanutButterSandwich);</code></pre>
<p><span class="bbcode-b">I am not by any means saying this code will work, it’s just an example.</span></p>
<p>When writing a method, it must have four things:</p>
<p>[ul][li]<span class="bbcode-b">Method Header</span>[/li]<br>
[li]<span class="bbcode-b">Method Body</span>[/li]<br>
[li]<span class="bbcode-b">Method Declaration</span>[/li]<br>
[li]<span class="bbcode-b">Method Call</span>[/li][/ul]</p>
<p>The diagram below illustrates each part of the method.<br>
<img src="http://i184.photobucket.com/albums/x231/Rylee1010/method-1.jpg" alt width="563" height="458"></p>
<p>[center][size=13pt][font=java]<span class="bbcode-b"><span class="bbcode-u">Chapter 5: Java Statements</span></span>[/font][/size][/center]<br>
In this chapter you will learn the most commonly used Java statements, what they do, and what they can be used for. I will only be explaining a few of them, as the other ones may be a little bit more advanced. You can learn those with a quick search on google. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p><span class="bbcode-b">The Break Statement</span></p>
<pre><code class="lang-auto">break;</code></pre>
<p><span class="bbcode-b">The If Statement</span></p>
<p><code>if(expression) {
       //statements 
} else {
      //statements
}</code></p>
<p><span class="bbcode-b">The Switch Statement</span></p>
<p><code>switch(expression) 
{
     case constant;
          statements;
          break;
     default;
          statements;
          break;
}</code></p>
<p><span class="bbcode-b">The Throw Statement</span></p>
<pre><code class="lang-auto">throw (exception)</code></pre>
<p><span class="bbcode-b">The Try Statement</span></p>
<p><code>try {
        //statements
} catch (exception-class e) {
        //statements
} finally {
        //statements
} try {
        //statements
} finally {
        //statements
}</code></p>
<p><span class="bbcode-b">The Break Statement</span><br>
First off we are going to explain the break; statement, it’s meaning, and what it’s used for.</p>
<p>A break jumps out of a loop or a switch, and even in our above examples you can see it in the switch statement. <span class="bbcode-b">Some times we need to exit from a loop before the completion of the loop then we use break statement and exit from the loop and loop is terminated. The break statement is used in while loop, do - while loop, for loop and also used in the switch statement.</span> - Bolded sentence is from <a href="http://www.roseindia.net/java/beginners/Break.shtml" data-bbcode="true" rel="nofollow noopener">this site</a>.</p>
<p><span class="bbcode-b">The If Statement</span><br>
The If statement heavily relies on the use of boolean expression (a boolean indicates whether a value is true or false). You may not even do the simplest if statement without a boolean expression. I will talk about the use of boolean expressions later on (may not get added for a day or two). The if statement is probably the most common statement in the java language.</p>
<p>In the most basic if statement you may execute a single statement or a block of statements only if a boolean expression returns true. A simple if statement can look like this.</p>
<p><code>
if(ryleeIsLeet)  { //ryleeIsLeet must be declared as a boolean expression
   System.out.println("Rylee is leet!");
}</code><br>
When opening an if statement you use curly brackets (in my style of coding anyway <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"> it just makes things easier to understand) to start and finish the statement. I suggest putting the opening curly bracket on the same line as the if statement (again that is just my preference).</p>
<p>Generally if statements are in way like to-do-lists. If the boolean expression returns true, then you follow the statements. If not, you skip the statements. I could make a code like this</p>
<p>[code]<br>
private boolean ryleeIsLeet = true;</p>
<p>if(ryleeIsLeet) {<br>
System.out.println(“Rylee is leet!”);<br>
}[/code]<br>
and everything would work because the boolean expression is true, so the code carries on. Now if I was to make a boolean expression with ryleeIsLeet = false, the code changes, and the System.out.println message is skipped. Use the image below for more clarification.</p>
<p><img src="http://i184.photobucket.com/albums/x231/Rylee1010/ifstatement.jpg" alt width="278" height="193"></p>
<p>With the if statement comes the else statement. The if statement stays the same as explained above, except instead of skipping the statement if the value returns false, it goes to the else statement, where you can make the message “Rylee is leet” regardless of whether the value returns true or false as long as you have System.out.println(“Rylee is leet!”); on both sides of the else statement. You can also make it display a different message, or change the statement to whatever you want. It really is up to you. This is an example of an if and else statement where if the value returns true “Rylee is leet” is displayed, and if the value returns false, “Rylee isn’t leet” is displayed.</p>
<p><code>
if(ryleeIsLeet) {
     System.out.println("Rylee is leet!"); 
} else {
     System.out.println("Rylee isn't leet!");
}</code></p>
<p><span class="bbcode-b">The Throw Statement</span><br>
The throw statement is quite simple. You cannot throw a new exception if the object is not throwable. To make an object throwable you can use the throws statement. The throw statement can also be incorporated with the if statement, so instead of the earlier example, you could use this:</p>
<p><code>
if(ryleeIsLeet) {
    throw new LeetBarException();
}</code><br>
To make the LeetBar object throwable, somewhere else in your code you need to have</p>
<pre><code class="lang-auto">throws LeetBarException();</code></pre>
<p>for it to work properly.</p>
<p>If I feel up to it later I may add the try and switch statements. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>[center][size=13pt][font=java]<span class="bbcode-b"><span class="bbcode-u">Chapter 6: Boolean Expressions</span></span>[/font][/size][/center]<br>
This will be a very short chapter, as I will just be teaching the basics of booleans and what role they play.</p>
<p>Booleans are very easy to understand. As we should’ve learned by now, booleans indicate whether a value returns true or false.</p>
<p>[center][size=13pt][font=java]<span class="bbcode-b"><span class="bbcode-u">Chapter 7: Java Operators</span></span>[/font][/size][/center]<br>
Operators are just basic mathematical sings and other types of sings that you will probably have seen before, that posses meanings in the Java language.</p>
<p>There are three different types of Operators. They are:</p>
<p>[ul][li]<span class="bbcode-b">Arithmetic</span>[/li]<br>
[li]<span class="bbcode-b">Relational</span>[/li]<br>
[li]<span class="bbcode-b">Logical</span>[/li][/ul]</p>
<p><span class="bbcode-b"><span class="bbcode-u">Arithmetic</span></span></p>
<ul>
<li>
<pre><code>Addition
</code></pre>
</li>
</ul>
<ul>
<li>
<pre><code>Subtraction
</code></pre>
</li>
</ul>
<ul>
<li>
<pre><code>Multiplication
</code></pre>
</li>
</ul>
<p>/     Division<br>
%    Remainder<br>
++   Increment<br>
–    Decrement<br>
+=   Addition and assignment<br>
-=   Subtraction and assignment<br>
*=   Multiplication and assignment<br>
/=    Division and assignment<br>
%=  Remainder and assignment</p>
<p><span class="bbcode-b"><span class="bbcode-u">Relational</span></span><br>
==   Equal<br>
!=    Not equal<br>
&lt;     Less than<br>
&lt;=   Less than or equal to</p>
<blockquote>
<pre><code>Greater than
</code></pre>
<p>=   Greater than or equal to</p>
</blockquote>
<p><span class="bbcode-b"><span class="bbcode-u">Logical</span></span><br>
!      Not<br>
&amp;     And<br>
&amp;&amp;   Conditional and<br>
|     Or<br>
||    Conditional or<br>
^     xor</p>
<p>[size=12pt][font=java]<span class="bbcode-b"><span class="bbcode-u">Arithmetic Operators</span></span>[/font][/size]<br>
Arithmetic Operators are extremely simple as long as you are at least 9 years old… <img src="https://forum.moparisthebest.com/images/emoji/twitter/expressionless.png?v=6" title=":expressionless:" class="emoji" alt=":expressionless:"> I won’t even make up equations for you as Math is what you learn at school, I won’t torture you. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"> If you know how to add, subtract, multiply, and divide, you are pretty much capable of understanding Arithmetic Operators.</p>
<p>[size=12pt][font=java]<span class="bbcode-b"><span class="bbcode-u">Relational Operators</span></span>[/font][/size]<br>
Relational operators are very simple as well. You will have seen most of the operators (arithmetic, relational, and logical) before if you have ever seen a server. These can also be used elsewhere in java math. Just be logical when using them, make sure everything makes sense, and you’ve used the right operator.</p>
<p>[size=12pt][font=java]<span class="bbcode-b"><span class="bbcode-u">Logical Operators</span></span>[/font][/size]<br>
A logical operator is another word for a boolean operator. A logical operator is an operator that returns a boolean result (true or false) that is based on the boolean result of one or two other expressions. Expressions that use logical operators are usually called compound expressions because they allow you to combine two or more expressions into one single expression. Below is a list of the operators, their names, their type and their description.</p>
<p>Operator ! - This operator is named “not,” and is a unary operator. This operator returns true if the operand to the right returns false, and if the operand to the right returns true, this operator returns false.</p>
<p>Operator &amp; - This operator is named “and,” and is a binary operator. This operator returns true if both of the operands evaluate to true. Both operands are evaluated before the “and” operator is applied.</p>
<p>Operator &amp;&amp; - This operator is named “conditional and,” and is a binary operator. This operator is the same as &amp;, but if the operand on the left returns false, it is returned false without evaluating the operand on the right.</p>
<p>Operator | - This operator is named “or,” and is a binary operator. This operator returns true if at least one of the operands evaluates to true. Both operands are evaluated before the “or” operator is applied.</p>
<p>Operator || - This operator is named “conditional or,” and is a binary operator. This is the same as |, but if the operand on the left returns true, it returns true without evaluating the operand on the right.</p>
<p>Operator ^ - This operator is named “xor,” and is a binary operator. This operator returns true if one and only one of the operands evaluates to true. If both operands evaluate to true or if both operands evaluate to false, it will return false.</p>
<p><span class="bbcode-b">I will add the rest in the morning, for now I need some sleep.</span></p>
<p>I will be adding more, this will get you started for a while if you are just learning <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>Enjoy! <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408/1</link>
        <pubDate>Fri, 15 Feb 2008 00:16:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-181408-1</guid>
        <source url="https://forum.moparisthebest.com/t/java-basics-a-beginners-tutorial/181408.rss">Java Basics: A beginner&#39;s tutorial</source>
      </item>
  </channel>
</rss>
