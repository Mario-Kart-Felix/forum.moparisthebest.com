<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[C++] Challenge: Modify a private data member</title>
    <link>https://forum.moparisthebest.com/t/c-challenge-modify-a-private-data-member/425611</link>
    <description>Here&#39;s another callenge, easier than the previous one.

[code]
#include &lt;iostream&gt;

class A
{
public:
	A(unsigned int i)
	{
		m_i = i;
	}

	~A(void)
	{

	}

	void print(void)
	{
		std::cout &lt;&lt; &quot;A &quot; &lt;&lt; m_i &lt;&lt; std::endl;
	}

private:
	unsigned int m_i;
};

int main(void)
{
	A a(200);

	//Change the value of a.m_i to 1000.

	a.print();

	std::cin.sync();
	std::cin.get();
	return 0;
}
[/code]

You must modify a.m_i and set it&#39;s value to 1000, then a.print() is expected to output &#39;A 1000&#39;.

Rules:
1. Write only standard C++ code.
2. Do not modify class A.
3. Raw data modification using force-casting is forbidden, as shown below - it would be too easy.
[code]
unsigned int* m_i = reinterpret_cast&lt;unsigned int*&gt;(&amp;a);
*m_i = 1000;
[/code]

[b]EDIT:
Posted a solution.[/b]
Due to no one posting a solution I&#39;ll post mine. The solution here is to make use of the default assignment operator that makes a copy of all data members.

[code]
#include &lt;iostream&gt;

class A
{
public:
	A(unsigned int i)
	{
		m_i = i;
	}

	~A(void)
	{

	}

	void print(void)
	{
		std::cout &lt;&lt; &quot;A &quot; &lt;&lt; m_i &lt;&lt; std::endl;
	}

private:
	unsigned int m_i;
};

int main(void)
{
	A a(200);
	a = A(1000); //Change the value of a.m_i to 1000.
	a.print();

	std::cin.sync();
	std::cin.get();
	return 0;
}
[/code]</description>
    
    <lastBuildDate>Sat, 17 Dec 2011 09:03:34 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/c-challenge-modify-a-private-data-member/425611.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[C++] Challenge: Modify a private data member</title>
        <dc:creator><![CDATA[@The_Enforcer The Enforcer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_enforcer">@The_Enforcer</a> wrote:</p>
          <blockquote>
              <p>Here’s another callenge, easier than the previous one.</p>
<pre><code class="lang-auto">#include &lt;iostream&gt;

class A
{
public:
	A(unsigned int i)
	{
		m_i = i;
	}

	~A(void)
	{

	}

	void print(void)
	{
		std::cout &lt;&lt; "A " &lt;&lt; m_i &lt;&lt; std::endl;
	}

private:
	unsigned int m_i;
};

int main(void)
{
	A a(200);

	//Change the value of a.m_i to 1000.

	a.print();

	std::cin.sync();
	std::cin.get();
	return 0;
}</code></pre>
<p>You must modify a.m_i and set it’s value to 1000, then a.print() is expected to output ‘A 1000’.</p>
<p>Rules:</p>
<ol>
<li>Write only standard C++ code.</li>
<li>Do not modify class A.</li>
<li>Raw data modification using force-casting is forbidden, as shown below - it would be too easy.</li>
</ol>
<pre><code class="lang-auto">unsigned int* m_i = reinterpret_cast&lt;unsigned int*&gt;(&amp;a);
*m_i = 1000;</code></pre>
<p><span class="bbcode-b">EDIT:<br>
Posted a solution.</span><br>
Due to no one posting a solution I’ll post mine. The solution here is to make use of the default assignment operator that makes a copy of all data members.</p>
<pre><code class="lang-auto">#include &lt;iostream&gt;

class A
{
public:
	A(unsigned int i)
	{
		m_i = i;
	}

	~A(void)
	{

	}

	void print(void)
	{
		std::cout &lt;&lt; "A " &lt;&lt; m_i &lt;&lt; std::endl;
	}

private:
	unsigned int m_i;
};

int main(void)
{
	A a(200);
	a = A(1000); //Change the value of a.m_i to 1000.
	a.print();

	std::cin.sync();
	std::cin.get();
	return 0;
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-challenge-modify-a-private-data-member/425611/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-challenge-modify-a-private-data-member/425611/1</link>
        <pubDate>Sat, 17 Dec 2011 09:03:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-425611-1</guid>
        <source url="https://forum.moparisthebest.com/t/c-challenge-modify-a-private-data-member/425611.rss">[C++] Challenge: Modify a private data member</source>
      </item>
  </channel>
</rss>
