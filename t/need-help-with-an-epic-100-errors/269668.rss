<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Need help with an epic 100 errors</title>
    <link>https://forum.moparisthebest.com/t/need-help-with-an-epic-100-errors/269668</link>
    <description>I&#39;ve tried everything... Lol.

[code]client.java:6237: illegal start of type
if(FullVMelee()){
^
client.java:6237: &lt;identifier&gt; expected
if(FullVMelee()){
             ^
client.java:6237: &#39;;&#39; expected
if(FullVMelee()){
              ^
client.java:6237: illegal start of type
if(FullVMelee()){
               ^
client.java:6237: &lt;identifier&gt; expected
if(FullVMelee()){
                ^
client.java:6237: &#39;;&#39; expected
if(FullVMelee()){
                 ^
client.java:6238: illegal start of type
                voidmelee += 10;
                          ^
client.java:6238: &lt;identifier&gt; expected
                voidmelee += 10;
                            ^
client.java:6240: class, interface, or enum expected
                if (FightType == 1)
                ^
client.java:6242: class, interface, or enum expected
                int random_u = misc.random(playerBonus[1] + aBonus) * 2;
                ^
client.java:6243: class, interface, or enum expected
                int dBonus = 0;
                ^
client.java:6244: class, interface, or enum expected
                if (AttackingOn2.FightType == 4)
                ^
client.java:6246: class, interface, or enum expected
                int random_def = misc.random(AttackingOn2.playerBonus[6] + dBonu
s + AttackingOn2.AtkPray * 8);
                ^
client.java:6247: class, interface, or enum expected
                if ((random_u &gt;= random_def) &amp;&amp; (rand_att &gt; rand_def)) {
                ^
client.java:6249: class, interface, or enum expected
                        if(AttackingOn2.ProtMelee)
                        ^
client.java:6251: class, interface, or enum expected
                } else {
                ^
client.java:6253: class, interface, or enum expected
                }
                ^
client.java:6255: class, interface, or enum expected
                if (UseBow &amp;&amp; playerEquipment[playerWeapon] == 4734) {
                ^
client.java:6258: class, interface, or enum expected
                        if (DeleteArrow() &amp;&amp; playerEquipment[playerArrows] == 47
40) {
                        ^
client.java:6260: class, interface, or enum expected
                                arrow = true;
                                ^
client.java:6261: class, interface, or enum expected
                                actionInterval = getbattleTimer();
                                ^
client.java:6262: class, interface, or enum expected
                                lastAction = System.currentTimeMillis();
                                ^
client.java:6263: class, interface, or enum expected
                        } else {
                        ^
client.java:6265: class, interface, or enum expected
                                sM(&quot;There is no ammo left in your quiver.&quot;);
                                ^
client.java:6266: class, interface, or enum expected
                                return false;
                                ^
client.java:6267: class, interface, or enum expected
                        }
                        ^
client.java:6272: class, interface, or enum expected
                        hitDiff = misc.random(maxRangeHit());
                        ^
client.java:6273: class, interface, or enum expected
                        degradeCrystalBow();
                        ^
client.java:6274: class, interface, or enum expected
                        if (DeleteArrow()) {
                        ^
client.java:6276: class, interface, or enum expected
                                arrow = true;
                                ^
client.java:6277: class, interface, or enum expected
                                arrowsLeft -= 1;
                                ^
client.java:6278: class, interface, or enum expected
                                actionInterval = getbattleTimer();
                                ^
client.java:6279: class, interface, or enum expected
                                lastAction = System.currentTimeMillis();
                                ^
client.java:6280: class, interface, or enum expected
                        } else {
                        ^
client.java:6282: class, interface, or enum expected
                                sM(&quot;There is no ammo left in your quiver.&quot;);
                                ^
client.java:6283: class, interface, or enum expected
                                return false;
                                ^
client.java:6284: class, interface, or enum expected
                        }
                        ^
client.java:6289: class, interface, or enum expected
                        hitDiff = misc.random(maxRangeHit());
                        ^
client.java:6290: class, interface, or enum expected
                        if (DeleteArrow() &amp;&amp; HasArrows) {
                        ^
client.java:6292: class, interface, or enum expected
                                arrow = true;
                                ^
client.java:6293: class, interface, or enum expected
                                actionInterval = getbattleTimer();
                                ^
client.java:6294: class, interface, or enum expected
                                lastAction = System.currentTimeMillis();
                                ^
client.java:6295: class, interface, or enum expected
                        } else {
                        ^
client.java:6297: class, interface, or enum expected
                                sM(&quot;There is no ammo left in your quiver.&quot;);
                                ^
client.java:6298: class, interface, or enum expected
                                return false;
                                ^
client.java:6299: class, interface, or enum expected
                        }
                        ^
client.java:6304: class, interface, or enum expected
                        hitDiff = misc.random(maxRangeHit());
                        ^
client.java:6305: class, interface, or enum expected
                        if (DeleteArrow() &amp;&amp; HasArrows) {
                        ^
client.java:6307: class, interface, or enum expected
                                arrow = true;
                                ^
client.java:6308: class, interface, or enum expected
                                actionInterval = getbattleTimer();
                                ^
client.java:6309: class, interface, or enum expected
                                lastAction = System.currentTimeMillis();
                                ^
client.java:6310: class, interface, or enum expected
                        } else {
                        ^
client.java:6312: class, interface, or enum expected
                                sM(&quot;There is no ammo left in your quiver.&quot;);
                                ^
client.java:6313: class, interface, or enum expected
                                return false;
                                ^
client.java:6314: class, interface, or enum expected
                        }
                        ^
client.java:6319: class, interface, or enum expected
                        if (DeleteArrow() &amp;&amp; HasBolts) {
                        ^
client.java:6321: class, interface, or enum expected
                                arrow = true;
                                ^
client.java:6322: class, interface, or enum expected
                                actionInterval = getbattleTimer();
                                ^
client.java:6323: class, interface, or enum expected
                                lastAction = System.currentTimeMillis();
                                ^
client.java:6324: class, interface, or enum expected
                        } else {
                        ^
client.java:6326: class, interface, or enum expected
                                sM(&quot;There is no ammo left in your quiver.&quot;);
                                ^
client.java:6327: class, interface, or enum expected
                                return false;
                                ^
client.java:6328: class, interface, or enum expected
                        }
                        ^
client.java:6333: class, interface, or enum expected
                        if (DeleteRing() &amp;&amp; HasRings) {
                        ^
client.java:6335: class, interface, or enum expected
                                arrow = true;
                                ^
client.java:6336: class, interface, or enum expected
                                actionInterval = getbattleTimer();
                                ^
client.java:6337: class, interface, or enum expected
                                lastAction = System.currentTimeMillis();
                                ^
client.java:6338: class, interface, or enum expected
                        } else {
                        ^
client.java:6340: class, interface, or enum expected
                                return false;
                                ^
client.java:6341: class, interface, or enum expected
                        }
                        ^
client.java:6344: class, interface, or enum expected
if(Smite == true &amp;&amp; AttackingOn2.playerLevel[5] &gt; 0 &amp;&amp; GoodDistance(EnemyX, Enem
yY, absX, absY, 1))
^
client.java:6347: class, interface, or enum expected
AttackingOn2.sendQuest(&quot;&quot; + AttackingOn2.playerLevel[5] + &quot;&quot;, 4012);
^
client.java:6348: class, interface, or enum expected
AttackingOn2.sendFrame126(&quot;Prayer: &quot;+AttackingOn2.playerLevel[5]+&quot;/&quot;+AttackingOn
2.getLevelForXP(playerXP[5])+&quot;&quot;, 687);
^
client.java:6349: class, interface, or enum expected
}
^
client.java:6352: class, interface, or enum expected
}
^
client.java:6356: class, interface, or enum expected
}
^
client.java:6360: class, interface, or enum expected
}
^
client.java:6364: class, interface, or enum expected
}
^
client.java:6368: class, interface, or enum expected
}
^
client.java:6372: class, interface, or enum expected
}
^
client.java:6376: class, interface, or enum expected
}
^
client.java:6382: class, interface, or enum expected
}
^
client.java:6385: class, interface, or enum expected
}
^
client.java:6387: class, interface, or enum expected
stillgfx(398, EnemyY, EnemyX);
^
client.java:6388: class, interface, or enum expected
}
^
client.java:6392: class, interface, or enum expected
AttackingOn2.currentHealth += 20;
^
client.java:6393: class, interface, or enum expected
AttackingOn2.lowGFX(436,0);
^
client.java:6394: class, interface, or enum expected
AttackingOn2.playerLevel[5] = 0;
^
client.java:6395: class, interface, or enum expected
}
^
client.java:6398: class, interface, or enum expected
isSkulled = true;
^
client.java:6399: class, interface, or enum expected
skulledBy = AttackingOn2.playerName;
^
client.java:6400: class, interface, or enum expected
getHead();
^
client.java:6401: class, interface, or enum expected
}
^
client.java:6404: class, interface, or enum expected
ddsInterval = 500;
^
client.java:6405: class, interface, or enum expected
lastDds = System.currentTimeMillis();
^
client.java:6406: class, interface, or enum expected
actionInterval = getbattleTimer();
^
client.java:6407: class, interface, or enum expected
lastAction = System.currentTimeMillis();
^
client.java:6408: class, interface, or enum expected
}
^
100 errors
Press any key to continue . . .[/code]</description>
    
    <lastBuildDate>Fri, 27 Mar 2009 12:04:34 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/need-help-with-an-epic-100-errors/269668.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Need help with an epic 100 errors</title>
        <dc:creator><![CDATA[@public_boolean public boolean]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/public_boolean">@public_boolean</a> wrote:</p>
          <blockquote>
              <p>Add a } at the end.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/need-help-with-an-epic-100-errors/269668/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/need-help-with-an-epic-100-errors/269668/4</link>
        <pubDate>Fri, 27 Mar 2009 12:04:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-269668-4</guid>
        <source url="https://forum.moparisthebest.com/t/need-help-with-an-epic-100-errors/269668.rss">Need help with an epic 100 errors</source>
      </item>
      <item>
        <title>Need help with an epic 100 errors</title>
        <dc:creator><![CDATA[@airborne airborne]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/airborne">@airborne</a> wrote:</p>
          <blockquote>
              <p>You are missing a bracket ({}) or have an extra one somewhere. Revise what you added.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/need-help-with-an-epic-100-errors/269668/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/need-help-with-an-epic-100-errors/269668/3</link>
        <pubDate>Fri, 27 Mar 2009 11:26:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-269668-3</guid>
        <source url="https://forum.moparisthebest.com/t/need-help-with-an-epic-100-errors/269668.rss">Need help with an epic 100 errors</source>
      </item>
      <item>
        <title>Need help with an epic 100 errors</title>
        <dc:creator><![CDATA[@dark-under-world dark-under-world]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/dark-under-world">@dark-under-world</a> wrote:</p>
          <blockquote>
              <p>Make sure the place u were editing has a } for every {</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/need-help-with-an-epic-100-errors/269668/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/need-help-with-an-epic-100-errors/269668/2</link>
        <pubDate>Fri, 27 Mar 2009 11:12:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-269668-2</guid>
        <source url="https://forum.moparisthebest.com/t/need-help-with-an-epic-100-errors/269668.rss">Need help with an epic 100 errors</source>
      </item>
      <item>
        <title>Need help with an epic 100 errors</title>
        <dc:creator><![CDATA[@_ExiledScape `ExiledScape]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_exiledscape">@_ExiledScape</a> wrote:</p>
          <blockquote>
              <p>I’ve tried everything… Lol.</p>
<p><code>client.java:6237: illegal start of type
if(FullVMelee()){
^
client.java:6237: &lt;identifier&gt; expected
if(FullVMelee()){
             ^
client.java:6237: ';' expected
if(FullVMelee()){
              ^
client.java:6237: illegal start of type
if(FullVMelee()){
               ^
client.java:6237: &lt;identifier&gt; expected
if(FullVMelee()){
                ^
client.java:6237: ';' expected
if(FullVMelee()){
                 ^
client.java:6238: illegal start of type
                voidmelee += 10;
                          ^
client.java:6238: &lt;identifier&gt; expected
                voidmelee += 10;
                            ^
client.java:6240: class, interface, or enum expected
                if (FightType == 1)
                ^
client.java:6242: class, interface, or enum expected
                int random_u = misc.random(playerBonus[1] + aBonus) * 2;
                ^
client.java:6243: class, interface, or enum expected
                int dBonus = 0;
                ^
client.java:6244: class, interface, or enum expected
                if (AttackingOn2.FightType == 4)
                ^
client.java:6246: class, interface, or enum expected
                int random_def = misc.random(AttackingOn2.playerBonus[6] + dBonu
s + AttackingOn2.AtkPray * 8);
                ^
client.java:6247: class, interface, or enum expected
                if ((random_u &gt;= random_def) &amp;&amp; (rand_att &gt; rand_def)) {
                ^
client.java:6249: class, interface, or enum expected
                        if(AttackingOn2.ProtMelee)
                        ^
client.java:6251: class, interface, or enum expected
                } else {
                ^
client.java:6253: class, interface, or enum expected
                }
                ^
client.java:6255: class, interface, or enum expected
                if (UseBow &amp;&amp; playerEquipment[playerWeapon] == 4734) {
                ^
client.java:6258: class, interface, or enum expected
                        if (DeleteArrow() &amp;&amp; playerEquipment[playerArrows] == 47
40) {
                        ^
client.java:6260: class, interface, or enum expected
                                arrow = true;
                                ^
client.java:6261: class, interface, or enum expected
                                actionInterval = getbattleTimer();
                                ^
client.java:6262: class, interface, or enum expected
                                lastAction = System.currentTimeMillis();
                                ^
client.java:6263: class, interface, or enum expected
                        } else {
                        ^
client.java:6265: class, interface, or enum expected
                                sM("There is no ammo left in your quiver.");
                                ^
client.java:6266: class, interface, or enum expected
                                return false;
                                ^
client.java:6267: class, interface, or enum expected
                        }
                        ^
client.java:6272: class, interface, or enum expected
                        hitDiff = misc.random(maxRangeHit());
                        ^
client.java:6273: class, interface, or enum expected
                        degradeCrystalBow();
                        ^
client.java:6274: class, interface, or enum expected
                        if (DeleteArrow()) {
                        ^
client.java:6276: class, interface, or enum expected
                                arrow = true;
                                ^
client.java:6277: class, interface, or enum expected
                                arrowsLeft -= 1;
                                ^
client.java:6278: class, interface, or enum expected
                                actionInterval = getbattleTimer();
                                ^
client.java:6279: class, interface, or enum expected
                                lastAction = System.currentTimeMillis();
                                ^
client.java:6280: class, interface, or enum expected
                        } else {
                        ^
client.java:6282: class, interface, or enum expected
                                sM("There is no ammo left in your quiver.");
                                ^
client.java:6283: class, interface, or enum expected
                                return false;
                                ^
client.java:6284: class, interface, or enum expected
                        }
                        ^
client.java:6289: class, interface, or enum expected
                        hitDiff = misc.random(maxRangeHit());
                        ^
client.java:6290: class, interface, or enum expected
                        if (DeleteArrow() &amp;&amp; HasArrows) {
                        ^
client.java:6292: class, interface, or enum expected
                                arrow = true;
                                ^
client.java:6293: class, interface, or enum expected
                                actionInterval = getbattleTimer();
                                ^
client.java:6294: class, interface, or enum expected
                                lastAction = System.currentTimeMillis();
                                ^
client.java:6295: class, interface, or enum expected
                        } else {
                        ^
client.java:6297: class, interface, or enum expected
                                sM("There is no ammo left in your quiver.");
                                ^
client.java:6298: class, interface, or enum expected
                                return false;
                                ^
client.java:6299: class, interface, or enum expected
                        }
                        ^
client.java:6304: class, interface, or enum expected
                        hitDiff = misc.random(maxRangeHit());
                        ^
client.java:6305: class, interface, or enum expected
                        if (DeleteArrow() &amp;&amp; HasArrows) {
                        ^
client.java:6307: class, interface, or enum expected
                                arrow = true;
                                ^
client.java:6308: class, interface, or enum expected
                                actionInterval = getbattleTimer();
                                ^
client.java:6309: class, interface, or enum expected
                                lastAction = System.currentTimeMillis();
                                ^
client.java:6310: class, interface, or enum expected
                        } else {
                        ^
client.java:6312: class, interface, or enum expected
                                sM("There is no ammo left in your quiver.");
                                ^
client.java:6313: class, interface, or enum expected
                                return false;
                                ^
client.java:6314: class, interface, or enum expected
                        }
                        ^
client.java:6319: class, interface, or enum expected
                        if (DeleteArrow() &amp;&amp; HasBolts) {
                        ^
client.java:6321: class, interface, or enum expected
                                arrow = true;
                                ^
client.java:6322: class, interface, or enum expected
                                actionInterval = getbattleTimer();
                                ^
client.java:6323: class, interface, or enum expected
                                lastAction = System.currentTimeMillis();
                                ^
client.java:6324: class, interface, or enum expected
                        } else {
                        ^
client.java:6326: class, interface, or enum expected
                                sM("There is no ammo left in your quiver.");
                                ^
client.java:6327: class, interface, or enum expected
                                return false;
                                ^
client.java:6328: class, interface, or enum expected
                        }
                        ^
client.java:6333: class, interface, or enum expected
                        if (DeleteRing() &amp;&amp; HasRings) {
                        ^
client.java:6335: class, interface, or enum expected
                                arrow = true;
                                ^
client.java:6336: class, interface, or enum expected
                                actionInterval = getbattleTimer();
                                ^
client.java:6337: class, interface, or enum expected
                                lastAction = System.currentTimeMillis();
                                ^
client.java:6338: class, interface, or enum expected
                        } else {
                        ^
client.java:6340: class, interface, or enum expected
                                return false;
                                ^
client.java:6341: class, interface, or enum expected
                        }
                        ^
client.java:6344: class, interface, or enum expected
if(Smite == true &amp;&amp; AttackingOn2.playerLevel[5] &gt; 0 &amp;&amp; GoodDistance(EnemyX, Enem
yY, absX, absY, 1))
^
client.java:6347: class, interface, or enum expected
AttackingOn2.sendQuest("" + AttackingOn2.playerLevel[5] + "", 4012);
^
client.java:6348: class, interface, or enum expected
AttackingOn2.sendFrame126("Prayer: "+AttackingOn2.playerLevel[5]+"/"+AttackingOn
2.getLevelForXP(playerXP[5])+"", 687);
^
client.java:6349: class, interface, or enum expected
}
^
client.java:6352: class, interface, or enum expected
}
^
client.java:6356: class, interface, or enum expected
}
^
client.java:6360: class, interface, or enum expected
}
^
client.java:6364: class, interface, or enum expected
}
^
client.java:6368: class, interface, or enum expected
}
^
client.java:6372: class, interface, or enum expected
}
^
client.java:6376: class, interface, or enum expected
}
^
client.java:6382: class, interface, or enum expected
}
^
client.java:6385: class, interface, or enum expected
}
^
client.java:6387: class, interface, or enum expected
stillgfx(398, EnemyY, EnemyX);
^
client.java:6388: class, interface, or enum expected
}
^
client.java:6392: class, interface, or enum expected
AttackingOn2.currentHealth += 20;
^
client.java:6393: class, interface, or enum expected
AttackingOn2.lowGFX(436,0);
^
client.java:6394: class, interface, or enum expected
AttackingOn2.playerLevel[5] = 0;
^
client.java:6395: class, interface, or enum expected
}
^
client.java:6398: class, interface, or enum expected
isSkulled = true;
^
client.java:6399: class, interface, or enum expected
skulledBy = AttackingOn2.playerName;
^
client.java:6400: class, interface, or enum expected
getHead();
^
client.java:6401: class, interface, or enum expected
}
^
client.java:6404: class, interface, or enum expected
ddsInterval = 500;
^
client.java:6405: class, interface, or enum expected
lastDds = System.currentTimeMillis();
^
client.java:6406: class, interface, or enum expected
actionInterval = getbattleTimer();
^
client.java:6407: class, interface, or enum expected
lastAction = System.currentTimeMillis();
^
client.java:6408: class, interface, or enum expected
}
^
100 errors
Press any key to continue . . .</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/need-help-with-an-epic-100-errors/269668/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/need-help-with-an-epic-100-errors/269668/1</link>
        <pubDate>Fri, 27 Mar 2009 11:09:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-269668-1</guid>
        <source url="https://forum.moparisthebest.com/t/need-help-with-an-epic-100-errors/269668.rss">Need help with an epic 100 errors</source>
      </item>
  </channel>
</rss>
