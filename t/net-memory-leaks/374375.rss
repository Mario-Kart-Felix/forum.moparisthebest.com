<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>.NET - Memory Leaks</title>
    <link>https://forum.moparisthebest.com/t/net-memory-leaks/374375</link>
    <description>Well, I was working on something with a friend last night and after testing some stuff (It was a server and after connecting 1000 bot players, I disconnected them all), he reported the server&#39;s memory usage to still be very high (This is because the buffer sizes for the players are 100K. I do not update players in parts right now because I wanted to get original player updating out of the way. Please do not point out that is bad in this topic because that isn&#39;t what it&#39;s about, and I already know it is).

When this problem occurred I thought it was because the threading was still keeping the players alive or something similar. So, I killed off the threads when their player count hit 0 (The way my server works is there is a thread for every X players that processes everything except updating) hoping that would resolve the issue. It didn&#39;t. My friend had found an article featuring Red Gate&#39;s Memory Profiler.

I gave that program a shot and it turned out, even though the players were set to null and not attempted to be used once, their i/o buffers were still existent and for some reason the GC decided to keep them that way (I&#39;m guessing something involving the player updating had taken a role). So I guess the lesson to be learned here is even with the Garbage Collector aiding you, things may still take place even you think they didn&#39;t. It also seems setting an object to null doesn&#39;t always set that object&#39;s objects to null, unless this just happened to be a special case.

~Lin</description>
    
    <lastBuildDate>Fri, 24 Dec 2010 20:13:05 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/net-memory-leaks/374375.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>.NET - Memory Leaks</title>
        <dc:creator><![CDATA[@meiscooldude meiscooldude]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/meiscooldude">@meiscooldude</a> wrote:</p>
          <blockquote>
              <p>I would suggest looking over your code a little more carefully or perhaps having a friend look over it and try to duplicate the problem. If an object is reachable on any of the threads in the application, then GC won’t collect it. You very well could be maintaining a weak reference to one of those objects.</p>
<p>The CLR’s GC puts objects in Generations depending on how many times GC has passed through memory but not collected them. If they are in the highest Generation GC won’t check to see if they need to be collected as often as those in lower generations.</p>
<p>I would suggest looking up how exactly the CRL’s GC works and use the CLR Profiler.</p>
<p>GC Notes:<br>
<a href="http://vineetgupta.spaces.live.com/blog/cns!8DE4BDC896BEE1AD!1104.entry" class="onebox" target="_blank" rel="nofollow noopener">http://vineetgupta.spaces.live.com/blog/cns!8DE4BDC896BEE1AD!1104.entry</a></p>
<p>CLR Profiler:<br>
<a href="http://msdn.microsoft.com/en-us/library/ff650691.aspx#scalenethowto13_topic6" class="onebox" target="_blank" rel="nofollow noopener">http://msdn.microsoft.com/en-us/library/ff650691.aspx#scalenethowto13_topic6</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/net-memory-leaks/374375/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/net-memory-leaks/374375/6</link>
        <pubDate>Fri, 24 Dec 2010 20:13:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-374375-6</guid>
        <source url="https://forum.moparisthebest.com/t/net-memory-leaks/374375.rss">.NET - Memory Leaks</source>
      </item>
      <item>
        <title>.NET - Memory Leaks</title>
        <dc:creator><![CDATA[@silabsoft RuneAgent]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silabsoft">@silabsoft</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="4" data-topic="374375">
<div class="title">
<div class="quote-controls"></div>
 _s:</div>
<blockquote>
<p>yep more proof the clr is a load of poo</p>
</blockquote>
</aside>
<p><img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/net-memory-leaks/374375/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/net-memory-leaks/374375/5</link>
        <pubDate>Fri, 24 Dec 2010 19:51:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-374375-5</guid>
        <source url="https://forum.moparisthebest.com/t/net-memory-leaks/374375.rss">.NET - Memory Leaks</source>
      </item>
      <item>
        <title>.NET - Memory Leaks</title>
        <dc:creator><![CDATA[@_s11 s1gma]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_s11">@_s11</a> wrote:</p>
          <blockquote>
              <p>yep more proof the clr is a load of poo</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/net-memory-leaks/374375/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/net-memory-leaks/374375/4</link>
        <pubDate>Thu, 23 Dec 2010 15:37:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-374375-4</guid>
        <source url="https://forum.moparisthebest.com/t/net-memory-leaks/374375.rss">.NET - Memory Leaks</source>
      </item>
      <item>
        <title>.NET - Memory Leaks</title>
        <dc:creator><![CDATA[@J_a_v_a_a J a v a a]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/j_a_v_a_a">@J_a_v_a_a</a> wrote:</p>
          <blockquote>
              <p>The gc is just a recommendation to the garbage collector if I’m right? It doesn’t actually invoke it?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/net-memory-leaks/374375/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/net-memory-leaks/374375/3</link>
        <pubDate>Tue, 21 Dec 2010 23:15:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-374375-3</guid>
        <source url="https://forum.moparisthebest.com/t/net-memory-leaks/374375.rss">.NET - Memory Leaks</source>
      </item>
      <item>
        <title>.NET - Memory Leaks</title>
        <dc:creator><![CDATA[@JaydenD12 JaydenD12]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jaydend12">@JaydenD12</a> wrote:</p>
          <blockquote>
              <p>I wonder who that friend was <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/net-memory-leaks/374375/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/net-memory-leaks/374375/2</link>
        <pubDate>Tue, 21 Dec 2010 23:11:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-374375-2</guid>
        <source url="https://forum.moparisthebest.com/t/net-memory-leaks/374375.rss">.NET - Memory Leaks</source>
      </item>
      <item>
        <title>.NET - Memory Leaks</title>
        <dc:creator><![CDATA[@Lin Lin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lin">@Lin</a> wrote:</p>
          <blockquote>
              <p>Well, I was working on something with a friend last night and after testing some stuff (It was a server and after connecting 1000 bot players, I disconnected them all), he reported the server’s memory usage to still be very high (This is because the buffer sizes for the players are 100K. I do not update players in parts right now because I wanted to get original player updating out of the way. Please do not point out that is bad in this topic because that isn’t what it’s about, and I already know it is).</p>
<p>When this problem occurred I thought it was because the threading was still keeping the players alive or something similar. So, I killed off the threads when their player count hit 0 (The way my server works is there is a thread for every X players that processes everything except updating) hoping that would resolve the issue. It didn’t. My friend had found an article featuring Red Gate’s Memory Profiler.</p>
<p>I gave that program a shot and it turned out, even though the players were set to null and not attempted to be used once, their i/o buffers were still existent and for some reason the GC decided to keep them that way (I’m guessing something involving the player updating had taken a role). So I guess the lesson to be learned here is even with the Garbage Collector aiding you, things may still take place even you think they didn’t. It also seems setting an object to null doesn’t always set that object’s objects to null, unless this just happened to be a special case.</p>
<p>~Lin</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/net-memory-leaks/374375/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/net-memory-leaks/374375/1</link>
        <pubDate>Tue, 21 Dec 2010 23:10:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-374375-1</guid>
        <source url="https://forum.moparisthebest.com/t/net-memory-leaks/374375.rss">.NET - Memory Leaks</source>
      </item>
  </channel>
</rss>
