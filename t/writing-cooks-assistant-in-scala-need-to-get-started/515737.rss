<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Writing cooks assistant in scala :: need to get started</title>
    <link>https://forum.moparisthebest.com/t/writing-cooks-assistant-in-scala-need-to-get-started/515737</link>
    <description>Having trouble figuring out how to write cooks assistant quest in scala im trying to convert what i have into scala...  I dont seem to understand the quest stage part... If i have item milk, flour, or egg and how do u give reward?



scala[code]package org.moparscape.msc.gs.npchandler
import org.moparscape.msc.gs.quest.Quest /// would you import the quest?? 
import org.moparscape.msc.gs.model.dialog.NpcDialog
  

class Cook extends NpcDialog {

        override def init {
                this + option1
                this + option2
                this + option3
		this + option4
       }

        override def begin {
                this &gt; &quot;What am i to do?&quot;; breath
		player.quests.get(CooksAssistant.id).asInstanceOf[CooksAssistant].CookDialog(this)
                end

       }

        lazy val option1 = new NpcDialog(&quot;What&#39;s wrong?&quot;) {
		
		  override def begin {
                        breath
                        this &gt; &quot;Ooh dear i&#39;m in a terrible mess&quot;; breath
                        this &gt; &quot;It&#39;s the duke&#39;s birthday today&quot;; breath
                        this &gt; &quot;I&#39;m meant to be making him a big cake for this evening&quot;; breath
			this &gt; &quot;Unfortunately, i&#39;ve forgotten to buy some of the ingredients&quot;; breath
			this &gt; &quot;I&#39;ll never get them in time now&quot;; breath
			this &gt; &quot;I don&#39;t suppose you could help me?&quot;; breath
                        end
                       
			}

			 lazy val option1 = new GenericEnd(&quot;Yes, I&#39;ll help you&quot;, npc, player) {

				 override def begin {	
					breath
					this &gt; &quot;Oh thank you, thank you&quot;; breath
					this &gt; &quot;I need milk, eggs, and flour&quot;; breath
					this &gt; &quot;Id be very grateful if you can get them to me&quot;; breath
					player.quests.set(CooksAssistant.id, 1)
					end

			}
			 
			 lazy val option2 = new GenericEnd(&quot;No, I don&#39;t feel like it. Maybe later&quot;, npc, player) {

				 override def begin {
					breath
					this &gt; &quot;Ok, suit yourself&quot;; breath
					end

	 }

          lazy val option2 = new GenericEnd(&quot;Well you could give me all your money&quot;) {
		
		  override def begin {
                        breath
                        this &gt; &quot;Haha very funny&quot;; breath
                        end

	}

          lazy val option3 = new NpcDialog(&quot;You don&#39;t look very happy&quot;) {
		
		  override def begin {
                        breath
                        this &gt; &quot;No i&#39;m not&quot;; breath
			this &gt; &quot;Ooh dear i&#39;m in a terrible mess&quot;; breath
                        this &gt; &quot;It&#39;s the duke&#39;s birthday today&quot;; breath
                        this &gt; &quot;I&#39;m meant to be making him a big cake for this evening&quot;; breath
			this &gt; &quot;Unfortunately, i&#39;ve forgotten to buy some of the ingredients&quot;; breath
			this &gt; &quot;I&#39;ll never get them in time now&quot;; breath
			this &gt; &quot;I don&#39;t suppose you could help me?&quot;; breath
                        end
			
			}

			 lazy val option1 = new GenericEnd(&quot;Yes, I&#39;ll help you&quot;, npc, player) {

				 override def begin {	
					breath
					this &gt; &quot;Oh thank you, thank you&quot;; breath
					this &gt; &quot;I need milk, eggs, and flour&quot;; breath
					this &gt; &quot;Id be very grateful if you can get them to me&quot;; breath
					player.quests.set(CooksAssistant.id, 1)
					end

			}
			 
			 lazy val option2 = new GenericEnd(&quot;No, I don&#39;t feel like it. Maybe later&quot;, npc, player) {

				 override def begin {
					breath
					this &gt; &quot;Ok, suit yourself&quot;; breath
					end

	 }

          lazy val option4 = new GenericEnd(&quot;Nice hat&quot;) {
		
		  override def begin {
                        breath
                        this &gt; &quot;Err thank you - it&#39;s a pretty ordinary cooks hat really&quot;; breath
                        end

	 }

          if (qstage == 1) {
		
		   override def begin {
                        breath
			this &gt; &quot;How are you getting on with finding the ingredients?&quot;; breath
                        end

		        }

			 override def begin {
                              if (player.getInventory.remove(19, 1) {
                              this &gt; &quot;I have an egg&quot;; breath 
                              }
                              if (player.getInventory.remove(136, 1) {
			      this &gt; &quot;I have some flour&quot;; breath
                              }
			      if (player.getInventory.remove(22, 1) {
			      this &gt; &quot;I have some milk&quot;; breath
                              }
			      player.getActionSender.sendInventory; breath
			      end
                                   
                        } else {         
	
                        this + new GenericEnd(&quot;I&#39;m afraid i don&#39;t have any yet!&quot;, npc, player) {

                       		 override def begin {
				       breath
				       this &gt; &quot;Oh dear oh dear!&quot;; breath
				       this &gt; &quot;I need flour, eggs, and milk&quot;; breath
				       this &gt; &quot;Without them i am doomed!&quot;; breath
                       		       end
        }[/code] 


This is the information i have for the quest is as follows: 


		NpcTalk(&quot;What am i to do?&quot;);
		int choice = showMenu(new String[] {&quot;What&#39;s wrong?&quot;, &quot;Well you could give me all your money&quot;, &quot;You don&#39;t look very happy&quot;, &quot;Nice hat&quot;});
		if(choice == 0) {
			whatswrong();
		} else if(choice == 1) {
			givemoney();
		} else if(choice == 2) {
			nothappy();
		} else if(choice == 3) {
			nicehat();		
		}
	}	
		private void whatswrong() {
		NpcTalk(&quot;Ooh dear i&#39;m in a terrible mess&quot;);
		NpcTalk(&quot;It&#39;s the duke&#39;s birthday today&quot;);
		NpcTalk(&quot;I&#39;m meant to be making him a big cake for this evening&quot;);
		NpcTalk(&quot;Unfortunately, i&#39;ve forgotten to buy some of the ingredients&quot;);
		NpcTalk(&quot;I&#39;ll never get them in time now&quot;);
		NpcTalk(&quot;I don&#39;t suppose you could help me?&quot;);
		int choice = showMenu(new String[] {&quot;Yes, I&#39;ll help you&quot;, &quot;No, I don&#39;t feel like it. Maybe later&quot;});
		if(choice == 0) {
			yesihelp();
		} else if(choice == 1) {
			maybelater();
		}
	}	
		private void givemoney() {
		NpcTalk(&quot;Haha very funny&quot;);
		}
	}	
		private void nothappy() {
		NpcTalk(&quot;No i&#39;m not&quot;);
		NpcTalk(&quot;Ooh dear i&#39;m in a terrible mess&quot;);
		NpcTalk(&quot;It&#39;s the duke&#39;s birthday today&quot;);
		NpcTalk(&quot;I&#39;m meant to be making him a big cake for this evening&quot;);
		NpcTalk(&quot;Unfortunately, i&#39;ve forgotten to buy some of the ingredients&quot;);
		NpcTalk(&quot;I&#39;ll never get them in time now&quot;);
		NpcTalk(&quot;I don&#39;t suppose you could help me?&quot;);
		int choice = showMenu(new String[] {&quot;Yes, I&#39;ll help you&quot;, &quot;No, I don&#39;t feel like it. Maybe later&quot;});
		if(choice == 0) {
			yesihelp();
		} else if(choice == 1) {
			maybelater();
		}
	}	
		private void yesihelp() {
		NpcTalk(&quot;Oh thank you, thank you&quot;);
		NpcTalk(&quot;I need milk, eggs, and flour&quot;);
		NpcTalk(&quot;Id be very grateful if you can get them to me&quot;);
		}
	}		
		private void maybelater() {
		NpcTalk(&quot;Ok, suit yourself&quot;);
		}
	}		
		private void nicehat() {
		NpcTalk(&quot;Err thank you - it&#39;s a pretty ordinary cooks hat really&quot;);
		}
	}	

----------------------------------------------
Retalking to cook:

		NpcTalk(&quot;How are you getting on with finding the ingredients?&quot;);
		PlayerTalk(&quot;I&#39;m afraid i don&#39;t have any yet!&quot;);
		NpcTalk(&quot;Oh dear oh dear!&quot;);
		NpcTalk(&quot;I need flour, eggs, and milk&quot;);
		NpcTalk(&quot;Without them i am doomed!&quot;);
		
----------------------------------------------
Talking to cook with some ingredients:

		NpcTalk(&quot;How are you getting on with finding the ingredients?&quot;);
		PlayerTalk(&quot;I have found some of the things you asked for:&quot;);
		
if milk:	PlayerTalk(&quot;I have some milk&quot;);
if egg:		PlayerTalk(&quot;I have an egg&quot;);
If flour:	PlayerTalk(&quot;I have some flour&quot;);

---------------------------------------------------
If you need ingredients:

		NpcTalk(&quot;Great, but can you get the other ingredients as well?&quot;);
		NpcTalk(&quot;You still need to find&quot;);
if milk:	NpcTalk(&quot;Some milk&quot;);
if egg:		NpcTalk(&quot;An egg&quot;);
if flour:	NpcTalk(&quot;Some flour&quot;)
		PlayerTalk(&quot;Ok I&#39;ll try to find that for you&quot;);
---------------------------------------------------
talking to cook with all the ingredients:

		NpcTalk(&quot;How are you getting on with finding the ingredients?&quot;);
		playerTalk(&quot;I now have everything you need to for your cake&quot;);
		playerTalk(&quot;Milk, flour, and an egg!&quot;);
		NpcTalk(&quot;I am saved thankyou!&quot;);
		sendmessage(&quot;You give some milk, an egg, and some flour to the cook&quot;);
		sendmessage(&quot;Well done. You have completed the cook&#39;s assistant quest&quot;);
		sendmessage(&quot;You have gained 1 quest point!&quot;);
		
---------------------------------------------------
Retalking to cook: after completing quest:

		NpcTalk(&quot;Hello friend, how is the adventuring going?&quot;);
		int choice = showMenu(new String[] {&quot;I am getting strong and mighty&quot;, &quot;I keep on dying&quot;, &quot;Nice hat&quot;, &quot;Can I use your range?&quot;});
		if(choice == 0) {
			strong();
		} else if(choice == 1) {
			dying();
		} else if(choice == 1) {
			nicehat();
		} else if(choice == 1) {
			userange();
		}
	}	
		private void strong() {
		NpcTalk(&quot;Glad to hear it&quot;);
		}
	}		
		private void dying() {
		NpcTalk(&quot;Ah well at least you keep coming back to life!&quot;);
		}
	}		
		private void nicehat() {
		NpcTalk(&quot;Err thank you - it&#39;s a pretty ordinary cooks hat really&quot;);
		}
	}	
		private void userange() {
		NpcTalk(&quot;Go head&quot;);
		NpcTalk(&quot;It&#39;s a very good range&quot;);
		NpcTalk(&quot;It&#39;s easier to use then most other ranges&quot;);
		}
	}</description>
    
    <lastBuildDate>Sat, 13 Apr 2013 15:54:10 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/writing-cooks-assistant-in-scala-need-to-get-started/515737.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Writing cooks assistant in scala :: need to get started</title>
        <dc:creator><![CDATA[@CodeForFame CodeForFame]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/codeforfame">@CodeForFame</a> wrote:</p>
          <blockquote>
              <p>[quote=“xrune, post:7, topic:515737”]This is what i got some far… dunno if its any good but been trying to fix it… i tried looking at the tanner.scala for a reference…</p>
<p>[code]package org.moparscape.msc.gs.npchandler<br>
import org.moparscape.msc.gs.quest.Quest<br>
import org.moparscape.msc.gs.model.InvItem<br>
import org.moparscape.msc.gs.model.dialog.NpcDialog</p>
<p>class Cook extends NpcDialog {</p>
<pre><code>    override def init {
            this + option1
            this + option2
            this + option3
            this + option4
   }

    override def begin {
            this &gt; "What am i to do?"; breath
            player.quests.get(CooksAssistant.id).asInstanceOf[CooksAssistant].CookDialog(this)
            end

   }

    lazy val option1 = new NpcDialog("What's wrong?") {
           
              override def begin {
                    breath
                    this &gt; "Ooh dear i'm in a terrible mess"; breath
                    this &gt; "It's the duke's birthday today"; breath
                    this &gt; "I'm meant to be making him a big cake for this evening"; breath
                    this &gt; "Unfortunately, i've forgotten to buy some of the ingredients"; breath
                    this &gt; "I'll never get them in time now"; breath
                    this &gt; "I don't suppose you could help me?"; breath
                    end
                   
                    }

                     lazy val option1 = new GenericEnd("Yes, I'll help you", npc, player) {

                             override def begin {       
                                    breath
                                    this &gt; "Oh thank you, thank you"; breath
                                    this &gt; "I need milk, eggs, and flour"; breath
                                    this &gt; "Id be very grateful if you can get them to me"; breath
                                    player.quests.set(CooksAssistant.id, 1)
                                    end

                    }
                     
                     lazy val option2 = new GenericEnd("No, I don't feel like it. Maybe later", npc, player) {

                             override def begin {
                                    breath
                                    this &gt; "Ok, suit yourself"; breath
                                    end

    }

     lazy val option2 = new GenericEnd("Well you could give me all your money") {
           
              override def begin {
                    breath
                    this &gt; "Haha very funny"; breath
                    end

    }

      lazy val option3 = new NpcDialog("You don't look very happy") {
           
              override def begin {
                    breath
                    this &gt; "No i'm not"; breath
                    this &gt; "Ooh dear i'm in a terrible mess"; breath
                    this &gt; "It's the duke's birthday today"; breath
                    this &gt; "I'm meant to be making him a big cake for this evening"; breath
                    this &gt; "Unfortunately, i've forgotten to buy some of the ingredients"; breath
                    this &gt; "I'll never get them in time now"; breath
                    this &gt; "I don't suppose you could help me?"; breath
                    end
                   
                    }

                     lazy val option1 = new GenericEnd("Yes, I'll help you", npc, player) {

                             override def begin {       
                                    breath
                                    this &gt; "Oh thank you, thank you"; breath
                                    this &gt; "I need milk, eggs, and flour"; breath
                                    this &gt; "Id be very grateful if you can get them to me"; breath
                                    player.quests.set(CooksAssistant.id, 1)
                                    end

                    }
                     
                     lazy val option2 = new GenericEnd("No, I don't feel like it. Maybe later", npc, player) {

                             override def begin {
                                    breath
                                    this &gt; "Ok, suit yourself"; breath
                                    end

     }

      lazy val option4 = new GenericEnd("Nice hat") {
           
              override def begin {
                    breath
                    this &gt; "Err thank you - it's a pretty ordinary cooks hat really"; breath
                    end

     }

      if (qstage == 1) {
           
               override def begin {
                    breath
                    this &gt; "How are you getting on with finding the ingredients?"; breath
                    end

                    }

                    override def begin {

	        while (hasMaterials == 0) {
		player.getInventory(136, 0)
		player.getInventory(19, 0)
		player.getInventory(22, 0)
		this &lt; "I'm afraid i don't have any yet!"; breath
		this &gt; "Oh dear oh dear!"; breath
                    this &gt; "I need flour, eggs, and milk"; breath
                    this &gt; "Without them i am doomed!"; breath
                    end
		}

		super.fail
		}

		if (hasMaterials == 1) {
		player.getInventory(136, 1)
		player.getInventory(19, 0)
		player.getInventory(22, 0)
		this &lt; "I have found some of the things you asked for:"; breath
		this &lt; "I have some flour"; breath
		this &gt; "Great, but can you get the other ingredients as well?"; breath
		this &gt; "You still need to find:"; breath
                    if (player.getInventory(136, 0) 
                    this &gt; "Some flour"; breath
                    else if (player.getInventory(19, 0) 
                    this &gt; "An egg"; breath
                    else if (player.getInventory(22, 0) 
                    this &gt; "Some milk"; breath
                    this &lt; "Ok I'll try to find that for you"; breath
                    end
		}
		
		super.begin
		}
		
		if (hasMaterials == 2) {
		player.getInventory(136, 0)
		player.getInventory(19, 1)
		player.getInventory(22, 0)
		this &lt; "I have found some of the things you asked for:"; breath
		this &lt; "I have an egg"; breath
		this &gt; "Great, but can you get the other ingredients as well?"; breath
		this &gt; "You still need to find:"; breath
                    if (player.getInventory(136, 0) 
                    this &gt; "Some flour"; breath
                    else if (player.getInventory(19, 0) 
                    this &gt; "An egg"; breath
                    else if (player.getInventory(22, 0) 
                    this &gt; "Some milk"; breath
                    this &lt; "Ok I'll try to find that for you"; breath
                    end
		}
	
		super.begin
		}
		
		if (hasMaterials == 3) {
		player.getInventory(136, 0)
		player.getInventory(19, 0)
		player.getInventory(22, 1)
		this &lt; "I have found some of the things you asked for:"; breath
		this &lt; "I have some milk"; breath
		this &gt; "Great, but can you get the other ingredients as well?"; breath
		this &gt; "You still need to find:"; breath
                    if (player.getInventory(136, 0) 
                    this &gt; "Some flour"; breath
                    else if (player.getInventory(19, 0) 
                    this &gt; "An egg"; breath
                    else if (player.getInventory(22, 0) 
                    this &gt; "Some milk"; breath
                    this &lt; "Ok I'll try to find that for you"; breath
                    end
		}
					
		super.begin
		}

		if (hasMaterials == 4) {
		player.getInventory(136, 0)
		player.getInventory(19, 1)
		player.getInventory(22, 1)
		this &lt; "I have found some of the things you asked for:"; breath
		this &lt; "I have some milk"; breath
		this &lt; "I have an egg"; breath
		this &gt; "Great, but can you get the other ingredients as well?"; breath
		this &gt; "You still need to find:"; breath
                    if (player.getInventory(136, 0) 
                    this &gt; "Some flour"; breath
                    else if (player.getInventory(19, 0) 
                    this &gt; "An egg"; breath
                    else if (player.getInventory(22, 0) 
                    this &gt; "Some milk"; breath
                    this &lt; "Ok I'll try to find that for you"; breath
                    end
		}
		
		super.begin
		}

		if (hasMaterials == 5) {
		player.getInventory(136, 1)
		player.getInventory(19, 0)
		player.getInventory(22, 1)
		this &lt; "I have found some of the things you asked for:"; breath
		this &lt; "I have some milk"; breath
		this &lt; "I have some flour"; breath
		this &gt; "Great, but can you get the other ingredients as well?"; breath
		this &gt; "You still need to find:"; breath
                    if (player.getInventory(136, 0) 
                    this &gt; "Some flour"; breath
                    else if (player.getInventory(19, 0) 
                    this &gt; "An egg"; breath
                    else if (player.getInventory(22, 0) 
                    this &gt; "Some milk"; breath
                    this &lt; "Ok I'll try to find that for you"; breath
                    end
		}
	
		super.begin
		}

		if (hasMaterials == 6) {
		player.getInventory(136, 1)
		player.getInventory(19, 1)
		player.getInventory(22, 0)
		this &lt; "I have found some of the things you asked for:"; breath
		this &lt; "I have an egg"; breath
		this &lt; "I have some flour"; breath
		this &gt; "Great, but can you get the other ingredients as well?"; breath
		this &gt; "You still need to find:"; breath
                    if (player.getInventory(136, 0) 
                    this &gt; "Some flour"; breath
                    else if (player.getInventory(19, 0) 
                    this &gt; "An egg"; breath
                    else if (player.getInventory(22, 0) 
                    this &gt; "Some milk"; breath
                    this &lt; "Ok I'll try to find that for you"; breath
                    end
		}
		
		super.begin
		}


		if (hasMaterials == 7) {
		player.getInventory(136, 1)
		player.getInventory(19, 1)
		player.getInventory(22, 1)
		this &lt; "I now have everything you need to for your cake"; breath
		breath
                    this &lt; "Milk, flour, and an egg!"; breath
                    this &gt; "I am saved thankyou!"; breath
                    this &gt;&gt; "You give some milk, an egg, and some flour to the cook"; breath
                    if (player.getInventory.remove(19, 1)
                        &amp;&amp; player.getInventory.remove(136, 1)
                        &amp;&amp; player.getInventory.remove(22, 1)) {
                    player.getActionSender.sendInventory; breath
                    this &gt;&gt; "Well done. You have completed the cook's assistant quest"; breath
                    this &gt;&gt; "@gre@You have gained 1 quest point!"; breath
                    player.quests.set(CooksAssistant.id, 2)
                    player.incExp(7, 300, true);
                    end
		}
		
		} else if (hasMaterials == -1) {
		player.getInventory(136, -1)
		player.getInventory(19, -1)
		player.getInventory(22, -1)
		this &lt; "I'm afraid i don't have any yet!"; breath
		this &gt; "Oh dear oh dear!"; breath
                    this &gt; "I need flour, eggs, and milk"; breath
                    this &gt; "Without them i am doomed!"; breath
                    end
		}

		super.fail
		}

		private def hasMaterials = {
		if (player.getInventory.countId(19) &lt; 1) 1
		else if (player.getInventory.countId(136)&lt; 1) 1
		else if (player.getInventory.countId(22) &lt; 1) 1
		else if (player.getInventory.countId(19) &lt; 1) -1
		else if (player.getInventory.countId(136) &lt; 1) -1
		else if (player.getInventory.countId(22) &lt; 1) -1
		else 0
		}
		}
                 
              }

}

      if (qstage == 2) {

	  	override def begin {
             	breath
             	this &gt; "Hello friend, how is the adventuring going?"; breath
             	end

             	}
		

    		lazy val option1 = new GenericEnd("I am getting strong and mighty") {
           
           	        override def begin {
                    breath
                    this &gt; "Glad to hear it"; breath
                    end
                   
                    }  
		
		lazy val option2 = new GenericEnd("I keep on dying") {
           
           	        override def begin {
                    breath
                    this &gt; "Ah well at least you keep coming back to life!"; breath
                    end
                   
                    }

		lazy val option3 = new GenericEnd("Nice hat") {
           
           	        override def begin {
                    breath
                    this &gt; "Err thank you - it's a pretty ordinary cooks hat really"; breath
                    end
                   
                    }
                        
		lazy val option4 = new GenericEnd("Can I use your range?") {
           
           	        override def begin {
                    breath
                    this &gt; "Go head"; breath
		this &gt; "It's a very good range"; breath
		this &gt; "It's easier to use then most other ranges"; breath
                    end
                   
                    }

	}	
}[/code]   
                       [/quote]You can't just throw if statements anywhere and expect it to work properly... Also, you really haven't listened to what I've said.</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/writing-cooks-assistant-in-scala-need-to-get-started/515737/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/writing-cooks-assistant-in-scala-need-to-get-started/515737/8</link>
        <pubDate>Sat, 13 Apr 2013 15:54:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-515737-8</guid>
        <source url="https://forum.moparisthebest.com/t/writing-cooks-assistant-in-scala-need-to-get-started/515737.rss">Writing cooks assistant in scala :: need to get started</source>
      </item>
      <item>
        <title>Writing cooks assistant in scala :: need to get started</title>
        <dc:creator><![CDATA[@xrune xrune]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xrune">@xrune</a> wrote:</p>
          <blockquote>
              <p>This is what i got some far… dunno if its any good but been trying to fix it… i tried looking at the tanner.scala for a reference…</p>
<p>[code]package org.moparscape.msc.gs.npchandler<br>
import org.moparscape.msc.gs.quest.Quest<br>
import org.moparscape.msc.gs.model.InvItem<br>
import org.moparscape.msc.gs.model.dialog.NpcDialog</p>
<p>class Cook extends NpcDialog {</p>
<pre><code>    override def init {
            this + option1
            this + option2
            this + option3
            this + option4
   }

    override def begin {
            this &gt; "What am i to do?"; breath
            player.quests.get(CooksAssistant.id).asInstanceOf[CooksAssistant].CookDialog(this)
            end

   }

    lazy val option1 = new NpcDialog("What's wrong?") {
           
              override def begin {
                    breath
                    this &gt; "Ooh dear i'm in a terrible mess"; breath
                    this &gt; "It's the duke's birthday today"; breath
                    this &gt; "I'm meant to be making him a big cake for this evening"; breath
                    this &gt; "Unfortunately, i've forgotten to buy some of the ingredients"; breath
                    this &gt; "I'll never get them in time now"; breath
                    this &gt; "I don't suppose you could help me?"; breath
                    end
                   
                    }

                     lazy val option1 = new GenericEnd("Yes, I'll help you", npc, player) {

                             override def begin {       
                                    breath
                                    this &gt; "Oh thank you, thank you"; breath
                                    this &gt; "I need milk, eggs, and flour"; breath
                                    this &gt; "Id be very grateful if you can get them to me"; breath
                                    player.quests.set(CooksAssistant.id, 1)
                                    end

                    }
                     
                     lazy val option2 = new GenericEnd("No, I don't feel like it. Maybe later", npc, player) {

                             override def begin {
                                    breath
                                    this &gt; "Ok, suit yourself"; breath
                                    end

    }

     lazy val option2 = new GenericEnd("Well you could give me all your money") {
           
              override def begin {
                    breath
                    this &gt; "Haha very funny"; breath
                    end

    }

      lazy val option3 = new NpcDialog("You don't look very happy") {
           
              override def begin {
                    breath
                    this &gt; "No i'm not"; breath
                    this &gt; "Ooh dear i'm in a terrible mess"; breath
                    this &gt; "It's the duke's birthday today"; breath
                    this &gt; "I'm meant to be making him a big cake for this evening"; breath
                    this &gt; "Unfortunately, i've forgotten to buy some of the ingredients"; breath
                    this &gt; "I'll never get them in time now"; breath
                    this &gt; "I don't suppose you could help me?"; breath
                    end
                   
                    }

                     lazy val option1 = new GenericEnd("Yes, I'll help you", npc, player) {

                             override def begin {       
                                    breath
                                    this &gt; "Oh thank you, thank you"; breath
                                    this &gt; "I need milk, eggs, and flour"; breath
                                    this &gt; "Id be very grateful if you can get them to me"; breath
                                    player.quests.set(CooksAssistant.id, 1)
                                    end

                    }
                     
                     lazy val option2 = new GenericEnd("No, I don't feel like it. Maybe later", npc, player) {

                             override def begin {
                                    breath
                                    this &gt; "Ok, suit yourself"; breath
                                    end

     }

      lazy val option4 = new GenericEnd("Nice hat") {
           
              override def begin {
                    breath
                    this &gt; "Err thank you - it's a pretty ordinary cooks hat really"; breath
                    end

     }

      if (qstage == 1) {
           
               override def begin {
                    breath
                    this &gt; "How are you getting on with finding the ingredients?"; breath
                    end

                    }

                    override def begin {

	        while (hasMaterials == 0) {
		player.getInventory(136, 0)
		player.getInventory(19, 0)
		player.getInventory(22, 0)
		this &lt; "I'm afraid i don't have any yet!"; breath
		this &gt; "Oh dear oh dear!"; breath
                    this &gt; "I need flour, eggs, and milk"; breath
                    this &gt; "Without them i am doomed!"; breath
                    end
		}

		super.fail
		}

		if (hasMaterials == 1) {
		player.getInventory(136, 1)
		player.getInventory(19, 0)
		player.getInventory(22, 0)
		this &lt; "I have found some of the things you asked for:"; breath
		this &lt; "I have some flour"; breath
		this &gt; "Great, but can you get the other ingredients as well?"; breath
		this &gt; "You still need to find:"; breath
                    if (player.getInventory(136, 0) 
                    this &gt; "Some flour"; breath
                    else if (player.getInventory(19, 0) 
                    this &gt; "An egg"; breath
                    else if (player.getInventory(22, 0) 
                    this &gt; "Some milk"; breath
                    this &lt; "Ok I'll try to find that for you"; breath
                    end
		}
		
		super.begin
		}
		
		if (hasMaterials == 2) {
		player.getInventory(136, 0)
		player.getInventory(19, 1)
		player.getInventory(22, 0)
		this &lt; "I have found some of the things you asked for:"; breath
		this &lt; "I have an egg"; breath
		this &gt; "Great, but can you get the other ingredients as well?"; breath
		this &gt; "You still need to find:"; breath
                    if (player.getInventory(136, 0) 
                    this &gt; "Some flour"; breath
                    else if (player.getInventory(19, 0) 
                    this &gt; "An egg"; breath
                    else if (player.getInventory(22, 0) 
                    this &gt; "Some milk"; breath
                    this &lt; "Ok I'll try to find that for you"; breath
                    end
		}
	
		super.begin
		}
		
		if (hasMaterials == 3) {
		player.getInventory(136, 0)
		player.getInventory(19, 0)
		player.getInventory(22, 1)
		this &lt; "I have found some of the things you asked for:"; breath
		this &lt; "I have some milk"; breath
		this &gt; "Great, but can you get the other ingredients as well?"; breath
		this &gt; "You still need to find:"; breath
                    if (player.getInventory(136, 0) 
                    this &gt; "Some flour"; breath
                    else if (player.getInventory(19, 0) 
                    this &gt; "An egg"; breath
                    else if (player.getInventory(22, 0) 
                    this &gt; "Some milk"; breath
                    this &lt; "Ok I'll try to find that for you"; breath
                    end
		}
					
		super.begin
		}

		if (hasMaterials == 4) {
		player.getInventory(136, 0)
		player.getInventory(19, 1)
		player.getInventory(22, 1)
		this &lt; "I have found some of the things you asked for:"; breath
		this &lt; "I have some milk"; breath
		this &lt; "I have an egg"; breath
		this &gt; "Great, but can you get the other ingredients as well?"; breath
		this &gt; "You still need to find:"; breath
                    if (player.getInventory(136, 0) 
                    this &gt; "Some flour"; breath
                    else if (player.getInventory(19, 0) 
                    this &gt; "An egg"; breath
                    else if (player.getInventory(22, 0) 
                    this &gt; "Some milk"; breath
                    this &lt; "Ok I'll try to find that for you"; breath
                    end
		}
		
		super.begin
		}

		if (hasMaterials == 5) {
		player.getInventory(136, 1)
		player.getInventory(19, 0)
		player.getInventory(22, 1)
		this &lt; "I have found some of the things you asked for:"; breath
		this &lt; "I have some milk"; breath
		this &lt; "I have some flour"; breath
		this &gt; "Great, but can you get the other ingredients as well?"; breath
		this &gt; "You still need to find:"; breath
                    if (player.getInventory(136, 0) 
                    this &gt; "Some flour"; breath
                    else if (player.getInventory(19, 0) 
                    this &gt; "An egg"; breath
                    else if (player.getInventory(22, 0) 
                    this &gt; "Some milk"; breath
                    this &lt; "Ok I'll try to find that for you"; breath
                    end
		}
	
		super.begin
		}

		if (hasMaterials == 6) {
		player.getInventory(136, 1)
		player.getInventory(19, 1)
		player.getInventory(22, 0)
		this &lt; "I have found some of the things you asked for:"; breath
		this &lt; "I have an egg"; breath
		this &lt; "I have some flour"; breath
		this &gt; "Great, but can you get the other ingredients as well?"; breath
		this &gt; "You still need to find:"; breath
                    if (player.getInventory(136, 0) 
                    this &gt; "Some flour"; breath
                    else if (player.getInventory(19, 0) 
                    this &gt; "An egg"; breath
                    else if (player.getInventory(22, 0) 
                    this &gt; "Some milk"; breath
                    this &lt; "Ok I'll try to find that for you"; breath
                    end
		}
		
		super.begin
		}


		if (hasMaterials == 7) {
		player.getInventory(136, 1)
		player.getInventory(19, 1)
		player.getInventory(22, 1)
		this &lt; "I now have everything you need to for your cake"; breath
		breath
                    this &lt; "Milk, flour, and an egg!"; breath
                    this &gt; "I am saved thankyou!"; breath
                    this &gt;&gt; "You give some milk, an egg, and some flour to the cook"; breath
                    if (player.getInventory.remove(19, 1)
                        &amp;&amp; player.getInventory.remove(136, 1)
                        &amp;&amp; player.getInventory.remove(22, 1)) {
                    player.getActionSender.sendInventory; breath
                    this &gt;&gt; "Well done. You have completed the cook's assistant quest"; breath
                    this &gt;&gt; "@gre@You have gained 1 quest point!"; breath
                    player.quests.set(CooksAssistant.id, 2)
                    player.incExp(7, 300, true);
                    end
		}
		
		} else if (hasMaterials == -1) {
		player.getInventory(136, -1)
		player.getInventory(19, -1)
		player.getInventory(22, -1)
		this &lt; "I'm afraid i don't have any yet!"; breath
		this &gt; "Oh dear oh dear!"; breath
                    this &gt; "I need flour, eggs, and milk"; breath
                    this &gt; "Without them i am doomed!"; breath
                    end
		}

		super.fail
		}

		private def hasMaterials = {
		if (player.getInventory.countId(19) &lt; 1) 1
		else if (player.getInventory.countId(136)&lt; 1) 1
		else if (player.getInventory.countId(22) &lt; 1) 1
		else if (player.getInventory.countId(19) &lt; 1) -1
		else if (player.getInventory.countId(136) &lt; 1) -1
		else if (player.getInventory.countId(22) &lt; 1) -1
		else 0
		}
		}
                 
              }

}

      if (qstage == 2) {

	  	override def begin {
             	breath
             	this &gt; "Hello friend, how is the adventuring going?"; breath
             	end

             	}
		

    		lazy val option1 = new GenericEnd("I am getting strong and mighty") {
           
           	        override def begin {
                    breath
                    this &gt; "Glad to hear it"; breath
                    end
                   
                    }  
		
		lazy val option2 = new GenericEnd("I keep on dying") {
           
           	        override def begin {
                    breath
                    this &gt; "Ah well at least you keep coming back to life!"; breath
                    end
                   
                    }

		lazy val option3 = new GenericEnd("Nice hat") {
           
           	        override def begin {
                    breath
                    this &gt; "Err thank you - it's a pretty ordinary cooks hat really"; breath
                    end
                   
                    }
                        
		lazy val option4 = new GenericEnd("Can I use your range?") {
           
           	        override def begin {
                    breath
                    this &gt; "Go head"; breath
		this &gt; "It's a very good range"; breath
		this &gt; "It's easier to use then most other ranges"; breath
                    end
                   
                    }

	}	
}[/code]</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/writing-cooks-assistant-in-scala-need-to-get-started/515737/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/writing-cooks-assistant-in-scala-need-to-get-started/515737/7</link>
        <pubDate>Sat, 13 Apr 2013 10:12:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-515737-7</guid>
        <source url="https://forum.moparisthebest.com/t/writing-cooks-assistant-in-scala-need-to-get-started/515737.rss">Writing cooks assistant in scala :: need to get started</source>
      </item>
      <item>
        <title>Writing cooks assistant in scala :: need to get started</title>
        <dc:creator><![CDATA[@CodeForFame CodeForFame]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/codeforfame">@CodeForFame</a> wrote:</p>
          <blockquote>
              <p>[quote=“xrune, post:5, topic:515737”][quote author=CodeForFame link=topic=633995.msg4281640#msg4281640 date=1365708746]</p>
<p>player.quests.get(CooksAssistant.id).stage</p>
<p>To send messages from NPCs to players you need to do:<br>
this &lt; “msg”<br>
instead of:<br>
this &gt; “msg”</p>
<p>To conditionally add dialogs, you need to override the init method.</p>
<p>Anyway, you’re driving me nuts with your complete lack of understanding of scope and basic language constructs that are identical to Java and pretty much every other language.<br>
[/quote]</p>
<p>Sorry man i just want to make one quest done in scala use it as a template and attempt others… ya i may be new to java/scala… but im just trying to understand, i appreciate your comments btw helping me out alot…  IF i could just see one quest done in scala i would be happy… i thought the quests were going to be done in scala for moparclassic, any idea why they never did them that way?[/quote]There is a lot of stuff that’s higher priority. Also, development is pretty slow ATM.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/writing-cooks-assistant-in-scala-need-to-get-started/515737/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/writing-cooks-assistant-in-scala-need-to-get-started/515737/6</link>
        <pubDate>Thu, 11 Apr 2013 21:32:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-515737-6</guid>
        <source url="https://forum.moparisthebest.com/t/writing-cooks-assistant-in-scala-need-to-get-started/515737.rss">Writing cooks assistant in scala :: need to get started</source>
      </item>
      <item>
        <title>Writing cooks assistant in scala :: need to get started</title>
        <dc:creator><![CDATA[@xrune xrune]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xrune">@xrune</a> wrote:</p>
          <blockquote>
              <p>[quote=“CodeForFame, post:4, topic:515737”]player.quests.get(CooksAssistant.id).stage</p>
<p>To send messages from NPCs to players you need to do:<br>
this &lt; “msg”<br>
instead of:<br>
this &gt; “msg”</p>
<p>To conditionally add dialogs, you need to override the init method.</p>
<p>Anyway, you’re driving me nuts with your complete lack of understanding of scope and basic language constructs that are identical to Java and pretty much every other language.[/quote]</p>
<p>Sorry man i just want to make one quest done in scala use it as a template and attempt others… ya i may be new to java/scala… but im just trying to understand, i appreciate your comments btw helping me out alot…  IF i could just see one quest done in scala i would be happy… i thought the quests were going to be done in scala for moparclassic, any idea why they never did them that way?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/writing-cooks-assistant-in-scala-need-to-get-started/515737/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/writing-cooks-assistant-in-scala-need-to-get-started/515737/5</link>
        <pubDate>Thu, 11 Apr 2013 20:04:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-515737-5</guid>
        <source url="https://forum.moparisthebest.com/t/writing-cooks-assistant-in-scala-need-to-get-started/515737.rss">Writing cooks assistant in scala :: need to get started</source>
      </item>
      <item>
        <title>Writing cooks assistant in scala :: need to get started</title>
        <dc:creator><![CDATA[@CodeForFame CodeForFame]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/codeforfame">@CodeForFame</a> wrote:</p>
          <blockquote>
              <p>[quote=“xrune, post:3, topic:515737”]  How would u write the last part? and initiate quest points and give reward?</p>
<p>scala[code]}</p>
<pre><code>      if (qstage == 1) {
           
               override def begin {
                    breath
                    this &gt; "How are you getting on with finding the ingredients?"; breath
                    end

                    }

                     override def begin {
                          player.informOfNpcMessage(new ChatMessage(npc, "I have found some of the things you asked for:", player))
                          if (player.getInventory(19, 1) {
                          this &gt; "I have an egg"; breath
                          }
                          if (player.getInventory(136, 1) {
                          this &gt; "I have some flour"; breath
                          }
                          if (player.getInventory(22, 1) {
                          this &gt; "I have some milk"; breath
                          }
                          this &gt; "Great, but can you get the other ingredients as well?"; breath
                          this &gt; "You still need to find:"; breath
                          if (player.getInventory(136, 0) {
                          this &gt; "Some flour"; breath
                          }
                          if (player.getInventory(19, 0) {
                           this &gt; "An egg"; breath
                          }
                          if (player.getInventory(22, 0) {
                           this &gt; "Some milk"; breath
                          }
                          player.informOfNpcMessage(new ChatMessage(npc, "Ok I'll try to find that for you", player))
                          end
                               

              }        
   
                 this + new GenericEnd("I'm afraid i don't have any yet!", npc, player) {

                         override def begin {
                                 breath
                                 this &gt; "Oh dear oh dear!"; breath
                                 this &gt; "I need flour, eggs, and milk"; breath
                                 this &gt; "Without them i am doomed!"; breath
                                 end
                  
              }

                 this + new GenericEnd("I now have everything you need to for your cake", npc, player) {

                              override def begin {
                                     breath
               player:            this &gt; "Milk, flour, and an egg!"; breath
                NPC:              this &gt; "I am saved thankyou!"; breath
                                     this &gt;&gt; "You give some milk, an egg, and some flour to the cook"; breath
                                      if (player.getInventory.remove(19, 1)
                                            &amp;&amp; player.getInventory.remove(136, 1)
                                            &amp;&amp; player.getInventory.remove(22, 1)) {
                                     player.getActionSender.sendInventory; breath 
                                     this &gt;&gt; "Well done. You have completed the cook's assistant quest"; breath
                                     this &gt;&gt; "@gre@You have gained 1 quest point!"; breath
                                     player.quests.set(CooksAssistant.id, 2) 
                                     AddExp(COOKING, 300);
                                     end

              }[/code]
</code></pre>
<p>[/quote]<br>
player.quests.get(CooksAssistant.id).stage</p>
<p>To send messages from NPCs to players you need to do:<br>
this &lt; “msg”<br>
instead of:<br>
this &gt; “msg”</p>
<p>To conditionally add dialogs, you need to override the init method.</p>
<p>Anyway, you’re driving me nuts with your complete lack of understanding of scope and basic language constructs that are identical to Java and pretty much every other language.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/writing-cooks-assistant-in-scala-need-to-get-started/515737/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/writing-cooks-assistant-in-scala-need-to-get-started/515737/4</link>
        <pubDate>Thu, 11 Apr 2013 19:32:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-515737-4</guid>
        <source url="https://forum.moparisthebest.com/t/writing-cooks-assistant-in-scala-need-to-get-started/515737.rss">Writing cooks assistant in scala :: need to get started</source>
      </item>
      <item>
        <title>Writing cooks assistant in scala :: need to get started</title>
        <dc:creator><![CDATA[@xrune xrune]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xrune">@xrune</a> wrote:</p>
          <blockquote>
              <p>How would u write the last part? and initiate quest points and give reward?</p>
<p>scala[code]}</p>
<pre><code>      if (qstage == 1) {
           
               override def begin {
                    breath
                    this &gt; "How are you getting on with finding the ingredients?"; breath
                    end

                    }

                     override def begin {
                          player.informOfNpcMessage(new ChatMessage(npc, "I have found some of the things you asked for:", player))
                          if (player.getInventory(19, 1) {
                          this &gt; "I have an egg"; breath
                          }
                          if (player.getInventory(136, 1) {
                          this &gt; "I have some flour"; breath
                          }
                          if (player.getInventory(22, 1) {
                          this &gt; "I have some milk"; breath
                          }
                          this &gt; "Great, but can you get the other ingredients as well?"; breath
                          this &gt; "You still need to find:"; breath
                          if (player.getInventory(136, 0) {
                          this &gt; "Some flour"; breath
                          }
                          if (player.getInventory(19, 0) {
                           this &gt; "An egg"; breath
                          }
                          if (player.getInventory(22, 0) {
                           this &gt; "Some milk"; breath
                          }
                          player.informOfNpcMessage(new ChatMessage(npc, "Ok I'll try to find that for you", player))
                          end
                               

              }        
   
                 this + new GenericEnd("I'm afraid i don't have any yet!", npc, player) {

                         override def begin {
                                 breath
                                 this &gt; "Oh dear oh dear!"; breath
                                 this &gt; "I need flour, eggs, and milk"; breath
                                 this &gt; "Without them i am doomed!"; breath
                                 end
                  
              }

                 this + new GenericEnd("I now have everything you need to for your cake", npc, player) {

                              override def begin {
                                     breath
               player:            this &gt; "Milk, flour, and an egg!"; breath
                NPC:              this &gt; "I am saved thankyou!"; breath
                                     this &gt;&gt; "You give some milk, an egg, and some flour to the cook"; breath
                                      if (player.getInventory.remove(19, 1)
                                            &amp;&amp; player.getInventory.remove(136, 1)
                                            &amp;&amp; player.getInventory.remove(22, 1)) {
                                     player.getActionSender.sendInventory; breath 
                                     this &gt;&gt; "Well done. You have completed the cook's assistant quest"; breath
                                     this &gt;&gt; "@gre@You have gained 1 quest point!"; breath
                                     player.quests.set(CooksAssistant.id, 2) 
                                     AddExp(COOKING, 300);
                                     end

              }[/code]</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/writing-cooks-assistant-in-scala-need-to-get-started/515737/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/writing-cooks-assistant-in-scala-need-to-get-started/515737/3</link>
        <pubDate>Thu, 11 Apr 2013 15:56:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-515737-3</guid>
        <source url="https://forum.moparisthebest.com/t/writing-cooks-assistant-in-scala-need-to-get-started/515737.rss">Writing cooks assistant in scala :: need to get started</source>
      </item>
      <item>
        <title>Writing cooks assistant in scala :: need to get started</title>
        <dc:creator><![CDATA[@CodeForFame CodeForFame]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/codeforfame">@CodeForFame</a> wrote:</p>
          <blockquote>
              <p>To set the quest stage, do this:<br>
player.quests.set(CooksAssistant.id, 1)</p>
<p>The breath method just does a short pause. It’s essentially just Thread.sleep(1800).</p>
<p>Brackets work the same way as Java. So, things like this won’t work as intended:<br>
if (player.getInventory.remove(19, 1) //egg<br>
player.sendmessage<br>
this &gt; “I have an egg”; breath</p>
<p>You’d need to do this:<br>
if (player.getInventory.remove(19, 1) {<br>
this &gt; “I have an egg”; breath // this is 2 statements, so you need the curly brackets.<br>
}</p>
<p>Also, you can’t do an else after a method.</p>
<p>Anyway, just write it as you would in Java. You just need to adjust the way things are declared, and it should be fine. Also, look at the <a href="https://github.com/Lothy/MoparClassic/blob/pre-beta/GameServer/src/org/moparscape/msc/gs/model/dialog/NpcDialog.scala" data-bbcode="true" rel="nofollow noopener">NpcDialog class</a> for methods that can be used.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/writing-cooks-assistant-in-scala-need-to-get-started/515737/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/writing-cooks-assistant-in-scala-need-to-get-started/515737/2</link>
        <pubDate>Thu, 11 Apr 2013 03:32:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-515737-2</guid>
        <source url="https://forum.moparisthebest.com/t/writing-cooks-assistant-in-scala-need-to-get-started/515737.rss">Writing cooks assistant in scala :: need to get started</source>
      </item>
      <item>
        <title>Writing cooks assistant in scala :: need to get started</title>
        <dc:creator><![CDATA[@xrune xrune]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xrune">@xrune</a> wrote:</p>
          <blockquote>
              <p>Having trouble figuring out how to write cooks assistant quest in scala im trying to convert what i have into scala…  I dont seem to understand the quest stage part… If i have item milk, flour, or egg and how do u give reward?</p>
<p>scala[code]package org.moparscape.msc.gs.npchandler<br>
import org.moparscape.msc.gs.quest.Quest /// would you import the quest??<br>
import org.moparscape.msc.gs.model.dialog.NpcDialog</p>
<p>class Cook extends NpcDialog {</p>
<pre><code>    override def init {
            this + option1
            this + option2
            this + option3
	this + option4
   }

    override def begin {
            this &gt; "What am i to do?"; breath
	player.quests.get(CooksAssistant.id).asInstanceOf[CooksAssistant].CookDialog(this)
            end

   }

    lazy val option1 = new NpcDialog("What's wrong?") {
	
	  override def begin {
                    breath
                    this &gt; "Ooh dear i'm in a terrible mess"; breath
                    this &gt; "It's the duke's birthday today"; breath
                    this &gt; "I'm meant to be making him a big cake for this evening"; breath
		this &gt; "Unfortunately, i've forgotten to buy some of the ingredients"; breath
		this &gt; "I'll never get them in time now"; breath
		this &gt; "I don't suppose you could help me?"; breath
                    end
                   
		}

		 lazy val option1 = new GenericEnd("Yes, I'll help you", npc, player) {

			 override def begin {	
				breath
				this &gt; "Oh thank you, thank you"; breath
				this &gt; "I need milk, eggs, and flour"; breath
				this &gt; "Id be very grateful if you can get them to me"; breath
				player.quests.set(CooksAssistant.id, 1)
				end

		}
		 
		 lazy val option2 = new GenericEnd("No, I don't feel like it. Maybe later", npc, player) {

			 override def begin {
				breath
				this &gt; "Ok, suit yourself"; breath
				end

 }

      lazy val option2 = new GenericEnd("Well you could give me all your money") {
	
	  override def begin {
                    breath
                    this &gt; "Haha very funny"; breath
                    end

}

      lazy val option3 = new NpcDialog("You don't look very happy") {
	
	  override def begin {
                    breath
                    this &gt; "No i'm not"; breath
		this &gt; "Ooh dear i'm in a terrible mess"; breath
                    this &gt; "It's the duke's birthday today"; breath
                    this &gt; "I'm meant to be making him a big cake for this evening"; breath
		this &gt; "Unfortunately, i've forgotten to buy some of the ingredients"; breath
		this &gt; "I'll never get them in time now"; breath
		this &gt; "I don't suppose you could help me?"; breath
                    end
		
		}

		 lazy val option1 = new GenericEnd("Yes, I'll help you", npc, player) {

			 override def begin {	
				breath
				this &gt; "Oh thank you, thank you"; breath
				this &gt; "I need milk, eggs, and flour"; breath
				this &gt; "Id be very grateful if you can get them to me"; breath
				player.quests.set(CooksAssistant.id, 1)
				end

		}
		 
		 lazy val option2 = new GenericEnd("No, I don't feel like it. Maybe later", npc, player) {

			 override def begin {
				breath
				this &gt; "Ok, suit yourself"; breath
				end

 }

      lazy val option4 = new GenericEnd("Nice hat") {
	
	  override def begin {
                    breath
                    this &gt; "Err thank you - it's a pretty ordinary cooks hat really"; breath
                    end

 }

      if (qstage == 1) {
	
	   override def begin {
                    breath
		this &gt; "How are you getting on with finding the ingredients?"; breath
                    end

	        }

		 override def begin {
                          if (player.getInventory.remove(19, 1) {
                          this &gt; "I have an egg"; breath 
                          }
                          if (player.getInventory.remove(136, 1) {
		      this &gt; "I have some flour"; breath
                          }
		      if (player.getInventory.remove(22, 1) {
		      this &gt; "I have some milk"; breath
                          }
		      player.getActionSender.sendInventory; breath
		      end
                               
                    } else {         

                    this + new GenericEnd("I'm afraid i don't have any yet!", npc, player) {

                   		 override def begin {
			       breath
			       this &gt; "Oh dear oh dear!"; breath
			       this &gt; "I need flour, eggs, and milk"; breath
			       this &gt; "Without them i am doomed!"; breath
                   		       end
    }[/code] 
</code></pre>
<p>This is the information i have for the quest is as follows:</p>
<pre><code>	NpcTalk("What am i to do?");
	int choice = showMenu(new String[] {"What's wrong?", "Well you could give me all your money", "You don't look very happy", "Nice hat"});
	if(choice == 0) {
		whatswrong();
	} else if(choice == 1) {
		givemoney();
	} else if(choice == 2) {
		nothappy();
	} else if(choice == 3) {
		nicehat();		
	}
}	
	private void whatswrong() {
	NpcTalk("Ooh dear i'm in a terrible mess");
	NpcTalk("It's the duke's birthday today");
	NpcTalk("I'm meant to be making him a big cake for this evening");
	NpcTalk("Unfortunately, i've forgotten to buy some of the ingredients");
	NpcTalk("I'll never get them in time now");
	NpcTalk("I don't suppose you could help me?");
	int choice = showMenu(new String[] {"Yes, I'll help you", "No, I don't feel like it. Maybe later"});
	if(choice == 0) {
		yesihelp();
	} else if(choice == 1) {
		maybelater();
	}
}	
	private void givemoney() {
	NpcTalk("Haha very funny");
	}
}	
	private void nothappy() {
	NpcTalk("No i'm not");
	NpcTalk("Ooh dear i'm in a terrible mess");
	NpcTalk("It's the duke's birthday today");
	NpcTalk("I'm meant to be making him a big cake for this evening");
	NpcTalk("Unfortunately, i've forgotten to buy some of the ingredients");
	NpcTalk("I'll never get them in time now");
	NpcTalk("I don't suppose you could help me?");
	int choice = showMenu(new String[] {"Yes, I'll help you", "No, I don't feel like it. Maybe later"});
	if(choice == 0) {
		yesihelp();
	} else if(choice == 1) {
		maybelater();
	}
}	
	private void yesihelp() {
	NpcTalk("Oh thank you, thank you");
	NpcTalk("I need milk, eggs, and flour");
	NpcTalk("Id be very grateful if you can get them to me");
	}
}		
	private void maybelater() {
	NpcTalk("Ok, suit yourself");
	}
}		
	private void nicehat() {
	NpcTalk("Err thank you - it's a pretty ordinary cooks hat really");
	}
}	
</code></pre>
<hr>
<p>Retalking to cook:</p>
<pre><code>	NpcTalk("How are you getting on with finding the ingredients?");
	PlayerTalk("I'm afraid i don't have any yet!");
	NpcTalk("Oh dear oh dear!");
	NpcTalk("I need flour, eggs, and milk");
	NpcTalk("Without them i am doomed!");
</code></pre>
<hr>
<p>Talking to cook with some ingredients:</p>
<pre><code>	NpcTalk("How are you getting on with finding the ingredients?");
	PlayerTalk("I have found some of the things you asked for:");
</code></pre>
<p>if milk:	PlayerTalk(“I have some milk”);<br>
if egg:		PlayerTalk(“I have an egg”);<br>
If flour:	PlayerTalk(“I have some flour”);</p>
<hr>
<p>If you need ingredients:</p>
<pre><code>	NpcTalk("Great, but can you get the other ingredients as well?");
	NpcTalk("You still need to find");
</code></pre>
<h2>if milk:	NpcTalk(“Some milk”);<br>
if egg:		NpcTalk(“An egg”);<br>
if flour:	NpcTalk(“Some flour”)<br>
PlayerTalk(“Ok I’ll try to find that for you”);</h2>
<p>talking to cook with all the ingredients:</p>
<pre><code>	NpcTalk("How are you getting on with finding the ingredients?");
	playerTalk("I now have everything you need to for your cake");
	playerTalk("Milk, flour, and an egg!");
	NpcTalk("I am saved thankyou!");
	sendmessage("You give some milk, an egg, and some flour to the cook");
	sendmessage("Well done. You have completed the cook's assistant quest");
	sendmessage("You have gained 1 quest point!");
</code></pre>
<hr>
<p>Retalking to cook: after completing quest:</p>
<pre><code>	NpcTalk("Hello friend, how is the adventuring going?");
	int choice = showMenu(new String[] {"I am getting strong and mighty", "I keep on dying", "Nice hat", "Can I use your range?"});
	if(choice == 0) {
		strong();
	} else if(choice == 1) {
		dying();
	} else if(choice == 1) {
		nicehat();
	} else if(choice == 1) {
		userange();
	}
}	
	private void strong() {
	NpcTalk("Glad to hear it");
	}
}		
	private void dying() {
	NpcTalk("Ah well at least you keep coming back to life!");
	}
}		
	private void nicehat() {
	NpcTalk("Err thank you - it's a pretty ordinary cooks hat really");
	}
}	
	private void userange() {
	NpcTalk("Go head");
	NpcTalk("It's a very good range");
	NpcTalk("It's easier to use then most other ranges");
	}
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/writing-cooks-assistant-in-scala-need-to-get-started/515737/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/writing-cooks-assistant-in-scala-need-to-get-started/515737/1</link>
        <pubDate>Thu, 11 Apr 2013 02:38:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-515737-1</guid>
        <source url="https://forum.moparisthebest.com/t/writing-cooks-assistant-in-scala-need-to-get-started/515737.rss">Writing cooks assistant in scala :: need to get started</source>
      </item>
  </channel>
</rss>
