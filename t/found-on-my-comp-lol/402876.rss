<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Found on my comp lol</title>
    <link>https://forum.moparisthebest.com/t/found-on-my-comp-lol/402876</link>
    <description>[size=10pt][b]Today I was looking through all the unnecessary crap that I have on my computer/flash drives, and on one of my flash drives I found an old game of mine that I programmed back in 2007 for a school project lol . Its a breakout game that is extremely fun (on difficulties harder than 1. I recommend 3+).  Aw.... fond memories lol. [/b][/size]

[size=10pt][b]For those of you who just want to play it get it here: http://www.mediafire.com/?5hyk3tj42uardj2 [/b][/size]

Source:
[code=freebasic]#ifdef __FB_WIN32__
SetEnviron(&quot;fbgfx=gdi&quot;)
#endif
screenres 640,480,32,2

sub flipscr()
    static as integer pg
    screenset pg,1-pg
    pg=1-pg
end sub

const blockW=50
const blockH=20

dim as integer speedMod
do
    input &quot;Difficulty?(1=easy,3=average,6=gettin dirty,7-10 hardcore)&quot;, speedMod
loop until (speedMod &gt; 0 and speedMod &lt; 11)

do
    sleep 5,1
loop while multikey(28)

type block
    as integer x,y
    as integer alive
    as integer colB,colM,colD
    as integer pts
end type

setmouse 320,470,0
dim as integer x,y,b
dim as integer lives=5
dim as integer level=1
dim as integer pX
dim as single bX,bY,bR=4,bVx,bVy
&#39;is ball attached to paddle
dim as integer attached=0
dim as integer pWidth=80
dim as double tm=timer
dim as single flash=0

dim as block grid(640/blockW,240/blockH)

dim as integer combo=0
dim as integer pts,tmppts
for tmpy as integer = 2 to 240/blockH
    for tmpx as integer=1 to 640/blockW-2
        with grid(tmpx,tmpy)
        .x=tmpx*blockW
        .y=tmpy*blockH
        read .alive
        .alive*=-1
        .pts=(240/blockH-tmpy+1)*10*speedMod
        .colB= rgb((1-tmpx/(640/blockW-1))*255,tmpy/(240/blockH)*255,(tmpx/(640/blockW-1))*255)
        .colM= rgb((1-tmpx/(640/blockW-1))*128,tmpy/(240/blockH)*128,(tmpx/(640/blockW-1))*128)
        .colD= rgb((1-tmpx/(640/blockW-1))*64,tmpy/(240/blockH)*64,(tmpx/(640/blockW-1))*64)
        end with
    next
next

dim as any ptr img = imagecreate(640,240+blockH,0)
dim as double fpstm=timer+1
dim as integer tfps,fps

dim as any ptr ballimg=imagecreate(bR,bR,255 shl 16)

windowtitle &quot;Trenton&#39;s Breakout Clone&quot;
do
    screenset 1,1
    cls
    locate 30,37
    ? &quot;Level &quot;;str(level)
    
    do
        getmouse x,y,,b
    
        if b &gt; 0 then exit do
        for tmp as integer=0 to 128
            if multikey(tmp) then exit do
        next
        sleep 5,1
    loop
    
    do
        getmouse x,y,,b
    
        if b = 0 then 
            for tmp as integer=0 to 128
                if multikey(tmp) then exit for
                if tmp=128 then exit do
            next
        end if
        sleep 5,1
    loop
    
    do
        locate 1,1
        ? &quot;Score:&quot;;pts+tmppts*combo;&quot;   &quot;
        locate 1,71
        ? &quot; Lives:&quot;;lives;&quot; &quot;
        &#39;? &quot;FPS:&quot;; fps
        
        getmouse x,y,,b
        
        tm=(timer-tm)
        flash-=tm
        if x &gt; -1 then 
            if y &lt; 300 or y &gt; 410 then setmouse x,350
            if x &lt; pWidth/2 then setmouse pWidth/2,350
            if x &gt; 640-pWidth/2 then setmouse 640-pWidth/2,350
            dim as integer opX=pX
            pX+=(x-pX)*tm*16
            if pX &gt; x and opX &lt; x then pX=x
            if pX &lt; x and opX &gt; x then pX=x
            &#39;pset(x,y),255
            if pX-pWidth/2 &lt; 0 then pX=pWidth/2
            if pX+pWidth/2 &gt; 640 then pX=640-pWidth/2
            
        end if
        
        if attached&lt;&gt;0 then
            
            &#39;update position
            tm=tm/10
            for tmstep as double = tm to tm*10 step tm
                
                bX+=bVx*tm
                bY+=bVy*tm
                if bX &lt; 0 then
                    bX=0
                    bVx*=-1
                end if
                if bX+bR &gt; 640 then
                    bX=640-bR
                    bVx*=-1
                end if
                
                if bY &lt; 0 then
                    bY=0
                    bVy*=-1
                end if
                if bY+bR &gt; 480 then
                    combo=0
                    tmppts=0
                    lives-=1
                    attached=0
                    exit for
                end if
                
                &#39;check ball collision with paddle
                if bY+bR &gt;= 460 then
                    if bX+bR &gt;= pX-pWidth/2 then
                        if bX &lt; pX+pWidth/2 then
                            pts+=tmppts*combo
                            tmppts=0
                            combo=0
                            bVy*=-1
                            bVx+=(bX-pX)*speedMod
                            
                            bY=460-bR
                            flash=.15
                        end if
                    end if
                end if
                
                &#39;check block collision with ball
                for tmpx as integer=0 to 640/blockW-1
                    for tmpy as integer = 0 to 240/blockH
                        with grid(tmpx,tmpy)
                        if .alive=-1 then
                            
                            if bY+bR &gt;= .y then
                                if bY &lt;= .y+blockH then
                                    if bX+bR &gt;= .x then
                                        if bX &lt;= .x+blockW then
                                            .alive=0
                                            combo+=1
                                            tmppts+=.pts*level
                                            &#39;reflect y
                                            if bY-bVy*tm+bR &lt; .y then
                                                bY=.y-bR
                                            elseif bY-bVy*tm &gt; .y+blockH then
                                                by=.y+blockH+1
                                            else
                                                bVy*=-1
                                            end if
                                            
                                            &#39;reflect x
                                            if bX-bVx*tm+bR &lt; .x then
                                                bX=.x-bR
                                            elseif bX-bVx*tm &gt; .x+blockW then
                                                bX=.x+blockW+1
                                            else
                                                bVx*=-1
                                            end if
                                            
                                            bVx*=-1
                                            bVy*=-1
                                        end if
                                    end if
                                end if
                            end if
                        end if
                        end with
                    next
                next
            next        
        else
            if (b &gt; -1) and (b and 1) then
                bVy=-100*(speedMod)-10*level
                attached=-1
            end if
            
            bX=pX-bR/2
            bY=450
            bVx=0
        end if
        
        tm=timer
        
        dim as integer tmpcount
        &#39;display grid
        for tmpx as integer=0 to 640/blockW-1
            for tmpy as integer = 0 to 240/blockH
                with grid(tmpx,tmpy)
                if .alive=-1 then
                    tmpcount+=1
                    line (.x,.y)-(.x+blockW-1,.y+blockH-1),.colM,bf
                    line (.x,.y)-(.x+blockW-1,.y+blockH-1),.colB,b
                    
                    line (.x,.y+blockH-1)-(.x+blockW-1,.y+blockH-1),.colD,bf
                    line (.x+blockW-1,.y)-(.x+blockW-1,.y+blockH-1),.colD,bf
                end if
                end with
            next
        next
        
        get(1,1)-(639,239+blockH),img
        
        &#39;display paddle
        if flash &gt; 0 then
            line (pX-pWidth/2,460)-(pX+pWidth/2,475),128+1280/1.5*flash,bf
        else
            line (pX-pWidth/2,460)-(pX+pWidth/2,475),128,bf
        end if
        line (pX-pWidth/2,460)-(pX+pWidth/2,475),255,b
        line (pX-pWidth/2,475)-(pX+pWidth/2,475),64,b
        line (pX+pWidth/2,460)-(pX+pWidth/2,475),64,b
        
        if combo &gt; 1 then
            locate 40,37
            ? combo;&quot;x combo&quot;
            line (36*8,39*8-1)-(36*8+8*10,39*8-1),0
        end if
        if tmpcount &lt; 1 then exit do
        if lives &lt; 0 then exit do
        
        &#39;display ball
        &#39;line (bX,bY)-(bX+bR,bY+bR),255 shl 16 , bf
        put(int(bX),int(bY)),ballimg,alpha,100
        put(int(bX),int(bY+1.5)),ballimg,alpha,100
        put(int(bX+1.5),int(bY)),ballimg,alpha,100
        put(int(bX+1.5),int(bY+1.5)),ballimg,alpha,100
        
        if multikey(25) then
            locate 45,39
            ? &quot;Paused&quot;
            flipscr
            tm=timer-tm
            fpstm=timer-fpstm
            while multikey(25):sleep 5,1:wend &#39;let the user let go
            do:sleep 5,1: loop until multikey(25)
            while multikey(25):sleep 5,1:wend &#39;let the user let go
            tm=timer-tm
            fpstm=timer-fpstm
            locate 45,39
            ? &quot;      &quot;
        else
            flipscr()
        end if
        
        sleep 5,1
        cls
        put(0,0),img,alpha,240
        if fpstm &lt; timer then
            fpstm=timer+1
            fps=tfps
            tfps=0
            windowtitle &quot;Trenton&#39;s Breakout Clone - &quot;+str(fps)+&quot; FPS&quot;
            &#39;getmouse x,y,,b
            &#39;setmouse x,400
        end if
        
        tfps+=1
    loop until multikey(1)
    if multikey(1) then exit do
    screenset 1,1
    cls
    level+=1
    if lives &gt; -1 then
        
    else
        ? &quot;You lose.&quot;
        sleep
        exit do
    end if
    attached=0
    combo=0
    if level &gt; 5 then
        select case int(rnd*5)
        case 0
            restore lev1        
        case 1
            restore lev2
        case 2
            restore lev3
        case 3
            restore lev4
        case 4
            restore lev5            
        end select
    end if
    
    for tmpy as integer = 2 to 240/blockH
        for tmpx as integer=1 to 640/blockW-2
            read grid(tmpx,tmpy).alive
            grid(tmpx,tmpy).alive*=-1
        next
    next
loop
sleep 100,1
screenset 1,1
cls
? &quot;Final points: &quot;;str(pts)
sleep
imagedestroy(img)
imagedestroy(ballimg)
end

&#39;level data
lev1:
data 1,1,1,1,1,1,1,1,1,1,1
data 1,1,1,1,1,1,1,1,1,1,1
data 1,1,1,1,1,1,1,1,1,1,1
data 1,1,1,1,1,1,1,1,1,1,1
data 1,1,1,1,1,1,1,1,1,1,1
data 1,1,1,1,1,1,1,1,1,1,1
data 1,1,1,1,1,1,1,1,1,1,1
data 1,1,1,1,1,1,1,1,1,1,1
data 1,1,1,1,1,1,1,1,1,1,1
data 1,1,1,1,1,1,1,1,1,1,1
data 1,1,1,1,1,1,1,1,1,1,1

lev2:
data 0,0,0,0,1,1,1,0,0,0,0
data 0,0,0,1,1,1,1,1,0,0,0
data 0,0,1,1,1,1,1,1,1,0,0
data 0,1,1,1,1,1,1,1,1,1,0
data 1,1,1,1,1,1,1,1,1,1,1
data 1,1,1,1,1,1,1,1,1,1,1
data 1,1,1,1,1,1,1,1,1,1,1
data 0,1,1,1,1,1,1,1,1,1,0
data 0,0,1,1,1,1,1,1,1,0,0
data 0,0,0,1,1,1,1,1,0,0,0
data 0,0,0,0,1,1,1,0,0,0,0

lev3:
data 1,1,1,1,1,1,1,1,1,1,1
data 1,0,0,0,1,1,0,0,0,1,1
data 1,0,0,0,1,1,0,0,0,1,1
data 1,0,1,1,1,1,0,1,0,0,1
data 1,0,1,1,1,1,0,1,0,0,1
data 1,0,0,0,1,1,0,0,0,1,1
data 1,0,0,0,1,1,0,1,0,0,1
data 1,0,1,1,1,1,0,1,0,0,1
data 1,0,1,1,1,1,0,0,0,1,1
data 1,1,1,1,1,1,1,1,1,1,1
data 1,1,1,1,1,1,1,1,1,1,1

lev4:
data 1,1,1,1,1,1,1,1,1,1,1
data 1,1,1,1,1,0,1,1,1,1,1
data 1,1,1,1,0,0,0,1,1,1,1
data 1,1,1,0,0,1,0,0,1,1,1
data 1,1,0,0,1,1,1,0,0,1,1
data 1,0,0,1,1,1,1,1,0,0,1
data 1,1,0,0,1,1,1,0,0,1,1
data 1,1,1,0,0,1,0,0,1,1,1
data 1,1,1,1,0,0,0,1,1,1,1
data 1,1,1,1,1,0,1,1,1,1,1
data 1,1,1,1,1,1,1,1,1,1,1

lev5:
data 1,1,1,1,1,1,1,1,1,1,1
data 1,0,1,0,1,0,1,0,1,0,1
data 1,0,1,0,1,0,1,0,1,0,1
data 1,0,1,0,1,0,1,0,1,0,1
data 1,0,1,0,1,0,1,0,1,0,1
data 1,1,1,1,1,1,1,1,1,1,1
data 1,0,1,0,1,0,1,0,1,0,1
data 1,0,1,0,1,0,1,0,1,0,1
data 1,0,1,0,1,0,1,0,1,0,1
data 1,0,1,0,1,0,1,0,1,0,1
data 1,1,1,1,1,1,1,1,1,1,1[/code]

[size=10pt][b]No need to import graphics. This is all program generated. There are 5 levels in all. I hope you all like. Happy programming![/b][/size]

Images:
[IMG]http://i344.photobucket.com/albums/p348/tekidder_2008/dif.jpg[/img]

[IMG]http://i344.photobucket.com/albums/p348/tekidder_2008/lev1.jpg[/img]</description>
    
    <lastBuildDate>Thu, 07 Jul 2011 16:01:53 +0000</lastBuildDate>
    <category>General Discussion</category>
    <atom:link href="https://forum.moparisthebest.com/t/found-on-my-comp-lol/402876.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Found on my comp lol</title>
        <dc:creator><![CDATA[@GML_Programmer GML Programmer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/gml_programmer">@GML_Programmer</a> wrote:</p>
          <blockquote>
              <p>[size=10pt]<span class="bbcode-b">Today I was looking through all the unnecessary crap that I have on my computer/flash drives, and on one of my flash drives I found an old game of mine that I programmed back in 2007 for a school project lol . Its a breakout game that is extremely fun (on difficulties harder than 1. I recommend 3+).  Aw… fond memories lol. </span>[/size]</p>
<p>[size=10pt]<span class="bbcode-b">For those of you who just want to play it get it here: <a href="http://www.mediafire.com/?5hyk3tj42uardj2" rel="nofollow noopener">http://www.mediafire.com/?5hyk3tj42uardj2</a> </span>[/size]</p>
<p>Source:</p>
<p>[code=freebasic]<span class="hashtag">#ifdef</span> <strong>FB_WIN32</strong><br>
SetEnviron(“fbgfx=gdi”)<br>
<span class="hashtag">#endif</span><br>
screenres 640,480,32,2</p>
<p>sub flipscr()<br>
static as integer pg<br>
screenset pg,1-pg<br>
pg=1-pg<br>
end sub</p>
<p>const blockW=50<br>
const blockH=20</p>
<p>dim as integer speedMod<br>
do<br>
input “Difficulty?(1=easy,3=average,6=gettin dirty,7-10 hardcore)”, speedMod<br>
loop until (speedMod &gt; 0 and speedMod &lt; 11)</p>
<p>do<br>
sleep 5,1<br>
loop while multikey(28)</p>
<p>type block<br>
as integer x,y<br>
as integer alive<br>
as integer colB,colM,colD<br>
as integer pts<br>
end type</p>
<p>setmouse 320,470,0<br>
dim as integer x,y,b<br>
dim as integer lives=5<br>
dim as integer level=1<br>
dim as integer pX<br>
dim as single bX,bY,bR=4,bVx,bVy<br>
'is ball attached to paddle<br>
dim as integer attached=0<br>
dim as integer pWidth=80<br>
dim as double tm=timer<br>
dim as single flash=0</p>
<p>dim as block grid(640/blockW,240/blockH)</p>
<p>dim as integer combo=0<br>
dim as integer pts,tmppts<br>
for tmpy as integer = 2 to 240/blockH<br>
for tmpx as integer=1 to 640/blockW-2<br>
with grid(tmpx,tmpy)<br>
.x=tmpx<em>blockW<br>
.y=tmpy</em>blockH<br>
read .alive<br>
.alive*=-1<br>
.pts=(240/blockH-tmpy+1)<em>10</em>speedMod<br>
.colB= rgb((1-tmpx/(640/blockW-1))*255,tmpy/(240/blockH)*255,(tmpx/(640/blockW-1))*255)<br>
.colM= rgb((1-tmpx/(640/blockW-1))*128,tmpy/(240/blockH)*128,(tmpx/(640/blockW-1))*128)<br>
.colD= rgb((1-tmpx/(640/blockW-1))*64,tmpy/(240/blockH)*64,(tmpx/(640/blockW-1))*64)<br>
end with<br>
next<br>
next</p>
<p>dim as any ptr img = imagecreate(640,240+blockH,0)<br>
dim as double fpstm=timer+1<br>
dim as integer tfps,fps</p>
<p>dim as any ptr ballimg=imagecreate(bR,bR,255 shl 16)</p>
<p>windowtitle “Trenton’s Breakout Clone”<br>
do<br>
screenset 1,1<br>
cls<br>
locate 30,37<br>
? "Level ";str(level)</p>
<pre><code>do
    getmouse x,y,,b

    if b &gt; 0 then exit do
    for tmp as integer=0 to 128
        if multikey(tmp) then exit do
    next
    sleep 5,1
loop

do
    getmouse x,y,,b

    if b = 0 then 
        for tmp as integer=0 to 128
            if multikey(tmp) then exit for
            if tmp=128 then exit do
        next
    end if
    sleep 5,1
loop

do
    locate 1,1
    ? "Score:";pts+tmppts*combo;"   "
    locate 1,71
    ? " Lives:";lives;" "
    '? "FPS:"; fps
    
    getmouse x,y,,b
    
    tm=(timer-tm)
    flash-=tm
    if x &gt; -1 then 
        if y &lt; 300 or y &gt; 410 then setmouse x,350
        if x &lt; pWidth/2 then setmouse pWidth/2,350
        if x &gt; 640-pWidth/2 then setmouse 640-pWidth/2,350
        dim as integer opX=pX
        pX+=(x-pX)*tm*16
        if pX &gt; x and opX &lt; x then pX=x
        if pX &lt; x and opX &gt; x then pX=x
        'pset(x,y),255
        if pX-pWidth/2 &lt; 0 then pX=pWidth/2
        if pX+pWidth/2 &gt; 640 then pX=640-pWidth/2
        
    end if
    
    if attached&lt;&gt;0 then
        
        'update position
        tm=tm/10
        for tmstep as double = tm to tm*10 step tm
            
            bX+=bVx*tm
            bY+=bVy*tm
            if bX &lt; 0 then
                bX=0
                bVx*=-1
            end if
            if bX+bR &gt; 640 then
                bX=640-bR
                bVx*=-1
            end if
            
            if bY &lt; 0 then
                bY=0
                bVy*=-1
            end if
            if bY+bR &gt; 480 then
                combo=0
                tmppts=0
                lives-=1
                attached=0
                exit for
            end if
            
            'check ball collision with paddle
            if bY+bR &gt;= 460 then
                if bX+bR &gt;= pX-pWidth/2 then
                    if bX &lt; pX+pWidth/2 then
                        pts+=tmppts*combo
                        tmppts=0
                        combo=0
                        bVy*=-1
                        bVx+=(bX-pX)*speedMod
                        
                        bY=460-bR
                        flash=.15
                    end if
                end if
            end if
            
            'check block collision with ball
            for tmpx as integer=0 to 640/blockW-1
                for tmpy as integer = 0 to 240/blockH
                    with grid(tmpx,tmpy)
                    if .alive=-1 then
                        
                        if bY+bR &gt;= .y then
                            if bY &lt;= .y+blockH then
                                if bX+bR &gt;= .x then
                                    if bX &lt;= .x+blockW then
                                        .alive=0
                                        combo+=1
                                        tmppts+=.pts*level
                                        'reflect y
                                        if bY-bVy*tm+bR &lt; .y then
                                            bY=.y-bR
                                        elseif bY-bVy*tm &gt; .y+blockH then
                                            by=.y+blockH+1
                                        else
                                            bVy*=-1
                                        end if
                                        
                                        'reflect x
                                        if bX-bVx*tm+bR &lt; .x then
                                            bX=.x-bR
                                        elseif bX-bVx*tm &gt; .x+blockW then
                                            bX=.x+blockW+1
                                        else
                                            bVx*=-1
                                        end if
                                        
                                        bVx*=-1
                                        bVy*=-1
                                    end if
                                end if
                            end if
                        end if
                    end if
                    end with
                next
            next
        next        
    else
        if (b &gt; -1) and (b and 1) then
            bVy=-100*(speedMod)-10*level
            attached=-1
        end if
        
        bX=pX-bR/2
        bY=450
        bVx=0
    end if
    
    tm=timer
    
    dim as integer tmpcount
    'display grid
    for tmpx as integer=0 to 640/blockW-1
        for tmpy as integer = 0 to 240/blockH
            with grid(tmpx,tmpy)
            if .alive=-1 then
                tmpcount+=1
                line (.x,.y)-(.x+blockW-1,.y+blockH-1),.colM,bf
                line (.x,.y)-(.x+blockW-1,.y+blockH-1),.colB,b
                
                line (.x,.y+blockH-1)-(.x+blockW-1,.y+blockH-1),.colD,bf
                line (.x+blockW-1,.y)-(.x+blockW-1,.y+blockH-1),.colD,bf
            end if
            end with
        next
    next
    
    get(1,1)-(639,239+blockH),img
    
    'display paddle
    if flash &gt; 0 then
        line (pX-pWidth/2,460)-(pX+pWidth/2,475),128+1280/1.5*flash,bf
    else
        line (pX-pWidth/2,460)-(pX+pWidth/2,475),128,bf
    end if
    line (pX-pWidth/2,460)-(pX+pWidth/2,475),255,b
    line (pX-pWidth/2,475)-(pX+pWidth/2,475),64,b
    line (pX+pWidth/2,460)-(pX+pWidth/2,475),64,b
    
    if combo &gt; 1 then
        locate 40,37
        ? combo;"x combo"
        line (36*8,39*8-1)-(36*8+8*10,39*8-1),0
    end if
    if tmpcount &lt; 1 then exit do
    if lives &lt; 0 then exit do
    
    'display ball
    'line (bX,bY)-(bX+bR,bY+bR),255 shl 16 , bf
    put(int(bX),int(bY)),ballimg,alpha,100
    put(int(bX),int(bY+1.5)),ballimg,alpha,100
    put(int(bX+1.5),int(bY)),ballimg,alpha,100
    put(int(bX+1.5),int(bY+1.5)),ballimg,alpha,100
    
    if multikey(25) then
        locate 45,39
        ? "Paused"
        flipscr
        tm=timer-tm
        fpstm=timer-fpstm
        while multikey(25):sleep 5,1:wend 'let the user let go
        do:sleep 5,1: loop until multikey(25)
        while multikey(25):sleep 5,1:wend 'let the user let go
        tm=timer-tm
        fpstm=timer-fpstm
        locate 45,39
        ? "      "
    else
        flipscr()
    end if
    
    sleep 5,1
    cls
    put(0,0),img,alpha,240
    if fpstm &lt; timer then
        fpstm=timer+1
        fps=tfps
        tfps=0
        windowtitle "Trenton's Breakout Clone - "+str(fps)+" FPS"
        'getmouse x,y,,b
        'setmouse x,400
    end if
    
    tfps+=1
loop until multikey(1)
if multikey(1) then exit do
screenset 1,1
cls
level+=1
if lives &gt; -1 then
    
else
    ? "You lose."
    sleep
    exit do
end if
attached=0
combo=0
if level &gt; 5 then
    select case int(rnd*5)
    case 0
        restore lev1        
    case 1
        restore lev2
    case 2
        restore lev3
    case 3
        restore lev4
    case 4
        restore lev5            
    end select
end if

for tmpy as integer = 2 to 240/blockH
    for tmpx as integer=1 to 640/blockW-2
        read grid(tmpx,tmpy).alive
        grid(tmpx,tmpy).alive*=-1
    next
next
</code></pre>
<p>loop<br>
sleep 100,1<br>
screenset 1,1<br>
cls<br>
? "Final points: ";str(pts)<br>
sleep<br>
imagedestroy(img)<br>
imagedestroy(ballimg)<br>
end</p>
<p>'level data<br>
lev1:<br>
data 1,1,1,1,1,1,1,1,1,1,1<br>
data 1,1,1,1,1,1,1,1,1,1,1<br>
data 1,1,1,1,1,1,1,1,1,1,1<br>
data 1,1,1,1,1,1,1,1,1,1,1<br>
data 1,1,1,1,1,1,1,1,1,1,1<br>
data 1,1,1,1,1,1,1,1,1,1,1<br>
data 1,1,1,1,1,1,1,1,1,1,1<br>
data 1,1,1,1,1,1,1,1,1,1,1<br>
data 1,1,1,1,1,1,1,1,1,1,1<br>
data 1,1,1,1,1,1,1,1,1,1,1<br>
data 1,1,1,1,1,1,1,1,1,1,1</p>
<p>lev2:<br>
data 0,0,0,0,1,1,1,0,0,0,0<br>
data 0,0,0,1,1,1,1,1,0,0,0<br>
data 0,0,1,1,1,1,1,1,1,0,0<br>
data 0,1,1,1,1,1,1,1,1,1,0<br>
data 1,1,1,1,1,1,1,1,1,1,1<br>
data 1,1,1,1,1,1,1,1,1,1,1<br>
data 1,1,1,1,1,1,1,1,1,1,1<br>
data 0,1,1,1,1,1,1,1,1,1,0<br>
data 0,0,1,1,1,1,1,1,1,0,0<br>
data 0,0,0,1,1,1,1,1,0,0,0<br>
data 0,0,0,0,1,1,1,0,0,0,0</p>
<p>lev3:<br>
data 1,1,1,1,1,1,1,1,1,1,1<br>
data 1,0,0,0,1,1,0,0,0,1,1<br>
data 1,0,0,0,1,1,0,0,0,1,1<br>
data 1,0,1,1,1,1,0,1,0,0,1<br>
data 1,0,1,1,1,1,0,1,0,0,1<br>
data 1,0,0,0,1,1,0,0,0,1,1<br>
data 1,0,0,0,1,1,0,1,0,0,1<br>
data 1,0,1,1,1,1,0,1,0,0,1<br>
data 1,0,1,1,1,1,0,0,0,1,1<br>
data 1,1,1,1,1,1,1,1,1,1,1<br>
data 1,1,1,1,1,1,1,1,1,1,1</p>
<p>lev4:<br>
data 1,1,1,1,1,1,1,1,1,1,1<br>
data 1,1,1,1,1,0,1,1,1,1,1<br>
data 1,1,1,1,0,0,0,1,1,1,1<br>
data 1,1,1,0,0,1,0,0,1,1,1<br>
data 1,1,0,0,1,1,1,0,0,1,1<br>
data 1,0,0,1,1,1,1,1,0,0,1<br>
data 1,1,0,0,1,1,1,0,0,1,1<br>
data 1,1,1,0,0,1,0,0,1,1,1<br>
data 1,1,1,1,0,0,0,1,1,1,1<br>
data 1,1,1,1,1,0,1,1,1,1,1<br>
data 1,1,1,1,1,1,1,1,1,1,1</p>
<p>lev5:<br>
data 1,1,1,1,1,1,1,1,1,1,1<br>
data 1,0,1,0,1,0,1,0,1,0,1<br>
data 1,0,1,0,1,0,1,0,1,0,1<br>
data 1,0,1,0,1,0,1,0,1,0,1<br>
data 1,0,1,0,1,0,1,0,1,0,1<br>
data 1,1,1,1,1,1,1,1,1,1,1<br>
data 1,0,1,0,1,0,1,0,1,0,1<br>
data 1,0,1,0,1,0,1,0,1,0,1<br>
data 1,0,1,0,1,0,1,0,1,0,1<br>
data 1,0,1,0,1,0,1,0,1,0,1<br>
data 1,1,1,1,1,1,1,1,1,1,1[/code]</p>
<p>[size=10pt]<span class="bbcode-b">No need to import graphics. This is all program generated. There are 5 levels in all. I hope you all like. Happy programming!</span>[/size]</p>
<p>Images:<br>
<img src="http://i344.photobucket.com/albums/p348/tekidder_2008/dif.jpg" alt width="" height=""></p>
<p><img src="http://i344.photobucket.com/albums/p348/tekidder_2008/lev1.jpg" alt width="" height=""></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/found-on-my-comp-lol/402876/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/found-on-my-comp-lol/402876/1</link>
        <pubDate>Thu, 07 Jul 2011 16:01:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-402876-1</guid>
        <source url="https://forum.moparisthebest.com/t/found-on-my-comp-lol/402876.rss">Found on my comp lol</source>
      </item>
  </channel>
</rss>
