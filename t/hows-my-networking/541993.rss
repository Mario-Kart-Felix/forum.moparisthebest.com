<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Hows my networking?</title>
    <link>https://forum.moparisthebest.com/t/hows-my-networking/541993</link>
    <description>I could never figure out Mina or Netty so I went with the &#39;Jocket&#39; available from github. Runs faster than the regular socket. To it it to work for what I need it to though, I had to make a few changes so that I was able to obtain the IP of the person connecting and such to make it play nicer with a server setup.

Here is my SocketIO class. Please remember, I work at a workplace that leaves me very little personal time to do things like this. Generally only get 15-20 minutes a night. As basic as this is, I just know someone could very quickly improve upon it.
[code]public class SocketIO {
	public JocketSocket socket;
	public Server server;
	public DataInputStream dataInputStream;
	public DataOutputStream dataOutputStream;
	public final int MAX_CHARS = 300;
	public List&lt;Byte&gt; readQueue = new ArrayList&lt;Byte&gt;();
	public List&lt;Byte&gt; writeQueue = new ArrayList&lt;Byte&gt;();
	
	public SocketIO(Server server, JocketSocket socket) {
		this.socket = socket;
		this.server = server;
		try {
			dataInputStream = new DataInputStream(socket.getInputStream());
			dataOutputStream = new DataOutputStream(socket.getOutputStream());
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void writePacketID(int id) {
		writeInt(id);
	}

	public void writeInt(int i) {
		try {
			dataOutputStream.writeInt(i);
		} catch (Exception e) {
		}
	}

	public int readInt() {
		try {
			return dataInputStream.readInt();
		} catch (Exception e) {
			return -1;
		}
	}

	public void writeString(String s) {
		try {
			dataOutputStream.writeUTF(s);
		} catch (Exception e) {
		}
	}

	public String readString() {
		try {
			return dataInputStream.readUTF();
		} catch (Exception e) {
			return &quot;&quot;;
		}
	}
	
}
[/code]

How I read packets (called approx 20 times a second) using Grahams oldest Event system.
[code]
		try {
			int packet = userIO.readInt();
			if (packet == -1) {
				destruct();
			} else {
				userIO.parsePackets(packet);
			}
		} catch (Exception e) {
		}
[/code]</description>
    
    <lastBuildDate>Thu, 24 Apr 2014 06:07:35 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/hows-my-networking/541993.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Hows my networking?</title>
        <dc:creator><![CDATA[@CoonHunter CoonHunter]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/coonhunter">@CoonHunter</a> wrote:</p>
          <blockquote>
              <p>Honestly I’m still lost in this Netty bullcrap. I just can’t dedicate enough time in one night to figure out any problems I end up with. Went and eve scrapped the jockeysocket. Sockets in java7 outperform it. In even the prebuilt benchmark app.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/hows-my-networking/541993/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/hows-my-networking/541993/13</link>
        <pubDate>Thu, 24 Apr 2014 06:07:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-541993-13</guid>
        <source url="https://forum.moparisthebest.com/t/hows-my-networking/541993.rss">Hows my networking?</source>
      </item>
      <item>
        <title>Hows my networking?</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>Honesty doing that depends on how important order is to the program, but I agree with you. Like I said it hasn’t been touched in 3 years <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/hows-my-networking/541993/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/hows-my-networking/541993/12</link>
        <pubDate>Mon, 21 Apr 2014 14:30:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-541993-12</guid>
        <source url="https://forum.moparisthebest.com/t/hows-my-networking/541993.rss">Hows my networking?</source>
      </item>
      <item>
        <title>Hows my networking?</title>
        <dc:creator><![CDATA[@Vix Vix]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/vix">@Vix</a> wrote:</p>
          <blockquote>
              <p>[quote=“The Enforcer, post:9, topic:541993”][quote author=Davidi2 link=topic=660866.msg4418377#msg4418377 date=1397112004]</p>
<p>[quote author=CoonHunter link=topic=660866.msg4418219#msg4418219 date=1397029677]Davidi2’s old chatroom.<br>
[/quote]LOL! Man that was fudgeing ages ago!</p>
<p>lemme find my more recent ‘barebone’ networking for you</p>
<p>EDIT: here ya go, simple NIO backbone (lol, “recent” means mid 2011)</p>
<p>Client side:</p>
<p>[code=java]import java.io.IOException;<br>
import java.net.ConnectException;<br>
import java.net.InetSocketAddress;<br>
import java.nio.channels.*;</p>
<p>public class Connection implements Runnable {</p>
<pre><code>private Selector selector;
private SocketChannel socketChannel;
private BufferUtils buffers;

public Connection(String host, int port) {
	try {
		selector = Selector.open();	
		socketChannel = SocketChannel.open();
		socketChannel.configureBlocking(false);
		socketChannel.connect(new InetSocketAddress(host, port));
		socketChannel.register(selector, SelectionKey.OP_CONNECT);
	} catch (Exception e) {
		e.printStackTrace();
	}
	//setDaemon(true); TODO uncomment when the other client threads are established
}

public void run() {
	while (true) {
		try {
			selector.select();
			for(SelectionKey selectionKey : selector.selectedKeys()) {
				if (!selectionKey.isValid()) {
					continue;
				}
				if (selectionKey.isConnectable()) {
					socketChannel = (SocketChannel)selectionKey.channel();
					if(socketChannel == null) {
						break;
					}
					socketChannel.finishConnect();
					selectionKey.interestOps(SelectionKey.OP_READ);
					System.out.println("Connection established.");
				} else if (selectionKey.isReadable()) {
					handleIncomingData();
				} 
			}
		} catch(ConnectException e) {
			System.out.println("Cannot connect to server.");
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}

public void disconnect() {
	try {
		socketChannel.close();
		System.out.println("Disconnected from server.");
	} catch (IOException e) {
		e.printStackTrace();
	}
}

public final void handleIncomingData() {
	try {
		if (socketChannel.read(buffers.getInBuffer()) == -1) {
			disconnect();
			return;
		}
		buffers.getInBuffer().flip();
		//data is now here, handle however you want... this just loops and prints each byte
		while (buffers.getInBuffer().hasRemaining()) {
			System.out.println(buffers.getInBuffer().get());
		}
		buffers.getInBuffer().clear();
	} catch (Exception ex) {
		ex.printStackTrace();
		disconnect();
	}
}

public void sendBuffer() {
	buffers.getOutBuffer().flip();
	try {
		socketChannel.write(buffers.getOutBuffer());
	} catch (IOException ex) {
		ex.printStackTrace();
		disconnect();
	}
}

public String getHost() {
	return socketChannel.socket().getInetAddress().getHostAddress();
}

public SocketChannel getSocketChannel() {
	return socketChannel;
}

public BufferUtils getBuffers() {
	return buffers;
}
</code></pre>
<p>}<br>
[/code][code=java]import <a href="http://java.io" rel="nofollow noopener">java.io</a>.*;<br>
import java.nio.ByteBuffer;</p>
<p>public class BufferUtils {</p>
<pre><code>private ByteBuffer inBuffer = ByteBuffer.allocate(1024);
private ByteBuffer outBuffer = ByteBuffer.allocate(1024);

public void write(byte b) {
	outBuffer.put(b);
}

public void write(byte[] b) {
	outBuffer.put(b);
}

public void writeObject(Object o) {
	try {
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		new ObjectOutputStream(baos).writeObject(o);
		byte[] byteVal = baos.toByteArray();
		write(byteVal);
	} catch (IOException e) {
		e.printStackTrace();
	}
}

public ByteBuffer getInBuffer() {
	return inBuffer;
}

public ByteBuffer getOutBuffer() {
	return outBuffer;
}
</code></pre>
<p>}<br>
[/code]</p>
<p><span class="bbcode-u"><span class="bbcode-b"><br>
Server sided:</span></span></p>
<p>[code=java]import java.io.IOException;<br>
import java.net.InetSocketAddress;<br>
import java.nio.channels.*;</p>
<p>public class Server implements Runnable {</p>
<pre><code>private Selector selector;
private ServerSocketChannel serverSocketChannel;
private boolean running = true;

public Server(int port) {
	try {
		System.out.print("Attempting to start server on port: [" + port + "]... ");
		selector = Selector.open();
		serverSocketChannel = ServerSocketChannel.open();
		serverSocketChannel.configureBlocking(false);
		serverSocketChannel.socket().bind(new InetSocketAddress(port));
		serverSocketChannel.register(selector, SelectionKey.OP_ACCEPT);
		System.out.println("Successfully started!");
	} catch (IOException e) {
		System.out.println("Error starting!");
		e.printStackTrace();
	}
}

@Override
public void run() {
	while (running) {
		try {
			selector.select();
			for (SelectionKey selectionKey : selector.selectedKeys()) {
				if (!selectionKey.isValid()) {
					continue;
				}
				if (selectionKey.isAcceptable()) {
					SocketChannel socket = serverSocketChannel.accept();
					System.out.print("Attempting to accept connection from: [" + socket.socket().getInetAddress() + "]... ");
					socket.configureBlocking(false);
					SelectionKey key = socket.register(selector, SelectionKey.OP_READ);
					PlayerChannel playerChannel = new PlayerChannel((SocketChannel) key.channel());
					key.attach(playerChannel);
					System.out.println("Successfully accepted!");
				} else if (selectionKey.isReadable()) {
					((PlayerChannel)selectionKey.attachment()).handleIncomingData();
				}
			}
		} catch(Exception e) {
			e.printStackTrace();
		}
	}
}

public void setRunning(boolean running) {
	this.running = running;
}
</code></pre>
<p>}[/code]</p>
<p>[code=java]import java.io.IOException;<br>
import java.nio.channels.*;</p>
<p>public class PlayerChannel {</p>
<pre><code>private PlayerBuffers playerBuffers;
private SocketChannel socketChannel;

public PlayerChannel(SocketChannel socketChannel) {
	this.socketChannel = socketChannel;
	this.playerBuffers = new PlayerBuffers();
}

public void disconnect() {
	try {
		socketChannel.close();
		System.out.println("Disconnected.");
	} catch (IOException e) {
		e.printStackTrace();
	}
}

public final void handleIncomingData() {
	try {
		if (socketChannel.read(playerBuffers.getInBuffer()) == -1) {
			disconnect();
			return;
		}
		playerBuffers.getInBuffer().flip();
		//data is now here, handle however you want... this just loops and prints each byte
		while (playerBuffers.getInBuffer().hasRemaining()) {
			System.out.println(playerBuffers.getInBuffer().get());
		}
		playerBuffers.getInBuffer().clear();
	} catch (Exception ex) {
		ex.printStackTrace();
		disconnect();
	}
}

public void sendBuffer() {
	playerBuffers.getOutBuffer().flip();
	try {
		socketChannel.write(playerBuffers.getOutBuffer());
	} catch (IOException ex) {
		ex.printStackTrace();
		disconnect();
	}
}

public SocketChannel getSocketChannel() {
	return socketChannel;
}

public PlayerBuffers getBuffers() {
	return playerBuffers;		
}
</code></pre>
<p>}[/code]</p>
<p>PlayerBuffers is pretty much identical to BufferUtils in the client, have to forgive my naming. This was my first experiment with NIO.<br>
[/quote]</p>
<p>-1. Not C++ and shit code too.[/quote]</p>
<p>Why would you bother implementing an asynchronous network just to lock yourself into an infinite loop? Try using a concurrent executor so you can multi-thread the application as you please instead of limiting all operations to a single while loop.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/hows-my-networking/541993/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/hows-my-networking/541993/11</link>
        <pubDate>Mon, 21 Apr 2014 00:05:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-541993-11</guid>
        <source url="https://forum.moparisthebest.com/t/hows-my-networking/541993.rss">Hows my networking?</source>
      </item>
      <item>
        <title>Hows my networking?</title>
        <dc:creator><![CDATA[@CoonHunter CoonHunter]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/coonhunter">@CoonHunter</a> wrote:</p>
          <blockquote>
              <p>Thanks David, and yes it is ages. I used to have an original copy <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"> anywho I still have my chatroom. Only bit of your code left is the warning system. I plan on changing that.</p>
<p>When I get home I’ll download the Netty library again and see what I can do.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/hows-my-networking/541993/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/hows-my-networking/541993/10</link>
        <pubDate>Thu, 10 Apr 2014 18:24:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-541993-10</guid>
        <source url="https://forum.moparisthebest.com/t/hows-my-networking/541993.rss">Hows my networking?</source>
      </item>
      <item>
        <title>Hows my networking?</title>
        <dc:creator><![CDATA[@The_Enforcer The Enforcer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_enforcer">@The_Enforcer</a> wrote:</p>
          <blockquote>
              <p>[quote=“Davidi2, post:8, topic:541993”][quote author=CoonHunter link=topic=660866.msg4418219#msg4418219 date=1397029677]Davidi2’s old chatroom.<br>
[/quote]LOL! Man that was fudgeing ages ago!</p>
<p>lemme find my more recent ‘barebone’ networking for you</p>
<p>EDIT: here ya go, simple NIO backbone (lol, “recent” means mid 2011)</p>
<p>Client side:</p>
<p>[code=java]import java.io.IOException;<br>
import java.net.ConnectException;<br>
import java.net.InetSocketAddress;<br>
import java.nio.channels.*;</p>
<p>public class Connection implements Runnable {</p>
<pre><code>private Selector selector;
private SocketChannel socketChannel;
private BufferUtils buffers;

public Connection(String host, int port) {
	try {
		selector = Selector.open();	
		socketChannel = SocketChannel.open();
		socketChannel.configureBlocking(false);
		socketChannel.connect(new InetSocketAddress(host, port));
		socketChannel.register(selector, SelectionKey.OP_CONNECT);
	} catch (Exception e) {
		e.printStackTrace();
	}
	//setDaemon(true); TODO uncomment when the other client threads are established
}

public void run() {
	while (true) {
		try {
			selector.select();
			for(SelectionKey selectionKey : selector.selectedKeys()) {
				if (!selectionKey.isValid()) {
					continue;
				}
				if (selectionKey.isConnectable()) {
					socketChannel = (SocketChannel)selectionKey.channel();
					if(socketChannel == null) {
						break;
					}
					socketChannel.finishConnect();
					selectionKey.interestOps(SelectionKey.OP_READ);
					System.out.println("Connection established.");
				} else if (selectionKey.isReadable()) {
					handleIncomingData();
				} 
			}
		} catch(ConnectException e) {
			System.out.println("Cannot connect to server.");
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}

public void disconnect() {
	try {
		socketChannel.close();
		System.out.println("Disconnected from server.");
	} catch (IOException e) {
		e.printStackTrace();
	}
}

public final void handleIncomingData() {
	try {
		if (socketChannel.read(buffers.getInBuffer()) == -1) {
			disconnect();
			return;
		}
		buffers.getInBuffer().flip();
		//data is now here, handle however you want... this just loops and prints each byte
		while (buffers.getInBuffer().hasRemaining()) {
			System.out.println(buffers.getInBuffer().get());
		}
		buffers.getInBuffer().clear();
	} catch (Exception ex) {
		ex.printStackTrace();
		disconnect();
	}
}

public void sendBuffer() {
	buffers.getOutBuffer().flip();
	try {
		socketChannel.write(buffers.getOutBuffer());
	} catch (IOException ex) {
		ex.printStackTrace();
		disconnect();
	}
}

public String getHost() {
	return socketChannel.socket().getInetAddress().getHostAddress();
}

public SocketChannel getSocketChannel() {
	return socketChannel;
}

public BufferUtils getBuffers() {
	return buffers;
}
</code></pre>
<p>}<br>
[/code][code=java]import <a href="http://java.io" rel="nofollow noopener">java.io</a>.*;<br>
import java.nio.ByteBuffer;</p>
<p>public class BufferUtils {</p>
<pre><code>private ByteBuffer inBuffer = ByteBuffer.allocate(1024);
private ByteBuffer outBuffer = ByteBuffer.allocate(1024);

public void write(byte b) {
	outBuffer.put(b);
}

public void write(byte[] b) {
	outBuffer.put(b);
}

public void writeObject(Object o) {
	try {
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		new ObjectOutputStream(baos).writeObject(o);
		byte[] byteVal = baos.toByteArray();
		write(byteVal);
	} catch (IOException e) {
		e.printStackTrace();
	}
}

public ByteBuffer getInBuffer() {
	return inBuffer;
}

public ByteBuffer getOutBuffer() {
	return outBuffer;
}
</code></pre>
<p>}<br>
[/code]</p>
<p><span class="bbcode-u"><span class="bbcode-b"><br>
Server sided:</span></span></p>
<p>[code=java]import java.io.IOException;<br>
import java.net.InetSocketAddress;<br>
import java.nio.channels.*;</p>
<p>public class Server implements Runnable {</p>
<pre><code>private Selector selector;
private ServerSocketChannel serverSocketChannel;
private boolean running = true;

public Server(int port) {
	try {
		System.out.print("Attempting to start server on port: [" + port + "]... ");
		selector = Selector.open();
		serverSocketChannel = ServerSocketChannel.open();
		serverSocketChannel.configureBlocking(false);
		serverSocketChannel.socket().bind(new InetSocketAddress(port));
		serverSocketChannel.register(selector, SelectionKey.OP_ACCEPT);
		System.out.println("Successfully started!");
	} catch (IOException e) {
		System.out.println("Error starting!");
		e.printStackTrace();
	}
}

@Override
public void run() {
	while (running) {
		try {
			selector.select();
			for (SelectionKey selectionKey : selector.selectedKeys()) {
				if (!selectionKey.isValid()) {
					continue;
				}
				if (selectionKey.isAcceptable()) {
					SocketChannel socket = serverSocketChannel.accept();
					System.out.print("Attempting to accept connection from: [" + socket.socket().getInetAddress() + "]... ");
					socket.configureBlocking(false);
					SelectionKey key = socket.register(selector, SelectionKey.OP_READ);
					PlayerChannel playerChannel = new PlayerChannel((SocketChannel) key.channel());
					key.attach(playerChannel);
					System.out.println("Successfully accepted!");
				} else if (selectionKey.isReadable()) {
					((PlayerChannel)selectionKey.attachment()).handleIncomingData();
				}
			}
		} catch(Exception e) {
			e.printStackTrace();
		}
	}
}

public void setRunning(boolean running) {
	this.running = running;
}
</code></pre>
<p>}[/code]</p>
<p>[code=java]import java.io.IOException;<br>
import java.nio.channels.*;</p>
<p>public class PlayerChannel {</p>
<pre><code>private PlayerBuffers playerBuffers;
private SocketChannel socketChannel;

public PlayerChannel(SocketChannel socketChannel) {
	this.socketChannel = socketChannel;
	this.playerBuffers = new PlayerBuffers();
}

public void disconnect() {
	try {
		socketChannel.close();
		System.out.println("Disconnected.");
	} catch (IOException e) {
		e.printStackTrace();
	}
}

public final void handleIncomingData() {
	try {
		if (socketChannel.read(playerBuffers.getInBuffer()) == -1) {
			disconnect();
			return;
		}
		playerBuffers.getInBuffer().flip();
		//data is now here, handle however you want... this just loops and prints each byte
		while (playerBuffers.getInBuffer().hasRemaining()) {
			System.out.println(playerBuffers.getInBuffer().get());
		}
		playerBuffers.getInBuffer().clear();
	} catch (Exception ex) {
		ex.printStackTrace();
		disconnect();
	}
}

public void sendBuffer() {
	playerBuffers.getOutBuffer().flip();
	try {
		socketChannel.write(playerBuffers.getOutBuffer());
	} catch (IOException ex) {
		ex.printStackTrace();
		disconnect();
	}
}

public SocketChannel getSocketChannel() {
	return socketChannel;
}

public PlayerBuffers getBuffers() {
	return playerBuffers;		
}
</code></pre>
<p>}[/code]</p>
<p>PlayerBuffers is pretty much identical to BufferUtils in the client, have to forgive my naming. This was my first experiment with NIO.[/quote]</p>
<p>-1. Not C++ and shit code too.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/hows-my-networking/541993/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/hows-my-networking/541993/9</link>
        <pubDate>Thu, 10 Apr 2014 13:59:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-541993-9</guid>
        <source url="https://forum.moparisthebest.com/t/hows-my-networking/541993.rss">Hows my networking?</source>
      </item>
      <item>
        <title>Hows my networking?</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>[quote=“CoonHunter, post:5, topic:541993”]Davidi2’s old chatroom.[/quote]LOL! Man that was fudgeing ages ago!</p>
<p>lemme find my more recent ‘barebone’ networking for you</p>
<p>EDIT: here ya go, simple NIO backbone (lol, “recent” means mid 2011)</p>
<p>Client side:</p>
<p>[code=java]import java.io.IOException;<br>
import java.net.ConnectException;<br>
import java.net.InetSocketAddress;<br>
import java.nio.channels.*;</p>
<p>public class Connection implements Runnable {</p>
<pre><code>private Selector selector;
private SocketChannel socketChannel;
private BufferUtils buffers;

public Connection(String host, int port) {
	try {
		selector = Selector.open();	
		socketChannel = SocketChannel.open();
		socketChannel.configureBlocking(false);
		socketChannel.connect(new InetSocketAddress(host, port));
		socketChannel.register(selector, SelectionKey.OP_CONNECT);
	} catch (Exception e) {
		e.printStackTrace();
	}
	//setDaemon(true); TODO uncomment when the other client threads are established
}

public void run() {
	while (true) {
		try {
			selector.select();
			for(SelectionKey selectionKey : selector.selectedKeys()) {
				if (!selectionKey.isValid()) {
					continue;
				}
				if (selectionKey.isConnectable()) {
					socketChannel = (SocketChannel)selectionKey.channel();
					if(socketChannel == null) {
						break;
					}
					socketChannel.finishConnect();
					selectionKey.interestOps(SelectionKey.OP_READ);
					System.out.println("Connection established.");
				} else if (selectionKey.isReadable()) {
					handleIncomingData();
				} 
			}
		} catch(ConnectException e) {
			System.out.println("Cannot connect to server.");
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}

public void disconnect() {
	try {
		socketChannel.close();
		System.out.println("Disconnected from server.");
	} catch (IOException e) {
		e.printStackTrace();
	}
}

public final void handleIncomingData() {
	try {
		if (socketChannel.read(buffers.getInBuffer()) == -1) {
			disconnect();
			return;
		}
		buffers.getInBuffer().flip();
		//data is now here, handle however you want... this just loops and prints each byte
		while (buffers.getInBuffer().hasRemaining()) {
			System.out.println(buffers.getInBuffer().get());
		}
		buffers.getInBuffer().clear();
	} catch (Exception ex) {
		ex.printStackTrace();
		disconnect();
	}
}

public void sendBuffer() {
	buffers.getOutBuffer().flip();
	try {
		socketChannel.write(buffers.getOutBuffer());
	} catch (IOException ex) {
		ex.printStackTrace();
		disconnect();
	}
}

public String getHost() {
	return socketChannel.socket().getInetAddress().getHostAddress();
}

public SocketChannel getSocketChannel() {
	return socketChannel;
}

public BufferUtils getBuffers() {
	return buffers;
}
</code></pre>
<p>}<br>
[/code][code=java]import <a href="http://java.io">java.io</a>.*;<br>
import java.nio.ByteBuffer;</p>
<p>public class BufferUtils {</p>
<pre><code>private ByteBuffer inBuffer = ByteBuffer.allocate(1024);
private ByteBuffer outBuffer = ByteBuffer.allocate(1024);

public void write(byte b) {
	outBuffer.put(b);
}

public void write(byte[] b) {
	outBuffer.put(b);
}

public void writeObject(Object o) {
	try {
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		new ObjectOutputStream(baos).writeObject(o);
		byte[] byteVal = baos.toByteArray();
		write(byteVal);
	} catch (IOException e) {
		e.printStackTrace();
	}
}

public ByteBuffer getInBuffer() {
	return inBuffer;
}

public ByteBuffer getOutBuffer() {
	return outBuffer;
}
</code></pre>
<p>}<br>
[/code]</p>
<p><span class="bbcode-u"><span class="bbcode-b"><br>
Server sided:</span></span></p>
<p>[code=java]import java.io.IOException;<br>
import java.net.InetSocketAddress;<br>
import java.nio.channels.*;</p>
<p>public class Server implements Runnable {</p>
<pre><code>private Selector selector;
private ServerSocketChannel serverSocketChannel;
private boolean running = true;

public Server(int port) {
	try {
		System.out.print("Attempting to start server on port: [" + port + "]... ");
		selector = Selector.open();
		serverSocketChannel = ServerSocketChannel.open();
		serverSocketChannel.configureBlocking(false);
		serverSocketChannel.socket().bind(new InetSocketAddress(port));
		serverSocketChannel.register(selector, SelectionKey.OP_ACCEPT);
		System.out.println("Successfully started!");
	} catch (IOException e) {
		System.out.println("Error starting!");
		e.printStackTrace();
	}
}

@Override
public void run() {
	while (running) {
		try {
			selector.select();
			for (SelectionKey selectionKey : selector.selectedKeys()) {
				if (!selectionKey.isValid()) {
					continue;
				}
				if (selectionKey.isAcceptable()) {
					SocketChannel socket = serverSocketChannel.accept();
					System.out.print("Attempting to accept connection from: [" + socket.socket().getInetAddress() + "]... ");
					socket.configureBlocking(false);
					SelectionKey key = socket.register(selector, SelectionKey.OP_READ);
					PlayerChannel playerChannel = new PlayerChannel((SocketChannel) key.channel());
					key.attach(playerChannel);
					System.out.println("Successfully accepted!");
				} else if (selectionKey.isReadable()) {
					((PlayerChannel)selectionKey.attachment()).handleIncomingData();
				}
			}
		} catch(Exception e) {
			e.printStackTrace();
		}
	}
}

public void setRunning(boolean running) {
	this.running = running;
}
</code></pre>
<p>}[/code]</p>
<p>[code=java]import java.io.IOException;<br>
import java.nio.channels.*;</p>
<p>public class PlayerChannel {</p>
<pre><code>private PlayerBuffers playerBuffers;
private SocketChannel socketChannel;

public PlayerChannel(SocketChannel socketChannel) {
	this.socketChannel = socketChannel;
	this.playerBuffers = new PlayerBuffers();
}

public void disconnect() {
	try {
		socketChannel.close();
		System.out.println("Disconnected.");
	} catch (IOException e) {
		e.printStackTrace();
	}
}

public final void handleIncomingData() {
	try {
		if (socketChannel.read(playerBuffers.getInBuffer()) == -1) {
			disconnect();
			return;
		}
		playerBuffers.getInBuffer().flip();
		//data is now here, handle however you want... this just loops and prints each byte
		while (playerBuffers.getInBuffer().hasRemaining()) {
			System.out.println(playerBuffers.getInBuffer().get());
		}
		playerBuffers.getInBuffer().clear();
	} catch (Exception ex) {
		ex.printStackTrace();
		disconnect();
	}
}

public void sendBuffer() {
	playerBuffers.getOutBuffer().flip();
	try {
		socketChannel.write(playerBuffers.getOutBuffer());
	} catch (IOException ex) {
		ex.printStackTrace();
		disconnect();
	}
}

public SocketChannel getSocketChannel() {
	return socketChannel;
}

public PlayerBuffers getBuffers() {
	return playerBuffers;		
}
</code></pre>
<p>}[/code]</p>
<p>PlayerBuffers is pretty much identical to BufferUtils in the client, have to forgive my naming. This was my first experiment with NIO.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/hows-my-networking/541993/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/hows-my-networking/541993/8</link>
        <pubDate>Thu, 10 Apr 2014 06:40:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-541993-8</guid>
        <source url="https://forum.moparisthebest.com/t/hows-my-networking/541993.rss">Hows my networking?</source>
      </item>
      <item>
        <title>Hows my networking?</title>
        <dc:creator><![CDATA[@CoonHunter CoonHunter]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/coonhunter">@CoonHunter</a> wrote:</p>
          <blockquote>
              <p>Because I’m used to very simple networking, trying to adjust to a more complicated API is just becoming impossible with little time to work at it. Now i would be able to find a client and server that could both read and write strings and ints I could study that but watching a video or tut is impossible with my lack of time</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/hows-my-networking/541993/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/hows-my-networking/541993/7</link>
        <pubDate>Thu, 10 Apr 2014 06:27:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-541993-7</guid>
        <source url="https://forum.moparisthebest.com/t/hows-my-networking/541993.rss">Hows my networking?</source>
      </item>
      <item>
        <title>Hows my networking?</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <p>Why couldn’t you figure out Netty? Their documentation is by far one of the better ones out there for a network application framework.</p>
<p><a href="http://netty.io/4.0/api/index.html" class="onebox" target="_blank" rel="nofollow noopener">http://netty.io/4.0/api/index.html</a><br>
<a href="http://netty.io/wiki/user-guide-for-4.x.html" class="onebox" target="_blank" rel="nofollow noopener">http://netty.io/wiki/user-guide-for-4.x.html</a><br>
<a href="https://github.com/netty/netty/tree/master/example/src/main/java/io/netty/example" class="onebox" target="_blank" rel="nofollow noopener">https://github.com/netty/netty/tree/master/example/src/main/java/io/netty/example</a></p>
<p>Tons of examples and information available directly from Netty.</p>
<p>I’m sure some more decently written tutorials and guides can be found with a few quick searches.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/hows-my-networking/541993/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/hows-my-networking/541993/6</link>
        <pubDate>Wed, 09 Apr 2014 07:52:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-541993-6</guid>
        <source url="https://forum.moparisthebest.com/t/hows-my-networking/541993.rss">Hows my networking?</source>
      </item>
      <item>
        <title>Hows my networking?</title>
        <dc:creator><![CDATA[@CoonHunter CoonHunter]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/coonhunter">@CoonHunter</a> wrote:</p>
          <blockquote>
              <p>[quote=“Pwnd, post:4, topic:541993”][quote author=Pure_ link=topic=660866.msg4418102#msg4418102 date=1396973836]<br>
The API looks dumb, use netty or something.<br>
[/quote]He doesn’t seem to use any of the functionality from JocketSocket anyways…  He just uses it like a regular socket. [/quote]<br>
Using an edited form of the API. Either way the reason I use DataInputStream/DataOutputStream is so that I parse as little data myself as I can. I am horrible when working with bytes (something i’m working on). This was just my first attempt at networking. Before this I always used Davidi2’s old shitty networking from his old chatroom.</p>
<p>Anyways, without some kind of criticism I guess its alright? I mean hell, if you can give me a example how to better use JocketSocket please tell me as I need this to be as speedy as possible. Currently my ‘PC’ is a armhf linux running on a TF101 tablet with a keyboard dock. I notice speed/cpu hogging fast.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/hows-my-networking/541993/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/hows-my-networking/541993/5</link>
        <pubDate>Wed, 09 Apr 2014 07:47:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-541993-5</guid>
        <source url="https://forum.moparisthebest.com/t/hows-my-networking/541993.rss">Hows my networking?</source>
      </item>
      <item>
        <title>Hows my networking?</title>
        <dc:creator><![CDATA[@Pwnd Pwnd]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pwnd">@Pwnd</a> wrote:</p>
          <blockquote>
              <p>[quote=“Pure_, post:3, topic:541993”]The API looks dumb, use netty or something.[/quote]He doesn’t seem to use any of the functionality from JocketSocket anyways…  He just uses it like a regular socket.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/hows-my-networking/541993/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/hows-my-networking/541993/4</link>
        <pubDate>Tue, 08 Apr 2014 18:07:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-541993-4</guid>
        <source url="https://forum.moparisthebest.com/t/hows-my-networking/541993.rss">Hows my networking?</source>
      </item>
      <item>
        <title>Hows my networking?</title>
        <dc:creator><![CDATA[@pure2ownage Pure_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pure2ownage">@pure2ownage</a> wrote:</p>
          <blockquote>
              <p>The API looks dumb, use netty or something.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/hows-my-networking/541993/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/hows-my-networking/541993/3</link>
        <pubDate>Tue, 08 Apr 2014 16:17:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-541993-3</guid>
        <source url="https://forum.moparisthebest.com/t/hows-my-networking/541993.rss">Hows my networking?</source>
      </item>
      <item>
        <title>Hows my networking?</title>
        <dc:creator><![CDATA[@xx_matty_xx Justin Bieber]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xx_matty_xx">@xx_matty_xx</a> wrote:</p>
          <blockquote>
              <p>sockets or jockets</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/hows-my-networking/541993/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/hows-my-networking/541993/2</link>
        <pubDate>Tue, 08 Apr 2014 15:21:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-541993-2</guid>
        <source url="https://forum.moparisthebest.com/t/hows-my-networking/541993.rss">Hows my networking?</source>
      </item>
      <item>
        <title>Hows my networking?</title>
        <dc:creator><![CDATA[@CoonHunter CoonHunter]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/coonhunter">@CoonHunter</a> wrote:</p>
          <blockquote>
              <p>I could never figure out Mina or Netty so I went with the ‘Jocket’ available from github. Runs faster than the regular socket. To it it to work for what I need it to though, I had to make a few changes so that I was able to obtain the IP of the person connecting and such to make it play nicer with a server setup.</p>
<p>Here is my SocketIO class. Please remember, I work at a workplace that leaves me very little personal time to do things like this. Generally only get 15-20 minutes a night. As basic as this is, I just know someone could very quickly improve upon it.</p>
<p>[code]public class SocketIO {<br>
public JocketSocket socket;<br>
public Server server;<br>
public DataInputStream dataInputStream;<br>
public DataOutputStream dataOutputStream;<br>
public final int MAX_CHARS = 300;<br>
public List readQueue = new ArrayList();<br>
public List writeQueue = new ArrayList();</p>
<pre><code>public SocketIO(Server server, JocketSocket socket) {
	this.socket = socket;
	this.server = server;
	try {
		dataInputStream = new DataInputStream(socket.getInputStream());
		dataOutputStream = new DataOutputStream(socket.getOutputStream());
	} catch (Exception e) {
		e.printStackTrace();
	}
}

public void writePacketID(int id) {
	writeInt(id);
}

public void writeInt(int i) {
	try {
		dataOutputStream.writeInt(i);
	} catch (Exception e) {
	}
}

public int readInt() {
	try {
		return dataInputStream.readInt();
	} catch (Exception e) {
		return -1;
	}
}

public void writeString(String s) {
	try {
		dataOutputStream.writeUTF(s);
	} catch (Exception e) {
	}
}

public String readString() {
	try {
		return dataInputStream.readUTF();
	} catch (Exception e) {
		return "";
	}
}
</code></pre>
<p>}<br>
[/code]</p>
<p>How I read packets (called approx 20 times a second) using Grahams oldest Event system.</p>
<pre><code class="lang-auto">		try {
			int packet = userIO.readInt();
			if (packet == -1) {
				destruct();
			} else {
				userIO.parsePackets(packet);
			}
		} catch (Exception e) {
		}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/hows-my-networking/541993/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/hows-my-networking/541993/1</link>
        <pubDate>Tue, 08 Apr 2014 08:07:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-541993-1</guid>
        <source url="https://forum.moparisthebest.com/t/hows-my-networking/541993.rss">Hows my networking?</source>
      </item>
  </channel>
</rss>
