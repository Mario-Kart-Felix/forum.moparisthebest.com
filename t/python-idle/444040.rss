<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Python Idle</title>
    <link>https://forum.moparisthebest.com/t/python-idle/444040</link>
    <description>So, I went through a tutorial online and made myself a Tic-Tac-Toe game in Python. I always get this error when I compile it, yet it&#39;s exactly what the tutorial says.

[code]#Tic Tac Toe

import random

def drawBoard(board):
    # This function prints out the board that was passed.

    # &quot;board&quot; is a list of 10 strings representing the board.
 (ignore index 0)
    print(&#39;  |  |&#39;)
    print(&#39; &#39; + board[7] + &#39; | &#39; + board[8] + &#39; | &#39; + board[9])
    print(&#39;  |  |&#39;)
    print(&#39;-----------&#39;)
    print(&#39;  |  |&#39;)
    print(&#39; &#39; + board[4] + &#39; | &#39; + board[5] + &#39; | &#39; + board[6])
    print(&#39;  |  |&#39;)
    print(&#39;-----------&#39;)
    print(&#39;  |  |&#39;)
    print(&#39; &#39; + board[1] + &#39; | &#39; + baord[2] + &#39; | &#39; + board[3])
    print(&#39;  |  |&#39;)

def inputPlayerLetter():
    #Let&#39;s the player type which letter they want to be
    #returns a list with the players letter as the first item, and the computers
    #letter as the second.
    letter = &#39;&#39;
    while not (letter == &#39;X&#39; or letter == &#39;O&#39;):
        print(&#39;Do you want to be X or 0?&#39;)
        letter = input().upper()

    #the first element in the list is the player&#39;s letter, the second is the
    #computer&#39;s letter.
        if letter == &#39;X&#39;:
            return &#39;computer&#39;
        else:
            return &#39;player&#39;
def playAgain():
    #This function returns true if the player wants to play again, otherwise it
    #returns false.
    print(&#39;Do you want to play again?&#39;)
    return input().lower().startswith(&#39;y&#39;)

def makeMove(board, letter, move):
    board[move] = letter

def isWinner(bo, le):
    #Given a board and a player&#39;s letter, this function returns True if that
    #player has won.
    #We use bo instead of board and le instead of letter so we don&#39;t have to type
    #so much.
    return((bo[7] == le and bo[8] == le and bo[9] == le) or # across the top
    return(bo[1] == le and bo[2] == le and bo[3] == le) or # across the top
    return(bo[4] == le and bo[5] == le and bo[6] == le) or # across the middle
    return(bo[1] == le and bo[4] == le and bo[7] == le) or # down the left side
    return(bo[2] == le and bo[5] == le and bo[8] == le) or # down the middle
    return(bo[3] == le and bo[6] == le and bo[9] == le) or # down the right side
    return(bo[7] == le and bo[5] == le and bo[3] == le) or # diagnol
    return(bo[9] == le and bo[5] == le and bo[1] == le)) # diagnol

def getBoardCopy(board):
    #Make a duplicate of the board list and return it the duplicate.
    dupeBoard = []

    for i in board:
        dupeBoard.append(i)

    return dupeBoard

def isSpaceFree(board, move):
    #Return true if the passed move is free on the passed board.
    return board[move] == &#39; &#39;

def getPlayerMove(board):
    #Let the player type in his move.
    move = &#39; &#39;
    while move not in &#39;1 2 3 4 5 6 7 8 9&#39;.split() or not isSpaceFree(board, int(move)):
    print(&#39;What is your next Move (1-9)&#39;)
    move = input()
    return int(move)

def chooseRandomMoveFromList(board, movesList):
    #Returns a valid move from the passed list on the passed board.
    #Returns none if there is no valid move.
    possibleMoves = []
    from i in movesList:
        if isSpaceFree(board, i):
            possibleMoves.append(i)

    if len(possibleMoves) !=0:
        return random.choice(possibleMoves)
    else:
        return None

def getComputerMove(board, computerLetter):
    #Given a board and the computer&#39;s letter, determine where to move and return the move.
    if computerLetter == &#39;X&#39;:
        playerLetter = &#39;O&#39;
        else:
            playerLetter = &#39;X&#39;

    #Here is our first algorithm for our tic tac toe ai:
    #First, check if we can win in the next move.
    for i in range(1, 10):
        copy = getBoardCopy(board)
        if isSpaceFree(copy, i):
            makeMove(copy, computerLetter, i)
            if isWinner(copy, computerLetter):
                return i

    #Check if the player could win on his next move and block them.
    for i in rnage(1, 10):
        copy = getBoardCopy(board)
        if isSpaceFree(copy, i):
            makeMove(copy, playerLetter, i)
            if isWinner(copy playerLetter):
                return i
    #Try to take one of the corners, if they are free.
    move = chooseRandomMoveFromList(board, [1, 3, 7, 9])
    if move != None:
        return move

    #Try to take the center if it is free.
    if isSpaceFree(board, 5):
        return 5

    #Move on one of the sides.
    return chooseRandomMoveFromList(board, [2, 4, 6, 8])

def isBoardFull(board):
    #return True if every space on the board has been taken.
    #Otherwise return false.
    for i in range(1, 10):
        return False
    return True

print(&#39;Welcome to Tic Tac Toe!&#39;)

while True:
    #reset the board
    theBoard = [&#39; &#39;] * 10
    playerLetter, computerLetter = inputPlayerLetter()
    turn = whoGoesFirst()
    print(&#39;The &#39; + turn + &#39; will go first.&#39;)
    gameisPlaying = True

    while gameisPlaying:
        if turn == &#39;player&#39;:
            #Player&#39;s turn.
            drawBoard(theBoard)
            move = getPlayerMove(theBoard)
            makeMove(theBoard, playerLetter, move)

            if isWinner(theBoard, playerLetter):
                drawBoard(theBoard)
                print(&#39;Horray! You have won the game!&#39;)
                gameIsPlaying = False
            else:
                if isBoardfull(theBoard):
                    drawBoard(theBoard)
                    print(&#39;The game is a tie!&#39;)
                    else:
                        turn = &#39;Computer&#39;
    else:
        #Computer&#39;s turn.
        move = getComputerMove(theBoard, computerLetter)
        makeMove(theBoard, computerLetter, move)

        if isWinner(theBoard, computerLetter)
            drawBoard(theBoard)
            print(&#39;The computer has beaten you! You lose.&#39;)
        else:
            if isBoardFull(theBoard):
                drawBoard(theboard)
                print(&#39;The game is a tie!&#39;)
            else:
                turn = &#39;player&#39;

    if not playAgain():
        break
    
[/code]


[code]Invalid Syntax:
 &quot;index&quot;
[/code]</description>
    
    <lastBuildDate>Wed, 06 Jun 2012 01:52:36 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/python-idle/444040.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Python Idle</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <p>2.7 all the way</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/python-idle/444040/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/python-idle/444040/8</link>
        <pubDate>Wed, 06 Jun 2012 01:52:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-444040-8</guid>
        <source url="https://forum.moparisthebest.com/t/python-idle/444040.rss">Python Idle</source>
      </item>
      <item>
        <title>Python Idle</title>
        <dc:creator><![CDATA[@Xellium Xellium]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xellium">@Xellium</a> wrote:</p>
          <blockquote>
              <p>[quote=“s1gma, post:6, topic:444040”][quote author=Xellium link=topic=546725.msg4008123#msg4008123 date=1338868185]</p>
<p>[quote author=s1gma link=topic=546725.msg4008109#msg4008109 date=1338867844]</p>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<p>remove the</p>
<pre><code class="lang-auto"></code></pre>
<p>on the 9th line</p>
</blockquote>
</aside>
<p>It doesn’t use 0’s though. Is this not necessary for it to work?<br>
[/quote]that part of code is just a comment that got cut off onto the next line. the actual source of it (from <a href="http://inventwithpython.com/chapter10.html" data-bbcode="true" rel="nofollow noopener">here</a>) is</p>
<pre><code class="lang-auto"></code></pre>
<p>which is a comment. so yes, remove it.</p>
</blockquote>
</aside>
<p>I see what I did wrong too, I added more than one return here.</p>
<p>What did I do now?</p>
<p><code>
Traceback (most recent call last):
  File "C:\Users\Zach\Desktop\Tic Tac Toe.py", line 145, in &lt;module&gt;
    playerLetter, computerLetter = inputPlayerLetter()
  File "C:\Users\Zach\Desktop\Tic Tac Toe.py", line 27, in inputPlayerLetter
    letter = input().upper()
  File "&lt;string&gt;", line 1, in &lt;module&gt;
NameError: name 'O' is not defined</code><br>
[/quote]this confused me too. turns out, the code only works with python3 as opposed to python2 (which you’re using). i suggest downloading python3 from <a href="http://www.python.org/" rel="nofollow noopener">http://www.python.org/</a> and trying the same code again[/quote]</p>
<p>[code]Welcome to Tic Tac Toe!<br>
Do you want to be X or O?<br>
O<br>
The computer will go first.<br>
|   |<br>
|   | X</p>
<div class="md-table">
<table>
<thead>
<tr>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
</tr>
<tr>
<td></td>
</tr>
<tr>
<td></td>
</tr>
</tbody>
</table>
</div><hr>
<p>|   |<br>
|   |<br>
|   |<br>
What is your next move? (1-9)<br>
X3<br>
What is your next move? (1-9)<br>
3<br>
|   |<br>
|   | X</p>
<div class="md-table">
<table>
<thead>
<tr>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
</tr>
<tr>
<td></td>
</tr>
<tr>
<td></td>
</tr>
</tbody>
</table>
</div><hr>
<p>|   |<br>
X |   | O<br>
|   |<br>
What is your next move? (1-9)<br>
5<br>
|   |<br>
X |   | X</p>
<div class="md-table">
<table>
<thead>
<tr>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
</tr>
<tr>
<td>O</td>
</tr>
<tr>
<td></td>
</tr>
</tbody>
</table>
</div><hr>
<p>|   |<br>
X |   | O<br>
|   |<br>
What is your next move? (1-9)<br>
7<br>
What is your next move? (1-9)<br>
8<br>
|   |<br>
X | O | X</p>
<div class="md-table">
<table>
<thead>
<tr>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
</tr>
<tr>
<td>X</td>
</tr>
<tr>
<td></td>
</tr>
</tbody>
</table>
</div><hr>
<p>|   |<br>
X |   | O<br>
|   |<br>
The computer has beaten you! You lose.<br>
Do you want to play again? (yes or no)[/code]</p>
<p>Thanks, that fixed it. The computer is hard to beat though.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/python-idle/444040/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/python-idle/444040/7</link>
        <pubDate>Tue, 05 Jun 2012 11:43:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-444040-7</guid>
        <source url="https://forum.moparisthebest.com/t/python-idle/444040.rss">Python Idle</source>
      </item>
      <item>
        <title>Python Idle</title>
        <dc:creator><![CDATA[@_s11 s1gma]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_s11">@_s11</a> wrote:</p>
          <blockquote>
              <p>[quote=“Xellium, post:5, topic:444040”][quote author=s1gma link=topic=546725.msg4008109#msg4008109 date=1338867844]</p>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<p>remove the</p>
<pre><code class="lang-auto"></code></pre>
<p>on the 9th line</p>
</blockquote>
</aside>
<p>It doesn’t use 0’s though. Is this not necessary for it to work?<br>
[/quote]that part of code is just a comment that got cut off onto the next line. the actual source of it (from <a href="http://inventwithpython.com/chapter10.html" data-bbcode="true" rel="nofollow noopener">here</a>) is</p>
<pre><code class="lang-auto"></code></pre>
<p>which is a comment. so yes, remove it.</p>
</blockquote>
</aside>
<p>I see what I did wrong too, I added more than one return here.</p>
<p>What did I do now?</p>
<p><code>
Traceback (most recent call last):
  File "C:\Users\Zach\Desktop\Tic Tac Toe.py", line 145, in &lt;module&gt;
    playerLetter, computerLetter = inputPlayerLetter()
  File "C:\Users\Zach\Desktop\Tic Tac Toe.py", line 27, in inputPlayerLetter
    letter = input().upper()
  File "&lt;string&gt;", line 1, in &lt;module&gt;
NameError: name 'O' is not defined</code>[/quote]this confused me too. turns out, the code only works with python3 as opposed to python2 (which you’re using). i suggest downloading python3 from <a href="http://www.python.org/" rel="nofollow noopener">http://www.python.org/</a> and trying the same code again</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/python-idle/444040/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/python-idle/444040/6</link>
        <pubDate>Tue, 05 Jun 2012 03:59:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-444040-6</guid>
        <source url="https://forum.moparisthebest.com/t/python-idle/444040.rss">Python Idle</source>
      </item>
      <item>
        <title>Python Idle</title>
        <dc:creator><![CDATA[@Xellium Xellium]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xellium">@Xellium</a> wrote:</p>
          <blockquote>
              <p>[quote=“s1gma, post:4, topic:444040”][quote author=Xellium link=topic=546725.msg4008094#msg4008094 date=1338867320]</p>
<aside class="quote">
<blockquote>
<p>remove the</p>
<pre><code class="lang-auto"></code></pre>
<p>on the 9th line</p>
</blockquote>
</aside>
<p>It doesn’t use 0’s though. Is this not necessary for it to work?<br>
[/quote]that part of code is just a comment that got cut off onto the next line. the actual source of it (from <a href="http://inventwithpython.com/chapter10.html" data-bbcode="true" rel="nofollow noopener">here</a>) is</p>
<pre><code class="lang-auto"></code></pre>
<p>which is a comment. so yes, remove it.[/quote]</p>
<p>I see what I did wrong too, I added more than one return here.</p>
<p>What did I do now?</p>
<p><code>
Traceback (most recent call last):
  File "C:\Users\Zach\Desktop\Tic Tac Toe.py", line 145, in &lt;module&gt;
    playerLetter, computerLetter = inputPlayerLetter()
  File "C:\Users\Zach\Desktop\Tic Tac Toe.py", line 27, in inputPlayerLetter
    letter = input().upper()
  File "&lt;string&gt;", line 1, in &lt;module&gt;
NameError: name 'O' is not defined</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/python-idle/444040/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/python-idle/444040/5</link>
        <pubDate>Tue, 05 Jun 2012 03:49:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-444040-5</guid>
        <source url="https://forum.moparisthebest.com/t/python-idle/444040.rss">Python Idle</source>
      </item>
      <item>
        <title>Python Idle</title>
        <dc:creator><![CDATA[@_s11 s1gma]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_s11">@_s11</a> wrote:</p>
          <blockquote>
              <p>[quote=“Xellium, post:3, topic:444040”][quote author=s1gma link=topic=546725.msg4008093#msg4008093 date=1338867242]<br>
remove the</p>
<pre><code class="lang-auto"></code></pre>
<p>on the 9th line<br>
[/quote]</p>
<p>It doesn’t use 0’s though. Is this not necessary for it to work?[/quote]that part of code is just a comment that got cut off onto the next line. the actual source of it (from <a href="http://inventwithpython.com/chapter10.html" data-bbcode="true" rel="nofollow noopener">here</a>) is</p>
<pre><code class="lang-auto"></code></pre>
<p>which is a comment. so yes, remove it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/python-idle/444040/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/python-idle/444040/4</link>
        <pubDate>Tue, 05 Jun 2012 03:44:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-444040-4</guid>
        <source url="https://forum.moparisthebest.com/t/python-idle/444040.rss">Python Idle</source>
      </item>
      <item>
        <title>Python Idle</title>
        <dc:creator><![CDATA[@Xellium Xellium]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xellium">@Xellium</a> wrote:</p>
          <blockquote>
              <p>[quote=“s1gma, post:2, topic:444040”]remove the</p>
<pre><code class="lang-auto"></code></pre>
<p>on the 9th line[/quote]</p>
<p>It doesn’t use 0’s though. Is this not necessary for it to work?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/python-idle/444040/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/python-idle/444040/3</link>
        <pubDate>Tue, 05 Jun 2012 03:35:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-444040-3</guid>
        <source url="https://forum.moparisthebest.com/t/python-idle/444040.rss">Python Idle</source>
      </item>
      <item>
        <title>Python Idle</title>
        <dc:creator><![CDATA[@_s11 s1gma]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_s11">@_s11</a> wrote:</p>
          <blockquote>
              <p>remove the</p>
<pre><code class="lang-auto"></code></pre>
<p>on the 9th line</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/python-idle/444040/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/python-idle/444040/2</link>
        <pubDate>Tue, 05 Jun 2012 03:34:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-444040-2</guid>
        <source url="https://forum.moparisthebest.com/t/python-idle/444040.rss">Python Idle</source>
      </item>
      <item>
        <title>Python Idle</title>
        <dc:creator><![CDATA[@Xellium Xellium]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xellium">@Xellium</a> wrote:</p>
          <blockquote>
              <p>So, I went through a tutorial online and made myself a Tic-Tac-Toe game in Python. I always get this error when I compile it, yet it’s exactly what the tutorial says.</p>
<p>[code]<span class="hashtag">#Tic</span> Tac Toe</p>
<p>import random</p>
<p>def drawBoard(board):<br>
# This function prints out the board that was passed.</p>
<pre><code># "board" is a list of 10 strings representing the board.
</code></pre>
<p>(ignore index 0)<br>
print(’  |  |’)<br>
print(’ ’ + board[7] + ’ | ’ + board[8] + ’ | ’ + board[9])<br>
print(’  |  |’)<br>
print(’-----------’)<br>
print(’  |  |’)<br>
print(’ ’ + board[4] + ’ | ’ + board[5] + ’ | ’ + board[6])<br>
print(’  |  |’)<br>
print(’-----------’)<br>
print(’  |  |’)<br>
print(’ ’ + board[1] + ’ | ’ + baord[2] + ’ | ’ + board[3])<br>
print(’  |  |’)</p>
<p>def inputPlayerLetter():<br>
<span class="hashtag">#Let</span>’s the player type which letter they want to be<br>
<span class="hashtag">#returns</span> a list with the players letter as the first item, and the computers<br>
<span class="hashtag">#letter</span> as the second.<br>
letter = ‘’<br>
while not (letter == ‘X’ or letter == ‘O’):<br>
print(‘Do you want to be X or 0?’)<br>
letter = input().upper()</p>
<pre><code>#the first element in the list is the player's letter, the second is the
#computer's letter.
    if letter == 'X':
        return 'computer'
    else:
        return 'player'
</code></pre>
<p>def playAgain():<br>
<span class="hashtag">#This</span> function returns true if the player wants to play again, otherwise it<br>
<span class="hashtag">#returns</span> false.<br>
print(‘Do you want to play again?’)<br>
return input().lower().startswith(‘y’)</p>
<p>def makeMove(board, letter, move):<br>
board[move] = letter</p>
<p>def isWinner(bo, le):<br>
<span class="hashtag">#Given</span> a board and a player’s letter, this function returns True if that<br>
<span class="hashtag">#player</span> has won.<br>
<span class="hashtag">#We</span> use bo instead of board and le instead of letter so we don’t have to type<br>
<span class="hashtag">#so</span> much.<br>
return((bo[7] == le and bo[8] == le and bo[9] == le) or # across the top<br>
return(bo[1] == le and bo[2] == le and bo[3] == le) or # across the top<br>
return(bo[4] == le and bo[5] == le and bo[6] == le) or # across the middle<br>
return(bo[1] == le and bo[4] == le and bo[7] == le) or # down the left side<br>
return(bo[2] == le and bo[5] == le and bo[8] == le) or # down the middle<br>
return(bo[3] == le and bo[6] == le and bo[9] == le) or # down the right side<br>
return(bo[7] == le and bo[5] == le and bo[3] == le) or # diagnol<br>
return(bo[9] == le and bo[5] == le and bo[1] == le)) # diagnol</p>
<p>def getBoardCopy(board):<br>
<span class="hashtag">#Make</span> a duplicate of the board list and return it the duplicate.<br>
dupeBoard = []</p>
<pre><code>for i in board:
    dupeBoard.append(i)

return dupeBoard
</code></pre>
<p>def isSpaceFree(board, move):<br>
<span class="hashtag">#Return</span> true if the passed move is free on the passed board.<br>
return board[move] == ’ ’</p>
<p>def getPlayerMove(board):<br>
<span class="hashtag">#Let</span> the player type in his move.<br>
move = ’ ’<br>
while move not in ‘1 2 3 4 5 6 7 8 9’.split() or not isSpaceFree(board, int(move)):<br>
print(‘What is your next Move (1-9)’)<br>
move = input()<br>
return int(move)</p>
<p>def chooseRandomMoveFromList(board, movesList):<br>
<span class="hashtag">#Returns</span> a valid move from the passed list on the passed board.<br>
<span class="hashtag">#Returns</span> none if there is no valid move.<br>
possibleMoves = []<br>
from i in movesList:<br>
if isSpaceFree(board, i):<br>
possibleMoves.append(i)</p>
<pre><code>if len(possibleMoves) !=0:
    return random.choice(possibleMoves)
else:
    return None
</code></pre>
<p>def getComputerMove(board, computerLetter):<br>
<span class="hashtag">#Given</span> a board and the computer’s letter, determine where to move and return the move.<br>
if computerLetter == ‘X’:<br>
playerLetter = ‘O’<br>
else:<br>
playerLetter = ‘X’</p>
<pre><code>#Here is our first algorithm for our tic tac toe ai:
#First, check if we can win in the next move.
for i in range(1, 10):
    copy = getBoardCopy(board)
    if isSpaceFree(copy, i):
        makeMove(copy, computerLetter, i)
        if isWinner(copy, computerLetter):
            return i

#Check if the player could win on his next move and block them.
for i in rnage(1, 10):
    copy = getBoardCopy(board)
    if isSpaceFree(copy, i):
        makeMove(copy, playerLetter, i)
        if isWinner(copy playerLetter):
            return i
#Try to take one of the corners, if they are free.
move = chooseRandomMoveFromList(board, [1, 3, 7, 9])
if move != None:
    return move

#Try to take the center if it is free.
if isSpaceFree(board, 5):
    return 5

#Move on one of the sides.
return chooseRandomMoveFromList(board, [2, 4, 6, 8])
</code></pre>
<p>def isBoardFull(board):<br>
<span class="hashtag">#return</span> True if every space on the board has been taken.<br>
<span class="hashtag">#Otherwise</span> return false.<br>
for i in range(1, 10):<br>
return False<br>
return True</p>
<p>print(‘Welcome to Tic Tac Toe!’)</p>
<p>while True:<br>
<span class="hashtag">#reset</span> the board<br>
theBoard = [’ '] * 10<br>
playerLetter, computerLetter = inputPlayerLetter()<br>
turn = whoGoesFirst()<br>
print(‘The ’ + turn + ’ will go first.’)<br>
gameisPlaying = True</p>
<pre><code>while gameisPlaying:
    if turn == 'player':
        #Player's turn.
        drawBoard(theBoard)
        move = getPlayerMove(theBoard)
        makeMove(theBoard, playerLetter, move)

        if isWinner(theBoard, playerLetter):
            drawBoard(theBoard)
            print('Horray! You have won the game!')
            gameIsPlaying = False
        else:
            if isBoardfull(theBoard):
                drawBoard(theBoard)
                print('The game is a tie!')
                else:
                    turn = 'Computer'
else:
    #Computer's turn.
    move = getComputerMove(theBoard, computerLetter)
    makeMove(theBoard, computerLetter, move)

    if isWinner(theBoard, computerLetter)
        drawBoard(theBoard)
        print('The computer has beaten you! You lose.')
    else:
        if isBoardFull(theBoard):
            drawBoard(theboard)
            print('The game is a tie!')
        else:
            turn = 'player'

if not playAgain():
    break
</code></pre>
<p>[/code]</p>
<p><code>Invalid Syntax:
 "index"
</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/python-idle/444040/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/python-idle/444040/1</link>
        <pubDate>Tue, 05 Jun 2012 03:20:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-444040-1</guid>
        <source url="https://forum.moparisthebest.com/t/python-idle/444040.rss">Python Idle</source>
      </item>
  </channel>
</rss>
