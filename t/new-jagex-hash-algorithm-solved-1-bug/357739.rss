<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>New Jagex hash algorithm solved (1 bug)</title>
    <link>https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739</link>
    <description>Well most of you may know of the Jagex string hash algorithm (implementation is decode(long))

Currently the only problem with this is if you have characters in the same hash that are far apart (ex: &quot;aZ&quot;)

For testing your fix attempts please use &quot;aZ0&quot;, and make sure you share your findings!

I suggest taking time to understand the algorithm and how this reverses it before making an output to the code or this topic.

Once you have understood this you will probably notice that the problem lies within rem(long)

I hope by me sharing this that it will produce the solution.

Notice: This code contains NO documentation or variable naming.

(Some of you may know the hash implementation as follows)

[code]
public static int hash(String s)
{
    int n = 0;
    //Note: n &lt;&lt; 5 - n = n * 31
    for (int n1 = 0; n1 &lt; s.length(); n1++)
        n = n &lt;&lt; 5 - n + s.charAt(s); //sometimes n = n &lt;&lt; 5 - (n - s.charAt(s));

    return n;
}
[/code]

Author: joe.melsha@live.com &amp; super_ for describing it + discussion

[code]

public final class Main
{
	private Main()
	{
	}

	private static long encode(String s)
	{
		long l = 0L;
		for (int n = 0; n != s.length(); ++n)
		{
			long l1 = l;
			l *= 31L;
			System.out.println(&quot;l = &quot; + format(l1) + &quot; * &quot; + format(31L) + &quot; = &quot; + format(l));
			l1 = l;
			l += (long) s.charAt(n);
			System.out.println(&quot;l = &quot; + format(l1) + &quot; + &quot; + format((long) s.charAt(n)) + &quot; = &quot; + format(l));
		}

		return l;
	}

	private static String decode(int n)
	{
		return decode((long) n &amp; 0xffffffffL);
	}

	private static String decode(long l)
	{
		data(l);
		int n = len(l);
		char[] c = new char[n];
		while (n != 0)
		{
			int n1 = rem(l) * 31 + (int) (l % 31L);
			System.out.println(&quot;n1 = &quot; + format(rem(l)) + &quot; * &quot; + format(31L) + &quot; + &quot; + format((int) (l % 31L)) + &quot;  = &quot; + format(n1));
			long l1 = l;
			l = (l - (long) n1) / 31L;
			System.out.println(&quot;l = (&quot; + format(l1) + &quot; - &quot; + format((long) n1) + &quot;) / &quot; + format(31) + &quot; = &quot; + format(l));
			c[--n] = (char) n1;
		}
		return new String(c, 0, c.length);
	}

	private static int len(long l)
	{
		int n = 0;
		while (l &gt; 31)
		{
			++n;
			l /= 31L;
		}
		return n;
	}

	private static int rem(long l)
	{
		while (l &gt; 31L)
			l /= 31L;

		return (int) l;
	}

	private static String format(long l)
	{
		return Long.toString(l);//format(Long.toString(l), 5, &#39; &#39;, true);
	}

	private static void data(long l)
	{
		long[] n = new long[0];
		long[] n1 = new long[0];
		while (l &gt; 0L)
		{
			n = append(l % 31L, n);
			n1 = append(l, n1);
			l /= 31L;
		}
		System.out.println(&quot;mods: &quot; + java.util.Arrays.toString(n));
		System.out.println(&quot;rems: &quot; + java.util.Arrays.toString(n1));
		System.out.println();
	}

	private static long[] append(long l, long[] n)
	{
		int t = n.length;
		long[] n1 = new long[1 + t];
		n1[t] = l;
		System.arraycopy(n, 0, n1, 0, t);
		return n1;
	}

	private static String format(String s, int n, char c, boolean b)
	{
		if (s.length() &gt;= n)
			return s;

		char[] h = new char[n];
		if (b)
		{
			for (int n1 = n - s.length(); n1 != 0; h[--n1] = c);

			for (int n1 = s.length(); n1 != 0; h[--n] = s.charAt(--n1));

		}
		else
		{
			for (int n1 = n - s.length(); n1 != n; h[n1++] = c);

			for (int n1 = s.length(); n1 != 0; h[--n1] = s.charAt(n1));

		}
		return new String(h, 0, h.length);
	}

	public static void main(String[] s) throws Throwable
	{
		String t = &quot;super_&quot;;//&quot;aZ0&quot;;
		System.out.println(&quot;encode(\&quot;&quot; + t + &quot;\&quot;)&quot;);
		System.out.println();
		long l = encode(t);// &amp; 0x7fffffffL;
		System.out.println();
		System.out.println(&quot;decode(&quot; + l + &quot;)&quot;);
		System.out.println();
		String t1 = decode(l);
		System.out.println();
		System.out.println(t + &quot; : &quot; + l + &quot; : &quot; + t1);
	}
}

[/code]

Looking forward to your contributions!</description>
    
    <lastBuildDate>Wed, 01 Sep 2010 21:34:27 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>New Jagex hash algorithm solved (1 bug)</title>
        <dc:creator><![CDATA[@lawl lawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lawl">@lawl</a> wrote:</p>
          <blockquote>
              <p>wtf fail quote</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/16</link>
        <pubDate>Wed, 01 Sep 2010 21:34:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357739-16</guid>
        <source url="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739.rss">New Jagex hash algorithm solved (1 bug)</source>
      </item>
      <item>
        <title>New Jagex hash algorithm solved (1 bug)</title>
        <dc:creator><![CDATA[@pplsuqbawlz pplsuqbawlz]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pplsuqbawlz">@pplsuqbawlz</a> wrote:</p>
          <blockquote>
              <p>[quote=“c|p, post:14, topic:357739”][quote author=angel in war link=topic=454251.msg3329442#msg3329442 date=1283369468]<br>
But it is correct if I used it for that intent.</p>
<p>I mean, it’s not like comparing two strings, it is convention correct?<br>
[/quote]</p>
<p>WTF SHUT THIS COMMUNITY DOWN.</p>
<p>n *= x + y would end up as n = n * (x + y)[/quote]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/15</link>
        <pubDate>Wed, 01 Sep 2010 20:33:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357739-15</guid>
        <source url="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739.rss">New Jagex hash algorithm solved (1 bug)</source>
      </item>
      <item>
        <title>New Jagex hash algorithm solved (1 bug)</title>
        <dc:creator><![CDATA[@Cheese_Police c|p]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cheese_police">@Cheese_Police</a> wrote:</p>
          <blockquote>
              <p>[quote=“angel in war, post:13, topic:357739”]But it is correct if I used it for that intent.</p>
<p>I mean, it’s not like comparing two strings, it is convention correct?[/quote]</p>
<p>n *= x + y would end up as n = n * (x + y)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/14</link>
        <pubDate>Wed, 01 Sep 2010 19:36:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357739-14</guid>
        <source url="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739.rss">New Jagex hash algorithm solved (1 bug)</source>
      </item>
      <item>
        <title>New Jagex hash algorithm solved (1 bug)</title>
        <dc:creator><![CDATA[@angel_in_war angel in war]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/angel_in_war">@angel_in_war</a> wrote:</p>
          <blockquote>
              <p>But it is correct if I used it for that intent.</p>
<p>I mean, it’s not like comparing two strings, it is convention correct?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/13</link>
        <pubDate>Wed, 01 Sep 2010 19:31:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357739-13</guid>
        <source url="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739.rss">New Jagex hash algorithm solved (1 bug)</source>
      </item>
      <item>
        <title>New Jagex hash algorithm solved (1 bug)</title>
        <dc:creator><![CDATA[@Cheese_Police c|p]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cheese_police">@Cheese_Police</a> wrote:</p>
          <blockquote>
              <p>[quote=“angel in war, post:11, topic:357739”]A question although this is irrelevent.</p>
<p>frank_<br>
hash = hash * 10 + 2 //add 2, hash = 2</p>
<p>why not use hash *= 10 + 2<br>
is dat bad?[/quote]</p>
<p>n * (x + y) is different than (n * x) + y</p>
<p>i dont see why you brought it up, though…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/12</link>
        <pubDate>Wed, 01 Sep 2010 19:23:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357739-12</guid>
        <source url="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739.rss">New Jagex hash algorithm solved (1 bug)</source>
      </item>
      <item>
        <title>New Jagex hash algorithm solved (1 bug)</title>
        <dc:creator><![CDATA[@angel_in_war angel in war]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/angel_in_war">@angel_in_war</a> wrote:</p>
          <blockquote>
              <p>A question although this is irrelevent.</p>
<p>frank_<br>
hash = hash * 10 + 2 //add 2, hash = 2</p>
<p>why not use hash *= 10 + 2<br>
is dat bad?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/11</link>
        <pubDate>Wed, 01 Sep 2010 19:07:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357739-11</guid>
        <source url="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739.rss">New Jagex hash algorithm solved (1 bug)</source>
      </item>
      <item>
        <title>New Jagex hash algorithm solved (1 bug)</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>It’s just semantics I guess.  But a HASH is one-way and shouldn’t be able to be reversed, however if it is just an encoding then you can decode it, so make sure you pick your names correctly.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/10</link>
        <pubDate>Wed, 01 Sep 2010 04:09:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357739-10</guid>
        <source url="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739.rss">New Jagex hash algorithm solved (1 bug)</source>
      </item>
      <item>
        <title>New Jagex hash algorithm solved (1 bug)</title>
        <dc:creator><![CDATA[@the_bank the bank]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_bank">@the_bank</a> wrote:</p>
          <blockquote>
              <p><span class="mention">@frank_</span><br>
I see what you are saying.  How would you recommend going about this then?</p>
<p>Also:</p>
<p>[quote=“abraham2119, post:2, topic:357739”]killer-99</p>
<p>ban please, thanks[/quote]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/9</link>
        <pubDate>Mon, 30 Aug 2010 20:55:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357739-9</guid>
        <source url="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739.rss">New Jagex hash algorithm solved (1 bug)</source>
      </item>
      <item>
        <title>New Jagex hash algorithm solved (1 bug)</title>
        <dc:creator><![CDATA[@novalyze novalyze]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/novalyze">@novalyze</a> wrote:</p>
          <blockquote>
              <p>why are you so pessimistic?</p>
<p>I posted this to allow more people to help correct it.</p>
<p>Your example is incorrect and poorly represents my topic, it should be:</p>
<p>I cured cancer, but it only works if your white.</p>
<p>JUST AN EXAMPLE.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/8</link>
        <pubDate>Mon, 30 Aug 2010 20:36:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357739-8</guid>
        <source url="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739.rss">New Jagex hash algorithm solved (1 bug)</source>
      </item>
      <item>
        <title>New Jagex hash algorithm solved (1 bug)</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>you cant</p>
<p>guys i cured cancer, theres one bug though, my medicine doesnt cure cancer</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/7</link>
        <pubDate>Mon, 30 Aug 2010 20:25:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357739-7</guid>
        <source url="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739.rss">New Jagex hash algorithm solved (1 bug)</source>
      </item>
      <item>
        <title>New Jagex hash algorithm solved (1 bug)</title>
        <dc:creator><![CDATA[@novalyze novalyze]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/novalyze">@novalyze</a> wrote:</p>
          <blockquote>
              <p>It works because rem(long) returns the amount of 31’s “hidden” in the first char which has similar to the rest, and that is why my method works for strings that contain the same case chars (chars that are less than 31 apart)</p>
<p>The problem is that I do not know a way to calculate the amount of “hidden” 31’s in the numbers for the last char, if someone could present to me a way to overcome this then please do so.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/6</link>
        <pubDate>Mon, 30 Aug 2010 20:15:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357739-6</guid>
        <source url="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739.rss">New Jagex hash algorithm solved (1 bug)</source>
      </item>
      <item>
        <title>New Jagex hash algorithm solved (1 bug)</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>your rem function is stupid and doesnt do anything of use, it only works because your chosen input lies in the same block of 31</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/5</link>
        <pubDate>Mon, 30 Aug 2010 12:53:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357739-5</guid>
        <source url="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739.rss">New Jagex hash algorithm solved (1 bug)</source>
      </item>
      <item>
        <title>New Jagex hash algorithm solved (1 bug)</title>
        <dc:creator><![CDATA[@novalyze novalyze]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/novalyze">@novalyze</a> wrote:</p>
          <blockquote>
              <p>+1 for effort</p>
<p>Your example displays a different loss of information which is due to MOD. The loss of information here is do to a predictable alignment loss.</p>
<p>Example:</p>
<p>char1 = ‘T’ (84)<br>
char2 = ‘R’ (82)<br>
char3 = ‘O’ (79)<br>
char4 = ‘L’ (76)<br>
char5 = ‘L’ (76)</p>
<p>Encoding:</p>
<p>hash = 0;<br>
//i 0<br>
hash *= 31; //obviously 0<br>
hash += 84; // char1 = ‘T’<br>
//i 1<br>
hash *= 31;<br>
hash += 82; // char2 = ‘R’<br>
//i 2<br>
hash *= 31;<br>
hash += 79; // char3 = ‘O’<br>
//i 3<br>
hash *= 31;<br>
hash += 76; //char4 = ‘L’<br>
//i 4<br>
hash *= 31;<br>
hash += 76; //char5 = ‘L’</p>
<p>hash == 80096977</p>
<p>okay lets start the reversion process:</p>
<p>//rem(80096977) =<br>
//{<br>
80096977 / 31 = 2583773<br>
2583773 / 31 = 83347<br>
83347 / 31 = 2688<br>
2688 / 31 = 86<br>
86 / 31 = 2<br>
//return 2; // 2 = rem(80096977)<br>
//}</p>
<p>okay so take 2 multiply it by 31 and you get 62, now do 80096977 mod 31 and you get 14</p>
<p>14 + 62 = 76 = char5 = ‘L’</p>
<p>Now do (80096977 - 76) / 31 = 2583771</p>
<p>2583771 % 31 = 14</p>
<p>14 + 62 = 76 = char4 = ‘L’</p>
<p>and then again do (2583771 - 76) / 31 = 83345</p>
<p>83345 % 31 = 17</p>
<p>17 + 62 = 79 = char3 = ‘O’</p>
<p>And SO ON.</p>
<p>Happy TROLLing.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/4</link>
        <pubDate>Mon, 30 Aug 2010 12:33:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357739-4</guid>
        <source url="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739.rss">New Jagex hash algorithm solved (1 bug)</source>
      </item>
      <item>
        <title>New Jagex hash algorithm solved (1 bug)</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>super doesnt understand why you cannot reverse the hashes in this manner, so i would ignore any advice he gives</p>
<p>the encoding algorithm is basically base31 encoding, but values entered are almost always over 31</p>
<p>using base10 for clarity<br>
hash = 0<br>
hash = hash * 10 + 2 //add 2, hash = 2<br>
hash = hash * 10 + 2 //add 2, hash = 22<br>
which is fine for reversing, but now using values greater than the base…<br>
hash = 0<br>
hash = hash * 10 + 1 //add 1, hash = 1<br>
hash = hash * 10 + 12 //add 12, hash = 22<br>
you can see the 12 has caused a collision, which means it is impossible to know if 2,2 or 1,12 was inserted</p>
<p>your mod() method seems to get the value carried for the first char, if the int hasnt overflowed. what purpose does this serve?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/3</link>
        <pubDate>Mon, 30 Aug 2010 11:05:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357739-3</guid>
        <source url="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739.rss">New Jagex hash algorithm solved (1 bug)</source>
      </item>
      <item>
        <title>New Jagex hash algorithm solved (1 bug)</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>killer-99</p>
<p>ban please, thanks</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/2</link>
        <pubDate>Mon, 30 Aug 2010 06:28:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357739-2</guid>
        <source url="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739.rss">New Jagex hash algorithm solved (1 bug)</source>
      </item>
      <item>
        <title>New Jagex hash algorithm solved (1 bug)</title>
        <dc:creator><![CDATA[@novalyze novalyze]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/novalyze">@novalyze</a> wrote:</p>
          <blockquote>
              <p>Well most of you may know of the Jagex string hash algorithm (implementation is decode(long))</p>
<p>Currently the only problem with this is if you have characters in the same hash that are far apart (ex: “aZ”)</p>
<p>For testing your fix attempts please use “aZ0”, and make sure you share your findings!</p>
<p>I suggest taking time to understand the algorithm and how this reverses it before making an output to the code or this topic.</p>
<p>Once you have understood this you will probably notice that the problem lies within rem(long)</p>
<p>I hope by me sharing this that it will produce the solution.</p>
<p>Notice: This code contains NO documentation or variable naming.</p>
<p>(Some of you may know the hash implementation as follows)</p>
<pre><code class="lang-auto">public static int hash(String s)
{
    int n = 0;
    //Note: n &lt;&lt; 5 - n = n * 31
    for (int n1 = 0; n1 &lt; s.length(); n1++)
        n = n &lt;&lt; 5 - n + s.charAt(s); //sometimes n = n &lt;&lt; 5 - (n - s.charAt(s));

    return n;
}</code></pre>
<p>Author: <a href="mailto:joe.melsha@live.com">joe.melsha@live.com</a> &amp; super_ for describing it + discussion</p>
<pre><code class="lang-auto">
public final class Main
{
	private Main()
	{
	}

	private static long encode(String s)
	{
		long l = 0L;
		for (int n = 0; n != s.length(); ++n)
		{
			long l1 = l;
			l *= 31L;
			System.out.println("l = " + format(l1) + " * " + format(31L) + " = " + format(l));
			l1 = l;
			l += (long) s.charAt(n);
			System.out.println("l = " + format(l1) + " + " + format((long) s.charAt(n)) + " = " + format(l));
		}

		return l;
	}

	private static String decode(int n)
	{
		return decode((long) n &amp; 0xffffffffL);
	}

	private static String decode(long l)
	{
		data(l);
		int n = len(l);
		char[] c = new char[n];
		while (n != 0)
		{
			int n1 = rem(l) * 31 + (int) (l % 31L);
			System.out.println("n1 = " + format(rem(l)) + " * " + format(31L) + " + " + format((int) (l % 31L)) + "  = " + format(n1));
			long l1 = l;
			l = (l - (long) n1) / 31L;
			System.out.println("l = (" + format(l1) + " - " + format((long) n1) + ") / " + format(31) + " = " + format(l));
			c[--n] = (char) n1;
		}
		return new String(c, 0, c.length);
	}

	private static int len(long l)
	{
		int n = 0;
		while (l &gt; 31)
		{
			++n;
			l /= 31L;
		}
		return n;
	}

	private static int rem(long l)
	{
		while (l &gt; 31L)
			l /= 31L;

		return (int) l;
	}

	private static String format(long l)
	{
		return Long.toString(l);//format(Long.toString(l), 5, ' ', true);
	}

	private static void data(long l)
	{
		long[] n = new long[0];
		long[] n1 = new long[0];
		while (l &gt; 0L)
		{
			n = append(l % 31L, n);
			n1 = append(l, n1);
			l /= 31L;
		}
		System.out.println("mods: " + java.util.Arrays.toString(n));
		System.out.println("rems: " + java.util.Arrays.toString(n1));
		System.out.println();
	}

	private static long[] append(long l, long[] n)
	{
		int t = n.length;
		long[] n1 = new long[1 + t];
		n1[t] = l;
		System.arraycopy(n, 0, n1, 0, t);
		return n1;
	}

	private static String format(String s, int n, char c, boolean b)
	{
		if (s.length() &gt;= n)
			return s;

		char[] h = new char[n];
		if (b)
		{
			for (int n1 = n - s.length(); n1 != 0; h[--n1] = c);

			for (int n1 = s.length(); n1 != 0; h[--n] = s.charAt(--n1));

		}
		else
		{
			for (int n1 = n - s.length(); n1 != n; h[n1++] = c);

			for (int n1 = s.length(); n1 != 0; h[--n1] = s.charAt(n1));

		}
		return new String(h, 0, h.length);
	}

	public static void main(String[] s) throws Throwable
	{
		String t = "super_";//"aZ0";
		System.out.println("encode(\"" + t + "\")");
		System.out.println();
		long l = encode(t);// &amp; 0x7fffffffL;
		System.out.println();
		System.out.println("decode(" + l + ")");
		System.out.println();
		String t1 = decode(l);
		System.out.println();
		System.out.println(t + " : " + l + " : " + t1);
	}
}
</code></pre>
<p>Looking forward to your contributions!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739/1</link>
        <pubDate>Mon, 30 Aug 2010 05:54:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357739-1</guid>
        <source url="https://forum.moparisthebest.com/t/new-jagex-hash-algorithm-solved-1-bug/357739.rss">New Jagex hash algorithm solved (1 bug)</source>
      </item>
  </channel>
</rss>
