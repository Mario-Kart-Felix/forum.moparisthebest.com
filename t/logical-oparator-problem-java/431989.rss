<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Logical Oparator Problem [Java]</title>
    <link>https://forum.moparisthebest.com/t/logical-oparator-problem-java/431989</link>
    <description>So in a game I&#39;m writing I have this code...

[code]			if(!Frame.mm.username.getText().isEmpty() &amp;&amp;
					!Frame.mm.password.getPassword().toString().isEmpty()) {

				//check existance of accounts in directory
			} else {

				//return fields are blank.
			}[/code]

Now note the comments represent 2 large chunks of code that isn&#39;t important to this problem, anyways if you couldn&#39;t tell this gets the player&#39;s entered username from a JTextField and checks if its not empty and gets the text from a JPasswordField and checks if its not empty respectively.

I am facing a problem in that this code works fine, except that I need to check if each of these are true individually (using || instead of &amp;&amp;) but when I replace it the code no longer works, I have checked this many times and have made sure that I am getting the correct information from both fields, the problem is the logical operator &quot;||&quot; which is giving me trouble. the system is simple, a button listening, when clicked the above operation is performed, if everything works the account can be created otherwise a message appears saying the reason (blank fields), but I&#39;ve been up on javadocs/google/rule34 all day and I can&#39;t figure it out so thank you if you can, and thanks for trying if you can&#39;t.</description>
    
    <lastBuildDate>Mon, 06 Feb 2012 15:42:17 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/logical-oparator-problem-java/431989.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Logical Oparator Problem [Java]</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <p>And to slightly elaborate on what zyle is saying, in most procedural contexts, it’s far more elegant code-wise to test for the failing case and break off execution, then continue the flow of the code without needing any sort of side conditional clause (which prevents deep nesting and eventual illegibility of code).</p>
<p>Basically, given any sort of situation in which you expect 3 test cases to be valid, a naive way of implementing it would be as follows:</p>
<pre><code class="lang-auto">	// get case 1
	if (state.case1()) {
		// get case 2
		if (state.case2()) {
			// get case 3
			if (state.case3()) {
				// continue execution...
				return SUCCESSFUL;
			} else
				return CASE_THREE_FAILURE;
		} else
			return CASE_TWO_FAILURE;
	} else
		return CASE_ONE_FAILURE;</code></pre>
<p>Whereas a more elegant way would be:</p>
<pre><code class="lang-auto">	// get case 1
	if (!state.case1())
		return CASE_ONE_FAILURE;
	// get case 2
	if (!state.case2())
		return CASE_TWO_FAILURE;
	// get case 3
	if (!state.case3())
		return CASE_THREE_FAILURE;
	// continue execution...
	return SUCCESSFUL;</code></pre>
<p>It really comes down to choosing the route which will simplify your code the most. This is the fundamental aspect of code optimization. Before you can decide whether you want to optimize your code for memory, cpu time, thread consumption, stack size, or whatever else, you should never try it until you simplify your code. Many times a simplified set of code is often more optimized than just going right ahead and trying to program the initial theory in an “optimized fashion.” You also have the instance where, if the code goes wrong, you’ll always have a copy of the simpler code to fall back on and troubleshoot where it went wrong.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/logical-oparator-problem-java/431989/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/logical-oparator-problem-java/431989/3</link>
        <pubDate>Mon, 06 Feb 2012 15:42:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-431989-3</guid>
        <source url="https://forum.moparisthebest.com/t/logical-oparator-problem-java/431989.rss">Logical Oparator Problem [Java]</source>
      </item>
      <item>
        <title>Logical Oparator Problem [Java]</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>[quote=“frozon566, post:1, topic:431989”]So in a game I’m writing I have this code…</p>
<p>[code]			if(!Frame.mm.username.getText().isEmpty() &amp;&amp;<br>
!Frame.mm.password.getPassword().toString().isEmpty()) {</p>
<pre><code>			//check existance of accounts in directory
		} else {

			//return fields are blank.
		}[/code]
</code></pre>
<p>Now note the comments represent 2 large chunks of code that isn’t important to this problem, anyways if you couldn’t tell this gets the player’s entered username from a JTextField and checks if its not empty and gets the text from a JPasswordField and checks if its not empty respectively.</p>
<p>I am facing a problem in that this code works fine, except that I need to check if each of these are true individually (using || instead of &amp;&amp;) but when I replace it the code no longer works, I have checked this many times and have made sure that I am getting the correct information from both fields, the problem is the logical operator “||” which is giving me trouble. the system is simple, a button listening, when clicked the above operation is performed, if everything works the account can be created otherwise a message appears saying the reason (blank fields), but I’ve been up on javadocs/google/rule34 all day and I can’t figure it out so thank you if you can, and thanks for trying if you can’t.[/quote]</p>
<p>My suggestion would be to program for the optimal case. Perhaps optimal isn’t the best word; Program for what you expect to occur.</p>
<p>For example instead of checking if the fields aren’t empty, check if they are. What you’re doing is</p>
<pre><code class="lang-auto">if (!field.isEmpty()) {

}</code></pre>
<p>Instead, I would suggest doing</p>
<pre><code class="lang-auto">if (username.isEmpty() || password.isEmpty()) {
    // reject
    return;
}
else {
    // At this point, the fields can _not_ be empty, so attempt to login.
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/logical-oparator-problem-java/431989/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/logical-oparator-problem-java/431989/2</link>
        <pubDate>Mon, 06 Feb 2012 08:38:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-431989-2</guid>
        <source url="https://forum.moparisthebest.com/t/logical-oparator-problem-java/431989.rss">Logical Oparator Problem [Java]</source>
      </item>
      <item>
        <title>Logical Oparator Problem [Java]</title>
        <dc:creator><![CDATA[@frozon566 frozon566]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frozon566">@frozon566</a> wrote:</p>
          <blockquote>
              <p>So in a game I’m writing I have this code…</p>
<p>[code]			if(!Frame.mm.username.getText().isEmpty() &amp;&amp;<br>
!Frame.mm.password.getPassword().toString().isEmpty()) {</p>
<pre><code>			//check existance of accounts in directory
		} else {

			//return fields are blank.
		}[/code]
</code></pre>
<p>Now note the comments represent 2 large chunks of code that isn’t important to this problem, anyways if you couldn’t tell this gets the player’s entered username from a JTextField and checks if its not empty and gets the text from a JPasswordField and checks if its not empty respectively.</p>
<p>I am facing a problem in that this code works fine, except that I need to check if each of these are true individually (using || instead of &amp;&amp;) but when I replace it the code no longer works, I have checked this many times and have made sure that I am getting the correct information from both fields, the problem is the logical operator “||” which is giving me trouble. the system is simple, a button listening, when clicked the above operation is performed, if everything works the account can be created otherwise a message appears saying the reason (blank fields), but I’ve been up on javadocs/google/rule34 all day and I can’t figure it out so thank you if you can, and thanks for trying if you can’t.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/logical-oparator-problem-java/431989/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/logical-oparator-problem-java/431989/1</link>
        <pubDate>Mon, 06 Feb 2012 08:32:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-431989-1</guid>
        <source url="https://forum.moparisthebest.com/t/logical-oparator-problem-java/431989.rss">Logical Oparator Problem [Java]</source>
      </item>
  </channel>
</rss>
