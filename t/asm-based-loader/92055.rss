<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>ASM Based Loader</title>
    <link>https://forum.moparisthebest.com/t/asm-based-loader/92055</link>
    <description>This is a part of a runescape loader-hacker for their loader.jar so that we can access the client. All this is, is a copy and paste of my &quot;SignLoader&quot; ClassLoader to help people get started with ASM. 

It&#39;s bloody fast.

[code]package bawt.loader;

import org.objectweb.asm.*;

import java.io.*;
import java.net.*;
import java.util.zip.ZipEntry;
import java.util.jar.JarFile;
import java.util.ArrayList;

import bawt.hook.Loader;

/**
 * @author pplsuqbawlz
 */
public class SignLoader extends ClassLoader {
    private JarFile jar;

    public SignLoader(String archive) throws IOException {
        URL u = new URL(&quot;jar:&quot; + archive + &quot;!/&quot;);
        JarURLConnection jurl = (JarURLConnection) u.openConnection();
        jar = jurl.getJarFile();
    }

    public Class&lt;?&gt; loadClass(String name) throws ClassNotFoundException {
        Class c = null;
        try {
            c = super.findSystemClass(name);
        } catch (ClassNotFoundException cnfe) {
            try {
                ZipEntry zip = jar.getEntry(name.replaceAll(&quot;\\.&quot;, File.pathSeparator) + &quot;.class&quot;);
                InputStream in = jar.getInputStream(zip);


                ClassReader reader = new ClassReader(in);
                ClassWriter writer = new ClassWriter(0);
                SignVisitor visit = new SignVisitor(writer);
                if (name.equals(&quot;loader&quot;)) {
                    visit.addInterface(Loader.class.getName().replaceAll(&quot;\\.&quot;, &quot;/&quot;));

                }
                reader.accept(visit, 0);


                byte buffer[] = writer.toByteArray();
                c = defineClass(name, buffer, 0, buffer.length);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        if (c != null) return c;
        return super.loadClass(name);
    }

    public class SignVisitor extends ClassAdapter implements Opcodes {
        private ArrayList&lt;String&gt; ifaces;
        private String classname;

        public SignVisitor(final ClassVisitor cv) {
            super(cv);
            ifaces = new ArrayList&lt;String&gt;(0);
        }

        public void addInterface(String name) {
            ifaces.add(name);
        }

        public void visit(
                final int version,
                final int access,
                final String name,
                final String signature,
                final String superName,
                final String[] interfaces) {
            classname = name;

            int add = ifaces.size();
            if (add &gt; 0) {
                String faces[] = new String[interfaces.length + add];
                System.arraycopy(interfaces, 0, faces, 0, interfaces.length);
                System.arraycopy(ifaces.toArray(), 0, faces, interfaces.length, add);
                super.visit(version, access, name, signature, superName, faces);
            } else {
                super.visit(version, access, name, signature, superName, interfaces);
            }
        }

        public FieldVisitor visitField(
                final int access,
                final String name,
                final String desc,
                final String signature,
                final Object value) {
            FieldVisitor fv = super.visitField(access, name, desc, signature, value);
            if (desc.equals(&quot;Ljava/applet/Applet;&quot;)) {
                MethodVisitor get = cv.visitMethod(ACC_PUBLIC, &quot;getClient&quot;, &quot;()&quot; + desc, null, null);
                get.visitVarInsn(ALOAD, 0);
                get.visitFieldInsn(GETFIELD, classname, name, desc);
                get.visitInsn(ARETURN);
                get.visitMaxs(1, 1);
                get.visitEnd();
            }
            return fv;
        }
    }
}[/code]</description>
    
    <lastBuildDate>Fri, 11 May 2007 11:54:13 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/asm-based-loader/92055.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>ASM Based Loader</title>
        <dc:creator><![CDATA[@ruler ruler]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ruler">@ruler</a> wrote:</p>
          <blockquote>
              <p>[quote=“semaphore, post:6, topic:92055”][quote author=Speljohan link=topic=133970.msg1293283#msg1293283 date=1178787847]<br>
wow, awesome work <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"> I didn’t even know there was functions in the JDK to modify assembly <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"><br>
[/quote]</p>
<p>lmao… that was cute. I’m going to assume it was a joke.</p>
<p>In case it wasn’t asm is a bytecode modification library written by objectweb. (These guys also wrote the appserver named JOnAS). Their visitor is a bit different from BCEL because it uses a very nicely integrated Visitor pattern. The only downside of ASM is that writing a code searching algorithm is not something ruler.[/quote]<br>
 it’s a Freudian slip, rulereric<br>
 he loves youy</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/asm-based-loader/92055/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/asm-based-loader/92055/10</link>
        <pubDate>Fri, 11 May 2007 11:54:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-92055-10</guid>
        <source url="https://forum.moparisthebest.com/t/asm-based-loader/92055.rss">ASM Based Loader</source>
      </item>
      <item>
        <title>ASM Based Loader</title>
        <dc:creator><![CDATA[@1337h4x 1337h4x]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/1337h4x">@1337h4x</a> wrote:</p>
          <blockquote>
              <p>[quote=“lawl, post:1, topic:92100”]what a let down. i thought you used actual assembly.[/quote]me too tbh <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/asm-based-loader/92055/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/asm-based-loader/92055/9</link>
        <pubDate>Fri, 11 May 2007 08:50:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-92055-9</guid>
        <source url="https://forum.moparisthebest.com/t/asm-based-loader/92055.rss">ASM Based Loader</source>
      </item>
      <item>
        <title>ASM Based Loader</title>
        <dc:creator><![CDATA[@Krichevskoy Krichevskoy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/krichevskoy">@Krichevskoy</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="7" data-topic="92055">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/pplsuqbawlz/40/5_6259e4fa9dfe0dec282fb0955bb1974c.png" class="avatar"> pplsuqbawlz:</div>
<blockquote>
<p>Yup, from my experience a minimalistic approach to editing existing code is possible, but extensive updater’s would require more work and effort than it’s worth (especially when BCEL 5.1 works fine).</p>
</blockquote>
</aside>
<p>That was more-or-less my opinion of ASM when I messed with it a while ago (a year? two years? I remember talking with saevion about it). I really wanted to like it - a nice Visitor, small footprint, low overhead, very fast. But while it was excellent for generating classes, it was more pain than it was worth for editing existing ones. Of course, I’m better at programming, logic, design, and a dozen other things now, so maybe I should take another look at it.</p>
<p>Regarding the actual code - I like it. ASM lets you keep simple things simple.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/asm-based-loader/92055/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/asm-based-loader/92055/8</link>
        <pubDate>Fri, 11 May 2007 07:27:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-92055-8</guid>
        <source url="https://forum.moparisthebest.com/t/asm-based-loader/92055.rss">ASM Based Loader</source>
      </item>
      <item>
        <title>ASM Based Loader</title>
        <dc:creator><![CDATA[@pplsuqbawlz pplsuqbawlz]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pplsuqbawlz">@pplsuqbawlz</a> wrote:</p>
          <blockquote>
              <p>Yup, from my experience a minimalistic approach to editing existing code is possible, but extensive updater’s would require more work and effort than it’s worth (especially when BCEL 5.1 works fine).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/asm-based-loader/92055/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/asm-based-loader/92055/7</link>
        <pubDate>Thu, 10 May 2007 16:50:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-92055-7</guid>
        <source url="https://forum.moparisthebest.com/t/asm-based-loader/92055.rss">ASM Based Loader</source>
      </item>
      <item>
        <title>ASM Based Loader</title>
        <dc:creator><![CDATA[@semaphore semaphore]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/semaphore">@semaphore</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="4" data-topic="92055">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/speljohan/40/5_6259e4fa9dfe0dec282fb0955bb1974c.png" class="avatar"> Speljohan:</div>
<blockquote>
<p>wow, awesome work <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"> I didn’t even know there was functions in the JDK to modify assembly <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
</blockquote>
</aside>
<p>lmao… that was cute. I’m going to assume it was a joke.</p>
<p>In case it wasn’t asm is a bytecode modification library written by objectweb. (These guys also wrote the appserver named JOnAS). Their visitor is a bit different from BCEL because it uses a very nicely integrated Visitor pattern. The only downside of ASM is that writing a code searching algorithm is not something ruler.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/asm-based-loader/92055/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/asm-based-loader/92055/6</link>
        <pubDate>Thu, 10 May 2007 16:31:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-92055-6</guid>
        <source url="https://forum.moparisthebest.com/t/asm-based-loader/92055.rss">ASM Based Loader</source>
      </item>
      <item>
        <title>ASM Based Loader</title>
        <dc:creator><![CDATA[@pplsuqbawlz pplsuqbawlz]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pplsuqbawlz">@pplsuqbawlz</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="1" data-topic="92100">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/lawl/40/5_6259e4fa9dfe0dec282fb0955bb1974c.png" class="avatar"><a href="https://forum.moparisthebest.com/t/92100/1">On another topic</a>
</div>
<blockquote>
<p>what a let down. i thought you used actual assembly.</p>
</blockquote>
</aside>
<p>It’s runescape… GG for thinking actually assembly could be applied</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/asm-based-loader/92055/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/asm-based-loader/92055/5</link>
        <pubDate>Thu, 10 May 2007 09:13:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-92055-5</guid>
        <source url="https://forum.moparisthebest.com/t/asm-based-loader/92055.rss">ASM Based Loader</source>
      </item>
      <item>
        <title>ASM Based Loader</title>
        <dc:creator><![CDATA[@Speljohan Speljohan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/speljohan">@Speljohan</a> wrote:</p>
          <blockquote>
              <p>wow, awesome work <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"> I didn’t even know there was functions in the JDK to modify assembly <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/asm-based-loader/92055/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/asm-based-loader/92055/4</link>
        <pubDate>Thu, 10 May 2007 09:04:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-92055-4</guid>
        <source url="https://forum.moparisthebest.com/t/asm-based-loader/92055.rss">ASM Based Loader</source>
      </item>
      <item>
        <title>ASM Based Loader</title>
        <dc:creator><![CDATA[@RLN RLN]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rln">@RLN</a> wrote:</p>
          <blockquote>
              <p>Nice, I had some problems with it though when I was going to make an updater. I found a solution, although I would have basically had to recode the entire thing. Good luck.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/asm-based-loader/92055/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/asm-based-loader/92055/3</link>
        <pubDate>Thu, 10 May 2007 08:42:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-92055-3</guid>
        <source url="https://forum.moparisthebest.com/t/asm-based-loader/92055.rss">ASM Based Loader</source>
      </item>
      <item>
        <title>ASM Based Loader</title>
        <dc:creator><![CDATA[@Evil1 Evil_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/evil1">@Evil1</a> wrote:</p>
          <blockquote>
              <p>Wow, very secksi!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/asm-based-loader/92055/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/asm-based-loader/92055/2</link>
        <pubDate>Thu, 10 May 2007 07:38:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-92055-2</guid>
        <source url="https://forum.moparisthebest.com/t/asm-based-loader/92055.rss">ASM Based Loader</source>
      </item>
      <item>
        <title>ASM Based Loader</title>
        <dc:creator><![CDATA[@pplsuqbawlz pplsuqbawlz]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pplsuqbawlz">@pplsuqbawlz</a> wrote:</p>
          <blockquote>
              <p>This is a part of a runescape loader-hacker for their loader.jar so that we can access the client. All this is, is a copy and paste of my “SignLoader” ClassLoader to help people get started with ASM.</p>
<p>It’s bloody fast.</p>
<p>[code]package bawt.loader;</p>
<p>import org.objectweb.asm.*;</p>
<p>import <a href="http://java.io" rel="nofollow noopener">java.io</a>.<em>;<br>
import <a href="http://java.net" rel="nofollow noopener">java.net</a>.</em>;<br>
import java.util.zip.ZipEntry;<br>
import java.util.jar.JarFile;<br>
import java.util.ArrayList;</p>
<p>import bawt.hook.Loader;</p>
<p>/**</p>
<ul>
<li>
<p><span class="mention">@author</span> pplsuqbawlz<br>
*/<br>
public class SignLoader extends ClassLoader {<br>
private JarFile jar;</p>
<p>public SignLoader(String archive) throws IOException {<br>
URL u = new URL(“jar:” + archive + “!/”);<br>
JarURLConnection jurl = (JarURLConnection) u.openConnection();<br>
jar = jurl.getJarFile();<br>
}</p>
<p>public Class&lt;?&gt; loadClass(String name) throws ClassNotFoundException {<br>
Class c = null;<br>
try {<br>
c = super.findSystemClass(name);<br>
} catch (ClassNotFoundException cnfe) {<br>
try {<br>
ZipEntry zip = jar.getEntry(name.replaceAll("\.", File.pathSeparator) + “.class”);<br>
InputStream in = jar.getInputStream(zip);</p>
<pre><code>         ClassReader reader = new ClassReader(in);
         ClassWriter writer = new ClassWriter(0);
         SignVisitor visit = new SignVisitor(writer);
         if (name.equals("loader")) {
             visit.addInterface(Loader.class.getName().replaceAll("\\.", "/"));

         }
         reader.accept(visit, 0);


         byte buffer[] = writer.toByteArray();
         c = defineClass(name, buffer, 0, buffer.length);
     } catch (Exception e) {
         e.printStackTrace();
     }
 }
 if (c != null) return c;
 return super.loadClass(name);
</code></pre>
<p>}</p>
<p>public class SignVisitor extends ClassAdapter implements Opcodes {<br>
private ArrayList ifaces;<br>
private String classname;</p>
<pre><code> public SignVisitor(final ClassVisitor cv) {
     super(cv);
     ifaces = new ArrayList&lt;String&gt;(0);
 }

 public void addInterface(String name) {
     ifaces.add(name);
 }

 public void visit(
         final int version,
         final int access,
         final String name,
         final String signature,
         final String superName,
         final String[] interfaces) {
     classname = name;

     int add = ifaces.size();
     if (add &gt; 0) {
         String faces[] = new String[interfaces.length + add];
         System.arraycopy(interfaces, 0, faces, 0, interfaces.length);
         System.arraycopy(ifaces.toArray(), 0, faces, interfaces.length, add);
         super.visit(version, access, name, signature, superName, faces);
     } else {
         super.visit(version, access, name, signature, superName, interfaces);
     }
 }

 public FieldVisitor visitField(
         final int access,
         final String name,
         final String desc,
         final String signature,
         final Object value) {
     FieldVisitor fv = super.visitField(access, name, desc, signature, value);
     if (desc.equals("Ljava/applet/Applet;")) {
         MethodVisitor get = cv.visitMethod(ACC_PUBLIC, "getClient", "()" + desc, null, null);
         get.visitVarInsn(ALOAD, 0);
         get.visitFieldInsn(GETFIELD, classname, name, desc);
         get.visitInsn(ARETURN);
         get.visitMaxs(1, 1);
         get.visitEnd();
     }
     return fv;
 }
</code></pre>
<p>}<br>
}[/code]</p>
</li>
</ul>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/asm-based-loader/92055/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/asm-based-loader/92055/1</link>
        <pubDate>Thu, 10 May 2007 07:35:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-92055-1</guid>
        <source url="https://forum.moparisthebest.com/t/asm-based-loader/92055.rss">ASM Based Loader</source>
      </item>
  </channel>
</rss>
