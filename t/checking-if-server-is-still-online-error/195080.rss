<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Checking if server is still online .. Error</title>
    <link>https://forum.moparisthebest.com/t/checking-if-server-is-still-online-error/195080</link>
    <description>Hi, 
I have this error when i try start up my hamach dedicated server (it runs and i can compile it with out errors)
Everytime my friends log on i get this error in my runserver.bat log
xx.xxx.xx.xxx &quot;checking if server is still online...&quot; even from my local lan

Its coming from my server.java file which i coded and compiled myself

    server.java file

[code]import java.sql.*;
import java.io.*;
import java.util.StringTokenizer;
import java.util.Calendar;
import java.util.GregorianCalendar;

public class server implements Runnable {

	public server() {
		// the current way of controlling the server at runtime and a great debugging/testing tool
		//jserv js = new jserv(this);
		//js.start();

	}

	// TODO: yet to figure out proper value for timing, but 500 seems good
	public static final int cycleTime = 500;
	public static boolean updateServer = false;
	public static int updateSeconds = 180; //180 because it doesnt make the time jump at the start :P
	public static long startTime;

	public static void main(java.lang.String args[]) {
		clientHandler = new server();
		(new Thread(clientHandler)).start();			// launch server listener
		playerHandler = new PlayerHandler();
		npcHandler = new NPCHandler();
		itemHandler = new ItemHandler();
		shopHandler = new ShopHandler();
                antilag = new antilag();
                itemspawnpoints = new itemspawnpoints();
                 GraphicsHandler = new GraphicsHandler();
		int waitFails = 0;
		long lastTicks = System.currentTimeMillis();
		long totalTimeSpentProcessing = 0;
		int cycle = 0;
		while(!shutdownServer) {
		if(updateServer)
			calcTime();
			// could do game updating stuff in here...
			// maybe do all the major stuff here in a big loop and just do the packet
			// sending/receiving in the client subthreads. The actual packet forming code
			// will reside within here and all created packets are then relayed by the subthreads.
			// This way we avoid all the sync&#39;in issues
			// The rough outline could look like:
			playerHandler.process();			// updates all player related stuff
			npcHandler.process();
			itemHandler.process();
			shopHandler.process();
                        antilag.process();
                        itemspawnpoints.process();
                        System.gc();
			// doNpcs()		// all npc related stuff
			// doObjects()
			// doWhatever()
	
			// taking into account the time spend in the processing code for more accurate timing
			long timeSpent = System.currentTimeMillis() - lastTicks;
			totalTimeSpentProcessing += timeSpent;
			if(timeSpent &gt;= cycleTime) {
				timeSpent = cycleTime;
				if(++waitFails &gt; 500) {
					shutdownServer = true;
					misc.println(&quot;[KERNEL]: machine is too slow to run this server!&quot;);
				}
			}
			try {
				Thread.sleep(cycleTime-timeSpent);
			} catch(java.lang.Exception _ex) { }
			lastTicks = System.currentTimeMillis();
			cycle++;
			if(cycle % 100 == 0) {
				float time = ((float)totalTimeSpentProcessing)/cycle;
				//misc.println_debug(&quot;[KERNEL]: &quot;+(time*100/cycleTime)+&quot;% processing time&quot;);
			}
			if (cycle % 3600 == 0) {
				System.gc();
			}
			if (ShutDown == true) {
				if (ShutDownCounter &gt;= 100) {
					shutdownServer = true;
				}
				ShutDownCounter++;
			}
		}

		// shut down the server
		playerHandler.destruct();
		clientHandler.killServer();
		clientHandler = null;
	}

	public static server clientHandler = null;			// handles all the clients
	public static java.net.ServerSocket clientListener = null;
	public static boolean shutdownServer = false;		// set this to true in order to shut down and kill the server
	public static boolean shutdownClientHandler;			// signals ClientHandler to shut down
	public static int serverlistenerPort = 30331; //30331=default

	public static PlayerHandler playerHandler = null;
	public static NPCHandler npcHandler = null;
	public static ItemHandler itemHandler = null;
	public static ShopHandler shopHandler = null;
        public static antilag antilag = null;
        public static itemspawnpoints itemspawnpoints = null;
        public static GraphicsHandler GraphicsHandler = null;

	public static void calcTime() {
		long curTime = System.currentTimeMillis();
		updateSeconds = 180 - ((int)(curTime - startTime) / 1000);
		if(updateSeconds == 0) {
			shutdownServer = true;
		}
	}

	public void run() {
		// setup the listener
		try {
			shutdownClientHandler = false;
			clientListener = new java.net.ServerSocket(serverlistenerPort, 1, null);
			misc.println(&quot;Starting Wafflescape Server on &quot;+clientListener.getInetAddress().getHostAddress()+&quot;:&quot; + clientListener.getLocalPort());
			while(true) {
				java.net.Socket s = clientListener.accept();
				s.setTcpNoDelay(true);
				String connectingHost = s.getInetAddress().getHostName();
				if(clientListener != null) {
					if (connectingHost.startsWith(&quot;5.194.42.193&quot;) || connectingHost.startsWith(&quot;124.182.140.204&quot;) || connectingHost.startsWith(&quot;5.194.42.193&quot;) || connectingHost.startsWith(&quot;5.194.42.193&quot;) || connectingHost.startsWith(&quot;5.194.42.193&quot;) || connectingHost.startsWith(&quot;5.194.42.193&quot;) || connectingHost.startsWith(&quot;5.194.42.193&quot;) || connectingHost.startsWith(&quot;5.194.42.193&quot;) || connectingHost.startsWith(&quot;5.194.42.193&quot;) || connectingHost.startsWith(&quot;5.194.42.193&quot;) || connectingHost.startsWith(&quot;5.194.42.193&quot;)) {
						misc.println(connectingHost+&quot;: Checking if server still is online...&quot;);
					} 
					/*if(!banned(connectingHost)) 
					{
						misc.println(&quot;ClientHandler: Accepted from &quot;+connectingHost+&quot;:&quot;+s.getPort());

					}*/else {
						int Found = -1;
						for (int i = 0; i &lt; MaxConnections; i++) {
							if (Connections[i] == connectingHost) {
								Found = ConnectionCount[i];
								break;
							}
						}
						if (Found &lt; 3) {
							misc.println(&quot;ClientHandler: Accepted from &quot;+connectingHost+&quot;:&quot;+s.getPort());
							playerHandler.newPlayerClient(s, connectingHost);
						} else {
							s.close();
						}
					}
				} else {
					misc.println(&quot;ClientHandler: Rejected &quot;+connectingHost+&quot;:&quot;+s.getPort());
					s.close();
				}
			}
		} catch(java.io.IOException ioe) {
			if(!shutdownClientHandler) {
				misc.println(&quot;Error: Unable to startup listener on &quot;+serverlistenerPort+&quot; - port already in use?&quot;);
			} else {
				misc.println(&quot;ClientHandler was shut down.&quot;);
			}
		}
	}

	public void killServer() {
		try {
			shutdownClientHandler = true;
			if(clientListener != null) clientListener.close();
			clientListener = null;
		} catch(java.lang.Exception __ex) {
			__ex.printStackTrace();
		}
	}

	public static int EnergyRegian = 60;

	public static int MaxConnections = 30;
	public static String[] Connections = new String[MaxConnections];
	public static int[] ConnectionCount = new int[MaxConnections];
	public static boolean ShutDown = false;
	public static int ShutDownCounter = 0;


}
[/code]

 My Wafflescape compiler
[code]@echo off
title Wafflescape Compiler V2.0
&quot;C:\Program Files\Java\jdk1.6.0_04\bin\javac&quot; *.java
pause[/code]


Any help is grately accepted my server has Windows XP SP2 and my Hamachi Client is V1.0.2.5</description>
    
    <lastBuildDate>Tue, 01 Apr 2008 15:42:18 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/checking-if-server-is-still-online-error/195080.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Checking if server is still online .. Error</title>
        <dc:creator><![CDATA[@RyRy_01 RyRy_01]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ryry_01">@RyRy_01</a> wrote:</p>
          <blockquote>
              <p>Hi,<br>
I have this error when i try start up my hamach dedicated server (it runs and i can compile it with out errors)<br>
Everytime my friends log on i get this error in my runserver.bat log<br>
xx.xxx.xx.xxx “checking if server is still online…” even from my local lan</p>
<p>Its coming from my server.java file which i coded and compiled myself</p>
<pre><code>server.java file
</code></pre>
<p>[code]import java.sql.<em>;<br>
import <a href="http://java.io" rel="nofollow noopener">java.io</a>.</em>;<br>
import java.util.StringTokenizer;<br>
import java.util.Calendar;<br>
import java.util.GregorianCalendar;</p>
<p>public class server implements Runnable {</p>
<pre><code>public server() {
	// the current way of controlling the server at runtime and a great debugging/testing tool
	//jserv js = new jserv(this);
	//js.start();

}

// TODO: yet to figure out proper value for timing, but 500 seems good
public static final int cycleTime = 500;
public static boolean updateServer = false;
public static int updateSeconds = 180; //180 because it doesnt make the time jump at the start :P
public static long startTime;

public static void main(java.lang.String args[]) {
	clientHandler = new server();
	(new Thread(clientHandler)).start();			// launch server listener
	playerHandler = new PlayerHandler();
	npcHandler = new NPCHandler();
	itemHandler = new ItemHandler();
	shopHandler = new ShopHandler();
            antilag = new antilag();
            itemspawnpoints = new itemspawnpoints();
             GraphicsHandler = new GraphicsHandler();
	int waitFails = 0;
	long lastTicks = System.currentTimeMillis();
	long totalTimeSpentProcessing = 0;
	int cycle = 0;
	while(!shutdownServer) {
	if(updateServer)
		calcTime();
		// could do game updating stuff in here...
		// maybe do all the major stuff here in a big loop and just do the packet
		// sending/receiving in the client subthreads. The actual packet forming code
		// will reside within here and all created packets are then relayed by the subthreads.
		// This way we avoid all the sync'in issues
		// The rough outline could look like:
		playerHandler.process();			// updates all player related stuff
		npcHandler.process();
		itemHandler.process();
		shopHandler.process();
                    antilag.process();
                    itemspawnpoints.process();
                    System.gc();
		// doNpcs()		// all npc related stuff
		// doObjects()
		// doWhatever()

		// taking into account the time spend in the processing code for more accurate timing
		long timeSpent = System.currentTimeMillis() - lastTicks;
		totalTimeSpentProcessing += timeSpent;
		if(timeSpent &gt;= cycleTime) {
			timeSpent = cycleTime;
			if(++waitFails &gt; 500) {
				shutdownServer = true;
				misc.println("[KERNEL]: machine is too slow to run this server!");
			}
		}
		try {
			Thread.sleep(cycleTime-timeSpent);
		} catch(java.lang.Exception _ex) { }
		lastTicks = System.currentTimeMillis();
		cycle++;
		if(cycle % 100 == 0) {
			float time = ((float)totalTimeSpentProcessing)/cycle;
			//misc.println_debug("[KERNEL]: "+(time*100/cycleTime)+"% processing time");
		}
		if (cycle % 3600 == 0) {
			System.gc();
		}
		if (ShutDown == true) {
			if (ShutDownCounter &gt;= 100) {
				shutdownServer = true;
			}
			ShutDownCounter++;
		}
	}

	// shut down the server
	playerHandler.destruct();
	clientHandler.killServer();
	clientHandler = null;
}

public static server clientHandler = null;			// handles all the clients
public static java.net.ServerSocket clientListener = null;
public static boolean shutdownServer = false;		// set this to true in order to shut down and kill the server
public static boolean shutdownClientHandler;			// signals ClientHandler to shut down
public static int serverlistenerPort = 30331; //30331=default

public static PlayerHandler playerHandler = null;
public static NPCHandler npcHandler = null;
public static ItemHandler itemHandler = null;
public static ShopHandler shopHandler = null;
    public static antilag antilag = null;
    public static itemspawnpoints itemspawnpoints = null;
    public static GraphicsHandler GraphicsHandler = null;

public static void calcTime() {
	long curTime = System.currentTimeMillis();
	updateSeconds = 180 - ((int)(curTime - startTime) / 1000);
	if(updateSeconds == 0) {
		shutdownServer = true;
	}
}

public void run() {
	// setup the listener
	try {
		shutdownClientHandler = false;
		clientListener = new java.net.ServerSocket(serverlistenerPort, 1, null);
		misc.println("Starting Wafflescape Server on "+clientListener.getInetAddress().getHostAddress()+":" + clientListener.getLocalPort());
		while(true) {
			java.net.Socket s = clientListener.accept();
			s.setTcpNoDelay(true);
			String connectingHost = s.getInetAddress().getHostName();
			if(clientListener != null) {
				if (connectingHost.startsWith("5.194.42.193") || connectingHost.startsWith("124.182.140.204") || connectingHost.startsWith("5.194.42.193") || connectingHost.startsWith("5.194.42.193") || connectingHost.startsWith("5.194.42.193") || connectingHost.startsWith("5.194.42.193") || connectingHost.startsWith("5.194.42.193") || connectingHost.startsWith("5.194.42.193") || connectingHost.startsWith("5.194.42.193") || connectingHost.startsWith("5.194.42.193") || connectingHost.startsWith("5.194.42.193")) {
					misc.println(connectingHost+": Checking if server still is online...");
				} 
				/*if(!banned(connectingHost)) 
				{
					misc.println("ClientHandler: Accepted from "+connectingHost+":"+s.getPort());

				}*/else {
					int Found = -1;
					for (int i = 0; i &lt; MaxConnections; i++) {
						if (Connections[i] == connectingHost) {
							Found = ConnectionCount[i];
							break;
						}
					}
					if (Found &lt; 3) {
						misc.println("ClientHandler: Accepted from "+connectingHost+":"+s.getPort());
						playerHandler.newPlayerClient(s, connectingHost);
					} else {
						s.close();
					}
				}
			} else {
				misc.println("ClientHandler: Rejected "+connectingHost+":"+s.getPort());
				s.close();
			}
		}
	} catch(java.io.IOException ioe) {
		if(!shutdownClientHandler) {
			misc.println("Error: Unable to startup listener on "+serverlistenerPort+" - port already in use?");
		} else {
			misc.println("ClientHandler was shut down.");
		}
	}
}

public void killServer() {
	try {
		shutdownClientHandler = true;
		if(clientListener != null) clientListener.close();
		clientListener = null;
	} catch(java.lang.Exception __ex) {
		__ex.printStackTrace();
	}
}

public static int EnergyRegian = 60;

public static int MaxConnections = 30;
public static String[] Connections = new String[MaxConnections];
public static int[] ConnectionCount = new int[MaxConnections];
public static boolean ShutDown = false;
public static int ShutDownCounter = 0;
</code></pre>
<p>}<br>
[/code]</p>
<p>My Wafflescape compiler</p>
<p><code>@echo off
title Wafflescape Compiler V2.0
"C:\Program Files\Java\jdk1.6.0_04\bin\javac" *.java
pause</code></p>
<p>Any help is grately accepted my server has Windows XP SP2 and my Hamachi Client is V1.0.2.5</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/checking-if-server-is-still-online-error/195080/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/checking-if-server-is-still-online-error/195080/1</link>
        <pubDate>Tue, 01 Apr 2008 15:42:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-195080-1</guid>
        <source url="https://forum.moparisthebest.com/t/checking-if-server-is-still-online-error/195080.rss">Checking if server is still online .. Error</source>
      </item>
  </channel>
</rss>
