<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Drawing Image With Java</title>
    <link>https://forum.moparisthebest.com/t/drawing-image-with-java/432085</link>
    <description>Alright, so I&#39;m trying to draw an image from an RGB color model, but am having absolutely no luck. Right now I&#39;m using a hardcoded image to test (it&#39;s a small circle), but it&#39;s just not showing up, so the only thing I can think of is my implementation.

Here&#39;s the code:
[code=Java]
private int[] pixelData = new int[] {
    0, 0, 1, 1, 1, 1, 0, 0,
    0, 1, 0, 0, 0, 0, 1, 0,
    1, 0, 0, 0, 0, 0, 0, 1,
    1, 0, 0, 0, 0, 0, 0, 1,
    1, 0, 0, 0, 0, 0, 0, 1,
    1, 0, 0, 0, 0, 0, 0, 1,
    0, 1, 0, 0, 0, 0, 1, 0,
    0, 0, 1, 1, 1, 1, 0, 0
};

public Image createImage() {
    final int[] tmp = new int[pixelData.length];
    for (int i = 0; i &lt; tmp.length; i++) {
        // I plan on using a palette eventually
        final int value = pixelData[i];
        tmp[i] = (value == 0) ? 0 : 0xffffff;
    }
    final MemoryImageSource imgSource = new MemoryImageSource(8, 8,
        tmpData, 0, 8);
   return Toolkit.getDefaultToolkit().createImage(imgSource);
}

// ...
graphics.drawImage(image, x, y, null);
[/code]

I&#39;m able to use drawRect and such and see the results, but the image is just not working. Is there something that you can see that I&#39;m overlooking.

EDIT: The only thing I can think of is perhaps the alpha channel is being set to 0, so I&#39;m going to test that now.

EDIT: It was the alpha channel. Apparently the MemoryImageSource uses a 32-bit ARGB scheme, instead of a 24-bit RGB. But for some reason, the colors are inverted.

Fixed code:
[code=Java]
 tmp[i] = (value == 0) ? 0xff000000 : 0xffffffff;
[/code]

EDIT: Actually, it was my fault, I put the color palette backwards.</description>
    
    <lastBuildDate>Wed, 08 Feb 2012 20:21:35 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/drawing-image-with-java/432085.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Drawing Image With Java</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>[quote=“Taharok, post:2, topic:432085”]I’d strongly recommend you use slightly newer technology. MemoryImageSource is ancient. Take a look at the source code for java.awt.Robot.createScreenCapture() to see how to create a BufferedImage using DataBuffers, instead of using Toolkit.</p>
<p>And just curious, why are you trying to draw a circle from a raster rather than a function? :P[/quote]</p>
<p>The circle was just a random shape I thought of to test drawing from a raster (it could have been any shape really). I’m planning on using the technology in my UI framework (eventually loading from raw data, also as a mapped image, as well as the usual image formats).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/drawing-image-with-java/432085/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/drawing-image-with-java/432085/3</link>
        <pubDate>Wed, 08 Feb 2012 20:21:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-432085-3</guid>
        <source url="https://forum.moparisthebest.com/t/drawing-image-with-java/432085.rss">Drawing Image With Java</source>
      </item>
      <item>
        <title>Drawing Image With Java</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <p>I’d strongly recommend you use slightly newer technology. MemoryImageSource is ancient. Take a look at the source code for java.awt.Robot.createScreenCapture() to see how to create a BufferedImage using DataBuffers, instead of using Toolkit.</p>
<p>And just curious, why are you trying to draw a circle from a raster rather than a function? <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/drawing-image-with-java/432085/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/drawing-image-with-java/432085/2</link>
        <pubDate>Tue, 07 Feb 2012 23:32:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-432085-2</guid>
        <source url="https://forum.moparisthebest.com/t/drawing-image-with-java/432085.rss">Drawing Image With Java</source>
      </item>
      <item>
        <title>Drawing Image With Java</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>Alright, so I’m trying to draw an image from an RGB color model, but am having absolutely no luck. Right now I’m using a hardcoded image to test (it’s a small circle), but it’s just not showing up, so the only thing I can think of is my implementation.</p>
<p>Here’s the code:</p>
<pre><code class="lang-auto">private int[] pixelData = new int[] {
    0, 0, 1, 1, 1, 1, 0, 0,
    0, 1, 0, 0, 0, 0, 1, 0,
    1, 0, 0, 0, 0, 0, 0, 1,
    1, 0, 0, 0, 0, 0, 0, 1,
    1, 0, 0, 0, 0, 0, 0, 1,
    1, 0, 0, 0, 0, 0, 0, 1,
    0, 1, 0, 0, 0, 0, 1, 0,
    0, 0, 1, 1, 1, 1, 0, 0
};

public Image createImage() {
    final int[] tmp = new int[pixelData.length];
    for (int i = 0; i &lt; tmp.length; i++) {
        // I plan on using a palette eventually
        final int value = pixelData[i];
        tmp[i] = (value == 0) ? 0 : 0xffffff;
    }
    final MemoryImageSource imgSource = new MemoryImageSource(8, 8,
        tmpData, 0, 8);
   return Toolkit.getDefaultToolkit().createImage(imgSource);
}

// ...
graphics.drawImage(image, x, y, null);</code></pre>
<p>I’m able to use drawRect and such and see the results, but the image is just not working. Is there something that you can see that I’m overlooking.</p>
<p>EDIT: The only thing I can think of is perhaps the alpha channel is being set to 0, so I’m going to test that now.</p>
<p>EDIT: It was the alpha channel. Apparently the MemoryImageSource uses a 32-bit ARGB scheme, instead of a 24-bit RGB. But for some reason, the colors are inverted.</p>
<p>Fixed code:</p>
<pre><code class="lang-auto"> tmp[i] = (value == 0) ? 0xff000000 : 0xffffffff;</code></pre>
<p>EDIT: Actually, it was my fault, I put the color palette backwards.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/drawing-image-with-java/432085/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/drawing-image-with-java/432085/1</link>
        <pubDate>Tue, 07 Feb 2012 02:41:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-432085-1</guid>
        <source url="https://forum.moparisthebest.com/t/drawing-image-with-java/432085.rss">Drawing Image With Java</source>
      </item>
  </channel>
</rss>
