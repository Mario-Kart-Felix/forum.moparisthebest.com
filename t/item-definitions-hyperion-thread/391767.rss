<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Item definitions [Hyperion thread]</title>
    <link>https://forum.moparisthebest.com/t/item-definitions-hyperion-thread/391767</link>
    <description>Continuing from the Item and equipment tutorial that I posted earlier, this time we will be adding Item definitions.


[ul][li]Difficulty: This tutorial is basic, just read and you&#39;ll understand. [/li]
[li]Save the file as &quot;ItemDefinition.java[/li][/ul]


Place this in the directory hyperion/rs2/model

[code]package org.hyperion.rs2.model;

import java.io.IOException;
import java.io.RandomAccessFile;
import java.nio.ByteBuffer;
import java.nio.channels.FileChannel.MapMode;
import java.util.logging.Logger;

import org.hyperion.util.Buffers;

public class ItemDefinition {

	private static final Logger logger = Logger.getLogger(ItemDefinition.class.getName());
	public static ItemDefinition[] definitions;

	public static ItemDefinition forId(int id) {
		return definitions[id];
	}

	public static void init() throws IOException {
		if (definitions != null) {
			throw new IllegalStateException(&quot;Definitions already loaded.&quot;);
		}
		logger.info(&quot;Loading definitions...&quot;);
		RandomAccessFile raf = new RandomAccessFile(&quot;data/itemDefinitions.bin&quot;, &quot;r&quot;);
		try {
			ByteBuffer buffer = raf.getChannel().map(MapMode.READ_ONLY, 0, raf.length());
			int count = buffer.getShort() &amp; 0xFFFF;
			definitions = new ItemDefinition[count];
			for (int i = 0; i &lt; count; i++) {
				String name = Buffers.readString(buffer);
				String examine = Buffers.readString(buffer);
				boolean noted = buffer.get() == 1 ? true : false;
				int parentId = buffer.getShort() &amp; 0xFFFF;
				if (parentId == 65535) {
					parentId = -1;
				}
				boolean noteable = buffer.get() == 1 ? true : false;
				int notedId = buffer.getShort() &amp; 0xFFFF;
				if (notedId == 65535) {
					notedId = -1;
				}
				boolean stackable = buffer.get() == 1 ? true : false;
				boolean members = buffer.get() == 1 ? true : false;
				boolean prices = buffer.get() == 1 ? true : false;
				int shop = -1;
				int highAlc = -1;
				int lowAlc = -1;
				if (prices) {
					shop = buffer.getInt();
					highAlc = (int) (shop * 0.6D);
					lowAlc = (int) (shop * 0.4D);
				}
				int[] bonuses = new int[12];
				for (int index = 0; index &lt; 12; index++) {
					bonuses[index] = buffer.getShort();
				}
				definitions[i] = new ItemDefinition(i, name, examine, noted, noteable, stackable, parentId, notedId, members, shop, highAlc, lowAlc, bonuses);

			}
			logger.info(&quot;Loaded &quot; + definitions.length + &quot; definitions.&quot;);
		} finally {
			raf.close();
		}
	}

	private final int id;
	private final String name;
	private final String examine;
	private final boolean noted;
	private final boolean noteable;
	private final boolean stackable;
	private final int parentId;
	private final int notedId;
	private final boolean members;
	private final int shopValue;
	private final int highAlcValue;
	private final int lowAlcValue;
	private final int[] bonuses;

	public int[] getBonuses() {
		return bonuses;
	}

	private ItemDefinition(int id, String name, String examine, boolean noted, boolean noteable, boolean stackable, int parentId, int notedId, boolean members, int shopValue, int highAlcValue, int lowAlcValue, int[] bonuses) {
		this.id = id;
		this.name = name;
		this.examine = examine;
		this.noted = noted;
		this.noteable = noteable;
		this.stackable = stackable;
		this.parentId = parentId;
		this.notedId = notedId;
		this.members = members;
		this.shopValue = shopValue;
		this.highAlcValue = highAlcValue;
		this.lowAlcValue = lowAlcValue;
		this.bonuses = bonuses;
	}


	public int getId() {
		return id;
	}

	public String getName() {
		return name;
	}

	public String getDescription() {
		return examine;
	}

	public boolean isNoted() {
		return noted;
	}

	public boolean isNoteable() {
		return noteable;
	}

	public boolean isStackable() {
		return stackable || noted;
	}

	public int getNormalId() {
		return parentId;
	}

	public int getNotedId() {
		return notedId;
	}

	public boolean isMembersOnly() {
		return members;
	}

	public int getValue() {
		return shopValue;
	}

	public int getLowAlcValue() {
		return lowAlcValue;
	}

	public int getHighAlcValue() {
		return highAlcValue;
	}

	public int getBonuses2(int j) {
		// TODO Auto-generated method stub
		return 0;
	}

}
[/code]

You&#39;ll also need the buffers class Graham wrote, if this is not already included in your hyperion server.

[ul][li]Directory: hyperion/util[/li]
[li]File name &quot;Buffers.java&quot;[/li][/ul]

[code]package org.hyperion.util;

import java.nio.ByteBuffer;

/**
 * Buffer utility class.
 * 
 * @author Graham Edgecombe
 * 
 */
public class Buffers {

	/**
	 * Reads a null terminated string from a byte buffer.
	 * 
	 * @param buffer
	 *            The buffer.
	 * @return The string.
	 */
	public static String readString(ByteBuffer buffer) {
		StringBuilder bldr = new StringBuilder();
		while (buffer.hasRemaining()) {
			byte b = buffer.get();
			if (b == 0) {
				break;
			}
			bldr.append((char) b);
		}
		return bldr.toString();
	}

}
[/code]

[i]Explanation[/i]
[code]	private static final Logger logger = Logger.getLogger(ItemDefinition.class.getName());
	public static ItemDefinition[] definitions;[/code]
This is the logger instance and definition array. These need too be declared before anything.
[code]	public static ItemDefinition forId(int id) {
		return definitions[id];
	}[/code]
This method looks for specific ID and returns the item definition.
[code]	public static void init() throws IOException {
		if (definitions != null) {
			throw new IllegalStateException(&quot;Definitions already loaded.&quot;);
		}
		logger.info(&quot;Loading definitions...&quot;);
		RandomAccessFile raf = new RandomAccessFile(&quot;data/itemDefinitions.bin&quot;, &quot;r&quot;);
		try {
			ByteBuffer buffer = raf.getChannel().map(MapMode.READ_ONLY, 0, raf.length());
			int count = buffer.getShort() &amp; 0xFFFF;
			definitions = new ItemDefinition[count];
			for (int i = 0; i &lt; count; i++) {
				String name = Buffers.readString(buffer);
				String examine = Buffers.readString(buffer);
				boolean noted = buffer.get() == 1 ? true : false;
				int parentId = buffer.getShort() &amp; 0xFFFF;
				if (parentId == 65535) {
					parentId = -1;
				}
				boolean noteable = buffer.get() == 1 ? true : false;
				int notedId = buffer.getShort() &amp; 0xFFFF;
				if (notedId == 65535) {
					notedId = -1;
				}
				boolean stackable = buffer.get() == 1 ? true : false;
				boolean members = buffer.get() == 1 ? true : false;
				boolean prices = buffer.get() == 1 ? true : false;
				int shop = -1;
				int highAlc = -1;
				int lowAlc = -1;
				if (prices) {
					shop = buffer.getInt();
					highAlc = (int) (shop * 0.6D);
					lowAlc = (int) (shop * 0.4D);
				}
				int[] bonuses = new int[12];
				for (int index = 0; index &lt; 12; index++) {
					bonuses[index] = buffer.getShort();
				}
				definitions[i] = new ItemDefinition(i, name, examine, noted, noteable, stackable, parentId, notedId, members, shop, highAlc, lowAlc, bonuses);

			}
			logger.info(&quot;Loaded &quot; + definitions.length + &quot; definitions.&quot;);
		} finally {
			raf.close();
		}
	}[/code]
Now this is where it get&#39;s interesting, this method loads the specific item definitions although if an I/O error occurs it will throw the IllegalStateException thus printing out &quot;Definitions already loaded.&quot;

[code]	private final int id;
	private final String name;
	private final String examine;
	private final boolean noted;
	private final boolean noteable;
	private final boolean stackable;
	private final int parentId;
	private final int notedId;
	private final boolean members;
	private final int shopValue;
	private final int highAlcValue;
	private final int lowAlcValue;
	private final int[] bonuses;[/code]
Some variables that need too be declared, if these are not declared the above method will not compile.

[code]	private ItemDefinition(int id, String name, String examine, boolean noted, boolean noteable, boolean stackable, int parentId, int notedId, boolean members, int shopValue, int highAlcValue, int lowAlcValue, int[] bonuses) {
		this.id = id;
		this.name = name;
		this.examine = examine;
		this.noted = noted;
		this.noteable = noteable;
		this.stackable = stackable;
		this.parentId = parentId;
		this.notedId = notedId;
		this.members = members;
		this.shopValue = shopValue;
		this.highAlcValue = highAlcValue;
		this.lowAlcValue = lowAlcValue;
		this.bonuses = bonuses;
	}[/code]


That&#39;s about all that needs too be explained, the rest of the code are just return methods.</description>
    
    <lastBuildDate>Thu, 21 Apr 2011 23:32:52 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/item-definitions-hyperion-thread/391767.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Item definitions [Hyperion thread]</title>
        <dc:creator><![CDATA[@Saphire1 Saphire`]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/saphire1">@Saphire1</a> wrote:</p>
          <blockquote>
              <p>[quote=“glestrts, post:6, topic:391767”][quote author=Saphire` link=topic=488931.msg3575296#msg3575296 date=1303373559]<br>
How can you say this doesn’t look like it’s from hyperion? It quite obviously is.<br>
[/quote]<br>
Rs2 server was based off of hyperion… I fail to see your point. I was merely pointing out that I did not see this exact system in hyperion, but instead in rs2 serv / flaresoft.[/quote]<br>
As Graham posted in the other thread I created, this was originally created for the updated hyperion server but because I used the old hyperion server I had too research this myself.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/item-definitions-hyperion-thread/391767/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/item-definitions-hyperion-thread/391767/7</link>
        <pubDate>Thu, 21 Apr 2011 23:32:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-391767-7</guid>
        <source url="https://forum.moparisthebest.com/t/item-definitions-hyperion-thread/391767.rss">Item definitions [Hyperion thread]</source>
      </item>
      <item>
        <title>Item definitions [Hyperion thread]</title>
        <dc:creator><![CDATA[@glestrts glestrts]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/glestrts">@glestrts</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="5" data-topic="391767">
<div class="title">
<div class="quote-controls"></div>
 Saphire`:</div>
<blockquote>
<p>How can you say this doesn’t look like it’s from hyperion? It quite obviously is.</p>
</blockquote>
</aside>
<p>Rs2 server was based off of hyperion… I fail to see your point. I was merely pointing out that I did not see this exact system in hyperion, but instead in rs2 serv / flaresoft.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/item-definitions-hyperion-thread/391767/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/item-definitions-hyperion-thread/391767/6</link>
        <pubDate>Thu, 21 Apr 2011 18:13:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-391767-6</guid>
        <source url="https://forum.moparisthebest.com/t/item-definitions-hyperion-thread/391767.rss">Item definitions [Hyperion thread]</source>
      </item>
      <item>
        <title>Item definitions [Hyperion thread]</title>
        <dc:creator><![CDATA[@Saphire1 Saphire`]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/saphire1">@Saphire1</a> wrote:</p>
          <blockquote>
              <p>[quote=“glestrts, post:4, topic:391767”][quote author=Advocatus link=topic=488931.msg3574958#msg3574958 date=1303343930]<br>
Hyperion should already have this. Thanks for writing a ton of explanation though.<br>
[/quote]<br>
This doesn’t look quite like its from hyperion.<br>
If I recall correctly, hyperion loads all item prices as seperate values from the binary file. Only source that I have seen use a multiplier for this was rs2 serv / flaresoft.[/quote]<br>
It’s what Graham wrote, if you look at the other thread I created he explained I must have been using the old revision of hyperion because when I started the Charity project it had nothing but player login, rendering and walking.</p>
<p>Most of the stuff added too the Charity project has been made by me, although Silabsoft, lothy and Graham have credits for this.</p>
<p>How can you say this doesn’t look like it’s from hyperion? It quite obviously is.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/item-definitions-hyperion-thread/391767/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/item-definitions-hyperion-thread/391767/5</link>
        <pubDate>Thu, 21 Apr 2011 08:12:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-391767-5</guid>
        <source url="https://forum.moparisthebest.com/t/item-definitions-hyperion-thread/391767.rss">Item definitions [Hyperion thread]</source>
      </item>
      <item>
        <title>Item definitions [Hyperion thread]</title>
        <dc:creator><![CDATA[@glestrts glestrts]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/glestrts">@glestrts</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="3" data-topic="391767">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/advocatus/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Advocatus:</div>
<blockquote>
<p>Hyperion should already have this. Thanks for writing a ton of explanation though.</p>
</blockquote>
</aside>
<p>This doesn’t look quite like its from hyperion.<br>
If I recall correctly, hyperion loads all item prices as seperate values from the binary file. Only source that I have seen use a multiplier for this was rs2 serv / flaresoft.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/item-definitions-hyperion-thread/391767/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/item-definitions-hyperion-thread/391767/4</link>
        <pubDate>Thu, 21 Apr 2011 00:10:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-391767-4</guid>
        <source url="https://forum.moparisthebest.com/t/item-definitions-hyperion-thread/391767.rss">Item definitions [Hyperion thread]</source>
      </item>
      <item>
        <title>Item definitions [Hyperion thread]</title>
        <dc:creator><![CDATA[@Advocatus Advocatus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/advocatus">@Advocatus</a> wrote:</p>
          <blockquote>
              <p>Hyperion should already have this. Thanks for writing a ton of explanation though.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/item-definitions-hyperion-thread/391767/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/item-definitions-hyperion-thread/391767/3</link>
        <pubDate>Wed, 20 Apr 2011 23:58:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-391767-3</guid>
        <source url="https://forum.moparisthebest.com/t/item-definitions-hyperion-thread/391767.rss">Item definitions [Hyperion thread]</source>
      </item>
      <item>
        <title>Item definitions [Hyperion thread]</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>Very nice tutorial, hope you make more of these.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/item-definitions-hyperion-thread/391767/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/item-definitions-hyperion-thread/391767/2</link>
        <pubDate>Wed, 20 Apr 2011 19:52:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-391767-2</guid>
        <source url="https://forum.moparisthebest.com/t/item-definitions-hyperion-thread/391767.rss">Item definitions [Hyperion thread]</source>
      </item>
      <item>
        <title>Item definitions [Hyperion thread]</title>
        <dc:creator><![CDATA[@Saphire1 Saphire`]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/saphire1">@Saphire1</a> wrote:</p>
          <blockquote>
              <p>Continuing from the Item and equipment tutorial that I posted earlier, this time we will be adding Item definitions.</p>
<p>[ul][li]Difficulty: This tutorial is basic, just read and you’ll understand. [/li]<br>
[li]Save the file as "ItemDefinition.java[/li][/ul]</p>
<p>Place this in the directory hyperion/rs2/model</p>
<p>[code]package org.hyperion.rs2.model;</p>
<p>import java.io.IOException;<br>
import java.io.RandomAccessFile;<br>
import java.nio.ByteBuffer;<br>
import java.nio.channels.FileChannel.MapMode;<br>
import java.util.logging.Logger;</p>
<p>import org.hyperion.util.Buffers;</p>
<p>public class ItemDefinition {</p>
<pre><code>private static final Logger logger = Logger.getLogger(ItemDefinition.class.getName());
public static ItemDefinition[] definitions;

public static ItemDefinition forId(int id) {
	return definitions[id];
}

public static void init() throws IOException {
	if (definitions != null) {
		throw new IllegalStateException("Definitions already loaded.");
	}
	logger.info("Loading definitions...");
	RandomAccessFile raf = new RandomAccessFile("data/itemDefinitions.bin", "r");
	try {
		ByteBuffer buffer = raf.getChannel().map(MapMode.READ_ONLY, 0, raf.length());
		int count = buffer.getShort() &amp; 0xFFFF;
		definitions = new ItemDefinition[count];
		for (int i = 0; i &lt; count; i++) {
			String name = Buffers.readString(buffer);
			String examine = Buffers.readString(buffer);
			boolean noted = buffer.get() == 1 ? true : false;
			int parentId = buffer.getShort() &amp; 0xFFFF;
			if (parentId == 65535) {
				parentId = -1;
			}
			boolean noteable = buffer.get() == 1 ? true : false;
			int notedId = buffer.getShort() &amp; 0xFFFF;
			if (notedId == 65535) {
				notedId = -1;
			}
			boolean stackable = buffer.get() == 1 ? true : false;
			boolean members = buffer.get() == 1 ? true : false;
			boolean prices = buffer.get() == 1 ? true : false;
			int shop = -1;
			int highAlc = -1;
			int lowAlc = -1;
			if (prices) {
				shop = buffer.getInt();
				highAlc = (int) (shop * 0.6D);
				lowAlc = (int) (shop * 0.4D);
			}
			int[] bonuses = new int[12];
			for (int index = 0; index &lt; 12; index++) {
				bonuses[index] = buffer.getShort();
			}
			definitions[i] = new ItemDefinition(i, name, examine, noted, noteable, stackable, parentId, notedId, members, shop, highAlc, lowAlc, bonuses);

		}
		logger.info("Loaded " + definitions.length + " definitions.");
	} finally {
		raf.close();
	}
}

private final int id;
private final String name;
private final String examine;
private final boolean noted;
private final boolean noteable;
private final boolean stackable;
private final int parentId;
private final int notedId;
private final boolean members;
private final int shopValue;
private final int highAlcValue;
private final int lowAlcValue;
private final int[] bonuses;

public int[] getBonuses() {
	return bonuses;
}

private ItemDefinition(int id, String name, String examine, boolean noted, boolean noteable, boolean stackable, int parentId, int notedId, boolean members, int shopValue, int highAlcValue, int lowAlcValue, int[] bonuses) {
	this.id = id;
	this.name = name;
	this.examine = examine;
	this.noted = noted;
	this.noteable = noteable;
	this.stackable = stackable;
	this.parentId = parentId;
	this.notedId = notedId;
	this.members = members;
	this.shopValue = shopValue;
	this.highAlcValue = highAlcValue;
	this.lowAlcValue = lowAlcValue;
	this.bonuses = bonuses;
}


public int getId() {
	return id;
}

public String getName() {
	return name;
}

public String getDescription() {
	return examine;
}

public boolean isNoted() {
	return noted;
}

public boolean isNoteable() {
	return noteable;
}

public boolean isStackable() {
	return stackable || noted;
}

public int getNormalId() {
	return parentId;
}

public int getNotedId() {
	return notedId;
}

public boolean isMembersOnly() {
	return members;
}

public int getValue() {
	return shopValue;
}

public int getLowAlcValue() {
	return lowAlcValue;
}

public int getHighAlcValue() {
	return highAlcValue;
}

public int getBonuses2(int j) {
	// TODO Auto-generated method stub
	return 0;
}
</code></pre>
<p>}<br>
[/code]</p>
<p>You’ll also need the buffers class Graham wrote, if this is not already included in your hyperion server.</p>
<p>[ul][li]Directory: hyperion/util[/li]<br>
[li]File name “Buffers.java”[/li][/ul]</p>
<p>[code]package org.hyperion.util;</p>
<p>import java.nio.ByteBuffer;</p>
<p>/**</p>
<ul>
<li>Buffer utility class.</li>
<li>
</li>
<li>
<span class="mention">@author</span> Graham Edgecombe</li>
<li>
</li>
</ul>
<p>*/<br>
public class Buffers {</p>
<pre><code>/**
 * Reads a null terminated string from a byte buffer.
 * 
 * @param buffer
 *            The buffer.
 * @return The string.
 */
public static String readString(ByteBuffer buffer) {
	StringBuilder bldr = new StringBuilder();
	while (buffer.hasRemaining()) {
		byte b = buffer.get();
		if (b == 0) {
			break;
		}
		bldr.append((char) b);
	}
	return bldr.toString();
}
</code></pre>
<p>}<br>
[/code]</p>
<p><span class="bbcode-i">Explanation</span></p>
<p><code>	private static final Logger logger = Logger.getLogger(ItemDefinition.class.getName());
	public static ItemDefinition[] definitions;</code><br>
This is the logger instance and definition array. These need too be declared before anything.</p>
<p><code>	public static ItemDefinition forId(int id) {
		return definitions[id];
	}</code><br>
This method looks for specific ID and returns the item definition.</p>
<p>[code]	public static void init() throws IOException {<br>
if (definitions != null) {<br>
throw new IllegalStateException(“Definitions already loaded.”);<br>
}<br>
logger.info(“Loading definitions…”);<br>
RandomAccessFile raf = new RandomAccessFile(“data/itemDefinitions.bin”, “r”);<br>
try {<br>
ByteBuffer buffer = raf.getChannel().map(MapMode.READ_ONLY, 0, raf.length());<br>
int count = buffer.getShort() &amp; 0xFFFF;<br>
definitions = new ItemDefinition[count];<br>
for (int i = 0; i &lt; count; i++) {<br>
String name = Buffers.readString(buffer);<br>
String examine = Buffers.readString(buffer);<br>
boolean noted = buffer.get() == 1 ? true : false;<br>
int parentId = buffer.getShort() &amp; 0xFFFF;<br>
if (parentId == 65535) {<br>
parentId = -1;<br>
}<br>
boolean noteable = buffer.get() == 1 ? true : false;<br>
int notedId = buffer.getShort() &amp; 0xFFFF;<br>
if (notedId == 65535) {<br>
notedId = -1;<br>
}<br>
boolean stackable = buffer.get() == 1 ? true : false;<br>
boolean members = buffer.get() == 1 ? true : false;<br>
boolean prices = buffer.get() == 1 ? true : false;<br>
int shop = -1;<br>
int highAlc = -1;<br>
int lowAlc = -1;<br>
if (prices) {<br>
shop = buffer.getInt();<br>
highAlc = (int) (shop * 0.6D);<br>
lowAlc = (int) (shop * 0.4D);<br>
}<br>
int[] bonuses = new int[12];<br>
for (int index = 0; index &lt; 12; index++) {<br>
bonuses[index] = buffer.getShort();<br>
}<br>
definitions[i] = new ItemDefinition(i, name, examine, noted, noteable, stackable, parentId, notedId, members, shop, highAlc, lowAlc, bonuses);</p>
<pre><code>		}
		logger.info("Loaded " + definitions.length + " definitions.");
	} finally {
		raf.close();
	}
}[/code]
</code></pre>
<p>Now this is where it get’s interesting, this method loads the specific item definitions although if an I/O error occurs it will throw the IllegalStateException thus printing out “Definitions already loaded.”</p>
<p><code>	private final int id;
	private final String name;
	private final String examine;
	private final boolean noted;
	private final boolean noteable;
	private final boolean stackable;
	private final int parentId;
	private final int notedId;
	private final boolean members;
	private final int shopValue;
	private final int highAlcValue;
	private final int lowAlcValue;
	private final int[] bonuses;</code><br>
Some variables that need too be declared, if these are not declared the above method will not compile.</p>
<p><code>	private ItemDefinition(int id, String name, String examine, boolean noted, boolean noteable, boolean stackable, int parentId, int notedId, boolean members, int shopValue, int highAlcValue, int lowAlcValue, int[] bonuses) {
		this.id = id;
		this.name = name;
		this.examine = examine;
		this.noted = noted;
		this.noteable = noteable;
		this.stackable = stackable;
		this.parentId = parentId;
		this.notedId = notedId;
		this.members = members;
		this.shopValue = shopValue;
		this.highAlcValue = highAlcValue;
		this.lowAlcValue = lowAlcValue;
		this.bonuses = bonuses;
	}</code></p>
<p>That’s about all that needs too be explained, the rest of the code are just return methods.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/item-definitions-hyperion-thread/391767/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/item-definitions-hyperion-thread/391767/1</link>
        <pubDate>Wed, 20 Apr 2011 13:13:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-391767-1</guid>
        <source url="https://forum.moparisthebest.com/t/item-definitions-hyperion-thread/391767.rss">Item definitions [Hyperion thread]</source>
      </item>
  </channel>
</rss>
