<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[PI] Error when adding Herblore Skill - Help Please!</title>
    <link>https://forum.moparisthebest.com/t/pi-error-when-adding-herblore-skill-help-please/477740</link>
    <description>I get these errors.

I tried adding the missing ; and } but I still get the errors... anyone help?

[CODE]src\server\content\skills\Herblore.java:211: error: illegal start of expression
        public static boolean isIngredient(int item) {
        ^
src\server\content\skills\Herblore.java:211: error: illegal start of expression
        public static boolean isIngredient(int item) {
               ^
src\server\content\skills\Herblore.java:211: error: &#39;;&#39; expected
        public static boolean isIngredient(int item) {
                     ^
src\server\content\skills\Herblore.java:211: error: &#39;.class&#39; expected
        public static boolean isIngredient(int item) {
                                               ^
src\server\content\skills\Herblore.java:211: error: &#39;;&#39; expected
        public static boolean isIngredient(int item) {
                                                   ^
src\server\content\skills\Herblore.java:218: error: illegal start of expression
        public static boolean isGrindable(int item) {
        ^
src\server\content\skills\Herblore.java:218: error: illegal start of expression
        public static boolean isGrindable(int item) {
               ^
src\server\content\skills\Herblore.java:218: error: &#39;;&#39; expected
        public static boolean isGrindable(int item) {
                     ^
src\server\content\skills\Herblore.java:218: error: &#39;.class&#39; expected
        public static boolean isGrindable(int item) {
                                              ^
src\server\content\skills\Herblore.java:218: error: &#39;;&#39; expected
        public static boolean isGrindable(int item) {
                                                  ^
src\server\content\skills\Herblore.java:225: error: illegal start of expression
        public static void handleHerbloreButtons(Client c, int actionButtonId) {

        ^
src\server\content\skills\Herblore.java:225: error: illegal start of expression
        public static void handleHerbloreButtons(Client c, int actionButtonId) {

               ^
src\server\content\skills\Herblore.java:225: error: &#39;;&#39; expected
        public static void handleHerbloreButtons(Client c, int actionButtonId) {

                     ^
src\server\content\skills\Herblore.java:225: error: &#39;)&#39; expected
        public static void handleHerbloreButtons(Client c, int actionButtonId) {

                                                       ^
src\server\content\skills\Herblore.java:225: error: illegal start of expression
        public static void handleHerbloreButtons(Client c, int actionButtonId) {

                                                         ^
src\server\content\skills\Herblore.java:225: error: &#39;;&#39; expected
        public static void handleHerbloreButtons(Client c, int actionButtonId) {

                                                          ^
src\server\content\skills\Herblore.java:225: error: not a statement
        public static void handleHerbloreButtons(Client c, int actionButtonId) {

                                                               ^
src\server\content\skills\Herblore.java:225: error: &#39;;&#39; expected
        public static void handleHerbloreButtons(Client c, int actionButtonId) {

                                                                             ^
src\server\content\skills\Herblore.java:257: error: reached end of file while pa
rsing
}
 ^
19 errors
Press any key to continue . . .[/CODE]


Here&#39;s my Herblore.java

[CODE]package server.model.players.skills;

import server.model.items.*;
import server.model.players.*;
import server.event.*;

public class Herblore extends SkillHandler {
	
	private static int itemToAdd = -1, itemToDelete = -1, itemToDelete2 = -1, potExp = -1;
	private static final int  ANIM = 363, ANIM2 = 364, PESTLE = 233;
	
	private static final int[][] CLEAN_DATA = {
		{199, 249, 1, 3}, {201, 251, 5, 4}, 
		{203, 253, 11, 5}, {205, 255, 20, 6},
		{207, 257, 25, 8}, {3049, 2998, 30, 8},
		{12174, 12172, 35, 8}, {209, 259, 40, 9},
		{14836, 14854, 30, 8}, {211, 261, 48, 10},
		{213, 263, 54, 11}, {3051, 3000, 59, 12},
		{215, 265, 65, 13}, {2485, 2481, 67, 13},
		{217, 267, 70, 14}, {219, 269, 75, 15},
	
	};
	
	public static void cleanHerb(final Client player, final int herbId, int slotId) {
		for (int h = 0; h &lt; CLEAN_DATA.length; h++) {
			if(player.getItems().playerHasItem(CLEAN_DATA[h][0])) {
				if (player.getLevelForXP(player.playerXP[player.playerHerblore]) &lt; CLEAN_DATA[h][2]) {
					player.sM(&quot;You need an herblore level of &quot; + CLEAN_DATA[h][2] + &quot; to clean this herb.&quot;);
					return;
				}
				player.getItems().deleteItem(CLEAN_DATA[h][0], slotId, 1);
				player.getItems().addItem(CLEAN_DATA[h][1], 1);
				player.getPA().addSkillXP(CLEAN_DATA[h][3] * HERBLORE_XP, player.playerHerblore);
				player.sM(&quot;You clean the dirt from the &quot;+player.getItems().formatName(CLEAN_DATA[h][1]).toLowerCase()+&quot;.&quot;);
			}
		}
	}
	
	private static final int[][] POTION_DATA = { 
		{ 91, 221, 121, 1, 25 }, { 93, 235, 175, 5, 38 }, 
		{ 95, 225, 115, 12, 50 }, { 97, 223, 127, 22, 63 }, 
		{ 99, 239, 133, 30, 75 }, { 97, 9736, 9741, 36, 84 }, 
		{ 99, 231, 139, 38, 88 }, { 101, 221, 145, 45, 100 }, 
		{ 101, 235, 181, 48, 106 }, { 103, 231, 151, 50, 112 }, 
		{ 105, 225, 157, 55, 125 }, { 105, 241, 5940, 60, 137 }, 
		{ 3004, 223, 3026, 63, 142 }, { 107, 239, 163, 66, 150 }, 
		{ 2483, 241, 2454, 69, 158 }, { 109, 245, 169, 72, 163 }, 
		{ 2483, 3138, 3042, 76, 173 }, { 111, 247, 189, 78, 175 }, 
		{ 3002, 6693, 6687, 81, 180 }, { 157, 267, 15313, 89, 230 }, 
		{ 145, 261, 15309, 88, 220 }, { 163, 2481, 15317, 90, 240 }, 
		{ 3042, 9594, 15321, 91, 250 }, { 169, 267, 15325, 92, 260 }, 
		{ 139, 4255, 15329, 94, 270 }, { 3018, 5972, 15301, 84, 200 },
		{ 103, 10111, 10000, 53, 120 }, { 12181, 12654, 12142, 40, 92 },
		{ 227, 249, 91, 1, 0 }, { 227, 251, 93, 5, 0 }, 
		{ 227, 253, 95, 12, 0 }, { 227, 255, 97, 22, 0 }, 
		{ 227, 257, 99, 30, 0 }, { 227, 259, 101, 34, 0 }, 
		{ 227, 261, 103, 45, 0 }, { 227, 263, 105, 55, 0 },
		{ 227, 265, 107, 66, 0 }, { 227, 267, 109, 72, 0 }, 
		{ 227, 269, 111, 75, 0 }, { 227, 2481, 2483, 67, 0 }, 
		{ 227, 3000, 3004, 59, 0 }, { 227, 2998, 3002, 30, 0 },
		{ 227, 12172, 12181, 40, 0 },
	};
	
	public static void setupPotion(final Client c, int useItem, int itemUsed) {
		for (int f = 0; f &lt; POTION_DATA.length; f++) {
			if ((useItem == POTION_DATA[f][0] &amp;&amp; itemUsed == POTION_DATA[f][1]) || (useItem == POTION_DATA[f][1] &amp;&amp; itemUsed == POTION_DATA[f][0])) {
				if (c.playerLevel[c.playerHerblore] &lt; POTION_DATA[f][3]) {
					c.sM(&quot;You need an herblore level of &quot; + POTION_DATA[f][3] + &quot; to mix this potion.&quot;);
					return;
				}
				send1Item(c, POTION_DATA[f][2]);
				itemToDelete = POTION_DATA[f][1];
				itemToDelete2 = POTION_DATA[f][0];
				potExp = POTION_DATA[f][4];
				itemToAdd = POTION_DATA[f][2];
				c.isPotionMaking = true;
			}
		}	
	}
	
	public static void makePotion(final Client c, int amount) {
		if(c.playerSkilling[c.playerHerblore]) {
			return;	
		}
		if(itemToDelete &lt;= 0 || itemToDelete2 &lt;= 0) {
			return;
		}
		c.doAmount = amount;
		c.playerSkilling[c.playerHerblore] = true;
		c.getPA().removeAllWindows();
		c.startAnimation(ANIM);
		CycleEventHandler.getSingleton().addEvent(c, new CycleEvent() {
			@Override
				public void execute(CycleEventContainer container) {
					c.getItems().deleteItem(itemToDelete, c.getItems().getItemSlot(itemToDelete), 1);
					c.getItems().deleteItem(itemToDelete2, c.getItems().getItemSlot(itemToDelete2), 1);
					c.getItems().addItem(itemToAdd, 1);
					c.sM(&quot;You make a &quot; + c.getItems().formatName(itemToAdd).toLowerCase() + &quot;.&quot;);
					c.getPA().addSkillXP(potExp * HERBLORE_XP, c.playerHerblore);
					deleteTime(c);
					if(!c.getItems().playerHasItem(itemToDelete2, 1) || !c.getItems().playerHasItem(itemToDelete, 1) || c.doAmount &lt;= 0) {
						container.stop();
					}
					if(!c.isPotionMaking) {
						container.stop();
					}
				}
		@Override
			public void stop() {
				resetHerblore(c);
			}
		}, 1);
		CycleEventHandler.getSingleton().addEvent(c, new CycleEvent() {
			@Override
				public void execute(CycleEventContainer container) {
					c.startAnimation(ANIM);
					if(!c.playerSkilling[c.playerHerblore] || !c.isPotionMaking) {
						container.stop();
					}
				}
			@Override
				public void stop() {
				}
		}, 1);
	}
	
	private final static int[][] GRINDABLES = {
		{237, 235},
		{1973, 1975},
		{5075, 6693},
		{10109, 10111},
		{243, 241},
		{14703, 14704},
		{9735, 9736},
		{6466, 6467},
	};
	
	public static void setupGrinding(final Client c, final int itemUsed, final int usedWith) {
		for (int g = 0; g &lt; GRINDABLES.length; g++) {
			if ((itemUsed == GRINDABLES[g][0] &amp;&amp; usedWith == PESTLE) || (itemUsed == PESTLE &amp;&amp; usedWith == GRINDABLES[g][0])) {
				send1Item(c, GRINDABLES[g][1]);
				itemToDelete = GRINDABLES[g][0];
				itemToAdd = GRINDABLES[g][1];
				c.isGrinding = true;
			}
		}
	}
	
	private static void grindItem(final Client c, int amount) {
		if(c.playerSkilling[c.playerHerblore]) {
			return;	
		}
		if(itemToDelete &lt;= 0) {
			return;
		}
		c.doAmount = amount;
		c.playerSkilling[c.playerHerblore] = true;
		c.getPA().removeAllWindows();
		c.startAnimation(ANIM2);
		CycleEventHandler.getSingleton().addEvent(c, new CycleEvent() {
			@Override
				public void execute(CycleEventContainer container) {
					c.getItems().deleteItem(itemToDelete, c.getItems().getItemSlot(itemToDelete), 1);
					c.getItems().addItem(itemToAdd, 1);
					c.sM(&quot;You grind down the &quot; + c.getItems().formatName(itemToDelete).toLowerCase() + &quot;.&quot;);
					deleteTime(c);
					if(!c.getItems().playerHasItem(itemToDelete, 1) || c.doAmount &lt;= 0) {
						container.stop();
					}
					if(!c.isGrinding) {
						container.stop();
					}
				}
			@Override
				public void stop() {
					resetHerblore(c);
				}
			}, 1);
		CycleEventHandler.getSingleton().addEvent(c, new CycleEvent() {
			@Override
				public void execute(CycleEventContainer container) {
					c.startAnimation(ANIM2);
					if(!c.playerSkilling[c.playerHerblore] || !c.isGrinding) {
						container.stop();
					}
				}
			@Override
				public void stop() {
				}
		}, 1);
	}
	
		
	public static void resetHerblore(Client c) {
		itemToAdd = -1;
		itemToDelete = -1;
		itemToDelete2 = -1;
		potExp = -1;
		c.isGrinding = false;
		c.isPotionMaking = false;
		c.playerSkilling[c.playerHerblore] = false;
	}
	
	public static boolean isHerb(int item) {
		for (int i = 0; i &lt; CLEAN_DATA.length; i++) {
			if (item == CLEAN_DATA[i][0])
				return true;
		return false;
       }
	
	public static boolean isIngredient(int item) {
		for(int i = 0; i &lt; POTION_DATA.length; i++) {
			if(item == POTION_DATA[i][0] || item == POTION_DATA[i][1])
				return true;
			return false;
	}
	
	public static boolean isGrindable(int item) {
		for(int i = 0; i &lt; GRINDABLES.length; i++) {
			if(item == GRINDABLES[i][0])
				return true;
                          return false;
	}
	
	public static void handleHerbloreButtons(Client c, int actionButtonId) {
		switch(actionButtonId) {
			case 10239:
				if(c.isGrinding) {
					grindItem(c, 1);
				} else if(c.isPotionMaking) {
					makePotion(c, 1);
				}
				break;
			case 10238:
				if(c.isGrinding) {
					grindItem(c, 5);
				} else if(c.isPotionMaking) {
					makePotion(c, 5);
				}
				break;
			case 6212:
				if(c.isGrinding) {
					grindItem(c, 10);
				} else if(c.isPotionMaking) {
					makePotion(c, 10);
				}
				break;
			case 6211:
				if(c.isGrinding) {
					grindItem(c, 28);
				} else if(c.isPotionMaking) {
					makePotion(c, 28);
				}
				break;
		}
	}
}[/CODE]</description>
    
    <lastBuildDate>Sun, 06 Jan 2013 18:47:03 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/pi-error-when-adding-herblore-skill-help-please/477740.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[PI] Error when adding Herblore Skill - Help Please!</title>
        <dc:creator><![CDATA[@martinalbo martinalbo]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/martinalbo">@martinalbo</a> wrote:</p>
          <blockquote>
              <p>I get these errors.</p>
<p>I tried adding the missing ; and } but I still get the errors… anyone help?</p>
<p>[CODE]src\server\content\skills\Herblore.java:211: error: illegal start of expression<br>
public static boolean isIngredient(int item) {<br>
^<br>
src\server\content\skills\Herblore.java:211: error: illegal start of expression<br>
public static boolean isIngredient(int item) {<br>
^<br>
src\server\content\skills\Herblore.java:211: error: ‘;’ expected<br>
public static boolean isIngredient(int item) {<br>
^<br>
src\server\content\skills\Herblore.java:211: error: ‘.class’ expected<br>
public static boolean isIngredient(int item) {<br>
^<br>
src\server\content\skills\Herblore.java:211: error: ‘;’ expected<br>
public static boolean isIngredient(int item) {<br>
^<br>
src\server\content\skills\Herblore.java:218: error: illegal start of expression<br>
public static boolean isGrindable(int item) {<br>
^<br>
src\server\content\skills\Herblore.java:218: error: illegal start of expression<br>
public static boolean isGrindable(int item) {<br>
^<br>
src\server\content\skills\Herblore.java:218: error: ‘;’ expected<br>
public static boolean isGrindable(int item) {<br>
^<br>
src\server\content\skills\Herblore.java:218: error: ‘.class’ expected<br>
public static boolean isGrindable(int item) {<br>
^<br>
src\server\content\skills\Herblore.java:218: error: ‘;’ expected<br>
public static boolean isGrindable(int item) {<br>
^<br>
src\server\content\skills\Herblore.java:225: error: illegal start of expression<br>
public static void handleHerbloreButtons(Client c, int actionButtonId) {</p>
<pre><code>    ^
</code></pre>
<p>src\server\content\skills\Herblore.java:225: error: illegal start of expression<br>
public static void handleHerbloreButtons(Client c, int actionButtonId) {</p>
<pre><code>           ^
</code></pre>
<p>src\server\content\skills\Herblore.java:225: error: ‘;’ expected<br>
public static void handleHerbloreButtons(Client c, int actionButtonId) {</p>
<pre><code>                 ^
</code></pre>
<p>src\server\content\skills\Herblore.java:225: error: ‘)’ expected<br>
public static void handleHerbloreButtons(Client c, int actionButtonId) {</p>
<pre><code>                                                   ^
</code></pre>
<p>src\server\content\skills\Herblore.java:225: error: illegal start of expression<br>
public static void handleHerbloreButtons(Client c, int actionButtonId) {</p>
<pre><code>                                                     ^
</code></pre>
<p>src\server\content\skills\Herblore.java:225: error: ‘;’ expected<br>
public static void handleHerbloreButtons(Client c, int actionButtonId) {</p>
<pre><code>                                                      ^
</code></pre>
<p>src\server\content\skills\Herblore.java:225: error: not a statement<br>
public static void handleHerbloreButtons(Client c, int actionButtonId) {</p>
<pre><code>                                                           ^
</code></pre>
<p>src\server\content\skills\Herblore.java:225: error: ‘;’ expected<br>
public static void handleHerbloreButtons(Client c, int actionButtonId) {</p>
<pre><code>                                                                         ^
</code></pre>
<p>src\server\content\skills\Herblore.java:257: error: reached end of file while pa<br>
rsing<br>
}<br>
^<br>
19 errors<br>
Press any key to continue . . .[/CODE]</p>
<p>Here’s my Herblore.java</p>
<p>[CODE]package server.model.players.skills;</p>
<p>import server.model.items.<em>;<br>
import server.model.players.</em>;<br>
import server.event.*;</p>
<p>public class Herblore extends SkillHandler {</p>
<pre><code>private static int itemToAdd = -1, itemToDelete = -1, itemToDelete2 = -1, potExp = -1;
private static final int  ANIM = 363, ANIM2 = 364, PESTLE = 233;

private static final int[][] CLEAN_DATA = {
	{199, 249, 1, 3}, {201, 251, 5, 4}, 
	{203, 253, 11, 5}, {205, 255, 20, 6},
	{207, 257, 25, 8}, {3049, 2998, 30, 8},
	{12174, 12172, 35, 8}, {209, 259, 40, 9},
	{14836, 14854, 30, 8}, {211, 261, 48, 10},
	{213, 263, 54, 11}, {3051, 3000, 59, 12},
	{215, 265, 65, 13}, {2485, 2481, 67, 13},
	{217, 267, 70, 14}, {219, 269, 75, 15},

};

public static void cleanHerb(final Client player, final int herbId, int slotId) {
	for (int h = 0; h &lt; CLEAN_DATA.length; h++) {
		if(player.getItems().playerHasItem(CLEAN_DATA[h][0])) {
			if (player.getLevelForXP(player.playerXP[player.playerHerblore]) &lt; CLEAN_DATA[h][2]) {
				player.sM("You need an herblore level of " + CLEAN_DATA[h][2] + " to clean this herb.");
				return;
			}
			player.getItems().deleteItem(CLEAN_DATA[h][0], slotId, 1);
			player.getItems().addItem(CLEAN_DATA[h][1], 1);
			player.getPA().addSkillXP(CLEAN_DATA[h][3] * HERBLORE_XP, player.playerHerblore);
			player.sM("You clean the dirt from the "+player.getItems().formatName(CLEAN_DATA[h][1]).toLowerCase()+".");
		}
	}
}

private static final int[][] POTION_DATA = { 
	{ 91, 221, 121, 1, 25 }, { 93, 235, 175, 5, 38 }, 
	{ 95, 225, 115, 12, 50 }, { 97, 223, 127, 22, 63 }, 
	{ 99, 239, 133, 30, 75 }, { 97, 9736, 9741, 36, 84 }, 
	{ 99, 231, 139, 38, 88 }, { 101, 221, 145, 45, 100 }, 
	{ 101, 235, 181, 48, 106 }, { 103, 231, 151, 50, 112 }, 
	{ 105, 225, 157, 55, 125 }, { 105, 241, 5940, 60, 137 }, 
	{ 3004, 223, 3026, 63, 142 }, { 107, 239, 163, 66, 150 }, 
	{ 2483, 241, 2454, 69, 158 }, { 109, 245, 169, 72, 163 }, 
	{ 2483, 3138, 3042, 76, 173 }, { 111, 247, 189, 78, 175 }, 
	{ 3002, 6693, 6687, 81, 180 }, { 157, 267, 15313, 89, 230 }, 
	{ 145, 261, 15309, 88, 220 }, { 163, 2481, 15317, 90, 240 }, 
	{ 3042, 9594, 15321, 91, 250 }, { 169, 267, 15325, 92, 260 }, 
	{ 139, 4255, 15329, 94, 270 }, { 3018, 5972, 15301, 84, 200 },
	{ 103, 10111, 10000, 53, 120 }, { 12181, 12654, 12142, 40, 92 },
	{ 227, 249, 91, 1, 0 }, { 227, 251, 93, 5, 0 }, 
	{ 227, 253, 95, 12, 0 }, { 227, 255, 97, 22, 0 }, 
	{ 227, 257, 99, 30, 0 }, { 227, 259, 101, 34, 0 }, 
	{ 227, 261, 103, 45, 0 }, { 227, 263, 105, 55, 0 },
	{ 227, 265, 107, 66, 0 }, { 227, 267, 109, 72, 0 }, 
	{ 227, 269, 111, 75, 0 }, { 227, 2481, 2483, 67, 0 }, 
	{ 227, 3000, 3004, 59, 0 }, { 227, 2998, 3002, 30, 0 },
	{ 227, 12172, 12181, 40, 0 },
};

public static void setupPotion(final Client c, int useItem, int itemUsed) {
	for (int f = 0; f &lt; POTION_DATA.length; f++) {
		if ((useItem == POTION_DATA[f][0] &amp;&amp; itemUsed == POTION_DATA[f][1]) || (useItem == POTION_DATA[f][1] &amp;&amp; itemUsed == POTION_DATA[f][0])) {
			if (c.playerLevel[c.playerHerblore] &lt; POTION_DATA[f][3]) {
				c.sM("You need an herblore level of " + POTION_DATA[f][3] + " to mix this potion.");
				return;
			}
			send1Item(c, POTION_DATA[f][2]);
			itemToDelete = POTION_DATA[f][1];
			itemToDelete2 = POTION_DATA[f][0];
			potExp = POTION_DATA[f][4];
			itemToAdd = POTION_DATA[f][2];
			c.isPotionMaking = true;
		}
	}	
}

public static void makePotion(final Client c, int amount) {
	if(c.playerSkilling[c.playerHerblore]) {
		return;	
	}
	if(itemToDelete &lt;= 0 || itemToDelete2 &lt;= 0) {
		return;
	}
	c.doAmount = amount;
	c.playerSkilling[c.playerHerblore] = true;
	c.getPA().removeAllWindows();
	c.startAnimation(ANIM);
	CycleEventHandler.getSingleton().addEvent(c, new CycleEvent() {
		@Override
			public void execute(CycleEventContainer container) {
				c.getItems().deleteItem(itemToDelete, c.getItems().getItemSlot(itemToDelete), 1);
				c.getItems().deleteItem(itemToDelete2, c.getItems().getItemSlot(itemToDelete2), 1);
				c.getItems().addItem(itemToAdd, 1);
				c.sM("You make a " + c.getItems().formatName(itemToAdd).toLowerCase() + ".");
				c.getPA().addSkillXP(potExp * HERBLORE_XP, c.playerHerblore);
				deleteTime(c);
				if(!c.getItems().playerHasItem(itemToDelete2, 1) || !c.getItems().playerHasItem(itemToDelete, 1) || c.doAmount &lt;= 0) {
					container.stop();
				}
				if(!c.isPotionMaking) {
					container.stop();
				}
			}
	@Override
		public void stop() {
			resetHerblore(c);
		}
	}, 1);
	CycleEventHandler.getSingleton().addEvent(c, new CycleEvent() {
		@Override
			public void execute(CycleEventContainer container) {
				c.startAnimation(ANIM);
				if(!c.playerSkilling[c.playerHerblore] || !c.isPotionMaking) {
					container.stop();
				}
			}
		@Override
			public void stop() {
			}
	}, 1);
}

private final static int[][] GRINDABLES = {
	{237, 235},
	{1973, 1975},
	{5075, 6693},
	{10109, 10111},
	{243, 241},
	{14703, 14704},
	{9735, 9736},
	{6466, 6467},
};

public static void setupGrinding(final Client c, final int itemUsed, final int usedWith) {
	for (int g = 0; g &lt; GRINDABLES.length; g++) {
		if ((itemUsed == GRINDABLES[g][0] &amp;&amp; usedWith == PESTLE) || (itemUsed == PESTLE &amp;&amp; usedWith == GRINDABLES[g][0])) {
			send1Item(c, GRINDABLES[g][1]);
			itemToDelete = GRINDABLES[g][0];
			itemToAdd = GRINDABLES[g][1];
			c.isGrinding = true;
		}
	}
}

private static void grindItem(final Client c, int amount) {
	if(c.playerSkilling[c.playerHerblore]) {
		return;	
	}
	if(itemToDelete &lt;= 0) {
		return;
	}
	c.doAmount = amount;
	c.playerSkilling[c.playerHerblore] = true;
	c.getPA().removeAllWindows();
	c.startAnimation(ANIM2);
	CycleEventHandler.getSingleton().addEvent(c, new CycleEvent() {
		@Override
			public void execute(CycleEventContainer container) {
				c.getItems().deleteItem(itemToDelete, c.getItems().getItemSlot(itemToDelete), 1);
				c.getItems().addItem(itemToAdd, 1);
				c.sM("You grind down the " + c.getItems().formatName(itemToDelete).toLowerCase() + ".");
				deleteTime(c);
				if(!c.getItems().playerHasItem(itemToDelete, 1) || c.doAmount &lt;= 0) {
					container.stop();
				}
				if(!c.isGrinding) {
					container.stop();
				}
			}
		@Override
			public void stop() {
				resetHerblore(c);
			}
		}, 1);
	CycleEventHandler.getSingleton().addEvent(c, new CycleEvent() {
		@Override
			public void execute(CycleEventContainer container) {
				c.startAnimation(ANIM2);
				if(!c.playerSkilling[c.playerHerblore] || !c.isGrinding) {
					container.stop();
				}
			}
		@Override
			public void stop() {
			}
	}, 1);
}

	
public static void resetHerblore(Client c) {
	itemToAdd = -1;
	itemToDelete = -1;
	itemToDelete2 = -1;
	potExp = -1;
	c.isGrinding = false;
	c.isPotionMaking = false;
	c.playerSkilling[c.playerHerblore] = false;
}

public static boolean isHerb(int item) {
	for (int i = 0; i &lt; CLEAN_DATA.length; i++) {
		if (item == CLEAN_DATA[i][0])
			return true;
	return false;
   }

public static boolean isIngredient(int item) {
	for(int i = 0; i &lt; POTION_DATA.length; i++) {
		if(item == POTION_DATA[i][0] || item == POTION_DATA[i][1])
			return true;
		return false;
}

public static boolean isGrindable(int item) {
	for(int i = 0; i &lt; GRINDABLES.length; i++) {
		if(item == GRINDABLES[i][0])
			return true;
                      return false;
}

public static void handleHerbloreButtons(Client c, int actionButtonId) {
	switch(actionButtonId) {
		case 10239:
			if(c.isGrinding) {
				grindItem(c, 1);
			} else if(c.isPotionMaking) {
				makePotion(c, 1);
			}
			break;
		case 10238:
			if(c.isGrinding) {
				grindItem(c, 5);
			} else if(c.isPotionMaking) {
				makePotion(c, 5);
			}
			break;
		case 6212:
			if(c.isGrinding) {
				grindItem(c, 10);
			} else if(c.isPotionMaking) {
				makePotion(c, 10);
			}
			break;
		case 6211:
			if(c.isGrinding) {
				grindItem(c, 28);
			} else if(c.isPotionMaking) {
				makePotion(c, 28);
			}
			break;
	}
}
</code></pre>
<p>}[/CODE]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-error-when-adding-herblore-skill-help-please/477740/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-error-when-adding-herblore-skill-help-please/477740/1</link>
        <pubDate>Sun, 06 Jan 2013 18:47:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-477740-1</guid>
        <source url="https://forum.moparisthebest.com/t/pi-error-when-adding-herblore-skill-help-please/477740.rss">[PI] Error when adding Herblore Skill - Help Please!</source>
      </item>
  </channel>
</rss>
