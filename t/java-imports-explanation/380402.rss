<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Java Imports, Explanation</title>
    <link>https://forum.moparisthebest.com/t/java-imports-explanation/380402</link>
    <description>Okay so I&#39;m not actually sure where this should go, but people use Java to code servers because its fucking epic so I guess I put it here. 

If this is wrong section, just move it please. Its only an explanation of basics on how to use imports.

Lets start:
[b]import[/b]
Because of the straight solid source code naming convention, the Javac compiler can easily find the corresponding source or class files just from the fully qualified name of a package and class. By fully qualified I mean like the specific package name ETC.
[u]Example:[/u]
[code=java]java.util.ArrayList x = new java.util.ArrayList ( 149 );[/code]
The other option to this long-spaced style of coding, is to use import statements. A typical set of import statements.
[u]Example:[/u]
[code=java]import java.io.*;
import java.util.ArrayList;
import java.util.Date;[/code]
They must come right after the package statement, before the class statement. They are traditionally kept placed and organized in alphabetical order.

Lets say you import something from within your source. Ands its named... Boobies?
You would do it like this:

[code=java]import com.name.Jvs.Boobies; [/code]

But nessasarily, it doesn&#39;t always have to be like that.
There is also another form of import you can use.

[code=java]import.com.name.Jvs.*;[/code]
Then you can refer to the class as plain Boobies,
static methods as MyClass.myStaticMethod() 
and static variables and constants as MyClass.myStaticValue, 
without the com.mindprod.mypackage qualification.
There is no form of the import that lets you get away with coding your references
 without MyClass, e. g. just myStaticMethod() or myStaticValue.

Also a little tip when using imports. Try keeps your Class names origional, avoid name clashes
or you&#39;ll be in big trouble.

Hope this helped.</description>
    
    <lastBuildDate>Sat, 29 Jan 2011 17:50:22 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/java-imports-explanation/380402.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Java Imports, Explanation</title>
        <dc:creator><![CDATA[@deathschaos9 DeathsChaos9]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/deathschaos9">@deathschaos9</a> wrote:</p>
          <blockquote>
              <p>All tutorials in this section have to be related to RuneScape Private Servers, not Java in general.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-imports-explanation/380402/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-imports-explanation/380402/7</link>
        <pubDate>Sat, 29 Jan 2011 17:50:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-380402-7</guid>
        <source url="https://forum.moparisthebest.com/t/java-imports-explanation/380402.rss">Java Imports, Explanation</source>
      </item>
      <item>
        <title>Java Imports, Explanation</title>
        <dc:creator><![CDATA[@Kaex Kaex]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/kaex">@Kaex</a> wrote:</p>
          <blockquote>
              <p>I never said it ment it grants static access, read it correctly.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-imports-explanation/380402/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-imports-explanation/380402/6</link>
        <pubDate>Sat, 29 Jan 2011 16:55:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-380402-6</guid>
        <source url="https://forum.moparisthebest.com/t/java-imports-explanation/380402.rss">Java Imports, Explanation</source>
      </item>
      <item>
        <title>Java Imports, Explanation</title>
        <dc:creator><![CDATA[@primadude Primadude]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/primadude">@primadude</a> wrote:</p>
          <blockquote>
              <p>Using this:</p>
<pre><code class="lang-auto">import.com.name.Jvs.*;</code></pre>
<p>does not mean it grants static access to a class. It means that it will import <span class="bbcode-b">all</span> classes in that specified package, instead of importing just one.</p>
<p>Also, the ArrayList example you use should be declared like so:</p>
<pre><code class="lang-auto">java.util.ArrayList&lt;Object&gt; x = new java.util.ArrayList&lt;Object&gt;();</code></pre>
<p>And either leave the data type as raw ‘Object’ or specify, for example, an Integer or byte.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-imports-explanation/380402/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-imports-explanation/380402/5</link>
        <pubDate>Sat, 29 Jan 2011 16:41:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-380402-5</guid>
        <source url="https://forum.moparisthebest.com/t/java-imports-explanation/380402.rss">Java Imports, Explanation</source>
      </item>
      <item>
        <title>Java Imports, Explanation</title>
        <dc:creator><![CDATA[@Kaex Kaex]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/kaex">@Kaex</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="3" data-topic="380402">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/rash/40/5_1887921562df0dabfae55079ddabeb03.png" class="avatar"> rash:</div>
<blockquote>
<p>Thank you for this, helped me understand imports</p>
</blockquote>
</aside>
<p>Np. Its basics really but most people don’t use the *;.<br>
Its quite handy IMO. :o</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-imports-explanation/380402/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-imports-explanation/380402/4</link>
        <pubDate>Sat, 29 Jan 2011 13:34:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-380402-4</guid>
        <source url="https://forum.moparisthebest.com/t/java-imports-explanation/380402.rss">Java Imports, Explanation</source>
      </item>
      <item>
        <title>Java Imports, Explanation</title>
        <dc:creator><![CDATA[@rash Rash]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rash">@rash</a> wrote:</p>
          <blockquote>
              <p>Thank you for this, helped me understand imports</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-imports-explanation/380402/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-imports-explanation/380402/3</link>
        <pubDate>Sat, 29 Jan 2011 13:33:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-380402-3</guid>
        <source url="https://forum.moparisthebest.com/t/java-imports-explanation/380402.rss">Java Imports, Explanation</source>
      </item>
      <item>
        <title>Java Imports, Explanation</title>
        <dc:creator><![CDATA[@Sagi Sagi]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sagi">@Sagi</a> wrote:</p>
          <blockquote>
              <p>Nice tut! <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-imports-explanation/380402/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-imports-explanation/380402/2</link>
        <pubDate>Sat, 29 Jan 2011 13:31:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-380402-2</guid>
        <source url="https://forum.moparisthebest.com/t/java-imports-explanation/380402.rss">Java Imports, Explanation</source>
      </item>
      <item>
        <title>Java Imports, Explanation</title>
        <dc:creator><![CDATA[@Kaex Kaex]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/kaex">@Kaex</a> wrote:</p>
          <blockquote>
              <p>Okay so I’m not actually sure where this should go, but people use Java to code servers because its fucking epic so I guess I put it here.</p>
<p>If this is wrong section, just move it please. Its only an explanation of basics on how to use imports.</p>
<p>Lets start:<br>
<span class="bbcode-b">import</span><br>
Because of the straight solid source code naming convention, the Javac compiler can easily find the corresponding source or class files just from the fully qualified name of a package and class. By fully qualified I mean like the specific package name ETC.<br>
<span class="bbcode-u">Example:</span></p>
<pre><code class="lang-auto">java.util.ArrayList x = new java.util.ArrayList ( 149 );</code></pre>
<p>The other option to this long-spaced style of coding, is to use import statements. A typical set of import statements.<br>
<span class="bbcode-u">Example:</span></p>
<p><code>import java.io.*;
import java.util.ArrayList;
import java.util.Date;</code><br>
They must come right after the package statement, before the class statement. They are traditionally kept placed and organized in alphabetical order.</p>
<p>Lets say you import something from within your source. Ands its named… Boobies?<br>
You would do it like this:</p>
<pre><code class="lang-auto">import com.name.Jvs.Boobies; </code></pre>
<p>But nessasarily, it doesn’t always have to be like that.<br>
There is also another form of import you can use.</p>
<pre><code class="lang-auto">import.com.name.Jvs.*;</code></pre>
<p>Then you can refer to the class as plain Boobies,<br>
static methods as MyClass.myStaticMethod()<br>
and static variables and constants as MyClass.myStaticValue,<br>
without the com.mindprod.mypackage qualification.<br>
There is no form of the import that lets you get away with coding your references<br>
without MyClass, e. g. just myStaticMethod() or myStaticValue.</p>
<p>Also a little tip when using imports. Try keeps your Class names origional, avoid name clashes<br>
or you’ll be in big trouble.</p>
<p>Hope this helped.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-imports-explanation/380402/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-imports-explanation/380402/1</link>
        <pubDate>Sat, 29 Jan 2011 13:20:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-380402-1</guid>
        <source url="https://forum.moparisthebest.com/t/java-imports-explanation/380402.rss">Java Imports, Explanation</source>
      </item>
  </channel>
</rss>
