<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>ExecuteOnLan</title>
    <link>https://forum.moparisthebest.com/t/executeonlan/421205</link>
    <description>As an extension of, even a replacement of my previous script, [url=https://www.moparisthebest.com/smf/index.php/topic,494630.0.html]DieOnLan[/url], I give you ExecuteOnLan!

This enables you to execute commands on your computer with any software that supports WakeOnLan, you simply put the list of commands you wish to execute, the program tells you what MAC to send the WOL packet too, then it listens for that packet and executes the accompanying command.

I use this for my mediacenter running XBMC, I have it hooked up to my 1080p TV, as well as all of the standard definition TV&#39;s in my house by means of an RF-convertor and multiple RG-6 coax splitters, which of course only supports 1024x768.  So now I can change the resolution by clicking a button on the WOL program on my phone, which also doubles as my XBMC remote, handy!

[code=bash]
#!/bin/bash
hostname=$(cat /etc/hostname)
wol_port=&quot;2009&quot;
export DISPLAY=:0

commands=(&quot;xrandr -s 1024x768&quot; &quot;xrandr -s 1920x1080&quot; &quot;sudo poweroff&quot;)

# ensure needed programs are installed
for prog in socat xxd tr md5sum
do
     command -v &quot;$prog&quot; &gt;/dev/null 2&gt;&amp;1 || { echo &quot;This program requires $prog but it&#39;s not installed.&quot; &gt;&amp;2; exit 1; }
done

function mac_from_string(){
	# this seems as good of a way to generate a basically unique mac address as any
	mac=$(echo $1 | md5sum)
	#echo 000000${mac:0:6}
	echo ${mac:0:12}
}

function format_mac(){
	bare_mac=$1
	mac=&quot;&quot;
	for i in 0 2 4 6 8 10
	do
		mac=$mac${bare_mac:$i:2}&quot;:&quot;
	done
	mac=${mac:0:17}
	echo $mac
}

#format_mac &quot;030464b3cdb7&quot;; exit 0;

function wolmac(){
	mac=$1
	expected_string=&quot;ffffffffffff&quot;
	for i in {1..16}
	do
	  expected_string=&quot;$expected_string$mac&quot;
	done
	echo $expected_string
}

function run_command(){
	wol_recieved=$1
	for cmd in &quot;${commands[@]}&quot;
	do
		mac=$(mac_from_string &quot;$hostname$cmd&quot;)
		[ &quot;$wol_recieved&quot; == &quot;&quot; ] &amp;&amp; echo &quot;cmd: &#39;$cmd&#39; wol_mac: &#39;$(format_mac $mac)&#39;&quot; &amp;&amp; continue
		wol_expected=$(wolmac &quot;$mac&quot;)
		#echo &quot;wol_expected: &#39;$wol_expected&#39;&quot;
		if [ &quot;$wol_expected&quot; == &quot;$wol_recieved&quot; ]
		then
		  echo &quot;WOL packet recieved, executing &#39;$cmd&#39;&quot;
		  $cmd
		fi
	done
}

# prints out command:mac mapping
run_command

while true; do
        recieved_packet=$(socat -T1 UDP-LISTEN:$wol_port - | xxd -p | tr -d &#39;\n&#39;)
        echo &quot;recieved_packet: $recieved_packet&quot;
        run_command &quot;$recieved_packet&quot;
done
[/code]

example run:
[code]
mopar@mediacenter:~$ ./dol.sh 
cmd: &#39;xrandr -s 1024x768&#39; wol_mac: &#39;03:04:64:b3:cd:b7&#39;
cmd: &#39;xrandr -s 1920x1080&#39; wol_mac: &#39;40:c9:df:67:9f:2e&#39;
cmd: &#39;sudo poweroff&#39; wol_mac: &#39;39:4a:1f:c6:d4:48&#39;
recieved_packet: ffffffffffff030464b3cdb7030464b3cdb7030464b3cdb7030464b3cdb7030464b3cdb7030464b3cdb7030464b3cdb7030464b3cdb7030464b3cdb7030464b3cdb7030464b3cdb7030464b3cdb7030464b3cdb7030464b3cdb7030464b3cdb7030464b3cdb7
WOL packet recieved, executing &#39;xrandr -s 1024x768&#39;
recieved_packet: ffffffffffff40c9df679f2e40c9df679f2e40c9df679f2e40c9df679f2e40c9df679f2e40c9df679f2e40c9df679f2e40c9df679f2e40c9df679f2e40c9df679f2e40c9df679f2e40c9df679f2e40c9df679f2e40c9df679f2e40c9df679f2e40c9df679f2e
WOL packet recieved, executing &#39;xrandr -s 1920x1080&#39;
[/code]

Does anyone have a better way to generate the MAC addresses?  I try to keep them unique-per-machine by appending the host name, though I suppose it might be better to just have each computer listen on a different port.  Any ideas?</description>
    
    <lastBuildDate>Thu, 10 Nov 2011 21:20:13 +0000</lastBuildDate>
    <category>Technology</category>
    <atom:link href="https://forum.moparisthebest.com/t/executeonlan/421205.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>ExecuteOnLan</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>As an extension of, even a replacement of my previous script, <a href="https://www.moparisthebest.com/smf/index.php/topic,494630.0.html" data-bbcode="true">DieOnLan</a>, I give you ExecuteOnLan!</p>
<p>This enables you to execute commands on your computer with any software that supports WakeOnLan, you simply put the list of commands you wish to execute, the program tells you what MAC to send the WOL packet too, then it listens for that packet and executes the accompanying command.</p>
<p>I use this for my mediacenter running XBMC, I have it hooked up to my 1080p TV, as well as all of the standard definition TVâ€™s in my house by means of an RF-convertor and multiple RG-6 coax splitters, which of course only supports 1024x768.  So now I can change the resolution by clicking a button on the WOL program on my phone, which also doubles as my XBMC remote, handy!</p>
<pre><code class="lang-auto">#!/bin/bash
hostname=$(cat /etc/hostname)
wol_port="2009"
export DISPLAY=:0

commands=("xrandr -s 1024x768" "xrandr -s 1920x1080" "sudo poweroff")

# ensure needed programs are installed
for prog in socat xxd tr md5sum
do
     command -v "$prog" &gt;/dev/null 2&gt;&amp;1 || { echo "This program requires $prog but it's not installed." &gt;&amp;2; exit 1; }
done

function mac_from_string(){
	# this seems as good of a way to generate a basically unique mac address as any
	mac=$(echo $1 | md5sum)
	#echo 000000${mac:0:6}
	echo ${mac:0:12}
}

function format_mac(){
	bare_mac=$1
	mac=""
	for i in 0 2 4 6 8 10
	do
		mac=$mac${bare_mac:$i:2}":"
	done
	mac=${mac:0:17}
	echo $mac
}

#format_mac "030464b3cdb7"; exit 0;

function wolmac(){
	mac=$1
	expected_string="ffffffffffff"
	for i in {1..16}
	do
	  expected_string="$expected_string$mac"
	done
	echo $expected_string
}

function run_command(){
	wol_recieved=$1
	for cmd in "${commands[@]}"
	do
		mac=$(mac_from_string "$hostname$cmd")
		[ "$wol_recieved" == "" ] &amp;&amp; echo "cmd: '$cmd' wol_mac: '$(format_mac $mac)'" &amp;&amp; continue
		wol_expected=$(wolmac "$mac")
		#echo "wol_expected: '$wol_expected'"
		if [ "$wol_expected" == "$wol_recieved" ]
		then
		  echo "WOL packet recieved, executing '$cmd'"
		  $cmd
		fi
	done
}

# prints out command:mac mapping
run_command

while true; do
        recieved_packet=$(socat -T1 UDP-LISTEN:$wol_port - | xxd -p | tr -d '\n')
        echo "recieved_packet: $recieved_packet"
        run_command "$recieved_packet"
done</code></pre>
<p>example run:</p>
<pre><code class="lang-auto">mopar@mediacenter:~$ ./dol.sh 
cmd: 'xrandr -s 1024x768' wol_mac: '03:04:64:b3:cd:b7'
cmd: 'xrandr -s 1920x1080' wol_mac: '40:c9:df:67:9f:2e'
cmd: 'sudo poweroff' wol_mac: '39:4a:1f:c6:d4:48'
recieved_packet: ffffffffffff030464b3cdb7030464b3cdb7030464b3cdb7030464b3cdb7030464b3cdb7030464b3cdb7030464b3cdb7030464b3cdb7030464b3cdb7030464b3cdb7030464b3cdb7030464b3cdb7030464b3cdb7030464b3cdb7030464b3cdb7030464b3cdb7
WOL packet recieved, executing 'xrandr -s 1024x768'
recieved_packet: ffffffffffff40c9df679f2e40c9df679f2e40c9df679f2e40c9df679f2e40c9df679f2e40c9df679f2e40c9df679f2e40c9df679f2e40c9df679f2e40c9df679f2e40c9df679f2e40c9df679f2e40c9df679f2e40c9df679f2e40c9df679f2e40c9df679f2e
WOL packet recieved, executing 'xrandr -s 1920x1080'</code></pre>
<p>Does anyone have a better way to generate the MAC addresses?  I try to keep them unique-per-machine by appending the host name, though I suppose it might be better to just have each computer listen on a different port.  Any ideas?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/executeonlan/421205/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/executeonlan/421205/1</link>
        <pubDate>Thu, 10 Nov 2011 21:20:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-421205-1</guid>
        <source url="https://forum.moparisthebest.com/t/executeonlan/421205.rss">ExecuteOnLan</source>
      </item>
  </channel>
</rss>
