<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Cache</title>
    <link>https://forum.moparisthebest.com/t/cache/529406</link>
    <description>does anyone know which file is wrong, I&#39;ve edited cache links in: CacheDownloader, UpdateCache, Client.java.

My compiler gives the following error:

[url=http://postimg.org/image/55tffzj5x/][img]http://s18.postimg.org/55tffzj5x/pic8.jpg[/img][/url]

I edited the dropbox links many times.

It says the filename, the directoryname and the partitionname is wrong?

Thanks in forward,</description>
    
    <lastBuildDate>Fri, 06 Sep 2013 20:22:37 +0000</lastBuildDate>
    <category>Game Development</category>
    <atom:link href="https://forum.moparisthebest.com/t/cache/529406.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Cache</title>
        <dc:creator><![CDATA[@mistakengod mistakengod]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mistakengod">@mistakengod</a> wrote:</p>
          <blockquote>
              <p>Nolan I know, that <code>?dl=1</code> forces the download</p>
<hr>
<p>LoveandPower;</p>
<p>you were right about the unzipping if it’s in the folder.</p>
<p>Now I’ve to fix that the zip will get in the folder if the folder gets made.</p>
<p>Anyways, thanks <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cache/529406/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cache/529406/12</link>
        <pubDate>Fri, 06 Sep 2013 20:22:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-529406-12</guid>
        <source url="https://forum.moparisthebest.com/t/cache/529406.rss">Cache</source>
      </item>
      <item>
        <title>Cache</title>
        <dc:creator><![CDATA[@nolan2131 nolan2131]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/nolan2131">@nolan2131</a> wrote:</p>
          <blockquote>
              <p>Regardless if you tried it or not, your current cache link will make it download incorrectly. Good luck mayne  ;D</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cache/529406/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cache/529406/11</link>
        <pubDate>Fri, 06 Sep 2013 20:20:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-529406-11</guid>
        <source url="https://forum.moparisthebest.com/t/cache/529406.rss">Cache</source>
      </item>
      <item>
        <title>Cache</title>
        <dc:creator><![CDATA[@mistakengod mistakengod]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mistakengod">@mistakengod</a> wrote:</p>
          <blockquote>
              <p>Thank you,</p>
<p>I’ll try that <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cache/529406/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cache/529406/10</link>
        <pubDate>Fri, 06 Sep 2013 20:18:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-529406-10</guid>
        <source url="https://forum.moparisthebest.com/t/cache/529406.rss">Cache</source>
      </item>
      <item>
        <title>Cache</title>
        <dc:creator><![CDATA[@Loveandpower Loveandpower]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/loveandpower">@Loveandpower</a> wrote:</p>
          <blockquote>
              <p>[quote=“mistakengod, post:6, topic:529406”]Uhm, isn’t it the task of a cachedownloader that it downloads the .zip and extract it in a by signlink maked folder?[/quote]it creates a folder ( hence the /blah/ in signlink) , adds the zipped file to that /blah/ file, then it extracts it. My guess is that somehow that file didn’t zip correctly. Just retry the process for this time. Will check post when I go home about to leave work</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cache/529406/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cache/529406/9</link>
        <pubDate>Fri, 06 Sep 2013 20:17:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-529406-9</guid>
        <source url="https://forum.moparisthebest.com/t/cache/529406.rss">Cache</source>
      </item>
      <item>
        <title>Cache</title>
        <dc:creator><![CDATA[@mistakengod mistakengod]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mistakengod">@mistakengod</a> wrote:</p>
          <blockquote>
              <p>Thanks but already tried that</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cache/529406/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cache/529406/8</link>
        <pubDate>Fri, 06 Sep 2013 20:13:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-529406-8</guid>
        <source url="https://forum.moparisthebest.com/t/cache/529406.rss">Cache</source>
      </item>
      <item>
        <title>Cache</title>
        <dc:creator><![CDATA[@nolan2131 nolan2131]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/nolan2131">@nolan2131</a> wrote:</p>
          <blockquote>
              <p>Change your cache download link to this</p>
<pre><code class="lang-auto"></code></pre>
<p>Instead of this</p>
<pre><code class="lang-auto"></code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cache/529406/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cache/529406/7</link>
        <pubDate>Fri, 06 Sep 2013 20:11:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-529406-7</guid>
        <source url="https://forum.moparisthebest.com/t/cache/529406.rss">Cache</source>
      </item>
      <item>
        <title>Cache</title>
        <dc:creator><![CDATA[@mistakengod mistakengod]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mistakengod">@mistakengod</a> wrote:</p>
          <blockquote>
              <p>Uhm, isn’t it the task of a cachedownloader that it downloads the .zip and extract it in a by signlink maked folder?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cache/529406/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cache/529406/6</link>
        <pubDate>Fri, 06 Sep 2013 20:07:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-529406-6</guid>
        <source url="https://forum.moparisthebest.com/t/cache/529406.rss">Cache</source>
      </item>
      <item>
        <title>Cache</title>
        <dc:creator><![CDATA[@Loveandpower Loveandpower]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/loveandpower">@Loveandpower</a> wrote:</p>
          <blockquote>
              <p>from looking at the downloader doesn’t look like it’s a specific file so your cache might just need re-zipping/uploading etc. Remember to zip ALL folders and files IN the cache folder but not the folder TO the cache!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cache/529406/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cache/529406/5</link>
        <pubDate>Fri, 06 Sep 2013 20:05:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-529406-5</guid>
        <source url="https://forum.moparisthebest.com/t/cache/529406.rss">Cache</source>
      </item>
      <item>
        <title>Cache</title>
        <dc:creator><![CDATA[@mistakengod mistakengod]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mistakengod">@mistakengod</a> wrote:</p>
          <blockquote>
              <p>My CacheDownloader  =</p>
<p>[code]import <a href="http://java.io" rel="nofollow noopener">java.io</a>.<em>;<br>
import <a href="http://java.net" rel="nofollow noopener">java.net</a>.</em>;<br>
import java.util.zip.*;<br>
import java.util.Enumeration;<br>
import javax.swing.JOptionPane;<br>
import sign.signlink;</p>
<p>public class CacheDownloader {</p>
<pre><code>public client client;
public final int BUFFER = 1024;
public static final int VERSION = 1;
public String cacheLink = "https://www.dropbox.com/s/998aue3gee74j0v/cache.zip?dl=1";
public String fileToExtract = getCacheDir() + getArchivedName();

public CacheDownloader(client client) {
	this.client = client;
}

public void drawLoadingText(String text) {
	client.drawLoadingText(35, text);
}

public void drawLoadingText(int amount, String text) {
	client.drawLoadingText(amount, text);
}

public String getCacheDir() {
	return signlink.findcachedir();
}

public String getCacheLink() {
	return cacheLink;
}

public int getCacheVersion() {
	return VERSION;
}
	private void alert(String msg){
	alert("Message",msg,false);
}
	private void alert(String title,String msg,boolean error){
	JOptionPane.showMessageDialog(null,
		   msg,
		   title,
		    (error ? JOptionPane.ERROR_MESSAGE : JOptionPane.PLAIN_MESSAGE));
}

	public void DoesNotHaveCacheMessage() {
alert("You do not have the cache. Cache will now be downloaded, please do not interrupt the download!");
alert("If Client goes white, it's unpacking cache - let it load!!");
}

public CacheDownloader downloadCache() {
	try {
	File location = new File(getCacheDir());
	File version = new File(getCacheDir() + "/cacheUpdate" + getCacheVersion() + ".dat");
	if(!location.exists()) {
		//delete(getCacheDir());
		DoesNotHaveCacheMessage();
		downloadFile(getCacheLink(), getArchivedName());
		unZip();
		BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + 
</code></pre>
<p>“/cacheUpdate” + getCacheVersion() + “.dat”));<br>
versionFile.close();<br>
deleteDownloadedZipFile(getArchivedName());<br>
} else {<br>
if(!version.exists()) {<br>
DoesNotHaveCacheMessage();<br>
//delete(getCacheDir());<br>
downloadFile(getCacheLink(), getArchivedName());<br>
unZip();<br>
BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() +</p>
<p>“/cacheUpdate” + getCacheVersion() + “.dat”));<br>
versionFile.close();<br>
deleteDownloadedZipFile(getArchivedName());<br>
} else {<br>
return null;<br>
}<br>
}<br>
} catch(Exception e) {<br>
}<br>
return null;<br>
}</p>
<pre><code>public void downloadFile(String adress, String localFileName) {
	OutputStream out = null;
	URLConnection conn;
	InputStream in = null;
	try {
		URL url = new URL(adress);
		out = new BufferedOutputStream(new FileOutputStream(getCacheDir() + "/" +localFileName)); 
		conn = url.openConnection();
		in = conn.getInputStream(); 
		byte[] data = new byte[BUFFER]; 
		int numRead;
		long numWritten = 0;
		int length = conn.getContentLength();
		while((numRead = in.read(data)) != -1) {
			out.write(data, 0, numRead);
			numWritten += numRead;
        int percentage = (int)(((double)numWritten / (double)length) * 100D);
			drawLoadingText(percentage, "Downloading Cache " + percentage + "%");
		}
		drawLoadingText("Finished downloading "+getArchivedName()+"!");
	} catch (Exception exception) {
		exception.printStackTrace();
	} finally {
		try {
			if (in != null) {
				in.close();
			}
			if (out != null) {
				out.close();
			}
		} catch (IOException ioe) {
		}
	}
}

public String getArchivedName() {
	int lastSlashIndex = getCacheLink().lastIndexOf('/');
	if (lastSlashIndex &gt;= 0 
		&amp;&amp; lastSlashIndex &lt; getCacheLink().length() -1) { 
		return getCacheLink().substring(lastSlashIndex + 1);
	} else {
	}
	return "";
}

public void deleteDownloadedZipFile(String fileName) {
	File f = new File(getCacheDir() + fileName);
	if (!f.exists())
		throw new IllegalArgumentException("Delete: no such file or directory: " + fileName);
	if (!f.canWrite())
		throw new IllegalArgumentException("Delete: write protected: " + fileName);
	if (f.isDirectory()) {
		String[] files = f.list();
	if (files.length &gt; 0)
		throw new IllegalArgumentException("Delete: directory not empty: " + fileName);
	}
	boolean success = f.delete();
	if (!success)
		throw new IllegalArgumentException("Delete: deletion failed");
}

public static boolean delete( String path ) {
	if (path == null || path.trim().length() == 0) 
	return false;
	return delete(new File(path));
}

public static boolean delete( File fileOrDirectory ) {
	if (fileOrDirectory == null) return false;
	if (!fileOrDirectory.exists()) return false;
	if (fileOrDirectory.isDirectory()) {
		for (File childFile : fileOrDirectory.listFiles()) {
			delete(childFile);
		}
	}
	return fileOrDirectory.delete();
}

public void unZip() {
	try {
		InputStream in = new BufferedInputStream(new FileInputStream(fileToExtract));
		ZipInputStream zin = new ZipInputStream(in);
		ZipEntry e;
		while((e=zin.getNextEntry()) != null) {
           	if(e.isDirectory()) {
				(new File(getCacheDir() + e.getName())).mkdir();
           	} else {
			if (e.getName().equals(fileToExtract)) {
				unzip(zin, fileToExtract);
				break;
			}
				unzip(zin, getCacheDir() + e.getName());
			}
		}
		zin.close();
	} catch(Exception e) {
		e.printStackTrace();
	}
}

public void unzip(ZipInputStream zin, String s) throws IOException {
	FileOutputStream out = new FileOutputStream(s);
	byte [] b = new byte[BUFFER];
	int len = 0;
	while ((len = zin.read(b)) != -1) {
		out.write(b,0,len);
	}
	out.close();
}
</code></pre>
<p>}[/code]</p>
<p>my signlink =</p>
<p>[code]// Decompiled by Jad v1.5.8f. Copyright 2001 Pavel Kouznetsov.<br>
// Jad home page: <a href="http://www.kpdus.com/jad.html" rel="nofollow noopener">http://www.kpdus.com/jad.html</a><br>
// Decompiler options: packimports(3)<br>
// Source File Name:   signlink.java</p>
<p>package sign;</p>
<p>import java.applet.Applet;<br>
import <a href="http://java.io" rel="nofollow noopener">java.io</a>.<em>;<br>
import <a href="http://java.net" rel="nofollow noopener">java.net</a>.</em>;</p>
<p>public final class signlink<br>
implements Runnable<br>
{</p>
<pre><code>public static void startpriv(InetAddress inetaddress)
{
    threadliveid = (int)(Math.random() * 99999999D);
    if(active)
    {
        try
        {
            Thread.sleep(500L);
        }
        catch(Exception _ex) { }
        active = false;
    }
    socketreq = 0;
    threadreq = null;
    dnsreq = null;
    savereq = null;
    urlreq = null;
    socketip = inetaddress;
    Thread thread = new Thread(new signlink());
    thread.setDaemon(true);
    thread.start();
    while(!active)
        try
        {
            Thread.sleep(50L);
        }
        catch(Exception _ex) { }
}

public void run()
{
    active = true;
    String s = findcachedir();
    uid = getuid(s);
    try
    {
        File file = new File(s + "main_file_cache.dat");
        cache_dat = new RandomAccessFile(s + "main_file_cache.dat", "rw");
        for(int j = 0; j &lt; 5; j++)
            cache_idx[j] = new RandomAccessFile(s + "main_file_cache.idx" + j, "rw");

    }
    catch(Exception exception)
    {
        exception.printStackTrace();
    }
    for(int i = threadliveid; threadliveid == i;)
    {
        if(socketreq != 0)
        {
            try
            {
                socket = new Socket(socketip, socketreq);
            }
            catch(Exception _ex)
            {
                socket = null;
            }
            socketreq = 0;
        } else
        if(threadreq != null)
        {
            Thread thread = new Thread(threadreq);
            thread.setDaemon(true);
            thread.start();
            thread.setPriority(threadreqpri);
            threadreq = null;
        } else
        if(dnsreq != null)
        {
            try
            {
                dns = InetAddress.getByName(dnsreq).getHostName();
            }
            catch(Exception _ex)
            {
                dns = "unknown";
            }
            dnsreq = null;
        } else
        if(savereq != null)
        {
            if(savebuf != null)
                try
                {
                    FileOutputStream fileoutputstream = new FileOutputStream(s + savereq);
                    fileoutputstream.write(savebuf, 0, savelen);
                    fileoutputstream.close();
                }
                catch(Exception _ex) { }
            if(waveplay)
            {
                String wave = s + savereq;
                waveplay = false;
            }
            if(midiplay)
            {
                midi = s + savereq;
                midiplay = false;
            }
            savereq = null;
        } else
        if(urlreq != null)
        {
            try
            {
                System.out.println("urlstream");
                urlstream = new DataInputStream((new URL(mainapp.getCodeBase(), urlreq)).openStream());
            }
            catch(Exception _ex)
            {
                urlstream = null;
            }
            urlreq = null;
        }
        try
        {
            Thread.sleep(50L);
        }
        catch(Exception _ex) { }
    }

}
public static String findcachedir()
{
    return System.getProperty("user.home")+"/vertexpk1/";
}
</code></pre>
<p>/* public static String findcachedir() {</p>
<pre><code>	String as[] = { "C:/" };
	String s = "vertexpk1";
	for (int i = 0; i &lt; as.length; i++)
		try {
			String s1 = as[i];
			if (s1.length() &gt; 0) {
				File file = new File(s1);
			if (!file.exists())
				continue;
			}
			File file1 = new File(s1 + s);
			if (file1.exists() || file1.mkdir())
				return s1 + s + "/";
		} catch (Exception _ex) {
		}
	return null;
}*/

public static String findcachedirORIG()
{
    String as[] = {
        "c:/windows/", "c:/winnt/", "d:/windows/", "d:/winnt/", "e:/windows/", "e:/winnt/", "f:/windows/", "f:/winnt/", "c:/", "~/",
        "/tmp/", "", "c:/rscache", "/rscache"
    };
    if(storeid &lt; 32 || storeid &gt; 34)
        storeid = 32;
    String s = "C:/vertexpk1";
    for(int i = 0; i &lt; as.length; i++)
        try
        {
            String s1 = as[i];
            if(s1.length() &gt; 0)
            {
                File file = new File(s1);
                if(!file.exists())
                    continue;
            }
           File file1 = new File((new StringBuilder()).append(s1).append(s).toString());
            if(file1.exists() || file1.mkdir())
                return (new StringBuilder()).append(s1).append(s).append("/").toString();
        }
        catch(Exception _ex) { }
 
    return null;

}

public static int getuid(String s)
{
return 8;
}

public static synchronized Socket opensocket(int i)
    throws IOException
{
    for(socketreq = i; socketreq != 0;)
        try
        {
            Thread.sleep(50L);
        }
        catch(Exception _ex) { }

    if(socket == null)
        throw new IOException("could not open socket");
    else
        return socket;
}

public static synchronized DataInputStream openurl(String s)
    throws IOException
{
    for(urlreq = s; urlreq != null;)
        try
        {
            Thread.sleep(50L);
        }
        catch(Exception _ex) { }

    if(urlstream == null)
        throw new IOException("could not open: " + s);
    else
        return urlstream;
}

public static synchronized void dnslookup(String s)
{
    dns = s;
    dnsreq = s;
}

public static synchronized void startthread(Runnable runnable, int i)
{
    threadreqpri = i;
    threadreq = runnable;
}

public static synchronized boolean wavesave(byte abyte0[], int i)
{
    if(i &gt; 0x1e8480)
        return false;
    if(savereq != null)
    {
        return false;
    } else
    {
        wavepos = (wavepos + 1) % 5;
        savelen = i;
        savebuf = abyte0;
        waveplay = true;
        savereq = "sound" + wavepos + ".wav";
        return true;
    }
}

public static synchronized boolean wavereplay()
{
    if(savereq != null)
    {
        return false;
    } else
    {
        savebuf = null;
        waveplay = true;
        savereq = "sound" + wavepos + ".wav";
        return true;
    }
}

public static synchronized void midisave(byte abyte0[], int i)
{
    if(i &gt; 0x1e8480)
        return;
    if(savereq != null)
    {
    } else
    {
        midipos = (midipos + 1) % 5;
        savelen = i;
        savebuf = abyte0;
        midiplay = true;
        savereq = "jingle" + midipos + ".mid";
    }
}

public static void reporterror(String s)
{
    System.out.println("Error: " + s);
}

private signlink()
{
}
public static void setuid() {
uid = 8;
}
public static final int clientversion = 317;
public static int uid;
public static int storeid = 32;
public static RandomAccessFile cache_dat = null;
public static final RandomAccessFile[] cache_idx = new RandomAccessFile[5];
public static boolean sunjava;
public static final Applet mainapp = null;
private static boolean active;
private static int threadliveid;
private static InetAddress socketip;
private static int socketreq;
private static Socket socket = null;
private static int threadreqpri = 1;
private static Runnable threadreq = null;
private static String dnsreq = null;
public static String dns = null;
private static String urlreq = null;
private static DataInputStream urlstream = null;
private static int savelen;
private static String savereq = null;
private static byte[] savebuf = null;
private static boolean midiplay;
private static int midipos;
public static String midi = null;
public static int midivol;
public static int midifade;
private static boolean waveplay;
private static int wavepos;
public static int wavevol;
public static boolean reporterror = true;
public static String errorname = "";
</code></pre>
<p>}<br>
[/code]</p>
<p>This isn’t my cache, before I gonna edit many things in this server I want to make sure the cachedownloader works.</p>
<p>first off client.bat gives :</p>
<ol>
<li>
<pre><code class="lang-auto"></code></pre>
</li>
<li>
<pre><code class="lang-auto"></code></pre>
</li>
<li>
<pre><code class="lang-auto"></code></pre>
</li>
</ol>
<p>Thanks for helping <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cache/529406/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cache/529406/4</link>
        <pubDate>Fri, 06 Sep 2013 20:00:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-529406-4</guid>
        <source url="https://forum.moparisthebest.com/t/cache/529406.rss">Cache</source>
      </item>
      <item>
        <title>Cache</title>
        <dc:creator><![CDATA[@Loveandpower Loveandpower]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/loveandpower">@Loveandpower</a> wrote:</p>
          <blockquote>
              <p>Is this thrown WHILE downloading? Or is this thrown during unpacking?</p>
<p>Also, is this your cache or is this somebody else’s?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cache/529406/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cache/529406/3</link>
        <pubDate>Fri, 06 Sep 2013 19:57:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-529406-3</guid>
        <source url="https://forum.moparisthebest.com/t/cache/529406.rss">Cache</source>
      </item>
      <item>
        <title>Cache</title>
        <dc:creator><![CDATA[@nolan2131 nolan2131]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/nolan2131">@nolan2131</a> wrote:</p>
          <blockquote>
              <p>Post your signlink, and cachedownloader. I will look at it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cache/529406/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cache/529406/2</link>
        <pubDate>Fri, 06 Sep 2013 19:54:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-529406-2</guid>
        <source url="https://forum.moparisthebest.com/t/cache/529406.rss">Cache</source>
      </item>
      <item>
        <title>Cache</title>
        <dc:creator><![CDATA[@mistakengod mistakengod]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mistakengod">@mistakengod</a> wrote:</p>
          <blockquote>
              <p>does anyone know which file is wrong, I’ve edited cache links in: CacheDownloader, UpdateCache, Client.java.</p>
<p>My compiler gives the following error:</p>
<p><a href="http://postimg.org/image/55tffzj5x/" data-bbcode="true" rel="nofollow noopener"><img src="http://s18.postimg.org/55tffzj5x/pic8.jpg" alt width="" height=""></a></p>
<p>I edited the dropbox links many times.</p>
<p>It says the filename, the directoryname and the partitionname is wrong?</p>
<p>Thanks in forward,</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cache/529406/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cache/529406/1</link>
        <pubDate>Fri, 06 Sep 2013 19:49:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-529406-1</guid>
        <source url="https://forum.moparisthebest.com/t/cache/529406.rss">Cache</source>
      </item>
  </channel>
</rss>
