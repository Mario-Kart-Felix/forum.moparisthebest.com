<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Some commands #343</title>
    <link>https://forum.moparisthebest.com/t/some-commands-343/331</link>
    <description>Not even sure if they work properly.. :D 


http://icenet.us/3rxbin/showpaste.php?i=30
[code]
import java.util.Hashtable;


public boolean gfx = true;
public boolean autologin = false;
public static client client1;
public boolean Running = false;
public static int world = 0;
public Script macro;
public static Hashtable macros = new Hashtable();

public int findItemInInv(String name) { 
	for (int i = 0; i&lt;28; i++) 
	{
		int id = inventory(i); 
			if (id != -1) 
			{
				String thisName = itemName(id); 
					if(thisName != null &amp;&amp; thisName.indexOf(name)&gt;-1) 
					{	
					return i; 
				} 
			} 
		} 
	return -1; 
}
public String itemName(int id) { 
	Class21 itemDesc = Class21.method319(id); 
		if (itemDesc.aString468 != null) 
			{ 
			return itemDesc.aString468; 
		} else 
	{ 
return &quot;&quot;; 
} 
}
public int inventory(int slot) { 
	Class17 thingie = Class17.method280(anIntArray1087[3]); 
		int result = thingie.method280(thingie.anIntArray397[0]).anIntArray421[slot]-1; 
			if (!(thingie.method280(thingie.anIntArray397[0]).anIntArray421[slot] &gt; 0)) result = -1; 
	return result; 
}
    public int currentInterface()
    {
    	return anInt1303;
    }
    public boolean npcNear(String name)
    {
        for(int x=0; x &lt; anInt1191; x++) 
        {
            if(aClass43_Sub2_Sub1_Sub6_Sub2Array1238[anIntArray1240[x]].aClass11_1763.aString220.equalsIgnoreCase(name)) 
            {
                return true;
            }
            return false;
        }
    }
    public void logout()
    {
    	anInt1000 = 250;
    	super.anInt18 -= 500;
    	aClass43_Sub2_Sub3_897.method538(5, 24);
    }
    public int nearestObject(int i, int j)
    {
    	return 0;
    }
    public int getStatExp(int stat)
    {
    	return anIntArray1207[stat];
    }
    public int getMaxLevel(int stat)
    {
    	return anIntArray1128[stat];
    }
    public int getCurLevel(int stat)
    {
    	return anIntArray924[stat];
    }
    /*public void Walk(int ^arrayX^, int ^arrayY^)
    {
            if(!^walkBoolean^)
                ^walkClass^.^walkMethod^(^walkShit^, ((super.^mouseY^ - 4)+bigY()), ((super.^mouseX^ - 4)+bigX()));
            else
                ^walkClass^.^walkMethod^(^walkShit^, ((^arrayY^ - 4)+bigY()), ((^arrayX^ - 4)+bigX()));
    }*/
    public void atObject5(int uid)
    {
	int id = uid;
	int x = id &amp; 0x7f;
	int y = id &gt;&gt; 7 &amp; 0x7f;
    	action(1002, id, x, y);
    }
    public void atObject4(int uid)
    {
	int id = uid;
	int x = id &amp; 0x7f;
	int y = id &gt;&gt; 7 &amp; 0x7f;
    	action(835, id, x, y);
    }
    public void atObject3(int uid)
    {
	int id = uid;
	int x = id &amp; 0x7f;
	int y = id &gt;&gt; 7 &amp; 0x7f;
    	action(978, id, x, y);
    }
    public void atObject2(int uid)
    {
	int id = uid;
	int x = id &amp; 0x7f;
	int y = id &gt;&gt; 7 &amp; 0x7f;
    	action(683, id, x, y);
    }
    public void atObject(int uid)
    {
	int id = uid;
	int x = id &amp; 0x7f;
	int y = id &gt;&gt; 7 &amp; 0x7f;
    	action(396, id, x, y);
    }
    public void atObject5(int x,int y)
    {
    	int uid = 0;
    	action(1002, uid, x, y);
    }
    public void atObject4(int x,int y)
    {
    	int uid = 0;
    	action(835, uid, x, y);
    }
    public void atObject3(int x,int y)
    {
    	int uid = 0;
    	action(978, uid, x, y);
    }
    public void atObject2(int x,int y)
    {
    	int uid = 0;
    	action(683, uid, x, y);
    }
    public void atObject(int x,int y)
    {
        x -= bigX();
        y -= bigY();
        int uid = nearestObject(x, y);
    	action(396, uid, x, y);
    }
    /*public void setMode(int l)
    {
        anIntArray987[0] = l;
        ^menuChosen^(^menuOther^, anInt887 - 1);
    }*/
    private void setTray()
    {
    	final SystemTray tray = SystemTray.getDefaultSystemTray();
        ImageIcon i = new ImageIcon(System.getProperty(&quot;user.dir&quot;) + &quot;/icon2.gif&quot;);
        final TrayIcon ti = new TrayIcon(i, &quot;PoonAble - &quot;+username());
        ti.setIconAutoSize(true);
        ti.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
		 aFrame_Sub1_15.setVisible(true);
		 tray.removeTrayIcon(ti);
            }
        });
        aFrame_Sub1_15.setVisible(false);
        tray.addTrayIcon(ti);
    }
    public final void keyPressed(KeyEvent keyevent)
    {
        int i = keyevent.getKeyCode();
        System.out.println(i);
        if(i == 112)
        	System.out.println(&quot;#&quot;+currentInterface);
        if(i == 121)
        {
        	setTray();
        	System.out.println(&quot;Minimized to system tray!&quot;);
        }
        if(i == 122)
        {
        	gfx = !gfx;
        	printrs(&quot;Graphics &quot;+(gfx ? &quot;en&quot; : &quot;dis&quot;) + &quot;abled&quot;);
        	print(&quot;Graphics &quot;+(gfx ? &quot;en&quot; : &quot;dis&quot;) + &quot;abled&quot;);
        }
        if(i == 123)
        {
        	autologin = !autologin;
        	printrs(&quot;Autologin &quot;+(autologin ? &quot;en&quot; : &quot;dis&quot;) + &quot;abled&quot;);
        	print(&quot;Autologin &quot;+(autologin ? &quot;en&quot; : &quot;dis&quot;) + &quot;abled&quot;);
        }
        super.keyPressed(keyevent);
    }
    public boolean isFlag()
    {
    	if(anInt899 != 0)
    	    return true;
    	return false;
    }
    private void logIn()
    {
    	method19(aString980, aString981, false);
    }
    /*public void printrs(String s1)
    {
    	^line^printVoid^
    }*/
    public void say(String s)
    {
        
        aString1117 = s;
        Class43_Sub2_Sub2.method480(0, 479, 0, 77, (byte)-128);
        aString1117 = &quot;&quot;;
    }
    public int rand(int i, int i1)
    {
        return (int)(Math.random() * (double)(i1 - i)) + i;
    }
    public void withdrawAll(int id)
    {
        
        for(int slot = 0; slot &lt; 28; slot++)
        {
        action(257,id,slot,5382);
        }
    }
    public void storeAll(int id)
    {
        
        for(int slot = 0; slot &lt; 28; slot++)
        {
            action(257,id,slot,5064);
        }
    }
    public void withdrawAll()
    {
        while(invCount() &gt; 1)
        {
            for(int x = 0; x &lt; 28; x++)
            {
                if(getInv(x) != -1 &amp;&amp; getInv(x) != 1275)
                {
                    withdrawAll(x);
                    wait(rand(1000, 2000));
                }
            }
        }
    }
    public void storeAll()
    {
        while(invCount() &gt; 1)
        {
            for(int x = 0; x &lt; 28; x++)
            {
                if(getInv(x) != -1 &amp;&amp; getInv(x) != 1275)
                {
                    storeAll(x);
                    wait(rand(1000, 2000));
                }
            }
        }
    }
    public int getInv(int i)
    {
        Class17 class17 = Class17.method280(3214);
        return class17.anIntArray421[i] - 1;
    }
    public int invCount()
    {
        int count = 0;
        Class17 class17 = Class17.method280(anIntArray1087[3]);
        for (int i = 0; i &lt; 28; i++)
        {
            if (Class17.method280(class17.anIntArray397[0]).anIntArray421[i] != 0)
            {
                count++;
            }
        }
        return count;
    }
    public void withdraw1(int id,int slot)
    {
        action(426,id,slot,5382);
    }
    public void withdraw5(int id,int slot)
    {
        action(168,id,slot,5382);
    }
    public void withdraw10(int id,int slot)
    {
        action(725,id,slot,5382);
    }
    public void withdrawAll(int id,int slot)
    {
        action(257,id,slot,5382);
    }
    public void store1(int id,int slot)
    {
        action(426,id,slot,5064);
    }
    public void store5(int id,int slot)
    {
        action(168,id,slot,5064);
    }
    public void store10(int id,int slot)
    {
        action(725,id,slot,5064);
    }
    public void storeAll(int id,int slot)
    {
        action(257,id,slot,5064);
    }
    public void attackNpc(String name)
    {
        
        for(int x=0; x &lt; anInt1191; x++) 
        {
            if(aClass43_Sub2_Sub1_Sub6_Sub2Array1238[anIntArray1240[x]].aClass11_1763.aString220.equalsIgnoreCase(name)) 
            {
        	action(111,anIntArray1240[x],0,0);
                return;
            }
        }
    }
    public void attackNpc(int index)
    {
        action(111,index,0,0);
    }
    public void talkToNpc(String name)
    {
        
        for(int x=0; x &lt; anInt1191; x++) 
        {
            if(aClass43_Sub2_Sub1_Sub6_Sub2Array1238[anIntArray1240[x]].aClass11_1763.aString220.equalsIgnoreCase(name)) 
            {
        	action(456,anIntArray1240[x],0,0);
                return;
            }
        }
    }
    public void talkToNpc(int index)
    {
        action(456,index,0,0);
    }
    public boolean loggedIn()
    {
        
    	return aBoolean1166;
    }
    public int playerCount()
    {
        
        return anInt1275;
    }
    public int npcCount()
    {
        
        return anInt1239;
    }
    public String username()
    {
        
        return aString980;
    }
    public int getX()
    {
        return (anInt1267 + ((Class43_Sub2_Sub1_Sub6) (aClass43_Sub2_Sub1_Sub6_Sub1_1244)).anIntArray1628[0]);
    }
    public int getY()
    {
        return (anInt1268 + ((Class43_Sub2_Sub1_Sub6) (aClass43_Sub2_Sub1_Sub6_Sub1_1244)).anIntArray1629[0]);
    }
    public int bigX()
    {
        return anInt1267;
    }
    public int bigY()
    {
        return anInt1268;
    }
    public int smallX()
    {
        return ((Class43_Sub2_Sub1_Sub6) (aClass43_Sub2_Sub1_Sub6_Sub1_1244)).anIntArray1628[0];
    }
    public int smallY()
    {
        return ((Class43_Sub2_Sub1_Sub6) (aClass43_Sub2_Sub1_Sub6_Sub1_1244)).anIntArray1629[0];
    }
    public void print(int i)
    {
        
    	System.out.println(i);
    }
    public void print(boolean b)
    {
        
    	System.out.println(b);
    }
    public void print(String s)
    {
        
    	System.out.println(s);
    }
    public void wait(int i)
    {
        try
        {
            Thread.sleep(i);
        }
        catch(Exception e){System.out.println(&quot;Wait() exception: &quot;+e);}
    }
    public void waitForLoad()
    {
        try
        {
            while(isLoading())
                Thread.sleep(10);
        }
        catch(Exception e){System.out.println(&quot;WaitForLoad() exception: &quot;+e);}
    }
    public boolean isLoading()
    {
        return aBoolean1178 &amp;&amp; anInt1162 == 2 &amp;&amp; Class37.anInt669 != anInt1280;
    }
    public void runScript(final String name)
    {
	System.out.println(&quot;Started script!&quot;);
        macro = (Script)macros.get(name);
        Thread thread = new Thread(new Runnable()
        {
            public void run()
            {
                macro.start(name);
            }
        });
        Running = true;
        thread.start();
    }
	public static void loadScripts(client client1)
	{
		macros = new Hashtable();
		System.out.println(&quot;Loading Scripts...&quot;);
		File f = new File(System.getProperty(&quot;user.dir&quot;) + &quot;/scripts&quot;);
		System.out.println(&quot;--------&quot;);
		String[] files = f.list();
		for(int i = 0; i &lt; files.length;i++)
		{
			try
			{
				if(files[i].endsWith(&quot;.class&quot;) &amp;&amp; files[i].indexOf(&#39;$&#39;) == -1)
				{
					Class clazz = Class.forName(files[i].substring(0,files[i].length()-&quot;.class&quot;.length()));
					Script macro = (Script)clazz.getConstructor(new Class[]{client.class}).newInstance(new Object[]{client1});
					String[] commands = macro.getCommands();
					System.out.print(files[i]);
					System.out.print(&quot; - &quot;);
					for(int j = 0; j &lt; commands.length;j++)
					{
						System.out.println(&quot;/run &quot;+commands[j]);
						macros.put(commands[j], macro);
					}
				}
			}
			catch(Exception e)
			{
				e.printStackTrace();
				e.toString();
			}
		}
		System.out.println(&quot;--------&quot;);
	}
    public void action(int command, int i1, int i2, int i3)
    {
        
        anIntArray988[0] = command;
        anIntArray989[0] = i1;
        anIntArray986[0] = i2;
        anIntArray987[0] = i3;
        //^menuChosen^(^menuOther^, anInt887 - 1);
    }
    public void commands(String command)
    {
                        String s = command.trim().toLowerCase().substring(2);
                        if(s.startsWith(&quot;run &quot;))
                        {
			    if (Running == false)
			    {
			        command = command.substring(6);
			        int paramIndex = command.indexOf(&quot; &quot;);
			        if(paramIndex == -1)
			            macro = (Script)macros.get(command);
			        else
			            macro = (Script)macros.get(command.substring(0,paramIndex));
			        String param = null;
			        String tcmd = null;
			        if (paramIndex != -1)
			        {
			            param = command.substring(paramIndex + 1);
			            tcmd = command.substring(0,paramIndex);
			        }
			        else
			        {
			            param = null;
			            tcmd = command;
			        }
			        String [] param1  = null;
			        if (param != null)
			        {
			            param1 = param.split(&quot;.&quot;);
			            for (int a = 0; a &lt; param1.length; a++)
			                param1[a] = param1[a].trim();
			        }
			        final String [] params = param1;
			        final String cmd = tcmd;
			        if (macro == null)
			        {
			            System.out.println(&quot;Script &quot;+command+&quot; not found!&quot;);
			        }
			        else
			        {
			            runScript(command);
			            command = &quot;&quot;;
			            return;
			        }
			    }
			    else
			    {
			        System.out.println(&quot;You are already running script!&quot;);
			    }
                    	    command = &quot;&quot;;
                    	}
                        if(s.startsWith(&quot;stop&quot;))
                        {
                            if(Running == false)
                                System.out.println(&quot;No script running!&quot;);
                            else
                                Running = false;
                    	    command = &quot;&quot;;
                        }
                        if(s.startsWith(&quot;refresh&quot;))
                        {
                            loadScripts(bot1);
                    	    command = &quot;&quot;;
                        }
    }
public String getServerPrefix(int server)
{
  switch(server) {
  	case 1:
  	  return &quot;ul2&quot;;
	case 10:
	  return &quot;jolt7&quot;;
	case 11:
	  return &quot;jolt8&quot;;
	case 12:
	  return &quot;jolt9&quot;;
	case 13:
	  return &quot;nl3&quot;;
	case 14:
	  return &quot;nl4&quot;;
	case 15:
	  return &quot;uk2&quot;;
	case 16:
	  return &quot;uk3&quot;;
	case 17:
	  return &quot;tor1&quot;;
	case 18:
	  return &quot;tor2&quot;;
	case 19:
	  return &quot;nl7&quot;;
	case 2:
	  return &quot;ul4&quot;;
	case 20:
	  return &quot;nl8&quot;;
	case 21:
	  return &quot;nl11&quot;;
	case 22:
	  return &quot;nl1&quot;;
	case 23:
	  return &quot;uk4&quot;;
	case 24:
	  return &quot;uk5&quot;;
	case 25:
	  return &quot;nl12&quot;;
	case 26:
	  return &quot;ul5&quot;;
	case 27:
	  return &quot;nl5&quot;;
	case 28:
	  return &quot;nl6&quot;;
	case 29:
	  return &quot;ul6&quot;;
	case 3:
	  return &quot;po3&quot;;
	case 30:
	  return &quot;po7&quot;;
	case 31:
	  return &quot;po8&quot;;
	case 32:
	  return &quot;ul1&quot;;
	case 33:
	  return &quot;at1&quot;;
	case 34:
	  return &quot;at2&quot;;
	case 35:
	  return &quot;at3&quot;;
	case 36:
	  return &quot;at4&quot;;
	case 37:
	  return &quot;tor3&quot;;
	case 38:
	  return &quot;planet1&quot;;
	case 39:
	  return &quot;planet2&quot;;
	case 4:
	  return &quot;po4&quot;;
	case 40:
	  return &quot;planet3&quot;;
	case 41:
	  return &quot;planet4&quot;;
	case 42:
	  return &quot;po2&quot;;
	case 43:
	  return &quot;sl11&quot;;
	case 44:
	  return &quot;at6&quot;;
	case 45:
	  return &quot;planet5&quot;;
	case 46:
	  return &quot;planet6&quot;;
	case 47:
	  return &quot;above5&quot;;
	case 48:
	  return &quot;above6&quot;;
	case 49:
	  return &quot;ams1&quot;;
	case 5:
	  return &quot;po5&quot;;
	case 50:
	  return &quot;ams2&quot;;
	case 51:
	  return &quot;ams3&quot;;
	case 52:
	  return &quot;ams4&quot;;
	case 53:
	  return &quot;ams5&quot;;
	case 54:
	  return &quot;ams6&quot;;
	case 55:
	  return &quot;ch1&quot;;
	case 56:
	  return &quot;nl10&quot;;
	case 57:
	  return &quot;ch3&quot;;
	case 58:
	  return &quot;ch4&quot;;
	case 59:
	  return &quot;ch5&quot;;
	case 6:
	  return &quot;po6&quot;;
	case 60:
	  return &quot;ch6&quot;;
	case 61:
	  return &quot;se1&quot;;
	case 62:
	  return &quot;se2&quot;;
	case 63:
	  return &quot;se3&quot;;
	case 64:
	  return &quot;se4&quot;;
	case 65:
	  return &quot;se5&quot;;
	case 66:
	  return &quot;se6&quot;;
	case 67:
	  return &quot;jolt10&quot;;
	case 68:
	  return &quot;jolt11&quot;;
	case 69:
	  return &quot;jolt12&quot;;
	case 7:
	  return &quot;above2&quot;;
	case 70:
	  return &quot;sl10&quot;;
	case 71:
	  return &quot;uk7&quot;;
	case 72:
	  return &quot;sl1&quot;;
	case 73:
	  return &quot;sl2&quot;;
	case 74:
	  return &quot;sl3&quot;;
	case 75:
	  return &quot;sl4&quot;;
	case 76:
	  return &quot;sl5&quot;;
	case 77:
	  return &quot;sl6&quot;;
	case 78:
	  return &quot;sl7&quot;;
	case 79:
	  return &quot;sl8&quot;;
	case 8:
	  return &quot;above3&quot;;
	case 80:
	  return &quot;jolt1&quot;;
	case 81:
	  return &quot;jolt2&quot;;
	case 82:
	  return &quot;jolt3&quot;;
	case 83:
	  return &quot;jolt4&quot;;
	case 84:
	  return &quot;jolt5&quot;;
	case 85:
	  return &quot;ny1&quot;;
	case 86:
	  return &quot;ny2&quot;;
	case 87:
	  return &quot;ny4&quot;;
	case 88:
	  return &quot;ny5&quot;;
	case 9:
	  return &quot;above4&quot;;
	 default:
	  return null;
  }
}

[/code]</description>
    
    <lastBuildDate>Sun, 26 Mar 2006 12:25:03 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/some-commands-343/331.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Some commands #343</title>
        <dc:creator><![CDATA[@kmb Kmb]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/kmb">@kmb</a> wrote:</p>
          <blockquote>
              <p>Credits to joujoujou for the inventory methods.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-commands-343/331/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-commands-343/331/8</link>
        <pubDate>Sun, 26 Mar 2006 12:25:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-331-8</guid>
        <source url="https://forum.moparisthebest.com/t/some-commands-343/331.rss">Some commands #343</source>
      </item>
      <item>
        <title>Some commands #343</title>
        <dc:creator><![CDATA[@Krichevskoy Krichevskoy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/krichevskoy">@Krichevskoy</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="6" data-topic="331">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/freddy1990/40/85_2.png" class="avatar"> Freddy1990:</div>
<blockquote>
<p>He said “action forced”  <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"> it means it forces the client to click somewhere, by that i mean, it clicks somewhere, but it’s very detectable because for jagex it would be like your cursor disappeared and reappeared to click something = no cursor movement</p>
</blockquote>
</aside>
<p>No, action forcing is directly sending the packets that a click would have activated without actually clicking. I’m sure a lot of you have seen an RSC bot source before</p>
<pre><code class="lang-auto">public void attackNPC(int id) {
    rs.sendCommandID(134);
    rs.sendInt(id);
    rs.endPacket();
}</code></pre>
<p>It’s detectable in RS2 because Jagex expects to receive mouse movement information in addition to an action ID.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-commands-343/331/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-commands-343/331/7</link>
        <pubDate>Fri, 10 Mar 2006 22:37:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-331-7</guid>
        <source url="https://forum.moparisthebest.com/t/some-commands-343/331.rss">Some commands #343</source>
      </item>
      <item>
        <title>Some commands #343</title>
        <dc:creator><![CDATA[@Freddy1990 Freddy1990]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/freddy1990">@Freddy1990</a> wrote:</p>
          <blockquote>
              <p>He said “action forced”  <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"> it means it forces the client to click somewhere, by that i mean, it clicks somewhere, but it’s very detectable because for jagex it would be like your cursor disappeared and reappeared to click something = no cursor movement</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-commands-343/331/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-commands-343/331/6</link>
        <pubDate>Mon, 06 Mar 2006 23:10:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-331-6</guid>
        <source url="https://forum.moparisthebest.com/t/some-commands-343/331.rss">Some commands #343</source>
      </item>
      <item>
        <title>Some commands #343</title>
        <dc:creator><![CDATA[@motherload11 motherload11]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/motherload11">@motherload11</a> wrote:</p>
          <blockquote>
              <p>what does action based mean? and wtf do these “commands” do anyway? lol</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-commands-343/331/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-commands-343/331/5</link>
        <pubDate>Sat, 04 Mar 2006 02:33:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-331-5</guid>
        <source url="https://forum.moparisthebest.com/t/some-commands-343/331.rss">Some commands #343</source>
      </item>
      <item>
        <title>Some commands #343</title>
        <dc:creator><![CDATA[@Pwnd Pwnd]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pwnd">@Pwnd</a> wrote:</p>
          <blockquote>
              <p>I suggest not using these.  They’re action forced commands.</p>
<p>I’ll use some of this, though.  I have no idea how you figure out the variables :\</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-commands-343/331/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-commands-343/331/4</link>
        <pubDate>Mon, 27 Feb 2006 04:06:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-331-4</guid>
        <source url="https://forum.moparisthebest.com/t/some-commands-343/331.rss">Some commands #343</source>
      </item>
      <item>
        <title>Some commands #343</title>
        <dc:creator><![CDATA[@vortex vortex]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/vortex">@vortex</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="2" data-topic="331">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/silabsoft/40/5_8504b32b4165840149d2c3dd52eb0686.png" class="avatar"> silabsoft:</div>
<blockquote>
<p>looks like you found a peice of aryan</p>
</blockquote>
</aside>
<p>NIGGA PLEASE FUCK OFF CUNT JESUS CHRIST ;D ;D ;D ;D <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=9" title=":smiley:" class="emoji" alt=":smiley:"> <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=9" title=":smiley:" class="emoji" alt=":smiley:"> <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=9" title=":smiley:" class="emoji" alt=":smiley:"> <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=9" title=":smiley:" class="emoji" alt=":smiley:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-commands-343/331/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-commands-343/331/3</link>
        <pubDate>Sun, 26 Feb 2006 11:01:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-331-3</guid>
        <source url="https://forum.moparisthebest.com/t/some-commands-343/331.rss">Some commands #343</source>
      </item>
      <item>
        <title>Some commands #343</title>
        <dc:creator><![CDATA[@silabsoft RuneAgent]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silabsoft">@silabsoft</a> wrote:</p>
          <blockquote>
              <p>looks like you found a peice of aryan</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-commands-343/331/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-commands-343/331/2</link>
        <pubDate>Sun, 26 Feb 2006 10:50:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-331-2</guid>
        <source url="https://forum.moparisthebest.com/t/some-commands-343/331.rss">Some commands #343</source>
      </item>
      <item>
        <title>Some commands #343</title>
        <dc:creator><![CDATA[@vortex vortex]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/vortex">@vortex</a> wrote:</p>
          <blockquote>
              <p>Not even sure if they work properly… <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=9" title=":smiley:" class="emoji" alt=":smiley:"></p>
<p><a href="http://icenet.us/3rxbin/showpaste.php?i=30" class="onebox" target="_blank" rel="nofollow noopener">http://icenet.us/3rxbin/showpaste.php?i=30</a></p>
<pre><code class="lang-auto">import java.util.Hashtable;


public boolean gfx = true;
public boolean autologin = false;
public static client client1;
public boolean Running = false;
public static int world = 0;
public Script macro;
public static Hashtable macros = new Hashtable();

public int findItemInInv(String name) { 
	for (int i = 0; i&lt;28; i++) 
	{
		int id = inventory(i); 
			if (id != -1) 
			{
				String thisName = itemName(id); 
					if(thisName != null &amp;&amp; thisName.indexOf(name)&gt;-1) 
					{	
					return i; 
				} 
			} 
		} 
	return -1; 
}
public String itemName(int id) { 
	Class21 itemDesc = Class21.method319(id); 
		if (itemDesc.aString468 != null) 
			{ 
			return itemDesc.aString468; 
		} else 
	{ 
return ""; 
} 
}
public int inventory(int slot) { 
	Class17 thingie = Class17.method280(anIntArray1087[3]); 
		int result = thingie.method280(thingie.anIntArray397[0]).anIntArray421[slot]-1; 
			if (!(thingie.method280(thingie.anIntArray397[0]).anIntArray421[slot] &gt; 0)) result = -1; 
	return result; 
}
    public int currentInterface()
    {
    	return anInt1303;
    }
    public boolean npcNear(String name)
    {
        for(int x=0; x &lt; anInt1191; x++) 
        {
            if(aClass43_Sub2_Sub1_Sub6_Sub2Array1238[anIntArray1240[x]].aClass11_1763.aString220.equalsIgnoreCase(name)) 
            {
                return true;
            }
            return false;
        }
    }
    public void logout()
    {
    	anInt1000 = 250;
    	super.anInt18 -= 500;
    	aClass43_Sub2_Sub3_897.method538(5, 24);
    }
    public int nearestObject(int i, int j)
    {
    	return 0;
    }
    public int getStatExp(int stat)
    {
    	return anIntArray1207[stat];
    }
    public int getMaxLevel(int stat)
    {
    	return anIntArray1128[stat];
    }
    public int getCurLevel(int stat)
    {
    	return anIntArray924[stat];
    }
    /*public void Walk(int ^arrayX^, int ^arrayY^)
    {
            if(!^walkBoolean^)
                ^walkClass^.^walkMethod^(^walkShit^, ((super.^mouseY^ - 4)+bigY()), ((super.^mouseX^ - 4)+bigX()));
            else
                ^walkClass^.^walkMethod^(^walkShit^, ((^arrayY^ - 4)+bigY()), ((^arrayX^ - 4)+bigX()));
    }*/
    public void atObject5(int uid)
    {
	int id = uid;
	int x = id &amp; 0x7f;
	int y = id &gt;&gt; 7 &amp; 0x7f;
    	action(1002, id, x, y);
    }
    public void atObject4(int uid)
    {
	int id = uid;
	int x = id &amp; 0x7f;
	int y = id &gt;&gt; 7 &amp; 0x7f;
    	action(835, id, x, y);
    }
    public void atObject3(int uid)
    {
	int id = uid;
	int x = id &amp; 0x7f;
	int y = id &gt;&gt; 7 &amp; 0x7f;
    	action(978, id, x, y);
    }
    public void atObject2(int uid)
    {
	int id = uid;
	int x = id &amp; 0x7f;
	int y = id &gt;&gt; 7 &amp; 0x7f;
    	action(683, id, x, y);
    }
    public void atObject(int uid)
    {
	int id = uid;
	int x = id &amp; 0x7f;
	int y = id &gt;&gt; 7 &amp; 0x7f;
    	action(396, id, x, y);
    }
    public void atObject5(int x,int y)
    {
    	int uid = 0;
    	action(1002, uid, x, y);
    }
    public void atObject4(int x,int y)
    {
    	int uid = 0;
    	action(835, uid, x, y);
    }
    public void atObject3(int x,int y)
    {
    	int uid = 0;
    	action(978, uid, x, y);
    }
    public void atObject2(int x,int y)
    {
    	int uid = 0;
    	action(683, uid, x, y);
    }
    public void atObject(int x,int y)
    {
        x -= bigX();
        y -= bigY();
        int uid = nearestObject(x, y);
    	action(396, uid, x, y);
    }
    /*public void setMode(int l)
    {
        anIntArray987[0] = l;
        ^menuChosen^(^menuOther^, anInt887 - 1);
    }*/
    private void setTray()
    {
    	final SystemTray tray = SystemTray.getDefaultSystemTray();
        ImageIcon i = new ImageIcon(System.getProperty("user.dir") + "/icon2.gif");
        final TrayIcon ti = new TrayIcon(i, "PoonAble - "+username());
        ti.setIconAutoSize(true);
        ti.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
		 aFrame_Sub1_15.setVisible(true);
		 tray.removeTrayIcon(ti);
            }
        });
        aFrame_Sub1_15.setVisible(false);
        tray.addTrayIcon(ti);
    }
    public final void keyPressed(KeyEvent keyevent)
    {
        int i = keyevent.getKeyCode();
        System.out.println(i);
        if(i == 112)
        	System.out.println("#"+currentInterface);
        if(i == 121)
        {
        	setTray();
        	System.out.println("Minimized to system tray!");
        }
        if(i == 122)
        {
        	gfx = !gfx;
        	printrs("Graphics "+(gfx ? "en" : "dis") + "abled");
        	print("Graphics "+(gfx ? "en" : "dis") + "abled");
        }
        if(i == 123)
        {
        	autologin = !autologin;
        	printrs("Autologin "+(autologin ? "en" : "dis") + "abled");
        	print("Autologin "+(autologin ? "en" : "dis") + "abled");
        }
        super.keyPressed(keyevent);
    }
    public boolean isFlag()
    {
    	if(anInt899 != 0)
    	    return true;
    	return false;
    }
    private void logIn()
    {
    	method19(aString980, aString981, false);
    }
    /*public void printrs(String s1)
    {
    	^line^printVoid^
    }*/
    public void say(String s)
    {
        
        aString1117 = s;
        Class43_Sub2_Sub2.method480(0, 479, 0, 77, (byte)-128);
        aString1117 = "";
    }
    public int rand(int i, int i1)
    {
        return (int)(Math.random() * (double)(i1 - i)) + i;
    }
    public void withdrawAll(int id)
    {
        
        for(int slot = 0; slot &lt; 28; slot++)
        {
        action(257,id,slot,5382);
        }
    }
    public void storeAll(int id)
    {
        
        for(int slot = 0; slot &lt; 28; slot++)
        {
            action(257,id,slot,5064);
        }
    }
    public void withdrawAll()
    {
        while(invCount() &gt; 1)
        {
            for(int x = 0; x &lt; 28; x++)
            {
                if(getInv(x) != -1 &amp;&amp; getInv(x) != 1275)
                {
                    withdrawAll(x);
                    wait(rand(1000, 2000));
                }
            }
        }
    }
    public void storeAll()
    {
        while(invCount() &gt; 1)
        {
            for(int x = 0; x &lt; 28; x++)
            {
                if(getInv(x) != -1 &amp;&amp; getInv(x) != 1275)
                {
                    storeAll(x);
                    wait(rand(1000, 2000));
                }
            }
        }
    }
    public int getInv(int i)
    {
        Class17 class17 = Class17.method280(3214);
        return class17.anIntArray421[i] - 1;
    }
    public int invCount()
    {
        int count = 0;
        Class17 class17 = Class17.method280(anIntArray1087[3]);
        for (int i = 0; i &lt; 28; i++)
        {
            if (Class17.method280(class17.anIntArray397[0]).anIntArray421[i] != 0)
            {
                count++;
            }
        }
        return count;
    }
    public void withdraw1(int id,int slot)
    {
        action(426,id,slot,5382);
    }
    public void withdraw5(int id,int slot)
    {
        action(168,id,slot,5382);
    }
    public void withdraw10(int id,int slot)
    {
        action(725,id,slot,5382);
    }
    public void withdrawAll(int id,int slot)
    {
        action(257,id,slot,5382);
    }
    public void store1(int id,int slot)
    {
        action(426,id,slot,5064);
    }
    public void store5(int id,int slot)
    {
        action(168,id,slot,5064);
    }
    public void store10(int id,int slot)
    {
        action(725,id,slot,5064);
    }
    public void storeAll(int id,int slot)
    {
        action(257,id,slot,5064);
    }
    public void attackNpc(String name)
    {
        
        for(int x=0; x &lt; anInt1191; x++) 
        {
            if(aClass43_Sub2_Sub1_Sub6_Sub2Array1238[anIntArray1240[x]].aClass11_1763.aString220.equalsIgnoreCase(name)) 
            {
        	action(111,anIntArray1240[x],0,0);
                return;
            }
        }
    }
    public void attackNpc(int index)
    {
        action(111,index,0,0);
    }
    public void talkToNpc(String name)
    {
        
        for(int x=0; x &lt; anInt1191; x++) 
        {
            if(aClass43_Sub2_Sub1_Sub6_Sub2Array1238[anIntArray1240[x]].aClass11_1763.aString220.equalsIgnoreCase(name)) 
            {
        	action(456,anIntArray1240[x],0,0);
                return;
            }
        }
    }
    public void talkToNpc(int index)
    {
        action(456,index,0,0);
    }
    public boolean loggedIn()
    {
        
    	return aBoolean1166;
    }
    public int playerCount()
    {
        
        return anInt1275;
    }
    public int npcCount()
    {
        
        return anInt1239;
    }
    public String username()
    {
        
        return aString980;
    }
    public int getX()
    {
        return (anInt1267 + ((Class43_Sub2_Sub1_Sub6) (aClass43_Sub2_Sub1_Sub6_Sub1_1244)).anIntArray1628[0]);
    }
    public int getY()
    {
        return (anInt1268 + ((Class43_Sub2_Sub1_Sub6) (aClass43_Sub2_Sub1_Sub6_Sub1_1244)).anIntArray1629[0]);
    }
    public int bigX()
    {
        return anInt1267;
    }
    public int bigY()
    {
        return anInt1268;
    }
    public int smallX()
    {
        return ((Class43_Sub2_Sub1_Sub6) (aClass43_Sub2_Sub1_Sub6_Sub1_1244)).anIntArray1628[0];
    }
    public int smallY()
    {
        return ((Class43_Sub2_Sub1_Sub6) (aClass43_Sub2_Sub1_Sub6_Sub1_1244)).anIntArray1629[0];
    }
    public void print(int i)
    {
        
    	System.out.println(i);
    }
    public void print(boolean b)
    {
        
    	System.out.println(b);
    }
    public void print(String s)
    {
        
    	System.out.println(s);
    }
    public void wait(int i)
    {
        try
        {
            Thread.sleep(i);
        }
        catch(Exception e){System.out.println("Wait() exception: "+e);}
    }
    public void waitForLoad()
    {
        try
        {
            while(isLoading())
                Thread.sleep(10);
        }
        catch(Exception e){System.out.println("WaitForLoad() exception: "+e);}
    }
    public boolean isLoading()
    {
        return aBoolean1178 &amp;&amp; anInt1162 == 2 &amp;&amp; Class37.anInt669 != anInt1280;
    }
    public void runScript(final String name)
    {
	System.out.println("Started script!");
        macro = (Script)macros.get(name);
        Thread thread = new Thread(new Runnable()
        {
            public void run()
            {
                macro.start(name);
            }
        });
        Running = true;
        thread.start();
    }
	public static void loadScripts(client client1)
	{
		macros = new Hashtable();
		System.out.println("Loading Scripts...");
		File f = new File(System.getProperty("user.dir") + "/scripts");
		System.out.println("--------");
		String[] files = f.list();
		for(int i = 0; i &lt; files.length;i++)
		{
			try
			{
				if(files[i].endsWith(".class") &amp;&amp; files[i].indexOf('$') == -1)
				{
					Class clazz = Class.forName(files[i].substring(0,files[i].length()-".class".length()));
					Script macro = (Script)clazz.getConstructor(new Class[]{client.class}).newInstance(new Object[]{client1});
					String[] commands = macro.getCommands();
					System.out.print(files[i]);
					System.out.print(" - ");
					for(int j = 0; j &lt; commands.length;j++)
					{
						System.out.println("/run "+commands[j]);
						macros.put(commands[j], macro);
					}
				}
			}
			catch(Exception e)
			{
				e.printStackTrace();
				e.toString();
			}
		}
		System.out.println("--------");
	}
    public void action(int command, int i1, int i2, int i3)
    {
        
        anIntArray988[0] = command;
        anIntArray989[0] = i1;
        anIntArray986[0] = i2;
        anIntArray987[0] = i3;
        //^menuChosen^(^menuOther^, anInt887 - 1);
    }
    public void commands(String command)
    {
                        String s = command.trim().toLowerCase().substring(2);
                        if(s.startsWith("run "))
                        {
			    if (Running == false)
			    {
			        command = command.substring(6);
			        int paramIndex = command.indexOf(" ");
			        if(paramIndex == -1)
			            macro = (Script)macros.get(command);
			        else
			            macro = (Script)macros.get(command.substring(0,paramIndex));
			        String param = null;
			        String tcmd = null;
			        if (paramIndex != -1)
			        {
			            param = command.substring(paramIndex + 1);
			            tcmd = command.substring(0,paramIndex);
			        }
			        else
			        {
			            param = null;
			            tcmd = command;
			        }
			        String [] param1  = null;
			        if (param != null)
			        {
			            param1 = param.split(".");
			            for (int a = 0; a &lt; param1.length; a++)
			                param1[a] = param1[a].trim();
			        }
			        final String [] params = param1;
			        final String cmd = tcmd;
			        if (macro == null)
			        {
			            System.out.println("Script "+command+" not found!");
			        }
			        else
			        {
			            runScript(command);
			            command = "";
			            return;
			        }
			    }
			    else
			    {
			        System.out.println("You are already running script!");
			    }
                    	    command = "";
                    	}
                        if(s.startsWith("stop"))
                        {
                            if(Running == false)
                                System.out.println("No script running!");
                            else
                                Running = false;
                    	    command = "";
                        }
                        if(s.startsWith("refresh"))
                        {
                            loadScripts(bot1);
                    	    command = "";
                        }
    }
public String getServerPrefix(int server)
{
  switch(server) {
  	case 1:
  	  return "ul2";
	case 10:
	  return "jolt7";
	case 11:
	  return "jolt8";
	case 12:
	  return "jolt9";
	case 13:
	  return "nl3";
	case 14:
	  return "nl4";
	case 15:
	  return "uk2";
	case 16:
	  return "uk3";
	case 17:
	  return "tor1";
	case 18:
	  return "tor2";
	case 19:
	  return "nl7";
	case 2:
	  return "ul4";
	case 20:
	  return "nl8";
	case 21:
	  return "nl11";
	case 22:
	  return "nl1";
	case 23:
	  return "uk4";
	case 24:
	  return "uk5";
	case 25:
	  return "nl12";
	case 26:
	  return "ul5";
	case 27:
	  return "nl5";
	case 28:
	  return "nl6";
	case 29:
	  return "ul6";
	case 3:
	  return "po3";
	case 30:
	  return "po7";
	case 31:
	  return "po8";
	case 32:
	  return "ul1";
	case 33:
	  return "at1";
	case 34:
	  return "at2";
	case 35:
	  return "at3";
	case 36:
	  return "at4";
	case 37:
	  return "tor3";
	case 38:
	  return "planet1";
	case 39:
	  return "planet2";
	case 4:
	  return "po4";
	case 40:
	  return "planet3";
	case 41:
	  return "planet4";
	case 42:
	  return "po2";
	case 43:
	  return "sl11";
	case 44:
	  return "at6";
	case 45:
	  return "planet5";
	case 46:
	  return "planet6";
	case 47:
	  return "above5";
	case 48:
	  return "above6";
	case 49:
	  return "ams1";
	case 5:
	  return "po5";
	case 50:
	  return "ams2";
	case 51:
	  return "ams3";
	case 52:
	  return "ams4";
	case 53:
	  return "ams5";
	case 54:
	  return "ams6";
	case 55:
	  return "ch1";
	case 56:
	  return "nl10";
	case 57:
	  return "ch3";
	case 58:
	  return "ch4";
	case 59:
	  return "ch5";
	case 6:
	  return "po6";
	case 60:
	  return "ch6";
	case 61:
	  return "se1";
	case 62:
	  return "se2";
	case 63:
	  return "se3";
	case 64:
	  return "se4";
	case 65:
	  return "se5";
	case 66:
	  return "se6";
	case 67:
	  return "jolt10";
	case 68:
	  return "jolt11";
	case 69:
	  return "jolt12";
	case 7:
	  return "above2";
	case 70:
	  return "sl10";
	case 71:
	  return "uk7";
	case 72:
	  return "sl1";
	case 73:
	  return "sl2";
	case 74:
	  return "sl3";
	case 75:
	  return "sl4";
	case 76:
	  return "sl5";
	case 77:
	  return "sl6";
	case 78:
	  return "sl7";
	case 79:
	  return "sl8";
	case 8:
	  return "above3";
	case 80:
	  return "jolt1";
	case 81:
	  return "jolt2";
	case 82:
	  return "jolt3";
	case 83:
	  return "jolt4";
	case 84:
	  return "jolt5";
	case 85:
	  return "ny1";
	case 86:
	  return "ny2";
	case 87:
	  return "ny4";
	case 88:
	  return "ny5";
	case 9:
	  return "above4";
	 default:
	  return null;
  }
}
</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-commands-343/331/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-commands-343/331/1</link>
        <pubDate>Sun, 26 Feb 2006 02:23:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-331-1</guid>
        <source url="https://forum.moparisthebest.com/t/some-commands-343/331.rss">Some commands #343</source>
      </item>
  </channel>
</rss>
