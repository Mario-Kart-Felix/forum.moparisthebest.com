<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Another 100 errors today -.-</title>
    <link>https://forum.moparisthebest.com/t/another-100-errors-today/349750</link>
    <description>[code]client.java:115: &#39;;&#39; expected
public void dclawed() {
                   ^
client.java:138: illegal start of expression
                public int dclaws = 0;
                ^
client.java:140: illegal start of expression
                public void checkclaws() {
                ^
client.java:140: illegal start of expression
                public void checkclaws() {
                       ^
client.java:140: &#39;;&#39; expected
                public void checkclaws() {
                                      ^
client.java:154: illegal start of expression
        public void playersOnline_and_Uptime() {
        ^
client.java:154: illegal start of expression
        public void playersOnline_and_Uptime() {
               ^
client.java:154: &#39;;&#39; expected
        public void playersOnline_and_Uptime() {
                                            ^
client.java:158: illegal start of expression
        public int[] lowTask = { 87, 100, 19, 1267, 181, 90, 112, 117, 78, 1153
};
        ^
client.java:159: illegal start of expression
        public int[] mediumTask = { 87, 100, 19, 1267, 117, 78, 941, 1338, 912,
913, 914, 2591, 2604, 2610, 1153, 1154 };
        ^
client.java:160: illegal start of expression
        public int[] highTask = { 1627, 181, 90, 112, 117, 78, 1183, 941, 2881,
2882, 2883, 2591, 2604, 2610, 1153, 1154 };
        ^
client.java:161: illegal start of expression
        public int taskID = -1;
        ^
client.java:162: illegal start of expression
        public static int Waiters = 0;
        ^
client.java:162: illegal start of expression
        public static int Waiters = 0;
               ^
client.java:162: &#39;;&#39; expected
        public static int Waiters = 0;
                     ^
client.java:163: illegal start of expression
        public boolean waited;
        ^
client.java:164: illegal start of expression
        public int pkPoints = 0;
        ^
client.java:165: illegal start of expression
        public int donorPoints = 0;
        ^
client.java:166: illegal start of expression
        public int hween09 = 0;
        ^
client.java:167: illegal start of expression
        public boolean logoutButton;
        ^
client.java:168: illegal start of expression
        public boolean hasAccepted = false;
        ^
client.java:169: illegal start of expression
        public int taskAmount = -1;
        ^
client.java:170: illegal start of expression
        public boolean isBK = false;
        ^
client.java:171: illegal start of expression
        public boolean isBT = false;
        ^
client.java:172: illegal start of expression
        public boolean isBA = false;
        ^
client.java:173: illegal start of expression
        public boolean isBD = false;
        ^
client.java:174: illegal start of expression
        public boolean isBV = false;
        ^
client.java:175: illegal start of expression
        public boolean isBG = false;
        ^
client.java:176: illegal start of expression
        private long delay01 = 0;
        ^
client.java:181: illegal start of expression
        public int randomLowTask()
        ^
client.java:181: &#39;;&#39; expected
        public int randomLowTask()
                                ^
client.java:186: illegal start of expression
        public int randomMediumTask()
        ^
client.java:186: &#39;;&#39; expected
        public int randomMediumTask()
                                   ^
client.java:191: illegal start of expression
        public int randomHighTask()
        ^
client.java:191: &#39;;&#39; expected
        public int randomHighTask()
                                 ^
client.java:196: illegal start of expression
        public void RemoveAllDuelItems() {
        ^
client.java:196: illegal start of expression
        public void RemoveAllDuelItems() {
               ^
client.java:196: &#39;;&#39; expected
        public void RemoveAllDuelItems() {
                                      ^
client.java:204: illegal start of expression
        public void Duelfinish() {
        ^
client.java:204: illegal start of expression
        public void Duelfinish() {
               ^
client.java:204: &#39;;&#39; expected
        public void Duelfinish() {
                              ^
client.java:218: illegal start of expression
        public void resetDuel() {
        ^
client.java:218: illegal start of expression
        public void resetDuel() {
               ^
client.java:218: &#39;;&#39; expected
        public void resetDuel() {
                             ^
client.java:234: illegal start of expression
         public void setDuelEquipment(int i, int j, int k)
         ^
client.java:234: illegal start of expression
         public void setDuelEquipment(int i, int j, int k)
                ^
client.java:234: &#39;;&#39; expected
         public void setDuelEquipment(int i, int j, int k)
                                     ^
client.java:234: &lt;identifier&gt; expected
         public void setDuelEquipment(int i, int j, int k)
                                            ^
client.java:234: not a statement
         public void setDuelEquipment(int i, int j, int k)
                                                 ^
client.java:234: &#39;;&#39; expected
         public void setDuelEquipment(int i, int j, int k)
                                                  ^
client.java:234: &#39;;&#39; expected
         public void setDuelEquipment(int i, int j, int k)
                                                         ^
client.java:257: illegal start of expression
public int HeadWear = 1;
^
client.java:258: illegal start of expression
public int TorsoWear = 1;
^
client.java:259: illegal start of expression
public int LegsWear = 1;
^
client.java:260: illegal start of expression
public int GlovesWear = 1;
^
client.java:261: illegal start of expression
public int BootsWear = 1;
^
client.java:262: illegal start of expression
public int WeaponWear = 1;
^
client.java:263: illegal start of expression
public int dbowspec = 0;
^
client.java:264: illegal start of expression
public int ShieldWear = 1;
^
client.java:265: illegal start of expression
public int CapeWear = 1;
^
client.java:266: illegal start of expression
public int ArrowsWear = 1;
^
client.java:267: illegal start of expression
public int AmuletWear = 1;
^
client.java:268: illegal start of expression
public int RingWear = 1;
^
client.java:269: illegal start of expression
        public boolean stakeItem(int itemID, int fromSlot, int amount) {
        ^
client.java:269: &#39;;&#39; expected
        public boolean stakeItem(int itemID, int fromSlot, int amount) {
                                ^
client.java:269: &lt;identifier&gt; expected
        public boolean stakeItem(int itemID, int fromSlot, int amount) {
                                            ^
client.java:269: not a statement
        public boolean stakeItem(int itemID, int fromSlot, int amount) {
                                                 ^
client.java:269: &#39;;&#39; expected
        public boolean stakeItem(int itemID, int fromSlot, int amount) {
                                                         ^
client.java:269: &#39;;&#39; expected
        public boolean stakeItem(int itemID, int fromSlot, int amount) {
                                                                     ^
client.java:329: illegal start of expression
        public void startDuel() {
        ^
client.java:329: illegal start of expression
        public void startDuel() {
               ^
client.java:329: &#39;;&#39; expected
        public void startDuel() {
                             ^
client.java:370: illegal start of expression
                        public void declineDuel() {
                        ^
client.java:370: illegal start of expression
                        public void declineDuel() {
                               ^
client.java:370: &#39;;&#39; expected
                        public void declineDuel() {
                                               ^
client.java:395: illegal start of expression
        public boolean DeclineDuel() {
        ^
client.java:395: &#39;;&#39; expected
        public boolean DeclineDuel() {
                                  ^
client.java:399: illegal start of expression
                public boolean duelButton(int button) {
                ^
client.java:399: &#39;;&#39; expected
                public boolean duelButton(int button) {
                                         ^
client.java:399: &#39;;&#39; expected
                public boolean duelButton(int button) {
                                                    ^
client.java:431: illegal start of expression
        public void duelPlayer(int pIndex) {
        ^
client.java:431: illegal start of expression
        public void duelPlayer(int pIndex) {
               ^
client.java:431: &#39;;&#39; expected
        public void duelPlayer(int pIndex) {
                              ^
client.java:431: &#39;;&#39; expected
        public void duelPlayer(int pIndex) {
                                         ^
client.java:447: illegal start of expression
        public void duelReq(int pid) {
        ^
client.java:447: illegal start of expression
        public void duelReq(int pid) {
               ^
client.java:447: &#39;;&#39; expected
        public void duelReq(int pid) {
                           ^
client.java:447: &#39;;&#39; expected
        public void duelReq(int pid) {
                                   ^
client.java:475: illegal start of expression
        public void DuelVictory() {
        ^
client.java:475: illegal start of expression
        public void DuelVictory() {
               ^
client.java:475: &#39;;&#39; expected
        public void DuelVictory() {
                               ^
client.java:578: illegal start of expression
        public boolean fromDuel(int itemID, int fromSlot, int amount) {
        ^
client.java:578: &#39;;&#39; expected
        public boolean fromDuel(int itemID, int fromSlot, int amount) {
                               ^
client.java:578: &lt;identifier&gt; expected
        public boolean fromDuel(int itemID, int fromSlot, int amount) {
                                           ^
client.java:578: not a statement
        public boolean fromDuel(int itemID, int fromSlot, int amount) {
                                                ^
client.java:578: &#39;;&#39; expected
        public boolean fromDuel(int itemID, int fromSlot, int amount) {
                                                        ^
client.java:578: &#39;;&#39; expected
        public boolean fromDuel(int itemID, int fromSlot, int amount) {
                                                                    ^
client.java:628: illegal start of expression
                public void confirmDuel() {
                ^
100 errors
Finished!
Press any key to continue . . .[/code]
Good luck. I have been counting brackets forever.</description>
    
    <lastBuildDate>Sun, 18 Jul 2010 03:43:18 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/another-100-errors-today/349750.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Another 100 errors today -.-</title>
        <dc:creator><![CDATA[@j19283746 j19283746]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/j19283746">@j19283746</a> wrote:</p>
          <blockquote>
              <p>Just try to find it. -.-</p>
<p>[code]public void dclawed() {<br>
client AttackingOn2 = (client) server.playerHandler.players[AttackingOn];<br>
int clawed = misc.random(playerMaxHit + 8);<br>
if(AttackingOn2 != null) {<br>
if(AttackingOn2.currentHealth &lt;= 0) {<br>
dclaws = 0;<br>
} else {<br>
PlayerHandler.players[AttackingOn].hitUpdateRequired = true;<br>
PlayerHandler.players[AttackingOn].updateRequired = true;<br>
PlayerHandler.players[AttackingOn].appearanceUpdateRequired = true;<br>
if(misc.random(3) != 1) {<br>
PlayerHandler.players[AttackingOn].dealDamage(clawed);<br>
PlayerHandler.players[AttackingOn].hitDiff = clawed;<br>
} else {<br>
PlayerHandler.players[AttackingOn].dealDamage(0);<br>
PlayerHandler.players[AttackingOn].hitDiff = 0;<br>
}<br>
PlayerHandler.players[AttackingOn].killers[playerId] += hitDiff;<br>
PlayerHandler.players[AttackingOn].KilledBy[playerId] += hitDiff;<br>
}<br>
}<br>
}</p>
<pre><code>	public int dclaws = 0;

	public void checkclaws() {
	if(dclaws == 3) {
		dclawed();
	
	}
	if(dclaws == 2) {
		startAnimation(6000);
		dclawed2();
	}
	if(dclaws == 1) {
		dclawed2();
		actionInterval = getbattleTimer() + getbattleTimer()/2;
	}
	}
public void playersOnline_and_Uptime() {
sendFrame126("@or1@Players online: @gre@"+PlayerHandler.getPlayerCount()+" !", 7332);
sendFrame126("@or1@Uptime: @gre@"+ (server.uptime / 2 / 60) +" Mins", 7333);	
}
public int[] lowTask = { 87, 100, 19, 1267, 181, 90, 112, 117, 78, 1153 };
public int[] mediumTask = { 87, 100, 19, 1267, 117, 78, 941, 1338, 912, 913, 914, 2591, 2604, 2610, 1153, 1154 };
public int[] highTask = { 1627, 181, 90, 112, 117, 78, 1183, 941, 2881, 2882, 2883, 2591, 2604, 2610, 1153, 1154 };
public int taskID = -1;	
public static int Waiters = 0;
public boolean waited;
public int pkPoints = 0;
public int donorPoints = 0;
public int hween09 = 0;
	public boolean logoutButton;
public boolean hasAccepted = false;
public int taskAmount = -1;
public boolean isBK = false;
public boolean isBT = false;
public boolean isBA = false;
public boolean isBD = false;
public boolean isBV = false;
public boolean isBG = false; 
private long delay01 = 0;




public int randomLowTask() 
{
	return lowTask[(int) (Math.random() * lowTask.length)];
}

public int randomMediumTask() 
{
	return mediumTask[(int) (Math.random() * mediumTask.length)];
}

public int randomHighTask() 
{
	return highTask[(int) (Math.random() * highTask.length)];
}

public void RemoveAllDuelItems() {
	for (int i = 0; i &lt; duelItems.length; i++) {
		if (duelItems[i] &gt; 0) {
			fromDuel((duelItems[i] - 1), i, duelItemsN[i]);
		}
	}
}

public void Duelfinish() {
	refreshSkills();
	currentHealth = playerLevel[playerHitpoints];
	playerLevel[0] = getLevelForXP(playerXP[0]);
	playerLevel[1] = getLevelForXP(playerXP[1]);
	playerLevel[2] = getLevelForXP(playerXP[2]);
	playerLevel[4] = getLevelForXP(playerXP[4]);
	playerLevel[5] = getLevelForXP(playerXP[5]);
	playerLevel[6] = getLevelForXP(playerXP[6]);
	sendFrame126("Prayer: "+playerLevel[5]+"/"+getLevelForXP(playerXP[5])+"", 687);
	resetfollowers();
	refreshSkills();
	}

public void resetDuel() {
	println("duel reset");
	closeInterface();
	canOffer = true;
	duel_with = 0;
	duelRequested = false;
	duelConfirmed = false;
	duelConfirmed2 = false;
	offeredItems.clear();
	otherOfferedItems.clear();
	duelFight = false;
	inDuel = false;
	duelRule = new boolean[] { false, false, false, false, false, true,
			false, true, false, true, false, true, true, true, true, true, true, true, true, true, true, true };
}

 public void setDuelEquipment(int i, int j, int k)
{
    PlayerHandler _tmp = server.playerHandler;
    if(PlayerHandler.players[playerId] == null || disconnected || in == null || out == null)
    {

    }
    outStream.createFrameVarSizeWord(34);
    outStream.writeWord(13824);
    outStream.writeByte(k);
    outStream.writeWord(i + 1);
    if(j &gt; 254)
    {
        outStream.writeByte(255);
        outStream.writeDWord(j);
    } else
    {
        outStream.writeByte(j);
    }
    outStream.endFrameVarSizeWord();
    updateRequired = true;
    appearanceUpdateRequired = true;
}
</code></pre>
<p>public int HeadWear = 1;<br>
public int TorsoWear = 1;<br>
public int LegsWear = 1;<br>
public int GlovesWear = 1;<br>
public int BootsWear = 1;<br>
public int WeaponWear = 1;<br>
public int dbowspec = 0;<br>
public int ShieldWear = 1;<br>
public int CapeWear = 1;<br>
public int ArrowsWear = 1;<br>
public int AmuletWear = 1;<br>
public int RingWear = 1;<br>
public boolean stakeItem(int itemID, int fromSlot, int amount) {<br>
if (System.currentTimeMillis() - lastButton &lt; 800) {<br>
return false;<br>
}<br>
lastButton = System.currentTimeMillis();<br>
if (!Item.itemStackable[itemID] &amp;&amp; !Item.itemIsNote[itemID]<br>
&amp;&amp; (amount &gt; 1)) {<br>
for (int a = 1; a &lt;= amount; a++) {<br>
int slot = findItem(itemID, playerItems, playerItemsN);<br>
if (slot &gt;= 0) {<br>
stakeItem(itemID, slot, 1);<br>
}<br>
}<br>
}<br>
for (int element : noTrade) {<br>
if ((itemID == element) || (itemID == element + 1)) {<br>
sM(“You can’t trade that item”);<br>
// declineDuel();<br>
return false;<br>
}<br>
}<br>
client other = getClient(duel_with);<br>
if (!inDuel || !validClient(duel_with)) {<br>
declineDuel();<br>
return false;<br>
}<br>
if (!canOffer) {<br>
return false;<br>
}<br>
if (!playerHasItem(itemID, amount)) {<br>
return false;<br>
}<br>
if (Item.itemStackable[itemID] || Item.itemIsNote[itemID]) {<br>
boolean inTrade = false;<br>
for (GameItem item : offeredItems) {<br>
if (item.id == itemID) {<br>
inTrade = true;<br>
item.amount += amount;<br>
break;<br>
}<br>
}<br>
if (!inTrade) {<br>
offeredItems.add(new GameItem(itemID, amount));<br>
}<br>
} else {<br>
offeredItems.add(new GameItem(itemID, 1));<br>
}<br>
deleteItem(itemID, fromSlot, amount);<br>
resetItems(3214);<br>
resetItems(3322);<br>
other.resetItems(3214);<br>
other.resetItems(3322);<br>
refreshDuelScreen();<br>
other.refreshDuelScreen();<br>
sendFrame126("", 6684);<br>
other.sendFrame126("", 6684);<br>
return true;<br>
}</p>
<pre><code>public void startDuel() {
RemoveAllWindows();
duelFight = true;
toX = 3345+misc.random(6);
toY = 3251+misc.random(6);
teleblock = true;
</code></pre>
<p>plrText = “FIGHT!”;<br>
plrTextUpdateRequired = true;<br>
updateRequired = true;<br>
AtkPray = 0;<br>
StrPrayer = 0;<br>
DefPray = 0;<br>
RangePray = 0;<br>
MagePray = 0;<br>
PrayHeal = false;<br>
ProtItem = false;<br>
ProtMage = false;<br>
ProtRange = false;<br>
ProtMelee = false;<br>
Redemption = false;<br>
Retribution = false;<br>
Smite = false;<br>
Chivalry = false;<br>
Piety = false;<br>
currentHealth = playerLevel[playerHitpoints];<br>
playerLevel[0] = getLevelForXP(playerXP[0]);<br>
playerLevel[1] = getLevelForXP(playerXP[1]);<br>
playerLevel[2] = getLevelForXP(playerXP[2]);<br>
playerLevel[4] = getLevelForXP(playerXP[4]);<br>
playerLevel[5] = getLevelForXP(playerXP[5]);<br>
playerLevel[6] = getLevelForXP(playerXP[6]);<br>
sendFrame126(“Prayer: “+playerLevel[5]+”/”+getLevelForXP(playerXP[5])+"", 687);<br>
resetfollowers();<br>
closeInterface();<br>
client other = getClient(duel_with);<br>
for (GameItem item : other.offeredItems) {<br>
otherOfferedItems.add(new GameItem(item.id, item.amount));<br>
}<br>
}</p>
<pre><code>		public void declineDuel() {
	client other = getClient(duel_with);
	inDuel = false;
	if (validClient(duel_with) &amp;&amp; other.inDuel) {
		other.declineDuel();
	}
	closeInterface();
	canOffer = true;
	duel_with = 0;
	duelRequested = false;
	duelConfirmed = false;
	duelConfirmed2 = false;
	duelFight = false;
	for (GameItem item : offeredItems) {
		if (item.amount &lt; 1)
			continue;
		if (Item.itemStackable[item.id] || Item.itemIsNote[item.id]) {
			addItem(item.id, item.amount);
		} else {
			addItem(item.id, 1);
		}
	}
	offeredItems.clear();
}

public boolean DeclineDuel() {
	declineDuel();
	return true;
}
	public boolean duelButton(int button) {
	client other = getClient(duel_with);
	boolean found = false;
	if (System.currentTimeMillis() - lastButton &lt; 800) {
		return false;
	}
	if (inDuel &amp;&amp; !duelFight &amp;&amp; !duelConfirmed2 &amp;&amp; !other.duelConfirmed2) {
		for (int i = 0; i &lt; duelButtons.length; i++) {
			if (button == duelButtons[i]) {
				found = true;
				if (duelRule[i]) {
					duelRule[i] = false;
					other.duelRule[i] = false;
				} else {
					duelRule[i] = true;
					other.duelRule[i] = true;
				}
			}
		}
		if (found) {
			lastButton = System.currentTimeMillis();
			duelConfirmed = false;
			other.duelConfirmed = false;
			sendQuest("", 6684);
			other.sendQuest("", 6684);
			other.duelRule[i] = duelRule[i];
			RefreshDuelRules();
			other.RefreshDuelRules();
		}
	}
	return found;
}
public void duelPlayer(int pIndex) {
	try {
		if (!(pIndex &gt;= 2047)) {
			client duelPlayer = (client) server.playerHandler.players[pIndex];

			sM("Sending duel request...");
</code></pre>
<p>sM(“DUELING can be glitchy”);<br>
duelPlayer.sM(playerName + “:duelreq:”);<br>
} else {<br>
sM(“Dueling is currently disabled”);<br>
}<br>
} catch (Exception e) {<br>
sM(“attackPlayer: Invalid player index”);<br>
}<br>
}</p>
<pre><code>public void duelReq(int pid) {
	if (!server.dueling) {
		sM("Dueling has been temporarily disabled");
		return;
	}
	duel_with = pid;
	duelRequested = true;
	if (!validClient(duel_with))
		return;
	client other = getClient(duel_with);
	if (inTrade || inDuel || other.inDuel || other.inTrade
			|| other.duelFight || other.duelConfirmed
			|| other.duelConfirmed2) {
		sM("Other player is busy at the moment");
		duelRequested = false;
		return;
	}
	if (duelRequested &amp;&amp; other.duelRequested
			&amp;&amp; (duel_with == other.playerId)
			&amp;&amp; (other.duel_with == playerId)) {
		openDuel();
		other.openDuel();
	} else {
		sM("Sending duel request...");
		other.sM(playerName + ":duelreq:");
	}
}

public void DuelVictory() {
	client other = getClient(duel_with);
	if (validClient(duel_with)) {
		toX = 3367+misc.random(7);
		toY = 3276+misc.random(1);
		sM("You have defeated " + other.playerName + "!");
		sendQuest("" + other.combatLevel, 6839);
		sendQuest(other.playerName, 6840);
		currentHealth = playerLevel[playerHitpoints];
		playerLevel[0] = getLevelForXP(playerXP[0]);
		playerLevel[1] = getLevelForXP(playerXP[1]);
		playerLevel[2] = getLevelForXP(playerXP[2]);
		playerLevel[4] = getLevelForXP(playerXP[4]);
		playerLevel[5] = getLevelForXP(playerXP[5]);
		playerLevel[6] = getLevelForXP(playerXP[6]);
		sendFrame126("Prayer: "+playerLevel[5]+"/"+getLevelForXP(playerXP[5])+"", 687);
		resetfollowers();
		refreshSkills();
		Duelfinish();
		poisoned = false;
		poisonDmg = false;
		fighting = false;
		wonDuel = true;
		AtkPray = 0;
		StrPrayer = 0;
		DefPray = 0;
		RangePray = 0;
		MagePray = 0;
		PrayHeal = false;
		ProtItem = false;
		ProtMage = false;
		ProtRange = false;
		ProtMelee = false;
		Redemption = false;
		Retribution = false;
		Smite = false;
		Chivalry = false;
		Piety = false;
		isSkulled = false;
		lastSkull = 0;
		headIcon = 0;
		turnpray();


	}
	boolean stake = false;
	for (GameItem item : offeredItems) {
		if ((item.id &gt; 0) &amp;&amp; (item.amount &gt; 0)) {
			stake = true;
		}
	}
	for (GameItem item : otherOfferedItems) {
		if ((item.id &gt; 0) &amp;&amp; (item.amount &gt; 0)) {
			stake = true;
		}
	}
	if (stake) {
		try {
			// Magic fix later
			/*
			 * statement = Database.conn.createStatement(); results =
			 * statement.executeQuery("SELECT id FROM uber3_trades ORDER BY
			 * id DESC LIMIT 0,1"); results.next(); int id =
			 * results.getInt("id") + 1; statement.executeUpdate("INSERT
			 * INTO uber3_trades SET id = " + id + ", p1 = " + dbId + ",
			 * p2=" + other.dbId + ", type=1"); for(GameItem item :
			 * offeredItems){ if(item.id &gt; 0)
			 * statement.executeUpdate("INSERT INTO uber3_logs SET id = " +
			 * id + ", pid=" + dbId + ", item=" + item.id + ", amount=" +
			 * item.amount); } for(GameItem item : otherOfferedItems){
			 * if(item.id &gt; 0) statement.executeUpdate("INSERT INTO
			 * uber3_logs SET id = " + id + ", pid=" + other.dbId + ",
			 * item=" + item.id + ", amount=" + item.amount); }
			 * statement.close();
			 */
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	// itemsToVScreen(x, y);
	println("stake=" + stake);
	if (stake) {
		itemsToVScreen_old();
		other.resetDuel();
	} else {
		resetDuel();
		other.resetDuel();
		// duelStatus = -1;
	}
	if (stake)
		showInterface(6733);
	// frame1(); // Xerozcheez: Resets animation
	updateRequired = true;
	appearanceUpdateRequired = true;
	// LogDuel(plr.playerName);
	// didTeleport = true;
	// duelStatus = 4;
	// winDuel = true;
	// resetDuel();
	// plr.duelStatus = -1;

}

public boolean fromDuel(int itemID, int fromSlot, int amount) {
	if (System.currentTimeMillis() - lastButton &lt; 800) {
		return false;
	}
	lastButton = System.currentTimeMillis();
	client other = getClient(duel_with);
	if (!inDuel || !validClient(duel_with) || !canOffer) {
		declineDuel();
		return false;
	}
	if (!Item.itemStackable[itemID] &amp;&amp; (amount &gt; 1)) {
		for (int a = 1; a &lt;= amount; a++) {
			int slot = findItem(itemID, playerItems, playerItemsN);
			if (slot &gt;= 0) {
				fromDuel(itemID, 0, 1);
			}
		}
	}
	boolean found = false;
	for (GameItem item : offeredItems) {
		if (item.id == itemID) {
			if (!item.stackable) {
				offeredItems.remove(item);
				found = true;
			} else {
				if (item.amount &gt; amount) {
					item.amount -= amount;
					found = true;
				} else {
					amount = item.amount;
					found = true;
					offeredItems.remove(item);
				}
			}
			break;
		}
	}
	if (found)
		addItem(itemID, amount);
	duelConfirmed = false;
	other.duelConfirmed = false;
	resetItems(3214);
	other.resetItems(3214);
	resetItems(3322);
	other.resetItems(3322);
	refreshDuelScreen();
	other.refreshDuelScreen();
	other.sendFrame126("", 6684);
	return true;
}
	public void confirmDuel() {
	client other = getClient(duel_with);
	if (!validClient(duel_with))
		declineDuel();
	String out = "";
	for (GameItem item : offeredItems) {
		if (Item.itemStackable[item.id] || Item.itemIsNote[item.id]) {
			out += getItemName(item.id) + " x " + misc.format(item.amount)
					+ ", ";
		} else {
			out += getItemName(item.id) + ", ";
		}
	}
	sendQuest(out, 6516);
	out = "";
	for (GameItem item : other.offeredItems) {
		if (Item.itemStackable[item.id] || Item.itemIsNote[item.id]) {
			out += getItemName(item.id) + " x " + misc.format(item.amount)
					+ ", ";
		} else {
			out += getItemName(item.id) + ", ";
		}
	}
	sendQuest(out, 6517);
	sendQuest("Movement will be disabled", 8242);
	for (int i = 8243; i &lt;= 8253; i++) {
		sendQuest("", i);
	}
	sendQuest("Hitpoints will be restored", 8250);
	sendQuest("", 6571);
	showInterface(6412);
}[/code]</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/another-100-errors-today/349750/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/another-100-errors-today/349750/2</link>
        <pubDate>Sun, 18 Jul 2010 03:43:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-349750-2</guid>
        <source url="https://forum.moparisthebest.com/t/another-100-errors-today/349750.rss">Another 100 errors today -.-</source>
      </item>
      <item>
        <title>Another 100 errors today -.-</title>
        <dc:creator><![CDATA[@j19283746 j19283746]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/j19283746">@j19283746</a> wrote:</p>
          <blockquote>
              <p><code>client.java:115: ';' expected
public void dclawed() {
                   ^
client.java:138: illegal start of expression
                public int dclaws = 0;
                ^
client.java:140: illegal start of expression
                public void checkclaws() {
                ^
client.java:140: illegal start of expression
                public void checkclaws() {
                       ^
client.java:140: ';' expected
                public void checkclaws() {
                                      ^
client.java:154: illegal start of expression
        public void playersOnline_and_Uptime() {
        ^
client.java:154: illegal start of expression
        public void playersOnline_and_Uptime() {
               ^
client.java:154: ';' expected
        public void playersOnline_and_Uptime() {
                                            ^
client.java:158: illegal start of expression
        public int[] lowTask = { 87, 100, 19, 1267, 181, 90, 112, 117, 78, 1153
};
        ^
client.java:159: illegal start of expression
        public int[] mediumTask = { 87, 100, 19, 1267, 117, 78, 941, 1338, 912,
913, 914, 2591, 2604, 2610, 1153, 1154 };
        ^
client.java:160: illegal start of expression
        public int[] highTask = { 1627, 181, 90, 112, 117, 78, 1183, 941, 2881,
2882, 2883, 2591, 2604, 2610, 1153, 1154 };
        ^
client.java:161: illegal start of expression
        public int taskID = -1;
        ^
client.java:162: illegal start of expression
        public static int Waiters = 0;
        ^
client.java:162: illegal start of expression
        public static int Waiters = 0;
               ^
client.java:162: ';' expected
        public static int Waiters = 0;
                     ^
client.java:163: illegal start of expression
        public boolean waited;
        ^
client.java:164: illegal start of expression
        public int pkPoints = 0;
        ^
client.java:165: illegal start of expression
        public int donorPoints = 0;
        ^
client.java:166: illegal start of expression
        public int hween09 = 0;
        ^
client.java:167: illegal start of expression
        public boolean logoutButton;
        ^
client.java:168: illegal start of expression
        public boolean hasAccepted = false;
        ^
client.java:169: illegal start of expression
        public int taskAmount = -1;
        ^
client.java:170: illegal start of expression
        public boolean isBK = false;
        ^
client.java:171: illegal start of expression
        public boolean isBT = false;
        ^
client.java:172: illegal start of expression
        public boolean isBA = false;
        ^
client.java:173: illegal start of expression
        public boolean isBD = false;
        ^
client.java:174: illegal start of expression
        public boolean isBV = false;
        ^
client.java:175: illegal start of expression
        public boolean isBG = false;
        ^
client.java:176: illegal start of expression
        private long delay01 = 0;
        ^
client.java:181: illegal start of expression
        public int randomLowTask()
        ^
client.java:181: ';' expected
        public int randomLowTask()
                                ^
client.java:186: illegal start of expression
        public int randomMediumTask()
        ^
client.java:186: ';' expected
        public int randomMediumTask()
                                   ^
client.java:191: illegal start of expression
        public int randomHighTask()
        ^
client.java:191: ';' expected
        public int randomHighTask()
                                 ^
client.java:196: illegal start of expression
        public void RemoveAllDuelItems() {
        ^
client.java:196: illegal start of expression
        public void RemoveAllDuelItems() {
               ^
client.java:196: ';' expected
        public void RemoveAllDuelItems() {
                                      ^
client.java:204: illegal start of expression
        public void Duelfinish() {
        ^
client.java:204: illegal start of expression
        public void Duelfinish() {
               ^
client.java:204: ';' expected
        public void Duelfinish() {
                              ^
client.java:218: illegal start of expression
        public void resetDuel() {
        ^
client.java:218: illegal start of expression
        public void resetDuel() {
               ^
client.java:218: ';' expected
        public void resetDuel() {
                             ^
client.java:234: illegal start of expression
         public void setDuelEquipment(int i, int j, int k)
         ^
client.java:234: illegal start of expression
         public void setDuelEquipment(int i, int j, int k)
                ^
client.java:234: ';' expected
         public void setDuelEquipment(int i, int j, int k)
                                     ^
client.java:234: &lt;identifier&gt; expected
         public void setDuelEquipment(int i, int j, int k)
                                            ^
client.java:234: not a statement
         public void setDuelEquipment(int i, int j, int k)
                                                 ^
client.java:234: ';' expected
         public void setDuelEquipment(int i, int j, int k)
                                                  ^
client.java:234: ';' expected
         public void setDuelEquipment(int i, int j, int k)
                                                         ^
client.java:257: illegal start of expression
public int HeadWear = 1;
^
client.java:258: illegal start of expression
public int TorsoWear = 1;
^
client.java:259: illegal start of expression
public int LegsWear = 1;
^
client.java:260: illegal start of expression
public int GlovesWear = 1;
^
client.java:261: illegal start of expression
public int BootsWear = 1;
^
client.java:262: illegal start of expression
public int WeaponWear = 1;
^
client.java:263: illegal start of expression
public int dbowspec = 0;
^
client.java:264: illegal start of expression
public int ShieldWear = 1;
^
client.java:265: illegal start of expression
public int CapeWear = 1;
^
client.java:266: illegal start of expression
public int ArrowsWear = 1;
^
client.java:267: illegal start of expression
public int AmuletWear = 1;
^
client.java:268: illegal start of expression
public int RingWear = 1;
^
client.java:269: illegal start of expression
        public boolean stakeItem(int itemID, int fromSlot, int amount) {
        ^
client.java:269: ';' expected
        public boolean stakeItem(int itemID, int fromSlot, int amount) {
                                ^
client.java:269: &lt;identifier&gt; expected
        public boolean stakeItem(int itemID, int fromSlot, int amount) {
                                            ^
client.java:269: not a statement
        public boolean stakeItem(int itemID, int fromSlot, int amount) {
                                                 ^
client.java:269: ';' expected
        public boolean stakeItem(int itemID, int fromSlot, int amount) {
                                                         ^
client.java:269: ';' expected
        public boolean stakeItem(int itemID, int fromSlot, int amount) {
                                                                     ^
client.java:329: illegal start of expression
        public void startDuel() {
        ^
client.java:329: illegal start of expression
        public void startDuel() {
               ^
client.java:329: ';' expected
        public void startDuel() {
                             ^
client.java:370: illegal start of expression
                        public void declineDuel() {
                        ^
client.java:370: illegal start of expression
                        public void declineDuel() {
                               ^
client.java:370: ';' expected
                        public void declineDuel() {
                                               ^
client.java:395: illegal start of expression
        public boolean DeclineDuel() {
        ^
client.java:395: ';' expected
        public boolean DeclineDuel() {
                                  ^
client.java:399: illegal start of expression
                public boolean duelButton(int button) {
                ^
client.java:399: ';' expected
                public boolean duelButton(int button) {
                                         ^
client.java:399: ';' expected
                public boolean duelButton(int button) {
                                                    ^
client.java:431: illegal start of expression
        public void duelPlayer(int pIndex) {
        ^
client.java:431: illegal start of expression
        public void duelPlayer(int pIndex) {
               ^
client.java:431: ';' expected
        public void duelPlayer(int pIndex) {
                              ^
client.java:431: ';' expected
        public void duelPlayer(int pIndex) {
                                         ^
client.java:447: illegal start of expression
        public void duelReq(int pid) {
        ^
client.java:447: illegal start of expression
        public void duelReq(int pid) {
               ^
client.java:447: ';' expected
        public void duelReq(int pid) {
                           ^
client.java:447: ';' expected
        public void duelReq(int pid) {
                                   ^
client.java:475: illegal start of expression
        public void DuelVictory() {
        ^
client.java:475: illegal start of expression
        public void DuelVictory() {
               ^
client.java:475: ';' expected
        public void DuelVictory() {
                               ^
client.java:578: illegal start of expression
        public boolean fromDuel(int itemID, int fromSlot, int amount) {
        ^
client.java:578: ';' expected
        public boolean fromDuel(int itemID, int fromSlot, int amount) {
                               ^
client.java:578: &lt;identifier&gt; expected
        public boolean fromDuel(int itemID, int fromSlot, int amount) {
                                           ^
client.java:578: not a statement
        public boolean fromDuel(int itemID, int fromSlot, int amount) {
                                                ^
client.java:578: ';' expected
        public boolean fromDuel(int itemID, int fromSlot, int amount) {
                                                        ^
client.java:578: ';' expected
        public boolean fromDuel(int itemID, int fromSlot, int amount) {
                                                                    ^
client.java:628: illegal start of expression
                public void confirmDuel() {
                ^
100 errors
Finished!
Press any key to continue . . .</code><br>
Good luck. I have been counting brackets forever.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/another-100-errors-today/349750/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/another-100-errors-today/349750/1</link>
        <pubDate>Sun, 18 Jul 2010 03:32:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-349750-1</guid>
        <source url="https://forum.moparisthebest.com/t/another-100-errors-today/349750.rss">Another 100 errors today -.-</source>
      </item>
  </channel>
</rss>
