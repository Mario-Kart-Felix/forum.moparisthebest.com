<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</title>
    <link>https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925</link>
    <description>Paste bin: http://pastebin.com/iwmaWLbq
[code=java]package server.model.players.skills;

import server.util.Misc;
import server.model.players.Client;
import server.model.players.skills.*;
import server.content.RiverTroll;
import server.event.*;
import server.*;

/**
 * Class Fishing Handles: Fishing
 * 
 * @author: Strucker
 * @START: 4:23PM 8/05/2014
 * @FINISH: 5:11PM 8/05/2014
 */
public class Fishing extends SkillHandler {

	public static final int HARPOON_FISHING_EMOTE = 618;
	public static final int CAGE_FISHING_EMOTE = 619;
	public static final int ROD_FISHING_EMOTE = 622;

	private enum FishingSpotData {
		CONSTANT(0, 0, 0, 0, 0, 0, 0, 0,0);

		private int emote, spot, requiredLevel, requiredItem, baitQuantity, experience, delay, fish, bait;
		
		/**
		 * Constructs the parameters of the constants in the enum
		 */
		FishingSpotData(int emote, int spot, int requiredLevel,
				int requiredItem, int baitQuantity, int experience, int delay,
				int fish, int bait) {
			this.spot = spot;
			this.requiredLevel = requiredLevel;
			this.requiredItem = requiredItem;
			this.baitQuantity = baitQuantity;
			this.experience = experience;
			this.delay = delay;
			this.fish = fish;
			this.bait = bait;
			this.emote = emote;
		}
		
		private int getBait() {
			return bait;
		}
		
		private int getSpot() {
			return spot;
		}

		private int getRequiredLevel() {
			return requiredLevel;
		}

		private int getRequiredItem() {
			return requiredItem;
		}

		private int getBaitQuantity() {
			return baitQuantity;
		}

		private int getExperience() {
			return experience;
		}

		private int getDelay() {
			return delay;
		}

		private int getFish() {
			return fish;
		}
	}

	/**
	 * If the player moves the fishing flag is set to false
	 * @param player
	 */
	public static void walkingPacket(Client player) {
		player.isFishing = false;
	}

	/**
	 * Loops the emote as long as the player is fishing
	 * @param player
	 * 		the player that will execute the emote
	 * @param emote
	 * 		the emote that will be executed
	 */
	public static void loopEmote(final Client player, final int emote) {
		Server.getTaskScheduler().schedule(new Task(6, true) {
			@Override
			protected void execute() {
				if(player.isFishing == false)
					stop();
				else 
					player.startAnimation(emote);
			}	
		});
	}
	
	/**
	 * Check if the player has bait and the required item(Net, etc)
	 * 
	 * @param player
	 * 		the player that will have his bait checked
	 * @param requiredItem
	 * 		the bait 
	 * @param requiredQuantity
	 * 		the required amount of bait
	 * @return
	 */
	public static boolean hasBait(Client player, int requiredBait, int requiredQuantity, int requiredItem) {
		if(requiredBait == 0 &amp;&amp; requiredItem == 0 &amp; player.getItems().playerHasItem(requiredItem))
			return true;
		if(player.getItems().playerHasItem(requiredBait, requiredQuantity) &amp;&amp; player.getItems().playerHasItem(requiredItem))
			return true;
		return false;
	}
	
	/**
	 * Fishes :)
	 * @param player
	 * 		the player that will fish
	 * @param spot
	 * 		the spot where the player will fish
	 */
	public static void fishFromSpot(final Client player, int spot) {
		
		/**
		 * Loops through the enum
		 */
		for (final FishingSpotData data : FishingSpotData.values()) {
			
			/*
			 * Makes sure the player isn&#39;t fishing yet, and the player clicked a spot, also check for the required level
			 */
			if (!player.fishing &amp;&amp; spot == data.getSpot() &amp;&amp; player.playerLevel[player.playerFishing] &gt;= data.getRequiredLevel()) {
				
				/**
				 * sets the fishing flag to true
				 */
				player.fishing = true;
				
				/**
				 * does the fishing emote
				 */
				loopEmote(player, data.emote);
				
				/**
				 * Schedules a new task with instant execution and timer of 2
				 */
				Server.getTaskScheduler().schedule(new Task(2, true) {
					
					/**
					 * Gets the delay to catch the fish
					 */
					private int delay = data.getDelay();

					@Override
					protected void execute() {
						
						/**
						 * The delay for the fishing as its not an instant fish
						 */
						if (delay &gt; 0) {
							delay--;
						} else {
							
							/**
							 * Makes sure the player has enough space, makes sure the player is fishing, make sure the player has bait
							 * and the required bait quantity also check if the player has the required item to fish,
							 * if he doesn&#39;t the container is stopped, and no further code is executed
							 */
							if(noInventorySpace(player, &quot;Fishing&quot;) || !player.fishing || !hasBait(player, data.getBait(), data.getBaitQuantity(), data.getRequiredItem())) {
								player.fishing = false;
								stop();
								return;
							}
							
							/**
							 * Adds the experience
							 */
							player.getPA().addSkillXP(data.getExperience(), player.playerFishing);
							
							/*
							 * Adds the fish to the inventory
							 */
							player.getItems().addItem(data.getFish(), 1);		
						}
					}
				});
			}
		}
	}
}[/code]</description>
    
    <lastBuildDate>Mon, 09 Feb 2015 23:29:59 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</title>
        <dc:creator><![CDATA[@strucker Strucker]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/strucker">@strucker</a> wrote:</p>
          <blockquote>
              <p>dat stupid bump l0l</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/17</link>
        <pubDate>Mon, 09 Feb 2015 23:29:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-542925-17</guid>
        <source url="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925.rss">[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</source>
      </item>
      <item>
        <title>[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</title>
        <dc:creator><![CDATA[@arham_4 arham 4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/arham_4">@arham_4</a> wrote:</p>
          <blockquote>
              <p>[quote=“Freesunfury, post:13, topic:542925”]This is junk. Just use this</p>
<p>[CODE]<br>
/**</p>
<ul>
<li>Class Fishing Handles: Fishing</li>
<li>
</li>
<li>
<span class="mention">@author</span>: PapaDoc START: 22:07 23/12/2010 FINISH: 22:28 23/12/2010<br>
*/</li>
</ul>
<p>public class Fishing extends SkillHandler {</p>
<pre><code>private static int[][] data = {
		{ 1, 1, 303, -1, 317, 10, 621, 321, 15, 30 }, // SHRIMP + ANCHOVIES
		{ 2, 5, 309, 313, 327, 20, 622, 345, 10, 30 }, // SARDINE + HERRING
		{ 3, 16, 305, -1, 353, 20, 620, -1, -1, -1 }, // MACKEREL
		{ 3, 20, 309, -1, 335, 50, 622, 331, 30, 70 }, // TROUT
		{ 5, 23, 305, -1, 341, 45, 619, 363, 46, 100 }, // BASS + COD
		{ 6, 25, 309, 313, 349, 60, 622, -1, -1, -1 }, // PIKE
		{ 7, 35, 311, -1, 359, 80, 618, 371, 50, 100 }, // TUNA + SWORDIE
		{ 8, 40, 301, -1, 377, 90, 619, -1, -1, -1 }, // LOBSTER
		{ 9, 62, 305, -1, 7944, 120, 620, -1, -1, -1 }, // MONKFISH
		{ 10, 76, 311, -1, 383, 110, 618, -1, -1, -1 }, // SHARK
		{ 11, 79, 305, -1, 395, 38, 619, -1, -1, -1 }, // SEA TURTLE
		{ 12, 81, 305, -1, 389, 130, 621, -1, -1, -1 }, // MANTA RAY
};

public static void attemptdata(final Client c, int npcId) {
	if (!noInventorySpace(c, "fishing")) {
		c.sendMessage("You must have space in your inventory to start fishing.");
		return;
	}
	// resetFishing(c);
	for (int i = 0; i &lt; data.length; i++) {
		if (npcId == data[i][0]) {
			if (c.playerLevel[c.playerFishing] &lt; data[i][1]) {
				c.sendMessage("You haven't got high enough fishing level to fish here!");
				c.sendMessage("You at list need the fishing level of "
						+ data[i][1] + ".");
				c.getPA().sendStatement(
						"You need the fishing level of " + data[i][1]
								+ " to fish here.");
				return;
			}
			if (data[i][3] &gt; 0) {
				if (!c.getItems().playerHasItem(data[i][3])) {
					c.sendMessage("You haven't got any "
							+ c.getItems().getItemName(data[i][3]) + "!");
					c.sendMessage("You need "
							+ c.getItems().getItemName(data[i][3])
							+ " to fish here.");
					return;
				}
			}
			c.playerSkillProp[10][0] = data[i][6]; // ANIM
			c.playerSkillProp[10][1] = data[i][4]; // FISH
			c.playerSkillProp[10][2] = data[i][5]; // XP
			c.playerSkillProp[10][3] = data[i][3]; // BAIT
			c.playerSkillProp[10][4] = data[i][2]; // EQUIP
			c.playerSkillProp[10][5] = data[i][7]; // sFish
			c.playerSkillProp[10][6] = data[i][8]; // sLvl
			c.playerSkillProp[10][7] = data[i][4]; // FISH
			c.playerSkillProp[10][8] = data[i][9]; // sXP
			c.playerSkillProp[10][9] = Misc.random(1) == 0 ? 7 : 5;
			c.playerSkillProp[10][10] = data[i][0]; // INDEX

			if (!hasFishingEquipment(c, c.playerSkillProp[10][4])) {
				return;
			}

			c.turnPlayerTo(c.objectX, c.objectY);
			c.sendMessage("You start fishing.");
			c.startAnimation(c.playerSkillProp[10][0]);
			c.stopPlayerSkill = true;

			if (c.playerSkilling[10]) {
				return;
			}

			c.playerSkilling[10] = true;

			CycleEventHandler.getSingleton().addEvent(c, new CycleEvent() {
				@Override
				public void execute(CycleEventContainer container) {
					if (c.playerSkillProp[10][5] &gt; 0) {
						if (c.playerLevel[c.playerFishing] &gt;= c.playerSkillProp[10][6]) {
							c.playerSkillProp[10][1] = c.playerSkillProp[10][Misc
									.random(1) == 0 ? 7 : 5];
						}
					}
					if (c.playerSkillProp[10][1] &gt; 0) {
						c.sendMessage("You catch a "
								+ c.getItems().getItemName(
										c.playerSkillProp[10][1]) + ".");
					}
					if (c.playerSkillProp[10][1] &gt; 0) {
						c.getItems().addItem(c.playerSkillProp[10][1], 1);
						c.startAnimation(c.playerSkillProp[10][0]);
					}
					if (c.playerSkillProp[10][2] &gt; 0) {
						c.getPA().addSkillXP(
								c.playerSkillProp[10][2] * FISHING_XP,
								c.playerFishing);
					}
					if (c.playerSkillProp[10][3] &gt; 0) {
						c.getItems().deleteItem(
								c.playerSkillProp[10][3],
								c.getItems().getItemSlot(
										c.playerSkillProp[10][3]), 1);
						if (!c.getItems().playerHasItem(
								c.playerSkillProp[10][3])) {
							c.sendMessage("You haven't got any "
									+ c.getItems().getItemName(
											c.playerSkillProp[10][3])
									+ " left!");
							c.sendMessage("You need "
									+ c.getItems().getItemName(
											c.playerSkillProp[10][3])
									+ " to fish here.");
							container.stop();
						}
					}
					if (!hasFishingEquipment(c, c.playerSkillProp[10][4])) {
						container.stop();
					}
					if (!noInventorySpace(c, "fishing")) {
						container.stop();
					}
					if (Misc.random(15) == 0) {
						container.stop();
					}
					if (!c.stopPlayerSkill) {
						container.stop();
					}
					if (!c.playerSkilling[10]) {
						container.stop();
					}
				}

				@Override
				public void stop() {
					resetFishing(c);
				}
			}, getTimer(c, npcId) + 5 + playerFishingLevel(c));
		}
	}
}

private static boolean hasFishingEquipment(Client c, int equipment) {
	if (!c.getItems().playerHasItem(equipment)) {
		if (equipment == 311) {
			if (!c.getItems().playerHasItem(311)
					&amp;&amp; !c.getItems().playerHasItem(10129)
					&amp;&amp; c.playerEquipment[3] != 10129) {
				c.sendMessage("You need a "
						+ c.getItems().getItemName(equipment)
						+ " to fish here.");
				return false;
			}
		} else {
			c.sendMessage("You need a "
					+ c.getItems().getItemName(equipment)
					+ " to fish here.");
			return false;
		}
	}
	return true;
}

private static void resetFishing(Client c) {
	c.startAnimation(65535);
	c.getPA().removeAllWindows();
	c.playerSkilling[10] = false;
	for (int i = 0; i &lt; 11; i++) {
		c.playerSkillProp[10][i] = -1;
	}
}

private static int playerFishingLevel(Client c) {
	return (10 - (int) Math.floor(c.playerLevel[c.playerFishing] / 10));
}

private final static int getTimer(Client c, int npcId) {
	switch (npcId) {
	case 1:
		return 2;
	case 2:
		return 3;
	case 3:
		return 4;
	case 4:
		return 4;
	case 5:
		return 4;
	case 6:
		return 5;
	case 7:
		return 5;
	case 8:
		return 5;
	case 9:
		return 5;
	case 10:
		return 5;
	case 11:
		return 9;
	case 12:
		return 9;
	default:
		return -1;
	}
}

public static void fishingNPC(Client c, int i, int l) {
	switch (i) {
	case 1:
		switch (l) {
		case 319:
		case 329:
		case 323:
			// case 325:
		case 326:
		case 327:
		case 330:
		case 332:
		case 316: // NET + BAIT
			Fishing.attemptdata(c, 1);
			break;
		case 325:
			Fishing.attemptdata(c, 12);
			break;
		case 334:
		case 313: // NET + HARPOON
			Fishing.attemptdata(c, 3);
			break;
		case 322: // NET + HARPOON
			Fishing.attemptdata(c, 5);
			break;

		case 309: // LURE
		case 310:
		case 311:
		case 314:
		case 315:
		case 317:
		case 318:
		case 328:
		case 331:
			Fishing.attemptdata(c, 4);
			break;

		case 312:
		case 321:
		case 324: // CAGE + HARPOON
			Fishing.attemptdata(c, 8);
			break;
		}
		break;
	case 2:
		switch (l) {
		case 326:
		case 327:
		case 330:
		case 332:
		case 316: // BAIT + NET
			Fishing.attemptdata(c, 2);
			break;
		case 319:
		case 323:
		case 325: // BAIT + NET
			Fishing.attemptdata(c, 9);
			break;
		case 310:
		case 311:
		case 314:
		case 315:
		case 317:
		case 318:
		case 328:
		case 329:
		case 331:
		case 309: // BAIT + LURE
			Fishing.attemptdata(c, 6);
			break;
		case 312:
		case 321:
		case 324:// SWORDIES+TUNA-CAGE+HARPOON
			Fishing.attemptdata(c, 7);
			break;
		case 313:
		case 322:
		case 334: // NET+HARPOON
			Fishing.attemptdata(c, 10);
			break;
		}
		break;
	}
}

public static boolean fishingNPC(Client c, int npc) {
	for (int i = 308; i &lt; 335; i++) {
		if (npc == i) {
			return true;
		}
	}
	return false;
}
</code></pre>
<p>}<br>
[/CODE][/quote]Worse</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/16</link>
        <pubDate>Wed, 04 Feb 2015 05:33:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-542925-16</guid>
        <source url="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925.rss">[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</source>
      </item>
      <item>
        <title>[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>[quote=“Freesunfury, post:13, topic:542925”]This is junk. Just use this</p>
<p>[CODE]<br>
/**</p>
<ul>
<li>Class Fishing Handles: Fishing</li>
<li>
</li>
<li>
<span class="mention">@author</span>: PapaDoc START: 22:07 23/12/2010 FINISH: 22:28 23/12/2010<br>
*/</li>
</ul>
<p>public class Fishing extends SkillHandler {</p>
<pre><code>private static int[][] data = {
		{ 1, 1, 303, -1, 317, 10, 621, 321, 15, 30 }, // SHRIMP + ANCHOVIES
		{ 2, 5, 309, 313, 327, 20, 622, 345, 10, 30 }, // SARDINE + HERRING
		{ 3, 16, 305, -1, 353, 20, 620, -1, -1, -1 }, // MACKEREL
		{ 3, 20, 309, -1, 335, 50, 622, 331, 30, 70 }, // TROUT
		{ 5, 23, 305, -1, 341, 45, 619, 363, 46, 100 }, // BASS + COD
		{ 6, 25, 309, 313, 349, 60, 622, -1, -1, -1 }, // PIKE
		{ 7, 35, 311, -1, 359, 80, 618, 371, 50, 100 }, // TUNA + SWORDIE
		{ 8, 40, 301, -1, 377, 90, 619, -1, -1, -1 }, // LOBSTER
		{ 9, 62, 305, -1, 7944, 120, 620, -1, -1, -1 }, // MONKFISH
		{ 10, 76, 311, -1, 383, 110, 618, -1, -1, -1 }, // SHARK
		{ 11, 79, 305, -1, 395, 38, 619, -1, -1, -1 }, // SEA TURTLE
		{ 12, 81, 305, -1, 389, 130, 621, -1, -1, -1 }, // MANTA RAY
};

public static void attemptdata(final Client c, int npcId) {
	if (!noInventorySpace(c, "fishing")) {
		c.sendMessage("You must have space in your inventory to start fishing.");
		return;
	}
	// resetFishing(c);
	for (int i = 0; i &lt; data.length; i++) {
		if (npcId == data[i][0]) {
			if (c.playerLevel[c.playerFishing] &lt; data[i][1]) {
				c.sendMessage("You haven't got high enough fishing level to fish here!");
				c.sendMessage("You at list need the fishing level of "
						+ data[i][1] + ".");
				c.getPA().sendStatement(
						"You need the fishing level of " + data[i][1]
								+ " to fish here.");
				return;
			}
			if (data[i][3] &gt; 0) {
				if (!c.getItems().playerHasItem(data[i][3])) {
					c.sendMessage("You haven't got any "
							+ c.getItems().getItemName(data[i][3]) + "!");
					c.sendMessage("You need "
							+ c.getItems().getItemName(data[i][3])
							+ " to fish here.");
					return;
				}
			}
			c.playerSkillProp[10][0] = data[i][6]; // ANIM
			c.playerSkillProp[10][1] = data[i][4]; // FISH
			c.playerSkillProp[10][2] = data[i][5]; // XP
			c.playerSkillProp[10][3] = data[i][3]; // BAIT
			c.playerSkillProp[10][4] = data[i][2]; // EQUIP
			c.playerSkillProp[10][5] = data[i][7]; // sFish
			c.playerSkillProp[10][6] = data[i][8]; // sLvl
			c.playerSkillProp[10][7] = data[i][4]; // FISH
			c.playerSkillProp[10][8] = data[i][9]; // sXP
			c.playerSkillProp[10][9] = Misc.random(1) == 0 ? 7 : 5;
			c.playerSkillProp[10][10] = data[i][0]; // INDEX

			if (!hasFishingEquipment(c, c.playerSkillProp[10][4])) {
				return;
			}

			c.turnPlayerTo(c.objectX, c.objectY);
			c.sendMessage("You start fishing.");
			c.startAnimation(c.playerSkillProp[10][0]);
			c.stopPlayerSkill = true;

			if (c.playerSkilling[10]) {
				return;
			}

			c.playerSkilling[10] = true;

			CycleEventHandler.getSingleton().addEvent(c, new CycleEvent() {
				@Override
				public void execute(CycleEventContainer container) {
					if (c.playerSkillProp[10][5] &gt; 0) {
						if (c.playerLevel[c.playerFishing] &gt;= c.playerSkillProp[10][6]) {
							c.playerSkillProp[10][1] = c.playerSkillProp[10][Misc
									.random(1) == 0 ? 7 : 5];
						}
					}
					if (c.playerSkillProp[10][1] &gt; 0) {
						c.sendMessage("You catch a "
								+ c.getItems().getItemName(
										c.playerSkillProp[10][1]) + ".");
					}
					if (c.playerSkillProp[10][1] &gt; 0) {
						c.getItems().addItem(c.playerSkillProp[10][1], 1);
						c.startAnimation(c.playerSkillProp[10][0]);
					}
					if (c.playerSkillProp[10][2] &gt; 0) {
						c.getPA().addSkillXP(
								c.playerSkillProp[10][2] * FISHING_XP,
								c.playerFishing);
					}
					if (c.playerSkillProp[10][3] &gt; 0) {
						c.getItems().deleteItem(
								c.playerSkillProp[10][3],
								c.getItems().getItemSlot(
										c.playerSkillProp[10][3]), 1);
						if (!c.getItems().playerHasItem(
								c.playerSkillProp[10][3])) {
							c.sendMessage("You haven't got any "
									+ c.getItems().getItemName(
											c.playerSkillProp[10][3])
									+ " left!");
							c.sendMessage("You need "
									+ c.getItems().getItemName(
											c.playerSkillProp[10][3])
									+ " to fish here.");
							container.stop();
						}
					}
					if (!hasFishingEquipment(c, c.playerSkillProp[10][4])) {
						container.stop();
					}
					if (!noInventorySpace(c, "fishing")) {
						container.stop();
					}
					if (Misc.random(15) == 0) {
						container.stop();
					}
					if (!c.stopPlayerSkill) {
						container.stop();
					}
					if (!c.playerSkilling[10]) {
						container.stop();
					}
				}

				@Override
				public void stop() {
					resetFishing(c);
				}
			}, getTimer(c, npcId) + 5 + playerFishingLevel(c));
		}
	}
}

private static boolean hasFishingEquipment(Client c, int equipment) {
	if (!c.getItems().playerHasItem(equipment)) {
		if (equipment == 311) {
			if (!c.getItems().playerHasItem(311)
					&amp;&amp; !c.getItems().playerHasItem(10129)
					&amp;&amp; c.playerEquipment[3] != 10129) {
				c.sendMessage("You need a "
						+ c.getItems().getItemName(equipment)
						+ " to fish here.");
				return false;
			}
		} else {
			c.sendMessage("You need a "
					+ c.getItems().getItemName(equipment)
					+ " to fish here.");
			return false;
		}
	}
	return true;
}

private static void resetFishing(Client c) {
	c.startAnimation(65535);
	c.getPA().removeAllWindows();
	c.playerSkilling[10] = false;
	for (int i = 0; i &lt; 11; i++) {
		c.playerSkillProp[10][i] = -1;
	}
}

private static int playerFishingLevel(Client c) {
	return (10 - (int) Math.floor(c.playerLevel[c.playerFishing] / 10));
}

private final static int getTimer(Client c, int npcId) {
	switch (npcId) {
	case 1:
		return 2;
	case 2:
		return 3;
	case 3:
		return 4;
	case 4:
		return 4;
	case 5:
		return 4;
	case 6:
		return 5;
	case 7:
		return 5;
	case 8:
		return 5;
	case 9:
		return 5;
	case 10:
		return 5;
	case 11:
		return 9;
	case 12:
		return 9;
	default:
		return -1;
	}
}

public static void fishingNPC(Client c, int i, int l) {
	switch (i) {
	case 1:
		switch (l) {
		case 319:
		case 329:
		case 323:
			// case 325:
		case 326:
		case 327:
		case 330:
		case 332:
		case 316: // NET + BAIT
			Fishing.attemptdata(c, 1);
			break;
		case 325:
			Fishing.attemptdata(c, 12);
			break;
		case 334:
		case 313: // NET + HARPOON
			Fishing.attemptdata(c, 3);
			break;
		case 322: // NET + HARPOON
			Fishing.attemptdata(c, 5);
			break;

		case 309: // LURE
		case 310:
		case 311:
		case 314:
		case 315:
		case 317:
		case 318:
		case 328:
		case 331:
			Fishing.attemptdata(c, 4);
			break;

		case 312:
		case 321:
		case 324: // CAGE + HARPOON
			Fishing.attemptdata(c, 8);
			break;
		}
		break;
	case 2:
		switch (l) {
		case 326:
		case 327:
		case 330:
		case 332:
		case 316: // BAIT + NET
			Fishing.attemptdata(c, 2);
			break;
		case 319:
		case 323:
		case 325: // BAIT + NET
			Fishing.attemptdata(c, 9);
			break;
		case 310:
		case 311:
		case 314:
		case 315:
		case 317:
		case 318:
		case 328:
		case 329:
		case 331:
		case 309: // BAIT + LURE
			Fishing.attemptdata(c, 6);
			break;
		case 312:
		case 321:
		case 324:// SWORDIES+TUNA-CAGE+HARPOON
			Fishing.attemptdata(c, 7);
			break;
		case 313:
		case 322:
		case 334: // NET+HARPOON
			Fishing.attemptdata(c, 10);
			break;
		}
		break;
	}
}

public static boolean fishingNPC(Client c, int npc) {
	for (int i = 308; i &lt; 335; i++) {
		if (npc == i) {
			return true;
		}
	}
	return false;
}
</code></pre>
<p>}<br>
[/CODE][/quote]<br>
just as bad, if not worse</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/15</link>
        <pubDate>Wed, 28 Jan 2015 18:35:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-542925-15</guid>
        <source url="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925.rss">[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</source>
      </item>
      <item>
        <title>[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</title>
        <dc:creator><![CDATA[@sk8rdude461 sk8rdude461]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sk8rdude461">@sk8rdude461</a> wrote:</p>
          <blockquote>
              <p>^That is not any better…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/14</link>
        <pubDate>Tue, 27 Jan 2015 07:45:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-542925-14</guid>
        <source url="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925.rss">[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</source>
      </item>
      <item>
        <title>[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</title>
        <dc:creator><![CDATA[@Freesunfury Freesunfury]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/freesunfury">@Freesunfury</a> wrote:</p>
          <blockquote>
              <p>This is junk. Just use this</p>
<p>[CODE]<br>
/**</p>
<ul>
<li>Class Fishing Handles: Fishing</li>
<li>
</li>
<li>
<span class="mention">@author</span>: PapaDoc START: 22:07 23/12/2010 FINISH: 22:28 23/12/2010<br>
*/</li>
</ul>
<p>public class Fishing extends SkillHandler {</p>
<pre><code>private static int[][] data = {
		{ 1, 1, 303, -1, 317, 10, 621, 321, 15, 30 }, // SHRIMP + ANCHOVIES
		{ 2, 5, 309, 313, 327, 20, 622, 345, 10, 30 }, // SARDINE + HERRING
		{ 3, 16, 305, -1, 353, 20, 620, -1, -1, -1 }, // MACKEREL
		{ 3, 20, 309, -1, 335, 50, 622, 331, 30, 70 }, // TROUT
		{ 5, 23, 305, -1, 341, 45, 619, 363, 46, 100 }, // BASS + COD
		{ 6, 25, 309, 313, 349, 60, 622, -1, -1, -1 }, // PIKE
		{ 7, 35, 311, -1, 359, 80, 618, 371, 50, 100 }, // TUNA + SWORDIE
		{ 8, 40, 301, -1, 377, 90, 619, -1, -1, -1 }, // LOBSTER
		{ 9, 62, 305, -1, 7944, 120, 620, -1, -1, -1 }, // MONKFISH
		{ 10, 76, 311, -1, 383, 110, 618, -1, -1, -1 }, // SHARK
		{ 11, 79, 305, -1, 395, 38, 619, -1, -1, -1 }, // SEA TURTLE
		{ 12, 81, 305, -1, 389, 130, 621, -1, -1, -1 }, // MANTA RAY
};

public static void attemptdata(final Client c, int npcId) {
	if (!noInventorySpace(c, "fishing")) {
		c.sendMessage("You must have space in your inventory to start fishing.");
		return;
	}
	// resetFishing(c);
	for (int i = 0; i &lt; data.length; i++) {
		if (npcId == data[i][0]) {
			if (c.playerLevel[c.playerFishing] &lt; data[i][1]) {
				c.sendMessage("You haven't got high enough fishing level to fish here!");
				c.sendMessage("You at list need the fishing level of "
						+ data[i][1] + ".");
				c.getPA().sendStatement(
						"You need the fishing level of " + data[i][1]
								+ " to fish here.");
				return;
			}
			if (data[i][3] &gt; 0) {
				if (!c.getItems().playerHasItem(data[i][3])) {
					c.sendMessage("You haven't got any "
							+ c.getItems().getItemName(data[i][3]) + "!");
					c.sendMessage("You need "
							+ c.getItems().getItemName(data[i][3])
							+ " to fish here.");
					return;
				}
			}
			c.playerSkillProp[10][0] = data[i][6]; // ANIM
			c.playerSkillProp[10][1] = data[i][4]; // FISH
			c.playerSkillProp[10][2] = data[i][5]; // XP
			c.playerSkillProp[10][3] = data[i][3]; // BAIT
			c.playerSkillProp[10][4] = data[i][2]; // EQUIP
			c.playerSkillProp[10][5] = data[i][7]; // sFish
			c.playerSkillProp[10][6] = data[i][8]; // sLvl
			c.playerSkillProp[10][7] = data[i][4]; // FISH
			c.playerSkillProp[10][8] = data[i][9]; // sXP
			c.playerSkillProp[10][9] = Misc.random(1) == 0 ? 7 : 5;
			c.playerSkillProp[10][10] = data[i][0]; // INDEX

			if (!hasFishingEquipment(c, c.playerSkillProp[10][4])) {
				return;
			}

			c.turnPlayerTo(c.objectX, c.objectY);
			c.sendMessage("You start fishing.");
			c.startAnimation(c.playerSkillProp[10][0]);
			c.stopPlayerSkill = true;

			if (c.playerSkilling[10]) {
				return;
			}

			c.playerSkilling[10] = true;

			CycleEventHandler.getSingleton().addEvent(c, new CycleEvent() {
				@Override
				public void execute(CycleEventContainer container) {
					if (c.playerSkillProp[10][5] &gt; 0) {
						if (c.playerLevel[c.playerFishing] &gt;= c.playerSkillProp[10][6]) {
							c.playerSkillProp[10][1] = c.playerSkillProp[10][Misc
									.random(1) == 0 ? 7 : 5];
						}
					}
					if (c.playerSkillProp[10][1] &gt; 0) {
						c.sendMessage("You catch a "
								+ c.getItems().getItemName(
										c.playerSkillProp[10][1]) + ".");
					}
					if (c.playerSkillProp[10][1] &gt; 0) {
						c.getItems().addItem(c.playerSkillProp[10][1], 1);
						c.startAnimation(c.playerSkillProp[10][0]);
					}
					if (c.playerSkillProp[10][2] &gt; 0) {
						c.getPA().addSkillXP(
								c.playerSkillProp[10][2] * FISHING_XP,
								c.playerFishing);
					}
					if (c.playerSkillProp[10][3] &gt; 0) {
						c.getItems().deleteItem(
								c.playerSkillProp[10][3],
								c.getItems().getItemSlot(
										c.playerSkillProp[10][3]), 1);
						if (!c.getItems().playerHasItem(
								c.playerSkillProp[10][3])) {
							c.sendMessage("You haven't got any "
									+ c.getItems().getItemName(
											c.playerSkillProp[10][3])
									+ " left!");
							c.sendMessage("You need "
									+ c.getItems().getItemName(
											c.playerSkillProp[10][3])
									+ " to fish here.");
							container.stop();
						}
					}
					if (!hasFishingEquipment(c, c.playerSkillProp[10][4])) {
						container.stop();
					}
					if (!noInventorySpace(c, "fishing")) {
						container.stop();
					}
					if (Misc.random(15) == 0) {
						container.stop();
					}
					if (!c.stopPlayerSkill) {
						container.stop();
					}
					if (!c.playerSkilling[10]) {
						container.stop();
					}
				}

				@Override
				public void stop() {
					resetFishing(c);
				}
			}, getTimer(c, npcId) + 5 + playerFishingLevel(c));
		}
	}
}

private static boolean hasFishingEquipment(Client c, int equipment) {
	if (!c.getItems().playerHasItem(equipment)) {
		if (equipment == 311) {
			if (!c.getItems().playerHasItem(311)
					&amp;&amp; !c.getItems().playerHasItem(10129)
					&amp;&amp; c.playerEquipment[3] != 10129) {
				c.sendMessage("You need a "
						+ c.getItems().getItemName(equipment)
						+ " to fish here.");
				return false;
			}
		} else {
			c.sendMessage("You need a "
					+ c.getItems().getItemName(equipment)
					+ " to fish here.");
			return false;
		}
	}
	return true;
}

private static void resetFishing(Client c) {
	c.startAnimation(65535);
	c.getPA().removeAllWindows();
	c.playerSkilling[10] = false;
	for (int i = 0; i &lt; 11; i++) {
		c.playerSkillProp[10][i] = -1;
	}
}

private static int playerFishingLevel(Client c) {
	return (10 - (int) Math.floor(c.playerLevel[c.playerFishing] / 10));
}

private final static int getTimer(Client c, int npcId) {
	switch (npcId) {
	case 1:
		return 2;
	case 2:
		return 3;
	case 3:
		return 4;
	case 4:
		return 4;
	case 5:
		return 4;
	case 6:
		return 5;
	case 7:
		return 5;
	case 8:
		return 5;
	case 9:
		return 5;
	case 10:
		return 5;
	case 11:
		return 9;
	case 12:
		return 9;
	default:
		return -1;
	}
}

public static void fishingNPC(Client c, int i, int l) {
	switch (i) {
	case 1:
		switch (l) {
		case 319:
		case 329:
		case 323:
			// case 325:
		case 326:
		case 327:
		case 330:
		case 332:
		case 316: // NET + BAIT
			Fishing.attemptdata(c, 1);
			break;
		case 325:
			Fishing.attemptdata(c, 12);
			break;
		case 334:
		case 313: // NET + HARPOON
			Fishing.attemptdata(c, 3);
			break;
		case 322: // NET + HARPOON
			Fishing.attemptdata(c, 5);
			break;

		case 309: // LURE
		case 310:
		case 311:
		case 314:
		case 315:
		case 317:
		case 318:
		case 328:
		case 331:
			Fishing.attemptdata(c, 4);
			break;

		case 312:
		case 321:
		case 324: // CAGE + HARPOON
			Fishing.attemptdata(c, 8);
			break;
		}
		break;
	case 2:
		switch (l) {
		case 326:
		case 327:
		case 330:
		case 332:
		case 316: // BAIT + NET
			Fishing.attemptdata(c, 2);
			break;
		case 319:
		case 323:
		case 325: // BAIT + NET
			Fishing.attemptdata(c, 9);
			break;
		case 310:
		case 311:
		case 314:
		case 315:
		case 317:
		case 318:
		case 328:
		case 329:
		case 331:
		case 309: // BAIT + LURE
			Fishing.attemptdata(c, 6);
			break;
		case 312:
		case 321:
		case 324:// SWORDIES+TUNA-CAGE+HARPOON
			Fishing.attemptdata(c, 7);
			break;
		case 313:
		case 322:
		case 334: // NET+HARPOON
			Fishing.attemptdata(c, 10);
			break;
		}
		break;
	}
}

public static boolean fishingNPC(Client c, int npc) {
	for (int i = 308; i &lt; 335; i++) {
		if (npc == i) {
			return true;
		}
	}
	return false;
}
</code></pre>
<p>}<br>
[/CODE]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/13</link>
        <pubDate>Tue, 27 Jan 2015 06:55:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-542925-13</guid>
        <source url="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925.rss">[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</source>
      </item>
      <item>
        <title>[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</title>
        <dc:creator><![CDATA[@strucker Strucker]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/strucker">@strucker</a> wrote:</p>
          <blockquote>
              <p>[quote=“Vix, post:11, topic:542925”]Although curly braces aren’t always required its still a good practice to use them, it will reduce confusion when someone else is reading or modifying your code. In industry its frowned upon to exclude them since others are always working with your code[/quote]Okay, and thanks <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>OP: I will edit this later, its too half/assed, i was debugging it in my server it was a lame</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/12</link>
        <pubDate>Mon, 12 May 2014 02:21:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-542925-12</guid>
        <source url="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925.rss">[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</source>
      </item>
      <item>
        <title>[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</title>
        <dc:creator><![CDATA[@Vix Vix]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/vix">@Vix</a> wrote:</p>
          <blockquote>
              <p>Although curly braces aren’t always required its still a good practice to use them, it will reduce confusion when someone else is reading or modifying your code. In industry its frowned upon to exclude them since others are always working with your code</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/11</link>
        <pubDate>Sun, 11 May 2014 23:36:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-542925-11</guid>
        <source url="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925.rss">[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</source>
      </item>
      <item>
        <title>[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</title>
        <dc:creator><![CDATA[@ohokay ohokay]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ohokay">@ohokay</a> wrote:</p>
          <blockquote>
              <p>If you’ve got the emote specified in the enum, why do you need them as constants at the top</p>
<p>You’re looping the emote outside of the fishing task, which creates two tasks? Can’t you loop the emote inside the fishing task so you’re only using 1?</p>
<p>This doesn’t support everything to do with fishing.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/10</link>
        <pubDate>Fri, 09 May 2014 12:05:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-542925-10</guid>
        <source url="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925.rss">[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</source>
      </item>
      <item>
        <title>[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</title>
        <dc:creator><![CDATA[@strucker Strucker]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/strucker">@strucker</a> wrote:</p>
          <blockquote>
              <p>[quote=“lare69, post:7, topic:542925”]you should probably</p>
<ul>
<li>add moving fishing spots</li>
<li>add the fish that spits your equipment away</li>
<li>add random stopping during fishing</li>
<li>clean up the documentation</li>
<li>add an actual formula that controls the speed of fishing, because currently you can fish sharks at the same speed as trout and salmon… which isn’t good for the economy at all</li>
</ul>
<p>before you even begin to call this amazing lol[/quote] - I have some of those in mine, i didn’t post it though, and about the speed of fishing seems like you couldn’t bother to check the parameters of the enum at all…<br>
And thanks for the fish and random stopping thingies thanks.<br>
chep hax if(Misc.random(99) == 0)<br>
player.isFishing = false else if(Misc.random(99)== 1)<br>
//move npc<br>
rep+++m8jk</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/9</link>
        <pubDate>Fri, 09 May 2014 04:33:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-542925-9</guid>
        <source url="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925.rss">[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</source>
      </item>
      <item>
        <title>[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</title>
        <dc:creator><![CDATA[@arham_4 arham 4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/arham_4">@arham_4</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="7" data-topic="542925">
<div class="title">
<div class="quote-controls"></div>
 lare69:</div>
<blockquote>
<p>- add moving fishing spots</p>
</blockquote>
</aside>
<p>Ye, you could use the data provided in the official mopar server.</p>
<p>…owait, that’s down.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/8</link>
        <pubDate>Fri, 09 May 2014 03:57:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-542925-8</guid>
        <source url="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925.rss">[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</source>
      </item>
      <item>
        <title>[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>you should probably</p>
<ul>
<li>add moving fishing spots</li>
<li>add the fish that spits your equipment away</li>
<li>add random stopping during fishing</li>
<li>clean up the documentation</li>
<li>add an actual formula that controls the speed of fishing, because currently you can fish sharks at the same speed as trout and salmon… which isn’t good for the economy at all</li>
</ul>
<p>before you even begin to call this amazing lol</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/7</link>
        <pubDate>Fri, 09 May 2014 03:06:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-542925-7</guid>
        <source url="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925.rss">[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</source>
      </item>
      <item>
        <title>[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</title>
        <dc:creator><![CDATA[@asshole_rule asshole_rule]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/asshole_rule">@asshole_rule</a> wrote:</p>
          <blockquote>
              <p>[quote=“Strucker, post:5, topic:542925”][quote author=asshole_rule link=topic=661802.msg4423548#msg4423548 date=1399587781]</p>
<p>[quote author=Strucker link=topic=661802.msg4423547#msg4423547 date=1399587682]</p>
<aside class="quote">
<blockquote>
<p>what is so amazing<br>
[/quote]Really nick?</p>
</blockquote>
</aside>
<p>how do u know my name creep<br>
[/quote] Lmao I hack I<br>
i haker m8[/quote]</p>
<p>probably read my name somewhere</p>
<p>shit code m8 still havent told us whats amazing</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/6</link>
        <pubDate>Thu, 08 May 2014 23:00:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-542925-6</guid>
        <source url="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925.rss">[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</source>
      </item>
      <item>
        <title>[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</title>
        <dc:creator><![CDATA[@strucker Strucker]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/strucker">@strucker</a> wrote:</p>
          <blockquote>
              <p>[quote=“asshole_rule, post:4, topic:542925”][quote author=Strucker link=topic=661802.msg4423547#msg4423547 date=1399587682]</p>
<aside class="quote">
<blockquote>
<p>what is so amazing<br>
[/quote]Really nick?</p>
</blockquote>
</aside>
<p>how do u know my name creep[/quote] Lmao I hack I<br>
i haker m8</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/5</link>
        <pubDate>Thu, 08 May 2014 22:24:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-542925-5</guid>
        <source url="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925.rss">[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</source>
      </item>
      <item>
        <title>[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</title>
        <dc:creator><![CDATA[@asshole_rule asshole_rule]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/asshole_rule">@asshole_rule</a> wrote:</p>
          <blockquote>
              <p>[quote=“Strucker, post:3, topic:542925”][quote author=asshole_rule link=topic=661802.msg4423545#msg4423545 date=1399587653]<br>
what is so amazing<br>
[/quote]Really nick?[/quote]</p>
<p>how do u know my name creep</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/4</link>
        <pubDate>Thu, 08 May 2014 22:23:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-542925-4</guid>
        <source url="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925.rss">[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</source>
      </item>
      <item>
        <title>[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</title>
        <dc:creator><![CDATA[@strucker Strucker]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/strucker">@strucker</a> wrote:</p>
          <blockquote>
              <p>[quote=“asshole_rule, post:2, topic:542925”]what is so amazing[/quote]Really nick?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/3</link>
        <pubDate>Thu, 08 May 2014 22:21:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-542925-3</guid>
        <source url="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925.rss">[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</source>
      </item>
      <item>
        <title>[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</title>
        <dc:creator><![CDATA[@asshole_rule asshole_rule]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/asshole_rule">@asshole_rule</a> wrote:</p>
          <blockquote>
              <p>what is so amazing</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/2</link>
        <pubDate>Thu, 08 May 2014 22:20:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-542925-2</guid>
        <source url="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925.rss">[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</source>
      </item>
      <item>
        <title>[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</title>
        <dc:creator><![CDATA[@strucker Strucker]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/strucker">@strucker</a> wrote:</p>
          <blockquote>
              <p>Paste bin: <a href="http://pastebin.com/iwmaWLbq" rel="nofollow noopener">http://pastebin.com/iwmaWLbq</a></p>
<p>[code=java]package server.model.players.skills;</p>
<p>import server.util.Misc;<br>
import server.model.players.Client;<br>
import server.model.players.skills.<em>;<br>
import server.content.RiverTroll;<br>
import server.event.</em>;<br>
import server.*;</p>
<p>/**</p>
<ul>
<li>
<p>Class Fishing Handles: Fishing</p>
</li>
<li>
</li>
<li>
<p><span class="mention">@author</span>: Strucker</p>
</li>
<li>
<p><a class="mention" href="/u/start">@START</a>: 4:23PM 8/05/2014</p>
</li>
<li>
<p><span class="mention">@FINISH</span>: 5:11PM 8/05/2014<br>
*/<br>
public class Fishing extends SkillHandler {</p>
<p>public static final int HARPOON_FISHING_EMOTE = 618;<br>
public static final int CAGE_FISHING_EMOTE = 619;<br>
public static final int ROD_FISHING_EMOTE = 622;</p>
<p>private enum FishingSpotData {<br>
CONSTANT(0, 0, 0, 0, 0, 0, 0, 0,0);</p>
<pre><code> private int emote, spot, requiredLevel, requiredItem, baitQuantity, experience, delay, fish, bait;
 
 /**
  * Constructs the parameters of the constants in the enum
  */
 FishingSpotData(int emote, int spot, int requiredLevel,
 		int requiredItem, int baitQuantity, int experience, int delay,
 		int fish, int bait) {
 	this.spot = spot;
 	this.requiredLevel = requiredLevel;
 	this.requiredItem = requiredItem;
 	this.baitQuantity = baitQuantity;
 	this.experience = experience;
 	this.delay = delay;
 	this.fish = fish;
 	this.bait = bait;
 	this.emote = emote;
 }
 
 private int getBait() {
 	return bait;
 }
 
 private int getSpot() {
 	return spot;
 }

 private int getRequiredLevel() {
 	return requiredLevel;
 }

 private int getRequiredItem() {
 	return requiredItem;
 }

 private int getBaitQuantity() {
 	return baitQuantity;
 }

 private int getExperience() {
 	return experience;
 }

 private int getDelay() {
 	return delay;
 }

 private int getFish() {
 	return fish;
 }
</code></pre>
<p>}</p>
<p>/**</p>
<ul>
<li>If the player moves the fishing flag is set to false</li>
<li>
<a class="mention" href="/u/param">@param</a> player<br>
*/<br>
public static void walkingPacket(Client player) {<br>
player.isFishing = false;<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Loops the emote as long as the player is fishing</li>
<li>
<a class="mention" href="/u/param">@param</a> player</li>
<li>
<pre><code> the player that will execute the emote
</code></pre>
</li>
<li>
<a class="mention" href="/u/param">@param</a> emote</li>
<li>
<pre><code> the emote that will be executed
</code></pre>
</li>
</ul>
<p>*/<br>
public static void loopEmote(final Client player, final int emote) {<br>
Server.getTaskScheduler().schedule(new Task(6, true) {<br>
<a class="mention" href="/u/override">@Override</a><br>
protected void execute() {<br>
if(player.isFishing == false)<br>
stop();<br>
else<br>
player.startAnimation(emote);<br>
}	<br>
});<br>
}</p>
<p>/**</p>
<ul>
<li>Check if the player has bait and the required item(Net, etc)</li>
<li>
</li>
<li>
<a class="mention" href="/u/param">@param</a> player</li>
<li>
<pre><code> the player that will have his bait checked
</code></pre>
</li>
<li>
<a class="mention" href="/u/param">@param</a> requiredItem</li>
<li>
<pre><code> the bait 
</code></pre>
</li>
<li>
<a class="mention" href="/u/param">@param</a> requiredQuantity</li>
<li>
<pre><code> the required amount of bait
</code></pre>
</li>
<li>
<a class="mention" href="/u/return">@return</a><br>
*/<br>
public static boolean hasBait(Client player, int requiredBait, int requiredQuantity, int requiredItem) {<br>
if(requiredBait == 0 &amp;&amp; requiredItem == 0 &amp; player.getItems().playerHasItem(requiredItem))<br>
return true;<br>
if(player.getItems().playerHasItem(requiredBait, requiredQuantity) &amp;&amp; player.getItems().playerHasItem(requiredItem))<br>
return true;<br>
return false;<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Fishes <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:">
</li>
<li>
<a class="mention" href="/u/param">@param</a> player</li>
<li>
<pre><code> the player that will fish
</code></pre>
</li>
<li>
<a class="mention" href="/u/param">@param</a> spot</li>
<li>
<pre><code> the spot where the player will fish
</code></pre>
</li>
</ul>
<p>*/<br>
public static void fishFromSpot(final Client player, int spot) {</p>
<pre><code> /**
  * Loops through the enum
  */
 for (final FishingSpotData data : FishingSpotData.values()) {
 	
 	/*
 	 * Makes sure the player isn't fishing yet, and the player clicked a spot, also check for the required level
 	 */
 	if (!player.fishing &amp;&amp; spot == data.getSpot() &amp;&amp; player.playerLevel[player.playerFishing] &gt;= data.getRequiredLevel()) {
 		
 		/**
 		 * sets the fishing flag to true
 		 */
 		player.fishing = true;
 		
 		/**
 		 * does the fishing emote
 		 */
 		loopEmote(player, data.emote);
 		
 		/**
 		 * Schedules a new task with instant execution and timer of 2
 		 */
 		Server.getTaskScheduler().schedule(new Task(2, true) {
 			
 			/**
 			 * Gets the delay to catch the fish
 			 */
 			private int delay = data.getDelay();

 			@Override
 			protected void execute() {
 				
 				/**
 				 * The delay for the fishing as its not an instant fish
 				 */
 				if (delay &gt; 0) {
 					delay--;
 				} else {
 					
 					/**
 					 * Makes sure the player has enough space, makes sure the player is fishing, make sure the player has bait
 					 * and the required bait quantity also check if the player has the required item to fish,
 					 * if he doesn't the container is stopped, and no further code is executed
 					 */
 					if(noInventorySpace(player, "Fishing") || !player.fishing || !hasBait(player, data.getBait(), data.getBaitQuantity(), data.getRequiredItem())) {
 						player.fishing = false;
 						stop();
 						return;
 					}
 					
 					/**
 					 * Adds the experience
 					 */
 					player.getPA().addSkillXP(data.getExperience(), player.playerFishing);
 					
 					/*
 					 * Adds the fish to the inventory
 					 */
 					player.getItems().addItem(data.getFish(), 1);		
 				}
 			}
 		});
 	}
 }
</code></pre>
<p>}<br>
}[/code]</p>
</li>
</ul>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925/1</link>
        <pubDate>Thu, 08 May 2014 22:16:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-542925-1</guid>
        <source url="https://forum.moparisthebest.com/t/pi-amazing-fishing-base-requires-bait-auto-fishing/542925.rss">[PI] Amazing Fishing Base || Requires Bait, Auto Fishing</source>
      </item>
  </channel>
</rss>
