<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Jframe (Screenshot button)</title>
    <link>https://forum.moparisthebest.com/t/jframe-screenshot-button/325716</link>
    <description>Well, i&#39;ve managed to add my screenshot button..
but its not working When i press that button it doesn&#39;t take a screenshot or anything
No errors in compiler nothing

the code i&#39;ve used is 

[code]
public void takeScreenshot(boolean flag)
    {
        BufferedImage bufferedimage;
        try
        {
            Robot robot = new Robot();
            Point point = getLocationOnScreen();
            Rectangle rectangle = new Rectangle(point.x, point.y, getWidth(), getHeight());
            bufferedimage = robot.createScreenCapture(rectangle);
        }
        catch(Throwable throwable)
        {
             JOptionPane.showMessageDialog(frame, &quot;An error occured while trying to create a screenshot!&quot;, &quot;Screenshot Error&quot;, 0);
            return;
        }
        String s = null;
        try
        {
            s = getNearestScreenshotFilename();
        }
        catch(IOException ioexception)
        {
            if(flag)
            {
                 JOptionPane.showMessageDialog(frame, &quot;A screenshot directory does not exist, and could not be created!&quot;, &quot;No Screenshot Directory&quot;, 0);
                return;
            }
        }
        if(s == null &amp;&amp; flag)
        {
             JOptionPane.showMessageDialog(frame, &quot;There are too many screenshots in the screenshot directory!\n&quot;+&quot;Delete some screen\n&quot; +&quot;shots and try again.&quot; , &quot;Screenshot Directory Full&quot;, 0);
            return;
        }
        if(!flag)
        {
            final JFileChooser fileChooser = new JFileChooser();
            final JDialog fileDialog = createFileChooserDialog(fileChooser, &quot;Save Screenshot&quot;, this);
            final BufferedImage si = bufferedimage;
            JFileChooser _tmp = fileChooser;
            fileChooser.setFileSelectionMode(0);
            fileChooser.addChoosableFileFilter(new imageFileFilter());
            fileChooser.setCurrentDirectory(new File(&quot;./screenshots/&quot;));
            fileChooser.setSelectedFile(new File(s));
            JFileChooser _tmp1 = fileChooser;
            fileChooser.setDialogType(1);
            fileChooser.addActionListener(new ActionListener() {

                public void actionPerformed(ActionEvent actionevent)
                {
                    String s1 = actionevent.getActionCommand();
                    if(s1.equals(&quot;ApproveSelection&quot;))
                    {
                        File file = fileChooser.getSelectedFile();
                        if(file != null &amp;&amp; file.isFile())
                        {
                            int i = JOptionPane.showConfirmDialog(frame, (new StringBuilder()).append(file.getAbsolutePath()).append(&quot; already exists.\n&quot;+&quot;Do you want to replace it?&quot;).toString(), &quot;Save Screenshot&quot;, 2);
                            if(i != 0)
                            {
                                return;
                            }
                        }
                        try
                        {
                            ImageIO.write(si, &quot;png&quot;, file);
                            method77(&quot;Screenshot taken.&quot;, 3, &quot;@cr2@ Client&quot;, false);
                        }
                        catch(IOException ioexception2)
                        {
                             JOptionPane.showMessageDialog(frame, &quot;An error occured while trying to save the screenshot!\n&quot;+&quot;Please make sure you have\n&quot;+&quot; write access to the screenshot directory.&quot; , &quot;Screenshot Error&quot;, 0);
                        }
                        fileDialog.dispose();
                    } else
                    if(s1.equals(&quot;CancelSelection&quot;))
                    {
                        fileDialog.dispose();
                    }
                }


            {

            }
            });
            fileDialog.setVisible(true);
        } else
        {
            try
            {
                ImageIO.write(bufferedimage, &quot;png&quot;, new File((new StringBuilder()).append(&quot;./screenshots/&quot;).append(s).toString()));
		method77(&quot;Screenshot taken.&quot;, 3, &quot;@cr2@ Client&quot;, false);
            }
            catch(IOException ioexception1)
            {
                 JOptionPane.showMessageDialog(frame, &quot;An error occured while trying to save the screenshot!\n&quot;+&quot;Please make sure you have\n&quot;+&quot; write access to the screenshot directory.&quot; , &quot;Screenshot Error&quot;, 0);
            }
        }
    }

public static String getNearestScreenshotFilename()
        throws IOException
    {
        File file = new File(&quot;./screenshots&quot;);
        int i = 0;
        do
        {
            String s = &quot; .png&quot;;
            if(i &lt; 10)
            {
                s = s.replaceFirst(&quot; &quot;, (new StringBuilder()).append(&quot;000&quot;).append(i).toString());
            } else
            if(i &lt; 100)
            {
                s = s.replaceFirst(&quot; &quot;, (new StringBuilder()).append(&quot;00&quot;).append(i).toString());
            } else
            if(i &lt; 1000)
            {
                s = s.replaceFirst(&quot; &quot;, (new StringBuilder()).append(&quot;0&quot;).append(i).toString());
            } else
            if(i &lt; 10000)
            {
                s = s.replaceFirst(&quot; &quot;, (new StringBuilder()).append(&quot; &quot;).append(i).toString());
            }
            if((new File(file, s)).isFile())
            {
                i++;
            } else
            {
                return s;
            }
        } while(i &lt; 10000);
        return null;
    }


class imageFileFilter extends FileFilter
{

    imageFileFilter()
    {
    }

    public boolean accept(File file)
    {
        String s = file.getName();
        return file.isDirectory() || s.toLowerCase().endsWith(&quot;.png&quot;) &amp;&amp; s.indexOf(&quot;$&quot;) == -1;
    }

    public String getDescription()
    {
        return &quot;PNG (*.png)&quot;;
    }
}

	 public JDialog createFileChooserDialog(JFileChooser jfilechooser, String s, Container container)
	    {
	        JDialog jdialog = new JDialog(frame, s, true);
	        jdialog.setDefaultCloseOperation(2);
	        jdialog.add(jfilechooser);
	        jdialog.pack();
	        jdialog.setLocationRelativeTo(container);
	        return jdialog;
    }
[/code]

Any 1 knows the problem</description>
    
    <lastBuildDate>Fri, 15 Jan 2010 11:04:00 +0000</lastBuildDate>
    <category>Game Development</category>
    <atom:link href="https://forum.moparisthebest.com/t/jframe-screenshot-button/325716.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Jframe (Screenshot button)</title>
        <dc:creator><![CDATA[@redrover redrover]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/redrover">@redrover</a> wrote:</p>
          <blockquote>
              <p>Well, i’ve managed to add my screenshot button…<br>
but its not working When i press that button it doesn’t take a screenshot or anything<br>
No errors in compiler nothing</p>
<p>the code i’ve used is</p>
<pre><code class="lang-auto">public void takeScreenshot(boolean flag)
    {
        BufferedImage bufferedimage;
        try
        {
            Robot robot = new Robot();
            Point point = getLocationOnScreen();
            Rectangle rectangle = new Rectangle(point.x, point.y, getWidth(), getHeight());
            bufferedimage = robot.createScreenCapture(rectangle);
        }
        catch(Throwable throwable)
        {
             JOptionPane.showMessageDialog(frame, "An error occured while trying to create a screenshot!", "Screenshot Error", 0);
            return;
        }
        String s = null;
        try
        {
            s = getNearestScreenshotFilename();
        }
        catch(IOException ioexception)
        {
            if(flag)
            {
                 JOptionPane.showMessageDialog(frame, "A screenshot directory does not exist, and could not be created!", "No Screenshot Directory", 0);
                return;
            }
        }
        if(s == null &amp;&amp; flag)
        {
             JOptionPane.showMessageDialog(frame, "There are too many screenshots in the screenshot directory!\n"+"Delete some screen\n" +"shots and try again." , "Screenshot Directory Full", 0);
            return;
        }
        if(!flag)
        {
            final JFileChooser fileChooser = new JFileChooser();
            final JDialog fileDialog = createFileChooserDialog(fileChooser, "Save Screenshot", this);
            final BufferedImage si = bufferedimage;
            JFileChooser _tmp = fileChooser;
            fileChooser.setFileSelectionMode(0);
            fileChooser.addChoosableFileFilter(new imageFileFilter());
            fileChooser.setCurrentDirectory(new File("./screenshots/"));
            fileChooser.setSelectedFile(new File(s));
            JFileChooser _tmp1 = fileChooser;
            fileChooser.setDialogType(1);
            fileChooser.addActionListener(new ActionListener() {

                public void actionPerformed(ActionEvent actionevent)
                {
                    String s1 = actionevent.getActionCommand();
                    if(s1.equals("ApproveSelection"))
                    {
                        File file = fileChooser.getSelectedFile();
                        if(file != null &amp;&amp; file.isFile())
                        {
                            int i = JOptionPane.showConfirmDialog(frame, (new StringBuilder()).append(file.getAbsolutePath()).append(" already exists.\n"+"Do you want to replace it?").toString(), "Save Screenshot", 2);
                            if(i != 0)
                            {
                                return;
                            }
                        }
                        try
                        {
                            ImageIO.write(si, "png", file);
                            method77("Screenshot taken.", 3, "@cr2@ Client", false);
                        }
                        catch(IOException ioexception2)
                        {
                             JOptionPane.showMessageDialog(frame, "An error occured while trying to save the screenshot!\n"+"Please make sure you have\n"+" write access to the screenshot directory." , "Screenshot Error", 0);
                        }
                        fileDialog.dispose();
                    } else
                    if(s1.equals("CancelSelection"))
                    {
                        fileDialog.dispose();
                    }
                }


            {

            }
            });
            fileDialog.setVisible(true);
        } else
        {
            try
            {
                ImageIO.write(bufferedimage, "png", new File((new StringBuilder()).append("./screenshots/").append(s).toString()));
		method77("Screenshot taken.", 3, "@cr2@ Client", false);
            }
            catch(IOException ioexception1)
            {
                 JOptionPane.showMessageDialog(frame, "An error occured while trying to save the screenshot!\n"+"Please make sure you have\n"+" write access to the screenshot directory." , "Screenshot Error", 0);
            }
        }
    }

public static String getNearestScreenshotFilename()
        throws IOException
    {
        File file = new File("./screenshots");
        int i = 0;
        do
        {
            String s = " .png";
            if(i &lt; 10)
            {
                s = s.replaceFirst(" ", (new StringBuilder()).append("000").append(i).toString());
            } else
            if(i &lt; 100)
            {
                s = s.replaceFirst(" ", (new StringBuilder()).append("00").append(i).toString());
            } else
            if(i &lt; 1000)
            {
                s = s.replaceFirst(" ", (new StringBuilder()).append("0").append(i).toString());
            } else
            if(i &lt; 10000)
            {
                s = s.replaceFirst(" ", (new StringBuilder()).append(" ").append(i).toString());
            }
            if((new File(file, s)).isFile())
            {
                i++;
            } else
            {
                return s;
            }
        } while(i &lt; 10000);
        return null;
    }


class imageFileFilter extends FileFilter
{

    imageFileFilter()
    {
    }

    public boolean accept(File file)
    {
        String s = file.getName();
        return file.isDirectory() || s.toLowerCase().endsWith(".png") &amp;&amp; s.indexOf("$") == -1;
    }

    public String getDescription()
    {
        return "PNG (*.png)";
    }
}

	 public JDialog createFileChooserDialog(JFileChooser jfilechooser, String s, Container container)
	    {
	        JDialog jdialog = new JDialog(frame, s, true);
	        jdialog.setDefaultCloseOperation(2);
	        jdialog.add(jfilechooser);
	        jdialog.pack();
	        jdialog.setLocationRelativeTo(container);
	        return jdialog;
    }</code></pre>
<p>Any 1 knows the problem</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/jframe-screenshot-button/325716/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/jframe-screenshot-button/325716/1</link>
        <pubDate>Fri, 15 Jan 2010 11:04:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-325716-1</guid>
        <source url="https://forum.moparisthebest.com/t/jframe-screenshot-button/325716.rss">Jframe (Screenshot button)</source>
      </item>
  </channel>
</rss>
