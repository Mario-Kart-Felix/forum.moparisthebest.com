<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Number Game- C++</title>
    <link>https://forum.moparisthebest.com/t/number-game-c/438792</link>
    <description>I haven&#39;t been on here in a while and didn&#39;t know you guys had a gamedev section now! Here is a simple number guessing game in C++. I have a few others but i want to take time to explain some of the code to help people out. 

Hope this is the place for this-

Game is that you will guess what the number is and it will tell you either too high or two low- example:

number: 50

you guess 30: it says too low.

you guess 54: it says too high

you guess 50: you win, prints how many guesses it took to the log.txt and you can quit or play again

Built on Linux OpenSUSE 11.3 ( for windows compatible version i&#39;ll write a tutorial on the differences between Unix and Windows )

 [code]/***************************************************************************
 *   Copyright (C) Daniel Waters 2011                                      *
 *   Waters1243@yahoo.com                                                  *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/

// C++ High or Low Game 

using namespace std; // standard name space

// is how you define a comment
// everything before main is the pre-processor
// The compiler starts at main and goes down.
// the compliler is what turns C++ and other codes into code the computer and understand and read.

        // ---------------------------
        //   System includes
        // ---------------------------

#include &lt;stdio.h&gt; // these are libray includes
#include &lt;stdlib.h&gt; //
#include &lt;string.h&gt;//
#include &lt;iostream&gt;//
#include &lt;math.h&gt;//
#include &lt;time.h&gt;// all of these
        // ---------------------------
        //   Custom includes
        // ---------------------------



        // ---------------------------
        //   System defs
        // ---------------------------

#define TRUE  1 // defining true and false
#define FALSE 0 //



    //---------------------------------------------
    //             functions
    //---------------------------------------------
     
void OpenLog( ); // declaring the log function
int   Quit(); // declaring the quit function
 
void high_low( ); // declaring the game function
    //---------------------------------------------
    //      Varibles
    //---------------------------------------------

int  done      = FALSE; // defining active, and done as true and false
int  isActive  = TRUE; //

char    ErrorString[64]; // the varible for the error string
FILE    *LogPtr         = NULL; // file pointer
char    LogFile[]       = &quot;log.txt&quot;; // the pointer varible



    //---------------------------------------------
    //      ------&gt;  MAIN  &lt;--------
    //---------------------------------------------

int main( int argc, char *argv[] ) // main
{
  strcpy( ErrorString, &quot;Exit OK&quot; );   // set Default Error String

   OpenLog(); // opens log function    
   high_low( ); // calls the function for the game
  
   Quit(); // calls the quit function

  return 0; // returns a value
}


    //-----------------------------------------------------
    //        function to open the log file
    //-----------------------------------------------------

void OpenLog( ) // Opens the error log
{

  printf( &quot;Opening Log File \n&quot; ); // tells the log is open

  LogPtr = fopen( LogFile, &quot;w&quot; ); // Log pointer

  if ( LogPtr == NULL )  // if logfile not there
    {
      strcpy( ErrorString, &quot;**** MAIN - Unable to open log file\n\n&quot; ); // copys unable to open log
      Quit( ); // quits
    }
  else
    {
      fprintf( LogPtr,&quot;\nMAIN - Log file opened\n\n&quot; ); // Prints to the log file that the log file is opened
    }

  return;
}


void high_low( ) // the function for high low game
{

srand(time(0)); // seeds the random number generator

  char responce1; // responce varible
  
  int player_guess; // takes your guess
  int guess_taken = 0; //  counts up the guesses taken

  system(&quot;clear&quot;); // clears the screen
  cout &lt;&lt; &quot; Hello would you like to play the high low game?\n y/n :&quot;; // asks the person if they would like to play
    cin &gt;&gt; responce1; // takes their responce
    
      switch(responce1)     // switch is a to compair the answers form a cin statement.
      {
        case &#39;n&#39;: // if they answer no
        {
          cout &lt;&lt; &quot;Thats too bad, it really is fun to guess endlessly at numbers you know\n&quot;; // tells them information
             
            return ; // returns to main
                break; // breaks the case
        }
        case &#39;y&#39;: // they answered yes
        {
            int right_number = rand() % 100 + 1; // delcaring the random number
            
          cout &lt;&lt; &quot;\n enter your number 1-100 : &quot;;  // asks them for thier random number
          
              cin &gt;&gt; player_guess; // takes their guess
              
              while ( player_guess != right_number) // while the players guess doesn&#39;t equal the right number
              {
                  if ( player_guess &gt; right_number ) // if the guess is high
                  {
                     cout &lt;&lt; &quot; Your guess is high sorry D:\n&quot;; // tells them their guess is high
                          guess_taken ++; // keeps track of how many guesses!
                     cout &lt;&lt; &quot; Guess again:&quot;; // tells to guess again
                          player_guess = 0; // sets to zero to avoid over setting varibles and it helps with clarity for me
                     cin &gt;&gt; player_guess; // takes their guess again
                  }
                   if ( player_guess &lt; right_number ) // if their number is too low
                  {
                     cout &lt;&lt; &quot; Your guess is low sorry D:\n&quot;;  // tells them their number is too low
                          guess_taken ++; // keeps track of how many guesses, it adds one- ++ is auto incriminte
                     cout &lt;&lt; &quot; Guess again:&quot;;
                          player_guess = 0; // sets to zero to avoid over setting varibles and it helps with clarity for me       
                     cin &gt;&gt; player_guess; // takes their guess
                 }
                 if ( player_guess == right_number) // if their number does equal the random number :D!
                 {
                   cout &lt;&lt; &quot; Congratz you won! it only took &quot; &lt;&lt; guess_taken &lt;&lt; &quot; guesses &quot;; // tells them congratz they won and tells them how many guesses it took them
                   cout &lt;&lt; &quot; \n Would you like to play again? y/n :&quot;; // asks them if they would like tol play again

                         // printf( &quot;Opening HighScores file-\n&quot; ); // tells them the high scores file is being opened i have it commented out

                         //LogPtr = fopen( LogFile, &quot;w&quot; ); // pointer

                         /*   if ( LogPtr == NULL ) // if pointer fails
                              {
                                strcpy( ErrorString, &quot;**** MAIN - Unable to open high scores\n\n&quot; ); // tells them they can&#39;t open the high scores
                                Quit( ); // quits the program
                              }
                            else // else
                              {*/
                                fprintf(LogPtr,&quot;\n Player won after %i tries\n\n&quot;, guess_taken); // rights to the &quot;highscores&quot; ( also the log file ) the guess it took
                             // }
                              
                          responce1 = 0; // sets the varible to 0, incase it still holds previous value 
                        cin &gt;&gt; responce1; // takes their responce
                           switch(responce1) // compairs their responces
                           {
                             case &#39;n&#39;: // if they say no, press the letter n
                             {
                                cout &lt;&lt; &quot; thanks for playing! \n &quot;; // tells them thanks for playing, as a note \n takes it to a new line.
                                return; // returns to main
                                  break; // breaks the case
                             }
                             case &#39;y&#39;: // if they said yes
                             {
                              cout &lt;&lt; &quot; Get ready to play again!!!\n&quot;; // tells them to get read to play again
                              sleep(1);   // sleeps, basicly it makes the computer wait 1 second, usleep(1000* 1000) is better, but i used sleep as to keep it simple
                              int i = 0; // an intiger
                              for (i= 0; i&lt;10; i++) // for is a counter. i starts at zero | goes untill it is greater than 10 | i++ is  i +1 +1 +1 all the way up.
                              {
                                cout &lt;&lt; &quot;\n...&quot; &lt;&lt; i &lt;&lt; &quot;\n&quot;; // prints ... then i as it counts
                                 usleep(30* 1000);
                              } 
                              
                              sleep(3); // sleeps, waits to go on
                              system(&quot;clear&quot;);  // clears the screen                          
                           
                              
                              // reseting the varibles for the next round :D
                               player_guess = 0;
                               guess_taken = 0;
                               right_number = 0;
                               high_low( ); // restart
                                break; // breaks the case
                            }
                          }
                 }
             } 
                          break; // breaks the last case
        }

      }
}
    //-----------------------------------------------------
    //        Quit function w/ error code
    //-----------------------------------------------------

int Quit( ) // quit function
{

  if ( LogPtr != NULL ) // log pointer is true
    {
       fprintf( LogPtr ,&quot;\nMAIN - %s\n&quot;,ErrorString ); // copies over log string
       fprintf( LogPtr ,&quot;\nMAIN - Log File Close\n&quot; ); // prints out to the log it is closed
       fclose( LogPtr ); // closes the file
    }

  printf( &quot;\n %s\n\n&quot;, ErrorString ); // prints to the screen the error string

  return EXIT_SUCCESS; // return with the value, EXIT_SECCESS
}[/code]


I pretty much committed out the code so it can be read line-to-line. Any questions just post a reply</description>
    
    <lastBuildDate>Sat, 07 Apr 2012 04:56:22 +0000</lastBuildDate>
    <category>Game Development</category>
    <atom:link href="https://forum.moparisthebest.com/t/number-game-c/438792.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Number Game- C++</title>
        <dc:creator><![CDATA[@thrystascape thrystascape]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/thrystascape">@thrystascape</a> wrote:</p>
          <blockquote>
              <p>I haven’t been on here in a while and didn’t know you guys had a gamedev section now! Here is a simple number guessing game in C++. I have a few others but i want to take time to explain some of the code to help people out.</p>
<p>Hope this is the place for this-</p>
<p>Game is that you will guess what the number is and it will tell you either too high or two low- example:</p>
<p>number: 50</p>
<p>you guess 30: it says too low.</p>
<p>you guess 54: it says too high</p>
<p>you guess 50: you win, prints how many guesses it took to the log.txt and you can quit or play again</p>
<p>Built on Linux OpenSUSE 11.3 ( for windows compatible version i’ll write a tutorial on the differences between Unix and Windows )</p>
<p>[code]/***************************************************************************</p>
<ul>
<li>Copyright © Daniel Waters 2011                                      *</li>
<li>
<a href="mailto:Waters1243@yahoo.com">Waters1243@yahoo.com</a>                                                  *</li>
<li>
<pre><code>                                                                    *
</code></pre>
</li>
<li>This program is free software; you can redistribute it and/or modify  *</li>
<li>it under the terms of the GNU General Public License as published by  *</li>
<li>the Free Software Foundation; either version 2 of the License, or     *</li>
<li>(at your option) any later version.                                   *</li>
<li>
<pre><code>                                                                    *
</code></pre>
</li>
<li>This program is distributed in the hope that it will be useful,       *</li>
<li>but WITHOUT ANY WARRANTY; without even the implied warranty of        *</li>
<li>MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *</li>
<li>GNU General Public License for more details.                          *</li>
<li>
<pre><code>                                                                    *
</code></pre>
</li>
<li>You should have received a copy of the GNU General Public License     *</li>
<li>along with this program; if not, write to the                         *</li>
<li>Free Software Foundation, Inc.,                                       *</li>
<li>59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *<br>
***************************************************************************/</li>
</ul>
<p>// C++ High or Low Game</p>
<p>using namespace std; // standard name space</p>
<p>// is how you define a comment<br>
// everything before main is the pre-processor<br>
// The compiler starts at main and goes down.<br>
// the compliler is what turns C++ and other codes into code the computer and understand and read.</p>
<pre><code>    // ---------------------------
    //   System includes
    // ---------------------------
</code></pre>
<p><span class="hashtag">#include</span> &lt;stdio.h&gt; // these are libray includes<br>
<span class="hashtag">#include</span> &lt;stdlib.h&gt; //<br>
<span class="hashtag">#include</span> &lt;string.h&gt;//<br>
<span class="hashtag">#include</span> //<br>
<span class="hashtag">#include</span> &lt;math.h&gt;//<br>
<span class="hashtag">#include</span> &lt;time.h&gt;// all of these<br>
// ---------------------------<br>
//   Custom includes<br>
// ---------------------------</p>
<pre><code>    // ---------------------------
    //   System defs
    // ---------------------------
</code></pre>
<p><span class="hashtag">#define</span> TRUE  1 // defining true and false<br>
<span class="hashtag">#define</span> FALSE 0 //</p>
<pre><code>//---------------------------------------------
//             functions
//---------------------------------------------
</code></pre>
<p>void OpenLog( ); // declaring the log function<br>
int   Quit(); // declaring the quit function</p>
<p>void high_low( ); // declaring the game function<br>
//---------------------------------------------<br>
//      Varibles<br>
//---------------------------------------------</p>
<p>int  done      = FALSE; // defining active, and done as true and false<br>
int  isActive  = TRUE; //</p>
<p>char    ErrorString[64]; // the varible for the error string<br>
FILE    *LogPtr         = NULL; // file pointer<br>
char    LogFile[]       = “log.txt”; // the pointer varible</p>
<pre><code>//---------------------------------------------
//      ------&gt;  MAIN  &lt;--------
//---------------------------------------------
</code></pre>
<p>int main( int argc, char *argv[] ) // main<br>
{<br>
strcpy( ErrorString, “Exit OK” );   // set Default Error String</p>
<p>OpenLog(); // opens log function<br>
high_low( ); // calls the function for the game</p>
<p>Quit(); // calls the quit function</p>
<p>return 0; // returns a value<br>
}</p>
<pre><code>//-----------------------------------------------------
//        function to open the log file
//-----------------------------------------------------
</code></pre>
<p>void OpenLog( ) // Opens the error log<br>
{</p>
<p>printf( “Opening Log File \n” ); // tells the log is open</p>
<p>LogPtr = fopen( LogFile, “w” ); // Log pointer</p>
<p>if ( LogPtr == NULL )  // if logfile not there<br>
{<br>
strcpy( ErrorString, “**** MAIN - Unable to open log file\n\n” ); // copys unable to open log<br>
Quit( ); // quits<br>
}<br>
else<br>
{<br>
fprintf( LogPtr,"\nMAIN - Log file opened\n\n" ); // Prints to the log file that the log file is opened<br>
}</p>
<p>return;<br>
}</p>
<p>void high_low( ) // the function for high low game<br>
{</p>
<p>srand(time(0)); // seeds the random number generator</p>
<p>char responce1; // responce varible</p>
<p>int player_guess; // takes your guess<br>
int guess_taken = 0; //  counts up the guesses taken</p>
<p>system(“clear”); // clears the screen<br>
cout &lt;&lt; " Hello would you like to play the high low game?\n y/n :"; // asks the person if they would like to play<br>
cin &gt;&gt; responce1; // takes their responce</p>
<pre><code>  switch(responce1)     // switch is a to compair the answers form a cin statement.
  {
    case 'n': // if they answer no
    {
      cout &lt;&lt; "Thats too bad, it really is fun to guess endlessly at numbers you know\n"; // tells them information
         
        return ; // returns to main
            break; // breaks the case
    }
    case 'y': // they answered yes
    {
        int right_number = rand() % 100 + 1; // delcaring the random number
        
      cout &lt;&lt; "\n enter your number 1-100 : ";  // asks them for thier random number
      
          cin &gt;&gt; player_guess; // takes their guess
          
          while ( player_guess != right_number) // while the players guess doesn't equal the right number
          {
              if ( player_guess &gt; right_number ) // if the guess is high
              {
                 cout &lt;&lt; " Your guess is high sorry D:\n"; // tells them their guess is high
                      guess_taken ++; // keeps track of how many guesses!
                 cout &lt;&lt; " Guess again:"; // tells to guess again
                      player_guess = 0; // sets to zero to avoid over setting varibles and it helps with clarity for me
                 cin &gt;&gt; player_guess; // takes their guess again
              }
               if ( player_guess &lt; right_number ) // if their number is too low
              {
                 cout &lt;&lt; " Your guess is low sorry D:\n";  // tells them their number is too low
                      guess_taken ++; // keeps track of how many guesses, it adds one- ++ is auto incriminte
                 cout &lt;&lt; " Guess again:";
                      player_guess = 0; // sets to zero to avoid over setting varibles and it helps with clarity for me       
                 cin &gt;&gt; player_guess; // takes their guess
             }
             if ( player_guess == right_number) // if their number does equal the random number :D!
             {
               cout &lt;&lt; " Congratz you won! it only took " &lt;&lt; guess_taken &lt;&lt; " guesses "; // tells them congratz they won and tells them how many guesses it took them
               cout &lt;&lt; " \n Would you like to play again? y/n :"; // asks them if they would like tol play again

                     // printf( "Opening HighScores file-\n" ); // tells them the high scores file is being opened i have it commented out

                     //LogPtr = fopen( LogFile, "w" ); // pointer

                     /*   if ( LogPtr == NULL ) // if pointer fails
                          {
                            strcpy( ErrorString, "**** MAIN - Unable to open high scores\n\n" ); // tells them they can't open the high scores
                            Quit( ); // quits the program
                          }
                        else // else
                          {*/
                            fprintf(LogPtr,"\n Player won after %i tries\n\n", guess_taken); // rights to the "highscores" ( also the log file ) the guess it took
                         // }
                          
                      responce1 = 0; // sets the varible to 0, incase it still holds previous value 
                    cin &gt;&gt; responce1; // takes their responce
                       switch(responce1) // compairs their responces
                       {
                         case 'n': // if they say no, press the letter n
                         {
                            cout &lt;&lt; " thanks for playing! \n "; // tells them thanks for playing, as a note \n takes it to a new line.
                            return; // returns to main
                              break; // breaks the case
                         }
                         case 'y': // if they said yes
                         {
                          cout &lt;&lt; " Get ready to play again!!!\n"; // tells them to get read to play again
                          sleep(1);   // sleeps, basicly it makes the computer wait 1 second, usleep(1000* 1000) is better, but i used sleep as to keep it simple
                          int i = 0; // an intiger
                          for (i= 0; i&lt;10; i++) // for is a counter. i starts at zero | goes untill it is greater than 10 | i++ is  i +1 +1 +1 all the way up.
                          {
                            cout &lt;&lt; "\n..." &lt;&lt; i &lt;&lt; "\n"; // prints ... then i as it counts
                             usleep(30* 1000);
                          } 
                          
                          sleep(3); // sleeps, waits to go on
                          system("clear");  // clears the screen                          
                       
                          
                          // reseting the varibles for the next round :D
                           player_guess = 0;
                           guess_taken = 0;
                           right_number = 0;
                           high_low( ); // restart
                            break; // breaks the case
                        }
                      }
             }
         } 
                      break; // breaks the last case
    }

  }
</code></pre>
<p>}<br>
//-----------------------------------------------------<br>
//        Quit function w/ error code<br>
//-----------------------------------------------------</p>
<p>int Quit( ) // quit function<br>
{</p>
<p>if ( LogPtr != NULL ) // log pointer is true<br>
{<br>
fprintf( LogPtr ,"\nMAIN - %s\n",ErrorString ); // copies over log string<br>
fprintf( LogPtr ,"\nMAIN - Log File Close\n" ); // prints out to the log it is closed<br>
fclose( LogPtr ); // closes the file<br>
}</p>
<p>printf( “\n %s\n\n”, ErrorString ); // prints to the screen the error string</p>
<p>return EXIT_SUCCESS; // return with the value, EXIT_SECCESS<br>
}[/code]</p>
<p>I pretty much committed out the code so it can be read line-to-line. Any questions just post a reply</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/number-game-c/438792/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/number-game-c/438792/1</link>
        <pubDate>Sat, 07 Apr 2012 04:56:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-438792-1</guid>
        <source url="https://forum.moparisthebest.com/t/number-game-c/438792.rss">Number Game- C++</source>
      </item>
  </channel>
</rss>
