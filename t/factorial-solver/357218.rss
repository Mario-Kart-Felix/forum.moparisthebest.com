<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Factorial Solver</title>
    <link>https://forum.moparisthebest.com/t/factorial-solver/357218</link>
    <description>Well I had a homework assignment that required me to get the result of multiple factorials, and finding the results with a calculator was extremely irritating. So I wrote a program to solve them for me, and decided to release it here just in case anyone else for some remote reason failed geometry and is taking supplemental algebra. &gt;.&gt;

[code]
import java.io.*;

public class factorialSolver {
	
 //Main
 public static void main(String args[]) {
	//Create BufferedReader
	BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
	
	//Get user input and attempt to catch an exception
	try {	
	String input = in.readLine();
	//Validate String contains only numerals
	if (validateString(input) == false) {
		System.out.println(&quot;Input contains characters other than numerals&quot;);
		System.exit(-1);
	}
	
	//Calculate and print the factorial result
	System.out.println(fact(Double.parseDouble(input)));
	
	//Attempt to catch an exception
	} catch (NumberFormatException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	} catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	
 }
 
 //Solves the factorial
 public static double fact(double n) {
	 if (n &lt;= 1)
		 return 1;
	 else 
		 return n * fact(n-1);
 }
 
 public static boolean validateString(String s){
	 //Check if the user input anything
	 if (s == null || s.length() == 0)
		 return false;
	 //Check if the string contains only numerals
	 for (int i = 0; i &lt; s.length(); i++) {
		 if(!Character.isDigit(s.charAt(i)))
			 return false;	 
	 }
	 return true;
 }
}

[/code]</description>
    
    <lastBuildDate>Mon, 30 Aug 2010 05:26:45 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/factorial-solver/357218.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Factorial Solver</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>[quote=“Davidi2, post:15, topic:357218”][quote author=abraham2119 link=topic=453735.msg3326045#msg3326045 date=1283112851]</p>
<p><code>
while(true) {
    	String[] splitInput = System.console().readLine().split("\\s");
    	for (String token : splitInput) {
        	if (token.matches("\\d+")) {
        	}
    	}
}</code><br>
[/quote]I don’t think you’d need to split the input, no one is going to type 12 16 11 16 into a calculator and expect it to factorial all of them for you at the same time. But using RegEx is a good idea…[/quote]i was emulating scanner’s nextint function in the context taharok provided…the scanner object tokenizes the string by whitespace, which is why i did it in mine</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/factorial-solver/357218/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/factorial-solver/357218/16</link>
        <pubDate>Mon, 30 Aug 2010 05:26:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357218-16</guid>
        <source url="https://forum.moparisthebest.com/t/factorial-solver/357218.rss">Factorial Solver</source>
      </item>
      <item>
        <title>Factorial Solver</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>[quote=“abraham2119, post:14, topic:357218”]<code>
while(true) {
    	String[] splitInput = System.console().readLine().split("\\s");
    	for (String token : splitInput) {
        	if (token.matches("\\d+")) {
        	}
    	}
}</code>[/quote]I don’t think you’d need to split the input, no one is going to type 12 16 11 16 into a calculator and expect it to factorial all of them for you at the same time. But using RegEx is a good idea…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/factorial-solver/357218/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/factorial-solver/357218/15</link>
        <pubDate>Sun, 29 Aug 2010 21:22:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357218-15</guid>
        <source url="https://forum.moparisthebest.com/t/factorial-solver/357218.rss">Factorial Solver</source>
      </item>
      <item>
        <title>Factorial Solver</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p><code>
while(true) {
    	String[] splitInput = System.console().readLine().split("\\s");
    	for (String token : splitInput) {
        	if (token.matches("\\d+")) {
        	}
    	}
}</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/factorial-solver/357218/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/factorial-solver/357218/14</link>
        <pubDate>Sun, 29 Aug 2010 20:14:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357218-14</guid>
        <source url="https://forum.moparisthebest.com/t/factorial-solver/357218.rss">Factorial Solver</source>
      </item>
      <item>
        <title>Factorial Solver</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <p>[quote=“Davidi2, post:12, topic:357218”][quote author=Taharok link=topic=453735.msg3325306#msg3325306 date=1283047813]You bring up an excellent point. Another solution I believe would be to simply use [tt]nextInt()[/tt] or [tt]nextDouble()[/tt] without the stream checks. Unless I am mistaken, I believe those next methods consume all lines until one line matches the integer regex pattern. In this instance, he could simply use [tt]nextInt()[/tt], as you suggest.</p>
<p>Edit: My deduction was slightly mistaken. As the following quote says, the ‘next’ and ‘hasNext’ methods both consume all tokens until it creates a match with the proper pattern:</p>
<aside class="quote no-group">
<blockquote>
<p>The next() and hasNext() methods and their primitive-type companion methods (such as nextInt() and hasNextInt()) first skip any input that matches the delimiter pattern, and then attempt to return the next token. Both hasNext and next methods may block waiting for further input. Whether a hasNext method blocks has no connection to whether or not its associated next method will block.</p>
</blockquote>
</aside>
<p>The above was taken from part of the introduction docs of the Scanner class.<br>
[/quote]<br>
<span class="bbcode-b">As the following quote says, the ‘next’ and ‘hasNext’ methods both consume all tokens until it creates a match with the proper pattern</span></p>
<p>Wait, so are you saying that the nextInt() will continue to read any input the user gives, until it can properly match an int? If so, why does it even throw a NumberMismatchException?</p>
<p>The JavaDocs say:</p>
<p>[quote]public int nextInt()</p>
<pre><code>Scans the [b]next token[/b] of the input as an int. 
</code></pre>
<p>Throws:<br>
InputMismatchException - if the <span class="bbcode-b">next token</span> does not match the Integer regular expression, or is out of range [/quote]I think what you read is not worded properly =/[/quote]</p>
<p>It appears you are correct. I misinterpreted what the documentation said. It stated that it skips input that does match the pattern, whereas I interpreted it to mean it skips input that does not match the pattern.</p>
<p>What I found even more intriguing, based on my analysis, is the [tt]hasNext[/tt] functions will ‘break’ if the input stops matching the pattern. For example, take the following code:</p>
<pre><code class="lang-auto">import java.util.Scanner;

public class Test {

	public static void main(String... args) {
		Scanner scanner = new Scanner(System.in);
		while (true) {
			if(scanner.hasNextInt(10))
				System.out.println(scanner.nextInt(10));
		}
	}
}</code></pre>
<p>I would expect that to work despite any input entered. However, it will only print out integers until a non-integer is entered, in which case all future integers are not noticed as integers. I am assuming this is due to Scanner <span class="bbcode-i">not</span> consuming the bad characters.</p>
<p>Thus, a simple fix can be applied to provide proper validation:</p>
<pre><code class="lang-auto">import java.util.Scanner;

public class Test {

	public static void main(String... args) {
		Scanner scanner = new Scanner(System.in);
		while (true) {
			if (scanner.hasNextInt(10))
				System.out.println(scanner.nextInt(10));
			else
				scanner.next();
		}
	}
}</code></pre>
<p>Thanks for pointing that out David. It seems to me that the above code is the simplest form of input validation for this factorial solver. ;D</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/factorial-solver/357218/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/factorial-solver/357218/13</link>
        <pubDate>Sun, 29 Aug 2010 17:04:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357218-13</guid>
        <source url="https://forum.moparisthebest.com/t/factorial-solver/357218.rss">Factorial Solver</source>
      </item>
      <item>
        <title>Factorial Solver</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>[quote=“Taharok, post:9, topic:357218”]You bring up an excellent point. Another solution I believe would be to simply use [tt]nextInt()[/tt] or [tt]nextDouble()[/tt] without the stream checks. Unless I am mistaken, I believe those next methods consume all lines until one line matches the integer regex pattern. In this instance, he could simply use [tt]nextInt()[/tt], as you suggest.</p>
<p>Edit: My deduction was slightly mistaken. As the following quote says, the ‘next’ and ‘hasNext’ methods both consume all tokens until it creates a match with the proper pattern:</p>
<aside class="quote no-group">
<blockquote>
<p>The next() and hasNext() methods and their primitive-type companion methods (such as nextInt() and hasNextInt()) first skip any input that matches the delimiter pattern, and then attempt to return the next token. Both hasNext and next methods may block waiting for further input. Whether a hasNext method blocks has no connection to whether or not its associated next method will block.</p>
</blockquote>
</aside>
<p>The above was taken from part of the introduction docs of the Scanner class.[/quote]<br>
<span class="bbcode-b">As the following quote says, the ‘next’ and ‘hasNext’ methods both consume all tokens until it creates a match with the proper pattern</span></p>
<p>Wait, so are you saying that the nextInt() will continue to read any input the user gives, until it can properly match an int? If so, why does it even throw a NumberMismatchException?</p>
<p>The JavaDocs say:</p>
<blockquote>public int nextInt()
<pre><code>Scans the [b]next token[/b] of the input as an int. 
</code></pre>
<p>Throws:<br>
InputMismatchException - if the <span class="bbcode-b">next token</span> does not match the Integer regular expression, or is out of range</p>
</blockquote>I think what you read is not worded properly =/
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/factorial-solver/357218/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/factorial-solver/357218/12</link>
        <pubDate>Sun, 29 Aug 2010 16:15:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357218-12</guid>
        <source url="https://forum.moparisthebest.com/t/factorial-solver/357218.rss">Factorial Solver</source>
      </item>
      <item>
        <title>Factorial Solver</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="10" data-topic="357218">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/abraham2119/40/5_513041d5f7104045db30895d3b90af16.png" class="avatar"> abraham2119:</div>
<blockquote>
<p>as if this isnt in about all recursion introduction tutorials for every language</p>
</blockquote>
</aside>
<p>Does it make much of a difference if it is? He managed to procure it on his own, and he has a need for it. Seems like a good topic to me. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/factorial-solver/357218/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/factorial-solver/357218/11</link>
        <pubDate>Sun, 29 Aug 2010 12:52:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357218-11</guid>
        <source url="https://forum.moparisthebest.com/t/factorial-solver/357218.rss">Factorial Solver</source>
      </item>
      <item>
        <title>Factorial Solver</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>as if this isnt in about all recursion introduction tutorials for every language</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/factorial-solver/357218/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/factorial-solver/357218/10</link>
        <pubDate>Sun, 29 Aug 2010 03:43:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357218-10</guid>
        <source url="https://forum.moparisthebest.com/t/factorial-solver/357218.rss">Factorial Solver</source>
      </item>
      <item>
        <title>Factorial Solver</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <p>[quote=“Davidi2, post:8, topic:357218”][quote author=Taharok link=topic=453735.msg3325163#msg3325163 date=1283038109]<br>
Looks awesome <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>If you are using windows, calculator has a factorial function. Or, you can be cool and use the program you made. <img src="https://forum.moparisthebest.com/images/emoji/twitter/cool.png?v=5" title=":cool:" class="emoji" alt=":cool:"></p>
<p>David had a great suggestion about validating the input. It seems to me that an even easier way would be to use <a href="http://download.oracle.com/javase/7/docs/api/java/util/Scanner.html" data-bbcode="true" rel="nofollow noopener">a Scanner</a> object, then you can make use of the methods <a href="http://download.oracle.com/javase/7/docs/api/java/util/Scanner.html#hasNextDouble()" data-bbcode="true" rel="nofollow noopener">hasNextDouble()</a> and <a href="http://download.oracle.com/javase/7/docs/api/java/util/Scanner.html#nextDouble()" data-bbcode="true" rel="nofollow noopener">nextDouble()</a>. I think they would make the entire input process sanitized and easier. <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"><br>
[/quote]His highest proper number is 39, so I think Integer would be better than double when he’s reading the input. If you use the hasNextInt, it wont process any of the input. In other words, if it returns false, you still need to read the input from the stream. I think that using a while loop again would probably be easier:</p>
<p><code>
boolean validInput = false;
while(!validInput) {
     System.out.print("Please input the number to factor (less than 40): ");
     try {
          System.out.println("Your factored number is: " + fact(input.nextInt()));
          validInput = true;
     } catch (InputMismatchException ime) {
          System.out.println("That's not a number!");
     }
}</code>       [/quote]</p>
<p>You bring up an excellent point. Another solution I believe would be to simply use [tt]nextInt()[/tt] or [tt]nextDouble()[/tt] without the stream checks. Unless I am mistaken, I believe those next methods consume all lines until one line matches the integer regex pattern. In this instance, he could simply use [tt]nextInt()[/tt], as you suggest.</p>
<p>Edit: My deduction was slightly mistaken. As the following quote says, the ‘next’ and ‘hasNext’ methods both consume all tokens until it creates a match with the proper pattern:</p>
<blockquote>The next() and hasNext() methods and their primitive-type companion methods (such as nextInt() and hasNextInt()) first skip any input that matches the delimiter pattern, and then attempt to return the next token. Both hasNext and next methods may block waiting for further input. Whether a hasNext method blocks has no connection to whether or not its associated next method will block.</blockquote>
<p>The above was taken from part of the introduction docs of the Scanner class.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/factorial-solver/357218/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/factorial-solver/357218/9</link>
        <pubDate>Sun, 29 Aug 2010 02:10:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357218-9</guid>
        <source url="https://forum.moparisthebest.com/t/factorial-solver/357218.rss">Factorial Solver</source>
      </item>
      <item>
        <title>Factorial Solver</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>[quote=“Taharok, post:7, topic:357218”]Looks awesome <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>If you are using windows, calculator has a factorial function. Or, you can be cool and use the program you made. <img src="https://forum.moparisthebest.com/images/emoji/twitter/cool.png?v=5" title=":cool:" class="emoji" alt=":cool:"></p>
<p>David had a great suggestion about validating the input. It seems to me that an even easier way would be to use <a href="http://download.oracle.com/javase/7/docs/api/java/util/Scanner.html" data-bbcode="true">a Scanner</a> object, then you can make use of the methods <a href="http://download.oracle.com/javase/7/docs/api/java/util/Scanner.html#hasNextDouble()" data-bbcode="true">hasNextDouble()</a> and <a href="http://download.oracle.com/javase/7/docs/api/java/util/Scanner.html#nextDouble()" data-bbcode="true">nextDouble()</a>. I think they would make the entire input process sanitized and easier. :D[/quote]His highest proper number is 39, so I think Integer would be better than double when he’s reading the input. If you use the hasNextInt, it wont process any of the input. In other words, if it returns false, you still need to read the input from the stream. I think that using a while loop again would probably be easier:</p>
<p><code>
boolean validInput = false;
while(!validInput) {
     System.out.print("Please input the number to factor (less than 40): ");
     try {
          System.out.println("Your factored number is: " + fact(input.nextInt()));
          validInput = true;
     } catch (InputMismatchException ime) {
          System.out.println("That's not a number!");
     }
}</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/factorial-solver/357218/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/factorial-solver/357218/8</link>
        <pubDate>Sun, 29 Aug 2010 00:03:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357218-8</guid>
        <source url="https://forum.moparisthebest.com/t/factorial-solver/357218.rss">Factorial Solver</source>
      </item>
      <item>
        <title>Factorial Solver</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <p>Looks awesome <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>If you are using windows, calculator has a factorial function. Or, you can be cool and use the program you made. <img src="https://forum.moparisthebest.com/images/emoji/twitter/cool.png?v=5" title=":cool:" class="emoji" alt=":cool:"></p>
<p>David had a great suggestion about validating the input. It seems to me that an even easier way would be to use <a href="http://download.oracle.com/javase/7/docs/api/java/util/Scanner.html" data-bbcode="true" rel="nofollow noopener">a Scanner</a> object, then you can make use of the methods <a href="http://download.oracle.com/javase/7/docs/api/java/util/Scanner.html#hasNextDouble()" data-bbcode="true" rel="nofollow noopener">hasNextDouble()</a> and <a href="http://download.oracle.com/javase/7/docs/api/java/util/Scanner.html#nextDouble()" data-bbcode="true" rel="nofollow noopener">nextDouble()</a>. I think they would make the entire input process sanitized and easier. <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/factorial-solver/357218/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/factorial-solver/357218/7</link>
        <pubDate>Sat, 28 Aug 2010 23:28:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357218-7</guid>
        <source url="https://forum.moparisthebest.com/t/factorial-solver/357218.rss">Factorial Solver</source>
      </item>
      <item>
        <title>Factorial Solver</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>Also, instead of exiting when the person inputs an invalid character, use a while loop to keep asking until you get a valid response.</p>
<pre><code class="lang-auto">        String input = "!";
        do {
                System.out.print("Please input your factorial (max 39): "); 
                //Get user input and attempt to catch an exception
                try {        
                        input = in.readLine();
                } catch (IOException e) {
                        // TODO Auto-generated catch block
                        e.printStackTrace();
                }
        } while(!validateString(input));
        try {
             System.out.println("Your factored number is: " + fact(Long.parseLong(input)));
        } catch (NumberFormatException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
        }</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/factorial-solver/357218/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/factorial-solver/357218/6</link>
        <pubDate>Fri, 27 Aug 2010 17:12:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357218-6</guid>
        <source url="https://forum.moparisthebest.com/t/factorial-solver/357218.rss">Factorial Solver</source>
      </item>
      <item>
        <title>Factorial Solver</title>
        <dc:creator><![CDATA[@_Vengeance _Vengeance]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_vengeance">@_Vengeance</a> wrote:</p>
          <blockquote>
              <p>What happens when you want to get the factorial of a number other than an integer?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/factorial-solver/357218/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/factorial-solver/357218/5</link>
        <pubDate>Fri, 27 Aug 2010 17:03:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357218-5</guid>
        <source url="https://forum.moparisthebest.com/t/factorial-solver/357218.rss">Factorial Solver</source>
      </item>
      <item>
        <title>Factorial Solver</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>Also, just a way to keep your code a little smaller, when you have a method that returns a boolean, just use !method() instead of method() == false</p>
<p>(talking about if (validateString(input) == false) {)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/factorial-solver/357218/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/factorial-solver/357218/4</link>
        <pubDate>Fri, 27 Aug 2010 17:00:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357218-4</guid>
        <source url="https://forum.moparisthebest.com/t/factorial-solver/357218.rss">Factorial Solver</source>
      </item>
      <item>
        <title>Factorial Solver</title>
        <dc:creator><![CDATA[@ziplock ziplock]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ziplock">@ziplock</a> wrote:</p>
          <blockquote>
              <p>Alright, when I get home from the college today I will re-write it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/factorial-solver/357218/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/factorial-solver/357218/3</link>
        <pubDate>Fri, 27 Aug 2010 11:58:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357218-3</guid>
        <source url="https://forum.moparisthebest.com/t/factorial-solver/357218.rss">Factorial Solver</source>
      </item>
      <item>
        <title>Factorial Solver</title>
        <dc:creator><![CDATA[@Fat_Cookies Fat Cookies]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/fat_cookies">@Fat_Cookies</a> wrote:</p>
          <blockquote>
              <p>If you had a decent calculator it would have a factorial button (x!) which does everything for you.</p>
<p>Although what you have written is 100% correct, I would use iteration instead of recursion because it’s much quicker.<br>
Plus, if you can only solve 39!, why not use a floating point number (preferably with double precision) which could display numbers much greater than with an long.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/factorial-solver/357218/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/factorial-solver/357218/2</link>
        <pubDate>Fri, 27 Aug 2010 11:25:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357218-2</guid>
        <source url="https://forum.moparisthebest.com/t/factorial-solver/357218.rss">Factorial Solver</source>
      </item>
      <item>
        <title>Factorial Solver</title>
        <dc:creator><![CDATA[@ziplock ziplock]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ziplock">@ziplock</a> wrote:</p>
          <blockquote>
              <p>Well I had a homework assignment that required me to get the result of multiple factorials, and finding the results with a calculator was extremely irritating. So I wrote a program to solve them for me, and decided to release it here just in case anyone else for some remote reason failed geometry and is taking supplemental algebra. &gt;.&gt;</p>
<pre><code class="lang-auto">import java.io.*;

public class factorialSolver {
	
 //Main
 public static void main(String args[]) {
	//Create BufferedReader
	BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
	
	//Get user input and attempt to catch an exception
	try {	
	String input = in.readLine();
	//Validate String contains only numerals
	if (validateString(input) == false) {
		System.out.println("Input contains characters other than numerals");
		System.exit(-1);
	}
	
	//Calculate and print the factorial result
	System.out.println(fact(Double.parseDouble(input)));
	
	//Attempt to catch an exception
	} catch (NumberFormatException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	} catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	
 }
 
 //Solves the factorial
 public static double fact(double n) {
	 if (n &lt;= 1)
		 return 1;
	 else 
		 return n * fact(n-1);
 }
 
 public static boolean validateString(String s){
	 //Check if the user input anything
	 if (s == null || s.length() == 0)
		 return false;
	 //Check if the string contains only numerals
	 for (int i = 0; i &lt; s.length(); i++) {
		 if(!Character.isDigit(s.charAt(i)))
			 return false;	 
	 }
	 return true;
 }
}
</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/factorial-solver/357218/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/factorial-solver/357218/1</link>
        <pubDate>Fri, 27 Aug 2010 07:21:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-357218-1</guid>
        <source url="https://forum.moparisthebest.com/t/factorial-solver/357218.rss">Factorial Solver</source>
      </item>
  </channel>
</rss>
