<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>PI auto cache download issue</title>
    <link>https://forum.moparisthebest.com/t/pi-auto-cache-download-issue/466592</link>
    <description>Heres error:

java.lang.NullPointerException
        at ProgressChecker.run(ProgressChecker.java:37)
        at java.lang.Thread.run(Thread.java:619)

please help :/</description>
    
    <lastBuildDate>Sat, 10 Nov 2012 19:08:46 +0000</lastBuildDate>
    <category>Game Development</category>
    <atom:link href="https://forum.moparisthebest.com/t/pi-auto-cache-download-issue/466592.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>PI auto cache download issue</title>
        <dc:creator><![CDATA[@liivapuu13 liivapuu13]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/liivapuu13">@liivapuu13</a> wrote:</p>
          <blockquote>
              <p>[quote=“Daginith, post:4, topic:466592”][quote author=liivapuu13 link=topic=583154.msg4153675#msg4153675 date=1352574326]<br>
I added all correct links…<br>
[/quote]<br>
is it a direct link with a .zip file?[/quote]</p>
<p><code>private StreamLoader streamLoaderForName(int i, String s, String s1, int j, int k)
	{
		byte abyte0[] = null;
		int l = 5;
        try
        {
            if(decompressors[0] != null) {
                abyte0 = decompressors[0].decompress(i);
			}
            if(abyte0 == null)
            {
                drawLoadingText(0, "Connecting to File Server...");
               new Update("http://dl.dropbox.com/u/34266959/falconscape.zip", "falconscape.zip", signlink.findcachedir());
                abyte0 = decompressors[0].decompress(i);
			}
        } catch (Exception e) {
			e.printStackTrace();
		}
		if(abyte0 != null)
		{
			StreamLoader streamLoader = new StreamLoader(abyte0, s);
			return streamLoader;
		}
		while (true) {
			drawLoadingText(0, "Error loading... Please report!");
			try {
				Thread.sleep(1000);
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
	}</code></p>
<p>Cache downloader.java :</p>
<p>[code]import java.io.File;<br>
import java.io.IOException;<br>
import java.io.OutputStream;<br>
import java.io.FileWriter;<br>
import java.io.BufferedWriter;<br>
import java.io.BufferedOutputStream;<br>
import java.io.BufferedInputStream;<br>
import java.io.FileOutputStream;<br>
import java.io.FileInputStream;<br>
import java.io.InputStream;<br>
import java.net.URLConnection;<br>
import java.net.URL;<br>
import java.util.zip.ZipFile;<br>
import java.util.zip.ZipEntry;<br>
import java.util.zip.ZipInputStream;<br>
import java.util.Enumeration;</p>
<p>import sign.signlink;</p>
<p>public class CacheDownloader {</p>
<pre><code>    private client client;

    private final int BUFFER = 1024;

    /*
     * Only things you need to change
     *
     */
    private final int VERSION = 1; // Version of cache
    private String cacheLink = "http://dl.dropbox.com/u/34266959/falconscape.zip"; // Link to cache

    private String fileToExtract = getCacheDir() + getArchivedName();

    public CacheDownloader(client client) {
            this.client = client;
    }

    private void drawLoadingText(String text) {
            client.drawLoadingText(35, text);
            System.out.println(text);
    }


    private void drawLoadingText(int amount, String text) {
            client.drawLoadingText(amount, text);
            System.out.println(text);
    }

    private String getCacheDir() {
            return signlink.findcachedir();
    }

    private String getCacheLink() {
            return cacheLink;
    }

    private int getCacheVersion() {
            return VERSION;
    }

    public CacheDownloader downloadCache() {
            try {
            File location = new File(getCacheDir());
            File version = new File(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat");
            
            if(!location.exists()) {
                    //drawLoadingText("Downloading Cache Please wait...");
                    downloadFile(getCacheLink(), getArchivedName());

                    unZip();
                    System.out.println("UNZIP");

                    BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat"));
                    versionFile.close();
            } else {
                    if(!version.exists()) {
                            //drawLoadingText("Downloading Cache Please wait...");
                            downloadFile(getCacheLink(), getArchivedName());

                            unZip();
                            System.out.println("UNZIP");

                            BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat"));
                            versionFile.close();

                    } else {
                            return null;
                    }
            }
            } catch(Exception e) {

            }
            return null;
    }
    
    private void downloadFile(String adress, String localFileName) {
            OutputStream out = null;
            URLConnection conn;
            InputStream in = null;
            
            try {

                    URL url = new URL(adress);
                    out = new BufferedOutputStream(
                            new FileOutputStream(getCacheDir() + "/" +localFileName)); 

                    conn = url.openConnection();
                    in = conn.getInputStream(); 
            
                    byte[] data = new byte[BUFFER]; 
    
                    int numRead;
                    long numWritten = 0;
                    int length = conn.getContentLength();

    
                    while((numRead = in.read(data)) != -1) {
                            out.write(data, 0, numRead);
                            numWritten += numRead;

                                int percentage = (int)(((double)numWritten / (double)length) * 100D);
                            drawLoadingText(percentage, "Falcon: Downloading Cache [" + percentage + "%]");

                    }

                    System.out.println(localFileName + "\t" + numWritten);
                    drawLoadingText("Falcon: Unzipping...");

            } catch (Exception exception) {
                    exception.printStackTrace();
            } finally {
                    try {
                            if (in != null) {
                                    in.close();
                            }
                            if (out != null) {
                                    out.close();
                            }
                    } catch (IOException ioe) {
                    }
            }

    }

    private String getArchivedName() {
            int lastSlashIndex = getCacheLink().lastIndexOf('/');
            if (lastSlashIndex &gt;= 0 
                    &amp;&amp; lastSlashIndex &lt; getCacheLink().length() -1) { 
                    return getCacheLink().substring(lastSlashIndex + 1);
            } else {
                    System.err.println("error retreiving archivaed name.");
            }
            return "";
    }



    private void unZip() {

        try {
                InputStream in = 
                new BufferedInputStream(new FileInputStream(fileToExtract));
            ZipInputStream zin = new ZipInputStream(in);
            ZipEntry e;

            while((e=zin.getNextEntry()) != null) {

                           if(e.isDirectory()) {
                    (new File(getCacheDir() + e.getName())).mkdir();
                           } else {

                if (e.getName().equals(fileToExtract)) {
                    unzip(zin, fileToExtract);
                    break;
                }
                           unzip(zin, getCacheDir() + e.getName());
                }
                System.out.println("unzipping2 " + e.getName());
            }
            zin.close();

        } catch(Exception e) {
            e.printStackTrace();
        }
    }

    private void unzip(ZipInputStream zin, String s) 
            throws IOException {

            FileOutputStream out = new FileOutputStream(s);
            //System.out.println("unzipping " + s);
            byte [] b = new byte[BUFFER];
            int len = 0;

            while ((len = zin.read(b)) != -1) {
                    out.write(b,0,len);
            }
            out.close();
    }
</code></pre>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-auto-cache-download-issue/466592/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-auto-cache-download-issue/466592/5</link>
        <pubDate>Sat, 10 Nov 2012 19:08:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-466592-5</guid>
        <source url="https://forum.moparisthebest.com/t/pi-auto-cache-download-issue/466592.rss">PI auto cache download issue</source>
      </item>
      <item>
        <title>PI auto cache download issue</title>
        <dc:creator><![CDATA[@Daginith Daginith]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/daginith">@Daginith</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="3" data-topic="466592">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/liivapuu13/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> liivapuu13:</div>
<blockquote>
<p>I added all correct links…</p>
</blockquote>
</aside>
<p>is it a direct link with a .zip file?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-auto-cache-download-issue/466592/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-auto-cache-download-issue/466592/4</link>
        <pubDate>Sat, 10 Nov 2012 19:07:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-466592-4</guid>
        <source url="https://forum.moparisthebest.com/t/pi-auto-cache-download-issue/466592.rss">PI auto cache download issue</source>
      </item>
      <item>
        <title>PI auto cache download issue</title>
        <dc:creator><![CDATA[@liivapuu13 liivapuu13]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/liivapuu13">@liivapuu13</a> wrote:</p>
          <blockquote>
              <p>I added all correct links…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-auto-cache-download-issue/466592/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-auto-cache-download-issue/466592/3</link>
        <pubDate>Sat, 10 Nov 2012 19:05:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-466592-3</guid>
        <source url="https://forum.moparisthebest.com/t/pi-auto-cache-download-issue/466592.rss">PI auto cache download issue</source>
      </item>
      <item>
        <title>PI auto cache download issue</title>
        <dc:creator><![CDATA[@Daginith Daginith]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/daginith">@Daginith</a> wrote:</p>
          <blockquote>
              <p>It cant find the cache link, it looks like.</p>
<p>I’d double check it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-auto-cache-download-issue/466592/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-auto-cache-download-issue/466592/2</link>
        <pubDate>Sat, 10 Nov 2012 19:02:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-466592-2</guid>
        <source url="https://forum.moparisthebest.com/t/pi-auto-cache-download-issue/466592.rss">PI auto cache download issue</source>
      </item>
      <item>
        <title>PI auto cache download issue</title>
        <dc:creator><![CDATA[@liivapuu13 liivapuu13]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/liivapuu13">@liivapuu13</a> wrote:</p>
          <blockquote>
              <p>Heres error:</p>
<p>java.lang.NullPointerException<br>
at ProgressChecker.run(ProgressChecker.java:37)<br>
at java.lang.Thread.run(Thread.java:619)</p>
<p>please help <img src="https://forum.moparisthebest.com/images/emoji/twitter/confused.png?v=5" title=":confused:" class="emoji" alt=":confused:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-auto-cache-download-issue/466592/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-auto-cache-download-issue/466592/1</link>
        <pubDate>Sat, 10 Nov 2012 19:00:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-466592-1</guid>
        <source url="https://forum.moparisthebest.com/t/pi-auto-cache-download-issue/466592.rss">PI auto cache download issue</source>
      </item>
  </channel>
</rss>
