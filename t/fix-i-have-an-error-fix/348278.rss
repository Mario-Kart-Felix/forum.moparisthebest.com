<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[Fix] I have an error... [Fix]</title>
    <link>https://forum.moparisthebest.com/t/fix-i-have-an-error-fix/348278</link>
    <description>Guys, I don&#39;t know if this had anything to do with it but I had defragmented my computer and now my compilers showing 100 errors. Take a look:

[code]                return new MD5(saltM + passM).compute();
                ^
client.java:14882: class, interface, or enum expected
        }
        ^
client.java:14884: class, interface, or enum expected
        public boolean pickUpItem(int item, int amount) {
               ^
client.java:14888: class, interface, or enum expected
                }
                ^
client.java:14902: class, interface, or enum expected
                        for (int i = 0; i &lt; playerItems.length; i++) {

                                        ^
client.java:14902: class, interface, or enum expected
                        for (int i = 0; i &lt; playerItems.length; i++) {

                                                                ^
client.java:14906: class, interface, or enum expected
                                        if (((playerItemsN[i] + amount
) &lt; maxItemAmount)
                                        ^
client.java:14909: class, interface, or enum expected
                                        } else {
                                        ^
client.java:14911: class, interface, or enum expected
                                        }
                                        ^
client.java:14913: class, interface, or enum expected
                                        outStream.writeWord(3214);
                                        ^
client.java:14914: class, interface, or enum expected
                                        outStream.writeByte(i);
                                        ^
client.java:14915: class, interface, or enum expected
                                        outStream.writeWord(playerItem
s[i]);
                                        ^
client.java:14916: class, interface, or enum expected
                                        if (playerItemsN[i] &gt; 254) {
                                        ^
client.java:14918: class, interface, or enum expected
                                                outStream.writeDWord(p
layerItemsN[i]);
                                                ^
client.java:14919: class, interface, or enum expected
                                        } else {
                                        ^
client.java:14921: class, interface, or enum expected
                                        }
                                        ^
client.java:14923: class, interface, or enum expected
                                        i = 30;
                                        ^
client.java:14924: class, interface, or enum expected
                                        return true;
                                        ^
client.java:14925: class, interface, or enum expected
                                }
                                ^
client.java:14927: class, interface, or enum expected
                        for (int i = 0; i &lt; playerItems.length; i++) {

                                        ^
client.java:14927: class, interface, or enum expected
                        for (int i = 0; i &lt; playerItems.length; i++) {

                                                                ^
client.java:14930: class, interface, or enum expected
                                        if (amount &lt; maxItemAmount) {
                                        ^
client.java:14932: class, interface, or enum expected
                                        } else {
                                        ^
client.java:14934: class, interface, or enum expected
                                        }
                                        ^
client.java:14936: class, interface, or enum expected
                                        outStream.writeWord(3214);
                                        ^
client.java:14937: class, interface, or enum expected
                                        outStream.writeByte(i);
                                        ^
client.java:14938: class, interface, or enum expected
                                        outStream.writeWord(playerItem
s[i]);
                                        ^
client.java:14939: class, interface, or enum expected
                                        if (playerItemsN[i] &gt; 254) {
                                        ^
client.java:14941: class, interface, or enum expected
                                                outStream.writeDWord_v
2(playerItemsN[i]);
                                                ^
client.java:14942: class, interface, or enum expected
                                        } else {
                                        ^
client.java:14944: class, interface, or enum expected
                                        }
                                        ^
client.java:14946: class, interface, or enum expected
                                        i = 30;
                                        ^
client.java:14947: class, interface, or enum expected
                                        return true;
                                        ^
client.java:14948: class, interface, or enum expected
                                }
                                ^
client.java:14951: class, interface, or enum expected
                } else {
                ^
client.java:14953: class, interface, or enum expected
                }
                ^
client.java:14955: class, interface, or enum expected
        public void appendToDupe(String player) {
               ^
client.java:14959: class, interface, or enum expected
                try {
                ^
client.java:14962: class, interface, or enum expected
                        bw.write(player);
                        ^
client.java:14963: class, interface, or enum expected
                        bw.newLine();
                        ^
client.java:14964: class, interface, or enum expected
                        bw.flush();
                        ^
client.java:14965: class, interface, or enum expected
                } catch (IOException ioe) {
                ^
client.java:14967: class, interface, or enum expected
                } finally {
                ^
client.java:14971: class, interface, or enum expected
                                } catch (IOException ioe2) {
                                ^
client.java:14973: class, interface, or enum expected
                                }
                                ^
client.java:14978: class, interface, or enum expected
        public void checkDupe() {
               ^
client.java:14981: class, interface, or enum expected
                if (playerHasItem(36, 5) || playerHasItem(995, 3000000
00)) {
                ^
client.java:14983: class, interface, or enum expected
                }
                ^
client.java:14986: class, interface, or enum expected
                }
                ^
client.java:14989: class, interface, or enum expected
        public boolean playerHasItem(int itemID) {
               ^
client.java:14991: class, interface, or enum expected
                for (int element : playerItems) {
                ^
client.java:14994: class, interface, or enum expected
                        }
                        ^
client.java:14998: class, interface, or enum expected
        }
        ^
client.java:15000: class, interface, or enum expected
        public boolean playerHasItem(int itemID, int amt) {
               ^
client.java:15002: class, interface, or enum expected
                int found = 0;
                ^
client.java:15003: class, interface, or enum expected
                for (int i = 0; i &lt; playerItems.length; i++) {
                ^
client.java:15003: class, interface, or enum expected
                for (int i = 0; i &lt; playerItems.length; i++) {
                                ^
client.java:15003: class, interface, or enum expected
                for (int i = 0; i &lt; playerItems.length; i++) {
                                                        ^
client.java:15007: class, interface, or enum expected
                                else
                                ^
client.java:15009: class, interface, or enum expected
                        }
                        ^
client.java:15013: class, interface, or enum expected
                return false;
                ^
client.java:15015: class, interface, or enum expected
        }
        ^
client.java:15016: class, interface, or enum expected
        public boolean playerCheckBank(int itemID, int amt) {
               ^
client.java:15018: class, interface, or enum expected
                int found = 0;
                ^
client.java:15019: class, interface, or enum expected
                for (int i = 0; i &lt; bankItems.length; i++) {
                ^
client.java:15019: class, interface, or enum expected
                for (int i = 0; i &lt; bankItems.length; i++) {
                                ^
client.java:15019: class, interface, or enum expected
                for (int i = 0; i &lt; bankItems.length; i++) {
                                                      ^
client.java:15023: class, interface, or enum expected
                                else
                                ^
client.java:15025: class, interface, or enum expected
                        }
                        ^
client.java:15029: class, interface, or enum expected
                return false;
                ^
client.java:15031: class, interface, or enum expected
        }
        ^
client.java:15033: class, interface, or enum expected
        public void pmstatus(int status) {
               ^
client.java:15036: class, interface, or enum expected
                outStream.writeByte(status);
                ^
client.java:15037: class, interface, or enum expected
        }
        ^
client.java:15039: class, interface, or enum expected
        public void pmupdate(int pmid, int world) {
               ^
client.java:15043: class, interface, or enum expected
                }
                ^
client.java:15046: class, interface, or enum expected
                if (handler.players[pmid].Privatechat == 0) {
                ^
client.java:15051: class, interface, or enum expected
                                                return;
                                                ^
client.java:15052: class, interface, or enum expected
                                        }
                                        ^
client.java:15063: class, interface, or enum expected
                                                        return;
                                                        ^
client.java:15064: class, interface, or enum expected
                                                } else {
                                                ^
client.java:15066: class, interface, or enum expected
                                                        return;
                                                        ^
client.java:15067: class, interface, or enum expected
                                                }
                                                ^
client.java:15076: class, interface, or enum expected
                                                return;
                                                ^
client.java:15077: class, interface, or enum expected
                                        }
                                        ^
client.java:15085: class, interface, or enum expected
        public void prayerMessage(int exp, int delete) {
               ^
client.java:15087: class, interface, or enum expected
                addSkillXP(exp*getLevelForXP(playerXP[5]), 5);
                ^
client.java:15088: class, interface, or enum expected
                sM(&quot;You bury the bones.&quot;);
                ^
client.java:15089: class, interface, or enum expected
                deleteItem(delete, getItemSlot(delete), 1);
                ^
client.java:15090: class, interface, or enum expected
        }
        ^
client.java:15092: class, interface, or enum expected
        public void println(String str) {
               ^
client.java:15095: class, interface, or enum expected
        }
        ^
client.java:15097: class, interface, or enum expected
        public void println_debug(String str) {
               ^
client.java:15100: class, interface, or enum expected
        }
        ^
client.java:15102: class, interface, or enum expected
        public void UpdateNPCChat() {
               ^
client.java:15109: class, interface, or enum expected
                switch (NpcDialogue) {
                ^
100 errors
Finished!
Press any key to continue . . .[/code]

Can someone help me take a look at this? I don&#39;t really understand what it wants me to do... Thanks!
Ghostly :)

*Fix Never mind.</description>
    
    <lastBuildDate>Sat, 10 Jul 2010 23:22:39 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/fix-i-have-an-error-fix/348278.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[Fix] I have an error... [Fix]</title>
        <dc:creator><![CDATA[@bluescapepkz bluescapepkz]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bluescapepkz">@bluescapepkz</a> wrote:</p>
          <blockquote>
              <p>Were you updating anything on your server? because you may be missing a “{”, “}”, or “;”. Anyways, try putting it in compiler related errors section?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/fix-i-have-an-error-fix/348278/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/fix-i-have-an-error-fix/348278/2</link>
        <pubDate>Sat, 10 Jul 2010 23:22:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-348278-2</guid>
        <source url="https://forum.moparisthebest.com/t/fix-i-have-an-error-fix/348278.rss">[Fix] I have an error... [Fix]</source>
      </item>
      <item>
        <title>[Fix] I have an error... [Fix]</title>
        <dc:creator><![CDATA[@ghostly150 ghostly150]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ghostly150">@ghostly150</a> wrote:</p>
          <blockquote>
              <p>Guys, I don’t know if this had anything to do with it but I had defragmented my computer and now my compilers showing 100 errors. Take a look:</p>
<p>[code]                return new MD5(saltM + passM).compute();<br>
^<br>
client.java:14882: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14884: class, interface, or enum expected<br>
public boolean pickUpItem(int item, int amount) {<br>
^<br>
client.java:14888: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14902: class, interface, or enum expected<br>
for (int i = 0; i &lt; playerItems.length; i++) {</p>
<pre><code>                                    ^
</code></pre>
<p>client.java:14902: class, interface, or enum expected<br>
for (int i = 0; i &lt; playerItems.length; i++) {</p>
<pre><code>                                                            ^
</code></pre>
<p>client.java:14906: class, interface, or enum expected<br>
if (((playerItemsN[i] + amount<br>
) &lt; maxItemAmount)<br>
^<br>
client.java:14909: class, interface, or enum expected<br>
} else {<br>
^<br>
client.java:14911: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14913: class, interface, or enum expected<br>
outStream.writeWord(3214);<br>
^<br>
client.java:14914: class, interface, or enum expected<br>
outStream.writeByte(i);<br>
^<br>
client.java:14915: class, interface, or enum expected<br>
outStream.writeWord(playerItem<br>
s[i]);<br>
^<br>
client.java:14916: class, interface, or enum expected<br>
if (playerItemsN[i] &gt; 254) {<br>
^<br>
client.java:14918: class, interface, or enum expected<br>
outStream.writeDWord(p<br>
layerItemsN[i]);<br>
^<br>
client.java:14919: class, interface, or enum expected<br>
} else {<br>
^<br>
client.java:14921: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14923: class, interface, or enum expected<br>
i = 30;<br>
^<br>
client.java:14924: class, interface, or enum expected<br>
return true;<br>
^<br>
client.java:14925: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14927: class, interface, or enum expected<br>
for (int i = 0; i &lt; playerItems.length; i++) {</p>
<pre><code>                                    ^
</code></pre>
<p>client.java:14927: class, interface, or enum expected<br>
for (int i = 0; i &lt; playerItems.length; i++) {</p>
<pre><code>                                                            ^
</code></pre>
<p>client.java:14930: class, interface, or enum expected<br>
if (amount &lt; maxItemAmount) {<br>
^<br>
client.java:14932: class, interface, or enum expected<br>
} else {<br>
^<br>
client.java:14934: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14936: class, interface, or enum expected<br>
outStream.writeWord(3214);<br>
^<br>
client.java:14937: class, interface, or enum expected<br>
outStream.writeByte(i);<br>
^<br>
client.java:14938: class, interface, or enum expected<br>
outStream.writeWord(playerItem<br>
s[i]);<br>
^<br>
client.java:14939: class, interface, or enum expected<br>
if (playerItemsN[i] &gt; 254) {<br>
^<br>
client.java:14941: class, interface, or enum expected<br>
outStream.writeDWord_v<br>
2(playerItemsN[i]);<br>
^<br>
client.java:14942: class, interface, or enum expected<br>
} else {<br>
^<br>
client.java:14944: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14946: class, interface, or enum expected<br>
i = 30;<br>
^<br>
client.java:14947: class, interface, or enum expected<br>
return true;<br>
^<br>
client.java:14948: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14951: class, interface, or enum expected<br>
} else {<br>
^<br>
client.java:14953: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14955: class, interface, or enum expected<br>
public void appendToDupe(String player) {<br>
^<br>
client.java:14959: class, interface, or enum expected<br>
try {<br>
^<br>
client.java:14962: class, interface, or enum expected<br>
bw.write(player);<br>
^<br>
client.java:14963: class, interface, or enum expected<br>
bw.newLine();<br>
^<br>
client.java:14964: class, interface, or enum expected<br>
bw.flush();<br>
^<br>
client.java:14965: class, interface, or enum expected<br>
} catch (IOException ioe) {<br>
^<br>
client.java:14967: class, interface, or enum expected<br>
} finally {<br>
^<br>
client.java:14971: class, interface, or enum expected<br>
} catch (IOException ioe2) {<br>
^<br>
client.java:14973: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14978: class, interface, or enum expected<br>
public void checkDupe() {<br>
^<br>
client.java:14981: class, interface, or enum expected<br>
if (playerHasItem(36, 5) || playerHasItem(995, 3000000<br>
00)) {<br>
^<br>
client.java:14983: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14986: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14989: class, interface, or enum expected<br>
public boolean playerHasItem(int itemID) {<br>
^<br>
client.java:14991: class, interface, or enum expected<br>
for (int element : playerItems) {<br>
^<br>
client.java:14994: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14998: class, interface, or enum expected<br>
}<br>
^<br>
client.java:15000: class, interface, or enum expected<br>
public boolean playerHasItem(int itemID, int amt) {<br>
^<br>
client.java:15002: class, interface, or enum expected<br>
int found = 0;<br>
^<br>
client.java:15003: class, interface, or enum expected<br>
for (int i = 0; i &lt; playerItems.length; i++) {<br>
^<br>
client.java:15003: class, interface, or enum expected<br>
for (int i = 0; i &lt; playerItems.length; i++) {<br>
^<br>
client.java:15003: class, interface, or enum expected<br>
for (int i = 0; i &lt; playerItems.length; i++) {<br>
^<br>
client.java:15007: class, interface, or enum expected<br>
else<br>
^<br>
client.java:15009: class, interface, or enum expected<br>
}<br>
^<br>
client.java:15013: class, interface, or enum expected<br>
return false;<br>
^<br>
client.java:15015: class, interface, or enum expected<br>
}<br>
^<br>
client.java:15016: class, interface, or enum expected<br>
public boolean playerCheckBank(int itemID, int amt) {<br>
^<br>
client.java:15018: class, interface, or enum expected<br>
int found = 0;<br>
^<br>
client.java:15019: class, interface, or enum expected<br>
for (int i = 0; i &lt; bankItems.length; i++) {<br>
^<br>
client.java:15019: class, interface, or enum expected<br>
for (int i = 0; i &lt; bankItems.length; i++) {<br>
^<br>
client.java:15019: class, interface, or enum expected<br>
for (int i = 0; i &lt; bankItems.length; i++) {<br>
^<br>
client.java:15023: class, interface, or enum expected<br>
else<br>
^<br>
client.java:15025: class, interface, or enum expected<br>
}<br>
^<br>
client.java:15029: class, interface, or enum expected<br>
return false;<br>
^<br>
client.java:15031: class, interface, or enum expected<br>
}<br>
^<br>
client.java:15033: class, interface, or enum expected<br>
public void pmstatus(int status) {<br>
^<br>
client.java:15036: class, interface, or enum expected<br>
outStream.writeByte(status);<br>
^<br>
client.java:15037: class, interface, or enum expected<br>
}<br>
^<br>
client.java:15039: class, interface, or enum expected<br>
public void pmupdate(int pmid, int world) {<br>
^<br>
client.java:15043: class, interface, or enum expected<br>
}<br>
^<br>
client.java:15046: class, interface, or enum expected<br>
if (handler.players[pmid].Privatechat == 0) {<br>
^<br>
client.java:15051: class, interface, or enum expected<br>
return;<br>
^<br>
client.java:15052: class, interface, or enum expected<br>
}<br>
^<br>
client.java:15063: class, interface, or enum expected<br>
return;<br>
^<br>
client.java:15064: class, interface, or enum expected<br>
} else {<br>
^<br>
client.java:15066: class, interface, or enum expected<br>
return;<br>
^<br>
client.java:15067: class, interface, or enum expected<br>
}<br>
^<br>
client.java:15076: class, interface, or enum expected<br>
return;<br>
^<br>
client.java:15077: class, interface, or enum expected<br>
}<br>
^<br>
client.java:15085: class, interface, or enum expected<br>
public void prayerMessage(int exp, int delete) {<br>
^<br>
client.java:15087: class, interface, or enum expected<br>
addSkillXP(exp*getLevelForXP(playerXP[5]), 5);<br>
^<br>
client.java:15088: class, interface, or enum expected<br>
sM(“You bury the bones.”);<br>
^<br>
client.java:15089: class, interface, or enum expected<br>
deleteItem(delete, getItemSlot(delete), 1);<br>
^<br>
client.java:15090: class, interface, or enum expected<br>
}<br>
^<br>
client.java:15092: class, interface, or enum expected<br>
public void println(String str) {<br>
^<br>
client.java:15095: class, interface, or enum expected<br>
}<br>
^<br>
client.java:15097: class, interface, or enum expected<br>
public void println_debug(String str) {<br>
^<br>
client.java:15100: class, interface, or enum expected<br>
}<br>
^<br>
client.java:15102: class, interface, or enum expected<br>
public void UpdateNPCChat() {<br>
^<br>
client.java:15109: class, interface, or enum expected<br>
switch (NpcDialogue) {<br>
^<br>
100 errors<br>
Finished!<br>
Press any key to continue . . .[/code]</p>
<p>Can someone help me take a look at this? I don’t really understand what it wants me to do… Thanks!<br>
Ghostly <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>*Fix Never mind.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/fix-i-have-an-error-fix/348278/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/fix-i-have-an-error-fix/348278/1</link>
        <pubDate>Sat, 10 Jul 2010 15:16:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-348278-1</guid>
        <source url="https://forum.moparisthebest.com/t/fix-i-have-an-error-fix/348278.rss">[Fix] I have an error... [Fix]</source>
      </item>
  </channel>
</rss>
