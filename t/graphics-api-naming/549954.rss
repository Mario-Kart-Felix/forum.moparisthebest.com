<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Graphics API naming</title>
    <link>https://forum.moparisthebest.com/t/graphics-api-naming/549954</link>
    <description>I&#39;m looking for some feedback on my graphics API, specifically the naming and styling of the API.

Here is the LoginScreen class, [i]load[/i] is called when the screen is initialised and then [i]draw[/i] is called whenever the screen needs to be drawn.

[code=Java]package com.jamesmonger.gamekit.ui;

import java.util.ArrayList;

import com.jagex.runescape.GameFont;

public class LoginScreen {
	
	ArrayList&lt;UIElement&gt; elements = new ArrayList&lt;UIElement&gt;();
	
	public void load() {
		GameFont font = GameFont.getFont(&quot;b12_full&quot;);
		
		elements.add(
			new VerticalSelectionGroup()
				.setPosition(640, 400)
				.setActiveColor(0xFFFFFF)
				.setInactiveColor(0x444444)
				.setEntries(new String[]{&quot;Continue&quot;, &quot;New&quot;, &quot;Load&quot;})
				.setMargins(20, 0)
				.setFont(font)
		);
	}
	
	public void draw() {
		for (UIElement e : elements)
			e.draw();
	}	
}[/code]</description>
    
    <lastBuildDate>Mon, 16 Feb 2015 22:52:36 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/graphics-api-naming/549954.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Graphics API naming</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>You honestly should just use the window toolkit to add your custom components &amp; capabilities. It will save you a lot of time with things like event handling, proper window hierarchy, and just in general a lot of these methods will be there for you already.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/graphics-api-naming/549954/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/graphics-api-naming/549954/4</link>
        <pubDate>Mon, 16 Feb 2015 22:52:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-549954-4</guid>
        <source url="https://forum.moparisthebest.com/t/graphics-api-naming/549954.rss">Graphics API naming</source>
      </item>
      <item>
        <title>Graphics API naming</title>
        <dc:creator><![CDATA[@Ambokile Ambokile]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ambokile">@Ambokile</a> wrote:</p>
          <blockquote>
              <p>[quote=“Davidi2, post:2, topic:549954”]What exactly do you want feedback on? You have like, two named types?<br>
VerticalSelectionGroup: Can’t really give feedback on this without knowing what it’s supposed to be.<br>
UIElement: I mean, it works. But I tend to prefer Component (CustomComponent, UIComponent, whatever)</p>
<p>However the design itself can’t be that good if login screen isnt an element tbh.[/quote]</p>
<p>Just wanted some feedback on the general design of it. Here is the code for it below:<br>
<span class="bbcode-u"><span class="bbcode-b">KeyboardListener</span></span></p>
<p>[code=Java]package com.jamesmonger.gamekit.ui;</p>
<p>public interface KeyboardListener {</p>
<pre><code>void keyPressed (int keyCode);

void keyReleased (int keyCode);
</code></pre>
<p>}[/code]</p>
<p><span class="bbcode-u"><span class="bbcode-b">ListenerType</span></span></p>
<p>[code=Java]package com.jamesmonger.gamekit.ui;</p>
<p>public enum ListenerType {<br>
KEY_LISTENER<br>
}[/code]</p>
<p><span class="bbcode-u"><span class="bbcode-b">UIDirection</span></span></p>
<p>[code=Java]package com.jamesmonger.gamekit.ui;</p>
<p>public enum UIDirection {<br>
UP, DOWN, LEFT, RIGHT<br>
}[/code]</p>
<p><span class="bbcode-u"><span class="bbcode-b">UIElement</span></span></p>
<p>[code=Java]package com.jamesmonger.gamekit.ui;</p>
<p>public abstract class UIElement {</p>
<pre><code>public abstract void draw();
</code></pre>
<p>}[/code]</p>
<p><span class="bbcode-u"><span class="bbcode-b">UIScreen</span></span></p>
<p>[code=Java]package com.jamesmonger.gamekit.ui;</p>
<p>import java.util.ArrayList;</p>
<p>public class UIScreen {</p>
<pre><code>ArrayList&lt;UIElement&gt; elements = new ArrayList&lt;UIElement&gt;();

public void draw() {
	for (UIElement e : elements)
		e.draw();
}	

void registerElement (UIElement element) {
	elements.add(element);
}
</code></pre>
<p>}[/code]</p>
<p><span class="bbcode-u"><span class="bbcode-b">VerticalSelectionGroup</span></span></p>
<p>[code=Java]package com.jamesmonger.gamekit.ui;</p>
<p>import com.jagex.runescape.GameFont;<br>
import com.jagex.runescape.RSApplet;<br>
import com.jagex.runescape.RSImageProducer;</p>
<p>public class VerticalSelectionGroup extends UIElement implements KeyboardListener {</p>
<pre><code>private int activeColor, inactiveColor;
private int x, y;
private String[] entries;
private int verticalPadding, horizontalPadding;
private GameFont font;

private int currentSelection;

public VerticalSelectionGroup() {		
	RSApplet.registerListener(ListenerType.KEY_LISTENER, this);
}

public VerticalSelectionGroup setPosition(int x, int y) {
	this.x = x;
	this.y = y;
	return this;
}

public VerticalSelectionGroup setActiveColor(int color) {
	this.activeColor = color;
	return this;
}

public VerticalSelectionGroup setInactiveColor(int color) {
	this.inactiveColor = color;
	return this;
}

public VerticalSelectionGroup setEntries(String[] entries) {
	this.entries = entries;
	return this;
}

public VerticalSelectionGroup setMargins(int vertical, int horizontal) {
	this.verticalPadding = vertical;
	this.horizontalPadding = horizontal;
	return this;
}

public VerticalSelectionGroup setFont(GameFont font) {
	this.font = font;
	return this;
}

@Override
public void draw() {
	RSImageProducer producer = new RSImageProducer(765, 503, RSApplet.gameFrame);
	producer.initDrawingArea();
	
	for (int i = 0; i &lt; entries.length; i++) {
		font.drawText(entries[i], 
				this.x + (this.horizontalPadding * i), 
				this.y + (this.verticalPadding * i), 
				(this.currentSelection == i) ? this.activeColor : this.inactiveColor);
	}
	
	producer.drawGraphics(0, RSApplet.gameGraphics, 0);
}

public void moveSelector(UIDirection direction) {
	switch (direction) {
	case UP:
		if (currentSelection - 1 &lt; 0) {
			currentSelection = entries.length - 1;
			return;
		}
		currentSelection--;
		break;
	case DOWN:
		if (currentSelection &gt; entries.length - 1 - 1) {
			currentSelection = 0;
			return;
		}
		currentSelection++;
		break;
	}
}

@Override
public void keyPressed(int keyCode) {
}

@Override
public void keyReleased(int keyCode) {
	if (keyCode == 38)
		moveSelector(UIDirection.UP);
	if (keyCode == 40)
		moveSelector(UIDirection.DOWN);
}
</code></pre>
<p>}[/code]</p>
<p><span class="bbcode-u"><span class="bbcode-b">LoginScreen</span></span></p>
<p>[code=Java]package com.jamesmonger.gamekit.ui;</p>
<p>import com.jagex.runescape.GameFont;</p>
<p>public class LoginScreen extends UIScreen {</p>
<pre><code>public void load() {
	GameFont font = GameFont.getFont("b12_full");
	
	VerticalSelectionGroup vse = new VerticalSelectionGroup()
			.setPosition(640, 400)
			.setActiveColor(0xFFFFFF)
			.setInactiveColor(0x444444)
			.setEntries(new String[]{"Continue", "New", "Load"})
			.setMargins(20, 0)
			.setFont(font);
	
	registerElement(vse);
}
</code></pre>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/graphics-api-naming/549954/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/graphics-api-naming/549954/3</link>
        <pubDate>Mon, 16 Feb 2015 22:41:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-549954-3</guid>
        <source url="https://forum.moparisthebest.com/t/graphics-api-naming/549954.rss">Graphics API naming</source>
      </item>
      <item>
        <title>Graphics API naming</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>What exactly do you want feedback on? You have like, two named types?<br>
VerticalSelectionGroup: Can’t really give feedback on this without knowing what it’s supposed to be.<br>
UIElement: I mean, it works. But I tend to prefer Component (CustomComponent, UIComponent, whatever you want if you dont want overlap)</p>
<p>However the design itself can’t be that good if login screen isnt an element tbh.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/graphics-api-naming/549954/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/graphics-api-naming/549954/2</link>
        <pubDate>Mon, 16 Feb 2015 22:35:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-549954-2</guid>
        <source url="https://forum.moparisthebest.com/t/graphics-api-naming/549954.rss">Graphics API naming</source>
      </item>
      <item>
        <title>Graphics API naming</title>
        <dc:creator><![CDATA[@Ambokile Ambokile]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ambokile">@Ambokile</a> wrote:</p>
          <blockquote>
              <p>I’m looking for some feedback on my graphics API, specifically the naming and styling of the API.</p>
<p>Here is the LoginScreen class, <span class="bbcode-i">load</span> is called when the screen is initialised and then <span class="bbcode-i">draw</span> is called whenever the screen needs to be drawn.</p>
<p>[code=Java]package com.jamesmonger.gamekit.ui;</p>
<p>import java.util.ArrayList;</p>
<p>import com.jagex.runescape.GameFont;</p>
<p>public class LoginScreen {</p>
<pre><code>ArrayList&lt;UIElement&gt; elements = new ArrayList&lt;UIElement&gt;();

public void load() {
	GameFont font = GameFont.getFont("b12_full");
	
	elements.add(
		new VerticalSelectionGroup()
			.setPosition(640, 400)
			.setActiveColor(0xFFFFFF)
			.setInactiveColor(0x444444)
			.setEntries(new String[]{"Continue", "New", "Load"})
			.setMargins(20, 0)
			.setFont(font)
	);
}

public void draw() {
	for (UIElement e : elements)
		e.draw();
}	
</code></pre>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/graphics-api-naming/549954/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/graphics-api-naming/549954/1</link>
        <pubDate>Mon, 16 Feb 2015 22:32:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-549954-1</guid>
        <source url="https://forum.moparisthebest.com/t/graphics-api-naming/549954.rss">Graphics API naming</source>
      </item>
  </channel>
</rss>
