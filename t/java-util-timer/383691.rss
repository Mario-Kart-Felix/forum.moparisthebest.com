<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>java.util.Timer</title>
    <link>https://forum.moparisthebest.com/t/java-util-timer/383691</link>
    <description>I am trying to refine a plugin I made for my CraftBukkit server. Basically I have scheduled an event in a java.util.Timer and that works fine. However, when I come to cancel the TimerTask to reschedule it with a different delay, it gives me the following error:
[code]Timer already cancelled.[/code]

I do not understand this, as I am not cancelling the actual Timer, only the TimerTask. Here is my code:
[code=java]public class Lottery {

    private Server instance;
    private Timer drawTimer = new Timer();
    private LotteryDrawTimerTask drawTimerTask = new LotteryDrawTimerTask(this);

    public Lottery(Server instance, int drawDelay) {
        this.instance = instance;
        drawTimer.schedule(drawTimerTask, drawDelay, drawDelay);
    }

    public void setDrawDelay(int drawDelay) {
        try {
            drawTimerTask.cancel();
            drawTimer.schedule(drawTimerTask, drawDelay, drawDelay);
        } catch (Exception ex) {
            System.err.println(&quot;An error has occured in the Lottery plugin!\n&quot;
                    + ex.getMessage());
        }
    }

    public void draw() {
        instance.broadcastMessage(&quot;Lottery Draw&quot;);
    }
}

class LotteryDrawTimerTask extends TimerTask {

    private Lottery instance;

    public LotteryDrawTimerTask(Lottery instance) {
        this.instance = instance;
    }

    @Override
    public void run() {
        instance.draw();
    }
}[/code]

Any help would be appreciated  :(.</description>
    
    <lastBuildDate>Wed, 23 Feb 2011 23:21:42 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/java-util-timer/383691.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>java.util.Timer</title>
        <dc:creator><![CDATA[@ollie123 Ollie123]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ollie123">@ollie123</a> wrote:</p>
          <blockquote>
              <p>Well I examined the code of the Timer class, and found out that the task could not be run again if it had already been cancelled. So I made my own modified version of the Timer class to only reject tasks if they had already been scheduled.</p>
<p>It works :D.</p>
<p>Thanks for the help zyle <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-util-timer/383691/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-util-timer/383691/3</link>
        <pubDate>Wed, 23 Feb 2011 23:21:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-383691-3</guid>
        <source url="https://forum.moparisthebest.com/t/java-util-timer/383691.rss">java.util.Timer</source>
      </item>
      <item>
        <title>java.util.Timer</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>[quote=“ollie123, post:1, topic:383691”]I am trying to refine a plugin I made for my CraftBukkit server. Basically I have scheduled an event in a java.util.Timer and that works fine. However, when I come to cancel the TimerTask to reschedule it with a different delay, it gives me the following error:</p>
<pre><code class="lang-auto">Timer already cancelled.</code></pre>
<p>I do not understand this, as I am not cancelling the actual Timer, only the TimerTask. Here is my code:</p>
<p>[code=java]public class Lottery {</p>
<pre><code>private Server instance;
private Timer drawTimer = new Timer();
private LotteryDrawTimerTask drawTimerTask = new LotteryDrawTimerTask(this);

public Lottery(Server instance, int drawDelay) {
    this.instance = instance;
    drawTimer.schedule(drawTimerTask, drawDelay, drawDelay);
}

public void setDrawDelay(int drawDelay) {
    try {
        drawTimerTask.cancel();
        drawTimer.schedule(drawTimerTask, drawDelay, drawDelay);
    } catch (Exception ex) {
        System.err.println("An error has occured in the Lottery plugin!\n"
                + ex.getMessage());
    }
}

public void draw() {
    instance.broadcastMessage("Lottery Draw");
}
</code></pre>
<p>}</p>
<p>class LotteryDrawTimerTask extends TimerTask {</p>
<pre><code>private Lottery instance;

public LotteryDrawTimerTask(Lottery instance) {
    this.instance = instance;
}

@Override
public void run() {
    instance.draw();
}
</code></pre>
<p>}[/code]</p>
<p>Any help would be appreciated  :(.[/quote]</p>
<p>Could it be that when you schedule the task, you set the delay and the period to the same value? I’m not sure why it would matter but it may be a possibility.</p>
<p>EDIT:</p>
<p>Scratch that;</p>
<p>[quote="“Java API”"]public boolean cancel()</p>
<pre><code>Cancels this timer task. If the task has been scheduled for one-time execution and has not yet run, or has not yet been scheduled, it will never run. [b]If the task has been scheduled for repeated execution, it will never run again. (If the task is running when this call occurs, the task will run to completion, but will never run again.)[/b]

Note that calling this method from within the run method of a repeating timer task absolutely guarantees that the timer task will not run again.

This method may be called repeatedly; the second and subsequent calls have no effect.[/quote]
</code></pre>
<p>It’s not clear if it means that the particular instance will never run again, or if it means that it will simply stop executing, and remove itself from the Timer’s TimerTask list.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-util-timer/383691/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-util-timer/383691/2</link>
        <pubDate>Wed, 23 Feb 2011 22:46:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-383691-2</guid>
        <source url="https://forum.moparisthebest.com/t/java-util-timer/383691.rss">java.util.Timer</source>
      </item>
      <item>
        <title>java.util.Timer</title>
        <dc:creator><![CDATA[@ollie123 Ollie123]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ollie123">@ollie123</a> wrote:</p>
          <blockquote>
              <p>I am trying to refine a plugin I made for my CraftBukkit server. Basically I have scheduled an event in a java.util.Timer and that works fine. However, when I come to cancel the TimerTask to reschedule it with a different delay, it gives me the following error:</p>
<pre><code class="lang-auto">Timer already cancelled.</code></pre>
<p>I do not understand this, as I am not cancelling the actual Timer, only the TimerTask. Here is my code:</p>
<p>[code=java]public class Lottery {</p>
<pre><code>private Server instance;
private Timer drawTimer = new Timer();
private LotteryDrawTimerTask drawTimerTask = new LotteryDrawTimerTask(this);

public Lottery(Server instance, int drawDelay) {
    this.instance = instance;
    drawTimer.schedule(drawTimerTask, drawDelay, drawDelay);
}

public void setDrawDelay(int drawDelay) {
    try {
        drawTimerTask.cancel();
        drawTimer.schedule(drawTimerTask, drawDelay, drawDelay);
    } catch (Exception ex) {
        System.err.println("An error has occured in the Lottery plugin!\n"
                + ex.getMessage());
    }
}

public void draw() {
    instance.broadcastMessage("Lottery Draw");
}
</code></pre>
<p>}</p>
<p>class LotteryDrawTimerTask extends TimerTask {</p>
<pre><code>private Lottery instance;

public LotteryDrawTimerTask(Lottery instance) {
    this.instance = instance;
}

@Override
public void run() {
    instance.draw();
}
</code></pre>
<p>}[/code]</p>
<p>Any help would be appreciated  :(.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-util-timer/383691/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-util-timer/383691/1</link>
        <pubDate>Wed, 23 Feb 2011 22:38:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-383691-1</guid>
        <source url="https://forum.moparisthebest.com/t/java-util-timer/383691.rss">java.util.Timer</source>
      </item>
  </channel>
</rss>
