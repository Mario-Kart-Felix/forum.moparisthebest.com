<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Colour conversion for the 317 client</title>
    <link>https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300</link>
    <description>How does one convert a hex colour value into a format that the standard 317 client can recognise? I read somewhere on rune-server that they use a modified version of HSB and posted a method in order to get the correct colour

[code=java]
    public static int[] hexToHSB(int hex) {
        return new int[]{((hex &amp; 0xfc00) &gt;&gt; 10), ((hex &amp; 0x380) &gt;&gt; 7), (hex &amp; 0x7f)};
    }
[/code]

Didn&#39;t seem to work. If anyone has any information on this it&#39;d be appreciated.

Edit: Apologies if this is in the wrong section.</description>
    
    <lastBuildDate>Fri, 30 Jan 2015 02:14:52 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Colour conversion for the 317 client</title>
        <dc:creator><![CDATA[@silabsoft RuneAgent]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silabsoft">@silabsoft</a> wrote:</p>
          <blockquote>
              <p>realistically you will need to do either a conversion or a validation you have to remember that Jagex uses in house software the palette is proprietary therefore no modeling software will have this palette specifically. It’s probably possible to create a plugin for one of the modeling softwares to have this palette available. At the end of the day you are going to be converting your model to the rsformat it can run pass color conversion at the same time.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300/13</link>
        <pubDate>Fri, 30 Jan 2015 02:14:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-549300-13</guid>
        <source url="https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300.rss">Colour conversion for the 317 client</source>
      </item>
      <item>
        <title>Colour conversion for the 317 client</title>
        <dc:creator><![CDATA[@n10si_t n10si t]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/n10si_t">@n10si_t</a> wrote:</p>
          <blockquote>
              <p>[quote=“Miss Silabsoft, post:5, topic:549300”]you could bruteforce it, take the color array compare your value to find the color that’s closest to the value and return.</p>
<p>[code]<br>
public class BruteForceColorFinder {</p>
<pre><code>private int[] palette;

public void createPalette() {
    palette = new int[0x10000];
    int hsl = 0;
    for (int k = 0; k &lt; 512; k++) {
        double d1 = k / 8 / 64D + 0.0078125D;
        double d2 = (k &amp; 7) / 8D + 0.0625D;
        for (int k1 = 0; k1 &lt; 128; k1++) {
            double d3 = k1 / 128D;
            double r = d3;
            double g = d3;
            double b = d3;
            if (d2 != 0.0D) {
                double d7;
                if (d3 &lt; 0.5D) {
                    d7 = d3 * (1.0D + d2);
                } else {
                    d7 = (d3 + d2) - d3 * d2;
                }
                double d8 = 2D * d3 - d7;
                double d9 = d1 + 0.33333333333333331D;
                if (d9 &gt; 1.0D) {
                    d9--;
                }
                double d10 = d1;
                double d11 = d1 - 0.33333333333333331D;
                if (d11 &lt; 0.0D) {
                    d11++;
                }
                if (6D * d9 &lt; 1.0D) {
                    r = d8 + (d7 - d8) * 6D * d9;
                } else if (2D * d9 &lt; 1.0D) {
                    r = d7;
                } else if (3D * d9 &lt; 2D) {
                    r = d8 + (d7 - d8) * (0.66666666666666663D - d9) * 6D;
                } else {
                    r = d8;
                }
                if (6D * d10 &lt; 1.0D) {
                    g = d8 + (d7 - d8) * 6D * d10;
                } else if (2D * d10 &lt; 1.0D) {
                    g = d7;
                } else if (3D * d10 &lt; 2D) {
                    g = d8 + (d7 - d8) * (0.66666666666666663D - d10) * 6D;
                } else {
                    g = d8;
                }
                if (6D * d11 &lt; 1.0D) {
                    b = d8 + (d7 - d8) * 6D * d11;
                } else if (2D * d11 &lt; 1.0D) {
                    b = d7;
                } else if (3D * d11 &lt; 2D) {
                    b = d8 + (d7 - d8) * (0.66666666666666663D - d11) * 6D;
                } else {
                    b = d8;
                }
            }
            int byteR = (int) (r * 256D);
            int byteG = (int) (g * 256D);
            int byteB = (int) (b * 256D);
            int rgb = (byteR &lt;&lt; 16) + (byteG &lt;&lt; 8) + byteB;
            if (rgb == 0) {
                rgb = 1;
            }
            palette[hsl++] = rgb;
        }
    }
}

public BruteForceColorFinder() {
    this.createPalette();
}

public static void main(String args[]) {
    BruteForceColorFinder bfc = new BruteForceColorFinder();
    Color color = Color.BLACK;
    System.out.println(bfc.findBestMatch(color.getRGB()));
    color = hex2Rgb("#efefef");
    System.out.println(bfc.findBestMatch(color.getRGB()));
}

public int findBestMatch(int color) {
    int r = (color &gt;&gt; 16) &amp; 0xFF;
    int g = (color &gt;&gt; 8) &amp; 0xFF;
    int b = color &amp; 0xFF;
    int rgb = (r &lt;&lt; 16) + (g &lt;&lt; 8) + b;
    int best = 0;
    int idx = 0;
    for (int c = 1; c &lt; palette.length; c++) {
        int temp = Math.abs(palette[c] - rgb);
        if (temp == 0) {
            return palette[c];
        }
        if (best == 0 || best &gt; temp) {
            idx = c;
            best = temp;
        }
    }
    return palette[idx];
}

public static Color hex2Rgb(String colorStr) {
    return new Color(
            Integer.valueOf(colorStr.substring(1, 3), 16),
            Integer.valueOf(colorStr.substring(3, 5), 16),
            Integer.valueOf(colorStr.substring(5, 7), 16));
}
</code></pre>
<p>}</p>
<p>[/code][/quote]</p>
<p>This horrified me. Is this really the best way to do it? It seems so… over the top</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300/12</link>
        <pubDate>Fri, 30 Jan 2015 01:57:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-549300-12</guid>
        <source url="https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300.rss">Colour conversion for the 317 client</source>
      </item>
      <item>
        <title>Colour conversion for the 317 client</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>I don’t think it’s HSB, but rather HSL.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300/11</link>
        <pubDate>Wed, 28 Jan 2015 17:02:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-549300-11</guid>
        <source url="https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300.rss">Colour conversion for the 317 client</source>
      </item>
      <item>
        <title>Colour conversion for the 317 client</title>
        <dc:creator><![CDATA[@silabsoft RuneAgent]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silabsoft">@silabsoft</a> wrote:</p>
          <blockquote>
              <p>[quote=“ohokay, post:9, topic:549300”][quote author=Miss Silabsoft link=topic=668204.msg4468878#msg4468878 date=1421802400]<br>
you could bruteforce it, take the color array compare your value to find the color that’s closest to the value and return.</p>
<pre><code class="lang-auto">public class BruteForceColorFinder {

    private int[] palette;

    public void createPalette() {
        palette = new int[0x10000];
        int hsl = 0;
        for (int k = 0; k &lt; 512; k++) {
            double d1 = k / 8 / 64D + 0.0078125D;
            double d2 = (k &amp; 7) / 8D + 0.0625D;
            for (int k1 = 0; k1 &lt; 128; k1++) {
                double d3 = k1 / 128D;
                double r = d3;
                double g = d3;
                double b = d3;
                if (d2 != 0.0D) {
                    double d7;
                    if (d3 &lt; 0.5D) {
                        d7 = d3 * (1.0D + d2);
                    } else {
                        d7 = (d3 + d2) - d3 * d2;
                    }
                    double d8 = 2D * d3 - d7;
                    double d9 = d1 + 0.33333333333333331D;
                    if (d9 &gt; 1.0D) {
                        d9--;
                    }
                    double d10 = d1;
                    double d11 = d1 - 0.33333333333333331D;
                    if (d11 &lt; 0.0D) {
                        d11++;
                    }
                    if (6D * d9 &lt; 1.0D) {
                        r = d8 + (d7 - d8) * 6D * d9;
                    } else if (2D * d9 &lt; 1.0D) {
                        r = d7;
                    } else if (3D * d9 &lt; 2D) {
                        r = d8 + (d7 - d8) * (0.66666666666666663D - d9) * 6D;
                    } else {
                        r = d8;
                    }
                    if (6D * d10 &lt; 1.0D) {
                        g = d8 + (d7 - d8) * 6D * d10;
                    } else if (2D * d10 &lt; 1.0D) {
                        g = d7;
                    } else if (3D * d10 &lt; 2D) {
                        g = d8 + (d7 - d8) * (0.66666666666666663D - d10) * 6D;
                    } else {
                        g = d8;
                    }
                    if (6D * d11 &lt; 1.0D) {
                        b = d8 + (d7 - d8) * 6D * d11;
                    } else if (2D * d11 &lt; 1.0D) {
                        b = d7;
                    } else if (3D * d11 &lt; 2D) {
                        b = d8 + (d7 - d8) * (0.66666666666666663D - d11) * 6D;
                    } else {
                        b = d8;
                    }
                }
                int byteR = (int) (r * 256D);
                int byteG = (int) (g * 256D);
                int byteB = (int) (b * 256D);
                int rgb = (byteR &lt;&lt; 16) + (byteG &lt;&lt; 8) + byteB;
                if (rgb == 0) {
                    rgb = 1;
                }
                palette[hsl++] = rgb;
            }
        }
    }

    public BruteForceColorFinder() {
        this.createPalette();
    }

    public static void main(String args[]) {
        BruteForceColorFinder bfc = new BruteForceColorFinder();
        Color color = Color.BLACK;
        System.out.println(bfc.findBestMatch(color.getRGB()));
        color = hex2Rgb("#efefef");
        System.out.println(bfc.findBestMatch(color.getRGB()));
    }

    public int findBestMatch(int color) {
        int r = (color &gt;&gt; 16) &amp; 0xFF;
        int g = (color &gt;&gt; 8) &amp; 0xFF;
        int b = color &amp; 0xFF;
        int rgb = (r &lt;&lt; 16) + (g &lt;&lt; 8) + b;
        int best = 0;
        int idx = 0;
        for (int c = 1; c &lt; palette.length; c++) {
            int temp = Math.abs(palette[c] - rgb);
            if (temp == 0) {
                return palette[c];
            }
            if (best == 0 || best &gt; temp) {
                idx = c;
                best = temp;
            }
        }
        return palette[idx];
    }

    public static Color hex2Rgb(String colorStr) {
        return new Color(
                Integer.valueOf(colorStr.substring(1, 3), 16),
                Integer.valueOf(colorStr.substring(3, 5), 16),
                Integer.valueOf(colorStr.substring(5, 7), 16));
    }
}

</code></pre>
<p>[/quote]</p>
<p>From what I’ve tested, this seems to do the trick, thank you  :)[/quote]</p>
<p>That’s cool if you ever find a better method feel free to post it here.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300/10</link>
        <pubDate>Tue, 27 Jan 2015 20:03:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-549300-10</guid>
        <source url="https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300.rss">Colour conversion for the 317 client</source>
      </item>
      <item>
        <title>Colour conversion for the 317 client</title>
        <dc:creator><![CDATA[@ohokay ohokay]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ohokay">@ohokay</a> wrote:</p>
          <blockquote>
              <p>[quote=“Miss Silabsoft, post:5, topic:549300”]you could bruteforce it, take the color array compare your value to find the color that’s closest to the value and return.</p>
<p>[code]<br>
public class BruteForceColorFinder {</p>
<pre><code>private int[] palette;

public void createPalette() {
    palette = new int[0x10000];
    int hsl = 0;
    for (int k = 0; k &lt; 512; k++) {
        double d1 = k / 8 / 64D + 0.0078125D;
        double d2 = (k &amp; 7) / 8D + 0.0625D;
        for (int k1 = 0; k1 &lt; 128; k1++) {
            double d3 = k1 / 128D;
            double r = d3;
            double g = d3;
            double b = d3;
            if (d2 != 0.0D) {
                double d7;
                if (d3 &lt; 0.5D) {
                    d7 = d3 * (1.0D + d2);
                } else {
                    d7 = (d3 + d2) - d3 * d2;
                }
                double d8 = 2D * d3 - d7;
                double d9 = d1 + 0.33333333333333331D;
                if (d9 &gt; 1.0D) {
                    d9--;
                }
                double d10 = d1;
                double d11 = d1 - 0.33333333333333331D;
                if (d11 &lt; 0.0D) {
                    d11++;
                }
                if (6D * d9 &lt; 1.0D) {
                    r = d8 + (d7 - d8) * 6D * d9;
                } else if (2D * d9 &lt; 1.0D) {
                    r = d7;
                } else if (3D * d9 &lt; 2D) {
                    r = d8 + (d7 - d8) * (0.66666666666666663D - d9) * 6D;
                } else {
                    r = d8;
                }
                if (6D * d10 &lt; 1.0D) {
                    g = d8 + (d7 - d8) * 6D * d10;
                } else if (2D * d10 &lt; 1.0D) {
                    g = d7;
                } else if (3D * d10 &lt; 2D) {
                    g = d8 + (d7 - d8) * (0.66666666666666663D - d10) * 6D;
                } else {
                    g = d8;
                }
                if (6D * d11 &lt; 1.0D) {
                    b = d8 + (d7 - d8) * 6D * d11;
                } else if (2D * d11 &lt; 1.0D) {
                    b = d7;
                } else if (3D * d11 &lt; 2D) {
                    b = d8 + (d7 - d8) * (0.66666666666666663D - d11) * 6D;
                } else {
                    b = d8;
                }
            }
            int byteR = (int) (r * 256D);
            int byteG = (int) (g * 256D);
            int byteB = (int) (b * 256D);
            int rgb = (byteR &lt;&lt; 16) + (byteG &lt;&lt; 8) + byteB;
            if (rgb == 0) {
                rgb = 1;
            }
            palette[hsl++] = rgb;
        }
    }
}

public BruteForceColorFinder() {
    this.createPalette();
}

public static void main(String args[]) {
    BruteForceColorFinder bfc = new BruteForceColorFinder();
    Color color = Color.BLACK;
    System.out.println(bfc.findBestMatch(color.getRGB()));
    color = hex2Rgb("#efefef");
    System.out.println(bfc.findBestMatch(color.getRGB()));
}

public int findBestMatch(int color) {
    int r = (color &gt;&gt; 16) &amp; 0xFF;
    int g = (color &gt;&gt; 8) &amp; 0xFF;
    int b = color &amp; 0xFF;
    int rgb = (r &lt;&lt; 16) + (g &lt;&lt; 8) + b;
    int best = 0;
    int idx = 0;
    for (int c = 1; c &lt; palette.length; c++) {
        int temp = Math.abs(palette[c] - rgb);
        if (temp == 0) {
            return palette[c];
        }
        if (best == 0 || best &gt; temp) {
            idx = c;
            best = temp;
        }
    }
    return palette[idx];
}

public static Color hex2Rgb(String colorStr) {
    return new Color(
            Integer.valueOf(colorStr.substring(1, 3), 16),
            Integer.valueOf(colorStr.substring(3, 5), 16),
            Integer.valueOf(colorStr.substring(5, 7), 16));
}
</code></pre>
<p>}</p>
<p>[/code][/quote]</p>
<p>From what I’ve tested, this seems to do the trick, thank you  <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300/9</link>
        <pubDate>Mon, 26 Jan 2015 02:59:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-549300-9</guid>
        <source url="https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300.rss">Colour conversion for the 317 client</source>
      </item>
      <item>
        <title>Colour conversion for the 317 client</title>
        <dc:creator><![CDATA[@sk8rdude461 sk8rdude461]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sk8rdude461">@sk8rdude461</a> wrote:</p>
          <blockquote>
              <p>[quote=“RandQm, post:7, topic:549300”]Looking how you guys having difficulties with this I’m probably thinking about something else but when I need colors.<br>
But this always worked for me where I used it, replacing # by 0x</p>
<p>e.g. I wanted my sky to be blue, skyblue is in hex: <span class="hashtag">#91FDFF</span><br>
In my pixels drawing method I put 0x91FDFF and It will give me blue sky.[/quote]<br>
Your thinking right, but you’re just in the wrong area <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"><br>
We’re talking about the colors you would use for a model, not the colors you use when drawing the game screen/etc.<br>
For example, you can see where the Model class reads the triangle colors here:</p>
<p><code>		for (int i12 = 0; i12 &lt; numTriangles; i12++) {
			triangleColours2[i12] = nc1.readUnsignedWord();
			if (l1 == 1) {
				anIntArray1637[i12] = nc2.readSignedByte();
				if (anIntArray1637[i12] == 2)
					triangleColours2[i12] = 65535;
				anIntArray1637[i12] = 0;
			}
			if (i2 == 255) {
				anIntArray1638[i12] = nc3.readSignedByte();
			}
			if (j2 == 1) {
				anIntArray1639[i12] = nc4.readSignedByte();
				if (anIntArray1639[i12] &lt; 0)
					anIntArray1639[i12] = (256 + anIntArray1639[i12]);
			}
			if (k2 == 1)
				anIntArray1656[i12] = nc5.readUnsignedByte();
			if (l2 == 1)
				D[i12] = (short) (nc6.readUnsignedWord() - 1);
			if (x != null)
				if (D[i12] != -1)
					x[i12] = (byte) (nc7.readUnsignedByte() - 1);
				else
					x[i12] = -1;
		}</code><br>
It’s not the same as just using a hex value, sadly.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300/8</link>
        <pubDate>Sun, 25 Jan 2015 19:16:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-549300-8</guid>
        <source url="https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300.rss">Colour conversion for the 317 client</source>
      </item>
      <item>
        <title>Colour conversion for the 317 client</title>
        <dc:creator><![CDATA[@RandQm RandQm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/randqm">@RandQm</a> wrote:</p>
          <blockquote>
              <p>Looking how you guys having difficulties with this I’m probably thinking about something else but when I need colors.<br>
But this always worked for me where I used it, replacing # by 0x</p>
<p>e.g. I wanted my sky to be blue, skyblue is in hex: <span class="hashtag">#91FDFF</span><br>
In my pixels drawing method I put 0x91FDFF and It will give me blue sky.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300/7</link>
        <pubDate>Sun, 25 Jan 2015 18:04:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-549300-7</guid>
        <source url="https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300.rss">Colour conversion for the 317 client</source>
      </item>
      <item>
        <title>Colour conversion for the 317 client</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>^ I like this idea.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300/6</link>
        <pubDate>Wed, 21 Jan 2015 05:22:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-549300-6</guid>
        <source url="https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300.rss">Colour conversion for the 317 client</source>
      </item>
      <item>
        <title>Colour conversion for the 317 client</title>
        <dc:creator><![CDATA[@silabsoft RuneAgent]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silabsoft">@silabsoft</a> wrote:</p>
          <blockquote>
              <p>you could bruteforce it, take the color array compare your value to find the color that’s closest to the value and return.</p>
<pre><code class="lang-auto">public class BruteForceColorFinder {

    private int[] palette;

    public void createPalette() {
        palette = new int[0x10000];
        int hsl = 0;
        for (int k = 0; k &lt; 512; k++) {
            double d1 = k / 8 / 64D + 0.0078125D;
            double d2 = (k &amp; 7) / 8D + 0.0625D;
            for (int k1 = 0; k1 &lt; 128; k1++) {
                double d3 = k1 / 128D;
                double r = d3;
                double g = d3;
                double b = d3;
                if (d2 != 0.0D) {
                    double d7;
                    if (d3 &lt; 0.5D) {
                        d7 = d3 * (1.0D + d2);
                    } else {
                        d7 = (d3 + d2) - d3 * d2;
                    }
                    double d8 = 2D * d3 - d7;
                    double d9 = d1 + 0.33333333333333331D;
                    if (d9 &gt; 1.0D) {
                        d9--;
                    }
                    double d10 = d1;
                    double d11 = d1 - 0.33333333333333331D;
                    if (d11 &lt; 0.0D) {
                        d11++;
                    }
                    if (6D * d9 &lt; 1.0D) {
                        r = d8 + (d7 - d8) * 6D * d9;
                    } else if (2D * d9 &lt; 1.0D) {
                        r = d7;
                    } else if (3D * d9 &lt; 2D) {
                        r = d8 + (d7 - d8) * (0.66666666666666663D - d9) * 6D;
                    } else {
                        r = d8;
                    }
                    if (6D * d10 &lt; 1.0D) {
                        g = d8 + (d7 - d8) * 6D * d10;
                    } else if (2D * d10 &lt; 1.0D) {
                        g = d7;
                    } else if (3D * d10 &lt; 2D) {
                        g = d8 + (d7 - d8) * (0.66666666666666663D - d10) * 6D;
                    } else {
                        g = d8;
                    }
                    if (6D * d11 &lt; 1.0D) {
                        b = d8 + (d7 - d8) * 6D * d11;
                    } else if (2D * d11 &lt; 1.0D) {
                        b = d7;
                    } else if (3D * d11 &lt; 2D) {
                        b = d8 + (d7 - d8) * (0.66666666666666663D - d11) * 6D;
                    } else {
                        b = d8;
                    }
                }
                int byteR = (int) (r * 256D);
                int byteG = (int) (g * 256D);
                int byteB = (int) (b * 256D);
                int rgb = (byteR &lt;&lt; 16) + (byteG &lt;&lt; 8) + byteB;
                if (rgb == 0) {
                    rgb = 1;
                }
                palette[hsl++] = rgb;
            }
        }
    }

    public BruteForceColorFinder() {
        this.createPalette();
    }

    public static void main(String args[]) {
        BruteForceColorFinder bfc = new BruteForceColorFinder();
        Color color = Color.BLACK;
        System.out.println(bfc.findBestMatch(color.getRGB()));
        color = hex2Rgb("#efefef");
        System.out.println(bfc.findBestMatch(color.getRGB()));
    }

    public int findBestMatch(int color) {
        int r = (color &gt;&gt; 16) &amp; 0xFF;
        int g = (color &gt;&gt; 8) &amp; 0xFF;
        int b = color &amp; 0xFF;
        int rgb = (r &lt;&lt; 16) + (g &lt;&lt; 8) + b;
        int best = 0;
        int idx = 0;
        for (int c = 1; c &lt; palette.length; c++) {
            int temp = Math.abs(palette[c] - rgb);
            if (temp == 0) {
                return palette[c];
            }
            if (best == 0 || best &gt; temp) {
                idx = c;
                best = temp;
            }
        }
        return palette[idx];
    }

    public static Color hex2Rgb(String colorStr) {
        return new Color(
                Integer.valueOf(colorStr.substring(1, 3), 16),
                Integer.valueOf(colorStr.substring(3, 5), 16),
                Integer.valueOf(colorStr.substring(5, 7), 16));
    }
}

</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300/5</link>
        <pubDate>Wed, 21 Jan 2015 01:06:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-549300-5</guid>
        <source url="https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300.rss">Colour conversion for the 317 client</source>
      </item>
      <item>
        <title>Colour conversion for the 317 client</title>
        <dc:creator><![CDATA[@sk8rdude461 sk8rdude461]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sk8rdude461">@sk8rdude461</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="3" data-topic="549300">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/ohokay/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> ohokay:</div>
<blockquote>
<p>You can grab the model’s colour through Metasequoia, just not sure how you’d convert the new colour so it’s recognised by the client.</p>
</blockquote>
</aside>
<p>I was using the client colors… if that makes sense. Like<br>
926 is the red on a red partyhat. So I was trying to convert that into RGB. Because if I could make that into RGB, I could do the same steps backwards to get any RGB format into the client format.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300/4</link>
        <pubDate>Tue, 20 Jan 2015 22:57:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-549300-4</guid>
        <source url="https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300.rss">Colour conversion for the 317 client</source>
      </item>
      <item>
        <title>Colour conversion for the 317 client</title>
        <dc:creator><![CDATA[@ohokay ohokay]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ohokay">@ohokay</a> wrote:</p>
          <blockquote>
              <p>You can grab the model’s colour through Metasequoia, just not sure how you’d convert the new colour so it’s recognised by the client.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300/3</link>
        <pubDate>Tue, 20 Jan 2015 22:48:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-549300-3</guid>
        <source url="https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300.rss">Colour conversion for the 317 client</source>
      </item>
      <item>
        <title>Colour conversion for the 317 client</title>
        <dc:creator><![CDATA[@sk8rdude461 sk8rdude461]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sk8rdude461">@sk8rdude461</a> wrote:</p>
          <blockquote>
              <p><a href="https://www.moparisthebest.com/smf/index.php/topic,667967.0.html" class="onebox" target="_blank" rel="nofollow noopener">https://www.moparisthebest.com/smf/index.php/topic,667967.0.html</a></p>
<p>I was having the same issue… I can’t seem to figure it out to the T…</p>
<p><a href="http://www.rune-server.org/runescape-development/rs-503-client-server/downloads/518266-ide-model-colour-ids.html" class="onebox" target="_blank" rel="nofollow noopener">http://www.rune-server.org/runescape-development/rs-503-client-server/downloads/518266-ide-model-colour-ids.html</a></p>
<p>This guy used some tool to get the colors, but I don’t really know if he got the numbers from existing models or just guessed and etc…</p>
<p>This is what I was testing:</p>
<p><code>		int h = 926;
		int rgb = h;
		rgb = (rgb &lt;&lt; 8) + 0;
		rgb = (rgb &lt;&lt; 8) + 0;
		System.out.println("" + rgb);</code><br>
And I believe h was a red-color I found in the client.<br>
I was trying to convert it from the value to RGB… if it worked that way I could do it the other way around and, yeah.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300/2</link>
        <pubDate>Tue, 20 Jan 2015 22:42:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-549300-2</guid>
        <source url="https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300.rss">Colour conversion for the 317 client</source>
      </item>
      <item>
        <title>Colour conversion for the 317 client</title>
        <dc:creator><![CDATA[@ohokay ohokay]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ohokay">@ohokay</a> wrote:</p>
          <blockquote>
              <p>How does one convert a hex colour value into a format that the standard 317 client can recognise? I read somewhere on rune-server that they use a modified version of HSB and posted a method in order to get the correct colour</p>
<pre><code class="lang-auto">    public static int[] hexToHSB(int hex) {
        return new int[]{((hex &amp; 0xfc00) &gt;&gt; 10), ((hex &amp; 0x380) &gt;&gt; 7), (hex &amp; 0x7f)};
    }</code></pre>
<p>Didn’t seem to work. If anyone has any information on this it’d be appreciated.</p>
<p>Edit: Apologies if this is in the wrong section.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300/1</link>
        <pubDate>Tue, 20 Jan 2015 22:32:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-549300-1</guid>
        <source url="https://forum.moparisthebest.com/t/colour-conversion-for-the-317-client/549300.rss">Colour conversion for the 317 client</source>
      </item>
  </channel>
</rss>
