<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Mining help</title>
    <link>https://forum.moparisthebest.com/t/mining-help/439440</link>
    <description>i need help with insidiax mining, i want it so that the rocks do not have to respawn at all. if anyone can help me please do. here&#39;s the code:
[code]
package server.model.players.skills;

import server.model.players.*;
import server.Config;
import server.util.Misc;
import java.util.Random;
import server.event.*;
import server.model.objects.Object;
import server.Server;

/**
* @Author Null++
*/

public class Mining {
	
	private Client c;
	
	public final int[][] Pick_Settings = {
		{1265, 1, 1, 6753}, //Bronze
		{1267, 1, 2, 6754}, //Iron
		{1269, 6, 3, 6755}, //Steel
		{1271, 31, 5, 6756}, //Addy
		{1273, 21, 4, 6757}, //Mithril
		{1275, 41, 6, 6752}, //Rune
		{15259, 61, 7, 12188}, //Dragon
		{13661, 41, 7, 10222} //Adze
	};



	public int[] gemId = {
										228,1437,
										1623,1621,
										1623,1619,
										1617,1631};
	
	Random random = new Random(); 
	
	
	public int[][] Rock_Settings = {
		{2091, 1, 630, 3, 436}, //Copper
		{2095, 1, 630, 3, 438}, //Tin
		{2093, 15, 1225, 7, 440}, //Iron
		{2097, 30, 1750, 38, 453}, //Coal
		{2103, 55, 2800, 155, 447}, //Mithril
		{2105, 70, 3325, 315, 449}, //Addy
		{2107, 85, 5115, 970, 451}, //Rune
		{2090, 1, 630, 3, 436}, //Copper
		{2094, 1, 630, 3, 438}, //Tin
		{2092, 15, 1225, 7, 440}, //Iron
		{2096, 30, 1750, 38, 453}, //Coal
		{2102, 55, 2800, 155, 447}, //Mithril
		{2104, 70, 3325, 315, 449}, //Addy
		{2106, 85, 4375, 970, 451}, //Rune
		{2100, 20, 1400, 78, 442}, //Silver
		{2101, 20, 1400, 78, 442}, //Silver
		{2098, 40, 2275, 78, 444}, //Gold
		{2099, 40, 2275, 78, 444}, //Gold
		{2111, 15, 1225, 7, 18338} //Gem
	};
	
	public Mining(Client c) {
		this.c = c;
	}
	
	int a = -1;
	
	public void startMining(final int j, final int x, final int y, final int type) {
		if (c.isMining)
			return;
		if (c.mining)
			return;
		int miningLevel = c.playerLevel[c.playerMining] ;
		a = -1;
		c.turnPlayerTo(x, y);
		if (Rock_Settings[j][1] &gt; miningLevel) {
			c.sendMessage(&quot;You need a Mining level of &quot; + Rock_Settings[j][1] + &quot; to mine this rock.&quot;);
			return;
		}
		for (int i = 0; i &lt; Pick_Settings.length; i++) {
			if (c.getItems().playerHasItem(Pick_Settings[i][0]) || c.playerEquipment[c.playerWeapon] == Pick_Settings[i][0]) {
				if (Pick_Settings[i][1] &lt;= miningLevel) {
					a = i;
				}
			}
		}
		if (a == -1) {
			c.sendMessage(&quot;You need a pickaxe to mine this rock.&quot;);
			return;
		}
		if (c.getItems().freeSlots() &lt; 1) {
			c.sendMessage(&quot;You do not have enough inventory slots to do that.&quot;);
			return;
		}
		c.startAnimation(Pick_Settings[a][3]);
		c.isMining = true;
		c.rockX = x;
		c.rockY = y;
		c.mining = true;
		CycleEventHandler.getSingleton().addEvent(c, new CycleEvent() {
			@Override
			public void execute(CycleEventContainer container) {
				if (!c.isMining) {
					container.stop();
					c.startAnimation(65535);
					return;
				}
				if (c.isMining) {
					c.getItems().addItem(Rock_Settings[j][4], 1);
					c.getPA().addSkillXP(Rock_Settings[j][2], c.playerMining);
				}
				if (c.getItems().freeSlots() &lt; 1) {
					c.sendMessage(&quot;You have ran out of inventory slots.&quot;);
					container.stop();
				}
				mineRock(Rock_Settings[j][3], x, y, type, Rock_Settings[j][0]);
				c.isMining = false;
				container.stop();
			}
			@Override
			public void stop() {
				c.getPA().closeAllWindows();
				c.startAnimation(65535);
				c.isMining = false;
				c.rockX = 0;
				c.rockY = 0;
				c.mining = false;
				return;
			}
		}, getTimer(j, a, miningLevel));
	}

	public int getTimer(int b, int c, int level) {
		double timer = (int)((Rock_Settings[b][1]  * 2) + 20 + Misc.random(20))-((Pick_Settings[c][2] * (Pick_Settings[c][2] * 0.75)) + level);
		if (timer &lt; 2.0) {
			return 2;
		} else {
			return (int)timer;
		}
	}

	public void mineRock(int respawnTime, int x, int y, int type, int i) {
		new Object(452, x, y, 0, type, 10, i, respawnTime);
		for (int t = 0; t &lt; Server.playerHandler.players.length; t++) {
			if (Server.playerHandler.players[t] != null) {
				if (Server.playerHandler.players[t].rockX == x &amp;&amp; Server.playerHandler.players[t].rockY == y) {
					Server.playerHandler.players[t].isMining = false;
					Server.playerHandler.players[t].startAnimation(65535);
					Server.playerHandler.players[t].rockX = 0;
					Server.playerHandler.players[t].rockY = 0;
				}
			}
		}
	}
	
}[/code]</description>
    
    <lastBuildDate>Thu, 12 Apr 2012 22:02:01 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/mining-help/439440.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Mining help</title>
        <dc:creator><![CDATA[@bestofpvm bestofpvm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bestofpvm">@bestofpvm</a> wrote:</p>
          <blockquote>
              <p>i need help with insidiax mining, i want it so that the rocks do not have to respawn at all. if anyone can help me please do. hereâ€™s the code:</p>
<p>[code]<br>
package server.model.players.skills;</p>
<p>import server.model.players.<em>;<br>
import server.Config;<br>
import server.util.Misc;<br>
import java.util.Random;<br>
import server.event.</em>;<br>
import server.model.objects.Object;<br>
import server.Server;</p>
<p>/**</p>
<ul>
<li>
<span class="mention">@Author</span> Null++<br>
*/</li>
</ul>
<p>public class Mining {</p>
<pre><code>private Client c;

public final int[][] Pick_Settings = {
	{1265, 1, 1, 6753}, //Bronze
	{1267, 1, 2, 6754}, //Iron
	{1269, 6, 3, 6755}, //Steel
	{1271, 31, 5, 6756}, //Addy
	{1273, 21, 4, 6757}, //Mithril
	{1275, 41, 6, 6752}, //Rune
	{15259, 61, 7, 12188}, //Dragon
	{13661, 41, 7, 10222} //Adze
};



public int[] gemId = {
									228,1437,
									1623,1621,
									1623,1619,
									1617,1631};

Random random = new Random(); 


public int[][] Rock_Settings = {
	{2091, 1, 630, 3, 436}, //Copper
	{2095, 1, 630, 3, 438}, //Tin
	{2093, 15, 1225, 7, 440}, //Iron
	{2097, 30, 1750, 38, 453}, //Coal
	{2103, 55, 2800, 155, 447}, //Mithril
	{2105, 70, 3325, 315, 449}, //Addy
	{2107, 85, 5115, 970, 451}, //Rune
	{2090, 1, 630, 3, 436}, //Copper
	{2094, 1, 630, 3, 438}, //Tin
	{2092, 15, 1225, 7, 440}, //Iron
	{2096, 30, 1750, 38, 453}, //Coal
	{2102, 55, 2800, 155, 447}, //Mithril
	{2104, 70, 3325, 315, 449}, //Addy
	{2106, 85, 4375, 970, 451}, //Rune
	{2100, 20, 1400, 78, 442}, //Silver
	{2101, 20, 1400, 78, 442}, //Silver
	{2098, 40, 2275, 78, 444}, //Gold
	{2099, 40, 2275, 78, 444}, //Gold
	{2111, 15, 1225, 7, 18338} //Gem
};

public Mining(Client c) {
	this.c = c;
}

int a = -1;

public void startMining(final int j, final int x, final int y, final int type) {
	if (c.isMining)
		return;
	if (c.mining)
		return;
	int miningLevel = c.playerLevel[c.playerMining] ;
	a = -1;
	c.turnPlayerTo(x, y);
	if (Rock_Settings[j][1] &gt; miningLevel) {
		c.sendMessage("You need a Mining level of " + Rock_Settings[j][1] + " to mine this rock.");
		return;
	}
	for (int i = 0; i &lt; Pick_Settings.length; i++) {
		if (c.getItems().playerHasItem(Pick_Settings[i][0]) || c.playerEquipment[c.playerWeapon] == Pick_Settings[i][0]) {
			if (Pick_Settings[i][1] &lt;= miningLevel) {
				a = i;
			}
		}
	}
	if (a == -1) {
		c.sendMessage("You need a pickaxe to mine this rock.");
		return;
	}
	if (c.getItems().freeSlots() &lt; 1) {
		c.sendMessage("You do not have enough inventory slots to do that.");
		return;
	}
	c.startAnimation(Pick_Settings[a][3]);
	c.isMining = true;
	c.rockX = x;
	c.rockY = y;
	c.mining = true;
	CycleEventHandler.getSingleton().addEvent(c, new CycleEvent() {
		@Override
		public void execute(CycleEventContainer container) {
			if (!c.isMining) {
				container.stop();
				c.startAnimation(65535);
				return;
			}
			if (c.isMining) {
				c.getItems().addItem(Rock_Settings[j][4], 1);
				c.getPA().addSkillXP(Rock_Settings[j][2], c.playerMining);
			}
			if (c.getItems().freeSlots() &lt; 1) {
				c.sendMessage("You have ran out of inventory slots.");
				container.stop();
			}
			mineRock(Rock_Settings[j][3], x, y, type, Rock_Settings[j][0]);
			c.isMining = false;
			container.stop();
		}
		@Override
		public void stop() {
			c.getPA().closeAllWindows();
			c.startAnimation(65535);
			c.isMining = false;
			c.rockX = 0;
			c.rockY = 0;
			c.mining = false;
			return;
		}
	}, getTimer(j, a, miningLevel));
}

public int getTimer(int b, int c, int level) {
	double timer = (int)((Rock_Settings[b][1]  * 2) + 20 + Misc.random(20))-((Pick_Settings[c][2] * (Pick_Settings[c][2] * 0.75)) + level);
	if (timer &lt; 2.0) {
		return 2;
	} else {
		return (int)timer;
	}
}

public void mineRock(int respawnTime, int x, int y, int type, int i) {
	new Object(452, x, y, 0, type, 10, i, respawnTime);
	for (int t = 0; t &lt; Server.playerHandler.players.length; t++) {
		if (Server.playerHandler.players[t] != null) {
			if (Server.playerHandler.players[t].rockX == x &amp;&amp; Server.playerHandler.players[t].rockY == y) {
				Server.playerHandler.players[t].isMining = false;
				Server.playerHandler.players[t].startAnimation(65535);
				Server.playerHandler.players[t].rockX = 0;
				Server.playerHandler.players[t].rockY = 0;
			}
		}
	}
}
</code></pre>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/mining-help/439440/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/mining-help/439440/1</link>
        <pubDate>Thu, 12 Apr 2012 22:02:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-439440-1</guid>
        <source url="https://forum.moparisthebest.com/t/mining-help/439440.rss">Mining help</source>
      </item>
  </channel>
</rss>
