<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>IRCBot.java</title>
    <link>https://forum.moparisthebest.com/t/ircbot-java/47478</link>
    <description>Meh, I was bored...this was made by me with a lot of help from Aftermath.

I have recoded a newer one that isn&#39;t half as ugly lmao.

This one is half-assed, but have fun with it I guess.

and most of the Variable naming in this one is REALLY bad lmao.  

[code=java]import java.io.*;
import java.util.*;
import java.net.*;
import java.text.*;

public class IRCBot {
	
	private static String host = &quot;irc.freenode.net&quot;;
	private static final int PORT = 6667;
	private static String nick = &quot;YOURBOTNAME&quot;;
	private static String pass = &quot;YOURBOTSPASSWordheRE&quot;;
	
	public static void main(String[] args) {				
		run();
	}
	
	public static void run() {
		Socket link = null;
		
		try {
			Scanner inputFromMe = new Scanner(System.in);
			link = new Socket(host, PORT);
			 
		 	 sendRawLine(&quot;PASS pass&quot;, link);
			 sendRawLine(&quot;USER &quot;+nick+&quot; 8 * &quot;+nick, link);
			 sendRawLine(&quot;NICK &quot;+nick, link);
			 sendRawLine(&quot;JOIN #rsr&quot;, link);
			 BufferedReader in = new BufferedReader(new InputStreamReader(link.getInputStream()));
			 while(true) {
			 try {
			 	 SimpleDateFormat date = new SimpleDateFormat(&quot;(hh:mm:ss)&quot;);
			 	 String output = date.format(new Date());
			 	 String hai = in.readLine();
			 	 if (!hai.startsWith(&quot;:&quot;)) {
			 	 	System.out.println(output+&quot; &quot;+hai);
			 	 }
			 	 else
			 	 if (hai.startsWith(&quot;:&quot;)) {
			 	 	String text = getText(hai);
			 	 	System.out.println(output+&quot; (&quot;+getSender(hai)+&quot;) &quot;+text);
			 	 	if (text.startsWith(&quot;!&quot;)) {
			 	 		command(text, getSender(hai), link, getChannel(hai));
			 	 	}
			 	 }			 	 
        		} catch (IOException e) {
             // No action 
        	   }	
        	}
		} catch(IOException e) { e.printStackTrace(); }
		
		finally {
			try {
				link.close();
			} catch(IOException ex) {
				System.err.println(&quot;Failed to close Socket!&quot;);
				System.exit(1);
			}
		}
	}
	
	public static void sendNotice(String text, String person, Socket link) {
		sendRawLine(&quot;NOTICE &quot;+person+&quot; :&quot;+text, link);
	}
	
	public static void command(String command, String sender, Socket link, String channel) {
		
		if (command.startsWith(&quot;!send&quot;)) {
			sendMessage(command.substring(6), link);
		}
		
		if (command.startsWith(&quot;!csend&quot;)) {
			int x = command.indexOf(&quot; &quot;);
			int y = command.indexOf(&quot; &quot;, x+1);  
			
			String chan = command.substring(x+1,y);
			String message = command.substring(y+1);
			sendMessage(chan, message, link);
		}
		
		if (command.startsWith(&quot;!join&quot;)) {
			sendRawLine(&quot;JOIN :&quot;+command.substring(6), link);
		}
		
		if (command.startsWith(&quot;!part&quot;)) {
			sendRawLine(&quot;PART :&quot;+command.substring(6), link);
		}
		
		if (command.startsWith(&quot;!notice&quot;)) {
			int x = -1;
			int y = -1;
			x= command.indexOf(&quot; &quot;); 
			y= command.indexOf(&quot; &quot;, x+1);
			
			if (x != -1 &amp;&amp; y != -1)
			sendNotice(command.substring(y+1), command.substring(x+1, y), link);
		}
		
		if (command.startsWith(&quot;!ping&quot;)) {
			sendRawLine(&quot;PING :&quot;+command.substring(6), link);
		}
		
		if (command.startsWith(&quot;!reverse&quot;)) {
			StringBuffer buffed = new StringBuffer(command.substring(8)).reverse();
			String ra = buffed.toString();
			sendRawLine(&quot;PRIVMSG #RSR :&quot;+ra, link);
		}
		
		if (command.startsWith(&quot;!rawSender&quot;)) {
			sendRawLine(command.substring(11), link);
		}
		
		if (command.startsWith(&quot;!test&quot;)) {
			int x = command.indexOf(&quot; &quot;);
			int y = command.indexOf(&quot; &quot;, x+1);
			
			String type = command.substring(x+1, y);
			String msg = command.substring(y+1);
			
			int type2 = Integer.parseInt(type);
			if(x &gt; 0 &amp;&amp; y &gt; 0) {
				sendMessage(type2+msg, link);
			}
		}
		
		if (command.equalsIgnoreCase(&quot;!commands&quot;)) {
			sendNotice(&quot;!notice name message&quot;, sender, link);
			sendNotice(&quot;!send message&quot;, sender, link);
			sendNotice(&quot;!reverse message&quot;, sender, link);
			//sendNotice(&quot;&quot;, sender, link);
		}
		
		if (command.equalsIgnoreCase(&quot;!shutdown&quot;)) {
			if (sender.equalsIgnoreCase(&quot;Evil_`&quot;)) {
				sendRawLine(&quot;QUIT :BAI&quot;, link);
			}
		}
		
		if (command.startsWith(&quot;!setName&quot;)) {
			if (sender.equalsIgnoreCase(&quot;Evil_`&quot;)) {
				sendRawLine(&quot;NICK &quot;+command.substring(9), link);
			}
		}
	}
	
	public static String getChannel(String rawtext) {
	 	String text = rawtext;
		int space1 = rawtext.indexOf(&quot; &quot;);
		int space2 = -1; 
		space2 = rawtext.indexOf(&quot; &quot;, space1+1);
		int space3 = -1;
		space3 = rawtext.indexOf(&quot; &quot;, space2+1);
		
		if (space2 != -1 &amp;&amp; space3 != -1) {
			text = rawtext.substring(space2+1, space3);
		}
		
		if (space2 == -1 &amp;&amp; space3 == -1) {
			text = rawtext;
		}
		
		return text;		
	}
	
	public static void sendMessage(String text, Socket link) {
		sendRawLine(&quot;PRIVMSG #RSR :&quot;+text, link);
	}
	
	public static void sendMessage(String channel, String text, Socket link) {
		sendRawLine(&quot;PRIVMSG &quot;+channel+&quot; :&quot;+text, link);
	}
	
	public static String getText(String rawtext) {
		String text = rawtext;
		int space1 = rawtext.indexOf(&quot;:&quot;);
		int space2 = -1;
		space2 = rawtext.indexOf(&quot;:&quot;, space1+1);
		
		if (space2 != -1) {
			text = rawtext.substring(space2+1);
		}
		if (space2 == -1) {
			text = rawtext;
		}
		
		return text;
	}
	
	public static String getSender(String rawtext) {
		String text = rawtext;
		
		int colon1 = rawtext.indexOf(&quot;:&quot;);
		int exclamation1 = -1;
		exclamation1 = rawtext.indexOf(&quot;!&quot;, colon1+1);
		
		if (exclamation1 != -1) {
			text = rawtext.substring(colon1+1, exclamation1);
		}
		else if (exclamation1 == -1) {
			text = rawtext;
		}
		return text;
	} 
	
	public static void sendRawLine(String text, Socket sock) {
		try {
			BufferedWriter out = new BufferedWriter(new OutputStreamWriter(sock.getOutputStream()));
			out.write(text+&quot;\n&quot;);
			out.flush();
		} catch(IOException ex) {
			ex.printStackTrace();
		}
	}
}[/code]

You may edit/redistribute this.  I just want some credit.  kthxbai.</description>
    
    <lastBuildDate>Fri, 26 Jan 2007 05:05:23 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/ircbot-java/47478.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>IRCBot.java</title>
        <dc:creator><![CDATA[@pistolbob pistolbob]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pistolbob">@pistolbob</a> wrote:</p>
          <blockquote>
              <p>it says i have to register to use bot first. but when i try and go to that website it cant find it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/ircbot-java/47478/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/ircbot-java/47478/4</link>
        <pubDate>Fri, 26 Jan 2007 05:05:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-47478-4</guid>
        <source url="https://forum.moparisthebest.com/t/ircbot-java/47478.rss">IRCBot.java</source>
      </item>
      <item>
        <title>IRCBot.java</title>
        <dc:creator><![CDATA[@Evil1 Evil_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/evil1">@Evil1</a> wrote:</p>
          <blockquote>
              <p>lmao, just the names <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"> just the best names I could think of for them <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/ircbot-java/47478/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/ircbot-java/47478/3</link>
        <pubDate>Sun, 14 Jan 2007 10:29:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-47478-3</guid>
        <source url="https://forum.moparisthebest.com/t/ircbot-java/47478.rss">IRCBot.java</source>
      </item>
      <item>
        <title>IRCBot.java</title>
        <dc:creator><![CDATA[@ilyaostr9 io9]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ilyaostr9">@ilyaostr9</a> wrote:</p>
          <blockquote>
              <p>I see some methods from PircBot <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<p>Nice job though <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"> bla++</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/ircbot-java/47478/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/ircbot-java/47478/2</link>
        <pubDate>Sun, 14 Jan 2007 10:28:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-47478-2</guid>
        <source url="https://forum.moparisthebest.com/t/ircbot-java/47478.rss">IRCBot.java</source>
      </item>
      <item>
        <title>IRCBot.java</title>
        <dc:creator><![CDATA[@Evil1 Evil_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/evil1">@Evil1</a> wrote:</p>
          <blockquote>
              <p>Meh, I was bored…this was made by me with a lot of help from Aftermath.</p>
<p>I have recoded a newer one that isn’t half as ugly lmao.</p>
<p>This one is half-assed, but have fun with it I guess.</p>
<p>and most of the Variable naming in this one is REALLY bad lmao.</p>
<p>[code=java]import <a href="http://java.io" rel="nofollow noopener">java.io</a>.<em>;<br>
import java.util.</em>;<br>
import <a href="http://java.net" rel="nofollow noopener">java.net</a>.<em>;<br>
import java.text.</em>;</p>
<p>public class IRCBot {</p>
<pre><code>private static String host = "irc.freenode.net";
private static final int PORT = 6667;
private static String nick = "YOURBOTNAME";
private static String pass = "YOURBOTSPASSWordheRE";

public static void main(String[] args) {				
	run();
}

public static void run() {
	Socket link = null;
	
	try {
		Scanner inputFromMe = new Scanner(System.in);
		link = new Socket(host, PORT);
		 
	 	 sendRawLine("PASS pass", link);
		 sendRawLine("USER "+nick+" 8 * "+nick, link);
		 sendRawLine("NICK "+nick, link);
		 sendRawLine("JOIN #rsr", link);
		 BufferedReader in = new BufferedReader(new InputStreamReader(link.getInputStream()));
		 while(true) {
		 try {
		 	 SimpleDateFormat date = new SimpleDateFormat("(hh:mm:ss)");
		 	 String output = date.format(new Date());
		 	 String hai = in.readLine();
		 	 if (!hai.startsWith(":")) {
		 	 	System.out.println(output+" "+hai);
		 	 }
		 	 else
		 	 if (hai.startsWith(":")) {
		 	 	String text = getText(hai);
		 	 	System.out.println(output+" ("+getSender(hai)+") "+text);
		 	 	if (text.startsWith("!")) {
		 	 		command(text, getSender(hai), link, getChannel(hai));
		 	 	}
		 	 }			 	 
    		} catch (IOException e) {
         // No action 
    	   }	
    	}
	} catch(IOException e) { e.printStackTrace(); }
	
	finally {
		try {
			link.close();
		} catch(IOException ex) {
			System.err.println("Failed to close Socket!");
			System.exit(1);
		}
	}
}

public static void sendNotice(String text, String person, Socket link) {
	sendRawLine("NOTICE "+person+" :"+text, link);
}

public static void command(String command, String sender, Socket link, String channel) {
	
	if (command.startsWith("!send")) {
		sendMessage(command.substring(6), link);
	}
	
	if (command.startsWith("!csend")) {
		int x = command.indexOf(" ");
		int y = command.indexOf(" ", x+1);  
		
		String chan = command.substring(x+1,y);
		String message = command.substring(y+1);
		sendMessage(chan, message, link);
	}
	
	if (command.startsWith("!join")) {
		sendRawLine("JOIN :"+command.substring(6), link);
	}
	
	if (command.startsWith("!part")) {
		sendRawLine("PART :"+command.substring(6), link);
	}
	
	if (command.startsWith("!notice")) {
		int x = -1;
		int y = -1;
		x= command.indexOf(" "); 
		y= command.indexOf(" ", x+1);
		
		if (x != -1 &amp;&amp; y != -1)
		sendNotice(command.substring(y+1), command.substring(x+1, y), link);
	}
	
	if (command.startsWith("!ping")) {
		sendRawLine("PING :"+command.substring(6), link);
	}
	
	if (command.startsWith("!reverse")) {
		StringBuffer buffed = new StringBuffer(command.substring(8)).reverse();
		String ra = buffed.toString();
		sendRawLine("PRIVMSG #RSR :"+ra, link);
	}
	
	if (command.startsWith("!rawSender")) {
		sendRawLine(command.substring(11), link);
	}
	
	if (command.startsWith("!test")) {
		int x = command.indexOf(" ");
		int y = command.indexOf(" ", x+1);
		
		String type = command.substring(x+1, y);
		String msg = command.substring(y+1);
		
		int type2 = Integer.parseInt(type);
		if(x &gt; 0 &amp;&amp; y &gt; 0) {
			sendMessage(type2+msg, link);
		}
	}
	
	if (command.equalsIgnoreCase("!commands")) {
		sendNotice("!notice name message", sender, link);
		sendNotice("!send message", sender, link);
		sendNotice("!reverse message", sender, link);
		//sendNotice("", sender, link);
	}
	
	if (command.equalsIgnoreCase("!shutdown")) {
		if (sender.equalsIgnoreCase("Evil_`")) {
			sendRawLine("QUIT :BAI", link);
		}
	}
	
	if (command.startsWith("!setName")) {
		if (sender.equalsIgnoreCase("Evil_`")) {
			sendRawLine("NICK "+command.substring(9), link);
		}
	}
}

public static String getChannel(String rawtext) {
 	String text = rawtext;
	int space1 = rawtext.indexOf(" ");
	int space2 = -1; 
	space2 = rawtext.indexOf(" ", space1+1);
	int space3 = -1;
	space3 = rawtext.indexOf(" ", space2+1);
	
	if (space2 != -1 &amp;&amp; space3 != -1) {
		text = rawtext.substring(space2+1, space3);
	}
	
	if (space2 == -1 &amp;&amp; space3 == -1) {
		text = rawtext;
	}
	
	return text;		
}

public static void sendMessage(String text, Socket link) {
	sendRawLine("PRIVMSG #RSR :"+text, link);
}

public static void sendMessage(String channel, String text, Socket link) {
	sendRawLine("PRIVMSG "+channel+" :"+text, link);
}

public static String getText(String rawtext) {
	String text = rawtext;
	int space1 = rawtext.indexOf(":");
	int space2 = -1;
	space2 = rawtext.indexOf(":", space1+1);
	
	if (space2 != -1) {
		text = rawtext.substring(space2+1);
	}
	if (space2 == -1) {
		text = rawtext;
	}
	
	return text;
}

public static String getSender(String rawtext) {
	String text = rawtext;
	
	int colon1 = rawtext.indexOf(":");
	int exclamation1 = -1;
	exclamation1 = rawtext.indexOf("!", colon1+1);
	
	if (exclamation1 != -1) {
		text = rawtext.substring(colon1+1, exclamation1);
	}
	else if (exclamation1 == -1) {
		text = rawtext;
	}
	return text;
} 

public static void sendRawLine(String text, Socket sock) {
	try {
		BufferedWriter out = new BufferedWriter(new OutputStreamWriter(sock.getOutputStream()));
		out.write(text+"\n");
		out.flush();
	} catch(IOException ex) {
		ex.printStackTrace();
	}
}
</code></pre>
<p>}[/code]</p>
<p>You may edit/redistribute this.  I just want some credit.  kthxbai.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/ircbot-java/47478/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/ircbot-java/47478/1</link>
        <pubDate>Sun, 14 Jan 2007 10:19:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-47478-1</guid>
        <source url="https://forum.moparisthebest.com/t/ircbot-java/47478.rss">IRCBot.java</source>
      </item>
  </channel>
</rss>
