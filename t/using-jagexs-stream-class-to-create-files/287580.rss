<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Using Jagex&#39;s Stream class to create files</title>
    <link>https://forum.moparisthebest.com/t/using-jagexs-stream-class-to-create-files/287580</link>
    <description>Small explanation of how the Stream class works:

All the information is writen into a array of bytes

[code]
    public byte buffer[];

[/code]

Which is then used. It could be used to write to a file, or it could be used to read data off of, or send data to the server.

After writing data to the buffer, we can write out the data using any file writing class that accepts the writing of bytes with a specified length.

Example: 

[code]
	public void example() {
		String[] toWrite = {&quot;Hello&quot;, &quot;World&quot;};
		byte[] data = new byte[1000000];
		Stream stream = new Stream(data); // Instances the stream class using our empty byte array
		stream.writeDWord(toWrite.length);
		for(String s : toWrite) {
			stream.writeString(s);
		}
		try {
			FileOutputStream out = new FileOutputStream(&quot;streamfile.dat&quot;);

            		out.write(stream.buffer, 0, stream.currentOffset);

            		out.flush();

            		out.close();
		} catch(Exception e) {
			System.out.println(e.getMessage());
		}
	}
[/code]

We can read in the same way.

[code]
	public void read() {
		File f = new File(&quot;streamfile.dat&quot;);
		if(!f.exists())
			return;

		Stream stream = new Stream((int) f.length());

            	FileInputStream in = new FileInputStream(f);
		try {

            		in.read(stream.buffer, 0, (int) f.length());
		} catch(IOException e) {
			System.out.println(e.getMessage());
			System.exit(0);
		}
		in.close();
		int length = stream.readDWord();
		for(int i = 0; i &lt; length; i++) {
			System.out.println(stream.readString());
		}
	}
[/code]</description>
    
    <lastBuildDate>Thu, 09 Jul 2009 17:09:57 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/using-jagexs-stream-class-to-create-files/287580.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Using Jagex&#39;s Stream class to create files</title>
        <dc:creator><![CDATA[@system system]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/system">@system</a> wrote:</p>
          <blockquote>
              <p>byte[] data = new byte[5000]; is the normal client buffer size.<br>
They don’t usually take up 1Mb memory. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/using-jagexs-stream-class-to-create-files/287580/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/using-jagexs-stream-class-to-create-files/287580/6</link>
        <pubDate>Thu, 09 Jul 2009 17:09:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-287580-6</guid>
        <source url="https://forum.moparisthebest.com/t/using-jagexs-stream-class-to-create-files/287580.rss">Using Jagex&#39;s Stream class to create files</source>
      </item>
      <item>
        <title>Using Jagex&#39;s Stream class to create files</title>
        <dc:creator><![CDATA[@Tatemo Tatemo]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tatemo">@Tatemo</a> wrote:</p>
          <blockquote>
              <p>This looks interesting but could you explain things a bit more please?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/using-jagexs-stream-class-to-create-files/287580/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/using-jagexs-stream-class-to-create-files/287580/5</link>
        <pubDate>Wed, 08 Jul 2009 20:15:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-287580-5</guid>
        <source url="https://forum.moparisthebest.com/t/using-jagexs-stream-class-to-create-files/287580.rss">Using Jagex&#39;s Stream class to create files</source>
      </item>
      <item>
        <title>Using Jagex&#39;s Stream class to create files</title>
        <dc:creator><![CDATA[@SonGoku SonGoku]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/songoku">@SonGoku</a> wrote:</p>
          <blockquote>
              <p>Well you don’t want it too small either, I’d rather it be larger then it needs to be then smaller then it needs to be <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/using-jagexs-stream-class-to-create-files/287580/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/using-jagexs-stream-class-to-create-files/287580/4</link>
        <pubDate>Wed, 08 Jul 2009 17:12:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-287580-4</guid>
        <source url="https://forum.moparisthebest.com/t/using-jagexs-stream-class-to-create-files/287580.rss">Using Jagex&#39;s Stream class to create files</source>
      </item>
      <item>
        <title>Using Jagex&#39;s Stream class to create files</title>
        <dc:creator><![CDATA[@Fat_Cookies Fat Cookies]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/fat_cookies">@Fat_Cookies</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="2" data-topic="287580">
<div class="title">
<div class="quote-controls"></div>
 Miss Silabsoft:</div>
<blockquote>
<p>byte[] data = new byte[1000000]; HUGE BUFFER IS HUGE!</p>
</blockquote>
</aside>
<p>In English:</p>
<p>byte[] data = new byte[1024]; is appropriate</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/using-jagexs-stream-class-to-create-files/287580/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/using-jagexs-stream-class-to-create-files/287580/3</link>
        <pubDate>Wed, 08 Jul 2009 16:33:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-287580-3</guid>
        <source url="https://forum.moparisthebest.com/t/using-jagexs-stream-class-to-create-files/287580.rss">Using Jagex&#39;s Stream class to create files</source>
      </item>
      <item>
        <title>Using Jagex&#39;s Stream class to create files</title>
        <dc:creator><![CDATA[@silabsoft RuneAgent]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silabsoft">@silabsoft</a> wrote:</p>
          <blockquote>
              <pre><code>byte[] data = new byte[1000000]; HUGE BUFFER IS HUGE!</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/using-jagexs-stream-class-to-create-files/287580/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/using-jagexs-stream-class-to-create-files/287580/2</link>
        <pubDate>Wed, 08 Jul 2009 03:23:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-287580-2</guid>
        <source url="https://forum.moparisthebest.com/t/using-jagexs-stream-class-to-create-files/287580.rss">Using Jagex&#39;s Stream class to create files</source>
      </item>
      <item>
        <title>Using Jagex&#39;s Stream class to create files</title>
        <dc:creator><![CDATA[@SonGoku SonGoku]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/songoku">@SonGoku</a> wrote:</p>
          <blockquote>
              <p>Small explanation of how the Stream class works:</p>
<p>All the information is writen into a array of bytes</p>
<pre><code class="lang-auto">    public byte buffer[];
</code></pre>
<p>Which is then used. It could be used to write to a file, or it could be used to read data off of, or send data to the server.</p>
<p>After writing data to the buffer, we can write out the data using any file writing class that accepts the writing of bytes with a specified length.</p>
<p>Example:</p>
<pre><code class="lang-auto">	public void example() {
		String[] toWrite = {"Hello", "World"};
		byte[] data = new byte[1000000];
		Stream stream = new Stream(data); // Instances the stream class using our empty byte array
		stream.writeDWord(toWrite.length);
		for(String s : toWrite) {
			stream.writeString(s);
		}
		try {
			FileOutputStream out = new FileOutputStream("streamfile.dat");

            		out.write(stream.buffer, 0, stream.currentOffset);

            		out.flush();

            		out.close();
		} catch(Exception e) {
			System.out.println(e.getMessage());
		}
	}</code></pre>
<p>We can read in the same way.</p>
<pre><code class="lang-auto">	public void read() {
		File f = new File("streamfile.dat");
		if(!f.exists())
			return;

		Stream stream = new Stream((int) f.length());

            	FileInputStream in = new FileInputStream(f);
		try {

            		in.read(stream.buffer, 0, (int) f.length());
		} catch(IOException e) {
			System.out.println(e.getMessage());
			System.exit(0);
		}
		in.close();
		int length = stream.readDWord();
		for(int i = 0; i &lt; length; i++) {
			System.out.println(stream.readString());
		}
	}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/using-jagexs-stream-class-to-create-files/287580/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/using-jagexs-stream-class-to-create-files/287580/1</link>
        <pubDate>Wed, 08 Jul 2009 01:31:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-287580-1</guid>
        <source url="https://forum.moparisthebest.com/t/using-jagexs-stream-class-to-create-files/287580.rss">Using Jagex&#39;s Stream class to create files</source>
      </item>
  </channel>
</rss>
