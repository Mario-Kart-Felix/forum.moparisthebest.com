<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Quickest framework for Item On Item</title>
    <link>https://forum.moparisthebest.com/t/quickest-framework-for-item-on-item/551939</link>
    <description>I&#39;ve been trying to get my head around how one could easily create an ItemOnItem method that&#39;s quick to code and check... 
Here&#39;s what I&#39;ve tried:
A two-dimensional array: 
[code]combinations[item][item] = shortbow[/code]
The above was kind of neat, but also takes up a lot of heap space and just in general is bad practice methinks...

A set of booleans that check the IDs in the good old fashion:
[code]boolean comboTest(int id1, int id1) {
if (id1.equals(1511) &amp;&amp; id2.equals(1755) || id2.equals(1511) &amp;&amp; id1.equals(1755))
return true;
return false;
}[/code]
but again, the above code seems needlessly long... it would be the perfect option if I&#39;d know how to shrink it and not have to input all numbers twice.

Two switches (one in order, the other in reverse, i.e. tool is now the item we&#39;re switching, and target is found within), through which we go until we hit the goldmine and then return.
[code]switch (target) {
case 1511:
if (tool.equals(1755)) {
do business;
return;
}
if (tool.equals(whatever the knife ID was) {
do better business;
return;
}
break;
}[/code]</description>
    
    <lastBuildDate>Sat, 13 Jun 2015 04:18:40 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/quickest-framework-for-item-on-item/551939.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Quickest framework for Item On Item</title>
        <dc:creator><![CDATA[@matzie matzie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/matzie">@matzie</a> wrote:</p>
          <blockquote>
              <p>This would require an entire packet overhaul to use the whole thing… But if you find it useful so be it <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue_winking_eye.png?v=5" title=":stuck_out_tongue_winking_eye:" class="emoji" alt=":stuck_out_tongue_winking_eye:"></p>
<p>It is not documented, as it is just a prototype at the moment and i have no intentions of ever releasing the full thing. The naming of the classes is really straight forward, as well as the interface. Of course you will have to change the package/Player to fit your server. Or just use it as an idea to build your own.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/quickest-framework-for-item-on-item/551939/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/quickest-framework-for-item-on-item/551939/8</link>
        <pubDate>Sat, 13 Jun 2015 04:18:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551939-8</guid>
        <source url="https://forum.moparisthebest.com/t/quickest-framework-for-item-on-item/551939.rss">Quickest framework for Item On Item</source>
      </item>
      <item>
        <title>Quickest framework for Item On Item</title>
        <dc:creator><![CDATA[@Death_Style Death Style]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/death_style">@Death_Style</a> wrote:</p>
          <blockquote>
              <p>[quote=“matzie, post:6, topic:551939”][quote author=Death Style link=topic=670856.msg4485995#msg4485995 date=1434011710]<br>
how about a unique hash of the two item numbers<br>
[/quote]<br>
This would be the best method in terms of lookup time and storage space. I still think it is one of the more difficult means to implement though. My base is implementing an api and event listener. Where each class can implement its own method for ItemOnItem, and handle it self. I am writing it in such a way to make use of the benefits of parallelism. I doubt you wish to get that complicated though ;P[/quote]<br>
I have something similar based on Express.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/quickest-framework-for-item-on-item/551939/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/quickest-framework-for-item-on-item/551939/7</link>
        <pubDate>Fri, 12 Jun 2015 14:21:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551939-7</guid>
        <source url="https://forum.moparisthebest.com/t/quickest-framework-for-item-on-item/551939.rss">Quickest framework for Item On Item</source>
      </item>
      <item>
        <title>Quickest framework for Item On Item</title>
        <dc:creator><![CDATA[@matzie matzie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/matzie">@matzie</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="3" data-topic="551939">
<div class="title">
<div class="quote-controls"></div>
 Death Style:</div>
<blockquote>
<p>how about a unique hash of the two item numbers</p>
</blockquote>
</aside>
<p>This would be the best method in terms of lookup time and storage space. I still think it is one of the more difficult means to implement though. My base is implementing an api and event listener. Where each class can implement its own method for ItemOnItem, and handle it self. I am writing it in such a way to make use of the benefits of parallelism. I doubt you wish to get that complicated though <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue_winking_eye.png?v=5" title=":stuck_out_tongue_winking_eye:" class="emoji" alt=":stuck_out_tongue_winking_eye:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/quickest-framework-for-item-on-item/551939/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/quickest-framework-for-item-on-item/551939/6</link>
        <pubDate>Fri, 12 Jun 2015 14:05:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551939-6</guid>
        <source url="https://forum.moparisthebest.com/t/quickest-framework-for-item-on-item/551939.rss">Quickest framework for Item On Item</source>
      </item>
      <item>
        <title>Quickest framework for Item On Item</title>
        <dc:creator><![CDATA[@Cres Cres]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cres">@Cres</a> wrote:</p>
          <blockquote>
              <p><code>
int id1 = input();
int id2 = input();
if (id2 &gt; id1) {
int temp = id1;
id1 = id2;
id2 = temp;
}
HashMap&lt;String, ItemOnItemEvent&gt; itemEvents = new HashMap&lt;String, ItemOnItemEvent&gt;();
itemEvents.put(id1+"_"+id2, new ItemOnItemEvent() {
public void handleEvent(Player p, int id1, int id2) {
//...
}
});</code><br>
Convert hashmap to a set after loading all events.<br>
Since we’re sorting the id’s there is only 1 unique combination.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/quickest-framework-for-item-on-item/551939/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/quickest-framework-for-item-on-item/551939/5</link>
        <pubDate>Thu, 11 Jun 2015 08:59:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551939-5</guid>
        <source url="https://forum.moparisthebest.com/t/quickest-framework-for-item-on-item/551939.rss">Quickest framework for Item On Item</source>
      </item>
      <item>
        <title>Quickest framework for Item On Item</title>
        <dc:creator><![CDATA[@fuzzout fuzzout]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/fuzzout">@fuzzout</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="3" data-topic="551939">
<div class="title">
<div class="quote-controls"></div>
 Death Style:</div>
<blockquote>
<p>how about a unique hash of the two item numbers</p>
</blockquote>
</aside>
<p>Thats an odd way to do it…</p>
<p>I’ve found a solution…</p>
<p>it comes in 2 parts:<br>
The setup:</p>
<p><code>boolean combo(int item1, int item2) {
if (item1 == x &amp;&amp; item2 == x2) {
//do business here
return true;
}
return false;
}
</code><br>
And then the finalizer which is within the executor itself:</p>
<p><code>if (combo(a, b) || combo(b, a) {
//finish doing stuff, such as any set up ints for items or teleports e.t.c.
return;
}</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/quickest-framework-for-item-on-item/551939/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/quickest-framework-for-item-on-item/551939/4</link>
        <pubDate>Thu, 11 Jun 2015 08:42:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551939-4</guid>
        <source url="https://forum.moparisthebest.com/t/quickest-framework-for-item-on-item/551939.rss">Quickest framework for Item On Item</source>
      </item>
      <item>
        <title>Quickest framework for Item On Item</title>
        <dc:creator><![CDATA[@Death_Style Death Style]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/death_style">@Death_Style</a> wrote:</p>
          <blockquote>
              <p>how about a unique hash of the two item numbers</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/quickest-framework-for-item-on-item/551939/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/quickest-framework-for-item-on-item/551939/3</link>
        <pubDate>Thu, 11 Jun 2015 08:35:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551939-3</guid>
        <source url="https://forum.moparisthebest.com/t/quickest-framework-for-item-on-item/551939.rss">Quickest framework for Item On Item</source>
      </item>
      <item>
        <title>Quickest framework for Item On Item</title>
        <dc:creator><![CDATA[@Ambokile Ambokile]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ambokile">@Ambokile</a> wrote:</p>
          <blockquote>
              <p>I think using a series of if-elseif statements would be the most efficient way, both in terms of code length and program efficiency.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/quickest-framework-for-item-on-item/551939/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/quickest-framework-for-item-on-item/551939/2</link>
        <pubDate>Thu, 11 Jun 2015 05:48:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551939-2</guid>
        <source url="https://forum.moparisthebest.com/t/quickest-framework-for-item-on-item/551939.rss">Quickest framework for Item On Item</source>
      </item>
      <item>
        <title>Quickest framework for Item On Item</title>
        <dc:creator><![CDATA[@fuzzout fuzzout]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/fuzzout">@fuzzout</a> wrote:</p>
          <blockquote>
              <p>I’ve been trying to get my head around how one could easily create an ItemOnItem method that’s quick to code and check…<br>
Here’s what I’ve tried:<br>
A two-dimensional array:</p>
<pre><code class="lang-auto"></code></pre>
<p>The above was kind of neat, but also takes up a lot of heap space and just in general is bad practice methinks…</p>
<p>A set of booleans that check the IDs in the good old fashion:</p>
<p><code>boolean comboTest(int id1, int id1) {
if (id1.equals(1511) &amp;&amp; id2.equals(1755) || id2.equals(1511) &amp;&amp; id1.equals(1755))
return true;
return false;
}</code><br>
but again, the above code seems needlessly long… it would be the perfect option if I’d know how to shrink it and not have to input all numbers twice.</p>
<p>Two switches (one in order, the other in reverse, i.e. tool is now the item we’re switching, and target is found within), through which we go until we hit the goldmine and then return.</p>
<p><code>switch (target) {
case 1511:
if (tool.equals(1755)) {
do business;
return;
}
if (tool.equals(whatever the knife ID was) {
do better business;
return;
}
break;
}</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/quickest-framework-for-item-on-item/551939/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/quickest-framework-for-item-on-item/551939/1</link>
        <pubDate>Thu, 11 Jun 2015 04:57:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551939-1</guid>
        <source url="https://forum.moparisthebest.com/t/quickest-framework-for-item-on-item/551939.rss">Quickest framework for Item On Item</source>
      </item>
  </channel>
</rss>
