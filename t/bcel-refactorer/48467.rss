<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[BCEL]Refactorer</title>
    <link>https://forum.moparisthebest.com/t/bcel-refactorer/48467</link>
    <description>The intent for this is to rename classes to more understandable things, possibly for a deobfuscation purposes. Basically, if you have a jar file with a class named A and you want it, and all A&#39;s in the jarfile, renamed to B, this should do it.

This [i]ought[/i] to work. I tested it and it does rename the classes, at least. However, I am unsure about its functionality in other areas, as I&#39;ve yet to test beyond that.

[code=java]
import java.io.*;
import org.apache.bcel.classfile.*;
import org.apache.bcel.generic.*;
import java.util.jar.JarFile;
import java.util.jar.JarEntry;
import java.util.Enumeration;

public class Refactorer {
    public Refactorer(String[][] refactored_stuff, JarFile injar) throws IOException{
        for(int i = 0; i &lt; refactored_stuff[0].length; i++) refactor(refactored_stuff[0][i], refactored_stuff[1][i], injar);
    }
    private void refactor(String s1, String s2, JarFile jf) throws IOException{
        Enumeration e = jf.entries();
        ClassGen cg;
        while(e.hasMoreElements()){
            JarEntry j = (JarEntry) e.nextElement();
            if(j.getName().endsWith(&quot;.class&quot;)){
                cg = new ClassGen(new ClassParser(jf.getInputStream(j), j.getName()).parse());
                if(cg.getClassName().equals(s1)) cg.setClassName(s2);
                renameFields(cg, s1, s2);
                for(Method m : cg.getMethods()) renameMethod(m, cg, s1, s2);
                cg.getJavaClass().dump(cg.getClassName()+&quot;.class&quot;);
            }
        }
        System.out.println(&quot;Done!&quot;);
    }
    private void renameMethod(Method m, ClassGen methodowner, String s1, String s2){
        long start = System.currentTimeMillis();
        Type returntype = m.getReturnType();
        Type[] argtypes = m.getArgumentTypes();
        MethodGen mg = new MethodGen(m, methodowner.getClassName(), methodowner.getConstantPool());
        if(returntype.toString().endsWith(s1)) returntype = Type.getType(s2);
        for(int i = 0; i &lt; argtypes.length; i++){
            if(argtypes[i].toString().endsWith(s1)) argtypes[i] = Type.getType(s2);
        }
        mg.setReturnType(returntype);
        mg.setArgumentTypes(argtypes);
        mg.setName(m.getName());
        LocalVariableGen[] lvg = mg.getLocalVariables();
        for(int i = 0; i &lt; lvg.length; i++){
            if(lvg[i].getType().toString().endsWith(s1)) lvg[i].setType(Type.getType(s2));
        }
        methodowner.replaceMethod(m, mg.getMethod());
        if(System.currentTimeMillis() - start &gt; 0) System.out.println(&quot;(&quot;+methodowner.getClassName()+&quot;): &quot;+m.getName()+&quot; refactored in &quot;+(System.currentTimeMillis()-start)+&quot; milliseconds.&quot;);
    }
    private void renameFields(ClassGen cg, String s1, String s2){
        long start = System.currentTimeMillis();
        for(Field f : cg.getFields()){
            FieldGen fg = new FieldGen(f, cg.getConstantPool());
            if(fg.getType().toString().endsWith(s1)) fg.setType(Type.getType(s2));
            cg.replaceField(f, fg.getField());
        }
        if(System.currentTimeMillis() - start &gt; 0) System.out.println(&quot;Fields in &quot;+cg.getClassName()+&quot; refactored in &quot;+(System.currentTimeMillis() - start)+&quot; milliseconds.&quot;);
    }
}
[/code]</description>
    
    <lastBuildDate>Thu, 18 Jan 2007 22:08:39 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/bcel-refactorer/48467.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[BCEL]Refactorer</title>
        <dc:creator><![CDATA[@ownagesbot ownagesbot]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ownagesbot">@ownagesbot</a> wrote:</p>
          <blockquote>
              <p>Sorry, I forgot to mention, good work keep it up and all… I was tired and cudnt be arsed to type anymore than my opinion xD.<br>
But yeh gj <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=6" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bcel-refactorer/48467/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bcel-refactorer/48467/7</link>
        <pubDate>Thu, 18 Jan 2007 22:08:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-48467-7</guid>
        <source url="https://forum.moparisthebest.com/t/bcel-refactorer/48467.rss">[BCEL]Refactorer</source>
      </item>
      <item>
        <title>[BCEL]Refactorer</title>
        <dc:creator><![CDATA[@Krichevskoy Krichevskoy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/krichevskoy">@Krichevskoy</a> wrote:</p>
          <blockquote>
              <p>The usefulness of project-scope refactoring is not limited to RuneScape.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bcel-refactorer/48467/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bcel-refactorer/48467/6</link>
        <pubDate>Thu, 18 Jan 2007 07:41:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-48467-6</guid>
        <source url="https://forum.moparisthebest.com/t/bcel-refactorer/48467.rss">[BCEL]Refactorer</source>
      </item>
      <item>
        <title>[BCEL]Refactorer</title>
        <dc:creator><![CDATA[@Silver_Lining Silver Lining]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silver_lining">@Silver_Lining</a> wrote:</p>
          <blockquote>
              <p>There is a wonderful point in this: learning.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bcel-refactorer/48467/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bcel-refactorer/48467/5</link>
        <pubDate>Thu, 18 Jan 2007 04:35:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-48467-5</guid>
        <source url="https://forum.moparisthebest.com/t/bcel-refactorer/48467.rss">[BCEL]Refactorer</source>
      </item>
      <item>
        <title>[BCEL]Refactorer</title>
        <dc:creator><![CDATA[@ownagesbot ownagesbot]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ownagesbot">@ownagesbot</a> wrote:</p>
          <blockquote>
              <p>TBH, theres no point in this, and im not sure if it will even deobfuscate/run after you’ve modified it? I’m not sure. For renaming things for deobs, its best to deobfuscate and rename using a regex renamer or etc., very fast, easy to code for aswell.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bcel-refactorer/48467/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bcel-refactorer/48467/4</link>
        <pubDate>Thu, 18 Jan 2007 03:08:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-48467-4</guid>
        <source url="https://forum.moparisthebest.com/t/bcel-refactorer/48467.rss">[BCEL]Refactorer</source>
      </item>
      <item>
        <title>[BCEL]Refactorer</title>
        <dc:creator><![CDATA[@Silver_Lining Silver Lining]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silver_lining">@Silver_Lining</a> wrote:</p>
          <blockquote>
              <p>Thanks. Hmmm… I just figured out a bug. Time to fix it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bcel-refactorer/48467/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bcel-refactorer/48467/3</link>
        <pubDate>Wed, 17 Jan 2007 06:38:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-48467-3</guid>
        <source url="https://forum.moparisthebest.com/t/bcel-refactorer/48467.rss">[BCEL]Refactorer</source>
      </item>
      <item>
        <title>[BCEL]Refactorer</title>
        <dc:creator><![CDATA[@ilyaostr9 io9]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ilyaostr9">@ilyaostr9</a> wrote:</p>
          <blockquote>
              <p>leet lol<br>
I like it =)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bcel-refactorer/48467/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bcel-refactorer/48467/2</link>
        <pubDate>Wed, 17 Jan 2007 06:25:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-48467-2</guid>
        <source url="https://forum.moparisthebest.com/t/bcel-refactorer/48467.rss">[BCEL]Refactorer</source>
      </item>
      <item>
        <title>[BCEL]Refactorer</title>
        <dc:creator><![CDATA[@Silver_Lining Silver Lining]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silver_lining">@Silver_Lining</a> wrote:</p>
          <blockquote>
              <p>The intent for this is to rename classes to more understandable things, possibly for a deobfuscation purposes. Basically, if you have a jar file with a class named A and you want it, and all A’s in the jarfile, renamed to B, this should do it.</p>
<p>This <span class="bbcode-i">ought</span> to work. I tested it and it does rename the classes, at least. However, I am unsure about its functionality in other areas, as I’ve yet to test beyond that.</p>
<pre><code class="lang-auto">import java.io.*;
import org.apache.bcel.classfile.*;
import org.apache.bcel.generic.*;
import java.util.jar.JarFile;
import java.util.jar.JarEntry;
import java.util.Enumeration;

public class Refactorer {
    public Refactorer(String[][] refactored_stuff, JarFile injar) throws IOException{
        for(int i = 0; i &lt; refactored_stuff[0].length; i++) refactor(refactored_stuff[0][i], refactored_stuff[1][i], injar);
    }
    private void refactor(String s1, String s2, JarFile jf) throws IOException{
        Enumeration e = jf.entries();
        ClassGen cg;
        while(e.hasMoreElements()){
            JarEntry j = (JarEntry) e.nextElement();
            if(j.getName().endsWith(".class")){
                cg = new ClassGen(new ClassParser(jf.getInputStream(j), j.getName()).parse());
                if(cg.getClassName().equals(s1)) cg.setClassName(s2);
                renameFields(cg, s1, s2);
                for(Method m : cg.getMethods()) renameMethod(m, cg, s1, s2);
                cg.getJavaClass().dump(cg.getClassName()+".class");
            }
        }
        System.out.println("Done!");
    }
    private void renameMethod(Method m, ClassGen methodowner, String s1, String s2){
        long start = System.currentTimeMillis();
        Type returntype = m.getReturnType();
        Type[] argtypes = m.getArgumentTypes();
        MethodGen mg = new MethodGen(m, methodowner.getClassName(), methodowner.getConstantPool());
        if(returntype.toString().endsWith(s1)) returntype = Type.getType(s2);
        for(int i = 0; i &lt; argtypes.length; i++){
            if(argtypes[i].toString().endsWith(s1)) argtypes[i] = Type.getType(s2);
        }
        mg.setReturnType(returntype);
        mg.setArgumentTypes(argtypes);
        mg.setName(m.getName());
        LocalVariableGen[] lvg = mg.getLocalVariables();
        for(int i = 0; i &lt; lvg.length; i++){
            if(lvg[i].getType().toString().endsWith(s1)) lvg[i].setType(Type.getType(s2));
        }
        methodowner.replaceMethod(m, mg.getMethod());
        if(System.currentTimeMillis() - start &gt; 0) System.out.println("("+methodowner.getClassName()+"): "+m.getName()+" refactored in "+(System.currentTimeMillis()-start)+" milliseconds.");
    }
    private void renameFields(ClassGen cg, String s1, String s2){
        long start = System.currentTimeMillis();
        for(Field f : cg.getFields()){
            FieldGen fg = new FieldGen(f, cg.getConstantPool());
            if(fg.getType().toString().endsWith(s1)) fg.setType(Type.getType(s2));
            cg.replaceField(f, fg.getField());
        }
        if(System.currentTimeMillis() - start &gt; 0) System.out.println("Fields in "+cg.getClassName()+" refactored in "+(System.currentTimeMillis() - start)+" milliseconds.");
    }
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bcel-refactorer/48467/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bcel-refactorer/48467/1</link>
        <pubDate>Wed, 17 Jan 2007 06:23:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-48467-1</guid>
        <source url="https://forum.moparisthebest.com/t/bcel-refactorer/48467.rss">[BCEL]Refactorer</source>
      </item>
  </channel>
</rss>
