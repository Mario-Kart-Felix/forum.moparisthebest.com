<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[508] Aggreive NPC&#39;s not following attacking player(answer=d claws 4x method)</title>
    <link>https://forum.moparisthebest.com/t/508-aggreive-npcs-not-following-attacking-player-answer-d-claws-4x-method/264834</link>
    <description>Okay well I made all of the godwars bosses and guards aggressive but when they attack you and then you walk away, they don&#39;t follow you, how do you get them to follow you. Here is my NPC.java where I made them aggressive, the aggressive parts or the case 6203:(K&#39;ril Tsutsaroth):

[code]/*
 * Class NPC
 *
 * Version 1.0
 *
 * Monday, August 18, 2008
 *
 * Created by Palidino76
 */

package palidino76.rs2.npcs;


import palidino76.rs2.Engine;
import palidino76.rs2.io.Frames;
import java.io.*;
import java.util.*;
import palidino76.rs2.util.Misc;
import palidino76.rs2.players.Player;

public class NPC {

public boolean npccanloot=false;

	public void npcDied(Player p, int npcID, int abSX, int abSY) {	
		Random rand = new Random();
		try {

			if (npcType == 1158)
			{
				Engine.newNPC(1160, absX--, absY - 2, p.heightLevel, 0, 0, 0, 0, false);
				p.frames.sendMessage(p, &quot;Something appears from the dead body... A WASP!?&quot;);
				needsRespawn = false;
				return;
			}
			if (npcType == 1160)
			{
				Engine.newNPC(1158, absX--, absY + 2, p.heightLevel, 0, 0, 0, 0, false);
				p.setCoords(2399, 5167, 0);
				p.frames.sendMessage(p, &quot;You killed the Kalphite Queen, time for the mighty Jad!&quot;);
				needsRespawn = false;
			}
			if (npcType == 2745)
			{
				p.frames.sendMessage(p, &quot;What the... Something spawned from the ashes of jad..&quot;);
				Engine.newNPC(2743, absX--, absY - 2, p.heightLevel, 0, 0, 0, 0, false);
				needsRespawn = false;
			}
			if (npcType == 2743)
			{
				p.setCoords(2272, 4680, 0);
				p.frames.sendMessage(p, &quot;You&#39;ve killed both of the Tzhaar creatures... But can you handle the KBD?&quot;);
				Engine.newNPC(2745, absX--, absY + 2, p.heightLevel, 0, 0, 0, 0, false);
				needsRespawn = false;
			}
			if (npcType == 50)
			{
				p.frames.sendMessage(p, &quot;A dragon was born from the ashes, Black Dragon...&quot;);
				Engine.newNPC(54, absX--, absY - 2, p.heightLevel, 0, 0, 0, 0, false);
				needsRespawn = false;
			}
			if (npcType == 54)
			{
				p.frames.sendMessage(p, &quot;&quot;);
				Engine.newNPC(50, absX--, absY + 2, p.heightLevel, 0, 0, 0, 0, false);
				needsRespawn = false;
			}
			if (npcType == 6232 || npcType == 6222 || npcType == 6223 || npcType == 6225 || npcType == 6227 || npcType == 6229)
			{
				p.armadylKills += 1;
			}
			if (npcType == 1619 || npcType == 6219 || npcType == 49 || npcType == 6203 || npcType == 6208 || npcType == 6206 || npcType == 6204)
			{
				p.zamorakKills += 1;
			}
			if (npcType == 6247 || npcType == 6248 || npcType == 6250 || npcType == 6252 || npcType == 6255)
			{
				p.saradominKills += 1;
			}
			if (npcType == 6260 || npcType == 6261 || npcType == 6263 || npcType == 6265 || npcType == 6277)
			{
				p.bandosKills += 1;
			}
	        BufferedReader in = new BufferedReader(new FileReader(&quot;./data/npcs/npcdrops.cfg&quot;));
	        String input;
	        int on = 0;
	        String[] splitEQL;
	        String[] splitCOM;
	        String[] splitDSH;
	        String[] splitCLN;
	        String[] splitSCL;
while ((input = in.readLine()) != null) {
splitEQL = null; splitEQL = null; splitDSH = null; splitCLN = null; splitSCL = null;
					if (!input.startsWith(&quot;/&quot;) &amp;&amp; input.contains(&quot;=&quot;) &amp;&amp; input.contains(&quot;,&quot;) &amp;&amp; input.contains(&quot;-&quot;) &amp;&amp; input.contains(&quot;:&quot;)) {
try {
						splitEQL = input.split(&quot;=&quot;);
						if (Integer.parseInt(splitEQL[0]) == npcID) {
								splitSCL = splitEQL[1].split(&quot;;&quot;);
								int Wealth=0;

for (int i = Wealth; i &lt; splitSCL.length; i++) {
										splitCOM = splitSCL[i].split(&quot;,&quot;);
										splitDSH = splitCOM[1].split(&quot;-&quot;);
										splitCLN = splitCOM[2].split(&quot;:&quot;);
int item = Integer.parseInt(splitCOM[0]);
										int min = Integer.parseInt(splitDSH[0]);
										int max = Integer.parseInt(splitDSH[1]);
										int chance = Integer.parseInt(splitCLN[0]);
										int outOf = Integer.parseInt(splitCLN[1]);
										int amount = rand.nextInt((max - min)+1) + min; 
										int ifDrop = rand.nextInt(outOf)+1;
										if (ifDrop &lt;= chance &amp;&amp; npccanloot == true)
										{
											Engine.items.createGroundItem(item, amount, abSX, abSY, heightLevel, p.username);
											npccanloot = false;
											switch (npcID)
											{
												case 103:
													Engine.items.createGroundItem(6812, 1, abSX, abSY, heightLevel, p.username);
													npccanloot = false;
													break;

											}
										}
									}
								}
						} catch (Exception e) {							
							System.out.println(&quot;Exception dropping item:\n&quot;+e);
						}
++on;
					}
				}
				in.close();
			} catch (IOException e) {
				System.out.println(e);
			}
	}

	/*
	 * Created by momosherilly(in a post lol)
	 */
	private void checkNPC()
	{
		switch (npcType)
		{
			/* Add all aggressive NPCs here */
			case 50:
			case 1158:
			case 6203:
			case 6208:
			case 6206:
			case 6204:
			case 6222:
			case 6223:
			case 6225:
			case 6227:
			case 6247:
			case 6248:
			case 6250:
			case 6252:
			case 6260:
			case 6265:
			case 6263:
			case 6261:
			case 1160:
			case 2745: /* Example */
				npcAggression(npcId);
				break;
			default: return;
		}
	}

private void npcAggression(int j)
	{
		for (Player distantPlayers : Engine.players)
		{
			if (distantPlayers != null &amp;&amp; !distantPlayers.isDead)
			{
				if (!distantPlayers.isDead &amp;&amp; !Engine.npcs[j].isDead)
				{
					if (Misc.getDistance(Engine.npcs[j].absX, Engine.npcs[j].absY, distantPlayers.absX, distantPlayers.absY) &lt;= 1)
					{
						Engine.npcs[j].attackPlayer = distantPlayers.playerId;
						Engine.npcs[j].attackingPlayer = true;
						distantPlayers.attackNPC = j;
						distantPlayers.attackingNPC = true;
					}
					else if (Misc.getDistance(Engine.npcs[j].absX, Engine.npcs[j].absY, distantPlayers.absX, distantPlayers.absY) &gt;= 2 &amp;&amp; Misc.getDistance(Engine.npcs[j].absX, Engine.npcs[j].absY, distantPlayers.absX, distantPlayers.absY) &lt; 6)
					{
						//if (j != 2745) //Add following methods here.
						//Also add anything to do with following..
					}
					else if (Misc.getDistance(Engine.npcs[j].absX, Engine.npcs[j].absY, distantPlayers.absX, distantPlayers.absY) &gt;= 6)
					{
						Engine.npcs[j].attackingPlayer = false;
						break;
					}
				}
			}
		}
	}

    /**
     * The position this NPC is stored in the npc array in the Engine class.
     */
    public int npcId = -1;

    /**
     * The NPC&#39;s id, such as 50 for king black dragon.
     */
    public int npcType = 0;

    /**
     * The name of this NPC.
     */
    public String name = &quot;&quot;;

    /**
     * If it should hit 0 HP, how long it should take to respawn.
     */
    public int respawnDelay = 60;

    /**
     * Emotes attacking, blocking and death.
     */
    public int attackEmote = 0;
    public int defendEmote = 0;
    public int deathEmote = 0;

    /**
     * Delay between attacking.
     */
    public int attackDelay = 5;

    /**
     * Its combat level, used for calculating its accuracy and defence.
     */
    public int combatLevel = 0;

    /**
     * Max hitpoints it can have.
     */
    public int maxHP = 100;

    /**
     * The basic max hit it can have, with an attack method you  can get more specific.
     */
    public int maxHit = 15;

    /**
     * Attack type, 0 for melee, 1 for range, 2 for magic.
     */
    public int atkType = 0;

    /**
     * The weakness, same setup as atkType.
     */
    public int weakness = 0;

    /**
     * The current HP this NPC has.
     */
    public int currentHP = 100;

    /**
     * The direction this NPC is moving in.
     */
    public int direction = -1;

    /**
     * The height level its at.
     */
    public int heightLevel = 0;

    /**
     * Request for updating facing.
     */
    public boolean faceToUpdateReq = false;
    public int faceToRequest = -1;

    /**
     * If the NPC is dead or not.
     */
    public boolean isDead = false;

    /**
     * If the death emote has been requested, move on to the next part of the death process.
     */
    public boolean deadEmoteDone = false;

    /**
     * Hide the NPC until it is ready to respawn.
     */
    public boolean hiddenNPC = false;

    /**
     * Absolute positioning.
     */
    public int absX = 0, absY = 0;

    /**
     * If false, the NPC will not respawn if it dies.
     */
    public boolean needsRespawn = false;

    /**
     * If set to true, this NPC will randomly walk around.
     */
    public boolean randomWalk = true;

    /**
     * If an update is needed.
     */
    public boolean updateReq = false;

    /**
     * If the NPC should speak.
     */
    public boolean speakTextUpdateReq = false;
    public String speakText = &quot;&quot;;

    /**
     * Hit requests.
     */
    public boolean hit1UpdateReq = false;
    public boolean hit2UpdateReq = false;
    public int hitDiff1 = 0;
    public int posionHit1 = 0;
    public int hitDiff2 = 0;
    public int posionHit2 = 0;

    /**
     * Animation request.
     */
    public boolean animUpdateReq = false;
    public int animRequest = 65535;
    public int animDelay = 0;

    /**
     * Graphic request.
     */
    public boolean gfxUpdateReq = false;
    public int gfxRequest = 65535;
    public int gfxDelay = 0;

    /**
     * Facing request.
     */
    public boolean faceCoordsUpdateReq = false;
    public int faceCoordsX = -1;
    public int faceCoordsY = -1;

    /**
     * The area this NPC can randomly walk around.
     */
    public int moveRangeX1 = 0;
    public int moveRangeY1 = 0;
    public int moveRangeX2 = 0;
    public int moveRangeY2 = 0;

    /**
     * What should be added onto the absolute positioning if this NPC moves.
     */
    public int moveX = 0;
    public int moveY = 0;

    /**
     * The original position the NPC spawned at.
     */
    public int makeX = 0;
    public int makeY = 0;

    /**
     * Delay before the NPC can attack again.
     */
    public int combatDelay = 0;
    public int attackPlayer = 0;
    public boolean attackingPlayer = false;

    /**
     * Gives quick access to the frame class.
     */
    public Frames frames = Engine.frames;


    /**
     * Constructs a new NPC class.
     * @param type The type of NPC.
     * @param index The position the NPC is at.
     */
    public NPC(int type, int index) {
        npcType = type;
        npcId = index;
    }

    /**
     * This method is called every 600 milliseconds.
     */
    public void process() {
		checkNPC();
        if (respawnDelay &gt; 0 &amp;&amp; isDead) {
            respawnDelay--;
        }
        if (combatDelay &gt; 0) {
            combatDelay--;
        }
        if (attackingPlayer) {
            Engine.npcPlayerCombat.attackPlayer(this);
        }
    }

    /**
     * Request an animation for this NPC.
     * @param animId The amination to perform.
     * @param animD The delay before doing the animation.
     */
    public void requestAnim(int animId, int animD) {
        animRequest = animId;
        animDelay = animD;
        animUpdateReq = true;
        updateReq = true;
    }

    /**
     * Request text for this NPC.
     * @param message The message to make the NPC say.
     */
    public void requestText(String message) {
        speakText = message;
        animUpdateReq = true;
        speakTextUpdateReq = true;
    }

    /**
     * Request an graphic for this NPC.
     * @param gfxId The graphic to perform.
     * @param gfxD The delay or height or the gfx depending on the value.
     */
    public void requestGFX(int gfxId, int gfxD) {
        if (gfxD &gt;= 100) {
            gfxD += 6553500;
        }
        gfxRequest = gfxId;
        gfxDelay = gfxD;
        gfxUpdateReq = true;
        updateReq = true;
    }

    /**
     * Request this NPC faces two coordinates.
     * @param x The x coordinate to face.
     * @param y The y coordinate to face.
     */
    public void requestFaceCoords(int x, int y) {
        faceCoordsX = 2 * x + 1;
        faceCoordsY = 2 * y + 1;
        faceCoordsUpdateReq = true;
        updateReq = true;
    }

    /**
     * Request this NPC faces another NPC or player.
     * @param faceId The target to face.
     */
    public void requestFaceTo(int faceId) {
        faceToRequest = faceId;
        faceToUpdateReq = true;
        updateReq = true;
    }

    /**
     * Add damage to this NPC.
     * @param damage To amount of damage.
     * @param posion 0 for normal damage, 1 for posion.
     */
    public void appendHit(int damage, int posion) {
        if (damage &gt; currentHP) {
            damage = currentHP;
        }
        currentHP -= damage;
        if (currentHP &lt;= 0) {
            currentHP = 0;
            attackingPlayer = false;
            isDead = true;
        }
        if (!hit1UpdateReq) {
            hitDiff1 = damage;
            posionHit1 = posion;
            hit1UpdateReq = true;
        } else {
            hitDiff2 = damage;
            posionHit2 = posion;
            hit2UpdateReq = true;
        }
        updateReq = true;
    }
}
[/code]

Also here is a video of my problem:

http://www.youtube.com/watch?v=nFWxyivuugk</description>
    
    <lastBuildDate>Fri, 27 Feb 2009 21:54:46 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/508-aggreive-npcs-not-following-attacking-player-answer-d-claws-4x-method/264834.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[508] Aggreive NPC&#39;s not following attacking player(answer=d claws 4x method)</title>
        <dc:creator><![CDATA[@skittle385 skittle385]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/skittle385">@skittle385</a> wrote:</p>
          <blockquote>
              <p>Okay well I made all of the godwars bosses and guards aggressive but when they attack you and then you walk away, they don’t follow you, how do you get them to follow you. Here is my NPC.java where I made them aggressive, the aggressive parts or the case 6203:(K’ril Tsutsaroth):</p>
<p>[code]/*</p>
<ul>
<li>Class NPC</li>
<li>
</li>
<li>Version 1.0</li>
<li>
</li>
<li>Monday, August 18, 2008</li>
<li>
</li>
<li>Created by Palidino76<br>
*/</li>
</ul>
<p>package palidino76.rs2.npcs;</p>
<p>import palidino76.rs2.Engine;<br>
import palidino76.rs2.io.Frames;<br>
import <a href="http://java.io" rel="nofollow noopener">java.io</a>.<em>;<br>
import java.util.</em>;<br>
import palidino76.rs2.util.Misc;<br>
import palidino76.rs2.players.Player;</p>
<p>public class NPC {</p>
<p>public boolean npccanloot=false;</p>
<pre><code>public void npcDied(Player p, int npcID, int abSX, int abSY) {	
	Random rand = new Random();
	try {

		if (npcType == 1158)
		{
			Engine.newNPC(1160, absX--, absY - 2, p.heightLevel, 0, 0, 0, 0, false);
			p.frames.sendMessage(p, "Something appears from the dead body... A WASP!?");
			needsRespawn = false;
			return;
		}
		if (npcType == 1160)
		{
			Engine.newNPC(1158, absX--, absY + 2, p.heightLevel, 0, 0, 0, 0, false);
			p.setCoords(2399, 5167, 0);
			p.frames.sendMessage(p, "You killed the Kalphite Queen, time for the mighty Jad!");
			needsRespawn = false;
		}
		if (npcType == 2745)
		{
			p.frames.sendMessage(p, "What the... Something spawned from the ashes of jad..");
			Engine.newNPC(2743, absX--, absY - 2, p.heightLevel, 0, 0, 0, 0, false);
			needsRespawn = false;
		}
		if (npcType == 2743)
		{
			p.setCoords(2272, 4680, 0);
			p.frames.sendMessage(p, "You've killed both of the Tzhaar creatures... But can you handle the KBD?");
			Engine.newNPC(2745, absX--, absY + 2, p.heightLevel, 0, 0, 0, 0, false);
			needsRespawn = false;
		}
		if (npcType == 50)
		{
			p.frames.sendMessage(p, "A dragon was born from the ashes, Black Dragon...");
			Engine.newNPC(54, absX--, absY - 2, p.heightLevel, 0, 0, 0, 0, false);
			needsRespawn = false;
		}
		if (npcType == 54)
		{
			p.frames.sendMessage(p, "");
			Engine.newNPC(50, absX--, absY + 2, p.heightLevel, 0, 0, 0, 0, false);
			needsRespawn = false;
		}
		if (npcType == 6232 || npcType == 6222 || npcType == 6223 || npcType == 6225 || npcType == 6227 || npcType == 6229)
		{
			p.armadylKills += 1;
		}
		if (npcType == 1619 || npcType == 6219 || npcType == 49 || npcType == 6203 || npcType == 6208 || npcType == 6206 || npcType == 6204)
		{
			p.zamorakKills += 1;
		}
		if (npcType == 6247 || npcType == 6248 || npcType == 6250 || npcType == 6252 || npcType == 6255)
		{
			p.saradominKills += 1;
		}
		if (npcType == 6260 || npcType == 6261 || npcType == 6263 || npcType == 6265 || npcType == 6277)
		{
			p.bandosKills += 1;
		}
        BufferedReader in = new BufferedReader(new FileReader("./data/npcs/npcdrops.cfg"));
        String input;
        int on = 0;
        String[] splitEQL;
        String[] splitCOM;
        String[] splitDSH;
        String[] splitCLN;
        String[] splitSCL;
</code></pre>
<p>while ((input = in.readLine()) != null) {<br>
splitEQL = null; splitEQL = null; splitDSH = null; splitCLN = null; splitSCL = null;<br>
if (!input.startsWith("/") &amp;&amp; input.contains("=") &amp;&amp; input.contains(",") &amp;&amp; input.contains("-") &amp;&amp; input.contains(":")) {<br>
try {<br>
splitEQL = input.split("=");<br>
if (Integer.parseInt(splitEQL[0]) == npcID) {<br>
splitSCL = splitEQL[1].split(";");<br>
int Wealth=0;</p>
<p>for (int i = Wealth; i &lt; splitSCL.length; i++) {<br>
splitCOM = splitSCL[i].split(",");<br>
splitDSH = splitCOM[1].split("-");<br>
splitCLN = splitCOM[2].split(":");<br>
int item = Integer.parseInt(splitCOM[0]);<br>
int min = Integer.parseInt(splitDSH[0]);<br>
int max = Integer.parseInt(splitDSH[1]);<br>
int chance = Integer.parseInt(splitCLN[0]);<br>
int outOf = Integer.parseInt(splitCLN[1]);<br>
int amount = rand.nextInt((max - min)+1) + min;<br>
int ifDrop = rand.nextInt(outOf)+1;<br>
if (ifDrop &lt;= chance &amp;&amp; npccanloot == true)<br>
{<br>
Engine.items.createGroundItem(item, amount, abSX, abSY, heightLevel, p.username);<br>
npccanloot = false;<br>
switch (npcID)<br>
{<br>
case 103:<br>
Engine.items.createGroundItem(6812, 1, abSX, abSY, heightLevel, p.username);<br>
npccanloot = false;<br>
break;</p>
<pre><code>										}
									}
								}
							}
					} catch (Exception e) {							
						System.out.println("Exception dropping item:\n"+e);
					}
</code></pre>
<p>++on;<br>
}<br>
}<br>
in.close();<br>
} catch (IOException e) {<br>
System.out.println(e);<br>
}<br>
}</p>
<pre><code>/*
 * Created by momosherilly(in a post lol)
 */
private void checkNPC()
{
	switch (npcType)
	{
		/* Add all aggressive NPCs here */
		case 50:
		case 1158:
		case 6203:
		case 6208:
		case 6206:
		case 6204:
		case 6222:
		case 6223:
		case 6225:
		case 6227:
		case 6247:
		case 6248:
		case 6250:
		case 6252:
		case 6260:
		case 6265:
		case 6263:
		case 6261:
		case 1160:
		case 2745: /* Example */
			npcAggression(npcId);
			break;
		default: return;
	}
}
</code></pre>
<p>private void npcAggression(int j)<br>
{<br>
for (Player distantPlayers : Engine.players)<br>
{<br>
if (distantPlayers != null &amp;&amp; !distantPlayers.isDead)<br>
{<br>
if (!distantPlayers.isDead &amp;&amp; !Engine.npcs[j].isDead)<br>
{<br>
if (Misc.getDistance(Engine.npcs[j].absX, Engine.npcs[j].absY, distantPlayers.absX, distantPlayers.absY) &lt;= 1)<br>
{<br>
Engine.npcs[j].attackPlayer = distantPlayers.playerId;<br>
Engine.npcs[j].attackingPlayer = true;<br>
distantPlayers.attackNPC = j;<br>
distantPlayers.attackingNPC = true;<br>
}<br>
else if (Misc.getDistance(Engine.npcs[j].absX, Engine.npcs[j].absY, distantPlayers.absX, distantPlayers.absY) &gt;= 2 &amp;&amp; Misc.getDistance(Engine.npcs[j].absX, Engine.npcs[j].absY, distantPlayers.absX, distantPlayers.absY) &lt; 6)<br>
{<br>
//if (j != 2745) //Add following methods here.<br>
//Also add anything to do with following…<br>
}<br>
else if (Misc.getDistance(Engine.npcs[j].absX, Engine.npcs[j].absY, distantPlayers.absX, distantPlayers.absY) &gt;= 6)<br>
{<br>
Engine.npcs[j].attackingPlayer = false;<br>
break;<br>
}<br>
}<br>
}<br>
}<br>
}</p>
<pre><code>/**
 * The position this NPC is stored in the npc array in the Engine class.
 */
public int npcId = -1;

/**
 * The NPC's id, such as 50 for king black dragon.
 */
public int npcType = 0;

/**
 * The name of this NPC.
 */
public String name = "";

/**
 * If it should hit 0 HP, how long it should take to respawn.
 */
public int respawnDelay = 60;

/**
 * Emotes attacking, blocking and death.
 */
public int attackEmote = 0;
public int defendEmote = 0;
public int deathEmote = 0;

/**
 * Delay between attacking.
 */
public int attackDelay = 5;

/**
 * Its combat level, used for calculating its accuracy and defence.
 */
public int combatLevel = 0;

/**
 * Max hitpoints it can have.
 */
public int maxHP = 100;

/**
 * The basic max hit it can have, with an attack method you  can get more specific.
 */
public int maxHit = 15;

/**
 * Attack type, 0 for melee, 1 for range, 2 for magic.
 */
public int atkType = 0;

/**
 * The weakness, same setup as atkType.
 */
public int weakness = 0;

/**
 * The current HP this NPC has.
 */
public int currentHP = 100;

/**
 * The direction this NPC is moving in.
 */
public int direction = -1;

/**
 * The height level its at.
 */
public int heightLevel = 0;

/**
 * Request for updating facing.
 */
public boolean faceToUpdateReq = false;
public int faceToRequest = -1;

/**
 * If the NPC is dead or not.
 */
public boolean isDead = false;

/**
 * If the death emote has been requested, move on to the next part of the death process.
 */
public boolean deadEmoteDone = false;

/**
 * Hide the NPC until it is ready to respawn.
 */
public boolean hiddenNPC = false;

/**
 * Absolute positioning.
 */
public int absX = 0, absY = 0;

/**
 * If false, the NPC will not respawn if it dies.
 */
public boolean needsRespawn = false;

/**
 * If set to true, this NPC will randomly walk around.
 */
public boolean randomWalk = true;

/**
 * If an update is needed.
 */
public boolean updateReq = false;

/**
 * If the NPC should speak.
 */
public boolean speakTextUpdateReq = false;
public String speakText = "";

/**
 * Hit requests.
 */
public boolean hit1UpdateReq = false;
public boolean hit2UpdateReq = false;
public int hitDiff1 = 0;
public int posionHit1 = 0;
public int hitDiff2 = 0;
public int posionHit2 = 0;

/**
 * Animation request.
 */
public boolean animUpdateReq = false;
public int animRequest = 65535;
public int animDelay = 0;

/**
 * Graphic request.
 */
public boolean gfxUpdateReq = false;
public int gfxRequest = 65535;
public int gfxDelay = 0;

/**
 * Facing request.
 */
public boolean faceCoordsUpdateReq = false;
public int faceCoordsX = -1;
public int faceCoordsY = -1;

/**
 * The area this NPC can randomly walk around.
 */
public int moveRangeX1 = 0;
public int moveRangeY1 = 0;
public int moveRangeX2 = 0;
public int moveRangeY2 = 0;

/**
 * What should be added onto the absolute positioning if this NPC moves.
 */
public int moveX = 0;
public int moveY = 0;

/**
 * The original position the NPC spawned at.
 */
public int makeX = 0;
public int makeY = 0;

/**
 * Delay before the NPC can attack again.
 */
public int combatDelay = 0;
public int attackPlayer = 0;
public boolean attackingPlayer = false;

/**
 * Gives quick access to the frame class.
 */
public Frames frames = Engine.frames;


/**
 * Constructs a new NPC class.
 * @param type The type of NPC.
 * @param index The position the NPC is at.
 */
public NPC(int type, int index) {
    npcType = type;
    npcId = index;
}

/**
 * This method is called every 600 milliseconds.
 */
public void process() {
	checkNPC();
    if (respawnDelay &gt; 0 &amp;&amp; isDead) {
        respawnDelay--;
    }
    if (combatDelay &gt; 0) {
        combatDelay--;
    }
    if (attackingPlayer) {
        Engine.npcPlayerCombat.attackPlayer(this);
    }
}

/**
 * Request an animation for this NPC.
 * @param animId The amination to perform.
 * @param animD The delay before doing the animation.
 */
public void requestAnim(int animId, int animD) {
    animRequest = animId;
    animDelay = animD;
    animUpdateReq = true;
    updateReq = true;
}

/**
 * Request text for this NPC.
 * @param message The message to make the NPC say.
 */
public void requestText(String message) {
    speakText = message;
    animUpdateReq = true;
    speakTextUpdateReq = true;
}

/**
 * Request an graphic for this NPC.
 * @param gfxId The graphic to perform.
 * @param gfxD The delay or height or the gfx depending on the value.
 */
public void requestGFX(int gfxId, int gfxD) {
    if (gfxD &gt;= 100) {
        gfxD += 6553500;
    }
    gfxRequest = gfxId;
    gfxDelay = gfxD;
    gfxUpdateReq = true;
    updateReq = true;
}

/**
 * Request this NPC faces two coordinates.
 * @param x The x coordinate to face.
 * @param y The y coordinate to face.
 */
public void requestFaceCoords(int x, int y) {
    faceCoordsX = 2 * x + 1;
    faceCoordsY = 2 * y + 1;
    faceCoordsUpdateReq = true;
    updateReq = true;
}

/**
 * Request this NPC faces another NPC or player.
 * @param faceId The target to face.
 */
public void requestFaceTo(int faceId) {
    faceToRequest = faceId;
    faceToUpdateReq = true;
    updateReq = true;
}

/**
 * Add damage to this NPC.
 * @param damage To amount of damage.
 * @param posion 0 for normal damage, 1 for posion.
 */
public void appendHit(int damage, int posion) {
    if (damage &gt; currentHP) {
        damage = currentHP;
    }
    currentHP -= damage;
    if (currentHP &lt;= 0) {
        currentHP = 0;
        attackingPlayer = false;
        isDead = true;
    }
    if (!hit1UpdateReq) {
        hitDiff1 = damage;
        posionHit1 = posion;
        hit1UpdateReq = true;
    } else {
        hitDiff2 = damage;
        posionHit2 = posion;
        hit2UpdateReq = true;
    }
    updateReq = true;
}
</code></pre>
<p>}<br>
[/code]</p>
<p>Also here is a video of my problem:</p>
<p><a href="http://www.youtube.com/watch?v=nFWxyivuugk" class="onebox" target="_blank" rel="nofollow noopener">http://www.youtube.com/watch?v=nFWxyivuugk</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/508-aggreive-npcs-not-following-attacking-player-answer-d-claws-4x-method/264834/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/508-aggreive-npcs-not-following-attacking-player-answer-d-claws-4x-method/264834/1</link>
        <pubDate>Fri, 27 Feb 2009 21:54:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-264834-1</guid>
        <source url="https://forum.moparisthebest.com/t/508-aggreive-npcs-not-following-attacking-player-answer-d-claws-4x-method/264834.rss">[508] Aggreive NPC&#39;s not following attacking player(answer=d claws 4x method)</source>
      </item>
  </channel>
</rss>
