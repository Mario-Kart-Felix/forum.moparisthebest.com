<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[Python]Crypt</title>
    <link>https://forum.moparisthebest.com/t/python-crypt/189232</link>
    <description>[code=python]
import sys

class Main(object):
    def fileen(self):
        tofile = raw_input(&quot;What file would you like to encrypt: &quot;)
        file = open(tofile, &quot;r&quot;)
        output = open(&quot;output.txt&quot;, &quot;w&quot;)
        input = file.read()
        firstencode = input.encode(&quot;base64&quot;)
        secondencode = firstencode.encode(&quot;rot13&quot;)
        output.write(secondencode)
        output.close()
        file.close()
        print &quot;\nSucceeded in encoding the file using base64 and rot13 encryption type! \n&quot;
        while 1:
            answer = raw_input(&quot;Press R To restart, and any other key to stop: &quot;)
            if answer == &quot;r&quot;:
                self.fileorstring()
            elif answer == &quot;R&quot;:
                self.fileorstring()
            else:
                sys.exit(1)
    
    def normalen(self):
        toEncode = raw_input(&quot;What string would you like to encrypt: &quot;)
        EncodedFirst = toEncode.encode(&quot;base64&quot;)
        EncodedSecond = EncodedFirst.encode(&quot;rot13&quot;)
        print &quot;\nFinal encrypted string is &quot; + EncodedSecond + &quot;\n&quot;
        while 1:
            answer = raw_input(&quot;Press R To restart, and any other key to stop: &quot;)
            if answer == &quot;r&quot;:
                self.fileorstring()
            elif answer == &quot;R&quot;:
                self.fileorstring()
            else:
                sys.exit(1)
        
    def filedeen(self):
        tofile = raw_input(&quot;What file would you like to encrypt: &quot;)
        file = open(tofile, &quot;r&quot;)
        output = open(&quot;output.txt&quot;, &quot;w&quot;)
        input = file.read()
        firstDecode = input.decode(&quot;rot13&quot;)
        secondDecode = firstDecode.decode(&quot;base64&quot;)
        output.write(secondencode)
        output.close()
        file.close()
        print &quot;\nSucceeded in Decoding the file using base64 and rot13 encryption type! \n&quot;
        while 1:
            answer = raw_input(&quot;Press R To restart, and any other key to stop: &quot;)
            if answer == &quot;r&quot;:
                self.fileorstring()
            elif answer == &quot;R&quot;:
                self.fileorstring()
            else:
                sys.exit(1)
    
    def normaldeen(self):
        toDecode = raw_input(&quot;What string would you like to encrypt: &quot;)
        DecodedFirst = toDecode.decode(&quot;rot13&quot;)
        DecodedSecond = DecodedFirst.decode(&quot;base64&quot;)
        print &quot;\nFinal decrypted string is &quot; + DecodedSecond + &quot;\n&quot;
        while 1:
            answer = raw_input(&quot;Press R To restart, and any other key to stop: &quot;)
            if answer == &quot;r&quot;:
                self.fileorstring()
            elif answer == &quot;R&quot;:
                self.fileorstring()
            else:
                sys.exit(1)
        
    def fileorstring(self):
        y = raw_input(&quot;Press e to Encode, or d to Decode: &quot;)
        if y == &quot;e&quot;:
            z = raw_input(&quot;Press f to Encode a file, or s to Encode a string: &quot;)
            if z == &quot;f&quot;:
                self.fileen()
            elif z == &quot;s&quot;:
                self.normalen()
        elif y == &quot;d&quot;:
            z = raw_input(&quot;Press f to Decode a file, or s to Decode a string: &quot;)
            if z == &quot;f&quot;:
                self.filedeen()
            elif z == &quot;s&quot;:
                self.normaldeen()

print &quot;Welcome to *Crypt&quot;
M = Main()
M.fileorstring()[/code]

Dix etc.</description>
    
    <lastBuildDate>Sat, 15 Mar 2008 03:09:15 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/python-crypt/189232.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[Python]Crypt</title>
        <dc:creator><![CDATA[@Yz85Racer Yz85Racer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/yz85racer">@Yz85Racer</a> wrote:</p>
          <blockquote>
              <p>Naise work Cowie.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/python-crypt/189232/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/python-crypt/189232/3</link>
        <pubDate>Sat, 15 Mar 2008 03:09:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-189232-3</guid>
        <source url="https://forum.moparisthebest.com/t/python-crypt/189232.rss">[Python]Crypt</source>
      </item>
      <item>
        <title>[Python]Crypt</title>
        <dc:creator><![CDATA[@sppt sppt]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sppt">@sppt</a> wrote:</p>
          <blockquote>
              <p>looks good, i like it <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/python-crypt/189232/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/python-crypt/189232/2</link>
        <pubDate>Sat, 15 Mar 2008 02:48:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-189232-2</guid>
        <source url="https://forum.moparisthebest.com/t/python-crypt/189232.rss">[Python]Crypt</source>
      </item>
      <item>
        <title>[Python]Crypt</title>
        <dc:creator><![CDATA[@eVokki1 Cowie`]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/evokki1">@eVokki1</a> wrote:</p>
          <blockquote>
              <p>[code=python]<br>
import sys</p>
<p>class Main(object):<br>
def fileen(self):<br>
tofile = raw_input("What file would you like to encrypt: ")<br>
file = open(tofile, “r”)<br>
output = open(“output.txt”, “w”)<br>
input = file.read()<br>
firstencode = input.encode(“base64”)<br>
secondencode = firstencode.encode(“rot13”)<br>
output.write(secondencode)<br>
output.close()<br>
file.close()<br>
print “\nSucceeded in encoding the file using base64 and rot13 encryption type! \n”<br>
while 1:<br>
answer = raw_input("Press R To restart, and any other key to stop: ")<br>
if answer == “r”:<br>
self.fileorstring()<br>
elif answer == “R”:<br>
self.fileorstring()<br>
else:<br>
sys.exit(1)</p>
<pre><code>def normalen(self):
    toEncode = raw_input("What string would you like to encrypt: ")
    EncodedFirst = toEncode.encode("base64")
    EncodedSecond = EncodedFirst.encode("rot13")
    print "\nFinal encrypted string is " + EncodedSecond + "\n"
    while 1:
        answer = raw_input("Press R To restart, and any other key to stop: ")
        if answer == "r":
            self.fileorstring()
        elif answer == "R":
            self.fileorstring()
        else:
            sys.exit(1)
    
def filedeen(self):
    tofile = raw_input("What file would you like to encrypt: ")
    file = open(tofile, "r")
    output = open("output.txt", "w")
    input = file.read()
    firstDecode = input.decode("rot13")
    secondDecode = firstDecode.decode("base64")
    output.write(secondencode)
    output.close()
    file.close()
    print "\nSucceeded in Decoding the file using base64 and rot13 encryption type! \n"
    while 1:
        answer = raw_input("Press R To restart, and any other key to stop: ")
        if answer == "r":
            self.fileorstring()
        elif answer == "R":
            self.fileorstring()
        else:
            sys.exit(1)

def normaldeen(self):
    toDecode = raw_input("What string would you like to encrypt: ")
    DecodedFirst = toDecode.decode("rot13")
    DecodedSecond = DecodedFirst.decode("base64")
    print "\nFinal decrypted string is " + DecodedSecond + "\n"
    while 1:
        answer = raw_input("Press R To restart, and any other key to stop: ")
        if answer == "r":
            self.fileorstring()
        elif answer == "R":
            self.fileorstring()
        else:
            sys.exit(1)
    
def fileorstring(self):
    y = raw_input("Press e to Encode, or d to Decode: ")
    if y == "e":
        z = raw_input("Press f to Encode a file, or s to Encode a string: ")
        if z == "f":
            self.fileen()
        elif z == "s":
            self.normalen()
    elif y == "d":
        z = raw_input("Press f to Decode a file, or s to Decode a string: ")
        if z == "f":
            self.filedeen()
        elif z == "s":
            self.normaldeen()
</code></pre>
<p>print “Welcome to *Crypt”<br>
M = Main()<br>
M.fileorstring()[/code]</p>
<p>Dix etc.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/python-crypt/189232/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/python-crypt/189232/1</link>
        <pubDate>Sat, 15 Mar 2008 02:38:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-189232-1</guid>
        <source url="https://forum.moparisthebest.com/t/python-crypt/189232.rss">[Python]Crypt</source>
      </item>
  </channel>
</rss>
