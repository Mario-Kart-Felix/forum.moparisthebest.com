<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Itemassistant.java help! still need help</title>
    <link>https://forum.moparisthebest.com/t/itemassistant-java-help-still-need-help/503202</link>
    <description>ok my capes i just added= added 55 new capes and there all going to weapon spot now idk where to add in itemassistant had to delete alot so if i deleted let me know over 20000 characters
[code]package server.model.items;
public class ItemAssistant {

	private Client c;
	
	public ItemAssistant(Client client) {
		this.c = client;
	}
		
	/**
	Items
	**/

	public int getCarriedWealth() {
		int toReturn = 0;
		for (int i = 0; i &lt; c.playerEquipment.length; i++) {
			if (c.playerEquipment[i] &gt; 0 &amp;&amp; Server.itemHandler.ItemList[c.playerEquipment[i]] 

!= null)
				toReturn += (Server.itemHandler.ItemList[c.playerEquipment[i]].ShopValue 

* c.playerEquipmentN[i]);
		}
		for (int i = 0; i &lt; c.playerItems.length; i++) {
			if (c.playerItems[i] &gt; 0 &amp;&amp; Server.itemHandler.ItemList[c.playerItems[i]] != 

null)
				toReturn += (Server.itemHandler.ItemList[c.playerItems[i]].ShopValue * 

c.playerItemsN[i]);
		}
		return toReturn;
		
	}
public boolean updateInventory = false;
	
	public void updateInventory() {
		updateInventory = false;
		resetItems(3214);
	}
	public int[][] brokenBarrows = {{4708,4860},{4710,4866},{4712,4872},{4714,4878},{4716,4884},
	{4720,4896},{4718,4890},{4720,4896},{4722,4902},{4732,4932},{4734,4938},{4736,4944},{4738,4950},
	{4724,4908},{4726,4914},{4728,4920},{4730,4926},{4745,4956},{4747,4926},{4749,4968},{4751,4794},
	{4753,4980},{4755,4986},{4757,4992},{4759,4998}};

	public void resetItems(int WriteFrame) {
		synchronized(c) {
			if(c.getOutStream() != null &amp;&amp; c != null) {
				c.getOutStream().createFrameVarSizeWord(53);
				c.getOutStream().writeWord(WriteFrame);
				c.getOutStream().writeWord(c.playerItems.length);
				for (int i = 0; i &lt; c.playerItems.length; i++) {
					if(c.playerItemsN[i] &gt; 254) {
						c.getOutStream().writeByte(255); 		
						c.getOutStream().writeDWord_v2(c.playerItemsN[i]);
					} else {
						c.getOutStream().writeByte(c.playerItemsN[i]);
					}
					c.getOutStream().writeWordBigEndianA(c.playerItems[i]); 
				}
				c.getOutStream().endFrameVarSizeWord();
				c.flushOutStream();
			}
		}
	}
	
		public int getEquipmentNet(Client c) {
		int toReturn = 0;
		for (int i = 0; i &lt; c.playerEquipment.length; i++) {
			toReturn += (c.getShops().getItemShopValue(c.playerEquipment[i]) * 

c.playerEquipmentN[i]);
		}
		return toReturn;
	}

	public int getInventoryNet(Client c) {
		int toReturn = 0;
		for (int i = 0; i &lt; c.playerItems.length; i++) {
			toReturn += (c.getShops().getItemShopValue(c.playerItems[i]+1) * c.playerItemsN

[i]);
		}
		return toReturn;
	}

	/**

	*End of Event
	**/

	public int getBankAmount(int item) {
		int count = 0;	
		for (int j = 0; j &lt; c.bankItems.length; j++) {
			if (c.bankItems[j] == item + 1) {
				count += c.bankItemsN[j];
			}		
		}
		return count;
	}
	
	public int getItemCount(int itemID) {
		int count = 0;	
		for (int j = 0; j &lt; c.playerItems.length; j++) {
			if (c.playerItems[j] == itemID + 1) {
				count += c.playerItemsN[j];
			}		
		}
		return count;
	}
	
	public void writeBonus() {
		int offset = 0;
		String send = &quot;&quot;;
		for (int i = 0; i &lt; c.playerBonus.length; i++) {
			if (c.playerBonus[i] &gt;= 0) {
				send = BONUS_NAMES[i]+&quot;: +&quot;+c.playerBonus[i];
			} else {
				send = BONUS_NAMES[i]+&quot;: -&quot;+java.lang.Math.abs(c.playerBonus[i]);
			}

			if (i == 10) {
				offset = 1;
			}
			c.getPA().sendFrame126(send, (1675+i+offset));
		}

	}
	
	public int getTotalCount(int itemID) {
		int count = 0;	
		for (int j = 0; j &lt; c.playerItems.length; j++) {
			if (Item.itemIsNote[itemID+1]) {
				if (itemID+2 == c.playerItems[j])
					count += c.playerItemsN[j];
			} 
			if (!Item.itemIsNote[itemID+1]) {
				if (itemID+1 == c.playerItems[j]) {
					count += c.playerItemsN[j];
				}
			}
		}
		for (int j = 0; j &lt; c.bankItems.length; j++) {
			if (c.bankItems[j] == itemID + 1) {
				count += c.bankItemsN[j];
			}		
		}
		return count;
	}
	
	public void sendItemsKept() {
		synchronized(c) {
			if(c.getOutStream() != null &amp;&amp; c != null ) {
				c.getOutStream().createFrameVarSizeWord(53);
				c.getOutStream().writeWord(6963);
				c.getOutStream().writeWord(c.itemKeptId.length);
				for (int i = 0; i &lt; c.itemKeptId.length; i++) {
					if(c.playerItemsN[i] &gt; 254) {
						c.getOutStream().writeByte(255); 
						c.getOutStream().writeDWord_v2(1);
					} else {
						c.getOutStream().writeByte(1);
					}
					if(c.itemKeptId[i] &gt; 0) {
					   c.getOutStream().writeWordBigEndianA(c.itemKeptId[i]+1);
					} else {
						c.getOutStream().writeWordBigEndianA(0);
					}
				}
				c.getOutStream().endFrameVarSizeWord();   
				c.flushOutStream();
			}
		}
    }

	/**
	*Add Item
	**/
	public boolean addItem(int item, int amount) {
		synchronized(c) {
                                                                if(item == CastleWars.SARA_BANNER || item 

== CastleWars.ZAMMY_BANNER)
				return false;
			if (amount &lt; 1) {
				amount = 1;
			}
			if(item &lt;= 0) {
				return false;
			}
			if ((((freeSlots() &gt;= 1) || playerHasItem(item, 1)) &amp;&amp; Item.itemStackable[item]) 

|| ((freeSlots() &gt; 0) &amp;&amp; !Item.itemStackable[item])) {
				for (int i = 0; i &lt; c.playerItems.length; i++) {
					if ((c.playerItems[i] == (item + 1)) &amp;&amp; Item.itemStackable[item]
							&amp;&amp; (c.playerItems[i] &gt; 0)) {
						c.playerItems[i] = (item + 1);
						if (((c.playerItemsN[i] + amount) &lt; 

Config.MAXITEM_AMOUNT)
								&amp;&amp; ((c.playerItemsN[i] + amount) &gt; -1)) {
							c.playerItemsN[i] += amount;
						} else {
							c.playerItemsN[i] = Config.MAXITEM_AMOUNT;
						}
						/*if(c.getOutStream() != null &amp;&amp; c != null ) {
							c.getOutStream().createFrameVarSizeWord(34);
							c.getOutStream().writeWord(3214);
							c.getOutStream().writeByte(i);
							c.getOutStream().writeWord(c.playerItems[i]);
							if (c.playerItemsN[i] &gt; 254) {
								c.getOutStream().writeByte(255);
								c.getOutStream().writeDWord

(c.playerItemsN[i]);
							} else {
								c.getOutStream().writeByte

(c.playerItemsN[i]);
							}
							c.getOutStream().endFrameVarSizeWord();
							c.flushOutStream();
						}*/
						updateInventory = true;
						updateInventory();
						i = 30;
						return true;
					}
				}
				for (int i = 0; i &lt; c.playerItems.length; i++) {
					if (c.playerItems[i] &lt;= 0) {
						c.playerItems[i] = item + 1;
						if ((amount &lt; Config.MAXITEM_AMOUNT) &amp;&amp; (amount &gt; -1)) {
							c.playerItemsN[i] = 1;
							if (amount &gt; 1) {
								c.getItems().addItem(item, amount - 1);
								return true;
							}
						} else {
							c.playerItemsN[i] = Config.MAXITEM_AMOUNT;
						}
						/*if(c.getOutStream() != null &amp;&amp; c != null ) {
							c.getOutStream().createFrameVarSizeWord(34);
							c.getOutStream().writeWord(3214);
							c.getOutStream().writeByte(i);
							c.getOutStream().writeWord(c.playerItems[i]);
							if (c.playerItemsN[i] &gt; 254) {
								c.getOutStream().writeByte(255);
								c.getOutStream().writeDWord

(c.playerItemsN[i]);
							} else {
								c.getOutStream().writeByte

(c.playerItemsN[i]);
							}
							c.getOutStream().endFrameVarSizeWord();
							c.flushOutStream();
						}*/
						//resetItems(3214);
						updateInventory = true;			
						updateInventory();						
						i = 30;
						return true;
					}
				}
				return false;
			} else {
				updateInventory = true;
				updateInventory();
				//resetItems(3214);
				c.sendMessage(&quot;Not enough space in your inventory.&quot;);
				return false;
			}
		}
	}
	
	public String itemType(int item) {
		if(Item.playerCape(item)) {
			return &quot;cape&quot;;
		}
		if(Item.playerBoots(item)) {
			  return &quot;boots&quot;;
		}
		if(Item.playerGloves(item)) {
			  return &quot;gloves&quot;;
		}
		if(Item.playerShield(item)) {
			return &quot;shield&quot;;
		}
		if(Item.playerAmulet(item)) {
			return &quot;amulet&quot;;
		}
		if(Item.playerArrows(item)) {
			return &quot;arrows&quot;;
		}
		if(Item.playerRings(item)) {
			return &quot;ring&quot;;
		}
		if(Item.playerHats(item)) {
			return &quot;hat&quot;;
		}
		if(Item.playerLegs(item)) {
			return &quot;legs&quot;;
		}
		if(Item.playerBody(item)) {
			return &quot;body&quot;;
		}
		if (item == 1) {
			return &quot;cape&quot;;
		}
		if (item == 1052) {
			return &quot;cape&quot;;
		}
		if (item == 19712) {
			return &quot;shield&quot;;
		}
		if (item == 16711) {
			return &quot;hat&quot;;
		}
                if (item == 19747) {
			return &quot;hat&quot;;
		}
		if (item == 16733) {
			return &quot;body&quot;;
		}
		if (item == 17259) {
			return &quot;body&quot;;
		}
                if (item == 14791) {
			return &quot;hat&quot;;
                }
		if (item == 16689) {
			return &quot;legs&quot;;
		}
		if (item == 11118) {
			return &quot;ring&quot;;
		}
				if (item == 15117) {
			return &quot;cape&quot;;
		}
						if (item == 9419) {
			return &quot;Arrows&quot;;
		}
				if (item == 15120) {
			return &quot;cape&quot;;
		}
				if (item == 15121) {
			return &quot;cape&quot;;
		}
		if (item == 15118) {
		return &quot;hat&quot;;
		}
				if (item == 15119) {
			return &quot;hat&quot;;
		}
				if (item == 15124) {
			return &quot;hat&quot;;
		}
		
				if (item == 11119) {
			return &quot;ring&quot;;
		}
				if (item == 11120) {
			return &quot;ring&quot;;
		}
				if (item == 11121) {
			return &quot;ring&quot;;
		}
				if (item == 11122) {
			return &quot;ring&quot;;
		}
				if (item == 11123) {
			return &quot;ring&quot;;
		}
				if (item == 11124) {
			return &quot;ring&quot;;
		}
				if (item == 11125) {
			return &quot;ring&quot;;
		}
				if (item == 11126) {
			return &quot;ring&quot;;
		}
				if (item == 11127) {
			return &quot;ring&quot;;
		}
		if (item == 16667) {
			return &quot;legs&quot;;
		}
		if (item == 17361) {
			return &quot;shield&quot;;
		}
		if (item == 16359) {
			return &quot;boots&quot;;
		}
		if (item == 16293) {
			return &quot;gloves&quot;;
		}
		if (item == 20116) {
			return &quot;body&quot;;
		}
		return &quot;weapon&quot;;
	}
	
	/**
	*Bonuses
	**/

	public final String[] BONUS_NAMES = {
		&quot;Stab&quot;, &quot;Slash&quot;, &quot;Crush&quot;, &quot;Magic&quot;, &quot;Range&quot;, &quot;Stab&quot;, &quot;Slash&quot;,
		&quot;Crush&quot;, &quot;Magic&quot;, &quot;Range&quot;, &quot;Strength&quot;, &quot;Prayer&quot;
	};
	public void resetBonus() {
		for (int i = 0; i &lt; c.playerBonus.length; i++) {
			c.playerBonus[i] = 0;
		}
	}
	public void getBonus() {
		for (int i = 0; i &lt; c.playerEquipment.length; i++) {
			if (c.playerEquipment[i] &gt; -1) {
				for (int j = 0; j &lt; Config.ITEM_LIMIT; j++) {
					if (Server.itemHandler.ItemList[j] != null){
							if (Server.itemHandler.ItemList[j].itemId == 

c.playerEquipment[i]) {
							for (int k = 0; k &lt; c.playerBonus.length; k++) {
								c.playerBonus[k] += 

Server.itemHandler.ItemList[j].Bonuses[k];
							}
							break;
						}
					}
				}
			}
		}
	}
	
	
	/**
	*Wear Item
	**/

	public void sendWeapon(int Weapon, String WeaponName) {
		String WeaponName2 = WeaponName.replaceAll(&quot;Bronze&quot;, &quot;&quot;);
		WeaponName2 = WeaponName2.replaceAll(&quot;Iron&quot;, &quot;&quot;);
		WeaponName2 = WeaponName2.replaceAll(&quot;Steel&quot;, &quot;&quot;);
		WeaponName2 = WeaponName2.replaceAll(&quot;Black&quot;, &quot;&quot;);
		WeaponName2 = WeaponName2.replaceAll(&quot;Mithril&quot;, &quot;&quot;);
		WeaponName2 = WeaponName2.replaceAll(&quot;Adamant&quot;, &quot;&quot;);
		WeaponName2 = WeaponName2.replaceAll(&quot;Rune&quot;, &quot;&quot;);
		WeaponName2 = WeaponName2.replaceAll(&quot;Granite&quot;, &quot;&quot;);
		WeaponName2 = WeaponName2.replaceAll(&quot;Dragon&quot;, &quot;&quot;);
		WeaponName2 = WeaponName2.replaceAll(&quot;Drag&quot;, &quot;&quot;);
		WeaponName2 = WeaponName2.replaceAll(&quot;Crystal&quot;, &quot;&quot;);
		WeaponName2 = WeaponName2.trim();
		if (WeaponName.equals(&quot;Unarmed&quot;)) {
			c.setSidebarInterface(0, 5855); //punch, kick, block
			c.getPA().sendFrame126(WeaponName, 5857);
		} else if (WeaponName.endsWith(&quot;whip&quot;)) {
			c.setSidebarInterface(0, 12290); //flick, lash, deflect
			c.getPA().sendFrame246(12291, 200, Weapon);
			c.getPA().sendFrame126(WeaponName, 12293);
            } else if (WeaponName2.toLowerCase().contains(&quot;maul&quot;) || WeaponName.endsWith(&quot;warhammer&quot;)) {
            c.setSidebarInterface(0, 425); //war hamer equip.
            c.getPA().sendFrame246(426, 200, Weapon);
            c.getPA().sendFrame126(WeaponName, 428);
		} else if (WeaponName.endsWith(&quot;bow&quot;) || WeaponName.endsWith(&quot;10&quot;) || c.playerEquipment

[c.playerWeapon] == 13879 || c.playerEquipment[c.playerWeapon] == 15241 || c.playerEquipment

[c.playerWeapon] == 18357 || c.playerEquipment[c.playerWeapon] == 13880 || c.playerEquipment

[c.playerWeapon] == 13881 || c.playerEquipment[c.playerWeapon] == 13882 || c.playerEquipment

[c.playerWeapon] == 13883 || WeaponName.endsWith(&quot;full&quot;) || WeaponName.startsWith(&quot;seercull&quot;)) {
			c.setSidebarInterface(0, 1764); //accurate, rapid, longrange
			c.getPA().sendFrame246(1765, 200, Weapon);
			// c.getPA().sendFrame126(WeaponName, 1767);
		} else if (WeaponName2.startsWith(&quot;dagger&quot;) || c.playerEquipment[c.playerWeapon] == 13905 

|| c.playerEquipment[c.playerWeapon] == 13899 || WeaponName2.contains(&quot;Staff of light&quot;) || 

c.playerEquipment[c.playerWeapon] == 18349 || c.playerEquipment[c.playerWeapon] == 10887 || 

WeaponName2.contains(&quot;sword&quot;)) {
			c.setSidebarInterface(0, 2276); //stab, lunge, slash, block
			c.getPA().sendFrame246(2277, 200, Weapon);
			c.getPA().sendFrame126(WeaponName, 2279);
		} else if (WeaponName.startsWith(&quot;Staff&quot;) || WeaponName.endsWith(&quot;staff&quot;) || 

WeaponName.endsWith(&quot;wand&quot;)) {
			c.setSidebarInterface(0, 328); //spike, impale, smash, block
			c.getPA().sendFrame246(329, 200, Weapon);
			c.getPA().sendFrame126(WeaponName, 331);
		} else if (WeaponName2.startsWith(&quot;dart&quot;) || WeaponName2.startsWith(&quot;knife&quot;) || 

WeaponName2.startsWith(&quot;javelin&quot;) || WeaponName.equalsIgnoreCase(&quot;toktz-xil-ul&quot;)) {
			c.setSidebarInterface(0, 4446); //accurate, rapid, longrange
			c.getPA().sendFrame246(4447, 200, Weapon);
			c.getPA().sendFrame126(WeaponName, 4449);
		} else if (WeaponName2.startsWith(&quot;pickaxe&quot;)) {
			c.setSidebarInterface(0, 5570); //spike, impale, smash, block
			c.getPA().sendFrame246(5571, 200, Weapon);
			c.getPA().sendFrame126(WeaponName, 5573);
		} else if (WeaponName2.startsWith(&quot;axe&quot;) || WeaponName2.startsWith(&quot;battleaxe&quot;)) {
			c.setSidebarInterface(0, 1698); //chop, hack, smash, block
			c.getPA().sendFrame246(1699, 200, Weapon);
			c.getPA().sendFrame126(WeaponName, 1701);
		} else if (WeaponName2.startsWith(&quot;halberd&quot;)) {
			c.setSidebarInterface(0, 8460); //jab, swipe, fend
			c.getPA().sendFrame246(8461, 200, Weapon);
			c.getPA().sendFrame126(WeaponName, 8463);
        } else if (c.playerEquipment[c.playerWeapon] == 14484) {
            c.setSidebarInterface(0, 7762); //claws
            c.getPA().sendFrame246(7763, 200, Weapon);
            c.getPA().sendFrame126(WeaponName, 7765);
		} else if (WeaponName2.startsWith(&quot;scythe&quot;)) {
			c.setSidebarInterface(0, 8460); //jab, swipe, fend
			c.getPA().sendFrame246(8461, 200, Weapon);
			c.getPA().sendFrame126(WeaponName, 8463);
		} else if (WeaponName2.startsWith(&quot;spear&quot;)) {
			c.setSidebarInterface(0, 4679); //lunge, swipe, pound, block
			c.getPA().sendFrame246(4680, 200, Weapon);
			c.getPA().sendFrame126(WeaponName, 4682);
		} else if (WeaponName2.toLowerCase().contains(&quot;mace&quot;) || c.playerEquipment

[c.playerWeapon] == 13902){
			c.setSidebarInterface(0, 3796);
			c.getPA().sendFrame246(3797, 200, Weapon);
			c.getPA().sendFrame126(WeaponName, 3799);
		} else if (c.playerEquipment[c.playerWeapon] == 4153) {
			c.setSidebarInterface(0, 425); //war hamer equip.
			c.getPA().sendFrame246(426, 200, Weapon);
			c.getPA().sendFrame126(WeaponName, 428);	
		} else if (c.playerEquipment[c.playerWeapon] == 18351) {
			c.setSidebarInterface(0, 2423); //war hamer equip.
			c.getPA().sendFrame246(426, 200, Weapon);
			c.getPA().sendFrame126(WeaponName, 428);	
		} else {
			c.setSidebarInterface(0, 2423); //chop, slash, lunge, block
			c.getPA().sendFrame246(2424, 200, Weapon);
			c.getPA().sendFrame126(WeaponName, 2426);
		}
		
	}
	

	/**
	*Weapon Requirements
	**/
	
	public void getRequirements(String itemName, int itemId) {
		c.attackLevelReq = c.defenceLevelReq = c.strengthLevelReq = c.rangeLevelReq = 

c.slayerLevelReq = c.dungLevelReq = c.magicLevelReq = c.Donatorreq = 0;
		if(itemName.contains(&quot;mystic&quot;) || itemName.contains(&quot;nchanted&quot;)) {
		if (itemName.contains(&quot;staff of light&quot;)) {
			c.magicLevelReq = 75;
			c.attackLevelReq = 75;		
		}
			if(itemName.contains(&quot;staff&quot;)) {
				c.magicLevelReq = 20;
				c.attackLevelReq = 40;
			} else {
				c.magicLevelReq = 20;
				c.defenceLevelReq = 20;
			}
		}

		
		

		if (itemName.contains(&quot;infinity&quot;)) {
			c.magicLevelReq = 50;
			c.defenceLevelReq = 25;		
		}
		if(itemName.contains(&quot;splitbark&quot;)) {
			c.magicLevelReq = 40;
			c.defenceLevelReq = 40;
		}
		if (itemName.contains(&quot;rune c&#39;bow&quot;)) {
			c.rangeLevelReq = 61;
		}
		if (itemName.contains(&quot;black d&#39;hide&quot;)) {
			c.rangeLevelReq = 70;
		}
		if (itemName.contains(&quot;slayer helmet&quot;)) {
			c.defenceLevelReq = 35;
		}
		if (itemName.contains(&quot;falador sh&quot;)) {
			c.defenceLevelReq = 30;
		}
		if (itemName.contains(&quot;gilded&quot;)) {
			c.defenceLevelReq = 40;
		}
		if (itemName.contains(&quot;third-age&quot;)) {
			c.defenceLevelReq = 40;
		}
		if (itemName.contains(&quot;tzhaar-ket-om&quot;)) {
			c.strengthLevelReq = 60;
		}
		if (itemName.contains(&quot;red d&#39;hide&quot;)) {
			c.rangeLevelReq = 60;
		}
		if (itemName.contains(&quot;blue d&#39;hide&quot;)) {
			c.rangeLevelReq = 50;
		}
		if (itemName.contains(&quot;green d&#39;hide&quot;)) {
			c.rangeLevelReq = 40;
		}
		if (itemName.contains(&quot;snakeskin&quot;)) {
			c.rangeLevelReq = 40;
			c.defenceLevelReq = 30;
		}
		if (itemName.contains(&quot;initiate&quot;)) {
			c.defenceLevelReq = 20;
		}
		if(itemName.contains(&quot;bronze&quot;)) {
			if(!itemName.contains(&quot;knife&quot;) &amp;&amp; !itemName.contains(&quot;dart&quot;) &amp;&amp; !

itemName.contains(&quot;javelin&quot;) &amp;&amp; !itemName.contains(&quot;thrownaxe&quot;)) {
				c.attackLevelReq = c.defenceLevelReq = 1;
			}
			return;
		}
		if(itemName.contains(&quot;iron&quot;)) {
			if(!itemName.contains(&quot;knife&quot;) &amp;&amp; !itemName.contains(&quot;dart&quot;) &amp;&amp; !

itemName.contains(&quot;javelin&quot;) &amp;&amp; !itemName.contains(&quot;thrownaxe&quot;)) {
				c.attackLevelReq = c.defenceLevelReq = 1;
			}	
			return;
		}
		if(itemName.contains(&quot;steel&quot;)) {	
			if(!itemName.contains(&quot;knife&quot;) &amp;&amp; !itemName.contains(&quot;dart&quot;) &amp;&amp; !

itemName.contains(&quot;javelin&quot;) &amp;&amp; !itemName.contains(&quot;thrownaxe&quot;)) {
				c.attackLevelReq = c.defenceLevelReq = 5;
			}
			return;
		}
		if(itemName.contains(&quot;mithril&quot;)) {
			if(!itemName.contains(&quot;knife&quot;) &amp;&amp; !itemName.contains(&quot;dart&quot;) &amp;&amp; !

itemName.contains(&quot;javelin&quot;) &amp;&amp; !itemName.contains(&quot;thrownaxe&quot;)) {
				c.attackLevelReq = c.defenceLevelReq = 20;
			}
			return;
		}
		if(itemName.contains(&quot;adamant&quot;)) {
			if(!itemName.contains(&quot;knife&quot;) &amp;&amp; !itemName.contains(&quot;dart&quot;) &amp;&amp; !

itemName.contains(&quot;javelin&quot;) &amp;&amp; !itemName.contains(&quot;thrownaxe&quot;)) {
				c.attackLevelReq = c.defenceLevelReq = 30;
			}
			return;
		}
		if(itemName.contains(&quot;rune&quot;)) {
			if(!itemName.contains(&quot;knife&quot;) &amp;&amp; !itemName.contains(&quot;dart&quot;) &amp;&amp; !

itemName.contains(&quot;javelin&quot;) &amp;&amp; !itemName.contains(&quot;thrownaxe&quot;) &amp;&amp; !itemName.contains(&quot;&#39;bow&quot;)) {
				c.attackLevelReq = c.defenceLevelReq = 40;
			}
			return;
		}
		if(itemName.contains(&quot;granite shield&quot;)) {
			if(!itemName.contains(&quot;maul&quot;)){
				c.defenceLevelReq = 50	;
			}
			return;
		}
		if(itemName.contains(&quot;granite maul&quot;)) {
			if(!itemName.contains(&quot;shield&quot;)){
				c.attackLevelReq = 50	;
			}
			return;
		}
		if(itemName.contains(&quot;warrior&quot;)) {
			if(!itemName.contains(&quot;ring&quot;)){
				c.defenceLevelReq = 40	;
			}
			return;
		}
		if(itemName.contains(&quot;dragonfire&quot;)) {
			
				c.defenceLevelReq = 75	;

		}
		if(itemName.contains(&quot;flameburst&quot;)) {
			
				c.defenceLevelReq = 65;
			
		}
		if(itemName.contains(&quot;enchanted&quot;)) {
			
				c.defenceLevelReq = 40;
			
			
		}
		if(itemName.contains(&quot;primal kite&quot;)) {
			
				c.defenceLevelReq = 99;
			
			
		}
		if(itemName.contains(&quot;primal plate&quot;)) {
			
				c.defenceLevelReq = 99;
	
[/code]</description>
    
    <lastBuildDate>Sun, 03 Mar 2013 05:19:22 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/itemassistant-java-help-still-need-help/503202.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Itemassistant.java help! still need help</title>
        <dc:creator><![CDATA[@thomashawkins1991 thomashawkins1991]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/thomashawkins1991">@thomashawkins1991</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="4" data-topic="503202">
<div class="title">
<div class="quote-controls"></div>
 3lv3n snip3r:</div>
<blockquote>
<p>Most likely ItemAssistant.java.</p>
</blockquote>
</aside>
<p>never thought about looking in there thank you!!!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/itemassistant-java-help-still-need-help/503202/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/itemassistant-java-help-still-need-help/503202/5</link>
        <pubDate>Sun, 03 Mar 2013 05:19:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-503202-5</guid>
        <source url="https://forum.moparisthebest.com/t/itemassistant-java-help-still-need-help/503202.rss">Itemassistant.java help! still need help</source>
      </item>
      <item>
        <title>Itemassistant.java help! still need help</title>
        <dc:creator><![CDATA[@3lv3n_snip3r 3lv3n snip3r]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/3lv3n_snip3r">@3lv3n_snip3r</a> wrote:</p>
          <blockquote>
              <p>Most likely ItemAssistant.java.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/itemassistant-java-help-still-need-help/503202/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/itemassistant-java-help-still-need-help/503202/4</link>
        <pubDate>Sun, 03 Mar 2013 04:56:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-503202-4</guid>
        <source url="https://forum.moparisthebest.com/t/itemassistant-java-help-still-need-help/503202.rss">Itemassistant.java help! still need help</source>
      </item>
      <item>
        <title>Itemassistant.java help! still need help</title>
        <dc:creator><![CDATA[@thomashawkins1991 thomashawkins1991]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/thomashawkins1991">@thomashawkins1991</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="503202">
<div class="title">
<div class="quote-controls"></div>
 3lv3n snip3r:</div>
<blockquote>
<p>Make sure you add the items into your items.cfg file because the weapons slot is the default slot from what you said.</p>
</blockquote>
</aside>
<p>i did… but how do i place them to goto cape spot? in item java?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/itemassistant-java-help-still-need-help/503202/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/itemassistant-java-help-still-need-help/503202/3</link>
        <pubDate>Sun, 03 Mar 2013 04:38:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-503202-3</guid>
        <source url="https://forum.moparisthebest.com/t/itemassistant-java-help-still-need-help/503202.rss">Itemassistant.java help! still need help</source>
      </item>
      <item>
        <title>Itemassistant.java help! still need help</title>
        <dc:creator><![CDATA[@3lv3n_snip3r 3lv3n snip3r]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/3lv3n_snip3r">@3lv3n_snip3r</a> wrote:</p>
          <blockquote>
              <p>Make sure you add the items into your items.cfg file because the weapons slot is the default slot from what you said.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/itemassistant-java-help-still-need-help/503202/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/itemassistant-java-help-still-need-help/503202/2</link>
        <pubDate>Sun, 03 Mar 2013 04:33:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-503202-2</guid>
        <source url="https://forum.moparisthebest.com/t/itemassistant-java-help-still-need-help/503202.rss">Itemassistant.java help! still need help</source>
      </item>
      <item>
        <title>Itemassistant.java help! still need help</title>
        <dc:creator><![CDATA[@thomashawkins1991 thomashawkins1991]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/thomashawkins1991">@thomashawkins1991</a> wrote:</p>
          <blockquote>
              <p>ok my capes i just added= added 55 new capes and there all going to weapon spot now idk where to add in itemassistant had to delete alot so if i deleted let me know over 20000 characters</p>
<p>[code]package server.model.items;<br>
public class ItemAssistant {</p>
<pre><code>private Client c;

public ItemAssistant(Client client) {
	this.c = client;
}
	
/**
Items
**/

public int getCarriedWealth() {
	int toReturn = 0;
	for (int i = 0; i &lt; c.playerEquipment.length; i++) {
		if (c.playerEquipment[i] &gt; 0 &amp;&amp; Server.itemHandler.ItemList[c.playerEquipment[i]] 
</code></pre>
<p>!= null)<br>
toReturn += (Server.itemHandler.ItemList[c.playerEquipment[i]].ShopValue</p>
<ul>
<li>c.playerEquipmentN[i]);<br>
}<br>
for (int i = 0; i &lt; c.playerItems.length; i++) {<br>
if (c.playerItems[i] &gt; 0 &amp;&amp; Server.itemHandler.ItemList[c.playerItems[i]] !=</li>
</ul>
<p>null)<br>
toReturn += (Server.itemHandler.ItemList[c.playerItems[i]].ShopValue *</p>
<p>c.playerItemsN[i]);<br>
}<br>
return toReturn;</p>
<pre><code>}
</code></pre>
<p>public boolean updateInventory = false;</p>
<pre><code>public void updateInventory() {
	updateInventory = false;
	resetItems(3214);
}
public int[][] brokenBarrows = {{4708,4860},{4710,4866},{4712,4872},{4714,4878},{4716,4884},
{4720,4896},{4718,4890},{4720,4896},{4722,4902},{4732,4932},{4734,4938},{4736,4944},{4738,4950},
{4724,4908},{4726,4914},{4728,4920},{4730,4926},{4745,4956},{4747,4926},{4749,4968},{4751,4794},
{4753,4980},{4755,4986},{4757,4992},{4759,4998}};

public void resetItems(int WriteFrame) {
	synchronized(c) {
		if(c.getOutStream() != null &amp;&amp; c != null) {
			c.getOutStream().createFrameVarSizeWord(53);
			c.getOutStream().writeWord(WriteFrame);
			c.getOutStream().writeWord(c.playerItems.length);
			for (int i = 0; i &lt; c.playerItems.length; i++) {
				if(c.playerItemsN[i] &gt; 254) {
					c.getOutStream().writeByte(255); 		
					c.getOutStream().writeDWord_v2(c.playerItemsN[i]);
				} else {
					c.getOutStream().writeByte(c.playerItemsN[i]);
				}
				c.getOutStream().writeWordBigEndianA(c.playerItems[i]); 
			}
			c.getOutStream().endFrameVarSizeWord();
			c.flushOutStream();
		}
	}
}

	public int getEquipmentNet(Client c) {
	int toReturn = 0;
	for (int i = 0; i &lt; c.playerEquipment.length; i++) {
		toReturn += (c.getShops().getItemShopValue(c.playerEquipment[i]) * 
</code></pre>
<p>c.playerEquipmentN[i]);<br>
}<br>
return toReturn;<br>
}</p>
<pre><code>public int getInventoryNet(Client c) {
	int toReturn = 0;
	for (int i = 0; i &lt; c.playerItems.length; i++) {
		toReturn += (c.getShops().getItemShopValue(c.playerItems[i]+1) * c.playerItemsN
</code></pre>
<p>[i]);<br>
}<br>
return toReturn;<br>
}</p>
<pre><code>/**

*End of Event
**/

public int getBankAmount(int item) {
	int count = 0;	
	for (int j = 0; j &lt; c.bankItems.length; j++) {
		if (c.bankItems[j] == item + 1) {
			count += c.bankItemsN[j];
		}		
	}
	return count;
}

public int getItemCount(int itemID) {
	int count = 0;	
	for (int j = 0; j &lt; c.playerItems.length; j++) {
		if (c.playerItems[j] == itemID + 1) {
			count += c.playerItemsN[j];
		}		
	}
	return count;
}

public void writeBonus() {
	int offset = 0;
	String send = "";
	for (int i = 0; i &lt; c.playerBonus.length; i++) {
		if (c.playerBonus[i] &gt;= 0) {
			send = BONUS_NAMES[i]+": +"+c.playerBonus[i];
		} else {
			send = BONUS_NAMES[i]+": -"+java.lang.Math.abs(c.playerBonus[i]);
		}

		if (i == 10) {
			offset = 1;
		}
		c.getPA().sendFrame126(send, (1675+i+offset));
	}

}

public int getTotalCount(int itemID) {
	int count = 0;	
	for (int j = 0; j &lt; c.playerItems.length; j++) {
		if (Item.itemIsNote[itemID+1]) {
			if (itemID+2 == c.playerItems[j])
				count += c.playerItemsN[j];
		} 
		if (!Item.itemIsNote[itemID+1]) {
			if (itemID+1 == c.playerItems[j]) {
				count += c.playerItemsN[j];
			}
		}
	}
	for (int j = 0; j &lt; c.bankItems.length; j++) {
		if (c.bankItems[j] == itemID + 1) {
			count += c.bankItemsN[j];
		}		
	}
	return count;
}

public void sendItemsKept() {
	synchronized(c) {
		if(c.getOutStream() != null &amp;&amp; c != null ) {
			c.getOutStream().createFrameVarSizeWord(53);
			c.getOutStream().writeWord(6963);
			c.getOutStream().writeWord(c.itemKeptId.length);
			for (int i = 0; i &lt; c.itemKeptId.length; i++) {
				if(c.playerItemsN[i] &gt; 254) {
					c.getOutStream().writeByte(255); 
					c.getOutStream().writeDWord_v2(1);
				} else {
					c.getOutStream().writeByte(1);
				}
				if(c.itemKeptId[i] &gt; 0) {
				   c.getOutStream().writeWordBigEndianA(c.itemKeptId[i]+1);
				} else {
					c.getOutStream().writeWordBigEndianA(0);
				}
			}
			c.getOutStream().endFrameVarSizeWord();   
			c.flushOutStream();
		}
	}
}

/**
*Add Item
**/
public boolean addItem(int item, int amount) {
	synchronized(c) {
                                                            if(item == CastleWars.SARA_BANNER || item 
</code></pre>
<p>== CastleWars.ZAMMY_BANNER)<br>
return false;<br>
if (amount &lt; 1) {<br>
amount = 1;<br>
}<br>
if(item &lt;= 0) {<br>
return false;<br>
}<br>
if ((((freeSlots() &gt;= 1) || playerHasItem(item, 1)) &amp;&amp; Item.itemStackable[item])</p>
<p>|| ((freeSlots() &gt; 0) &amp;&amp; !Item.itemStackable[item])) {<br>
for (int i = 0; i &lt; c.playerItems.length; i++) {<br>
if ((c.playerItems[i] == (item + 1)) &amp;&amp; Item.itemStackable[item]<br>
&amp;&amp; (c.playerItems[i] &gt; 0)) {<br>
c.playerItems[i] = (item + 1);<br>
if (((c.playerItemsN[i] + amount) &lt;</p>
<p>Config.MAXITEM_AMOUNT)<br>
&amp;&amp; ((c.playerItemsN[i] + amount) &gt; -1)) {<br>
c.playerItemsN[i] += amount;<br>
} else {<br>
c.playerItemsN[i] = Config.MAXITEM_AMOUNT;<br>
}<br>
/*if(c.getOutStream() != null &amp;&amp; c != null ) {<br>
c.getOutStream().createFrameVarSizeWord(34);<br>
c.getOutStream().writeWord(3214);<br>
c.getOutStream().writeByte(i);<br>
c.getOutStream().writeWord(c.playerItems[i]);<br>
if (c.playerItemsN[i] &gt; 254) {<br>
c.getOutStream().writeByte(255);<br>
c.getOutStream().writeDWord</p>
<p>(c.playerItemsN[i]);<br>
} else {<br>
c.getOutStream().writeByte</p>
<p>(c.playerItemsN[i]);<br>
}<br>
c.getOutStream().endFrameVarSizeWord();<br>
c.flushOutStream();<br>
}*/<br>
updateInventory = true;<br>
updateInventory();<br>
i = 30;<br>
return true;<br>
}<br>
}<br>
for (int i = 0; i &lt; c.playerItems.length; i++) {<br>
if (c.playerItems[i] &lt;= 0) {<br>
c.playerItems[i] = item + 1;<br>
if ((amount &lt; Config.MAXITEM_AMOUNT) &amp;&amp; (amount &gt; -1)) {<br>
c.playerItemsN[i] = 1;<br>
if (amount &gt; 1) {<br>
c.getItems().addItem(item, amount - 1);<br>
return true;<br>
}<br>
} else {<br>
c.playerItemsN[i] = Config.MAXITEM_AMOUNT;<br>
}<br>
/*if(c.getOutStream() != null &amp;&amp; c != null ) {<br>
c.getOutStream().createFrameVarSizeWord(34);<br>
c.getOutStream().writeWord(3214);<br>
c.getOutStream().writeByte(i);<br>
c.getOutStream().writeWord(c.playerItems[i]);<br>
if (c.playerItemsN[i] &gt; 254) {<br>
c.getOutStream().writeByte(255);<br>
c.getOutStream().writeDWord</p>
<p>(c.playerItemsN[i]);<br>
} else {<br>
c.getOutStream().writeByte</p>
<p>(c.playerItemsN[i]);<br>
}<br>
c.getOutStream().endFrameVarSizeWord();<br>
c.flushOutStream();<br>
}*/<br>
//resetItems(3214);<br>
updateInventory = true;			<br>
updateInventory();						<br>
i = 30;<br>
return true;<br>
}<br>
}<br>
return false;<br>
} else {<br>
updateInventory = true;<br>
updateInventory();<br>
//resetItems(3214);<br>
c.sendMessage(“Not enough space in your inventory.”);<br>
return false;<br>
}<br>
}<br>
}</p>
<pre><code>public String itemType(int item) {
	if(Item.playerCape(item)) {
		return "cape";
	}
	if(Item.playerBoots(item)) {
		  return "boots";
	}
	if(Item.playerGloves(item)) {
		  return "gloves";
	}
	if(Item.playerShield(item)) {
		return "shield";
	}
	if(Item.playerAmulet(item)) {
		return "amulet";
	}
	if(Item.playerArrows(item)) {
		return "arrows";
	}
	if(Item.playerRings(item)) {
		return "ring";
	}
	if(Item.playerHats(item)) {
		return "hat";
	}
	if(Item.playerLegs(item)) {
		return "legs";
	}
	if(Item.playerBody(item)) {
		return "body";
	}
	if (item == 1) {
		return "cape";
	}
	if (item == 1052) {
		return "cape";
	}
	if (item == 19712) {
		return "shield";
	}
	if (item == 16711) {
		return "hat";
	}
            if (item == 19747) {
		return "hat";
	}
	if (item == 16733) {
		return "body";
	}
	if (item == 17259) {
		return "body";
	}
            if (item == 14791) {
		return "hat";
            }
	if (item == 16689) {
		return "legs";
	}
	if (item == 11118) {
		return "ring";
	}
			if (item == 15117) {
		return "cape";
	}
					if (item == 9419) {
		return "Arrows";
	}
			if (item == 15120) {
		return "cape";
	}
			if (item == 15121) {
		return "cape";
	}
	if (item == 15118) {
	return "hat";
	}
			if (item == 15119) {
		return "hat";
	}
			if (item == 15124) {
		return "hat";
	}
	
			if (item == 11119) {
		return "ring";
	}
			if (item == 11120) {
		return "ring";
	}
			if (item == 11121) {
		return "ring";
	}
			if (item == 11122) {
		return "ring";
	}
			if (item == 11123) {
		return "ring";
	}
			if (item == 11124) {
		return "ring";
	}
			if (item == 11125) {
		return "ring";
	}
			if (item == 11126) {
		return "ring";
	}
			if (item == 11127) {
		return "ring";
	}
	if (item == 16667) {
		return "legs";
	}
	if (item == 17361) {
		return "shield";
	}
	if (item == 16359) {
		return "boots";
	}
	if (item == 16293) {
		return "gloves";
	}
	if (item == 20116) {
		return "body";
	}
	return "weapon";
}

/**
*Bonuses
**/

public final String[] BONUS_NAMES = {
	"Stab", "Slash", "Crush", "Magic", "Range", "Stab", "Slash",
	"Crush", "Magic", "Range", "Strength", "Prayer"
};
public void resetBonus() {
	for (int i = 0; i &lt; c.playerBonus.length; i++) {
		c.playerBonus[i] = 0;
	}
}
public void getBonus() {
	for (int i = 0; i &lt; c.playerEquipment.length; i++) {
		if (c.playerEquipment[i] &gt; -1) {
			for (int j = 0; j &lt; Config.ITEM_LIMIT; j++) {
				if (Server.itemHandler.ItemList[j] != null){
						if (Server.itemHandler.ItemList[j].itemId == 
</code></pre>
<p>c.playerEquipment[i]) {<br>
for (int k = 0; k &lt; c.playerBonus.length; k++) {<br>
c.playerBonus[k] +=</p>
<p>Server.itemHandler.ItemList[j].Bonuses[k];<br>
}<br>
break;<br>
}<br>
}<br>
}<br>
}<br>
}<br>
}</p>
<pre><code>/**
*Wear Item
**/

public void sendWeapon(int Weapon, String WeaponName) {
	String WeaponName2 = WeaponName.replaceAll("Bronze", "");
	WeaponName2 = WeaponName2.replaceAll("Iron", "");
	WeaponName2 = WeaponName2.replaceAll("Steel", "");
	WeaponName2 = WeaponName2.replaceAll("Black", "");
	WeaponName2 = WeaponName2.replaceAll("Mithril", "");
	WeaponName2 = WeaponName2.replaceAll("Adamant", "");
	WeaponName2 = WeaponName2.replaceAll("Rune", "");
	WeaponName2 = WeaponName2.replaceAll("Granite", "");
	WeaponName2 = WeaponName2.replaceAll("Dragon", "");
	WeaponName2 = WeaponName2.replaceAll("Drag", "");
	WeaponName2 = WeaponName2.replaceAll("Crystal", "");
	WeaponName2 = WeaponName2.trim();
	if (WeaponName.equals("Unarmed")) {
		c.setSidebarInterface(0, 5855); //punch, kick, block
		c.getPA().sendFrame126(WeaponName, 5857);
	} else if (WeaponName.endsWith("whip")) {
		c.setSidebarInterface(0, 12290); //flick, lash, deflect
		c.getPA().sendFrame246(12291, 200, Weapon);
		c.getPA().sendFrame126(WeaponName, 12293);
        } else if (WeaponName2.toLowerCase().contains("maul") || WeaponName.endsWith("warhammer")) {
        c.setSidebarInterface(0, 425); //war hamer equip.
        c.getPA().sendFrame246(426, 200, Weapon);
        c.getPA().sendFrame126(WeaponName, 428);
	} else if (WeaponName.endsWith("bow") || WeaponName.endsWith("10") || c.playerEquipment
</code></pre>
<p>[c.playerWeapon] == 13879 || c.playerEquipment[c.playerWeapon] == 15241 || c.playerEquipment</p>
<p>[c.playerWeapon] == 18357 || c.playerEquipment[c.playerWeapon] == 13880 || c.playerEquipment</p>
<p>[c.playerWeapon] == 13881 || c.playerEquipment[c.playerWeapon] == 13882 || c.playerEquipment</p>
<p>[c.playerWeapon] == 13883 || WeaponName.endsWith(“full”) || WeaponName.startsWith(“seercull”)) {<br>
c.setSidebarInterface(0, 1764); //accurate, rapid, longrange<br>
c.getPA().sendFrame246(1765, 200, Weapon);<br>
// c.getPA().sendFrame126(WeaponName, 1767);<br>
} else if (WeaponName2.startsWith(“dagger”) || c.playerEquipment[c.playerWeapon] == 13905</p>
<p>|| c.playerEquipment[c.playerWeapon] == 13899 || WeaponName2.contains(“Staff of light”) ||</p>
<p>c.playerEquipment[c.playerWeapon] == 18349 || c.playerEquipment[c.playerWeapon] == 10887 ||</p>
<p>WeaponName2.contains(“sword”)) {<br>
c.setSidebarInterface(0, 2276); //stab, lunge, slash, block<br>
c.getPA().sendFrame246(2277, 200, Weapon);<br>
c.getPA().sendFrame126(WeaponName, 2279);<br>
} else if (WeaponName.startsWith(“Staff”) || WeaponName.endsWith(“staff”) ||</p>
<p>WeaponName.endsWith(“wand”)) {<br>
c.setSidebarInterface(0, 328); //spike, impale, smash, block<br>
c.getPA().sendFrame246(329, 200, Weapon);<br>
c.getPA().sendFrame126(WeaponName, 331);<br>
} else if (WeaponName2.startsWith(“dart”) || WeaponName2.startsWith(“knife”) ||</p>
<p>WeaponName2.startsWith(“javelin”) || WeaponName.equalsIgnoreCase(“toktz-xil-ul”)) {<br>
c.setSidebarInterface(0, 4446); //accurate, rapid, longrange<br>
c.getPA().sendFrame246(4447, 200, Weapon);<br>
c.getPA().sendFrame126(WeaponName, 4449);<br>
} else if (WeaponName2.startsWith(“pickaxe”)) {<br>
c.setSidebarInterface(0, 5570); //spike, impale, smash, block<br>
c.getPA().sendFrame246(5571, 200, Weapon);<br>
c.getPA().sendFrame126(WeaponName, 5573);<br>
} else if (WeaponName2.startsWith(“axe”) || WeaponName2.startsWith(“battleaxe”)) {<br>
c.setSidebarInterface(0, 1698); //chop, hack, smash, block<br>
c.getPA().sendFrame246(1699, 200, Weapon);<br>
c.getPA().sendFrame126(WeaponName, 1701);<br>
} else if (WeaponName2.startsWith(“halberd”)) {<br>
c.setSidebarInterface(0, 8460); //jab, swipe, fend<br>
c.getPA().sendFrame246(8461, 200, Weapon);<br>
c.getPA().sendFrame126(WeaponName, 8463);<br>
} else if (c.playerEquipment[c.playerWeapon] == 14484) {<br>
c.setSidebarInterface(0, 7762); //claws<br>
c.getPA().sendFrame246(7763, 200, Weapon);<br>
c.getPA().sendFrame126(WeaponName, 7765);<br>
} else if (WeaponName2.startsWith(“scythe”)) {<br>
c.setSidebarInterface(0, 8460); //jab, swipe, fend<br>
c.getPA().sendFrame246(8461, 200, Weapon);<br>
c.getPA().sendFrame126(WeaponName, 8463);<br>
} else if (WeaponName2.startsWith(“spear”)) {<br>
c.setSidebarInterface(0, 4679); //lunge, swipe, pound, block<br>
c.getPA().sendFrame246(4680, 200, Weapon);<br>
c.getPA().sendFrame126(WeaponName, 4682);<br>
} else if (WeaponName2.toLowerCase().contains(“mace”) || c.playerEquipment</p>
<p>[c.playerWeapon] == 13902){<br>
c.setSidebarInterface(0, 3796);<br>
c.getPA().sendFrame246(3797, 200, Weapon);<br>
c.getPA().sendFrame126(WeaponName, 3799);<br>
} else if (c.playerEquipment[c.playerWeapon] == 4153) {<br>
c.setSidebarInterface(0, 425); //war hamer equip.<br>
c.getPA().sendFrame246(426, 200, Weapon);<br>
c.getPA().sendFrame126(WeaponName, 428);	<br>
} else if (c.playerEquipment[c.playerWeapon] == 18351) {<br>
c.setSidebarInterface(0, 2423); //war hamer equip.<br>
c.getPA().sendFrame246(426, 200, Weapon);<br>
c.getPA().sendFrame126(WeaponName, 428);	<br>
} else {<br>
c.setSidebarInterface(0, 2423); //chop, slash, lunge, block<br>
c.getPA().sendFrame246(2424, 200, Weapon);<br>
c.getPA().sendFrame126(WeaponName, 2426);<br>
}</p>
<pre><code>}


/**
*Weapon Requirements
**/

public void getRequirements(String itemName, int itemId) {
	c.attackLevelReq = c.defenceLevelReq = c.strengthLevelReq = c.rangeLevelReq = 
</code></pre>
<p>c.slayerLevelReq = c.dungLevelReq = c.magicLevelReq = c.Donatorreq = 0;<br>
if(itemName.contains(“mystic”) || itemName.contains(“nchanted”)) {<br>
if (itemName.contains(“staff of light”)) {<br>
c.magicLevelReq = 75;<br>
c.attackLevelReq = 75;		<br>
}<br>
if(itemName.contains(“staff”)) {<br>
c.magicLevelReq = 20;<br>
c.attackLevelReq = 40;<br>
} else {<br>
c.magicLevelReq = 20;<br>
c.defenceLevelReq = 20;<br>
}<br>
}</p>
<pre><code>	if (itemName.contains("infinity")) {
		c.magicLevelReq = 50;
		c.defenceLevelReq = 25;		
	}
	if(itemName.contains("splitbark")) {
		c.magicLevelReq = 40;
		c.defenceLevelReq = 40;
	}
	if (itemName.contains("rune c'bow")) {
		c.rangeLevelReq = 61;
	}
	if (itemName.contains("black d'hide")) {
		c.rangeLevelReq = 70;
	}
	if (itemName.contains("slayer helmet")) {
		c.defenceLevelReq = 35;
	}
	if (itemName.contains("falador sh")) {
		c.defenceLevelReq = 30;
	}
	if (itemName.contains("gilded")) {
		c.defenceLevelReq = 40;
	}
	if (itemName.contains("third-age")) {
		c.defenceLevelReq = 40;
	}
	if (itemName.contains("tzhaar-ket-om")) {
		c.strengthLevelReq = 60;
	}
	if (itemName.contains("red d'hide")) {
		c.rangeLevelReq = 60;
	}
	if (itemName.contains("blue d'hide")) {
		c.rangeLevelReq = 50;
	}
	if (itemName.contains("green d'hide")) {
		c.rangeLevelReq = 40;
	}
	if (itemName.contains("snakeskin")) {
		c.rangeLevelReq = 40;
		c.defenceLevelReq = 30;
	}
	if (itemName.contains("initiate")) {
		c.defenceLevelReq = 20;
	}
	if(itemName.contains("bronze")) {
		if(!itemName.contains("knife") &amp;&amp; !itemName.contains("dart") &amp;&amp; !
</code></pre>
<p>itemName.contains(“javelin”) &amp;&amp; !itemName.contains(“thrownaxe”)) {<br>
c.attackLevelReq = c.defenceLevelReq = 1;<br>
}<br>
return;<br>
}<br>
if(itemName.contains(“iron”)) {<br>
if(!itemName.contains(“knife”) &amp;&amp; !itemName.contains(“dart”) &amp;&amp; !</p>
<p>itemName.contains(“javelin”) &amp;&amp; !itemName.contains(“thrownaxe”)) {<br>
c.attackLevelReq = c.defenceLevelReq = 1;<br>
}	<br>
return;<br>
}<br>
if(itemName.contains(“steel”)) {	<br>
if(!itemName.contains(“knife”) &amp;&amp; !itemName.contains(“dart”) &amp;&amp; !</p>
<p>itemName.contains(“javelin”) &amp;&amp; !itemName.contains(“thrownaxe”)) {<br>
c.attackLevelReq = c.defenceLevelReq = 5;<br>
}<br>
return;<br>
}<br>
if(itemName.contains(“mithril”)) {<br>
if(!itemName.contains(“knife”) &amp;&amp; !itemName.contains(“dart”) &amp;&amp; !</p>
<p>itemName.contains(“javelin”) &amp;&amp; !itemName.contains(“thrownaxe”)) {<br>
c.attackLevelReq = c.defenceLevelReq = 20;<br>
}<br>
return;<br>
}<br>
if(itemName.contains(“adamant”)) {<br>
if(!itemName.contains(“knife”) &amp;&amp; !itemName.contains(“dart”) &amp;&amp; !</p>
<p>itemName.contains(“javelin”) &amp;&amp; !itemName.contains(“thrownaxe”)) {<br>
c.attackLevelReq = c.defenceLevelReq = 30;<br>
}<br>
return;<br>
}<br>
if(itemName.contains(“rune”)) {<br>
if(!itemName.contains(“knife”) &amp;&amp; !itemName.contains(“dart”) &amp;&amp; !</p>
<p>itemName.contains(“javelin”) &amp;&amp; !itemName.contains(“thrownaxe”) &amp;&amp; !itemName.contains("'bow")) {<br>
c.attackLevelReq = c.defenceLevelReq = 40;<br>
}<br>
return;<br>
}<br>
if(itemName.contains(“granite shield”)) {<br>
if(!itemName.contains(“maul”)){<br>
c.defenceLevelReq = 50	;<br>
}<br>
return;<br>
}<br>
if(itemName.contains(“granite maul”)) {<br>
if(!itemName.contains(“shield”)){<br>
c.attackLevelReq = 50	;<br>
}<br>
return;<br>
}<br>
if(itemName.contains(“warrior”)) {<br>
if(!itemName.contains(“ring”)){<br>
c.defenceLevelReq = 40	;<br>
}<br>
return;<br>
}<br>
if(itemName.contains(“dragonfire”)) {</p>
<pre><code>			c.defenceLevelReq = 75	;

	}
	if(itemName.contains("flameburst")) {
		
			c.defenceLevelReq = 65;
		
	}
	if(itemName.contains("enchanted")) {
		
			c.defenceLevelReq = 40;
		
		
	}
	if(itemName.contains("primal kite")) {
		
			c.defenceLevelReq = 99;
		
		
	}
	if(itemName.contains("primal plate")) {
		
			c.defenceLevelReq = 99;
</code></pre>
<p>[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/itemassistant-java-help-still-need-help/503202/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/itemassistant-java-help-still-need-help/503202/1</link>
        <pubDate>Sun, 03 Mar 2013 03:55:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-503202-1</guid>
        <source url="https://forum.moparisthebest.com/t/itemassistant-java-help-still-need-help/503202.rss">Itemassistant.java help! still need help</source>
      </item>
  </channel>
</rss>
