<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Java 2D scrolling world [Help]</title>
    <link>https://forum.moparisthebest.com/t/java-2d-scrolling-world-help/464696</link>
    <description>Hello, I am making a side-scroller and I would like to ask for help. The problem is that the program doesn&#39;t think a polygon is within camera sight if the mouse Y is less than the lowest Y point or the mouse X is less than the lowest X point of the polygon.

Please examine the code and tell me if you see anything wrong. I think it has to do with the cameraXMin and cameraYMin, because I did set the mode to fullscreen, but I&#39;m not sure why the getWidth()/getHeight() methods wouldn&#39;t work the same for fullscreen

The two parts that are incredibly spaced out (fillPolygon) are the parts that are messed up. In the first example, the polygon does not get drawn, however, in the second example, it gets drawn even if it is not actually on the screen. This is a problem as the worlds are rather large and it can cause an insane amount of lag if there are tons of polygons being drawn off-camera.
[code=java]	public void paint(Graphics g) {
		super.paint(g);
		Graphics2D g2d = (Graphics2D) g;
		if (Main.engine.f != null) {
			cameraXMin = x - (Main.engine.f.getWidth() / 2);
			cameraXMax = x + (Main.engine.f.getWidth() / 2);
			cameraYMin = y - (Main.engine.f.getHeight() / 2);
			cameraYMax = y + (Main.engine.f.getHeight() / 2);
		}
		int lineXMin = 4900, lineXMax = 5200, lineYMin = 4900, lineYMax = 5200;
		// drawWorld(g);
		int[] xs = new int[] { lineXMin, lineXMax, lineXMin };
		int[] ys = new int[] { lineYMin, lineYMax, lineYMax };
		boolean isOnScreen = false;
		for (int i = 0; i &lt; 3; i++)
			if (cameraXMin &lt; xs[i] &amp;&amp; cameraXMax &gt; xs[i] &amp;&amp; cameraYMin &lt; ys[i]
					&amp;&amp; cameraYMax &gt; ys[i])
				isOnScreen = true;
			else
				g2d.drawString(&quot;Is on screen = false&quot;, 500, 20);

		g2d.setColor(Color.blue);



		if (isOnScreen)
			g2d.fillPolygon(new int[] { xs[0] - x, xs[1] - x, xs[2] - x },
					new int[] { ys[0] - y, ys[1] - y, ys[2] - y }, 3);



		g2d.fillPolygon(new int[] { xs[0] - x, xs[1] - x, xs[2] - x },
				new int[] { ys[0] - y, ys[1] - y, ys[2] - y }, 3);



		g2d.setColor(Color.black);
		g2d.drawString(&quot;X: &quot; + x + &quot;, Y: &quot; + y, 20, 20);
	}[/code]</description>
    
    <lastBuildDate>Sat, 20 Oct 2012 17:24:19 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/java-2d-scrolling-world-help/464696.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Java 2D scrolling world [Help]</title>
        <dc:creator><![CDATA[@eyeownyew Eyeownyew]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/eyeownyew">@eyeownyew</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="464696">
<div class="title">
<div class="quote-controls"></div>
 Miss Silabsoft:</div>
<blockquote>
<p>why not skip the drawing of entities that are out of the view area, I am sure you have some sort of coordinate system for your entities.</p>
</blockquote>
</aside>
<p>I found the problem actually. I was thinking that my X and Y values were the mouse (in the center of the screen), but the X and Y values for the scrolling area of the screen is actually the top left corner of the screen. Not sure how this messed my math up, still looking around for the error.</p>
<p>EDIT:<br>
Fixed it. Here is the fixed code, in case anyone was curious:</p>
<p>[code=java]	public void paint(Graphics g) {<br>
super.paint(g);<br>
Graphics2D g2d = (Graphics2D) g;<br>
if (Main.engine.f != null) {<br>
frameWidth = Main.engine.f.getWidth();<br>
frameHeight = Main.engine.f.getHeight();<br>
}<br>
cameraXMin = x - (frameWidth / 2);<br>
cameraXMax = x + (frameWidth / 2);<br>
cameraYMin = y - (frameHeight / 2);<br>
cameraYMax = y + (frameHeight / 2);<br>
System.out.println("" + cameraXMin + " " + cameraXMax + " "<br>
+ cameraYMin + " " + cameraYMax + " " + x + " " + y);<br>
int lineXMin = 4900, lineXMax = 5200, lineYMin = 4900, lineYMax = 5200;</p>
<pre><code>	int[] xs = new int[] { lineXMin, lineXMax, lineXMin };
	int[] ys = new int[] { lineYMin, lineYMax, lineYMax };
	boolean isOnScreen = false;
	for (int i = 0; i &lt; 3; i++)
		if (cameraXMin &lt; xs[i]-(frameWidth/2) &amp;&amp; cameraXMax &gt; xs[i]-(frameWidth/2)
				&amp;&amp; cameraYMin &lt; ys[i]-(frameHeight/2) &amp;&amp; cameraYMax &gt; ys[i]-(frameHeight/2))
			isOnScreen = true;

	g2d.setColor(Color.blue);
	if (isOnScreen)
		g2d.fillPolygon(new int[] { xs[0] - x, xs[1] - x, xs[2] - x },
				new int[] { ys[0] - y, ys[1] - y, ys[2] - y }, 3);
}[/code]
</code></pre>
<p>Removed some of the irrelevant parts. The problem had to do with the calculation of the camera minima and maxima</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-2d-scrolling-world-help/464696/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-2d-scrolling-world-help/464696/3</link>
        <pubDate>Sat, 20 Oct 2012 17:24:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-464696-3</guid>
        <source url="https://forum.moparisthebest.com/t/java-2d-scrolling-world-help/464696.rss">Java 2D scrolling world [Help]</source>
      </item>
      <item>
        <title>Java 2D scrolling world [Help]</title>
        <dc:creator><![CDATA[@silabsoft RuneAgent]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silabsoft">@silabsoft</a> wrote:</p>
          <blockquote>
              <p>why not skip the drawing of entities that are out of the view area, I am sure you have some sort of coordinate system for your entities.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-2d-scrolling-world-help/464696/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-2d-scrolling-world-help/464696/2</link>
        <pubDate>Sat, 20 Oct 2012 16:26:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-464696-2</guid>
        <source url="https://forum.moparisthebest.com/t/java-2d-scrolling-world-help/464696.rss">Java 2D scrolling world [Help]</source>
      </item>
      <item>
        <title>Java 2D scrolling world [Help]</title>
        <dc:creator><![CDATA[@eyeownyew Eyeownyew]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/eyeownyew">@eyeownyew</a> wrote:</p>
          <blockquote>
              <p>Hello, I am making a side-scroller and I would like to ask for help. The problem is that the program doesn’t think a polygon is within camera sight if the mouse Y is less than the lowest Y point or the mouse X is less than the lowest X point of the polygon.</p>
<p>Please examine the code and tell me if you see anything wrong. I think it has to do with the cameraXMin and cameraYMin, because I did set the mode to fullscreen, but I’m not sure why the getWidth()/getHeight() methods wouldn’t work the same for fullscreen</p>
<p>The two parts that are incredibly spaced out (fillPolygon) are the parts that are messed up. In the first example, the polygon does not get drawn, however, in the second example, it gets drawn even if it is not actually on the screen. This is a problem as the worlds are rather large and it can cause an insane amount of lag if there are tons of polygons being drawn off-camera.</p>
<p>[code=java]	public void paint(Graphics g) {<br>
super.paint(g);<br>
Graphics2D g2d = (Graphics2D) g;<br>
if (Main.engine.f != null) {<br>
cameraXMin = x - (Main.engine.f.getWidth() / 2);<br>
cameraXMax = x + (Main.engine.f.getWidth() / 2);<br>
cameraYMin = y - (Main.engine.f.getHeight() / 2);<br>
cameraYMax = y + (Main.engine.f.getHeight() / 2);<br>
}<br>
int lineXMin = 4900, lineXMax = 5200, lineYMin = 4900, lineYMax = 5200;<br>
// drawWorld(g);<br>
int[] xs = new int[] { lineXMin, lineXMax, lineXMin };<br>
int[] ys = new int[] { lineYMin, lineYMax, lineYMax };<br>
boolean isOnScreen = false;<br>
for (int i = 0; i &lt; 3; i++)<br>
if (cameraXMin &lt; xs[i] &amp;&amp; cameraXMax &gt; xs[i] &amp;&amp; cameraYMin &lt; ys[i]<br>
&amp;&amp; cameraYMax &gt; ys[i])<br>
isOnScreen = true;<br>
else<br>
g2d.drawString(“Is on screen = false”, 500, 20);</p>
<pre><code>	g2d.setColor(Color.blue);



	if (isOnScreen)
		g2d.fillPolygon(new int[] { xs[0] - x, xs[1] - x, xs[2] - x },
				new int[] { ys[0] - y, ys[1] - y, ys[2] - y }, 3);



	g2d.fillPolygon(new int[] { xs[0] - x, xs[1] - x, xs[2] - x },
			new int[] { ys[0] - y, ys[1] - y, ys[2] - y }, 3);



	g2d.setColor(Color.black);
	g2d.drawString("X: " + x + ", Y: " + y, 20, 20);
}[/code]</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-2d-scrolling-world-help/464696/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-2d-scrolling-world-help/464696/1</link>
        <pubDate>Sat, 20 Oct 2012 14:00:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-464696-1</guid>
        <source url="https://forum.moparisthebest.com/t/java-2d-scrolling-world-help/464696.rss">Java 2D scrolling world [Help]</source>
      </item>
  </channel>
</rss>
