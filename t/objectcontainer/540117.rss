<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>ObjectContainer</title>
    <link>https://forum.moparisthebest.com/t/objectcontainer/540117</link>
    <description>I only wrote this to avoid a lot of concurrent exceptions because I&#39;m always messing with arrays and lists in an odd way which causes concurrent modification exceptions. I know how to avoid them, but I feel it takes too much to do that. I do feel that this will be really useful with some things, although I really can&#39;t say what :/

[code=java]
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;

@SuppressWarnings(&quot;unchecked&quot;)
public class ObjectContainer&lt;E&gt; implements Iterable&lt;E&gt; {
	
	private Object[] data;
	private int capacity, iteratorIndex;
    
	public ObjectContainer() {
		this.capacity = 694;
		this.data = new Object[capacity];
	}
	
	public ObjectContainer(Collection&lt;?&gt; collection) {
		this.data = collection.toArray();
	}
	
	public ObjectContainer(int capacity) {
		this.capacity = capacity;
		this.data = new Object[capacity];
	}
	
	public boolean add(E e) {
		int slot = getNextFreeSlot();
		if (slot != -1) {
			this.data[slot] = e;
			shift(true, true);
			return true;
		} else return false;
	}
	
	public boolean add(int index, E e) {
		if (!seperateAt(index))
			return false;
		this.data[index] = e;
		shift(true, true);
		return true;
	}
	
	public void add(E...e) {
		for (E v : e) add(v);
	}
	
	public void addAll(Collection&lt;?&gt; c) {
		for (Object o : c) add((E) o);
	}
	
	public void remove(E e) {
		int index = indexOf(e);
		if (index != -1) {
			this.data[index] = null;
		}
		shift(true, true);
	}
	
	public void shift(boolean down, boolean skipNull) {
		List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();
		if (down) { 
			for (int i = 0; i &lt; capacity; i++) {
				if (skipNull &amp;&amp; data[i] == null)
					continue;
				list.add(data[i]);
			}
		} else {
			if (skipNull) {
				for (int i = capacity - 1; i &gt;= 0; i--)
					if (data[i] != null)
						list.add(data[i]);
			} else {
				for (int i = 0; i &lt; capacity; i++)
					if (data[i] == null)
						list.add(data[i]);
				for (int i = 0; i &lt; capacity; i++)
					if (data[i] != null)
						list.add(data[i]);
			}
		}
		Object[] array = new Object[capacity];
		for (int i = 0; i &lt; list.size(); i++)
			array[i] = list.get(i);
		this.data = array;
	}
	
	public boolean seperateAt(int index) {
		if (index &gt;= capacity - 1)
			return false;
		Object[] array = new Object[capacity];
		for (int i = 0; i &lt; capacity-1; i++) {
			int value = (i &lt; index ? i : i + 1);
			if (value &gt;= capacity)
				return false;
			array[value] = data[i];
		}
		this.data = array;
		return true;
	}
	
	public E get(int index) {
		return (E) data[index];
	}
	
	public E getLastObject() {
		for (int i = capacity - 1; i &gt;= 0; i--)
			if (data[i] != null)
				return (E) data[i];
		return null;
	}
	
	public void set(int index, E e) {
		this.data[index] = e;
	}
	
	public int getNextFreeSlot() {
		for (int i = 0; i &lt; capacity; i++)
			if (data[i] == null)
				return i;
		return -1;
	}
	
	public int indexOf(E e) {
		for (int i = 0; i &lt; capacity; i++)
			if (data[i] != null &amp;&amp; data[i].equals(e))
				return i;
		return -1;
	}
	
	public int size() {
		int amount = 0;
		for (int i = 0; i &lt; capacity; i++)
			if (data[i] != null)
				amount++;
		return amount;
	}
	
	public void clear() {
		for (int i = 0; i &lt; capacity; i++)
			data[i] = null;
	}
	
	public boolean contains(E e) {
		return indexOf(e) != -1;
	}
	
	public Object[] toArray() {
		return data;
	}

	public int getCapacity() {
		return capacity;
	}
	
	public void setCapacity(int capacity) {
		this.capacity = capacity;
	}
	
	@Override
	public String toString() {
		String string = &quot;&quot;;
		string += &quot;[&quot;;
		for (int i = 0; i &lt; size(); i++) {
			if (data[i] == null) continue;
			if (i &lt; size() - 1)
				string += (data[i]+&quot;, &quot;);
			else string += (data[i]);
		}
		string += &quot;]&quot;;
		return string;
	}

	@Override
    public Iterator&lt;E&gt; iterator() {
        Iterator&lt;E&gt; it = new Iterator&lt;E&gt;() {
            @Override
            public boolean hasNext() {
                return iteratorIndex &lt; size() &amp;&amp; data[iteratorIndex] != null;
            }

            @Override
            public E next() {
                return (E) data[iteratorIndex++];
            }

            @Override
            public void remove() {
               ObjectContainer.this.remove(getLastObject());
            }
        };
        return it;
    }

}
[/code]

I didn&#39;t write this for rsps but it can obviously be used with one. I was never that great with handling generics, so if you think I&#39;m doing something incredibly wrong please tell me.</description>
    
    <lastBuildDate>Sat, 15 Mar 2014 08:54:12 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/objectcontainer/540117.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>ObjectContainer</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>or use a listiterator that supports add/remove operations and forward/backward iteration</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/objectcontainer/540117/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/objectcontainer/540117/17</link>
        <pubDate>Sat, 15 Mar 2014 08:54:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540117-17</guid>
        <source url="https://forum.moparisthebest.com/t/objectcontainer/540117.rss">ObjectContainer</source>
      </item>
      <item>
        <title>ObjectContainer</title>
        <dc:creator><![CDATA[@pure2ownage Pure_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pure2ownage">@pure2ownage</a> wrote:</p>
          <blockquote>
              <p>[quote=“wildskiller, post:15, topic:540117”][quote author=thiefmn6092 link=topic=658971.msg4413326#msg4413326 date=1394678264]<br>
if you need to iterate over a collection that can be modified by other threads, make a copy of it and iterate over the copy<br>
[/quote]<br>
You mean like create another list and add the contents of the first list to the other list.[/quote]<br>
Yes.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/objectcontainer/540117/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/objectcontainer/540117/16</link>
        <pubDate>Sat, 15 Mar 2014 03:26:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540117-16</guid>
        <source url="https://forum.moparisthebest.com/t/objectcontainer/540117.rss">ObjectContainer</source>
      </item>
      <item>
        <title>ObjectContainer</title>
        <dc:creator><![CDATA[@wildskiller wildskiller]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wildskiller">@wildskiller</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="14" data-topic="540117">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/thiefmn6092/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> thiefmn6092:</div>
<blockquote>
<p>if you need to iterate over a collection that can be modified by other threads, make a copy of it and iterate over the copy</p>
</blockquote>
</aside>
<p>You mean like create another list and add the contents of the first list to the other list.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/objectcontainer/540117/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/objectcontainer/540117/15</link>
        <pubDate>Sat, 15 Mar 2014 02:13:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540117-15</guid>
        <source url="https://forum.moparisthebest.com/t/objectcontainer/540117.rss">ObjectContainer</source>
      </item>
      <item>
        <title>ObjectContainer</title>
        <dc:creator><![CDATA[@thiefmn6092 thiefmn6092]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/thiefmn6092">@thiefmn6092</a> wrote:</p>
          <blockquote>
              <p>if you need to iterate over a collection that can be modified by other threads, make a copy of it and iterate over the copy</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/objectcontainer/540117/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/objectcontainer/540117/14</link>
        <pubDate>Thu, 13 Mar 2014 02:37:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540117-14</guid>
        <source url="https://forum.moparisthebest.com/t/objectcontainer/540117.rss">ObjectContainer</source>
      </item>
      <item>
        <title>ObjectContainer</title>
        <dc:creator><![CDATA[@Advocatus Advocatus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/advocatus">@Advocatus</a> wrote:</p>
          <blockquote>
              <p>You have</p>
<pre><code class="lang-auto">        public ObjectContainer(Collection&lt;?&gt; collection) {
                this.data = collection.toArray();
        }</code></pre>
<p>Shouldn’t you also set the capacity to the collection size?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/objectcontainer/540117/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/objectcontainer/540117/13</link>
        <pubDate>Thu, 13 Mar 2014 01:44:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540117-13</guid>
        <source url="https://forum.moparisthebest.com/t/objectcontainer/540117.rss">ObjectContainer</source>
      </item>
      <item>
        <title>ObjectContainer</title>
        <dc:creator><![CDATA[@matzie matzie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/matzie">@matzie</a> wrote:</p>
          <blockquote>
              <pre><code class="lang-auto">//internal sync
synchronized(this) {
//logic here
}
OR
//external sync
synchronized(objectContainer) {
objectContainer.add(...);
}</code></pre>
<p>bye bye concurrent modification errors…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/objectcontainer/540117/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/objectcontainer/540117/12</link>
        <pubDate>Sun, 09 Mar 2014 00:41:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540117-12</guid>
        <source url="https://forum.moparisthebest.com/t/objectcontainer/540117.rss">ObjectContainer</source>
      </item>
      <item>
        <title>ObjectContainer</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>[quote=“sinisoul, post:8, topic:540117”][quote]<br>
The iterators returned by this class’s iterator and listIterator methods are fail-fast: if the list is structurally modified at any time after the iterator is created, in any way except through the iterator’s own remove or add methods, the iterator will throw a ConcurrentModificationException. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.<br>
[/quote][/quote]<br>
I didn’t even know this, nice learning something new <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"></p>
<p>So yeah just use a <span class="bbcode-i">ListIterator</span> to add/remove elements.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/objectcontainer/540117/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/objectcontainer/540117/11</link>
        <pubDate>Tue, 25 Feb 2014 03:02:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540117-11</guid>
        <source url="https://forum.moparisthebest.com/t/objectcontainer/540117.rss">ObjectContainer</source>
      </item>
      <item>
        <title>ObjectContainer</title>
        <dc:creator><![CDATA[@wildskiller wildskiller]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wildskiller">@wildskiller</a> wrote:</p>
          <blockquote>
              <p>[quote=“sinisoul, post:8, topic:540117”][quote]<br>
The iterators returned by this class’s iterator and listIterator methods are fail-fast: if the list is structurally modified at any time after the iterator is created, in any way except through the iterator’s own remove or add methods, the iterator will throw a ConcurrentModificationException. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.<br>
[/quote][/quote]<br>
Wow. Only if I had known sooner.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/objectcontainer/540117/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/objectcontainer/540117/10</link>
        <pubDate>Fri, 21 Feb 2014 13:48:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540117-10</guid>
        <source url="https://forum.moparisthebest.com/t/objectcontainer/540117.rss">ObjectContainer</source>
      </item>
      <item>
        <title>ObjectContainer</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <p>[quote=“sinisoul, post:8, topic:540117”][quote]<br>
The iterators returned by this class’s iterator and listIterator methods are fail-fast: if the list is structurally modified at any time after the iterator is created, in any way except through the iterator’s own remove or add methods, the iterator will throw a ConcurrentModificationException. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.<br>
[/quote][/quote]</p>
<p>Was literally about to post this.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/objectcontainer/540117/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/objectcontainer/540117/9</link>
        <pubDate>Fri, 21 Feb 2014 05:01:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540117-9</guid>
        <source url="https://forum.moparisthebest.com/t/objectcontainer/540117.rss">ObjectContainer</source>
      </item>
      <item>
        <title>ObjectContainer</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <blockquote>The iterators returned by this class's iterator and listIterator methods are fail-fast: if the list is structurally modified at any time after the iterator is created, in any way except through the iterator's own remove or add methods, the iterator will throw a ConcurrentModificationException. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.</blockquote>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/objectcontainer/540117/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/objectcontainer/540117/8</link>
        <pubDate>Fri, 21 Feb 2014 04:38:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540117-8</guid>
        <source url="https://forum.moparisthebest.com/t/objectcontainer/540117.rss">ObjectContainer</source>
      </item>
      <item>
        <title>ObjectContainer</title>
        <dc:creator><![CDATA[@wildskiller wildskiller]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wildskiller">@wildskiller</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="6" data-topic="540117">
<div class="title">
<div class="quote-controls"></div>
 AtomicInt_:</div>
<blockquote>
<p>the exception is thrown typically whenever you modify a collection while you’re iterating over it, the solution is to use an iterator, you must have been doing something wrong.</p>
</blockquote>
</aside>
<p>while (iterator.hasNext) {<br>
Object o = iterator.next();<br>
o.useMethod();<br>
}</p>
<p>Somewhere else I would modify the collection and get the error thrown. With this class I wont have to worry about it.</p>
<p>I tried a for loop and while loop with my iterator, but I was still having the error thrown. I googled it, and found multiple snippets of code that were said to work, but of course…did not.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/objectcontainer/540117/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/objectcontainer/540117/7</link>
        <pubDate>Fri, 21 Feb 2014 03:40:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540117-7</guid>
        <source url="https://forum.moparisthebest.com/t/objectcontainer/540117.rss">ObjectContainer</source>
      </item>
      <item>
        <title>ObjectContainer</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <p>the exception is thrown typically whenever you modify a collection while you’re iterating over it, the solution is to use an iterator, you must have been doing something wrong.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/objectcontainer/540117/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/objectcontainer/540117/6</link>
        <pubDate>Fri, 21 Feb 2014 02:42:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540117-6</guid>
        <source url="https://forum.moparisthebest.com/t/objectcontainer/540117.rss">ObjectContainer</source>
      </item>
      <item>
        <title>ObjectContainer</title>
        <dc:creator><![CDATA[@wildskiller wildskiller]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wildskiller">@wildskiller</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="4" data-topic="540117">
<div class="title">
<div class="quote-controls"></div>
 Clawz fury:</div>
<blockquote>
<p>to avoid currentmodifcationexceptions could you not just use an iterator? this is nice but just seems like unnecessary work</p>
</blockquote>
</aside>
<p>Even using an iterator I still end up throwing the exception.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/objectcontainer/540117/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/objectcontainer/540117/5</link>
        <pubDate>Fri, 21 Feb 2014 02:30:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540117-5</guid>
        <source url="https://forum.moparisthebest.com/t/objectcontainer/540117.rss">ObjectContainer</source>
      </item>
      <item>
        <title>ObjectContainer</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>to avoid currentmodifcationexceptions could you not just use an iterator? this is nice but just seems like unnecessary work</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/objectcontainer/540117/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/objectcontainer/540117/4</link>
        <pubDate>Fri, 21 Feb 2014 00:13:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540117-4</guid>
        <source url="https://forum.moparisthebest.com/t/objectcontainer/540117.rss">ObjectContainer</source>
      </item>
      <item>
        <title>ObjectContainer</title>
        <dc:creator><![CDATA[@wildskiller wildskiller]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wildskiller">@wildskiller</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="540117">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/lurtz1230/40/39_1.png" class="avatar"> lurtz1230:</div>
<blockquote>
<p>Or you could just implement Collection…</p>
</blockquote>
</aside>
<p>Explain to my as to why I should</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/objectcontainer/540117/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/objectcontainer/540117/3</link>
        <pubDate>Thu, 20 Feb 2014 18:57:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540117-3</guid>
        <source url="https://forum.moparisthebest.com/t/objectcontainer/540117.rss">ObjectContainer</source>
      </item>
      <item>
        <title>ObjectContainer</title>
        <dc:creator><![CDATA[@lurtz1230 lurtz1230]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lurtz1230">@lurtz1230</a> wrote:</p>
          <blockquote>
              <p>Or you could just implement Collection…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/objectcontainer/540117/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/objectcontainer/540117/2</link>
        <pubDate>Thu, 20 Feb 2014 17:21:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540117-2</guid>
        <source url="https://forum.moparisthebest.com/t/objectcontainer/540117.rss">ObjectContainer</source>
      </item>
      <item>
        <title>ObjectContainer</title>
        <dc:creator><![CDATA[@wildskiller wildskiller]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wildskiller">@wildskiller</a> wrote:</p>
          <blockquote>
              <p>I only wrote this to avoid a lot of concurrent exceptions because I’m always messing with arrays and lists in an odd way which causes concurrent modification exceptions. I know how to avoid them, but I feel it takes too much to do that. I do feel that this will be really useful with some things, although I really can’t say what <img src="https://forum.moparisthebest.com/images/emoji/twitter/confused.png?v=5" title=":confused:" class="emoji" alt=":confused:"></p>
<pre><code class="lang-auto">import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;

@SuppressWarnings("unchecked")
public class ObjectContainer&lt;E&gt; implements Iterable&lt;E&gt; {
	
	private Object[] data;
	private int capacity, iteratorIndex;
    
	public ObjectContainer() {
		this.capacity = 694;
		this.data = new Object[capacity];
	}
	
	public ObjectContainer(Collection&lt;?&gt; collection) {
		this.data = collection.toArray();
	}
	
	public ObjectContainer(int capacity) {
		this.capacity = capacity;
		this.data = new Object[capacity];
	}
	
	public boolean add(E e) {
		int slot = getNextFreeSlot();
		if (slot != -1) {
			this.data[slot] = e;
			shift(true, true);
			return true;
		} else return false;
	}
	
	public boolean add(int index, E e) {
		if (!seperateAt(index))
			return false;
		this.data[index] = e;
		shift(true, true);
		return true;
	}
	
	public void add(E...e) {
		for (E v : e) add(v);
	}
	
	public void addAll(Collection&lt;?&gt; c) {
		for (Object o : c) add((E) o);
	}
	
	public void remove(E e) {
		int index = indexOf(e);
		if (index != -1) {
			this.data[index] = null;
		}
		shift(true, true);
	}
	
	public void shift(boolean down, boolean skipNull) {
		List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();
		if (down) { 
			for (int i = 0; i &lt; capacity; i++) {
				if (skipNull &amp;&amp; data[i] == null)
					continue;
				list.add(data[i]);
			}
		} else {
			if (skipNull) {
				for (int i = capacity - 1; i &gt;= 0; i--)
					if (data[i] != null)
						list.add(data[i]);
			} else {
				for (int i = 0; i &lt; capacity; i++)
					if (data[i] == null)
						list.add(data[i]);
				for (int i = 0; i &lt; capacity; i++)
					if (data[i] != null)
						list.add(data[i]);
			}
		}
		Object[] array = new Object[capacity];
		for (int i = 0; i &lt; list.size(); i++)
			array[i] = list.get(i);
		this.data = array;
	}
	
	public boolean seperateAt(int index) {
		if (index &gt;= capacity - 1)
			return false;
		Object[] array = new Object[capacity];
		for (int i = 0; i &lt; capacity-1; i++) {
			int value = (i &lt; index ? i : i + 1);
			if (value &gt;= capacity)
				return false;
			array[value] = data[i];
		}
		this.data = array;
		return true;
	}
	
	public E get(int index) {
		return (E) data[index];
	}
	
	public E getLastObject() {
		for (int i = capacity - 1; i &gt;= 0; i--)
			if (data[i] != null)
				return (E) data[i];
		return null;
	}
	
	public void set(int index, E e) {
		this.data[index] = e;
	}
	
	public int getNextFreeSlot() {
		for (int i = 0; i &lt; capacity; i++)
			if (data[i] == null)
				return i;
		return -1;
	}
	
	public int indexOf(E e) {
		for (int i = 0; i &lt; capacity; i++)
			if (data[i] != null &amp;&amp; data[i].equals(e))
				return i;
		return -1;
	}
	
	public int size() {
		int amount = 0;
		for (int i = 0; i &lt; capacity; i++)
			if (data[i] != null)
				amount++;
		return amount;
	}
	
	public void clear() {
		for (int i = 0; i &lt; capacity; i++)
			data[i] = null;
	}
	
	public boolean contains(E e) {
		return indexOf(e) != -1;
	}
	
	public Object[] toArray() {
		return data;
	}

	public int getCapacity() {
		return capacity;
	}
	
	public void setCapacity(int capacity) {
		this.capacity = capacity;
	}
	
	@Override
	public String toString() {
		String string = "";
		string += "[";
		for (int i = 0; i &lt; size(); i++) {
			if (data[i] == null) continue;
			if (i &lt; size() - 1)
				string += (data[i]+", ");
			else string += (data[i]);
		}
		string += "]";
		return string;
	}

	@Override
    public Iterator&lt;E&gt; iterator() {
        Iterator&lt;E&gt; it = new Iterator&lt;E&gt;() {
            @Override
            public boolean hasNext() {
                return iteratorIndex &lt; size() &amp;&amp; data[iteratorIndex] != null;
            }

            @Override
            public E next() {
                return (E) data[iteratorIndex++];
            }

            @Override
            public void remove() {
               ObjectContainer.this.remove(getLastObject());
            }
        };
        return it;
    }

}</code></pre>
<p>I didn’t write this for rsps but it can obviously be used with one. I was never that great with handling generics, so if you think I’m doing something incredibly wrong please tell me.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/objectcontainer/540117/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/objectcontainer/540117/1</link>
        <pubDate>Sat, 15 Feb 2014 05:00:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540117-1</guid>
        <source url="https://forum.moparisthebest.com/t/objectcontainer/540117.rss">ObjectContainer</source>
      </item>
  </channel>
</rss>
