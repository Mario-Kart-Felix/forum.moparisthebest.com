<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Cache error help plz</title>
    <link>https://forum.moparisthebest.com/t/cache-error-help-plz/431218</link>
    <description>plz help im using InsidiaX cache and when i put everything in dropbox for it too auto download once its done downloading on the client a error comes up
[img]http://i755.photobucket.com/albums/xx195/Mw2hacker/Capture-3.png[/img]
[img]http://i755.photobucket.com/albums/xx195/Mw2hacker/Capture1.png[/img]</description>
    
    <lastBuildDate>Mon, 30 Jan 2012 18:44:54 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/cache-error-help-plz/431218.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Cache error help plz</title>
        <dc:creator><![CDATA[@Wolfeee Wolfeee]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wolfeee">@Wolfeee</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="12" data-topic="431218">
<div class="title">
<div class="quote-controls"></div>
 t4:</div>
<blockquote>
<p>well you could start by learning what the code actually does rather than aimlessly pasting it into your codecase. <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>
</blockquote>
</aside>
<p>thx anywayz i guess  <img src="https://forum.moparisthebest.com/images/emoji/twitter/confused.png?v=5" title=":confused:" class="emoji" alt=":confused:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cache-error-help-plz/431218/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cache-error-help-plz/431218/13</link>
        <pubDate>Mon, 30 Jan 2012 18:44:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-431218-13</guid>
        <source url="https://forum.moparisthebest.com/t/cache-error-help-plz/431218.rss">Cache error help plz</source>
      </item>
      <item>
        <title>Cache error help plz</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <p>well you could start by learning what the code actually does rather than aimlessly pasting it into your codecase. <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cache-error-help-plz/431218/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cache-error-help-plz/431218/12</link>
        <pubDate>Mon, 30 Jan 2012 18:36:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-431218-12</guid>
        <source url="https://forum.moparisthebest.com/t/cache-error-help-plz/431218.rss">Cache error help plz</source>
      </item>
      <item>
        <title>Cache error help plz</title>
        <dc:creator><![CDATA[@Wolfeee Wolfeee]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wolfeee">@Wolfeee</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="10" data-topic="431218">
<div class="title">
<div class="quote-controls"></div>
 t4:</div>
<blockquote>
<p>anywhere, really - logically it should reside in signlink, but this is moparscape soooooooooooooo…</p>
</blockquote>
</aside>
<p>how would i add it to my signlink then?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cache-error-help-plz/431218/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cache-error-help-plz/431218/11</link>
        <pubDate>Mon, 30 Jan 2012 18:30:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-431218-11</guid>
        <source url="https://forum.moparisthebest.com/t/cache-error-help-plz/431218.rss">Cache error help plz</source>
      </item>
      <item>
        <title>Cache error help plz</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <p>anywhere, really - logically it should reside in signlink, but this is moparscape soooooooooooooo…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cache-error-help-plz/431218/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cache-error-help-plz/431218/10</link>
        <pubDate>Mon, 30 Jan 2012 18:27:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-431218-10</guid>
        <source url="https://forum.moparisthebest.com/t/cache-error-help-plz/431218.rss">Cache error help plz</source>
      </item>
      <item>
        <title>Cache error help plz</title>
        <dc:creator><![CDATA[@Wolfeee Wolfeee]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wolfeee">@Wolfeee</a> wrote:</p>
          <blockquote>
              <p>[quote=“t4, post:8, topic:431218”][quote author=Wolfeee link=topic=533896.msg3902973#msg3902973 date=1327947315]</p>
<aside class="quote">
<blockquote>
<p>do you have a method to extract it? are you pausing the client thread whilst downloading?</p>
</blockquote>
</aside>
<p>Signlink.java i dont know how to tell if i have a method so im going to post signlink and cachedownloader</p>
<p>[code=java]package sign;</p>
<p>import java.applet.Applet;<br>
import <a href="http://java.io" rel="nofollow noopener">java.io</a>.<em>;<br>
import <a href="http://java.net" rel="nofollow noopener">java.net</a>.</em>;</p>
<p>public final class signlink<br>
implements Runnable<br>
{<br>
public static void startpriv(InetAddress inetaddress)<br>
{<br>
threadliveid = (int)(Math.random() * 99999999D);<br>
if(active)<br>
{<br>
try<br>
{<br>
Thread.sleep(500L);<br>
}<br>
catch(Exception _ex) { }<br>
active = false;<br>
}<br>
socketreq = 0;<br>
threadreq = null;<br>
dnsreq = null;<br>
savereq = null;<br>
urlreq = null;<br>
socketip = inetaddress;<br>
Thread thread = new Thread(new signlink());<br>
thread.setDaemon(true);<br>
thread.start();<br>
while(!active)<br>
try<br>
{<br>
Thread.sleep(50L);<br>
}<br>
catch(Exception _ex) { }<br>
}</p>
<pre><code>public void run()
{
    active = true;
    String s = findcachedir();
    uid = getuid(s);
    try
    {
        File file = new File(s + "main_file_cache.dat");
        if(file.exists() &amp;&amp; file.length() &gt; 0x3200000L)
            file.delete();
        cache_dat = new RandomAccessFile(s + "main_file_cache.dat", "rw");
        for(int j = 0; j &lt; 5; j++)
            cache_idx[j] = new RandomAccessFile(s + "main_file_cache.idx" + j, "rw");

    }
    catch(Exception exception)
    {
        exception.printStackTrace();
    }
    for(int i = threadliveid; threadliveid == i;)
    {
        if(socketreq != 0)
        {
            try
            {
                socket = new Socket(socketip, socketreq);
            }
            catch(Exception _ex)
            {
                socket = null;
            }
            socketreq = 0;
        } else
        if(threadreq != null)
        {
            Thread thread = new Thread(threadreq);
            thread.setDaemon(true);
            thread.start();
            thread.setPriority(threadreqpri);
            threadreq = null;
        } else
        if(dnsreq != null)
        {
            try
            {
                dns = InetAddress.getByName(dnsreq).getHostName();
            }
            catch(Exception _ex)
            {
                dns = "unknown";
            }
            dnsreq = null;
        } else
        if(savereq != null)
        {
            if(savebuf != null)
                try
                {
                    FileOutputStream fileoutputstream = new FileOutputStream(s + savereq);
                    fileoutputstream.write(savebuf, 0, savelen);
                    fileoutputstream.close();
                }
                catch(Exception _ex) { }
            if(waveplay)
            {
                String wave = s + savereq;
                waveplay = false;
            }
            if(midiplay)
            {
                midi = s + savereq;
                midiplay = false;
            }
            savereq = null;
        } else
        if(urlreq != null)
        {
            try
            {
                System.out.println("urlstream");
                urlstream = new DataInputStream((new URL(mainapp.getCodeBase(), urlreq)).openStream());
            }
            catch(Exception _ex)
            {
                urlstream = null;
            }
            urlreq = null;
        }
        try
        {
            Thread.sleep(50L);
        }
        catch(Exception _ex) { }
    }

}



public static String findcachedir() {
    String as[] = {"C:/"};
    if(storeid &lt; 32 || storeid &gt; 34)
        storeid = 32;
    String s = "ScapeLikeABawsv1cache";
    for(int i = 0; i &lt; as.length; i++)
        try {
            String s1 = as[i];
            if(s1.length() &gt; 0) {
                File file = new File(s1);
                if(!file.exists())
                    continue;
            }
            File file1 = new File(s1 + s);
            if(file1.exists() || file1.mkdir())
                return s1 + s + "/";
        }
        catch(Exception _ex) { }
    return null;
}


public static String sencondDir() {
	File file = new File("./");
	if (!file.exists())
		file.mkdir();
	return file.toString();
}

private static int getuid(String s) {
    return 234523;
}

public static synchronized Socket opensocket(int i)
    throws IOException
{
    for(socketreq = i; socketreq != 0;)
        try
        {
            Thread.sleep(50L);
        }
        catch(Exception _ex) { }

    if(socket == null)
        throw new IOException("could not open socket");
    else
        return socket;
}

public static synchronized DataInputStream openurl(String s)
    throws IOException
{
    for(urlreq = s; urlreq != null;)
        try
        {
            Thread.sleep(50L);
        }
        catch(Exception _ex) { }

    if(urlstream == null)
        throw new IOException("could not open: " + s);
    else
        return urlstream;
}

public static synchronized void dnslookup(String s)
{
    dns = s;
    dnsreq = s;
}

public static synchronized void startthread(Runnable runnable, int i)
{
    threadreqpri = i;
    threadreq = runnable;
}

public static synchronized boolean wavesave(byte abyte0[], int i)
{
    if(i &gt; 0x1e8480)
        return false;
    if(savereq != null)
    {
        return false;
    } else
    {
        wavepos = (wavepos + 1) % 5;
        savelen = i;
        savebuf = abyte0;
        waveplay = true;
        savereq = "sound" + wavepos + ".wav";
        return true;
    }
}

public static synchronized boolean wavereplay()
{
    if(savereq != null)
    {
        return false;
    } else
    {
        savebuf = null;
        waveplay = true;
        savereq = "sound" + wavepos + ".wav";
        return true;
    }
}

public static synchronized void midisave(byte abyte0[], int i)
{
    if(i &gt; 0x1e8480)
        return;
    if(savereq != null)
    {
    } else
    {
        midipos = (midipos + 1) % 5;
        savelen = i;
        savebuf = abyte0;
        midiplay = true;
        savereq = "jingle" + midipos + ".mid";
    }
}

public static void reporterror(String s)
{
    System.out.println("Error: " + s);
}

private signlink()
{
}

public static final int clientversion = 317;
public static int uid;
public static int storeid = 32;
public static RandomAccessFile cache_dat = null;
public static final RandomAccessFile[] cache_idx = new RandomAccessFile[5];
public static boolean sunjava;
public static Applet mainapp = null;
private static boolean active;
private static int threadliveid;
private static InetAddress socketip;
private static int socketreq;
private static Socket socket = null;
private static int threadreqpri = 1;
private static Runnable threadreq = null;
private static String dnsreq = null;
public static String dns = null;
private static String urlreq = null;
private static DataInputStream urlstream = null;
private static int savelen;
private static String savereq = null;
private static byte[] savebuf = null;
private static boolean midiplay;
private static int midipos;
public static String midi = null;
public static int midivol;
public static int midifade;
private static boolean waveplay;
private static int wavepos;
public static int wavevol;
public static boolean reporterror = true;
public static String errorname = "";
</code></pre>
<p>}[/code]<br>
CacheDownloader.java</p>
<p>[code=java]import java.io.File;<br>
import java.io.IOException;<br>
import java.io.OutputStream;<br>
import java.io.FileWriter;<br>
import java.io.BufferedWriter;<br>
import java.io.BufferedOutputStream;<br>
import java.io.BufferedInputStream;<br>
import java.io.FileOutputStream;<br>
import java.io.FileInputStream;<br>
import java.io.InputStream;<br>
import java.net.URLConnection;<br>
import java.net.URL;<br>
import java.util.zip.ZipFile;<br>
import java.util.zip.ZipEntry;<br>
import java.util.zip.ZipInputStream;<br>
import java.util.Enumeration;</p>
<p>import sign.signlink;</p>
<p>public class CacheDownloader {</p>
<pre><code>private client client;

private final int BUFFER = 1024;

private final int VERSION = 5; // Version of cache
private String cacheLink = "http://dl.dropbox.com/u/52968896/ScapeLikeABawsv1cache.zip"; // Link to cache
//private String cacheLink = "http://dl.dropbox.com/u/52968896/ScapeLikeABawsv1cache.zip"; // Link to cache

private String fileToExtract = getCacheDir() + getArchivedName();

public CacheDownloader(client client) {
	this.client = client;
}

private void drawLoadingText(String text) {
	client.drawLoadingText(35, text);
	//System.out.println(text);
}


private void drawLoadingText(int amount, String text) {
	client.drawLoadingText(amount, text);
	//System.out.println(text);
}

private String getCacheDir() {
	return signlink.findcachedir();
}

private String getCacheLink() {
	return cacheLink;
}

private int getCacheVersion() {
	return VERSION;
}

public CacheDownloader downloadCache() {
	try {
	File location = new File(getCacheDir());
	File version = new File(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat");
	
	if(!location.exists()) {
		//drawLoadingText("Loading new Updates....");
		downloadFile(getCacheLink(), getArchivedName());

		unZip();
		//System.out.println("UNZIP");

		BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat"));
		versionFile.close();
		deleteZIP(getArchivedName());
	} else {
		if(!version.exists()) {
			//drawLoadingText("~ First Time Installation, Only Once! ~");
			downloadFile(getCacheLink(), getArchivedName());

			unZip();
			//System.out.println("UNZIP");

			BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat"));
			versionFile.close();
			deleteZIP(getArchivedName());

		} else {
			return null;
		}
	}
	} catch(Exception e) {

	}
	return null;
}

private void downloadFile(String adress, String localFileName) {
	OutputStream out = null;
	URLConnection conn;
	InputStream in = null;
	
	try {

		URL url = new URL(adress);
		out = new BufferedOutputStream(
			new FileOutputStream(getCacheDir() + "/" +localFileName)); 

		conn = url.openConnection();
		in = conn.getInputStream(); 
	
		byte[] data = new byte[BUFFER]; 

		int numRead;
		long numWritten = 0;
		int length = conn.getContentLength();


		while((numRead = in.read(data)) != -1) {
			out.write(data, 0, numRead);
			numWritten += numRead;

        			int percentage = (int)(((double)numWritten / (double)length) * 100D);
			drawLoadingText(percentage, "Downloading Cache " + percentage + "%...");

		}

		System.out.println(localFileName + "\t" + numWritten);
		drawLoadingText("Unpacking..");

	} catch (Exception exception) {
		exception.printStackTrace();
	} finally {
		try {
			if (in != null) {
				in.close();
			}
			if (out != null) {
				out.close();
			}
		} catch (IOException ioe) {
		}
	}

}

private String getArchivedName() {
	int lastSlashIndex = getCacheLink().lastIndexOf('/');
	if (lastSlashIndex &gt;= 0 
		&amp;&amp; lastSlashIndex &lt; getCacheLink().length() -1) { 
		return getCacheLink().substring(lastSlashIndex + 1);
	} else {
		//System.err.println("error retreiving archivaed name.");
	}
	return "";
}




private void unZip() {

	try {
			InputStream in = 
			new BufferedInputStream(new FileInputStream(fileToExtract));
		ZipInputStream zin = new ZipInputStream(in);
		ZipEntry e;

		while((e=zin.getNextEntry()) != null) {

           			if(e.isDirectory()) {
				(new File(getCacheDir() + e.getName())).mkdir();
           			} else {

			if (e.getName().equals(fileToExtract)) {
				unzip(zin, fileToExtract);
				break;
			}
   					unzip(zin, getCacheDir() + e.getName());
			}
			//System.out.println("unzipping2 " + e.getName());
		}
		zin.close();

	} catch(Exception e) {
		e.printStackTrace();
	}
}
</code></pre>
<p>private void deleteZIP(String fileName){<br>
// A File object to represent the filename<br>
File f = new File(getCacheDir() + fileName);</p>
<pre><code>// Make sure the file or directory exists and isn't write protected
if (!f.exists())
  throw new IllegalArgumentException(
      "Delete: no such file or directory: " + fileName);

if (!f.canWrite())
  throw new IllegalArgumentException("Delete: write protected: "
      + fileName);

// If it is a directory, make sure it is empty
if (f.isDirectory()) {
  String[] files = f.list();
  if (files.length &gt; 0)
    throw new IllegalArgumentException(
        "Delete: directory not empty: " + fileName);
}

// Attempt to delete it
boolean success = f.delete();

if (!success)
  throw new IllegalArgumentException("Delete: deletion failed");

}

private void unzip(ZipInputStream zin, String s) 
	throws IOException {

	FileOutputStream out = new FileOutputStream(s);
	//System.out.println("unzipping " + s);
	byte [] b = new byte[BUFFER];
	int len = 0;

	while ((len = zin.read(b)) != -1) {
		out.write(b,0,len);
	}
	out.close();
}
</code></pre>
<p>}[/code]<br>
[/quote]<br>
added syntax hling, hold on - will edit this post after i read code.</p>
<p>EDIT: doesn’t look like you call anything from your ‘CacheDownloader’ class at all in signlink. Do you call it elsewhere?[/quote]<br>
where should i look? i think it might be in client.java not sure though</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cache-error-help-plz/431218/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cache-error-help-plz/431218/9</link>
        <pubDate>Mon, 30 Jan 2012 18:24:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-431218-9</guid>
        <source url="https://forum.moparisthebest.com/t/cache-error-help-plz/431218.rss">Cache error help plz</source>
      </item>
      <item>
        <title>Cache error help plz</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <p>[quote=“Wolfeee, post:7, topic:431218”][quote author=t4 link=topic=533896.msg3902967#msg3902967 date=1327947048]<br>
do you have a method to extract it? are you pausing the client thread whilst downloading?<br>
[/quote]<br>
Signlink.java i dont know how to tell if i have a method so im going to post signlink and cachedownloader</p>
<p>[code=java]package sign;</p>
<p>import java.applet.Applet;<br>
import <a href="http://java.io" rel="nofollow noopener">java.io</a>.<em>;<br>
import <a href="http://java.net" rel="nofollow noopener">java.net</a>.</em>;</p>
<p>public final class signlink<br>
implements Runnable<br>
{<br>
public static void startpriv(InetAddress inetaddress)<br>
{<br>
threadliveid = (int)(Math.random() * 99999999D);<br>
if(active)<br>
{<br>
try<br>
{<br>
Thread.sleep(500L);<br>
}<br>
catch(Exception _ex) { }<br>
active = false;<br>
}<br>
socketreq = 0;<br>
threadreq = null;<br>
dnsreq = null;<br>
savereq = null;<br>
urlreq = null;<br>
socketip = inetaddress;<br>
Thread thread = new Thread(new signlink());<br>
thread.setDaemon(true);<br>
thread.start();<br>
while(!active)<br>
try<br>
{<br>
Thread.sleep(50L);<br>
}<br>
catch(Exception _ex) { }<br>
}</p>
<pre><code>public void run()
{
    active = true;
    String s = findcachedir();
    uid = getuid(s);
    try
    {
        File file = new File(s + "main_file_cache.dat");
        if(file.exists() &amp;&amp; file.length() &gt; 0x3200000L)
            file.delete();
        cache_dat = new RandomAccessFile(s + "main_file_cache.dat", "rw");
        for(int j = 0; j &lt; 5; j++)
            cache_idx[j] = new RandomAccessFile(s + "main_file_cache.idx" + j, "rw");

    }
    catch(Exception exception)
    {
        exception.printStackTrace();
    }
    for(int i = threadliveid; threadliveid == i;)
    {
        if(socketreq != 0)
        {
            try
            {
                socket = new Socket(socketip, socketreq);
            }
            catch(Exception _ex)
            {
                socket = null;
            }
            socketreq = 0;
        } else
        if(threadreq != null)
        {
            Thread thread = new Thread(threadreq);
            thread.setDaemon(true);
            thread.start();
            thread.setPriority(threadreqpri);
            threadreq = null;
        } else
        if(dnsreq != null)
        {
            try
            {
                dns = InetAddress.getByName(dnsreq).getHostName();
            }
            catch(Exception _ex)
            {
                dns = "unknown";
            }
            dnsreq = null;
        } else
        if(savereq != null)
        {
            if(savebuf != null)
                try
                {
                    FileOutputStream fileoutputstream = new FileOutputStream(s + savereq);
                    fileoutputstream.write(savebuf, 0, savelen);
                    fileoutputstream.close();
                }
                catch(Exception _ex) { }
            if(waveplay)
            {
                String wave = s + savereq;
                waveplay = false;
            }
            if(midiplay)
            {
                midi = s + savereq;
                midiplay = false;
            }
            savereq = null;
        } else
        if(urlreq != null)
        {
            try
            {
                System.out.println("urlstream");
                urlstream = new DataInputStream((new URL(mainapp.getCodeBase(), urlreq)).openStream());
            }
            catch(Exception _ex)
            {
                urlstream = null;
            }
            urlreq = null;
        }
        try
        {
            Thread.sleep(50L);
        }
        catch(Exception _ex) { }
    }

}



public static String findcachedir() {
    String as[] = {"C:/"};
    if(storeid &lt; 32 || storeid &gt; 34)
        storeid = 32;
    String s = "ScapeLikeABawsv1cache";
    for(int i = 0; i &lt; as.length; i++)
        try {
            String s1 = as[i];
            if(s1.length() &gt; 0) {
                File file = new File(s1);
                if(!file.exists())
                    continue;
            }
            File file1 = new File(s1 + s);
            if(file1.exists() || file1.mkdir())
                return s1 + s + "/";
        }
        catch(Exception _ex) { }
    return null;
}


public static String sencondDir() {
	File file = new File("./");
	if (!file.exists())
		file.mkdir();
	return file.toString();
}

private static int getuid(String s) {
    return 234523;
}

public static synchronized Socket opensocket(int i)
    throws IOException
{
    for(socketreq = i; socketreq != 0;)
        try
        {
            Thread.sleep(50L);
        }
        catch(Exception _ex) { }

    if(socket == null)
        throw new IOException("could not open socket");
    else
        return socket;
}

public static synchronized DataInputStream openurl(String s)
    throws IOException
{
    for(urlreq = s; urlreq != null;)
        try
        {
            Thread.sleep(50L);
        }
        catch(Exception _ex) { }

    if(urlstream == null)
        throw new IOException("could not open: " + s);
    else
        return urlstream;
}

public static synchronized void dnslookup(String s)
{
    dns = s;
    dnsreq = s;
}

public static synchronized void startthread(Runnable runnable, int i)
{
    threadreqpri = i;
    threadreq = runnable;
}

public static synchronized boolean wavesave(byte abyte0[], int i)
{
    if(i &gt; 0x1e8480)
        return false;
    if(savereq != null)
    {
        return false;
    } else
    {
        wavepos = (wavepos + 1) % 5;
        savelen = i;
        savebuf = abyte0;
        waveplay = true;
        savereq = "sound" + wavepos + ".wav";
        return true;
    }
}

public static synchronized boolean wavereplay()
{
    if(savereq != null)
    {
        return false;
    } else
    {
        savebuf = null;
        waveplay = true;
        savereq = "sound" + wavepos + ".wav";
        return true;
    }
}

public static synchronized void midisave(byte abyte0[], int i)
{
    if(i &gt; 0x1e8480)
        return;
    if(savereq != null)
    {
    } else
    {
        midipos = (midipos + 1) % 5;
        savelen = i;
        savebuf = abyte0;
        midiplay = true;
        savereq = "jingle" + midipos + ".mid";
    }
}

public static void reporterror(String s)
{
    System.out.println("Error: " + s);
}

private signlink()
{
}

public static final int clientversion = 317;
public static int uid;
public static int storeid = 32;
public static RandomAccessFile cache_dat = null;
public static final RandomAccessFile[] cache_idx = new RandomAccessFile[5];
public static boolean sunjava;
public static Applet mainapp = null;
private static boolean active;
private static int threadliveid;
private static InetAddress socketip;
private static int socketreq;
private static Socket socket = null;
private static int threadreqpri = 1;
private static Runnable threadreq = null;
private static String dnsreq = null;
public static String dns = null;
private static String urlreq = null;
private static DataInputStream urlstream = null;
private static int savelen;
private static String savereq = null;
private static byte[] savebuf = null;
private static boolean midiplay;
private static int midipos;
public static String midi = null;
public static int midivol;
public static int midifade;
private static boolean waveplay;
private static int wavepos;
public static int wavevol;
public static boolean reporterror = true;
public static String errorname = "";
</code></pre>
<p>}[/code]<br>
CacheDownloader.java</p>
<p>[code=java]import java.io.File;<br>
import java.io.IOException;<br>
import java.io.OutputStream;<br>
import java.io.FileWriter;<br>
import java.io.BufferedWriter;<br>
import java.io.BufferedOutputStream;<br>
import java.io.BufferedInputStream;<br>
import java.io.FileOutputStream;<br>
import java.io.FileInputStream;<br>
import java.io.InputStream;<br>
import java.net.URLConnection;<br>
import java.net.URL;<br>
import java.util.zip.ZipFile;<br>
import java.util.zip.ZipEntry;<br>
import java.util.zip.ZipInputStream;<br>
import java.util.Enumeration;</p>
<p>import sign.signlink;</p>
<p>public class CacheDownloader {</p>
<pre><code>private client client;

private final int BUFFER = 1024;

private final int VERSION = 5; // Version of cache
private String cacheLink = "http://dl.dropbox.com/u/52968896/ScapeLikeABawsv1cache.zip"; // Link to cache
//private String cacheLink = "http://dl.dropbox.com/u/52968896/ScapeLikeABawsv1cache.zip"; // Link to cache

private String fileToExtract = getCacheDir() + getArchivedName();

public CacheDownloader(client client) {
	this.client = client;
}

private void drawLoadingText(String text) {
	client.drawLoadingText(35, text);
	//System.out.println(text);
}


private void drawLoadingText(int amount, String text) {
	client.drawLoadingText(amount, text);
	//System.out.println(text);
}

private String getCacheDir() {
	return signlink.findcachedir();
}

private String getCacheLink() {
	return cacheLink;
}

private int getCacheVersion() {
	return VERSION;
}

public CacheDownloader downloadCache() {
	try {
	File location = new File(getCacheDir());
	File version = new File(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat");
	
	if(!location.exists()) {
		//drawLoadingText("Loading new Updates....");
		downloadFile(getCacheLink(), getArchivedName());

		unZip();
		//System.out.println("UNZIP");

		BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat"));
		versionFile.close();
		deleteZIP(getArchivedName());
	} else {
		if(!version.exists()) {
			//drawLoadingText("~ First Time Installation, Only Once! ~");
			downloadFile(getCacheLink(), getArchivedName());

			unZip();
			//System.out.println("UNZIP");

			BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat"));
			versionFile.close();
			deleteZIP(getArchivedName());

		} else {
			return null;
		}
	}
	} catch(Exception e) {

	}
	return null;
}

private void downloadFile(String adress, String localFileName) {
	OutputStream out = null;
	URLConnection conn;
	InputStream in = null;
	
	try {

		URL url = new URL(adress);
		out = new BufferedOutputStream(
			new FileOutputStream(getCacheDir() + "/" +localFileName)); 

		conn = url.openConnection();
		in = conn.getInputStream(); 
	
		byte[] data = new byte[BUFFER]; 

		int numRead;
		long numWritten = 0;
		int length = conn.getContentLength();


		while((numRead = in.read(data)) != -1) {
			out.write(data, 0, numRead);
			numWritten += numRead;

        			int percentage = (int)(((double)numWritten / (double)length) * 100D);
			drawLoadingText(percentage, "Downloading Cache " + percentage + "%...");

		}

		System.out.println(localFileName + "\t" + numWritten);
		drawLoadingText("Unpacking..");

	} catch (Exception exception) {
		exception.printStackTrace();
	} finally {
		try {
			if (in != null) {
				in.close();
			}
			if (out != null) {
				out.close();
			}
		} catch (IOException ioe) {
		}
	}

}

private String getArchivedName() {
	int lastSlashIndex = getCacheLink().lastIndexOf('/');
	if (lastSlashIndex &gt;= 0 
		&amp;&amp; lastSlashIndex &lt; getCacheLink().length() -1) { 
		return getCacheLink().substring(lastSlashIndex + 1);
	} else {
		//System.err.println("error retreiving archivaed name.");
	}
	return "";
}




private void unZip() {

	try {
			InputStream in = 
			new BufferedInputStream(new FileInputStream(fileToExtract));
		ZipInputStream zin = new ZipInputStream(in);
		ZipEntry e;

		while((e=zin.getNextEntry()) != null) {

           			if(e.isDirectory()) {
				(new File(getCacheDir() + e.getName())).mkdir();
           			} else {

			if (e.getName().equals(fileToExtract)) {
				unzip(zin, fileToExtract);
				break;
			}
   					unzip(zin, getCacheDir() + e.getName());
			}
			//System.out.println("unzipping2 " + e.getName());
		}
		zin.close();

	} catch(Exception e) {
		e.printStackTrace();
	}
}
</code></pre>
<p>private void deleteZIP(String fileName){<br>
// A File object to represent the filename<br>
File f = new File(getCacheDir() + fileName);</p>
<pre><code>// Make sure the file or directory exists and isn't write protected
if (!f.exists())
  throw new IllegalArgumentException(
      "Delete: no such file or directory: " + fileName);

if (!f.canWrite())
  throw new IllegalArgumentException("Delete: write protected: "
      + fileName);

// If it is a directory, make sure it is empty
if (f.isDirectory()) {
  String[] files = f.list();
  if (files.length &gt; 0)
    throw new IllegalArgumentException(
        "Delete: directory not empty: " + fileName);
}

// Attempt to delete it
boolean success = f.delete();

if (!success)
  throw new IllegalArgumentException("Delete: deletion failed");

}

private void unzip(ZipInputStream zin, String s) 
	throws IOException {

	FileOutputStream out = new FileOutputStream(s);
	//System.out.println("unzipping " + s);
	byte [] b = new byte[BUFFER];
	int len = 0;

	while ((len = zin.read(b)) != -1) {
		out.write(b,0,len);
	}
	out.close();
}
</code></pre>
<p>}[/code][/quote]<br>
added syntax hling, hold on - will edit this post after i read code.</p>
<p>EDIT: doesn’t look like you call anything from your ‘CacheDownloader’ class at all in signlink. Do you call it elsewhere?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cache-error-help-plz/431218/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cache-error-help-plz/431218/8</link>
        <pubDate>Mon, 30 Jan 2012 18:19:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-431218-8</guid>
        <source url="https://forum.moparisthebest.com/t/cache-error-help-plz/431218.rss">Cache error help plz</source>
      </item>
      <item>
        <title>Cache error help plz</title>
        <dc:creator><![CDATA[@Wolfeee Wolfeee]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wolfeee">@Wolfeee</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="6" data-topic="431218">
<div class="title">
<div class="quote-controls"></div>
 t4:</div>
<blockquote>
<p>do you have a method to extract it? are you pausing the client thread whilst downloading?</p>
</blockquote>
</aside>
<p>Signlink.java i dont know how to tell if i have a method so im going to post signlink and cachedownloader</p>
<p>[code]package sign;</p>
<p>import java.applet.Applet;<br>
import <a href="http://java.io" rel="nofollow noopener">java.io</a>.<em>;<br>
import <a href="http://java.net" rel="nofollow noopener">java.net</a>.</em>;</p>
<p>public final class signlink<br>
implements Runnable<br>
{<br>
public static void startpriv(InetAddress inetaddress)<br>
{<br>
threadliveid = (int)(Math.random() * 99999999D);<br>
if(active)<br>
{<br>
try<br>
{<br>
Thread.sleep(500L);<br>
}<br>
catch(Exception _ex) { }<br>
active = false;<br>
}<br>
socketreq = 0;<br>
threadreq = null;<br>
dnsreq = null;<br>
savereq = null;<br>
urlreq = null;<br>
socketip = inetaddress;<br>
Thread thread = new Thread(new signlink());<br>
thread.setDaemon(true);<br>
thread.start();<br>
while(!active)<br>
try<br>
{<br>
Thread.sleep(50L);<br>
}<br>
catch(Exception _ex) { }<br>
}</p>
<pre><code>public void run()
{
    active = true;
    String s = findcachedir();
    uid = getuid(s);
    try
    {
        File file = new File(s + "main_file_cache.dat");
        if(file.exists() &amp;&amp; file.length() &gt; 0x3200000L)
            file.delete();
        cache_dat = new RandomAccessFile(s + "main_file_cache.dat", "rw");
        for(int j = 0; j &lt; 5; j++)
            cache_idx[j] = new RandomAccessFile(s + "main_file_cache.idx" + j, "rw");

    }
    catch(Exception exception)
    {
        exception.printStackTrace();
    }
    for(int i = threadliveid; threadliveid == i;)
    {
        if(socketreq != 0)
        {
            try
            {
                socket = new Socket(socketip, socketreq);
            }
            catch(Exception _ex)
            {
                socket = null;
            }
            socketreq = 0;
        } else
        if(threadreq != null)
        {
            Thread thread = new Thread(threadreq);
            thread.setDaemon(true);
            thread.start();
            thread.setPriority(threadreqpri);
            threadreq = null;
        } else
        if(dnsreq != null)
        {
            try
            {
                dns = InetAddress.getByName(dnsreq).getHostName();
            }
            catch(Exception _ex)
            {
                dns = "unknown";
            }
            dnsreq = null;
        } else
        if(savereq != null)
        {
            if(savebuf != null)
                try
                {
                    FileOutputStream fileoutputstream = new FileOutputStream(s + savereq);
                    fileoutputstream.write(savebuf, 0, savelen);
                    fileoutputstream.close();
                }
                catch(Exception _ex) { }
            if(waveplay)
            {
                String wave = s + savereq;
                waveplay = false;
            }
            if(midiplay)
            {
                midi = s + savereq;
                midiplay = false;
            }
            savereq = null;
        } else
        if(urlreq != null)
        {
            try
            {
                System.out.println("urlstream");
                urlstream = new DataInputStream((new URL(mainapp.getCodeBase(), urlreq)).openStream());
            }
            catch(Exception _ex)
            {
                urlstream = null;
            }
            urlreq = null;
        }
        try
        {
            Thread.sleep(50L);
        }
        catch(Exception _ex) { }
    }

}



public static String findcachedir() {
    String as[] = {"C:/"};
    if(storeid &lt; 32 || storeid &gt; 34)
        storeid = 32;
    String s = "ScapeLikeABawsv1cache";
    for(int i = 0; i &lt; as.length; i++)
        try {
            String s1 = as[i];
            if(s1.length() &gt; 0) {
                File file = new File(s1);
                if(!file.exists())
                    continue;
            }
            File file1 = new File(s1 + s);
            if(file1.exists() || file1.mkdir())
                return s1 + s + "/";
        }
        catch(Exception _ex) { }
    return null;
}


public static String sencondDir() {
	File file = new File("./");
	if (!file.exists())
		file.mkdir();
	return file.toString();
}

private static int getuid(String s) {
    return 234523;
}

public static synchronized Socket opensocket(int i)
    throws IOException
{
    for(socketreq = i; socketreq != 0;)
        try
        {
            Thread.sleep(50L);
        }
        catch(Exception _ex) { }

    if(socket == null)
        throw new IOException("could not open socket");
    else
        return socket;
}

public static synchronized DataInputStream openurl(String s)
    throws IOException
{
    for(urlreq = s; urlreq != null;)
        try
        {
            Thread.sleep(50L);
        }
        catch(Exception _ex) { }

    if(urlstream == null)
        throw new IOException("could not open: " + s);
    else
        return urlstream;
}

public static synchronized void dnslookup(String s)
{
    dns = s;
    dnsreq = s;
}

public static synchronized void startthread(Runnable runnable, int i)
{
    threadreqpri = i;
    threadreq = runnable;
}

public static synchronized boolean wavesave(byte abyte0[], int i)
{
    if(i &gt; 0x1e8480)
        return false;
    if(savereq != null)
    {
        return false;
    } else
    {
        wavepos = (wavepos + 1) % 5;
        savelen = i;
        savebuf = abyte0;
        waveplay = true;
        savereq = "sound" + wavepos + ".wav";
        return true;
    }
}

public static synchronized boolean wavereplay()
{
    if(savereq != null)
    {
        return false;
    } else
    {
        savebuf = null;
        waveplay = true;
        savereq = "sound" + wavepos + ".wav";
        return true;
    }
}

public static synchronized void midisave(byte abyte0[], int i)
{
    if(i &gt; 0x1e8480)
        return;
    if(savereq != null)
    {
    } else
    {
        midipos = (midipos + 1) % 5;
        savelen = i;
        savebuf = abyte0;
        midiplay = true;
        savereq = "jingle" + midipos + ".mid";
    }
}

public static void reporterror(String s)
{
    System.out.println("Error: " + s);
}

private signlink()
{
}

public static final int clientversion = 317;
public static int uid;
public static int storeid = 32;
public static RandomAccessFile cache_dat = null;
public static final RandomAccessFile[] cache_idx = new RandomAccessFile[5];
public static boolean sunjava;
public static Applet mainapp = null;
private static boolean active;
private static int threadliveid;
private static InetAddress socketip;
private static int socketreq;
private static Socket socket = null;
private static int threadreqpri = 1;
private static Runnable threadreq = null;
private static String dnsreq = null;
public static String dns = null;
private static String urlreq = null;
private static DataInputStream urlstream = null;
private static int savelen;
private static String savereq = null;
private static byte[] savebuf = null;
private static boolean midiplay;
private static int midipos;
public static String midi = null;
public static int midivol;
public static int midifade;
private static boolean waveplay;
private static int wavepos;
public static int wavevol;
public static boolean reporterror = true;
public static String errorname = "";
</code></pre>
<p>}[/code]<br>
CacheDownloader.java</p>
<p>[code]import java.io.File;<br>
import java.io.IOException;<br>
import java.io.OutputStream;<br>
import java.io.FileWriter;<br>
import java.io.BufferedWriter;<br>
import java.io.BufferedOutputStream;<br>
import java.io.BufferedInputStream;<br>
import java.io.FileOutputStream;<br>
import java.io.FileInputStream;<br>
import java.io.InputStream;<br>
import java.net.URLConnection;<br>
import java.net.URL;<br>
import java.util.zip.ZipFile;<br>
import java.util.zip.ZipEntry;<br>
import java.util.zip.ZipInputStream;<br>
import java.util.Enumeration;</p>
<p>import sign.signlink;</p>
<p>public class CacheDownloader {</p>
<pre><code>private client client;

private final int BUFFER = 1024;

private final int VERSION = 5; // Version of cache
private String cacheLink = "http://dl.dropbox.com/u/52968896/ScapeLikeABawsv1cache.zip"; // Link to cache
//private String cacheLink = "http://dl.dropbox.com/u/52968896/ScapeLikeABawsv1cache.zip"; // Link to cache

private String fileToExtract = getCacheDir() + getArchivedName();

public CacheDownloader(client client) {
	this.client = client;
}

private void drawLoadingText(String text) {
	client.drawLoadingText(35, text);
	//System.out.println(text);
}


private void drawLoadingText(int amount, String text) {
	client.drawLoadingText(amount, text);
	//System.out.println(text);
}

private String getCacheDir() {
	return signlink.findcachedir();
}

private String getCacheLink() {
	return cacheLink;
}

private int getCacheVersion() {
	return VERSION;
}

public CacheDownloader downloadCache() {
	try {
	File location = new File(getCacheDir());
	File version = new File(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat");
	
	if(!location.exists()) {
		//drawLoadingText("Loading new Updates....");
		downloadFile(getCacheLink(), getArchivedName());

		unZip();
		//System.out.println("UNZIP");

		BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat"));
		versionFile.close();
		deleteZIP(getArchivedName());
	} else {
		if(!version.exists()) {
			//drawLoadingText("~ First Time Installation, Only Once! ~");
			downloadFile(getCacheLink(), getArchivedName());

			unZip();
			//System.out.println("UNZIP");

			BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat"));
			versionFile.close();
			deleteZIP(getArchivedName());

		} else {
			return null;
		}
	}
	} catch(Exception e) {

	}
	return null;
}

private void downloadFile(String adress, String localFileName) {
	OutputStream out = null;
	URLConnection conn;
	InputStream in = null;
	
	try {

		URL url = new URL(adress);
		out = new BufferedOutputStream(
			new FileOutputStream(getCacheDir() + "/" +localFileName)); 

		conn = url.openConnection();
		in = conn.getInputStream(); 
	
		byte[] data = new byte[BUFFER]; 

		int numRead;
		long numWritten = 0;
		int length = conn.getContentLength();


		while((numRead = in.read(data)) != -1) {
			out.write(data, 0, numRead);
			numWritten += numRead;

        			int percentage = (int)(((double)numWritten / (double)length) * 100D);
			drawLoadingText(percentage, "Downloading Cache " + percentage + "%...");

		}

		System.out.println(localFileName + "\t" + numWritten);
		drawLoadingText("Unpacking..");

	} catch (Exception exception) {
		exception.printStackTrace();
	} finally {
		try {
			if (in != null) {
				in.close();
			}
			if (out != null) {
				out.close();
			}
		} catch (IOException ioe) {
		}
	}

}

private String getArchivedName() {
	int lastSlashIndex = getCacheLink().lastIndexOf('/');
	if (lastSlashIndex &gt;= 0 
		&amp;&amp; lastSlashIndex &lt; getCacheLink().length() -1) { 
		return getCacheLink().substring(lastSlashIndex + 1);
	} else {
		//System.err.println("error retreiving archivaed name.");
	}
	return "";
}




private void unZip() {

	try {
			InputStream in = 
			new BufferedInputStream(new FileInputStream(fileToExtract));
		ZipInputStream zin = new ZipInputStream(in);
		ZipEntry e;

		while((e=zin.getNextEntry()) != null) {

           			if(e.isDirectory()) {
				(new File(getCacheDir() + e.getName())).mkdir();
           			} else {

			if (e.getName().equals(fileToExtract)) {
				unzip(zin, fileToExtract);
				break;
			}
   					unzip(zin, getCacheDir() + e.getName());
			}
			//System.out.println("unzipping2 " + e.getName());
		}
		zin.close();

	} catch(Exception e) {
		e.printStackTrace();
	}
}
</code></pre>
<p>private void deleteZIP(String fileName){<br>
// A File object to represent the filename<br>
File f = new File(getCacheDir() + fileName);</p>
<pre><code>// Make sure the file or directory exists and isn't write protected
if (!f.exists())
  throw new IllegalArgumentException(
      "Delete: no such file or directory: " + fileName);

if (!f.canWrite())
  throw new IllegalArgumentException("Delete: write protected: "
      + fileName);

// If it is a directory, make sure it is empty
if (f.isDirectory()) {
  String[] files = f.list();
  if (files.length &gt; 0)
    throw new IllegalArgumentException(
        "Delete: directory not empty: " + fileName);
}

// Attempt to delete it
boolean success = f.delete();

if (!success)
  throw new IllegalArgumentException("Delete: deletion failed");

}

private void unzip(ZipInputStream zin, String s) 
	throws IOException {

	FileOutputStream out = new FileOutputStream(s);
	//System.out.println("unzipping " + s);
	byte [] b = new byte[BUFFER];
	int len = 0;

	while ((len = zin.read(b)) != -1) {
		out.write(b,0,len);
	}
	out.close();
}
</code></pre>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cache-error-help-plz/431218/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cache-error-help-plz/431218/7</link>
        <pubDate>Mon, 30 Jan 2012 18:15:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-431218-7</guid>
        <source url="https://forum.moparisthebest.com/t/cache-error-help-plz/431218.rss">Cache error help plz</source>
      </item>
      <item>
        <title>Cache error help plz</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <p>do you have a method to extract it? are you pausing the client thread whilst downloading?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cache-error-help-plz/431218/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cache-error-help-plz/431218/6</link>
        <pubDate>Mon, 30 Jan 2012 18:10:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-431218-6</guid>
        <source url="https://forum.moparisthebest.com/t/cache-error-help-plz/431218.rss">Cache error help plz</source>
      </item>
      <item>
        <title>Cache error help plz</title>
        <dc:creator><![CDATA[@Wolfeee Wolfeee]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wolfeee">@Wolfeee</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="2" data-topic="431218">
<div class="title">
<div class="quote-controls"></div>
 t4:</div>
<blockquote>
<p>You were unable to download the file.</p>
</blockquote>
</aside>
<p>it does it after it finishes downloading though? like ill go to my c drive and ill see ScapeLikeABawsv1cache and when i click it all this is inside it<br>
<div class="lightbox-wrapper"><a class="lightbox" href="http://i755.photobucket.com/albums/xx195/Mw2hacker/Capture2.png" title="Capture2.png" rel="nofollow noopener"><img src="http://i755.photobucket.com/albums/xx195/Mw2hacker/Capture2.png" alt width="690" height="479"><div class="meta">
<svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use xlink:href="#far-image"></use></svg><span class="filename">Capture2.png</span><span class="informations">869×604</span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use xlink:href="#discourse-expand"></use></svg>
</div></a></div><br>
i see the zip file but it didnt get extracted?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cache-error-help-plz/431218/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cache-error-help-plz/431218/5</link>
        <pubDate>Mon, 30 Jan 2012 18:09:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-431218-5</guid>
        <source url="https://forum.moparisthebest.com/t/cache-error-help-plz/431218.rss">Cache error help plz</source>
      </item>
      <item>
        <title>Cache error help plz</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <p>[quote=“bibbobbib, post:3, topic:431218”]go into the c ddrive find the cache and open it.<br>
you should see .dat files and folders caled sprites, raw ect.<br>
if you dont then you have zipped the cache wrong[/quote]<br>
your reply makes me want to cry.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cache-error-help-plz/431218/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cache-error-help-plz/431218/4</link>
        <pubDate>Mon, 30 Jan 2012 18:06:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-431218-4</guid>
        <source url="https://forum.moparisthebest.com/t/cache-error-help-plz/431218.rss">Cache error help plz</source>
      </item>
      <item>
        <title>Cache error help plz</title>
        <dc:creator><![CDATA[@bibbobbib bibbobbib]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bibbobbib">@bibbobbib</a> wrote:</p>
          <blockquote>
              <p>go into the c ddrive find the cache and open it.<br>
you should see .dat files and folders caled sprites, raw ect.<br>
if you dont then you have zipped the cache wrong</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cache-error-help-plz/431218/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cache-error-help-plz/431218/3</link>
        <pubDate>Mon, 30 Jan 2012 18:04:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-431218-3</guid>
        <source url="https://forum.moparisthebest.com/t/cache-error-help-plz/431218.rss">Cache error help plz</source>
      </item>
      <item>
        <title>Cache error help plz</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <p>You were unable to download the file.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cache-error-help-plz/431218/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cache-error-help-plz/431218/2</link>
        <pubDate>Mon, 30 Jan 2012 18:01:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-431218-2</guid>
        <source url="https://forum.moparisthebest.com/t/cache-error-help-plz/431218.rss">Cache error help plz</source>
      </item>
      <item>
        <title>Cache error help plz</title>
        <dc:creator><![CDATA[@Wolfeee Wolfeee]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wolfeee">@Wolfeee</a> wrote:</p>
          <blockquote>
              <p>plz help im using InsidiaX cache and when i put everything in dropbox for it too auto download once its done downloading on the client a error comes up<br>
<img src="http://i755.photobucket.com/albums/xx195/Mw2hacker/Capture-3.png" alt width="677" height="342"><br>
<img src="http://i755.photobucket.com/albums/xx195/Mw2hacker/Capture1.png" alt width="677" height="342"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cache-error-help-plz/431218/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cache-error-help-plz/431218/1</link>
        <pubDate>Mon, 30 Jan 2012 17:58:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-431218-1</guid>
        <source url="https://forum.moparisthebest.com/t/cache-error-help-plz/431218.rss">Cache error help plz</source>
      </item>
  </channel>
</rss>
