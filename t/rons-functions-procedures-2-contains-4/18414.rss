<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Ron&#39;s Functions &amp; Procedures #2 - Contains 4</title>
    <link>https://forum.moparisthebest.com/t/rons-functions-procedures-2-contains-4/18414</link>
    <description>[anchor=top][center][size=15pt][b]Ron&#39;s Functions &amp; Procedures #2[/b][/size][/center]

All functions and procedures on this page.

[ul][*] [iurl=#replaceall]ReplaceAll();[/iurl] - Replaces all occurrences of something.
[*] [iurl=#trim2]Trim2();[/iurl] - Unlike the Trim() function, Trim2 trims out ALL the whitespaces.
[*] [iurl=#pos2]Pos2();[/iurl] - This will tell you if every word/character you specified in the array is in the string. 
[*] [iurl=#only]Only();[/iurl] - Checks a string if it only has something. Only has numbers, only has letters, or something like that.[/ul]


[anchor=replaceall][/anchor]
[b]Function:[/b] ReplaceAll();
[b]Syntax:[/b] ReplaceAll(TheString, Replacee, Replacer : String) : String;
[b]What it does:[/b] Replaces the Replacee with all the Replacers inside TheString.
[b]Note:[/b] This function requires the Replace() function before it.

Replace() function code only: 
[code]
// The ReplaceAll() function will replace all strings with another string.
// Made by Ron. :)
Function ReplaceAll(TheString, Replacee, Replacer : String) : String;
Begin
  While (Not(Pos(Replacee, TheString) = 0)) do
  Begin
    TheString := Replace(TheString, Replacee, Chr(13));
  End;
  While (Not(Pos(Chr(13), TheString) = 0)) do
  Begin
    TheString := Replace(TheString, Chr(13), Replacer);
  End;
  Result := TheString;
End;
[/code]

Test the ReplaceAll() function by using this program.
[code]
Program TestReplaceAll;

Var
  a : String;

// The Replace() function will replace a string with another string.
// Made by Ron. :)
Function Replace(TheString, Replacee, Replacer : String) : String;
Var
  a : LongInt;
Begin
  a := Pos(Replacee, TheString);
  If(a = 0)Then
  Begin
    // Do nothing...
  End Else
  Begin
    Delete(TheString, a, Length(Replacee));
    Insert(Replacer, TheString, a);
    Result := TheString;
  End;
End;

// The ReplaceAll() function will replace all strings with another string.
// Made by Ron. :)
Function ReplaceAll(TheString, Replacee, Replacer : String) : String;
Begin
  While (Not(Pos(Replacee, TheString) = 0)) do
  Begin
    TheString := Replace(TheString, Replacee, Chr(13));
  End;
  While (Not(Pos(Chr(13), TheString) = 0)) do
  Begin
    TheString := Replace(TheString, Chr(13), Replacer);
  End;
  Result := TheString;
End;

Begin
  ClearDebug;
  a := ReplaceAll(&#39;abcdefghijklmnopqrstuvwxyz&#39;, &#39;a&#39;, &#39;aaaaa&#39;);
  a := ReplaceAll(a, &#39;b&#39;, &#39;bbbbb&#39;);
  WriteLn(a);
End.
[/code]

[right][iurl=#top]Back to Top?[/iurl][/right]
[hr]
[anchor=trim2][/anchor]
[b]Function:[/b] Trim2();
[b]Syntax:[/b] Trim2(Text : String) : String;
[b]What it does:[/b] Trims out all the whitespaces in a string. 
[b]Note:[/b] This function requires the Replace() and ReplaceAll function before it.

Trim2() function code only: 
[code]
// Trims out all the whitespaces.
// Made by Ron :)
Function Trim2(Text : String) : String;
Begin
  Result := ReplaceAll(Text, &#39; &#39;, &#39;&#39;);
End;
[/code]

Test the Trim2() function by using this program.
[code]
Program TestTrim2Function;

Const
  Text = &#39; o m g - c h e c k - o u t - t h i s - s e x y - f u n c t i o n ! &#39;;

// The Replace() function will replace a string with another string.
// Made by Ron. :)
Function Replace(TheString, Replacee, Replacer : String) : String;
Var
  a : LongInt;
Begin
  a := Pos(Replacee, TheString);
  If(a = 0)Then
  Begin
    // Do nothing...
  End Else
  Begin
    Delete(TheString, a, Length(Replacee));
    Insert(Replacer, TheString, a);
    Result := TheString;
  End;
End;

// The ReplaceAll() function will replace all strings with another string.
// Made by Ron. :)
Function ReplaceAll(TheString, Replacee, Replacer : String) : String;
Begin
  While (Not(Pos(Replacee, TheString) = 0)) do
  Begin
    TheString := Replace(TheString, Replacee, Chr(13));
  End;
  While (Not(Pos(Chr(13), TheString) = 0)) do
  Begin
    TheString := Replace(TheString, Chr(13), Replacer);
  End;
  Result := TheString;
End;

// Trims out all the whitespaces.
// Made by Ron :)
Function Trim2(Text : String) : String;
Begin
  Result := ReplaceAll(Text, &#39; &#39;, &#39;&#39;);
End;

Begin
  WriteLn(Trim2(Text));
End.
[/code]

[right][iurl=#top]Back to Top?[/iurl][/right]
[hr]
[anchor=pos2][/anchor]
[b]Function:[/b] Pos2();
[b]Syntax:[/b] Pos2(TheString : String; CheckFor : Array of String) : Boolean;
[b]What it does:[/b] Returns true if every character/phrase specified in the array is in the string. False if it&#39;s not.

Pos2() function code only: 
[code]
// Check if the position of every character in an array is not 0.
// Returns true if every character is in the string. False if it&#39;s not.
// Made by Ron :)
Function Pos2(TheString : String; CheckFor : Array of String) : Boolean;
Var
  n : Integer;
Begin
  For n := 0 to GetArrayLength(CheckFor)-1 do
  Begin
    if(Not(Pos(CheckFor[n], TheString) = 0))Then
    Begin
      Result := True;
    End Else
    Begin
      Result := False;
      Break;
    End;
  End;
End;
[/code]

Test the Pos2() function by using this program.
[code]
Program TestPos2Function;

Var
  MyArray : Array of String;

// Check if the position of every character in an array is not 0.
// Returns true if every character is in the string. False if it&#39;s not.
// Made by Ron :)
Function Pos2(TheString : String; CheckFor : Array of String) : Boolean;
Var
  n : Integer;
Begin
  For n := 0 to GetArrayLength(CheckFor)-1 do
  Begin
    if(Not(Pos(CheckFor[n], TheString) = 0))Then
    Begin
      Result := True;
    End Else
    Begin
      Result := False;
      Break;
    End;
  End;
End;

Begin
  ClearDebug;
  If(Pos2(&#39;omg i killed a bat&#39;, [&#39;bat&#39;, &#39;kill&#39;]))Then
  Begin
    WriteLn(&#39;true&#39;);
  End Else
  Begin
    WriteLn(&#39;false&#39;);
  End;
  MyArray := [&#39;abcd&#39;, &#39;efgh&#39;, &#39;mnop&#39;];
  If(Pos2(&#39;abcdefghijklmnopqrstuvwxyz&#39;, MyArray))Then
  Begin
    WriteLn(&#39;true&#39;);
  End Else
  Begin
    WriteLn(&#39;false&#39;);
  End;
End.
[/code]

[right][iurl=#top]Back to Top?[/iurl][/right]
[hr]
[anchor=only][/anchor]
[b]Function:[/b] Only();
[b]Syntax:[/b] Only(TheString : String; OnlyWhat : String) : Boolean;
[b]What it does:[/b] Checks a string to see if it only has a specified range of characters.
[b]Note:[/b] You need to enter a string for TheString and for the OnlyWhat part is a little tricky. The OnlyWhat is the range of characters you want to check for. It can be something like... &#39;a-z&#39; or &#39;a-c&#39; or &#39;0-9&#39; or &#39;!-/&#39; or even &#39;a-z0-9&#39;. Look at this [url=http://www.asciitable.com/]ascii table[/url] for more help.

Only() function code only: 
[code]
// The Only() function will check a string to see if it only has something.
// Made by Ron. :)
Function Only(TheString : String; OnlyWhat : String) : Boolean;
Var
  a : Integer;
  Temp, Temp2, Temp3, Temp4, Temp5 : Integer;
Begin
  Result := False;
  If(Length(OnlyWhat) = 3)or(Length(OnlyWhat) = 6)Then
  Begin
    Temp2 := Min(GetKeyCode(OnlyWhat[1]), GetKeyCode(OnlyWhat[3]));
    Temp3 := Max(GetKeyCode(OnlyWhat[1]), GetKeyCode(OnlyWhat[3]));
    For a := 1 to Length(TheString) do
    Begin
      Temp := GetKeyCode(TheString[a]);
      If(Length(OnlyWhat) = 3)Then
      Begin
        If(Temp &gt;= Temp2)and(Temp &lt;= Temp3)Then
        Begin
          Result := True;
        End Else
        Begin
          Result := False;
          Break;
        End;
      End Else If(Length(OnlyWhat) = 6)Then
      Begin
        Temp4 := Min(GetKeyCode(OnlyWhat[4]), GetKeyCode(OnlyWhat[6]));
        Temp5 := Max(GetKeyCode(OnlyWhat[4]), GetKeyCode(OnlyWhat[6]));
        If((Temp &gt;= Temp2)and(Temp &lt;= Temp3))or(Temp &gt;= Temp4)and(Temp &lt;= Temp5)Then
        Begin
          Result := True;
        End Else
        Begin
          Result := False;
          Break;
        End;
      End;
    End;
  End Else
  Begin
    WriteLn(&#39;OnlyWhat has to have a length of 3 or 6.&#39;);
  End;
End;
[/code]

Test the Only() function by using this program.
[code]
Program TestOnlyFunction;

Const
  // Try putting in a number in LetterString and see if it returns false.
  LetterString = &#39;abcdefghijklmnop&#39;;
  // Try putting in a letter in NumberString and see if it returns false.
  NumberString = &#39;1234&#39;;

// The Only() function will check a string to see if it only has something.
// Made by Ron. :)
Function Only(TheString : String; OnlyWhat : String) : Boolean;
Var
  a : Integer;
  Temp, Temp2, Temp3, Temp4, Temp5 : Integer;
Begin
  Result := False;
  If(Length(OnlyWhat) = 3)or(Length(OnlyWhat) = 6)Then
  Begin
    Temp2 := Min(GetKeyCode(OnlyWhat[1]), GetKeyCode(OnlyWhat[3]));
    Temp3 := Max(GetKeyCode(OnlyWhat[1]), GetKeyCode(OnlyWhat[3]));
    For a := 1 to Length(TheString) do
    Begin
      Temp := GetKeyCode(TheString[a]);
      If(Length(OnlyWhat) = 3)Then
      Begin
        If(Temp &gt;= Temp2)and(Temp &lt;= Temp3)Then
        Begin
          Result := True;
        End Else
        Begin
          Result := False;
          Break;
        End;
      End Else If(Length(OnlyWhat) = 6)Then
      Begin
        Temp4 := Min(GetKeyCode(OnlyWhat[4]), GetKeyCode(OnlyWhat[6]));
        Temp5 := Max(GetKeyCode(OnlyWhat[4]), GetKeyCode(OnlyWhat[6]));
        If((Temp &gt;= Temp2)and(Temp &lt;= Temp3))or(Temp &gt;= Temp4)and(Temp &lt;= Temp5)Then
        Begin
          Result := True;
        End Else
        Begin
          Result := False;
          Break;
        End;
      End;
    End;
  End Else
  Begin
    WriteLn(&#39;OnlyWhat has to have a length of 3 or 6.&#39;);
  End;
End;

Begin
  ClearDebug;
  If(Only(LetterString, &#39;a-z&#39;))then
  Begin
    WriteLn(&#39;only letters - true&#39;);
  End Else
  Begin
    WriteLn(&#39;false&#39;);
  End;
  If(Only(NumberString, &#39;0-9&#39;))then
  Begin
    WriteLn(&#39;only numbers - true&#39;);
  End Else
  Begin
    WriteLn(&#39;false&#39;);
  End;
  If(Only(NumberString+LetterString, &#39;a-z0-9&#39;))Then
  Begin
    WriteLn(&#39;only numbers and letters - true&#39;);
  End Else
  Begin
    WriteLn(&#39;false&#39;);
  End;
End.
[/code]

[right][iurl=#top]Back to Top?[/iurl][/right]
[hr]

[url=http://www.moparisthebest.org/smf/index.php/topic,21443.0.html]Ron&#39;s Functions &amp; Procedures #1[/url]

~Ron :)</description>
    
    <lastBuildDate>Mon, 16 Oct 2006 07:40:55 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/rons-functions-procedures-2-contains-4/18414.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Ron&#39;s Functions &amp; Procedures #2 - Contains 4</title>
        <dc:creator><![CDATA[@Ron Ron]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ron">@Ron</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="2" data-topic="18414">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/weibs/40/367_2.png" class="avatar"> Weibs:</div>
<blockquote>
<p>That only function is insane. Very creative, I like it :D. Nice work.</p>
</blockquote>
</aside>
<p>Thanks a lot Weibs. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"> I updated the Only function a little bit, but there is one more improvement I want to add 1 thing to it.</p>
<p>I added a Trim2(); and Pos2(); function.</p>
<p>~Ron</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/rons-functions-procedures-2-contains-4/18414/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/rons-functions-procedures-2-contains-4/18414/3</link>
        <pubDate>Mon, 16 Oct 2006 07:40:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-18414-3</guid>
        <source url="https://forum.moparisthebest.com/t/rons-functions-procedures-2-contains-4/18414.rss">Ron&#39;s Functions &amp; Procedures #2 - Contains 4</source>
      </item>
      <item>
        <title>Ron&#39;s Functions &amp; Procedures #2 - Contains 4</title>
        <dc:creator><![CDATA[@Weibs Weibs]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/weibs">@Weibs</a> wrote:</p>
          <blockquote>
              <p>That only function is insane. Very creative, I like it :D. Nice work.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/rons-functions-procedures-2-contains-4/18414/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/rons-functions-procedures-2-contains-4/18414/2</link>
        <pubDate>Sun, 15 Oct 2006 09:30:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-18414-2</guid>
        <source url="https://forum.moparisthebest.com/t/rons-functions-procedures-2-contains-4/18414.rss">Ron&#39;s Functions &amp; Procedures #2 - Contains 4</source>
      </item>
      <item>
        <title>Ron&#39;s Functions &amp; Procedures #2 - Contains 4</title>
        <dc:creator><![CDATA[@Ron Ron]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ron">@Ron</a> wrote:</p>
          <blockquote>
              <p>[anchor=top][center][size=15pt]<span class="bbcode-b">Ron’s Functions &amp; Procedures <span class="hashtag">#2</span></span>[/size][/center]</p>
<p>All functions and procedures on this page.</p>
<p>[ul][<em>] [iurl=#replaceall]ReplaceAll();[/iurl] - Replaces all occurrences of something.<br>
[</em>] [iurl=#trim2]Trim2();[/iurl] - Unlike the Trim() function, Trim2 trims out ALL the whitespaces.<br>
[<em>] [iurl=#pos2]Pos2();[/iurl] - This will tell you if every word/character you specified in the array is in the string.<br>
[</em>] [iurl=#only]Only();[/iurl] - Checks a string if it only has something. Only has numbers, only has letters, or something like that.[/ul]</p>
<p>[anchor=replaceall][/anchor]<br>
<span class="bbcode-b">Function:</span> ReplaceAll();<br>
<span class="bbcode-b">Syntax:</span> ReplaceAll(TheString, Replacee, Replacer : String) : String;<br>
<span class="bbcode-b">What it does:</span> Replaces the Replacee with all the Replacers inside TheString.<br>
<span class="bbcode-b">Note:</span> This function requires the Replace() function before it.</p>
<p>Replace() function code only:</p>
<pre><code class="lang-auto">// The ReplaceAll() function will replace all strings with another string.
// Made by Ron. :)
Function ReplaceAll(TheString, Replacee, Replacer : String) : String;
Begin
  While (Not(Pos(Replacee, TheString) = 0)) do
  Begin
    TheString := Replace(TheString, Replacee, Chr(13));
  End;
  While (Not(Pos(Chr(13), TheString) = 0)) do
  Begin
    TheString := Replace(TheString, Chr(13), Replacer);
  End;
  Result := TheString;
End;</code></pre>
<p>Test the ReplaceAll() function by using this program.</p>
<pre><code class="lang-auto">Program TestReplaceAll;

Var
  a : String;

// The Replace() function will replace a string with another string.
// Made by Ron. :)
Function Replace(TheString, Replacee, Replacer : String) : String;
Var
  a : LongInt;
Begin
  a := Pos(Replacee, TheString);
  If(a = 0)Then
  Begin
    // Do nothing...
  End Else
  Begin
    Delete(TheString, a, Length(Replacee));
    Insert(Replacer, TheString, a);
    Result := TheString;
  End;
End;

// The ReplaceAll() function will replace all strings with another string.
// Made by Ron. :)
Function ReplaceAll(TheString, Replacee, Replacer : String) : String;
Begin
  While (Not(Pos(Replacee, TheString) = 0)) do
  Begin
    TheString := Replace(TheString, Replacee, Chr(13));
  End;
  While (Not(Pos(Chr(13), TheString) = 0)) do
  Begin
    TheString := Replace(TheString, Chr(13), Replacer);
  End;
  Result := TheString;
End;

Begin
  ClearDebug;
  a := ReplaceAll('abcdefghijklmnopqrstuvwxyz', 'a', 'aaaaa');
  a := ReplaceAll(a, 'b', 'bbbbb');
  WriteLn(a);
End.</code></pre>
<p>[right][iurl=#top]Back to Top?[/iurl][/right]<br>
[hr]<br>
[anchor=trim2][/anchor]<br>
<span class="bbcode-b">Function:</span> Trim2();<br>
<span class="bbcode-b">Syntax:</span> Trim2(Text : String) : String;<br>
<span class="bbcode-b">What it does:</span> Trims out all the whitespaces in a string.<br>
<span class="bbcode-b">Note:</span> This function requires the Replace() and ReplaceAll function before it.</p>
<p>Trim2() function code only:</p>
<pre><code class="lang-auto">// Trims out all the whitespaces.
// Made by Ron :)
Function Trim2(Text : String) : String;
Begin
  Result := ReplaceAll(Text, ' ', '');
End;</code></pre>
<p>Test the Trim2() function by using this program.</p>
<pre><code class="lang-auto">Program TestTrim2Function;

Const
  Text = ' o m g - c h e c k - o u t - t h i s - s e x y - f u n c t i o n ! ';

// The Replace() function will replace a string with another string.
// Made by Ron. :)
Function Replace(TheString, Replacee, Replacer : String) : String;
Var
  a : LongInt;
Begin
  a := Pos(Replacee, TheString);
  If(a = 0)Then
  Begin
    // Do nothing...
  End Else
  Begin
    Delete(TheString, a, Length(Replacee));
    Insert(Replacer, TheString, a);
    Result := TheString;
  End;
End;

// The ReplaceAll() function will replace all strings with another string.
// Made by Ron. :)
Function ReplaceAll(TheString, Replacee, Replacer : String) : String;
Begin
  While (Not(Pos(Replacee, TheString) = 0)) do
  Begin
    TheString := Replace(TheString, Replacee, Chr(13));
  End;
  While (Not(Pos(Chr(13), TheString) = 0)) do
  Begin
    TheString := Replace(TheString, Chr(13), Replacer);
  End;
  Result := TheString;
End;

// Trims out all the whitespaces.
// Made by Ron :)
Function Trim2(Text : String) : String;
Begin
  Result := ReplaceAll(Text, ' ', '');
End;

Begin
  WriteLn(Trim2(Text));
End.</code></pre>
<p>[right][iurl=#top]Back to Top?[/iurl][/right]<br>
[hr]<br>
[anchor=pos2][/anchor]<br>
<span class="bbcode-b">Function:</span> Pos2();<br>
<span class="bbcode-b">Syntax:</span> Pos2(TheString : String; CheckFor : Array of String) : Boolean;<br>
<span class="bbcode-b">What it does:</span> Returns true if every character/phrase specified in the array is in the string. False if it’s not.</p>
<p>Pos2() function code only:</p>
<pre><code class="lang-auto">// Check if the position of every character in an array is not 0.
// Returns true if every character is in the string. False if it's not.
// Made by Ron :)
Function Pos2(TheString : String; CheckFor : Array of String) : Boolean;
Var
  n : Integer;
Begin
  For n := 0 to GetArrayLength(CheckFor)-1 do
  Begin
    if(Not(Pos(CheckFor[n], TheString) = 0))Then
    Begin
      Result := True;
    End Else
    Begin
      Result := False;
      Break;
    End;
  End;
End;</code></pre>
<p>Test the Pos2() function by using this program.</p>
<pre><code class="lang-auto">Program TestPos2Function;

Var
  MyArray : Array of String;

// Check if the position of every character in an array is not 0.
// Returns true if every character is in the string. False if it's not.
// Made by Ron :)
Function Pos2(TheString : String; CheckFor : Array of String) : Boolean;
Var
  n : Integer;
Begin
  For n := 0 to GetArrayLength(CheckFor)-1 do
  Begin
    if(Not(Pos(CheckFor[n], TheString) = 0))Then
    Begin
      Result := True;
    End Else
    Begin
      Result := False;
      Break;
    End;
  End;
End;

Begin
  ClearDebug;
  If(Pos2('omg i killed a bat', ['bat', 'kill']))Then
  Begin
    WriteLn('true');
  End Else
  Begin
    WriteLn('false');
  End;
  MyArray := ['abcd', 'efgh', 'mnop'];
  If(Pos2('abcdefghijklmnopqrstuvwxyz', MyArray))Then
  Begin
    WriteLn('true');
  End Else
  Begin
    WriteLn('false');
  End;
End.</code></pre>
<p>[right][iurl=#top]Back to Top?[/iurl][/right]<br>
[hr]<br>
[anchor=only][/anchor]<br>
<span class="bbcode-b">Function:</span> Only();<br>
<span class="bbcode-b">Syntax:</span> Only(TheString : String; OnlyWhat : String) : Boolean;<br>
<span class="bbcode-b">What it does:</span> Checks a string to see if it only has a specified range of characters.<br>
<span class="bbcode-b">Note:</span> You need to enter a string for TheString and for the OnlyWhat part is a little tricky. The OnlyWhat is the range of characters you want to check for. It can be something like… ‘a-z’ or ‘a-c’ or ‘0-9’ or ‘!-/’ or even ‘a-z0-9’. Look at this <a href="http://www.asciitable.com/" data-bbcode="true" rel="nofollow noopener">ascii table</a> for more help.</p>
<p>Only() function code only:</p>
<pre><code class="lang-auto">// The Only() function will check a string to see if it only has something.
// Made by Ron. :)
Function Only(TheString : String; OnlyWhat : String) : Boolean;
Var
  a : Integer;
  Temp, Temp2, Temp3, Temp4, Temp5 : Integer;
Begin
  Result := False;
  If(Length(OnlyWhat) = 3)or(Length(OnlyWhat) = 6)Then
  Begin
    Temp2 := Min(GetKeyCode(OnlyWhat[1]), GetKeyCode(OnlyWhat[3]));
    Temp3 := Max(GetKeyCode(OnlyWhat[1]), GetKeyCode(OnlyWhat[3]));
    For a := 1 to Length(TheString) do
    Begin
      Temp := GetKeyCode(TheString[a]);
      If(Length(OnlyWhat) = 3)Then
      Begin
        If(Temp &gt;= Temp2)and(Temp &lt;= Temp3)Then
        Begin
          Result := True;
        End Else
        Begin
          Result := False;
          Break;
        End;
      End Else If(Length(OnlyWhat) = 6)Then
      Begin
        Temp4 := Min(GetKeyCode(OnlyWhat[4]), GetKeyCode(OnlyWhat[6]));
        Temp5 := Max(GetKeyCode(OnlyWhat[4]), GetKeyCode(OnlyWhat[6]));
        If((Temp &gt;= Temp2)and(Temp &lt;= Temp3))or(Temp &gt;= Temp4)and(Temp &lt;= Temp5)Then
        Begin
          Result := True;
        End Else
        Begin
          Result := False;
          Break;
        End;
      End;
    End;
  End Else
  Begin
    WriteLn('OnlyWhat has to have a length of 3 or 6.');
  End;
End;</code></pre>
<p>Test the Only() function by using this program.</p>
<pre><code class="lang-auto">Program TestOnlyFunction;

Const
  // Try putting in a number in LetterString and see if it returns false.
  LetterString = 'abcdefghijklmnop';
  // Try putting in a letter in NumberString and see if it returns false.
  NumberString = '1234';

// The Only() function will check a string to see if it only has something.
// Made by Ron. :)
Function Only(TheString : String; OnlyWhat : String) : Boolean;
Var
  a : Integer;
  Temp, Temp2, Temp3, Temp4, Temp5 : Integer;
Begin
  Result := False;
  If(Length(OnlyWhat) = 3)or(Length(OnlyWhat) = 6)Then
  Begin
    Temp2 := Min(GetKeyCode(OnlyWhat[1]), GetKeyCode(OnlyWhat[3]));
    Temp3 := Max(GetKeyCode(OnlyWhat[1]), GetKeyCode(OnlyWhat[3]));
    For a := 1 to Length(TheString) do
    Begin
      Temp := GetKeyCode(TheString[a]);
      If(Length(OnlyWhat) = 3)Then
      Begin
        If(Temp &gt;= Temp2)and(Temp &lt;= Temp3)Then
        Begin
          Result := True;
        End Else
        Begin
          Result := False;
          Break;
        End;
      End Else If(Length(OnlyWhat) = 6)Then
      Begin
        Temp4 := Min(GetKeyCode(OnlyWhat[4]), GetKeyCode(OnlyWhat[6]));
        Temp5 := Max(GetKeyCode(OnlyWhat[4]), GetKeyCode(OnlyWhat[6]));
        If((Temp &gt;= Temp2)and(Temp &lt;= Temp3))or(Temp &gt;= Temp4)and(Temp &lt;= Temp5)Then
        Begin
          Result := True;
        End Else
        Begin
          Result := False;
          Break;
        End;
      End;
    End;
  End Else
  Begin
    WriteLn('OnlyWhat has to have a length of 3 or 6.');
  End;
End;

Begin
  ClearDebug;
  If(Only(LetterString, 'a-z'))then
  Begin
    WriteLn('only letters - true');
  End Else
  Begin
    WriteLn('false');
  End;
  If(Only(NumberString, '0-9'))then
  Begin
    WriteLn('only numbers - true');
  End Else
  Begin
    WriteLn('false');
  End;
  If(Only(NumberString+LetterString, 'a-z0-9'))Then
  Begin
    WriteLn('only numbers and letters - true');
  End Else
  Begin
    WriteLn('false');
  End;
End.</code></pre>
<p>[right][iurl=#top]Back to Top?[/iurl][/right]<br>
[hr]</p>
<p><a href="http://www.moparisthebest.org/smf/index.php/topic,21443.0.html" data-bbcode="true" rel="nofollow noopener">Ron’s Functions &amp; Procedures #1</a></p>
<p>~Ron <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/rons-functions-procedures-2-contains-4/18414/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/rons-functions-procedures-2-contains-4/18414/1</link>
        <pubDate>Sun, 15 Oct 2006 08:57:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-18414-1</guid>
        <source url="https://forum.moparisthebest.com/t/rons-functions-procedures-2-contains-4/18414.rss">Ron&#39;s Functions &amp; Procedures #2 - Contains 4</source>
      </item>
  </channel>
</rss>
