<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Brief (atleast for now) ASM Tutorial</title>
    <link>https://forum.moparisthebest.com/t/brief-atleast-for-now-asm-tutorial/296944</link>
    <description>I will be using the latest [URL=http://asm.ow2.org/]ASM[/URL] version, ASM 3.2.

What is ASM? ASM is a bytecode manipulation library that, in simple terms, lets you manipulate bytecode! It&#39;s fast, maintained, well-structured, and fully documented.

ASM is broken down into two main APIs. The [URL=http://asm.ow2.org/asm32/javadoc/user/org/objectweb/asm/package-summary.html]Core API[/URL] and Tree API.

The Core API is faster and runs on events. This tutorial, for now, will be teaching about the Core API.

The first two classes you should now about are the [URL=http://asm.ow2.org/asm32/javadoc/user/index.html]ClassReader[/URL] class and [URL=http://asm.ow2.org/asm32/javadoc/user/index.html]ClassVisitor[/URL] interface.

The ClassReader [B]produces[/B] events. You first have to instantiate it with a something that leads to or represents a class. This can be done with either an array of bytes containing bytecode, an InputStream that leads to a class file, or the class&#39;s name. I will be using an InputStream.

So, our first step is to instantiate a ClassReader:
[CODE]
File classFile = new File(&quot;...&quot;);
InputStream in = new FileInputStream(classFile);
ClassReader cr = new ClassReader(in);
[/CODE]
Replace the &quot;...&quot; with the location of any class file. I recommend making a simple HelloWorld class.

Leave this code for now.

ClassVisitor implementations [B]consume[/B] events. Make a class and make it implement ClassVisitor.
[CODE]
public class MyClassVisitor implements ClassVisitor {

	@Override
	public void visit(int access, int version, String name, String signature,
			String superName, String[] interfaces) {
		
	}

	@Override
	public AnnotationVisitor visitAnnotation(String desc, boolean visible) {
		return null;
	}

	@Override
	public void visitAttribute(Attribute attr) {

	}

	@Override
	public void visitEnd() {

	}

	@Override
	public FieldVisitor visitField(int access, String name, String desc,
			String signature, Object value) {
		return null;
	}

	@Override
	public void visitInnerClass(String name, String outerName, String innerName,
			int access) {
		
	}

	@Override
	public MethodVisitor vistMethod(int access, String name, String desc, 
			String signature, String[] exceptions) {
		return null;
	}

	@Override
	public void visitOuterClass(String owner, String name, String desc) {
		
	}

	@Override
	public void visitSource(String source, String debug) {
		
	}

}
[/CODE]

Now, what the heck was all the junk in our ClassVisitor implementation? Well, the ClassReader method has a method called [I]accept[/I] and it takes a ClassVisitor as an argument (so we can specify our implementation). What does this method do? It calls each method in the given ClassVisitor (our ClassVisitor implementation) with arguments that are determined by the class. So it would call the [I]visit[/I] method with
[CODE]
visit(Opcodes.ACC_PUBLIC, Opcodes.V1_6, &quot;HelloWorld&quot;, null, &quot;java/lang/Object&quot;,
	new String[] { });
[/CODE]
If the class was a simple HelloWorld class that they teach in tutorials.

So, let&#39;s do some magic.
[CODE]
cr.accept(new MyClassVisitor(), 0);
[/CODE]

This will, however, do nothing. Because, we haven&#39;t put any code in our methods in our ClassVisitor. But, we can. Change the [I]visitMethod[/I] in our ClassVisitor to this:
[CODE]
	@Override
	public MethodVisitor vistMethod(int access, String name, String desc, 
			String signature, String[] exceptions) {
		System.out.println(name);
		return null;
	}
[/CODE]

Compile and run. You should have gotten a printout of all the method names in the class you specified. Modifying the various visit methods will result in different results. For example, adding
[CODE]
System.out.println(name);
[/CODE]
to the visitField method will print all the fields names.

That&#39;s the end of this tutorial (for now). I will post more on the ClassWriter and ClassAdapter (the classes used to generate and/or transform class files) tomorrow or after-tomorrow.</description>
    
    <lastBuildDate>Sun, 23 Aug 2009 17:13:34 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/brief-atleast-for-now-asm-tutorial/296944.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Brief (atleast for now) ASM Tutorial</title>
        <dc:creator><![CDATA[@system system]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/system">@system</a> wrote:</p>
          <blockquote>
              <p>[quote=“frank_, post:8, topic:296944”]ASM API “flaws”?[/quote]lololol, when’d you get so frawesome?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/brief-atleast-for-now-asm-tutorial/296944/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/brief-atleast-for-now-asm-tutorial/296944/9</link>
        <pubDate>Sun, 23 Aug 2009 17:13:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-296944-9</guid>
        <source url="https://forum.moparisthebest.com/t/brief-atleast-for-now-asm-tutorial/296944.rss">Brief (atleast for now) ASM Tutorial</source>
      </item>
      <item>
        <title>Brief (atleast for now) ASM Tutorial</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>ASM API “flaws”?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/brief-atleast-for-now-asm-tutorial/296944/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/brief-atleast-for-now-asm-tutorial/296944/8</link>
        <pubDate>Sun, 23 Aug 2009 04:28:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-296944-8</guid>
        <source url="https://forum.moparisthebest.com/t/brief-atleast-for-now-asm-tutorial/296944.rss">Brief (atleast for now) ASM Tutorial</source>
      </item>
      <item>
        <title>Brief (atleast for now) ASM Tutorial</title>
        <dc:creator><![CDATA[@Zero_Freeze ZeroFreeze]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zero_freeze">@Zero_Freeze</a> wrote:</p>
          <blockquote>
              <p>[quote=“xeez`, post:6, topic:296944”][quote author=ZeroFreeze link=topic=392954.msg2925928#msg2925928 date=1251000074]</p>
<aside class="quote no-group">
<blockquote>
<p>Ehh, is there even a need to post a tutorial on how to use an external API?</p>
</blockquote>
</aside>
<p>…<br>
what are you trying to say?<br>
[/quote]That there is no need to…[/quote]</p>
<p>Then you’re wrong. If the “external API” as you named it has mediocre or lacking documentation then it would be useful to have a tutorial for it here. Though that’s not the case with ASM.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/brief-atleast-for-now-asm-tutorial/296944/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/brief-atleast-for-now-asm-tutorial/296944/7</link>
        <pubDate>Sun, 23 Aug 2009 04:11:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-296944-7</guid>
        <source url="https://forum.moparisthebest.com/t/brief-atleast-for-now-asm-tutorial/296944.rss">Brief (atleast for now) ASM Tutorial</source>
      </item>
      <item>
        <title>Brief (atleast for now) ASM Tutorial</title>
        <dc:creator><![CDATA[@xeez xeez`]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xeez">@xeez</a> wrote:</p>
          <blockquote>
              <p>[quote=“ZeroFreeze, post:5, topic:296944”][quote author=xeez` link=topic=392954.msg2925868#msg2925868 date=1250997576]<br>
Ehh, is there even a need to post a tutorial on how to use an external API?<br>
[/quote]<br>
…<br>
what are you trying to say?[/quote]That there is no need to…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/brief-atleast-for-now-asm-tutorial/296944/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/brief-atleast-for-now-asm-tutorial/296944/6</link>
        <pubDate>Sun, 23 Aug 2009 04:09:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-296944-6</guid>
        <source url="https://forum.moparisthebest.com/t/brief-atleast-for-now-asm-tutorial/296944.rss">Brief (atleast for now) ASM Tutorial</source>
      </item>
      <item>
        <title>Brief (atleast for now) ASM Tutorial</title>
        <dc:creator><![CDATA[@Zero_Freeze ZeroFreeze]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zero_freeze">@Zero_Freeze</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="4" data-topic="296944">
<div class="title">
<div class="quote-controls"></div>
 xeez`:</div>
<blockquote>
<p>Ehh, is there even a need to post a tutorial on how to use an external API?</p>
</blockquote>
</aside>
<p>…<br>
what are you trying to say?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/brief-atleast-for-now-asm-tutorial/296944/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/brief-atleast-for-now-asm-tutorial/296944/5</link>
        <pubDate>Sun, 23 Aug 2009 04:01:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-296944-5</guid>
        <source url="https://forum.moparisthebest.com/t/brief-atleast-for-now-asm-tutorial/296944.rss">Brief (atleast for now) ASM Tutorial</source>
      </item>
      <item>
        <title>Brief (atleast for now) ASM Tutorial</title>
        <dc:creator><![CDATA[@xeez xeez`]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xeez">@xeez</a> wrote:</p>
          <blockquote>
              <p>Ehh, is there even a need to post a tutorial on how to use an external API?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/brief-atleast-for-now-asm-tutorial/296944/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/brief-atleast-for-now-asm-tutorial/296944/4</link>
        <pubDate>Sun, 23 Aug 2009 03:19:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-296944-4</guid>
        <source url="https://forum.moparisthebest.com/t/brief-atleast-for-now-asm-tutorial/296944.rss">Brief (atleast for now) ASM Tutorial</source>
      </item>
      <item>
        <title>Brief (atleast for now) ASM Tutorial</title>
        <dc:creator><![CDATA[@system system]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/system">@system</a> wrote:</p>
          <blockquote>
              <p>Yeah, I was bored. Someone <span class="bbcode-s">can go ahead and delete this if they like</span> delete.</p>
<p>edit: I don’t even feel like updating this anymore. Do delete. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/brief-atleast-for-now-asm-tutorial/296944/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/brief-atleast-for-now-asm-tutorial/296944/3</link>
        <pubDate>Sun, 23 Aug 2009 01:09:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-296944-3</guid>
        <source url="https://forum.moparisthebest.com/t/brief-atleast-for-now-asm-tutorial/296944.rss">Brief (atleast for now) ASM Tutorial</source>
      </item>
      <item>
        <title>Brief (atleast for now) ASM Tutorial</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>The ASM guide is much better, no point for this thread.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/brief-atleast-for-now-asm-tutorial/296944/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/brief-atleast-for-now-asm-tutorial/296944/2</link>
        <pubDate>Sat, 22 Aug 2009 19:57:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-296944-2</guid>
        <source url="https://forum.moparisthebest.com/t/brief-atleast-for-now-asm-tutorial/296944.rss">Brief (atleast for now) ASM Tutorial</source>
      </item>
      <item>
        <title>Brief (atleast for now) ASM Tutorial</title>
        <dc:creator><![CDATA[@system system]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/system">@system</a> wrote:</p>
          <blockquote>
              <p>I will be using the latest <a href="http://asm.ow2.org/" data-bbcode="true">ASM</a> version, ASM 3.2.</p>
<p>What is ASM? ASM is a bytecode manipulation library that, in simple terms, lets you manipulate bytecode! It’s fast, maintained, well-structured, and fully documented.</p>
<p>ASM is broken down into two main APIs. The <a href="http://asm.ow2.org/asm32/javadoc/user/org/objectweb/asm/package-summary.html" data-bbcode="true">Core API</a> and Tree API.</p>
<p>The Core API is faster and runs on events. This tutorial, for now, will be teaching about the Core API.</p>
<p>The first two classes you should now about are the <a href="http://asm.ow2.org/asm32/javadoc/user/index.html" data-bbcode="true">ClassReader</a> class and <a href="http://asm.ow2.org/asm32/javadoc/user/index.html" data-bbcode="true">ClassVisitor</a> interface.</p>
<p>The ClassReader <span class="bbcode-b">produces</span> events. You first have to instantiate it with a something that leads to or represents a class. This can be done with either an array of bytes containing bytecode, an InputStream that leads to a class file, or the class’s name. I will be using an InputStream.</p>
<p>So, our first step is to instantiate a ClassReader:</p>
<pre><code class="lang-auto">File classFile = new File("...");
InputStream in = new FileInputStream(classFile);
ClassReader cr = new ClassReader(in);</code></pre>
<p>Replace the “…” with the location of any class file. I recommend making a simple HelloWorld class.</p>
<p>Leave this code for now.</p>
<p>ClassVisitor implementations <span class="bbcode-b">consume</span> events. Make a class and make it implement ClassVisitor.</p>
<pre><code class="lang-auto">public class MyClassVisitor implements ClassVisitor {

	@Override
	public void visit(int access, int version, String name, String signature,
			String superName, String[] interfaces) {
		
	}

	@Override
	public AnnotationVisitor visitAnnotation(String desc, boolean visible) {
		return null;
	}

	@Override
	public void visitAttribute(Attribute attr) {

	}

	@Override
	public void visitEnd() {

	}

	@Override
	public FieldVisitor visitField(int access, String name, String desc,
			String signature, Object value) {
		return null;
	}

	@Override
	public void visitInnerClass(String name, String outerName, String innerName,
			int access) {
		
	}

	@Override
	public MethodVisitor vistMethod(int access, String name, String desc, 
			String signature, String[] exceptions) {
		return null;
	}

	@Override
	public void visitOuterClass(String owner, String name, String desc) {
		
	}

	@Override
	public void visitSource(String source, String debug) {
		
	}

}</code></pre>
<p>Now, what the heck was all the junk in our ClassVisitor implementation? Well, the ClassReader method has a method called <span class="bbcode-i">accept</span> and it takes a ClassVisitor as an argument (so we can specify our implementation). What does this method do? It calls each method in the given ClassVisitor (our ClassVisitor implementation) with arguments that are determined by the class. So it would call the <span class="bbcode-i">visit</span> method with</p>
<pre><code class="lang-auto">visit(Opcodes.ACC_PUBLIC, Opcodes.V1_6, "HelloWorld", null, "java/lang/Object",
	new String[] { });</code></pre>
<p>If the class was a simple HelloWorld class that they teach in tutorials.</p>
<p>So, let’s do some magic.</p>
<pre><code class="lang-auto">cr.accept(new MyClassVisitor(), 0);</code></pre>
<p>This will, however, do nothing. Because, we haven’t put any code in our methods in our ClassVisitor. But, we can. Change the <span class="bbcode-i">visitMethod</span> in our ClassVisitor to this:</p>
<pre><code class="lang-auto">	@Override
	public MethodVisitor vistMethod(int access, String name, String desc, 
			String signature, String[] exceptions) {
		System.out.println(name);
		return null;
	}</code></pre>
<p>Compile and run. You should have gotten a printout of all the method names in the class you specified. Modifying the various visit methods will result in different results. For example, adding</p>
<pre><code class="lang-auto">System.out.println(name);</code></pre>
<p>to the visitField method will print all the fields names.</p>
<p>That’s the end of this tutorial (for now). I will post more on the ClassWriter and ClassAdapter (the classes used to generate and/or transform class files) tomorrow or after-tomorrow.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/brief-atleast-for-now-asm-tutorial/296944/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/brief-atleast-for-now-asm-tutorial/296944/1</link>
        <pubDate>Sat, 22 Aug 2009 18:52:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-296944-1</guid>
        <source url="https://forum.moparisthebest.com/t/brief-atleast-for-now-asm-tutorial/296944.rss">Brief (atleast for now) ASM Tutorial</source>
      </item>
  </channel>
</rss>
