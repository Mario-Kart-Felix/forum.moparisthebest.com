<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>317 item dump, and code :)</title>
    <link>https://forum.moparisthebest.com/t/317-item-dump-and-code/519623</link>
    <description>[b]Uses:[/b]
-Stores all the item data, in one simple place.
-Easy to read, if conventions are applied/kept
-does not allow unintentional setting of values, because they are private(use set... methods instead)


[b]datReader[/b]- reads the .dat file
[code]public class datReader {
	public static void main(String args[]) {
		ItemDef[] x = new ItemDef[8000];
		try {
		java.io.File file = new java.io.File(&quot;./data.dat&quot;);
		java.io.File file2 = new java.io.File(&quot;./dump.txt&quot;);
		if (!file2.exists())
		file2.createNewFile();
		java.io.FileInputStream fis = new java.io.FileInputStream(file);
		java.io.FileOutputStream fos = new java.io.FileOutputStream(file2,false);
		Stream s = new Stream(new byte[(int)file.length()]);
		fis.read(s.buffer);
		ItemDef itemdef = new ItemDef();
		
		label1:
		while (true) {
		
			int tok = s.readUnsignedByte();
				label0:
				switch (tok) {
					case 0:
						try {
							x[itemdef.getID()]=itemdef;
							String str =itemdef.getID()+&quot;\t&quot;+itemdef.getName()+&quot;\t\t&quot;
							+itemdef.getDesc()+&quot;\t\t&quot;+itemdef.isStackable()+&quot;\t&quot;+itemdef.isNotes()+&quot;\t&quot;+itemdef.isMembers()+&quot;\t&quot;+itemdef.getValue();
							fos.write(str.getBytes());
							fos.write(&#39;\n&#39;);
						} catch (Exception e) {
							System.out.println(e.toString());
						}
						itemdef = new ItemDef();
						break label0;
					case 1:
						itemdef = new ItemDef(s.readUnsignedWord());//itemID
						break label0;
					case 2:
						itemdef.setName(s.readString());
						break label0;
					case 3:
						itemdef.setDesc(s.readString());
						break label0;
					case 4:
					case 5:
					case 6:
					case 7:
					case 8:
						itemdef.setAction(tok-4,s.readString());
						break label0;
					case 9:
						itemdef.setStackable(true);
						break label0;
					case 10:
						itemdef.setMembers(true);
						break label0;
					case 11:
						itemdef.setNotes(true);
						break label0;
					case 12:
						itemdef.setValue(s.readDWord());
						break label0;
					case 255:
						System.out.println(&quot;Finished!&quot;);
						break label1;
					default:
						System.out.println(&quot;err&quot;);
						break label1;
				}
		
		}
		fis.close();
		fos.close();
		} catch (Exception e) {
		e.printStackTrace();
		}
	}
}[/code]
the return is for stringing initializers ex:[code]
new ItemDef(13).setName(&quot;taco&quot;).setDesc(&quot;scrumptious&quot;).setValue(100).setStackable(false).setNote(false); [/code]
Might look like minecraft to some, cuz thats where i got idea from :P

[b]ItemDef[/b]- class used to store the values of said item.
[code]public class ItemDef {
	private int itemID;
	private int value;
	private String itemName;
	private String itemDesc;
	private String[] actions = new String[5];
	private boolean stackable, notes;
	private boolean members;
	public ItemDef() {
		itemID=0;
		itemName=&quot;&quot;;
		itemDesc=&quot;&quot;;
		actions=null;
		stackable = false;
		members = false;
		notes = false;
		value = 0;
		
	}
	public ItemDef(int id) {
		itemID=id;
		itemName=&quot;&quot;;
		itemDesc=&quot;&quot;;
		actions=null;
		stackable = false;
		members = false;
		notes = false;
		value = 0;
	}
	public ItemDef setName(String name) {
		itemName = name;
		return this;
	}
	public ItemDef setDesc(String desc) {
		itemDesc = desc;
		return this;
	}
	public ItemDef setStackable(boolean bool) {
		stackable = bool;
		return this;
	}
	public ItemDef setValue(int val) {
		value = val;
		return this;
	}
	public ItemDef setNotes(boolean bool) {
		notes = bool;
		return this;
	}
	public ItemDef setMembers(boolean bool) {
		members = bool;
		return this;
	}
	public ItemDef setAction(int slot, String x) {
	if (actions==null)
		actions=new String[5];
		actions[slot]=x;
		return this;
	}
	public int getID() {
		return itemID;
	}
	public String getName() {
		return itemName;
	}
	public String getDesc() {
		return itemDesc;
	}
	public boolean validateAction(int actionSlot, String actionName) {
		if (actions == null) {
			return false;
		}
		return actions[actionSlot].equalsIgnoreCase(actionName);
	}
	public String getNthAction(int n) {//n[1-5]
		if (actions==null)
			return &quot;null&quot;;
		if (n-1&gt;=actions.length)
			return &quot;null&quot;;
		return actions[n-1];
	}
	public boolean isWeapon() {
		if (getNthAction(2).equalsIgnoreCase(&quot;Wield&quot;))
			return true;
			return false;
	}
	public boolean isArmour() {
		if (getNthAction(2).equalsIgnoreCase(&quot;Wear&quot;))
			return true;
			return false;
	}
	public boolean isStackable() {
		return stackable;
	}
	public int getValue() {
		return value;
	}
	public boolean isNotes() {
		return notes;
	}
	public boolean isMembers() {
		return members;
	}
	public void printDebug() {
	System.out.println(getID()+&quot;\t&quot;+getName()+&quot;\t\t\t&quot;+isStackable()+&quot;\t&quot;+isMembers()+&quot;\t&quot;+value);
	}
}[/code]

Attached is the data.dat i used to create the dump. from a 317 cache and the code for it is client sided, sorry to say :x(and your looking at a [u]server[/u] [s]tutorial[/s]snippet thread)

though anyways here is my client sided code :)

[code]    public static void dumpItems() {
	FileOutputStream fos= null;
	Class30_Sub2_Sub2 stream = null;
				try {
					new File(&quot;data.dat&quot;).createNewFile();
					fos = new FileOutputStream(new File(&quot;data.dat&quot;),false);
					stream = new Class30_Sub2_Sub2(new byte[150],1);
			} catch (java.io.IOException io) {
			return;
			}

        for (int i = 0; i &lt; 7620; i++) {
            Class8 class8 = method198(i);
			if (class8==null)
				continue;

			try {

            
                stream.method398(1);
				stream.method399(i);
				if (class8.aString170!=null) {
					stream.method398(2);//name
					stream.method405(class8.aString170);
				}
				if (class8.aByteArray178!=null) {
				stream.method398(3);//desc
				stream.method405(new String(class8.aByteArray178));
				}
				if (class8.aStringArray189 != null) {
                    for (int i2 = 0; i2 &lt; class8.aStringArray189.length; i2++) {
						if (class8.aStringArray189[i2]!=null &amp;&amp; !class8.aStringArray189[i2].equals(&quot;null&quot;)) {
							stream.method398(4+i2);//actions
							stream.method405(class8.aStringArray189[i2]);
						}
                    }
                }
				if (class8.aBoolean176)//stackable
					stream.method398(9);
				if (class8.aBoolean161)//members
					stream.method398(10);
				if (class8.anInt163 != -1) {
					stream.method398(11);
					//stream.method399(class8.anInt163);//notes
				}
				if (class8.anInt155 &gt; 1) {
					stream.method398(12);
					stream.method402(class8.anInt155);//value
				}
				
				if (stream.anInt1406&gt;0) {
					stream.method398(0);
					fos.write(stream.aByteArray1405,0,stream.anInt1406);
				}
				
            }catch (Exception e) {
				System.out.println(e.toString());
			}
			stream.anInt1406=0;
			
        }
		try {
		fos.write(255);
		fos.close();
		} catch (IOException ioe) {}
    }[/code]</description>
    
    <lastBuildDate>Sun, 19 May 2013 14:21:36 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/317-item-dump-and-code/519623.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>317 item dump, and code :)</title>
        <dc:creator><![CDATA[@matzie matzie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/matzie">@matzie</a> wrote:</p>
          <blockquote>
              <p><span class="bbcode-b">Uses:</span><br>
-Stores all the item data, in one simple place.<br>
-Easy to read, if conventions are applied/kept<br>
-does not allow unintentional setting of values, because they are private(use set… methods instead)</p>
<p><span class="bbcode-b">datReader</span>- reads the .dat file</p>
<p>[code]public class datReader {<br>
public static void main(String args[]) {<br>
ItemDef[] x = new ItemDef[8000];<br>
try {<br>
java.io.File file = new java.io.File("./data.dat");<br>
java.io.File file2 = new java.io.File("./dump.txt");<br>
if (!file2.exists())<br>
file2.createNewFile();<br>
java.io.FileInputStream fis = new java.io.FileInputStream(file);<br>
java.io.FileOutputStream fos = new java.io.FileOutputStream(file2,false);<br>
Stream s = new Stream(new byte[(int)file.length()]);<br>
fis.read(s.buffer);<br>
ItemDef itemdef = new ItemDef();</p>
<pre><code>	label1:
	while (true) {
	
		int tok = s.readUnsignedByte();
			label0:
			switch (tok) {
				case 0:
					try {
						x[itemdef.getID()]=itemdef;
						String str =itemdef.getID()+"\t"+itemdef.getName()+"\t\t"
						+itemdef.getDesc()+"\t\t"+itemdef.isStackable()+"\t"+itemdef.isNotes()+"\t"+itemdef.isMembers()+"\t"+itemdef.getValue();
						fos.write(str.getBytes());
						fos.write('\n');
					} catch (Exception e) {
						System.out.println(e.toString());
					}
					itemdef = new ItemDef();
					break label0;
				case 1:
					itemdef = new ItemDef(s.readUnsignedWord());//itemID
					break label0;
				case 2:
					itemdef.setName(s.readString());
					break label0;
				case 3:
					itemdef.setDesc(s.readString());
					break label0;
				case 4:
				case 5:
				case 6:
				case 7:
				case 8:
					itemdef.setAction(tok-4,s.readString());
					break label0;
				case 9:
					itemdef.setStackable(true);
					break label0;
				case 10:
					itemdef.setMembers(true);
					break label0;
				case 11:
					itemdef.setNotes(true);
					break label0;
				case 12:
					itemdef.setValue(s.readDWord());
					break label0;
				case 255:
					System.out.println("Finished!");
					break label1;
				default:
					System.out.println("err");
					break label1;
			}
	
	}
	fis.close();
	fos.close();
	} catch (Exception e) {
	e.printStackTrace();
	}
}
</code></pre>
<p>}[/code]<br>
the return is for stringing initializers ex:<code>
new ItemDef(13).setName("taco").setDesc("scrumptious").setValue(100).setStackable(false).setNote(false); </code><br>
Might look like minecraft to some, cuz thats where i got idea from <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<p><span class="bbcode-b">ItemDef</span>- class used to store the values of said item.</p>
<p>[code]public class ItemDef {<br>
private int itemID;<br>
private int value;<br>
private String itemName;<br>
private String itemDesc;<br>
private String[] actions = new String[5];<br>
private boolean stackable, notes;<br>
private boolean members;<br>
public ItemDef() {<br>
itemID=0;<br>
itemName="";<br>
itemDesc="";<br>
actions=null;<br>
stackable = false;<br>
members = false;<br>
notes = false;<br>
value = 0;</p>
<pre><code>}
public ItemDef(int id) {
	itemID=id;
	itemName="";
	itemDesc="";
	actions=null;
	stackable = false;
	members = false;
	notes = false;
	value = 0;
}
public ItemDef setName(String name) {
	itemName = name;
	return this;
}
public ItemDef setDesc(String desc) {
	itemDesc = desc;
	return this;
}
public ItemDef setStackable(boolean bool) {
	stackable = bool;
	return this;
}
public ItemDef setValue(int val) {
	value = val;
	return this;
}
public ItemDef setNotes(boolean bool) {
	notes = bool;
	return this;
}
public ItemDef setMembers(boolean bool) {
	members = bool;
	return this;
}
public ItemDef setAction(int slot, String x) {
if (actions==null)
	actions=new String[5];
	actions[slot]=x;
	return this;
}
public int getID() {
	return itemID;
}
public String getName() {
	return itemName;
}
public String getDesc() {
	return itemDesc;
}
public boolean validateAction(int actionSlot, String actionName) {
	if (actions == null) {
		return false;
	}
	return actions[actionSlot].equalsIgnoreCase(actionName);
}
public String getNthAction(int n) {//n[1-5]
	if (actions==null)
		return "null";
	if (n-1&gt;=actions.length)
		return "null";
	return actions[n-1];
}
public boolean isWeapon() {
	if (getNthAction(2).equalsIgnoreCase("Wield"))
		return true;
		return false;
}
public boolean isArmour() {
	if (getNthAction(2).equalsIgnoreCase("Wear"))
		return true;
		return false;
}
public boolean isStackable() {
	return stackable;
}
public int getValue() {
	return value;
}
public boolean isNotes() {
	return notes;
}
public boolean isMembers() {
	return members;
}
public void printDebug() {
System.out.println(getID()+"\t"+getName()+"\t\t\t"+isStackable()+"\t"+isMembers()+"\t"+value);
}
</code></pre>
<p>}[/code]</p>
<p>Attached is the data.dat i used to create the dump. from a 317 cache and the code for it is client sided, sorry to say :x(and your looking at a <span class="bbcode-u">server</span> <span class="bbcode-s">tutorial</span>snippet thread)</p>
<p>though anyways here is my client sided code <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>[code]    public static void dumpItems() {<br>
FileOutputStream fos= null;<br>
Class30_Sub2_Sub2 stream = null;<br>
try {<br>
new File(“data.dat”).createNewFile();<br>
fos = new FileOutputStream(new File(“data.dat”),false);<br>
stream = new Class30_Sub2_Sub2(new byte[150],1);<br>
} catch (java.io.IOException io) {<br>
return;<br>
}</p>
<pre><code>    for (int i = 0; i &lt; 7620; i++) {
        Class8 class8 = method198(i);
		if (class8==null)
			continue;

		try {

        
            stream.method398(1);
			stream.method399(i);
			if (class8.aString170!=null) {
				stream.method398(2);//name
				stream.method405(class8.aString170);
			}
			if (class8.aByteArray178!=null) {
			stream.method398(3);//desc
			stream.method405(new String(class8.aByteArray178));
			}
			if (class8.aStringArray189 != null) {
                for (int i2 = 0; i2 &lt; class8.aStringArray189.length; i2++) {
					if (class8.aStringArray189[i2]!=null &amp;&amp; !class8.aStringArray189[i2].equals("null")) {
						stream.method398(4+i2);//actions
						stream.method405(class8.aStringArray189[i2]);
					}
                }
            }
			if (class8.aBoolean176)//stackable
				stream.method398(9);
			if (class8.aBoolean161)//members
				stream.method398(10);
			if (class8.anInt163 != -1) {
				stream.method398(11);
				//stream.method399(class8.anInt163);//notes
			}
			if (class8.anInt155 &gt; 1) {
				stream.method398(12);
				stream.method402(class8.anInt155);//value
			}
			
			if (stream.anInt1406&gt;0) {
				stream.method398(0);
				fos.write(stream.aByteArray1405,0,stream.anInt1406);
			}
			
        }catch (Exception e) {
			System.out.println(e.toString());
		}
		stream.anInt1406=0;
		
    }
	try {
	fos.write(255);
	fos.close();
	} catch (IOException ioe) {}
}[/code]</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317-item-dump-and-code/519623/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317-item-dump-and-code/519623/1</link>
        <pubDate>Sun, 19 May 2013 14:21:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-519623-1</guid>
        <source url="https://forum.moparisthebest.com/t/317-item-dump-and-code/519623.rss">317 item dump, and code :)</source>
      </item>
  </channel>
</rss>
