<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Returning to previous code</title>
    <link>https://forum.moparisthebest.com/t/returning-to-previous-code/539121</link>
    <description>Very quickly, I&#39;m making a rock paper scissors game just for fun and all is going well but im wondering how i&#39;d go about doing this.

[code]if(choice == cpuChoice){
			System.out.println(&quot;\t It&#39;s a draw!&quot;);

		}[/code]

Ok after this I want it to return to the point where the user can start again, without having to close and reopen the application. If that makes sense.</description>
    
    <lastBuildDate>Mon, 03 Feb 2014 08:28:22 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/returning-to-previous-code/539121.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Returning to previous code</title>
        <dc:creator><![CDATA[@Pwnd Pwnd]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pwnd">@Pwnd</a> wrote:</p>
          <blockquote>
              <p>Still noob at Ruby.</p>
<p>[code=ruby]</p>
<h1>Rock, Paper, Scissors in Ruby</h1>
<p>class RockPaperScissors</p>
<pre><code>$valid_input = [:rock, :paper, :scissors]

def game
	while true
		user_selection = get_user_selection.to_sym	

		if user_selection.to_s == "exit"
			break
		end		

		if is_valid_input?(user_selection)
			bot_selection = generate_bot_selection
			
			puts "You chose: #{user_selection}\nBot chose: #{bot_selection}"
			if bot_selection == user_selection
				puts "Draw!"				
			elsif (compare(user_selection, bot_selection))
				puts "You win!"
			else
				puts "You lose!"
			end
			puts "Try again!"
			puts "-----------------------------------------------"
		else
			puts "That is not a valid part of the game!  Try again."
		end
	end
end

def get_user_selection
	puts "Rock, paper or scissors......  SHOOT!"
	gets.chomp
end

def generate_bot_selection
	$valid_input[Random.rand($valid_input.size - 1)]
end

def is_valid_input?(input)
	$valid_input.include? input
end

#returns if first is better (boolean) 
def compare(first, second)
	if first == :rock 
		(second == :scissors)
	elsif first == :paper 
		(second == :rock)
	elsif first == :scissors 
		(second == :paper)
	end
end
</code></pre>
<p>end</p>
<p>rps = RockPaperScissors.new<br>
rps.game[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/returning-to-previous-code/539121/38">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/returning-to-previous-code/539121/38</link>
        <pubDate>Mon, 03 Feb 2014 08:28:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-539121-38</guid>
        <source url="https://forum.moparisthebest.com/t/returning-to-previous-code/539121.rss">Returning to previous code</source>
      </item>
      <item>
        <title>Returning to previous code</title>
        <dc:creator><![CDATA[@_s11 s1gma]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_s11">@_s11</a> wrote:</p>
          <blockquote>
              <p>[quote=“0xCAFEBABE, post:35, topic:539121”]Recursion is usually both slower and requires more memory than iteration. The overhead lies in the method or function call. But, recursion (especially tail-recursion) can usually be optimized into an equivalent iterative version.</p>
<p>However, from a programmers point of view, it sometimes makes more sense to use one of them over the other. For example, to traverse a list, use iteration, and to traverse a graph, use recursion (unless the graph is really deep). In other words, if a problem can be divided into smaller, but similar sub-problems, prefer recursion over iteration.[/quote]<br>
loop master race</p>
<p>[quote=“t4, post:36, topic:539121”][quote author=s1gma link=topic=657957.msg4402900#msg4402900 date=1391097564]</p>
<aside class="quote">
<blockquote>
<p>Here’s one example on how to do it. No need for a while loop.</p>
<pre><code class="lang-auto">import java.util.Random;
import java.util.Scanner;

public class RockPaperScissors {

	private Scanner userInput;
	private Random random;
	private static final String[] rps = { "Rock", "Paper", "Scissors" };

	public RockPaperScissors() {
		userInput = new Scanner(System.in);
		random = new Random();
		startGame();
	}

	private void startGame() {
		System.out.println("Rock/Paper/Scissors?");
		String choice = userInput.next();
		/* Handle the game */
		if (choice.equalsIgnoreCase("exit")) {
			System.exit(0);
		}
		int ourChoice = getChoiceID(choice);
		if (ourChoice != -1) {
			int randomChoice = random.nextInt(rps.length - 1);
			System.out.println(rps[randomChoice]);
			boolean won = ourChoice == 0 &amp;&amp; randomChoice == 2 || ourChoice == 1
					&amp;&amp; randomChoice == 0 || ourChoice == 2 &amp;&amp; randomChoice == 1;
			if (ourChoice == randomChoice)
				System.out.println("Draw!");
			else if (won) {
				System.out.println("You won");
			} else {
				System.out.println("You lost.");
			}
		} else {
			System.out.println("Wrong input. ");
			startGame();
			return;
		}
		System.out
				.println("---------------------------------------------------");
		/* Simply call this method again. */
		startGame();
	}

	private int getChoiceID(String s) {
		for (int i = 0; i &lt; rps.length; i++)
			if (rps[i].equalsIgnoreCase(s))
				return i;

		return -1;
	}

	public static void main(String[] args) {
		new RockPaperScissors();
	}

}
</code></pre>
<p>[/quote]did u just learn what recursion is?</p>
</blockquote>
</aside>
<p>LET ME MAKE A NEW STACK FRAME EVERY TIME I WANT TO PLAY A ROUND OF ROCK PAPER SCISSORS[/quote]<br>
no</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/returning-to-previous-code/539121/37">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/returning-to-previous-code/539121/37</link>
        <pubDate>Sun, 02 Feb 2014 23:33:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-539121-37</guid>
        <source url="https://forum.moparisthebest.com/t/returning-to-previous-code/539121.rss">Returning to previous code</source>
      </item>
      <item>
        <title>Returning to previous code</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <p>[quote=“s1gma, post:33, topic:539121”][quote author=-Nothing link=topic=657957.msg4401178#msg4401178 date=1390690241]<br>
Here’s one example on how to do it. No need for a while loop.</p>
<pre><code class="lang-auto">import java.util.Random;
import java.util.Scanner;

public class RockPaperScissors {

	private Scanner userInput;
	private Random random;
	private static final String[] rps = { "Rock", "Paper", "Scissors" };

	public RockPaperScissors() {
		userInput = new Scanner(System.in);
		random = new Random();
		startGame();
	}

	private void startGame() {
		System.out.println("Rock/Paper/Scissors?");
		String choice = userInput.next();
		/* Handle the game */
		if (choice.equalsIgnoreCase("exit")) {
			System.exit(0);
		}
		int ourChoice = getChoiceID(choice);
		if (ourChoice != -1) {
			int randomChoice = random.nextInt(rps.length - 1);
			System.out.println(rps[randomChoice]);
			boolean won = ourChoice == 0 &amp;&amp; randomChoice == 2 || ourChoice == 1
					&amp;&amp; randomChoice == 0 || ourChoice == 2 &amp;&amp; randomChoice == 1;
			if (ourChoice == randomChoice)
				System.out.println("Draw!");
			else if (won) {
				System.out.println("You won");
			} else {
				System.out.println("You lost.");
			}
		} else {
			System.out.println("Wrong input. ");
			startGame();
			return;
		}
		System.out
				.println("---------------------------------------------------");
		/* Simply call this method again. */
		startGame();
	}

	private int getChoiceID(String s) {
		for (int i = 0; i &lt; rps.length; i++)
			if (rps[i].equalsIgnoreCase(s))
				return i;

		return -1;
	}

	public static void main(String[] args) {
		new RockPaperScissors();
	}

}
</code></pre>
<p>[/quote]did u just learn what recursion is?[/quote]</p>
<p>LET ME MAKE A NEW STACK FRAME EVERY TIME I WANT TO PLAY A ROUND OF ROCK PAPER SCISSORS</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/returning-to-previous-code/539121/36">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/returning-to-previous-code/539121/36</link>
        <pubDate>Thu, 30 Jan 2014 21:16:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-539121-36</guid>
        <source url="https://forum.moparisthebest.com/t/returning-to-previous-code/539121.rss">Returning to previous code</source>
      </item>
      <item>
        <title>Returning to previous code</title>
        <dc:creator><![CDATA[@0xCAFEBABE 0xCAFEBABE]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/0xcafebabe">@0xCAFEBABE</a> wrote:</p>
          <blockquote>
              <p>Recursion is usually both slower and requires more memory than iteration. The overhead lies in the method or function call. But, recursion (especially tail-recursion) can usually be optimized into an equivalent iterative version.</p>
<p>However, from a programmers point of view, it sometimes makes more sense to use one of them over the other. For example, to traverse a list, use iteration, and to traverse a graph, use recursion (unless the graph is really deep). In other words, if a problem can be divided into smaller, but similar sub-problems, prefer recursion over iteration.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/returning-to-previous-code/539121/35">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/returning-to-previous-code/539121/35</link>
        <pubDate>Thu, 30 Jan 2014 18:09:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-539121-35</guid>
        <source url="https://forum.moparisthebest.com/t/returning-to-previous-code/539121.rss">Returning to previous code</source>
      </item>
      <item>
        <title>Returning to previous code</title>
        <dc:creator><![CDATA[@xx_matty_xx Justin Bieber]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xx_matty_xx">@xx_matty_xx</a> wrote:</p>
          <blockquote>
              <p>Recursion is much more efficient than using a loop (Oracle, 2014)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/returning-to-previous-code/539121/34">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/returning-to-previous-code/539121/34</link>
        <pubDate>Thu, 30 Jan 2014 17:11:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-539121-34</guid>
        <source url="https://forum.moparisthebest.com/t/returning-to-previous-code/539121.rss">Returning to previous code</source>
      </item>
      <item>
        <title>Returning to previous code</title>
        <dc:creator><![CDATA[@_s11 s1gma]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_s11">@_s11</a> wrote:</p>
          <blockquote>
              <p>[quote="-Nothing, post:5, topic:539121"]Here’s one example on how to do it. No need for a while loop.</p>
<p>[code]<br>
import java.util.Random;<br>
import java.util.Scanner;</p>
<p>public class RockPaperScissors {</p>
<pre><code>private Scanner userInput;
private Random random;
private static final String[] rps = { "Rock", "Paper", "Scissors" };

public RockPaperScissors() {
	userInput = new Scanner(System.in);
	random = new Random();
	startGame();
}

private void startGame() {
	System.out.println("Rock/Paper/Scissors?");
	String choice = userInput.next();
	/* Handle the game */
	if (choice.equalsIgnoreCase("exit")) {
		System.exit(0);
	}
	int ourChoice = getChoiceID(choice);
	if (ourChoice != -1) {
		int randomChoice = random.nextInt(rps.length - 1);
		System.out.println(rps[randomChoice]);
		boolean won = ourChoice == 0 &amp;&amp; randomChoice == 2 || ourChoice == 1
				&amp;&amp; randomChoice == 0 || ourChoice == 2 &amp;&amp; randomChoice == 1;
		if (ourChoice == randomChoice)
			System.out.println("Draw!");
		else if (won) {
			System.out.println("You won");
		} else {
			System.out.println("You lost.");
		}
	} else {
		System.out.println("Wrong input. ");
		startGame();
		return;
	}
	System.out
			.println("---------------------------------------------------");
	/* Simply call this method again. */
	startGame();
}

private int getChoiceID(String s) {
	for (int i = 0; i &lt; rps.length; i++)
		if (rps[i].equalsIgnoreCase(s))
			return i;

	return -1;
}

public static void main(String[] args) {
	new RockPaperScissors();
}
</code></pre>
<p>}</p>
<p>[/code][/quote]did u just learn what recursion is?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/returning-to-previous-code/539121/33">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/returning-to-previous-code/539121/33</link>
        <pubDate>Thu, 30 Jan 2014 15:59:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-539121-33</guid>
        <source url="https://forum.moparisthebest.com/t/returning-to-previous-code/539121.rss">Returning to previous code</source>
      </item>
      <item>
        <title>Returning to previous code</title>
        <dc:creator><![CDATA[@eXemplar eXemplar]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/exemplar">@eXemplar</a> wrote:</p>
          <blockquote>
              <p>Because I was bored, here’s a simple rock paper scissors using a truth table</p>
<p><code>Random randy = new Random();
List&lt;Character&gt; inputs = Arrays.asList('r', 'p', 's');
int[][] truth = {
    {0, 1, 2},
    {2, 0, 1},
    {1, 2, 0},
};
List&lt;String&gt; results = Arrays.asList("draw", "you lose", "you win");
Scanner scanner = new Scanner(System.in);
while(true) {
    System.out.print("r/p/s? ");
    char letter_player = Character.toLowerCase(scanner.next().charAt(0));
    int value_player = inputs.indexOf(letter_player);
    if (value_player &lt; 0) {
        System.out.println("Invalid selection");
        continue;
    }
    int value_computer = randy.nextInt(3);
    char letter_computer = inputs.get(value_computer);
    int result = truth[value_player][value_computer];
    System.out.printf("You: %c(%d), computer: %c(%d), result %s(%d)\n", letter_player, value_player, letter_computer, value_computer, results.get(result), result);
}</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/returning-to-previous-code/539121/32">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/returning-to-previous-code/539121/32</link>
        <pubDate>Mon, 27 Jan 2014 06:41:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-539121-32</guid>
        <source url="https://forum.moparisthebest.com/t/returning-to-previous-code/539121.rss">Returning to previous code</source>
      </item>
      <item>
        <title>Returning to previous code</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <p>[quote=“ruzylo, post:29, topic:539121”][quote author=AtomicInt_ link=topic=657957.msg4401491#msg4401491 date=1390759582]<br>
<em>snip</em><br>
[/quote]I love you![/quote]</p>
<p>Why?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/returning-to-previous-code/539121/31">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/returning-to-previous-code/539121/31</link>
        <pubDate>Mon, 27 Jan 2014 05:25:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-539121-31</guid>
        <source url="https://forum.moparisthebest.com/t/returning-to-previous-code/539121.rss">Returning to previous code</source>
      </item>
      <item>
        <title>Returning to previous code</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="26" data-topic="539121">
<div class="title">
<div class="quote-controls"></div>
 Evil_:</div>
<blockquote>
<p>For everyone telling RandQm that you can’t use == to compare strings, he stated he uses C#; and in C# you do compare strings with ==/!=</p>
</blockquote>
</aside>
<p>that’s the stupidest fudgeing thing i’ve ever heard (as a language feature)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/returning-to-previous-code/539121/30">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/returning-to-previous-code/539121/30</link>
        <pubDate>Mon, 27 Jan 2014 05:25:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-539121-30</guid>
        <source url="https://forum.moparisthebest.com/t/returning-to-previous-code/539121.rss">Returning to previous code</source>
      </item>
      <item>
        <title>Returning to previous code</title>
        <dc:creator><![CDATA[@ruzylo Ruzylo]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ruzylo">@ruzylo</a> wrote:</p>
          <blockquote>
              <p>[quote=“AtomicInt_, post:19, topic:539121”]no looping, no hard code, no bullshit</p>
<pre><code class="lang-auto">import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Random;

public final class Game
{

	private int wins, losses;


	public static void main( String[] args )
	{
		try {
			Game game = new Game();
			game.start();
		} catch( IOException e ) {
			e.printStackTrace();
		}
	}


	private Game start() throws IOException
	{
		BufferedReader reader = new BufferedReader( new InputStreamReader( System.in ) );
		System.out.printf( "Welcome to Rock, Paper, Scissors game. Your current stats are: wins=%s losses=%s\n", wins, losses );
		System.out.println( "Enter your play (r, p, s, quit):" );

		String input = reader.readLine();

		if( input.equals( "quit" ) ) {
			System.exit( 0 );
			return this;
		}

		if( ! input.equals( "r" ) &amp;&amp; ! input.equals( "p" ) &amp;&amp; ! input.equals( "s" ) ) {
			System.out.printf( "Invalid input: %s, please try again.\n", input );
			return start();
		}

		Choice playerChoice = Choice.forSimplifiedString( input );

		Random random = new Random();
		Choice computerChoice = Choice.values()[ random.nextInt( 3 ) ];

		System.out.printf( "Your choice: %s, computer choice: %s\n", playerChoice, computerChoice );

		if( playerChoice == computerChoice ) {
			System.out.println( "It was a tie! No score was recorded." );
			return start();
		}

		if( playerChoice.success( computerChoice ) ) {
			System.out.printf( "Congratulations, you have won! You now have %d wins!\n", ++ wins );
		} else {
			System.out.printf( "Awe, you have lost! You now have %d losses!\n", ++ losses );
		}

		return start();
	}

	private enum Choice {
		ROCK {

			@Override
			public boolean success( Choice choice )
			{
				return choice == SCISSORS;
			}
		},

		PAPER {

			@Override
			public boolean success( Choice choice )
			{
				return choice == ROCK;
			}
		},

		SCISSORS {

			@Override
			public boolean success( Choice choice )
			{
				return choice == PAPER;
			}
		};

		public abstract boolean success( Choice choice );


		public static Choice forSimplifiedString( String string )
		{
			switch( string ) {
				case "r":
					return ROCK;
				case "p":
					return PAPER;
				case "s":
					return SCISSORS;
			}
			throw new IllegalArgumentException();
		}

	}

}</code></pre>
<p>some sample output:</p>
<p><code>
Welcome to Rock, Paper, Scissors. Your current score is wins=0 losses=0
Enter your play (r, p, s, quit):
r
Your choice: ROCK, computer choice: ROCK
It was a tie! No score was recorded.
Welcome to Rock, Paper, Scissors. Your current score is wins=0 losses=0
Enter your play (r, p, s, quit):
p
Your choice: PAPER, computer choice: SCISSORS
Awe, you have lost! You now have 1 losses!
Welcome to Rock, Paper, Scissors. Your current score is wins=0 losses=1
Enter your play (r, p, s, quit):
s
Your choice: SCISSORS, computer choice: ROCK
Awe, you have lost! You now have 2 losses!
Welcome to Rock, Paper, Scissors. Your current score is wins=0 losses=2
Enter your play (r, p, s, quit):
r
Your choice: ROCK, computer choice: ROCK
It was a tie! No score was recorded.
Welcome to Rock, Paper, Scissors. Your current score is wins=0 losses=2
Enter your play (r, p, s, quit):
r
Your choice: ROCK, computer choice: PAPER
Awe, you have lost! You now have 3 losses!
Welcome to Rock, Paper, Scissors. Your current score is wins=0 losses=3
Enter your play (r, p, s, quit):
r
Your choice: ROCK, computer choice: SCISSORS
Congratulations, you have won! You now have 1 wins!
Welcome to Rock, Paper, Scissors. Your current score is wins=1 losses=3
Enter your play (r, p, s, quit):
r
Your choice: ROCK, computer choice: ROCK
It was a tie! No score was recorded.
Welcome to Rock, Paper, Scissors. Your current score is wins=1 losses=3
Enter your play (r, p, s, quit):
r
Your choice: ROCK, computer choice: PAPER
Awe, you have lost! You now have 4 losses!
Welcome to Rock, Paper, Scissors. Your current score is wins=1 losses=4
Enter your play (r, p, s, quit):
quit
</code>[/quote]I love you!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/returning-to-previous-code/539121/29">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/returning-to-previous-code/539121/29</link>
        <pubDate>Mon, 27 Jan 2014 05:12:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-539121-29</guid>
        <source url="https://forum.moparisthebest.com/t/returning-to-previous-code/539121.rss">Returning to previous code</source>
      </item>
      <item>
        <title>Returning to previous code</title>
        <dc:creator><![CDATA[@Tree Tree]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tree">@Tree</a> wrote:</p>
          <blockquote>
              <p>[quote=“eXemplar, post:27, topic:539121”]General rule of thumb in c# is if you want to compare references you’ll use ==, but if you want to compare value you’ll use Equals()</p>
<p>If you get into generics or implicit types and such, == will come back to bite you in the anus.[/quote]</p>
<p>You look so different with that badge.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/returning-to-previous-code/539121/28">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/returning-to-previous-code/539121/28</link>
        <pubDate>Mon, 27 Jan 2014 04:59:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-539121-28</guid>
        <source url="https://forum.moparisthebest.com/t/returning-to-previous-code/539121.rss">Returning to previous code</source>
      </item>
      <item>
        <title>Returning to previous code</title>
        <dc:creator><![CDATA[@eXemplar eXemplar]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/exemplar">@eXemplar</a> wrote:</p>
          <blockquote>
              <p>General rule of thumb in c# is if you want to compare references you’ll use ==, but if you want to compare value you’ll use Equals()</p>
<p>If you get into generics or implicit types and such, == will come back to bite you in the anus.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/returning-to-previous-code/539121/27">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/returning-to-previous-code/539121/27</link>
        <pubDate>Mon, 27 Jan 2014 01:57:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-539121-27</guid>
        <source url="https://forum.moparisthebest.com/t/returning-to-previous-code/539121.rss">Returning to previous code</source>
      </item>
      <item>
        <title>Returning to previous code</title>
        <dc:creator><![CDATA[@Evil1 Evil_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/evil1">@Evil1</a> wrote:</p>
          <blockquote>
              <p>For everyone telling RandQm that you can’t use == to compare strings, he stated he uses C#; and in C# you do compare strings with ==/!=</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/returning-to-previous-code/539121/26">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/returning-to-previous-code/539121/26</link>
        <pubDate>Mon, 27 Jan 2014 00:02:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-539121-26</guid>
        <source url="https://forum.moparisthebest.com/t/returning-to-previous-code/539121.rss">Returning to previous code</source>
      </item>
      <item>
        <title>Returning to previous code</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="24" data-topic="539121">
<div class="title">
<div class="quote-controls"></div>
 xx matty xx:</div>
<blockquote>
<p>also strings are immutable</p>
</blockquote>
</aside>
<p>Also any string concatenation creates a new string.</p>
<p>Also you cannot compare strings using ==!= because the object references are not the same even though the strings value may be. (As t4 already stated )</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/returning-to-previous-code/539121/25">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/returning-to-previous-code/539121/25</link>
        <pubDate>Sun, 26 Jan 2014 21:40:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-539121-25</guid>
        <source url="https://forum.moparisthebest.com/t/returning-to-previous-code/539121.rss">Returning to previous code</source>
      </item>
      <item>
        <title>Returning to previous code</title>
        <dc:creator><![CDATA[@xx_matty_xx Justin Bieber]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xx_matty_xx">@xx_matty_xx</a> wrote:</p>
          <blockquote>
              <p>also strings are immutable</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/returning-to-previous-code/539121/24">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/returning-to-previous-code/539121/24</link>
        <pubDate>Sun, 26 Jan 2014 21:31:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-539121-24</guid>
        <source url="https://forum.moparisthebest.com/t/returning-to-previous-code/539121.rss">Returning to previous code</source>
      </item>
      <item>
        <title>Returning to previous code</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <p>You should also minimize the scope of references and variables as much as possible. Whether that means reusing the same reference by using a singleton pattern or some other preservation method</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/returning-to-previous-code/539121/23">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/returning-to-previous-code/539121/23</link>
        <pubDate>Sun, 26 Jan 2014 21:28:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-539121-23</guid>
        <source url="https://forum.moparisthebest.com/t/returning-to-previous-code/539121.rss">Returning to previous code</source>
      </item>
      <item>
        <title>Returning to previous code</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <p>ps: all object instantiations are references because all objects are heap allocated (new keyword).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/returning-to-previous-code/539121/22">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/returning-to-previous-code/539121/22</link>
        <pubDate>Sun, 26 Jan 2014 20:43:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-539121-22</guid>
        <source url="https://forum.moparisthebest.com/t/returning-to-previous-code/539121.rss">Returning to previous code</source>
      </item>
      <item>
        <title>Returning to previous code</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <p>[quote=“t4, post:20, topic:539121”][quote author=RandQm link=topic=657957.msg4401165#msg4401165 date=1390687793]</p>
<p>[code]private Random rnd = new Random();<br>
private string[] choices = {“Paper”, “Scissors”, “Rock”};</p>
<p>while(userInput != “Quit”) {<br>
if(choices(rnd.Next(choices.Length - 1)) == userInput) {<br>
//draw<br>
} else if(<br>
…<br>
}<br>
}[/code]</p>
<p>I’ve been working in c# lately, forgive me if it has C# stuff<br>
[/quote]<br>
==/!= does not compare string data, but merely pointer address. this is incorrect code.</p>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<p>Here’s my version of it:</p>
<pre><code class="lang-auto">import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public final class RockPaperScissorsGame {
    private final Random random = new Random();
    private final Scanner scanner = new Scanner(System.in);
    private final String[] inputs = {"paper", "rock", "scissors"};
    private final String[][] results = {{"it's a draw!", "you won!", "you lost!"}, {"you lost!", "it's a draw!", "you won!"}, {"you won!", "you lost!", "it's a draw!"}};

    private RockPaperScissorsGame() {

    }

    private String getInput() {
        System.out.println("What do you want to choose? Rock, paper or scissors?");

        return scanner.next();
    }

    private void play() {
        for(String input = getInput(); !input.equalsIgnoreCase("quit"); input = getInput()) {
            int computerInput = random.nextInt(inputs.length);
            int userInput = Arrays.binarySearch(inputs, input.toLowerCase());

            if(userInput != -1) {
                System.out.println("You chose \"" + inputs[userInput] + "\" and your opponent chose \"" + inputs[computerInput] + "\".");
                System.out.println("This means that " + results[userInput][computerInput]);
            } else  {
                System.out.println("Invalid input \"" + userInput + "\".");

                continue;
            }
        }
    }

    public static void main(String[] args) {
        new RockPaperScissorsGame().play();
    }
}</code></pre>
</blockquote>
</aside>
<p>You shouldn’t set Random as a constant because the results will be the same.<br>
That is not how you use a [size=8pt]<span class="bbcode-i">for loop</span>[/size]</p>
<p>I don’t really like those arrays.</p>
<p><a class="mention" href="/u/randqm">@RandQm</a><br>
That code is extremely bad. What are you going to do when you get an exception?</p>
</blockquote>
</aside>
<p>final in the case of objects refers to the naming being a constant for an address (reference). the object can still be mutable, but the reference is not.[/quote]</p>
<p>Adding on to this, declaring final does not mean the same when applied to classes or methods as it does to references. Also what he means about the object being mutable and the reference is not is this:</p>
<p><code>
Point create() {
    final Point p = new Point(5, 5);
    p.x = 8;
    return p;
}</code></p>
<p>As you can see the Point reference is immutable. It was constructed with x 5 and y 5. Afterwards we set the x of Point to 8. This is perfectly legal. The new Point would be 8, 5.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/returning-to-previous-code/539121/21">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/returning-to-previous-code/539121/21</link>
        <pubDate>Sun, 26 Jan 2014 20:34:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-539121-21</guid>
        <source url="https://forum.moparisthebest.com/t/returning-to-previous-code/539121.rss">Returning to previous code</source>
      </item>
      <item>
        <title>Returning to previous code</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <p>[quote=“RandQm, post:4, topic:539121”][code]private Random rnd = new Random();<br>
private string[] choices = {“Paper”, “Scissors”, “Rock”};</p>
<p>while(userInput != “Quit”) {<br>
if(choices(rnd.Next(choices.Length - 1)) == userInput) {<br>
//draw<br>
} else if(<br>
…<br>
}<br>
}[/code]</p>
<p>I’ve been working in c# lately, forgive me if it has C# stuff[/quote]<br>
==/!= does not compare string data, but merely pointer address. this is incorrect code.</p>
<p>[quote=“Arcik, post:9, topic:539121”][quote author=0xCAFEBABE link=topic=657957.msg4401393#msg4401393 date=1390735023]<br>
Here’s my version of it:</p>
<pre><code class="lang-auto">import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public final class RockPaperScissorsGame {
    private final Random random = new Random();
    private final Scanner scanner = new Scanner(System.in);
    private final String[] inputs = {"paper", "rock", "scissors"};
    private final String[][] results = {{"it's a draw!", "you won!", "you lost!"}, {"you lost!", "it's a draw!", "you won!"}, {"you won!", "you lost!", "it's a draw!"}};

    private RockPaperScissorsGame() {

    }

    private String getInput() {
        System.out.println("What do you want to choose? Rock, paper or scissors?");

        return scanner.next();
    }

    private void play() {
        for(String input = getInput(); !input.equalsIgnoreCase("quit"); input = getInput()) {
            int computerInput = random.nextInt(inputs.length);
            int userInput = Arrays.binarySearch(inputs, input.toLowerCase());

            if(userInput != -1) {
                System.out.println("You chose \"" + inputs[userInput] + "\" and your opponent chose \"" + inputs[computerInput] + "\".");
                System.out.println("This means that " + results[userInput][computerInput]);
            } else  {
                System.out.println("Invalid input \"" + userInput + "\".");

                continue;
            }
        }
    }

    public static void main(String[] args) {
        new RockPaperScissorsGame().play();
    }
}</code></pre>
<p>[/quote]<br>
You shouldn’t set Random as a constant because the results will be the same.<br>
That is not how you use a [size=8pt]<span class="bbcode-i">for loop</span>[/size]</p>
<p>I don’t really like those arrays.</p>
<p><a class="mention" href="/u/randqm">@RandQm</a><br>
That code is extremely bad. What are you going to do when you get an exception?[/quote]<br>
final in the case of objects refers to the naming being a constant for an address (reference). the object can still be mutable, but the reference is not.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/returning-to-previous-code/539121/20">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/returning-to-previous-code/539121/20</link>
        <pubDate>Sun, 26 Jan 2014 20:08:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-539121-20</guid>
        <source url="https://forum.moparisthebest.com/t/returning-to-previous-code/539121.rss">Returning to previous code</source>
      </item>
      <item>
        <title>Returning to previous code</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <p>no looping, no hard code, no bullshit</p>
<pre><code class="lang-auto">import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Random;

public final class Game
{

	private int wins, losses;


	public static void main( String[] args )
	{
		try {
			Game game = new Game();
			game.start();
		} catch( IOException e ) {
			e.printStackTrace();
		}
	}


	private Game start() throws IOException
	{
		BufferedReader reader = new BufferedReader( new InputStreamReader( System.in ) );
		System.out.printf( "Welcome to Rock, Paper, Scissors game. Your current stats are: wins=%s losses=%s\n", wins, losses );
		System.out.println( "Enter your play (r, p, s, quit):" );

		String input = reader.readLine();

		if( input.equals( "quit" ) ) {
			System.exit( 0 );
			return this;
		}

		if( ! input.equals( "r" ) &amp;&amp; ! input.equals( "p" ) &amp;&amp; ! input.equals( "s" ) ) {
			System.out.printf( "Invalid input: %s, please try again.\n", input );
			return start();
		}

		Choice playerChoice = Choice.forSimplifiedString( input );

		Random random = new Random();
		Choice computerChoice = Choice.values()[ random.nextInt( 3 ) ];

		System.out.printf( "Your choice: %s, computer choice: %s\n", playerChoice, computerChoice );

		if( playerChoice == computerChoice ) {
			System.out.println( "It was a tie! No score was recorded." );
			return start();
		}

		if( playerChoice.success( computerChoice ) ) {
			System.out.printf( "Congratulations, you have won! You now have %d wins!\n", ++ wins );
		} else {
			System.out.printf( "Awe, you have lost! You now have %d losses!\n", ++ losses );
		}

		return start();
	}

	private enum Choice {
		ROCK {

			@Override
			public boolean success( Choice choice )
			{
				return choice == SCISSORS;
			}
		},

		PAPER {

			@Override
			public boolean success( Choice choice )
			{
				return choice == ROCK;
			}
		},

		SCISSORS {

			@Override
			public boolean success( Choice choice )
			{
				return choice == PAPER;
			}
		};

		public abstract boolean success( Choice choice );


		public static Choice forSimplifiedString( String string )
		{
			switch( string ) {
				case "r":
					return ROCK;
				case "p":
					return PAPER;
				case "s":
					return SCISSORS;
			}
			throw new IllegalArgumentException();
		}

	}

}</code></pre>
<p>some sample output:</p>
<pre><code class="lang-auto">Welcome to Rock, Paper, Scissors. Your current score is wins=0 losses=0
Enter your play (r, p, s, quit):
r
Your choice: ROCK, computer choice: ROCK
It was a tie! No score was recorded.
Welcome to Rock, Paper, Scissors. Your current score is wins=0 losses=0
Enter your play (r, p, s, quit):
p
Your choice: PAPER, computer choice: SCISSORS
Awe, you have lost! You now have 1 losses!
Welcome to Rock, Paper, Scissors. Your current score is wins=0 losses=1
Enter your play (r, p, s, quit):
s
Your choice: SCISSORS, computer choice: ROCK
Awe, you have lost! You now have 2 losses!
Welcome to Rock, Paper, Scissors. Your current score is wins=0 losses=2
Enter your play (r, p, s, quit):
r
Your choice: ROCK, computer choice: ROCK
It was a tie! No score was recorded.
Welcome to Rock, Paper, Scissors. Your current score is wins=0 losses=2
Enter your play (r, p, s, quit):
r
Your choice: ROCK, computer choice: PAPER
Awe, you have lost! You now have 3 losses!
Welcome to Rock, Paper, Scissors. Your current score is wins=0 losses=3
Enter your play (r, p, s, quit):
r
Your choice: ROCK, computer choice: SCISSORS
Congratulations, you have won! You now have 1 wins!
Welcome to Rock, Paper, Scissors. Your current score is wins=1 losses=3
Enter your play (r, p, s, quit):
r
Your choice: ROCK, computer choice: ROCK
It was a tie! No score was recorded.
Welcome to Rock, Paper, Scissors. Your current score is wins=1 losses=3
Enter your play (r, p, s, quit):
r
Your choice: ROCK, computer choice: PAPER
Awe, you have lost! You now have 4 losses!
Welcome to Rock, Paper, Scissors. Your current score is wins=1 losses=4
Enter your play (r, p, s, quit):
quit</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/returning-to-previous-code/539121/19">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/returning-to-previous-code/539121/19</link>
        <pubDate>Sun, 26 Jan 2014 18:06:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-539121-19</guid>
        <source url="https://forum.moparisthebest.com/t/returning-to-previous-code/539121.rss">Returning to previous code</source>
      </item>
      <item>
        <title>Returning to previous code</title>
        <dc:creator><![CDATA[@xx_matty_xx Justin Bieber]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xx_matty_xx">@xx_matty_xx</a> wrote:</p>
          <blockquote>
              <p>[quote=“Arcik, post:15, topic:539121”]It doesn’t matter, I don’t use Java.[/quote]then shut your face</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/returning-to-previous-code/539121/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/returning-to-previous-code/539121/18</link>
        <pubDate>Sun, 26 Jan 2014 16:40:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-539121-18</guid>
        <source url="https://forum.moparisthebest.com/t/returning-to-previous-code/539121.rss">Returning to previous code</source>
      </item>
      <item>
        <title>Returning to previous code</title>
        <dc:creator><![CDATA[@Pwnd Pwnd]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pwnd">@Pwnd</a> wrote:</p>
          <blockquote>
              <p>[quote=“Arcik, post:15, topic:539121”]It doesn’t matter, I don’t use Java.[/quote]I catch you babbling about shit all of the time, and in the end you don’t <span class="bbcode-b">know</span> anything about it.[quote=“eXemplar, post:16, topic:539121”]It’s probably not a good idea to give advice on a language you don’t use with some misconceptions on basic fundamentals of said language.[/quote]I have already told him this, give or take.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/returning-to-previous-code/539121/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/returning-to-previous-code/539121/17</link>
        <pubDate>Sun, 26 Jan 2014 16:23:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-539121-17</guid>
        <source url="https://forum.moparisthebest.com/t/returning-to-previous-code/539121.rss">Returning to previous code</source>
      </item>
      <item>
        <title>Returning to previous code</title>
        <dc:creator><![CDATA[@eXemplar eXemplar]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/exemplar">@eXemplar</a> wrote:</p>
          <blockquote>
              <p>It’s probably not a good idea to give advice on a language you don’t use with some misconceptions on basic fundamentals of said language.</p>
<p>FWIW, creating new random instances on demand is generally a bad idea, especially in a tight loop.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/returning-to-previous-code/539121/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/returning-to-previous-code/539121/16</link>
        <pubDate>Sun, 26 Jan 2014 15:48:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-539121-16</guid>
        <source url="https://forum.moparisthebest.com/t/returning-to-previous-code/539121.rss">Returning to previous code</source>
      </item>
      <item>
        <title>Returning to previous code</title>
        <dc:creator><![CDATA[@Ashi Ashi]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ashi">@Ashi</a> wrote:</p>
          <blockquote>
              <p>It doesn’t matter, I don’t use Java.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/returning-to-previous-code/539121/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/returning-to-previous-code/539121/15</link>
        <pubDate>Sun, 26 Jan 2014 15:31:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-539121-15</guid>
        <source url="https://forum.moparisthebest.com/t/returning-to-previous-code/539121.rss">Returning to previous code</source>
      </item>
      <item>
        <title>Returning to previous code</title>
        <dc:creator><![CDATA[@0xCAFEBABE 0xCAFEBABE]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/0xcafebabe">@0xCAFEBABE</a> wrote:</p>
          <blockquote>
              <p>Arcik:</p>
<p>Did you provide a seed value yourself? If you provided the same seed value for every new Random instance, then that’s the reason. That’s also why it’s called a Pseudo Random Number Generator (PRNG).</p>
<p>Edit:</p>
<p>Here is some code to demonstrate what I mean:</p>
<pre><code class="lang-auto">Random random1 = new Random(100L);
Random random2 = new Random(100L);

for(int i = 0; i &lt; 10; i++) {
    System.out.println(random1.nextInt() == random2.nextInt());
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/returning-to-previous-code/539121/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/returning-to-previous-code/539121/14</link>
        <pubDate>Sun, 26 Jan 2014 14:37:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-539121-14</guid>
        <source url="https://forum.moparisthebest.com/t/returning-to-previous-code/539121.rss">Returning to previous code</source>
      </item>
  </channel>
</rss>
