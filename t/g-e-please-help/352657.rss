<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>G.E Please help</title>
    <link>https://forum.moparisthebest.com/t/g-e-please-help/352657</link>
    <description>Hi i have G.E source its almost work BUT when i restart server the offer have been deleted how i can fix that?

Codes:
[code]
package palidino76.rs2.content.ge;

import java.util.List;

import java.util.ArrayList;

import palidino76.rs2.player.Player;

import palidino76.rs2.player.items.PlayerItems;

import palidino76.rs2.util.Misc;

import palidino76.rs2.Server;

import palidino76.rs2.Engine;
import palidino76.rs2.content.ge.GrandExchangeLoader;

import palidino76.rs2.world.geList;



public class GrandExchange {

        public static List&lt;Offer&gt; offerList = new ArrayList&lt;Offer&gt;(2000);
               
        public Player p;
         
        public int itemId = -1;
       
        public int minPrice = 0;
        public int basicPrice = 0;
        public int maxPrice = 0;
       
        public int itemPrice = 0;
        public int itemAmount = 0;
       
        public int offerType = -1;
       
        public PlayerItems PlayerItems = new PlayerItems();
       
        public static int i = -1;
       
       
        public GrandExchange(Player p) {
        this.p = p;
    }
       
        public void openMainInterface() {
                p.frames.setConfig2(p, 563, 4194304);
                p.frames.setConfig(p, 1112, -1);
                p.frames.setConfig(p, 1113, -1);
                p.frames.setConfig(p, 1109, -1);
                p.frames.setConfig(p, 1110, 0);
                p.frames.setConfig(p, 1111, 1);
                p.frames.showInterface(p, 105);
                p.frames.setItems(p, -1, -1327, 93, new int[] {}, new int[] {});
		p.restoreTabs(p);
                p.frames.restoreInventory(p);
                p.frames.setInterfaceConfig(p, 107, 0, true);
                p.frames.setInterfaceConfig(p, 105, 0, false);
                p.frames.setAccessMask(p, 6, 0, 105, -1, -1);
                        }

        public void handleButtons(int buttonId) {
                switch(buttonId) {
                        case 30:
                                setBuySetup(0);
                        break;
                        case 31:
                                setSellSetup(0);
                        break;
                        case 46:
                                setBuySetup(1);
                        break;
                        case 47:
                                setSellSetup(1);
                        break;
                        case 62:
                            setBuySetup(2);
                            break;
                        case 63:
                            setSellSetup(2);
                            break;
                        case 81:
                            setBuySetup(3);
                            break;
                        case 82:
                            setSellSetup(3);
                            break;
                        case 100:
                            setBuySetup(4);
                            break;
                        case 101:
                            setSellSetup(4);
                            break;
                        case 119:
                            setBuySetup(5);
                            break;
                        case 120:
                            setSellSetup(5);
                            break;
                        case 127:
                                openMainInterface();
                        break;
                        case 157:
                            if(itemAmount != 1) {
                                itemAmount--;
                            }
                            p.frames.setConfig(p, 1109, itemId);       
                            p.frames.setConfig(p, 1110, itemAmount);
                            break;
                        case 159:
                            if(itemAmount &lt; 2147483647) {
                                itemAmount++;
                            }
                            p.frames.setConfig(p, 1109, itemId);       
                            p.frames.setConfig(p, 1110, itemAmount);
                            break;
                        case 162:
                            if(itemAmount &lt; 2147483647) {
                                itemAmount++;
                            }
                            if(offerType == 0) {
                                itemAmount = 1;
                            }
                                              case 190:
                                if (offerType == 0) {
                                        confirmSellOffer();
                                } else {
                                        confirmBuyOffer();
                                }
                                        case 88:
                            for(Offer Offer : offerList) {
                                if(Offer == null || Offer.id != p.playerId || Offer.slot != 4) {
                                    continue;
                                }
                                if(Offer.type == 0 &amp;&amp; !Offer.aborted) {
                                    p.frames.setItemSlot(p, Offer.slot, 995, Offer.currentPrice);
                                } else if(!Offer.aborted) {
                                    p.frames.setItemSlot(p, Offer.slot, Offer.item, Offer.currentPrice);
                                }
                            }
                            p.currentSlot = 4;
                            p.frames.setConfig(p, 1112, 4);
                            break;
                        case 107:
                            for(Offer Offer : offerList) {
                                if(Offer == null || Offer.id != p.playerId || Offer.slot != 5) {
                                    continue;
                                }
                                if(Offer.type == 0 &amp;&amp; !Offer.aborted) {
                                    p.frames.setItemSlot(p, Offer.slot, 995, Offer.currentPrice);
                                } else if(!Offer.aborted) {
                                    p.frames.setItemSlot(p, Offer.slot, Offer.item, Offer.currentPrice);
                                }
                            }
                            p.currentSlot = 5;
                            p.frames.setConfig(p, 1112, 5);
                            break;
                        case 209:
                            boolean bool = false;
                            int i = 0;
                            for(Offer Offer : offerList) {
                                if(Offer == null || Offer.id != p.playerId || Offer.slot != p.currentSlot) {
                                        continue;
                                }
                                if(Offer.type == 0 &amp;&amp; !Offer.aborted) {
                                    p.frames.resetItemSlot(p, Offer.slot);
                                    Engine.playerItems.addItem(p, 995, Offer.currentPrice);
                                    Offer.updatePrice(Offer.currentPrice, false);
                                    i = Offer.slot;
                                } else if(!Offer.aborted) {
                                    p.frames.resetItemSlot(p, Offer.slot);
                                    Engine.playerItems.addItem(p, Offer.item, Offer.currentPrice);
                                    Offer.updatePrice(Offer.currentPrice, false);
                                    i = Offer.slot;
                                }
                                if(Offer.aborted) {
                                    i = Offer.slot;
                                    bool = true;
                                    if(Offer.type == 0) {
                                        Engine.playerItems.addItem(p, Offer.item, Offer.currentAmount);
                                        p.frames.resetItemSlot(p, Offer.slot);
                                        bool = true;

                                    } else {
                                        Engine.playerItems.addItem(p, 995, Offer.currentAmount * Offer.price);
                                        p.frames.resetItemSlot(p, Offer.slot);
                                        bool = true;
                                    }
                                    Offer.clear();
                                }
                                if(Offer.completed) {
                                    bool = true;
                                    Offer.clear();
                                }
                            }
                            if(bool) {
                                p.frames.resetGe(p, i);

                            }
                            break;
                        case 203:
                            for(Offer Offer : offerList) {
                                if(Offer == null || Offer.id != p.playerId || p.currentSlot != Offer.slot) {
                                        continue;
                                }
                                Offer.aborted = true;
                                if(Offer.type == 0) {
                                    p.frames.setGe(p, Offer.slot, -3, Offer.item, Offer.price, Offer.amount, Offer.amount-Offer.currentAmount);
                                    p.frames.setItemSlot(p, Offer.slot, Offer.item, Offer.currentAmount);
                                } else {
                                    p.frames.setGe(p, Offer.slot, 5, Offer.item, Offer.price, Offer.amount, Offer.amount-Offer.currentAmount);
                                    p.frames.setItemSlot(p, Offer.slot, 995, Offer.price*(Offer.amount-Offer.currentAmount));
                                }
                            }
                            break;
                }
        }
       
        public void setSellSetup(int offerId) {
                itemId = -1;
                minPrice = 0;
                basicPrice = 0;
                maxPrice = 0;
                itemPrice = 0;
                itemAmount = 0;
                p.currentSlot = offerId;
                p.frames.setConfig(p, 1109, -1);
                p.frames.setConfig(p, 1110, 0);       
                p.frames.setConfig(p, 1111, 0);       
                p.frames.setConfig(p, 1112, -1);       
                p.frames.setConfig(p, 1113, 1);
                p.frames.setConfig(p, 1112, offerId);
                p.frames.setInventory(p, 107);
                Object[] o2 = new Object[]{&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;Offer&quot;, -1, 0, 7, 4, 93, 7012370};
                p.frames.runScript(p, 149, o2, &quot;IviiiIsssss&quot;);
                p.frames.setAccessMask(p, 1026, 18, 107, 0, 27);
                p.frames.setItems(p, 149, 0, 93, p.items, p.itemsN);
                p.frames.setInterfaceConfig(p, 107, 0, false);
                offerType = 0;
        }
       
        public void setBuySetup(int offerId) {
                itemId = -1;
                minPrice = 0;
                basicPrice = 0;
                maxPrice = 0;
                itemPrice = 0;
                itemAmount = 0;
                p.currentSlot = offerId;
                p.frames.setConfig(p, 1109, -1);
                p.frames.setConfig(p, 1110, 0);       
                p.frames.setConfig(p, 1111, 0);
                p.frames.setConfig(p, 1113, 1);
                p.frames.setConfig(p, 1113, 0);
                p.frames.setConfig(p, 1112, -1);
                p.frames.setConfig(p, 1112, offerId);
                offerType = 1;
                Object[] o = new Object[]{&quot;DavidScape Grand Exchange Item Search&quot;};
                p.frames.setGeSearch(p, o);
p.frames.setItems(p, 149, 0, 93, p.items, p.itemsN);
        }
       
        public void offerItem(int itemIndex) {
                itemId = p.items[itemIndex];
                itemAmount = PlayerItems.invItemCount(p, itemId);
                p.frames.setConfig(p, 1109, itemId);       
                p.frames.setConfig(p, 1110, itemAmount);
                setPrices();
        }
       
        public void setBuyItem(int itemId) {
                this.itemId = itemId;
                itemAmount = 1;
                p.frames.setConfig(p, 1109, itemId);       
                p.frames.setConfig(p, 1110, itemAmount);
                setPrices();
        }
       
        public void setItemPrice(int price) {
                p.frames.setConfig(p, 1111, price);
                itemPrice = price;
        }
       
        public void setPrices() {
                minPrice = 0;
                basicPrice = 0;
                maxPrice = 0;
                for(geList list : Engine.geLoader.geList) {
                    if(list == null) {
                        continue;
                    }
                    if(list.itemId == itemId) {
                        minPrice = 1;
                        maxPrice =15000;
                        basicPrice = 1;
                    }
                }
                itemPrice = basicPrice;
                p.frames.setConfig(p, 1115, minPrice);
                p.frames.setConfig(p, 1114, basicPrice);
                p.frames.setConfig(p, 1116, maxPrice);
                setItemPrice(itemPrice);
        }
       
        public int getitemPrice(int price) {
                if (price &gt;= maxPrice) {
                        return maxPrice;
                }
                if (price &lt;= minPrice) {
                        return minPrice;
                }
                return price;
        }
       
        public void confirmSellOffer() {
                if (itemAmount &lt;= PlayerItems.invItemCount(p, itemId)) {
                        offerList.add(new Offer(p.playerId, itemId, itemAmount, itemAmount, itemPrice, 0, p.username, false, p.currentSlot));
                        openMainInterface();
                        PlayerItems.deleteItem(p, itemId, itemAmount);
                        p.frames.setGe(p, p.currentSlot, -1, itemId, itemPrice, itemAmount, 0);
                        updateOffers();
                } else {
                        p.frames.sendMessage(p, &quot;You don&#39;t have enough items in your inventory to complete this offer.&quot;);
                }
        }
       
        public void confirmBuyOffer() {
                if ((itemAmount * itemPrice) &lt;= PlayerItems.invItemCount(p, 995)) {
                        offerList.add(new Offer(p.playerId, itemId, itemAmount, itemAmount, itemPrice, 1, p.username, false, p.currentSlot));
                        openMainInterface();
                        PlayerItems.deleteItem(p, 995, (itemAmount * itemPrice));
                        p.frames.setGe(p, p.currentSlot, 3, itemId, itemPrice, itemAmount, 0);
                        updateOffers();
                } else {
                        p.frames.sendMessage(p, &quot;You don&#39;t have enough coins to complete this offer.&quot;);
                }
        }
       
        public void updateOffers() {
            for(Offer Offer : offerList) {
                if(Offer == null || Offer.type != 0 || Offer.completed || Offer.aborted) {
                    continue;
                }
                for(Offer Offer2 : offerList) {
                    if(Offer2 == null || Offer2.type != 1 || Offer2.completed || Offer2.aborted) {
                        continue;
                    }
                    if(Offer2.item == Offer.item &amp;&amp; Offer2.price &gt;= Offer.price) {
                        Player p2 = Server.engine.players[Server.engine.getIdFromName(Offer2.owner)];
                        Player p3 = Server.engine.players[Server.engine.getIdFromName(Offer.owner)];
                        int id = Offer.item;
                        int amount = Offer2.currentAmount;
                        if(Offer.currentAmount &lt; Offer2.currentAmount) {
                                amount = Offer.currentAmount;
                        }
                        if(p2 != null || !p2.disconnected[0]) {
                            p2.frames.sendMessage(p2, &quot;A Grand Exchange offer has been updated!&quot;);
                        }
                        if(p3 != null || !p3.disconnected[0]) {
                            p3.frames.sendMessage(p3, &quot;A Grand Exchange offer has been updated!&quot;);
                        }
                        Offer2.currentAmount -= amount;
                        Offer.currentAmount -= amount;
                        Offer.updatePrice(amount, true);
                        Offer2.updatePrice(amount, true);
                        p3.frames.setGe(p3, Offer.slot, -1, Offer.item, Offer.price, Offer.amount, Offer.amount-Offer.currentAmount);
                        p2.frames.setGe(p2, Offer2.slot, 3, Offer2.item, Offer2.price, Offer2.amount, Offer2.amount-Offer2.currentAmount);
                        if(Offer.currentAmount == 0) {
                            p3.frames.setGe(p3, Offer.slot, -3, Offer.item, Offer.price, Offer.amount, Offer.amount-Offer.currentAmount);
                            Offer.completed = true;
                        }
                        if(Offer2.currentAmount == 0) {
                            p2.frames.setGe(p2, Offer2.slot, 5, Offer2.item, Offer2.price, Offer2.amount, Offer2.amount-Offer2.currentAmount);
                            Offer2.completed = true;
                        }
                    }
                }
            }
        }
}[/code]</description>
    
    <lastBuildDate>Tue, 03 Aug 2010 17:22:24 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/g-e-please-help/352657.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>G.E Please help</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>[quote=“usman555, post:3, topic:352657”][quote author=Davidi2 link=topic=448983.msg3294455#msg3294455 date=1280855737]</p>
<p>[quote]<code>Object[] o = new Object[]{"DavidScape Grand Exchange Item Search"};</code>[/quote]LOL’D.<br>
[/quote]Lol, it’s your source?[/quote]He leeched my GE and is adding it to his source, but he can’t find my other parts XD</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/g-e-please-help/352657/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/g-e-please-help/352657/4</link>
        <pubDate>Tue, 03 Aug 2010 17:22:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-352657-4</guid>
        <source url="https://forum.moparisthebest.com/t/g-e-please-help/352657.rss">G.E Please help</source>
      </item>
      <item>
        <title>G.E Please help</title>
        <dc:creator><![CDATA[@usman555 usman555]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/usman555">@usman555</a> wrote:</p>
          <blockquote>
              <p>[quote=“Davidi2, post:2, topic:352657”][quote]<code>Object[] o = new Object[]{"DavidScape Grand Exchange Item Search"};</code>[/quote]LOL’D.[/quote]Lol, it’s your source?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/g-e-please-help/352657/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/g-e-please-help/352657/3</link>
        <pubDate>Tue, 03 Aug 2010 17:20:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-352657-3</guid>
        <source url="https://forum.moparisthebest.com/t/g-e-please-help/352657.rss">G.E Please help</source>
      </item>
      <item>
        <title>G.E Please help</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <blockquote>[code=java]Object[] o = new Object[]{"DavidScape Grand Exchange Item Search"};[/code]</blockquote>LOL'D.
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/g-e-please-help/352657/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/g-e-please-help/352657/2</link>
        <pubDate>Tue, 03 Aug 2010 17:15:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-352657-2</guid>
        <source url="https://forum.moparisthebest.com/t/g-e-please-help/352657.rss">G.E Please help</source>
      </item>
      <item>
        <title>G.E Please help</title>
        <dc:creator><![CDATA[@sernas sernas]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sernas">@sernas</a> wrote:</p>
          <blockquote>
              <p>Hi i have G.E source its almost work BUT when i restart server the offer have been deleted how i can fix that?</p>
<p>Codes:</p>
<p>[code]<br>
package palidino76.rs2.content.ge;</p>
<p>import java.util.List;</p>
<p>import java.util.ArrayList;</p>
<p>import palidino76.rs2.player.Player;</p>
<p>import palidino76.rs2.player.items.PlayerItems;</p>
<p>import palidino76.rs2.util.Misc;</p>
<p>import palidino76.rs2.Server;</p>
<p>import palidino76.rs2.Engine;<br>
import palidino76.rs2.content.ge.GrandExchangeLoader;</p>
<p>import palidino76.rs2.world.geList;</p>
<p>public class GrandExchange {</p>
<pre><code>    public static List&lt;Offer&gt; offerList = new ArrayList&lt;Offer&gt;(2000);
           
    public Player p;
     
    public int itemId = -1;
   
    public int minPrice = 0;
    public int basicPrice = 0;
    public int maxPrice = 0;
   
    public int itemPrice = 0;
    public int itemAmount = 0;
   
    public int offerType = -1;
   
    public PlayerItems PlayerItems = new PlayerItems();
   
    public static int i = -1;
   
   
    public GrandExchange(Player p) {
    this.p = p;
}
   
    public void openMainInterface() {
            p.frames.setConfig2(p, 563, 4194304);
            p.frames.setConfig(p, 1112, -1);
            p.frames.setConfig(p, 1113, -1);
            p.frames.setConfig(p, 1109, -1);
            p.frames.setConfig(p, 1110, 0);
            p.frames.setConfig(p, 1111, 1);
            p.frames.showInterface(p, 105);
            p.frames.setItems(p, -1, -1327, 93, new int[] {}, new int[] {});
	p.restoreTabs(p);
            p.frames.restoreInventory(p);
            p.frames.setInterfaceConfig(p, 107, 0, true);
            p.frames.setInterfaceConfig(p, 105, 0, false);
            p.frames.setAccessMask(p, 6, 0, 105, -1, -1);
                    }

    public void handleButtons(int buttonId) {
            switch(buttonId) {
                    case 30:
                            setBuySetup(0);
                    break;
                    case 31:
                            setSellSetup(0);
                    break;
                    case 46:
                            setBuySetup(1);
                    break;
                    case 47:
                            setSellSetup(1);
                    break;
                    case 62:
                        setBuySetup(2);
                        break;
                    case 63:
                        setSellSetup(2);
                        break;
                    case 81:
                        setBuySetup(3);
                        break;
                    case 82:
                        setSellSetup(3);
                        break;
                    case 100:
                        setBuySetup(4);
                        break;
                    case 101:
                        setSellSetup(4);
                        break;
                    case 119:
                        setBuySetup(5);
                        break;
                    case 120:
                        setSellSetup(5);
                        break;
                    case 127:
                            openMainInterface();
                    break;
                    case 157:
                        if(itemAmount != 1) {
                            itemAmount--;
                        }
                        p.frames.setConfig(p, 1109, itemId);       
                        p.frames.setConfig(p, 1110, itemAmount);
                        break;
                    case 159:
                        if(itemAmount &lt; 2147483647) {
                            itemAmount++;
                        }
                        p.frames.setConfig(p, 1109, itemId);       
                        p.frames.setConfig(p, 1110, itemAmount);
                        break;
                    case 162:
                        if(itemAmount &lt; 2147483647) {
                            itemAmount++;
                        }
                        if(offerType == 0) {
                            itemAmount = 1;
                        }
                                          case 190:
                            if (offerType == 0) {
                                    confirmSellOffer();
                            } else {
                                    confirmBuyOffer();
                            }
                                    case 88:
                        for(Offer Offer : offerList) {
                            if(Offer == null || Offer.id != p.playerId || Offer.slot != 4) {
                                continue;
                            }
                            if(Offer.type == 0 &amp;&amp; !Offer.aborted) {
                                p.frames.setItemSlot(p, Offer.slot, 995, Offer.currentPrice);
                            } else if(!Offer.aborted) {
                                p.frames.setItemSlot(p, Offer.slot, Offer.item, Offer.currentPrice);
                            }
                        }
                        p.currentSlot = 4;
                        p.frames.setConfig(p, 1112, 4);
                        break;
                    case 107:
                        for(Offer Offer : offerList) {
                            if(Offer == null || Offer.id != p.playerId || Offer.slot != 5) {
                                continue;
                            }
                            if(Offer.type == 0 &amp;&amp; !Offer.aborted) {
                                p.frames.setItemSlot(p, Offer.slot, 995, Offer.currentPrice);
                            } else if(!Offer.aborted) {
                                p.frames.setItemSlot(p, Offer.slot, Offer.item, Offer.currentPrice);
                            }
                        }
                        p.currentSlot = 5;
                        p.frames.setConfig(p, 1112, 5);
                        break;
                    case 209:
                        boolean bool = false;
                        int i = 0;
                        for(Offer Offer : offerList) {
                            if(Offer == null || Offer.id != p.playerId || Offer.slot != p.currentSlot) {
                                    continue;
                            }
                            if(Offer.type == 0 &amp;&amp; !Offer.aborted) {
                                p.frames.resetItemSlot(p, Offer.slot);
                                Engine.playerItems.addItem(p, 995, Offer.currentPrice);
                                Offer.updatePrice(Offer.currentPrice, false);
                                i = Offer.slot;
                            } else if(!Offer.aborted) {
                                p.frames.resetItemSlot(p, Offer.slot);
                                Engine.playerItems.addItem(p, Offer.item, Offer.currentPrice);
                                Offer.updatePrice(Offer.currentPrice, false);
                                i = Offer.slot;
                            }
                            if(Offer.aborted) {
                                i = Offer.slot;
                                bool = true;
                                if(Offer.type == 0) {
                                    Engine.playerItems.addItem(p, Offer.item, Offer.currentAmount);
                                    p.frames.resetItemSlot(p, Offer.slot);
                                    bool = true;

                                } else {
                                    Engine.playerItems.addItem(p, 995, Offer.currentAmount * Offer.price);
                                    p.frames.resetItemSlot(p, Offer.slot);
                                    bool = true;
                                }
                                Offer.clear();
                            }
                            if(Offer.completed) {
                                bool = true;
                                Offer.clear();
                            }
                        }
                        if(bool) {
                            p.frames.resetGe(p, i);

                        }
                        break;
                    case 203:
                        for(Offer Offer : offerList) {
                            if(Offer == null || Offer.id != p.playerId || p.currentSlot != Offer.slot) {
                                    continue;
                            }
                            Offer.aborted = true;
                            if(Offer.type == 0) {
                                p.frames.setGe(p, Offer.slot, -3, Offer.item, Offer.price, Offer.amount, Offer.amount-Offer.currentAmount);
                                p.frames.setItemSlot(p, Offer.slot, Offer.item, Offer.currentAmount);
                            } else {
                                p.frames.setGe(p, Offer.slot, 5, Offer.item, Offer.price, Offer.amount, Offer.amount-Offer.currentAmount);
                                p.frames.setItemSlot(p, Offer.slot, 995, Offer.price*(Offer.amount-Offer.currentAmount));
                            }
                        }
                        break;
            }
    }
   
    public void setSellSetup(int offerId) {
            itemId = -1;
            minPrice = 0;
            basicPrice = 0;
            maxPrice = 0;
            itemPrice = 0;
            itemAmount = 0;
            p.currentSlot = offerId;
            p.frames.setConfig(p, 1109, -1);
            p.frames.setConfig(p, 1110, 0);       
            p.frames.setConfig(p, 1111, 0);       
            p.frames.setConfig(p, 1112, -1);       
            p.frames.setConfig(p, 1113, 1);
            p.frames.setConfig(p, 1112, offerId);
            p.frames.setInventory(p, 107);
            Object[] o2 = new Object[]{"", "", "", "", "Offer", -1, 0, 7, 4, 93, 7012370};
            p.frames.runScript(p, 149, o2, "IviiiIsssss");
            p.frames.setAccessMask(p, 1026, 18, 107, 0, 27);
            p.frames.setItems(p, 149, 0, 93, p.items, p.itemsN);
            p.frames.setInterfaceConfig(p, 107, 0, false);
            offerType = 0;
    }
   
    public void setBuySetup(int offerId) {
            itemId = -1;
            minPrice = 0;
            basicPrice = 0;
            maxPrice = 0;
            itemPrice = 0;
            itemAmount = 0;
            p.currentSlot = offerId;
            p.frames.setConfig(p, 1109, -1);
            p.frames.setConfig(p, 1110, 0);       
            p.frames.setConfig(p, 1111, 0);
            p.frames.setConfig(p, 1113, 1);
            p.frames.setConfig(p, 1113, 0);
            p.frames.setConfig(p, 1112, -1);
            p.frames.setConfig(p, 1112, offerId);
            offerType = 1;
            Object[] o = new Object[]{"DavidScape Grand Exchange Item Search"};
            p.frames.setGeSearch(p, o);
</code></pre>
<p>p.frames.setItems(p, 149, 0, 93, p.items, p.itemsN);<br>
}</p>
<pre><code>    public void offerItem(int itemIndex) {
            itemId = p.items[itemIndex];
            itemAmount = PlayerItems.invItemCount(p, itemId);
            p.frames.setConfig(p, 1109, itemId);       
            p.frames.setConfig(p, 1110, itemAmount);
            setPrices();
    }
   
    public void setBuyItem(int itemId) {
            this.itemId = itemId;
            itemAmount = 1;
            p.frames.setConfig(p, 1109, itemId);       
            p.frames.setConfig(p, 1110, itemAmount);
            setPrices();
    }
   
    public void setItemPrice(int price) {
            p.frames.setConfig(p, 1111, price);
            itemPrice = price;
    }
   
    public void setPrices() {
            minPrice = 0;
            basicPrice = 0;
            maxPrice = 0;
            for(geList list : Engine.geLoader.geList) {
                if(list == null) {
                    continue;
                }
                if(list.itemId == itemId) {
                    minPrice = 1;
                    maxPrice =15000;
                    basicPrice = 1;
                }
            }
            itemPrice = basicPrice;
            p.frames.setConfig(p, 1115, minPrice);
            p.frames.setConfig(p, 1114, basicPrice);
            p.frames.setConfig(p, 1116, maxPrice);
            setItemPrice(itemPrice);
    }
   
    public int getitemPrice(int price) {
            if (price &gt;= maxPrice) {
                    return maxPrice;
            }
            if (price &lt;= minPrice) {
                    return minPrice;
            }
            return price;
    }
   
    public void confirmSellOffer() {
            if (itemAmount &lt;= PlayerItems.invItemCount(p, itemId)) {
                    offerList.add(new Offer(p.playerId, itemId, itemAmount, itemAmount, itemPrice, 0, p.username, false, p.currentSlot));
                    openMainInterface();
                    PlayerItems.deleteItem(p, itemId, itemAmount);
                    p.frames.setGe(p, p.currentSlot, -1, itemId, itemPrice, itemAmount, 0);
                    updateOffers();
            } else {
                    p.frames.sendMessage(p, "You don't have enough items in your inventory to complete this offer.");
            }
    }
   
    public void confirmBuyOffer() {
            if ((itemAmount * itemPrice) &lt;= PlayerItems.invItemCount(p, 995)) {
                    offerList.add(new Offer(p.playerId, itemId, itemAmount, itemAmount, itemPrice, 1, p.username, false, p.currentSlot));
                    openMainInterface();
                    PlayerItems.deleteItem(p, 995, (itemAmount * itemPrice));
                    p.frames.setGe(p, p.currentSlot, 3, itemId, itemPrice, itemAmount, 0);
                    updateOffers();
            } else {
                    p.frames.sendMessage(p, "You don't have enough coins to complete this offer.");
            }
    }
   
    public void updateOffers() {
        for(Offer Offer : offerList) {
            if(Offer == null || Offer.type != 0 || Offer.completed || Offer.aborted) {
                continue;
            }
            for(Offer Offer2 : offerList) {
                if(Offer2 == null || Offer2.type != 1 || Offer2.completed || Offer2.aborted) {
                    continue;
                }
                if(Offer2.item == Offer.item &amp;&amp; Offer2.price &gt;= Offer.price) {
                    Player p2 = Server.engine.players[Server.engine.getIdFromName(Offer2.owner)];
                    Player p3 = Server.engine.players[Server.engine.getIdFromName(Offer.owner)];
                    int id = Offer.item;
                    int amount = Offer2.currentAmount;
                    if(Offer.currentAmount &lt; Offer2.currentAmount) {
                            amount = Offer.currentAmount;
                    }
                    if(p2 != null || !p2.disconnected[0]) {
                        p2.frames.sendMessage(p2, "A Grand Exchange offer has been updated!");
                    }
                    if(p3 != null || !p3.disconnected[0]) {
                        p3.frames.sendMessage(p3, "A Grand Exchange offer has been updated!");
                    }
                    Offer2.currentAmount -= amount;
                    Offer.currentAmount -= amount;
                    Offer.updatePrice(amount, true);
                    Offer2.updatePrice(amount, true);
                    p3.frames.setGe(p3, Offer.slot, -1, Offer.item, Offer.price, Offer.amount, Offer.amount-Offer.currentAmount);
                    p2.frames.setGe(p2, Offer2.slot, 3, Offer2.item, Offer2.price, Offer2.amount, Offer2.amount-Offer2.currentAmount);
                    if(Offer.currentAmount == 0) {
                        p3.frames.setGe(p3, Offer.slot, -3, Offer.item, Offer.price, Offer.amount, Offer.amount-Offer.currentAmount);
                        Offer.completed = true;
                    }
                    if(Offer2.currentAmount == 0) {
                        p2.frames.setGe(p2, Offer2.slot, 5, Offer2.item, Offer2.price, Offer2.amount, Offer2.amount-Offer2.currentAmount);
                        Offer2.completed = true;
                    }
                }
            }
        }
    }
</code></pre>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/g-e-please-help/352657/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/g-e-please-help/352657/1</link>
        <pubDate>Tue, 03 Aug 2010 08:59:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-352657-1</guid>
        <source url="https://forum.moparisthebest.com/t/g-e-please-help/352657.rss">G.E Please help</source>
      </item>
  </channel>
</rss>
