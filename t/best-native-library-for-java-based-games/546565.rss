<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Best Native Library for Java Based Games</title>
    <link>https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565</link>
    <description>I&#39;m currently working on a small project for learning purposes, it&#39;s a checkers game. Currently it&#39;s using 100% swing/awt, which is proving to provide nothing but problems for me. What I&#39;m asking is is there a better native alternative to this, such as JavaFX? Or is it really inefficient to use any of these libraries for a game at all?</description>
    
    <lastBuildDate>Tue, 23 Sep 2014 06:26:03 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Best Native Library for Java Based Games</title>
        <dc:creator><![CDATA[@Protosstribe object]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/protosstribe">@Protosstribe</a> wrote:</p>
          <blockquote>
              <p>Or, you could simply use the Java2D API. It’s what Swing is built with on top of AWT.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/16</link>
        <pubDate>Tue, 23 Sep 2014 06:26:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546565-16</guid>
        <source url="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565.rss">Best Native Library for Java Based Games</source>
      </item>
      <item>
        <title>Best Native Library for Java Based Games</title>
        <dc:creator><![CDATA[@CoonHunter CoonHunter]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/coonhunter">@CoonHunter</a> wrote:</p>
          <blockquote>
              <p>[quote=“tyb97, post:14, topic:546565”][quote author=CoonHunter link=topic=665463.msg4449663#msg4449663 date=1410626703]<br>
When I did my first game all I really had was a panel that had the background drawn onto it, ontop of that all of the peices were drawn where they were defined (EX: project.peice.x, project.peice.y). Each time there was a click it would (figure out?) where this click was and check to see whether or not it was on a clickable object, and if so handle everything from there.</p>
<p>I am very aware it was all bad methods, but this is just to hopefully spark an idea. I dont practice these methods anymore.<br>
[/quote]<br>
Yeah, I remember playing your one game with the box things chasing each other with that crappy collision detection lol. I’m actually attempting to figure out JavaFX at the moment, no decent tutorials so I’m attempted to go right off the docs.[/quote]<br>
Honestly the collision detection was not even flawed via how it detected. It was just such a horrible core design causing other issues lol. Not sure why I’m defending that old POS lol.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/15</link>
        <pubDate>Mon, 22 Sep 2014 08:07:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546565-15</guid>
        <source url="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565.rss">Best Native Library for Java Based Games</source>
      </item>
      <item>
        <title>Best Native Library for Java Based Games</title>
        <dc:creator><![CDATA[@tyb97 tyb97]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tyb97">@tyb97</a> wrote:</p>
          <blockquote>
              <p>[quote=“CoonHunter, post:13, topic:546565”]When I did my first game all I really had was a panel that had the background drawn onto it, ontop of that all of the peices were drawn where they were defined (EX: project.peice.x, project.peice.y). Each time there was a click it would (figure out?) where this click was and check to see whether or not it was on a clickable object, and if so handle everything from there.</p>
<p>I am very aware it was all bad methods, but this is just to hopefully spark an idea. I dont practice these methods anymore.[/quote]<br>
Yeah, I remember playing your one game with the box things chasing each other with that crappy collision detection lol. I’m actually attempting to figure out JavaFX at the moment, no decent tutorials so I’m attempted to go right off the docs.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/14</link>
        <pubDate>Sat, 13 Sep 2014 17:01:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546565-14</guid>
        <source url="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565.rss">Best Native Library for Java Based Games</source>
      </item>
      <item>
        <title>Best Native Library for Java Based Games</title>
        <dc:creator><![CDATA[@CoonHunter CoonHunter]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/coonhunter">@CoonHunter</a> wrote:</p>
          <blockquote>
              <p>When I did my first game all I really had was a panel that had the background drawn onto it, ontop of that all of the peices were drawn where they were defined (EX: project.peice.x, project.peice.y). Each time there was a click it would (figure out?) where this click was and check to see whether or not it was on a clickable object, and if so handle everything from there.</p>
<p>I am very aware it was all bad methods, but this is just to hopefully spark an idea. I dont practice these methods anymore.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/13</link>
        <pubDate>Sat, 13 Sep 2014 16:45:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546565-13</guid>
        <source url="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565.rss">Best Native Library for Java Based Games</source>
      </item>
      <item>
        <title>Best Native Library for Java Based Games</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>[quote=“tyb97, post:9, topic:546565”][quote author=Davidi2 link=topic=665463.msg4448804#msg4448804 date=1410204905]<br>
A more clear way to phrase it would be the standard JDK I think <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<p>But yea, what you do is really up to you. I don’t really know your reasoning behind not wanting to use external libraries, but there are valid reasons. It’s important to note that pretty much all of those libraries are just building on the standard JDK, so obviously its possible to do it that way. If you want to save time and focus on game development, there are some really good libraries out there. Slick2D, LWJGL, etc.</p>
<p>Considering this is just a checkers game, it might be a good learning experience for you to just use the standard JDK if that’s what you’re going for, and there are plenty of people here that can help you with the problems you are encountering.<br>
[/quote]<br>
Yeah, I’m doing this mainly as an attempt to learn game development at it’s core, as I’ve gotten up a good deal of Unity3D experience. However that’s just all scripting, it’s always more fun to build from scratch. I guess I’ll just look around on Github and Google to see what other people have done with their games, and maybe ask on some other forums or SO so I can reach out to communities more directed towards this type of development. Thanks for the help.[/quote]3D is a completely different beast to tackle than 2D, and a checkers game is a completely different beast to tackle than a 2D action game or rpg, etc. I think checkers is simple enough that you wouldn’t be considered insane to build that from scratch and you could still get a good learning experience out of it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/12</link>
        <pubDate>Tue, 09 Sep 2014 04:07:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546565-12</guid>
        <source url="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565.rss">Best Native Library for Java Based Games</source>
      </item>
      <item>
        <title>Best Native Library for Java Based Games</title>
        <dc:creator><![CDATA[@Docent Limits]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/docent">@Docent</a> wrote:</p>
          <blockquote>
              <p>I shouldnt even bother posting… well shit.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/11</link>
        <pubDate>Tue, 09 Sep 2014 03:50:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546565-11</guid>
        <source url="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565.rss">Best Native Library for Java Based Games</source>
      </item>
      <item>
        <title>Best Native Library for Java Based Games</title>
        <dc:creator><![CDATA[@exiledbotter exiledbotter]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/exiledbotter">@exiledbotter</a> wrote:</p>
          <blockquote>
              <p>[quote=“AtomicInt_, post:2, topic:546565”]JavaFX is really nice, I haven’t gotten a chance to use it much so my opinion isn’t really valid, but the documentation I’ve read and videos I watched it looks like it solves most of the design issues Swing has.</p>
<p>IIRC JavaFX is intended to replace Swing entirely.[/quote]</p>
<p>I recommend JavaFx. ^</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/10</link>
        <pubDate>Mon, 08 Sep 2014 20:57:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546565-10</guid>
        <source url="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565.rss">Best Native Library for Java Based Games</source>
      </item>
      <item>
        <title>Best Native Library for Java Based Games</title>
        <dc:creator><![CDATA[@tyb97 tyb97]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tyb97">@tyb97</a> wrote:</p>
          <blockquote>
              <p>[quote=“Davidi2, post:8, topic:546565”]A more clear way to phrase it would be the standard JDK I think <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<p>But yea, what you do is really up to you. I don’t really know your reasoning behind not wanting to use external libraries, but there are valid reasons. It’s important to note that pretty much all of those libraries are just building on the standard JDK, so obviously its possible to do it that way. If you want to save time and focus on game development, there are some really good libraries out there. Slick2D, LWJGL, etc.</p>
<p>Considering this is just a checkers game, it might be a good learning experience for you to just use the standard JDK if that’s what you’re going for, and there are plenty of people here that can help you with the problems you are encountering.[/quote]<br>
Yeah, I’m doing this mainly as an attempt to learn game development at it’s core, as I’ve gotten up a good deal of Unity3D experience. However that’s just all scripting, it’s always more fun to build from scratch. I guess I’ll just look around on Github and Google to see what other people have done with their games, and maybe ask on some other forums or SO so I can reach out to communities more directed towards this type of development. Thanks for the help.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/9</link>
        <pubDate>Mon, 08 Sep 2014 20:50:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546565-9</guid>
        <source url="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565.rss">Best Native Library for Java Based Games</source>
      </item>
      <item>
        <title>Best Native Library for Java Based Games</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>A more clear way to phrase it would be the standard JDK I think <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<p>But yea, what you do is really up to you. I don’t really know your reasoning behind not wanting to use external libraries, but there are valid reasons. It’s important to note that pretty much all of those libraries are just building on the standard JDK, so obviously its possible to do it that way. If you want to save time and focus on game development, there are some really good libraries out there. Slick2D, LWJGL, etc.</p>
<p>Considering this is just a checkers game, it might be a good learning experience for you to just use the standard JDK if that’s what you’re going for, and there are plenty of people here that can help you with the problems you are encountering.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/8</link>
        <pubDate>Mon, 08 Sep 2014 19:35:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546565-8</guid>
        <source url="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565.rss">Best Native Library for Java Based Games</source>
      </item>
      <item>
        <title>Best Native Library for Java Based Games</title>
        <dc:creator><![CDATA[@tyb97 tyb97]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tyb97">@tyb97</a> wrote:</p>
          <blockquote>
              <p>What I meant by native was native to Java API. Meaning no outside libraries would be imported outside of JDK.</p>
<aside class="quote" data-post="5" data-topic="546565">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/davidi2/40/2579_1.png" class="avatar"> Davidi2:</div>
<blockquote>
<p>That doesnt really make sense… “is it really inefficient to use javafx or swing or awt for a game”?</p>
</blockquote>
</aside>
<p>When doing something like this I prefer to use the native Java API, and no other outside libraries, to really learn what is going on. What I meant by that was, should I bother doing it this way? Or would it be a better idea for me to just go against what I was going for and use another dependency to construct game windows, and draw images etc.</p>
<p>The main issues I have with my checkers games are things like drawing with float precision, as Swing only allows int precision when drawing images. And my apologizes, I’ve always had a terrible time explaining things.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/7</link>
        <pubDate>Mon, 08 Sep 2014 18:36:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546565-7</guid>
        <source url="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565.rss">Best Native Library for Java Based Games</source>
      </item>
      <item>
        <title>Best Native Library for Java Based Games</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="5" data-topic="546565">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/davidi2/40/2579_1.png" class="avatar"> Davidi2:</div>
<blockquote>
<p>That doesnt really make sense… “is it really inefficient to use javafx or swing or awt for a game”?</p>
</blockquote>
</aside>
<aside class="quote" data-post="1" data-topic="546565">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/tyb97/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> tyb97:</div>
<blockquote>
<p>I’m currently working on a small project for learning purposes, it’s a checkers game. <span class="bbcode-b">Currently it’s using 100% swing/awt, which is proving to provide nothing but problems for me. What I’m asking is is there a better native alternative to this, such as JavaFX?</span> Or is it really inefficient to use any of these libraries for a game at all?</p>
</blockquote>
</aside>
<p>That’s all I’m going off of as the last bit doesn’t make sense to me either.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/6</link>
        <pubDate>Mon, 08 Sep 2014 05:06:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546565-6</guid>
        <source url="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565.rss">Best Native Library for Java Based Games</source>
      </item>
      <item>
        <title>Best Native Library for Java Based Games</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>That doesnt really make sense… “is it really inefficient to use javafx or swing or awt for a game”?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/5</link>
        <pubDate>Mon, 08 Sep 2014 05:00:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546565-5</guid>
        <source url="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565.rss">Best Native Library for Java Based Games</source>
      </item>
      <item>
        <title>Best Native Library for Java Based Games</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <p>[quote=“Davidi2, post:3, topic:546565”]Your use of the word native here is a bit confusing. It makes it sound like you are looking for one that is specifically for windows or something <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<p>Do you just mean a graphics API for games?[/quote]</p>
<p>Pretty sure he is asking what is the ‘best’ API to use for graphical displays that is ‘native’ to the Java API, i.e without any external dependencies.</p>
<p>If you want native you’re getting AWT or Swing, I don’t believe JFX is within rt (yet)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/4</link>
        <pubDate>Mon, 08 Sep 2014 04:56:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546565-4</guid>
        <source url="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565.rss">Best Native Library for Java Based Games</source>
      </item>
      <item>
        <title>Best Native Library for Java Based Games</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>Your use of the word native here is a bit confusing. It makes it sound like you are looking for one that is specifically for windows or something <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<p>Do you just mean a graphics API for games?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/3</link>
        <pubDate>Mon, 08 Sep 2014 04:30:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546565-3</guid>
        <source url="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565.rss">Best Native Library for Java Based Games</source>
      </item>
      <item>
        <title>Best Native Library for Java Based Games</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <p>JavaFX is really nice, I haven’t gotten a chance to use it much so my opinion isn’t really valid, but the documentation I’ve read and videos I watched it looks like it solves most of the design issues Swing has.</p>
<p>IIRC JavaFX is intended to replace Swing entirely.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/2</link>
        <pubDate>Mon, 08 Sep 2014 03:35:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546565-2</guid>
        <source url="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565.rss">Best Native Library for Java Based Games</source>
      </item>
      <item>
        <title>Best Native Library for Java Based Games</title>
        <dc:creator><![CDATA[@tyb97 tyb97]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tyb97">@tyb97</a> wrote:</p>
          <blockquote>
              <p>I’m currently working on a small project for learning purposes, it’s a checkers game. Currently it’s using 100% swing/awt, which is proving to provide nothing but problems for me. What I’m asking is is there a better native alternative to this, such as JavaFX? Or is it really inefficient to use any of these libraries for a game at all?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565/1</link>
        <pubDate>Mon, 08 Sep 2014 03:04:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546565-1</guid>
        <source url="https://forum.moparisthebest.com/t/best-native-library-for-java-based-games/546565.rss">Best Native Library for Java Based Games</source>
      </item>
  </channel>
</rss>
