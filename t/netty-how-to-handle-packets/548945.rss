<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Netty - how to handle packets?</title>
    <link>https://forum.moparisthebest.com/t/netty-how-to-handle-packets/548945</link>
    <description>I am trying to send packets from netty client to server. Data inside packets is in a channelbuffer. When client or server receives a message it splits the message into bytes. For example if i send &quot;Hello&quot; to my server then it will call my decoder method 5 times for each byte. 

My question is - How do i handle this? How can i get a full message? For example i want to tell server that client has interacted with NPC. It is probably supposed to send a packet with an opcode + npcId. Or what if i want to send a chat message to the server?</description>
    
    <lastBuildDate>Mon, 05 Jan 2015 03:54:23 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/netty-how-to-handle-packets/548945.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Netty - how to handle packets?</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>[quote=“Eyeownyew, post:5, topic:548945”][quote author=Zymus link=topic=667853.msg4466481#msg4466481 date=1420414963]</p>
<aside class="quote">
<blockquote>
<p>what’s the point of doing &amp; 0xFF? You’re already reading a byte, that’s the only possible values</p>
<p>ediT: oh to convert it to an int that’s fancy</p>
</blockquote>
</aside>
<p>Not just to convert it into an int. Most people read the packet ids starting at 0 and going up to 255. By doing &amp; 0xFF, we’re ensuring that it’s a positive integer. If we didn’t, we would get up to packet 127, and then the next packet would be -128.<br>
[/quote]<br>
ohhh. by doing &amp;0xFF you’re verifying that the last 8 bits of the int will be the 8 bit values from the byte, rather than the 7 from the byte and its sign (right?)[/quote]</p>
<p>Basically.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/netty-how-to-handle-packets/548945/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/netty-how-to-handle-packets/548945/6</link>
        <pubDate>Mon, 05 Jan 2015 03:54:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-548945-6</guid>
        <source url="https://forum.moparisthebest.com/t/netty-how-to-handle-packets/548945.rss">Netty - how to handle packets?</source>
      </item>
      <item>
        <title>Netty - how to handle packets?</title>
        <dc:creator><![CDATA[@eyeownyew Eyeownyew]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/eyeownyew">@eyeownyew</a> wrote:</p>
          <blockquote>
              <p>[quote=“Zymus, post:4, topic:548945”][quote author=Eyeownyew link=topic=667853.msg4466458#msg4466458 date=1420406113]<br>
what’s the point of doing &amp; 0xFF? You’re already reading a byte, that’s the only possible values</p>
<p>ediT: oh to convert it to an int that’s fancy<br>
[/quote]</p>
<p>Not just to convert it into an int. Most people read the packet ids starting at 0 and going up to 255. By doing &amp; 0xFF, we’re ensuring that it’s a positive integer. If we didn’t, we would get up to packet 127, and then the next packet would be -128.[/quote]<br>
ohhh. by doing &amp;0xFF you’re verifying that the last 8 bits of the int will be the 8 bit values from the byte, rather than the 7 from the byte and its sign (right?)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/netty-how-to-handle-packets/548945/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/netty-how-to-handle-packets/548945/5</link>
        <pubDate>Mon, 05 Jan 2015 03:16:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-548945-5</guid>
        <source url="https://forum.moparisthebest.com/t/netty-how-to-handle-packets/548945.rss">Netty - how to handle packets?</source>
      </item>
      <item>
        <title>Netty - how to handle packets?</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>[quote=“Eyeownyew, post:3, topic:548945”]what’s the point of doing &amp; 0xFF? You’re already reading a byte, that’s the only possible values</p>
<p>ediT: oh to convert it to an int that’s fancy[/quote]</p>
<p>Not just to convert it into an int. Most people read the packet ids starting at 0 and going up to 255. By doing &amp; 0xFF, we’re ensuring that it’s a positive integer. If we didn’t, we would get up to packet 127, and then the next packet would be -128.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/netty-how-to-handle-packets/548945/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/netty-how-to-handle-packets/548945/4</link>
        <pubDate>Sun, 04 Jan 2015 23:42:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-548945-4</guid>
        <source url="https://forum.moparisthebest.com/t/netty-how-to-handle-packets/548945.rss">Netty - how to handle packets?</source>
      </item>
      <item>
        <title>Netty - how to handle packets?</title>
        <dc:creator><![CDATA[@eyeownyew Eyeownyew]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/eyeownyew">@eyeownyew</a> wrote:</p>
          <blockquote>
              <p>what’s the point of doing &amp; 0xFF? You’re already reading a byte, that’s the only possible values</p>
<p>ediT: oh to convert it to an int that’s fancy</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/netty-how-to-handle-packets/548945/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/netty-how-to-handle-packets/548945/3</link>
        <pubDate>Sun, 04 Jan 2015 21:15:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-548945-3</guid>
        <source url="https://forum.moparisthebest.com/t/netty-how-to-handle-packets/548945.rss">Netty - how to handle packets?</source>
      </item>
      <item>
        <title>Netty - how to handle packets?</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>The way I have it set up is to use a ByteToMessageDecoder first to construct the Packet object, then that gets sent down the pipeline to your channel handler which takes that new Packet object and then depending on the type of object it is, sent it to it’s own packet handler. Something like</p>
<pre><code class="lang-auto">public class PacketDecoder extends ByteToMessageDecoder {

    @Override
    protected void decode(ChannelHandlerContext ctx, ByteBuf in, List&lt;Object&gt; out) {
        if (in.readableBytes() &lt; 1) {
            return;
        }
        in.markReaderIndex();
        final int opcode = in.readByte() &amp; 0xFF;
        // decode data based on opcode here. For simplicity's sake, I'll use a switch

        switch (opcode) {
            case 123: // packet with variable size, stored in short
                int size = in.readShort() &amp; 0xFFFF;
                if (in.readableBytes() &lt; size) {
                    in.resetReaderIndex();
                    return;
                }
                // all the data is there, let's parse the packet
                final Packet packet = parse123Packet(in);
                out.add(packet);
                break;

            case 234:// packet with no data, like an idle timout packet
                final Packet packet = parse234Packet(in);
                out.add(packet);
                break;
        }
    }
}</code></pre>
<p>Then, in your handler, you could do something like</p>
<pre><code class="lang-auto">public class PacketHandler extends ChannelHandlerAdapter {

    @Override
    public void channelRead(ChannelHandlerContext ctx, Object msg) {
        final Packet packet = (Packet) msg;
        final int opcode = packet.getOpcode();
        // again, for simplicity's sake, i'll use a switch. You could use a Map&lt;Integer, PacketHandler&gt; or something if you want. Requires minimal refactoring.
        switch (opcode) {
            case 123:
                // you should check here to make sure it is a Packet123 object. If it's not, then there's an error in the parsing.
                final Packet123 packet123 = (Packet123) packet;
                processPacket123(packet123);
                break;
        }
    }

    private void processPacket123(Packet123 packet) {
        // check that packet isn't null
        // do stuff with that packet here.
    }
}</code></pre>
<p>That would be the simplest way to do it. Well, you might be able to get it simpler by moving the business logic into where it parses the data, but that results in a pretty ugly design that’s harder to maintain. And I’m not saying this is the best design, just the smallest, quickest design to kind of illustrate what you would need to do.</p>
<p>For more information on this, look at the netty documentation at <a href="http://netty.io/wiki/user-guide-for-5.x.html#wiki-h3-16" data-bbcode="true">http://netty.io/wiki/user-guide-for-5.x.html#wiki-h3-16</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/netty-how-to-handle-packets/548945/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/netty-how-to-handle-packets/548945/2</link>
        <pubDate>Sun, 04 Jan 2015 20:03:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-548945-2</guid>
        <source url="https://forum.moparisthebest.com/t/netty-how-to-handle-packets/548945.rss">Netty - how to handle packets?</source>
      </item>
      <item>
        <title>Netty - how to handle packets?</title>
        <dc:creator><![CDATA[@Gest3r Gest3r]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/gest3r">@Gest3r</a> wrote:</p>
          <blockquote>
              <p>I am trying to send packets from netty client to server. Data inside packets is in a channelbuffer. When client or server receives a message it splits the message into bytes. For example if i send “Hello” to my server then it will call my decoder method 5 times for each byte.</p>
<p>My question is - How do i handle this? How can i get a full message? For example i want to tell server that client has interacted with NPC. It is probably supposed to send a packet with an opcode + npcId. Or what if i want to send a chat message to the server?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/netty-how-to-handle-packets/548945/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/netty-how-to-handle-packets/548945/1</link>
        <pubDate>Sun, 04 Jan 2015 13:20:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-548945-1</guid>
        <source url="https://forum.moparisthebest.com/t/netty-how-to-handle-packets/548945.rss">Netty - how to handle packets?</source>
      </item>
  </channel>
</rss>
