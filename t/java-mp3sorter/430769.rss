<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[Java] mp3sorter</title>
    <link>https://forum.moparisthebest.com/t/java-mp3sorter/430769</link>
    <description>[b]What is it?:[/b]
Recursively searches a given location for MP3&#39;s, reads the tags, and organizes the files into ARTIST/YEAR - ALBUM/TRACK format in the destination output directory. (same as my C++ version [url=https://www.moparisthebest.com/smf/index.php/topic,533409.msg3899311.html#msg3899311]here[/url]) This was a really easy port.

[b]Execution Instructions:[/b]
[code]
usage: MP3Sort [directory] [output] [extension]

[directory]: The directory to recursively search.
[output]: The directory to place the output.
[extension]: The extension of the audio files
[/code]

[b]Source:[/b]


[tt]MP3Sort.java[/tt]
[code=java]
package org.t4.mp3sort;

import java.io.File;
import java.util.Iterator;
import java.util.regex.Pattern;

/**
 * Main class 
 * @author t4
 */
public class MP3Sort {

	/**
	 * Entry point
	 * @param args
	 */
	public static void main(String[] args) {
		//args = new String[] { &quot;./test/input&quot;, &quot;./test/output&quot;, &quot;mp3&quot; };
		try {
			if(args.length != 3) {
				System.out.println(&quot;Usage: src_directory out_directory file_extension&quot;);
				return;
			}			
			RecursiveFileList rfl = new RecursiveFileList(args[0], Pattern.compile(&quot;.*&quot; + args[2].toLowerCase() + &quot;$&quot;));
			rfl.display();
			
			Iterator&lt;File&gt; it = rfl.iterator();
			while(it.hasNext()) {
				MP3File mp3 = new MP3File(it.next());
				File dir = new File(args[1] + &quot;/&quot; + mp3.getArtist() + &quot;/&quot; + mp3.getYear() + &quot; - &quot; + mp3.getAlbum());
				dir.mkdirs();				
				File dest = new File(args[1] + &quot;/&quot; + mp3.getArtist() + &quot;/&quot; + mp3.getYear() + &quot; - &quot; + mp3.getAlbum() + &quot;/&quot; + mp3.getTitle() + &quot;.&quot; + args[2]);
				mp3.getFile().renameTo(dest);
				System.out.println(&quot;Moved &#39;&quot; + mp3.getFile().getCanonicalPath() + &quot;&#39; to &quot; + dest.getCanonicalPath() + &quot;&#39;&quot;);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

}
[/code]

[tt]RecursiveFileList.java[/tt]
[code=java]
package org.t4.mp3sort;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.regex.Pattern;

/**
 * Provides an object that encapsulates a recursive file listing of a directory
 * @author t4
 */
public class RecursiveFileList implements Iterable&lt;File&gt; {

	/** The pattern to look for */
	private Pattern pattern;
	
	/** The list of files */
	private List&lt;File&gt; list;
	
	/**
	 * Generates a recursive file listing of the current directory
	 * @param current
	 */
	private void generateListing(File current) {
		for(File next : current.listFiles()) {
			if(next.isDirectory()) {
				generateListing(next);
			} else if(next.isFile()) {
				if(pattern != null) {
					if(pattern.matcher(next.getName().toLowerCase()).matches()) {
						list.add(next);
					}
				} else {
					list.add(next);
				}
			}
		}
	}
	
	/**
	 * Creates a recursive file listing in which all files contain a pattern
	 * If pattern is null, all items are allowed.
	 * @param directory
	 * @param contains
	 * @throws FileNotFoundException 
	 */
	public RecursiveFileList(String directory, Pattern contains) throws FileNotFoundException {
		File rootDirectory = new File(directory);
		if(!rootDirectory.exists() || !rootDirectory.isDirectory())
			throw new FileNotFoundException();
		this.list = new LinkedList&lt;File&gt;();
		this.pattern = contains;
		generateListing(rootDirectory);
	}

	/**
	 * Gets the underlying iterator
	 * @return list.iterator()
	 */
	@Override
	public Iterator&lt;File&gt; iterator() {
		return this.list.iterator();
	}
	
	/**
	 * Displays the files added to the list
	 * @throws IOException 
	 */
	public void display() throws IOException {
		Iterator&lt;File&gt; it = list.iterator();
		while(it.hasNext()) 
			System.out.println(it.next().getCanonicalPath());
	}

}

[/code]

[tt]MP3File.java[/tt]
[code=java]
package org.t4.mp3sort;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;

/**
 * Wrapper containing MP3 ID3v1 tag data
 * @author t4
 */
public class MP3File {
	
	/** Information of the track */
	private String artist, album, year, title;

	/** The underlying file */
	private File file;
	
	/**
	 * Parses the tag data
	 * @throws IOException 
	 */
	private void parseTagData() throws IOException {
		FileInputStream fis = new FileInputStream(this.file);
		byte[] buffer = new byte[128];
		fis.skip(this.file.length() - buffer.length);
		fis.read(buffer, 0, buffer.length);
		this.artist = this.album = this.year = this.title = &quot;&quot;;
		
		for(int i = 3; i &lt; 30; ++i)
			this.title += ((char) buffer[i]);
		this.title = this.title.trim();
		
		for(int i = 33; i &lt; 63; ++i)
			this.artist += ((char) buffer[i]);
		this.artist = this.artist.trim();
		
		for(int i = 63; i &lt; 93; ++i)
			this.album += ((char) buffer[i]);
		this.album = this.album.trim();

		for(int i = 93; i &lt; 97; ++i)
			this.year += ((char) buffer[i]);
		this.year =	this.year.trim();
	    
		fis.close();
	}
	
	/**
	 * Creates a new wrapper
	 * @param file
	 * @throws IOException 
	 */
	public MP3File(File file) throws IOException {
		this.file = file;
		parseTagData();
	}

	/**
	 * Gets the artist of the track
	 * @return artist
	 */
	public String getArtist() {
		return this.artist;
	}
	
	/**
	 * Gets the album  of the track
	 * @return album
	 */
	public String getAlbum() {
		return this.album;
	}
	
	/**
	 * Gets the year of the track
	 * @return year
	 */
	public String getYear() {
		return this.year;
	}
	
	/**
	 * Gets the title of the track
	 * @return title
	 */
	public String getTitle() {
		return this.title;
	}
	
	/**
	 * Gets the file corresponding to the track
	 * @return file
	 */
	public File getFile() {
		return this.file;
	}
	
	@Override
	public String toString() {
		String str = &quot;&quot;;
		str = this.artist + &quot; - &quot; + this.title + &quot; (&quot; + this.year + &quot;, &quot; + this.album + &quot;)&quot;;
		return str;
	}
}

[/code]</description>
    
    <lastBuildDate>Fri, 27 Jan 2012 15:36:36 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/java-mp3sorter/430769.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[Java] mp3sorter</title>
        <dc:creator><![CDATA[@sppt sppt]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sppt">@sppt</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="430769">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/sinisoul/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> sinisoul:</div>
<blockquote>
<p>We need more examples of this in different languages asap!</p>
</blockquote>
</aside>
<p><a href="http://www.moparisthebest.com/smf/index.php/topic,533492.msg3899962.html#new" data-bbcode="true">Here you go <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-mp3sorter/430769/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-mp3sorter/430769/8</link>
        <pubDate>Fri, 27 Jan 2012 15:36:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430769-8</guid>
        <source url="https://forum.moparisthebest.com/t/java-mp3sorter/430769.rss">[Java] mp3sorter</source>
      </item>
      <item>
        <title>[Java] mp3sorter</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>Just for future reference, when you’re indicating a subdirectory of an already initialized folder file instance, you can do:<br>
new File(file, subdir);</p>
<p>In your example I’m talking about:<br>
File dest = new File(args[1] + “/” + mp3.getArtist() + “/” + mp3.getYear() + " - " + mp3.getAlbum() + “/” + mp3.getTitle() + “.” + args[2]);</p>
<p>Can be shortened to:<br>
File dest = new File(dir, mp3.getTitle() + “.” + args[2]);</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-mp3sorter/430769/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-mp3sorter/430769/7</link>
        <pubDate>Fri, 27 Jan 2012 05:45:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430769-7</guid>
        <source url="https://forum.moparisthebest.com/t/java-mp3sorter/430769.rss">[Java] mp3sorter</source>
      </item>
      <item>
        <title>[Java] mp3sorter</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="5" data-topic="430769">
<div class="title">
<div class="quote-controls"></div>
 t4:</div>
<blockquote>
<p>jython done</p>
</blockquote>
</aside>
<p>pansy</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-mp3sorter/430769/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-mp3sorter/430769/6</link>
        <pubDate>Fri, 27 Jan 2012 05:12:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430769-6</guid>
        <source url="https://forum.moparisthebest.com/t/java-mp3sorter/430769.rss">[Java] mp3sorter</source>
      </item>
      <item>
        <title>[Java] mp3sorter</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <p>jython done</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-mp3sorter/430769/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-mp3sorter/430769/5</link>
        <pubDate>Fri, 27 Jan 2012 04:53:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430769-5</guid>
        <source url="https://forum.moparisthebest.com/t/java-mp3sorter/430769.rss">[Java] mp3sorter</source>
      </item>
      <item>
        <title>[Java] mp3sorter</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>Don’t forget <a href="http://www.lua.org/" data-bbcode="true" rel="nofollow noopener">.</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-mp3sorter/430769/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-mp3sorter/430769/4</link>
        <pubDate>Fri, 27 Jan 2012 03:13:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430769-4</guid>
        <source url="https://forum.moparisthebest.com/t/java-mp3sorter/430769.rss">[Java] mp3sorter</source>
      </item>
      <item>
        <title>[Java] mp3sorter</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <p>working on clojure atm</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-mp3sorter/430769/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-mp3sorter/430769/3</link>
        <pubDate>Fri, 27 Jan 2012 03:12:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430769-3</guid>
        <source url="https://forum.moparisthebest.com/t/java-mp3sorter/430769.rss">[Java] mp3sorter</source>
      </item>
      <item>
        <title>[Java] mp3sorter</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>We need more examples of this in different languages asap!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-mp3sorter/430769/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-mp3sorter/430769/2</link>
        <pubDate>Fri, 27 Jan 2012 03:11:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430769-2</guid>
        <source url="https://forum.moparisthebest.com/t/java-mp3sorter/430769.rss">[Java] mp3sorter</source>
      </item>
      <item>
        <title>[Java] mp3sorter</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <p><span class="bbcode-b">What is it?:</span><br>
Recursively searches a given location for MP3’s, reads the tags, and organizes the files into ARTIST/YEAR - ALBUM/TRACK format in the destination output directory. (same as my C++ version <a href="https://www.moparisthebest.com/smf/index.php/topic,533409.msg3899311.html#msg3899311" data-bbcode="true" rel="nofollow noopener">here</a>) This was a really easy port.</p>
<p><span class="bbcode-b">Execution Instructions:</span></p>
<pre><code class="lang-auto">usage: MP3Sort [directory] [output] [extension]

[directory]: The directory to recursively search.
[output]: The directory to place the output.
[extension]: The extension of the audio files</code></pre>
<p><span class="bbcode-b">Source:</span></p>
<p>[tt]MP3Sort.java[/tt]</p>
<pre><code class="lang-auto">package org.t4.mp3sort;

import java.io.File;
import java.util.Iterator;
import java.util.regex.Pattern;

/**
 * Main class 
 * @author t4
 */
public class MP3Sort {

	/**
	 * Entry point
	 * @param args
	 */
	public static void main(String[] args) {
		//args = new String[] { "./test/input", "./test/output", "mp3" };
		try {
			if(args.length != 3) {
				System.out.println("Usage: src_directory out_directory file_extension");
				return;
			}			
			RecursiveFileList rfl = new RecursiveFileList(args[0], Pattern.compile(".*" + args[2].toLowerCase() + "$"));
			rfl.display();
			
			Iterator&lt;File&gt; it = rfl.iterator();
			while(it.hasNext()) {
				MP3File mp3 = new MP3File(it.next());
				File dir = new File(args[1] + "/" + mp3.getArtist() + "/" + mp3.getYear() + " - " + mp3.getAlbum());
				dir.mkdirs();				
				File dest = new File(args[1] + "/" + mp3.getArtist() + "/" + mp3.getYear() + " - " + mp3.getAlbum() + "/" + mp3.getTitle() + "." + args[2]);
				mp3.getFile().renameTo(dest);
				System.out.println("Moved '" + mp3.getFile().getCanonicalPath() + "' to " + dest.getCanonicalPath() + "'");
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

}</code></pre>
<p>[tt]RecursiveFileList.java[/tt]</p>
<pre><code class="lang-auto">package org.t4.mp3sort;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.regex.Pattern;

/**
 * Provides an object that encapsulates a recursive file listing of a directory
 * @author t4
 */
public class RecursiveFileList implements Iterable&lt;File&gt; {

	/** The pattern to look for */
	private Pattern pattern;
	
	/** The list of files */
	private List&lt;File&gt; list;
	
	/**
	 * Generates a recursive file listing of the current directory
	 * @param current
	 */
	private void generateListing(File current) {
		for(File next : current.listFiles()) {
			if(next.isDirectory()) {
				generateListing(next);
			} else if(next.isFile()) {
				if(pattern != null) {
					if(pattern.matcher(next.getName().toLowerCase()).matches()) {
						list.add(next);
					}
				} else {
					list.add(next);
				}
			}
		}
	}
	
	/**
	 * Creates a recursive file listing in which all files contain a pattern
	 * If pattern is null, all items are allowed.
	 * @param directory
	 * @param contains
	 * @throws FileNotFoundException 
	 */
	public RecursiveFileList(String directory, Pattern contains) throws FileNotFoundException {
		File rootDirectory = new File(directory);
		if(!rootDirectory.exists() || !rootDirectory.isDirectory())
			throw new FileNotFoundException();
		this.list = new LinkedList&lt;File&gt;();
		this.pattern = contains;
		generateListing(rootDirectory);
	}

	/**
	 * Gets the underlying iterator
	 * @return list.iterator()
	 */
	@Override
	public Iterator&lt;File&gt; iterator() {
		return this.list.iterator();
	}
	
	/**
	 * Displays the files added to the list
	 * @throws IOException 
	 */
	public void display() throws IOException {
		Iterator&lt;File&gt; it = list.iterator();
		while(it.hasNext()) 
			System.out.println(it.next().getCanonicalPath());
	}

}
</code></pre>
<p>[tt]MP3File.java[/tt]</p>
<pre><code class="lang-auto">package org.t4.mp3sort;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;

/**
 * Wrapper containing MP3 ID3v1 tag data
 * @author t4
 */
public class MP3File {
	
	/** Information of the track */
	private String artist, album, year, title;

	/** The underlying file */
	private File file;
	
	/**
	 * Parses the tag data
	 * @throws IOException 
	 */
	private void parseTagData() throws IOException {
		FileInputStream fis = new FileInputStream(this.file);
		byte[] buffer = new byte[128];
		fis.skip(this.file.length() - buffer.length);
		fis.read(buffer, 0, buffer.length);
		this.artist = this.album = this.year = this.title = "";
		
		for(int i = 3; i &lt; 30; ++i)
			this.title += ((char) buffer[i]);
		this.title = this.title.trim();
		
		for(int i = 33; i &lt; 63; ++i)
			this.artist += ((char) buffer[i]);
		this.artist = this.artist.trim();
		
		for(int i = 63; i &lt; 93; ++i)
			this.album += ((char) buffer[i]);
		this.album = this.album.trim();

		for(int i = 93; i &lt; 97; ++i)
			this.year += ((char) buffer[i]);
		this.year =	this.year.trim();
	    
		fis.close();
	}
	
	/**
	 * Creates a new wrapper
	 * @param file
	 * @throws IOException 
	 */
	public MP3File(File file) throws IOException {
		this.file = file;
		parseTagData();
	}

	/**
	 * Gets the artist of the track
	 * @return artist
	 */
	public String getArtist() {
		return this.artist;
	}
	
	/**
	 * Gets the album  of the track
	 * @return album
	 */
	public String getAlbum() {
		return this.album;
	}
	
	/**
	 * Gets the year of the track
	 * @return year
	 */
	public String getYear() {
		return this.year;
	}
	
	/**
	 * Gets the title of the track
	 * @return title
	 */
	public String getTitle() {
		return this.title;
	}
	
	/**
	 * Gets the file corresponding to the track
	 * @return file
	 */
	public File getFile() {
		return this.file;
	}
	
	@Override
	public String toString() {
		String str = "";
		str = this.artist + " - " + this.title + " (" + this.year + ", " + this.album + ")";
		return str;
	}
}
</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-mp3sorter/430769/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-mp3sorter/430769/1</link>
        <pubDate>Fri, 27 Jan 2012 02:43:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430769-1</guid>
        <source url="https://forum.moparisthebest.com/t/java-mp3sorter/430769.rss">[Java] mp3sorter</source>
      </item>
  </channel>
</rss>
