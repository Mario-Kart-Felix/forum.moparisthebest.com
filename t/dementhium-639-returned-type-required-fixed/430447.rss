<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[Dementhium 639] Returned type required? [Fixed]</title>
    <link>https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447</link>
    <description>My NecromancerAction.java
[code=java]package org.dementhium.model.combat.impl.npc;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import org.dementhium.content.areas.Area;
import org.dementhium.model.Item;
import org.dementhium.model.Projectile;
import org.dementhium.model.World;
import org.dementhium.model.npc.NPC;
import org.dementhium.model.combat.CombatAction;
import org.dementhium.model.combat.CombatTask;
import org.dementhium.model.combat.CombatType;
import org.dementhium.model.combat.Damage;
import org.dementhium.model.combat.Interaction;
import org.dementhium.model.combat.MagicFormulae;
import org.dementhium.model.combat.MeleeFormulae;
import org.dementhium.model.combat.RangeFormulae;
import org.dementhium.model.mask.Graphic;
import org.dementhium.model.misc.ProjectileManager;
import org.dementhium.model.misc.DamageManager.DamageType;
import org.dementhium.model.player.Equipment;
import org.dementhium.model.player.Player;

/**
 * Handles the Necromancer&#39;s combat action.
 * @author &#39;Wildking72 @Rune-Server, &#39;WildSkiller @MoparScape
 *
 */
public class Necromancer extends CombatAction {

	public static NPC npc;

	/**
	 * An enum holding the 4 different attacks data.
	 * @author &#39;Wildking72 @Rune-Server, &#39;WildSkiller @MoparScape
	 *
	 */
	private static enum Attack {
		
		/**
		 * The primary attack.
		 */
		PRIMARY(Graphic.create(-1, 96 &lt;&lt; 16), 
				Projectile.create(null, null, 1850, 30, 32, 52, 75, 3, 11), 
				Graphic.create(1851, 96 &lt;&lt; 16), new CombatTask() {
					@Override
					public boolean execute(Interaction interaction) {
						return true;
					}
				}
		),
		
		/**
		 * The shadow blitz attack.
		 */
		SHADOW(Graphic.create(-1, 96 &lt;&lt; 16), 
				Projectile.create(null, null, 380, 30, 32, 52, 75, 3, 11), 
				Graphic.create(381, 96 &lt;&lt; 16), new CombatTask() {
					@Override
					public boolean execute(Interaction interaction) {
						return true;
					}
				}
		),
		
		/**
		 * The ice blitz attack.
		 */
		ICE(Graphic.create(368, 96 &lt;&lt; 16), 
				Projectile.create(null, null, 362, 30, 32, 52, 75, 1, 11), 
				Graphic.create(367, 96 &lt;&lt; 16), new CombatTask() {
					@Override
					public boolean execute(Interaction interaction) {
						return true;
					}
				}
		),
		
		/**
		 * The blood blitz attack.
		 */
		BLOOD(Graphic.create(-1, 96 &lt;&lt; 16), 
				Projectile.create(null, null, 374, 30, 32, 52, 75, 1, 11), 
				Graphic.create(375, 96 &lt;&lt; 16), new CombatTask() {
					@Override
					public boolean execute(Interaction interaction) {
						return true;
					}
				}
		);
		
		/**
		 * The start graphic.
		 */
		private final Graphic start;
		
		/**
		 * The projectile to send.
		 */
		private final Projectile projectile;
		
		/**
		 * The end graphic.
		 */
		private final Graphic end;
		
		/**
		 * The combat task to execute.
		 */
		private final CombatTask task;
		
		/**
		 * Constructs a new {@code Attack} {@code Object}.
		 * @param start The start graphic.
		 * @param projectile The projectile to send.
		 * @param end The end graphic.
		 * @param task The combat task to execute.
		 */
		private Attack(Graphic start, Projectile projectile, Graphic end, CombatTask task) {
			this.start = start;
			this.projectile = projectile;
			this.end = end;
			this.task = task;
		}
	}
	
	/**
	 * The current combat type used.
	 */
	private CombatType type = CombatType.MAGIC;
	
	/**
	 * The current attack used.
	 */
	private Attack attack = Attack.PRIMARY;
	
	/**
	 * Constructs a new {@code NecromancerAction} {@code Object}.
	 */
	public NecromancerAction() {
		super(false);
	}

	@Override
	public boolean commenceSession() {
		attack = Attack.PRIMARY;
		interaction.getSource().getCombatExecutor().setTicks(5);
		if (interaction.getSource().getRandom().nextInt(10) &lt; 5) {
			attack = Attack.values()[interaction.getSource().getRandom().nextInt(Attack.values().length)];
		}
		if (attack == Attack.PRIMARY) {
			int arg = interaction.getSource().getRandom().nextInt(15);
			int hit;
			if (attack == Attack.ICE &amp;&amp; arg &gt; 12) {
				type = CombatType.MAGIC;
				hit = RangeFormulae.getDamage(interaction.getSource(), interaction.getVictim());
					interaction.getDamage().setMaximum(550);
					interaction.getVictim().setAttribute(&quot;freezeTime&quot;, World.getTicks() + delay);
					interaction.getVictim().setAttribute(&quot;freezeImmunity&quot;, World.getTicks() + delay + 4);
			} else if (attack == SHADOW &amp;&amp; arg &gt; 8) {
				type = CombatType.MAGIC;
				hit = MeleeFormulae.getDamage(interaction.getSource(), interaction.getVictim());
			} else if (attack == Attack.BLOOD &amp;&amp; arg &lt; 5) {
				type = CombatType.MAGIC;
				hit = RangeFormulae.getDamage(interaction.getSource(), interaction.getVictim());
				Random r = new Random();
				int heal = 50 + r.nextInt(1250);
					npc.heal(heal);
					interaction.getDamage().setMaximum(500);
			} else {
				type = CombatType.MAGIC;
				hit = MagicFormulae.getDamage(interaction.getSource().getNPC(), interaction.getVictim(), 1.0, 1.0, 1.0);
					interaction.getVictim().setAttribute(&quot;miasmicTime&quot;, World.getTicks() + 60);
					interaction.getVictim().setAttribute(&quot;miasmicImmunity&quot;, World.getTicks() + 75);
			}
			interaction.setDeflected(interaction.getVictim().getPlayer().getPrayer().usingPrayer(1, type.getDeflectCurse()));
			interaction.setDamage(Damage.getDamage(interaction.getSource(), 
					interaction.getVictim(), type, hit));
			interaction.getDamage().setMaximum(420);
		}
		ProjectileManager.sendProjectile(attack.projectile.transform(interaction.getSource(), interaction.getVictim()));
		interaction.getSource().animate(interaction.getSource().getAttackAnimation());
		interaction.getSource().graphics(attack.start);
        int ticks = (int) Math.floor(attack.projectile.getSourceLocation().distance(interaction.getVictim().getLocation()) * 0.3);
		interaction.setTicks(ticks);
		return true;
	}

	@Override
	public boolean executeSession() {
		if (interaction.getTicks() &lt; 2) {
			if (interaction.isDeflected()) {
				interaction.getVictim().graphics(2230 - type.ordinal());
			}
			interaction.getVictim().animate(interaction.isDeflected() ? 12573 : interaction.getVictim().getDefenceAnimation());
		}
		interaction.setTicks(interaction.getTicks() - 1);
		return interaction.getTicks() &lt; 1;
	}

	@Override
	public boolean endSession() {
		interaction.getVictim().graphics(attack.end);
		if (attack.task.execute(interaction) &amp;&amp; interaction.getDamage() != null) {
			if (interaction.getDamage().getHit() &gt; -1) {
				interaction.getVictim().getDamageManager().damage(
						interaction.getSource(), interaction.getDamage(), type.getDamageType());
			} else {
				interaction.getVictim().graphics(85, 96 &lt;&lt; 16);
			}
			if (interaction.getDamage().getVenged() &gt; 0) {
				interaction.getVictim().submitVengeance(interaction.getSource(), interaction.getDamage().getVenged());
			}
			if (interaction.getDamage().getDeflected() &gt; 0) {
				interaction.getSource().getDamageManager().damage(interaction.getVictim(), 
						interaction.getDamage().getDeflected(), 
						interaction.getDamage().getDeflected(), DamageType.DEFLECT);
			}
			if (interaction.getDamage().getRecoiled() &gt; 0) {
				interaction.getSource().getDamageManager().damage(interaction.getVictim(), 
						interaction.getDamage().getRecoiled(), 
						interaction.getDamage().getRecoiled(), DamageType.DEFLECT);
			}
			interaction.getVictim().retaliate(interaction.getSource());
		}
		return true;
	}

	@Override
	public CombatType getCombatType() {
		return CombatType.MAGIC;
	}
}[/code]

My error
[code]Compiling RS2Server...
src\org\dementhium\model\combat\impl\npc\NecromancerAction.java:142: error: inva
lid method declaration; return type required
        public NecromancerAction() {
               ^
1 error
Complete
Press any key to continue . . .[/code]

What is wrong with this? There isn&#39;t anything missing from the file that should be returned or delcared
[code=java]public NecromancerAction() {
		super(false);
	}[/code]</description>
    
    <lastBuildDate>Tue, 24 Jan 2012 12:41:10 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[Dementhium 639] Returned type required? [Fixed]</title>
        <dc:creator><![CDATA[@alex321 alex321]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/alex321">@alex321</a> wrote:</p>
          <blockquote>
              <p>Wild could u help me get that npc?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447/10</link>
        <pubDate>Tue, 24 Jan 2012 12:41:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430447-10</guid>
        <source url="https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447.rss">[Dementhium 639] Returned type required? [Fixed]</source>
      </item>
      <item>
        <title>[Dementhium 639] Returned type required? [Fixed]</title>
        <dc:creator><![CDATA[@wildskiller wildskiller]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wildskiller">@wildskiller</a> wrote:</p>
          <blockquote>
              <p>Everything you guys tell me gives me the same error</p>
<p>Ok I have fixed it</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447/9</link>
        <pubDate>Tue, 24 Jan 2012 03:49:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430447-9</guid>
        <source url="https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447.rss">[Dementhium 639] Returned type required? [Fixed]</source>
      </item>
      <item>
        <title>[Dementhium 639] Returned type required? [Fixed]</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <p>[quote=“AtomicInt_, post:5, topic:430447”]No riip, it’s supposed to be a constructor.</p>
<p><code>
return this;
</code>[/quote]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447/8</link>
        <pubDate>Tue, 24 Jan 2012 03:48:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430447-8</guid>
        <source url="https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447.rss">[Dementhium 639] Returned type required? [Fixed]</source>
      </item>
      <item>
        <title>[Dementhium 639] Returned type required? [Fixed]</title>
        <dc:creator><![CDATA[@RiiPiiNFtW RiiPiiNFtW]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/riipiinftw">@RiiPiiNFtW</a> wrote:</p>
          <blockquote>
              <p>[quote=“wildskiller, post:6, topic:430447”]I’m not making a new method[/quote]You woulden’t be making a new method, but you need to just define it I believe. Don’t listen to me though. IBSTUPID. Listen to That dood buv jew</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447/7</link>
        <pubDate>Tue, 24 Jan 2012 03:47:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430447-7</guid>
        <source url="https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447.rss">[Dementhium 639] Returned type required? [Fixed]</source>
      </item>
      <item>
        <title>[Dementhium 639] Returned type required? [Fixed]</title>
        <dc:creator><![CDATA[@wildskiller wildskiller]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wildskiller">@wildskiller</a> wrote:</p>
          <blockquote>
              <p>I’m not making a new method<br>
I’ve also made this and It’s got almost the same things but less. Nothing should be effecting it</p>
<p>[code=java]package org.dementhium.model.combat.impl.npc;</p>
<p>import java.util.ArrayList;<br>
import java.util.List;<br>
import java.util.Random;</p>
<p>import org.dementhium.content.areas.Area;<br>
import org.dementhium.model.Item;<br>
import org.dementhium.model.Projectile;<br>
import org.dementhium.model.World;<br>
import org.dementhium.model.npc.NPC;<br>
import org.dementhium.model.combat.CombatAction;<br>
import org.dementhium.model.combat.CombatTask;<br>
import org.dementhium.model.combat.CombatType;<br>
import org.dementhium.model.combat.Damage;<br>
import org.dementhium.model.combat.Interaction;<br>
import org.dementhium.model.combat.MagicFormulae;<br>
import org.dementhium.model.combat.MeleeFormulae;<br>
import org.dementhium.model.combat.RangeFormulae;<br>
import org.dementhium.model.mask.Graphic;<br>
import org.dementhium.model.misc.ProjectileManager;<br>
import org.dementhium.model.misc.DamageManager.DamageType;<br>
import org.dementhium.model.player.Equipment;<br>
import org.dementhium.model.player.Player;</p>
<p>/**</p>
<ul>
<li>Handles the chaos elemental’s combat action.</li>
<li>
<span class="mention">@author</span> Emperor</li>
<li>
</li>
</ul>
<p>*/<br>
public class NecroLordAction extends CombatAction {</p>
<pre><code>public static NPC npc;

/**
 * An enum holding the 3 different attacks data.
 * @author Emperor
 *
 */
private static enum Attack {
	
	/**
	 * The default attack.
	 */
	PRIMARY(Graphic.create(2449, 96 &lt;&lt; 16), 
			Projectile.create(null, null, 2450, 30, 32, 52, 75, 3, 11), 
			Graphic.create(2451, 96 &lt;&lt; 16), new CombatTask() {
				@Override
				public boolean execute(Interaction interaction) {
					return true;
				}
			}
	),
	
	/**
	 * The teleporting attack.
	 */
	ORB(Graphic.create(2435, 96 &lt;&lt; 16), 
			Projectile.create(null, null, 2668, 30, 32, 52, 75, 3, 11), 
			Graphic.create(2436, 96 &lt;&lt; 16), new CombatTask() {
				@Override
				public boolean execute(Interaction interaction) {
					return true;
				}
			}
	),
	
	/**
	 * The disarming attack.
	 */
	GHOST(Graphic.create(2650, 96 &lt;&lt; 16), 
			Projectile.create(null, null, 2651, 30, 32, 52, 75, 1, 11), 
			Graphic.create(2652, 96 &lt;&lt; 16), new CombatTask() {
				@Override
				public boolean execute(Interaction interaction) {
					return true;
				}
			}
	);
	
	/**
	 * The start graphic.
	 */
	private final Graphic start;
	
	/**
	 * The projectile to send.
	 */
	private final Projectile projectile;
	
	/**
	 * The end graphic.
	 */
	private final Graphic end;
	
	/**
	 * The combat task to execute.
	 */
	private final CombatTask task;
	
	/**
	 * Constructs a new {@code Attack} {@code Object}.
	 * @param start The start graphic.
	 * @param projectile The projectile to send.
	 * @param end The end graphic.
	 * @param task The combat task to execute.
	 */
	private Attack(Graphic start, Projectile projectile, Graphic end, CombatTask task) {
		this.start = start;
		this.projectile = projectile;
		this.end = end;
		this.task = task;
	}
}

/**
 * The current combat type used.
 */
private CombatType type = CombatType.MAGIC;

/**
 * The current attack used.
 */
private Attack attack = Attack.PRIMARY;

/**
 * Constructs a new {@code NecroLordAction} {@code Object}.
 */
public NecroLordAction() {
	super(false);
}

@Override
public boolean commenceSession() {
	attack = Attack.PRIMARY;
	interaction.getSource().getCombatExecutor().setTicks(5);
	if (interaction.getSource().getRandom().nextInt(10) &lt; 5) {
		attack = Attack.values()[interaction.getSource().getRandom().nextInt(Attack.values().length)];
	}
	if (attack == Attack.PRIMARY || attack == Attack.GHOST || attack == Attack.ORB) {
		int arg = interaction.getSource().getRandom().nextInt(10);
		int hit;
		if (attack == Attack.GHOST &amp;&amp; arg &gt; 7) {
			type = CombatType.MELEE;
			hit = RangeFormulae.getDamage(interaction.getSource(), interaction.getVictim());
			Random r = new Random();
			int heal = 50 + r.nextInt(1250);
			npc.heal(heal);
		} else if (attack == Attack.ORB &amp;&amp; arg &lt; 3) {
			type = CombatType.RANGE;
			hit = MeleeFormulae.getDamage(interaction.getSource(), interaction.getVictim());
		} else {
			type = CombatType.MAGIC;
			hit = MagicFormulae.getDamage(interaction.getSource().getNPC(), interaction.getVictim(), 1.0, 1.0, 1.0);
		}
		interaction.setDeflected(interaction.getVictim().getPlayer().getPrayer().usingPrayer(1, type.getDeflectCurse()));
		interaction.setDamage(Damage.getDamage(interaction.getSource(), 
				interaction.getVictim(), type, hit));
		interaction.getDamage().setMaximum(687);
	}
	ProjectileManager.sendProjectile(attack.projectile.transform(interaction.getSource(), interaction.getVictim()));
	interaction.getSource().animate(interaction.getSource().getAttackAnimation());
	interaction.getSource().graphics(attack.start);
    int ticks = (int) Math.floor(attack.projectile.getSourceLocation().distance(interaction.getVictim().getLocation()) * 0.3);
	interaction.setTicks(ticks);
	return true;
}

@Override
public boolean executeSession() {
	if (interaction.getTicks() &lt; 2) {
		if (interaction.isDeflected()) {
			interaction.getVictim().graphics(2230 - type.ordinal());
		}
		interaction.getVictim().animate(interaction.isDeflected() ? 12573 : interaction.getVictim().getDefenceAnimation());
	}
	interaction.setTicks(interaction.getTicks() - 1);
	return interaction.getTicks() &lt; 1;
}

@Override
public boolean endSession() {
	interaction.getVictim().graphics(attack.end);
	if (attack.task.execute(interaction) &amp;&amp; interaction.getDamage() != null) {
		if (interaction.getDamage().getHit() &gt; -1) {
			interaction.getVictim().getDamageManager().damage(
					interaction.getSource(), interaction.getDamage(), type.getDamageType());
		} else {
			interaction.getVictim().graphics(85, 96 &lt;&lt; 16);
		}
		if (interaction.getDamage().getVenged() &gt; 0) {
			interaction.getVictim().submitVengeance(interaction.getSource(), interaction.getDamage().getVenged());
		}
		if (interaction.getDamage().getDeflected() &gt; 0) {
			interaction.getSource().getDamageManager().damage(interaction.getVictim(), 
					interaction.getDamage().getDeflected(), 
					interaction.getDamage().getDeflected(), DamageType.DEFLECT);
		}
		if (interaction.getDamage().getRecoiled() &gt; 0) {
			interaction.getSource().getDamageManager().damage(interaction.getVictim(), 
					interaction.getDamage().getRecoiled(), 
					interaction.getDamage().getRecoiled(), DamageType.DEFLECT);
		}
		interaction.getVictim().retaliate(interaction.getSource());
	}
	return true;
}

@Override
public CombatType getCombatType() {
	return CombatType.MAGIC;
}
</code></pre>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447/6</link>
        <pubDate>Tue, 24 Jan 2012 03:46:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430447-6</guid>
        <source url="https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447.rss">[Dementhium 639] Returned type required? [Fixed]</source>
      </item>
      <item>
        <title>[Dementhium 639] Returned type required? [Fixed]</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <p>No riip, it’s supposed to be a constructor.</p>
<pre><code class="lang-auto">return this;</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447/5</link>
        <pubDate>Tue, 24 Jan 2012 03:45:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430447-5</guid>
        <source url="https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447.rss">[Dementhium 639] Returned type required? [Fixed]</source>
      </item>
      <item>
        <title>[Dementhium 639] Returned type required? [Fixed]</title>
        <dc:creator><![CDATA[@RiiPiiNFtW RiiPiiNFtW]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/riipiinftw">@RiiPiiNFtW</a> wrote:</p>
          <blockquote>
              <p>OH! <code>public void necromancerAction() {
super(false);
}</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447/4</link>
        <pubDate>Tue, 24 Jan 2012 03:45:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430447-4</guid>
        <source url="https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447.rss">[Dementhium 639] Returned type required? [Fixed]</source>
      </item>
      <item>
        <title>[Dementhium 639] Returned type required? [Fixed]</title>
        <dc:creator><![CDATA[@wildskiller wildskiller]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wildskiller">@wildskiller</a> wrote:</p>
          <blockquote>
              <p>same error</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447/3</link>
        <pubDate>Tue, 24 Jan 2012 03:43:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430447-3</guid>
        <source url="https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447.rss">[Dementhium 639] Returned type required? [Fixed]</source>
      </item>
      <item>
        <title>[Dementhium 639] Returned type required? [Fixed]</title>
        <dc:creator><![CDATA[@RiiPiiNFtW RiiPiiNFtW]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/riipiinftw">@RiiPiiNFtW</a> wrote:</p>
          <blockquote>
              <p>Make it <code>public necromancerAction() {
super(false);
return;
}</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447/2</link>
        <pubDate>Tue, 24 Jan 2012 03:41:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430447-2</guid>
        <source url="https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447.rss">[Dementhium 639] Returned type required? [Fixed]</source>
      </item>
      <item>
        <title>[Dementhium 639] Returned type required? [Fixed]</title>
        <dc:creator><![CDATA[@wildskiller wildskiller]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wildskiller">@wildskiller</a> wrote:</p>
          <blockquote>
              <p>My NecromancerAction.java</p>
<p>[code=java]package org.dementhium.model.combat.impl.npc;</p>
<p>import java.util.ArrayList;<br>
import java.util.List;<br>
import java.util.Random;</p>
<p>import org.dementhium.content.areas.Area;<br>
import org.dementhium.model.Item;<br>
import org.dementhium.model.Projectile;<br>
import org.dementhium.model.World;<br>
import org.dementhium.model.npc.NPC;<br>
import org.dementhium.model.combat.CombatAction;<br>
import org.dementhium.model.combat.CombatTask;<br>
import org.dementhium.model.combat.CombatType;<br>
import org.dementhium.model.combat.Damage;<br>
import org.dementhium.model.combat.Interaction;<br>
import org.dementhium.model.combat.MagicFormulae;<br>
import org.dementhium.model.combat.MeleeFormulae;<br>
import org.dementhium.model.combat.RangeFormulae;<br>
import org.dementhium.model.mask.Graphic;<br>
import org.dementhium.model.misc.ProjectileManager;<br>
import org.dementhium.model.misc.DamageManager.DamageType;<br>
import org.dementhium.model.player.Equipment;<br>
import org.dementhium.model.player.Player;</p>
<p>/**</p>
<ul>
<li>Handles the Necromancer’s combat action.</li>
<li>
<span class="mention">@author</span> 'Wildking72 <span class="mention">@Rune-Server</span>, 'WildSkiller <a class="mention" href="/u/moparscape">@MoparScape</a>
</li>
<li>
</li>
</ul>
<p>*/<br>
public class Necromancer extends CombatAction {</p>
<pre><code>public static NPC npc;

/**
 * An enum holding the 4 different attacks data.
 * @author 'Wildking72 @Rune-Server, 'WildSkiller @MoparScape
 *
 */
private static enum Attack {
	
	/**
	 * The primary attack.
	 */
	PRIMARY(Graphic.create(-1, 96 &lt;&lt; 16), 
			Projectile.create(null, null, 1850, 30, 32, 52, 75, 3, 11), 
			Graphic.create(1851, 96 &lt;&lt; 16), new CombatTask() {
				@Override
				public boolean execute(Interaction interaction) {
					return true;
				}
			}
	),
	
	/**
	 * The shadow blitz attack.
	 */
	SHADOW(Graphic.create(-1, 96 &lt;&lt; 16), 
			Projectile.create(null, null, 380, 30, 32, 52, 75, 3, 11), 
			Graphic.create(381, 96 &lt;&lt; 16), new CombatTask() {
				@Override
				public boolean execute(Interaction interaction) {
					return true;
				}
			}
	),
	
	/**
	 * The ice blitz attack.
	 */
	ICE(Graphic.create(368, 96 &lt;&lt; 16), 
			Projectile.create(null, null, 362, 30, 32, 52, 75, 1, 11), 
			Graphic.create(367, 96 &lt;&lt; 16), new CombatTask() {
				@Override
				public boolean execute(Interaction interaction) {
					return true;
				}
			}
	),
	
	/**
	 * The blood blitz attack.
	 */
	BLOOD(Graphic.create(-1, 96 &lt;&lt; 16), 
			Projectile.create(null, null, 374, 30, 32, 52, 75, 1, 11), 
			Graphic.create(375, 96 &lt;&lt; 16), new CombatTask() {
				@Override
				public boolean execute(Interaction interaction) {
					return true;
				}
			}
	);
	
	/**
	 * The start graphic.
	 */
	private final Graphic start;
	
	/**
	 * The projectile to send.
	 */
	private final Projectile projectile;
	
	/**
	 * The end graphic.
	 */
	private final Graphic end;
	
	/**
	 * The combat task to execute.
	 */
	private final CombatTask task;
	
	/**
	 * Constructs a new {@code Attack} {@code Object}.
	 * @param start The start graphic.
	 * @param projectile The projectile to send.
	 * @param end The end graphic.
	 * @param task The combat task to execute.
	 */
	private Attack(Graphic start, Projectile projectile, Graphic end, CombatTask task) {
		this.start = start;
		this.projectile = projectile;
		this.end = end;
		this.task = task;
	}
}

/**
 * The current combat type used.
 */
private CombatType type = CombatType.MAGIC;

/**
 * The current attack used.
 */
private Attack attack = Attack.PRIMARY;

/**
 * Constructs a new {@code NecromancerAction} {@code Object}.
 */
public NecromancerAction() {
	super(false);
}

@Override
public boolean commenceSession() {
	attack = Attack.PRIMARY;
	interaction.getSource().getCombatExecutor().setTicks(5);
	if (interaction.getSource().getRandom().nextInt(10) &lt; 5) {
		attack = Attack.values()[interaction.getSource().getRandom().nextInt(Attack.values().length)];
	}
	if (attack == Attack.PRIMARY) {
		int arg = interaction.getSource().getRandom().nextInt(15);
		int hit;
		if (attack == Attack.ICE &amp;&amp; arg &gt; 12) {
			type = CombatType.MAGIC;
			hit = RangeFormulae.getDamage(interaction.getSource(), interaction.getVictim());
				interaction.getDamage().setMaximum(550);
				interaction.getVictim().setAttribute("freezeTime", World.getTicks() + delay);
				interaction.getVictim().setAttribute("freezeImmunity", World.getTicks() + delay + 4);
		} else if (attack == SHADOW &amp;&amp; arg &gt; 8) {
			type = CombatType.MAGIC;
			hit = MeleeFormulae.getDamage(interaction.getSource(), interaction.getVictim());
		} else if (attack == Attack.BLOOD &amp;&amp; arg &lt; 5) {
			type = CombatType.MAGIC;
			hit = RangeFormulae.getDamage(interaction.getSource(), interaction.getVictim());
			Random r = new Random();
			int heal = 50 + r.nextInt(1250);
				npc.heal(heal);
				interaction.getDamage().setMaximum(500);
		} else {
			type = CombatType.MAGIC;
			hit = MagicFormulae.getDamage(interaction.getSource().getNPC(), interaction.getVictim(), 1.0, 1.0, 1.0);
				interaction.getVictim().setAttribute("miasmicTime", World.getTicks() + 60);
				interaction.getVictim().setAttribute("miasmicImmunity", World.getTicks() + 75);
		}
		interaction.setDeflected(interaction.getVictim().getPlayer().getPrayer().usingPrayer(1, type.getDeflectCurse()));
		interaction.setDamage(Damage.getDamage(interaction.getSource(), 
				interaction.getVictim(), type, hit));
		interaction.getDamage().setMaximum(420);
	}
	ProjectileManager.sendProjectile(attack.projectile.transform(interaction.getSource(), interaction.getVictim()));
	interaction.getSource().animate(interaction.getSource().getAttackAnimation());
	interaction.getSource().graphics(attack.start);
    int ticks = (int) Math.floor(attack.projectile.getSourceLocation().distance(interaction.getVictim().getLocation()) * 0.3);
	interaction.setTicks(ticks);
	return true;
}

@Override
public boolean executeSession() {
	if (interaction.getTicks() &lt; 2) {
		if (interaction.isDeflected()) {
			interaction.getVictim().graphics(2230 - type.ordinal());
		}
		interaction.getVictim().animate(interaction.isDeflected() ? 12573 : interaction.getVictim().getDefenceAnimation());
	}
	interaction.setTicks(interaction.getTicks() - 1);
	return interaction.getTicks() &lt; 1;
}

@Override
public boolean endSession() {
	interaction.getVictim().graphics(attack.end);
	if (attack.task.execute(interaction) &amp;&amp; interaction.getDamage() != null) {
		if (interaction.getDamage().getHit() &gt; -1) {
			interaction.getVictim().getDamageManager().damage(
					interaction.getSource(), interaction.getDamage(), type.getDamageType());
		} else {
			interaction.getVictim().graphics(85, 96 &lt;&lt; 16);
		}
		if (interaction.getDamage().getVenged() &gt; 0) {
			interaction.getVictim().submitVengeance(interaction.getSource(), interaction.getDamage().getVenged());
		}
		if (interaction.getDamage().getDeflected() &gt; 0) {
			interaction.getSource().getDamageManager().damage(interaction.getVictim(), 
					interaction.getDamage().getDeflected(), 
					interaction.getDamage().getDeflected(), DamageType.DEFLECT);
		}
		if (interaction.getDamage().getRecoiled() &gt; 0) {
			interaction.getSource().getDamageManager().damage(interaction.getVictim(), 
					interaction.getDamage().getRecoiled(), 
					interaction.getDamage().getRecoiled(), DamageType.DEFLECT);
		}
		interaction.getVictim().retaliate(interaction.getSource());
	}
	return true;
}

@Override
public CombatType getCombatType() {
	return CombatType.MAGIC;
}
</code></pre>
<p>}[/code]</p>
<p>My error</p>
<p><code>Compiling RS2Server...
src\org\dementhium\model\combat\impl\npc\NecromancerAction.java:142: error: inva
lid method declaration; return type required
        public NecromancerAction() {
               ^
1 error
Complete
Press any key to continue . . .</code></p>
<p>What is wrong with this? There isn’t anything missing from the file that should be returned or delcared</p>
<p><code>public NecromancerAction() {
		super(false);
	}</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447/1</link>
        <pubDate>Tue, 24 Jan 2012 03:21:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430447-1</guid>
        <source url="https://forum.moparisthebest.com/t/dementhium-639-returned-type-required-fixed/430447.rss">[Dementhium 639] Returned type required? [Fixed]</source>
      </item>
  </channel>
</rss>
