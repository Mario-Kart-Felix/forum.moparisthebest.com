<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[C++] Asteroids Coursework w/ OpenGL</title>
    <link>https://forum.moparisthebest.com/t/c-asteroids-coursework-w-opengl/430505</link>
    <description>

[code=cpp]#include &quot;shared/gltools.h&quot;
#include &lt;time.h&gt;
#include &lt;math.h&gt;
#include &lt;iostream&gt;
#include &lt;sstream&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;




using namespace std;

float X_CENTRE = 0.0;
float Y_CENTRE = 0.0;
float rot = 0.0;
float AsteroidX[6];
float AsteroidY[6];
float StarX[250];
float StarY[250];
float angle = 0;
float bulletAngle = 0;
bool fired = false;
float BulletLocX = 0.0;
float BulletLocY = 0.0;
bool collision = false;
bool deathcount[6];
float killed = 0.0;
bool stardrawn = false;
float score = 0.0;
char ascore [6];

void drawship()
{

	glColor3f(1, 1, 1);
	glLoadIdentity(); 
	glRotatef(angle,0.0,0.0,1.0);
   glBegin(GL_POLYGON);
      glVertex2f( X_CENTRE, Y_CENTRE + 5);
      glVertex2f( X_CENTRE + 5, Y_CENTRE - 9);
      glVertex2f( X_CENTRE, Y_CENTRE -2);
      glVertex2f( X_CENTRE -5, -9);
   glEnd();
   glFlush();

  
}
void XYrand()
{
	for(int i = 0; i &lt; 6; i++){
	float k = rand() % 200;
	k = k - 100;
	if(k &lt; -90){
		k = -90;
	}
	if(k &gt; 90){
		k = 90;
	}
	AsteroidX[i] = k;
 }
for(int i = 0; i &lt; 6; i++){
	float z = rand() % 200;
	z = z - 100;
	if(z &lt; -90){
		z = -90;
	}
	if(z &gt; 90){
		z = 90;
	}
	AsteroidY[i] = z;
    }
 }
void drawAsteroid()
{
glColor3f(0.45, 0.2, 0.0);
glLoadIdentity();
for(int i = 0; i &lt; 6; i++){
	if(deathcount[i]){
	glBegin(GL_POLYGON);
	glVertex2f(AsteroidX[i] + 9,AsteroidY[i]);
	glVertex2f(AsteroidX[i], AsteroidY[i] - 9);
	glVertex2f(AsteroidX[i] - 9, AsteroidY[i]);
	glVertex2f(AsteroidX[i], AsteroidY[i] + 9);
	glEnd();
	}
 }
glFlush();
}
void drawBullet()
{
	glLoadIdentity();
	glColor3f(1, 0, 0);
	glPointSize(3.0);
	glBegin(GL_POINTS);
	glVertex2f(BulletLocX, BulletLocY);
	glEnd();
	glFlush();
}
void StarInit()
{
	for(int i = 0; i&lt; 250; i++){
		float k = rand() % 200;
		k = k - 100;
		StarX[i] = k;
		float j = rand() % 200;
		j = j - 100;
		StarY[i] = j;
	}


}
void drawStar()
{
	glLoadIdentity();
	for(int i = 0; i &lt; 250; i++){
		glBegin(GL_POINTS);
		glVertex2f(StarX[i],StarY[i]);
		glEnd();
		stardrawn = true;
	}
	glFlush();
}
void starPath()
{
	for(int i = 0; i &lt; 250; i++){
		StarY[i] = StarY[i] - 0.55;
		if(StarY[i] &lt; -100){
			StarY[i] = 100;
			StarX[i] = rand() % 200;
			StarX[i] = StarX[i] - 100;
		}
	}
}
void renderBitmapString( float x,  float y, float z,void *font, char *string) {  
    char *c;
    glRasterPos3f(x, y,z);
    for (c=string; *c != &#39;\0&#39;; c++) {
        glutBitmapCharacter(font, *c);
    }
}
void drawScore()
{

	sprintf(ascore,&quot;Score: %f&quot;,score);

	glLoadIdentity();
	
}



void keyinput(int key, int x, int y)
{
	switch(key){

	case GLUT_KEY_LEFT:
		angle = angle + 5;;
		break;
	case GLUT_KEY_RIGHT:
		angle = angle - 5;
		break;
	}
}

void shoot(unsigned char key,int x, int y){
	switch(key){
	case 32:
		if(fired != true){
		bulletAngle = angle +90;
		bulletAngle = (bulletAngle * 3.142)/180;
		}
	  fired = true;
	break;
	}
}

void bulletPath(){
	BulletLocX = BulletLocX + (5*cos(bulletAngle)/10);
	glutPostRedisplay();
	BulletLocY = BulletLocY + (5*sin(bulletAngle)/10);
	glutPostRedisplay();
}

void CollisionTest()
{
	for(int i = 0; i &lt; 6; i++){
		if(deathcount[i])
		{
		int j = AsteroidX[i] - BulletLocX;
		int k = AsteroidY[i] - BulletLocY;
		if((k &lt; 9 &amp;&amp; k &gt; -9)&amp;&amp;(j &lt; 9 &amp;&amp; j &gt; -9))
		{
			collision = true;
			deathcount[i] = false;
			AsteroidX[i] = 200;
			AsteroidY[i] = 200;
			killed++;
			score++;
			break;
	    }
		}

}
}

void reshape(int width, int height)
{
   glMatrixMode(GL_PROJECTION);
   glViewport(0, 0, width, height);
   glOrtho(-100, 100, -100, 100, -100.0, 100.0);
   glMatrixMode(GL_MODELVIEW);
}



void display(void)
{  
   glClear (GL_COLOR_BUFFER_BIT);
   glClearColor(0.0, 0.0, 0.0, 1.0);
   glPointSize(1.0);
   drawStar();
   starPath();
   drawBullet();
   drawAsteroid();
   drawship();
   drawScore();
   if (fired)
   {
	   bulletPath();
   }
   CollisionTest();
   if(BulletLocX &gt; 100.0 || BulletLocX &lt; -100.0 || BulletLocY &gt; 100.0 || BulletLocY &lt; -100.0 || collision == true)
   {
	   collision = false;
	   fired = false;
	   BulletLocX = X_CENTRE;
	   BulletLocY = Y_CENTRE;
   }
   if(killed == 6){
	   for(int i = 0; i &lt; 6; i++){
		   deathcount[i] = true;
		   killed = 0;
		   XYrand();
		   drawAsteroid();
	   }
   }
   renderBitmapString( -90,90,0.0,GLUT_BITMAP_HELVETICA_12,ascore);
   glutSwapBuffers();
}



void init(void)
{
	srand((unsigned)time(0));
	XYrand();
	StarInit();

for(int i = 0; i &lt; 6; i++){
	deathcount[i] = true;
}
   glClearColor (0.0, 0.0, 0.0, 0.0);   
}


int main(int argc, char** argv)
{

   glutInit(&amp;argc, argv);

   glutInitDisplayMode (GLUT_DOUBLE | GLUT_RGB | GLUT_DEPTH);
   glutInitWindowSize (400, 400);
   glutInitWindowPosition (100, 100);
   glutCreateWindow (&quot;Asteroids&quot;);
   
   init();
   glutDisplayFunc(display);
   glutSpecialFunc(keyinput);
   glutKeyboardFunc(shoot);
   glutReshapeFunc(reshape);
   glutIdleFunc(display);
   glutMainLoop();
   return 0;
}[/code]


i know its pretty wank but ya that was my coursework sub</description>
    
    <lastBuildDate>Thu, 01 Mar 2012 14:38:21 +0000</lastBuildDate>
    <category>Game Development</category>
    <atom:link href="https://forum.moparisthebest.com/t/c-asteroids-coursework-w-opengl/430505.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[C++] Asteroids Coursework w/ OpenGL</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <p>Try to avoid the older opengl resources, too. There aren’t a lot out on opengl 2.0 and later (other than GPU gems), despite it having existed for several years now. Switching over to opengl 2.0 ensures you’ll be able to port your game to opengl|es 2.0 if you ever want to go portable someday, too.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-asteroids-coursework-w-opengl/430505/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-asteroids-coursework-w-opengl/430505/7</link>
        <pubDate>Thu, 01 Mar 2012 14:38:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430505-7</guid>
        <source url="https://forum.moparisthebest.com/t/c-asteroids-coursework-w-opengl/430505.rss">[C++] Asteroids Coursework w/ OpenGL</source>
      </item>
      <item>
        <title>[C++] Asteroids Coursework w/ OpenGL</title>
        <dc:creator><![CDATA[@sanga282 sanga282]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sanga282">@sanga282</a> wrote:</p>
          <blockquote>
              <p>[quote=“Moparisthebest, post:5, topic:430505”]You should probably say you need these files to compile:<br>
<a href="http://www.opengl.org/sdk/docs/books/SuperBible/" class="onebox" target="_blank" rel="nofollow noopener">http://www.opengl.org/sdk/docs/books/SuperBible/</a><br>
(took me forever to find them :P)</p>
<p>Got it compiling for amd64 Linux with a few minor changes, one to your code, one to the library.  Are the stars supposed to move fast, and the ship and asteroids not move or split into smaller ones? :)[/quote]<br>
yeah i didnt include those, I’ll whack up a workable one, also eyah in the original one yeah but for the spec we were given that was all we had to do, I was going to do that but there was little need, if I fancy doing more I may do (hence why i dunno it was moved to dev section!) but the stars moving is because i didnt use a time function to control their movement over time instead of just whenever the cycle is executed so it varies from pc to pc afaik</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-asteroids-coursework-w-opengl/430505/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-asteroids-coursework-w-opengl/430505/6</link>
        <pubDate>Thu, 26 Jan 2012 15:19:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430505-6</guid>
        <source url="https://forum.moparisthebest.com/t/c-asteroids-coursework-w-opengl/430505.rss">[C++] Asteroids Coursework w/ OpenGL</source>
      </item>
      <item>
        <title>[C++] Asteroids Coursework w/ OpenGL</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>You should probably say you need these files to compile:<br>
<a href="http://www.opengl.org/sdk/docs/books/SuperBible/" class="onebox" target="_blank">http://www.opengl.org/sdk/docs/books/SuperBible/</a><br>
(took me forever to find them :P)</p>
<p>Got it compiling for amd64 Linux with a few minor changes, one to your code, one to the library.  Are the stars supposed to move fast, and the ship and asteroids not move or split into smaller ones? <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-asteroids-coursework-w-opengl/430505/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-asteroids-coursework-w-opengl/430505/5</link>
        <pubDate>Wed, 25 Jan 2012 17:05:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430505-5</guid>
        <source url="https://forum.moparisthebest.com/t/c-asteroids-coursework-w-opengl/430505.rss">[C++] Asteroids Coursework w/ OpenGL</source>
      </item>
      <item>
        <title>[C++] Asteroids Coursework w/ OpenGL</title>
        <dc:creator><![CDATA[@sanga282 sanga282]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sanga282">@sanga282</a> wrote:</p>
          <blockquote>
              <p>[quote=“Taharok, post:3, topic:430505”]You really shouldn’t be using the fixed pipeline. It’s older than a lot of the people registered here. <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"> You should be using vertex buffer objects, etc.</p>
<p>You should provide an executable for us, though, so we can try it out. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>I’m also moving this to the game dev site, since it’s considered a game.[/quote]<br>
originally i wasnt going to update it but you do raise an interesting point mayhaps i’ll try that and ya i’ll post one later when im home<br>
ps i avoided gamedev site for ages !</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-asteroids-coursework-w-opengl/430505/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-asteroids-coursework-w-opengl/430505/4</link>
        <pubDate>Wed, 25 Jan 2012 11:09:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430505-4</guid>
        <source url="https://forum.moparisthebest.com/t/c-asteroids-coursework-w-opengl/430505.rss">[C++] Asteroids Coursework w/ OpenGL</source>
      </item>
      <item>
        <title>[C++] Asteroids Coursework w/ OpenGL</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <p>You really shouldn’t be using the fixed pipeline. It’s older than a lot of the people registered here. <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"> You should be using vertex buffer objects, etc.</p>
<p>You should provide an executable for us, though, so we can try it out. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>I’m also moving this to the game dev site, since it’s considered a game.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-asteroids-coursework-w-opengl/430505/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-asteroids-coursework-w-opengl/430505/3</link>
        <pubDate>Tue, 24 Jan 2012 23:41:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430505-3</guid>
        <source url="https://forum.moparisthebest.com/t/c-asteroids-coursework-w-opengl/430505.rss">[C++] Asteroids Coursework w/ OpenGL</source>
      </item>
      <item>
        <title>[C++] Asteroids Coursework w/ OpenGL</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <p>ew.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-asteroids-coursework-w-opengl/430505/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-asteroids-coursework-w-opengl/430505/2</link>
        <pubDate>Tue, 24 Jan 2012 22:59:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430505-2</guid>
        <source url="https://forum.moparisthebest.com/t/c-asteroids-coursework-w-opengl/430505.rss">[C++] Asteroids Coursework w/ OpenGL</source>
      </item>
      <item>
        <title>[C++] Asteroids Coursework w/ OpenGL</title>
        <dc:creator><![CDATA[@sanga282 sanga282]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sanga282">@sanga282</a> wrote:</p>
          <blockquote>
              <p>[code=cpp]<span class="hashtag">#include</span> “shared/gltools.h”<br>
<span class="hashtag">#include</span> &lt;time.h&gt;<br>
<span class="hashtag">#include</span> &lt;math.h&gt;<br>
<span class="hashtag">#include</span> <br>
<span class="hashtag">#include</span> <br>
<span class="hashtag">#include</span> <br>
<span class="hashtag">#include</span> </p>
<p>using namespace std;</p>
<p>float X_CENTRE = 0.0;<br>
float Y_CENTRE = 0.0;<br>
float rot = 0.0;<br>
float AsteroidX[6];<br>
float AsteroidY[6];<br>
float StarX[250];<br>
float StarY[250];<br>
float angle = 0;<br>
float bulletAngle = 0;<br>
bool fired = false;<br>
float BulletLocX = 0.0;<br>
float BulletLocY = 0.0;<br>
bool collision = false;<br>
bool deathcount[6];<br>
float killed = 0.0;<br>
bool stardrawn = false;<br>
float score = 0.0;<br>
char ascore [6];</p>
<p>void drawship()<br>
{</p>
<pre><code>glColor3f(1, 1, 1);
glLoadIdentity(); 
glRotatef(angle,0.0,0.0,1.0);
</code></pre>
<p>glBegin(GL_POLYGON);<br>
glVertex2f( X_CENTRE, Y_CENTRE + 5);<br>
glVertex2f( X_CENTRE + 5, Y_CENTRE - 9);<br>
glVertex2f( X_CENTRE, Y_CENTRE -2);<br>
glVertex2f( X_CENTRE -5, -9);<br>
glEnd();<br>
glFlush();</p>
<p>}<br>
void XYrand()<br>
{<br>
for(int i = 0; i &lt; 6; i++){<br>
float k = rand() % 200;<br>
k = k - 100;<br>
if(k &lt; -90){<br>
k = -90;<br>
}<br>
if(k &gt; 90){<br>
k = 90;<br>
}<br>
AsteroidX[i] = k;<br>
}<br>
for(int i = 0; i &lt; 6; i++){<br>
float z = rand() % 200;<br>
z = z - 100;<br>
if(z &lt; -90){<br>
z = -90;<br>
}<br>
if(z &gt; 90){<br>
z = 90;<br>
}<br>
AsteroidY[i] = z;<br>
}<br>
}<br>
void drawAsteroid()<br>
{<br>
glColor3f(0.45, 0.2, 0.0);<br>
glLoadIdentity();<br>
for(int i = 0; i &lt; 6; i++){<br>
if(deathcount[i]){<br>
glBegin(GL_POLYGON);<br>
glVertex2f(AsteroidX[i] + 9,AsteroidY[i]);<br>
glVertex2f(AsteroidX[i], AsteroidY[i] - 9);<br>
glVertex2f(AsteroidX[i] - 9, AsteroidY[i]);<br>
glVertex2f(AsteroidX[i], AsteroidY[i] + 9);<br>
glEnd();<br>
}<br>
}<br>
glFlush();<br>
}<br>
void drawBullet()<br>
{<br>
glLoadIdentity();<br>
glColor3f(1, 0, 0);<br>
glPointSize(3.0);<br>
glBegin(GL_POINTS);<br>
glVertex2f(BulletLocX, BulletLocY);<br>
glEnd();<br>
glFlush();<br>
}<br>
void StarInit()<br>
{<br>
for(int i = 0; i&lt; 250; i++){<br>
float k = rand() % 200;<br>
k = k - 100;<br>
StarX[i] = k;<br>
float j = rand() % 200;<br>
j = j - 100;<br>
StarY[i] = j;<br>
}</p>
<p>}<br>
void drawStar()<br>
{<br>
glLoadIdentity();<br>
for(int i = 0; i &lt; 250; i++){<br>
glBegin(GL_POINTS);<br>
glVertex2f(StarX[i],StarY[i]);<br>
glEnd();<br>
stardrawn = true;<br>
}<br>
glFlush();<br>
}<br>
void starPath()<br>
{<br>
for(int i = 0; i &lt; 250; i++){<br>
StarY[i] = StarY[i] - 0.55;<br>
if(StarY[i] &lt; -100){<br>
StarY[i] = 100;<br>
StarX[i] = rand() % 200;<br>
StarX[i] = StarX[i] - 100;<br>
}<br>
}<br>
}<br>
void renderBitmapString( float x,  float y, float z,void *font, char *string) {<br>
char *c;<br>
glRasterPos3f(x, y,z);<br>
for (c=string; *c != ‘\0’; c++) {<br>
glutBitmapCharacter(font, *c);<br>
}<br>
}<br>
void drawScore()<br>
{</p>
<pre><code>sprintf(ascore,"Score: %f",score);

glLoadIdentity();
</code></pre>
<p>}</p>
<p>void keyinput(int key, int x, int y)<br>
{<br>
switch(key){</p>
<pre><code>case GLUT_KEY_LEFT:
	angle = angle + 5;;
	break;
case GLUT_KEY_RIGHT:
	angle = angle - 5;
	break;
}
</code></pre>
<p>}</p>
<p>void shoot(unsigned char key,int x, int y){<br>
switch(key){<br>
case 32:<br>
if(fired != true){<br>
bulletAngle = angle +90;<br>
bulletAngle = (bulletAngle * 3.142)/180;<br>
}<br>
fired = true;<br>
break;<br>
}<br>
}</p>
<p>void bulletPath(){<br>
BulletLocX = BulletLocX + (5<em>cos(bulletAngle)/10);<br>
glutPostRedisplay();<br>
BulletLocY = BulletLocY + (5</em>sin(bulletAngle)/10);<br>
glutPostRedisplay();<br>
}</p>
<p>void CollisionTest()<br>
{<br>
for(int i = 0; i &lt; 6; i++){<br>
if(deathcount[i])<br>
{<br>
int j = AsteroidX[i] - BulletLocX;<br>
int k = AsteroidY[i] - BulletLocY;<br>
if((k &lt; 9 &amp;&amp; k &gt; -9)&amp;&amp;(j &lt; 9 &amp;&amp; j &gt; -9))<br>
{<br>
collision = true;<br>
deathcount[i] = false;<br>
AsteroidX[i] = 200;<br>
AsteroidY[i] = 200;<br>
killed++;<br>
score++;<br>
break;<br>
}<br>
}</p>
<p>}<br>
}</p>
<p>void reshape(int width, int height)<br>
{<br>
glMatrixMode(GL_PROJECTION);<br>
glViewport(0, 0, width, height);<br>
glOrtho(-100, 100, -100, 100, -100.0, 100.0);<br>
glMatrixMode(GL_MODELVIEW);<br>
}</p>
<p>void display(void)<br>
{<br>
glClear (GL_COLOR_BUFFER_BIT);<br>
glClearColor(0.0, 0.0, 0.0, 1.0);<br>
glPointSize(1.0);<br>
drawStar();<br>
starPath();<br>
drawBullet();<br>
drawAsteroid();<br>
drawship();<br>
drawScore();<br>
if (fired)<br>
{<br>
bulletPath();<br>
}<br>
CollisionTest();<br>
if(BulletLocX &gt; 100.0 || BulletLocX &lt; -100.0 || BulletLocY &gt; 100.0 || BulletLocY &lt; -100.0 || collision == true)<br>
{<br>
collision = false;<br>
fired = false;<br>
BulletLocX = X_CENTRE;<br>
BulletLocY = Y_CENTRE;<br>
}<br>
if(killed == 6){<br>
for(int i = 0; i &lt; 6; i++){<br>
deathcount[i] = true;<br>
killed = 0;<br>
XYrand();<br>
drawAsteroid();<br>
}<br>
}<br>
renderBitmapString( -90,90,0.0,GLUT_BITMAP_HELVETICA_12,ascore);<br>
glutSwapBuffers();<br>
}</p>
<p>void init(void)<br>
{<br>
srand((unsigned)time(0));<br>
XYrand();<br>
StarInit();</p>
<p>for(int i = 0; i &lt; 6; i++){<br>
deathcount[i] = true;<br>
}<br>
glClearColor (0.0, 0.0, 0.0, 0.0);<br>
}</p>
<p>int main(int argc, char** argv)<br>
{</p>
<p>glutInit(&amp;argc, argv);</p>
<p>glutInitDisplayMode (GLUT_DOUBLE | GLUT_RGB | GLUT_DEPTH);<br>
glutInitWindowSize (400, 400);<br>
glutInitWindowPosition (100, 100);<br>
glutCreateWindow (“Asteroids”);</p>
<p>init();<br>
glutDisplayFunc(display);<br>
glutSpecialFunc(keyinput);<br>
glutKeyboardFunc(shoot);<br>
glutReshapeFunc(reshape);<br>
glutIdleFunc(display);<br>
glutMainLoop();<br>
return 0;<br>
}[/code]</p>
<p>i know its pretty wank but ya that was my coursework sub</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-asteroids-coursework-w-opengl/430505/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-asteroids-coursework-w-opengl/430505/1</link>
        <pubDate>Tue, 24 Jan 2012 21:41:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430505-1</guid>
        <source url="https://forum.moparisthebest.com/t/c-asteroids-coursework-w-opengl/430505.rss">[C++] Asteroids Coursework w/ OpenGL</source>
      </item>
  </channel>
</rss>
