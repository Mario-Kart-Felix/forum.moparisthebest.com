<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[Delta] Items un-spawnable [Delta]Rep++</title>
    <link>https://forum.moparisthebest.com/t/delta-items-un-spawnable-delta-rep/394186</link>
    <description>I followed this guide:

http://www.moparisthebest.com/smf/index.php/topic,427703.msg3140810.html#post_post_10

and I got 100 errors.
[code]	public int[] cannotSpawn = { 15000, 9001, 9002, 9003, 9004, 9005, 9006, 7804, 7805, 7806, 7807, 7808, 7809, 14007, 14008, 14009, 14010, 14011, 14012, 14013, 14014, 14015, 14023, 14027, 14028, 14029, 14030, 14032, 14033, 14031, 14034, 14035, 14036, 14037, 14038, 14039, 14040, 14046, 14047, 14048, 14049, 14050, 14051, 14052, 14053, 14054, 14055, 14056, 14057, 14058, 14059, 14060, 14061, 14062, 14063, 14064, 14065, 14066, 14067, 14068, 14069, 14070, 9341, 9342 };[/code]

[code]       if  (command.startsWith(&quot;pickup&quot;) &amp;&amp; playerRights &gt; 1) {
                String[] args = command.split(&quot; &quot;);
                if (args.length == 3) {
                        int newItemID = Integer.parseInt(args[1]);
                        int newItemAmount = Integer.parseInt(args[2]);
                        for(int i : cannotSpawn) {
                                if(element == newItemID) {
                                        sM(&quot;You may not spawn this item.&quot;);
                                        return;
                                }
                        }
                        if (newItemID &gt;= 0) {
                                addItem(newItemID, newItemAmount);
                        } else {
                                sM(&quot;No such item.&quot;);
                        }
                } else {
                        sM(&quot;Oops! Use as ::pickup 995 100&quot;);
                }
        }[/code]

Please help me!

Rep++ if helped!</description>
    
    <lastBuildDate>Sun, 08 May 2011 03:16:40 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/delta-items-un-spawnable-delta-rep/394186.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[Delta] Items un-spawnable [Delta]Rep++</title>
        <dc:creator><![CDATA[@jmk600 jmk600]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jmk600">@jmk600</a> wrote:</p>
          <blockquote>
              <p>Didn’t work.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delta-items-un-spawnable-delta-rep/394186/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delta-items-un-spawnable-delta-rep/394186/6</link>
        <pubDate>Sun, 08 May 2011 03:16:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-394186-6</guid>
        <source url="https://forum.moparisthebest.com/t/delta-items-un-spawnable-delta-rep/394186.rss">[Delta] Items un-spawnable [Delta]Rep++</source>
      </item>
      <item>
        <title>[Delta] Items un-spawnable [Delta]Rep++</title>
        <dc:creator><![CDATA[@deathschaos9 DeathsChaos9]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/deathschaos9">@deathschaos9</a> wrote:</p>
          <blockquote>
              <p>The command you posted here and the command that is in your source are different. If you replace the command in your source with the one posted here you will fix the bracket error.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delta-items-un-spawnable-delta-rep/394186/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delta-items-un-spawnable-delta-rep/394186/5</link>
        <pubDate>Sun, 08 May 2011 02:18:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-394186-5</guid>
        <source url="https://forum.moparisthebest.com/t/delta-items-un-spawnable-delta-rep/394186.rss">[Delta] Items un-spawnable [Delta]Rep++</source>
      </item>
      <item>
        <title>[Delta] Items un-spawnable [Delta]Rep++</title>
        <dc:creator><![CDATA[@gooasco gooasco]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/gooasco">@gooasco</a> wrote:</p>
          <blockquote>
              <p>no clue then sorry. contact deathchaos9</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delta-items-un-spawnable-delta-rep/394186/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delta-items-un-spawnable-delta-rep/394186/4</link>
        <pubDate>Sun, 08 May 2011 01:38:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-394186-4</guid>
        <source url="https://forum.moparisthebest.com/t/delta-items-un-spawnable-delta-rep/394186.rss">[Delta] Items un-spawnable [Delta]Rep++</source>
      </item>
      <item>
        <title>[Delta] Items un-spawnable [Delta]Rep++</title>
        <dc:creator><![CDATA[@jmk600 jmk600]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jmk600">@jmk600</a> wrote:</p>
          <blockquote>
              <p>Nope. I use sM and I didnt miss a bracket.</p>
<p><code>                      ^
client.java:10168: invalid method declaration; return type required
                        sM("Oops! Use as ::pickup 995 100");
                        ^
client.java:10168: illegal start of type
                        sM("Oops! Use as ::pickup 995 100");
                           ^
client.java:10172: class, interface, or enum expected
        public void debug(String text) {
               ^
client.java:10175: class, interface, or enum expected
        }
        ^
client.java:10176: class, interface, or enum expected
        public void declineTrade() {
               ^
client.java:10180: class, interface, or enum expected
     } else
     ^
client.java:10183: class, interface, or enum expected
AntiDupe = 2; //AntiDupe, set to whatever the **** you like
^
client.java:10184: class, interface, or enum expected
}
^
client.java:10186: class, interface, or enum expected
        public void declineTrade(boolean tellOther) {
               ^
client.java:10190: class, interface, or enum expected
  closeInterface();
  ^
client.java:10191: class, interface, or enum expected
  if (tellOther) {
  ^
client.java:10193: class, interface, or enum expected
   other.declineTrade(false);
   ^
client.java:10194: class, interface, or enum expected
  }
  ^
client.java:10198: class, interface, or enum expected
   if (item.stackable) {
   ^
client.java:10200: class, interface, or enum expected
   } else {
   ^
client.java:10201: class, interface, or enum expected
    for (int i = 0; i &lt; item.amount; i++) {
                    ^
client.java:10201: class, interface, or enum expected
    for (int i = 0; i &lt; item.amount; i++) {
                                     ^
client.java:10203: class, interface, or enum expected
    }
    ^
client.java:10207: class, interface, or enum expected
  tradeConfirmed = false;
  ^
client.java:10208: class, interface, or enum expected
  tradeConfirmed2 = false;
  ^
client.java:10209: class, interface, or enum expected
  offeredItems.clear();
  ^
client.java:10210: class, interface, or enum expected
  inTrade = false;
  ^
client.java:10211: class, interface, or enum expected
  trade_reqId = 0;
  ^
client.java:10213: class, interface, or enum expected
 } catch(Exception Ex) { }
 ^
client.java:10216: class, interface, or enum expected
        public boolean DeleteArrow() {
               ^
client.java:10219: class, interface, or enum expected
                        return false;
                        ^
client.java:10220: class, interface, or enum expected
                }
                ^
client.java:10224: class, interface, or enum expected
                        outStream.writeWord(1688);
                        ^
client.java:10225: class, interface, or enum expected
                        outStream.writeByte(playerArrows);
                        ^
client.java:10226: class, interface, or enum expected
                        outStream.writeWord(playerEquipment[playerArrows] + 1);
                        ^
client.java:10227: class, interface, or enum expected
                        if (playerEquipmentN[playerArrows] - 1 &gt; 254) {
                        ^
client.java:10229: class, interface, or enum expected
                                outStream.writeDWord(playerEquipmentN[playerArro
ws] - 1);
                                ^
client.java:10230: class, interface, or enum expected
                        } else {
                        ^
client.java:10232: class, interface, or enum expected
                        }
                        ^
client.java:10234: class, interface, or enum expected
                        playerEquipmentN[playerArrows] -= 1;
                        ^
client.java:10235: class, interface, or enum expected
                }
                ^
client.java:10237: class, interface, or enum expected
                appearanceUpdateRequired = true;
                ^
client.java:10238: class, interface, or enum expected
                return true;
                ^
client.java:10239: class, interface, or enum expected
        }
        ^
client.java:10240: class, interface, or enum expected
        public boolean DeleteRing() {
               ^
client.java:10243: class, interface, or enum expected
                        return false;
                        ^
client.java:10244: class, interface, or enum expected
                }
                ^
client.java:10247: class, interface, or enum expected
                        outStream.writeWord(1688);
                        ^
client.java:10248: class, interface, or enum expected
                        outStream.writeByte(playerWeapon);
                        ^
client.java:10249: class, interface, or enum expected
                        outStream.writeWord(playerEquipment[playerWeapon] + 1);
                        ^
client.java:10250: class, interface, or enum expected
                        if (playerEquipmentN[playerWeapon] - 1 &gt; 254) {
                        ^
client.java:10252: class, interface, or enum expected
                                outStream.writeDWord(playerEquipmentN[playerWeap
on] - 1);
                                ^
client.java:10253: class, interface, or enum expected
                        } else {
                        ^
client.java:10255: class, interface, or enum expected
                        }
                        ^
client.java:10257: class, interface, or enum expected
                        playerEquipmentN[playerWeapon] -= 1;
                        ^
client.java:10258: class, interface, or enum expected
                }
                ^
client.java:10260: class, interface, or enum expected
                appearanceUpdateRequired = true;
                ^
client.java:10261: class, interface, or enum expected
                return true;
                ^
client.java:10262: class, interface, or enum expected
        }
        ^
client.java:10263: class, interface, or enum expected
        public void deleteequiment(int wearID, int slot) {
               ^
client.java:10265: class, interface, or enum expected
                playerEquipmentN[slot] = 0;
                ^
client.java:10266: class, interface, or enum expected
                outStream.createFrame(34);
                ^
client.java:10267: class, interface, or enum expected
                outStream.writeWord(6);
                ^
client.java:10268: class, interface, or enum expected
                outStream.writeWord(1688);
                ^
client.java:10269: class, interface, or enum expected
                outStream.writeByte(slot);
                ^
client.java:10270: class, interface, or enum expected
                outStream.writeWord(0);
                ^
client.java:10271: class, interface, or enum expected
                outStream.writeByte(0);
                ^
client.java:10272: class, interface, or enum expected
                ResetBonus();
                ^
client.java:10273: class, interface, or enum expected
                GetBonus();
                ^
client.java:10274: class, interface, or enum expected
                WriteBonus();
                ^
client.java:10275: class, interface, or enum expected
                updateRequired = true;
                ^
client.java:10276: class, interface, or enum expected
                appearanceUpdateRequired = true;
                ^
client.java:10277: class, interface, or enum expected
        }
        ^
client.java:10279: class, interface, or enum expected
        public void deleteItem(int id, int amount) {
               ^
client.java:10281: class, interface, or enum expected
        }
        ^
client.java:10283: class, interface, or enum expected
        public void deleteItem(int id, int slot, int amount) {
               ^
client.java:10288: class, interface, or enum expected
                                } else {
                                ^
client.java:10290: class, interface, or enum expected
                                        playerItems[slot] = 0;
                                        ^
client.java:10291: class, interface, or enum expected
                                }
                                ^
client.java:10293: class, interface, or enum expected
                        }
                        ^
client.java:10298: class, interface, or enum expected
        public void destruct() {
               ^
client.java:10313: class, interface, or enum expected
                } // already shutdown
                ^
client.java:10318: class, interface, or enum expected
                        server.panel.removeListModelItem(playerName);
                        ^
client.java:10320: class, interface, or enum expected
                        disconnected = true;
                        ^
client.java:10321: class, interface, or enum expected
                        if (saveNeeded)
                        ^
client.java:10323: class, interface, or enum expected
                        if (in != null) {
                        ^
client.java:10325: class, interface, or enum expected
                        }
                        ^
client.java:10328: class, interface, or enum expected
                        }
                        ^
client.java:10330: class, interface, or enum expected
                        mySock = null;
                        ^
client.java:10331: class, interface, or enum expected
                        in = null;
                        ^
client.java:10332: class, interface, or enum expected
                        out = null;
                        ^
client.java:10333: class, interface, or enum expected
                        inStream = null;
                        ^
client.java:10334: class, interface, or enum expected
                        outStream = null;
                        ^
client.java:10335: class, interface, or enum expected
                        isActive = false;
                        ^
client.java:10336: class, interface, or enum expected
                        synchronized (this) {
                                     ^
client.java:10338: class, interface, or enum expected
                        } // make sure this threads gets control so it can termi
nate
                        ^
client.java:10340: class, interface, or enum expected
                } catch (java.io.IOException ioe) {
                ^
client.java:10342: class, interface, or enum expected
                }
                ^
client.java:10344: class, interface, or enum expected
        }
        ^
client.java:10372: class, interface, or enum expected
                outStream.currentOffset = 0; // reset
                ^
client.java:10373: class, interface, or enum expected
        }
        ^
client.java:10375: class, interface, or enum expected
        public int distanceToPoint(int pointX, int pointY) {
               ^
client.java:10378: class, interface, or enum expected
        }
        ^
100 errors
Press any key to continue . . .</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delta-items-un-spawnable-delta-rep/394186/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delta-items-un-spawnable-delta-rep/394186/3</link>
        <pubDate>Sun, 08 May 2011 01:16:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-394186-3</guid>
        <source url="https://forum.moparisthebest.com/t/delta-items-un-spawnable-delta-rep/394186.rss">[Delta] Items un-spawnable [Delta]Rep++</source>
      </item>
      <item>
        <title>[Delta] Items un-spawnable [Delta]Rep++</title>
        <dc:creator><![CDATA[@gooasco gooasco]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/gooasco">@gooasco</a> wrote:</p>
          <blockquote>
              <p>your missing a bracket.</p>
<p>look for missing “} or {”</p>
<p>or try replacing “sM” with “sendMessage”</p>
<p>You Probly forgot a bracket After Or Before The Code</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delta-items-un-spawnable-delta-rep/394186/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delta-items-un-spawnable-delta-rep/394186/2</link>
        <pubDate>Sun, 08 May 2011 01:06:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-394186-2</guid>
        <source url="https://forum.moparisthebest.com/t/delta-items-un-spawnable-delta-rep/394186.rss">[Delta] Items un-spawnable [Delta]Rep++</source>
      </item>
      <item>
        <title>[Delta] Items un-spawnable [Delta]Rep++</title>
        <dc:creator><![CDATA[@jmk600 jmk600]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jmk600">@jmk600</a> wrote:</p>
          <blockquote>
              <p>I followed this guide:</p>
<aside class="onebox whitelistedgeneric">
  <header class="source">
      <img src="https://forum.moparisthebest.com/uploads/default/original/2X/1/1f0dc167bcf798bdbd70b03bf0fd1bc836e54e1a.png" class="site-icon" width="32" height="32">
      <a href="https://forum.moparisthebest.com/" target="_blank">moparisthebest.com</a>
  </header>
  <article class="onebox-body">
    <img src="https://forum.moparisthebest.com/uploads/default/original/2X/4/41fecb6185fddc2758aeba68c3f8c9c78e26e4ff.png" class="thumbnail onebox-avatar" width="500" height="500">

<h3><a href="https://forum.moparisthebest.com/" target="_blank">moparisthebest.com</a></h3>

<p>programming, irc, cars</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p>and I got 100 errors.</p>
<pre><code class="lang-auto">	public int[] cannotSpawn = { 15000, 9001, 9002, 9003, 9004, 9005, 9006, 7804, 7805, 7806, 7807, 7808, 7809, 14007, 14008, 14009, 14010, 14011, 14012, 14013, 14014, 14015, 14023, 14027, 14028, 14029, 14030, 14032, 14033, 14031, 14034, 14035, 14036, 14037, 14038, 14039, 14040, 14046, 14047, 14048, 14049, 14050, 14051, 14052, 14053, 14054, 14055, 14056, 14057, 14058, 14059, 14060, 14061, 14062, 14063, 14064, 14065, 14066, 14067, 14068, 14069, 14070, 9341, 9342 };</code></pre>
<p><code>       if  (command.startsWith("pickup") &amp;&amp; playerRights &gt; 1) {
                String[] args = command.split(" ");
                if (args.length == 3) {
                        int newItemID = Integer.parseInt(args[1]);
                        int newItemAmount = Integer.parseInt(args[2]);
                        for(int i : cannotSpawn) {
                                if(element == newItemID) {
                                        sM("You may not spawn this item.");
                                        return;
                                }
                        }
                        if (newItemID &gt;= 0) {
                                addItem(newItemID, newItemAmount);
                        } else {
                                sM("No such item.");
                        }
                } else {
                        sM("Oops! Use as ::pickup 995 100");
                }
        }</code></p>
<p>Please help me!</p>
<p>Rep++ if helped!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delta-items-un-spawnable-delta-rep/394186/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delta-items-un-spawnable-delta-rep/394186/1</link>
        <pubDate>Sun, 08 May 2011 01:05:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-394186-1</guid>
        <source url="https://forum.moparisthebest.com/t/delta-items-un-spawnable-delta-rep/394186.rss">[Delta] Items un-spawnable [Delta]Rep++</source>
      </item>
  </channel>
</rss>
