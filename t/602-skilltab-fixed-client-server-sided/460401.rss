<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>602 SkillTab Fixed Client/Server Sided</title>
    <link>https://forum.moparisthebest.com/t/602-skilltab-fixed-client-server-sided/460401</link>
    <description>[b]*Client Sided*[/b]

Replace your Skills Class with the following code:

[code]final class Skills
{

    public static int skillsCount = 25;
    public static String skillNames[] = {
        &quot;attack&quot;, &quot;defence&quot;, &quot;strength&quot;, &quot;hitpoints&quot;, &quot;ranged&quot;, &quot;prayer&quot;, &quot;magic&quot;, &quot;cooking&quot;, &quot;woodcutting&quot;, &quot;fletching&quot;, 
        &quot;fishing&quot;, &quot;firemaking&quot;, &quot;crafting&quot;, &quot;smithing&quot;, &quot;mining&quot;, &quot;herblore&quot;, &quot;agility&quot;, &quot;thieving&quot;, &quot;slayer&quot;, &quot;farming&quot;, 
        &quot;runecraft&quot;, &quot;construction&quot;, &quot;hunter&quot;, &quot;summoning&quot;, &quot;dungeoneering&quot;
    };
    public static boolean skillEnabled[] = {
        true, true, true, true, true, true, true, true, true, true, 
        true, true, true, true, true, true, true, true, true, true, 
        true, true, true, true, true, true
    };

}[/code]

Add this following code in your Client class:

[code]public int getXPForLevel(int level) {
		int points = 0;
		int output = 0;
		for (int lvl = 1; lvl &lt;= level; lvl++) {
			points += Math.floor(lvl + 300.0 * Math.pow(2.0, lvl / 7.0));
			if (lvl &gt;= level) {
				return output;
			}
			output = (int)Math.floor(points / 4);
		}
		return 0;
	}
	public String[] skillNames = { &quot;Attack&quot;, &quot;Hitpoints&quot;, &quot;Mining&quot;, &quot;Strength&quot;, &quot;Agility&quot;,
			&quot;Smithing&quot;, &quot;Defence&quot;, &quot;Herblore&quot;, &quot;Fishing&quot;, &quot;Range&quot;, &quot;Thieving&quot;,
			&quot;Cooking&quot;, &quot;Prayer&quot;, &quot;Crafting&quot;, &quot;Firemaking&quot;, &quot;Magic&quot;, &quot;Fletching&quot;, &quot;Woodcutting&quot;,
			&quot;Runecrafting&quot;, &quot;Slayer&quot;, &quot;Farming&quot;, &quot;Construction&quot;, &quot;Hunter&quot;, &quot;Summoning&quot;,
			&quot;Dungeoneering&quot; };
	public String setMessage(int level){
		String[] messages = new String[4];
		String message = &quot;&quot;;
		int maxLevel = 99;
		if(maxStats[level] &gt; maxLevel){
			if(level != 24){
				maxStats[level] = 99;
			} else if(maxStats[level] &gt; 120){
				maxStats[level] = 120;
			}
		}
	    int[] stuff = {0,3,14,2,16,13,1,15,10,4,17,7,5,12,11,6,9,8,20,18,19,21,22,23,24};
		messages[0] = skillNames[level]+&quot;: &quot;+currentStats[stuff[level]]+&quot;/&quot;+maxStats[stuff[level]]+&quot;\\n&quot;;
		messages[1] = &quot;Current XP: &quot; + getXPForLevel(maxStats[stuff[level]])+&quot;\\n&quot;;
		messages[2]= &quot;Remainder: &quot;+ (getXPForLevel(maxStats[stuff[level]]+1)-getXPForLevel(maxStats[stuff[level]]))+&quot;\\n&quot;;
		messages[3]= &quot;Next level: &quot;+ getXPForLevel(maxStats[stuff[level]]+1);
		message = messages[0] + messages[1] + messages[2] + messages[3];
		return message;
	}[/code]

Still in the Client class, find the following void: 

&lt;blockquote&gt;void drawFriendsListOrWelcomeScreen&lt;/blockquote&gt;

Add the following code in that method: 

[code]if(j &gt;= 206 &amp;&amp; j &lt;= 206+25){
			j -= 206;
			class9.message = setMessage(j);
			return;
		}[/code]

Now in your RSInterface class find the following: 

&lt;blockquote&gt;aClass44 = streamLoader_1;&lt;/blockquote&gt;

Now right below it add this code: 

[code]skillTab602(textDrawingAreas);[/code]

Now add the following methods for your SkillTab:

[code]public static void skillTab602(TextDrawingArea[] TDA) {
		RSInterface skill = addInterface(3917);
		addText(27203, &quot;99&quot;, 0xFFFF00, false, true, -1, TDA, 0);
		addText(27204, &quot;99&quot;, 0xFFFF00, false, true, -1, TDA, 0);
		addText(27205, &quot;99&quot;, 0xFFFF00, false, true, -1, TDA, 0);
		addText(27206, &quot;99&quot;, 0xFFFF00, false, true, -1, TDA, 0);
		skill.totalChildren(4);
		skill.child(0, 27203, 158, 175);
		skill.child(1, 27204, 171, 186);
		skill.child(2, 27205, 158, 203);
		skill.child(3, 27206, 171, 214);
		String[] spriteNames = { &quot;Attack&quot;, &quot;HP&quot;, &quot;Mine&quot;, &quot;Strength&quot;, &quot;Agility&quot;, &quot;Smith&quot;, &quot;Defence&quot;, &quot;Herblore&quot;, &quot;Fish&quot;, &quot;Range&quot;, &quot;Thief&quot;, &quot;Cook&quot;, &quot;Prayer&quot;, &quot;Craft&quot;, &quot;Fire&quot;, &quot;Mage&quot;, &quot;Fletch&quot;, &quot;Wood&quot;, &quot;Rune&quot;, &quot;Slay&quot;, &quot;Farm&quot;, &quot;Construction&quot;, &quot;Hunter&quot;, &quot;Summon&quot;, &quot;Dungeon&quot; };
		int[] buttons = { 27207, 27208, 27209, 27210, 27211, 27212, 27213, 27214, 27215, 27216, 27217, 27218, 27219, 27220, 27221, 27222, 27223, 27224, 27225, 27226, 27231, 27232, 27233, 27234, 27235 };
		int[] hovers = { 4040, 4076, 4112, 4046, 4082, 4118, 4052, 4088, 4124, 4058, 4094, 4130, 4064, 4100, 4136, 4070, 4106, 4142, 4160, 2832, 13917, 19005, 19006, 19007, 19008 };
		int[][] text = { { 4004, 4005 }, { 4016, 4017 }, { 4028, 4029 },
				{ 4006, 4007 }, { 4018, 4019 }, { 4030, 4031 }, { 4008, 4009 },
				{ 4020, 4021 }, { 4032, 4033 }, { 4010, 4011 }, { 4022, 4023 },
				{ 4034, 4035 }, { 4012, 4013 }, { 4024, 4025 }, { 4036, 4037 },
				{ 4014, 4015 }, { 4026, 4027 }, { 4038, 4039 }, { 4152, 4153 },
				{ 12166, 12167 }, { 13926, 13927 }, { 18165, 18169 },
				{ 18166, 18170 }, { 18167, 18171 }, { 18168, 18172 } };

		int[] icons = { 3965, 3966, 3967, 3968, 3969, 3970, 3971, 3972, 3973,
				3974, 3975, 3976, 3977, 3978, 3979, 3980, 3981, 3982, 4151,
				12165, 13925, 27227, 27228, 27229, 27230 };

		int[][] buttonCoords = { { 4, 4 }, { 66, 4 }, { 128, 4 }, { 4, 32 },
				{ 66, 32 }, { 128, 32 }, { 4, 60 }, { 66, 60 }, { 128, 60 },
				{ 4, 88 }, { 66, 88 }, { 128, 88 }, { 4, 116 }, { 66, 116 },
				{ 128, 116 }, { 4, 144 }, { 66, 144 }, { 128, 144 },
				{ 4, 172 }, { 66, 172 }, { 128, 172 }, { 4, 200 }, { 66, 200 },
				{ 128, 200 }, { 4, 229 } };
		int[][] iconCoords = { { 6, 6 }, { 69, 7 }, { 131, 6 }, { 9, 34 },
				{ 68, 33 }, { 131, 36 }, { 9, 64 }, { 67, 63 }, { 131, 61 },
				{ 7, 91 }, { 68, 94 }, { 133, 90 }, { 6, 118 }, { 70, 120 },
				{ 130, 118 }, { 6, 147 }, { 69, 146 }, { 132, 146 },
				{ 6, 173 }, { 69, 173 }, { 130, 174 }, { 6, 202 }, { 69, 201 },
				{ 131, 202 }, { 6, 230 } };
		int[][] textCoords = { { 31, 7, 44, 18 }, { 93, 7, 106, 18 },
				{ 155, 7, 168, 18 }, { 31, 35, 44, 46 }, { 93, 35, 106, 46 },
				{ 155, 35, 168, 46 }, { 31, 63, 44, 74 }, { 93, 63, 106, 74 },
				{ 155, 63, 168, 74 }, { 31, 91, 44, 102 },
				{ 93, 91, 106, 102 }, { 155, 91, 168, 102 },
				{ 31, 119, 44, 130 }, { 93, 119, 106, 130 },
				{ 155, 119, 168, 130 }, { 31, 147, 44, 158 },
				{ 93, 147, 106, 158 }, { 155, 147, 168, 158 },
				{ 31, 175, 44, 186 }, { 93, 175, 106, 186 },
				{ 155, 175, 168, 186 }, { 32, 203, 45, 214 },
				{ 94, 203, 107, 214 }, { 156, 203, 169, 214 },
				{ 32, 231, 45, 242 } };
		int[][] newText = { { 18165, 18166, 18167, 18168 },
				{ 18169, 18170, 18171, 18172 }, 
				{ 27223, 27224, 27225, 27226 } };
		for (int i = 0; i &lt; hovers.length; i++) {
			createSkillHover(hovers[i], 206 + i);
			//addTooltipBox(hovers[i], 205 + i);
			addSkillButton(buttons[i]);
			addImage(icons[i], spriteNames[i]);
		}
		for (int i = 0; i &lt; 4; i++) {
			addSkillText(newText[0][i], false, i + 21);
			addSkillText(newText[1][i], true, i + 21);
		}
		skill.children(icons.length + (text.length * 2) + hovers.length + buttons.length + 1);
		int frame = 0;
		RSInterface totalLevel = interfaceCache[3984];
		totalLevel.message = &quot;@yel@Total level: %1&quot;;
		totalLevel.textDrawingAreas = fonts[2];
		skill.child(frame, 3984, 94, 237); frame++;
		for (int i = 0; i &lt; buttons.length; i++) {
			skill.child(frame, buttons[i], buttonCoords[i][0], buttonCoords[i][1]); frame++;
		}
		for (int i = 0; i &lt; icons.length; i++) {
			skill.child(frame, icons[i], iconCoords[i][0], iconCoords[i][1]); frame++;
		}
		for (int i = 0; i &lt; text.length; i++) {
			skill.child(frame, text[i][0], textCoords[i][0], textCoords[i][1]); frame++;
		}
		for (int i = 0; i &lt; text.length; i++) {
			skill.child(frame, text[i][1], textCoords[i][2], textCoords[i][3]); frame++;
		}
		for (int i = 0; i &lt; hovers.length; i++) {
			skill.child(frame, hovers[i], buttonCoords[i][0], buttonCoords[i][1]); frame++;
		}
	}

	public void children(int total) {
		children = new int[total];
		childX = new int[total];
		childY = new int[total];
	}


	public static void createSkillHover(int id, int x) {
		RSInterface hover = addInterface(id);
		hover.type = 8;
		hover.message = &quot;TESTING!&quot;;
		hover.contentType = x;
		hover.width = 60;
		hover.height = 28;
		hover.inventoryHover = true;
	}
	public static void addImage(int id, String s) {
		RSInterface image = addInterface(id);
		image.type = 5;
		image.atActionType = 0;
		image.contentType = 0;
		image.width = 100;
		image.height = 100;
		image.sprite1 = getSprite(s);
	}
	
	public static void addSkillText(int id, boolean max, int skill) {
		RSInterface text = addInterface(id);
		text.id = id;
		text.parentID = id;
		text.type = 4;
		text.atActionType = 0;
		text.width = 15;
		text.height = 12;
		text.centerText = true;
		text.textShadow = true;
		text.textColor = 16776960;
		text.textDrawingAreas = fonts[0];
		if (!max) {
			text.valueIndexArray = new int[1][];
			text.valueIndexArray[0] = new int[3];
			text.valueIndexArray[0][0] = 1;
			text.valueIndexArray[0][1] = skill;
			text.valueIndexArray[0][2] = 0;
		} else {
			text.valueIndexArray = new int[2][];
			text.valueIndexArray[0] = new int[3];
			text.valueIndexArray[0][0] = 1;
			text.valueIndexArray[0][1] = skill;
			text.valueIndexArray[0][2] = 0;
			text.valueIndexArray[1] = new int[1];
			text.valueIndexArray[1][0] = 0;
		}
		text.message = &quot;%1&quot;;
	}
	
	public static Sprite getSprite(String s) {
		Sprite image;
		try {
			image = new Sprite(&quot;/Skill/&quot; + s);
			if (image != null) {
				return image;
			}
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
		return image;
	}
	
	public boolean inventoryHover;[/code]

Download and extract the following sprites in your Sprites folder which should be found in the cache: http://www.mediafire.com/?n9jpla6je4hk4bd

[b]*Server Sided*[/b]

In your PlayerAssisstant class, find the following void: 

&lt;blockquote&gt;void refreshSkill&lt;/blockquote&gt;

Now at the far end of this method you should see &quot;case 20:&quot; after the break; in that case add this following code:

[code]case 21://Hunter
				sendFrame126(&quot;@yel@&quot; + c.playerLevel[21] + &quot;&quot;, 18166); 
				sendFrame126(&quot;@yel@&quot; + c.playerLevel[21] + &quot;&quot;, 18170); 
				break;
			case 22: //construction
				sendFrame126(&quot;@yel@&quot; + c.playerLevel[22] + &quot;&quot;, 18165);
				sendFrame126(&quot;@yel@&quot; + c.playerLevel[22] + &quot;&quot;, 18169);
				break;
			case 23: //summoning
				sendFrame126(&quot;@yel@&quot; + c.playerLevel[23] + &quot;&quot;, 18167);
				sendFrame126(&quot;@yel@&quot; + c.playerLevel[23] + &quot;&quot;, 18171);
				sendFrame126(&quot;&quot; + c.playerXP[23] + &quot;&quot;, 29803);
				break;

			case 24: //Dungeoneering
				sendFrame126(&quot;@yel@&quot; + c.playerLevel[24] + &quot;&quot;, 18168);
				sendFrame126(&quot;@yel@&quot; + c.playerLevel[24] + &quot;&quot;, 18172);
				break;[/code]

Now in your Client class, introduce the following method: 

[code]public void RefreshAllSkills() {
		  for (int i = 0; i &lt; 25; i++) {
		   getPA().setSkillLevel(i, playerLevel[i], playerXP[i]);
		   getPA().refreshSkill(i);
		  }
		 }[/code]

Still in Client class find the following void:

&lt;blockquote&gt;void destruct&lt;/blockquote&gt;

Right below &lt;blockquote&gt;Misc.println(&quot;[DEREGISTERED]: &quot;+playerName+&quot;&quot;);&lt;/blockquote&gt;

Add this: 

[code]RefreshAllSkills();[/code]

Find the following method: 

&lt;blockquote&gt;void initialize&lt;/blockquote&gt;

At the far bottom of this method right after: 

&lt;blockquote&gt;getPA().clearClanChat();
			getPA().resetFollow();
			getPA().sendFrame36(172, autoRet);
			getPA().sendFrame36(173, isRunning2 ? 1 : 0);&lt;/blockquote&gt;

Add the following: 

[code]RefreshAllSkills();[/code]

A picture of the skill-tab with all skills appearing perfectly:

[img]http://screensnapr.com/e/w8Euy6.jpg[/img]</description>
    
    <lastBuildDate>Sat, 05 Jan 2013 20:59:13 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/602-skilltab-fixed-client-server-sided/460401.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>602 SkillTab Fixed Client/Server Sided</title>
        <dc:creator><![CDATA[@WayneRsps WayneRsps]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/waynersps">@WayneRsps</a> wrote:</p>
          <blockquote>
              <p>I need the proper addskillbutton method for this to work. Otherwise nice job, I’m getting this without the method. <a href="http://puu.sh/1JZCp" rel="nofollow noopener">http://puu.sh/1JZCp</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/602-skilltab-fixed-client-server-sided/460401/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/602-skilltab-fixed-client-server-sided/460401/2</link>
        <pubDate>Sat, 05 Jan 2013 20:59:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-460401-2</guid>
        <source url="https://forum.moparisthebest.com/t/602-skilltab-fixed-client-server-sided/460401.rss">602 SkillTab Fixed Client/Server Sided</source>
      </item>
      <item>
        <title>602 SkillTab Fixed Client/Server Sided</title>
        <dc:creator><![CDATA[@Rameez Rameez]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rameez">@Rameez</a> wrote:</p>
          <blockquote>
              <p><span class="bbcode-b"><em>Client Sided</em></span></p>
<p>Replace your Skills Class with the following code:</p>
<p>[code]final class Skills<br>
{</p>
<pre><code>public static int skillsCount = 25;
public static String skillNames[] = {
    "attack", "defence", "strength", "hitpoints", "ranged", "prayer", "magic", "cooking", "woodcutting", "fletching", 
    "fishing", "firemaking", "crafting", "smithing", "mining", "herblore", "agility", "thieving", "slayer", "farming", 
    "runecraft", "construction", "hunter", "summoning", "dungeoneering"
};
public static boolean skillEnabled[] = {
    true, true, true, true, true, true, true, true, true, true, 
    true, true, true, true, true, true, true, true, true, true, 
    true, true, true, true, true, true
};
</code></pre>
<p>}[/code]</p>
<p>Add this following code in your Client class:</p>
<p><code>public int getXPForLevel(int level) {
		int points = 0;
		int output = 0;
		for (int lvl = 1; lvl &lt;= level; lvl++) {
			points += Math.floor(lvl + 300.0 * Math.pow(2.0, lvl / 7.0));
			if (lvl &gt;= level) {
				return output;
			}
			output = (int)Math.floor(points / 4);
		}
		return 0;
	}
	public String[] skillNames = { "Attack", "Hitpoints", "Mining", "Strength", "Agility",
			"Smithing", "Defence", "Herblore", "Fishing", "Range", "Thieving",
			"Cooking", "Prayer", "Crafting", "Firemaking", "Magic", "Fletching", "Woodcutting",
			"Runecrafting", "Slayer", "Farming", "Construction", "Hunter", "Summoning",
			"Dungeoneering" };
	public String setMessage(int level){
		String[] messages = new String[4];
		String message = "";
		int maxLevel = 99;
		if(maxStats[level] &gt; maxLevel){
			if(level != 24){
				maxStats[level] = 99;
			} else if(maxStats[level] &gt; 120){
				maxStats[level] = 120;
			}
		}
	    int[] stuff = {0,3,14,2,16,13,1,15,10,4,17,7,5,12,11,6,9,8,20,18,19,21,22,23,24};
		messages[0] = skillNames[level]+": "+currentStats[stuff[level]]+"/"+maxStats[stuff[level]]+"\\n";
		messages[1] = "Current XP: " + getXPForLevel(maxStats[stuff[level]])+"\\n";
		messages[2]= "Remainder: "+ (getXPForLevel(maxStats[stuff[level]]+1)-getXPForLevel(maxStats[stuff[level]]))+"\\n";
		messages[3]= "Next level: "+ getXPForLevel(maxStats[stuff[level]]+1);
		message = messages[0] + messages[1] + messages[2] + messages[3];
		return message;
	}</code></p>
<p>Still in the Client class, find the following void:</p>
<blockquote>void drawFriendsListOrWelcomeScreen</blockquote>
<p>Add the following code in that method:</p>
<p><code>if(j &gt;= 206 &amp;&amp; j &lt;= 206+25){
			j -= 206;
			class9.message = setMessage(j);
			return;
		}</code></p>
<p>Now in your RSInterface class find the following:</p>
<blockquote>aClass44 = streamLoader_1;</blockquote>
<p>Now right below it add this code:</p>
<pre><code class="lang-auto"></code></pre>
<p>Now add the following methods for your SkillTab:</p>
<p>[code]public static void skillTab602(TextDrawingArea[] TDA) {<br>
RSInterface skill = addInterface(3917);<br>
addText(27203, “99”, 0xFFFF00, false, true, -1, TDA, 0);<br>
addText(27204, “99”, 0xFFFF00, false, true, -1, TDA, 0);<br>
addText(27205, “99”, 0xFFFF00, false, true, -1, TDA, 0);<br>
addText(27206, “99”, 0xFFFF00, false, true, -1, TDA, 0);<br>
skill.totalChildren(4);<br>
skill.child(0, 27203, 158, 175);<br>
skill.child(1, 27204, 171, 186);<br>
skill.child(2, 27205, 158, 203);<br>
skill.child(3, 27206, 171, 214);<br>
String[] spriteNames = { “Attack”, “HP”, “Mine”, “Strength”, “Agility”, “Smith”, “Defence”, “Herblore”, “Fish”, “Range”, “Thief”, “Cook”, “Prayer”, “Craft”, “Fire”, “Mage”, “Fletch”, “Wood”, “Rune”, “Slay”, “Farm”, “Construction”, “Hunter”, “Summon”, “Dungeon” };<br>
int[] buttons = { 27207, 27208, 27209, 27210, 27211, 27212, 27213, 27214, 27215, 27216, 27217, 27218, 27219, 27220, 27221, 27222, 27223, 27224, 27225, 27226, 27231, 27232, 27233, 27234, 27235 };<br>
int[] hovers = { 4040, 4076, 4112, 4046, 4082, 4118, 4052, 4088, 4124, 4058, 4094, 4130, 4064, 4100, 4136, 4070, 4106, 4142, 4160, 2832, 13917, 19005, 19006, 19007, 19008 };<br>
int[][] text = { { 4004, 4005 }, { 4016, 4017 }, { 4028, 4029 },<br>
{ 4006, 4007 }, { 4018, 4019 }, { 4030, 4031 }, { 4008, 4009 },<br>
{ 4020, 4021 }, { 4032, 4033 }, { 4010, 4011 }, { 4022, 4023 },<br>
{ 4034, 4035 }, { 4012, 4013 }, { 4024, 4025 }, { 4036, 4037 },<br>
{ 4014, 4015 }, { 4026, 4027 }, { 4038, 4039 }, { 4152, 4153 },<br>
{ 12166, 12167 }, { 13926, 13927 }, { 18165, 18169 },<br>
{ 18166, 18170 }, { 18167, 18171 }, { 18168, 18172 } };</p>
<pre><code>	int[] icons = { 3965, 3966, 3967, 3968, 3969, 3970, 3971, 3972, 3973,
			3974, 3975, 3976, 3977, 3978, 3979, 3980, 3981, 3982, 4151,
			12165, 13925, 27227, 27228, 27229, 27230 };

	int[][] buttonCoords = { { 4, 4 }, { 66, 4 }, { 128, 4 }, { 4, 32 },
			{ 66, 32 }, { 128, 32 }, { 4, 60 }, { 66, 60 }, { 128, 60 },
			{ 4, 88 }, { 66, 88 }, { 128, 88 }, { 4, 116 }, { 66, 116 },
			{ 128, 116 }, { 4, 144 }, { 66, 144 }, { 128, 144 },
			{ 4, 172 }, { 66, 172 }, { 128, 172 }, { 4, 200 }, { 66, 200 },
			{ 128, 200 }, { 4, 229 } };
	int[][] iconCoords = { { 6, 6 }, { 69, 7 }, { 131, 6 }, { 9, 34 },
			{ 68, 33 }, { 131, 36 }, { 9, 64 }, { 67, 63 }, { 131, 61 },
			{ 7, 91 }, { 68, 94 }, { 133, 90 }, { 6, 118 }, { 70, 120 },
			{ 130, 118 }, { 6, 147 }, { 69, 146 }, { 132, 146 },
			{ 6, 173 }, { 69, 173 }, { 130, 174 }, { 6, 202 }, { 69, 201 },
			{ 131, 202 }, { 6, 230 } };
	int[][] textCoords = { { 31, 7, 44, 18 }, { 93, 7, 106, 18 },
			{ 155, 7, 168, 18 }, { 31, 35, 44, 46 }, { 93, 35, 106, 46 },
			{ 155, 35, 168, 46 }, { 31, 63, 44, 74 }, { 93, 63, 106, 74 },
			{ 155, 63, 168, 74 }, { 31, 91, 44, 102 },
			{ 93, 91, 106, 102 }, { 155, 91, 168, 102 },
			{ 31, 119, 44, 130 }, { 93, 119, 106, 130 },
			{ 155, 119, 168, 130 }, { 31, 147, 44, 158 },
			{ 93, 147, 106, 158 }, { 155, 147, 168, 158 },
			{ 31, 175, 44, 186 }, { 93, 175, 106, 186 },
			{ 155, 175, 168, 186 }, { 32, 203, 45, 214 },
			{ 94, 203, 107, 214 }, { 156, 203, 169, 214 },
			{ 32, 231, 45, 242 } };
	int[][] newText = { { 18165, 18166, 18167, 18168 },
			{ 18169, 18170, 18171, 18172 }, 
			{ 27223, 27224, 27225, 27226 } };
	for (int i = 0; i &lt; hovers.length; i++) {
		createSkillHover(hovers[i], 206 + i);
		//addTooltipBox(hovers[i], 205 + i);
		addSkillButton(buttons[i]);
		addImage(icons[i], spriteNames[i]);
	}
	for (int i = 0; i &lt; 4; i++) {
		addSkillText(newText[0][i], false, i + 21);
		addSkillText(newText[1][i], true, i + 21);
	}
	skill.children(icons.length + (text.length * 2) + hovers.length + buttons.length + 1);
	int frame = 0;
	RSInterface totalLevel = interfaceCache[3984];
	totalLevel.message = "@yel@Total level: %1";
	totalLevel.textDrawingAreas = fonts[2];
	skill.child(frame, 3984, 94, 237); frame++;
	for (int i = 0; i &lt; buttons.length; i++) {
		skill.child(frame, buttons[i], buttonCoords[i][0], buttonCoords[i][1]); frame++;
	}
	for (int i = 0; i &lt; icons.length; i++) {
		skill.child(frame, icons[i], iconCoords[i][0], iconCoords[i][1]); frame++;
	}
	for (int i = 0; i &lt; text.length; i++) {
		skill.child(frame, text[i][0], textCoords[i][0], textCoords[i][1]); frame++;
	}
	for (int i = 0; i &lt; text.length; i++) {
		skill.child(frame, text[i][1], textCoords[i][2], textCoords[i][3]); frame++;
	}
	for (int i = 0; i &lt; hovers.length; i++) {
		skill.child(frame, hovers[i], buttonCoords[i][0], buttonCoords[i][1]); frame++;
	}
}

public void children(int total) {
	children = new int[total];
	childX = new int[total];
	childY = new int[total];
}


public static void createSkillHover(int id, int x) {
	RSInterface hover = addInterface(id);
	hover.type = 8;
	hover.message = "TESTING!";
	hover.contentType = x;
	hover.width = 60;
	hover.height = 28;
	hover.inventoryHover = true;
}
public static void addImage(int id, String s) {
	RSInterface image = addInterface(id);
	image.type = 5;
	image.atActionType = 0;
	image.contentType = 0;
	image.width = 100;
	image.height = 100;
	image.sprite1 = getSprite(s);
}

public static void addSkillText(int id, boolean max, int skill) {
	RSInterface text = addInterface(id);
	text.id = id;
	text.parentID = id;
	text.type = 4;
	text.atActionType = 0;
	text.width = 15;
	text.height = 12;
	text.centerText = true;
	text.textShadow = true;
	text.textColor = 16776960;
	text.textDrawingAreas = fonts[0];
	if (!max) {
		text.valueIndexArray = new int[1][];
		text.valueIndexArray[0] = new int[3];
		text.valueIndexArray[0][0] = 1;
		text.valueIndexArray[0][1] = skill;
		text.valueIndexArray[0][2] = 0;
	} else {
		text.valueIndexArray = new int[2][];
		text.valueIndexArray[0] = new int[3];
		text.valueIndexArray[0][0] = 1;
		text.valueIndexArray[0][1] = skill;
		text.valueIndexArray[0][2] = 0;
		text.valueIndexArray[1] = new int[1];
		text.valueIndexArray[1][0] = 0;
	}
	text.message = "%1";
}

public static Sprite getSprite(String s) {
	Sprite image;
	try {
		image = new Sprite("/Skill/" + s);
		if (image != null) {
			return image;
		}
	} catch (Exception e) {
		e.printStackTrace();
		return null;
	}
	return image;
}

public boolean inventoryHover;[/code]
</code></pre>
<p>Download and extract the following sprites in your Sprites folder which should be found in the cache: <a href="http://www.mediafire.com/?n9jpla6je4hk4bd" rel="nofollow noopener">http://www.mediafire.com/?n9jpla6je4hk4bd</a></p>
<p><span class="bbcode-b"><em>Server Sided</em></span></p>
<p>In your PlayerAssisstant class, find the following void:</p>
<blockquote>void refreshSkill</blockquote>
<p>Now at the far end of this method you should see “case 20:” after the break; in that case add this following code:</p>
<p>[code]case 21://Hunter<br>
sendFrame126("<span class="mention">@yel</span>@" + c.playerLevel[21] + “”, 18166);<br>
sendFrame126("<span class="mention">@yel</span>@" + c.playerLevel[21] + “”, 18170);<br>
break;<br>
case 22: //construction<br>
sendFrame126("<span class="mention">@yel</span>@" + c.playerLevel[22] + “”, 18165);<br>
sendFrame126("<span class="mention">@yel</span>@" + c.playerLevel[22] + “”, 18169);<br>
break;<br>
case 23: //summoning<br>
sendFrame126("<span class="mention">@yel</span>@" + c.playerLevel[23] + “”, 18167);<br>
sendFrame126("<span class="mention">@yel</span>@" + c.playerLevel[23] + “”, 18171);<br>
sendFrame126("" + c.playerXP[23] + “”, 29803);<br>
break;</p>
<pre><code>		case 24: //Dungeoneering
			sendFrame126("@yel@" + c.playerLevel[24] + "", 18168);
			sendFrame126("@yel@" + c.playerLevel[24] + "", 18172);
			break;[/code]
</code></pre>
<p>Now in your Client class, introduce the following method:</p>
<p><code>public void RefreshAllSkills() {
		  for (int i = 0; i &lt; 25; i++) {
		   getPA().setSkillLevel(i, playerLevel[i], playerXP[i]);
		   getPA().refreshSkill(i);
		  }
		 }</code></p>
<p>Still in Client class find the following void:</p>
<blockquote>void destruct</blockquote>
<p>Right below </p><blockquote>Misc.println("[DEREGISTERED]: “+playerName+”");</blockquote>
<p>Add this:</p>
<pre><code class="lang-auto"></code></pre>
<p>Find the following method:</p>
<blockquote>void initialize</blockquote>
<p>At the far bottom of this method right after:</p>
<blockquote>getPA().clearClanChat();
			getPA().resetFollow();
			getPA().sendFrame36(172, autoRet);
			getPA().sendFrame36(173, isRunning2 ? 1 : 0);</blockquote>
<p>Add the following:</p>
<pre><code class="lang-auto"></code></pre>
<p>A picture of the skill-tab with all skills appearing perfectly:</p>
<p><img src="http://screensnapr.com/e/w8Euy6.jpg" alt width="" height=""></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/602-skilltab-fixed-client-server-sided/460401/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/602-skilltab-fixed-client-server-sided/460401/1</link>
        <pubDate>Tue, 18 Sep 2012 08:32:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-460401-1</guid>
        <source url="https://forum.moparisthebest.com/t/602-skilltab-fixed-client-server-sided/460401.rss">602 SkillTab Fixed Client/Server Sided</source>
      </item>
  </channel>
</rss>
