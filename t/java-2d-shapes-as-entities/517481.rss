<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Java - 2D Shapes as Entities</title>
    <link>https://forum.moparisthebest.com/t/java-2d-shapes-as-entities/517481</link>
    <description>So, for this application I&#39;m making, I am going to need to have 2D shapes rendered in a provided virtual environment where they&#39;re going to need to be freely moving and floating around in defined boundary and space. 

Firstly, whats the best way of handling shapes this way? Is handling them as entities the best and then checking their last position, or is there another way that is so much easier than this?

I am open to all opinions because I want to approach this from the best angle as possible.</description>
    
    <lastBuildDate>Sat, 20 Apr 2013 04:08:24 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/java-2d-shapes-as-entities/517481.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Java - 2D Shapes as Entities</title>
        <dc:creator><![CDATA[@RiiPiiNFtW RiiPiiNFtW]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/riipiinftw">@RiiPiiNFtW</a> wrote:</p>
          <blockquote>
              <p>[quote=“Lin, post:4, topic:517481”][quote author=RiiPiiNFtW link=topic=635739.msg4286615#msg4286615 date=1366429483]</p>
<p>[quote author=Lin link=topic=635739.msg4286612#msg4286612 date=1366429150]<br>
Look, I’m not hating on you specifically but I am so sick and tired of seeing topics in this section that can be much better answers in countless ways using sites Google brings up. You’re literally asking us how to handle objects that move, AKA how to write a game loop and update the game’s objects. Nobody here is going to spoonfeed you and you’re not going to get a very detailed answer because there are so many approaches and not many people here know any. Please, rely on Google for questions like these.<br>
[/quote]I am not looking for spoon feeding, and trust me, I’ve done my gooling and research. I asked for opinions on what the best way of handling this is. No offence, but I suggest reading the OP before making assumptions. [size=1pt]Sometimes I worry about you.[/size]<br>
[/quote]I did read the OP, and I’m confident in what I said. What you’re asking us for is the equivalent of writing a game engine. But, since you want help here (which generally isn’t a good place to ask, seeing how only a few active people would be able to really help), I’ll give you a brief answer.</p>
<p>You’ve got a few basic ways of doing it: A solid list of objects that gets iterated through and updates each object every frame, a list of objects for a specific region equipped with a list of objects that need updating and event-based updating. All of the above can actually be merged into one, but I take it you won’t be dealing with more than 100 objects, so the first choice will be the easiest and should do just fine.</p>
<p>These objects will contain position, velocity and “destroy” variables. If you want a more abstract approach, which probably isn’t necessary, you’ll have a base object containing these properties and a specific class for each type of shape extending it. Inside the class will be an update method, which gets called every frame. This is where moving, rotating and checking for collisions will be done. You’ll also have another method for rendering, which you’ll pass in (probably) a Graphics parameter. Assuming you clear the canvas every frame (which you should), you just draw the shape at the position.</p>
<p>So that brings you to your last class, which is the core of your engine. You have a fixed-time cycle that runs as long as the program is open and inside it (assuming you’re doing the first method of objects) loop twice through your objects. The first time, you’ll call their Update method and the second time, disposing and removing them from your list if their “destroy” property is set. You’ll also have another fixed-time cycle similar to the first that calls the render method for each object.</p>
<p>And that’s how to write the most basic and ‘efficient’ game, or cycle- and dynamic object-based program.[/quote]I am confident with what I said also. Thanks also, it kind of helps. But, this isn’t a game. Its a 2D simulation of reverse osmosis, so I will be using more than 100 objects, just maybe over 300. I’ll try to apply what you explained and see what I come up with.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-2d-shapes-as-entities/517481/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-2d-shapes-as-entities/517481/5</link>
        <pubDate>Sat, 20 Apr 2013 04:08:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-517481-5</guid>
        <source url="https://forum.moparisthebest.com/t/java-2d-shapes-as-entities/517481.rss">Java - 2D Shapes as Entities</source>
      </item>
      <item>
        <title>Java - 2D Shapes as Entities</title>
        <dc:creator><![CDATA[@Lin Lin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lin">@Lin</a> wrote:</p>
          <blockquote>
              <p>[quote=“RiiPiiNFtW, post:3, topic:517481”][quote author=Lin link=topic=635739.msg4286612#msg4286612 date=1366429150]<br>
Look, I’m not hating on you specifically but I am so sick and tired of seeing topics in this section that can be much better answers in countless ways using sites Google brings up. You’re literally asking us how to handle objects that move, AKA how to write a game loop and update the game’s objects. Nobody here is going to spoonfeed you and you’re not going to get a very detailed answer because there are so many approaches and not many people here know any. Please, rely on Google for questions like these.<br>
[/quote]I am not looking for spoon feeding, and trust me, I’ve done my gooling and research. I asked for opinions on what the best way of handling this is. No offence, but I suggest reading the OP before making assumptions. [size=1pt]Sometimes I worry about you.[/size][/quote]I did read the OP, and I’m confident in what I said. What you’re asking us for is the equivalent of writing a game engine. But, since you want help here (which generally isn’t a good place to ask, seeing how only a few active people would be able to really help), I’ll give you a brief answer.</p>
<p>You’ve got a few basic ways of doing it: A solid list of objects that gets iterated through and updates each object every frame, a list of objects for a specific region equipped with a list of objects that need updating and event-based updating. All of the above can actually be merged into one, but I take it you won’t be dealing with more than 100 objects, so the first choice will be the easiest and should do just fine.</p>
<p>These objects will contain position, velocity and “destroy” variables. If you want a more abstract approach, which probably isn’t necessary, you’ll have a base object containing these properties and a specific class for each type of shape extending it. Inside the class will be an update method, which gets called every frame. This is where moving, rotating and checking for collisions will be done. You’ll also have another method for rendering, which you’ll pass in (probably) a Graphics parameter. Assuming you clear the canvas every frame (which you should), you just draw the shape at the position.</p>
<p>So that brings you to your last class, which is the core of your engine. You have a fixed-time cycle that runs as long as the program is open and inside it (assuming you’re doing the first method of objects) loop twice through your objects. The first time, you’ll call their Update method and the second time, disposing and removing them from your list if their “destroy” property is set. You’ll also have another fixed-time cycle similar to the first that calls the render method for each object.</p>
<p>And that’s how to write the most basic and ‘efficient’ game, or cycle- and dynamic object-based program.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-2d-shapes-as-entities/517481/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-2d-shapes-as-entities/517481/4</link>
        <pubDate>Sat, 20 Apr 2013 04:04:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-517481-4</guid>
        <source url="https://forum.moparisthebest.com/t/java-2d-shapes-as-entities/517481.rss">Java - 2D Shapes as Entities</source>
      </item>
      <item>
        <title>Java - 2D Shapes as Entities</title>
        <dc:creator><![CDATA[@RiiPiiNFtW RiiPiiNFtW]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/riipiinftw">@RiiPiiNFtW</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="2" data-topic="517481">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/lin/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Lin:</div>
<blockquote>
<p>Look, I’m not hating on you specifically but I am so sick and tired of seeing topics in this section that can be much better answers in countless ways using sites Google brings up. You’re literally asking us how to handle objects that move, AKA how to write a game loop and update the game’s objects. Nobody here is going to spoonfeed you and you’re not going to get a very detailed answer because there are so many approaches and not many people here know any. Please, rely on Google for questions like these.</p>
</blockquote>
</aside>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-2d-shapes-as-entities/517481/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-2d-shapes-as-entities/517481/3</link>
        <pubDate>Sat, 20 Apr 2013 03:44:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-517481-3</guid>
        <source url="https://forum.moparisthebest.com/t/java-2d-shapes-as-entities/517481.rss">Java - 2D Shapes as Entities</source>
      </item>
      <item>
        <title>Java - 2D Shapes as Entities</title>
        <dc:creator><![CDATA[@Lin Lin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lin">@Lin</a> wrote:</p>
          <blockquote>
              <p>Look, I’m not hating on you specifically but I am so sick and tired of seeing topics in this section that can be much better answers in countless ways using sites Google brings up. You’re literally asking us how to handle objects that move, AKA how to write a game loop and update the game’s objects. Nobody here is going to spoonfeed you and you’re not going to get a very detailed answer because there are so many approaches and not many people here know any. Please, rely on Google for questions like these.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-2d-shapes-as-entities/517481/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-2d-shapes-as-entities/517481/2</link>
        <pubDate>Sat, 20 Apr 2013 03:39:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-517481-2</guid>
        <source url="https://forum.moparisthebest.com/t/java-2d-shapes-as-entities/517481.rss">Java - 2D Shapes as Entities</source>
      </item>
      <item>
        <title>Java - 2D Shapes as Entities</title>
        <dc:creator><![CDATA[@RiiPiiNFtW RiiPiiNFtW]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/riipiinftw">@RiiPiiNFtW</a> wrote:</p>
          <blockquote>
              <p>So, for this application I’m making, I am going to need to have 2D shapes rendered in a provided virtual environment where they’re going to need to be freely moving and floating around in defined boundary and space.</p>
<p>Firstly, whats the best way of handling shapes this way? Is handling them as entities the best and then checking their last position, or is there another way that is so much easier than this?</p>
<p>I am open to all opinions because I want to approach this from the best angle as possible.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-2d-shapes-as-entities/517481/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-2d-shapes-as-entities/517481/1</link>
        <pubDate>Sat, 20 Apr 2013 02:44:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-517481-1</guid>
        <source url="https://forum.moparisthebest.com/t/java-2d-shapes-as-entities/517481.rss">Java - 2D Shapes as Entities</source>
      </item>
  </channel>
</rss>
