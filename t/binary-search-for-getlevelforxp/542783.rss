<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Binary search - for getLevelForXP</title>
    <link>https://forum.moparisthebest.com/t/binary-search-for-getlevelforxp/542783</link>
    <description>i am trying to think out the logic behind it but am getting a little stuck due to the ranges :(
It is easy to tell if it is contained in the list, but when it comes to (XP[index] &lt;= exp &lt; XP[index+1]) i get stuck :(
EDIT:
Figured it out.

Feel free to run your own bench marks lol.
HANG on for code &gt;_&gt;
Average Benchmark - MAX_LEVEL 99, EXPERIENCE 200m
&lt;blockquote&gt;!!MAX_EXPERIENCE=200000000 and MAX_LEVEL=99!!
1000 iterations
Run# 1
 NEW:32
 OLD:130
Run# 2
 NEW:48
 OLD:127
Run# 3
 NEW:53
 OLD:80
Run# 4
 NEW:31
 OLD:87
10000 iterations
Run# 1
 NEW:253
 OLD:585
Run# 2
 NEW:157
 OLD:542
Run# 3
 NEW:157
 OLD:545
Run# 4
 NEW:154
 OLD:543
100000 iterations
Run# 1
 NEW:3268
 OLD:10041
Run# 2
 NEW:5765
 OLD:10243
Run# 3
 NEW:5742
 OLD:10221
Run# 4
 NEW:5208
 OLD:8973&lt;/blockquote&gt;

Max Level 150: Experience Integer.MAX_VALUE
[code]!!MAX_EXPERIENCE=2147483647 and MAX_LEVEL=150!!
1000 iterations
Run# 1
 NEW:38
 OLD:154
Run# 2
 NEW:33
 OLD:147
Run# 3
 NEW:36
 OLD:146
Run# 4
 NEW:33
 OLD:146
10000 iterations
Run# 1
 NEW:302
 OLD:1458
Run# 2
 NEW:264
 OLD:1182
Run# 3
 NEW:291
 OLD:1465
Run# 4
 NEW:289
 OLD:1442
100000 iterations
Run# 1
 NEW:4795
 OLD:14371
Run# 2
 NEW:5608
 OLD:14282
Run# 3
 NEW:5663
 OLD:14304
Run# 4
 NEW:5634
 OLD:14349[/code]

Code:
[code]
    private static final int MAX_LEVEL = 99;
    private static final int MAX_EXPERIENCE = 200000000;

    public static int getLevelForXPOld(int exp) {
        long points = 0;
        int output = 0;
        for (int lvl = 1; lvl &lt;= MAX_LEVEL; lvl++) {
            points += Math.floor((double) lvl + 300.0
                    * Math.pow(2.0, (double) lvl / 7.0));
            output = (int) Math.floor(points / 4);
            if (output &gt;= exp) {
                return lvl;
            }
        }
        return 0;
    }

    public static int getLevelForXP(int exp) {

        int low = 0;
        int high = MAX_LEVEL;
        int index;
        while (true) {
            index = (high + low) / 2;
            if (EXPERIENCE_MAP[index] &gt; exp) {
                high = index;
            } else if (EXPERIENCE_MAP[index] &lt; exp) {
                low = index;
            } else if (EXPERIENCE_MAP[index] == exp) {
                return index;
            }
            if (high - low &lt;= 1) {
                return (EXPERIENCE_MAP[high] &gt; exp ? low : high);
            }

        }

    }
    private static final int[] EXPERIENCE_MAP = new int[MAX_LEVEL + 1];

    static {
        for (int i = 1; i &lt; EXPERIENCE_MAP.length; i++) {
            EXPERIENCE_MAP[i] = getXPForLevel(i);

        }
        System.out.println(&quot;!!MAX_EXPERIENCE=&quot;+MAX_EXPERIENCE+&quot; and MAX_LEVEL=&quot;+MAX_LEVEL+&quot;!!&quot;);
        System.out.println(&quot;1000 iterations&quot;);

        long start;
        for (int j = 0; j &lt; 4; j++) {
            System.out.println(&quot;Run# &quot;+(j+1));
            start = System.currentTimeMillis();
            for (int i = 0; i &lt; 1000; i++) {
                getLevelForXP((int) (Math.random() * MAX_EXPERIENCE));
            }
            System.out.println(&quot; NEW:&quot; + (System.currentTimeMillis() - start));
            start = System.currentTimeMillis();
            for (int i = 0; i &lt; 1000; i++) {
                getLevelForXPOld((int) (Math.random() * MAX_EXPERIENCE));
            }
            System.out.println(&quot; OLD:&quot; + (System.currentTimeMillis() - start));
        }

        System.out.println(&quot;10000 iterations&quot;);
        for (int j = 0; j &lt; 4; j++) {
            System.out.println(&quot;Run# &quot;+(j+1));
            start = System.currentTimeMillis();
            for (int i = 0; i &lt; 10000; i++) {
                getLevelForXP((int) (Math.random() * MAX_EXPERIENCE));
            }
            System.out.println(&quot; NEW:&quot; + (System.currentTimeMillis() - start));

            start = System.currentTimeMillis();
            for (int i = 0; i &lt; 10000; i++) {
                getLevelForXPOld((int) (Math.random() * MAX_EXPERIENCE));
            }
            System.out.println(&quot; OLD:&quot; + (System.currentTimeMillis() - start));
        }
        System.out.println(&quot;100000 iterations&quot;);
        for (int j = 0; j &lt; 4; j++) {
            System.out.println(&quot;Run# &quot;+(j+1));
            start = System.currentTimeMillis();
            for (int i = 0; i &lt; 100000; i++) {
                getLevelForXP((int) (Math.random() * MAX_EXPERIENCE));
            }
            System.out.println(&quot; NEW:&quot; + (System.currentTimeMillis() - start));
            start = System.currentTimeMillis();
            for (int i = 0; i &lt; 100000; i++) {
                getLevelForXPOld((int) (Math.random() * MAX_EXPERIENCE));
            }
            System.out.println(&quot; OLD:&quot; + (System.currentTimeMillis() - start));
        }
    }

    private static int getXPForLevel(int level) {
        long points = 0;
        int output = 0;

        for (int lvl = 1; lvl &lt;= level; lvl++) {
            points += Math.floor((double) lvl + 300.0
                    * Math.pow(2.0, (double) lvl / 7.0));
            if (lvl &gt;= level) {
                return output;
            }
            output = (int) Math.floor(points / 4);
        }
        return 0;
    }[/code]</description>
    
    <lastBuildDate>Sat, 03 May 2014 22:41:10 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/binary-search-for-getlevelforxp/542783.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Binary search - for getLevelForXP</title>
        <dc:creator><![CDATA[@matzie matzie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/matzie">@matzie</a> wrote:</p>
          <blockquote>
              <p>i am trying to think out the logic behind it but am getting a little stuck due to the ranges <img src="https://forum.moparisthebest.com/images/emoji/twitter/frowning.png?v=5" title=":frowning:" class="emoji" alt=":frowning:"><br>
It is easy to tell if it is contained in the list, but when it comes to (XP[index] &lt;= exp &lt; XP[index+1]) i get stuck <img src="https://forum.moparisthebest.com/images/emoji/twitter/frowning.png?v=5" title=":frowning:" class="emoji" alt=":frowning:"><br>
EDIT:<br>
Figured it out.</p>
<p>Feel free to run your own bench marks lol.<br>
HANG on for code &gt;_&gt;<br>
Average Benchmark - MAX_LEVEL 99, EXPERIENCE 200m</p>
<blockquote>!!MAX_EXPERIENCE=200000000 and MAX_LEVEL=99!!
1000 iterations
Run# 1
 NEW:32
 OLD:130
Run# 2
 NEW:48
 OLD:127
Run# 3
 NEW:53
 OLD:80
Run# 4
 NEW:31
 OLD:87
10000 iterations
Run# 1
 NEW:253
 OLD:585
Run# 2
 NEW:157
 OLD:542
Run# 3
 NEW:157
 OLD:545
Run# 4
 NEW:154
 OLD:543
100000 iterations
Run# 1
 NEW:3268
 OLD:10041
Run# 2
 NEW:5765
 OLD:10243
Run# 3
 NEW:5742
 OLD:10221
Run# 4
 NEW:5208
 OLD:8973</blockquote>
<p>Max Level 150: Experience Integer.MAX_VALUE</p>
<p><code>!!MAX_EXPERIENCE=2147483647 and MAX_LEVEL=150!!
1000 iterations
Run# 1
 NEW:38
 OLD:154
Run# 2
 NEW:33
 OLD:147
Run# 3
 NEW:36
 OLD:146
Run# 4
 NEW:33
 OLD:146
10000 iterations
Run# 1
 NEW:302
 OLD:1458
Run# 2
 NEW:264
 OLD:1182
Run# 3
 NEW:291
 OLD:1465
Run# 4
 NEW:289
 OLD:1442
100000 iterations
Run# 1
 NEW:4795
 OLD:14371
Run# 2
 NEW:5608
 OLD:14282
Run# 3
 NEW:5663
 OLD:14304
Run# 4
 NEW:5634
 OLD:14349</code></p>
<p>Code:</p>
<p>[code]<br>
private static final int MAX_LEVEL = 99;<br>
private static final int MAX_EXPERIENCE = 200000000;</p>
<pre><code>public static int getLevelForXPOld(int exp) {
    long points = 0;
    int output = 0;
    for (int lvl = 1; lvl &lt;= MAX_LEVEL; lvl++) {
        points += Math.floor((double) lvl + 300.0
                * Math.pow(2.0, (double) lvl / 7.0));
        output = (int) Math.floor(points / 4);
        if (output &gt;= exp) {
            return lvl;
        }
    }
    return 0;
}

public static int getLevelForXP(int exp) {

    int low = 0;
    int high = MAX_LEVEL;
    int index;
    while (true) {
        index = (high + low) / 2;
        if (EXPERIENCE_MAP[index] &gt; exp) {
            high = index;
        } else if (EXPERIENCE_MAP[index] &lt; exp) {
            low = index;
        } else if (EXPERIENCE_MAP[index] == exp) {
            return index;
        }
        if (high - low &lt;= 1) {
            return (EXPERIENCE_MAP[high] &gt; exp ? low : high);
        }

    }

}
private static final int[] EXPERIENCE_MAP = new int[MAX_LEVEL + 1];

static {
    for (int i = 1; i &lt; EXPERIENCE_MAP.length; i++) {
        EXPERIENCE_MAP[i] = getXPForLevel(i);

    }
    System.out.println("!!MAX_EXPERIENCE="+MAX_EXPERIENCE+" and MAX_LEVEL="+MAX_LEVEL+"!!");
    System.out.println("1000 iterations");

    long start;
    for (int j = 0; j &lt; 4; j++) {
        System.out.println("Run# "+(j+1));
        start = System.currentTimeMillis();
        for (int i = 0; i &lt; 1000; i++) {
            getLevelForXP((int) (Math.random() * MAX_EXPERIENCE));
        }
        System.out.println(" NEW:" + (System.currentTimeMillis() - start));
        start = System.currentTimeMillis();
        for (int i = 0; i &lt; 1000; i++) {
            getLevelForXPOld((int) (Math.random() * MAX_EXPERIENCE));
        }
        System.out.println(" OLD:" + (System.currentTimeMillis() - start));
    }

    System.out.println("10000 iterations");
    for (int j = 0; j &lt; 4; j++) {
        System.out.println("Run# "+(j+1));
        start = System.currentTimeMillis();
        for (int i = 0; i &lt; 10000; i++) {
            getLevelForXP((int) (Math.random() * MAX_EXPERIENCE));
        }
        System.out.println(" NEW:" + (System.currentTimeMillis() - start));

        start = System.currentTimeMillis();
        for (int i = 0; i &lt; 10000; i++) {
            getLevelForXPOld((int) (Math.random() * MAX_EXPERIENCE));
        }
        System.out.println(" OLD:" + (System.currentTimeMillis() - start));
    }
    System.out.println("100000 iterations");
    for (int j = 0; j &lt; 4; j++) {
        System.out.println("Run# "+(j+1));
        start = System.currentTimeMillis();
        for (int i = 0; i &lt; 100000; i++) {
            getLevelForXP((int) (Math.random() * MAX_EXPERIENCE));
        }
        System.out.println(" NEW:" + (System.currentTimeMillis() - start));
        start = System.currentTimeMillis();
        for (int i = 0; i &lt; 100000; i++) {
            getLevelForXPOld((int) (Math.random() * MAX_EXPERIENCE));
        }
        System.out.println(" OLD:" + (System.currentTimeMillis() - start));
    }
}

private static int getXPForLevel(int level) {
    long points = 0;
    int output = 0;

    for (int lvl = 1; lvl &lt;= level; lvl++) {
        points += Math.floor((double) lvl + 300.0
                * Math.pow(2.0, (double) lvl / 7.0));
        if (lvl &gt;= level) {
            return output;
        }
        output = (int) Math.floor(points / 4);
    }
    return 0;
}[/code]</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/binary-search-for-getlevelforxp/542783/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/binary-search-for-getlevelforxp/542783/1</link>
        <pubDate>Sat, 03 May 2014 22:41:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-542783-1</guid>
        <source url="https://forum.moparisthebest.com/t/binary-search-for-getlevelforxp/542783.rss">Binary search - for getLevelForXP</source>
      </item>
  </channel>
</rss>
