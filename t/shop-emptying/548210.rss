<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Shop emptying</title>
    <link>https://forum.moparisthebest.com/t/shop-emptying/548210</link>
    <description>I&#39;m using PI and I want to know if there is a way to make a shop empty out all it&#39;s items (completely reset) after a certain action is done (I only need the method to empty the shop)
 I don&#39;t want to reset the shop, I want all the items in it gone
 please post if you know what to do. 

NOTE: I do not mean going into shop .cfg and removing items from the shop. it is a shop that is supposed to be empty, and then players add items to it, and after a certain amount of time the items in the shop disappear, and are gone out of it.
(I only need the method for clearing the shop)</description>
    
    <lastBuildDate>Wed, 03 Dec 2014 05:40:18 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/shop-emptying/548210.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Shop emptying</title>
        <dc:creator><![CDATA[@ReaperXScape ReaperXScape]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/reaperxscape">@ReaperXScape</a> wrote:</p>
          <blockquote>
              <p>edit: fixed</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/shop-emptying/548210/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/shop-emptying/548210/3</link>
        <pubDate>Wed, 03 Dec 2014 05:40:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-548210-3</guid>
        <source url="https://forum.moparisthebest.com/t/shop-emptying/548210.rss">Shop emptying</source>
      </item>
      <item>
        <title>Shop emptying</title>
        <dc:creator><![CDATA[@matzie matzie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/matzie">@matzie</a> wrote:</p>
          <blockquote>
              <p>I highly doubt your ShopHandler is structured like mine, because i wrote my own <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue_winking_eye.png?v=5" title=":stuck_out_tongue_winking_eye:" class="emoji" alt=":stuck_out_tongue_winking_eye:"> but your shop needs to have a default amount and item field as well. What your looking for is probably my tick() method. The entirity isnt finished, but you should now have an idea of what to do to make it work.</p>
<p>[code=java]package source.item;</p>
<p>import source.entity.player.Player;</p>
<p>/**<br>
*</p>
<ul>
<li>
<p><span class="mention">@author</span> Brock<br>
*/<br>
public class Shop extends ItemGroup {</p>
<p>//Max amount of item shop can hold<br>
private static final int MAX_ITEM_AMOUNT = Integer.MAX_VALUE;<br>
//Max number of items in a shop, 40 fit in interface<br>
public static final int MAX_ITEMS = 40;<br>
//items and amounts that appear in the shop from the start. should return<br>
//to these values over time via depletion or addition of items<br>
final int[] itemD, amountD;<br>
//the buying/selling style of the shop.<br>
final Style STYLE;<br>
//the name the shop should have<br>
private final String NAME;</p>
<p>//will be the way the shop knows how to charge<br>
final Currency CURRENCY;</p>
<p>public Shop(Style s, String name) {<br>
super(MAX_ITEMS);<br>
itemD = new int[MAX_ITEMS];<br>
amountD = new int[MAX_ITEMS];<br>
STYLE = s;<br>
NAME = name;<br>
CURRENCY = Currency.COINS;<br>
}</p>
<p>public boolean containsDefault(int itemID) {<br>
for (int item : itemD) {<br>
if (item == itemID) {<br>
return true;<br>
}<br>
}<br>
return false;<br>
}</p>
<p>public void setDefault(int[] items, int[] amounts) {<br>
if (items.length != amounts.length) {<br>
throw new IllegalArgumentException(“Array length mismatch in shop defaults”);<br>
}<br>
if (items.length &gt; MAX_ITEMS) {<br>
throw new IllegalArgumentException(“Too many items in shop”);<br>
}<br>
System.arraycopy(items, 0, item, 0, items.length);<br>
System.arraycopy(amounts, 0, amount, 0, amounts.length);<br>
System.arraycopy(items, 0, itemD, 0, items.length);<br>
System.arraycopy(amounts, 0, amountD, 0, amounts.length);<br>
}</p>
<p>public void tick() {<br>
for (int i = 0; i &lt; item.length; i++) {<br>
amount[i] += Integer.signum(amountD[i] - amount[i]);<br>
if (amount[i] == 0 &amp;&amp; item[i] != itemD[i]) {<br>
item[i] = -1;<br>
}<br>
}<br>
}</p>
<p><a class="mention" href="/u/override">@Override</a><br>
public void add(int item, int amount) {</p>
<p>}</p>
<p><a class="mention" href="/u/override">@Override</a><br>
public void remove(int item, int amount) {</p>
<p>}</p>
<p>/**<br>
*</p>
<ul>
<li>
<a class="mention" href="/u/return">@return</a> the max amount the shop can hold of any item.<br>
*/<br>
public int MAX() {<br>
return MAX_ITEM_AMOUNT;<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>
<p>Shop selling item to player.</p>
</li>
<li>
</li>
<li>
<p><a class="mention" href="/u/param">@param</a> player - the player buying from the shop</p>
</li>
<li>
<p><a class="mention" href="/u/param">@param</a> to - the inventory of the player</p>
</li>
<li>
<p><a class="mention" href="/u/param">@param</a> slot - the location in shop of the item they want to buy.</p>
</li>
<li>
<p><a class="mention" href="/u/param">@param</a> amount - how many they want to buy<br>
*/<br>
<a class="mention" href="/u/override">@Override</a><br>
public void moveTo(Player player, ItemGroup to, int slot, int amount) {<br>
if (to instanceof Inventory) { //Player buying item from the shop</p>
<pre><code> switch (STYLE) {
     case BUY_ANYTHING_SELL_NOTHING:
     case BUY_ANYTHING_SELL_NOTHING_CONSTANT:
         throw new ShopException("You cannot buy items from this shop.");
     case BUY_ANYTHING_SELL_CONTAINED:
         if (!containsDefault(getItem(slot))) {
             throw new ShopException("Shop doesn't sell personal items.");
         }
     default:

         final int ITEM_SHOP_IS_SELLING = getItem(slot);//value named by shops perspective
         final int MY_CURRENCY_AMOUNT = CURRENCY.amount(player);//how much "gold" the player has
         final int ITEM_COST = ItemCache.valueOf(ITEM_SHOP_IS_SELLING);// how much it costs in the shop
         final int MAX_PURCHASABLE = MY_CURRENCY_AMOUNT / ITEM_COST;
         final int SPACE_AVAILABLE;//the spaces i have available for buying

         if (ItemCache.isStackable(ITEM_SHOP_IS_SELLING)) {

             //and i have some already
             if (to.contains(ITEM_SHOP_IS_SELLING)) {
                 SPACE_AVAILABLE = to.MAX() - to.getAmount(to.getSlot(ITEM_SHOP_IS_SELLING));//then make the amount i can buy the difference of the upper limit and the amount i have(in my inventory)

                 //i dont have any yet
             } else {
                 //i can buy an exact amount and replace my "gold"
                 if (ITEM_COST != 0 &amp;&amp; MY_CURRENCY_AMOUNT % ITEM_COST == 0 &amp;&amp; MAX_PURCHASABLE &lt;= amount) {
                     //replaces the gold, can buy as many as you can hold
                     SPACE_AVAILABLE = to.MAX();

                     //i cannot buy an exact amount with my gold
                 } else {
                     //I Dont get a free slot from the gold, so if i have one already , its MAX, otherwise*already full) its 0
                     SPACE_AVAILABLE = to.getFreeSlots() &gt; 0 ? to.MAX() : 0;
                 }
             }

             //it is not stackable
         } else {
             //i can buy an exact amount with my gold - removing the stack for another free slot
             if (ITEM_COST != 0 &amp;&amp; MY_CURRENCY_AMOUNT % ITEM_COST == 0 &amp;&amp; MAX_PURCHASABLE &lt;= amount) {
                 //all the free slots, and replace the gold as well
                 SPACE_AVAILABLE = to.getFreeSlots() + 1;
                 //gold stays in inventory
             } else {
                 //only the free slots
                 SPACE_AVAILABLE = to.getFreeSlots();
             }

         }
         if (SPACE_AVAILABLE == 0) {
             //YOU DONT HAVE ENOUGH INVENTORY SPACE.
         }
         if (MAX_PURCHASABLE == 0) {
             //You don't have enough gold for that
         }
         if (amount &gt; SPACE_AVAILABLE) {//buying more than you have room for
             amount = SPACE_AVAILABLE;//cut it down
             //NOT ENOUGH ROOM IN YOUR INVENTORY(to buy them all)
         }
         if (amount &gt; MAX_PURCHASABLE) {//buying more than you can afford?
             amount = MAX_PURCHASABLE;//cut it down
         }
         final double BASE_RATE = (containsDefault(ITEM_SHOP_IS_SELLING) || STYLE.constantRate() ? 1 : 1.1);

         for (; amount &gt; 0; amount--) {
             double rateChange = 0;
             try {

                 if (!STYLE.constantRate()) {
                     rateChange = (amountD[slot] - this.amount[slot]) * (.1 * amountD[slot]);//every 10% change in default amount
                     if (rateChange &gt; .25) {
                         rateChange = .25;
                     } else if (rateChange &lt; -.25) {
                         rateChange = -.25;
                     }
                 }
                 CURRENCY.remove(player, (int) (ITEM_COST * (BASE_RATE + rateChange)));//charge the player
                 to.add(ITEM_SHOP_IS_SELLING, 1);//add the item(s)
             } catch (CurrencyException ce) {
                 break;
             } catch (ItemStackFullException | InventoryException ex) {
                 CURRENCY.add(player, (int) (ITEM_COST * (BASE_RATE + rateChange)));
                 break;
             }
         }

 }
</code></pre>
<p>}<br>
}</p>
</li>
</ul>
<p>public static enum Style {</p>
<pre><code> BUY_ANYTHING_SELL_ANYTHING,//BUYS ALL : SELLS ALL
 BUY_CONTAINED_SELL_CONTAINED,//BUYS CONTAINED : therefore SELLS CONTAINED
 BUY_ANYTHING_SELL_CONTAINED,//BUYS EVERYTHING : SELLS CONTAINED
 BUY_NOTHING_SELL_CONTAINED, //BUYS NONE : SELLS CONTAINED
 BUY_ANYTHING_SELL_NOTHING,// BUYS ALL : SELLS NONE
 BUY_NOTHING_SELL_CONTAINED_CONSTANT,//BUYS NONE : SELLS CONTAINED : CONSTANT PRICE
 BUY_ANYTHING_SELL_NOTHING_CONSTANT;// BUYS_ALL : SELLS NONE : CONSTANT PRICE

 boolean constantRate() {
     return this == BUY_NOTHING_SELL_CONTAINED_CONSTANT || this == BUY_ANYTHING_SELL_NOTHING_CONSTANT;
 }
</code></pre>
<p>}<br>
}<br>
[/code]</p>
</li>
</ul>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/shop-emptying/548210/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/shop-emptying/548210/2</link>
        <pubDate>Wed, 03 Dec 2014 04:58:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-548210-2</guid>
        <source url="https://forum.moparisthebest.com/t/shop-emptying/548210.rss">Shop emptying</source>
      </item>
      <item>
        <title>Shop emptying</title>
        <dc:creator><![CDATA[@ReaperXScape ReaperXScape]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/reaperxscape">@ReaperXScape</a> wrote:</p>
          <blockquote>
              <p>I’m using PI and I want to know if there is a way to make a shop empty out all it’s items (completely reset) after a certain action is done (I only need the method to empty the shop)<br>
I don’t want to reset the shop, I want all the items in it gone<br>
please post if you know what to do.</p>
<p>NOTE: I do not mean going into shop .cfg and removing items from the shop. it is a shop that is supposed to be empty, and then players add items to it, and after a certain amount of time the items in the shop disappear, and are gone out of it.<br>
(I only need the method for clearing the shop)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/shop-emptying/548210/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/shop-emptying/548210/1</link>
        <pubDate>Wed, 03 Dec 2014 03:42:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-548210-1</guid>
        <source url="https://forum.moparisthebest.com/t/shop-emptying/548210.rss">Shop emptying</source>
      </item>
  </channel>
</rss>
