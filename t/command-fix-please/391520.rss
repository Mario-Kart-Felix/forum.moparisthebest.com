<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Command fix please</title>
    <link>https://forum.moparisthebest.com/t/command-fix-please/391520</link>
    <description>Fix the &quot;master&quot; command please :) 
&lt;blockquote&gt;package server.model.players.packets;

import server.Config;
import server.Connection;
import server.Server;
import server.model.players.Client;
import server.model.players.PacketType;
import server.model.players.PlayerHandler;
import server.util.Misc;
import server.world.WorldMap;


/**
 * Commands
 **/
public class Commands implements PacketType {

	
	@Override
	public void processPacket(Client c, int packetType, int packetSize) {
	String playerCommand = c.getInStream().readString();
	if(Config.SERVER_DEBUG)
		Misc.println(c.playerName+&quot; playerCommand: &quot;+playerCommand);
		if (playerCommand.startsWith(&quot;/&quot;) &amp;&amp; playerCommand.length() &gt; 1) {
			if (c.clanId &gt;= 0) {
				System.out.println(playerCommand);
				playerCommand = playerCommand.substring(1);
				Server.clanChat.playerMessageToClan(c.playerId, playerCommand, c.clanId);
			} else {
				if (c.clanId != -1)
					c.clanId = -1;
				c.sendMessage(&quot;You are not in a clan.&quot;);
			}
			return;
		      

		}	

	        if (playerCommand.equalsIgnoreCase(&quot;master&quot;)) {
			for (int i = 0; i &lt; 7; i++) {
				c.playerLevel[i] = 99;
				c.playerXP[i] = c.getPA().getXPForLevel(100);
				c.getPA().refreshSkill(i);	
				}		
				

		if (playerCommand.startsWith(&quot;yell&quot;)) {
			String rank = &quot;&quot;;
			String Message = playerCommand.substring(4);
			if (c.playerRights == 0) {
				rank = &quot;[Player] [&quot;+ c.playerName +&quot;] : &quot;;
			}
			if (c.playerRights == 1 &amp;&amp; c.memberStatus == 1) {
				rank = &quot;&lt;shad=4081134&gt;[Mod]&lt;/col&gt;&lt;img=1&gt; [&quot;+ c.playerName +&quot;] : &quot;;
			}
			if (c.playerRights == 2 &amp;&amp; c.memberStatus == 1) {
				rank = &quot;[Admin] [&quot;+ c.playerName +&quot;] : &quot;;
			}
			if (c.playerRights == 4 &amp;&amp; c.memberStatus == 1) {
				rank = &quot;[Player] [&quot;+ c.playerName +&quot;] : &quot;;
			}
			if (c.playerRights == 4) {
				rank = &quot;[Player] [&quot;+ c.playerName +&quot;] : &quot;;
			}
			if (c.playerRights == 1) {
				rank = &quot;&lt;shad=4081134&gt;[Mod]&lt;/col&gt;&lt;img=1&gt; [&quot;+ c.playerName +&quot;] : &quot;;
			}
			if (c.playerRights == 2) {
				rank = &quot;&lt;shad=6581134&gt;[Admin]&lt;/col&gt;&lt;img=2&gt; [&quot;+ c.playerName +&quot;] : &quot;;
			}
			if (c.memberStatus == 1) {
				rank = &quot;&lt;shad=6081134&gt;[Donator]&lt;/col&gt;&lt;img=0&gt; [&quot;+ c.playerName +&quot;] : &quot;;
			}    
			if (c.memberStatus == 1 &amp;&amp; c.playerName.equalsIgnoreCase(&quot;Zycel&quot;)) {
				rank = &quot;&lt;shad=15695415&gt;[Owner]&lt;/col&gt;&lt;img=2&gt; [&quot;+ c.playerName +&quot;] : &quot;;
			}    
			if (c.memberStatus == 1 &amp;&amp; c.playerName.equalsIgnoreCase(&quot;#&quot;)) {
				rank = &quot;&lt;shad=15695415&gt;[Co-Owner]&lt;/col&gt;&lt;img=2&gt; [&quot;+ c.playerName +&quot;] : &quot;;
			}    
			for (int j = 0; j &lt; Server.playerHandler.players.length; j++) {
				if (Server.playerHandler.players[j] != null) {
					Client c2 = (Client)Server.playerHandler.players[j]; 
					c2.sendMessage(rank+Message);
				}
			}
		}
		if(c.playerRights &gt;= 0) {
			if (playerCommand.equalsIgnoreCase(&quot;players&quot;)) {
				c.sendMessage(&quot;There are currently &quot;+PlayerHandler.getPlayerCount()+ &quot; players online.&quot;);
			}
			if (playerCommand.equalsIgnoreCase(&quot;commands&quot;)) {
				c.sendMessage(&quot;Your current commands - ::players, ::changepass ::info ::resetdef&quot;);
			}
			if (playerCommand.startsWith(&quot;changepass&quot;) &amp;&amp; playerCommand.length() &gt; 10) {
				c.playerPass = playerCommand.substring(10);
				c.sendMessage(&quot;Your password is now: &quot; + c.playerPass);			
			}
			if (playerCommand.startsWith(&quot;resetdef&quot;)) {
				if (c.inWild())
				return;
				for (int j = 0; j &lt; c.playerEquipment.length; j++) {
					if (c.playerEquipment[j] &gt; 0) {
						c.sendMessage(&quot;Please take all your armour and weapons off before using this command.&quot;);
						return;
					}
				}
				try {
					int skill = 1;
					int level = 1;
					c.playerXP[skill] = c.getPA().getXPForLevel(level)+5;
					c.playerLevel[skill] = c.getPA().getLevelForXP(c.playerXP[skill]);
					c.getPA().refreshSkill(skill);
				} catch (Exception e){}
			}
			/*if (playerCommand.startsWith(&quot;rules&quot;)) {
				//c.sendMessage(&quot;Welcome to InPr&quot;);
				c.sendMessage(&quot;1.Do not ask staff for any stuff (mute).&quot;);
				c.sendMessage(&quot;2.No rules in pking, (Gbs fights are your own risk)&quot;);
				c.sendMessage(&quot;3.Do not use offensive Language. (Mild flaming aloud)&quot;);
				c.sendMessage(&quot;4.Do not Scam Passwords or Items (IPBAN)&quot;);
				c.sendMessage(&quot;5.Auto Clickers are NOT Allowed, Auto Typers are if timer is set to +5 Seconds&quot;);
				//c.sendMessage(&quot;if you set the timer to 5 + Seconds&quot;);
			}*/
			/*if (playerCommand.startsWith(&quot;updates&quot;)) {
				c.sendMessage(&quot;alot;)&quot;);
				c.sendMessage(&quot;&quot;);
				c.sendMessage(&quot;&quot;);
				c.sendMessage(&quot;&quot;);
				c.sendMessage(&quot;&quot;);	
			}*/
			/*if (playerCommand.equals(&quot;donate&quot;)) {
				c.sendMessage(&quot;Thank you for thinking about donating to us&quot;);
				c.sendMessage(&quot;You can donate by Phone, Sms, Paypal and iDeal&quot;);
				c.sendMessage(&quot;Paypal is most recommend.&quot;);
				c.sendMessage(&quot;Donating can get you great rewards like godswords, rares or cash&quot;);
				c.sendMessage(&quot;to donate go to www.pkfeverserver.webs.com&quot;);
			}*/

}
		if(c.memberStatus == 1) {
			if (playerCommand.startsWith(&quot;rtask&quot;)) {
				c.taskAmount = -1;
				c.slayerTask = 0;
			}
}
		if(c.playerRights &gt;= 1) {
			if (playerCommand.startsWith(&quot;xteleto&quot;)) {
				if (c.inWild())
				return;
				String name = playerCommand.substring(8);
				for (int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
					if (Server.playerHandler.players[i] != null) {
						if (Server.playerHandler.players[i].playerName.equalsIgnoreCase(name)) {
							c.getPA().movePlayer(Server.playerHandler.players[i].getX(), Server.playerHandler.players[i].getY(), Server.playerHandler.players[i].heightLevel);
						}
					}
				}			
			}
			if (playerCommand.startsWith(&quot;mute&quot;)) {
				try {	
					String playerToBan = playerCommand.substring(5);
					Connection.addNameToMuteList(playerToBan);
					for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
						if(Server.playerHandler.players[i] != null) {
							if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
								Client c2 = (Client)Server.playerHandler.players[i];
								c.sendMessage(&quot;you have muted&quot; + c.playerName);
								c2.sendMessage(&quot;You have been muted by: &quot; + c.playerName);
								break;
							} 
						}
					}
				} catch(Exception e) {
					c.sendMessage(&quot;Player Must Be Offline.&quot;);
				}			
			}
			if (playerCommand.startsWith(&quot;unmute&quot;)) {
				try {	
					String playerToBan = playerCommand.substring(7);
					Connection.unMuteUser(playerToBan);
				} catch(Exception e) {
					c.sendMessage(&quot;Player Must Be Offline.&quot;);
				}			
			}
}
		if(c.playerRights &gt;= 2) {
			if (playerCommand.startsWith(&quot;teletome&quot;)) {
				if (c.inWild())
				return;
				try {	
					String playerToBan = playerCommand.substring(9);
					for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
						if(Server.playerHandler.players[i] != null) {
							if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
								Client c2 = (Client)Server.playerHandler.players[i];
								c2.teleportToX = c.absX;
								c2.teleportToY = c.absY;
								c2.heightLevel = c.heightLevel;
								c.sendMessage(&quot;You have teleported &quot; + c2.playerName + &quot; to you.&quot;);
								c2.sendMessage(&quot;You have been teleported to &quot; + c.playerName + &quot;&quot;);
							} 
						}
					}
				} catch(Exception e) {
					c.sendMessage(&quot;Player Must Be Offline.&quot;);
				}
			}
			if (playerCommand.startsWith(&quot;movehome&quot;)) {
				try {	
					String playerToBan = playerCommand.substring(9);
					for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
						if(Server.playerHandler.players[i] != null) {
							if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
								Client c2 = (Client)Server.playerHandler.players[i];
								c2.teleportToX = 3096;
								c2.teleportToY = 3468;
								c2.heightLevel = c.heightLevel;
								c.sendMessage(&quot;You have teleported &quot; + c2.playerName + &quot; to Home&quot;);
								c2.sendMessage(&quot;You have been teleported to home&quot;);
							} 
						}
					}
				} catch(Exception e) {
					c.sendMessage(&quot;Player Must Be Offline.&quot;);
				}
			}
			if (playerCommand.startsWith(&quot;ipmute&quot;)) {
				try {	
					String playerToBan = playerCommand.substring(7);
					for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
						if(Server.playerHandler.players[i] != null) {
							if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
								Connection.addIpToMuteList(Server.playerHandler.players[i].connectedFrom);
								c.sendMessage(&quot;You have IP Muted the user: &quot;+Server.playerHandler.players[i].playerName);
								Client c2 = (Client)Server.playerHandler.players[i];
								c2.sendMessage(&quot;You have been muted by: &quot; + c.playerName);
								break;
							} 
						}
					}
				} catch(Exception e) {
					c.sendMessage(&quot;Player Must Be Offline.&quot;);
				}			
			}
			if (playerCommand.startsWith(&quot;unipmute&quot;)) {
				try {	
					String playerToBan = playerCommand.substring(9);
					for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
						if(Server.playerHandler.players[i] != null) {
							if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
								Connection.unIPMuteUser(Server.playerHandler.players[i].connectedFrom);
								c.sendMessage(&quot;You have Un Ip-Muted the user: &quot;+Server.playerHandler.players[i].playerName);
								break;
							} 
						}
					}
				} catch(Exception e) {
					c.sendMessage(&quot;Player Must Be Offline.&quot;);
				}			
			}
			if (playerCommand.startsWith(&quot;setlevel&quot;)) {
			if (c.inWild())
			return;
			for (int j = 0; j &lt; c.playerEquipment.length; j++) {
				if (c.playerEquipment[j] &gt; 0) {
					c.sendMessage(&quot;Please take all your armour and weapons off before using this command.&quot;);
					return;
				}
			}
			try {
				String[] args = playerCommand.split(&quot; &quot;);
				int skill = Integer.parseInt(args[1]);
				int level = Integer.parseInt(args[2]);
				if (level &gt; 99)
				level = 99;
				else if (level &lt; 0)
				level = 1;
				c.playerXP[skill] = c.getPA().getXPForLevel(level)+5;
				c.playerLevel[skill] = c.getPA().getLevelForXP(c.playerXP[skill]);
				c.getPA().refreshSkill(skill);
			} catch (Exception e){}
		}
		if (playerCommand.startsWith(&quot;tele&quot;)) {
			String[] arg = playerCommand.split(&quot; &quot;);
			if (arg.length &gt; 3)
			c.getPA().movePlayer(Integer.parseInt(arg[1]),Integer.parseInt(arg[2]),Integer.parseInt(arg[3]));
			else if (arg.length == 3)
			c.getPA().movePlayer(Integer.parseInt(arg[1]),Integer.parseInt(arg[2]),c.heightLevel);
		}
		if (playerCommand.equalsIgnoreCase(&quot;mypos&quot;)) {
			c.sendMessage(&quot;X: &quot;+c.absX);
			c.sendMessage(&quot;Y: &quot;+c.absY);
		}
		if (playerCommand.startsWith(&quot;fakels&quot;)) {
			int item = Integer.parseInt(playerCommand.split(&quot; &quot;)[1]);
			Server.clanChat.handleLootShare(c, item, 1);
		}
		if (playerCommand.startsWith(&quot;banuser&quot;) /*&amp;&amp; playerCommand.charAt(7) == &#39; &#39; not neccesary  i didnt add the commands lol :P just FYI : D*/) { // use as ::ban name
			try {	
				String playerToBan = playerCommand.substring(8);
				Connection.addNameToBanList(playerToBan);
				Connection.addNameToFile(playerToBan);
				for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
					if(Server.playerHandler.players[i] != null) {
						if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
							Server.playerHandler.players[i].disconnected = true;
						} 
					}
				}
			} catch(Exception e) {
				c.sendMessage(&quot;Player Must Be Offline.&quot;);
			}
		}
		if (playerCommand.startsWith(&quot;banip&quot;)) { // use as ::ipban name
			try {
				String playerToBan = playerCommand.substring(6);
				for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
					if(Server.playerHandler.players[i] != null) {
						if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
							Connection.addIpToBanList(Server.playerHandler.players[i].connectedFrom);
							Connection.addIpToFile(Server.playerHandler.players[i].connectedFrom);
							c.sendMessage(&quot;You have IP banned the user: &quot;+Server.playerHandler.players[i].playerName+&quot; with the host: &quot;+Server.playerHandler.players[i].connectedFrom);
							Server.playerHandler.players[i].disconnected = true;
							
						} 
					}
				}
			} catch(Exception e) {
				c.sendMessage(&quot;Player Must Be Offline.&quot;); 
			}
		}
		if (playerCommand.startsWith(&quot;item&quot;)) {
			try {
				/*if (c.inWild() || isInPVP()) {
					c.sendMessage(&quot;No Item Spawning In Wildy/PVP.&quot;);
						} else {*/
				String[] args = playerCommand.split(&quot; &quot;);
				if (args.length == 3) {
					int newItemID = Integer.parseInt(args[1]);
					int newItemAmount = Integer.parseInt(args[2]);
					if ((newItemID &lt;= 20000) &amp;&amp; (newItemID &gt;= 0)) {
						c.getItems().addItem(newItemID, newItemAmount);		
					} else {
						c.sendMessage(&quot;No such item.&quot;);
					}
				} else {
					c.sendMessage(&quot;Use as ::item 995 200 for example 200 gp&quot;);
				}
			} catch(Exception e) {
				
			}
		}
		if (playerCommand.startsWith(&quot;unban&quot;)) {
			try {	
				String playerToBan = playerCommand.substring(6);
				Connection.removeNameFromBanList(playerToBan);
				c.sendMessage(playerToBan + &quot; has been unbanned.&quot;);
			} catch(Exception e) {
				c.sendMessage(&quot;Player Must Be Offline.&quot;);
			}
		}
}
		if(c.playerRights == 3) {
			if (playerCommand.startsWith(&quot;update&quot;) &amp;&amp; c.playerName.equalsIgnoreCase(&quot;public int&quot;)) {
				String[] args = playerCommand.split(&quot; &quot;);
				int a = Integer.parseInt(args[1]);
				PlayerHandler.updateSeconds = a;
				PlayerHandler.updateAnnounced = false;
				PlayerHandler.updateRunning = true;
				PlayerHandler.updateStartTime = System.currentTimeMillis();
			}
			if (playerCommand.startsWith(&quot;reloaddrops&quot;) &amp;&amp; c.playerRights &gt;= 3) {
				Server.npcDrops = null;
				Server.npcDrops = new server.model.npcs.NPCDrops();
				for (int j = 0; j &lt; Server.playerHandler.players.length; j++) {
					if (Server.playerHandler.players[j] != null) {
						Client c2 = (Client)Server.playerHandler.players[j];
						c2.sendMessage(&quot;[&quot; + c.playerName + &quot;] &quot; + &quot;NPC Drops have been reloaded.&quot;);
					}
				}
			}
			if(playerCommand.startsWith(&quot;npc&quot;)) {
				try {
					int newNPC = Integer.parseInt(playerCommand.substring(4));
					if(newNPC &gt; 0) {
						Server.npcHandler.spawnNpc(c, newNPC, c.absX, c.absY, 0, 0, 120, 7, 70, 70, false, false);
						c.sendMessage(&quot;You spawn a Npc.&quot;);
					} else {
						c.sendMessage(&quot;No such NPC.&quot;);
					}
				} catch(Exception e) {
					
				}			
			}

			if (playerCommand.startsWith(&quot;interface&quot;)) {
				String[] args = playerCommand.split(&quot; &quot;);
				c.getPA().showInterface(Integer.parseInt(args[1]));
			}
			if (playerCommand.startsWith(&quot;gfx&quot;)) {
				String[] args = playerCommand.split(&quot; &quot;);
				c.gfx0(Integer.parseInt(args[1]));
			}
			if (playerCommand.startsWith(&quot;object&quot;)) {
				String[] args = playerCommand.split(&quot; &quot;);				
				c.getPA().object(Integer.parseInt(args[1]), c.absX, c.absY, 0, 10);
			}
			if (playerCommand.startsWith(&quot;anim&quot;)) {
				String[] args = playerCommand.split(&quot; &quot;);
				c.startAnimation(Integer.parseInt(args[1]));
				c.getPA().requestUpdates();
			}
			if (playerCommand.equals(&quot;spec&quot;)) {
				if (!c.inWild())
				c.specAmount = 10.0;
			}

			if(playerCommand.startsWith(&quot;npn&quot;)) {
				try {
					int newNPC = Integer.parseInt(playerCommand.substring(4));
					if(newNPC &gt; 0) {
						Server.npcHandler.spawnNpc(c, newNPC, c.absX, c.absY, 0, 0, 500, 7, 70, 70, false, false);
						c.sendMessage(&quot;You spawn a Npc.&quot;);
					} else {
						c.sendMessage(&quot;No such NPC.&quot;);
					}
				} catch(Exception e) {
					
				}			
			}
			if (playerCommand.startsWith(&quot;reloadshops&quot;)) {
				Server.shopHandler = new server.world.ShopHandler();
			}
			if (playerCommand.startsWith(&quot;givedonator&quot;) &amp;&amp; (c.playerName.equalsIgnoreCase(&quot;zycel&quot;)  || c.playerName.equalsIgnoreCase(&quot;#&quot;))) { // use as ::prm name
				try {	
					String playerToG = playerCommand.substring(12);
					for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
						if(Server.playerHandler.players[i] != null) {
							if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToG)) {
								Server.playerHandler.players[i].memberStatus += 1;
								c.sendMessage(&quot;You have given  &quot;+Server.playerHandler.players[i].playerName+&quot; A Promotion Cfrom: &quot;+Server.playerHandler.players[i].connectedFrom);
								Client c2 = (Client)Server.playerHandler.players[i];
								c2.sendMessage(&quot;You have been given donator status &quot;+c.memberStatus+&quot;&quot;);							
							} 
						}
					}
				} catch(Exception e) {
					c.sendMessage(&quot;Player Must Be Offline.&quot;);
				}
			}

			if (playerCommand.startsWith(&quot;promote&quot;) &amp;&amp; (c.playerName.equalsIgnoreCase(&quot;zycel&quot;)  || c.playerName.equalsIgnoreCase(&quot;#&quot;))) { // use as ::prm name
				try {	
					String playerToG = playerCommand.substring(8);
					for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
						if(Server.playerHandler.players[i] != null) {
							if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToG)) {
								Server.playerHandler.players[i].playerRights += 1;
								c.sendMessage(&quot;You have given  &quot;+Server.playerHandler.players[i].playerName+&quot; A Promotion Cfrom: &quot;+Server.playerHandler.players[i].connectedFrom);
								Client c2 = (Client)Server.playerHandler.players[i];
								c2.sendMessage(&quot;You have been promoted to &quot;+c.playerRights+&quot;&quot;);						
							} 
						}
					}
				} catch(Exception e) {
					c.sendMessage(&quot;Player Must Be Offline.&quot;);
				}
			}
			if (playerCommand.startsWith(&quot;demote&quot;) &amp;&amp; (c.playerName.equalsIgnoreCase(&quot;zycel&quot;)  || c.playerName.equalsIgnoreCase(&quot;#&quot;))) { // use as ::prm name
				try {	
					String playerToG = playerCommand.substring(7);
					for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
						if(Server.playerHandler.players[i] != null) {
							if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToG)) {
								Server.playerHandler.players[i].playerRights = 0;
								c.sendMessage(&quot;You have given  &quot;+Server.playerHandler.players[i].playerName+&quot; A Promotion Cfrom: &quot;+Server.playerHandler.players[i].connectedFrom);
								Client c2 = (Client)Server.playerHandler.players[i];
								c2.sendMessage(&quot;You have been demoted to &quot;+c.playerRights+&quot;&quot;);
								Server.playerHandler.players[i].disconnected = true;						
							} 
						}
					}
				} catch(Exception e) {
					c.sendMessage(&quot;Player Must Be Offline.&quot;);
				}
			}

		}
	}
}&lt;/blockquote&gt;</description>
    
    <lastBuildDate>Mon, 18 Apr 2011 21:36:20 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/command-fix-please/391520.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Command fix please</title>
        <dc:creator><![CDATA[@unleashed_pvp unleashed pvp]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unleashed_pvp">@unleashed_pvp</a> wrote:</p>
          <blockquote>
              <p>Can you add this for me ?</p>
<p>}</p>
<pre><code>        if (playerCommand.equalsIgnoreCase("master")) {
		for (int i = 0; i &lt; 7; i++) {
			c.playerLevel[i] = 99;
			c.playerXP[i] = c.getPA().getXPForLevel(100);
			c.getPA().refreshSkill(i);	
			}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/command-fix-please/391520/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/command-fix-please/391520/3</link>
        <pubDate>Mon, 18 Apr 2011 21:36:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-391520-3</guid>
        <source url="https://forum.moparisthebest.com/t/command-fix-please/391520.rss">Command fix please</source>
      </item>
      <item>
        <title>Command fix please</title>
        <dc:creator><![CDATA[@youridudock youridudock]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/youridudock">@youridudock</a> wrote:</p>
          <blockquote>
              <p>I have</p>
<p><code>if (playerCommand.equalsIgnoreCase("master")) {
c.playerLevel[0] = 99;
c.playerLevel[1] = 99;
c.playerLevel[2] = 99;
c.playerLevel[3] = 99;
c.playerLevel[5] = 99;
c.playerLevel[4] = 99;
c.playerLevel[6] = 99;
c.playerXP[0] = c.getPA().getXPForLevel(100);
c.playerXP[1] = c.getPA().getXPForLevel(100);
c.playerXP[2] = c.getPA().getXPForLevel(100);
c.playerXP[3] = c.getPA().getXPForLevel(100);
c.playerXP[4] = c.getPA().getXPForLevel(100);
c.playerXP[5] = c.getPA().getXPForLevel(100);
c.playerXP[6] = c.getPA().getXPForLevel(100);
c.getPA().requestUpdates();
c.getPA().refreshSkill(0);
c.getPA().refreshSkill(1);
c.getPA().refreshSkill(2);
c.getPA().refreshSkill(3);
c.getPA().refreshSkill(5);
c.getPA().refreshSkill(4);
c.getPA().refreshSkill(6);
}</code></p>
<p>I know this is a long methode but it works! <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/command-fix-please/391520/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/command-fix-please/391520/2</link>
        <pubDate>Mon, 18 Apr 2011 21:13:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-391520-2</guid>
        <source url="https://forum.moparisthebest.com/t/command-fix-please/391520.rss">Command fix please</source>
      </item>
      <item>
        <title>Command fix please</title>
        <dc:creator><![CDATA[@unleashed_pvp unleashed pvp]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unleashed_pvp">@unleashed_pvp</a> wrote:</p>
          <blockquote>
              <p>Fix the “master” command please <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<blockquote>package server.model.players.packets;
<p>import server.Config;<br>
import server.Connection;<br>
import server.Server;<br>
import server.model.players.Client;<br>
import server.model.players.PacketType;<br>
import server.model.players.PlayerHandler;<br>
import server.util.Misc;<br>
import server.world.WorldMap;</p>
<p>/**</p>
<ul>
<li>
<p>Commands<br>
**/<br>
public class Commands implements PacketType {</p>
<p><a class="mention" href="/u/override">@Override</a><br>
public void processPacket(Client c, int packetType, int packetSize) {<br>
String playerCommand = c.getInStream().readString();<br>
if(Config.SERVER_DEBUG)<br>
Misc.println(c.playerName+" playerCommand: “+playerCommand);<br>
if (playerCommand.startsWith(”/") &amp;&amp; playerCommand.length() &gt; 1) {<br>
if (c.clanId &gt;= 0) {<br>
System.out.println(playerCommand);<br>
playerCommand = playerCommand.substring(1);<br>
Server.clanChat.playerMessageToClan(c.playerId, playerCommand, c.clanId);<br>
} else {<br>
if (c.clanId != -1)<br>
c.clanId = -1;<br>
c.sendMessage(“You are not in a clan.”);<br>
}<br>
return;</p>
<pre><code> }	

     if (playerCommand.equalsIgnoreCase("master")) {
 	for (int i = 0; i &lt; 7; i++) {
 		c.playerLevel[i] = 99;
 		c.playerXP[i] = c.getPA().getXPForLevel(100);
 		c.getPA().refreshSkill(i);	
 		}		
 		

 if (playerCommand.startsWith("yell")) {
 	String rank = "";
 	String Message = playerCommand.substring(4);
 	if (c.playerRights == 0) {
 		rank = "[Player] ["+ c.playerName +"] : ";
 	}
 	if (c.playerRights == 1 &amp;&amp; c.memberStatus == 1) {
 		rank = "&lt;shad=4081134&gt;[Mod]&lt;/col&gt;&lt;img=1&gt; ["+ c.playerName +"] : ";
 	}
 	if (c.playerRights == 2 &amp;&amp; c.memberStatus == 1) {
 		rank = "[Admin] ["+ c.playerName +"] : ";
 	}
 	if (c.playerRights == 4 &amp;&amp; c.memberStatus == 1) {
 		rank = "[Player] ["+ c.playerName +"] : ";
 	}
 	if (c.playerRights == 4) {
 		rank = "[Player] ["+ c.playerName +"] : ";
 	}
 	if (c.playerRights == 1) {
 		rank = "&lt;shad=4081134&gt;[Mod]&lt;/col&gt;&lt;img=1&gt; ["+ c.playerName +"] : ";
 	}
 	if (c.playerRights == 2) {
 		rank = "&lt;shad=6581134&gt;[Admin]&lt;/col&gt;&lt;img=2&gt; ["+ c.playerName +"] : ";
 	}
 	if (c.memberStatus == 1) {
 		rank = "&lt;shad=6081134&gt;[Donator]&lt;/col&gt;&lt;img=0&gt; ["+ c.playerName +"] : ";
 	}    
 	if (c.memberStatus == 1 &amp;&amp; c.playerName.equalsIgnoreCase("Zycel")) {
 		rank = "&lt;shad=15695415&gt;[Owner]&lt;/col&gt;&lt;img=2&gt; ["+ c.playerName +"] : ";
 	}    
 	if (c.memberStatus == 1 &amp;&amp; c.playerName.equalsIgnoreCase("#")) {
 		rank = "&lt;shad=15695415&gt;[Co-Owner]&lt;/col&gt;&lt;img=2&gt; ["+ c.playerName +"] : ";
 	}    
 	for (int j = 0; j &lt; Server.playerHandler.players.length; j++) {
 		if (Server.playerHandler.players[j] != null) {
 			Client c2 = (Client)Server.playerHandler.players[j]; 
 			c2.sendMessage(rank+Message);
 		}
 	}
 }
 if(c.playerRights &gt;= 0) {
 	if (playerCommand.equalsIgnoreCase("players")) {
 		c.sendMessage("There are currently "+PlayerHandler.getPlayerCount()+ " players online.");
 	}
 	if (playerCommand.equalsIgnoreCase("commands")) {
 		c.sendMessage("Your current commands - ::players, ::changepass ::info ::resetdef");
 	}
 	if (playerCommand.startsWith("changepass") &amp;&amp; playerCommand.length() &gt; 10) {
 		c.playerPass = playerCommand.substring(10);
 		c.sendMessage("Your password is now: " + c.playerPass);			
 	}
 	if (playerCommand.startsWith("resetdef")) {
 		if (c.inWild())
 		return;
 		for (int j = 0; j &lt; c.playerEquipment.length; j++) {
 			if (c.playerEquipment[j] &gt; 0) {
 				c.sendMessage("Please take all your armour and weapons off before using this command.");
 				return;
 			}
 		}
 		try {
 			int skill = 1;
 			int level = 1;
 			c.playerXP[skill] = c.getPA().getXPForLevel(level)+5;
 			c.playerLevel[skill] = c.getPA().getLevelForXP(c.playerXP[skill]);
 			c.getPA().refreshSkill(skill);
 		} catch (Exception e){}
 	}
 	/*if (playerCommand.startsWith("rules")) {
 		//c.sendMessage("Welcome to InPr");
 		c.sendMessage("1.Do not ask staff for any stuff (mute).");
 		c.sendMessage("2.No rules in pking, (Gbs fights are your own risk)");
 		c.sendMessage("3.Do not use offensive Language. (Mild flaming aloud)");
 		c.sendMessage("4.Do not Scam Passwords or Items (IPBAN)");
 		c.sendMessage("5.Auto Clickers are NOT Allowed, Auto Typers are if timer is set to +5 Seconds");
 		//c.sendMessage("if you set the timer to 5 + Seconds");
 	}*/
 	/*if (playerCommand.startsWith("updates")) {
 		c.sendMessage("alot;)");
 		c.sendMessage("");
 		c.sendMessage("");
 		c.sendMessage("");
 		c.sendMessage("");	
 	}*/
 	/*if (playerCommand.equals("donate")) {
 		c.sendMessage("Thank you for thinking about donating to us");
 		c.sendMessage("You can donate by Phone, Sms, Paypal and iDeal");
 		c.sendMessage("Paypal is most recommend.");
 		c.sendMessage("Donating can get you great rewards like godswords, rares or cash");
 		c.sendMessage("to donate go to www.pkfeverserver.webs.com");
 	}*/
</code></pre>
</li>
</ul>
<p>}<br>
if(c.memberStatus == 1) {<br>
if (playerCommand.startsWith(“rtask”)) {<br>
c.taskAmount = -1;<br>
c.slayerTask = 0;<br>
}<br>
}<br>
if(c.playerRights &gt;= 1) {<br>
if (playerCommand.startsWith(“xteleto”)) {<br>
if (c.inWild())<br>
return;<br>
String name = playerCommand.substring(8);<br>
for (int i = 0; i &lt; Config.MAX_PLAYERS; i++) {<br>
if (Server.playerHandler.players[i] != null) {<br>
if (Server.playerHandler.players[i].playerName.equalsIgnoreCase(name)) {<br>
c.getPA().movePlayer(Server.playerHandler.players[i].getX(), Server.playerHandler.players[i].getY(), Server.playerHandler.players[i].heightLevel);<br>
}<br>
}<br>
}			<br>
}<br>
if (playerCommand.startsWith(“mute”)) {<br>
try {	<br>
String playerToBan = playerCommand.substring(5);<br>
Connection.addNameToMuteList(playerToBan);<br>
for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {<br>
if(Server.playerHandler.players[i] != null) {<br>
if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {<br>
Client c2 = (Client)Server.playerHandler.players[i];<br>
c.sendMessage(“you have muted” + c.playerName);<br>
c2.sendMessage("You have been muted by: " + c.playerName);<br>
break;<br>
}<br>
}<br>
}<br>
} catch(Exception e) {<br>
c.sendMessage(“Player Must Be Offline.”);<br>
}			<br>
}<br>
if (playerCommand.startsWith(“unmute”)) {<br>
try {	<br>
String playerToBan = playerCommand.substring(7);<br>
Connection.unMuteUser(playerToBan);<br>
} catch(Exception e) {<br>
c.sendMessage(“Player Must Be Offline.”);<br>
}			<br>
}<br>
}<br>
if(c.playerRights &gt;= 2) {<br>
if (playerCommand.startsWith(“teletome”)) {<br>
if (c.inWild())<br>
return;<br>
try {	<br>
String playerToBan = playerCommand.substring(9);<br>
for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {<br>
if(Server.playerHandler.players[i] != null) {<br>
if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {<br>
Client c2 = (Client)Server.playerHandler.players[i];<br>
c2.teleportToX = c.absX;<br>
c2.teleportToY = c.absY;<br>
c2.heightLevel = c.heightLevel;<br>
c.sendMessage(“You have teleported " + c2.playerName + " to you.”);<br>
c2.sendMessage("You have been teleported to " + c.playerName + “”);<br>
}<br>
}<br>
}<br>
} catch(Exception e) {<br>
c.sendMessage(“Player Must Be Offline.”);<br>
}<br>
}<br>
if (playerCommand.startsWith(“movehome”)) {<br>
try {	<br>
String playerToBan = playerCommand.substring(9);<br>
for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {<br>
if(Server.playerHandler.players[i] != null) {<br>
if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {<br>
Client c2 = (Client)Server.playerHandler.players[i];<br>
c2.teleportToX = 3096;<br>
c2.teleportToY = 3468;<br>
c2.heightLevel = c.heightLevel;<br>
c.sendMessage(“You have teleported " + c2.playerName + " to Home”);<br>
c2.sendMessage(“You have been teleported to home”);<br>
}<br>
}<br>
}<br>
} catch(Exception e) {<br>
c.sendMessage(“Player Must Be Offline.”);<br>
}<br>
}<br>
if (playerCommand.startsWith(“ipmute”)) {<br>
try {	<br>
String playerToBan = playerCommand.substring(7);<br>
for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {<br>
if(Server.playerHandler.players[i] != null) {<br>
if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {<br>
Connection.addIpToMuteList(Server.playerHandler.players[i].connectedFrom);<br>
c.sendMessage("You have IP Muted the user: "+Server.playerHandler.players[i].playerName);<br>
Client c2 = (Client)Server.playerHandler.players[i];<br>
c2.sendMessage("You have been muted by: " + c.playerName);<br>
break;<br>
}<br>
}<br>
}<br>
} catch(Exception e) {<br>
c.sendMessage(“Player Must Be Offline.”);<br>
}			<br>
}<br>
if (playerCommand.startsWith(“unipmute”)) {<br>
try {	<br>
String playerToBan = playerCommand.substring(9);<br>
for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {<br>
if(Server.playerHandler.players[i] != null) {<br>
if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {<br>
Connection.unIPMuteUser(Server.playerHandler.players[i].connectedFrom);<br>
c.sendMessage("You have Un Ip-Muted the user: “+Server.playerHandler.players[i].playerName);<br>
break;<br>
}<br>
}<br>
}<br>
} catch(Exception e) {<br>
c.sendMessage(“Player Must Be Offline.”);<br>
}			<br>
}<br>
if (playerCommand.startsWith(“setlevel”)) {<br>
if (c.inWild())<br>
return;<br>
for (int j = 0; j &lt; c.playerEquipment.length; j++) {<br>
if (c.playerEquipment[j] &gt; 0) {<br>
c.sendMessage(“Please take all your armour and weapons off before using this command.”);<br>
return;<br>
}<br>
}<br>
try {<br>
String[] args = playerCommand.split(” “);<br>
int skill = Integer.parseInt(args[1]);<br>
int level = Integer.parseInt(args[2]);<br>
if (level &gt; 99)<br>
level = 99;<br>
else if (level &lt; 0)<br>
level = 1;<br>
c.playerXP[skill] = c.getPA().getXPForLevel(level)+5;<br>
c.playerLevel[skill] = c.getPA().getLevelForXP(c.playerXP[skill]);<br>
c.getPA().refreshSkill(skill);<br>
} catch (Exception e){}<br>
}<br>
if (playerCommand.startsWith(“tele”)) {<br>
String[] arg = playerCommand.split(” ");<br>
if (arg.length &gt; 3)<br>
c.getPA().movePlayer(Integer.parseInt(arg[1]),Integer.parseInt(arg[2]),Integer.parseInt(arg[3]));<br>
else if (arg.length == 3)<br>
c.getPA().movePlayer(Integer.parseInt(arg[1]),Integer.parseInt(arg[2]),c.heightLevel);<br>
}<br>
if (playerCommand.equalsIgnoreCase(“mypos”)) {<br>
c.sendMessage("X: "+c.absX);<br>
c.sendMessage("Y: “+c.absY);<br>
}<br>
if (playerCommand.startsWith(“fakels”)) {<br>
int item = Integer.parseInt(playerCommand.split(” ")[1]);<br>
Server.clanChat.handleLootShare(c, item, 1);<br>
}<br>
if (playerCommand.startsWith(“banuser”) /<em>&amp;&amp; playerCommand.charAt(7) == ’ ’ not neccesary  i didnt add the commands lol <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"> just FYI : D</em>/) { // use as ::ban name<br>
try {	<br>
String playerToBan = playerCommand.substring(8);<br>
Connection.addNameToBanList(playerToBan);<br>
Connection.addNameToFile(playerToBan);<br>
for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {<br>
if(Server.playerHandler.players[i] != null) {<br>
if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {<br>
Server.playerHandler.players[i].disconnected = true;<br>
}<br>
}<br>
}<br>
} catch(Exception e) {<br>
c.sendMessage(“Player Must Be Offline.”);<br>
}<br>
}<br>
if (playerCommand.startsWith(“banip”)) { // use as ::ipban name<br>
try {<br>
String playerToBan = playerCommand.substring(6);<br>
for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {<br>
if(Server.playerHandler.players[i] != null) {<br>
if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {<br>
Connection.addIpToBanList(Server.playerHandler.players[i].connectedFrom);<br>
Connection.addIpToFile(Server.playerHandler.players[i].connectedFrom);<br>
c.sendMessage("You have IP banned the user: “+Server.playerHandler.players[i].playerName+” with the host: "+Server.playerHandler.players[i].connectedFrom);<br>
Server.playerHandler.players[i].disconnected = true;</p>
<pre><code>					} 
				}
			}
		} catch(Exception e) {
			c.sendMessage("Player Must Be Offline."); 
		}
	}
	if (playerCommand.startsWith("item")) {
		try {
			/*if (c.inWild() || isInPVP()) {
				c.sendMessage("No Item Spawning In Wildy/PVP.");
					} else {*/
			String[] args = playerCommand.split(" ");
			if (args.length == 3) {
				int newItemID = Integer.parseInt(args[1]);
				int newItemAmount = Integer.parseInt(args[2]);
				if ((newItemID &lt;= 20000) &amp;&amp; (newItemID &gt;= 0)) {
					c.getItems().addItem(newItemID, newItemAmount);		
				} else {
					c.sendMessage("No such item.");
				}
			} else {
				c.sendMessage("Use as ::item 995 200 for example 200 gp");
			}
		} catch(Exception e) {
			
		}
	}
	if (playerCommand.startsWith("unban")) {
		try {	
			String playerToBan = playerCommand.substring(6);
			Connection.removeNameFromBanList(playerToBan);
			c.sendMessage(playerToBan + " has been unbanned.");
		} catch(Exception e) {
			c.sendMessage("Player Must Be Offline.");
		}
	}
</code></pre>
<p>}<br>
if(c.playerRights == 3) {<br>
if (playerCommand.startsWith(“update”) &amp;&amp; c.playerName.equalsIgnoreCase(“public int”)) {<br>
String[] args = playerCommand.split(" “);<br>
int a = Integer.parseInt(args[1]);<br>
PlayerHandler.updateSeconds = a;<br>
PlayerHandler.updateAnnounced = false;<br>
PlayerHandler.updateRunning = true;<br>
PlayerHandler.updateStartTime = System.currentTimeMillis();<br>
}<br>
if (playerCommand.startsWith(“reloaddrops”) &amp;&amp; c.playerRights &gt;= 3) {<br>
Server.npcDrops = null;<br>
Server.npcDrops = new server.model.npcs.NPCDrops();<br>
for (int j = 0; j &lt; Server.playerHandler.players.length; j++) {<br>
if (Server.playerHandler.players[j] != null) {<br>
Client c2 = (Client)Server.playerHandler.players[j];<br>
c2.sendMessage(”[" + c.playerName + "] " + “NPC Drops have been reloaded.”);<br>
}<br>
}<br>
}<br>
if(playerCommand.startsWith(“npc”)) {<br>
try {<br>
int newNPC = Integer.parseInt(playerCommand.substring(4));<br>
if(newNPC &gt; 0) {<br>
Server.npcHandler.spawnNpc(c, newNPC, c.absX, c.absY, 0, 0, 120, 7, 70, 70, false, false);<br>
c.sendMessage(“You spawn a Npc.”);<br>
} else {<br>
c.sendMessage(“No such NPC.”);<br>
}<br>
} catch(Exception e) {</p>
<pre><code>			}			
		}

		if (playerCommand.startsWith("interface")) {
			String[] args = playerCommand.split(" ");
			c.getPA().showInterface(Integer.parseInt(args[1]));
		}
		if (playerCommand.startsWith("gfx")) {
			String[] args = playerCommand.split(" ");
			c.gfx0(Integer.parseInt(args[1]));
		}
		if (playerCommand.startsWith("object")) {
			String[] args = playerCommand.split(" ");				
			c.getPA().object(Integer.parseInt(args[1]), c.absX, c.absY, 0, 10);
		}
		if (playerCommand.startsWith("anim")) {
			String[] args = playerCommand.split(" ");
			c.startAnimation(Integer.parseInt(args[1]));
			c.getPA().requestUpdates();
		}
		if (playerCommand.equals("spec")) {
			if (!c.inWild())
			c.specAmount = 10.0;
		}

		if(playerCommand.startsWith("npn")) {
			try {
				int newNPC = Integer.parseInt(playerCommand.substring(4));
				if(newNPC &gt; 0) {
					Server.npcHandler.spawnNpc(c, newNPC, c.absX, c.absY, 0, 0, 500, 7, 70, 70, false, false);
					c.sendMessage("You spawn a Npc.");
				} else {
					c.sendMessage("No such NPC.");
				}
			} catch(Exception e) {
				
			}			
		}
		if (playerCommand.startsWith("reloadshops")) {
			Server.shopHandler = new server.world.ShopHandler();
		}
		if (playerCommand.startsWith("givedonator") &amp;&amp; (c.playerName.equalsIgnoreCase("zycel")  || c.playerName.equalsIgnoreCase("#"))) { // use as ::prm name
			try {	
				String playerToG = playerCommand.substring(12);
				for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
					if(Server.playerHandler.players[i] != null) {
						if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToG)) {
							Server.playerHandler.players[i].memberStatus += 1;
							c.sendMessage("You have given  "+Server.playerHandler.players[i].playerName+" A Promotion Cfrom: "+Server.playerHandler.players[i].connectedFrom);
							Client c2 = (Client)Server.playerHandler.players[i];
							c2.sendMessage("You have been given donator status "+c.memberStatus+"");							
						} 
					}
				}
			} catch(Exception e) {
				c.sendMessage("Player Must Be Offline.");
			}
		}

		if (playerCommand.startsWith("promote") &amp;&amp; (c.playerName.equalsIgnoreCase("zycel")  || c.playerName.equalsIgnoreCase("#"))) { // use as ::prm name
			try {	
				String playerToG = playerCommand.substring(8);
				for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
					if(Server.playerHandler.players[i] != null) {
						if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToG)) {
							Server.playerHandler.players[i].playerRights += 1;
							c.sendMessage("You have given  "+Server.playerHandler.players[i].playerName+" A Promotion Cfrom: "+Server.playerHandler.players[i].connectedFrom);
							Client c2 = (Client)Server.playerHandler.players[i];
							c2.sendMessage("You have been promoted to "+c.playerRights+"");						
						} 
					}
				}
			} catch(Exception e) {
				c.sendMessage("Player Must Be Offline.");
			}
		}
		if (playerCommand.startsWith("demote") &amp;&amp; (c.playerName.equalsIgnoreCase("zycel")  || c.playerName.equalsIgnoreCase("#"))) { // use as ::prm name
			try {	
				String playerToG = playerCommand.substring(7);
				for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
					if(Server.playerHandler.players[i] != null) {
						if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToG)) {
							Server.playerHandler.players[i].playerRights = 0;
							c.sendMessage("You have given  "+Server.playerHandler.players[i].playerName+" A Promotion Cfrom: "+Server.playerHandler.players[i].connectedFrom);
							Client c2 = (Client)Server.playerHandler.players[i];
							c2.sendMessage("You have been demoted to "+c.playerRights+"");
							Server.playerHandler.players[i].disconnected = true;						
						} 
					}
				}
			} catch(Exception e) {
				c.sendMessage("Player Must Be Offline.");
			}
		}

	}
}
</code></pre>
<p>}</p>
</blockquote>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/command-fix-please/391520/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/command-fix-please/391520/1</link>
        <pubDate>Mon, 18 Apr 2011 21:08:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-391520-1</guid>
        <source url="https://forum.moparisthebest.com/t/command-fix-please/391520.rss">Command fix please</source>
      </item>
  </channel>
</rss>
