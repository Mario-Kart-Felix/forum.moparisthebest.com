<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Magic&amp;Range shoot through walls</title>
    <link>https://forum.moparisthebest.com/t/magic-range-shoot-through-walls/523939</link>
    <description>You can shoot through walls when using magic and range. Its a easy way to safe spot because the npc&#39;s are clipped and wont walk through the walls so i want to fix this but i am not sure how. Help would be great!

Base: Xerascape (PI)
Public void attacknpc:
[code]public void attackNpc(int i) {	
if (Server.npcHandler.checkSlayerHelm(c,i)) {
			c.slayerHelmAffect = true;
			} else {
			c.slayerHelmAffect = false;
			}	
		if (Server.npcHandler.npcs[i] != null) {
			if (Server.npcHandler.npcs[i].isDead || Server.npcHandler.npcs[i].MaxHP &lt;= 0) {
				c.usingMagic = false;
				c.faceUpdate(0);
				c.npcIndex = 0;
				return;
			}			
			if(c.respawnTimer &gt; 0) {
				c.npcIndex = 0;
				return;
			}
			if (Server.npcHandler.npcs[i].underAttackBy &gt; 0 &amp;&amp; Server.npcHandler.npcs[i].underAttackBy != c.playerId &amp;&amp; !Server.npcHandler.npcs[i].inMulti()) {
				c.npcIndex = 0;
				c.sendMessage(&quot;This monster is already in combat.&quot;);
				return;
			}
			if ((c.underAttackBy &gt; 0 || c.underAttackBy2 &gt; 0) &amp;&amp; c.underAttackBy2 != i &amp;&amp; !c.inMulti()) {
				resetPlayerAttack();
				c.sendMessage(&quot;I am already under attack.&quot;);
				return;
			}
			if (!goodSlayer(i)) {
				resetPlayerAttack();
				return;
			}
			if (Server.npcHandler.npcs[i].spawnedBy != c.playerId &amp;&amp; Server.npcHandler.npcs[i].spawnedBy &gt; 0) {
				resetPlayerAttack();
				c.sendMessage(&quot;This monster was not spawned for you.&quot;);
				return;
			}
			c.followId2 = i;
			c.followId = 0;
			if(c.attackTimer &lt;= 0) {
				boolean usingBow = false;
				boolean usingArrows = false;
				boolean usingOtherRangeWeapons = false;
				boolean usingCross = c.playerEquipment[c.playerWeapon] == 9185;
				c.bonusAttack = 0;
				c.rangeItemUsed = 0;
				c.projectileStage = 0;
				if (c.autocasting) {
					c.spellId = c.autocastId;
					c.usingMagic = true;
				}
				if(c.spellId &gt; 0) {
                    c.usingMagic = true;
                }
					if(usingBow &amp;&amp; Config.SOUND == true) {
c.sendSound(c.getSound().SHOOT_ARROW);
}
				c.attackTimer = getAttackDelay(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase());
				c.specAccuracy = 1.0;
				c.specDamage = 1.0;
				if(!c.usingMagic) {
					for (int bowId : c.BOWS) {
						if(c.playerEquipment[c.playerWeapon] == bowId) {
							usingBow = true;
							for (int arrowId : c.ARROWS) {
								if(c.playerEquipment[c.playerArrows] == arrowId) {
									usingArrows = true;
								}
							}
						}
					}
					
					for (int otherRangeId : c.OTHER_RANGE_WEAPONS) {
						if(c.playerEquipment[c.playerWeapon] == otherRangeId) {
							usingOtherRangeWeapons = true;
						}
					}
				}
				if (armaNpc(i) &amp;&amp; !usingCross &amp;&amp; !usingBow &amp;&amp; !c.usingMagic &amp;&amp; !usingCrystalBow() &amp;&amp; !usingOtherRangeWeapons) {				
					resetPlayerAttack();
					return;
				}
				if((!c.goodDistance(c.getX(), c.getY(), Server.npcHandler.npcs[i].getX(), Server.npcHandler.npcs[i].getY(), 2) &amp;&amp; (usingHally() &amp;&amp; !usingOtherRangeWeapons &amp;&amp; !usingBow &amp;&amp; !c.usingMagic)) ||(!c.goodDistance(c.getX(), c.getY(), Server.npcHandler.npcs[i].getX(), Server.npcHandler.npcs[i].getY(), 4) &amp;&amp; (usingOtherRangeWeapons &amp;&amp; !usingBow &amp;&amp; !c.usingMagic)) || (!c.goodDistance(c.getX(), c.getY(), Server.npcHandler.npcs[i].getX(), Server.npcHandler.npcs[i].getY(), 1) &amp;&amp; (!usingOtherRangeWeapons &amp;&amp; !usingHally() &amp;&amp; !usingBow &amp;&amp; !c.usingMagic)) || ((!c.goodDistance(c.getX(), c.getY(), Server.npcHandler.npcs[i].getX(), Server.npcHandler.npcs[i].getY(), 8) &amp;&amp; (usingBow || c.usingMagic)))) {
					c.attackTimer = 2;
					return;
				}
				
				if(!usingCross &amp;&amp; !usingArrows &amp;&amp; usingBow &amp;&amp; (c.playerEquipment[c.playerWeapon] &lt; 4212 || c.playerEquipment[c.playerWeapon] &gt; 4223)) {
					c.sendMessage(&quot;You have run out of arrows!&quot;);
					c.stopMovement();
					c.npcIndex = 0;
					return;
				} 
				if(correctBowAndArrows() &lt; c.playerEquipment[c.playerArrows] &amp;&amp; Config.CORRECT_ARROWS &amp;&amp; usingBow &amp;&amp; !usingCrystalBow() &amp;&amp; c.playerEquipment[c.playerWeapon] != 9185) {
					c.sendMessage(&quot;You can&#39;t use &quot;+c.getItems().getItemName(c.playerEquipment[c.playerArrows]).toLowerCase()+&quot;s with a &quot;+c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase()+&quot;.&quot;);
					c.stopMovement();
					c.npcIndex = 0;
					return;
				}
				
				
				if (c.playerEquipment[c.playerWeapon] == 9185 &amp;&amp; !properBolts()) {
					c.sendMessage(&quot;You must use bolts with a crossbow.&quot;);
					c.stopMovement();
					resetPlayerAttack();
					return;				
				}
				
				if(usingBow || c.usingMagic || usingOtherRangeWeapons || (c.goodDistance(c.getX(), c.getY(), Server.npcHandler.npcs[i].getX(), Server.npcHandler.npcs[i].getY(), 2) &amp;&amp; usingHally())) {
					c.stopMovement();
				}

				if(!checkMagicReqs(c.spellId)) {
					c.stopMovement();
					c.npcIndex = 0;
					return;
				}
				
				c.faceUpdate(i);
				Server.npcHandler.npcs[i].underAttackBy = c.playerId;
				Server.npcHandler.npcs[i].lastDamageTaken = System.currentTimeMillis();
				if(c.usingSpecial &amp;&amp; !c.usingMagic) {
					if(checkSpecAmount(c.playerEquipment[c.playerWeapon])){
						c.lastWeaponUsed = c.playerEquipment[c.playerWeapon];
						c.lastArrowUsed = c.playerEquipment[c.playerArrows];
						activateSpecial(c.playerEquipment[c.playerWeapon], i);
						return;
					} else {
						c.sendMessage(&quot;You don&#39;t have the required special energy to use this attack.&quot;);
						c.usingSpecial = false;
						c.getItems().updateSpecialBar();
						c.npcIndex = 0;
						return;
					}
				}
				c.specMaxHitIncrease = 0;
				if(!c.usingMagic) {
					c.startAnimation(getWepAnim(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase()));
				} else {
					c.startAnimation(c.MAGIC_SPELLS[c.spellId][2]);
				}
				c.lastWeaponUsed = c.playerEquipment[c.playerWeapon];
				c.lastArrowUsed = c.playerEquipment[c.playerArrows];
				if(!usingBow &amp;&amp; !c.usingMagic &amp;&amp; !usingOtherRangeWeapons) { // melee hit delay
				if(Config.SOUND) {
c.sendSound(Sound.GetWeaponSound(c));
}
					c.hitDelay = getHitDelay(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase());
					c.projectileStage = 0;
					c.oldNpcIndex = i;
				}
				
				if(usingBow &amp;&amp; !usingOtherRangeWeapons &amp;&amp; !c.usingMagic || usingCross) { // range hit delay					
					if (usingCross)
						c.usingBow = true;
					if (c.fightMode == c.RAPID)
						c.attackTimer--;
					c.lastArrowUsed = c.playerEquipment[c.playerArrows];
					c.lastWeaponUsed = c.playerEquipment[c.playerWeapon];
					c.gfx100(getRangeStartGFX());	
					c.hitDelay = getHitDelay(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase());
					c.projectileStage = 1;
					c.oldNpcIndex = i;
					if(c.playerEquipment[c.playerWeapon] &gt;= 4212 &amp;&amp; c.playerEquipment[c.playerWeapon] &lt;= 4223) {
						c.rangeItemUsed = c.playerEquipment[c.playerWeapon];
						c.crystalBowArrowCount++;
						c.lastArrowUsed = 0;
					} else {
						c.rangeItemUsed = c.playerEquipment[c.playerArrows];
						c.getItems().deleteArrow();	
					}
					fireProjectileNpc();
				}
							
				
				if(usingOtherRangeWeapons &amp;&amp; !c.usingMagic &amp;&amp; !usingBow) {	// knives, darts, etc hit delay		
					c.rangeItemUsed = c.playerEquipment[c.playerWeapon];
					c.getItems().deleteEquipment();
					c.gfx100(getRangeStartGFX());
					c.lastArrowUsed = 0;
					c.hitDelay = getHitDelay(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase());
					c.projectileStage = 1;
					c.oldNpcIndex = i;
					if (c.fightMode == c.RAPID)
						c.attackTimer--;
					fireProjectileNpc();	
				}

				if(c.usingMagic) {	// magic hit delay
						int pX = c.getX();
						int pY = c.getY();
						int nX = Server.npcHandler.npcs[i].getX();
						int nY = Server.npcHandler.npcs[i].getY();
						int offX = (pY - nY)* -1;
						int offY = (pX - nX)* -1;
						c.castingMagic = true;
						c.projectileStage = 2;
						if(c.MAGIC_SPELLS[c.spellId][3] &gt; 0) {
							if(getStartGfxHeight() == 100) {
								c.gfx100(c.MAGIC_SPELLS[c.spellId][3]);
							} else {
								c.gfx0(c.MAGIC_SPELLS[c.spellId][3]);
							}
						}
						if(c.MAGIC_SPELLS[c.spellId][4] &gt; 0) {
							c.getPA().createPlayersProjectile(pX, pY, offX, offY, 50, 78, c.MAGIC_SPELLS[c.spellId][4], getStartHeight(), getEndHeight(), i + 1, 50);
						}
						c.hitDelay = getHitDelay(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase());
						c.oldNpcIndex = i;
						c.oldSpellId = c.spellId;
						c.spellId = 0;
						if (!c.autocasting)
							c.npcIndex = 0;
				}
           if (Misc.random(15) == 0) {
                        npcleechAttack(0);
                }
                if (Misc.random(15) == 0) {
                        npcleechDefence(0);
                }
                if (Misc.random(15) == 0) {
                        npcleechStrength(0);
                }
                if (Misc.random(20) == 0) {
                        npcleechSpecial(0);
                }
                if (Misc.random(15) == 0) {
                        npcleechRanged(0);
                }
                if (Misc.random(15) == 0) {
                        npcleechMagic(0);
                }

				if(usingBow &amp;&amp; Config.CRYSTAL_BOW_DEGRADES) { // crystal bow degrading
					if(c.playerEquipment[c.playerWeapon] == 4212) { // new crystal bow becomes full bow on the first shot
						c.getItems().wearItem(4214, 1, 3);
					}
					if(c.crystalBowArrowCount &gt;= 250){
						switch(c.playerEquipment[c.playerWeapon]) {
							
							case 4223: // 1/10 bow
							c.getItems().wearItem(-1, 1, 3);
							c.sendMessage(&quot;Your crystal bow has fully degraded.&quot;);
							if(!c.getItems().addItem(4207, 1)) {
								Server.itemHandler.createGroundItem(c, 4207, c.getX(), c.getY(), 1, c.getId());
							}
							c.crystalBowArrowCount = 0;
							break;
							
							default:
							c.getItems().wearItem(++c.playerEquipment[c.playerWeapon], 1, 3);
							c.sendMessage(&quot;Your crystal bow degrades.&quot;);
							c.crystalBowArrowCount = 0;
							break;
							
						
						}
					}
					}
				//Client c2 = (Client)Server.playerHandler.players[i];
			/*	if(!c.goodDistance(c.absX, c.absY, c2.absX, c2.absY, 8) &amp;&amp; (c.usingMagic || c.usingBow || usingOtherRangeWeapons || rangeWep())){
				c.follow(c2.playerId, 1, 8);
				//c.sendMessage(&quot;Applying MR follow 1.&quot;);
				}
				if(!c.goodDistance(c.absX, c.absY, c2.absX, c2.absY, 1) &amp;&amp; (!c.usingMagic &amp;&amp; !c.usingBow &amp;&amp; !usingOtherRangeWeapons &amp;&amp; !rangeWep())){
				c.follow(c2.playerId, 1, 1);
				//c.sendMessage(&quot;Applying melee follow 1.&quot;);
				}	*/				
				if (c.leechDelay == 0)
					c.leechDelay = 7;
			}
		}
	}[/code]
If you need more files, just ask:D</description>
    
    <lastBuildDate>Sat, 06 Jul 2013 09:32:58 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/magic-range-shoot-through-walls/523939.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Magic&amp;Range shoot through walls</title>
        <dc:creator><![CDATA[@MR_Terror MR Terror]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mr_terror">@MR_Terror</a> wrote:</p>
          <blockquote>
              <p>[quote=“arham 4, post:4, topic:523939”]Sir, refer to the 0x20000 mask and go more into clipping that.</p>
<p><code>
public static boolean clippedShot(int x, int y, int z) {
	return (getClipping(x, y, z) &amp; 0x20000) == 0;
}
</code>[/quote]<br>
I added it @ region.java but im not sure what to do now.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/magic-range-shoot-through-walls/523939/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/magic-range-shoot-through-walls/523939/5</link>
        <pubDate>Sat, 06 Jul 2013 09:32:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-523939-5</guid>
        <source url="https://forum.moparisthebest.com/t/magic-range-shoot-through-walls/523939.rss">Magic&amp;Range shoot through walls</source>
      </item>
      <item>
        <title>Magic&amp;Range shoot through walls</title>
        <dc:creator><![CDATA[@arham_4 arham 4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/arham_4">@arham_4</a> wrote:</p>
          <blockquote>
              <p>Sir, refer to the 0x20000 mask and go more into clipping that.</p>
<pre><code class="lang-auto">public static boolean clippedShot(int x, int y, int z) {
	return (getClipping(x, y, z) &amp; 0x20000) == 0;
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/magic-range-shoot-through-walls/523939/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/magic-range-shoot-through-walls/523939/4</link>
        <pubDate>Fri, 05 Jul 2013 22:25:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-523939-4</guid>
        <source url="https://forum.moparisthebest.com/t/magic-range-shoot-through-walls/523939.rss">Magic&amp;Range shoot through walls</source>
      </item>
      <item>
        <title>Magic&amp;Range shoot through walls</title>
        <dc:creator><![CDATA[@MR_Terror MR Terror]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mr_terror">@MR_Terror</a> wrote:</p>
          <blockquote>
              <p>Nope.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/magic-range-shoot-through-walls/523939/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/magic-range-shoot-through-walls/523939/3</link>
        <pubDate>Fri, 05 Jul 2013 20:56:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-523939-3</guid>
        <source url="https://forum.moparisthebest.com/t/magic-range-shoot-through-walls/523939.rss">Magic&amp;Range shoot through walls</source>
      </item>
      <item>
        <title>Magic&amp;Range shoot through walls</title>
        <dc:creator><![CDATA[@Docent Limits]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/docent">@Docent</a> wrote:</p>
          <blockquote>
              <p>Well, find a source that has combat clipped. Are you able to walk through walls when you click on an enemy on the other side of the wall?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/magic-range-shoot-through-walls/523939/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/magic-range-shoot-through-walls/523939/2</link>
        <pubDate>Fri, 05 Jul 2013 20:09:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-523939-2</guid>
        <source url="https://forum.moparisthebest.com/t/magic-range-shoot-through-walls/523939.rss">Magic&amp;Range shoot through walls</source>
      </item>
      <item>
        <title>Magic&amp;Range shoot through walls</title>
        <dc:creator><![CDATA[@MR_Terror MR Terror]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mr_terror">@MR_Terror</a> wrote:</p>
          <blockquote>
              <p>You can shoot through walls when using magic and range. Its a easy way to safe spot because the npc’s are clipped and wont walk through the walls so i want to fix this but i am not sure how. Help would be great!</p>
<p>Base: Xerascape (PI)<br>
Public void attacknpc:</p>
<p>[code]public void attackNpc(int i) {	<br>
if (Server.npcHandler.checkSlayerHelm(c,i)) {<br>
c.slayerHelmAffect = true;<br>
} else {<br>
c.slayerHelmAffect = false;<br>
}	<br>
if (Server.npcHandler.npcs[i] != null) {<br>
if (Server.npcHandler.npcs[i].isDead || Server.npcHandler.npcs[i].MaxHP &lt;= 0) {<br>
c.usingMagic = false;<br>
c.faceUpdate(0);<br>
c.npcIndex = 0;<br>
return;<br>
}			<br>
if(c.respawnTimer &gt; 0) {<br>
c.npcIndex = 0;<br>
return;<br>
}<br>
if (Server.npcHandler.npcs[i].underAttackBy &gt; 0 &amp;&amp; Server.npcHandler.npcs[i].underAttackBy != c.playerId &amp;&amp; !Server.npcHandler.npcs[i].inMulti()) {<br>
c.npcIndex = 0;<br>
c.sendMessage(“This monster is already in combat.”);<br>
return;<br>
}<br>
if ((c.underAttackBy &gt; 0 || c.underAttackBy2 &gt; 0) &amp;&amp; c.underAttackBy2 != i &amp;&amp; !c.inMulti()) {<br>
resetPlayerAttack();<br>
c.sendMessage(“I am already under attack.”);<br>
return;<br>
}<br>
if (!goodSlayer(i)) {<br>
resetPlayerAttack();<br>
return;<br>
}<br>
if (Server.npcHandler.npcs[i].spawnedBy != c.playerId &amp;&amp; Server.npcHandler.npcs[i].spawnedBy &gt; 0) {<br>
resetPlayerAttack();<br>
c.sendMessage(“This monster was not spawned for you.”);<br>
return;<br>
}<br>
c.followId2 = i;<br>
c.followId = 0;<br>
if(c.attackTimer &lt;= 0) {<br>
boolean usingBow = false;<br>
boolean usingArrows = false;<br>
boolean usingOtherRangeWeapons = false;<br>
boolean usingCross = c.playerEquipment[c.playerWeapon] == 9185;<br>
c.bonusAttack = 0;<br>
c.rangeItemUsed = 0;<br>
c.projectileStage = 0;<br>
if (c.autocasting) {<br>
c.spellId = c.autocastId;<br>
c.usingMagic = true;<br>
}<br>
if(c.spellId &gt; 0) {<br>
c.usingMagic = true;<br>
}<br>
if(usingBow &amp;&amp; Config.SOUND == true) {<br>
c.sendSound(c.getSound().SHOOT_ARROW);<br>
}<br>
c.attackTimer = getAttackDelay(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase());<br>
c.specAccuracy = 1.0;<br>
c.specDamage = 1.0;<br>
if(!c.usingMagic) {<br>
for (int bowId : c.BOWS) {<br>
if(c.playerEquipment[c.playerWeapon] == bowId) {<br>
usingBow = true;<br>
for (int arrowId : c.ARROWS) {<br>
if(c.playerEquipment[c.playerArrows] == arrowId) {<br>
usingArrows = true;<br>
}<br>
}<br>
}<br>
}</p>
<pre><code>				for (int otherRangeId : c.OTHER_RANGE_WEAPONS) {
					if(c.playerEquipment[c.playerWeapon] == otherRangeId) {
						usingOtherRangeWeapons = true;
					}
				}
			}
			if (armaNpc(i) &amp;&amp; !usingCross &amp;&amp; !usingBow &amp;&amp; !c.usingMagic &amp;&amp; !usingCrystalBow() &amp;&amp; !usingOtherRangeWeapons) {				
				resetPlayerAttack();
				return;
			}
			if((!c.goodDistance(c.getX(), c.getY(), Server.npcHandler.npcs[i].getX(), Server.npcHandler.npcs[i].getY(), 2) &amp;&amp; (usingHally() &amp;&amp; !usingOtherRangeWeapons &amp;&amp; !usingBow &amp;&amp; !c.usingMagic)) ||(!c.goodDistance(c.getX(), c.getY(), Server.npcHandler.npcs[i].getX(), Server.npcHandler.npcs[i].getY(), 4) &amp;&amp; (usingOtherRangeWeapons &amp;&amp; !usingBow &amp;&amp; !c.usingMagic)) || (!c.goodDistance(c.getX(), c.getY(), Server.npcHandler.npcs[i].getX(), Server.npcHandler.npcs[i].getY(), 1) &amp;&amp; (!usingOtherRangeWeapons &amp;&amp; !usingHally() &amp;&amp; !usingBow &amp;&amp; !c.usingMagic)) || ((!c.goodDistance(c.getX(), c.getY(), Server.npcHandler.npcs[i].getX(), Server.npcHandler.npcs[i].getY(), 8) &amp;&amp; (usingBow || c.usingMagic)))) {
				c.attackTimer = 2;
				return;
			}
			
			if(!usingCross &amp;&amp; !usingArrows &amp;&amp; usingBow &amp;&amp; (c.playerEquipment[c.playerWeapon] &lt; 4212 || c.playerEquipment[c.playerWeapon] &gt; 4223)) {
				c.sendMessage("You have run out of arrows!");
				c.stopMovement();
				c.npcIndex = 0;
				return;
			} 
			if(correctBowAndArrows() &lt; c.playerEquipment[c.playerArrows] &amp;&amp; Config.CORRECT_ARROWS &amp;&amp; usingBow &amp;&amp; !usingCrystalBow() &amp;&amp; c.playerEquipment[c.playerWeapon] != 9185) {
				c.sendMessage("You can't use "+c.getItems().getItemName(c.playerEquipment[c.playerArrows]).toLowerCase()+"s with a "+c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase()+".");
				c.stopMovement();
				c.npcIndex = 0;
				return;
			}
			
			
			if (c.playerEquipment[c.playerWeapon] == 9185 &amp;&amp; !properBolts()) {
				c.sendMessage("You must use bolts with a crossbow.");
				c.stopMovement();
				resetPlayerAttack();
				return;				
			}
			
			if(usingBow || c.usingMagic || usingOtherRangeWeapons || (c.goodDistance(c.getX(), c.getY(), Server.npcHandler.npcs[i].getX(), Server.npcHandler.npcs[i].getY(), 2) &amp;&amp; usingHally())) {
				c.stopMovement();
			}

			if(!checkMagicReqs(c.spellId)) {
				c.stopMovement();
				c.npcIndex = 0;
				return;
			}
			
			c.faceUpdate(i);
			Server.npcHandler.npcs[i].underAttackBy = c.playerId;
			Server.npcHandler.npcs[i].lastDamageTaken = System.currentTimeMillis();
			if(c.usingSpecial &amp;&amp; !c.usingMagic) {
				if(checkSpecAmount(c.playerEquipment[c.playerWeapon])){
					c.lastWeaponUsed = c.playerEquipment[c.playerWeapon];
					c.lastArrowUsed = c.playerEquipment[c.playerArrows];
					activateSpecial(c.playerEquipment[c.playerWeapon], i);
					return;
				} else {
					c.sendMessage("You don't have the required special energy to use this attack.");
					c.usingSpecial = false;
					c.getItems().updateSpecialBar();
					c.npcIndex = 0;
					return;
				}
			}
			c.specMaxHitIncrease = 0;
			if(!c.usingMagic) {
				c.startAnimation(getWepAnim(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase()));
			} else {
				c.startAnimation(c.MAGIC_SPELLS[c.spellId][2]);
			}
			c.lastWeaponUsed = c.playerEquipment[c.playerWeapon];
			c.lastArrowUsed = c.playerEquipment[c.playerArrows];
			if(!usingBow &amp;&amp; !c.usingMagic &amp;&amp; !usingOtherRangeWeapons) { // melee hit delay
			if(Config.SOUND) {
</code></pre>
<p>c.sendSound(Sound.GetWeaponSound©);<br>
}<br>
c.hitDelay = getHitDelay(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase());<br>
c.projectileStage = 0;<br>
c.oldNpcIndex = i;<br>
}</p>
<pre><code>			if(usingBow &amp;&amp; !usingOtherRangeWeapons &amp;&amp; !c.usingMagic || usingCross) { // range hit delay					
				if (usingCross)
					c.usingBow = true;
				if (c.fightMode == c.RAPID)
					c.attackTimer--;
				c.lastArrowUsed = c.playerEquipment[c.playerArrows];
				c.lastWeaponUsed = c.playerEquipment[c.playerWeapon];
				c.gfx100(getRangeStartGFX());	
				c.hitDelay = getHitDelay(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase());
				c.projectileStage = 1;
				c.oldNpcIndex = i;
				if(c.playerEquipment[c.playerWeapon] &gt;= 4212 &amp;&amp; c.playerEquipment[c.playerWeapon] &lt;= 4223) {
					c.rangeItemUsed = c.playerEquipment[c.playerWeapon];
					c.crystalBowArrowCount++;
					c.lastArrowUsed = 0;
				} else {
					c.rangeItemUsed = c.playerEquipment[c.playerArrows];
					c.getItems().deleteArrow();	
				}
				fireProjectileNpc();
			}
						
			
			if(usingOtherRangeWeapons &amp;&amp; !c.usingMagic &amp;&amp; !usingBow) {	// knives, darts, etc hit delay		
				c.rangeItemUsed = c.playerEquipment[c.playerWeapon];
				c.getItems().deleteEquipment();
				c.gfx100(getRangeStartGFX());
				c.lastArrowUsed = 0;
				c.hitDelay = getHitDelay(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase());
				c.projectileStage = 1;
				c.oldNpcIndex = i;
				if (c.fightMode == c.RAPID)
					c.attackTimer--;
				fireProjectileNpc();	
			}

			if(c.usingMagic) {	// magic hit delay
					int pX = c.getX();
					int pY = c.getY();
					int nX = Server.npcHandler.npcs[i].getX();
					int nY = Server.npcHandler.npcs[i].getY();
					int offX = (pY - nY)* -1;
					int offY = (pX - nX)* -1;
					c.castingMagic = true;
					c.projectileStage = 2;
					if(c.MAGIC_SPELLS[c.spellId][3] &gt; 0) {
						if(getStartGfxHeight() == 100) {
							c.gfx100(c.MAGIC_SPELLS[c.spellId][3]);
						} else {
							c.gfx0(c.MAGIC_SPELLS[c.spellId][3]);
						}
					}
					if(c.MAGIC_SPELLS[c.spellId][4] &gt; 0) {
						c.getPA().createPlayersProjectile(pX, pY, offX, offY, 50, 78, c.MAGIC_SPELLS[c.spellId][4], getStartHeight(), getEndHeight(), i + 1, 50);
					}
					c.hitDelay = getHitDelay(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase());
					c.oldNpcIndex = i;
					c.oldSpellId = c.spellId;
					c.spellId = 0;
					if (!c.autocasting)
						c.npcIndex = 0;
			}
       if (Misc.random(15) == 0) {
                    npcleechAttack(0);
            }
            if (Misc.random(15) == 0) {
                    npcleechDefence(0);
            }
            if (Misc.random(15) == 0) {
                    npcleechStrength(0);
            }
            if (Misc.random(20) == 0) {
                    npcleechSpecial(0);
            }
            if (Misc.random(15) == 0) {
                    npcleechRanged(0);
            }
            if (Misc.random(15) == 0) {
                    npcleechMagic(0);
            }

			if(usingBow &amp;&amp; Config.CRYSTAL_BOW_DEGRADES) { // crystal bow degrading
				if(c.playerEquipment[c.playerWeapon] == 4212) { // new crystal bow becomes full bow on the first shot
					c.getItems().wearItem(4214, 1, 3);
				}
				if(c.crystalBowArrowCount &gt;= 250){
					switch(c.playerEquipment[c.playerWeapon]) {
						
						case 4223: // 1/10 bow
						c.getItems().wearItem(-1, 1, 3);
						c.sendMessage("Your crystal bow has fully degraded.");
						if(!c.getItems().addItem(4207, 1)) {
							Server.itemHandler.createGroundItem(c, 4207, c.getX(), c.getY(), 1, c.getId());
						}
						c.crystalBowArrowCount = 0;
						break;
						
						default:
						c.getItems().wearItem(++c.playerEquipment[c.playerWeapon], 1, 3);
						c.sendMessage("Your crystal bow degrades.");
						c.crystalBowArrowCount = 0;
						break;
						
					
					}
				}
				}
			//Client c2 = (Client)Server.playerHandler.players[i];
		/*	if(!c.goodDistance(c.absX, c.absY, c2.absX, c2.absY, 8) &amp;&amp; (c.usingMagic || c.usingBow || usingOtherRangeWeapons || rangeWep())){
			c.follow(c2.playerId, 1, 8);
			//c.sendMessage("Applying MR follow 1.");
			}
			if(!c.goodDistance(c.absX, c.absY, c2.absX, c2.absY, 1) &amp;&amp; (!c.usingMagic &amp;&amp; !c.usingBow &amp;&amp; !usingOtherRangeWeapons &amp;&amp; !rangeWep())){
			c.follow(c2.playerId, 1, 1);
			//c.sendMessage("Applying melee follow 1.");
			}	*/				
			if (c.leechDelay == 0)
				c.leechDelay = 7;
		}
	}
}[/code]
</code></pre>
<p>If you need more files, just ask:D</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/magic-range-shoot-through-walls/523939/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/magic-range-shoot-through-walls/523939/1</link>
        <pubDate>Fri, 05 Jul 2013 12:07:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-523939-1</guid>
        <source url="https://forum.moparisthebest.com/t/magic-range-shoot-through-walls/523939.rss">Magic&amp;Range shoot through walls</source>
      </item>
  </channel>
</rss>
