<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Astexj (CFG and ... more?)</title>
    <link>https://forum.moparisthebest.com/t/astexj-cfg-and-more/337092</link>
    <description>Hello comrades,
    I&#39;m not sure how particularly useful you guys&#39;ll find this, but I&#39;m in the midst of a broad redesign of my Java bytecode &quot;decompiler&quot;, and I thought that I&#39;d share what I&#39;ve done so far. The goal is to work it up to an AST builder that will require little extension to use it as a decompiler. I&#39;ve lamely called it ([b]a[/b]) [b]St[/b]atement-[b]Ex[/b]pression Library for [b]J[/b]ava.
    What you get here is a control-flow graph builder (mostly courtesy of ASM) and an.. uh.. &quot;instruction consumption analyzer&quot;. The latter allows you to examine which instructions (or rather their resultant values) are used by other instructions. It&#39;s pretty rudimentary, but I think some people might find it useful.
    The documentation is sparse because I hate writing javadocs, so I&#39;ll just give a brief rundown here.

[b]com.astexj.ClassRepository[/b]: provides the ability to load and examine the contents of classfiles (will be used later to track call stacks and such).
[b]com.astexj.ConcreteFieldRef[/b]: a reference to a field that is associated with an org.asm.tree.FieldNode.
[b]com.astexj.ConcreteMethodRef[/b]: same as above, but with a method.
[b]com.astexj.FieldRef[/b]: a reference to a field that is not associated with an org.asm.tree.FieldNode. This is necessary because com.astexj.ClassRepository.resolveField(String,String,String) may or may not be able to resolve a concrete field (i.e. a field in the Standard API; you&#39;re probably not going to be loading rt.jar).
[b]com.astexj.MethodRef[/b]: same as above, but with a method.
[b]com.astexj.cf.Block[/b]: a &quot;basic block,&quot; i.e. a straightaway section of code that contains no jumps not at the end(org.asm.tree.JumpInsnNode) or jump targets not at the beginning (org.asm.tree.LabelNode).
[b]com.astexj.cf.ConsumedValue[/b]: a &quot;value&quot; that corresponds to instructions consumed by another instruction. Interface.
[b]com.astexj.cf.ControlFlowAnalyzer[/b]: the heart of the operation. Extends org.asm.tree.analysis.Analyzer. ~.analyze() will build the CFG and analyze the instructions.
[b]com.astexj.cf.InvariableConsumedValue[/b]: a &quot;value&quot; that corresponds to [i]one[/i] instruction consumed by another instruction.
[b]com.astexj.cf.VariableConsumedValue[/b]: a &quot;value&quot; that corresponds to [i]two[/i] instructions consumed by another instruction. I think only ternary expressions (e.g. condition ? val1 : val2) cause this.

I hope you guys find this useful, or at least find it interesting. Thanks for reading.

[i]edit[/i]

I should probably give an example. The snippet:

[code]      int i = 10;
      if(i == 10)
        System.out.println(i == 5 ? &quot;true&quot; : &quot;false&quot;);[/code]

will be interpreted thusly:

[code]#0
[] -&gt; (0-8) {
 0: org.objectweb.asm.tree.LabelNode
 1: org.objectweb.asm.tree.LineNumberNode
 2: bipush (consumed by [3]) (10)
 3: istore (consumes [2]) (var 0)
 4: org.objectweb.asm.tree.LabelNode
 5: org.objectweb.asm.tree.LineNumberNode
 6: iload (consumed by [8]) (var 0)
 7: bipush (consumed by [8]) (10)
 8: if_icmpne (consumes [6, 7])
} -&gt; [1, 5]
#1
[0] -&gt; (9-14) {
 9: org.objectweb.asm.tree.LabelNode
 10: org.objectweb.asm.tree.LineNumberNode
 11: getstatic (consumed by [20]) (java.lang.System.out)
 12: iload (consumed by [14]) (var 0)
 13: iconst_5 (consumed by [14])
 14: if_icmpne (consumes [12, 13])
} -&gt; [2, 3]
#2
[1] -&gt; (15-16) {
 15: ldc (consumed by [20]) (&quot;true&quot;)
 16: goto
} -&gt; [4]
#3
[1] -&gt; (17-18) {
 17: org.objectweb.asm.tree.LabelNode
 18: ldc (consumed by [20]) (&quot;false&quot;)
} -&gt; [4]
#4
[2, 3] -&gt; (19-20) {
 19: org.objectweb.asm.tree.LabelNode
 20: invokevirtual (consumes [11, 15~18]) (java.io.PrintStream.println)
} -&gt; [5]
#5
[0, 4] -&gt; (21-26) {
 21: org.objectweb.asm.tree.LabelNode
 22: org.objectweb.asm.tree.LineNumberNode
 ...[/code]

I added a few clarifications to the printout after the &quot;consumes&quot; or &quot;consumed by&quot; within parentheses. When the invokevirtual @20 is states as consuming instructions 15~18, it means that it may consume either 15 or 18 (&quot;true&quot; or &quot;false&quot; respectively).</description>
    
    <lastBuildDate>Sat, 17 Apr 2010 13:59:22 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/astexj-cfg-and-more/337092.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Astexj (CFG and ... more?)</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>good work you’ve got there, whitecastle.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/astexj-cfg-and-more/337092/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/astexj-cfg-and-more/337092/7</link>
        <pubDate>Sat, 17 Apr 2010 13:59:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-337092-7</guid>
        <source url="https://forum.moparisthebest.com/t/astexj-cfg-and-more/337092.rss">Astexj (CFG and ... more?)</source>
      </item>
      <item>
        <title>Astexj (CFG and ... more?)</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>[quote=“BAsh, post:2, topic:337092”]Analyzer with SourceInterpretor is slow as hell[/quote]it isnt though, it used to be when i was using it but for whatever reason now, it isnt <img src="https://forum.moparisthebest.com/images/emoji/twitter/confused.png?v=5" title=":confused:" class="emoji" alt=":confused:"></p>
<p>dont only conduct dataflow analysis on the stack, do locals too</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/astexj-cfg-and-more/337092/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/astexj-cfg-and-more/337092/6</link>
        <pubDate>Sat, 17 Apr 2010 07:34:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-337092-6</guid>
        <source url="https://forum.moparisthebest.com/t/astexj-cfg-and-more/337092.rss">Astexj (CFG and ... more?)</source>
      </item>
      <item>
        <title>Astexj (CFG and ... more?)</title>
        <dc:creator><![CDATA[@White_Castle White Castle]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/white_castle">@White_Castle</a> wrote:</p>
          <blockquote>
              <p>True. However, I might be dealing with the variables later on, so I think I’ll handle optimization last. Thanks for your input!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/astexj-cfg-and-more/337092/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/astexj-cfg-and-more/337092/5</link>
        <pubDate>Sat, 17 Apr 2010 06:56:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-337092-5</guid>
        <source url="https://forum.moparisthebest.com/t/astexj-cfg-and-more/337092.rss">Astexj (CFG and ... more?)</source>
      </item>
      <item>
        <title>Astexj (CFG and ... more?)</title>
        <dc:creator><![CDATA[@BAsh BAsh]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bash">@BAsh</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="3" data-topic="337092">
<div class="title">
<div class="quote-controls"></div>
 White Castle:</div>
<blockquote>
<p>I did try making my own implementation of Interpreter, but scrapped it halfway through. Speed isn’t that great of a concern at the moment, but I wasn’t aware that SourceInterpreter is particularly slow. Thanks!</p>
</blockquote>
</aside>
<p>Its because it analyzes the variables as well. Since you only need stack you should be able to optimize it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/astexj-cfg-and-more/337092/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/astexj-cfg-and-more/337092/4</link>
        <pubDate>Sat, 17 Apr 2010 06:38:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-337092-4</guid>
        <source url="https://forum.moparisthebest.com/t/astexj-cfg-and-more/337092.rss">Astexj (CFG and ... more?)</source>
      </item>
      <item>
        <title>Astexj (CFG and ... more?)</title>
        <dc:creator><![CDATA[@White_Castle White Castle]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/white_castle">@White_Castle</a> wrote:</p>
          <blockquote>
              <p>I did try making my own implementation of Interpreter, but scrapped it halfway through. Speed isn’t that great of a concern at the moment, but I wasn’t aware that SourceInterpreter is particularly slow. Thanks!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/astexj-cfg-and-more/337092/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/astexj-cfg-and-more/337092/3</link>
        <pubDate>Sat, 17 Apr 2010 06:35:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-337092-3</guid>
        <source url="https://forum.moparisthebest.com/t/astexj-cfg-and-more/337092.rss">Astexj (CFG and ... more?)</source>
      </item>
      <item>
        <title>Astexj (CFG and ... more?)</title>
        <dc:creator><![CDATA[@BAsh BAsh]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bash">@BAsh</a> wrote:</p>
          <blockquote>
              <p>Looks good.</p>
<p>Bit of advice though:<br>
Analyzer with SourceInterpretor is slow as hell. You have two options. Either don’t use it which is probably best given that you aren’t using all of the information it generates. Or you can speed it up (it makes a copy of SourceValue for everything) (this requires quite a lot of effort).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/astexj-cfg-and-more/337092/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/astexj-cfg-and-more/337092/2</link>
        <pubDate>Sat, 17 Apr 2010 06:20:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-337092-2</guid>
        <source url="https://forum.moparisthebest.com/t/astexj-cfg-and-more/337092.rss">Astexj (CFG and ... more?)</source>
      </item>
      <item>
        <title>Astexj (CFG and ... more?)</title>
        <dc:creator><![CDATA[@White_Castle White Castle]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/white_castle">@White_Castle</a> wrote:</p>
          <blockquote>
              <p>Hello comrades,<br>
I’m not sure how particularly useful you guys’ll find this, but I’m in the midst of a broad redesign of my Java bytecode “decompiler”, and I thought that I’d share what I’ve done so far. The goal is to work it up to an AST builder that will require little extension to use it as a decompiler. I’ve lamely called it (<span class="bbcode-b">a</span>) <span class="bbcode-b">St</span>atement-<span class="bbcode-b">Ex</span>pression Library for <span class="bbcode-b">J</span>ava.<br>
What you get here is a control-flow graph builder (mostly courtesy of ASM) and an… uh… “instruction consumption analyzer”. The latter allows you to examine which instructions (or rather their resultant values) are used by other instructions. It’s pretty rudimentary, but I think some people might find it useful.<br>
The documentation is sparse because I hate writing javadocs, so I’ll just give a brief rundown here.</p>
<p><span class="bbcode-b">com.astexj.ClassRepository</span>: provides the ability to load and examine the contents of classfiles (will be used later to track call stacks and such).<br>
<span class="bbcode-b">com.astexj.ConcreteFieldRef</span>: a reference to a field that is associated with an org.asm.tree.FieldNode.<br>
<span class="bbcode-b">com.astexj.ConcreteMethodRef</span>: same as above, but with a method.<br>
<span class="bbcode-b">com.astexj.FieldRef</span>: a reference to a field that is not associated with an org.asm.tree.FieldNode. This is necessary because com.astexj.ClassRepository.resolveField(String,String,String) may or may not be able to resolve a concrete field (i.e. a field in the Standard API; you’re probably not going to be loading rt.jar).<br>
<span class="bbcode-b">com.astexj.MethodRef</span>: same as above, but with a method.<br>
<span class="bbcode-b">com.astexj.cf.Block</span>: a “basic block,” i.e. a straightaway section of code that contains no jumps not at the end(org.asm.tree.JumpInsnNode) or jump targets not at the beginning (org.asm.tree.LabelNode).<br>
<span class="bbcode-b">com.astexj.cf.ConsumedValue</span>: a “value” that corresponds to instructions consumed by another instruction. Interface.<br>
<span class="bbcode-b">com.astexj.cf.ControlFlowAnalyzer</span>: the heart of the operation. Extends org.asm.tree.analysis.Analyzer. ~.analyze() will build the CFG and analyze the instructions.<br>
<span class="bbcode-b">com.astexj.cf.InvariableConsumedValue</span>: a “value” that corresponds to <span class="bbcode-i">one</span> instruction consumed by another instruction.<br>
<span class="bbcode-b">com.astexj.cf.VariableConsumedValue</span>: a “value” that corresponds to <span class="bbcode-i">two</span> instructions consumed by another instruction. I think only ternary expressions (e.g. condition ? val1 : val2) cause this.</p>
<p>I hope you guys find this useful, or at least find it interesting. Thanks for reading.</p>
<p><span class="bbcode-i">edit</span></p>
<p>I should probably give an example. The snippet:</p>
<p><code>      int i = 10;
      if(i == 10)
        System.out.println(i == 5 ? "true" : "false");</code></p>
<p>will be interpreted thusly:</p>
<p><code>#0
[] -&gt; (0-8) {
 0: org.objectweb.asm.tree.LabelNode
 1: org.objectweb.asm.tree.LineNumberNode
 2: bipush (consumed by [3]) (10)
 3: istore (consumes [2]) (var 0)
 4: org.objectweb.asm.tree.LabelNode
 5: org.objectweb.asm.tree.LineNumberNode
 6: iload (consumed by [8]) (var 0)
 7: bipush (consumed by [8]) (10)
 8: if_icmpne (consumes [6, 7])
} -&gt; [1, 5]
#1
[0] -&gt; (9-14) {
 9: org.objectweb.asm.tree.LabelNode
 10: org.objectweb.asm.tree.LineNumberNode
 11: getstatic (consumed by [20]) (java.lang.System.out)
 12: iload (consumed by [14]) (var 0)
 13: iconst_5 (consumed by [14])
 14: if_icmpne (consumes [12, 13])
} -&gt; [2, 3]
#2
[1] -&gt; (15-16) {
 15: ldc (consumed by [20]) ("true")
 16: goto
} -&gt; [4]
#3
[1] -&gt; (17-18) {
 17: org.objectweb.asm.tree.LabelNode
 18: ldc (consumed by [20]) ("false")
} -&gt; [4]
#4
[2, 3] -&gt; (19-20) {
 19: org.objectweb.asm.tree.LabelNode
 20: invokevirtual (consumes [11, 15~18]) (java.io.PrintStream.println)
} -&gt; [5]
#5
[0, 4] -&gt; (21-26) {
 21: org.objectweb.asm.tree.LabelNode
 22: org.objectweb.asm.tree.LineNumberNode
 ...</code></p>
<p>I added a few clarifications to the printout after the “consumes” or “consumed by” within parentheses. When the invokevirtual <span class="mention">@20</span> is states as consuming instructions 15~18, it means that it may consume either 15 or 18 (“true” or “false” respectively).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/astexj-cfg-and-more/337092/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/astexj-cfg-and-more/337092/1</link>
        <pubDate>Sat, 17 Apr 2010 05:39:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-337092-1</guid>
        <source url="https://forum.moparisthebest.com/t/astexj-cfg-and-more/337092.rss">Astexj (CFG and ... more?)</source>
      </item>
  </channel>
</rss>
