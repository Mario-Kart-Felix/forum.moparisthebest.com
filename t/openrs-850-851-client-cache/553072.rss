<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>OpenRS 850+ 851 Client/cache</title>
    <link>https://forum.moparisthebest.com/t/openrs-850-851-client-cache/553072</link>
    <description>Updated it from this This: http://www.rune-server.org/runescape-development/rs-503-client-server/downloads/572627-826-netty4-1-skeleton.html

So download that and replaces the rsa keyls client/server side, The 27 intergers, the revision #

Credits to kyle for the virtue source

openRS lib: https://mega.nz/#!KpNhQDqD!pP_pWtxxjPw3_NGy-g5Wpbq5IOCydVQl6QqYPG_NZiU
851 Client: https://mega.nz/#!O9NwFIzb!mt5kkYvAJN1gwYIpN3cz9wC_pXROdXe2iiEcjPMbJ8w
Cache: Coming Soon its Uploading

Then the only thing that changed was in the handshake

        	buf.readUnsignedByte();//850+ Language ID

[CODE]
package org.virtue.network.protocol.handshake;

import io.netty.buffer.ByteBuf;
import io.netty.buffer.Unpooled;
import io.netty.channel.ChannelHandlerContext;
import io.netty.handler.codec.ByteToMessageDecoder;

import java.util.List;

import org.virtue.Constants;
import org.virtue.network.protocol.message.HandshakeMessage;
import org.virtue.network.protocol.ondemand.OnDemandDecoder;
import org.virtue.network.protocol.ondemand.OnDemandEncoder;
import org.virtue.network.protocol.ondemand.OnDemandXorEncoder;
import org.virtue.utility.BufferUtility;

/**
 * @author Im Frizzy &lt;skype:kfriz1998&gt;
 * @since Aug 8, 2014
 */
public class HandshakeDecoder extends ByteToMessageDecoder {

	/* (non-Javadoc)
	 * @see io.netty.handler.codec.ByteToMessageDecoder#decode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List)
	 */
	@Override
	protected void decode(ChannelHandlerContext ctx, ByteBuf buf, List&lt;Object&gt; out) throws Exception {
		if (buf.isReadable()) {
			HandshakeMessage type = new HandshakeMessage(buf.readUnsignedByte());
			if (type.getType() == null)
				return;
			
			switch (type.getType()) {
			case HANDSHAKE_LOGIN:
				ensureResponse(ctx);
				break;
			case HANDSHAKE_ONDEMAND:
				ensureResponse(ctx, buf);
				ctx.pipeline().replace(&quot;decoder&quot;, &quot;decoder&quot;, new OnDemandDecoder());
				ctx.pipeline().addAfter(&quot;decoder&quot;, &quot;xor-encoder&quot;, new OnDemandXorEncoder());
				ctx.pipeline().addAfter(&quot;xor-encoder&quot;, &quot;encoder&quot;, new OnDemandEncoder());
				break;
			default:
				break;
			}
			if (buf.isReadable()) {
				out.add(new Object[] { type, buf.readBytes(buf.readableBytes()) });
			} else {
				out.add(type);
			}
		}
	}
	
	private void ensureResponse(ChannelHandlerContext ctx) {
		ByteBuf buffer = Unpooled.buffer(1);
		buffer.writeByte(0);
		ctx.channel().writeAndFlush(buffer);
	}
	
	private void ensureResponse(ChannelHandlerContext ctx, ByteBuf buf) {
		if (buf.readableBytes() &lt; 6)
			return;
		
		ByteBuf buffer = Unpooled.buffer();
		
		int length = buf.readUnsignedByte();
        if (buf.readableBytes() &gt;= length) {
        	int major = buf.readInt();
        	int minor = buf.readInt();
        	String token = BufferUtility.readString(buf);
        	buf.readUnsignedByte();//850+ Language ID
           if (major != Constants.FRAME_MAJOR &amp;&amp; minor != Constants.FRAME_MINOR) {
                buffer.writeByte(6);
            } else {
            	if (!token.equals(Constants.ONDEMAND_TOKEN)) {
            		buffer.writeByte(6);
            	} else {
            			buffer.writeByte(0);
            			for (int i = 0; i &lt; Constants.ONDEMAND_DELTA.length; i++) {
            				buffer.writeInt(Constants.ONDEMAND_DELTA[i]);
            			}
            	}
            }
        }
		ctx.channel().writeAndFlush(buffer);
	}
	
}
[/CODE]</description>
    
    <lastBuildDate>Sun, 23 Aug 2015 15:13:35 +0000</lastBuildDate>
    <category>General Discussion</category>
    <atom:link href="https://forum.moparisthebest.com/t/openrs-850-851-client-cache/553072.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>OpenRS 850+ 851 Client/cache</title>
        <dc:creator><![CDATA[@Sir_James1996 Sir James1996]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sir_james1996">@Sir_James1996</a> wrote:</p>
          <blockquote>
              <p>Updated it from this This: <a href="http://www.rune-server.org/runescape-development/rs-503-client-server/downloads/572627-826-netty4-1-skeleton.html" rel="nofollow noopener">http://www.rune-server.org/runescape-development/rs-503-client-server/downloads/572627-826-netty4-1-skeleton.html</a></p>
<p>So download that and replaces the rsa keyls client/server side, The 27 intergers, the revision #</p>
<p>Credits to kyle for the virtue source</p>
<p>openRS lib: <a href="https://mega.nz/#!KpNhQDqD!pP_pWtxxjPw3_NGy-g5Wpbq5IOCydVQl6QqYPG_NZiU" rel="nofollow noopener">https://mega.nz/#!KpNhQDqD!pP_pWtxxjPw3_NGy-g5Wpbq5IOCydVQl6QqYPG_NZiU</a><br>
851 Client: <a href="https://mega.nz/#!O9NwFIzb!mt5kkYvAJN1gwYIpN3cz9wC_pXROdXe2iiEcjPMbJ8w" rel="nofollow noopener">https://mega.nz/#!O9NwFIzb!mt5kkYvAJN1gwYIpN3cz9wC_pXROdXe2iiEcjPMbJ8w</a><br>
Cache: Coming Soon its Uploading</p>
<p>Then the only thing that changed was in the handshake</p>
<pre><code>    	buf.readUnsignedByte();//850+ Language ID
</code></pre>
<p>[CODE]<br>
package org.virtue.network.protocol.handshake;</p>
<p>import io.netty.buffer.ByteBuf;<br>
import io.netty.buffer.Unpooled;<br>
import io.netty.channel.ChannelHandlerContext;<br>
import io.netty.handler.codec.ByteToMessageDecoder;</p>
<p>import java.util.List;</p>
<p>import org.virtue.Constants;<br>
import org.virtue.network.protocol.message.HandshakeMessage;<br>
import org.virtue.network.protocol.ondemand.OnDemandDecoder;<br>
import org.virtue.network.protocol.ondemand.OnDemandEncoder;<br>
import org.virtue.network.protocol.ondemand.OnDemandXorEncoder;<br>
import org.virtue.utility.BufferUtility;</p>
<p>/**</p>
<ul>
<li>
<p><span class="mention">@author</span> Im Frizzy <a>skype:kfriz1998</a></p>
</li>
<li>
<p><span class="mention">@since</span> Aug 8, 2014<br>
*/<br>
public class HandshakeDecoder extends ByteToMessageDecoder {</p>
<p>/* (non-Javadoc)</p>
<ul>
<li>
<p><span class="mention">@see</span> io.netty.handler.codec.ByteToMessageDecoder#decode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List)<br>
*/<br>
<a class="mention" href="/u/override">@Override</a><br>
protected void decode(ChannelHandlerContext ctx, ByteBuf buf, List out) throws Exception {<br>
if (buf.isReadable()) {<br>
HandshakeMessage type = new HandshakeMessage(buf.readUnsignedByte());<br>
if (type.getType() == null)<br>
return;</p>
<pre><code> switch (type.getType()) {
 case HANDSHAKE_LOGIN:
 	ensureResponse(ctx);
 	break;
 case HANDSHAKE_ONDEMAND:
 	ensureResponse(ctx, buf);
 	ctx.pipeline().replace("decoder", "decoder", new OnDemandDecoder());
 	ctx.pipeline().addAfter("decoder", "xor-encoder", new OnDemandXorEncoder());
 	ctx.pipeline().addAfter("xor-encoder", "encoder", new OnDemandEncoder());
 	break;
 default:
 	break;
 }
 if (buf.isReadable()) {
 	out.add(new Object[] { type, buf.readBytes(buf.readableBytes()) });
 } else {
 	out.add(type);
 }
</code></pre>
<p>}<br>
}</p>
</li>
</ul>
<p>private void ensureResponse(ChannelHandlerContext ctx) {<br>
ByteBuf buffer = Unpooled.buffer(1);<br>
buffer.writeByte(0);<br>
ctx.channel().writeAndFlush(buffer);<br>
}</p>
<p>private void ensureResponse(ChannelHandlerContext ctx, ByteBuf buf) {<br>
if (buf.readableBytes() &lt; 6)<br>
return;</p>
<pre><code> ByteBuf buffer = Unpooled.buffer();
 
 int length = buf.readUnsignedByte();
 if (buf.readableBytes() &gt;= length) {
 	int major = buf.readInt();
 	int minor = buf.readInt();
 	String token = BufferUtility.readString(buf);
 	buf.readUnsignedByte();//850+ Language ID
    if (major != Constants.FRAME_MAJOR &amp;&amp; minor != Constants.FRAME_MINOR) {
         buffer.writeByte(6);
     } else {
     	if (!token.equals(Constants.ONDEMAND_TOKEN)) {
     		buffer.writeByte(6);
     	} else {
     			buffer.writeByte(0);
     			for (int i = 0; i &lt; Constants.ONDEMAND_DELTA.length; i++) {
     				buffer.writeInt(Constants.ONDEMAND_DELTA[i]);
     			}
     	}
     }
 }
 ctx.channel().writeAndFlush(buffer);
</code></pre>
<p>}</p>
</li>
</ul>
<p>}<br>
[/CODE]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/openrs-850-851-client-cache/553072/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/openrs-850-851-client-cache/553072/1</link>
        <pubDate>Sun, 23 Aug 2015 15:13:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-553072-1</guid>
        <source url="https://forum.moparisthebest.com/t/openrs-850-851-client-cache/553072.rss">OpenRS 850+ 851 Client/cache</source>
      </item>
  </channel>
</rss>
