<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Magic problem</title>
    <link>https://forum.moparisthebest.com/t/magic-problem/477529</link>
    <description>hi,

whenever I cast a spell on an npc, I walk up to the npc before casting the spell. 

does someone know how to fix it, so you can cast spells from a distance?

thanks</description>
    
    <lastBuildDate>Fri, 04 Jan 2013 21:19:48 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/magic-problem/477529.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Magic problem</title>
        <dc:creator><![CDATA[@startcode startcode]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/startcode">@startcode</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="4" data-topic="477529">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/zyle1992/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> zyle1992:</div>
<blockquote>
<p>Post the code you have for dealing with spell casting</p>
</blockquote>
</aside>
<p>Do you mean this one?</p>
<p>[CODE]public void attackNpc(int i) {	<br>
if(c.usingMagic || usingHally()) {<br>
c.stopMovement();<br>
}<br>
if (Server.npcHandler.npcs[i] != null) {<br>
if (Server.npcHandler.npcs[i].isDead || Server.npcHandler.npcs[i].MaxHP &lt;= 0) {<br>
c.usingMagic = false;<br>
c.faceUpdate(0);<br>
c.npcIndex = 0;<br>
return;<br>
}</p>
<pre><code>		if (Server.npcHandler.npcs[i].summon == true) {
		if(Server.npcHandler.npcs[i].index != c.playerId || c.wildLevel == 0) {
			resetPlayerAttack();
			c.sendMessage("You cannot attack this monster.");
</code></pre>
<p>//				c.sendMessage(“This is “+Server.npcHandler.npcz[i]+” NPC.”);<br>
return;<br>
}<br>
}</p>
<pre><code>	if(c.specEffect == 4) {
	c.specEffect = 0;
	}

		if (Server.npcHandler.npcs[i].npcType == 1000 || Server.npcHandler.npcs[i].npcType == 1001 || Server.npcHandler.npcs[i].npcType == 3100 || Server.npcHandler.npcs[i].npcType == 1002 || Server.npcHandler.npcs[i].npcType == 1003) {
		resetPlayerAttack();
		c.stopMovement();
		return; // Bandos
          	  }

		if (Server.npcHandler.npcs[i].npcType == 3104) {
		c.sendMessage("You must click the gate before attacking the Corporeal Beast!");
		resetPlayerAttack();
		c.stopMovement();
		return; // Corporeal beast *fake*
          	  }

		if (Server.npcHandler.npcs[i].npcType == 1004 || Server.npcHandler.npcs[i].npcType == 1005 || Server.npcHandler.npcs[i].npcType == 1006 || Server.npcHandler.npcs[i].npcType == 1007) {
		resetPlayerAttack();
		c.stopMovement();
		return; // Arma
          	  }
		if (Server.npcHandler.npcs[i].npcType == 1008 || Server.npcHandler.npcs[i].npcType == 1009 || Server.npcHandler.npcs[i].npcType == 1010 || Server.npcHandler.npcs[i].npcType == 1011) {
		resetPlayerAttack();
		c.stopMovement();
		return; // Zammy
          	  }
		if (Server.npcHandler.npcs[i].npcType == 1012 || Server.npcHandler.npcs[i].npcType == 1013 || Server.npcHandler.npcs[i].npcType == 1014 || Server.npcHandler.npcs[i].npcType == 1015) {
		resetPlayerAttack();
		c.stopMovement();
		return; // Sara
          	  }
		if(c.respawnTimer &gt; 0) {
			c.npcIndex = 0;
			return;
		}
		if (!goodSlayer(i)) {
			resetPlayerAttack();
			return;
		}
		if (Server.npcHandler.npcs[i].spawnedBy != c.playerId &amp;&amp; Server.npcHandler.npcs[i].spawnedBy &gt; 0 &amp;&amp; Server.npcHandler.npcs[i].summon != true) {
			resetPlayerAttack();
			c.sendMessage("This monster was not spawned for you.");
			return;
		}
		if(Server.npcHandler.npcs[i].summoner == true) {
			c.sendMessage("It wouldn't be wise to kill your own familiar.");
			resetPlayerAttack();
			return;
		}
		if ((c.underAttackBy &gt; 0 || c.underAttackBy2 &gt; 0) &amp;&amp; c.underAttackBy2 != i &amp;&amp; !c.inMulti()) {
			resetPlayerAttack();
			c.sendMessage("I am already under attack.");
			return;
		}
		if (Server.npcHandler.npcs[i].underAttackBy &gt; 0 &amp;&amp; Server.npcHandler.npcs[i].underAttackBy != c.playerId &amp;&amp; !Server.npcHandler.npcs[i].inMulti()) {
			c.npcIndex = 0;
			c.sendMessage("This monster is already in combat.");
			return;
		}
		if (Server.npcHandler.npcs[i].inMulti() &amp;&amp; c.lastsummon &gt; 0) {
			Server.npcHandler.attackNPC(i, c.summoningnpcid);
		}



		if (!goodSlayer(i)) {
			resetPlayerAttack();
			return;
		}
		if (Server.npcHandler.npcs[i].spawnedBy != c.playerId &amp;&amp; Server.npcHandler.npcs[i].spawnedBy &gt; 0) {
			resetPlayerAttack();
			c.sendMessage("This monster was not spawned for you.");
			return;
		}
		if(c.attackTimer &lt;= 0) {
			boolean usingBow = false;
			boolean usingArrows = false;
			boolean usingOtherRangeWeapons = false;
			boolean usingCross = c.playerEquipment[c.playerWeapon] == 9185 &amp;&amp; c.playerEquipment[c.playerWeapon] == 18357;
			c.bonusAttack = 0;
			c.rangeItemUsed = 0;
			c.projectileStage = 0;
			//c.SaveGame();
			if (c.autocasting) {
				c.spellId = c.autocastId;
				c.usingMagic = true;
			}
			if(c.spellId &gt; 0) {
			c.usingMagic = true;
			}
			c.attackTimer = getAttackDelay(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase());
			c.specAccuracy = 1.0;
			c.specDamage = 1.0;
			if(!c.usingMagic) {
				for (int bowId : c.BOWS) {
					if(c.playerEquipment[c.playerWeapon] == bowId) {
						usingBow = true;
						for (int arrowId : c.ARROWS) {
							if(c.playerEquipment[c.playerArrows] == arrowId) {
								usingArrows = true;
				c.gfx100(getRangeStartGFX());
							}
						}
					}
				}
				
				for (int otherRangeId : c.OTHER_RANGE_WEAPONS) {
					if(c.playerEquipment[c.playerWeapon] == otherRangeId) {
						usingOtherRangeWeapons = true;
					}
				}
			}
			if (armaNpc(i) &amp;&amp; !usingCross &amp;&amp; !usingBow &amp;&amp; !c.usingMagic &amp;&amp; !usingCrystalBow() &amp;&amp; !usingOtherRangeWeapons) {				
				resetPlayerAttack();
				c.sendMessage("You can only Range/Mage Armadyl creeps!");
				return;
			}
			if((!c.goodDistance(c.getX(), c.getY(), Server.npcHandler.npcs[i].getX(), Server.npcHandler.npcs[i].getY(), 2) &amp;&amp; (usingHally() &amp;&amp; !usingOtherRangeWeapons &amp;&amp; !usingBow &amp;&amp; !usingCross &amp;&amp; !c.usingMagic)) ||(!c.goodDistance(c.getX(), c.getY(), Server.npcHandler.npcs[i].getX(), Server.npcHandler.npcs[i].getY(), 4) &amp;&amp; (usingOtherRangeWeapons &amp;&amp; !usingCross &amp;&amp; !usingBow &amp;&amp; !c.usingMagic)) || (!c.goodDistance(c.getX(), c.getY(), Server.npcHandler.npcs[i].getX(), Server.npcHandler.npcs[i].getY(), 1) &amp;&amp; (!usingOtherRangeWeapons &amp;&amp; !usingHally() &amp;&amp; !usingCross &amp;&amp; !usingBow &amp;&amp; !c.usingMagic)) || ((!c.goodDistance(c.getX(), c.getY(), Server.npcHandler.npcs[i].getX(), Server.npcHandler.npcs[i].getY(), 8) &amp;&amp; (usingBow || usingCross	|| c.usingMagic)))) {
				c.attackTimer = 2;
				return;
			}
			
			if(!usingCross &amp;&amp; !usingArrows &amp;&amp; usingBow &amp;&amp; (c.playerEquipment[c.playerWeapon] &lt; 4212 || c.playerEquipment[c.playerWeapon] &gt; 4223)) {
				c.sendMessage("You have run out of arrows!");
				c.stopMovement();
				c.npcIndex = 0;
				return;
			} 
			
			if(usingBow || usingCross || c.usingMagic || usingOtherRangeWeapons || (c.goodDistance(c.getX(), c.getY(), Server.npcHandler.npcs[i].getX(), Server.npcHandler.npcs[i].getY(), 2) &amp;&amp; usingHally())) {
				c.stopMovement();
			}

			if(!checkMagicReqs(c.spellId)) {
				c.stopMovement();
				c.npcIndex = 0;
				return;
			}
			
			c.faceUpdate(i);
			//c.specAccuracy = 1.0;
			//c.specDamage = 1.0;
			Server.npcHandler.npcs[i].underAttackBy = c.playerId;
			Server.npcHandler.npcs[i].lastDamageTaken = System.currentTimeMillis();
			if(c.usingSpecial &amp;&amp; !c.usingMagic) {
				if(checkSpecAmount(c.playerEquipment[c.playerWeapon])){
					c.lastWeaponUsed = c.playerEquipment[c.playerWeapon];
					c.lastArrowUsed = c.playerEquipment[c.playerArrows];
					activateSpecial(c.playerEquipment[c.playerWeapon], i);
					return;
				} else {
					c.sendMessage("You don't have the required special energy to use this attack.");
					c.usingSpecial = false;
					c.getItems().updateSpecialBar();
					c.npcIndex = 0;
					return;
				}
			}
			c.specMaxHitIncrease = 0;
			if(!c.usingMagic) {
				c.startAnimation(getWepAnim(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase()));
			} else {
				c.startAnimation(c.MAGIC_SPELLS[c.spellId][2]);
			}
			c.lastWeaponUsed = c.playerEquipment[c.playerWeapon];
			c.lastArrowUsed = c.playerEquipment[c.playerArrows];
			if(!usingBow &amp;&amp; !usingCross &amp;&amp; !c.usingMagic &amp;&amp; !usingOtherRangeWeapons) { // melee hit delay
				c.hitDelay = getHitDelay(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase());
				c.projectileStage = 0;
				c.oldNpcIndex = i;
			}
			
			if(usingBow &amp;&amp; !usingOtherRangeWeapons &amp;&amp; !c.usingMagic || usingCross) { // range hit delay					
				if (usingCross)
					c.usingBow = true;
				if (c.fightMode == 2)
					c.attackTimer--;
				c.lastArrowUsed = c.playerEquipment[c.playerArrows];
				c.lastWeaponUsed = c.playerEquipment[c.playerWeapon];
				c.gfx100(getRangeStartGFX());	
				c.hitDelay = getHitDelay(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase());
				c.projectileStage = 1;
				c.oldNpcIndex = i;
				if(c.playerEquipment[c.playerWeapon] &gt;= 4212 &amp;&amp; c.playerEquipment[c.playerWeapon] &lt;= 4223) {
					c.rangeItemUsed = c.playerEquipment[c.playerWeapon];
					//c.crystalBowArrowCount++;
					c.lastArrowUsed = 0;
				} else {
					c.rangeItemUsed = c.playerEquipment[c.playerArrows];
					c.getItems().deleteArrow();	
				}
				fireProjectileNpc();
			}

		if(usingBow &amp;&amp; usingCross &amp;&amp; c.usingMagic &amp;&amp; usingOtherRangeWeapons) {
		c.getPA().followNpc();
		c.stopMovement();
		} else {
		c.followId = 0;
		c.followId2 = i;
		}
						
			
			if(usingOtherRangeWeapons &amp;&amp; !c.usingMagic &amp;&amp; !usingCross &amp;&amp; !usingBow) {	// knives, darts, etc hit delay		
				c.rangeItemUsed = c.playerEquipment[c.playerWeapon];
				c.getItems().deleteEquipment();
				c.gfx100(getRangeStartGFX());
				c.lastArrowUsed = 0;
				c.hitDelay = getHitDelay(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase());
				c.projectileStage = 1;
				c.oldNpcIndex = i;
				if (c.fightMode == 2)
					c.attackTimer--;
				fireProjectileNpc();	
			}

			if(c.usingMagic) {	// magic hit delay
				int pX = c.getX();
				int pY = c.getY();
				int nX = Server.npcHandler.npcs[i].getX();
				int nY = Server.npcHandler.npcs[i].getY();
				int offX = (pY - nY)* -1;
				int offY = (pX - nX)* -1;
				c.castingMagic = true;
				c.projectileStage = 2;
				if(c.MAGIC_SPELLS[c.spellId][3] &gt; 0) {
					if(getStartGfxHeight() == 100) {
						c.gfx100(c.MAGIC_SPELLS[c.spellId][3]);
					} else {
						c.gfx0(c.MAGIC_SPELLS[c.spellId][3]);
					}
				}
				if(c.MAGIC_SPELLS[c.spellId][4] &gt; 0) {
					c.getPA().createPlayersProjectile(pX, pY, offX, offY, 50, 78, c.MAGIC_SPELLS[c.spellId][4], getStartHeight(), getEndHeight(), i + 1, 50);
				}
				c.hitDelay = getHitDelay(c.getItems().getItemName(c.playerEquipment[c.playerWeapon]).toLowerCase());
				c.oldNpcIndex = i;
				c.oldSpellId = c.spellId;
				c.spellId = 0;
				if (!c.autocasting)
					c.npcIndex = 0;
			}
				if(c.curseActive[18]) { // SoulSplit GFX's - CAUSES CRASH
				if(c.oldNpcIndex &gt; 0) {
				if(Server.npcHandler.npcs[c.oldNpcIndex] != null) {
				try {
				if(c.curseActive[18] &amp;&amp; !c.prayerActive[23] &amp;&amp; c.playerLevel[3] &lt;= 99) {
					int heal = 2;
					if(c.playerLevel[3] + heal &gt;= c.getPA().getLevelForXP(c.playerXP[3])) {
						c.playerLevel[3] = c.getPA().getLevelForXP(c.playerXP[3]);
					} else {
						c.playerLevel[3] += heal;
					}
					c.getPA().refreshSkill(3);
				}
				final int pX = c.getX();
				final int pY = c.getY();
				final int nX = Server.npcHandler.npcs[c.oldNpcIndex].getX();
				final int nY = Server.npcHandler.npcs[c.oldNpcIndex].getY();
				final int offX = (pY - nY)* -1;
				final int offY = (pX - nX)* -1;
				c.SSPLIT = true;
				c.getPA().createPlayersProjectile2(pX, pY, offX, offY, 50, 50, 2263, 9, 9, c.oldNpcIndex + 1, 24, 0);
				EventManager.getSingleton().addEvent(new Event() {
				public void execute(EventContainer b) {
				c.SSPLIT = false;
			        b.stop();
				}
				}, 500);
				/*EventManager.getSingleton().addEvent(new Event() { // CAUSES CRASH
				public void execute(EventContainer b) {
				//c.getPA().createPlayersProjectile2(nX, nY, offX, offY, 50, 50, 2263, 9, 9, - c.playerId - 1, 24, 0);
			        b.stop();
				}
				}, 800);*/
				} catch (Exception e) {
				e.printStackTrace();
			}
		}
	}
}
				
				if(c.crystalBowArrowCount &gt;= 250){
					switch(c.playerEquipment[c.playerWeapon]) {
						
						case 4223: // 1/10 bow
						c.getItems().wearItem(-1, 1, 3);
						c.sendMessage("Your crystal bow has fully degraded.");
						if(!c.getItems().addItem(4207, 1)) {
							Server.itemHandler.createGroundItem(c, 4207, c.getX(), c.getY(), 1, c.getId());
						}
						c.crystalBowArrowCount = 0;
						break;
						
						default:
						c.getItems().wearItem(++c.playerEquipment[c.playerWeapon], 1, 3);
						c.sendMessage("Your crystal bow degrades.");
						c.crystalBowArrowCount = 0;
						break;
						
					
					}
				}	
			}
		}
	}
</code></pre>
<p>[/CODE]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/magic-problem/477529/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/magic-problem/477529/5</link>
        <pubDate>Fri, 04 Jan 2013 21:19:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-477529-5</guid>
        <source url="https://forum.moparisthebest.com/t/magic-problem/477529.rss">Magic problem</source>
      </item>
      <item>
        <title>Magic problem</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>Post the code you have for dealing with spell casting</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/magic-problem/477529/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/magic-problem/477529/4</link>
        <pubDate>Fri, 04 Jan 2013 21:09:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-477529-4</guid>
        <source url="https://forum.moparisthebest.com/t/magic-problem/477529.rss">Magic problem</source>
      </item>
      <item>
        <title>Magic problem</title>
        <dc:creator><![CDATA[@startcode startcode]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/startcode">@startcode</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="477529">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/thetutman/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> TheTutMan:</div>
<blockquote>
<p>Might not be the best way but you could mke a timer and when you cast the spell you stop walking for the time you put</p>
</blockquote>
</aside>
<p>Hmm, that’s the worst way to do it, but thanks for responding.There has been a tutorial released on how to fix this, but I can’t find it anywhere :s.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/magic-problem/477529/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/magic-problem/477529/3</link>
        <pubDate>Fri, 04 Jan 2013 21:07:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-477529-3</guid>
        <source url="https://forum.moparisthebest.com/t/magic-problem/477529.rss">Magic problem</source>
      </item>
      <item>
        <title>Magic problem</title>
        <dc:creator><![CDATA[@TheTutMan TheTutMan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/thetutman">@TheTutMan</a> wrote:</p>
          <blockquote>
              <p>Might not be the best way but you could mke a timer and when you cast the spell you stop walking for the time you put</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/magic-problem/477529/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/magic-problem/477529/2</link>
        <pubDate>Fri, 04 Jan 2013 21:02:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-477529-2</guid>
        <source url="https://forum.moparisthebest.com/t/magic-problem/477529.rss">Magic problem</source>
      </item>
      <item>
        <title>Magic problem</title>
        <dc:creator><![CDATA[@startcode startcode]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/startcode">@startcode</a> wrote:</p>
          <blockquote>
              <p>hi,</p>
<p>whenever I cast a spell on an npc, I walk up to the npc before casting the spell.</p>
<p>does someone know how to fix it, so you can cast spells from a distance?</p>
<p>thanks</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/magic-problem/477529/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/magic-problem/477529/1</link>
        <pubDate>Fri, 04 Jan 2013 20:09:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-477529-1</guid>
        <source url="https://forum.moparisthebest.com/t/magic-problem/477529.rss">Magic problem</source>
      </item>
  </channel>
</rss>
