<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>My Basic 3D Tutorial</title>
    <link>https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734</link>
    <description>
[center][b][u]Basic 3D Graphics in Java[/u]
by Archive[/b][/center]


[center]I decided to split up this tutorial into [u][b]three[/b][/u] sections:


[b][u]Setup
Math
Finalization[/u][/b][/center]


[b][u]Section 1 : Setup[/u][/b]


All we need here is a basic Java graphics setup and a main loop.
You may implement this however you like, but I will show you what I&#39;ve done.


Graphics displayer Display.java:


[code]public final class Display extends Frame {
		
	private static final long serialVersionUID = 1L;


	private final Surface surface; // Our drawable pixel surface.


	private final BufferedImage buffer; // The buffer that the pixel data from the surface is given to.
		
	public Display(int width, int height, String title) {
		setSize(width, height);
		
                // Instantiate the buffer and surface.
		buffer = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
		surface = new Surface(buffer.getRaster(), width, height);
		setResizable(false);
     
                // Add window closing event to allow the window to close when the red X is pressed!
		addWindowListener(new WindowAdapter() {
			@Override
			public void windowClosing(WindowEvent e) {
				System.exit(0);
			}
		});
		setLocationRelativeTo(null);
		setTitle(title);
		setVisible(true); // Show on screen.
	}


        // Draws the buffer to the display.
	public void drawBuffer() {
		this.getGraphics().drawImage(buffer, 0, 0, surface.getWidth(), surface.getHeight(), this);
	}
	
	public Surface getSurface() {
		return surface;
	}


	public BufferedImage getBuffer() {
		return buffer;
	}


}[/code]


Drawable pixel surface Surface.java:


[code]public final class Surface {


	private final int width; // Width of the surface.


	private final int height; // Height of the surface.


	private final WritableRaster raster; // Raster we can draw to.


	public Surface(WritableRaster raster, int width, int height) {
		this.raster = raster;
		this.width = width;
		this.height = height;
	}


        // Reset all values to zero (black) to clear the screen.
	public void clear() {
		for (int i = 0; i &lt; ((DataBufferInt) raster.getDataBuffer()).getData().length; i++) {
			((DataBufferInt) raster.getDataBuffer()).getData()[i] = 0;
		}
	}


        // Your basic implementation of the Bresenham Line Algorithm.
	public void drawLine(int x1, int y1, int x2, int y2, int color) {
		int dx = Math.abs(x2 - x1);
		int dy = Math.abs(y2 - y1);
		int sx = (x1 &lt; x2) ? 1 : -1;
		int sy = (y1 &lt; y2) ? 1 : -1;
		int err = dx - dy;


		putPixel(x1, y1, color);
		while ((x1 != x2) || (y1 != y2)) {
			int err2 = err &lt;&lt; 1;
			if (err2 &gt; -dy) {
				err -= dy;
				x1 += sx;
			}
			if (err2 &lt; dx) {
				err += dx;
				y1 += sy;
			}
			putPixel(x1, y1, color);
		}
	}


        // Set a pixel on this surface to the given color.
	public void putPixel(int x, int y, int color) {
		if (x &lt; getWidth() &amp;&amp; x &gt; 0 &amp;&amp; y &lt; getHeight() &amp;&amp; y &gt; 0) {
			raster.setPixel(x, y, new int[] { colorClamp(color, 16), colorClamp(color, 8), colorClamp(color, 0) });
		}
	}


        // Make sure 0 &lt; color &lt; 255.
	public static int colorClamp(int color, int bits) {
		return Math.min(255, Math.max((color &gt;&gt; bits) &amp; 0xFF, 0));
	}


	public int getWidth() {
		return width;
	}


	public int getHeight() {
		return height;
	}


}
[/code]


Main class Demo.java:


[code]public final class Demo {


	private boolean running; // tells us if the program is running, used to break the main loop.
	private Display display; // The instance of Display that contains the buffer and the surface.
	private Rasterizer rasterizer; // The &quot;rasterizer&quot; that draws our 3D object.


        // Main entry point
	public static void main(String[] args) {
		new Demo().run(); // Create new instance of this class and run it.
	}


	private void setup() { // Setup method that creates our instances.
		display = new Display(800, 600, &quot;3D Graphics Tutorial by Archive&quot;); // Create new instance of the Display.
		rasterizer = new Rasterizer(display); // Create new instance of Rasterizer.
		running = true; // Start running the program!
	}


	private void run() {
		try {
			setup(); // Setup.
			mainLoop(); // Loop.
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			exit(); // Exit after mainLoop broken.
		}
	}


	private void exit() {
		try {
			Thread.sleep(1000L);
			if (display != null) {
				display.dispose(); // Dispose the Display.
			}
			System.exit(0); // Exit
		} catch (Exception e) {
			e.printStackTrace();
		}
	}


	private void mainLoop() { // This is the main loop, it loops until running == false.
		while (running) {
			rasterizer.rasterize(); // Draw our 3D object.
			display.drawBuffer(); // Display the buffer that our 3D object was drawn on.
			try {
				Thread.sleep(10L); // Sleep so the animation doesn&#39;t run too fast!
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
	}


}[/code]


That&#39;s it for the setup! You should have a black screen when you run it now!


[b][u]Section 2 : Math[/u][/b]


Probably the most interesting and fun part of this tutorial!


All we need are two classes for the math:


[b]Vector[/b] and [b]Matrix[/b]


A Vector can represent many things depending on the context it is used in. It can be used to represent a force, a direction, a point, or many other things. A Vector is basically a set of associated values.


For us, we need a Vector to represent a point, and, because we are doing 3D, we need to have a Vector that stores [b]three[/b] values, an X, a Y, and a Z.


X, Y, and Z represent the 3D space coordinates.


My very basic implementation of a Vector:


[code]public class Vector {
	
	private float x; // X coordinate
	private float y; // Y coordinate
	private float z; // Z coordinate


	public Vector() {
		this(0, 0, 0);
	}
	
	public Vector(float x, float y, float z) {
		this.x = x;
		this.y = y;
		this.z = z;
	}


        // Subtract the components of the given Vector from this instance of Vector
	public void subtract(Vector v) {
		this.x -= v.getX();
		this.y -= v.getY();
		this.z -= v.getZ();
	}


	public float getX() {
		return x;
	}


	public void setX(float x) {
		this.x = x;
	}


	public float getY() {
		return y;
	}


	public void setY(float y) {
		this.y = y;
	}


	public float getZ() {
		return z;
	}


	public void setZ(float z) {
		this.z = z;
	}


        // To make a copy of this object so that the original is not modified.
	@Override
	public Vector clone() {
		return new Vector(x, y, z);
	}
	
        // For debugging purposes (Rounds the value after two decimal places)
	@Override
	public String toString() {
		return String.format(&quot;&lt;%.2f, %.2f, %.2f&gt;&quot;, x, y, z);
	}
	
}[/code]


Now we move onto the [b]Matrix[/b]


Don&#39;t let a Matrix scare you, Matrices are actually just collections of values, like Vectors. A Vector is actually a 3x1 Matrix (In our case).


In order to rotate a point around the origin, you use Matrices.


The process to rotate a Vector around the origin is this:
1. Set the matrix to the desired rotation.
2. Multiply the matrix by the Vector you want to rotate.
3. That&#39;s it!


If you still do not understand, it will make sense once we implement it.


Our Matrix.java:


[code]public final class Matrix {


        // A 3x3 matrix is all we need. 3 (a, d, g) by 3 (a, b, c)
	private float a, b, c;
	private float d, e, f;
	private float g, h, i;


	public Vector multiply(Vector v) {
		float vx = v.getX();
		float vy = v.getY();
		float vz = v.getZ();
		float newX = (a * vx) + (d * vy) + (g * vz);
		float newY = (b * vx) + (e * vy) + (h * vz);
		float newZ = (c * vx) + (f * vy) + (i * vz);


		return new Vector(newX, newY, newZ);
	}


	public void rotateX(float theta) {
		this.a = 1;
		this.b = 0;
		this.c = 0;
		this.d = 0;
		this.e = (float) Math.cos(theta);
		this.f = (float) Math.sin(theta);
		this.g = 0;
		this.h = (float) -Math.sin(theta);
		this.i = (float) Math.cos(theta);
	}


	public void rotateY(float theta) {
		this.a = (float) Math.cos(theta);
		this.b = 0;
		this.c = (float) -Math.sin(theta);
		this.d = 0;
		this.e = 1;
		this.f = 0;
		this.g = (float) Math.sin(theta);
		this.h = 0;
		this.i = (float) Math.cos(theta);
	}


	public void rotateZ(float theta) {
		this.a = (float) Math.cos(theta);
		this.b = (float) Math.sin(theta);
		this.c = 0;
		this.d = (float) -Math.sin(theta);
		this.e = (float) Math.cos(theta);
		this.f = 0;
		this.g = 0;
		this.h = 0;
		this.i = 1;
	}


}
[/code]


That is it for the math!


Now onto finalizing this project.


[b][u]Section 3 : Finalization[/u][/b]


To make use of all of this math, we need to interpret it and use it for our graphics.


Actually, before I continue, I purposely left an important thing out of our Vector class.


We need to project the points onto the screen. We do that by using a simple calculation:


[code]	public void perspectiveProject() {
		this.x = (DEPTH_OF_FIELD * this.x / -this.z) + 400; // 400 is half of the surface width.
		this.y = 300 - (DEPTH_OF_FIELD * this.y / -this.z); // 300 is half of the surface height.
	}
[/code]


And DEPTH_OF_FIELD is set to 700.


[IMG]http://i59.tinypic.com/kex8g4.png


This image (Taken from David Brackeen&#39;s [u]Developing Games in Java[/u]) explains where this came from.


Now, to get to finishing this tutorial up.


We need to make the long awaited for Rasterizer class, so here it is, fully commented so you can understand what is going on:


[code]public final class Rasterizer {


	private final Display display; // The Display to draw onto.


	private float y; // Variable that increments in order to rotate our object smoothly.


	public Rasterizer(Display display) {
		this.display = display;
	}


	public void rasterize() {
		display.getSurface().clear(); // Clear the surface (make it all black)


		Vector camera = new Vector(0, 0, 10); // The camera Vector needs to be made to move back from the object
 // because then the camera would be at the origin and it would not look ok
		
// These vertices make a 1x1x1 cube however it will not look like a cube because to make a cube, the vertices need to be
// connected in a certain order and for the sake of simplicity I left that out.
		Vector[] vertices = new Vector[8];
		vertices[0] = new Vector(-1, -1, -1);
		vertices[1] = new Vector(-1, -1, 1);
		vertices[2] = new Vector(-1, 1, -1);
		vertices[3] = new Vector(-1, 1, 1);
		vertices[4] = new Vector(1, -1, -1);
		vertices[5] = new Vector(1, -1, 1);
		vertices[6] = new Vector(1, 1, -1);
		vertices[7] = new Vector(1, 1, 1);


		Matrix mat = new Matrix(); // New matrix to do our rotation on.


		y += 0.05f; //.05 gives it a good pace.
		if (y &gt; 6.28f) { // 2 pi (2 * 3.14) for full rotation. Remember that we don&#39;t use degrees, we use radians.
			y = 0;
		}
		mat.rotateY(y); // Now, set the matrix to the values that you want.


		for (int i = 0; i &lt; vertices.length; i++) {
			vertices[i] = mat.multiply(vertices[i]); // Multiply the matrix by all of the vertices to rotate them.
		}


		for (int i = 0; i &lt; vertices.length; i++) {
			vertices[i].subtract(camera); // Subtract the camera&#39;s location from all the vertices to move the object back.
		}


		for (int i = 0; i &lt; vertices.length; i++) {
			vertices[i].perspectiveProject(); // Project the points onto the screen.
		}


                // Draw lines between all vertices.
		for (int i = 0; i &lt; vertices.length - 1; i++) {
			display.getSurface().drawLine((int) vertices[i].getX(), (int) vertices[i].getY(), (int) vertices[i + 1].getX(), (int) vertices[i + 1].getY(), 0xFFFF00);
		}
	}


}[/code]


That is it! You&#39;ve got 3D working!


Please note that this is not efficient at all, there is a new Matrix created, a new camera Vector, and a new array of vertices being created every time a frame gets drawn.


This is what you should have created from this code:


[IMG]http://i59.tinypic.com/a1r4na.png[/img]


This is my software rendered engine that I actually built off of this same code! Anything is possible!


[IMG]http://i60.tinypic.com/v3gcw1.png[/img]</description>
    
    <lastBuildDate>Fri, 03 Jul 2015 03:38:04 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>My Basic 3D Tutorial</title>
        <dc:creator><![CDATA[@Docent Limits]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/docent">@Docent</a> wrote:</p>
          <blockquote>
              <p>[quote=“Taharok, post:26, topic:551734”][quote author=Limits link=topic=670650.msg4488557#msg4488557 date=1435872080]</p>
<aside class="quote">
<blockquote>
<p>I don’t think they were rendering at 100 frames per second when they were developing r194. You have to consider the time period here. Beyond that, they didn’t do a very good job at object limiting back then, meaning that more players on the screen continually tanked performance. So 100 fps is very much based on what’s on the screen at the time. Overall, fps isn’t a good measure of performance for their client.</p>
<p>Perspective correct vertex attributes are visually very difficult to see in most cases. If you do color interpolation or shade interpolation, it’s super hard (if not impossible) to see when interpolation is occurring in screen space or in the local space of the plane the triangle lives within. With texture mapping it’s much easier since the signal of colors being outputted by the texture mapper is some sort of pattern our eyes are able to easily recognize and discontinuities in this pattern become immediately obvious. Playing on these sorts of tricks (such as not being able to tell affine versus perspective interpolation of colors) is crucial for performance in graphics.</p>
<p>I think it’s good that you’re working on a good project for your resume. Also consider how useful it is to have a breadth of knowledge, as well. If you are adding a project that has software rasterization on your resume, surely you’re not trying to get a job as a software graphics programmer. If you’re interested in getting a job as a graphics developer in general, learn everything and do everything you can related to graphics (including the software stuff, that is a really good part of the process to understand).</p>
</blockquote>
</aside>
<p>Sorry for the very late reply, but I find the amount of triangles the r194 engine can render pretty impressive. I believe every player model is around 500 triangles and the game world is pretty detailed too. Each blade of grass is a triangle and so are the stones and stuff. Did they use occlusion culling? That’s something I’ve been looking into recently but I don’t think I’m going to need it in my engine specifically.<br>
[/quote]</p>
<p>It’s hard to gauge how much it could actually render, since not only are modern CPUs much faster than mainstream CPUs were when their software engine was being used, but processors also behave a lot differently than the used to. It is neat seeing it render a lot of triangles, but seeing a GPU render orders of magnitude more triangles is really amazing, too. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>I don’t believe they did an occlusion culling aside from zbuffering. I’m not sure, though. Occlusion culling is expensive and difficult to do efficiently. Often it’s more efficient just to use zbuffering and a reverse painter’s algorithm rendering scheme, though transparency sort of ruins that idea. There are people at this community that might be able to shed some light on this part of their software rendering engine, though.[/quote]<br>
Im pretty sure the r194 engine use z-sorting rather than z-buffering</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/27">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/27</link>
        <pubDate>Fri, 03 Jul 2015 03:38:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551734-27</guid>
        <source url="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734.rss">My Basic 3D Tutorial</source>
      </item>
      <item>
        <title>My Basic 3D Tutorial</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <p>[quote=“Limits, post:25, topic:551734”][quote author=Taharok link=topic=670650.msg4484844#msg4484844 date=1433303719]<br>
I don’t think they were rendering at 100 frames per second when they were developing r194. You have to consider the time period here. Beyond that, they didn’t do a very good job at object limiting back then, meaning that more players on the screen continually tanked performance. So 100 fps is very much based on what’s on the screen at the time. Overall, fps isn’t a good measure of performance for their client.</p>
<p>Perspective correct vertex attributes are visually very difficult to see in most cases. If you do color interpolation or shade interpolation, it’s super hard (if not impossible) to see when interpolation is occurring in screen space or in the local space of the plane the triangle lives within. With texture mapping it’s much easier since the signal of colors being outputted by the texture mapper is some sort of pattern our eyes are able to easily recognize and discontinuities in this pattern become immediately obvious. Playing on these sorts of tricks (such as not being able to tell affine versus perspective interpolation of colors) is crucial for performance in graphics.</p>
<p>I think it’s good that you’re working on a good project for your resume. Also consider how useful it is to have a breadth of knowledge, as well. If you are adding a project that has software rasterization on your resume, surely you’re not trying to get a job as a software graphics programmer. If you’re interested in getting a job as a graphics developer in general, learn everything and do everything you can related to graphics (including the software stuff, that is a really good part of the process to understand).<br>
[/quote]<br>
Sorry for the very late reply, but I find the amount of triangles the r194 engine can render pretty impressive. I believe every player model is around 500 triangles and the game world is pretty detailed too. Each blade of grass is a triangle and so are the stones and stuff. Did they use occlusion culling? That’s something I’ve been looking into recently but I don’t think I’m going to need it in my engine specifically.[/quote]</p>
<p>It’s hard to gauge how much it could actually render, since not only are modern CPUs much faster than mainstream CPUs were when their software engine was being used, but processors also behave a lot differently than the used to. It is neat seeing it render a lot of triangles, but seeing a GPU render orders of magnitude more triangles is really amazing, too. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>I don’t believe they did an occlusion culling aside from zbuffering. I’m not sure, though. Occlusion culling is expensive and difficult to do efficiently. Often it’s more efficient just to use zbuffering and a reverse painter’s algorithm rendering scheme, though transparency sort of ruins that idea. There are people at this community that might be able to shed some light on this part of their software rendering engine, though.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/26">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/26</link>
        <pubDate>Fri, 03 Jul 2015 01:08:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551734-26</guid>
        <source url="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734.rss">My Basic 3D Tutorial</source>
      </item>
      <item>
        <title>My Basic 3D Tutorial</title>
        <dc:creator><![CDATA[@Docent Limits]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/docent">@Docent</a> wrote:</p>
          <blockquote>
              <p>[quote=“Taharok, post:24, topic:551734”]I don’t think they were rendering at 100 frames per second when they were developing r194. You have to consider the time period here. Beyond that, they didn’t do a very good job at object limiting back then, meaning that more players on the screen continually tanked performance. So 100 fps is very much based on what’s on the screen at the time. Overall, fps isn’t a good measure of performance for their client.</p>
<p>Perspective correct vertex attributes are visually very difficult to see in most cases. If you do color interpolation or shade interpolation, it’s super hard (if not impossible) to see when interpolation is occurring in screen space or in the local space of the plane the triangle lives within. With texture mapping it’s much easier since the signal of colors being outputted by the texture mapper is some sort of pattern our eyes are able to easily recognize and discontinuities in this pattern become immediately obvious. Playing on these sorts of tricks (such as not being able to tell affine versus perspective interpolation of colors) is crucial for performance in graphics.</p>
<p>I think it’s good that you’re working on a good project for your resume. Also consider how useful it is to have a breadth of knowledge, as well. If you are adding a project that has software rasterization on your resume, surely you’re not trying to get a job as a software graphics programmer. If you’re interested in getting a job as a graphics developer in general, learn everything and do everything you can related to graphics (including the software stuff, that is a really good part of the process to understand).[/quote]<br>
Sorry for the very late reply, but I find the amount of triangles the r194 engine can render pretty impressive. I believe every player model is around 500 triangles and the game world is pretty detailed too. Each blade of grass is a triangle and so are the stones and stuff. Did they use occlusion culling? That’s something I’ve been looking into recently but I don’t think I’m going to need it in my engine specifically.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/25">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/25</link>
        <pubDate>Thu, 02 Jul 2015 21:21:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551734-25</guid>
        <source url="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734.rss">My Basic 3D Tutorial</source>
      </item>
      <item>
        <title>My Basic 3D Tutorial</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <p>I don’t think they were rendering at 100 frames per second when they were developing r194. You have to consider the time period here. Beyond that, they didn’t do a very good job at object limiting back then, meaning that more players on the screen continually tanked performance. So 100 fps is very much based on what’s on the screen at the time. Overall, fps isn’t a good measure of performance for their client.</p>
<p>Perspective correct vertex attributes are visually very difficult to see in most cases. If you do color interpolation or shade interpolation, it’s super hard (if not impossible) to see when interpolation is occurring in screen space or in the local space of the plane the triangle lives within. With texture mapping it’s much easier since the signal of colors being outputted by the texture mapper is some sort of pattern our eyes are able to easily recognize and discontinuities in this pattern become immediately obvious. Playing on these sorts of tricks (such as not being able to tell affine versus perspective interpolation of colors) is crucial for performance in graphics.</p>
<p>I think it’s good that you’re working on a good project for your resume. Also consider how useful it is to have a breadth of knowledge, as well. If you are adding a project that has software rasterization on your resume, surely you’re not trying to get a job as a software graphics programmer. If you’re interested in getting a job as a graphics developer in general, learn everything and do everything you can related to graphics (including the software stuff, that is a really good part of the process to understand).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/24">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/24</link>
        <pubDate>Wed, 03 Jun 2015 03:55:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551734-24</guid>
        <source url="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734.rss">My Basic 3D Tutorial</source>
      </item>
      <item>
        <title>My Basic 3D Tutorial</title>
        <dc:creator><![CDATA[@Docent Limits]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/docent">@Docent</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="22" data-topic="551734">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/strucker/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Strucker:</div>
<blockquote>
<p>I’ll be sure to check it out carefully, thanks man.</p>
</blockquote>
</aside>
<p>Are you referring to the tutorial?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/23">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/23</link>
        <pubDate>Tue, 02 Jun 2015 22:59:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551734-23</guid>
        <source url="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734.rss">My Basic 3D Tutorial</source>
      </item>
      <item>
        <title>My Basic 3D Tutorial</title>
        <dc:creator><![CDATA[@strucker Strucker]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/strucker">@strucker</a> wrote:</p>
          <blockquote>
              <p>I’ll be sure to check it out carefully, thanks man.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/22">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/22</link>
        <pubDate>Tue, 02 Jun 2015 22:57:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551734-22</guid>
        <source url="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734.rss">My Basic 3D Tutorial</source>
      </item>
      <item>
        <title>My Basic 3D Tutorial</title>
        <dc:creator><![CDATA[@Docent Limits]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/docent">@Docent</a> wrote:</p>
          <blockquote>
              <p>[quote=“tyb97, post:20, topic:551734”][quote author=Limits link=topic=670650.msg4484765#msg4484765 date=1433253146]</p>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<p>I’m intrigued. Few people venture over to the fun and frustrating area of 3D rasterization. I’m even more surprised you picked Java (though less since it’s this community). Pretty cool. I started in graphics programming from software rasterization, also. How much have you learned about hardware rendering? Also, out of curiosity, what shading model are you using with your triangle rasterizer? It looks like phong shading to me, but it’s hard to tell without more pictures. Also, are you doing perspective correct texture mapping?</p>
<p>Edit: I noticed in the other thread you mentioned you’re doing Gouraud shading, so disregard the question on shading. <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
</blockquote>
</aside>
<p>Thank you! I had tried C++ but it wasn’t my cup of tea.<br>
I also have no experience with hardware rendering <img src="https://forum.moparisthebest.com/images/emoji/twitter/confused.png?v=5" title=":confused:" class="emoji" alt=":confused:"><br>
And yes, I am using perspective correct texture mapping, affine looks too wonky. Haha</p>
</blockquote>
</aside>
<p>Just curious, are you doing perspective-correct interpolation of other vertex attributes, as well? This is something I never see in software rasterizers (likely because it’s way too expensive). I believe Jagex didn’t do it in their rasterizers, but they were under much different performance constraints at the time.</p>
<p>Alas, accelerated graphics hardware lets us do ridiculous things. It’s a super cool topic, too. You should learn about it sometime. The problem of trying to push as many rendered pixels to the screen at once is very interesting and how they designed hardware to solve the problem is even more so. I find that much more interesting than hardware rendering libraries like DirectX and OpenGL. In fact, those libraries are pretty boring. <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"> Shading languages are very fascinating, though. They have very similar concepts to the hardware itself (being only one abstraction above it) and are very similar to what you are doing with your low-level rendering.</p>
</blockquote>
</aside>
<p>No, the only thing that is perspective-correct is the texture mapping. Jagex was running their 3D engine in a small 512x336 window (in the case of revision 194), this is small enough to be able to hit over 100fps without a cap. I never noticed the lack of perspective correction in RuneScape…</p>
<p>Hardware rendering is something I wish to learn after high school, I’m currently at the end of my junior year and I want to make this game so I can put it on my resume, haha.<br>
[/quote]<br>
That’s really awesome. I goofed off alot during my junior and senior year and didn’t really push myself to learn any more than I already knew in programming, you keep at it and you could make a difference quickly, somewhere.[/quote]<br>
Thank you! My goof off years were 8th-10th grade, I realized I need to start becoming the best programmer I could be, so now I code for about 6-7 hours every weekday and 10-14 hours on weekends.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/21">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/21</link>
        <pubDate>Tue, 02 Jun 2015 22:12:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551734-21</guid>
        <source url="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734.rss">My Basic 3D Tutorial</source>
      </item>
      <item>
        <title>My Basic 3D Tutorial</title>
        <dc:creator><![CDATA[@tyb97 tyb97]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tyb97">@tyb97</a> wrote:</p>
          <blockquote>
              <p>[quote=“Limits, post:19, topic:551734”][quote author=Taharok link=topic=670650.msg4484746#msg4484746 date=1433222384]</p>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<p>I’m intrigued. Few people venture over to the fun and frustrating area of 3D rasterization. I’m even more surprised you picked Java (though less since it’s this community). Pretty cool. I started in graphics programming from software rasterization, also. How much have you learned about hardware rendering? Also, out of curiosity, what shading model are you using with your triangle rasterizer? It looks like phong shading to me, but it’s hard to tell without more pictures. Also, are you doing perspective correct texture mapping?</p>
<p>Edit: I noticed in the other thread you mentioned you’re doing Gouraud shading, so disregard the question on shading. <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
</blockquote>
</aside>
<p>Thank you! I had tried C++ but it wasn’t my cup of tea.<br>
I also have no experience with hardware rendering <img src="https://forum.moparisthebest.com/images/emoji/twitter/confused.png?v=5" title=":confused:" class="emoji" alt=":confused:"><br>
And yes, I am using perspective correct texture mapping, affine looks too wonky. Haha</p>
</blockquote>
</aside>
<p>Just curious, are you doing perspective-correct interpolation of other vertex attributes, as well? This is something I never see in software rasterizers (likely because it’s way too expensive). I believe Jagex didn’t do it in their rasterizers, but they were under much different performance constraints at the time.</p>
<p>Alas, accelerated graphics hardware lets us do ridiculous things. It’s a super cool topic, too. You should learn about it sometime. The problem of trying to push as many rendered pixels to the screen at once is very interesting and how they designed hardware to solve the problem is even more so. I find that much more interesting than hardware rendering libraries like DirectX and OpenGL. In fact, those libraries are pretty boring. <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"> Shading languages are very fascinating, though. They have very similar concepts to the hardware itself (being only one abstraction above it) and are very similar to what you are doing with your low-level rendering.<br>
[/quote]<br>
No, the only thing that is perspective-correct is the texture mapping. Jagex was running their 3D engine in a small 512x336 window (in the case of revision 194), this is small enough to be able to hit over 100fps without a cap. I never noticed the lack of perspective correction in RuneScape…</p>
<p>Hardware rendering is something I wish to learn after high school, I’m currently at the end of my junior year and I want to make this game so I can put it on my resume, haha.[/quote]<br>
That’s really awesome. I goofed off alot during my junior and senior year and didn’t really push myself to learn any more than I already knew in programming, you keep at it and you could make a difference quickly, somewhere.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/20">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/20</link>
        <pubDate>Tue, 02 Jun 2015 16:25:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551734-20</guid>
        <source url="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734.rss">My Basic 3D Tutorial</source>
      </item>
      <item>
        <title>My Basic 3D Tutorial</title>
        <dc:creator><![CDATA[@Docent Limits]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/docent">@Docent</a> wrote:</p>
          <blockquote>
              <p>[quote=“Taharok, post:18, topic:551734”][quote author=Limits link=topic=670650.msg4484649#msg4484649 date=1433167831]</p>
<aside class="quote">
<blockquote>
<p>I’m intrigued. Few people venture over to the fun and frustrating area of 3D rasterization. I’m even more surprised you picked Java (though less since it’s this community). Pretty cool. I started in graphics programming from software rasterization, also. How much have you learned about hardware rendering? Also, out of curiosity, what shading model are you using with your triangle rasterizer? It looks like phong shading to me, but it’s hard to tell without more pictures. Also, are you doing perspective correct texture mapping?</p>
<p>Edit: I noticed in the other thread you mentioned you’re doing Gouraud shading, so disregard the question on shading. <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
</blockquote>
</aside>
<p>Thank you! I had tried C++ but it wasn’t my cup of tea.<br>
I also have no experience with hardware rendering <img src="https://forum.moparisthebest.com/images/emoji/twitter/confused.png?v=5" title=":confused:" class="emoji" alt=":confused:"><br>
And yes, I am using perspective correct texture mapping, affine looks too wonky. Haha</p>
<p>[/quote]</p>
<p>Just curious, are you doing perspective-correct interpolation of other vertex attributes, as well? This is something I never see in software rasterizers (likely because it’s way too expensive). I believe Jagex didn’t do it in their rasterizers, but they were under much different performance constraints at the time.</p>
<p>Alas, accelerated graphics hardware lets us do ridiculous things. It’s a super cool topic, too. You should learn about it sometime. The problem of trying to push as many rendered pixels to the screen at once is very interesting and how they designed hardware to solve the problem is even more so. I find that much more interesting than hardware rendering libraries like DirectX and OpenGL. In fact, those libraries are pretty boring. <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"> Shading languages are very fascinating, though. They have very similar concepts to the hardware itself (being only one abstraction above it) and are very similar to what you are doing with your low-level rendering.[/quote]<br>
No, the only thing that is perspective-correct is the texture mapping. Jagex was running their 3D engine in a small 512x336 window (in the case of revision 194), this is small enough to be able to hit over 100fps without a cap. I never noticed the lack of perspective correction in RuneScape…</p>
<p>Hardware rendering is something I wish to learn after high school, I’m currently at the end of my junior year and I want to make this game so I can put it on my resume, haha.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/19">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/19</link>
        <pubDate>Tue, 02 Jun 2015 13:52:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551734-19</guid>
        <source url="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734.rss">My Basic 3D Tutorial</source>
      </item>
      <item>
        <title>My Basic 3D Tutorial</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <p>[quote=“Limits, post:17, topic:551734”][quote author=Taharok link=topic=670650.msg4484617#msg4484617 date=1433140070]<br>
I’m intrigued. Few people venture over to the fun and frustrating area of 3D rasterization. I’m even more surprised you picked Java (though less since it’s this community). Pretty cool. I started in graphics programming from software rasterization, also. How much have you learned about hardware rendering? Also, out of curiosity, what shading model are you using with your triangle rasterizer? It looks like phong shading to me, but it’s hard to tell without more pictures. Also, are you doing perspective correct texture mapping?</p>
<p>Edit: I noticed in the other thread you mentioned you’re doing Gouraud shading, so disregard the question on shading. <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"><br>
[/quote]<br>
Thank you! I had tried C++ but it wasn’t my cup of tea.<br>
I also have no experience with hardware rendering <img src="https://forum.moparisthebest.com/images/emoji/twitter/confused.png?v=5" title=":confused:" class="emoji" alt=":confused:"><br>
And yes, I am using perspective correct texture mapping, affine looks too wonky. Haha[/quote]</p>
<p>Just curious, are you doing perspective-correct interpolation of other vertex attributes, as well? This is something I never see in software rasterizers (likely because it’s way too expensive). I believe Jagex didn’t do it in their rasterizers, but they were under much different performance constraints at the time.</p>
<p>Alas, accelerated graphics hardware lets us do ridiculous things. It’s a super cool topic, too. You should learn about it sometime. The problem of trying to push as many rendered pixels to the screen at once is very interesting and how they designed hardware to solve the problem is even more so. I find that much more interesting than hardware rendering libraries like DirectX and OpenGL. In fact, those libraries are pretty boring. <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"> Shading languages are very fascinating, though. They have very similar concepts to the hardware itself (being only one abstraction above it) and are very similar to what you are doing with your low-level rendering.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/18</link>
        <pubDate>Tue, 02 Jun 2015 05:19:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551734-18</guid>
        <source url="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734.rss">My Basic 3D Tutorial</source>
      </item>
      <item>
        <title>My Basic 3D Tutorial</title>
        <dc:creator><![CDATA[@Docent Limits]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/docent">@Docent</a> wrote:</p>
          <blockquote>
              <p>[quote=“Taharok, post:16, topic:551734”]I’m intrigued. Few people venture over to the fun and frustrating area of 3D rasterization. I’m even more surprised you picked Java (though less since it’s this community). Pretty cool. I started in graphics programming from software rasterization, also. How much have you learned about hardware rendering? Also, out of curiosity, what shading model are you using with your triangle rasterizer? It looks like phong shading to me, but it’s hard to tell without more pictures. Also, are you doing perspective correct texture mapping?</p>
<p>Edit: I noticed in the other thread you mentioned you’re doing Gouraud shading, so disregard the question on shading. :P[/quote]<br>
Thank you! I had tried C++ but it wasn’t my cup of tea.<br>
I also have no experience with hardware rendering <img src="https://forum.moparisthebest.com/images/emoji/twitter/confused.png?v=5" title=":confused:" class="emoji" alt=":confused:"><br>
And yes, I am using perspective correct texture mapping, affine looks too wonky. Haha</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/17</link>
        <pubDate>Mon, 01 Jun 2015 14:10:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551734-17</guid>
        <source url="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734.rss">My Basic 3D Tutorial</source>
      </item>
      <item>
        <title>My Basic 3D Tutorial</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <p>I’m intrigued. Few people venture over to the fun and frustrating area of 3D rasterization. I’m even more surprised you picked Java (though less since it’s this community). Pretty cool. I started in graphics programming from software rasterization, also. How much have you learned about hardware rendering? Also, out of curiosity, what shading model are you using with your triangle rasterizer? It looks like phong shading to me, but it’s hard to tell without more pictures. Also, are you doing perspective correct texture mapping?</p>
<p>Edit: I noticed in the other thread you mentioned you’re doing Gouraud shading, so disregard the question on shading. <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/16</link>
        <pubDate>Mon, 01 Jun 2015 06:27:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551734-16</guid>
        <source url="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734.rss">My Basic 3D Tutorial</source>
      </item>
      <item>
        <title>My Basic 3D Tutorial</title>
        <dc:creator><![CDATA[@Docent Limits]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/docent">@Docent</a> wrote:</p>
          <blockquote>
              <p>Hey look, it’s practically RuneScape!</p>
<p><img src="http://i60.tinypic.com/fk1y5x.png" alt width="" height=""></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/15</link>
        <pubDate>Sun, 31 May 2015 07:47:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551734-15</guid>
        <source url="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734.rss">My Basic 3D Tutorial</source>
      </item>
      <item>
        <title>My Basic 3D Tutorial</title>
        <dc:creator><![CDATA[@tyb97 tyb97]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tyb97">@tyb97</a> wrote:</p>
          <blockquote>
              <p>Really nice. I’ve been spoiled by Unity over my past several projects, not having to write anything but behavior scripts but I’ve always been interested in making a game using full native code and not using any external libraries to start and what not.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/14</link>
        <pubDate>Sun, 31 May 2015 01:22:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551734-14</guid>
        <source url="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734.rss">My Basic 3D Tutorial</source>
      </item>
      <item>
        <title>My Basic 3D Tutorial</title>
        <dc:creator><![CDATA[@Docent Limits]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/docent">@Docent</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="12" data-topic="551734">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/ambokile/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Ambokile:</div>
<blockquote>
<p>I don’t think I’m alone when I say that I am both surprised and pleased at your progression as a programmer over the past few years. It’s really good to see. Well done mate.</p>
</blockquote>
</aside>
<p>Thank you!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/13</link>
        <pubDate>Sat, 30 May 2015 23:52:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551734-13</guid>
        <source url="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734.rss">My Basic 3D Tutorial</source>
      </item>
      <item>
        <title>My Basic 3D Tutorial</title>
        <dc:creator><![CDATA[@Ambokile Ambokile]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ambokile">@Ambokile</a> wrote:</p>
          <blockquote>
              <p>I don’t think I’m alone when I say that I am both surprised and pleased at your progression as a programmer over the past few years. It’s really good to see. Well done mate.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/12</link>
        <pubDate>Sat, 30 May 2015 23:49:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551734-12</guid>
        <source url="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734.rss">My Basic 3D Tutorial</source>
      </item>
      <item>
        <title>My Basic 3D Tutorial</title>
        <dc:creator><![CDATA[@Docent Limits]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/docent">@Docent</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="1" data-topic="551744">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/my-swagger/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar">
</div>
<blockquote>
<p>Good job making a really basic renderer. Now for the hard part <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
</blockquote>
</aside>
<p>Funny you mention that, I just loaded a RSC landscape file into my engine <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p><img src="http://i61.tinypic.com/9km9mp.png" alt width="" height=""></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/11</link>
        <pubDate>Sat, 30 May 2015 23:30:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551734-11</guid>
        <source url="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734.rss">My Basic 3D Tutorial</source>
      </item>
      <item>
        <title>My Basic 3D Tutorial</title>
        <dc:creator><![CDATA[@eyeownyew Eyeownyew]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/eyeownyew">@eyeownyew</a> wrote:</p>
          <blockquote>
              <p>[quote=“Lin, post:6, topic:551734”][quote author=Eyeownyew link=topic=670650.msg4484372#msg4484372 date=1432950998]<br>
I actually really like this, well done</p>
<p>3D is one area I have never ventured into because I hate the math behind it. I’ve never taken a class or even had a unit on matrices, but I know a lot about vectors from physics &amp; multivar calc. Maybe I’ll attempt this soon<br>
[/quote]You’d be surprised how little you have to know to actually make a complicated 3D game <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"> There’s libraries for all of the vector and matrix math so you just need to use the functions and know how to get the matrices to the GPU and that’s pretty much all it takes. Also, I’d suggest DirectX over OpenGL for learning because 9 and above (I don’t know about 8 and below) was either written in C++ or has C++ wrappers, so everything is much easier to manage. There is <a href="http://oglplus.org/" data-bbcode="true" rel="nofollow noopener">this C++ OpenGL wrapper</a> that supposedly makes it easier, but I’ve heard linking OpenGL is a bit of a nightmare with the different versions. I don’t know for sure though.</p>
<p><span class="bbcode-b">EDIT: </span>Just realized this is the Java section. Never mind.</p>
<p>OP: This is actually really neat, although your final screenshot includes texture mapping and surface normals so you might want to consider something else lol[/quote]<br>
That’s fine I’m interested in learning other languages anyway, I think it might be time to branch out from the world of Java. Thank you for your advice</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/10</link>
        <pubDate>Sat, 30 May 2015 02:29:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551734-10</guid>
        <source url="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734.rss">My Basic 3D Tutorial</source>
      </item>
      <item>
        <title>My Basic 3D Tutorial</title>
        <dc:creator><![CDATA[@Docent Limits]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/docent">@Docent</a> wrote:</p>
          <blockquote>
              <p>[quote=“Mikeyzzz, post:8, topic:551734”][quote author=Limits link=topic=670650.msg4484377#msg4484377 date=1432952136]</p>
<p>[quote author=Lin link=topic=670650.msg4484376#msg4484376 date=1432952056]</p>
<aside class="quote">
<blockquote>
<p>I actually really like this, well done</p>
<p>3D is one area I have never ventured into because I hate the math behind it. I’ve never taken a class or even had a unit on matrices, but I know a lot about vectors from physics &amp; multivar calc. Maybe I’ll attempt this soon<br>
[/quote]You’d be surprised how little you have to know to actually make a complicated 3D game <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"> There’s libraries for all of the vector and matrix math so you just need to use the functions and know how to get the matrices to the GPU and that’s pretty much all it takes. Also, I’d suggest DirectX over OpenGL for learning because 9 and above (I don’t know about 8 and below) was either written in C++ or has C++ wrappers, so everything is much easier to manage. There is <a href="http://oglplus.org/" data-bbcode="true" rel="nofollow noopener">this C++ OpenGL wrapper</a> that supposedly makes it easier, but I’ve heard linking OpenGL is a bit of a nightmare with the different versions. I don’t know for sure though.</p>
<p>OP: This is actually really neat, although your final screenshot includes texture mapping and surface normals so you might want to consider something else lol</p>
</blockquote>
</aside>
<p>Haha did you read the text above it? “[font=sans-serif][size=15px]This is my software rendered engine that I actually built off of this same code! Anything is possible![/size][/font]”</p>
<p>But thank you, I’m shocked at the compliments, that was my first tutorial ever haha.</p>
<p>EDIT: <a class="mention" href="/u/lin">@Lin</a>, Added your suggestion, I added a picture of what the given code creates<br>
[/quote]I have never been good at programming, I can rearrange things and do really simple stuff that I’ve learned by messing around with code on an rsps. This is incredible, I feel that the more support you get, the more you would be inclined to continue doing these kind of things. Keep working at it![/quote]<br>
Yeah if this gets ‘popular’ I’ll upload a tutorial on triangle filling or something along those lines.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/9</link>
        <pubDate>Sat, 30 May 2015 02:26:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551734-9</guid>
        <source url="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734.rss">My Basic 3D Tutorial</source>
      </item>
      <item>
        <title>My Basic 3D Tutorial</title>
        <dc:creator><![CDATA[@Mikeyzzz Mikeyzzz]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mikeyzzz">@Mikeyzzz</a> wrote:</p>
          <blockquote>
              <p>[quote=“Limits, post:7, topic:551734”][quote author=Lin link=topic=670650.msg4484376#msg4484376 date=1432952056]</p>
<aside class="quote">
<blockquote>
<p>I actually really like this, well done</p>
<p>3D is one area I have never ventured into because I hate the math behind it. I’ve never taken a class or even had a unit on matrices, but I know a lot about vectors from physics &amp; multivar calc. Maybe I’ll attempt this soon<br>
[/quote]You’d be surprised how little you have to know to actually make a complicated 3D game <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"> There’s libraries for all of the vector and matrix math so you just need to use the functions and know how to get the matrices to the GPU and that’s pretty much all it takes. Also, I’d suggest DirectX over OpenGL for learning because 9 and above (I don’t know about 8 and below) was either written in C++ or has C++ wrappers, so everything is much easier to manage. There is <a href="http://oglplus.org/" data-bbcode="true" rel="nofollow noopener">this C++ OpenGL wrapper</a> that supposedly makes it easier, but I’ve heard linking OpenGL is a bit of a nightmare with the different versions. I don’t know for sure though.</p>
<p>OP: This is actually really neat, although your final screenshot includes texture mapping and surface normals so you might want to consider something else lol</p>
</blockquote>
</aside>
<p>Haha did you read the text above it? “[font=sans-serif][size=15px]This is my software rendered engine that I actually built off of this same code! Anything is possible![/size][/font]”</p>
<p>But thank you, I’m shocked at the compliments, that was my first tutorial ever haha.</p>
<p>EDIT: <a class="mention" href="/u/lin">@Lin</a>, Added your suggestion, I added a picture of what the given code creates[/quote]I have never been good at programming, I can rearrange things and do really simple stuff that I’ve learned by messing around with code on an rsps. This is incredible, I feel that the more support you get, the more you would be inclined to continue doing these kind of things. Keep working at it!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/8</link>
        <pubDate>Sat, 30 May 2015 02:24:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551734-8</guid>
        <source url="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734.rss">My Basic 3D Tutorial</source>
      </item>
      <item>
        <title>My Basic 3D Tutorial</title>
        <dc:creator><![CDATA[@Docent Limits]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/docent">@Docent</a> wrote:</p>
          <blockquote>
              <p>[quote=“Lin, post:6, topic:551734”][quote author=Eyeownyew link=topic=670650.msg4484372#msg4484372 date=1432950998]<br>
I actually really like this, well done</p>
<p>3D is one area I have never ventured into because I hate the math behind it. I’ve never taken a class or even had a unit on matrices, but I know a lot about vectors from physics &amp; multivar calc. Maybe I’ll attempt this soon<br>
[/quote]You’d be surprised how little you have to know to actually make a complicated 3D game <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"> There’s libraries for all of the vector and matrix math so you just need to use the functions and know how to get the matrices to the GPU and that’s pretty much all it takes. Also, I’d suggest DirectX over OpenGL for learning because 9 and above (I don’t know about 8 and below) was either written in C++ or has C++ wrappers, so everything is much easier to manage. There is <a href="http://oglplus.org/" data-bbcode="true" rel="nofollow noopener">this C++ OpenGL wrapper</a> that supposedly makes it easier, but I’ve heard linking OpenGL is a bit of a nightmare with the different versions. I don’t know for sure though.</p>
<p>OP: This is actually really neat, although your final screenshot includes texture mapping and surface normals so you might want to consider something else lol[/quote]</p>
<p>Haha did you read the text above it? “[font=sans-serif][size=15px]This is my software rendered engine that I actually built off of this same code! Anything is possible![/size][/font]”</p>
<p>But thank you, I’m shocked at the compliments, that was my first tutorial ever haha.</p>
<p>EDIT: <a class="mention" href="/u/lin">@Lin</a>, Added your suggestion, I added a picture of what the given code creates</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/7</link>
        <pubDate>Sat, 30 May 2015 02:15:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551734-7</guid>
        <source url="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734.rss">My Basic 3D Tutorial</source>
      </item>
      <item>
        <title>My Basic 3D Tutorial</title>
        <dc:creator><![CDATA[@Lin Lin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lin">@Lin</a> wrote:</p>
          <blockquote>
              <p>[quote=“Eyeownyew, post:2, topic:551734”]I actually really like this, well done</p>
<p>3D is one area I have never ventured into because I hate the math behind it. I’ve never taken a class or even had a unit on matrices, but I know a lot about vectors from physics &amp; multivar calc. Maybe I’ll attempt this soon[/quote]You’d be surprised how little you have to know to actually make a complicated 3D game <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"> There’s libraries for all of the vector and matrix math so you just need to use the functions and know how to get the matrices to the GPU and that’s pretty much all it takes. Also, I’d suggest DirectX over OpenGL for learning because 9 and above (I don’t know about 8 and below) was either written in C++ or has C++ wrappers, so everything is much easier to manage. There is <a href="http://oglplus.org/" data-bbcode="true" rel="nofollow noopener">this C++ OpenGL wrapper</a> that supposedly makes it easier, but I’ve heard linking OpenGL is a bit of a nightmare with the different versions. I don’t know for sure though.</p>
<p><span class="bbcode-b">EDIT: </span>Just realized this is the Java section. Never mind.</p>
<p>OP: This is actually really neat, although your final screenshot includes texture mapping and surface normals so you might want to consider something else lol</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/6</link>
        <pubDate>Sat, 30 May 2015 02:14:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551734-6</guid>
        <source url="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734.rss">My Basic 3D Tutorial</source>
      </item>
      <item>
        <title>My Basic 3D Tutorial</title>
        <dc:creator><![CDATA[@Docent Limits]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/docent">@Docent</a> wrote:</p>
          <blockquote>
              <p>[quote=“Eyeownyew, post:4, topic:551734”][quote author=Limits link=topic=670650.msg4484373#msg4484373 date=1432951185]</p>
<aside class="quote">
<blockquote>
<p>I actually really like this, well done</p>
<p>3D is one area I have never ventured into because I hate the math behind it. I’ve never taken a class or even had a unit on matrices, but I know a lot about vectors from physics &amp; multivar calc. Maybe I’ll attempt this soon</p>
</blockquote>
</aside>
<p>Thank you! That means a lot!</p>
<p>3D graphics really fascinate me, I provided plenty of code and I tried to comment as much as I could <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"><br>
[/quote]<br>
They fascinate me too, and one of my “new year’s resolutions” was to learn how to create 3D games. I’m just terrible at modelling and it seems like a lot of work to learn how to use libraries like OpenGL. So I’ve stuck to 2D gaming which is… quite easy until you do animations I’ve found. 3D animation programs are far better in every aspect[/quote]<br>
Hahaha yeah, I’m utter garbage at modelling, I’ve never used OpenGL because I’ve been interested with all of the implementations of the different rasterization techniques and the math behind it all.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/5</link>
        <pubDate>Sat, 30 May 2015 02:05:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551734-5</guid>
        <source url="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734.rss">My Basic 3D Tutorial</source>
      </item>
      <item>
        <title>My Basic 3D Tutorial</title>
        <dc:creator><![CDATA[@eyeownyew Eyeownyew]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/eyeownyew">@eyeownyew</a> wrote:</p>
          <blockquote>
              <p>[quote=“Limits, post:3, topic:551734”][quote author=Eyeownyew link=topic=670650.msg4484372#msg4484372 date=1432950998]<br>
I actually really like this, well done</p>
<p>3D is one area I have never ventured into because I hate the math behind it. I’ve never taken a class or even had a unit on matrices, but I know a lot about vectors from physics &amp; multivar calc. Maybe I’ll attempt this soon<br>
[/quote]<br>
Thank you! That means a lot!</p>
<p>3D graphics really fascinate me, I provided plenty of code and I tried to comment as much as I could :)[/quote]<br>
They fascinate me too, and one of my “new year’s resolutions” was to learn how to create 3D games. I’m just terrible at modelling and it seems like a lot of work to learn how to use libraries like OpenGL. So I’ve stuck to 2D gaming which is… quite easy until you do animations I’ve found. 3D animation programs are far better in every aspect</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/4</link>
        <pubDate>Sat, 30 May 2015 02:03:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551734-4</guid>
        <source url="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734.rss">My Basic 3D Tutorial</source>
      </item>
      <item>
        <title>My Basic 3D Tutorial</title>
        <dc:creator><![CDATA[@Docent Limits]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/docent">@Docent</a> wrote:</p>
          <blockquote>
              <p>[quote=“Eyeownyew, post:2, topic:551734”]I actually really like this, well done</p>
<p>3D is one area I have never ventured into because I hate the math behind it. I’ve never taken a class or even had a unit on matrices, but I know a lot about vectors from physics &amp; multivar calc. Maybe I’ll attempt this soon[/quote]<br>
Thank you! That means a lot!</p>
<p>3D graphics really fascinate me, I provided plenty of code and I tried to comment as much as I could <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734/3</link>
        <pubDate>Sat, 30 May 2015 01:59:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551734-3</guid>
        <source url="https://forum.moparisthebest.com/t/my-basic-3d-tutorial/551734.rss">My Basic 3D Tutorial</source>
      </item>
  </channel>
</rss>
