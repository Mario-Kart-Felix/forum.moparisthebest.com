<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Compiling Java Code to Machine Code</title>
    <link>https://forum.moparisthebest.com/t/compiling-java-code-to-machine-code/397230</link>
    <description>I&#39;m very interested in writing a Compiler, but instead of compiling the code to be used with the JVM, I want it to compile the code for let&#39;s say, an x86 machine. I&#39;ve been doing some research, and I&#39;ve stumbled upon something called the &quot;Dragon Book&quot;, but for some reason, I have not been able to find an actual copy of the book.

The first steps in this project would of course, compile a Java file for use with the JVM. The reason for this is obvious, I would be able to test my progress much quicker if I know what the outcome should be.

However, I&#39;m not entirely sure this is even possible. Does anyone have any resources that might be useful in getting me started, or a concise explanation of why it isn&#39;t possible?</description>
    
    <lastBuildDate>Tue, 31 May 2011 17:42:56 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/compiling-java-code-to-machine-code/397230.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Compiling Java Code to Machine Code</title>
        <dc:creator><![CDATA[@_s11 s1gma]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_s11">@_s11</a> wrote:</p>
          <blockquote>
              <p>[quote=“blakeman8192, post:3, topic:397230”]There are already native Java compilers.</p>
<p><a href="http://gcc.gnu.org/java/%5B/quote%5D" class="onebox" target="_blank" rel="nofollow noopener">http://gcc.gnu.org/java/[/quote]</a></p>
<p>gcj is a pile of shit, and i’m pretty certain he’d want to do this as a learning experience</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/compiling-java-code-to-machine-code/397230/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/compiling-java-code-to-machine-code/397230/4</link>
        <pubDate>Tue, 31 May 2011 17:42:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-397230-4</guid>
        <source url="https://forum.moparisthebest.com/t/compiling-java-code-to-machine-code/397230.rss">Compiling Java Code to Machine Code</source>
      </item>
      <item>
        <title>Compiling Java Code to Machine Code</title>
        <dc:creator><![CDATA[@system system]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/system">@system</a> wrote:</p>
          <blockquote>
              <p>There are already native Java compilers.</p>
<p><a href="http://gcc.gnu.org/java/" class="onebox" target="_blank">http://gcc.gnu.org/java/</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/compiling-java-code-to-machine-code/397230/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/compiling-java-code-to-machine-code/397230/3</link>
        <pubDate>Tue, 31 May 2011 17:29:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-397230-3</guid>
        <source url="https://forum.moparisthebest.com/t/compiling-java-code-to-machine-code/397230.rss">Compiling Java Code to Machine Code</source>
      </item>
      <item>
        <title>Compiling Java Code to Machine Code</title>
        <dc:creator><![CDATA[@_s11 s1gma]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_s11">@_s11</a> wrote:</p>
          <blockquote>
              <p>the dragon book highly regarded as a masterpiece but compiler design it not something you just jump into on a sunday afternoon. you need to have a good understanding of the system that you’re compiling for and in this case you’d want to have a good command of x86 assembly as well as being able to recite how the von Neumann architecture works and it’s also essential to understand pretty much everything from segments to calling conventions.</p>
<p>the really fun/hard/absolutely mind blowing bit is the lexical analyzer or lexer for short, you’re going to have to understand formal grammar and abstract syntax trees and a myriad of things that i can’t be bothered to mention as you’ll probably end up reading about them anyway. now would also be a great time to acknowledge things like Flex and Bison and related/similar tools (assuming C, although that assumption is probably incorrect). also, read the dragon book repeatedly until you understand it word for word.</p>
<p>have fun.</p>
<p>edit: since i just noticed the Java bit, don’t try to implement the whole language, just implement the basics and build on top.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/compiling-java-code-to-machine-code/397230/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/compiling-java-code-to-machine-code/397230/2</link>
        <pubDate>Tue, 31 May 2011 13:20:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-397230-2</guid>
        <source url="https://forum.moparisthebest.com/t/compiling-java-code-to-machine-code/397230.rss">Compiling Java Code to Machine Code</source>
      </item>
      <item>
        <title>Compiling Java Code to Machine Code</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>I’m very interested in writing a Compiler, but instead of compiling the code to be used with the JVM, I want it to compile the code for let’s say, an x86 machine. I’ve been doing some research, and I’ve stumbled upon something called the “Dragon Book”, but for some reason, I have not been able to find an actual copy of the book.</p>
<p>The first steps in this project would of course, compile a Java file for use with the JVM. The reason for this is obvious, I would be able to test my progress much quicker if I know what the outcome should be.</p>
<p>However, I’m not entirely sure this is even possible. Does anyone have any resources that might be useful in getting me started, or a concise explanation of why it isn’t possible?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/compiling-java-code-to-machine-code/397230/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/compiling-java-code-to-machine-code/397230/1</link>
        <pubDate>Tue, 31 May 2011 11:55:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-397230-1</guid>
        <source url="https://forum.moparisthebest.com/t/compiling-java-code-to-machine-code/397230.rss">Compiling Java Code to Machine Code</source>
      </item>
  </channel>
</rss>
