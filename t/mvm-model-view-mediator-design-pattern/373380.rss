<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>MVM - Model View Mediator - Design Pattern</title>
    <link>https://forum.moparisthebest.com/t/mvm-model-view-mediator-design-pattern/373380</link>
    <description>I recently discovered a new design pattern that I call MVM (short for Model View Mediator). It&#39;s a combination of MVC (Model View Controller) and Mediator - pretty much what the name says.

So, what&#39;s the difference between MVC and MVM? Here below I show you some of the core principles. It decouples the Model and View, giving all control to the Mediator (otherwise known as Controller in MVC). MVM may act as Adapter between two distinct Model and View API:s. So if we don&#39;t have the code for the Model and View, we don&#39;t have to create a new Adapter implementation for the Model so that we can use the Model in the View or alter the View to support the Model.

- - - - -		This represents an indirect association, via an Observer or similar.
---------		This represents a direct association.

MVC (Model View Controller)
[table]
[tr]
[td]Model[/td]
[td]- - - - -[/td]
[td]View[/td]
[/tr]
[tr]
[td]View[/td]
[td]---------[/td]
[td]Model[/td]
[/tr]
[tr]
[td]View[/td]
[td]- - - - -[/td]
[td]Controller[/td]
[/tr]
[tr]
[td]Controller[/td]
[td]---------[/td]
[td]Model[/td]
[/tr]
[tr]
[td]Controller[/td]
[td]---------[/td]
[td]View[/td]
[/tr]
[/table]

MVM (Model View Mediator)
[table]
[tr]
[td]Model[/td]
[td]- - - - -[/td]
[td]Mediator[/td]
[/tr]
[tr]
[td]View[/td]
[td]- - - - -[/td]
[td]Mediator[/td]
[/tr]
[tr]
[td]Mediator[/td]
[td]---------[/td]
[td]Model[/td]
[/tr]
[tr]
[td]Mediator[/td]
[td]---------[/td]
[td]View[/td]
[/tr]
[/table]

I havn&#39;t really tried this more than a few times with smaller test projects. So I don&#39;t know how well it works for larger ones. But atleast I think it has potential, and therefore would like to hear what you have to say about it?

Perhaps an example could be useful. Although it won&#39;t compile...
[code=java5]public interface ModelChangeListener {
	void onModelChange(ModelChangeEvent e);
}
public final class ModelChangeEvent {
	...
}
public final class Model {
	private final List&lt;ModelChangeListener&gt; listeners = ...;
	private String text;
	public Model() {}
	public void addModelChangeListener(ModelChangeListener listener) {...}
	public void removeModelChangeListener(ModelChangeListener listener) {...}
	public void setText(String text) {
		this.text = text;
		doNotifyListenersOfChange();
	}
	public void doNotifyListenersOfChange() {
		ModelChangeEvent e = ...;
		for(ModelChangeListener listener : listeners) {
			listener.onModelChange(e);
		}
	}
}
public final class Mediator implements ActionListener, ModelChangeListener {
	private final Model model;
	private final JButton jButton;
	private final JTextField jTextField;
	public Mediator(Model model, JButton jButton, JTextField jTextField) {
		this.model = model;
		this.model.addModelChangeListener(this);
		this.jButton = jButton;
		this.jButton.addActionListener(this);
		this.jTextField = jTextField;
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		model.setText(jTextField.getText());
	}
	@Override
	public void onModelChange(ModelChangeEvent e) {
		System.out.println(&quot;Model changed!&quot;);
	}
}
public final class Main {
	public static void main(String[] args) {
		Model model = new Model();
		JButton jButton = new JButton(&quot;Press&quot;);
		JTextField jTextField = new JTextField();
		Mediator mediator = new Mediator(model, jButton, jTextField);
		JFrame jFrame = new JFrame(&quot;Frame&quot;);
		...
	}
}[/code]</description>
    
    <lastBuildDate>Thu, 16 Dec 2010 20:52:36 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/mvm-model-view-mediator-design-pattern/373380.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>MVM - Model View Mediator - Design Pattern</title>
        <dc:creator><![CDATA[@Unhandled Unhandled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unhandled">@Unhandled</a> wrote:</p>
          <blockquote>
              <p>i like big hairy penises, just like all microsoft fanboys <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/mvm-model-view-mediator-design-pattern/373380/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/mvm-model-view-mediator-design-pattern/373380/9</link>
        <pubDate>Thu, 16 Dec 2010 20:52:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-373380-9</guid>
        <source url="https://forum.moparisthebest.com/t/mvm-model-view-mediator-design-pattern/373380.rss">MVM - Model View Mediator - Design Pattern</source>
      </item>
      <item>
        <title>MVM - Model View Mediator - Design Pattern</title>
        <dc:creator><![CDATA[@Speljohan Speljohan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/speljohan">@Speljohan</a> wrote:</p>
          <blockquote>
              <p>[quote=“abraham2119, post:7, topic:373380”]inb4 unhandled bitches about java not having delegates[/quote]He wouldnt dare post here <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/mvm-model-view-mediator-design-pattern/373380/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/mvm-model-view-mediator-design-pattern/373380/8</link>
        <pubDate>Thu, 16 Dec 2010 13:10:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-373380-8</guid>
        <source url="https://forum.moparisthebest.com/t/mvm-model-view-mediator-design-pattern/373380.rss">MVM - Model View Mediator - Design Pattern</source>
      </item>
      <item>
        <title>MVM - Model View Mediator - Design Pattern</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>inb4 unhandled bitches about java not having delegates</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/mvm-model-view-mediator-design-pattern/373380/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/mvm-model-view-mediator-design-pattern/373380/7</link>
        <pubDate>Thu, 16 Dec 2010 01:48:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-373380-7</guid>
        <source url="https://forum.moparisthebest.com/t/mvm-model-view-mediator-design-pattern/373380.rss">MVM - Model View Mediator - Design Pattern</source>
      </item>
      <item>
        <title>MVM - Model View Mediator - Design Pattern</title>
        <dc:creator><![CDATA[@Protosstribe object]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/protosstribe">@Protosstribe</a> wrote:</p>
          <blockquote>
              <p>Damn, I just found out this pattern already exists - with another name. It’s called “Model View Adapter” or “Mediating Controller MVC”. You can read about it here: <a href="http://en.wikipedia.org/wiki/Model-view-adapter" rel="nofollow noopener">http://en.wikipedia.org/wiki/Model-view-adapter</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/mvm-model-view-mediator-design-pattern/373380/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/mvm-model-view-mediator-design-pattern/373380/6</link>
        <pubDate>Wed, 15 Dec 2010 15:21:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-373380-6</guid>
        <source url="https://forum.moparisthebest.com/t/mvm-model-view-mediator-design-pattern/373380.rss">MVM - Model View Mediator - Design Pattern</source>
      </item>
      <item>
        <title>MVM - Model View Mediator - Design Pattern</title>
        <dc:creator><![CDATA[@Mopman Mopman]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mopman">@Mopman</a> wrote:</p>
          <blockquote>
              <p>I’m not sure why I understand why that isn’t dependant on your MVC implementation rather than a problem with the pattern itself.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/mvm-model-view-mediator-design-pattern/373380/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/mvm-model-view-mediator-design-pattern/373380/5</link>
        <pubDate>Wed, 15 Dec 2010 12:12:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-373380-5</guid>
        <source url="https://forum.moparisthebest.com/t/mvm-model-view-mediator-design-pattern/373380.rss">MVM - Model View Mediator - Design Pattern</source>
      </item>
      <item>
        <title>MVM - Model View Mediator - Design Pattern</title>
        <dc:creator><![CDATA[@Protosstribe object]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/protosstribe">@Protosstribe</a> wrote:</p>
          <blockquote>
              <p>Lothy: The model controls the view through the mediator. When something changes in the model, the model notifies the mediator of this change. If the view has to be updated, the mediator updates the view accordingly. The mediator is created to support both the model and the view. And thus, the view does not have to know anything about the model that is used.</p>
<p>If we want to switch model to something else, we need to update both the controller and the view in the MVC approach. Whereas we only have to update the mediator in the MVM approach.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/mvm-model-view-mediator-design-pattern/373380/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/mvm-model-view-mediator-design-pattern/373380/4</link>
        <pubDate>Wed, 15 Dec 2010 12:02:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-373380-4</guid>
        <source url="https://forum.moparisthebest.com/t/mvm-model-view-mediator-design-pattern/373380.rss">MVM - Model View Mediator - Design Pattern</source>
      </item>
      <item>
        <title>MVM - Model View Mediator - Design Pattern</title>
        <dc:creator><![CDATA[@lothy Lothy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lothy">@lothy</a> wrote:</p>
          <blockquote>
              <p>Lol. I hate to break it to you, but this is pretty much trash. Hardly something you’d label a design pattern.</p>
<p>Answer me this: If both the model and the view in your approach are observers, how can the model control the view? They’re completely decoupled, and neither has the ability to access the mediator it is associated with.<br>
This means that the model aspect of your design is already obsolete, which means it may as well be just the mediator and the view… And then you’d be best off renaming mediator to controller, given the pub/sub relationship.</p>
<p>Of course, then you run into the problems with separation of logic and presentation, and you’re back to the problem that induced the creation of the MVC architecture in the first place. :rolleyes:</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/mvm-model-view-mediator-design-pattern/373380/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/mvm-model-view-mediator-design-pattern/373380/3</link>
        <pubDate>Wed, 15 Dec 2010 11:40:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-373380-3</guid>
        <source url="https://forum.moparisthebest.com/t/mvm-model-view-mediator-design-pattern/373380.rss">MVM - Model View Mediator - Design Pattern</source>
      </item>
      <item>
        <title>MVM - Model View Mediator - Design Pattern</title>
        <dc:creator><![CDATA[@Speljohan Speljohan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/speljohan">@Speljohan</a> wrote:</p>
          <blockquote>
              <p>wat is this i dont even</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/mvm-model-view-mediator-design-pattern/373380/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/mvm-model-view-mediator-design-pattern/373380/2</link>
        <pubDate>Wed, 15 Dec 2010 11:26:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-373380-2</guid>
        <source url="https://forum.moparisthebest.com/t/mvm-model-view-mediator-design-pattern/373380.rss">MVM - Model View Mediator - Design Pattern</source>
      </item>
      <item>
        <title>MVM - Model View Mediator - Design Pattern</title>
        <dc:creator><![CDATA[@Protosstribe object]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/protosstribe">@Protosstribe</a> wrote:</p>
          <blockquote>
              <p>I recently discovered a new design pattern that I call MVM (short for Model View Mediator). It’s a combination of MVC (Model View Controller) and Mediator - pretty much what the name says.</p>
<p>So, what’s the difference between MVC and MVM? Here below I show you some of the core principles. It decouples the Model and View, giving all control to the Mediator (otherwise known as Controller in MVC). MVM may act as Adapter between two distinct Model and View API:s. So if we don’t have the code for the Model and View, we don’t have to create a new Adapter implementation for the Model so that we can use the Model in the View or alter the View to support the Model.</p>
<ul>
<li>
<ul>
<li>
<ul>
<li>
<ul>
<li>
<ul>
<li>
<pre><code>  This represents an indirect association, via an Observer or similar.
</code></pre>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>---------		This represents a direct association.</p>
<p>MVC (Model View Controller)<br>
[table]<br>
[tr]<br>
[td]Model[/td]<br>
[td]- - - - -[/td]<br>
[td]View[/td]<br>
[/tr]<br>
[tr]<br>
[td]View[/td]<br>
[td]---------[/td]<br>
[td]Model[/td]<br>
[/tr]<br>
[tr]<br>
[td]View[/td]<br>
[td]- - - - -[/td]<br>
[td]Controller[/td]<br>
[/tr]<br>
[tr]<br>
[td]Controller[/td]<br>
[td]---------[/td]<br>
[td]Model[/td]<br>
[/tr]<br>
[tr]<br>
[td]Controller[/td]<br>
[td]---------[/td]<br>
[td]View[/td]<br>
[/tr]<br>
[/table]</p>
<p>MVM (Model View Mediator)<br>
[table]<br>
[tr]<br>
[td]Model[/td]<br>
[td]- - - - -[/td]<br>
[td]Mediator[/td]<br>
[/tr]<br>
[tr]<br>
[td]View[/td]<br>
[td]- - - - -[/td]<br>
[td]Mediator[/td]<br>
[/tr]<br>
[tr]<br>
[td]Mediator[/td]<br>
[td]---------[/td]<br>
[td]Model[/td]<br>
[/tr]<br>
[tr]<br>
[td]Mediator[/td]<br>
[td]---------[/td]<br>
[td]View[/td]<br>
[/tr]<br>
[/table]</p>
<p>I havn’t really tried this more than a few times with smaller test projects. So I don’t know how well it works for larger ones. But atleast I think it has potential, and therefore would like to hear what you have to say about it?</p>
<p>Perhaps an example could be useful. Although it won’t compile…</p>
<p><code>public interface ModelChangeListener {
	void onModelChange(ModelChangeEvent e);
}
public final class ModelChangeEvent {
	...
}
public final class Model {
	private final List&lt;ModelChangeListener&gt; listeners = ...;
	private String text;
	public Model() {}
	public void addModelChangeListener(ModelChangeListener listener) {...}
	public void removeModelChangeListener(ModelChangeListener listener) {...}
	public void setText(String text) {
		this.text = text;
		doNotifyListenersOfChange();
	}
	public void doNotifyListenersOfChange() {
		ModelChangeEvent e = ...;
		for(ModelChangeListener listener : listeners) {
			listener.onModelChange(e);
		}
	}
}
public final class Mediator implements ActionListener, ModelChangeListener {
	private final Model model;
	private final JButton jButton;
	private final JTextField jTextField;
	public Mediator(Model model, JButton jButton, JTextField jTextField) {
		this.model = model;
		this.model.addModelChangeListener(this);
		this.jButton = jButton;
		this.jButton.addActionListener(this);
		this.jTextField = jTextField;
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		model.setText(jTextField.getText());
	}
	@Override
	public void onModelChange(ModelChangeEvent e) {
		System.out.println("Model changed!");
	}
}
public final class Main {
	public static void main(String[] args) {
		Model model = new Model();
		JButton jButton = new JButton("Press");
		JTextField jTextField = new JTextField();
		Mediator mediator = new Mediator(model, jButton, jTextField);
		JFrame jFrame = new JFrame("Frame");
		...
	}
}</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/mvm-model-view-mediator-design-pattern/373380/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/mvm-model-view-mediator-design-pattern/373380/1</link>
        <pubDate>Wed, 15 Dec 2010 10:52:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-373380-1</guid>
        <source url="https://forum.moparisthebest.com/t/mvm-model-view-mediator-design-pattern/373380.rss">MVM - Model View Mediator - Design Pattern</source>
      </item>
  </channel>
</rss>
