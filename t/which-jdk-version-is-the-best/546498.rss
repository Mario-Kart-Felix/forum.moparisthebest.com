<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Which Jdk version is the best</title>
    <link>https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498</link>
    <description>What is the best version of jdk for rsps ?</description>
    
    <lastBuildDate>Sat, 06 Sep 2014 00:26:41 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Which Jdk version is the best</title>
        <dc:creator><![CDATA[@tyb97 tyb97]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tyb97">@tyb97</a> wrote:</p>
          <blockquote>
              <p>[quote=“HcoJustin, post:16, topic:546498”][quote author=sk8rdude461 link=topic=665398.msg4448154#msg4448154 date=1409954010]<br>
Does Java 1.8 actually convert things seen only in 1.8 to a working format in a earlier release?<br>
Like Java 1.8 has Lambda statements, lets say I used it. Now I’m compiling with the target as 1.7. Does it convert that statement or what happens?<br>
[/quote]<br>
AFAIK It does not. I’ve always noticed in my IDE that if I set the project level to lets say 1.6, and I try to use something like the new multi-catch, I get an error saying this feature is not supported at this project level.[/quote]<br>
You’re probably right, however in this RSPS specific situation, the client shouldn’t even be bothered to get compiled with any new features, outside of small edits it usually doesn’t get touched too much in a development.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/17</link>
        <pubDate>Sat, 06 Sep 2014 00:26:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546498-17</guid>
        <source url="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498.rss">Which Jdk version is the best</source>
      </item>
      <item>
        <title>Which Jdk version is the best</title>
        <dc:creator><![CDATA[@HcoJustin HcoJustin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hcojustin">@HcoJustin</a> wrote:</p>
          <blockquote>
              <p>[quote=“sk8rdude461, post:14, topic:546498”]Does Java 1.8 actually convert things seen only in 1.8 to a working format in a earlier release?<br>
Like Java 1.8 has Lambda statements, lets say I used it. Now I’m compiling with the target as 1.7. Does it convert that statement or what happens?[/quote]<br>
AFAIK It does not. I’ve always noticed in my IDE that if I set the project level to lets say 1.6, and I try to use something like the new multi-catch, I get an error saying this feature is not supported at this project level.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/16</link>
        <pubDate>Sat, 06 Sep 2014 00:24:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546498-16</guid>
        <source url="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498.rss">Which Jdk version is the best</source>
      </item>
      <item>
        <title>Which Jdk version is the best</title>
        <dc:creator><![CDATA[@tyb97 tyb97]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tyb97">@tyb97</a> wrote:</p>
          <blockquote>
              <p>[quote=“sk8rdude461, post:14, topic:546498”][quote author=tyb97 link=topic=665398.msg4448150#msg4448150 date=1409953203]<br>
Because using the latest “recommended” version is inefficient as you are not keeping up with the times and cheating yourself (and other developers) out of all of the newest performance and syntax improvements. As a developer you should <span class="bbcode-b">always</span> use the latest stable update to make sure your application is efficient and as technologically advanced as possible, and only change target arguments for the end user. Overall it’s just idiotic and you’re being a terrible influence by trying to convince people to not use the latest version of any programming language or API.<br>
[/quote]<br>
Does Java 1.8 actually convert things seen only in 1.8 to a working format in a earlier release?<br>
Like Java 1.8 has Lambda statements, lets say I used it. Now I’m compiling with the target as 1.7. Does it convert that statement or what happens?[/quote]<br>
Don’t quote me on this, but I’m very sure the answer is yes, seeing as everything gets compiled down to the same thing logic wise.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/15</link>
        <pubDate>Fri, 05 Sep 2014 23:58:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546498-15</guid>
        <source url="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498.rss">Which Jdk version is the best</source>
      </item>
      <item>
        <title>Which Jdk version is the best</title>
        <dc:creator><![CDATA[@sk8rdude461 sk8rdude461]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sk8rdude461">@sk8rdude461</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="13" data-topic="546498">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/tyb97/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> tyb97:</div>
<blockquote>
<p>Because using the latest “recommended” version is inefficient as you are not keeping up with the times and cheating yourself (and other developers) out of all of the newest performance and syntax improvements. As a developer you should <span class="bbcode-b">always</span> use the latest stable update to make sure your application is efficient and as technologically advanced as possible, and only change target arguments for the end user. Overall it’s just idiotic and you’re being a terrible influence by trying to convince people to not use the latest version of any programming language or API.</p>
</blockquote>
</aside>
<p>I was saying he should use the latest recommended version, that’s recommended by Java.<br>
I also wasn’t saying I was right. I wanted to get the facts on why you should (which no one really provided, besides you-ish) use “the latest and greatest”. Also there are very few times that the latest release is not always the best. Sometimes it could cause an extra bug that wasn’t there before, and you’ll have to report it then wait for the next release. However, with Java that’s actually rather rare.</p>
<p>Does Java 1.8 actually convert things seen only in 1.8 to a working format in a earlier release?<br>
Like Java 1.8 has Lambda statements, lets say I used it. Now I’m compiling with the target as 1.7. Does it convert that statement or what happens?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/14</link>
        <pubDate>Fri, 05 Sep 2014 21:53:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546498-14</guid>
        <source url="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498.rss">Which Jdk version is the best</source>
      </item>
      <item>
        <title>Which Jdk version is the best</title>
        <dc:creator><![CDATA[@tyb97 tyb97]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tyb97">@tyb97</a> wrote:</p>
          <blockquote>
              <p>Because using the latest “recommended” version is inefficient as you are not keeping up with the times and cheating yourself (and other developers) out of all of the newest performance and syntax improvements. As a developer you should <span class="bbcode-b">always</span> use the latest stable update to make sure your application is efficient and as technologically advanced as possible, and only change target arguments for the end user. Overall it’s just idiotic and you’re being a terrible influence by trying to convince people to not use the latest version of any programming language or API.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/13</link>
        <pubDate>Fri, 05 Sep 2014 21:40:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546498-13</guid>
        <source url="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498.rss">Which Jdk version is the best</source>
      </item>
      <item>
        <title>Which Jdk version is the best</title>
        <dc:creator><![CDATA[@sk8rdude461 sk8rdude461]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sk8rdude461">@sk8rdude461</a> wrote:</p>
          <blockquote>
              <p>[quote=“HcoJustin, post:11, topic:546498”]<a href="http://www.java.com/en/download/faq/java8.xml" rel="nofollow noopener">http://www.java.com/en/download/faq/java8.xml</a></p>
<p>[quote author=sk8rdude461 link=topic=665398.msg4448125#msg4448125 date=1409948226]</p>
<aside class="quote">
<blockquote>
<p>Java versions are backwards compatible, you can target other versions using 1.8, incompatibility is only caused when someone doesn’t target the correct version. JRE and JDK 1.8 are FULLY released, please use the latest recommended version, always.</p>
<p>Article of it being fully released: <a href="https://blogs.oracle.com/java-platform-group/entry/java_se_8_is_available" rel="nofollow noopener">https://blogs.oracle.com/java-platform-group/entry/java_se_8_is_available</a></p>
<aside class="quote">
<blockquote>
<p>Developers and system administrators can now download the first official release of Java SE 8. This is the first major release since Java 7 (July 2011)</p>
</blockquote>
</aside>
</blockquote>
</aside>
<p>So you’re saying if I compile a client on JDK 1.8 (with no command line arguments whatsoever)[/quote]<br>
Not possible. Passing no arguments to javac will result in:</p>
<p>[code]C:\Users\Justin&gt;javac<br>
Usage: javac  <br>
where possible options include:<br>
-g                         Generate all debugging info<br>
-g:none                    Generate no debugging info<br>
-g:{lines,vars,source}     Generate only some debugging info<br>
-nowarn                    Generate no warnings<br>
-verbose                   Output messages about what the compiler is doing<br>
-deprecation               Output source locations where deprecated APIs are used<br>
-classpath           Specify where to find user class files and annotation processors<br>
-cp                  Specify where to find user class files and annotation processors<br>
-sourcepath          Specify where to find input source files<br>
-bootclasspath       Override location of bootstrap class files<br>
-extdirs             Override location of installed extensions<br>
-endorseddirs        Override location of endorsed standards path<br>
-proc:{none,only}          Control whether annotation processing and/or compilation is done.<br>
-processor [,,…] Names of the annotation processorsto run; bypasses default discovery process<br>
-processorpath       Specify where to find annotation processors<br>
-parameters                Generate metadata for reflection on method parameters<br>
-d              Specify where to place generated class files<br>
-s              Specify where to place generated source files<br>
-h              Specify where to place generated native header files<br>
-implicit:{none,class}     Specify whether or not to generate class files forimplicitly referenced files<br>
-encoding        Specify character encoding used by source files<br>
-source           Provide source compatibility with specified release</p>
<p>-target           Generate class files for specific VM version<br>
-profile          Check that API used is available in the specified profile<br>
-version                   Version information<br>
-help                      Print a synopsis of standard options<br>
-Akey[=value]              Options to pass to annotation processors<br>
-X                         Print a synopsis of nonstandard options<br>
-J                   Pass  directly to the runtime system<br>
-Werror                    Terminate compilation if warnings occur<br>
@                Read options and filenames from file</p>
<p>C:\Users\Justin&gt;[/code]</p>
<p>You are already passing it command line arguments, more than likely you’re telling it where to send the output, and most of the time you are including stuff in your classpath. Why not be smart about it and target your output at something most people can run?[/quote]<br>
I meant to say with no ‘extra’ arguments… (When I say extra, I mean no more than needed to do a basic &gt;successful&lt; compile)<br>
As in:</p>
<pre><code class="lang-auto">javac the_files_to_compile_here</code></pre>
<p>And/or with -cp for classpaths…<br>
Like for instance, the standard PI compile script…</p>
<p><code>@echo off
TITLE Compiling...
javac -classpath deps/gson-2.2.4.jar;deps/GTLVote.jar;deps/ItemDefEditor.jar;deps/jython.jar;deps/lib/gson-2.2.4.jar;deps/log4j-1.2.15.jar;deps/mina.jar;deps/mysql.jar;deps/NPCSpawnEditor.jar;deps/poi.jar;deps/slf4j-nop.jar;deps/slf4j.jar;deps/xstream.jar; -d bin src\server\*.java src\server\clip\*.java src\server\clip\region\*.java src\server\console\*.java src\server\event\*.java src\server\model\items\*.java src\server\model\minigames\*.java src\server\model\npcs\*.java src\server\model\objects\*.java src\server\model\players\*.java src\server\model\players\Content\*.java src\server\model\players\Content\achievement\*.java src\server\model\players\Content\cluescrolls\*.java src\server\model\players\Content\DwarfCannon\*.java src\server\model\players\Content\randoms\*.java src\server\model\players\packets\*.java src\server\model\players\packets\commands\*.java src\server\model\players\packets\commands\administrator\*.java src\server\model\players\packets\commands\moderator\*.java src\server\model\players\packets\commands\owner\*.java src\server\model\players\packets\commands\regular\*.java src\server\model\players\saving\*.java src\server\model\players\saving\Save\*.java src\server\model\players\skills\*.java src\server\model\players\skills\Dungeoneering\*.java src\server\model\players\skills\Smithing\*.java src\server\model\shops\*.java src\server\net\*.java src\server\net\SQL\*.java src\server\task\*.java src\server\util\*.java src\server\util\log\*.java src\server\world\*.java src\server\world\map\*.java 
TITLE Finished compiling!
pause</code></p>
<aside class="quote" data-post="11" data-topic="546498">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/hcojustin/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> HcoJustin:</div>
<blockquote>
<p>Why not be smart about it and target your output at something most people can run?</p>
</blockquote>
</aside>
<p>Why not just use the latest recommended version instead? I know it’s not much work to add an extra argument and what not, but still.</p>
<p>Also, don’t forget Java 8 removed allowing self signed scripts to run (Yes, you can add an exception to it, but they’ve only made it more annoying) on websites.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/12</link>
        <pubDate>Fri, 05 Sep 2014 21:05:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546498-12</guid>
        <source url="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498.rss">Which Jdk version is the best</source>
      </item>
      <item>
        <title>Which Jdk version is the best</title>
        <dc:creator><![CDATA[@HcoJustin HcoJustin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hcojustin">@HcoJustin</a> wrote:</p>
          <blockquote>
              <p><a href="http://www.java.com/en/download/faq/java8.xml" class="onebox" target="_blank" rel="nofollow noopener">http://www.java.com/en/download/faq/java8.xml</a></p>
<p>[quote=“sk8rdude461, post:10, topic:546498”][quote author=AtomicInt_ link=topic=665398.msg4448121#msg4448121 date=1409947866]<br>
Java versions are backwards compatible, you can target other versions using 1.8, incompatibility is only caused when someone doesn’t target the correct version. JRE and JDK 1.8 are FULLY released, please use the latest recommended version, always.</p>
<p>Article of it being fully released: <a href="https://blogs.oracle.com/java-platform-group/entry/java_se_8_is_available" rel="nofollow noopener">https://blogs.oracle.com/java-platform-group/entry/java_se_8_is_available</a></p>
<aside class="quote">
<blockquote>
<p>Developers and system administrators can now download the first official release of Java SE 8. This is the first major release since Java 7 (July 2011)</p>
</blockquote>
</aside>
<p>[/quote]<br>
So you’re saying if I compile a client on JDK 1.8 (with no command line arguments whatsoever)[/quote]<br>
Not possible. Passing no arguments to javac will result in:</p>
<p>[code]C:\Users\Justin&gt;javac<br>
Usage: javac  <br>
where possible options include:<br>
-g                         Generate all debugging info<br>
-g:none                    Generate no debugging info<br>
-g:{lines,vars,source}     Generate only some debugging info<br>
-nowarn                    Generate no warnings<br>
-verbose                   Output messages about what the compiler is doing<br>
-deprecation               Output source locations where deprecated APIs are used<br>
-classpath           Specify where to find user class files and annotation processors<br>
-cp                  Specify where to find user class files and annotation processors<br>
-sourcepath          Specify where to find input source files<br>
-bootclasspath       Override location of bootstrap class files<br>
-extdirs             Override location of installed extensions<br>
-endorseddirs        Override location of endorsed standards path<br>
-proc:{none,only}          Control whether annotation processing and/or compilation is done.<br>
-processor [,,…] Names of the annotation processorsto run; bypasses default discovery process<br>
-processorpath       Specify where to find annotation processors<br>
-parameters                Generate metadata for reflection on method parameters<br>
-d              Specify where to place generated class files<br>
-s              Specify where to place generated source files<br>
-h              Specify where to place generated native header files<br>
-implicit:{none,class}     Specify whether or not to generate class files forimplicitly referenced files<br>
-encoding        Specify character encoding used by source files<br>
-source           Provide source compatibility with specified release</p>
<p>-target           Generate class files for specific VM version<br>
-profile          Check that API used is available in the specified profile<br>
-version                   Version information<br>
-help                      Print a synopsis of standard options<br>
-Akey[=value]              Options to pass to annotation processors<br>
-X                         Print a synopsis of nonstandard options<br>
-J                   Pass  directly to the runtime system<br>
-Werror                    Terminate compilation if warnings occur<br>
@                Read options and filenames from file</p>
<p>C:\Users\Justin&gt;[/code]</p>
<p>You are already passing it command line arguments, more than likely you’re telling it where to send the output, and most of the time you are including stuff in your classpath. Why not be smart about it and target your output at something most people can run?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/11</link>
        <pubDate>Fri, 05 Sep 2014 20:56:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546498-11</guid>
        <source url="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498.rss">Which Jdk version is the best</source>
      </item>
      <item>
        <title>Which Jdk version is the best</title>
        <dc:creator><![CDATA[@sk8rdude461 sk8rdude461]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sk8rdude461">@sk8rdude461</a> wrote:</p>
          <blockquote>
              <p>[quote=“AtomicInt_, post:9, topic:546498”]Java versions are backwards compatible, you can target other versions using 1.8, incompatibility is only caused when someone doesn’t target the correct version. JRE and JDK 1.8 are FULLY released, please use the latest recommended version, always.</p>
<p>Article of it being fully released: <a href="https://blogs.oracle.com/java-platform-group/entry/java_se_8_is_available" rel="nofollow noopener">https://blogs.oracle.com/java-platform-group/entry/java_se_8_is_available</a></p>
<aside class="quote">
<blockquote>
<p>Developers and system administrators can now download the first official release of Java SE 8. This is the first major release since Java 7 (July 2011)[/quote]</p>
</blockquote>
</aside>
<p>So you’re saying if I compile a client on JDK 1.8 (with no command line arguments whatsoever) and then hand it out to 100 users, all running <span class="bbcode-b">only</span> 1.7, not one of them will get a single error? None of them will get an unsupported major minor error? Because that’s what I was talking about.</p>
<p>And yes, I know Java 8 is “Fully released” what I was attempting to say is, that it’s not been released for every end user to upgrade to Java 8…<br>
I have Java 7 on a computer, nothing more, and I have yet to see the annoying notification saying there’s a Java update available to force me to Java 8…<br>
Hence my point. He should stick with the current version that you see on <a href="http://java.com" rel="nofollow noopener">http://java.com</a> when you click the download button.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/10</link>
        <pubDate>Fri, 05 Sep 2014 20:17:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546498-10</guid>
        <source url="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498.rss">Which Jdk version is the best</source>
      </item>
      <item>
        <title>Which Jdk version is the best</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <p>[quote=“sk8rdude461, post:7, topic:546498”][quote author=HcoJustin link=topic=665398.msg4448116#msg4448116 date=1409945707]</p>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<p>I would always recommend the latest version, which at the moment is 1.8.0u20. The compiler is a beautiful thing in that it can compile something while remaining backwards compatible (assuming you don’t use any features newer than what you are targeting).</p>
<p>Your IDE will have a setting to compile at an older target, and if you are still one of those guys doing everything from the command line, there are -source and -target flags you can use to specify.</p>
</blockquote>
</aside>
<p>Yes and no… Java 8 (JDK 1.8. whatever) is not fully released. It is in a pre-release stage right now so developers can learn the code and iron out any last minute bugs with the new version. 9/10 of your users will still have JRE 7. If you compile your client on JDK 1.8 and then distribute it to users that only have JRE 7 (1.7) they won’t be able to play. Why? Because it’s not forward compatible. Older code can’t run newer (in a sense).<br>
You can, however, develop your server on JDK 1.8 and the client on 1.7. Since the server isn’t distributed to anyone, you don’t need to worry about compatibility. But the client you want to make sure that all your users can use it.</p>
</blockquote>
</aside>
<p><a href="http://docs.oracle.com/javase/7/docs/technotes/tools/windows/javac.html" class="onebox" target="_blank" rel="nofollow noopener">http://docs.oracle.com/javase/7/docs/technotes/tools/windows/javac.html</a></p>
<p>Look specifically at the Cross-Compilation section. You absolutely can compile something with JDK8 and target it at 1.6, or even 1.5. So once again, always use the latest release.</p>
<p>[/quote]<br>
Yeah, but you cannot <span class="bbcode-b">RUN</span> something on JRE 7 that’s been compiled on JDK 1.8, which was my point. The end users (who are still on JRE 7) will not be able to use the client if compiled on 1.8.<br>
Note I mean it’s targeting 1.8…</p>
<p>[quote]<br>
Where do you see that it is still a pre-release? Java 8 is fully released, and at a stable update 20. The current pre-release channel is on update 40.[/quote]<br>
Right here: <a href="http://java.com/en/download/chrome.jsp?locale=en" rel="nofollow noopener">http://java.com/en/download/chrome.jsp?locale=en</a><br>
If you notice, the current recommended version is JRE 1.7.0_67 and NOT 1.8[/quote]</p>
<p>Java versions are backwards compatible, you can target other versions using 1.8, incompatibility is only caused when someone doesn’t target the correct version. JRE and JDK 1.8 are FULLY released, please use the latest recommended version, always.</p>
<p>Article of it being fully released: <a href="https://blogs.oracle.com/java-platform-group/entry/java_se_8_is_available" rel="nofollow noopener">https://blogs.oracle.com/java-platform-group/entry/java_se_8_is_available</a></p>
<blockquote>Developers and system administrators can now download the first official release of Java SE 8. This is the first major release since Java 7 (July 2011)</blockquote>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/9</link>
        <pubDate>Fri, 05 Sep 2014 20:11:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546498-9</guid>
        <source url="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498.rss">Which Jdk version is the best</source>
      </item>
      <item>
        <title>Which Jdk version is the best</title>
        <dc:creator><![CDATA[@tyb97 tyb97]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tyb97">@tyb97</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="546498">
<div class="title">
<div class="quote-controls"></div>
 #dumped:</div>
<blockquote>
<p>jdk1.7.0.25</p>
</blockquote>
</aside>
<p>Please don’t listen to this tard.</p>
<p>Always go with the latest release,<br>
<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" class="onebox" target="_blank" rel="nofollow noopener">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a></p>
<p>[quote=“sk8rdude461, post:7, topic:546498”][quote author=HcoJustin link=topic=665398.msg4448116#msg4448116 date=1409945707]</p>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<p>I would always recommend the latest version, which at the moment is 1.8.0u20. The compiler is a beautiful thing in that it can compile something while remaining backwards compatible (assuming you don’t use any features newer than what you are targeting).</p>
<p>Your IDE will have a setting to compile at an older target, and if you are still one of those guys doing everything from the command line, there are -source and -target flags you can use to specify.</p>
</blockquote>
</aside>
<p>Yes and no… Java 8 (JDK 1.8. whatever) is not fully released. It is in a pre-release stage right now so developers can learn the code and iron out any last minute bugs with the new version. 9/10 of your users will still have JRE 7. If you compile your client on JDK 1.8 and then distribute it to users that only have JRE 7 (1.7) they won’t be able to play. Why? Because it’s not forward compatible. Older code can’t run newer (in a sense).<br>
You can, however, develop your server on JDK 1.8 and the client on 1.7. Since the server isn’t distributed to anyone, you don’t need to worry about compatibility. But the client you want to make sure that all your users can use it.</p>
</blockquote>
</aside>
<p><a href="http://docs.oracle.com/javase/7/docs/technotes/tools/windows/javac.html" class="onebox" target="_blank" rel="nofollow noopener">http://docs.oracle.com/javase/7/docs/technotes/tools/windows/javac.html</a></p>
<p>Look specifically at the Cross-Compilation section. You absolutely can compile something with JDK8 and target it at 1.6, or even 1.5. So once again, always use the latest release.</p>
<p>[/quote]<br>
Yeah, but you cannot <span class="bbcode-b">RUN</span> something on JRE 7 that’s been compiled on JDK 1.8, which was my point. The end users (who are still on JRE 7) will not be able to use the client if compiled on 1.8.<br>
Note I mean it’s targeting 1.8…[/quote]</p>
<blockquote>-source 1.7 - target 1.7</blockquote>
?
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/8</link>
        <pubDate>Fri, 05 Sep 2014 20:06:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546498-8</guid>
        <source url="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498.rss">Which Jdk version is the best</source>
      </item>
      <item>
        <title>Which Jdk version is the best</title>
        <dc:creator><![CDATA[@sk8rdude461 sk8rdude461]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sk8rdude461">@sk8rdude461</a> wrote:</p>
          <blockquote>
              <p>[quote=“HcoJustin, post:6, topic:546498”][quote author=sk8rdude461 link=topic=665398.msg4448114#msg4448114 date=1409945079]</p>
<aside class="quote">
<blockquote>
<p>I would always recommend the latest version, which at the moment is 1.8.0u20. The compiler is a beautiful thing in that it can compile something while remaining backwards compatible (assuming you don’t use any features newer than what you are targeting).</p>
<p>Your IDE will have a setting to compile at an older target, and if you are still one of those guys doing everything from the command line, there are -source and -target flags you can use to specify.</p>
</blockquote>
</aside>
<p>Yes and no… Java 8 (JDK 1.8. whatever) is not fully released. It is in a pre-release stage right now so developers can learn the code and iron out any last minute bugs with the new version. 9/10 of your users will still have JRE 7. If you compile your client on JDK 1.8 and then distribute it to users that only have JRE 7 (1.7) they won’t be able to play. Why? Because it’s not forward compatible. Older code can’t run newer (in a sense).<br>
You can, however, develop your server on JDK 1.8 and the client on 1.7. Since the server isn’t distributed to anyone, you don’t need to worry about compatibility. But the client you want to make sure that all your users can use it.<br>
[/quote]<br>
<a href="http://docs.oracle.com/javase/7/docs/technotes/tools/windows/javac.html" class="onebox" target="_blank" rel="nofollow noopener">http://docs.oracle.com/javase/7/docs/technotes/tools/windows/javac.html</a></p>
<p>Look specifically at the Cross-Compilation section. You absolutely can compile something with JDK8 and target it at 1.6, or even 1.5. So once again, always use the latest release.[/quote]<br>
Yeah, but you cannot <span class="bbcode-b">RUN</span> something on JRE 7 that’s been compiled on JDK 1.8, which was my point. The end users (who are still on JRE 7) will not be able to use the client if compiled on 1.8.<br>
Note I mean it’s targeting 1.8…</p>
<blockquote>Where do you see that it is still a pre-release? Java 8 is fully released, and at a stable update 20. The current pre-release channel is on update 40.</blockquote>
Right here: http://java.com/en/download/chrome.jsp?locale=en
If you notice, the current recommended version is JRE 1.7.0_67 and NOT 1.8
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/7</link>
        <pubDate>Fri, 05 Sep 2014 20:02:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546498-7</guid>
        <source url="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498.rss">Which Jdk version is the best</source>
      </item>
      <item>
        <title>Which Jdk version is the best</title>
        <dc:creator><![CDATA[@HcoJustin HcoJustin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hcojustin">@HcoJustin</a> wrote:</p>
          <blockquote>
              <p>[quote=“sk8rdude461, post:5, topic:546498”][quote author=HcoJustin link=topic=665398.msg4448036#msg4448036 date=1409890643]<br>
I would always recommend the latest version, which at the moment is 1.8.0u20. The compiler is a beautiful thing in that it can compile something while remaining backwards compatible (assuming you don’t use any features newer than what you are targeting).</p>
<p>Your IDE will have a setting to compile at an older target, and if you are still one of those guys doing everything from the command line, there are -source and -target flags you can use to specify.<br>
[/quote]<br>
Yes and no… Java 8 (JDK 1.8. whatever) is not fully released. It is in a pre-release stage right now so developers can learn the code and iron out any last minute bugs with the new version. 9/10 of your users will still have JRE 7. If you compile your client on JDK 1.8 and then distribute it to users that only have JRE 7 (1.7) they won’t be able to play. Why? Because it’s not forward compatible. Older code can’t run newer (in a sense).<br>
You can, however, develop your server on JDK 1.8 and the client on 1.7. Since the server isn’t distributed to anyone, you don’t need to worry about compatibility. But the client you want to make sure that all your users can use it.[/quote]<br>
<a href="http://docs.oracle.com/javase/7/docs/technotes/tools/windows/javac.html" class="onebox" target="_blank" rel="nofollow noopener">http://docs.oracle.com/javase/7/docs/technotes/tools/windows/javac.html</a></p>
<p>Look specifically at the Cross-Compilation section. You absolutely can compile something with JDK8 and target it at 1.6, or even 1.5. So once again, always use the latest release.</p>
<p>Where do you see that it is still a pre-release? Java 8 is fully released, and at a stable update 20. The current pre-release channel is on update 40.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/6</link>
        <pubDate>Fri, 05 Sep 2014 19:35:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546498-6</guid>
        <source url="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498.rss">Which Jdk version is the best</source>
      </item>
      <item>
        <title>Which Jdk version is the best</title>
        <dc:creator><![CDATA[@sk8rdude461 sk8rdude461]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sk8rdude461">@sk8rdude461</a> wrote:</p>
          <blockquote>
              <p>[quote=“HcoJustin, post:4, topic:546498”]I would always recommend the latest version, which at the moment is 1.8.0u20. The compiler is a beautiful thing in that it can compile something while remaining backwards compatible (assuming you don’t use any features newer than what you are targeting).</p>
<p>Your IDE will have a setting to compile at an older target, and if you are still one of those guys doing everything from the command line, there are -source and -target flags you can use to specify.[/quote]<br>
Yes and no… Java 8 (JDK 1.8. whatever) is not fully released. It is in a pre-release stage right now so developers can learn the code and iron out any last minute bugs with the new version. 9/10 of your users will still have JRE 7. If you compile your client on JDK 1.8 and then distribute it to users that only have JRE 7 (1.7) they won’t be able to play. Why? Because it’s not forward compatible. Older code can’t run newer (in a sense).<br>
You can, however, develop your server on JDK 1.8 and the client on 1.7. Since the server isn’t distributed to anyone, you don’t need to worry about compatibility. But the client you want to make sure that all your users can use it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/5</link>
        <pubDate>Fri, 05 Sep 2014 19:24:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546498-5</guid>
        <source url="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498.rss">Which Jdk version is the best</source>
      </item>
      <item>
        <title>Which Jdk version is the best</title>
        <dc:creator><![CDATA[@HcoJustin HcoJustin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hcojustin">@HcoJustin</a> wrote:</p>
          <blockquote>
              <p>I would always recommend the latest version, which at the moment is 1.8.0u20. The compiler is a beautiful thing in that it can compile something while remaining backwards compatible (assuming you don’t use any features newer than what you are targeting).</p>
<p>Your IDE will have a setting to compile at an older target, and if you are still one of those guys doing everything from the command line, there are -source and -target flags you can use to specify.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/4</link>
        <pubDate>Fri, 05 Sep 2014 04:17:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546498-4</guid>
        <source url="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498.rss">Which Jdk version is the best</source>
      </item>
      <item>
        <title>Which Jdk version is the best</title>
        <dc:creator><![CDATA[@bagies bagies]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bagies">@bagies</a> wrote:</p>
          <blockquote>
              <p>Oh thanx</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/3</link>
        <pubDate>Fri, 05 Sep 2014 02:10:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546498-3</guid>
        <source url="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498.rss">Which Jdk version is the best</source>
      </item>
      <item>
        <title>Which Jdk version is the best</title>
        <dc:creator><![CDATA[@_dumped #dumped]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_dumped">@_dumped</a> wrote:</p>
          <blockquote>
              <p>jdk1.7.0.25</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/2</link>
        <pubDate>Fri, 05 Sep 2014 02:07:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546498-2</guid>
        <source url="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498.rss">Which Jdk version is the best</source>
      </item>
      <item>
        <title>Which Jdk version is the best</title>
        <dc:creator><![CDATA[@bagies bagies]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bagies">@bagies</a> wrote:</p>
          <blockquote>
              <p>What is the best version of jdk for rsps ?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498/1</link>
        <pubDate>Fri, 05 Sep 2014 01:35:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546498-1</guid>
        <source url="https://forum.moparisthebest.com/t/which-jdk-version-is-the-best/546498.rss">Which Jdk version is the best</source>
      </item>
  </channel>
</rss>
