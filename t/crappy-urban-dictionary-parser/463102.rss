<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Crappy Urban Dictionary Parser</title>
    <link>https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102</link>
    <description>lol

[code=python]
# Urban Dictionary Parser
# by Whackatre
import re, urllib, urllib2

def filt_out(s):
	return re.sub(&#39;&lt;a href=&quot;(.*)&quot;&gt;&#39;, &#39;&#39;, s.replace(&#39;&lt;br/&gt;&#39;, &#39;\n&#39;).replace(&#39;&amp;quot;&#39;, &#39;\&quot;&#39;).replace(&#39;&lt;/a&gt;&#39;, &#39;&#39;))

header = {&#39;User-Agent&#39; : &#39;Mozilla/5.0&#39;}
def_num = 1
base_url = &#39;http://www.urbandictionary.com/define.php?term=&#39;
word = raw_input(&#39;Enter a word to define: &#39;)
if len(word) &lt; 1:
	exit()
print &#39;Defining &#39; + word + &#39;...\n&#39;

response = urllib2.urlopen(urllib2.Request(base_url + word, urllib.urlencode(header), header))
for line in response.readlines():
	match = re.search(&#39;&lt;div class=&quot;definition&quot;&gt;(.*)&lt;/div&gt;&lt;div class=&quot;example&quot;&gt;(.*)&lt;/div&gt;&#39;, line)
	if match:
		print &#39;Definition &#39; + str(def_num) + &#39;:\n&#39; + filt_out(match.groups()[0]) + &#39;\n&#39;
		print &#39;Example:\n&#39; + filt_out(match.groups()[1]) + &#39;\n&#39;
		def_num += 1[/code]

i&#39;m attempting to learn regex. tips? feedback would be highly appreciated ty.</description>
    
    <lastBuildDate>Mon, 08 Oct 2012 16:52:12 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Crappy Urban Dictionary Parser</title>
        <dc:creator><![CDATA[@Ollie Ollie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ollie">@Ollie</a> wrote:</p>
          <blockquote>
              <aside class="onebox githubblob">
  <header class="source">
      <a href="https://github.com/nickcharlton/urbanscraper/blob/master/app.rb" target="_blank" rel="nofollow noopener">github.com</a>
  </header>
  <article class="onebox-body">
    <h4><a href="https://github.com/nickcharlton/urbanscraper/blob/master/app.rb" target="_blank" rel="nofollow noopener">nickcharlton/urbanscraper/blob/master/app.rb</a></h4>
<pre><code class="lang-rb">require 'sinatra'
require "raven"
require 'redcarpet'
require 'pygments'
require 'json'
require 'sinatra/jsonp'

require_relative 'helpers/markdown'
require_relative 'helpers/time'
require_relative 'helpers/response'
require_relative 'scrapers/urbandictionary'

use Raven::Rack

#
# UrbanDictionary Global
#
ud = UrbanDictionary.new

# custom error handling classes
</code></pre>

  This file has been truncated. <a href="https://github.com/nickcharlton/urbanscraper/blob/master/app.rb" target="_blank" rel="nofollow noopener">show original</a>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p>[code=ruby]</p>
<p>require ‘sinatra’<br>
require ‘nokogiri’<br>
require ‘open-uri’<br>
require ‘json’</p>
<h1>some error handling for later</h1>
<p>NoDef = Class.new(StandardError)</p>
<h1>all of the methods used to parse the file</h1>
<p>helpers do<br>
def get_definition(term)<br>
# pull it into nokogiri<br>
doc = Nokogiri::HTML(open(‘<a href="http://www.urbandictionary.com/define.php?term=" rel="nofollow noopener">http://www.urbandictionary.com/define.php?term=</a>’ + term))</p>
<pre><code># run the xpath
result = doc.xpath("/html[1]/body[1]/div[3]/div[1]/table[1]/tr[1]/td[2]/div[1]/table[1]/tr[2]/td[2]/div[@class='definition']/node()")

definition = String.new
result.each { |e| definition &lt;&lt; e }

definition
</code></pre>
<p>end</p>
<p>def get_example(term)<br>
# pull it into nokogiri<br>
doc = Nokogiri::HTML(open(‘<a href="http://www.urbandictionary.com/define.php?term=" rel="nofollow noopener">http://www.urbandictionary.com/define.php?term=</a>’ + term))</p>
<pre><code># run the xpath
result = doc.xpath("/html[1]/body[1]/div[3]/div[1]/table[1]/tr[1]/td[2]/div[1]/table[1]/tr[2]/td[2]/div[@class='example']/node()")
 
example = String.new
result.each { |e| example &lt;&lt; e }

example
</code></pre>
<p>end<br>
end</p>
<p>get ‘/’ do<br>
erb :home<br>
end</p>
<p>get ‘/define/:term.json’ do<br>
data = Hash[<br>
“word” =&gt; params[:term], # term requested<br>
“timestamp” =&gt; Time.now.to_i, # the timestamp of the definition<br>
“status” =&gt; 200, # status of the request<br>
“url” =&gt; “<a href="http://www.urbandictionary.com/define.php?term=#%7Bparams%5B:term%5D%7D" rel="nofollow noopener">http://www.urbandictionary.com/define.php?term=#{params[:term]}</a>” # the url for the word<br>
]</p>
<p>data[:definition] = get_definition(params[:term])</p>
<p>if data[:definition].empty?<br>
raise NoDef<br>
end<br>
data[:example] = get_example(params[:term])</p>
<p>content_type :text<br>
data.to_json<br>
end</p>
<h1>some error handling</h1>
<p>error NoDef do<br>
Hash[‘status’ =&gt; ‘404’, ‘message’ =&gt; ‘No definition found’].to_json<br>
end[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102/10</link>
        <pubDate>Mon, 08 Oct 2012 16:52:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-463102-10</guid>
        <source url="https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102.rss">Crappy Urban Dictionary Parser</source>
      </item>
      <item>
        <title>Crappy Urban Dictionary Parser</title>
        <dc:creator><![CDATA[@Cheese_Police c|p]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cheese_police">@Cheese_Police</a> wrote:</p>
          <blockquote>
              <p>psst OP use ruby instead</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102/9</link>
        <pubDate>Sat, 06 Oct 2012 15:16:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-463102-9</guid>
        <source url="https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102.rss">Crappy Urban Dictionary Parser</source>
      </item>
      <item>
        <title>Crappy Urban Dictionary Parser</title>
        <dc:creator><![CDATA[@Phillipe Phillipé]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/phillipe">@Phillipe</a> wrote:</p>
          <blockquote>
              <p>pssst use scrapy</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102/8</link>
        <pubDate>Fri, 05 Oct 2012 23:44:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-463102-8</guid>
        <source url="https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102.rss">Crappy Urban Dictionary Parser</source>
      </item>
      <item>
        <title>Crappy Urban Dictionary Parser</title>
        <dc:creator><![CDATA[@Mopman Mopman]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mopman">@Mopman</a> wrote:</p>
          <blockquote>
              <p>psst OP used python</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102/7</link>
        <pubDate>Fri, 05 Oct 2012 23:34:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-463102-7</guid>
        <source url="https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102.rss">Crappy Urban Dictionary Parser</source>
      </item>
      <item>
        <title>Crappy Urban Dictionary Parser</title>
        <dc:creator><![CDATA[@Ollie Ollie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ollie">@Ollie</a> wrote:</p>
          <blockquote>
              <p>[quote=“c|p, post:5, topic:463102”]<a href="http://nokogiri.org/" data-bbcode="true" rel="nofollow noopener">http://nokogiri.org/</a></p>
<p>the end[/quote]</p>
<p>was going to suggest this, really good for scraping in ruby.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102/6</link>
        <pubDate>Fri, 05 Oct 2012 19:28:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-463102-6</guid>
        <source url="https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102.rss">Crappy Urban Dictionary Parser</source>
      </item>
      <item>
        <title>Crappy Urban Dictionary Parser</title>
        <dc:creator><![CDATA[@Cheese_Police c|p]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cheese_police">@Cheese_Police</a> wrote:</p>
          <blockquote>
              <p><a href="http://nokogiri.org/" data-bbcode="true" rel="nofollow noopener">http://nokogiri.org/</a></p>
<p>the end</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102/5</link>
        <pubDate>Fri, 05 Oct 2012 18:38:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-463102-5</guid>
        <source url="https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102.rss">Crappy Urban Dictionary Parser</source>
      </item>
      <item>
        <title>Crappy Urban Dictionary Parser</title>
        <dc:creator><![CDATA[@Fat_Cookies Fat Cookies]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/fat_cookies">@Fat_Cookies</a> wrote:</p>
          <blockquote>
              <p>You can’t parse [X]HTML with regex. Because HTML can’t be parsed by regex. Regex is not a tool that can be used to correctly parse HTML. As I have answered in HTML-and-regex questions here so many times before, the use of regex will not allow you to consume HTML. Regular expressions are a tool that is insufficiently sophisticated to understand the constructs employed by HTML. HTML is not a regular language and hence cannot be parsed by regular expressions. Regex queries are not equipped to break down HTML into its meaningful parts. so many times but it is not getting to me. Even enhanced irregular regular expressions as used by Perl are not up to the task of parsing HTML. You will never make me crack. HTML is a language of sufficient complexity that it cannot be parsed by regular expressions. Even Jon Skeet cannot parse HTML using regular expressions. Every time you attempt to parse HTML with regular expressions, the unholy child weeps the blood of virgins, and Russian hackers pwn your webapp. Parsing HTML with regex summons tainted souls into the realm of the living. HTML and regex go together like love, marriage, and ritual infanticide. The  cannot hold it is too late. The force of regex and HTML together in the same conceptual space will destroy your mind like so much watery putty. If you parse HTML with regex you are giving in to Them and their blasphemous ways which doom us all to inhuman toil for the One whose Name cannot be expressed in the Basic Multilingual Plane, he comes. HTML-plus-regexp will liquify the n​erves of the sentient whilst you observe, your psyche withering in the onslaught of horror. Rege̿̔̉x-based HTML parsers are the cancer that is killing StackOverflow it is too late it is too late we cannot be saved the trangession of a chi͡ld ensures regex will consume all living tissue (except for HTML which it cannot, as previously prophesied) dear lord help us how can anyone survive this scourge using regex to parse HTML has doomed humanity to an eternity of dread torture and security holes using regex as a tool to process HTML establishes a breach between this world and the dread realm of c͒ͪo͛ͫrrupt entities (like SGML entities, but more corrupt) a mere glimpse of the world of reg​ex parsers for HTML will ins​tantly transport a programmer’s consciousness into a world of ceaseless screaming, he comes, the pestilent slithy regex-infection wil​l devour your HT​ML parser, application and existence for all time like Visual Basic only worse he comes he comes do not fi​ght he com̡e̶s, ̕h̵i​s un̨ho͞ly radiańcé destro҉ying all enli̍̈́̂̈́ghtenment, HTML tags lea͠ki̧n͘g fr̶ǫm ̡yo​͟ur eye͢s̸ ̛l̕ik͏e liq​uid pain, the song of re̸gular exp​ression parsing will exti​nguish the voices of mor​tal man from the sp​here I can see it can you see ̲͚̖͔̙î̩́t̲͎̩̱͔́̋̀ it is beautiful t​he final snuffing of the lie​s of Man ALL IS LOŚ͖̩͇̗̪̏̈́T ALL I​S LOST the pon̷y he comes he c̶̮omes he comes the ich​or permeates all MY FACE MY FACE ᵒh god no NO NOO̼O​O NΘ stop the an​*̶͑̾̾​̅ͫ͏̙̤g͇̫͛͆̾ͫ̑͆l͖͉̗̩̳̟̍ͫͥͨe̠̅s ͎a̧͈͖r̽̾̈́͒͑e n​ot rè̑ͧ̌aͨl̘̝̙̃ͤ͂̾̆ ZA̡͊͠͝LGΌ ISͮ̂҉̯͈͕̹̘̱ TO͇̹̺ͅƝ̴ȳ̳ TH̘Ë͖́̉ ͠P̯͍̭O̚​N̐Y̡ H̸̡̪̯ͨ͊̽̅̾̎Ȩ̬̩̾͛ͪ̈́̀́͘ ̶̧̨̱̹̭̯ͧ̾ͬC̷̙̲̝͖ͭ̏ͥͮ͟Oͮ͏̮̪̝͍M̲̖͊̒ͪͩͬ̚̚͜Ȇ̴̟̟͙̞ͩ͌͝S̨̥̫͎̭ͯ̿̔̀ͅ</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102/4</link>
        <pubDate>Fri, 05 Oct 2012 15:03:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-463102-4</guid>
        <source url="https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102.rss">Crappy Urban Dictionary Parser</source>
      </item>
      <item>
        <title>Crappy Urban Dictionary Parser</title>
        <dc:creator><![CDATA[@Mopman Mopman]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mopman">@Mopman</a> wrote:</p>
          <blockquote>
              <p>tips: dont use regex</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102/3</link>
        <pubDate>Fri, 05 Oct 2012 14:33:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-463102-3</guid>
        <source url="https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102.rss">Crappy Urban Dictionary Parser</source>
      </item>
      <item>
        <title>Crappy Urban Dictionary Parser</title>
        <dc:creator><![CDATA[@Pwnd Pwnd]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pwnd">@Pwnd</a> wrote:</p>
          <blockquote>
              <p>This language looks brutal</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102/2</link>
        <pubDate>Fri, 05 Oct 2012 09:49:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-463102-2</guid>
        <source url="https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102.rss">Crappy Urban Dictionary Parser</source>
      </item>
      <item>
        <title>Crappy Urban Dictionary Parser</title>
        <dc:creator><![CDATA[@whackatre Whackatre]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/whackatre">@whackatre</a> wrote:</p>
          <blockquote>
              <p>lol</p>
<p>[code=python]</p>
<h1>Urban Dictionary Parser</h1>
<h1>by Whackatre</h1>
<p>import re, urllib, urllib2</p>
<p>def filt_out(s):<br>
return re.sub(’<a>’, ‘’, s.replace(’<br>’, ‘\n’).replace(’"’, ‘"’).replace(’</a>’, ‘’))</p>
<p>header = {‘User-Agent’ : ‘Mozilla/5.0’}<br>
def_num = 1<br>
base_url = ‘<a href="http://www.urbandictionary.com/define.php?term=" rel="nofollow noopener">http://www.urbandictionary.com/define.php?term=</a>’<br>
word = raw_input('Enter a word to define: ')<br>
if len(word) &lt; 1:<br>
exit()<br>
print 'Defining ’ + word + ‘…\n’</p>
<p>response = urllib2.urlopen(urllib2.Request(base_url + word, urllib.urlencode(header), header))<br>
for line in response.readlines():<br>
match = re.search(’</p><div>(.<em>)</em>
</div><div>(.)</div>’, line)<br>
if match:<br>
print 'Definition ’ + str(def_num) + ‘:\n’ + filt_out(match.groups()[0]) + ‘\n’<br>
print ‘Example:\n’ + filt_out(match.groups()[1]) + ‘\n’<br>
def_num += 1[/code]
<p>i’m attempting to learn regex. tips? feedback would be highly appreciated ty.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102/1</link>
        <pubDate>Fri, 05 Oct 2012 09:31:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-463102-1</guid>
        <source url="https://forum.moparisthebest.com/t/crappy-urban-dictionary-parser/463102.rss">Crappy Urban Dictionary Parser</source>
      </item>
  </channel>
</rss>
