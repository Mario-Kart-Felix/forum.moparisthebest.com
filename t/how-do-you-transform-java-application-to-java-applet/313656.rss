<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>How do you transform Java Application To Java Applet?</title>
    <link>https://forum.moparisthebest.com/t/how-do-you-transform-java-application-to-java-applet/313656</link>
    <description>Hello my name is John Powers, born and raised in the good ol&#39; U.S. of A.

Problem is I did tons of Google research telling me how to just replace JFrame extends, to JApplet and replace the class constructor with a function called init().

That sounds simple but in my case I have no idea what to do.. the problem is my JFrame is created in a separate class.

Then the instance is made in another Class which contains my main function for opening the application which has the JFrame.

So what can I do? instead of organizing it differently.


Here is what I have

[code]
public class MainWindow extends JFrame
  implements ActionListener, WindowListener, MouseListener
{
  private CommandInterpreter ci;
  private JTabbedPane tabs;
  private JTable jtTableList;
  private TableListTableModel tltml;
  private JButton disconnect;
  private JButton about;

  public MainWindow(CommandInterpreter ci)
  {
    setSize(1024, 768);
    setResizable(false);
    addWindowListener(this);

    setTitle(&quot;My Game&quot;);
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
    setLocation((int)screenSize.getWidth() / 2 - (getWidth() / 2), (int)screenSize.getHeight() / 2 - (getHeight() / 2));
    setIconImage(new ImageIcon(super.getClass().getClassLoader().getResource(&quot;images/cp.png&quot;)).getImage());

    initGUI();

    this.ci = ci;

    setVisible(true);
  }
}
[/code]

Other class

[code]
public class CommandInterpreter
  implements ActionListener
{
  private Communications comm;
  private MainWindow mw;

  public CommandInterpreter()
  {
    this.inTableList = false;
    this.hasTables = false;
    this.mw = new MainWindow(this);
    this.comm = new Communications(this);
    //snip.. the rest a Bunch of instance makers for all JDialogs all kinds of other classes
    showConnectionWindow(true);
  }

  public static void main(String[] paramArrayOfString)
  {
    try
    {
      CPLookAndFeel localCPLookAndFeel = new CPLookAndFeel();
      UIManager.setLookAndFeel(localCPLookAndFeel);
    }
    catch (Exception localException)
    {
      System.out.println(&quot;Cannot set the look and feel&quot;);
    }
    JFrame.setDefaultLookAndFeelDecorated(true);
    JDialog.setDefaultLookAndFeelDecorated(true);
    new CommandInterpreter();
  }
//snip tons of code.
}
[/code]

Well thats about it.. so just wondering what are my options. I&#39;m making kinda like a server/client game in java just for the hack of it but I now I want to be a applet instead of the way it is

Thanks JP</description>
    
    <lastBuildDate>Mon, 07 Dec 2009 04:57:21 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/how-do-you-transform-java-application-to-java-applet/313656.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>How do you transform Java Application To Java Applet?</title>
        <dc:creator><![CDATA[@The_Chubby_Bunny The Chubby Bunny]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_chubby_bunny">@The_Chubby_Bunny</a> wrote:</p>
          <blockquote>
              <p>haha JApplet<br>
like a japenese child<br>
[center]<img src="http://www.moparisthebest.com/smf/Themes/default/images/warnmute.gif" alt width="" height=""> Stop spamming, behaving like an idiot and making racist remarks.[/center]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/how-do-you-transform-java-application-to-java-applet/313656/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/how-do-you-transform-java-application-to-java-applet/313656/9</link>
        <pubDate>Mon, 07 Dec 2009 04:57:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-313656-9</guid>
        <source url="https://forum.moparisthebest.com/t/how-do-you-transform-java-application-to-java-applet/313656.rss">How do you transform Java Application To Java Applet?</source>
      </item>
      <item>
        <title>How do you transform Java Application To Java Applet?</title>
        <dc:creator><![CDATA[@Punniabi16 Punniabi16]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/punniabi16">@Punniabi16</a> wrote:</p>
          <blockquote>
              <p>Yeah I didn’t think about this too deep as you did so I thought maybe I should combine MainWindow and CommandInterpreter as one class then you gave me the better idea of changing the constructor of CommandInterpreter to pass MainWindow so infact now MainWindow is like the main class nevermind about that question now I think its just about solved only problem is should I move main method to MainWindow now and ignore the CommandInterpreter as the main class from this point on.</p>
<p>Nevermind again I realized being slow that you can’t have main methods in applet class anyways</p>
<p>Okay here is the main code I used in CommandInterpreter</p>
<pre><code class="lang-auto">  public static void main(String[] args)
  {
    try
    {
      CPLookAndFeel localCPLookAndFeel = new CPLookAndFeel();
      UIManager.setLookAndFeel(localCPLookAndFeel);
    }
    catch (Exception localException)
    {
      System.out.println("Cannot set the look and feel");
    }
    JFrame.setDefaultLookAndFeelDecorated(true);
    JDialog.setDefaultLookAndFeelDecorated(true);
    
    JFrame f = new JFrame("my RPG");
    MainWindow guimw = new MainWindow();
    f.add(guimw);
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
    f.setLocation((int)screenSize.getWidth() / 2 - (getWidth() / 2), (int)screenSize.getHeight() / 2 - (getHeight() / 2));
    f.setIconImage(new ImageIcon(super.getClass().getClassLoader().getResource("images/cp.png")).getImage());
    f.setSize(1024, 768);
    f.setResizable(true);
    f.setVisible();
    
    guimw.init();
    guimw.start();
  }</code></pre>
<p>P.S.&gt; Can’t even compile it since… if the main method stays in CommandInterpreter then the constructor cannot be called since it can only be called by MainWindow now so should I create a overloaded constructor now and add the code from main method in there?</p>
<p>Okay did another revision here</p>
<pre><code class="lang-auto">  public CommandInterpreter()
  {
    this.mw = new MainWindow();
    JFrame f = new JFrame("rpg standalone client");
    f.add(guimw);
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
    f.setLocation((int)screenSize.getWidth() / 2 - (getWidth() / 2), (int)screenSize.getHeight() / 2 - (getHeight() / 2));
    f.setIconImage(new ImageIcon(super.getClass().getClassLoader().getResource("images/cp.png")).getImage());
    f.setSize(1024, 768);
    f.setResizable(true);
    f.setVisible();
    this.inTableList = false;
    this.hasTables = false;
    this.comm = new Communications(this);
//snip code
    showConnectionWindow(true);
    mw.init();
    mw.start();
  }
  
  public CommandInterpreter(MainWindow mw)
  {
    this.mw = mw;
    this.inTableList = false;
    this.hasTables = false;
    this.comm = new Communications(this);
//snip code
  }

  public static void main(String[] paramArrayOfString)
  {
    try
    {
      CPLookAndFeel localCPLookAndFeel = new CPLookAndFeel();
      UIManager.setLookAndFeel(localCPLookAndFeel);
    }
    catch (Exception localException)
    {
      System.out.println("Cannot set the look and feel");
    }
    JFrame.setDefaultLookAndFeelDecorated(true);
    JDialog.setDefaultLookAndFeelDecorated(true);
    new CommandInterpreter();
  }</code></pre>
<p>Thanks for everything abramham, I take it back… this guy is not worth your trouble do not try to contact him on private messages for help. .because he will call you a faggot and tell you to shut your fucking mouth… he acts nice in the public to become a moderator or some shit but if you talk to him in private he doens’t care and vents his anger that he probably has due to his real life problems maybe with family or never had sex for a long time or i dont know he thinks hes some kind of a queen but i dont know.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/how-do-you-transform-java-application-to-java-applet/313656/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/how-do-you-transform-java-application-to-java-applet/313656/8</link>
        <pubDate>Wed, 11 Nov 2009 02:41:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-313656-8</guid>
        <source url="https://forum.moparisthebest.com/t/how-do-you-transform-java-application-to-java-applet/313656.rss">How do you transform Java Application To Java Applet?</source>
      </item>
      <item>
        <title>How do you transform Java Application To Java Applet?</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>you mean inner classes? or simply objects? either way, not a problem</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/how-do-you-transform-java-application-to-java-applet/313656/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/how-do-you-transform-java-application-to-java-applet/313656/7</link>
        <pubDate>Wed, 11 Nov 2009 02:38:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-313656-7</guid>
        <source url="https://forum.moparisthebest.com/t/how-do-you-transform-java-application-to-java-applet/313656.rss">How do you transform Java Application To Java Applet?</source>
      </item>
      <item>
        <title>How do you transform Java Application To Java Applet?</title>
        <dc:creator><![CDATA[@Punniabi16 Punniabi16]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/punniabi16">@Punniabi16</a> wrote:</p>
          <blockquote>
              <p>[quote=“abraham2119, post:5, topic:313656”]just create a new instance of CommandInterpreter from inside your MainWindow class, and then have CommandInterpreter receive an instance of MainWindow in its constructor</p>
<p>ie</p>
<p><code>
public CommandInterpreter(MainWindow mw) {
    this.mw = mw;
    .............
}</code></p>
<p>then in MainWindow do</p>
<pre><code class="lang-auto">new CommandInterpreter(this);</code></pre>
<p>yes thanks good idea… I didn’t like way the name CommandInterpreter is used as the main name so… it won’t be any trouble that CommandInterpreter has other created class intances in it? right?</p>
<p>so the main method should be moved now to MainWindow?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/how-do-you-transform-java-application-to-java-applet/313656/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/how-do-you-transform-java-application-to-java-applet/313656/6</link>
        <pubDate>Wed, 11 Nov 2009 02:36:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-313656-6</guid>
        <source url="https://forum.moparisthebest.com/t/how-do-you-transform-java-application-to-java-applet/313656.rss">How do you transform Java Application To Java Applet?</source>
      </item>
      <item>
        <title>How do you transform Java Application To Java Applet?</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>just create a new instance of CommandInterpreter from inside your MainWindow class, and then have CommandInterpreter receive an instance of MainWindow in its constructor</p>
<p>ie</p>
<p><code>
public CommandInterpreter(MainWindow mw) {
    this.mw = mw;
    .............
}</code></p>
<p>then in MainWindow do</p>
<pre><code class="lang-auto">new CommandInterpreter(this);</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/how-do-you-transform-java-application-to-java-applet/313656/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/how-do-you-transform-java-application-to-java-applet/313656/5</link>
        <pubDate>Wed, 11 Nov 2009 02:34:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-313656-5</guid>
        <source url="https://forum.moparisthebest.com/t/how-do-you-transform-java-application-to-java-applet/313656.rss">How do you transform Java Application To Java Applet?</source>
      </item>
      <item>
        <title>How do you transform Java Application To Java Applet?</title>
        <dc:creator><![CDATA[@Punniabi16 Punniabi16]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/punniabi16">@Punniabi16</a> wrote:</p>
          <blockquote>
              <p>[quote=“abraham2119, post:2, topic:313656”]make MainWindow extend a JApplet, remove everything in main(), then call initGUI() in your overriden init() method</p>
<p>ps, in order to create a gui that can either run as an applet or as a frame, do something like:</p>
<pre><code class="lang-auto">class GUI extends JApplet { ... }</code></pre>
<p>then in your main main method, have something like:</p>
<p>[code]JFrame f = new JFrame(“cock”);<br>
GUI gui = new GUI();</p>
<p>f.add(gui);<br>
f.setSize(300, 300);<br>
f.setVisible();</p>
<p>gui.init();<br>
gui.start();[/code]<br>
that way if it is ran as an applet, only init() will be called, and if it is ran as a frame, main will be called and it will add the applet to the frame</p>
<p>edit: just in case you dont know, in your site, the ‘code’ attribute in the applet tag should be MainWindow (since its the class that extends applet, and that overrides init())[/quote]</p>
<p>exactly I know this but I don’t want it to be MainWindow… as the CommandInterpreter is the most important class</p>
<p>applet code looks like this… but it lauches as a application just for reference.</p>
<pre><code class="lang-auto">&lt;applet code="rpg.CommandInterpreter.class" archive="rpg.jar" width="400px" height="400px"&gt;
Java is not installed on your machine or your browser does not allowed Java Applet to run&lt;br /&gt;&lt;br /&gt;Get the latest Java technology at &lt;a href="http://www.java.com/"&gt;http://www.java.com/&lt;/a&gt;
&lt;/applet&gt;</code></pre>
<p>I am thinking maybe I should combine CommandInterpreter and MainWindow together into 1 file? should I?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/how-do-you-transform-java-application-to-java-applet/313656/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/how-do-you-transform-java-application-to-java-applet/313656/4</link>
        <pubDate>Wed, 11 Nov 2009 02:30:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-313656-4</guid>
        <source url="https://forum.moparisthebest.com/t/how-do-you-transform-java-application-to-java-applet/313656.rss">How do you transform Java Application To Java Applet?</source>
      </item>
      <item>
        <title>How do you transform Java Application To Java Applet?</title>
        <dc:creator><![CDATA[@Unhandled Unhandled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unhandled">@Unhandled</a> wrote:</p>
          <blockquote>
              <p>you need applet voids…</p>
<p>java applets don’t have a main method, init() just gets called.<br>
also what abraham said.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/how-do-you-transform-java-application-to-java-applet/313656/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/how-do-you-transform-java-application-to-java-applet/313656/3</link>
        <pubDate>Wed, 11 Nov 2009 02:25:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-313656-3</guid>
        <source url="https://forum.moparisthebest.com/t/how-do-you-transform-java-application-to-java-applet/313656.rss">How do you transform Java Application To Java Applet?</source>
      </item>
      <item>
        <title>How do you transform Java Application To Java Applet?</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>make MainWindow extend a JApplet, remove everything in main(), then call initGUI() in your overriden init() method</p>
<p>ps, in order to create a gui that can either run as an applet or as a frame, do something like:</p>
<pre><code class="lang-auto">class GUI extends JApplet { ... }</code></pre>
<p>then in your main main method, have something like:</p>
<p>[code]JFrame f = new JFrame(“cock”);<br>
GUI gui = new GUI();</p>
<p>f.add(gui);<br>
f.setSize(300, 300);<br>
f.setVisible();</p>
<p>gui.init();<br>
gui.start();[/code]<br>
that way if it is ran as an applet, only init() will be called, and if it is ran as a frame, main will be called and it will add the applet to the frame</p>
<p>edit: just in case you dont know, in your site, the ‘code’ attribute in the applet tag should be MainWindow (since its the class that extends applet, and that overrides init())</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/how-do-you-transform-java-application-to-java-applet/313656/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/how-do-you-transform-java-application-to-java-applet/313656/2</link>
        <pubDate>Wed, 11 Nov 2009 02:24:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-313656-2</guid>
        <source url="https://forum.moparisthebest.com/t/how-do-you-transform-java-application-to-java-applet/313656.rss">How do you transform Java Application To Java Applet?</source>
      </item>
      <item>
        <title>How do you transform Java Application To Java Applet?</title>
        <dc:creator><![CDATA[@Punniabi16 Punniabi16]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/punniabi16">@Punniabi16</a> wrote:</p>
          <blockquote>
              <p>Hello my name is John Powers, born and raised in the good ol’ U.S. of A.</p>
<p>Problem is I did tons of Google research telling me how to just replace JFrame extends, to JApplet and replace the class constructor with a function called init().</p>
<p>That sounds simple but in my case I have no idea what to do… the problem is my JFrame is created in a separate class.</p>
<p>Then the instance is made in another Class which contains my main function for opening the application which has the JFrame.</p>
<p>So what can I do? instead of organizing it differently.</p>
<p>Here is what I have</p>
<pre><code class="lang-auto">public class MainWindow extends JFrame
  implements ActionListener, WindowListener, MouseListener
{
  private CommandInterpreter ci;
  private JTabbedPane tabs;
  private JTable jtTableList;
  private TableListTableModel tltml;
  private JButton disconnect;
  private JButton about;

  public MainWindow(CommandInterpreter ci)
  {
    setSize(1024, 768);
    setResizable(false);
    addWindowListener(this);

    setTitle("My Game");
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
    setLocation((int)screenSize.getWidth() / 2 - (getWidth() / 2), (int)screenSize.getHeight() / 2 - (getHeight() / 2));
    setIconImage(new ImageIcon(super.getClass().getClassLoader().getResource("images/cp.png")).getImage());

    initGUI();

    this.ci = ci;

    setVisible(true);
  }
}</code></pre>
<p>Other class</p>
<pre><code class="lang-auto">public class CommandInterpreter
  implements ActionListener
{
  private Communications comm;
  private MainWindow mw;

  public CommandInterpreter()
  {
    this.inTableList = false;
    this.hasTables = false;
    this.mw = new MainWindow(this);
    this.comm = new Communications(this);
    //snip.. the rest a Bunch of instance makers for all JDialogs all kinds of other classes
    showConnectionWindow(true);
  }

  public static void main(String[] paramArrayOfString)
  {
    try
    {
      CPLookAndFeel localCPLookAndFeel = new CPLookAndFeel();
      UIManager.setLookAndFeel(localCPLookAndFeel);
    }
    catch (Exception localException)
    {
      System.out.println("Cannot set the look and feel");
    }
    JFrame.setDefaultLookAndFeelDecorated(true);
    JDialog.setDefaultLookAndFeelDecorated(true);
    new CommandInterpreter();
  }
//snip tons of code.
}</code></pre>
<p>Well thats about it… so just wondering what are my options. I’m making kinda like a server/client game in java just for the hack of it but I now I want to be a applet instead of the way it is</p>
<p>Thanks JP</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/how-do-you-transform-java-application-to-java-applet/313656/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/how-do-you-transform-java-application-to-java-applet/313656/1</link>
        <pubDate>Wed, 11 Nov 2009 02:18:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-313656-1</guid>
        <source url="https://forum.moparisthebest.com/t/how-do-you-transform-java-application-to-java-applet/313656.rss">How do you transform Java Application To Java Applet?</source>
      </item>
  </channel>
</rss>
