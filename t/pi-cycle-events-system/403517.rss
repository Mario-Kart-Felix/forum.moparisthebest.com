<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[PI] Cycle Events System</title>
    <link>https://forum.moparisthebest.com/t/pi-cycle-events-system/403517</link>
    <description>[center]Basically, this is a better way to handle events in the Project Insanity source, instead of that crappy even system being used.

First off, go into your events (server&lt;event) folder and add these classes[/center]

[code]package server.event;
/*
*@author thispixel
*/
public abstract class CycleEvent {

	/**
	 * Code which should be ran when the event is executed
	 * 
	 * @param container
	 */

	public abstract void execute(CycleEventContainer container);

	/**
	 * Code which should be ran when the event stops
	 */
	public abstract void stop();

}[/code]

also

[code]package server.event;

/**
 * The wrapper for our event
 * 
 * @author thispixel * 
 */

public class CycleEventContainer {

	/**
	 * Event owner
	 */
	private Object owner;
	
	/**
	 * Is the event running or not
	 */
	private boolean isRunning;
	
	/**
	 * The amount of cycles per event execution
	 */	
	private int tick;
	
	/**
	 * The actual event
	 */
	private CycleEvent event;
	
	/**
	 * The current amount of cycles passed
	 */
	private int cyclesPassed;

	/**
	 * Sets the event containers details
	 * 
	 * @param owner
	 *            , the owner of the event
	 * @param event
	 *            , the actual event to run
	 * @param tick
	 *            , the cycles between execution of the event
	 */
	public CycleEventContainer(Object owner, CycleEvent event, int tick) {
		this.owner = owner;
		this.event = event;
		this.isRunning = true;
		this.cyclesPassed = 0;
		this.tick = tick;
	}

	/**
	 * Execute the contents of the event
	 */
	public void execute() {
		event.execute(this);
	}

	/**
	 * Stop the event from running
	 */
	public void stop() {
		isRunning = false;
		event.stop();
	}

	/**
	 * Does the event need to be ran?
	 * 
	 * @return true yes false no
	 */
	public boolean needsExecution() {
		if (++this.cyclesPassed &gt;= tick) {
			this.cyclesPassed = 0;
			return true;
		}
		return false;
	}

	/**
	 * Returns the owner of the event
	 * 
	 * @return
	 */
	public Object getOwner() {
		return owner;
	}

	/**
	 * Is the event running?
	 * 
	 * @return true yes false no
	 */
	public boolean isRunning() {
		return isRunning;
	}

	/**
	 * Set the amount of cycles between the execution
	 * 
	 * @param tick
	 */
	public void setTick(int tick) {
		this.tick = tick;
	}

}[/code]

and lastly

[code]package server.event;

import java.util.ArrayList;
import java.util.List;

/**
 * Handles all of our cycle based events
 * 
 * @author thispixel
 * 
 */
public class CycleEventHandler {

	/**
	 * The instance of this class
	 */
	private static CycleEventHandler instance;

	/**
	 * Returns the instance of this class
	 * 
	 * @return
	 */
	public static CycleEventHandler getSingleton() {
		if (instance == null) {
			instance = new CycleEventHandler();
		}
		return instance;
	}

	/**
	 * Holds all of our events currently being ran
	 */
	private List&lt;CycleEventContainer&gt; events;

	/**
	 * Creates a new instance of this class
	 */
	public CycleEventHandler() {
		this.events = new ArrayList&lt;CycleEventContainer&gt;();
	}

	/**
	 * Add an event to the list
	 * 
	 * @param owner
	 * @param event
	 * @param cycles
	 */
	public void addEvent(Object owner, CycleEvent event, int cycles) {
		this.events.add(new CycleEventContainer(owner, event, cycles));
	}

	/**
	 * Execute and remove events
	 */
	public void process() {
		List&lt;CycleEventContainer&gt; eventsCopy = new ArrayList&lt;CycleEventContainer&gt;(events);
		List&lt;CycleEventContainer&gt; remove = new ArrayList&lt;CycleEventContainer&gt;();
		for (CycleEventContainer c : eventsCopy) {
			if (c != null) {
				if (c.needsExecution())
					c.execute();
				if (!c.isRunning()) {
					remove.add(c);
				}
			}
		}
		for (CycleEventContainer c : remove) {
			events.remove(c);
		}
	}
	
	/**
	 * Returns the amount of events currently running
	 * @return amount
	 */
	public int getEventsCount() {
		return this.events.size();
	}
	
	/**
	 * Stops all events which are being ran by the given owner
	 * @param owner
	 */
	public void stopEvents(Object owner) {
		for (CycleEventContainer c : events) {
			if(c.getOwner() == owner) {
				c.stop();
			}
		}
	}

}[/code]

Next, go to server.java and add
[code]
import server.event.CycleEventHandler;[/code]

With the rest of your imports
and above
[code]playerHandler.process();[/code]
add
[code]CycleEventHandler.getSingleton().process();[/code]

next, go into the client class and import
[code]import server.event.CycleEventHandler;[/code]

then find
[code]outStream.createFrame(109);[/code]
and [B]above that add[/b]
[code]CycleEventHandler.getSingleton().stopEvents(this);
[/code]

This is how you use events

[code]CycleEventHandler.getSingleton().addEvent(this, new CycleEvent() {
	@Override
	public void execute(CycleEventContainer c) {
		Server.zombieCaves.spawnNextZombies((Client) Server.playerHandler.players[playerId]);
		c.stop();
	}
	@Override
		public void stop() {
			// ANYTHING YOU WANT TO DO WHEN THE EVENT STOPS, YOU CAN
			// LEAVE IT EMPTY
		}
}, 11);[/code]


[center]All credits to:

Graham
thispixel
dagenham
sorry if i missed you[/center]


Sorry the tutorial is pretty shitty :p I&#39;m not good at making them. Again, this isn&#39;t my code, it&#39;s just a better way to handle events and I saw someone request it in the help section.</description>
    
    <lastBuildDate>Sat, 16 Jul 2011 17:30:57 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[PI] Cycle Events System</title>
        <dc:creator><![CDATA[@James-RevolutionX James-RevolutionX]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/james-revolutionx">@James-RevolutionX</a> wrote:</p>
          <blockquote>
              <p>Here, Task Class.</p>
<p>[code]**</p>
<ul>
<li>
<p>Represents a periodic task that can be scheduled with a {<a class="mention" href="/u/link">@link</a> TaskScheduler}.</p>
</li>
<li>
<p><span class="mention">@author</span> Graham<br>
*/<br>
public abstract class Task {</p>
<p>/**</p>
<ul>
<li>The number of cycles between consecutive executions of this task.<br>
*/<br>
private final int delay;</li>
</ul>
<p>/**</p>
<ul>
<li>A flag which indicates if this task should be executed once immediately.<br>
*/<br>
private final boolean immediate;</li>
</ul>
<p>/**</p>
<ul>
<li>The current ‘count down’ value. When this reaches zero the task will be</li>
<li>executed.<br>
*/<br>
private int countdown;</li>
</ul>
<p>/**</p>
<ul>
<li>A flag which indicates if this task is still running.<br>
*/<br>
private boolean running = true;</li>
</ul>
<p>/**</p>
<ul>
<li>Creates a new task with a delay of 1 cycle.<br>
*/<br>
public Task() {<br>
this(1);<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Creates a new task with a delay of 1 cycle and immediate flag.</li>
<li>
<a class="mention" href="/u/param">@param</a> immediate A flag that indicates if for the first execution there</li>
<li>should be no delay.<br>
*/<br>
public Task(boolean immediate) {<br>
this(1, immediate);<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Creates a new task with the specified delay.</li>
<li>
<a class="mention" href="/u/param">@param</a> delay The number of cycles between consecutive executions of this</li>
<li>task.</li>
<li>
<span class="mention">@throws</span> IllegalArgumentException if the {<a class="mention" href="/u/code">@code</a> delay} is not positive.<br>
*/<br>
public Task(int delay) {<br>
this(delay, false);<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Creates a new task with the specified delay and immediate flag.</li>
<li>
<a class="mention" href="/u/param">@param</a> delay The number of cycles between consecutive executions of this</li>
<li>task.</li>
<li>
<a class="mention" href="/u/param">@param</a> immediate A flag which indicates if for the first execution there</li>
<li>should be no delay.</li>
<li>
<span class="mention">@throws</span> IllegalArgumentException if the {<a class="mention" href="/u/code">@code</a> delay} is not positive.<br>
*/<br>
public Task(int delay, boolean immediate) {<br>
checkDelay(delay);<br>
this.delay = delay;<br>
this.countdown = delay;<br>
this.immediate = immediate;<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Checks if this task is an immediate task.</li>
<li>
<a class="mention" href="/u/return">@return</a> {<a class="mention" href="/u/code">@code</a> true} if so, {<a class="mention" href="/u/code">@code</a> false} if not.<br>
*/<br>
public boolean isImmediate() {<br>
return immediate;<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Checks if the task is running.</li>
<li>
<a class="mention" href="/u/return">@return</a> {<a class="mention" href="/u/code">@code</a> true} if so, {<a class="mention" href="/u/code">@code</a> false} if not.<br>
*/<br>
public boolean isRunning() {<br>
return running;<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Checks if the task is stopped.</li>
<li>
<a class="mention" href="/u/return">@return</a> {<a class="mention" href="/u/code">@code</a> true} if so, {<a class="mention" href="/u/code">@code</a> false} if not.<br>
*/<br>
public boolean isStopped() {<br>
return !running;<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>This method should be called by the scheduling class every cycle. It</li>
<li>updates the {<a class="mention" href="/u/link">@link</a> <span class="hashtag">#countdown</span>} and calls the {<a class="mention" href="/u/link">@link</a> <span class="hashtag">#execute</span>()} method</li>
<li>if necessary.</li>
<li>
<a class="mention" href="/u/return">@return</a> A flag indicating if the task is running.<br>
*/<br>
public boolean tick() {<br>
if (running &amp;&amp; --countdown == 0) {<br>
execute();<br>
countdown = delay;<br>
}<br>
return running;<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Performs this task’s action.<br>
*/<br>
protected abstract void execute();</li>
</ul>
<p>/**</p>
<ul>
<li>Changes the delay of this task.</li>
<li>
<a class="mention" href="/u/param">@param</a> delay The number of cycles between consecutive executions of this</li>
<li>task.</li>
<li>
<span class="mention">@throws</span> IllegalArgumentException if the {<a class="mention" href="/u/code">@code</a> delay} is not positive.<br>
*/<br>
public void setDelay(int delay) {<br>
checkDelay(delay);<br>
delay = 0;<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Stops this task.</li>
<li>
<span class="mention">@throws</span> IllegalStateException if the task has already been stopped.<br>
*/<br>
public void stop() {<br>
checkStopped();<br>
running = false;<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Checks if the delay is negative and throws an exception if so.</li>
<li>
<a class="mention" href="/u/param">@param</a> delay The delay.</li>
<li>
<span class="mention">@throws</span> IllegalArgumentException if the delay is not positive.<br>
*/<br>
private void checkDelay(int delay) {<br>
if (delay &lt;= 0)<br>
throw new IllegalArgumentException(“Delay must be positive.”);<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Checks if this task has been stopped and throws an exception if so.</li>
<li>
<span class="mention">@throws</span> IllegalStateException if the task has been stopped.<br>
*/<br>
private void checkStopped() {<br>
if (!running)<br>
throw new IllegalStateException();<br>
}</li>
</ul>
</li>
</ul>
<p>}[/code]</p>
<p>TaskScheduler Class.</p>
<p>[code]import java.util.ArrayDeque;<br>
import java.util.ArrayList;<br>
import java.util.Iterator;<br>
import java.util.List;<br>
import java.util.Queue;<br>
import java.util.concurrent.Executors;<br>
import java.util.concurrent.ScheduledExecutorService;<br>
import java.util.concurrent.TimeUnit;<br>
import java.util.logging.Level;<br>
import java.util.logging.Logger;</p>
<p>/**</p>
<ul>
<li>
<p>A class which schedules the execution of {<a class="mention" href="/u/link">@link</a> Task}s.</p>
</li>
<li>
<p><span class="mention">@author</span> Graham<br>
*/<br>
public final class TaskScheduler implements Runnable {</p>
<p>/**</p>
<ul>
<li>A logger used to report error messages.<br>
*/<br>
private static final Logger logger = Logger.getLogger(TaskScheduler.class.getName());</li>
</ul>
<p>/**</p>
<ul>
<li>The time period, in milliseconds, of a single cycle.<br>
*/<br>
private static final int TIME_PERIOD = 600;</li>
</ul>
<p>/**</p>
<ul>
<li>The {<a class="mention" href="/u/link">@link</a> ScheduledExecutorService} which schedules calls to the</li>
<li>{<a class="mention" href="/u/link">@link</a> <span class="hashtag">#run</span>()} method.<br>
*/<br>
private final ScheduledExecutorService service = Executors.newSingleThreadScheduledExecutor();</li>
</ul>
<p>/**</p>
<ul>
<li>A list of active tasks.<br>
*/<br>
private final List tasks = new ArrayList();</li>
</ul>
<p>/**</p>
<ul>
<li>A queue of tasks that still need to be added.<br>
*/<br>
private final Queue newTasks = new ArrayDeque();</li>
</ul>
<p>/**</p>
<ul>
<li>Creates and starts the task scheduler.<br>
*/<br>
public TaskScheduler() {<br>
service.scheduleAtFixedRate(this, 0, TIME_PERIOD, TimeUnit.MILLISECONDS);<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Stops the task scheduler.<br>
*/<br>
public void terminate() {<br>
service.shutdown();<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>
<p>Schedules the specified task. If this scheduler has been stopped with</p>
</li>
<li>
<p>the {<a class="mention" href="/u/link">@link</a> <span class="hashtag">#terminate</span>()} method the task will not be executed or</p>
</li>
<li>
<p>garbage-collected.</p>
</li>
<li>
<p><a class="mention" href="/u/param">@param</a> task The task to schedule.<br>
*/<br>
public void schedule(final Task task) {<br>
if (task.isImmediate()) {<br>
service.execute(new Runnable() {<br>
<a class="mention" href="/u/override">@Override</a><br>
public void run() {<br>
task.execute();<br>
}<br>
});<br>
}</p>
<p>synchronized (newTasks) {<br>
newTasks.add(task);<br>
}<br>
}</p>
</li>
</ul>
<p>/**</p>
<ul>
<li>
<p>This method is automatically called every cycle by the</p>
</li>
<li>
<p>{<a class="mention" href="/u/link">@link</a> ScheduledExecutorService} and executes, adds and removes</p>
</li>
<li>
<p>{<a class="mention" href="/u/link">@link</a> Task}s. It should not be called directly as this will lead to</p>
</li>
<li>
<p>concurrency issues and inaccurate time-keeping.<br>
*/<br>
<a class="mention" href="/u/override">@Override</a><br>
public void run() {<br>
synchronized (newTasks) {<br>
Task task;<br>
while ((task = newTasks.poll()) != null)<br>
tasks.add(task);<br>
}</p>
<p>for (Iterator it = tasks.iterator(); it.hasNext(); ) {<br>
Task task = it.next();<br>
try {<br>
if (!task.tick())<br>
it.remove();<br>
} catch (Throwable t) {<br>
logger.log(Level.SEVERE, “Exception during task execution.”, t);<br>
}<br>
}<br>
}</p>
</li>
</ul>
</li>
</ul>
<p>}[/code]</p>
<p>Then create a new variable in your Server class.</p>
<p>[code]	/**<br>
* The task scheduler.<br>
*/<br>
private static final TaskScheduler scheduler = new TaskScheduler();</p>
<pre><code>/**
 * Gets the task scheduler.
 * @return The task scheduler.
 */
public static TaskScheduler getTaskScheduler() {
	return scheduler;
}[/code]
</code></pre>
<p>Modifiy Main() method.</p>
<p><code>		scheduler.schedule(new Task() {
			@Override
			protected void execute() {</code></p>
<p>Remember, if you want to stop an Event always use Stop().</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/18</link>
        <pubDate>Sat, 16 Jul 2011 17:30:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-403517-18</guid>
        <source url="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517.rss">[PI] Cycle Events System</source>
      </item>
      <item>
        <title>[PI] Cycle Events System</title>
        <dc:creator><![CDATA[@asshole_rule asshole_rule]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/asshole_rule">@asshole_rule</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="1" data-topic="404530">
<div class="title">
<div class="quote-controls"></div>
</div>
<blockquote>
<p>Graham’s cycle-based task manager is better than this. :3</p>
</blockquote>
</aside>
<p>who is dis gram u speke of?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/17</link>
        <pubDate>Sat, 16 Jul 2011 17:23:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-403517-17</guid>
        <source url="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517.rss">[PI] Cycle Events System</source>
      </item>
      <item>
        <title>[PI] Cycle Events System</title>
        <dc:creator><![CDATA[@Uncalled Uncalled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/uncalled">@Uncalled</a> wrote:</p>
          <blockquote>
              <p>omfg ok <img src="https://forum.moparisthebest.com/images/emoji/twitter/frowning.png?v=5" title=":frowning:" class="emoji" alt=":frowning:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/16</link>
        <pubDate>Sat, 16 Jul 2011 12:41:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-403517-16</guid>
        <source url="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517.rss">[PI] Cycle Events System</source>
      </item>
      <item>
        <title>[PI] Cycle Events System</title>
        <dc:creator><![CDATA[@asshole_rule asshole_rule]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/asshole_rule">@asshole_rule</a> wrote:</p>
          <blockquote>
              <p>[quote=“Uncalled, post:14, topic:403517”][quote author=asshole_rule link=topic=500576.msg3661735#msg3661735 date=1310399204]</p>
<aside class="quote">
<blockquote>
<p>dud dis iz sio gey rep–</p>
</blockquote>
</aside>
<p>ty<br>
[/quote]Yw[/quote]</p>
<p>plz gtfo my thread u spammer!!!11!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/15</link>
        <pubDate>Fri, 15 Jul 2011 14:49:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-403517-15</guid>
        <source url="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517.rss">[PI] Cycle Events System</source>
      </item>
      <item>
        <title>[PI] Cycle Events System</title>
        <dc:creator><![CDATA[@Uncalled Uncalled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/uncalled">@Uncalled</a> wrote:</p>
          <blockquote>
              <p>[quote=“asshole_rule, post:13, topic:403517”][quote author=Uncalled link=topic=500576.msg3661331#msg3661331 date=1310364803]<br>
dud dis iz sio gey rep–<br>
[/quote]</p>
<p>ty[/quote]Yw</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/14</link>
        <pubDate>Fri, 15 Jul 2011 12:52:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-403517-14</guid>
        <source url="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517.rss">[PI] Cycle Events System</source>
      </item>
      <item>
        <title>[PI] Cycle Events System</title>
        <dc:creator><![CDATA[@asshole_rule asshole_rule]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/asshole_rule">@asshole_rule</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="11" data-topic="403517">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/uncalled/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Uncalled:</div>
<blockquote>
<p>dud dis iz sio gey rep–</p>
</blockquote>
</aside>
<p>ty</p>
<aside class="quote quote-modified" data-post="12" data-topic="403517">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/kingdomkey01/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> kingdomkey01:</div>
<blockquote>
<p>Make sure you stop the event because if you leave it running too long, it’ll cause memory leaks, higher CPU usage and eventually OutOfMemoryError crashes.</p>
</blockquote>
</aside>
<p>This exactly. That’s why I included stop in the example.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/13</link>
        <pubDate>Mon, 11 Jul 2011 15:46:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-403517-13</guid>
        <source url="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517.rss">[PI] Cycle Events System</source>
      </item>
      <item>
        <title>[PI] Cycle Events System</title>
        <dc:creator><![CDATA[@kingdomkey01 kingdomkey01]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/kingdomkey01">@kingdomkey01</a> wrote:</p>
          <blockquote>
              <p>Make sure you stop the event because if you leave it running too long, it’ll cause memory leaks, higher CPU usage and eventually OutOfMemoryError crashes.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/12</link>
        <pubDate>Mon, 11 Jul 2011 08:27:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-403517-12</guid>
        <source url="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517.rss">[PI] Cycle Events System</source>
      </item>
      <item>
        <title>[PI] Cycle Events System</title>
        <dc:creator><![CDATA[@Uncalled Uncalled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/uncalled">@Uncalled</a> wrote:</p>
          <blockquote>
              <p>dud dis iz sio gey rep–</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/11</link>
        <pubDate>Mon, 11 Jul 2011 06:13:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-403517-11</guid>
        <source url="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517.rss">[PI] Cycle Events System</source>
      </item>
      <item>
        <title>[PI] Cycle Events System</title>
        <dc:creator><![CDATA[@asshole_rule asshole_rule]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/asshole_rule">@asshole_rule</a> wrote:</p>
          <blockquote>
              <p>[size=18pt]NIGGA U CANT EVEN SEE ME[/size]</p>
<p>i nevar take it back</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/10</link>
        <pubDate>Mon, 11 Jul 2011 04:26:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-403517-10</guid>
        <source url="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517.rss">[PI] Cycle Events System</source>
      </item>
      <item>
        <title>[PI] Cycle Events System</title>
        <dc:creator><![CDATA[@OmgItsShane Shane]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/omgitsshane">@OmgItsShane</a> wrote:</p>
          <blockquote>
              <p>[quote=“asshole_rule, post:8, topic:403517”][quote author=OmgItsShane link=topic=500576.msg3661155#msg3661155 date=1310355344]<br>
oh dis iz niace<br>
[/quote]</p>
<p>Shut up, you can’t even work it.[/quote]<br>
I love you &lt;3  <img src="https://forum.moparisthebest.com/images/emoji/twitter/expressionless.png?v=5" title=":expressionless:" class="emoji" alt=":expressionless:"> (noz homo)</p>
<p>Dat wuz mean say srry or i fnd yu</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/9</link>
        <pubDate>Mon, 11 Jul 2011 03:37:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-403517-9</guid>
        <source url="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517.rss">[PI] Cycle Events System</source>
      </item>
      <item>
        <title>[PI] Cycle Events System</title>
        <dc:creator><![CDATA[@asshole_rule asshole_rule]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/asshole_rule">@asshole_rule</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="7" data-topic="403517">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/omgitsshane/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> OmgItsShane:</div>
<blockquote>
<p>oh dis iz niace</p>
</blockquote>
</aside>
<p>Shut up, you can’t even work it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/8</link>
        <pubDate>Mon, 11 Jul 2011 03:36:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-403517-8</guid>
        <source url="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517.rss">[PI] Cycle Events System</source>
      </item>
      <item>
        <title>[PI] Cycle Events System</title>
        <dc:creator><![CDATA[@OmgItsShane Shane]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/omgitsshane">@OmgItsShane</a> wrote:</p>
          <blockquote>
              <p>oh dis iz niace</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/7</link>
        <pubDate>Mon, 11 Jul 2011 03:35:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-403517-7</guid>
        <source url="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517.rss">[PI] Cycle Events System</source>
      </item>
      <item>
        <title>[PI] Cycle Events System</title>
        <dc:creator><![CDATA[@asshole_rule asshole_rule]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/asshole_rule">@asshole_rule</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="5" data-topic="403517">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/loveandpower/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Loveandpower:</div>
<blockquote>
<p>Wasn’t this in project fatality?</p>
</blockquote>
</aside>
<p>Yea. They used it for like, 2 things…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/6</link>
        <pubDate>Mon, 11 Jul 2011 03:30:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-403517-6</guid>
        <source url="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517.rss">[PI] Cycle Events System</source>
      </item>
      <item>
        <title>[PI] Cycle Events System</title>
        <dc:creator><![CDATA[@Loveandpower Loveandpower]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/loveandpower">@Loveandpower</a> wrote:</p>
          <blockquote>
              <p>Wasn’t this in project fatality?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/5</link>
        <pubDate>Mon, 11 Jul 2011 02:59:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-403517-5</guid>
        <source url="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517.rss">[PI] Cycle Events System</source>
      </item>
      <item>
        <title>[PI] Cycle Events System</title>
        <dc:creator><![CDATA[@genoarch genoarch]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/genoarch">@genoarch</a> wrote:</p>
          <blockquote>
              <p>hey im no pro haha i barely know this stuff but im great at figuring it out <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/4</link>
        <pubDate>Mon, 11 Jul 2011 02:54:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-403517-4</guid>
        <source url="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517.rss">[PI] Cycle Events System</source>
      </item>
      <item>
        <title>[PI] Cycle Events System</title>
        <dc:creator><![CDATA[@asshole_rule asshole_rule]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/asshole_rule">@asshole_rule</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="403517">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/genoarch/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> genoarch:</div>
<blockquote>
<p>THAT WAS ME <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"> haha thanks</p>
</blockquote>
</aside>
<p>Yep, loling at my fucked up conventions on the last example.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/3</link>
        <pubDate>Mon, 11 Jul 2011 02:53:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-403517-3</guid>
        <source url="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517.rss">[PI] Cycle Events System</source>
      </item>
      <item>
        <title>[PI] Cycle Events System</title>
        <dc:creator><![CDATA[@genoarch genoarch]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/genoarch">@genoarch</a> wrote:</p>
          <blockquote>
              <p>THAT WAS ME <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"> haha thanks</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/2</link>
        <pubDate>Mon, 11 Jul 2011 02:47:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-403517-2</guid>
        <source url="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517.rss">[PI] Cycle Events System</source>
      </item>
      <item>
        <title>[PI] Cycle Events System</title>
        <dc:creator><![CDATA[@asshole_rule asshole_rule]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/asshole_rule">@asshole_rule</a> wrote:</p>
          <blockquote>
              <p>[center]Basically, this is a better way to handle events in the Project Insanity source, instead of that crappy even system being used.</p>
<p>First off, go into your events (server&lt;event) folder and add these classes[/center]</p>
<p>[code]package server.event;<br>
/*<br>
*<span class="mention">@author</span> thispixel<br>
*/<br>
public abstract class CycleEvent {</p>
<pre><code>/**
 * Code which should be ran when the event is executed
 * 
 * @param container
 */

public abstract void execute(CycleEventContainer container);

/**
 * Code which should be ran when the event stops
 */
public abstract void stop();
</code></pre>
<p>}[/code]</p>
<p>also</p>
<p>[code]package server.event;</p>
<p>/**</p>
<ul>
<li>The wrapper for our event</li>
<li>
</li>
<li>
<span class="mention">@author</span> thispixel *<br>
*/</li>
</ul>
<p>public class CycleEventContainer {</p>
<pre><code>/**
 * Event owner
 */
private Object owner;

/**
 * Is the event running or not
 */
private boolean isRunning;

/**
 * The amount of cycles per event execution
 */	
private int tick;

/**
 * The actual event
 */
private CycleEvent event;

/**
 * The current amount of cycles passed
 */
private int cyclesPassed;

/**
 * Sets the event containers details
 * 
 * @param owner
 *            , the owner of the event
 * @param event
 *            , the actual event to run
 * @param tick
 *            , the cycles between execution of the event
 */
public CycleEventContainer(Object owner, CycleEvent event, int tick) {
	this.owner = owner;
	this.event = event;
	this.isRunning = true;
	this.cyclesPassed = 0;
	this.tick = tick;
}

/**
 * Execute the contents of the event
 */
public void execute() {
	event.execute(this);
}

/**
 * Stop the event from running
 */
public void stop() {
	isRunning = false;
	event.stop();
}

/**
 * Does the event need to be ran?
 * 
 * @return true yes false no
 */
public boolean needsExecution() {
	if (++this.cyclesPassed &gt;= tick) {
		this.cyclesPassed = 0;
		return true;
	}
	return false;
}

/**
 * Returns the owner of the event
 * 
 * @return
 */
public Object getOwner() {
	return owner;
}

/**
 * Is the event running?
 * 
 * @return true yes false no
 */
public boolean isRunning() {
	return isRunning;
}

/**
 * Set the amount of cycles between the execution
 * 
 * @param tick
 */
public void setTick(int tick) {
	this.tick = tick;
}
</code></pre>
<p>}[/code]</p>
<p>and lastly</p>
<p>[code]package server.event;</p>
<p>import java.util.ArrayList;<br>
import java.util.List;</p>
<p>/**</p>
<ul>
<li>Handles all of our cycle based events</li>
<li>
</li>
<li>
<span class="mention">@author</span> thispixel</li>
<li>
</li>
</ul>
<p>*/<br>
public class CycleEventHandler {</p>
<pre><code>/**
 * The instance of this class
 */
private static CycleEventHandler instance;

/**
 * Returns the instance of this class
 * 
 * @return
 */
public static CycleEventHandler getSingleton() {
	if (instance == null) {
		instance = new CycleEventHandler();
	}
	return instance;
}

/**
 * Holds all of our events currently being ran
 */
private List&lt;CycleEventContainer&gt; events;

/**
 * Creates a new instance of this class
 */
public CycleEventHandler() {
	this.events = new ArrayList&lt;CycleEventContainer&gt;();
}

/**
 * Add an event to the list
 * 
 * @param owner
 * @param event
 * @param cycles
 */
public void addEvent(Object owner, CycleEvent event, int cycles) {
	this.events.add(new CycleEventContainer(owner, event, cycles));
}

/**
 * Execute and remove events
 */
public void process() {
	List&lt;CycleEventContainer&gt; eventsCopy = new ArrayList&lt;CycleEventContainer&gt;(events);
	List&lt;CycleEventContainer&gt; remove = new ArrayList&lt;CycleEventContainer&gt;();
	for (CycleEventContainer c : eventsCopy) {
		if (c != null) {
			if (c.needsExecution())
				c.execute();
			if (!c.isRunning()) {
				remove.add(c);
			}
		}
	}
	for (CycleEventContainer c : remove) {
		events.remove(c);
	}
}

/**
 * Returns the amount of events currently running
 * @return amount
 */
public int getEventsCount() {
	return this.events.size();
}

/**
 * Stops all events which are being ran by the given owner
 * @param owner
 */
public void stopEvents(Object owner) {
	for (CycleEventContainer c : events) {
		if(c.getOwner() == owner) {
			c.stop();
		}
	}
}
</code></pre>
<p>}[/code]</p>
<p>Next, go to server.java and add</p>
<pre><code class="lang-auto">import server.event.CycleEventHandler;[/code]

With the rest of your imports
and above
[code]playerHandler.process();[/code]
add
[code]CycleEventHandler.getSingleton().process();[/code]

next, go into the client class and import
[code]import server.event.CycleEventHandler;[/code]

then find
[code]outStream.createFrame(109);[/code]
and [B]above that add[/b]
[code]CycleEventHandler.getSingleton().stopEvents(this);</code></pre>
<p>This is how you use events</p>
<p><code>CycleEventHandler.getSingleton().addEvent(this, new CycleEvent() {
	@Override
	public void execute(CycleEventContainer c) {
		Server.zombieCaves.spawnNextZombies((Client) Server.playerHandler.players[playerId]);
		c.stop();
	}
	@Override
		public void stop() {
			// ANYTHING YOU WANT TO DO WHEN THE EVENT STOPS, YOU CAN
			// LEAVE IT EMPTY
		}
}, 11);</code></p>
<p>[center]All credits to:</p>
<p>Graham<br>
thispixel<br>
dagenham<br>
sorry if i missed you[/center]</p>
<p>Sorry the tutorial is pretty shitty <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"> I’m not good at making them. Again, this isn’t my code, it’s just a better way to handle events and I saw someone request it in the help section.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-cycle-events-system/403517/1</link>
        <pubDate>Mon, 11 Jul 2011 02:44:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-403517-1</guid>
        <source url="https://forum.moparisthebest.com/t/pi-cycle-events-system/403517.rss">[PI] Cycle Events System</source>
      </item>
  </channel>
</rss>
