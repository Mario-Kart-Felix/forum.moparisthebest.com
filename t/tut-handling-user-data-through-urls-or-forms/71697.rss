<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[TUT] Handling user data through URLs or Forms</title>
    <link>https://forum.moparisthebest.com/t/tut-handling-user-data-through-urls-or-forms/71697</link>
    <description>In this tutorial I&#39;ll go over handling user data, through URLs and a form

Contents:
[*] Processing user data through URLs
[*] Processing user data through forms

[u]Processing user data through URLs[/u]
This is one of the easiest ways to process user-submitted data.
This way of processing user data uses URLs, they always look something like this:
[code]http://site.com/index.php?page=view&amp;id=123[/code]

In this URL, we&#39;re calling the file index.php, but after it, it has a question mark(?) followed by page=view&amp;id=123
The question mark(?) is used in this type of handling user submitted data,everything after it are the keys and values for the array they&#39;re stored in, $_GET
If you look at the URL page AND view are the keys for the array, if you want to get the value of them, you use:

[php]&lt;?php
echo $_GET[&#39;page&#39;]; #--&gt; view
echo $_GET[&#39;id&#39;];   #--&gt; 123
?&gt;[/php]

The values of $_GET[&#39;page&#39;] and $_GET[&#39;id&#39;] can be read from the URL it&#39;s the text behind the =-sign
The ampersand(&amp;) allows you to add more $_GET entries, so somebody could have an URL like this:
[code]http://some.site.com/index.php?page=view&amp;act=modify&amp;id=1024&amp;sessid=1sadf8ysdhfsda[/code]

To show all the $_GET vars used, use this snippet of code:

[php]&lt;?php
while(list($key, $val) = each($_GET)){
	echo &quot;$key =&gt; $val&lt;br /&gt;&quot;;
}
?&gt;[/php]

[u]Processing user data through forms[/u]
This is, imo, the harder way of processing data, but it&#39;s also safer when using the POST method, as it is harder to exploit.
To use this, we first need a form

[code]&lt;form action=&quot;process.php&quot; method=&quot;post&quot;&gt;
name: &lt;input type=&quot;text&quot; id=&quot;user&quot; /&gt;&lt;br /&gt;
password: &lt;input type=&quot;password&quot; id=&quot;pass&quot; /&gt;&lt;br /&gt;
&lt;input type=&quot;submit&quot; id=&quot;submit&quot; /&gt;
&lt;/form&gt;[/code]
Alright, let&#39;s take a quick look at this.

In the form tag, we just defined the page to call for processing data, process.php, and we&#39;re using the POST method.
In EVERY input tag you want to use, you need to specify an id, as shown above.
ALWAYS give the submit button an id, because we first want to check if the form is submitted :)

So now, we want to process the data.
First of all, we need to check if the submit button was clicked, do it like this:
[php]&lt;?php
if(isset($_POST[&#39;submit&#39;])) {
//form processing here
}[/php]

Now, we want to escape the whole POST array for potential dangerous exploits
I use something along the lines of this:
[php]	foreach($_POST as $key =&gt; $val) {
		$_POST[$key] = htmlentities($val);
	}[/php]

Now, we want to process the POST data, which you can probably handle on your own, but I&#39;ll add the same thing as we did in the URL part.
[php]	while(list($key, $val) = each($_POST)){
		echo &quot;$key =&gt; $val&lt;br /&gt;&quot;;
	}[/php]

Now, the only thing left to do is adding the part to do when the submit button hasn&#39;t been pushed.
[php]else {
	header(&quot;Location: form.php&quot;);
}
?&gt;[/php]

This would be the complete code:
[php]if(isset($_POST[&#39;submit&#39;])) {
	foreach($_POST as $key =&gt; $val) {
		$_POST[$key] = htmlentities($val);
	}
	while(list($key, $val) = each($_POST)){
		echo &quot;$key =&gt; $val&lt;br /&gt;&quot;;
	}
}
else {
	header(&quot;Location: form.php&quot;);
}[/php]

You can also use this method for $_GET, but i don&#39;t recommend it as it is less secure (imagine a login system using this, others could see somebody&#39;s password).
To do this, you need to replace every POST with GET.

You can also use a single file to process a form, it would look like this: 
[php]&lt;?php
if(isset($_POST[&#39;submit&#39;])) {
	foreach($_POST as $key =&gt; $val) {
		$_POST[$key] = htmlentities($val);
	}
	while(list($key, $val) = each($_POST)){
		echo &quot;$key =&gt; $val&lt;br /&gt;&quot;;
	}
}
else {
//using heredoc, you can easily use HTML
echo &lt;&lt;&lt;HTML
&lt;form action=&quot;process.php&quot; method=&quot;post&quot;&gt;
name: &lt;input type=&quot;text&quot; id=&quot;user&quot; name=&quot;user&quot; /&gt;&lt;br /&gt;
password: &lt;input type=&quot;password&quot; id=&quot;pass&quot; name=&quot;pass&quot; /&gt;&lt;br /&gt;
&lt;input type=&quot;submit&quot; id=&quot;submit&quot; name=&quot;submit&quot; value=&quot;submit&quot; /&gt;
&lt;/form&gt;
HTML;
}
?&gt;[/php]</description>
    
    <lastBuildDate>Sun, 01 Apr 2007 16:03:03 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/tut-handling-user-data-through-urls-or-forms/71697.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[TUT] Handling user data through URLs or Forms</title>
        <dc:creator><![CDATA[@sppt sppt]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sppt">@sppt</a> wrote:</p>
          <blockquote>
              <p>[quote=“Cabby, post:4, topic:71697”]Wow, Thats all I have to say… Wow…</p>
<p>Seriously though… Where do you find this stuff :)[/quote]<br>
my head i think  <img src="https://forum.moparisthebest.com/images/emoji/twitter/expressionless.png?v=6" title=":expressionless:" class="emoji" alt=":expressionless:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tut-handling-user-data-through-urls-or-forms/71697/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tut-handling-user-data-through-urls-or-forms/71697/5</link>
        <pubDate>Sun, 01 Apr 2007 16:03:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-71697-5</guid>
        <source url="https://forum.moparisthebest.com/t/tut-handling-user-data-through-urls-or-forms/71697.rss">[TUT] Handling user data through URLs or Forms</source>
      </item>
      <item>
        <title>[TUT] Handling user data through URLs or Forms</title>
        <dc:creator><![CDATA[@Cabby Cabby]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cabby">@Cabby</a> wrote:</p>
          <blockquote>
              <p>Wow, Thats all I have to say… Wow…</p>
<p>Seriously though… Where do you find this stuff <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tut-handling-user-data-through-urls-or-forms/71697/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tut-handling-user-data-through-urls-or-forms/71697/4</link>
        <pubDate>Sun, 01 Apr 2007 15:07:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-71697-4</guid>
        <source url="https://forum.moparisthebest.com/t/tut-handling-user-data-through-urls-or-forms/71697.rss">[TUT] Handling user data through URLs or Forms</source>
      </item>
      <item>
        <title>[TUT] Handling user data through URLs or Forms</title>
        <dc:creator><![CDATA[@Starblaster100 Starblaster100]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/starblaster100">@Starblaster100</a> wrote:</p>
          <blockquote>
              <p>Amazing <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=6" title=":smiley:" class="emoji" alt=":smiley:"><br>
Thanks for the tut</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tut-handling-user-data-through-urls-or-forms/71697/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tut-handling-user-data-through-urls-or-forms/71697/3</link>
        <pubDate>Wed, 28 Mar 2007 02:28:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-71697-3</guid>
        <source url="https://forum.moparisthebest.com/t/tut-handling-user-data-through-urls-or-forms/71697.rss">[TUT] Handling user data through URLs or Forms</source>
      </item>
      <item>
        <title>[TUT] Handling user data through URLs or Forms</title>
        <dc:creator><![CDATA[@N00b1 N00b1]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/n00b1">@N00b1</a> wrote:</p>
          <blockquote>
              <p>sweet i made one if i knew that you made one i wouldn’t have but mine is more for newer people and  i didn’t know about the bb code for php <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=6" title=":smiley:" class="emoji" alt=":smiley:"> thanks</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tut-handling-user-data-through-urls-or-forms/71697/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tut-handling-user-data-through-urls-or-forms/71697/2</link>
        <pubDate>Wed, 28 Mar 2007 01:21:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-71697-2</guid>
        <source url="https://forum.moparisthebest.com/t/tut-handling-user-data-through-urls-or-forms/71697.rss">[TUT] Handling user data through URLs or Forms</source>
      </item>
      <item>
        <title>[TUT] Handling user data through URLs or Forms</title>
        <dc:creator><![CDATA[@sppt sppt]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sppt">@sppt</a> wrote:</p>
          <blockquote>
              <p>In this tutorial I’ll go over handling user data, through URLs and a form</p>
<p>Contents:<br>
[<em>] Processing user data through URLs<br>
[</em>] Processing user data through forms</p>
<p><span class="bbcode-u">Processing user data through URLs</span><br>
This is one of the easiest ways to process user-submitted data.<br>
This way of processing user data uses URLs, they always look something like this:</p>
<pre><code class="lang-auto">http://site.com/index.php?page=view&amp;id=123</code></pre>
<p>In this URL, we’re calling the file index.php, but after it, it has a question mark(?) followed by page=view&amp;id=123<br>
The question mark(?) is used in this type of handling user submitted data,everything after it are the keys and values for the array they’re stored in, $_GET<br>
If you look at the URL page AND view are the keys for the array, if you want to get the value of them, you use:</p>
<p>[php]&lt;?php<br>
echo $_GET[‘page’]; #–&gt; view<br>
echo $_GET[‘id’];   #–&gt; 123<br>
?&gt;[/php]</p>
<p>The values of $_GET[‘page’] and $_GET[‘id’] can be read from the URL it’s the text behind the =-sign<br>
The ampersand(&amp;) allows you to add more $_GET entries, so somebody could have an URL like this:</p>
<pre><code class="lang-auto">http://some.site.com/index.php?page=view&amp;act=modify&amp;id=1024&amp;sessid=1sadf8ysdhfsda</code></pre>
<p>To show all the $_GET vars used, use this snippet of code:</p>
<p>[php]&lt;?php<br>
while(list($key, $val) = each($_GET)){<br>
echo “$key =&gt; $val<br>”;<br>
}<br>
?&gt;[/php]</p>
<p><span class="bbcode-u">Processing user data through forms</span><br>
This is, imo, the harder way of processing data, but it’s also safer when using the POST method, as it is harder to exploit.<br>
To use this, we first need a form</p>
<p>[code]<br>
name: <br><br>
password: <br><br>
</p>
[/code]
Alright, let's take a quick look at this.
<p>In the form tag, we just defined the page to call for processing data, process.php, and we’re using the POST method.<br>
In EVERY input tag you want to use, you need to specify an id, as shown above.<br>
ALWAYS give the submit button an id, because we first want to check if the form is submitted <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>So now, we want to process the data.<br>
First of all, we need to check if the submit button was clicked, do it like this:<br>
[php]&lt;?php<br>
if(isset($_POST[‘submit’])) {<br>
//form processing here<br>
}[/php]</p>
<p>Now, we want to escape the whole POST array for potential dangerous exploits<br>
I use something along the lines of this:<br>
[php]	foreach($_POST as $key =&gt; $val) {<br>
$_POST[$key] = htmlentities($val);<br>
}[/php]</p>
<p>Now, we want to process the POST data, which you can probably handle on your own, but I’ll add the same thing as we did in the URL part.<br>
[php]	while(list($key, $val) = each($_POST)){<br>
echo “$key =&gt; $val<br>”;<br>
}[/php]</p>
<p>Now, the only thing left to do is adding the part to do when the submit button hasn’t been pushed.<br>
[php]else {<br>
header(“Location: form.php”);<br>
}<br>
?&gt;[/php]</p>
<p>This would be the complete code:<br>
[php]if(isset($_POST[‘submit’])) {<br>
foreach($_POST as $key =&gt; $val) {<br>
$_POST[$key] = htmlentities($val);<br>
}<br>
while(list($key, $val) = each($_POST)){<br>
echo “$key =&gt; $val<br>”;<br>
}<br>
}<br>
else {<br>
header(“Location: form.php”);<br>
}[/php]</p>
<p>You can also use this method for $_GET, but i don’t recommend it as it is less secure (imagine a login system using this, others could see somebody’s password).<br>
To do this, you need to replace every POST with GET.</p>
<p>You can also use a single file to process a form, it would look like this:<br>
[php]&lt;?php<br>
if(isset($_POST[‘submit’])) {<br>
foreach($_POST as $key =&gt; $val) {<br>
$_POST[$key] = htmlentities($val);<br>
}<br>
while(list($key, $val) = each($_POST)){<br>
echo “$key =&gt; $val<br>”;<br>
}<br>
}<br>
else {<br>
//using heredoc, you can easily use HTML<br>
echo &lt;&lt;&lt;HTML</p>

name: <br>
password: <br>


HTML;
}
?&gt;[/php]
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tut-handling-user-data-through-urls-or-forms/71697/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tut-handling-user-data-through-urls-or-forms/71697/1</link>
        <pubDate>Wed, 28 Mar 2007 00:30:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-71697-1</guid>
        <source url="https://forum.moparisthebest.com/t/tut-handling-user-data-through-urls-or-forms/71697.rss">[TUT] Handling user data through URLs or Forms</source>
      </item>
  </channel>
</rss>
