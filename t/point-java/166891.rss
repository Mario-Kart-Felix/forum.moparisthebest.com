<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Point.java</title>
    <link>https://forum.moparisthebest.com/t/point-java/166891</link>
    <description>[code]import java.util.HashMap;
import java.util.Map;

/**
 * Immutable class representing a Point on the game.
 */
public final class Point {
	private static final PointCache pointCache;
	private int[] absolute, mapRegion, local;

	/**
	 * @param x the absolute x coordinate
     * @param y the absolute y coordinate
     * @return a new Point object for the specified coordinates.
     */
	public static Point location(int x, int y) {
		if (x &lt; 0 || y &lt; 0) {
			throw new IllegalArgumentException(&quot;Point may not contain non negative values x:&quot; + x + &quot; y:&quot; + y);
		}
		Point point = pointCache.getPoint(hashCode(x, y));
		if(point == null)
			point = new Point(x, y);
		return point;
	}

	private Point(int x, int y) {
		this.absolute = new int[] { x, y };
		this.local = new int[] { x &gt;&gt; 7, y &gt;&gt; 7 };
		this.mapRegion = new int[] { (absolute[0] - local[0]) / 8, (absolute[1] - local[1]) / 8 };
	}

	/**
	 * @return the absolute x coordinate of this point.
	 */
	public final int getX() {
		return absolute[0];
	}
	
	/**
	 * @return the absolute y coordinate of this point.
	 */
	public final int getY() {
		return absolute[1];
	}
	
	/**
	 * @return the x region coordinate of this point
	 */
	public final int getRegionX() {
		return mapRegion[0];
	}
	
	/**
	 * @return the y region coordinate of this point
	 */
	public final int getRegionY() {
		return mapRegion[1];
	}
	
	/**
	 * @return the local y coordinate of this point
	 */
	public final int getLocalX() {
		return local[0];
	}
	
	/**
	 * @return the local x coordinate of this point
	 */
	public final int getLocalY() {
		return local[1];
	}

	public final boolean equals(Object o) {
		if (o instanceof Point) {
			return java.util.Arrays.equals(((Point)o).absolute, this.absolute);
		}
		return false;
	}

	public int hashCode() {
		return hashCode(absolute[0], absolute[1]);
	}
	
	public String toString() { 
		return &quot;[&quot;+absolute[0]+&quot;,&quot;+absolute[1]+&quot;]&quot;; 
	}
	
	/**
	 * Returns a unique hashcode for a Point (assumes a point can only be represented
	 * by 16 bits).
	 */
	public static int hashCode(int x, int y) {
		return x &lt;&lt; 16 | y;
	}
	
	static {
		pointCache = new PointCache();
	}
	
	/**
	 * Useful little number saves on having to recreate new points for everything.
	 * Saves a bit of memory for the most part, and object creation times.
	 * Not sure if it&#39;s really necessary. Would be worth bencharking it.
	 */
	static class PointCache {
		/**
		 * Stores each point we have created, with the key as it&#39;s hashcode.
		 */
		private Map&lt;Integer,Point&gt; points = new HashMap&lt;Integer,Point&gt;();
		public Point getPoint(int code) {
			return points.get(code);
		}
	}
}[/code]
Figured it might be useful to some people. Instead of messing around with 3 different coordinates, you give your player a Point object, then you can call getRegion or getLocal as required.
So something like when the player logs in..
[code]player.position = Point.location(493, 2994);[/code]
Of course you&#39;ll have to assign a new position when the player moves.</description>
    
    <lastBuildDate>Sun, 23 Dec 2007 04:02:52 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/point-java/166891.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Point.java</title>
        <dc:creator><![CDATA[@varek varek]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/varek">@varek</a> wrote:</p>
          <blockquote>
              <p>That’s true. Doesn’t make this a bad post. I could argue that using anything from java.util isn’t learning.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/point-java/166891/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/point-java/166891/7</link>
        <pubDate>Sun, 23 Dec 2007 04:02:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-166891-7</guid>
        <source url="https://forum.moparisthebest.com/t/point-java/166891.rss">Point.java</source>
      </item>
      <item>
        <title>Point.java</title>
        <dc:creator><![CDATA[@dragonchain dragonchain]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/dragonchain">@dragonchain</a> wrote:</p>
          <blockquote>
              <p>[quote=“varek, post:5, topic:166891”]This isn’t a tutorial, it a useful object to aid development.[/quote]But it’s not learning is it, people should be learning to do it themselfs.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/point-java/166891/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/point-java/166891/6</link>
        <pubDate>Sun, 23 Dec 2007 03:57:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-166891-6</guid>
        <source url="https://forum.moparisthebest.com/t/point-java/166891.rss">Point.java</source>
      </item>
      <item>
        <title>Point.java</title>
        <dc:creator><![CDATA[@varek varek]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/varek">@varek</a> wrote:</p>
          <blockquote>
              <p>This isn’t a tutorial, it a useful object to aid development.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/point-java/166891/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/point-java/166891/5</link>
        <pubDate>Sun, 23 Dec 2007 03:56:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-166891-5</guid>
        <source url="https://forum.moparisthebest.com/t/point-java/166891.rss">Point.java</source>
      </item>
      <item>
        <title>Point.java</title>
        <dc:creator><![CDATA[@dragonchain dragonchain]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/dragonchain">@dragonchain</a> wrote:</p>
          <blockquote>
              <p>Dude, I can tell some people wont get this and this is also in the wrong section. And this is not explaining.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/point-java/166891/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/point-java/166891/4</link>
        <pubDate>Sun, 23 Dec 2007 03:53:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-166891-4</guid>
        <source url="https://forum.moparisthebest.com/t/point-java/166891.rss">Point.java</source>
      </item>
      <item>
        <title>Point.java</title>
        <dc:creator><![CDATA[@varek varek]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/varek">@varek</a> wrote:</p>
          <blockquote>
              <p>It’s lacking in documentation somewhat I’m afraid. Figured it was fairly self explanatory.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/point-java/166891/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/point-java/166891/3</link>
        <pubDate>Sun, 23 Dec 2007 03:50:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-166891-3</guid>
        <source url="https://forum.moparisthebest.com/t/point-java/166891.rss">Point.java</source>
      </item>
      <item>
        <title>Point.java</title>
        <dc:creator><![CDATA[@sebastianm10 sebastianm10]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sebastianm10">@sebastianm10</a> wrote:</p>
          <blockquote>
              <p>Very nice :). Like it</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/point-java/166891/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/point-java/166891/2</link>
        <pubDate>Sun, 23 Dec 2007 01:26:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-166891-2</guid>
        <source url="https://forum.moparisthebest.com/t/point-java/166891.rss">Point.java</source>
      </item>
      <item>
        <title>Point.java</title>
        <dc:creator><![CDATA[@varek varek]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/varek">@varek</a> wrote:</p>
          <blockquote>
              <p>[code]import java.util.HashMap;<br>
import java.util.Map;</p>
<p>/**</p>
<ul>
<li>
<p>Immutable class representing a Point on the game.<br>
*/<br>
public final class Point {<br>
private static final PointCache pointCache;<br>
private int[] absolute, mapRegion, local;</p>
<p>/**</p>
<ul>
<li>
<a class="mention" href="/u/param">@param</a> x the absolute x coordinate</li>
<li>
<a class="mention" href="/u/param">@param</a> y the absolute y coordinate</li>
<li>
<a class="mention" href="/u/return">@return</a> a new Point object for the specified coordinates.<br>
*/<br>
public static Point location(int x, int y) {<br>
if (x &lt; 0 || y &lt; 0) {<br>
throw new IllegalArgumentException(“Point may not contain non negative values x:” + x + " y:" + y);<br>
}<br>
Point point = pointCache.getPoint(hashCode(x, y));<br>
if(point == null)<br>
point = new Point(x, y);<br>
return point;<br>
}</li>
</ul>
<p>private Point(int x, int y) {<br>
this.absolute = new int[] { x, y };<br>
this.local = new int[] { x &gt;&gt; 7, y &gt;&gt; 7 };<br>
this.mapRegion = new int[] { (absolute[0] - local[0]) / 8, (absolute[1] - local[1]) / 8 };<br>
}</p>
<p>/**</p>
<ul>
<li>
<a class="mention" href="/u/return">@return</a> the absolute x coordinate of this point.<br>
*/<br>
public final int getX() {<br>
return absolute[0];<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>
<a class="mention" href="/u/return">@return</a> the absolute y coordinate of this point.<br>
*/<br>
public final int getY() {<br>
return absolute[1];<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>
<a class="mention" href="/u/return">@return</a> the x region coordinate of this point<br>
*/<br>
public final int getRegionX() {<br>
return mapRegion[0];<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>
<a class="mention" href="/u/return">@return</a> the y region coordinate of this point<br>
*/<br>
public final int getRegionY() {<br>
return mapRegion[1];<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>
<a class="mention" href="/u/return">@return</a> the local y coordinate of this point<br>
*/<br>
public final int getLocalX() {<br>
return local[0];<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>
<a class="mention" href="/u/return">@return</a> the local x coordinate of this point<br>
*/<br>
public final int getLocalY() {<br>
return local[1];<br>
}</li>
</ul>
<p>public final boolean equals(Object o) {<br>
if (o instanceof Point) {<br>
return java.util.Arrays.equals(((Point)o).absolute, this.absolute);<br>
}<br>
return false;<br>
}</p>
<p>public int hashCode() {<br>
return hashCode(absolute[0], absolute[1]);<br>
}</p>
<p>public String toString() {<br>
return “[”+absolute[0]+","+absolute[1]+"]";<br>
}</p>
<p>/**</p>
<ul>
<li>Returns a unique hashcode for a Point (assumes a point can only be represented</li>
<li>by 16 bits).<br>
*/<br>
public static int hashCode(int x, int y) {<br>
return x &lt;&lt; 16 | y;<br>
}</li>
</ul>
<p>static {<br>
pointCache = new PointCache();<br>
}</p>
<p>/**</p>
<ul>
<li>Useful little number saves on having to recreate new points for everything.</li>
<li>Saves a bit of memory for the most part, and object creation times.</li>
<li>Not sure if it’s really necessary. Would be worth bencharking it.<br>
<em>/<br>
static class PointCache {<br>
/</em>*
<ul>
<li>Stores each point we have created, with the key as it’s hashcode.<br>
*/<br>
private Map&lt;Integer,Point&gt; points = new HashMap&lt;Integer,Point&gt;();<br>
public Point getPoint(int code) {<br>
return points.get(code);<br>
}<br>
}<br>
}[/code]<br>
Figured it might be useful to some people. Instead of messing around with 3 different coordinates, you give your player a Point object, then you can call getRegion or getLocal as required.<br>
So something like when the player logs in…</li>
</ul>
</li>
</ul>
</li>
</ul>
<pre><code class="lang-auto">player.position = Point.location(493, 2994);</code></pre>
<p>Of course you’ll have to assign a new position when the player moves.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/point-java/166891/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/point-java/166891/1</link>
        <pubDate>Sun, 23 Dec 2007 00:56:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-166891-1</guid>
        <source url="https://forum.moparisthebest.com/t/point-java/166891.rss">Point.java</source>
      </item>
  </channel>
</rss>
