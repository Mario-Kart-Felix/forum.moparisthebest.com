<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Model class refractoring</title>
    <link>https://forum.moparisthebest.com/t/model-class-refractoring/542649</link>
    <description>does anyone understand the purpose of this method?
[code]
public void method479(int i, int j, int x, int y, int z, boolean flag)
	{
		int distance = (int)Math.sqrt(x * x + y * y + z * z);
		int k1 = j * distance &gt;&gt; 8;
		if(anIntArray1634 == null)
		{
			anIntArray1634 = new int[anInt1630];
			anIntArray1635 = new int[anInt1630];
			anIntArray1636 = new int[anInt1630];
		}
		if(super.aClass33Array1425 == null)
		{
			super.aClass33Array1425 = new Class33[anInt1626];
			for(int l1 = 0; l1 &lt; anInt1626; l1++)
				super.aClass33Array1425[l1] = new Class33();

		}
		for(int i2 = 0; i2 &lt; anInt1630; i2++)
		{
			int j2 = anIntArray1631[i2];
			int l2 = anIntArray1632[i2];
			int i3 = anIntArray1633[i2];
			int j3 = anIntArray1627[l2] - anIntArray1627[j2];
			int k3 = anIntArray1628[l2] - anIntArray1628[j2];
			int l3 = anIntArray1629[l2] - anIntArray1629[j2];
			int i4 = anIntArray1627[i3] - anIntArray1627[j2];
			int j4 = anIntArray1628[i3] - anIntArray1628[j2];
			int k4 = anIntArray1629[i3] - anIntArray1629[j2];
			int l4 = k3 * k4 - j4 * l3;
			int i5 = l3 * i4 - k4 * j3;
			int j5;
			for(j5 = j3 * j4 - i4 * k3; l4 &gt; 8192 || i5 &gt; 8192 || j5 &gt; 8192 || l4 &lt; -8192 || i5 &lt; -8192 || j5 &lt; -8192; j5 &gt;&gt;= 1)
			{
				l4 &gt;&gt;= 1;
				i5 &gt;&gt;= 1;
			}

			int k5 = (int)Math.sqrt(l4 * l4 + i5 * i5 + j5 * j5);
			if(k5 &lt;= 0)
				k5 = 1;
			l4 = (l4 * 256) / k5;
			i5 = (i5 * 256) / k5;
			j5 = (j5 * 256) / k5;
			if(anIntArray1637 == null || (anIntArray1637[i2] &amp; 1) == 0)
			{
				Class33 class33_2 = super.aClass33Array1425[j2];
				class33_2.anInt602 += l4;
				class33_2.anInt603 += i5;
				class33_2.anInt604 += j5;
				class33_2.anInt605++;
				class33_2 = super.aClass33Array1425[l2];
				class33_2.anInt602 += l4;
				class33_2.anInt603 += i5;
				class33_2.anInt604 += j5;
				class33_2.anInt605++;
				class33_2 = super.aClass33Array1425[i3];
				class33_2.anInt602 += l4;
				class33_2.anInt603 += i5;
				class33_2.anInt604 += j5;
				class33_2.anInt605++;
			} else
			{
				int l5 = i + (x * l4 + y * i5 + z * j5) / (k1 + k1 / 2);
				anIntArray1634[i2] = method481(anIntArray1640[i2], l5, anIntArray1637[i2]);
			}
		}

		if(flag)
		{
			method480(i, k1, x, y, z);
		} else
		{
			aClass33Array1660 = new Class33[anInt1626];
			for(int k2 = 0; k2 &lt; anInt1626; k2++)
			{
				Class33 class33 = super.aClass33Array1425[k2];
				Class33 class33_1 = aClass33Array1660[k2] = new Class33();
				class33_1.anInt602 = class33.anInt602;
				class33_1.anInt603 = class33.anInt603;
				class33_1.anInt604 = class33.anInt604;
				class33_1.anInt605 = class33.anInt605;
			}

		}
		if(flag)
		{
			method466();
		} else
		{
			method468();
		}
	}




[/code]
i am trying to refractor some more of my client, mainly ItemDef for the moment being and it passes some unnamed values to this method :x i never had any experience in model&#39;s or graphics so any help would be appreciated, thanks (:

other methods called:
[code]
        public void method466() {
		super.modelHeight = 0;
		anInt1650 = 0;
		anInt1651 = 0;
		for(int i = 0; i &lt; anInt1626; i++)
		{
			int j = anIntArray1627[i];
			int k = anIntArray1628[i];
			int l = anIntArray1629[i];
			if(-k &gt; super.modelHeight)
				super.modelHeight = -k;
			if(k &gt; anInt1651)
				anInt1651 = k;
			int i1 = j * j + l * l;
			if(i1 &gt; anInt1650)
				anInt1650 = i1;
		}
		anInt1650 = (int)(Math.sqrt(anInt1650) + 0.98999999999999999D);
		anInt1653 = (int)(Math.sqrt(anInt1650 * anInt1650 + super.modelHeight * super.modelHeight) + 0.98999999999999999D);
		anInt1652 = anInt1653 + (int)(Math.sqrt(anInt1650 * anInt1650 + anInt1651 * anInt1651) + 0.98999999999999999D);
	}




        private void method468() {
		super.modelHeight = 0;
		anInt1650 = 0;
		anInt1651 = 0;
		anInt1646 = 0xf423f;
		anInt1647 = 0xfff0bdc1;
		anInt1648 = 0xfffe7961;
		anInt1649 = 0x1869f;
		for(int j = 0; j &lt; anInt1626; j++)
		{
			int k = anIntArray1627[j];
			int l = anIntArray1628[j];
			int i1 = anIntArray1629[j];
			if(k &lt; anInt1646)
				anInt1646 = k;
			if(k &gt; anInt1647)
				anInt1647 = k;
			if(i1 &lt; anInt1649)
				anInt1649 = i1;
			if(i1 &gt; anInt1648)
				anInt1648 = i1;
			if(-l &gt; super.modelHeight)
				super.modelHeight = -l;
			if(l &gt; anInt1651)
				anInt1651 = l;
			int j1 = k * k + i1 * i1;
			if(j1 &gt; anInt1650)
				anInt1650 = j1;
		}

		anInt1650 = (int)Math.sqrt(anInt1650);
		anInt1653 = (int)Math.sqrt(anInt1650 * anInt1650 + super.modelHeight * super.modelHeight);
			anInt1652 = anInt1653 + (int)Math.sqrt(anInt1650 * anInt1650 + anInt1651 * anInt1651);
	}
[/code]</description>
    
    <lastBuildDate>Tue, 29 Apr 2014 12:35:51 +0000</lastBuildDate>
    <category>Game Development</category>
    <atom:link href="https://forum.moparisthebest.com/t/model-class-refractoring/542649.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Model class refractoring</title>
        <dc:creator><![CDATA[@matzie matzie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/matzie">@matzie</a> wrote:</p>
          <blockquote>
              <p>does anyone understand the purpose of this method?</p>
<pre><code class="lang-auto">public void method479(int i, int j, int x, int y, int z, boolean flag)
	{
		int distance = (int)Math.sqrt(x * x + y * y + z * z);
		int k1 = j * distance &gt;&gt; 8;
		if(anIntArray1634 == null)
		{
			anIntArray1634 = new int[anInt1630];
			anIntArray1635 = new int[anInt1630];
			anIntArray1636 = new int[anInt1630];
		}
		if(super.aClass33Array1425 == null)
		{
			super.aClass33Array1425 = new Class33[anInt1626];
			for(int l1 = 0; l1 &lt; anInt1626; l1++)
				super.aClass33Array1425[l1] = new Class33();

		}
		for(int i2 = 0; i2 &lt; anInt1630; i2++)
		{
			int j2 = anIntArray1631[i2];
			int l2 = anIntArray1632[i2];
			int i3 = anIntArray1633[i2];
			int j3 = anIntArray1627[l2] - anIntArray1627[j2];
			int k3 = anIntArray1628[l2] - anIntArray1628[j2];
			int l3 = anIntArray1629[l2] - anIntArray1629[j2];
			int i4 = anIntArray1627[i3] - anIntArray1627[j2];
			int j4 = anIntArray1628[i3] - anIntArray1628[j2];
			int k4 = anIntArray1629[i3] - anIntArray1629[j2];
			int l4 = k3 * k4 - j4 * l3;
			int i5 = l3 * i4 - k4 * j3;
			int j5;
			for(j5 = j3 * j4 - i4 * k3; l4 &gt; 8192 || i5 &gt; 8192 || j5 &gt; 8192 || l4 &lt; -8192 || i5 &lt; -8192 || j5 &lt; -8192; j5 &gt;&gt;= 1)
			{
				l4 &gt;&gt;= 1;
				i5 &gt;&gt;= 1;
			}

			int k5 = (int)Math.sqrt(l4 * l4 + i5 * i5 + j5 * j5);
			if(k5 &lt;= 0)
				k5 = 1;
			l4 = (l4 * 256) / k5;
			i5 = (i5 * 256) / k5;
			j5 = (j5 * 256) / k5;
			if(anIntArray1637 == null || (anIntArray1637[i2] &amp; 1) == 0)
			{
				Class33 class33_2 = super.aClass33Array1425[j2];
				class33_2.anInt602 += l4;
				class33_2.anInt603 += i5;
				class33_2.anInt604 += j5;
				class33_2.anInt605++;
				class33_2 = super.aClass33Array1425[l2];
				class33_2.anInt602 += l4;
				class33_2.anInt603 += i5;
				class33_2.anInt604 += j5;
				class33_2.anInt605++;
				class33_2 = super.aClass33Array1425[i3];
				class33_2.anInt602 += l4;
				class33_2.anInt603 += i5;
				class33_2.anInt604 += j5;
				class33_2.anInt605++;
			} else
			{
				int l5 = i + (x * l4 + y * i5 + z * j5) / (k1 + k1 / 2);
				anIntArray1634[i2] = method481(anIntArray1640[i2], l5, anIntArray1637[i2]);
			}
		}

		if(flag)
		{
			method480(i, k1, x, y, z);
		} else
		{
			aClass33Array1660 = new Class33[anInt1626];
			for(int k2 = 0; k2 &lt; anInt1626; k2++)
			{
				Class33 class33 = super.aClass33Array1425[k2];
				Class33 class33_1 = aClass33Array1660[k2] = new Class33();
				class33_1.anInt602 = class33.anInt602;
				class33_1.anInt603 = class33.anInt603;
				class33_1.anInt604 = class33.anInt604;
				class33_1.anInt605 = class33.anInt605;
			}

		}
		if(flag)
		{
			method466();
		} else
		{
			method468();
		}
	}



</code></pre>
<p>i am trying to refractor some more of my client, mainly ItemDef for the moment being and it passes some unnamed values to this method :x i never had any experience in modelâ€™s or graphics so any help would be appreciated, thanks (:</p>
<p>other methods called:</p>
<pre><code class="lang-auto">        public void method466() {
		super.modelHeight = 0;
		anInt1650 = 0;
		anInt1651 = 0;
		for(int i = 0; i &lt; anInt1626; i++)
		{
			int j = anIntArray1627[i];
			int k = anIntArray1628[i];
			int l = anIntArray1629[i];
			if(-k &gt; super.modelHeight)
				super.modelHeight = -k;
			if(k &gt; anInt1651)
				anInt1651 = k;
			int i1 = j * j + l * l;
			if(i1 &gt; anInt1650)
				anInt1650 = i1;
		}
		anInt1650 = (int)(Math.sqrt(anInt1650) + 0.98999999999999999D);
		anInt1653 = (int)(Math.sqrt(anInt1650 * anInt1650 + super.modelHeight * super.modelHeight) + 0.98999999999999999D);
		anInt1652 = anInt1653 + (int)(Math.sqrt(anInt1650 * anInt1650 + anInt1651 * anInt1651) + 0.98999999999999999D);
	}




        private void method468() {
		super.modelHeight = 0;
		anInt1650 = 0;
		anInt1651 = 0;
		anInt1646 = 0xf423f;
		anInt1647 = 0xfff0bdc1;
		anInt1648 = 0xfffe7961;
		anInt1649 = 0x1869f;
		for(int j = 0; j &lt; anInt1626; j++)
		{
			int k = anIntArray1627[j];
			int l = anIntArray1628[j];
			int i1 = anIntArray1629[j];
			if(k &lt; anInt1646)
				anInt1646 = k;
			if(k &gt; anInt1647)
				anInt1647 = k;
			if(i1 &lt; anInt1649)
				anInt1649 = i1;
			if(i1 &gt; anInt1648)
				anInt1648 = i1;
			if(-l &gt; super.modelHeight)
				super.modelHeight = -l;
			if(l &gt; anInt1651)
				anInt1651 = l;
			int j1 = k * k + i1 * i1;
			if(j1 &gt; anInt1650)
				anInt1650 = j1;
		}

		anInt1650 = (int)Math.sqrt(anInt1650);
		anInt1653 = (int)Math.sqrt(anInt1650 * anInt1650 + super.modelHeight * super.modelHeight);
			anInt1652 = anInt1653 + (int)Math.sqrt(anInt1650 * anInt1650 + anInt1651 * anInt1651);
	}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/model-class-refractoring/542649/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/model-class-refractoring/542649/1</link>
        <pubDate>Tue, 29 Apr 2014 12:35:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-542649-1</guid>
        <source url="https://forum.moparisthebest.com/t/model-class-refractoring/542649.rss">Model class refractoring</source>
      </item>
  </channel>
</rss>
