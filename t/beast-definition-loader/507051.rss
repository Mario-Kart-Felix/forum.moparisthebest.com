<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Beast definition loader</title>
    <link>https://forum.moparisthebest.com/t/beast-definition-loader/507051</link>
    <description>[B]Code:[/B]
[CODE]package com.runescape.world.entity.beast;

import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.List;

import org.json.JSONArray;
import org.json.JSONObject;

public class BeastDefinition {

	public static final int BEAST_COUNT = 15055;

	private static BeastDefinition[] definitions;

	private final int id;
	private final String name;
	private final String description;
	private final String weakness;
	private final String slayercat;
	private final int deathAnimation;
	private final int attackAnimation;
	private final int size;
	private final int lifepoints;
	private final int level;
	private final int attack;
	private final int magic;
	private final int defence;
	private final int ranged;
	private final boolean poisonous;
	private final boolean attackable;
	private final boolean aggressive;
	private final boolean members;
	private final String[] areas;

	public BeastDefinition(int id, String name, String description, String weakness, String slayercat,
			int deathAnimation, int attackAnimation, int size, int lifepoints, int level, int attack, int magic,
			int defence, int ranged, boolean poisonous, boolean attackable, boolean aggressive, boolean members,
			String[] areas) {
		this.id = id;
		this.name = name;
		this.description = description;
		this.weakness = weakness;
		this.slayercat = slayercat;
		this.deathAnimation = deathAnimation;
		this.attackAnimation = attackAnimation;
		this.size = size;
		this.lifepoints = lifepoints;
		this.level = level;
		this.attack = attack;
		this.magic = magic;
		this.defence = defence;
		this.ranged = ranged;
		this.poisonous = poisonous;
		this.attackable = attackable;
		this.aggressive = aggressive;
		this.members = members;
		this.areas = areas;
	}

	public static BeastDefinition getDefinition(int id) {
		return BeastDefinition.definitions[id];
	}

	public static void loadDefinition(Path path) throws Exception {
		List&lt;String&gt; lines = Files.readAllLines(path, Charset.forName(&quot;UTF-8&quot;));
		BeastDefinition.definitions = new BeastDefinition[BeastDefinition.BEAST_COUNT];

		for (String line : lines) {
			JSONObject rootObject = new JSONObject(line);
			int id = rootObject.getInt(&quot;id&quot;);
			System.out.println(id);
			String name = rootObject.getString(&quot;name&quot;);
			String description = rootObject.getString(&quot;description&quot;);
			String weakness = null;
			if (line.contains(&quot;weakness&quot; + &#39;&quot;&#39;)) {
				weakness = rootObject.getString(&quot;weakness&quot;);
			}
			String slayercat = null;
			if (line.contains(&quot;slayercat&quot;)) {
				slayercat = rootObject.getString(&quot;slayercat&quot;);
			}
			int deathAnimation = -1;
			int attackAnimation = -1;
			if (line.contains(&quot;animations&quot;)) {
				JSONObject animations = rootObject.getJSONObject(&quot;animations&quot;);
				if (!animations.isNull(&quot;death&quot;)) {
					deathAnimation = animations.getInt(&quot;death&quot;);
				}
				if (!animations.isNull(&quot;attack&quot;)) {
					attackAnimation = animations.getInt(&quot;attack&quot;);
				}
			}
			int size = rootObject.getInt(&quot;size&quot;);
			int lifepoints = -1;
			int level = -1;
			int attack = -1;
			int magic = -1;
			int defence = -1;
			int ranged = -1;
			if (line.contains(&quot;lifepoints&quot;)) {
				lifepoints = rootObject.getInt(&quot;lifepoints&quot;);
				level = rootObject.getInt(&quot;level&quot;);
				attack = rootObject.getInt(&quot;attack&quot;);
				magic = rootObject.getInt(&quot;magic&quot;);
				defence = rootObject.getInt(&quot;defence&quot;);
				ranged = rootObject.getInt(&quot;ranged&quot;);
			}
			boolean poisonous = rootObject.getBoolean(&quot;poisonous&quot;);
			boolean attackable = rootObject.getBoolean(&quot;attackable&quot;);
			boolean aggressive = rootObject.getBoolean(&quot;aggressive&quot;);
			boolean members = rootObject.getBoolean(&quot;members&quot;);
			String[] areas = null;
			JSONArray areasJSONArray = rootObject.getJSONArray(&quot;areas&quot;);
			if (!areasJSONArray.isNull(0)) {
				areas = new String[areasJSONArray.length()];
				for (int i = 0; i &lt; areasJSONArray.length(); i++) {
					areas[i] = areasJSONArray.getString(i);
				}
			}

			BeastDefinition.definitions[id] = new BeastDefinition(id, name, description, weakness, slayercat,
					deathAnimation, attackAnimation, size, lifepoints, level, attack, magic, defence, ranged,
					poisonous, attackable, aggressive, members, areas);
		}
	}

	public int getId() {
		return id;
	}

	public String getName() {
		return name;
	}

	public String getDescription() {
		return description;
	}

	public String getWeakness() {
		return weakness;
	}

	public String getSlayercat() {
		return slayercat;
	}

	public int getDeathAnimation() {
		return deathAnimation;
	}

	public int getAttackAnimation() {
		return attackAnimation;
	}

	public int getSize() {
		return size;
	}

	public int getLifepoints() {
		return lifepoints;
	}

	public int getLevel() {
		return level;
	}

	public int getAttack() {
		return attack;
	}

	public int getMagic() {
		return magic;
	}

	public int getDefence() {
		return defence;
	}

	public int getRanged() {
		return ranged;
	}

	public boolean isPoisonous() {
		return poisonous;
	}

	public boolean isAttackable() {
		return attackable;
	}

	public boolean isAggressive() {
		return aggressive;
	}

	public boolean isMembers() {
		return members;
	}

	public String[] getAreas() {
		return areas;
	}

	@Override
	public String toString() {
		return id + &quot;:&quot; + name + &quot;:&quot; + description + &quot;:&quot; + weakness + &quot;:&quot; + slayercat + &quot;:&quot; + deathAnimation + &quot;:&quot;
				+ attackAnimation + &quot;:&quot; + size + &quot;:&quot; + lifepoints + &quot;:&quot; + level + &quot;:&quot; + attack + &quot;:&quot; + magic + &quot;:&quot;
				+ defence + &quot;:&quot; + ranged + &quot;:&quot; + poisonous + &quot;:&quot; + attackable + &quot;:&quot; + aggressive + &quot;:&quot; + members + &quot;:&quot;
				+ areas;
	}
}
[/CODE]

[B]Examples usage:[/B]
[CODE]BeastDefinition.loadDefinition(Paths.get(BEAST_DEFINITION_PATH));[/CODE]

[B]Beast definitions:[/B]
[url=http://www.mediafire.com/view/?b4nj3ygdw574bsn]beasts.txt[/url]</description>
    
    <lastBuildDate>Wed, 13 Mar 2013 00:26:38 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/beast-definition-loader/507051.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Beast definition loader</title>
        <dc:creator><![CDATA[@eclipse_rsps eclipse rsps]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/eclipse_rsps">@eclipse_rsps</a> wrote:</p>
          <blockquote>
              <p>[quote=“arham 4, post:2, topic:507051”]Nice job![/quote]ohhhh shi, arham’s got a title  <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/beast-definition-loader/507051/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/beast-definition-loader/507051/7</link>
        <pubDate>Wed, 13 Mar 2013 00:26:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-507051-7</guid>
        <source url="https://forum.moparisthebest.com/t/beast-definition-loader/507051.rss">Beast definition loader</source>
      </item>
      <item>
        <title>Beast definition loader</title>
        <dc:creator><![CDATA[@Cyberus Cyberus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cyberus">@Cyberus</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="5" data-topic="507051">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/christmas_tree/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Christmas_tree:</div>
<blockquote>
<p>Where did you get that dump.</p>
</blockquote>
</aside>
<p>dumped it from the new runescape bestiary tool</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/beast-definition-loader/507051/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/beast-definition-loader/507051/6</link>
        <pubDate>Sun, 10 Mar 2013 22:30:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-507051-6</guid>
        <source url="https://forum.moparisthebest.com/t/beast-definition-loader/507051.rss">Beast definition loader</source>
      </item>
      <item>
        <title>Beast definition loader</title>
        <dc:creator><![CDATA[@Christmas_tree Christmas_tree]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/christmas_tree">@Christmas_tree</a> wrote:</p>
          <blockquote>
              <p>Where did you get that dump.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/beast-definition-loader/507051/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/beast-definition-loader/507051/5</link>
        <pubDate>Sun, 10 Mar 2013 13:40:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-507051-5</guid>
        <source url="https://forum.moparisthebest.com/t/beast-definition-loader/507051.rss">Beast definition loader</source>
      </item>
      <item>
        <title>Beast definition loader</title>
        <dc:creator><![CDATA[@relexlawl relexlawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/relexlawl">@relexlawl</a> wrote:</p>
          <blockquote>
              <p>[quote=“Flame_, post:3, topic:507051”][quote author=arham 4 link=topic=625276.msg4256730#msg4256730 date=1362883196]<br>
Nice job!<br>
[/quote]<br>
But the layout of how it is loaded could be neater.[/quote]</p>
<p>You could just do what I did and use Gson.</p>
<p>As simple as</p>
<p><code>NPCDefinition definition = new NPCDefinition();
				String json = new BufferedReader(new FileReader(file)).readLine();
				definition = new Gson().fromJson(json, NPCDefinition.class);
				definitions[id] = definition;</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/beast-definition-loader/507051/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/beast-definition-loader/507051/4</link>
        <pubDate>Sun, 10 Mar 2013 07:54:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-507051-4</guid>
        <source url="https://forum.moparisthebest.com/t/beast-definition-loader/507051.rss">Beast definition loader</source>
      </item>
      <item>
        <title>Beast definition loader</title>
        <dc:creator><![CDATA[@Flame3 John]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/flame3">@Flame3</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="507051">
<div class="title">
<div class="quote-controls"></div>
 arham 4:</div>
<blockquote>
<p>Nice job!</p>
</blockquote>
</aside>
<p>But the layout of how it is loaded could be neater.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/beast-definition-loader/507051/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/beast-definition-loader/507051/3</link>
        <pubDate>Sun, 10 Mar 2013 03:09:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-507051-3</guid>
        <source url="https://forum.moparisthebest.com/t/beast-definition-loader/507051.rss">Beast definition loader</source>
      </item>
      <item>
        <title>Beast definition loader</title>
        <dc:creator><![CDATA[@arham_4 arham 4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/arham_4">@arham_4</a> wrote:</p>
          <blockquote>
              <p>Nice job!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/beast-definition-loader/507051/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/beast-definition-loader/507051/2</link>
        <pubDate>Sun, 10 Mar 2013 02:39:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-507051-2</guid>
        <source url="https://forum.moparisthebest.com/t/beast-definition-loader/507051.rss">Beast definition loader</source>
      </item>
      <item>
        <title>Beast definition loader</title>
        <dc:creator><![CDATA[@Cyberus Cyberus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cyberus">@Cyberus</a> wrote:</p>
          <blockquote>
              <p><span class="bbcode-b">Code:</span></p>
<p>[CODE]package com.runescape.world.entity.beast;</p>
<p>import java.nio.charset.Charset;<br>
import java.nio.file.Files;<br>
import java.nio.file.Path;<br>
import java.util.List;</p>
<p>import org.json.JSONArray;<br>
import org.json.JSONObject;</p>
<p>public class BeastDefinition {</p>
<pre><code>public static final int BEAST_COUNT = 15055;

private static BeastDefinition[] definitions;

private final int id;
private final String name;
private final String description;
private final String weakness;
private final String slayercat;
private final int deathAnimation;
private final int attackAnimation;
private final int size;
private final int lifepoints;
private final int level;
private final int attack;
private final int magic;
private final int defence;
private final int ranged;
private final boolean poisonous;
private final boolean attackable;
private final boolean aggressive;
private final boolean members;
private final String[] areas;

public BeastDefinition(int id, String name, String description, String weakness, String slayercat,
		int deathAnimation, int attackAnimation, int size, int lifepoints, int level, int attack, int magic,
		int defence, int ranged, boolean poisonous, boolean attackable, boolean aggressive, boolean members,
		String[] areas) {
	this.id = id;
	this.name = name;
	this.description = description;
	this.weakness = weakness;
	this.slayercat = slayercat;
	this.deathAnimation = deathAnimation;
	this.attackAnimation = attackAnimation;
	this.size = size;
	this.lifepoints = lifepoints;
	this.level = level;
	this.attack = attack;
	this.magic = magic;
	this.defence = defence;
	this.ranged = ranged;
	this.poisonous = poisonous;
	this.attackable = attackable;
	this.aggressive = aggressive;
	this.members = members;
	this.areas = areas;
}

public static BeastDefinition getDefinition(int id) {
	return BeastDefinition.definitions[id];
}

public static void loadDefinition(Path path) throws Exception {
	List&lt;String&gt; lines = Files.readAllLines(path, Charset.forName("UTF-8"));
	BeastDefinition.definitions = new BeastDefinition[BeastDefinition.BEAST_COUNT];

	for (String line : lines) {
		JSONObject rootObject = new JSONObject(line);
		int id = rootObject.getInt("id");
		System.out.println(id);
		String name = rootObject.getString("name");
		String description = rootObject.getString("description");
		String weakness = null;
		if (line.contains("weakness" + '"')) {
			weakness = rootObject.getString("weakness");
		}
		String slayercat = null;
		if (line.contains("slayercat")) {
			slayercat = rootObject.getString("slayercat");
		}
		int deathAnimation = -1;
		int attackAnimation = -1;
		if (line.contains("animations")) {
			JSONObject animations = rootObject.getJSONObject("animations");
			if (!animations.isNull("death")) {
				deathAnimation = animations.getInt("death");
			}
			if (!animations.isNull("attack")) {
				attackAnimation = animations.getInt("attack");
			}
		}
		int size = rootObject.getInt("size");
		int lifepoints = -1;
		int level = -1;
		int attack = -1;
		int magic = -1;
		int defence = -1;
		int ranged = -1;
		if (line.contains("lifepoints")) {
			lifepoints = rootObject.getInt("lifepoints");
			level = rootObject.getInt("level");
			attack = rootObject.getInt("attack");
			magic = rootObject.getInt("magic");
			defence = rootObject.getInt("defence");
			ranged = rootObject.getInt("ranged");
		}
		boolean poisonous = rootObject.getBoolean("poisonous");
		boolean attackable = rootObject.getBoolean("attackable");
		boolean aggressive = rootObject.getBoolean("aggressive");
		boolean members = rootObject.getBoolean("members");
		String[] areas = null;
		JSONArray areasJSONArray = rootObject.getJSONArray("areas");
		if (!areasJSONArray.isNull(0)) {
			areas = new String[areasJSONArray.length()];
			for (int i = 0; i &lt; areasJSONArray.length(); i++) {
				areas[i] = areasJSONArray.getString(i);
			}
		}

		BeastDefinition.definitions[id] = new BeastDefinition(id, name, description, weakness, slayercat,
				deathAnimation, attackAnimation, size, lifepoints, level, attack, magic, defence, ranged,
				poisonous, attackable, aggressive, members, areas);
	}
}

public int getId() {
	return id;
}

public String getName() {
	return name;
}

public String getDescription() {
	return description;
}

public String getWeakness() {
	return weakness;
}

public String getSlayercat() {
	return slayercat;
}

public int getDeathAnimation() {
	return deathAnimation;
}

public int getAttackAnimation() {
	return attackAnimation;
}

public int getSize() {
	return size;
}

public int getLifepoints() {
	return lifepoints;
}

public int getLevel() {
	return level;
}

public int getAttack() {
	return attack;
}

public int getMagic() {
	return magic;
}

public int getDefence() {
	return defence;
}

public int getRanged() {
	return ranged;
}

public boolean isPoisonous() {
	return poisonous;
}

public boolean isAttackable() {
	return attackable;
}

public boolean isAggressive() {
	return aggressive;
}

public boolean isMembers() {
	return members;
}

public String[] getAreas() {
	return areas;
}

@Override
public String toString() {
	return id + ":" + name + ":" + description + ":" + weakness + ":" + slayercat + ":" + deathAnimation + ":"
			+ attackAnimation + ":" + size + ":" + lifepoints + ":" + level + ":" + attack + ":" + magic + ":"
			+ defence + ":" + ranged + ":" + poisonous + ":" + attackable + ":" + aggressive + ":" + members + ":"
			+ areas;
}
</code></pre>
<p>}<br>
[/CODE]</p>
<p><span class="bbcode-b">Examples usage:</span></p>
<pre><code class="lang-auto"></code></pre>
<p><span class="bbcode-b">Beast definitions:</span><br>
<a href="http://www.mediafire.com/view/?b4nj3ygdw574bsn" data-bbcode="true" rel="nofollow noopener">beasts.txt</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/beast-definition-loader/507051/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/beast-definition-loader/507051/1</link>
        <pubDate>Sun, 10 Mar 2013 01:01:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-507051-1</guid>
        <source url="https://forum.moparisthebest.com/t/beast-definition-loader/507051.rss">Beast definition loader</source>
      </item>
  </channel>
</rss>
