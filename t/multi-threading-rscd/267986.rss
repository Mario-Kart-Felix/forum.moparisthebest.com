<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Multi threading RSCD</title>
    <link>https://forum.moparisthebest.com/t/multi-threading-rscd/267986</link>
    <description>As we know, RSCA is the most popular server with around 250 players on at once, though it can&#39;t fit much more due to it becoming unstable.

Ive thought of various ways of multi threading RSCD, here&#39;s an example of one of my better ideas.

[img]http://img22.imageshack.us/img22/4237/blueprints.png[/img]

the 3 threads will pretty much have exactly what the current gameengine loop has now (except things like npc movement)

the other thread will have a loop, except it will only be accepting connections, and allocating the player to the next available thread, this thread will also move npc&#39;s and anything else that is not player specific.

The outcome is 3 threads handling delayed events, incoming and outgoing packets to 200 players each, or 100 or whatever the number you like. This should make good use of a quad core CPU.

Thoughts? cons? pros?</description>
    
    <lastBuildDate>Wed, 18 Mar 2009 16:07:00 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/multi-threading-rscd/267986.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Multi threading RSCD</title>
        <dc:creator><![CDATA[@Vrunk Vrunk]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/vrunk">@Vrunk</a> wrote:</p>
          <blockquote>
              <p>i.e. an implementation of <a href="http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/BlockingQueue.html" data-bbcode="true" rel="nofollow noopener">BlockingQueue</a> for the two queues, and an implementation of <a href="http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/Executor.html" data-bbcode="true" rel="nofollow noopener">Executor</a> for the thread pool.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/multi-threading-rscd/267986/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/multi-threading-rscd/267986/4</link>
        <pubDate>Wed, 18 Mar 2009 16:07:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-267986-4</guid>
        <source url="https://forum.moparisthebest.com/t/multi-threading-rscd/267986.rss">Multi threading RSCD</source>
      </item>
      <item>
        <title>Multi threading RSCD</title>
        <dc:creator><![CDATA[@lothy Lothy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lothy">@lothy</a> wrote:</p>
          <blockquote>
              <p>Imo, learn to use the Queue collection. Have a Queue (in particular, a concurrent thread-safe queue) that stores incoming packets, have a queue that stores DelayedEvent objects.</p>
<p>Then use some sort of thread pool structure (I’m sure that there’s one in the concurrency package), and have the threads operate on those queues as they have objects added to them.<br>
You shouldn’t explicitly assign tasks to threads.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/multi-threading-rscd/267986/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/multi-threading-rscd/267986/3</link>
        <pubDate>Tue, 17 Mar 2009 22:47:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-267986-3</guid>
        <source url="https://forum.moparisthebest.com/t/multi-threading-rscd/267986.rss">Multi threading RSCD</source>
      </item>
      <item>
        <title>Multi threading RSCD</title>
        <dc:creator><![CDATA[@Vrunk Vrunk]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/vrunk">@Vrunk</a> wrote:</p>
          <blockquote>
              <p>Not sure exactly what you’re aiming for, but I thought of a simple improvement for the system with DelayedEvents:</p>
<p><img src="http://img8.imageshack.us/img8/52/ss20090317110057.png" alt width="" height=""></p>
<p>Change those two data structures to one data structure (<a href="http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/DelayQueue.html" data-bbcode="true" rel="nofollow noopener">DelayQueue</a>), and use drainTo(Collection)<br>
That will eliminate the need to loop through all the delayed events every game cycle (only the events whose time has expired will be removed+processed from the queue each cycle).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/multi-threading-rscd/267986/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/multi-threading-rscd/267986/2</link>
        <pubDate>Tue, 17 Mar 2009 14:41:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-267986-2</guid>
        <source url="https://forum.moparisthebest.com/t/multi-threading-rscd/267986.rss">Multi threading RSCD</source>
      </item>
      <item>
        <title>Multi threading RSCD</title>
        <dc:creator><![CDATA[@xEnt xEnt]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xent">@xEnt</a> wrote:</p>
          <blockquote>
              <p>As we know, RSCA is the most popular server with around 250 players on at once, though it can’t fit much more due to it becoming unstable.</p>
<p>Ive thought of various ways of multi threading RSCD, here’s an example of one of my better ideas.</p>
<p><img src="http://img22.imageshack.us/img22/4237/blueprints.png" alt width="" height=""></p>
<p>the 3 threads will pretty much have exactly what the current gameengine loop has now (except things like npc movement)</p>
<p>the other thread will have a loop, except it will only be accepting connections, and allocating the player to the next available thread, this thread will also move npc’s and anything else that is not player specific.</p>
<p>The outcome is 3 threads handling delayed events, incoming and outgoing packets to 200 players each, or 100 or whatever the number you like. This should make good use of a quad core CPU.</p>
<p>Thoughts? cons? pros?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/multi-threading-rscd/267986/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/multi-threading-rscd/267986/1</link>
        <pubDate>Tue, 17 Mar 2009 13:41:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-267986-1</guid>
        <source url="https://forum.moparisthebest.com/t/multi-threading-rscd/267986.rss">Multi threading RSCD</source>
      </item>
  </channel>
</rss>
