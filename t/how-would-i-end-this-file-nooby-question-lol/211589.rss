<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>How would I end this file? nooby question lol</title>
    <link>https://forum.moparisthebest.com/t/how-would-i-end-this-file-nooby-question-lol/211589</link>
    <description>i get an error whenever i compile. its because i havent ended this file properly.

[code]import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import java.io.*;
import java.net.*;
import java.util.*;
import theme.*;
import javax.sound.midi.*;
import java.lang.String;
import java.text.SimpleDateFormat;
import javax.swing.filechooser.FileFilter;
import javax.swing.plaf.metal.MetalLookAndFeel;
import sign.signlink;
import javax.imageio.ImageIO;
import java.awt.image.BufferedImage;
public class Class51 extends client implements ActionListener, WindowListener, ItemListener
{
 //   public JScrollPane scroll;
   // public JTextArea console;
    private static FileOutputStream logFileOut;
    private static final String iconLocation = &quot;Cache/Icon.gif&quot;;
    private static boolean isApplet = false;
    private MP3Player player;
	public int midiCount;
    public Sequencer sequencer;
	public static void main(String args[])
	{
		new Class51(args);
	}

	public Class51(String args[])
	{
		super();
		try
		{
			sign.signlink.startpriv(InetAddress.getByName(&quot;127.0.0.1&quot;));
			initUI();
		}
		catch(Exception ex)
		{
			ex.printStackTrace();
		}
	}


	public void initUI()
	{
		try
		{
		setServer(&quot;&quot;);
		//	JFrame.setDefaultLookAndFeelDecorated(true);
		//	MetalLookAndFeel.setCurrentTheme(new BlackTheme());
			JPopupMenu.setDefaultLightWeightPopupEnabled(false);

			sign.signlink.mainapp = this; // Dangerous reference, lol?

			frame = new JFrame(frameTitle);
		    if((new File(&quot;Cache/Icon.gif&quot;)).isFile())
            frame.setIconImage(Toolkit.getDefaultToolkit().getImage(&quot;Cache/Icon.gif&quot;));
			frame.setLayout(new BorderLayout());

			frame.setResizable(false);
			frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

			JPanel gamePanel = new JPanel();
			gamePanel.setLayout(new BorderLayout());

			gamePanel.add(this);
			gamePanel.setPreferredSize(new Dimension(765, 503));
		    //JTextArea consoleText = new JTextArea(20, 30);
			//JScrollPane scroll = new JScrollPane(consoleText, 22, 31);
			//consoleText.setForeground(new Color(255, 255, 255));
			//consoleText.setBackground(new Color(0, 0, 0));
			//scroll.setPreferredSize(new Dimension(765, 150));
			//System.setOut(new TextAreaStream(consoleText, scroll));
			//log(&quot;&quot;);
			JMenuBar menuBar = new JMenuBar();
			JMenuBar nigger = new JMenuBar();

			JMenu fileMenu = new JMenu(&quot;File&quot;);
			JMenu webMenu = new JMenu(&quot;Websites&quot;);
			JMenu miscMenu = new JMenu(&quot;Miscellaneous&quot;);
			JButton shotMenu = new JButton(&quot;Screenshot&quot;);
			shotMenu.setActionCommand(&quot;Screenshot&quot;);
			JButton play = new JButton(&quot;Play&quot;);
			play.setActionCommand(&quot;Play&quot;);
			JButton stop = new JButton(&quot;Stop&quot;);
			stop.setActionCommand(&quot;Stop&quot;);
			JButton next = new JButton(&quot;Next&quot;);
			next.setActionCommand(&quot;Next&quot;);
			JButton previous = new JButton(&quot;Previous&quot;);
			previous.setActionCommand(&quot;Previous&quot;);
			
			shotMenu.addActionListener(this);
			play.addActionListener(this);
			stop.addActionListener(this);
			next.addActionListener(this);
			previous.addActionListener(this);
			
			String[] miscButtons = new String[]
				{
					&quot;About&quot;, &quot;Help&quot;
				};
			String[] webButtons = new String[]
				{
					&quot;MoparScape&quot;, &quot;google&quot;, &quot;google&quot;
				};
			String[] mainButtons = new String[]
				{
					&quot;Server Status&quot;, &quot;Quit&quot;
				};
				
			for (String name : mainButtons)
			{
				JMenuItem menuItem = new JMenuItem(name);
				if (name.equalsIgnoreCase(&quot;-&quot;))
					fileMenu.addSeparator();
				else
				{
					menuItem.addActionListener(this);
					fileMenu.add(menuItem);
				}
			}
			for (String name : miscButtons)
			{
				JMenuItem menuItem = new JMenuItem(name);
				if (name.equalsIgnoreCase(&quot;-&quot;))
					miscMenu.addSeparator();
				else
				{
					menuItem.addActionListener(this);
					miscMenu.add(menuItem);
				}
			}
			for (String name : webButtons)
			{
				JMenuItem menuItem = new JMenuItem(name);
				if (name.equalsIgnoreCase(&quot;-&quot;))
					webMenu.addSeparator();
				else
				{
					menuItem.addActionListener(this);
					webMenu.add(menuItem);
				}
			}
			
			menuBar.add(fileMenu);
			menuBar.add(toolsMenu);
			menuBar.add(webMenu);
			menuBar.add(miscMenu);
			menuBar.add(shotMenu);
			nigger.add(play);
			nigger.add(stop);
			nigger.add(next);
			nigger.add(previous);
			
			String arr$[] = checkBoxes;
            int len$ = arr$.length;
            for(int i$ = 0; i$ &lt; len$; i$++)
            {
                String name = arr$[i$];
                Checkbox menuItem = new Checkbox(name);
                menuItem.addItemListener(this);
                menuBar.add(menuItem);
            }
			
			frame.getContentPane().add(gamePanel, BorderLayout.SOUTH);
			frame.getContentPane().add(menuBar, BorderLayout.NORTH);
			frame.getContentPane().add(gamePanel, BorderLayout.CENTER);
			frame.getContentPane().add(nigger, BorderLayout.SOUTH);
			frame.pack();
			frame.setVisible(true);
			init();
			midiPlayer(&quot;Play&quot;);
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
	}

	 public JDialog createFileChooserDialog(JFileChooser jfilechooser, String s, Container container)
	    {
	        JDialog jdialog = new JDialog(frame, s, true);
	        jdialog.setDefaultCloseOperation(2);
	        jdialog.add(jfilechooser);
	        jdialog.pack();
	        jdialog.setLocationRelativeTo(container);
	        return jdialog;
    }
public static synchronized void log(Object object)
    {
        System.out.println(object.toString());
    }
    public static void chkDir(String fileName)
	    {
	        try
	        {
	            File f = new File(fileName);
	            if(!f.exists())
	                f.mkdir();
	        }
	        catch(Exception e)
	        {
	            log((new StringBuilder()).append(&quot;Error making file: &quot;).append(e).toString());
	        }
    }
      private void midiPlayer(String command)
	    {
	        String dir = &quot;./Music/&quot;;
chkDir(dir);
if(player != null &amp;&amp; player.isRunning())
	        {
	            player.close();
	        }
	        if(sequencer != null &amp;&amp; sequencer.isRunning())
	        {
	            sequencer.stop();
	            sequencer.close();
	        }
	        if(command.equals(&quot;Next&quot;))
	        {
	            midiCount++;
	        } else
	        if(command.equals(&quot;Previous&quot;))
	        {
	            midiCount--;
	        }
	        if(!command.equals(&quot;Stop&quot;))
	        {
	            File index = new File(dir);
	            String fileList[] = index.list();
	            if(fileList.length &gt; 0)
	            {
	                if(midiCount &gt; fileList.length - 1)
	                {
	                    midiCount = 0;
	                }
	                if(midiCount &lt; 0)
	                {
	                    midiCount = fileList.length - 1;
	                }
	                if(fileList[midiCount].endsWith(&quot;.mp3&quot;))
	                {
	                 //   log((new StringBuilder()).append(&quot;Playing &quot;).append(fileList[midiCount]).toString());
	                    player = new MP3Player((new StringBuilder()).append(dir).append(fileList[midiCount]).toString(), true);
	                } else
	                if(fileList[midiCount].endsWith(&quot;.mid&quot;))
	                {
	                 //   log((new StringBuilder()).append(&quot;Playing &quot;).append(fileList[midiCount]).toString());
	                    try
	                    {
	                        File midiFile = new File((new StringBuilder()).append(dir).append(fileList[midiCount]).toString());
	                        sequencer = MidiSystem.getSequencer();
	                        sequencer.setSequence(MidiSystem.getSequence(midiFile));
	                        sequencer.setLoopCount(-1);
	                        sequencer.open();
	                        sequencer.start();
	                    }
	                    catch(MidiUnavailableException mue)
	                    {
	                      //  log(&quot;Midi device unavailable!&quot;);
	                    }
	                    catch(InvalidMidiDataException imde)
	                    {
	                      //  log(&quot;Invalid Midi data!&quot;);
	                    }
	                    catch(IOException ioe)
	                    {
	                       // log(&quot;I/O Error!&quot;);
	                    }
	                }
	            } else
	            {
	              //  log(&quot;no midi or mp3 files in folder&quot;);
	            }
	        }
    }
public void takeScreenshot(boolean flag)
    {
        BufferedImage bufferedimage;
        try
        {
            Robot robot = new Robot();
            Point point = getLocationOnScreen();
            Rectangle rectangle = new Rectangle(point.x, point.y, getWidth(), getHeight());
            bufferedimage = robot.createScreenCapture(rectangle);
        }
        catch(Throwable throwable)
        {
             JOptionPane.showMessageDialog(frame, &quot;An error occured while trying to create a screenshot!&quot;, &quot;Screenshot Error&quot;, 0);
            return;
        }
        String s = null;
        try
        {
            s = getNearestScreenshotFilename();
        }
        catch(IOException ioexception)
        {
            if(flag)
            {
                 JOptionPane.showMessageDialog(frame, &quot;A screenshot directory does not exist, and could not be created!&quot;, &quot;No Screenshot Directory&quot;, 0);
                return;
            }
        }
        if(s == null &amp;&amp; flag)
        {
             JOptionPane.showMessageDialog(frame, &quot;There are too many screenshots in the screenshot directory!\n&quot;+&quot;Delete some screen\n&quot; +&quot;shots and try again.&quot; , &quot;Screenshot Directory Full&quot;, 0);
            return;
        }
        if(!flag)
        {
            final JFileChooser fileChooser = new JFileChooser();
            final JDialog fileDialog = createFileChooserDialog(fileChooser, &quot;Save Screenshot&quot;, this);
            final BufferedImage si = bufferedimage;
            JFileChooser _tmp = fileChooser;
            fileChooser.setFileSelectionMode(0);
            fileChooser.addChoosableFileFilter(new imageFileFilter());
            fileChooser.setCurrentDirectory(new File(&quot;./screenshots/&quot;));
            fileChooser.setSelectedFile(new File(s));
            JFileChooser _tmp1 = fileChooser;
            fileChooser.setDialogType(1);
            fileChooser.addActionListener(new ActionListener() {
			
                public void actionPerformed(ActionEvent actionevent)
                {
                    String s1 = actionevent.getActionCommand();
                    if(s1.equals(&quot;ApproveSelection&quot;))
                    {
                        File file = fileChooser.getSelectedFile();
                        if(file != null &amp;&amp; file.isFile())
                        {
                            int i = JOptionPane.showConfirmDialog(frame, (new StringBuilder()).append(file.getAbsolutePath()).append(&quot; already exists.\n&quot;+&quot;Do you want to replace it?&quot;).toString(), &quot;Save Screenshot&quot;, 2);
                            if(i != 0)
                            {
                                return;
                            }
                        }
                        try
                        {
                            ImageIO.write(si, &quot;png&quot;, file);
                        }
                        catch(IOException ioexception2)
                        {
                             JOptionPane.showMessageDialog(frame, &quot;An error occured while trying to save the screenshot!\n&quot;+&quot;Please make sure you have\n&quot;+&quot; write access to the screenshot directory.&quot; , &quot;Screenshot Error&quot;, 0);
                        }
                        fileDialog.dispose();
                    } else
                    if(s1.equals(&quot;CancelSelection&quot;))
                    {
                        fileDialog.dispose();
                    }
                }


            {

            }
            });
            fileDialog.setVisible(true);
        } else
        {
            try
            {
                ImageIO.write(bufferedimage, &quot;png&quot;, new File((new StringBuilder()).append(&quot;./screenshots/&quot;).append(s).toString()));
		System.out.println(&quot;You took a nice screenshot&quot;);
            }
            catch(IOException ioexception1)
            {
                 JOptionPane.showMessageDialog(frame, &quot;An error occured while trying to save the screenshot!\n&quot;+&quot;Please make sure you have\n&quot;+&quot; write access to the screenshot directory.&quot; , &quot;Screenshot Error&quot;, 0);
            }
        }
    }

public static String getNearestScreenshotFilename()
        throws IOException
    {
        File file = new File(&quot;./screenshots&quot;);
        int i = 0;
        do
        {
            String s = &quot;Screenshot .png&quot;;
            if(i &lt; 10)
            {
                s = s.replaceFirst(&quot; &quot;, (new StringBuilder()).append(&quot; 000&quot;).append(i).toString());
            } else
            if(i &lt; 100)
            {
                s = s.replaceFirst(&quot; &quot;, (new StringBuilder()).append(&quot; 00&quot;).append(i).toString());
            } else
            if(i &lt; 1000)
            {
                s = s.replaceFirst(&quot; &quot;, (new StringBuilder()).append(&quot; 0&quot;).append(i).toString());
            } else
            if(i &lt; 10000)
            {
                s = s.replaceFirst(&quot; &quot;, (new StringBuilder()).append(&quot; &quot;).append(i).toString());
            }
            if((new File(file, s)).isFile())
            {
                i++;
            } else
            {
                return s;
            }
        } while(i &lt; 10000);
        return null;
    }


class imageFileFilter extends FileFilter
{

    imageFileFilter()
    {
    }

    public boolean accept(File file)
    {
        String s = file.getName();
        return file.isDirectory() || s.toLowerCase().endsWith(&quot;.png&quot;) &amp;&amp; s.indexOf(&quot;$&quot;) == -1;
    }

    public String getDescription()
    {
        return &quot;PNG (*.png)&quot;;
    }
}

	public URL getCodeBase()
	{
		try
		{
			return new URL(&quot;http://127.0.0.1/Cache&quot;);
			//return new URL(&quot;http://po4.runescape.com:&quot; + (80 + anInt870));
		}
		catch (Exception e)
		{
			return super.getCodeBase();
		}
	}

	public URL getDocumentBase()
	{
		return getCodeBase();
	}

	public void loadError(String s)
	{
		System.out.println(&quot;loadError: &quot; + s);
	}
	public String getParameter(String key)
	{
		if (key.equals(&quot;nodeid&quot;))
			return &quot;10&quot;;
		else if (key.equals(&quot;portoff&quot;))
			return &quot;0&quot;;
		else if (key.equals(&quot;lowmem&quot;))
			return &quot;1&quot;;
		else if (key.equals(&quot;free&quot;))
			return &quot;0&quot;;
		else
			return &quot;&quot;;
	}
public void displayPortSelect() {
            {
                int i = getPort();
                int i1 = 0;
                boolean flag = false;
                do
                    try
                    {
                        String s2 = JOptionPane.showInputDialog(this, (new StringBuilder()).append(&quot;Current port: &quot;+ port), &quot;Enter Port&quot;, 3);
                        if(s2 != null)
                        {
                            if(s2.equals(&quot;&quot;))
                            {
                                JOptionPane.showMessageDialog(this, &quot;Invalid port number!\nMost servers use 43594.&quot;, &quot;Invalid Port Number&quot;, 2);
                            } else
                            {
                                i = Integer.parseInt(s2);
                                if(i &lt; 1 || i &gt; 65535)
                                {
                                    JOptionPane.showMessageDialog(this, &quot;Invalid port number!\nMost servers use 43594.&quot;, &quot;Invalid Port Number&quot;, 2);
                                } else
                                {
                                    setServer(i);
                                    flag = true;
                                }
                            }
                        } else
                        {
                            flag = true;
                        }
                    }
                    catch(NumberFormatException numberformatexception)
                    {
                        JOptionPane.showMessageDialog(this, &quot;Invalid port number!\nMost servers use 43594.&quot;, &quot;Invalid Port Number&quot;, 2);
                    }
                while(++i1 &lt; 3 &amp;&amp; !flag);
            }
			}
    public void displayWorldSelect() {
		try
		{
                String s1 = JOptionPane.showInputDialog(this, (new StringBuilder()).append(&quot;Current server: &quot;+ server), &quot;Enter Server&quot;, 3);
               if(s1 == null)
			               {
			                  // log(&quot;Canceled&quot;);
			               } else
			               if(s1.equalsIgnoreCase(&quot;&quot;))
			               {
			                  // log(&quot;Sorry, have to have some input&quot;);
			               } else
			               {
			                   log((new StringBuilder()).append(&quot;Set world to: &quot;).append(s1).toString());
			                   server = s1;
			               }
			           }
			           catch(Exception e)
			           {
			             //  log((new StringBuilder()).append(&quot;You must enter a numeric value!: &quot;).append(e).toString());

			}
		}
			public void actionPerformed(ActionEvent evt)
			{
			String cmd = evt.getActionCommand();
			if (cmd != null)
			{
			if(cmd.equalsIgnoreCase(&quot;Next&quot;))
	        {
	            midiPlayer(&quot;Next&quot;);
			}
	        if(cmd.equalsIgnoreCase(&quot;Previous&quot;))
	        {
	            midiPlayer(&quot;Previous&quot;);
	        }
		if(cmd.equalsIgnoreCase(&quot;Play&quot;) || cmd.equalsIgnoreCase(&quot;Stop&quot;))
		{
 	            midiPlayer(cmd);
		}
                if(cmd.equalsIgnoreCase(&quot;Stop&quot;))
                {
                    midiPlayer(&quot;Stop&quot;);
                }
		if(cmd.equalsIgnoreCase(&quot;Screenshot&quot;))
		{
		    takeScreenshot(true);
		}[/code]

how would i end this file?


i think the problem is right here. The last piece of the file

[code]			public void actionPerformed(ActionEvent evt)
			{
			String cmd = evt.getActionCommand();
			if (cmd != null)
			{
			if(cmd.equalsIgnoreCase(&quot;Next&quot;))
	        {
	            midiPlayer(&quot;Next&quot;);
			}
	        if(cmd.equalsIgnoreCase(&quot;Previous&quot;))
	        {
	            midiPlayer(&quot;Previous&quot;);
	        }
		if(cmd.equalsIgnoreCase(&quot;Play&quot;) || cmd.equalsIgnoreCase(&quot;Stop&quot;))
		{
 	            midiPlayer(cmd);
		}
                if(cmd.equalsIgnoreCase(&quot;Stop&quot;))
                {
                    midiPlayer(&quot;Stop&quot;);
                }
		if(cmd.equalsIgnoreCase(&quot;Screenshot&quot;))
		{
		    takeScreenshot(true);
		}[/code]

oh yah and heres the error im getting

[url=http://www.servimg.com/image_preview.php?i=78&amp;u=12153951][img]http://i45.servimg.com/u/f45/12/15/39/51/help12.jpg[/img][/url]

above is my compiler, i white outted the title cuz i dont want you guys to see it... yet</description>
    
    <lastBuildDate>Thu, 12 Jun 2008 03:44:18 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/how-would-i-end-this-file-nooby-question-lol/211589.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>How would I end this file? nooby question lol</title>
        <dc:creator><![CDATA[@Lanthus20 Lanthus20]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lanthus20">@Lanthus20</a> wrote:</p>
          <blockquote>
              <p>this isnt a tutorial, please dont copy the code :mad:</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/how-would-i-end-this-file-nooby-question-lol/211589/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/how-would-i-end-this-file-nooby-question-lol/211589/9</link>
        <pubDate>Thu, 12 Jun 2008 03:44:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-211589-9</guid>
        <source url="https://forum.moparisthebest.com/t/how-would-i-end-this-file-nooby-question-lol/211589.rss">How would I end this file? nooby question lol</source>
      </item>
      <item>
        <title>How would I end this file? nooby question lol</title>
        <dc:creator><![CDATA[@godswordman godswordman]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/godswordman">@godswordman</a> wrote:</p>
          <blockquote>
              <p>same <img src="https://forum.moparisthebest.com/images/emoji/twitter/frowning.png?v=6" title=":frowning:" class="emoji" alt=":frowning:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/how-would-i-end-this-file-nooby-question-lol/211589/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/how-would-i-end-this-file-nooby-question-lol/211589/8</link>
        <pubDate>Wed, 11 Jun 2008 22:22:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-211589-8</guid>
        <source url="https://forum.moparisthebest.com/t/how-would-i-end-this-file-nooby-question-lol/211589.rss">How would I end this file? nooby question lol</source>
      </item>
      <item>
        <title>How would I end this file? nooby question lol</title>
        <dc:creator><![CDATA[@Lanthus20 Lanthus20]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lanthus20">@Lanthus20</a> wrote:</p>
          <blockquote>
              <p>same error <img src="https://forum.moparisthebest.com/images/emoji/twitter/frowning.png?v=6" title=":frowning:" class="emoji" alt=":frowning:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/how-would-i-end-this-file-nooby-question-lol/211589/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/how-would-i-end-this-file-nooby-question-lol/211589/7</link>
        <pubDate>Wed, 11 Jun 2008 08:18:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-211589-7</guid>
        <source url="https://forum.moparisthebest.com/t/how-would-i-end-this-file-nooby-question-lol/211589.rss">How would I end this file? nooby question lol</source>
      </item>
      <item>
        <title>How would I end this file? nooby question lol</title>
        <dc:creator><![CDATA[@xx_qwertyuiop_xx xx qwertyuiop xx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xx_qwertyuiop_xx">@xx_qwertyuiop_xx</a> wrote:</p>
          <blockquote>
              <p>Put a } at the very bottom, then.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/how-would-i-end-this-file-nooby-question-lol/211589/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/how-would-i-end-this-file-nooby-question-lol/211589/6</link>
        <pubDate>Wed, 11 Jun 2008 07:59:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-211589-6</guid>
        <source url="https://forum.moparisthebest.com/t/how-would-i-end-this-file-nooby-question-lol/211589.rss">How would I end this file? nooby question lol</source>
      </item>
      <item>
        <title>How would I end this file? nooby question lol</title>
        <dc:creator><![CDATA[@Lanthus20 Lanthus20]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lanthus20">@Lanthus20</a> wrote:</p>
          <blockquote>
              <p>same error. It says</p>
<p>reached end of file while parsing</p>
<p>and then it shows the last character in the file with a left arrow next to it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/how-would-i-end-this-file-nooby-question-lol/211589/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/how-would-i-end-this-file-nooby-question-lol/211589/5</link>
        <pubDate>Wed, 11 Jun 2008 07:55:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-211589-5</guid>
        <source url="https://forum.moparisthebest.com/t/how-would-i-end-this-file-nooby-question-lol/211589.rss">How would I end this file? nooby question lol</source>
      </item>
      <item>
        <title>How would I end this file? nooby question lol</title>
        <dc:creator><![CDATA[@soultak3r soultak3r]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/soultak3r">@soultak3r</a> wrote:</p>
          <blockquote>
              <aside class="onebox whitelistedgeneric">
  <header class="source">
      <img src="https://forum.moparisthebest.com/uploads/default/original/2X/1/1f0dc167bcf798bdbd70b03bf0fd1bc836e54e1a.png" class="site-icon" width="32" height="32">
      <a href="https://forum.moparisthebest.com/" target="_blank">moparisthebest.com</a>
  </header>
  <article class="onebox-body">
    <img src="https://forum.moparisthebest.com/uploads/default/original/2X/4/41fecb6185fddc2758aeba68c3f8c9c78e26e4ff.png" class="thumbnail onebox-avatar" width="500" height="500">

<h3><a href="https://forum.moparisthebest.com/" target="_blank">moparisthebest.com</a></h3>

<p>programming, irc, cars</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/how-would-i-end-this-file-nooby-question-lol/211589/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/how-would-i-end-this-file-nooby-question-lol/211589/4</link>
        <pubDate>Wed, 11 Jun 2008 07:18:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-211589-4</guid>
        <source url="https://forum.moparisthebest.com/t/how-would-i-end-this-file-nooby-question-lol/211589.rss">How would I end this file? nooby question lol</source>
      </item>
      <item>
        <title>How would I end this file? nooby question lol</title>
        <dc:creator><![CDATA[@xx_qwertyuiop_xx xx qwertyuiop xx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xx_qwertyuiop_xx">@xx_qwertyuiop_xx</a> wrote:</p>
          <blockquote>
              <p>Use this.</p>
<pre><code class="lang-auto">if(cmd.equalsIgnoreCase("Play") || cmd.equalsIgnoreCase("Stop"))
    midiPlayer(cmd);

if(cmd.equalsIgnoreCase("Screenshot"))
    takeScreenshot(true);</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/how-would-i-end-this-file-nooby-question-lol/211589/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/how-would-i-end-this-file-nooby-question-lol/211589/3</link>
        <pubDate>Wed, 11 Jun 2008 07:14:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-211589-3</guid>
        <source url="https://forum.moparisthebest.com/t/how-would-i-end-this-file-nooby-question-lol/211589.rss">How would I end this file? nooby question lol</source>
      </item>
      <item>
        <title>How would I end this file? nooby question lol</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>replace that with this:</p>
<p>[code]  if(cmd.equalsIgnoreCase(“Play”))<br>
{<br>
midiPlayer(“Play”);<br>
}<br>
if(cmd.equalsIgnoreCase(“Stop”))<br>
{<br>
midiPlayer(“Stop”);<br>
}<br>
//  if(cmd.equalsIgnoreCase(“Take Screenshot”))<br>
// {<br>
//     takeScreenshot(true);<br>
// }</p>
<pre><code>		if (cmd.equalsIgnoreCase("Screenshot"))
		{
		takeScreenshot(true);
                    }
</code></pre>
<p>[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/how-would-i-end-this-file-nooby-question-lol/211589/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/how-would-i-end-this-file-nooby-question-lol/211589/2</link>
        <pubDate>Wed, 11 Jun 2008 06:11:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-211589-2</guid>
        <source url="https://forum.moparisthebest.com/t/how-would-i-end-this-file-nooby-question-lol/211589.rss">How would I end this file? nooby question lol</source>
      </item>
      <item>
        <title>How would I end this file? nooby question lol</title>
        <dc:creator><![CDATA[@Lanthus20 Lanthus20]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lanthus20">@Lanthus20</a> wrote:</p>
          <blockquote>
              <p>i get an error whenever i compile. its because i havent ended this file properly.</p>
<p>[code]import javax.swing.<em>;<br>
import java.awt.</em>;<br>
import java.awt.event.<em>;<br>
import javax.swing.</em>;<br>
import <a href="http://java.io" rel="nofollow noopener">java.io</a>.<em>;<br>
import <a href="http://java.net" rel="nofollow noopener">java.net</a>.</em>;<br>
import java.util.<em>;<br>
import theme.</em>;<br>
import javax.sound.midi.*;<br>
import java.lang.String;<br>
import java.text.SimpleDateFormat;<br>
import javax.swing.filechooser.FileFilter;<br>
import javax.swing.plaf.metal.MetalLookAndFeel;<br>
import sign.signlink;<br>
import javax.imageio.ImageIO;<br>
import java.awt.image.BufferedImage;<br>
public class Class51 extends client implements ActionListener, WindowListener, ItemListener<br>
{<br>
//   public JScrollPane scroll;<br>
// public JTextArea console;<br>
private static FileOutputStream logFileOut;<br>
private static final String iconLocation = “Cache/Icon.gif”;<br>
private static boolean isApplet = false;<br>
private MP3Player player;<br>
public int midiCount;<br>
public Sequencer sequencer;<br>
public static void main(String args[])<br>
{<br>
new Class51(args);<br>
}</p>
<pre><code>public Class51(String args[])
{
	super();
	try
	{
		sign.signlink.startpriv(InetAddress.getByName("127.0.0.1"));
		initUI();
	}
	catch(Exception ex)
	{
		ex.printStackTrace();
	}
}


public void initUI()
{
	try
	{
	setServer("");
	//	JFrame.setDefaultLookAndFeelDecorated(true);
	//	MetalLookAndFeel.setCurrentTheme(new BlackTheme());
		JPopupMenu.setDefaultLightWeightPopupEnabled(false);

		sign.signlink.mainapp = this; // Dangerous reference, lol?

		frame = new JFrame(frameTitle);
	    if((new File("Cache/Icon.gif")).isFile())
        frame.setIconImage(Toolkit.getDefaultToolkit().getImage("Cache/Icon.gif"));
		frame.setLayout(new BorderLayout());

		frame.setResizable(false);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

		JPanel gamePanel = new JPanel();
		gamePanel.setLayout(new BorderLayout());

		gamePanel.add(this);
		gamePanel.setPreferredSize(new Dimension(765, 503));
	    //JTextArea consoleText = new JTextArea(20, 30);
		//JScrollPane scroll = new JScrollPane(consoleText, 22, 31);
		//consoleText.setForeground(new Color(255, 255, 255));
		//consoleText.setBackground(new Color(0, 0, 0));
		//scroll.setPreferredSize(new Dimension(765, 150));
		//System.setOut(new TextAreaStream(consoleText, scroll));
		//log("");
		JMenuBar menuBar = new JMenuBar();
		JMenuBar nigger = new JMenuBar();

		JMenu fileMenu = new JMenu("File");
		JMenu webMenu = new JMenu("Websites");
		JMenu miscMenu = new JMenu("Miscellaneous");
		JButton shotMenu = new JButton("Screenshot");
		shotMenu.setActionCommand("Screenshot");
		JButton play = new JButton("Play");
		play.setActionCommand("Play");
		JButton stop = new JButton("Stop");
		stop.setActionCommand("Stop");
		JButton next = new JButton("Next");
		next.setActionCommand("Next");
		JButton previous = new JButton("Previous");
		previous.setActionCommand("Previous");
		
		shotMenu.addActionListener(this);
		play.addActionListener(this);
		stop.addActionListener(this);
		next.addActionListener(this);
		previous.addActionListener(this);
		
		String[] miscButtons = new String[]
			{
				"About", "Help"
			};
		String[] webButtons = new String[]
			{
				"MoparScape", "google", "google"
			};
		String[] mainButtons = new String[]
			{
				"Server Status", "Quit"
			};
			
		for (String name : mainButtons)
		{
			JMenuItem menuItem = new JMenuItem(name);
			if (name.equalsIgnoreCase("-"))
				fileMenu.addSeparator();
			else
			{
				menuItem.addActionListener(this);
				fileMenu.add(menuItem);
			}
		}
		for (String name : miscButtons)
		{
			JMenuItem menuItem = new JMenuItem(name);
			if (name.equalsIgnoreCase("-"))
				miscMenu.addSeparator();
			else
			{
				menuItem.addActionListener(this);
				miscMenu.add(menuItem);
			}
		}
		for (String name : webButtons)
		{
			JMenuItem menuItem = new JMenuItem(name);
			if (name.equalsIgnoreCase("-"))
				webMenu.addSeparator();
			else
			{
				menuItem.addActionListener(this);
				webMenu.add(menuItem);
			}
		}
		
		menuBar.add(fileMenu);
		menuBar.add(toolsMenu);
		menuBar.add(webMenu);
		menuBar.add(miscMenu);
		menuBar.add(shotMenu);
		nigger.add(play);
		nigger.add(stop);
		nigger.add(next);
		nigger.add(previous);
		
		String arr$[] = checkBoxes;
        int len$ = arr$.length;
        for(int i$ = 0; i$ &lt; len$; i$++)
        {
            String name = arr$[i$];
            Checkbox menuItem = new Checkbox(name);
            menuItem.addItemListener(this);
            menuBar.add(menuItem);
        }
		
		frame.getContentPane().add(gamePanel, BorderLayout.SOUTH);
		frame.getContentPane().add(menuBar, BorderLayout.NORTH);
		frame.getContentPane().add(gamePanel, BorderLayout.CENTER);
		frame.getContentPane().add(nigger, BorderLayout.SOUTH);
		frame.pack();
		frame.setVisible(true);
		init();
		midiPlayer("Play");
	}
	catch (Exception e)
	{
		e.printStackTrace();
	}
}

 public JDialog createFileChooserDialog(JFileChooser jfilechooser, String s, Container container)
    {
        JDialog jdialog = new JDialog(frame, s, true);
        jdialog.setDefaultCloseOperation(2);
        jdialog.add(jfilechooser);
        jdialog.pack();
        jdialog.setLocationRelativeTo(container);
        return jdialog;
}
</code></pre>
<p>public static synchronized void log(Object object)<br>
{<br>
System.out.println(object.toString());<br>
}<br>
public static void chkDir(String fileName)<br>
{<br>
try<br>
{<br>
File f = new File(fileName);<br>
if(!f.exists())<br>
f.mkdir();<br>
}<br>
catch(Exception e)<br>
{<br>
log((new StringBuilder()).append(“Error making file: “).append(e).toString());<br>
}<br>
}<br>
private void midiPlayer(String command)<br>
{<br>
String dir = “./Music/”;<br>
chkDir(dir);<br>
if(player != null &amp;&amp; player.isRunning())<br>
{<br>
player.close();<br>
}<br>
if(sequencer != null &amp;&amp; sequencer.isRunning())<br>
{<br>
sequencer.stop();<br>
sequencer.close();<br>
}<br>
if(command.equals(“Next”))<br>
{<br>
midiCount++;<br>
} else<br>
if(command.equals(“Previous”))<br>
{<br>
midiCount–;<br>
}<br>
if(!command.equals(“Stop”))<br>
{<br>
File index = new File(dir);<br>
String fileList[] = index.list();<br>
if(fileList.length &gt; 0)<br>
{<br>
if(midiCount &gt; fileList.length - 1)<br>
{<br>
midiCount = 0;<br>
}<br>
if(midiCount &lt; 0)<br>
{<br>
midiCount = fileList.length - 1;<br>
}<br>
if(fileList[midiCount].endsWith(”.mp3”))<br>
{<br>
//   log((new StringBuilder()).append(“Playing “).append(fileList[midiCount]).toString());<br>
player = new MP3Player((new StringBuilder()).append(dir).append(fileList[midiCount]).toString(), true);<br>
} else<br>
if(fileList[midiCount].endsWith(”.mid”))<br>
{<br>
//   log((new StringBuilder()).append(“Playing “).append(fileList[midiCount]).toString());<br>
try<br>
{<br>
File midiFile = new File((new StringBuilder()).append(dir).append(fileList[midiCount]).toString());<br>
sequencer = MidiSystem.getSequencer();<br>
sequencer.setSequence(MidiSystem.getSequence(midiFile));<br>
sequencer.setLoopCount(-1);<br>
sequencer.open();<br>
sequencer.start();<br>
}<br>
catch(MidiUnavailableException mue)<br>
{<br>
//  log(“Midi device unavailable!”);<br>
}<br>
catch(InvalidMidiDataException imde)<br>
{<br>
//  log(“Invalid Midi data!”);<br>
}<br>
catch(IOException ioe)<br>
{<br>
// log(“I/O Error!”);<br>
}<br>
}<br>
} else<br>
{<br>
//  log(“no midi or mp3 files in folder”);<br>
}<br>
}<br>
}<br>
public void takeScreenshot(boolean flag)<br>
{<br>
BufferedImage bufferedimage;<br>
try<br>
{<br>
Robot robot = new Robot();<br>
Point point = getLocationOnScreen();<br>
Rectangle rectangle = new Rectangle(point.x, point.y, getWidth(), getHeight());<br>
bufferedimage = robot.createScreenCapture(rectangle);<br>
}<br>
catch(Throwable throwable)<br>
{<br>
JOptionPane.showMessageDialog(frame, “An error occured while trying to create a screenshot!”, “Screenshot Error”, 0);<br>
return;<br>
}<br>
String s = null;<br>
try<br>
{<br>
s = getNearestScreenshotFilename();<br>
}<br>
catch(IOException ioexception)<br>
{<br>
if(flag)<br>
{<br>
JOptionPane.showMessageDialog(frame, “A screenshot directory does not exist, and could not be created!”, “No Screenshot Directory”, 0);<br>
return;<br>
}<br>
}<br>
if(s == null &amp;&amp; flag)<br>
{<br>
JOptionPane.showMessageDialog(frame, “There are too many screenshots in the screenshot directory!\n”+“Delete some screen\n” +“shots and try again.” , “Screenshot Directory Full”, 0);<br>
return;<br>
}<br>
if(!flag)<br>
{<br>
final JFileChooser fileChooser = new JFileChooser();<br>
final JDialog fileDialog = createFileChooserDialog(fileChooser, “Save Screenshot”, this);<br>
final BufferedImage si = bufferedimage;<br>
JFileChooser _tmp = fileChooser;<br>
fileChooser.setFileSelectionMode(0);<br>
fileChooser.addChoosableFileFilter(new imageFileFilter());<br>
fileChooser.setCurrentDirectory(new File(”./screenshots/”));<br>
fileChooser.setSelectedFile(new File(s));<br>
JFileChooser _tmp1 = fileChooser;<br>
fileChooser.setDialogType(1);<br>
fileChooser.addActionListener(new ActionListener() {</p>
<pre><code>            public void actionPerformed(ActionEvent actionevent)
            {
                String s1 = actionevent.getActionCommand();
                if(s1.equals("ApproveSelection"))
                {
                    File file = fileChooser.getSelectedFile();
                    if(file != null &amp;&amp; file.isFile())
                    {
                        int i = JOptionPane.showConfirmDialog(frame, (new StringBuilder()).append(file.getAbsolutePath()).append(" already exists.\n"+"Do you want to replace it?").toString(), "Save Screenshot", 2);
                        if(i != 0)
                        {
                            return;
                        }
                    }
                    try
                    {
                        ImageIO.write(si, "png", file);
                    }
                    catch(IOException ioexception2)
                    {
                         JOptionPane.showMessageDialog(frame, "An error occured while trying to save the screenshot!\n"+"Please make sure you have\n"+" write access to the screenshot directory." , "Screenshot Error", 0);
                    }
                    fileDialog.dispose();
                } else
                if(s1.equals("CancelSelection"))
                {
                    fileDialog.dispose();
                }
            }


        {

        }
        });
        fileDialog.setVisible(true);
    } else
    {
        try
        {
            ImageIO.write(bufferedimage, "png", new File((new StringBuilder()).append("./screenshots/").append(s).toString()));
	System.out.println("You took a nice screenshot");
        }
        catch(IOException ioexception1)
        {
             JOptionPane.showMessageDialog(frame, "An error occured while trying to save the screenshot!\n"+"Please make sure you have\n"+" write access to the screenshot directory." , "Screenshot Error", 0);
        }
    }
}
</code></pre>
<p>public static String getNearestScreenshotFilename()<br>
throws IOException<br>
{<br>
File file = new File("./screenshots");<br>
int i = 0;<br>
do<br>
{<br>
String s = “Screenshot .png”;<br>
if(i &lt; 10)<br>
{<br>
s = s.replaceFirst(" “, (new StringBuilder()).append(” 000").append(i).toString());<br>
} else<br>
if(i &lt; 100)<br>
{<br>
s = s.replaceFirst(" “, (new StringBuilder()).append(” 00").append(i).toString());<br>
} else<br>
if(i &lt; 1000)<br>
{<br>
s = s.replaceFirst(" “, (new StringBuilder()).append(” 0").append(i).toString());<br>
} else<br>
if(i &lt; 10000)<br>
{<br>
s = s.replaceFirst(" “, (new StringBuilder()).append(” ").append(i).toString());<br>
}<br>
if((new File(file, s)).isFile())<br>
{<br>
i++;<br>
} else<br>
{<br>
return s;<br>
}<br>
} while(i &lt; 10000);<br>
return null;<br>
}</p>
<p>class imageFileFilter extends FileFilter<br>
{</p>
<pre><code>imageFileFilter()
{
}

public boolean accept(File file)
{
    String s = file.getName();
    return file.isDirectory() || s.toLowerCase().endsWith(".png") &amp;&amp; s.indexOf("$") == -1;
}

public String getDescription()
{
    return "PNG (*.png)";
}
</code></pre>
<p>}</p>
<pre><code>public URL getCodeBase()
{
	try
	{
		return new URL("http://127.0.0.1/Cache");
		//return new URL("http://po4.runescape.com:" + (80 + anInt870));
	}
	catch (Exception e)
	{
		return super.getCodeBase();
	}
}

public URL getDocumentBase()
{
	return getCodeBase();
}

public void loadError(String s)
{
	System.out.println("loadError: " + s);
}
public String getParameter(String key)
{
	if (key.equals("nodeid"))
		return "10";
	else if (key.equals("portoff"))
		return "0";
	else if (key.equals("lowmem"))
		return "1";
	else if (key.equals("free"))
		return "0";
	else
		return "";
}
</code></pre>
<p>public void displayPortSelect() {<br>
{<br>
int i = getPort();<br>
int i1 = 0;<br>
boolean flag = false;<br>
do<br>
try<br>
{<br>
String s2 = JOptionPane.showInputDialog(this, (new StringBuilder()).append(“Current port: “+ port), “Enter Port”, 3);<br>
if(s2 != null)<br>
{<br>
if(s2.equals(””))<br>
{<br>
JOptionPane.showMessageDialog(this, “Invalid port number!\nMost servers use 43594.”, “Invalid Port Number”, 2);<br>
} else<br>
{<br>
i = Integer.parseInt(s2);<br>
if(i &lt; 1 || i &gt; 65535)<br>
{<br>
JOptionPane.showMessageDialog(this, “Invalid port number!\nMost servers use 43594.”, “Invalid Port Number”, 2);<br>
} else<br>
{<br>
setServer(i);<br>
flag = true;<br>
}<br>
}<br>
} else<br>
{<br>
flag = true;<br>
}<br>
}<br>
catch(NumberFormatException numberformatexception)<br>
{<br>
JOptionPane.showMessageDialog(this, “Invalid port number!\nMost servers use 43594.”, “Invalid Port Number”, 2);<br>
}<br>
while(++i1 &lt; 3 &amp;&amp; !flag);<br>
}<br>
}<br>
public void displayWorldSelect() {<br>
try<br>
{<br>
String s1 = JOptionPane.showInputDialog(this, (new StringBuilder()).append(“Current server: “+ server), “Enter Server”, 3);<br>
if(s1 == null)<br>
{<br>
// log(“Canceled”);<br>
} else<br>
if(s1.equalsIgnoreCase(””))<br>
{<br>
// log(“Sorry, have to have some input”);<br>
} else<br>
{<br>
log((new StringBuilder()).append("Set world to: ").append(s1).toString());<br>
server = s1;<br>
}<br>
}<br>
catch(Exception e)<br>
{<br>
//  log((new StringBuilder()).append("You must enter a numeric value!: ").append(e).toString());</p>
<pre><code>		}
	}
		public void actionPerformed(ActionEvent evt)
		{
		String cmd = evt.getActionCommand();
		if (cmd != null)
		{
		if(cmd.equalsIgnoreCase("Next"))
        {
            midiPlayer("Next");
		}
        if(cmd.equalsIgnoreCase("Previous"))
        {
            midiPlayer("Previous");
        }
	if(cmd.equalsIgnoreCase("Play") || cmd.equalsIgnoreCase("Stop"))
	{
            midiPlayer(cmd);
	}
            if(cmd.equalsIgnoreCase("Stop"))
            {
                midiPlayer("Stop");
            }
	if(cmd.equalsIgnoreCase("Screenshot"))
	{
	    takeScreenshot(true);
	}[/code]
</code></pre>
<p>how would i end this file?</p>
<p>i think the problem is right here. The last piece of the file</p>
<p><code>			public void actionPerformed(ActionEvent evt)
			{
			String cmd = evt.getActionCommand();
			if (cmd != null)
			{
			if(cmd.equalsIgnoreCase("Next"))
	        {
	            midiPlayer("Next");
			}
	        if(cmd.equalsIgnoreCase("Previous"))
	        {
	            midiPlayer("Previous");
	        }
		if(cmd.equalsIgnoreCase("Play") || cmd.equalsIgnoreCase("Stop"))
		{
 	            midiPlayer(cmd);
		}
                if(cmd.equalsIgnoreCase("Stop"))
                {
                    midiPlayer("Stop");
                }
		if(cmd.equalsIgnoreCase("Screenshot"))
		{
		    takeScreenshot(true);
		}</code></p>
<p>oh yah and heres the error im getting</p>
<p><a href="http://www.servimg.com/image_preview.php?i=78&amp;u=12153951" data-bbcode="true" rel="nofollow noopener"><img src="http://i45.servimg.com/u/f45/12/15/39/51/help12.jpg" alt width="1" height="1"></a></p>
<p>above is my compiler, i white outted the title cuz i dont want you guys to see it… yet</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/how-would-i-end-this-file-nooby-question-lol/211589/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/how-would-i-end-this-file-nooby-question-lol/211589/1</link>
        <pubDate>Wed, 11 Jun 2008 05:58:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-211589-1</guid>
        <source url="https://forum.moparisthebest.com/t/how-would-i-end-this-file-nooby-question-lol/211589.rss">How would I end this file? nooby question lol</source>
      </item>
  </channel>
</rss>
