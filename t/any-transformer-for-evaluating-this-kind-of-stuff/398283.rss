<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Any transformer for evaluating this kind of stuff</title>
    <link>https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283</link>
    <description>Say you got something like this

[code]
 public void method1453(int i) {
	anInt1475++;
...
	int i_0_
	    = i_1_ = i_2_ = i_3_ = i_4_ = i_5_ = i_6_ = i_7_ = 		-1640531527;
	if (i == -1944247670) {
...
for (int i_8_ = 0; (i_8_ ^ 0xffffffff) &gt; -5; i_8_++)
[/code]

any cleaners that will transform the above like.
1640531527 to 0x9e3779b9

by doing like
1640531527 &amp; 0xffffffff = 0x9e3779b9

and removing crap like (okay maybe this one will be complicated).
if (i == -1944247670)

Other things like
for (int i_8_ = 0; (i_8_ ^ 0xffffffff) &gt; -5; i_8_++)
to
for (int i_8_ = 0; i_8_ &lt; 4; i_8_++)

But the first transformer any like that currently exists right now?


I still don&#39;t understand how to deobfuscate the huge shifts like
i_0_ ^= i_1_ &lt;&lt; -1712069621;

how do I get the original number?
nvm about the shifts I figured it out.. a bit clever since shifts can overflow.. you just do
-1712069621 &amp; 31  to get original number.
Thanks</description>
    
    <lastBuildDate>Tue, 19 Jul 2011 18:27:05 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Any transformer for evaluating this kind of stuff</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="19" data-topic="398283">
<div class="title">
<div class="quote-controls"></div>
 super_:</div>
<blockquote>
<p>his naive solution is akin to the first pass of the ideal solution.</p>
</blockquote>
</aside>
<p>Yes, that’s what I was saying.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/20">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/20</link>
        <pubDate>Tue, 19 Jul 2011 18:27:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398283-20</guid>
        <source url="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283.rss">Any transformer for evaluating this kind of stuff</source>
      </item>
      <item>
        <title>Any transformer for evaluating this kind of stuff</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>who said it was a one-size-fits-all solution? it is composed of multiple steps. his naive solution is akin to the first pass of the ideal solution.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/19">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/19</link>
        <pubDate>Tue, 19 Jul 2011 16:08:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398283-19</guid>
        <source url="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283.rss">Any transformer for evaluating this kind of stuff</source>
      </item>
      <item>
        <title>Any transformer for evaluating this kind of stuff</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>As to removing dummy arguments, I think you are over-complicating it trying to find a one-size fits all solution for it.  Implementing what you suggested will remove a very large percentage of the dummy arguments, and there really isn’t a much better way to do it than what you said, iterating over all method calls, etc etc.  Do that and see how it looks, then write other methods to remove other dummy arguments, until they are all removed or you are happy with it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/18</link>
        <pubDate>Tue, 19 Jul 2011 04:32:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398283-18</guid>
        <source url="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283.rss">Any transformer for evaluating this kind of stuff</source>
      </item>
      <item>
        <title>Any transformer for evaluating this kind of stuff</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>find where j1 is set and ~ it</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/17</link>
        <pubDate>Tue, 19 Jul 2011 04:09:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398283-17</guid>
        <source url="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283.rss">Any transformer for evaluating this kind of stuff</source>
      </item>
      <item>
        <title>Any transformer for evaluating this kind of stuff</title>
        <dc:creator><![CDATA[@sspoke sspoke]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sspoke">@sspoke</a> wrote:</p>
          <blockquote>
              <p>how do I more clearly rewrite this, or is that the clearest it can be.</p>
<pre><code class="lang-auto"></code></pre>
<p>this</p>
<pre><code class="lang-auto"></code></pre>
<p>or (don’t like the fact that length is made negative)</p>
<pre><code class="lang-auto"></code></pre>
<p>or</p>
<pre><code class="lang-auto"></code></pre>
<p>or</p>
<pre><code class="lang-auto"></code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/16</link>
        <pubDate>Tue, 19 Jul 2011 02:19:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398283-16</guid>
        <source url="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283.rss">Any transformer for evaluating this kind of stuff</source>
      </item>
      <item>
        <title>Any transformer for evaluating this kind of stuff</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>[quote=“Speljohan, post:14, topic:398283”][quote author=sspoke link=topic=495418.msg3671605#msg3671605 date=1310958785]<br>
Btw most likely the obfuscation jagex used is somewhere on the internet. Because they always steal and use other technologies like ISSAC/Huffman.<br>
[/quote]Pretty naive statement. They used to use ZKM, but now has an in-house team working on obfuscation. Most of the client is written entirely on their own, including native bindings for opengl and directx.[/quote]</p>
<p>they still use zkm</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/15</link>
        <pubDate>Mon, 18 Jul 2011 23:05:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398283-15</guid>
        <source url="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283.rss">Any transformer for evaluating this kind of stuff</source>
      </item>
      <item>
        <title>Any transformer for evaluating this kind of stuff</title>
        <dc:creator><![CDATA[@Speljohan Speljohan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/speljohan">@Speljohan</a> wrote:</p>
          <blockquote>
              <p>[quote=“sspoke, post:12, topic:398283”]Btw most likely the obfuscation jagex used is somewhere on the internet. Because they always steal and use other technologies like ISSAC/Huffman.[/quote]Pretty naive statement. They used to use ZKM, but now has an in-house team working on obfuscation. Most of the client is written entirely on their own, including native bindings for opengl and directx.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/14</link>
        <pubDate>Mon, 18 Jul 2011 12:42:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398283-14</guid>
        <source url="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283.rss">Any transformer for evaluating this kind of stuff</source>
      </item>
      <item>
        <title>Any transformer for evaluating this kind of stuff</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>er i wouldn’t say they’re stealing isaac / huffman but using a public-domain algorithm rather than reinvent the wheel</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/13</link>
        <pubDate>Mon, 18 Jul 2011 03:45:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398283-13</guid>
        <source url="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283.rss">Any transformer for evaluating this kind of stuff</source>
      </item>
      <item>
        <title>Any transformer for evaluating this kind of stuff</title>
        <dc:creator><![CDATA[@sspoke sspoke]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sspoke">@sspoke</a> wrote:</p>
          <blockquote>
              <p>Yeah that wikipedia… always has some good stuff but you can never find it when you need to.</p>
<p>Anyways I just put the dummy remover on hold and remaking the wheel for whats been done but I cannot find<br>
i’m working on the 3rd thing and having pretty good results.<br>
Removing the IXOR’s ILOAD’s and replacing the IFIMCMP## with the opposite value.<br>
Seems like I won’t have any problems doing this will I?</p>
<p>Seems I may run into a problem with bitwise operations maybe not</p>
<p>Btw most likely the obfuscation jagex used is somewhere on the internet. Because they always steal and use other technologies like ISSAC/Huffman.</p>
<p>I remember when I discovered they used issac back when RSC was still free 2 play told Krichevskoy and probably thats how word got spread but you never know.  <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/12</link>
        <pubDate>Mon, 18 Jul 2011 03:13:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398283-12</guid>
        <source url="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283.rss">Any transformer for evaluating this kind of stuff</source>
      </item>
      <item>
        <title>Any transformer for evaluating this kind of stuff</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>well of course<br>
for complicated expressions you simply provide the dependencies and evaluate<br>
<aside class="onebox wikipedia">
  <header class="source">
      <a href="https://en.wikipedia.org/wiki/Partial_evaluation" target="_blank" rel="nofollow noopener">en.wikipedia.org</a>
  </header>
  <article class="onebox-body">
    

<h3><a href="https://en.wikipedia.org/wiki/Partial_evaluation" target="_blank" rel="nofollow noopener">Partial evaluation</a></h3>

<p>In computing, partial evaluation is a technique for several different types of program optimization by specialization. The most straightforward application is to produce new programs which run faster than the originals while being guaranteed to behave in the same way. A computer program, prog, is seen as a mapping of input data into output data: 
  
    
      
        
          I
          
            s
            t
            a
            t
            i
            c
          
        
 ...</p>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>
</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/11</link>
        <pubDate>Mon, 18 Jul 2011 03:04:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398283-11</guid>
        <source url="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283.rss">Any transformer for evaluating this kind of stuff</source>
      </item>
      <item>
        <title>Any transformer for evaluating this kind of stuff</title>
        <dc:creator><![CDATA[@sspoke sspoke]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sspoke">@sspoke</a> wrote:</p>
          <blockquote>
              <p>in gs.java</p>
<pre><code class="lang-auto">   static final void a(wf wf1, int i, int j, int k) {
   ...
   fv20.m.addUShort(k1, j + 0xafd801a7);
   fv1.m.addUShort(i1 + vl.s, j ^ 0xafd801a9);
   ...
  }</code></pre>
<p>j is a parameter yup…</p>
<p>it’s used in paa.java</p>
<pre><code class="lang-auto">                                    for(id id1 = (id)bi1.a(0); id1 != null; id1 = (id)bi1.a((byte)86))
                                    {
                                        if(~j5 == ~l2)
                                        {
                                            gs.a((wf)id1.A.a.n, k2, 1, i2);
                                            li.d(0);
                                            return;
                                        }
                                        j5++;
                                    }</code></pre>
<p>Yup j is always 1…</p>
<p>both operations generate same number too… pretty cool</p>
<p>1 + 0xafd801a7 = 0xafd801a8 [2950169000]<br>
(1 ^ 0xafd801a9) =  0xafd801a8  [2950169000]</p>
<p>Shit this gave me a excellent idea!.. lol the name of a the topic! evaluating… so I can use err eval(exp) command to get true same values.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/10</link>
        <pubDate>Mon, 18 Jul 2011 02:52:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398283-10</guid>
        <source url="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283.rss">Any transformer for evaluating this kind of stuff</source>
      </item>
      <item>
        <title>Any transformer for evaluating this kind of stuff</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>those two calls to addUShort() whose dummy arguments aren’t plain constants<br>
i’m willing to bet j is a dummy parameter as well<br>
besides sspoke is an alias pkedpker used… idk what you mean by banned for idiocy but it was a harmless question</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/9</link>
        <pubDate>Mon, 18 Jul 2011 02:49:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398283-9</guid>
        <source url="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283.rss">Any transformer for evaluating this kind of stuff</source>
      </item>
      <item>
        <title>Any transformer for evaluating this kind of stuff</title>
        <dc:creator><![CDATA[@sspoke sspoke]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sspoke">@sspoke</a> wrote:</p>
          <blockquote>
              <p>what you mean contexts to the calls that break your pattern?</p>
<p>what no i heard pkedpker got banned for Idiocy</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/8</link>
        <pubDate>Mon, 18 Jul 2011 02:47:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398283-8</guid>
        <source url="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283.rss">Any transformer for evaluating this kind of stuff</source>
      </item>
      <item>
        <title>Any transformer for evaluating this kind of stuff</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>the dummy argument stripper is all still theory for now [well, psb DID claim to have written one several years ago… that ran extremely quickly… and uses some glorious “node map”… but you can’t rely on that]<br>
as i said before your approach will work for a majority but not all <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"><br>
mind giving contexts to the calls that break your pattern?</p>
<p>ps aren’t you pkedpker from stealingyour.info?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/7</link>
        <pubDate>Mon, 18 Jul 2011 02:35:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398283-7</guid>
        <source url="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283.rss">Any transformer for evaluating this kind of stuff</source>
      </item>
      <item>
        <title>Any transformer for evaluating this kind of stuff</title>
        <dc:creator><![CDATA[@sspoke sspoke]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sspoke">@sspoke</a> wrote:</p>
          <blockquote>
              <p>haha yeah super_ you pretty much taught all this through to the maximum limit lol.</p>
<p>So i’m guessing that multi-pass argument dummy remover is still just theory for now? or was actually created and kept for private purposes…  I understand the reasons… jagex could break it any time if it ever went public.</p>
<p>Hell I don’t know what to say seems like alot more work then I excepted it to be.</p>
<p>They should just update JAD to be more reliable lol.</p>
<p>Haven’t stepped the code too much but my idea may still work even with<br>
if(x &lt; -3).<br>
With enough argument indexes stored in memory, you can logically figure out which one is a dummy argument with probably more then 50% accuracy. Plus you can even hit 100% accuracy if the x argument is &gt; -3    [-2 to any positive number].</p>
<p>as for working backwards due to the fact that &lt; -3  can only be…  -4 to  -128? (assuming that x is signed byte). But yeah… it can also be… signed int which drops accuracy pretty dang low.</p>
<p>Shit but dummy methods calling dummy methods seems way above my head of coding. So I guess i’ll give up for the meanwhile.</p>
<p>Anywho I did notice after I applied a few of my renaming transformers on the latest runescape client. [Mostly just Stream renamer].</p>
<p>Seems to always be (byte)-124… (maybe I’m just getting lucky… but in fact Stream is pretty much all the client needed to be renamed on anyways so I guess my way should work for now).</p>
<pre><code class="lang-auto">stream.addInt((byte)-124, ai[0]);
stream.addInt((byte)-124, ai[1]);
stream.addInt((byte)-124, ai[2]);
stream.addInt((byte)-124, ai[3]);
addInt((byte)-124, k1);
addInt((byte)-124, j2);
addInt((byte)-124, k2);
addInt((byte)-124, l1);
addInt((byte)-124, i2);
fv1.m.addInt((byte)-124, oca1.Zc);
stream1.addInt((byte)-124, 0x4d546864);
stream1.addInt((byte)-124, 6);
stream1.addInt((byte)-124, 0x4d54726b);
vt1.addInt((byte)-124, k2);
vt1.addInt((byte)-124, j3);
vt1.addInt((byte)-124, l3);
vt1.byteOffset = byte3 + dc[k1] * byte1;
vt1.addInt((byte)-124, l2);
vt1.byteOffset = byte1 * U[k1] + byte3;
vt1.addInt((byte)-124, l2);
vt1.byteOffset = byte3 + Xb[k1] * byte1;
vt1.addInt((byte)-124, l2);
mb.addInt((byte)-124, ria.ab.e(-112));
mb.addInt((byte)-124, sb.T.e(126));
mb.addInt((byte)-124, sp.c.e(i1 ^ 0xffffff8d));
mb.addInt((byte)-124, eha.c.e(116));
mb.addInt((byte)-124, ns.q.e(95));
mb.addInt((byte)-124, ofa.c.e(-69));
mb.addInt((byte)-124, oaa.b.e(-106));
mb.addInt((byte)-124, ada.Z.e(90));
mb.addInt((byte)-124, am.b.e(i1 ^ 0xffffffef));
mb.addInt((byte)-124, wga.b.e(-100));
mb.addInt((byte)-124, bg.q.e(111));
mb.addInt((byte)-124, ija.p.e(i1 ^ 0x7e));
mb.addInt((byte)-124, qe.I.e(-86));
mb.addInt((byte)-124, om.C.e(101));
mb.addInt((byte)-124, kfa.f.e(i1 ^ 0x70));
mb.addInt((byte)-124, lb.x.e(-96));
mb.addInt((byte)-124, on.B.e(-92));
mb.addInt((byte)-124, vq.v.e(-93));
mb.addInt((byte)-124, oda.e.e(-93));
mb.addInt((byte)-124, ufa.f.e(110));
mb.addInt((byte)-124, a.e(106));
mb.addInt((byte)-124, go.u.e(118));
mb.addInt((byte)-124, bd.u.e(-93));
mb.addInt((byte)-124, kba.h.e(-67));
mb.addInt((byte)-124, op.u.e(i1 + 80));
mb.addInt((byte)-124, lba.b.e(105));
mb.addInt((byte)-124, jh.g.e(125));
mb.addInt((byte)-124, pn.e.e(-60));
mb.addInt((byte)-124, uia.m.e(93));
mb.addInt((byte)-124, uf.l.e(-31));
mb.addInt((byte)-124, sc.W.e(-78));
mb.addInt((byte)-124, ht.c(-12060));
</code></pre>
<p>To be honest I just attempted to check all<br>
addInt((byte)###     from -128 to 128 only (-124) hits…</p>
<p>so 100% all stream dummy arguments can be removed with one pass.</p>
<p>Same test I did on addUShort  only one hit… 0xafd801a8</p>
<pre><code class="lang-auto">fv1.m.addUShort(ur.k, 0xafd801a8);
fv1.m.addUShort(ef.c, 0xafd801a8);
fv1.m.addUShort(iga.d, 0xafd801a8);
stream.addUShort(wb.j, 0xafd801a8);
stream.addUShort(i, 0xafd801a8);
fv1.m.addUShort(i, 0xafd801a8);
fv36.m.addUShort(mt1.ub, 0xafd801a8);
fv2.m.addUShort((int)(l1 &gt;&gt;&gt; 32) &amp; 0x7fffffff, 0xafd801a8);</code></pre>
<p>okay it fails…</p>
<pre><code class="lang-auto">fv1.m.addUShort(i1 + vl.s, j ^ 0xafd801a9);
fv20.m.addUShort(k1, j + 0xafd801a7);</code></pre>
<p>Blah it haven’t really sunk into my head that quickly… reason why addInt() worked so well is because it can only be -124 if it’s not it adds a extra shortA()</p>
<pre><code class="lang-auto">    final void addInt(byte byte0, int i1)
    {
        try
        {
            J++;
            buffer[byteOffset++] = (byte)(i1 &gt;&gt; 24);
            buffer[byteOffset++] = (byte)(i1 &gt;&gt; 16);
            buffer[byteOffset++] = (byte)(i1 &gt;&gt; 8);
            buffer[byteOffset++] = (byte)i1;
            if(byte0 != -124)
            {
                addShortA(false, -106);
                return;
            }
        }
        catch(RuntimeException runtimeexception)
        {
            throw kia.a(runtimeexception, Hb[56] + byte0 + ',' + i1 + ')');
        }
    }</code></pre>
<p>Meh I may have a trick to solve this, but it would involve comparing with a old fully renamed no dummys of the client, rename methods accordingly with a bunch of very stable hooks then find out whats extra in the function/method, that extra stuff would be the dummy method or variable etc. But it won’t cover the whole client of course you know what scratch that idea.</p>
<p>dang…</p>
<p>You know what I’ll actually try to do something I don’t care about speed or memory usage as long as it does a good job optimization comes last</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/6</link>
        <pubDate>Mon, 18 Jul 2011 02:20:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398283-6</guid>
        <source url="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283.rss">Any transformer for evaluating this kind of stuff</source>
      </item>
      <item>
        <title>Any transformer for evaluating this kind of stuff</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>your solution to dummy arguments and their opaque predicates is a naive one<br>
what you describe is akin to an intraprocedural call graph of every method of the client with analysis done on each argument, great that’s a given<br>
the problem with your solution is that it isn’t a simple equality or inequality predicate now where every call has a constant argument, there are also conditionals of varying degrees of erm specificity [not the best choice of words] such as</p>
<pre><code class="lang-auto">boolean is_mopman_useful(int x) {
    if (x &lt; -3) {
        return true;
    }
    return false;
}</code></pre>
<p>you’ll find argument values have a broader range<br>
you’ll also find that sometimes dummy methods are called from inside the “handler” code from another dummy method<br>
when this happens you can guarantee your naive single-pass analysis will show dummy args have values that they shouldn’t be and would never be under normal code flow<br>
… not to mention you’ll ALSO find that dummy args are even used to propagate other dummy args as well like abraham mentioned<br>
you’d need to make several passes to eliminate that</p>
<p>ps it might make you happy to know however that your approach would work fine more or less on earlier clients ~317</p>
<p>in response to “dummy vars” your check is a hazardous one that should not be the sole determining factor on its own<br>
instead it should use such a pattern as a heuristic before performing some liveness data-flow analysis<br>
you’ll find each true dummy isn’t ever used, so if the analysis turns up that a variable was dead the entire function i.e. its single definition had no uses then clearly it is dead code and ought to be stripped</p>
<p>good luck</p>
<p>pps you may want to revise the name “outStream” and presumably “stream”; in the context of the client it is more than likely you are referring to the class that allows i/o for network packets, which only extends a simple class that merely handles generic i/o from a buffer with support for block and stream ciphers i.e. rsa and isaac</p>
<p>ppps</p>
<blockquote>1640531527 &amp; 0xffffffff = 0x9e3779b9</blockquote>
1640531527 is simply a base-10 view of the same number; it's decompiler convention whether to emit as such in hexadenary or denary
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/5</link>
        <pubDate>Mon, 18 Jul 2011 01:18:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398283-5</guid>
        <source url="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283.rss">Any transformer for evaluating this kind of stuff</source>
      </item>
      <item>
        <title>Any transformer for evaluating this kind of stuff</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>despite the fact that this method would be horribly inefficient (it may not be so bad if you use asm’s visitor api, but nevertheless, regardless of speed, it lacks memory efficiency as well) and inaccurate, many dummy args do not remain constant in the methods they are passed to, they are modified with dummy operations</p>
<p>believe me, many of us have given a great amount of thought to this – it’s not as easy as it seems at first glance</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/4</link>
        <pubDate>Mon, 18 Jul 2011 01:11:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398283-4</guid>
        <source url="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283.rss">Any transformer for evaluating this kind of stuff</source>
      </item>
      <item>
        <title>Any transformer for evaluating this kind of stuff</title>
        <dc:creator><![CDATA[@sspoke sspoke]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sspoke">@sspoke</a> wrote:</p>
          <blockquote>
              <p>for dummy arguments… which are like</p>
<pre><code class="lang-auto">void a(int a) {
  if(a != -43)
    a(-53)
}</code></pre>
<p>I been thinking about this… can this be solved by iterating all classes all methods and if a method contains and map all INVOKESTATIC/INVOKESPECIAL pretty much all INVOKES<br>
call arguments like<br>
outStream.addByte((byte)-43, j);<br>
outStream.addByte((byte)-43, 23);</p>
<p>to</p>
<p>-43,j<br>
-43,23<br>
etc…</p>
<p>then find which argument of mapped arguments stays the same… in this case it’s -43… so it’s the dummy… then just remove that argument from method and get rid of that if condition statement.</p>
<p>I’ve just started with bytecode editing and I just want to know if anyone attempted this, maybe I shouldn’t waste my time here.</p>
<p>I can easily remove crap like this<br>
int i1 = 125 % ((j - 53) / 63);<br>
int j1 = -106 % ((i1 - 4) / 63);<br>
int k = 84 % ((j - -26) / 39);<br>
int j1 = -63 % ((-60 - i1) / 32);<br>
int i = -9 % ((22 - byte0) / 44);</p>
<p>due to the fact they all keep the same bytecode pattern signature. That will remove much of the dummy variables.</p>
<p>But then you wonder… what happens if that crap above is actually some useful peice of code… it may be possible so it’s a big risk.</p>
<p>Of course the best fix would be to do something similar to Visual C# IDE… where on compile time it detects declared but never used variables. But porting that to BECL would I imagine have to require a genius.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/3</link>
        <pubDate>Sun, 17 Jul 2011 23:32:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398283-3</guid>
        <source url="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283.rss">Any transformer for evaluating this kind of stuff</source>
      </item>
      <item>
        <title>Any transformer for evaluating this kind of stuff</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <ol>
<li>decompiler convention</li>
<li>dummy arguments are still being solved</li>
<li>already exists; ~i_8_ &gt; -5 -&gt; -i_8_ &lt; ~(-5)</li>
<li>shifts overflow, just do &amp; 0x1f</li>
</ol>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/2</link>
        <pubDate>Wed, 08 Jun 2011 20:36:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398283-2</guid>
        <source url="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283.rss">Any transformer for evaluating this kind of stuff</source>
      </item>
      <item>
        <title>Any transformer for evaluating this kind of stuff</title>
        <dc:creator><![CDATA[@sspoke sspoke]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sspoke">@sspoke</a> wrote:</p>
          <blockquote>
              <p>Say you got something like this</p>
<pre><code class="lang-auto"> public void method1453(int i) {
	anInt1475++;
...
	int i_0_
	    = i_1_ = i_2_ = i_3_ = i_4_ = i_5_ = i_6_ = i_7_ = 		-1640531527;
	if (i == -1944247670) {
...
for (int i_8_ = 0; (i_8_ ^ 0xffffffff) &gt; -5; i_8_++)</code></pre>
<p>any cleaners that will transform the above like.<br>
1640531527 to 0x9e3779b9</p>
<p>by doing like<br>
1640531527 &amp; 0xffffffff = 0x9e3779b9</p>
<p>and removing crap like (okay maybe this one will be complicated).<br>
if (i == -1944247670)</p>
<p>Other things like<br>
for (int i_8_ = 0; (i_8_ ^ 0xffffffff) &gt; -5; i_8_++)<br>
to<br>
for (int i_8_ = 0; i_8_ &lt; 4; i_8_++)</p>
<p>But the first transformer any like that currently exists right now?</p>
<p>I still don’t understand how to deobfuscate the huge shifts like<br>
i_0_ ^= i_1_ &lt;&lt; -1712069621;</p>
<p>how do I get the original number?<br>
nvm about the shifts I figured it out… a bit clever since shifts can overflow… you just do<br>
-1712069621 &amp; 31  to get original number.<br>
Thanks</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283/1</link>
        <pubDate>Wed, 08 Jun 2011 02:20:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398283-1</guid>
        <source url="https://forum.moparisthebest.com/t/any-transformer-for-evaluating-this-kind-of-stuff/398283.rss">Any transformer for evaluating this kind of stuff</source>
      </item>
  </channel>
</rss>
