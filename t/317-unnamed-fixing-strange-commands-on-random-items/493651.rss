<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[317][unnamed]Fixing Strange commands on random items</title>
    <link>https://forum.moparisthebest.com/t/317-unnamed-fixing-strange-commands-on-random-items/493651</link>
    <description>This is for unrenamed clients, so it works right :)

open Class8, in your client
Search for [code]Class8 method198(int[/code]
Find this part
[code]        aClass30_Sub2_Sub2_183.anInt1406 = anIntArray195[i];
        class8.anInt157 = i;
        class8.method197();
        class8.method203(true, aClass30_Sub2_Sub2_183);[/code]
Enter This directly after those.
[code]

if (new File(signlink.findcachedir() + &quot;./EZ_load.txt&quot;).exists()) {
            String line;
            try {
                BufferedReader file = new BufferedReader(new FileReader(signlink.findcachedir() + &quot;./EZ_load.txt&quot;));
                boolean isItem = false;
                do {


                    try {
                        line = file.readLine();
                    } catch (java.io.IOException ioe) {
                        line = null;
                    }
                    if (line != null) {
                        if (line.split(&quot;\t&quot;).length &gt; 1) {
                            String token, token2, token3[];
                            try {
                                token = line.split(&quot;\t&quot;)[0];
                            } catch (Exception e) {
                                token = &quot;&quot;;
                            }
                            token2 = line.split(&quot;\t&quot;)[1].trim();
                            if (token.contains(&quot;Array&quot;)) {
                                token3 = token2.replaceAll(&quot;, &quot;, &quot;,&quot;).split(&quot;,&quot;);
                                for (int k = 0; k &lt; token3.length; k++) {
                                    token3[k] = token3[k].trim();
                                }
                            } else {
                                token3 = null;
                            }
                            if (token.equals(&quot;ITEMID&quot;) &amp;&amp; !isItem) {

                                if (i == Integer.parseInt(token2)) {
                                    isItem = true;
                                }
                            } else if (token.equals(&quot;ITEMID&quot;) &amp;&amp; isItem) {
                                break;
                            } else if (token.equals(&quot;aString170&quot;) &amp;&amp; isItem) {
                                class8.aString170 = token2;
                            } else if (token.equals(&quot;aByteArray178&quot;) &amp;&amp; isItem) {
                                class8.aByteArray178 = new byte[token2.getBytes().length];
                                class8.aByteArray178 = new String(token2.getBytes()).getBytes();
                            } else if (token.equals(&quot;anIntArray156&quot;) &amp;&amp; isItem) {
                                class8.anIntArray156 = new int[token3.length];
                                for (int j = 0; j &lt; token3.length; j++) {
                                    class8.anIntArray156[j] = Integer.parseInt(token3[j]);
                                }
                            } else if (token.equals(&quot;anIntArray193&quot;) &amp;&amp; isItem) {
                                class8.anIntArray193 = new int[token3.length];
                                for (int j = 0; j &lt; token3.length; j++) {
                                    class8.anIntArray193[j] = Integer.parseInt(token3[j]);
                                }
                            } else if (token.equals(&quot;aStringArray189&quot;) &amp;&amp; isItem) {
                                class8.aStringArray189 = new String[token3.length];
                                for (int k = 0; k &lt; token3.length; k++) {
                                    if (token3[k].trim().equals(&quot;null&quot;)) {
                                        token3[k] = null;
                                    }
                                }
                                System.arraycopy(token3, 0, class8.aStringArray189, 0, token3.length);
                            } else if (token.equals(&quot;aStringArray168&quot;) &amp;&amp; isItem) {
                                class8.aStringArray168 = new String[token3.length];
                                for (int k = 0; k &lt; token3.length; k++) {
                                    if (token3[k].trim().equals(&quot;null&quot;)) {
                                        token3[k] = null;
                                    }
                                }
                                System.arraycopy(token3, 0, class8.aStringArray168, 0, token3.length);
                            } else if (token.equals(&quot;anIntArray201&quot;) &amp;&amp; isItem) {
                                class8.anIntArray201 = new int[token3.length];
                                System.out.println(token2 + &quot; &quot; + class8.anIntArray201.length + &quot; &quot; + token3.length);
                                for (int j = 0; j &lt; token3.length; j++) {
                                    class8.anIntArray201[j] = Integer.decode(token3[j]);
                                }
                            } else if (token.equals(&quot;anIntArray160&quot;) &amp;&amp; isItem) {
                                class8.anIntArray160 = new int[token3.length];
                                for (int j = 0; j &lt; token3.length; j++) {
                                        class8.anIntArray160[j] = Integer.decode(token3[j]);
                                }
                            } else if (token.equals(&quot;anInt174&quot;) &amp;&amp; isItem) {
                                class8.anInt174 = Integer.parseInt(token2);
                            } else if (token.equals(&quot;anInt181&quot;) &amp;&amp; isItem) {
                                class8.anInt181 = Integer.parseInt(token2);
                            } else if (token.equals(&quot;anInt190&quot;) &amp;&amp; isItem) {
                                class8.anInt190 = Integer.parseInt(token2);
                            } else if (token.equals(&quot;anInt204&quot;) &amp;&amp; isItem) {
                                class8.anInt204 = Integer.parseInt(token2);
                            } else if (token.equals(&quot;anInt169&quot;) &amp;&amp; isItem) {
                                class8.anInt169 = Integer.parseInt(token2);
                            } else if (token.equals(&quot;anInt194&quot;) &amp;&amp; isItem) {
                                class8.anInt194 = Integer.parseInt(token2);
                            } else if (token.equals(&quot;anInt165&quot;) &amp;&amp; isItem) {
                                class8.anInt165 = Integer.parseInt(token2);
                            } else if (token.equals(&quot;anInt188&quot;) &amp;&amp; isItem) {
                                class8.anInt188 = Integer.parseInt(token2);
                            } else if (token.equals(&quot;anInt200&quot;) &amp;&amp; isItem) {
                                class8.anInt200 = Integer.parseInt(token2);
                            } else if (token.equals(&quot;anInt164&quot;) &amp;&amp; isItem) {
                                class8.anInt164 = Integer.parseInt(token2);
                            } else if (token.equals(&quot;anInt166&quot;) &amp;&amp; isItem) {
                                class8.anInt166 = Integer.parseInt(token2);
                            } else if (token.equals(&quot;anInt173&quot;) &amp;&amp; isItem) {
                                class8.anInt173 = Integer.parseInt(token2);
                            }
                        } else {
                            if (line.equals(&quot;&quot;) &amp;&amp; isItem) {
                                break;
                            }
                            continue;
                        }
                    }
                } while (line != null);
            } catch (FileNotFoundException fnfe) {
            }

        }
        if (class8.aStringArray189 != null) {
            if (class8.aStringArray189[0] != null &amp;&amp; class8.aStringArray189[0].contains(&quot;@&quot;)) {
                class8.aStringArray189[0] = null;
            }

        }[/code]
What this code does is basically set it up to read many different lines from file :) at my convinence. The code also fixes the random &quot;0t * &amp; Dwarf Remains. &quot; command
now find your dumpItems() { method
Add a new method Above or below that one like this
[code]
    public static void dumpItems(int list[]) {
        for (int i = 0; i &lt; list.length; i++) {
            Class8 class8 = method198(list[i]);
            BufferedWriter bw = null;

            try {
                bw = new BufferedWriter(new FileWriter(signlink.findcachedir() + &quot;./EZ_load.txt&quot;, true));
                bw.newLine();
                bw.write(&quot;ITEMID\t&quot; + list[i]);
                bw.newLine();
                bw.write(&quot;aString170\t&quot; + class8.aString170);
                bw.newLine();
                if (class8.aByteArray178 != null) {
                    bw.write(&quot;aByteArray178\t&quot; + new String(class8.aByteArray178));
                    bw.newLine();
                }
                if (class8.anIntArray156 != null) {
                    for (int i2 = 0; i2 &lt; class8.anIntArray156.length; i2++) {
                        if (i2 == 0) {
                            bw.write(&quot;anIntArray156\t&quot;);
                        }
                        
                        if (i2 != class8.anIntArray156.length - 1) {
                            bw.write(&quot;&quot; + class8.anIntArray156[i2] + &quot;, &quot;);
                        } else {
                            bw.write(&quot;&quot; + class8.anIntArray156[i2]);
                            bw.newLine();
                        }
                    }
                }
                if (class8.anIntArray160 != null) {
                    for (int i2 = 0; i2 &lt; class8.anIntArray160.length; i2++) {
                        if (i2 == 0) {
                            bw.write(&quot;anIntArray160\t&quot;);
                        }
                        if (i2 != class8.anIntArray160.length - 1) {
                            bw.write(&quot;&quot; + class8.anIntArray160[i2] + &quot;, &quot;);
                        } else {
                            bw.write(&quot;&quot; + class8.anIntArray160[i2]);
                            bw.newLine();
                        }
                    }
                }
                if (class8.aStringArray168 != null) {
                    for (int i2 = 0; i2 &lt; class8.aStringArray168.length; i2++) {
                        if (i2 == 0) {
                            bw.write(&quot;aStringArray168\t&quot;);
                        }
                        if (i2 != class8.aStringArray168.length - 1) {
                            bw.write(&quot;&quot; + class8.aStringArray168[i2] + &quot;, &quot;);
                        } else {
                            bw.write(&quot;&quot; + class8.aStringArray168[i2]);
                            bw.newLine();
                        }
                    }
                }
                if (class8.aStringArray189 != null) {
                    for (int i2 = 0; i2 &lt; class8.aStringArray189.length; i2++) {
                        if (i2 == 0) {
                            bw.write(&quot;aStringArray189\t&quot;);
                        }
                        if (i2 != class8.aStringArray189.length - 1) {
                            bw.write(&quot;&quot; + class8.aStringArray189[i2] + &quot;, &quot;);
                        } else {
                            bw.write(&quot;&quot; + class8.aStringArray189[i2]);
                            bw.newLine();
                        }
                    }
                }
                if (class8.anIntArray193 != null) {
                    for (int i2 = 0; i2 &lt; class8.anIntArray193.length; i2++) {
                        if (i2 == 0) {
                            bw.write(&quot;anIntArray193\t&quot;);
                        }
                        if (i2 != class8.anIntArray193.length - 1) {
                            bw.write(&quot;&quot; + class8.anIntArray193[i2] + &quot;, &quot;);
                        } else {
                            bw.write(&quot;&quot; + class8.anIntArray193[i2]);
                            bw.newLine();
                        }
                    }
                }
                if (class8.anIntArray201 != null) {
                    for (int i2 = 0; i2 &lt; class8.anIntArray201.length; i2++) {
                        if (i2 == 0) {
                            bw.write(&quot;anIntArray201\t&quot;);
                        }
                        if (i2 != class8.anIntArray201.length - 1) {
                            bw.write(&quot;&quot; + class8.anIntArray201[i2] + &quot;, &quot;);
                        } else {
                            bw.write(&quot;&quot; + class8.anIntArray201[i2]);
                            bw.newLine();
                        }
                    }
                }
                bw.write(&quot;anInt174\t&quot; + class8.anInt174);
                bw.newLine();
                bw.write(&quot;anInt181\t&quot; + class8.anInt181);
                bw.newLine();
                bw.write(&quot;anInt190\t&quot; + class8.anInt190);
                bw.newLine();
                bw.write(&quot;anInt198\t&quot; + class8.anInt198);
                bw.newLine();
                bw.write(&quot;anInt204\t&quot; + class8.anInt204);
                bw.newLine();
                bw.write(&quot;anInt169\t&quot; + class8.anInt169);
                bw.newLine();
                bw.write(&quot;anInt194\t&quot; + class8.anInt194);
                bw.newLine();
                bw.write(&quot;anInt165\t&quot; + class8.anInt165);
                bw.newLine();
                bw.write(&quot;anInt200\t&quot; + class8.anInt200);
                bw.newLine();
                bw.write(&quot;anInt188\t&quot; + class8.anInt188);
                bw.newLine();
                bw.write(&quot;anInt164\t&quot; + class8.anInt164);
                bw.newLine();
                bw.write(&quot;anInt175\t&quot; + class8.anInt175);
                bw.newLine();
                bw.write(&quot;anInt197\t&quot; + class8.anInt197);
                bw.newLine();
                bw.flush();
            } catch (IOException ioe) {
                ioe.printStackTrace();
            } finally {
                if (bw != null) {
                    try {
                        bw.close();
                        System.out.println(&quot;Items Dumped&quot;);
                    } catch (IOException ioe2) {
                    }
                }
            }
        }
    }[/code]
I just took the code and modified it a little bit to only dump items I enter instead.
Now go to client.java for the fun part :)
Find your &quot;dump&quot; command to previous dumpitems() method.
replace that command with this
[code]                        if (s.equalsIgnoreCase(&quot;dump&quot;)) {
                            Class8.dumpItems();
                        } else if (s.split(&quot; &quot;)[0].equalsIgnoreCase(&quot;dump&quot;)) {
					String[] t = s.split(&quot; &quot;);
					int[] send= new int[t.length-1];
			
					for (int k=0;k&lt;send.length;k++)
						send[k]=Integer.parseInt(t[k+1]);
					Class8.dumpItems(send);
					
				}[/code]



to make this work for you now you should be able to type dump #item# #item2 @item3@
you just type the spaces between them and it will dump those items to EX_load.txt in your cache directory, set via signlink.findcachedir().

now you can add new items in your client by adding them to EZ_load.txt

[size=24pt]Translations[/size]
[code]
aString170	name
aByteArray178	description
aStringArray168	groundActions
aStringArray189	ItemActions
anIntArray156	editedModelColor
anIntArray160	newModelColor
anIntArray193	stackIDs
anIntArray201	stackAmounts
anInt157	id
anInt174	modelID
anInt181	modelZoom
anInt190	modelRotationY
anInt198	modelRotationX
anInt204	anInt204
anInt169	modelOffset1
anInt194	modelOffset2
anInt165	anInt165
anInt200	anInt200
aBoolean176	stackable
anInt155	value
aBoolean161	membersObject
anInt188	anInt188
anInt199	-unassigned-
anInt164	anInt164
anInt175	anInt175
anInt205	anInt205
anInt197	[/code]</description>
    
    <lastBuildDate>Sun, 03 Mar 2013 23:39:36 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/317-unnamed-fixing-strange-commands-on-random-items/493651.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[317][unnamed]Fixing Strange commands on random items</title>
        <dc:creator><![CDATA[@the_elve_age the elve age]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_elve_age">@the_elve_age</a> wrote:</p>
          <blockquote>
              <p>srcalldummys is the best</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317-unnamed-fixing-strange-commands-on-random-items/493651/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317-unnamed-fixing-strange-commands-on-random-items/493651/9</link>
        <pubDate>Sun, 03 Mar 2013 23:39:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-493651-9</guid>
        <source url="https://forum.moparisthebest.com/t/317-unnamed-fixing-strange-commands-on-random-items/493651.rss">[317][unnamed]Fixing Strange commands on random items</source>
      </item>
      <item>
        <title>[317][unnamed]Fixing Strange commands on random items</title>
        <dc:creator><![CDATA[@S_v2 .S. v2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/s_v2">@S_v2</a> wrote:</p>
          <blockquote>
              <p>[quote=“matzie, post:7, topic:493651”][quote author=.S. v2 link=topic=611883.msg4242771#msg4242771 date=1361913436]<br>
Why do you people insist on using horrible non-refactored clients?<br>
[/quote]<br>
because i posted, asking where to get another one, but this AWESOME forum gave me a big ,!, so here i am. you?[/quote]</p>
<p><a href="http://moparisthebest.com/downloads/srcAllDummysRemoved.tar.gz" class="onebox" target="_blank" rel="nofollow noopener">http://moparisthebest.com/downloads/srcAllDummysRemoved.tar.gz</a></p>
<p>It’s not very well done, but it’s better than a completely unrefactored client.</p>
<p>Or you could use this. I haven’t looked at it much:</p>
<p><a href="http://code.google.com/p/rename317/" class="onebox" target="_blank" rel="nofollow noopener">http://code.google.com/p/rename317/</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317-unnamed-fixing-strange-commands-on-random-items/493651/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317-unnamed-fixing-strange-commands-on-random-items/493651/8</link>
        <pubDate>Sun, 03 Mar 2013 12:22:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-493651-8</guid>
        <source url="https://forum.moparisthebest.com/t/317-unnamed-fixing-strange-commands-on-random-items/493651.rss">[317][unnamed]Fixing Strange commands on random items</source>
      </item>
      <item>
        <title>[317][unnamed]Fixing Strange commands on random items</title>
        <dc:creator><![CDATA[@matzie matzie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/matzie">@matzie</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="3" data-topic="493651">
<div class="title">
<div class="quote-controls"></div>
 .S. v2:</div>
<blockquote>
<p>Why do you people insist on using horrible non-refactored clients?</p>
</blockquote>
</aside>
<p>because i posted, asking where to get another one, but this AWESOME forum gave me a big ,!, so here i am. you?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317-unnamed-fixing-strange-commands-on-random-items/493651/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317-unnamed-fixing-strange-commands-on-random-items/493651/7</link>
        <pubDate>Sun, 03 Mar 2013 05:25:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-493651-7</guid>
        <source url="https://forum.moparisthebest.com/t/317-unnamed-fixing-strange-commands-on-random-items/493651.rss">[317][unnamed]Fixing Strange commands on random items</source>
      </item>
      <item>
        <title>[317][unnamed]Fixing Strange commands on random items</title>
        <dc:creator><![CDATA[@CoonHunter CoonHunter]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/coonhunter">@CoonHunter</a> wrote:</p>
          <blockquote>
              <p>[quote=“the elve age, post:5, topic:493651”][quote author=CoonHunter link=topic=611883.msg4242793#msg4242793 date=1361914636]</p>
<aside class="quote">
<blockquote>
<p>Why do you people insist on using horrible non-refactored clients?</p>
</blockquote>
</aside>
<p>You do realize the only difference between a refactored deob and a regular deob is naming? I really wish people would get it out of their ass that just because someone uses a non-renamed client means its horrible. Hell, most of the breakthroughs we had in the 317 client were before renamed clients were even popular or finished.<br>
[/quote]It’s just harder to understand and if people switched to renamed, it would make their lives much easier. Usually, people who used non renamed are uneducated in java. (assumption)[/quote]<br>
I know that, I’m just trying to make the point that its no worse than a refactored aside from horrible naming. But that doesn’t mean it sucks.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317-unnamed-fixing-strange-commands-on-random-items/493651/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317-unnamed-fixing-strange-commands-on-random-items/493651/6</link>
        <pubDate>Wed, 27 Feb 2013 06:40:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-493651-6</guid>
        <source url="https://forum.moparisthebest.com/t/317-unnamed-fixing-strange-commands-on-random-items/493651.rss">[317][unnamed]Fixing Strange commands on random items</source>
      </item>
      <item>
        <title>[317][unnamed]Fixing Strange commands on random items</title>
        <dc:creator><![CDATA[@the_elve_age the elve age]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_elve_age">@the_elve_age</a> wrote:</p>
          <blockquote>
              <p>[quote=“CoonHunter, post:4, topic:493651”][quote author=.S. v2 link=topic=611883.msg4242771#msg4242771 date=1361913436]<br>
Why do you people insist on using horrible non-refactored clients?<br>
[/quote]<br>
You do realize the only difference between a refactored deob and a regular deob is naming? I really wish people would get it out of their ass that just because someone uses a non-renamed client means its horrible. Hell, most of the breakthroughs we had in the 317 client were before renamed clients were even popular or finished.[/quote]It’s just harder to understand and if people switched to renamed, it would make their lives much easier. Usually, people who used non renamed are uneducated in java. (assumption)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317-unnamed-fixing-strange-commands-on-random-items/493651/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317-unnamed-fixing-strange-commands-on-random-items/493651/5</link>
        <pubDate>Wed, 27 Feb 2013 04:23:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-493651-5</guid>
        <source url="https://forum.moparisthebest.com/t/317-unnamed-fixing-strange-commands-on-random-items/493651.rss">[317][unnamed]Fixing Strange commands on random items</source>
      </item>
      <item>
        <title>[317][unnamed]Fixing Strange commands on random items</title>
        <dc:creator><![CDATA[@CoonHunter CoonHunter]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/coonhunter">@CoonHunter</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="3" data-topic="493651">
<div class="title">
<div class="quote-controls"></div>
 .S. v2:</div>
<blockquote>
<p>Why do you people insist on using horrible non-refactored clients?</p>
</blockquote>
</aside>
<p>You do realize the only difference between a refactored deob and a regular deob is naming? I really wish people would get it out of their ass that just because someone uses a non-renamed client means its horrible. Hell, most of the breakthroughs we had in the 317 client were before renamed clients were even popular or finished.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317-unnamed-fixing-strange-commands-on-random-items/493651/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317-unnamed-fixing-strange-commands-on-random-items/493651/4</link>
        <pubDate>Tue, 26 Feb 2013 21:37:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-493651-4</guid>
        <source url="https://forum.moparisthebest.com/t/317-unnamed-fixing-strange-commands-on-random-items/493651.rss">[317][unnamed]Fixing Strange commands on random items</source>
      </item>
      <item>
        <title>[317][unnamed]Fixing Strange commands on random items</title>
        <dc:creator><![CDATA[@S_v2 .S. v2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/s_v2">@S_v2</a> wrote:</p>
          <blockquote>
              <p>Why do you people insist on using horrible non-refactored clients?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317-unnamed-fixing-strange-commands-on-random-items/493651/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317-unnamed-fixing-strange-commands-on-random-items/493651/3</link>
        <pubDate>Tue, 26 Feb 2013 21:17:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-493651-3</guid>
        <source url="https://forum.moparisthebest.com/t/317-unnamed-fixing-strange-commands-on-random-items/493651.rss">[317][unnamed]Fixing Strange commands on random items</source>
      </item>
      <item>
        <title>[317][unnamed]Fixing Strange commands on random items</title>
        <dc:creator><![CDATA[@the_elve_age the elve age]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_elve_age">@the_elve_age</a> wrote:</p>
          <blockquote>
              <p>Wait what?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317-unnamed-fixing-strange-commands-on-random-items/493651/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317-unnamed-fixing-strange-commands-on-random-items/493651/2</link>
        <pubDate>Tue, 26 Feb 2013 19:18:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-493651-2</guid>
        <source url="https://forum.moparisthebest.com/t/317-unnamed-fixing-strange-commands-on-random-items/493651.rss">[317][unnamed]Fixing Strange commands on random items</source>
      </item>
      <item>
        <title>[317][unnamed]Fixing Strange commands on random items</title>
        <dc:creator><![CDATA[@matzie matzie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/matzie">@matzie</a> wrote:</p>
          <blockquote>
              <p>This is for unrenamed clients, so it works right <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>open Class8, in your client<br>
Search for <code>Class8 method198(int</code><br>
Find this part</p>
<p><code>        aClass30_Sub2_Sub2_183.anInt1406 = anIntArray195[i];
        class8.anInt157 = i;
        class8.method197();
        class8.method203(true, aClass30_Sub2_Sub2_183);</code><br>
Enter This directly after those.</p>
<p>[code]</p>
<p>if (new File(signlink.findcachedir() + “./EZ_load.txt”).exists()) {<br>
String line;<br>
try {<br>
BufferedReader file = new BufferedReader(new FileReader(signlink.findcachedir() + “./EZ_load.txt”));<br>
boolean isItem = false;<br>
do {</p>
<pre><code>                try {
                    line = file.readLine();
                } catch (java.io.IOException ioe) {
                    line = null;
                }
                if (line != null) {
                    if (line.split("\t").length &gt; 1) {
                        String token, token2, token3[];
                        try {
                            token = line.split("\t")[0];
                        } catch (Exception e) {
                            token = "";
                        }
                        token2 = line.split("\t")[1].trim();
                        if (token.contains("Array")) {
                            token3 = token2.replaceAll(", ", ",").split(",");
                            for (int k = 0; k &lt; token3.length; k++) {
                                token3[k] = token3[k].trim();
                            }
                        } else {
                            token3 = null;
                        }
                        if (token.equals("ITEMID") &amp;&amp; !isItem) {

                            if (i == Integer.parseInt(token2)) {
                                isItem = true;
                            }
                        } else if (token.equals("ITEMID") &amp;&amp; isItem) {
                            break;
                        } else if (token.equals("aString170") &amp;&amp; isItem) {
                            class8.aString170 = token2;
                        } else if (token.equals("aByteArray178") &amp;&amp; isItem) {
                            class8.aByteArray178 = new byte[token2.getBytes().length];
                            class8.aByteArray178 = new String(token2.getBytes()).getBytes();
                        } else if (token.equals("anIntArray156") &amp;&amp; isItem) {
                            class8.anIntArray156 = new int[token3.length];
                            for (int j = 0; j &lt; token3.length; j++) {
                                class8.anIntArray156[j] = Integer.parseInt(token3[j]);
                            }
                        } else if (token.equals("anIntArray193") &amp;&amp; isItem) {
                            class8.anIntArray193 = new int[token3.length];
                            for (int j = 0; j &lt; token3.length; j++) {
                                class8.anIntArray193[j] = Integer.parseInt(token3[j]);
                            }
                        } else if (token.equals("aStringArray189") &amp;&amp; isItem) {
                            class8.aStringArray189 = new String[token3.length];
                            for (int k = 0; k &lt; token3.length; k++) {
                                if (token3[k].trim().equals("null")) {
                                    token3[k] = null;
                                }
                            }
                            System.arraycopy(token3, 0, class8.aStringArray189, 0, token3.length);
                        } else if (token.equals("aStringArray168") &amp;&amp; isItem) {
                            class8.aStringArray168 = new String[token3.length];
                            for (int k = 0; k &lt; token3.length; k++) {
                                if (token3[k].trim().equals("null")) {
                                    token3[k] = null;
                                }
                            }
                            System.arraycopy(token3, 0, class8.aStringArray168, 0, token3.length);
                        } else if (token.equals("anIntArray201") &amp;&amp; isItem) {
                            class8.anIntArray201 = new int[token3.length];
                            System.out.println(token2 + " " + class8.anIntArray201.length + " " + token3.length);
                            for (int j = 0; j &lt; token3.length; j++) {
                                class8.anIntArray201[j] = Integer.decode(token3[j]);
                            }
                        } else if (token.equals("anIntArray160") &amp;&amp; isItem) {
                            class8.anIntArray160 = new int[token3.length];
                            for (int j = 0; j &lt; token3.length; j++) {
                                    class8.anIntArray160[j] = Integer.decode(token3[j]);
                            }
                        } else if (token.equals("anInt174") &amp;&amp; isItem) {
                            class8.anInt174 = Integer.parseInt(token2);
                        } else if (token.equals("anInt181") &amp;&amp; isItem) {
                            class8.anInt181 = Integer.parseInt(token2);
                        } else if (token.equals("anInt190") &amp;&amp; isItem) {
                            class8.anInt190 = Integer.parseInt(token2);
                        } else if (token.equals("anInt204") &amp;&amp; isItem) {
                            class8.anInt204 = Integer.parseInt(token2);
                        } else if (token.equals("anInt169") &amp;&amp; isItem) {
                            class8.anInt169 = Integer.parseInt(token2);
                        } else if (token.equals("anInt194") &amp;&amp; isItem) {
                            class8.anInt194 = Integer.parseInt(token2);
                        } else if (token.equals("anInt165") &amp;&amp; isItem) {
                            class8.anInt165 = Integer.parseInt(token2);
                        } else if (token.equals("anInt188") &amp;&amp; isItem) {
                            class8.anInt188 = Integer.parseInt(token2);
                        } else if (token.equals("anInt200") &amp;&amp; isItem) {
                            class8.anInt200 = Integer.parseInt(token2);
                        } else if (token.equals("anInt164") &amp;&amp; isItem) {
                            class8.anInt164 = Integer.parseInt(token2);
                        } else if (token.equals("anInt166") &amp;&amp; isItem) {
                            class8.anInt166 = Integer.parseInt(token2);
                        } else if (token.equals("anInt173") &amp;&amp; isItem) {
                            class8.anInt173 = Integer.parseInt(token2);
                        }
                    } else {
                        if (line.equals("") &amp;&amp; isItem) {
                            break;
                        }
                        continue;
                    }
                }
            } while (line != null);
        } catch (FileNotFoundException fnfe) {
        }

    }
    if (class8.aStringArray189 != null) {
        if (class8.aStringArray189[0] != null &amp;&amp; class8.aStringArray189[0].contains("@")) {
            class8.aStringArray189[0] = null;
        }

    }[/code]
</code></pre>
<p>What this code does is basically set it up to read many different lines from file <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"> at my convinence. The code also fixes the random "0t * &amp; Dwarf Remains. " command<br>
now find your dumpItems() { method<br>
Add a new method Above or below that one like this</p>
<p>[code]<br>
public static void dumpItems(int list[]) {<br>
for (int i = 0; i &lt; list.length; i++) {<br>
Class8 class8 = method198(list[i]);<br>
BufferedWriter bw = null;</p>
<pre><code>        try {
            bw = new BufferedWriter(new FileWriter(signlink.findcachedir() + "./EZ_load.txt", true));
            bw.newLine();
            bw.write("ITEMID\t" + list[i]);
            bw.newLine();
            bw.write("aString170\t" + class8.aString170);
            bw.newLine();
            if (class8.aByteArray178 != null) {
                bw.write("aByteArray178\t" + new String(class8.aByteArray178));
                bw.newLine();
            }
            if (class8.anIntArray156 != null) {
                for (int i2 = 0; i2 &lt; class8.anIntArray156.length; i2++) {
                    if (i2 == 0) {
                        bw.write("anIntArray156\t");
                    }
                    
                    if (i2 != class8.anIntArray156.length - 1) {
                        bw.write("" + class8.anIntArray156[i2] + ", ");
                    } else {
                        bw.write("" + class8.anIntArray156[i2]);
                        bw.newLine();
                    }
                }
            }
            if (class8.anIntArray160 != null) {
                for (int i2 = 0; i2 &lt; class8.anIntArray160.length; i2++) {
                    if (i2 == 0) {
                        bw.write("anIntArray160\t");
                    }
                    if (i2 != class8.anIntArray160.length - 1) {
                        bw.write("" + class8.anIntArray160[i2] + ", ");
                    } else {
                        bw.write("" + class8.anIntArray160[i2]);
                        bw.newLine();
                    }
                }
            }
            if (class8.aStringArray168 != null) {
                for (int i2 = 0; i2 &lt; class8.aStringArray168.length; i2++) {
                    if (i2 == 0) {
                        bw.write("aStringArray168\t");
                    }
                    if (i2 != class8.aStringArray168.length - 1) {
                        bw.write("" + class8.aStringArray168[i2] + ", ");
                    } else {
                        bw.write("" + class8.aStringArray168[i2]);
                        bw.newLine();
                    }
                }
            }
            if (class8.aStringArray189 != null) {
                for (int i2 = 0; i2 &lt; class8.aStringArray189.length; i2++) {
                    if (i2 == 0) {
                        bw.write("aStringArray189\t");
                    }
                    if (i2 != class8.aStringArray189.length - 1) {
                        bw.write("" + class8.aStringArray189[i2] + ", ");
                    } else {
                        bw.write("" + class8.aStringArray189[i2]);
                        bw.newLine();
                    }
                }
            }
            if (class8.anIntArray193 != null) {
                for (int i2 = 0; i2 &lt; class8.anIntArray193.length; i2++) {
                    if (i2 == 0) {
                        bw.write("anIntArray193\t");
                    }
                    if (i2 != class8.anIntArray193.length - 1) {
                        bw.write("" + class8.anIntArray193[i2] + ", ");
                    } else {
                        bw.write("" + class8.anIntArray193[i2]);
                        bw.newLine();
                    }
                }
            }
            if (class8.anIntArray201 != null) {
                for (int i2 = 0; i2 &lt; class8.anIntArray201.length; i2++) {
                    if (i2 == 0) {
                        bw.write("anIntArray201\t");
                    }
                    if (i2 != class8.anIntArray201.length - 1) {
                        bw.write("" + class8.anIntArray201[i2] + ", ");
                    } else {
                        bw.write("" + class8.anIntArray201[i2]);
                        bw.newLine();
                    }
                }
            }
            bw.write("anInt174\t" + class8.anInt174);
            bw.newLine();
            bw.write("anInt181\t" + class8.anInt181);
            bw.newLine();
            bw.write("anInt190\t" + class8.anInt190);
            bw.newLine();
            bw.write("anInt198\t" + class8.anInt198);
            bw.newLine();
            bw.write("anInt204\t" + class8.anInt204);
            bw.newLine();
            bw.write("anInt169\t" + class8.anInt169);
            bw.newLine();
            bw.write("anInt194\t" + class8.anInt194);
            bw.newLine();
            bw.write("anInt165\t" + class8.anInt165);
            bw.newLine();
            bw.write("anInt200\t" + class8.anInt200);
            bw.newLine();
            bw.write("anInt188\t" + class8.anInt188);
            bw.newLine();
            bw.write("anInt164\t" + class8.anInt164);
            bw.newLine();
            bw.write("anInt175\t" + class8.anInt175);
            bw.newLine();
            bw.write("anInt197\t" + class8.anInt197);
            bw.newLine();
            bw.flush();
        } catch (IOException ioe) {
            ioe.printStackTrace();
        } finally {
            if (bw != null) {
                try {
                    bw.close();
                    System.out.println("Items Dumped");
                } catch (IOException ioe2) {
                }
            }
        }
    }
}[/code]
</code></pre>
<p>I just took the code and modified it a little bit to only dump items I enter instead.<br>
Now go to client.java for the fun part <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"><br>
Find your “dump” command to previous dumpitems() method.<br>
replace that command with this</p>
<p>[code]                        if (s.equalsIgnoreCase(“dump”)) {<br>
Class8.dumpItems();<br>
} else if (s.split(" “)[0].equalsIgnoreCase(“dump”)) {<br>
String[] t = s.split(” ");<br>
int[] send= new int[t.length-1];</p>
<pre><code>				for (int k=0;k&lt;send.length;k++)
					send[k]=Integer.parseInt(t[k+1]);
				Class8.dumpItems(send);
				
			}[/code]
</code></pre>
<p>to make this work for you now you should be able to type dump <span class="hashtag">#item</span># <span class="hashtag">#item2</span> <span class="mention">@item3</span>@<br>
you just type the spaces between them and it will dump those items to EX_load.txt in your cache directory, set via signlink.findcachedir().</p>
<p>now you can add new items in your client by adding them to EZ_load.txt</p>
<p>[size=24pt]Translations[/size]</p>
<p><code>
aString170	name
aByteArray178	description
aStringArray168	groundActions
aStringArray189	ItemActions
anIntArray156	editedModelColor
anIntArray160	newModelColor
anIntArray193	stackIDs
anIntArray201	stackAmounts
anInt157	id
anInt174	modelID
anInt181	modelZoom
anInt190	modelRotationY
anInt198	modelRotationX
anInt204	anInt204
anInt169	modelOffset1
anInt194	modelOffset2
anInt165	anInt165
anInt200	anInt200
aBoolean176	stackable
anInt155	value
aBoolean161	membersObject
anInt188	anInt188
anInt199	-unassigned-
anInt164	anInt164
anInt175	anInt175
anInt205	anInt205
anInt197	</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317-unnamed-fixing-strange-commands-on-random-items/493651/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317-unnamed-fixing-strange-commands-on-random-items/493651/1</link>
        <pubDate>Sat, 23 Feb 2013 10:49:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-493651-1</guid>
        <source url="https://forum.moparisthebest.com/t/317-unnamed-fixing-strange-commands-on-random-items/493651.rss">[317][unnamed]Fixing Strange commands on random items</source>
      </item>
  </channel>
</rss>
