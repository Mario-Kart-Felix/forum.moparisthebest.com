<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[Delta] Zombies Mini-game[Delta]</title>
    <link>https://forum.moparisthebest.com/t/delta-zombies-mini-game-delta/534348</link>
    <description>Make new class call it Zombies

and add this into it 

[code]package server.Player.minigames.zombies;

import server.client;
import server.server;
import server.Task.Task;
import server.misc.misc;

public class Zombies {

   /*
    * The X Coordinate for where the zombies and player will be spawned
    */
   protected final static int SPAWN_X = 3618;

   /*
    * The Y Coordinate for where the zombies and player will be spawned
    */
   protected final static int SPAWN_Y = 3526;

   /*
    * This is how much Zombies we have to kill each round
    */
   private static int ZombiesToKill;

   /*
    * This is to keep track of what wave you are on
    */
   private static int WAVE = 1;

   /*
    * Here we Use an enum to store the data for how much zombies we are going
    * to use each wave and what wave the number is.
    */

   private static enum SpawnZombies {
      WAVE1(1, 73, 5), WAVE2(2, 73, 7), WAVE3(3, 73, 8);

      private int wave, id, amount;

      private SpawnZombies(int wave, int id, int amount) {
         this.wave = wave;
         this.id = id;
         this.amount = amount;
      }

      public int getWave() {
         return wave;
      }

      public int getId() {
         return id;
      }

      public int getAmount() {
         return amount;
      }
   }

   /*
    * This is just to check if they are in the zombie mini-game(area)
    */
   public static boolean inZombies(client c) {
      if (c.absX &gt;= 3608 &amp;&amp; c.absX &lt;= 3626 &amp;&amp; c.absY &gt;= 3522
            &amp;&amp; c.absY &lt;= 3531) {
         return true;
      } else {
         return false;
      }
   }

   /*
    * This grabs an interface for us and this interface shows us what wave we
    * are we are also looping through some lines to take out or else weird
    * those lines will appear on screen
    */
   public static void getInterface(client c) {
      c.RemoveAllWindows();
      c.outStream.createFrame(208);
      c.outStream.writeWordBigEndian_dup(13588);
      c.sendQuest(&quot;&quot;, 13589);
      c.sendQuest(&quot;@cya@WAVE: &quot; + WAVE, 13591);
      for (int i = 13592; i &lt; 13602; i++) {
         c.sendQuest(&quot;&quot;, i);
      }
   }

   /*
    * This is for when they enter the game, it teleports them there and grabs
    * the interface and starts the timer for the first wave
    */
   public static void EnterGame(client c) {
      c.toX = SPAWN_X;
      c.toY = SPAWN_Y;
      getInterface(c);
      WaveDelay(c);
   }

   /*
    * This is for at the end of each wave a timer begins of 15 seconds and at
    * the end of that timer the new wave begins
    */
   public static void WaveDelay(final client c) {
      int WaveDelay = 27;
      server.getTaskScheduler().schedule(new Task(WaveDelay, true) {
         int start = 0;

         @Override
         protected void execute() {
            if (start == 0) {
               start = 1;
               return;
            }
            SpawnZombies(c);
            stop();
         }
      });
   }

   /*
    * At the end of the timer it calls this method this method actually spawns
    * the zombies It loops through the amount of zombies needed to be spawned
    * and spawns them it also adds how much zombies needed to be killed that
    * round
    */
   public static void SpawnZombies(client c) {
      for (SpawnZombies z : SpawnZombies.values()) {
         for (int i = 0; i &lt; z.getAmount(); i++) {
            if (WAVE == z.getWave()) {
               server.npcHandler.spawnANPC(z.getId(),
          SPAWN_X + misc.random(2), SPAWN_Y + misc.random(2), 0);
               ZombiesToKill = z.getAmount() * 3;
            }
         }
      }
   }

   /*
    * This is for each time a zombie dies the Zombies they have to kill in the
    * variable decreases and once they hit the final zombie they have to kill,
    * you are done the wave and it calls the Interface method to update the
    * Wave you are on and calls the WaveDelay method to give a 15 second delay
    * and to spawn the next round of zombies
    */
   public static void KillZombies(client c, int npc) {
      for (SpawnZombies z : SpawnZombies.values()) {
         if (ZombiesToKill != 1
               &amp;&amp; server.npcHandler.npcs[npc].npcType == z.getId()) {
            ZombiesToKill--;
         } else {
            WAVE++;
            WaveDelay(c);
            getInterface(c);
         }
      }
   }
}
[/code]


Now in your NPCHandler&#39;s process where dead npcs are handled add this:

[code]Zombies.KillZombies(temp, i);[/code]


Now to start the mini-game just call the method anywhere. [code]EnterGame(c);[/code]</description>
    
    <lastBuildDate>Sat, 02 Nov 2013 05:10:49 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/delta-zombies-mini-game-delta/534348.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[Delta] Zombies Mini-game[Delta]</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>fix your coventions</p>
<p>static should come before final when making constants, and you should be using <span class="bbcode-i">camelCase</span> when naming methods.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delta-zombies-mini-game-delta/534348/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delta-zombies-mini-game-delta/534348/3</link>
        <pubDate>Sat, 02 Nov 2013 05:10:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534348-3</guid>
        <source url="https://forum.moparisthebest.com/t/delta-zombies-mini-game-delta/534348.rss">[Delta] Zombies Mini-game[Delta]</source>
      </item>
      <item>
        <title>[Delta] Zombies Mini-game[Delta]</title>
        <dc:creator><![CDATA[@MrFun MrFun]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mrfun">@MrFun</a> wrote:</p>
          <blockquote>
              <p>Media?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delta-zombies-mini-game-delta/534348/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delta-zombies-mini-game-delta/534348/2</link>
        <pubDate>Fri, 01 Nov 2013 21:19:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534348-2</guid>
        <source url="https://forum.moparisthebest.com/t/delta-zombies-mini-game-delta/534348.rss">[Delta] Zombies Mini-game[Delta]</source>
      </item>
      <item>
        <title>[Delta] Zombies Mini-game[Delta]</title>
        <dc:creator><![CDATA[@Dan0194 Dan0194]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/dan0194">@Dan0194</a> wrote:</p>
          <blockquote>
              <p>Make new class call it Zombies</p>
<p>and add this into it</p>
<p>[code]package server.Player.minigames.zombies;</p>
<p>import server.client;<br>
import server.server;<br>
import server.Task.Task;<br>
import server.misc.misc;</p>
<p>public class Zombies {</p>
<p>/*<br>
* The X Coordinate for where the zombies and player will be spawned<br>
*/<br>
protected final static int SPAWN_X = 3618;</p>
<p>/*<br>
* The Y Coordinate for where the zombies and player will be spawned<br>
*/<br>
protected final static int SPAWN_Y = 3526;</p>
<p>/*<br>
* This is how much Zombies we have to kill each round<br>
*/<br>
private static int ZombiesToKill;</p>
<p>/*<br>
* This is to keep track of what wave you are on<br>
*/<br>
private static int WAVE = 1;</p>
<p>/*<br>
* Here we Use an enum to store the data for how much zombies we are going<br>
* to use each wave and what wave the number is.<br>
*/</p>
<p>private static enum SpawnZombies {<br>
WAVE1(1, 73, 5), WAVE2(2, 73, 7), WAVE3(3, 73, 8);</p>
<pre><code>  private int wave, id, amount;

  private SpawnZombies(int wave, int id, int amount) {
     this.wave = wave;
     this.id = id;
     this.amount = amount;
  }

  public int getWave() {
     return wave;
  }

  public int getId() {
     return id;
  }

  public int getAmount() {
     return amount;
  }
</code></pre>
<p>}</p>
<p>/*<br>
* This is just to check if they are in the zombie mini-game(area)<br>
*/<br>
public static boolean inZombies(client c) {<br>
if (c.absX &gt;= 3608 &amp;&amp; c.absX &lt;= 3626 &amp;&amp; c.absY &gt;= 3522<br>
&amp;&amp; c.absY &lt;= 3531) {<br>
return true;<br>
} else {<br>
return false;<br>
}<br>
}</p>
<p>/*<br>
* This grabs an interface for us and this interface shows us what wave we<br>
* are we are also looping through some lines to take out or else weird<br>
* those lines will appear on screen<br>
*/<br>
public static void getInterface(client c) {<br>
c.RemoveAllWindows();<br>
c.outStream.createFrame(208);<br>
c.outStream.writeWordBigEndian_dup(13588);<br>
c.sendQuest("", 13589);<br>
c.sendQuest("<a class="mention" href="/u/cya">@cya</a>@WAVE: " + WAVE, 13591);<br>
for (int i = 13592; i &lt; 13602; i++) {<br>
c.sendQuest("", i);<br>
}<br>
}</p>
<p>/*<br>
* This is for when they enter the game, it teleports them there and grabs<br>
* the interface and starts the timer for the first wave<br>
*/<br>
public static void EnterGame(client c) {<br>
c.toX = SPAWN_X;<br>
c.toY = SPAWN_Y;<br>
getInterface©;<br>
WaveDelay©;<br>
}</p>
<p>/*<br>
* This is for at the end of each wave a timer begins of 15 seconds and at<br>
* the end of that timer the new wave begins<br>
*/<br>
public static void WaveDelay(final client c) {<br>
int WaveDelay = 27;<br>
server.getTaskScheduler().schedule(new Task(WaveDelay, true) {<br>
int start = 0;</p>
<pre><code>     @Override
     protected void execute() {
        if (start == 0) {
           start = 1;
           return;
        }
        SpawnZombies(c);
        stop();
     }
  });
</code></pre>
<p>}</p>
<p>/*<br>
* At the end of the timer it calls this method this method actually spawns<br>
* the zombies It loops through the amount of zombies needed to be spawned<br>
* and spawns them it also adds how much zombies needed to be killed that<br>
* round<br>
*/<br>
public static void SpawnZombies(client c) {<br>
for (SpawnZombies z : SpawnZombies.values()) {<br>
for (int i = 0; i &lt; z.getAmount(); i++) {<br>
if (WAVE == z.getWave()) {<br>
server.npcHandler.spawnANPC(z.getId(),<br>
SPAWN_X + misc.random(2), SPAWN_Y + misc.random(2), 0);<br>
ZombiesToKill = z.getAmount() * 3;<br>
}<br>
}<br>
}<br>
}</p>
<p>/*<br>
* This is for each time a zombie dies the Zombies they have to kill in the<br>
* variable decreases and once they hit the final zombie they have to kill,<br>
* you are done the wave and it calls the Interface method to update the<br>
* Wave you are on and calls the WaveDelay method to give a 15 second delay<br>
* and to spawn the next round of zombies<br>
*/<br>
public static void KillZombies(client c, int npc) {<br>
for (SpawnZombies z : SpawnZombies.values()) {<br>
if (ZombiesToKill != 1<br>
&amp;&amp; server.npcHandler.npcs[npc].npcType == z.getId()) {<br>
ZombiesToKill–;<br>
} else {<br>
WAVE++;<br>
WaveDelay©;<br>
getInterface©;<br>
}<br>
}<br>
}<br>
}<br>
[/code]</p>
<p>Now in your NPCHandler’s process where dead npcs are handled add this:</p>
<pre><code class="lang-auto"></code></pre>
<p>Now to start the mini-game just call the method anywhere. <code>EnterGame(c);</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delta-zombies-mini-game-delta/534348/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delta-zombies-mini-game-delta/534348/1</link>
        <pubDate>Sat, 19 Oct 2013 19:31:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534348-1</guid>
        <source url="https://forum.moparisthebest.com/t/delta-zombies-mini-game-delta/534348.rss">[Delta] Zombies Mini-game[Delta]</source>
      </item>
  </channel>
</rss>
