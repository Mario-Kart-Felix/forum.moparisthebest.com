<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Pathfinding Efficiency</title>
    <link>https://forum.moparisthebest.com/t/pathfinding-efficiency/540492</link>
    <description>I had a hypothesis: To get the fastest and most efficient path to your destination, you would have to store multiple tiles inside of an array and check for tiles that connect going to the destination, and then store those values inside of another array and check for which path has the least amount of tiles used.

Of course, this isn&#39;t efficient; not even close! I&#39;ve been scolded by everyone I&#39;ve told my hypothesis to. I&#39;ve been trying to think of ways that could take less memory and less time to calculate the path to a destination. Would anyone like to share their hypothesis, or already proven theories on path finding?

This isn&#39;t necessarily for private servers, but for any kind of game path finding.
nding algorithm? I&#39;ve just been my hypothesis is inefficient twice, so I never tried it.

[hr]
This is from skype just a few minutes after I posted this thread:
[10:13:03 AM] Az || Aero: AStar is inneficient

I want you to argue that opinion...</description>
    
    <lastBuildDate>Mon, 24 Feb 2014 02:21:10 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/pathfinding-efficiency/540492.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Pathfinding Efficiency</title>
        <dc:creator><![CDATA[@Tree Tree]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tree">@Tree</a> wrote:</p>
          <blockquote>
              <p>[quote=“Clawz fury, post:9, topic:540492”][quote author=Pure_ link=topic=659352.msg4409511#msg4409511 date=1393094235]<br>
Don’t reinvent the wheel.<br>
[/quote][/quote]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pathfinding-efficiency/540492/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pathfinding-efficiency/540492/14</link>
        <pubDate>Mon, 24 Feb 2014 02:21:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540492-14</guid>
        <source url="https://forum.moparisthebest.com/t/pathfinding-efficiency/540492.rss">Pathfinding Efficiency</source>
      </item>
      <item>
        <title>Pathfinding Efficiency</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <p>[quote=“asshole_rule, post:12, topic:540492”][quote author=Frell link=topic=659352.msg4409734#msg4409734 date=1393172186]</p>
<aside class="quote">
<blockquote>
<p>didn’t jagex make their own pathfinding?</p>
<p>why would they have done that and do you think they’ve changed it since?</p>
</blockquote>
</aside>
<p>pretty sure they use a* too<br>
[/quote]</p>
<p>i’m 99% sure they don’t use a* or Dijkstra[/quote]</p>
<p>the <span class="hashtag">#317</span> client uses <a href="http://en.wikipedia.org/wiki/Breadth-first_search" data-bbcode="true" rel="nofollow noopener">breadth-first search</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pathfinding-efficiency/540492/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pathfinding-efficiency/540492/13</link>
        <pubDate>Sun, 23 Feb 2014 16:49:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540492-13</guid>
        <source url="https://forum.moparisthebest.com/t/pathfinding-efficiency/540492.rss">Pathfinding Efficiency</source>
      </item>
      <item>
        <title>Pathfinding Efficiency</title>
        <dc:creator><![CDATA[@asshole_rule asshole_rule]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/asshole_rule">@asshole_rule</a> wrote:</p>
          <blockquote>
              <p>[quote=“Frell, post:11, topic:540492”][quote author=asshole_rule link=topic=659352.msg4409727#msg4409727 date=1393169214]<br>
didn’t jagex make their own pathfinding?</p>
<p>why would they have done that and do you think they’ve changed it since?<br>
[/quote]<br>
pretty sure they use a* too[/quote]</p>
<p>i’m 99% sure they don’t use a* or Dijkstra</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pathfinding-efficiency/540492/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pathfinding-efficiency/540492/12</link>
        <pubDate>Sun, 23 Feb 2014 16:48:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540492-12</guid>
        <source url="https://forum.moparisthebest.com/t/pathfinding-efficiency/540492.rss">Pathfinding Efficiency</source>
      </item>
      <item>
        <title>Pathfinding Efficiency</title>
        <dc:creator><![CDATA[@Frell Frell]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frell">@Frell</a> wrote:</p>
          <blockquote>
              <p>[quote=“asshole_rule, post:10, topic:540492”]didn’t jagex make their own pathfinding?</p>
<p>why would they have done that and do you think they’ve changed it since?[/quote]<br>
pretty sure they use a* too</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pathfinding-efficiency/540492/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pathfinding-efficiency/540492/11</link>
        <pubDate>Sun, 23 Feb 2014 16:16:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540492-11</guid>
        <source url="https://forum.moparisthebest.com/t/pathfinding-efficiency/540492.rss">Pathfinding Efficiency</source>
      </item>
      <item>
        <title>Pathfinding Efficiency</title>
        <dc:creator><![CDATA[@asshole_rule asshole_rule]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/asshole_rule">@asshole_rule</a> wrote:</p>
          <blockquote>
              <p>didn’t jagex make their own pathfinding?</p>
<p>why would they have done that and do you think they’ve changed it since?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pathfinding-efficiency/540492/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pathfinding-efficiency/540492/10</link>
        <pubDate>Sun, 23 Feb 2014 15:26:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540492-10</guid>
        <source url="https://forum.moparisthebest.com/t/pathfinding-efficiency/540492.rss">Pathfinding Efficiency</source>
      </item>
      <item>
        <title>Pathfinding Efficiency</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="7" data-topic="540492">
<div class="title">
<div class="quote-controls"></div>
 Pure_:</div>
<blockquote>
<p>Don’t reinvent the wheel.</p>
</blockquote>
</aside>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pathfinding-efficiency/540492/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pathfinding-efficiency/540492/9</link>
        <pubDate>Sun, 23 Feb 2014 05:44:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540492-9</guid>
        <source url="https://forum.moparisthebest.com/t/pathfinding-efficiency/540492.rss">Pathfinding Efficiency</source>
      </item>
      <item>
        <title>Pathfinding Efficiency</title>
        <dc:creator><![CDATA[@lothy Lothy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lothy">@lothy</a> wrote:</p>
          <blockquote>
              <p>Honestly, if you don’t have an education in algorithmics (and, as a result, the ability to evaluate algorithms for their average and worst-case time and memory bounds) then you shouldn’t be bothering with hypothesising unless it’s an academic activity.<br>
And if it’s an academic activity then you can probably expect your solution to be a naive one that shouldn’t actually be used.</p>
<p>The reality is that sometimes years of research go into the creation of new algorithms and data structures. Designing efficient algorithms is very hard work.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pathfinding-efficiency/540492/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pathfinding-efficiency/540492/8</link>
        <pubDate>Sun, 23 Feb 2014 01:05:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540492-8</guid>
        <source url="https://forum.moparisthebest.com/t/pathfinding-efficiency/540492.rss">Pathfinding Efficiency</source>
      </item>
      <item>
        <title>Pathfinding Efficiency</title>
        <dc:creator><![CDATA[@pure2ownage Pure_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pure2ownage">@pure2ownage</a> wrote:</p>
          <blockquote>
              <p>Don’t reinvent the wheel.</p>
<p>edit: Have you benchmarked the algorithm?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pathfinding-efficiency/540492/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pathfinding-efficiency/540492/7</link>
        <pubDate>Sat, 22 Feb 2014 18:37:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540492-7</guid>
        <source url="https://forum.moparisthebest.com/t/pathfinding-efficiency/540492.rss">Pathfinding Efficiency</source>
      </item>
      <item>
        <title>Pathfinding Efficiency</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>Certain algorithms work better with higher densities of objects in an area, there was a study done by Laz on R-S about this. A* works pretty well in all cases however. I think an optimization to use a different algorithm for different approximate object densities would be a bit extreme but you could do it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pathfinding-efficiency/540492/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pathfinding-efficiency/540492/6</link>
        <pubDate>Sat, 22 Feb 2014 18:32:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540492-6</guid>
        <source url="https://forum.moparisthebest.com/t/pathfinding-efficiency/540492.rss">Pathfinding Efficiency</source>
      </item>
      <item>
        <title>Pathfinding Efficiency</title>
        <dc:creator><![CDATA[@wildskiller wildskiller]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wildskiller">@wildskiller</a> wrote:</p>
          <blockquote>
              <p>[quote=“xx matty xx, post:4, topic:540492”]It’s pretty much THE algorithm for pathfinding. A lot of games actually use it incorrectly but even then it’s usually efficient enough to work well.</p>
<p><a href="http://en.wikipedia.org/wiki/A*_search_algorithm" class="onebox" target="_blank" rel="nofollow noopener">http://en.wikipedia.org/wiki/A*_search_algorithm</a></p>
<p>And in response to your quote: You can’t say something is inefficient unless you have a more efficient solution. A* is fast and if it isn’t you’re using it incorrectly and have optimisations to apply elsewhere.[/quote]<br>
Thanks for that :D. I will most likely use A* if I can’t write my own path finder.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pathfinding-efficiency/540492/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pathfinding-efficiency/540492/5</link>
        <pubDate>Sat, 22 Feb 2014 16:24:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540492-5</guid>
        <source url="https://forum.moparisthebest.com/t/pathfinding-efficiency/540492.rss">Pathfinding Efficiency</source>
      </item>
      <item>
        <title>Pathfinding Efficiency</title>
        <dc:creator><![CDATA[@xx_matty_xx Justin Bieber]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xx_matty_xx">@xx_matty_xx</a> wrote:</p>
          <blockquote>
              <p>It’s pretty much THE algorithm for pathfinding. A lot of games actually use it incorrectly but even then it’s usually efficient enough to work well.</p>
<p><a href="http://en.wikipedia.org/wiki/A*_search_algorithm" class="onebox" target="_blank" rel="nofollow noopener">http://en.wikipedia.org/wiki/A*_search_algorithm</a></p>
<p>And in response to your quote: You can’t say something is inefficient unless you have a more efficient solution. A* is fast and if it isn’t you’re using it incorrectly and have optimisations to apply elsewhere.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pathfinding-efficiency/540492/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pathfinding-efficiency/540492/4</link>
        <pubDate>Sat, 22 Feb 2014 16:20:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540492-4</guid>
        <source url="https://forum.moparisthebest.com/t/pathfinding-efficiency/540492.rss">Pathfinding Efficiency</source>
      </item>
      <item>
        <title>Pathfinding Efficiency</title>
        <dc:creator><![CDATA[@wildskiller wildskiller]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wildskiller">@wildskiller</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="540492">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/frell/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Frell:</div>
<blockquote>
<p>if it isn’t efficient then why do so many games use a* pathfinding and not think twice about it</p>
</blockquote>
</aside>
<p>What’s AStar’s pathfinding algorithm? I’ve just been my hypothesis is inefficient twice, so I never tried it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pathfinding-efficiency/540492/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pathfinding-efficiency/540492/3</link>
        <pubDate>Sat, 22 Feb 2014 16:10:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540492-3</guid>
        <source url="https://forum.moparisthebest.com/t/pathfinding-efficiency/540492.rss">Pathfinding Efficiency</source>
      </item>
      <item>
        <title>Pathfinding Efficiency</title>
        <dc:creator><![CDATA[@Frell Frell]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frell">@Frell</a> wrote:</p>
          <blockquote>
              <p>if it isn’t efficient then why do so many games use a* pathfinding and not think twice about it</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pathfinding-efficiency/540492/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pathfinding-efficiency/540492/2</link>
        <pubDate>Sat, 22 Feb 2014 16:07:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540492-2</guid>
        <source url="https://forum.moparisthebest.com/t/pathfinding-efficiency/540492.rss">Pathfinding Efficiency</source>
      </item>
      <item>
        <title>Pathfinding Efficiency</title>
        <dc:creator><![CDATA[@wildskiller wildskiller]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wildskiller">@wildskiller</a> wrote:</p>
          <blockquote>
              <p>I had a hypothesis: To get the fastest and most efficient path to your destination, you would have to store multiple tiles inside of an array and check for tiles that connect going to the destination, and then store those values inside of another array and check for which path has the least amount of tiles used.</p>
<p>Of course, this isn’t efficient; not even close! I’ve been scolded by everyone I’ve told my hypothesis to. I’ve been trying to think of ways that could take less memory and less time to calculate the path to a destination. Would anyone like to share their hypothesis, or already proven theories on path finding?</p>
<p>This isn’t necessarily for private servers, but for any kind of game path finding.<br>
nding algorithm? I’ve just been my hypothesis is inefficient twice, so I never tried it.</p>
<p>[hr]<br>
This is from skype just a few minutes after I posted this thread:<br>
[10:13:03 AM] Az || Aero: AStar is inneficient</p>
<p>I want you to argue that opinion…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pathfinding-efficiency/540492/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pathfinding-efficiency/540492/1</link>
        <pubDate>Sat, 22 Feb 2014 15:54:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540492-1</guid>
        <source url="https://forum.moparisthebest.com/t/pathfinding-efficiency/540492.rss">Pathfinding Efficiency</source>
      </item>
  </channel>
</rss>
