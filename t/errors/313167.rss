<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Errors</title>
    <link>https://forum.moparisthebest.com/t/errors/313167</link>
    <description>when i compiled it showed this.. [code=scheme]client.java:14032: not a statement
            } else if (command.startsWith(&quot;interface&quot;)) &amp;&amp; playerRights &gt;= 3) {
                                                                        ^
client.java:14032: &#39;;&#39; expected
            } else if (command.startsWith(&quot;interface&quot;)) &amp;&amp; playerRights &gt;= 3) {
                                                                            ^
client.java:14041: &#39;else&#39; without &#39;if&#39;
            } else if (command.startsWith(&quot;inter&quot;)) {
              ^
client.java:14232: illegal start of type
        if (command.startsWith(&quot;pass&quot;) &amp;&amp; command.length() &gt; 5) {
        ^
client.java:14232: &lt;identifier&gt; expected
        if (command.startsWith(&quot;pass&quot;) &amp;&amp; command.length() &gt; 5) {
                              ^
client.java:14232: illegal start of type
        if (command.startsWith(&quot;pass&quot;) &amp;&amp; command.length() &gt; 5) {
                               ^
client.java:14235: illegal start of type
        } else if (command.startsWith(&quot;empty&quot;)) {
          ^
client.java:14235: &lt;identifier&gt; expected
        } else if (command.startsWith(&quot;empty&quot;)) {
                                     ^
client.java:14235: illegal start of type
        } else if (command.startsWith(&quot;empty&quot;)) {
                                      ^
client.java:14237: illegal start of type
        } else if (command.equalsIgnoreCase(&quot;savebackup&quot;)) {
          ^
client.java:14237: &lt;identifier&gt; expected
        } else if (command.equalsIgnoreCase(&quot;savebackup&quot;)) {
                                           ^
client.java:14237: illegal start of type
        } else if (command.equalsIgnoreCase(&quot;savebackup&quot;)) {
                                            ^
client.java:14249: illegal start of type
        } else if (command.equalsIgnoreCase(&quot;loadbackup&quot;)
          ^
client.java:14249: &lt;identifier&gt; expected
        } else if (command.equalsIgnoreCase(&quot;loadbackup&quot;)
                                           ^
client.java:14249: illegal start of type
        } else if (command.equalsIgnoreCase(&quot;loadbackup&quot;)
                                            ^
client.java:14282: illegal start of type
        } else if (command.equalsIgnoreCase(&quot;mypk&quot;)) {
          ^
client.java:14282: &lt;identifier&gt; expected
        } else if (command.equalsIgnoreCase(&quot;mypk&quot;)) {
                                           ^
client.java:14282: illegal start of type
        } else if (command.equalsIgnoreCase(&quot;mypk&quot;)) {
                                            ^
client.java:14286: illegal start of type
        } else if (command.equalsIgnoreCase(&quot;mystats&quot;)) {
          ^
client.java:14286: &lt;identifier&gt; expected
        } else if (command.equalsIgnoreCase(&quot;mystats&quot;)) {
                                           ^
client.java:14286: illegal start of type
        } else if (command.equalsIgnoreCase(&quot;mystats&quot;)) {
                                            ^
client.java:14307: illegal start of type
        } else if (command.equalsIgnoreCase(&quot;info&quot;)) {
          ^
client.java:14307: &lt;identifier&gt; expected
        } else if (command.equalsIgnoreCase(&quot;info&quot;)) {
                                           ^
client.java:14307: illegal start of type
        } else if (command.equalsIgnoreCase(&quot;info&quot;)) {
                                            ^
client.java:14309: illegal start of type
        } else if (command.equalsIgnoreCase(&quot;players&quot;)) {
          ^
client.java:14309: &lt;identifier&gt; expected
        } else if (command.equalsIgnoreCase(&quot;players&quot;)) {
                                           ^
client.java:14309: illegal start of type
        } else if (command.equalsIgnoreCase(&quot;players&quot;)) {
                                            ^
client.java:14313: illegal start of type
        } else if (command.startsWith(&quot;mypos&quot;)) {
          ^
client.java:14313: &lt;identifier&gt; expected
        } else if (command.startsWith(&quot;mypos&quot;)) {
                                     ^
client.java:14313: illegal start of type
        } else if (command.startsWith(&quot;mypos&quot;)) {
                                      ^
client.java:14329: class, interface, or enum expected
    public void fromBank(int itemID, int fromSlot, int amount) {
           ^
client.java:14337: class, interface, or enum expected
                                resetBank();
                                ^
client.java:14338: class, interface, or enum expected
                                resetItems(5064);
                                ^
client.java:14339: class, interface, or enum expected
                            }
                            ^
client.java:14344: class, interface, or enum expected
                                bankItemsN[fromSlot] = 0;
                                ^
client.java:14345: class, interface, or enum expected
                                resetBank();
                                ^
client.java:14346: class, interface, or enum expected
                                resetItems(5064);
                                ^
client.java:14347: class, interface, or enum expected
                            }
                            ^
client.java:14354: class, interface, or enum expected
                                    amount--;
                                    ^
client.java:14355: class, interface, or enum expected
                                } else {
                                ^
client.java:14357: class, interface, or enum expected
                                }
                                ^
client.java:14360: class, interface, or enum expected
                            }
                            ^
client.java:14363: class, interface, or enum expected
                        resetItems(5064);
                        ^
client.java:14364: class, interface, or enum expected
                    }
                    ^
client.java:14371: class, interface, or enum expected
                            resetBank();
                            ^
client.java:14372: class, interface, or enum expected
                            resetItems(5064);
                            ^
client.java:14373: class, interface, or enum expected
                        }
                        ^
client.java:14377: class, interface, or enum expected
                            bankItemsN[fromSlot] = 0;
                            ^
client.java:14378: class, interface, or enum expected
                            resetBank();
                            ^
client.java:14379: class, interface, or enum expected
                            resetItems(5064);
                            ^
client.java:14380: class, interface, or enum expected
                        }
                        ^
client.java:14384: class, interface, or enum expected
                    if (Item.itemStackable[bankItems[fromSlot] + 1]) {
                    ^
client.java:14388: class, interface, or enum expected
                                resetBank();
                                ^
client.java:14389: class, interface, or enum expected
                                resetItems(5064);
                                ^
client.java:14390: class, interface, or enum expected
                            }
                            ^
client.java:14395: class, interface, or enum expected
                                bankItemsN[fromSlot] = 0;
                                ^
client.java:14396: class, interface, or enum expected
                                resetBank();
                                ^
client.java:14397: class, interface, or enum expected
                                resetItems(5064);
                                ^
client.java:14398: class, interface, or enum expected
                            }
                            ^
client.java:14405: class, interface, or enum expected
                                    amount--;
                                    ^
client.java:14406: class, interface, or enum expected
                                } else {
                                ^
client.java:14408: class, interface, or enum expected
                                }
                                ^
client.java:14411: class, interface, or enum expected
                            }
                            ^
client.java:14414: class, interface, or enum expected
                        resetItems(5064);
                        ^
client.java:14415: class, interface, or enum expected
                    }
                    ^
client.java:14421: class, interface, or enum expected
    public int getXPForLevel(int level) {
           ^
client.java:14423: class, interface, or enum expected
        int output = 0;
        ^
client.java:14425: class, interface, or enum expected
        for (int lvl = 1; lvl &lt;= level; lvl++) {
        ^
client.java:14425: class, interface, or enum expected
        for (int lvl = 1; lvl &lt;= level; lvl++) {
                          ^
client.java:14425: class, interface, or enum expected
        for (int lvl = 1; lvl &lt;= level; lvl++) {
                                        ^
client.java:14428: class, interface, or enum expected
            if (lvl &gt;= level) {
            ^
client.java:14430: class, interface, or enum expected
            }
            ^
client.java:14432: class, interface, or enum expected
        }
        ^
client.java:14434: class, interface, or enum expected
    }
    ^
client.java:14436: class, interface, or enum expected
    public int getLevelForXP(int exp) {
           ^
client.java:14438: class, interface, or enum expected
        int output = 0;
        ^
client.java:14440: class, interface, or enum expected
        for (int lvl = 1; lvl &lt;= 99; lvl++) {
        ^
client.java:14440: class, interface, or enum expected
        for (int lvl = 1; lvl &lt;= 99; lvl++) {
                          ^
client.java:14440: class, interface, or enum expected
        for (int lvl = 1; lvl &lt;= 99; lvl++) {
                                     ^
client.java:14443: class, interface, or enum expected
            output = (int) Math.floor(points / 4);
            ^
client.java:14444: class, interface, or enum expected
            if (output &gt;= exp) {
            ^
client.java:14446: class, interface, or enum expected
            }
            ^
client.java:14449: class, interface, or enum expected
    }
    ^
client.java:14451: class, interface, or enum expected
    public boolean addSkillXP(int amount, int skill) {
           ^
client.java:14453: class, interface, or enum expected
        int Defence = getLevelForXP(playerXP[1]);
        ^
client.java:14454: class, interface, or enum expected
        int Strength = getLevelForXP(playerXP[2]);
        ^
client.java:14455: class, interface, or enum expected
        int Hitpoints = getLevelForXP(playerXP[3]);
        ^
client.java:14456: class, interface, or enum expected
        int Ranging = getLevelForXP(playerXP[4]);
        ^
client.java:14457: class, interface, or enum expected
        int Prayer = getLevelForXP(playerXP[5]);
        ^
client.java:14458: class, interface, or enum expected
        int Magic = getLevelForXP(playerXP[6]);
        ^
client.java:14459: class, interface, or enum expected
        int Cooking = getLevelForXP(playerXP[7]);
        ^
client.java:14460: class, interface, or enum expected
        int Woodcutting = getLevelForXP(playerXP[8]);
        ^
client.java:14461: class, interface, or enum expected
        int Fletching = getLevelForXP(playerXP[9]);
        ^
client.java:14462: class, interface, or enum expected
        int Fishing = getLevelForXP(playerXP[10]);
        ^
client.java:14463: class, interface, or enum expected
        int Firemaking = getLevelForXP(playerXP[11]);
        ^
client.java:14464: class, interface, or enum expected
        int Crafting = getLevelForXP(playerXP[12]);
        ^
client.java:14465: class, interface, or enum expected
        int Smithing = getLevelForXP(playerXP[13]);
        ^
client.java:14466: class, interface, or enum expected
        int Mining = getLevelForXP(playerXP[14]);
        ^
client.java:14467: class, interface, or enum expected
        int Herblore = getLevelForXP(playerXP[15]);
        ^
100 errors
Finished!
Press any key to continue . . .[/code]</description>
    
    <lastBuildDate>Sun, 08 Nov 2009 21:54:56 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/errors/313167.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Errors</title>
        <dc:creator><![CDATA[@jamessemple jamessemple]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jamessemple">@jamessemple</a> wrote:</p>
          <blockquote>
              <p>if he wants his server to lagg like a bitch then let him <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/errors/313167/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/errors/313167/12</link>
        <pubDate>Sun, 08 Nov 2009 21:54:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-313167-12</guid>
        <source url="https://forum.moparisthebest.com/t/errors/313167.rss">Errors</source>
      </item>
      <item>
        <title>Errors</title>
        <dc:creator><![CDATA[@xxlukexx xxlukexx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xxlukexx">@xxlukexx</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="10" data-topic="313167">
<div class="title">
<div class="quote-controls"></div>
 gangsta tony:</div>
<blockquote>
<p>well can u give me staff glows? like ::modglow, ::adminglow, ::ownerglow?</p>
</blockquote>
</aside>
<p>they make your server lag like hell, i suggest just deleting the commands.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/errors/313167/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/errors/313167/11</link>
        <pubDate>Sun, 08 Nov 2009 21:30:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-313167-11</guid>
        <source url="https://forum.moparisthebest.com/t/errors/313167.rss">Errors</source>
      </item>
      <item>
        <title>Errors</title>
        <dc:creator><![CDATA[@gangsta_tony gangsta tony]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/gangsta_tony">@gangsta_tony</a> wrote:</p>
          <blockquote>
              <p>well can u give me staff glows? like ::modglow, ::adminglow, ::ownerglow?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/errors/313167/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/errors/313167/10</link>
        <pubDate>Sun, 08 Nov 2009 21:19:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-313167-10</guid>
        <source url="https://forum.moparisthebest.com/t/errors/313167.rss">Errors</source>
      </item>
      <item>
        <title>Errors</title>
        <dc:creator><![CDATA[@andrew4444 andrew4444]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/andrew4444">@andrew4444</a> wrote:</p>
          <blockquote>
              <p>It isn’t coded right then. There could be 1-100000000000000000000 errors in your code. Especially when your using player rights=3 or up.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/errors/313167/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/errors/313167/9</link>
        <pubDate>Sun, 08 Nov 2009 21:16:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-313167-9</guid>
        <source url="https://forum.moparisthebest.com/t/errors/313167.rss">Errors</source>
      </item>
      <item>
        <title>Errors</title>
        <dc:creator><![CDATA[@gangsta_tony gangsta tony]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/gangsta_tony">@gangsta_tony</a> wrote:</p>
          <blockquote>
              <p>ok now i fixed it but i added some commands and i compiled it said it worked perfectly fine but when i got on my server non of the commands i added worked… please help me</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/errors/313167/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/errors/313167/8</link>
        <pubDate>Sun, 08 Nov 2009 21:09:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-313167-8</guid>
        <source url="https://forum.moparisthebest.com/t/errors/313167.rss">Errors</source>
      </item>
      <item>
        <title>Errors</title>
        <dc:creator><![CDATA[@xxlukexx xxlukexx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xxlukexx">@xxlukexx</a> wrote:</p>
          <blockquote>
              <p>you need to declare those variables.</p>
<p>since im not a expert on declareing, i think its:</p>
<pre><code class="lang-auto">public int modglow = true; or false;</code></pre>
<p>just try one and see if it works.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/errors/313167/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/errors/313167/7</link>
        <pubDate>Sun, 08 Nov 2009 20:07:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-313167-7</guid>
        <source url="https://forum.moparisthebest.com/t/errors/313167.rss">Errors</source>
      </item>
      <item>
        <title>Errors</title>
        <dc:creator><![CDATA[@gangsta_tony gangsta tony]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/gangsta_tony">@gangsta_tony</a> wrote:</p>
          <blockquote>
              <p>dude thanks but now it says 8 errors…</p>
<p>client.java:12119: cannot find symbol<br>
symbol  : variable modglow<br>
location: class client<br>
modglow = true;<br>
^<br>
client.java:12124: cannot find symbol<br>
symbol  : variable darkglow<br>
location: class client<br>
darkglow = true;<br>
^<br>
client.java:12129: cannot find symbol<br>
symbol  : variable adglow<br>
location: class client<br>
adglow = true;<br>
^<br>
client.java:12134: cannot find symbol<br>
symbol  : variable ownerglow<br>
location: class client<br>
ownerglow = true;<br>
^<br>
client.java:12139: cannot find symbol<br>
symbol  : variable modglow<br>
location: class client<br>
modglow =false;<br>
^<br>
client.java:12144: cannot find symbol<br>
symbol  : variable darkglow<br>
location: class client<br>
darkglow = false;<br>
^<br>
client.java:12149: cannot find symbol<br>
symbol  : variable adglow<br>
location: class client<br>
adglow = false;<br>
^<br>
client.java:12154: cannot find symbol<br>
symbol  : variable ownerglow<br>
location: class client<br>
ownerglow = false;<br>
^<br>
Note: stream.java uses or overrides a deprecated API.<br>
Note: Recompile with -Xlint:deprecation for details.<br>
8 errors<br>
Finished!<br>
Press any key to continue . . .</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/errors/313167/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/errors/313167/6</link>
        <pubDate>Sun, 08 Nov 2009 20:04:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-313167-6</guid>
        <source url="https://forum.moparisthebest.com/t/errors/313167.rss">Errors</source>
      </item>
      <item>
        <title>Errors</title>
        <dc:creator><![CDATA[@xxlukexx xxlukexx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xxlukexx">@xxlukexx</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="4" data-topic="313167">
<div class="title">
<div class="quote-controls"></div>
 gangsta tony:</div>
<blockquote>
<p>wat?</p>
</blockquote>
</aside>
<p>change that line with mine and compile.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/errors/313167/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/errors/313167/5</link>
        <pubDate>Sun, 08 Nov 2009 20:01:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-313167-5</guid>
        <source url="https://forum.moparisthebest.com/t/errors/313167.rss">Errors</source>
      </item>
      <item>
        <title>Errors</title>
        <dc:creator><![CDATA[@gangsta_tony gangsta tony]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/gangsta_tony">@gangsta_tony</a> wrote:</p>
          <blockquote>
              <p>wat?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/errors/313167/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/errors/313167/4</link>
        <pubDate>Sun, 08 Nov 2009 19:57:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-313167-4</guid>
        <source url="https://forum.moparisthebest.com/t/errors/313167.rss">Errors</source>
      </item>
      <item>
        <title>Errors</title>
        <dc:creator><![CDATA[@xxlukexx xxlukexx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xxlukexx">@xxlukexx</a> wrote:</p>
          <blockquote>
              <p>[quote=“gangsta tony, post:1, topic:313167”]when i compiled it showed this… <code>client.java:14032: not a statement
            } else if (command.startsWith("interface")) &amp;&amp; playerRights &gt;= 3) {
                                                                        ^
client.java:14032: ';' expected
            } else if (command.startsWith("interface")) &amp;&amp; playerRights &gt;= 3) {
                                                                            ^
client.java:14041: 'else' without 'if'
            } else if (command.startsWith("inter")) {
              ^
client.java:14232: illegal start of type
        if (command.startsWith("pass") &amp;&amp; command.length() &gt; 5) {
        ^
client.java:14232: &lt;identifier&gt; expected
        if (command.startsWith("pass") &amp;&amp; command.length() &gt; 5) {
                              ^
client.java:14232: illegal start of type
        if (command.startsWith("pass") &amp;&amp; command.length() &gt; 5) {
                               ^
client.java:14235: illegal start of type
        } else if (command.startsWith("empty")) {
          ^
client.java:14235: &lt;identifier&gt; expected
        } else if (command.startsWith("empty")) {
                                     ^
client.java:14235: illegal start of type
        } else if (command.startsWith("empty")) {
                                      ^
client.java:14237: illegal start of type
        } else if (command.equalsIgnoreCase("savebackup")) {
          ^
client.java:14237: &lt;identifier&gt; expected
        } else if (command.equalsIgnoreCase("savebackup")) {
                                           ^
client.java:14237: illegal start of type
        } else if (command.equalsIgnoreCase("savebackup")) {
                                            ^
client.java:14249: illegal start of type
        } else if (command.equalsIgnoreCase("loadbackup")
          ^
client.java:14249: &lt;identifier&gt; expected
        } else if (command.equalsIgnoreCase("loadbackup")
                                           ^
client.java:14249: illegal start of type
        } else if (command.equalsIgnoreCase("loadbackup")
                                            ^
client.java:14282: illegal start of type
        } else if (command.equalsIgnoreCase("mypk")) {
          ^
client.java:14282: &lt;identifier&gt; expected
        } else if (command.equalsIgnoreCase("mypk")) {
                                           ^
client.java:14282: illegal start of type
        } else if (command.equalsIgnoreCase("mypk")) {
                                            ^
client.java:14286: illegal start of type
        } else if (command.equalsIgnoreCase("mystats")) {
          ^
client.java:14286: &lt;identifier&gt; expected
        } else if (command.equalsIgnoreCase("mystats")) {
                                           ^
client.java:14286: illegal start of type
        } else if (command.equalsIgnoreCase("mystats")) {
                                            ^
client.java:14307: illegal start of type
        } else if (command.equalsIgnoreCase("info")) {
          ^
client.java:14307: &lt;identifier&gt; expected
        } else if (command.equalsIgnoreCase("info")) {
                                           ^
client.java:14307: illegal start of type
        } else if (command.equalsIgnoreCase("info")) {
                                            ^
client.java:14309: illegal start of type
        } else if (command.equalsIgnoreCase("players")) {
          ^
client.java:14309: &lt;identifier&gt; expected
        } else if (command.equalsIgnoreCase("players")) {
                                           ^
client.java:14309: illegal start of type
        } else if (command.equalsIgnoreCase("players")) {
                                            ^
client.java:14313: illegal start of type
        } else if (command.startsWith("mypos")) {
          ^
client.java:14313: &lt;identifier&gt; expected
        } else if (command.startsWith("mypos")) {
                                     ^
client.java:14313: illegal start of type
        } else if (command.startsWith("mypos")) {
                                      ^
client.java:14329: class, interface, or enum expected
    public void fromBank(int itemID, int fromSlot, int amount) {
           ^
client.java:14337: class, interface, or enum expected
                                resetBank();
                                ^
client.java:14338: class, interface, or enum expected
                                resetItems(5064);
                                ^
client.java:14339: class, interface, or enum expected
                            }
                            ^
client.java:14344: class, interface, or enum expected
                                bankItemsN[fromSlot] = 0;
                                ^
client.java:14345: class, interface, or enum expected
                                resetBank();
                                ^
client.java:14346: class, interface, or enum expected
                                resetItems(5064);
                                ^
client.java:14347: class, interface, or enum expected
                            }
                            ^
client.java:14354: class, interface, or enum expected
                                    amount--;
                                    ^
client.java:14355: class, interface, or enum expected
                                } else {
                                ^
client.java:14357: class, interface, or enum expected
                                }
                                ^
client.java:14360: class, interface, or enum expected
                            }
                            ^
client.java:14363: class, interface, or enum expected
                        resetItems(5064);
                        ^
client.java:14364: class, interface, or enum expected
                    }
                    ^
client.java:14371: class, interface, or enum expected
                            resetBank();
                            ^
client.java:14372: class, interface, or enum expected
                            resetItems(5064);
                            ^
client.java:14373: class, interface, or enum expected
                        }
                        ^
client.java:14377: class, interface, or enum expected
                            bankItemsN[fromSlot] = 0;
                            ^
client.java:14378: class, interface, or enum expected
                            resetBank();
                            ^
client.java:14379: class, interface, or enum expected
                            resetItems(5064);
                            ^
client.java:14380: class, interface, or enum expected
                        }
                        ^
client.java:14384: class, interface, or enum expected
                    if (Item.itemStackable[bankItems[fromSlot] + 1]) {
                    ^
client.java:14388: class, interface, or enum expected
                                resetBank();
                                ^
client.java:14389: class, interface, or enum expected
                                resetItems(5064);
                                ^
client.java:14390: class, interface, or enum expected
                            }
                            ^
client.java:14395: class, interface, or enum expected
                                bankItemsN[fromSlot] = 0;
                                ^
client.java:14396: class, interface, or enum expected
                                resetBank();
                                ^
client.java:14397: class, interface, or enum expected
                                resetItems(5064);
                                ^
client.java:14398: class, interface, or enum expected
                            }
                            ^
client.java:14405: class, interface, or enum expected
                                    amount--;
                                    ^
client.java:14406: class, interface, or enum expected
                                } else {
                                ^
client.java:14408: class, interface, or enum expected
                                }
                                ^
client.java:14411: class, interface, or enum expected
                            }
                            ^
client.java:14414: class, interface, or enum expected
                        resetItems(5064);
                        ^
client.java:14415: class, interface, or enum expected
                    }
                    ^
client.java:14421: class, interface, or enum expected
    public int getXPForLevel(int level) {
           ^
client.java:14423: class, interface, or enum expected
        int output = 0;
        ^
client.java:14425: class, interface, or enum expected
        for (int lvl = 1; lvl &lt;= level; lvl++) {
        ^
client.java:14425: class, interface, or enum expected
        for (int lvl = 1; lvl &lt;= level; lvl++) {
                          ^
client.java:14425: class, interface, or enum expected
        for (int lvl = 1; lvl &lt;= level; lvl++) {
                                        ^
client.java:14428: class, interface, or enum expected
            if (lvl &gt;= level) {
            ^
client.java:14430: class, interface, or enum expected
            }
            ^
client.java:14432: class, interface, or enum expected
        }
        ^
client.java:14434: class, interface, or enum expected
    }
    ^
client.java:14436: class, interface, or enum expected
    public int getLevelForXP(int exp) {
           ^
client.java:14438: class, interface, or enum expected
        int output = 0;
        ^
client.java:14440: class, interface, or enum expected
        for (int lvl = 1; lvl &lt;= 99; lvl++) {
        ^
client.java:14440: class, interface, or enum expected
        for (int lvl = 1; lvl &lt;= 99; lvl++) {
                          ^
client.java:14440: class, interface, or enum expected
        for (int lvl = 1; lvl &lt;= 99; lvl++) {
                                     ^
client.java:14443: class, interface, or enum expected
            output = (int) Math.floor(points / 4);
            ^
client.java:14444: class, interface, or enum expected
            if (output &gt;= exp) {
            ^
client.java:14446: class, interface, or enum expected
            }
            ^
client.java:14449: class, interface, or enum expected
    }
    ^
client.java:14451: class, interface, or enum expected
    public boolean addSkillXP(int amount, int skill) {
           ^
client.java:14453: class, interface, or enum expected
        int Defence = getLevelForXP(playerXP[1]);
        ^
client.java:14454: class, interface, or enum expected
        int Strength = getLevelForXP(playerXP[2]);
        ^
client.java:14455: class, interface, or enum expected
        int Hitpoints = getLevelForXP(playerXP[3]);
        ^
client.java:14456: class, interface, or enum expected
        int Ranging = getLevelForXP(playerXP[4]);
        ^
client.java:14457: class, interface, or enum expected
        int Prayer = getLevelForXP(playerXP[5]);
        ^
client.java:14458: class, interface, or enum expected
        int Magic = getLevelForXP(playerXP[6]);
        ^
client.java:14459: class, interface, or enum expected
        int Cooking = getLevelForXP(playerXP[7]);
        ^
client.java:14460: class, interface, or enum expected
        int Woodcutting = getLevelForXP(playerXP[8]);
        ^
client.java:14461: class, interface, or enum expected
        int Fletching = getLevelForXP(playerXP[9]);
        ^
client.java:14462: class, interface, or enum expected
        int Fishing = getLevelForXP(playerXP[10]);
        ^
client.java:14463: class, interface, or enum expected
        int Firemaking = getLevelForXP(playerXP[11]);
        ^
client.java:14464: class, interface, or enum expected
        int Crafting = getLevelForXP(playerXP[12]);
        ^
client.java:14465: class, interface, or enum expected
        int Smithing = getLevelForXP(playerXP[13]);
        ^
client.java:14466: class, interface, or enum expected
        int Mining = getLevelForXP(playerXP[14]);
        ^
client.java:14467: class, interface, or enum expected
        int Herblore = getLevelForXP(playerXP[15]);
        ^
100 errors
Finished!
Press any key to continue . . .</code>[/quote]</p>
<p>read your errors.</p>
<pre><code class="lang-auto">} else if (command.startsWith("interface") &amp;&amp; playerRights &gt;= 3) {</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/errors/313167/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/errors/313167/3</link>
        <pubDate>Sun, 08 Nov 2009 19:54:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-313167-3</guid>
        <source url="https://forum.moparisthebest.com/t/errors/313167.rss">Errors</source>
      </item>
      <item>
        <title>Errors</title>
        <dc:creator><![CDATA[@noobspure50 noobspure50]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/noobspure50">@noobspure50</a> wrote:</p>
          <blockquote>
              <p>you did somethign abd you put a { or } either in the wrong spot, or you forgot to put one</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/errors/313167/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/errors/313167/2</link>
        <pubDate>Sun, 08 Nov 2009 19:50:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-313167-2</guid>
        <source url="https://forum.moparisthebest.com/t/errors/313167.rss">Errors</source>
      </item>
      <item>
        <title>Errors</title>
        <dc:creator><![CDATA[@gangsta_tony gangsta tony]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/gangsta_tony">@gangsta_tony</a> wrote:</p>
          <blockquote>
              <p>when i compiled it showed this… <code>client.java:14032: not a statement
            } else if (command.startsWith("interface")) &amp;&amp; playerRights &gt;= 3) {
                                                                        ^
client.java:14032: ';' expected
            } else if (command.startsWith("interface")) &amp;&amp; playerRights &gt;= 3) {
                                                                            ^
client.java:14041: 'else' without 'if'
            } else if (command.startsWith("inter")) {
              ^
client.java:14232: illegal start of type
        if (command.startsWith("pass") &amp;&amp; command.length() &gt; 5) {
        ^
client.java:14232: &lt;identifier&gt; expected
        if (command.startsWith("pass") &amp;&amp; command.length() &gt; 5) {
                              ^
client.java:14232: illegal start of type
        if (command.startsWith("pass") &amp;&amp; command.length() &gt; 5) {
                               ^
client.java:14235: illegal start of type
        } else if (command.startsWith("empty")) {
          ^
client.java:14235: &lt;identifier&gt; expected
        } else if (command.startsWith("empty")) {
                                     ^
client.java:14235: illegal start of type
        } else if (command.startsWith("empty")) {
                                      ^
client.java:14237: illegal start of type
        } else if (command.equalsIgnoreCase("savebackup")) {
          ^
client.java:14237: &lt;identifier&gt; expected
        } else if (command.equalsIgnoreCase("savebackup")) {
                                           ^
client.java:14237: illegal start of type
        } else if (command.equalsIgnoreCase("savebackup")) {
                                            ^
client.java:14249: illegal start of type
        } else if (command.equalsIgnoreCase("loadbackup")
          ^
client.java:14249: &lt;identifier&gt; expected
        } else if (command.equalsIgnoreCase("loadbackup")
                                           ^
client.java:14249: illegal start of type
        } else if (command.equalsIgnoreCase("loadbackup")
                                            ^
client.java:14282: illegal start of type
        } else if (command.equalsIgnoreCase("mypk")) {
          ^
client.java:14282: &lt;identifier&gt; expected
        } else if (command.equalsIgnoreCase("mypk")) {
                                           ^
client.java:14282: illegal start of type
        } else if (command.equalsIgnoreCase("mypk")) {
                                            ^
client.java:14286: illegal start of type
        } else if (command.equalsIgnoreCase("mystats")) {
          ^
client.java:14286: &lt;identifier&gt; expected
        } else if (command.equalsIgnoreCase("mystats")) {
                                           ^
client.java:14286: illegal start of type
        } else if (command.equalsIgnoreCase("mystats")) {
                                            ^
client.java:14307: illegal start of type
        } else if (command.equalsIgnoreCase("info")) {
          ^
client.java:14307: &lt;identifier&gt; expected
        } else if (command.equalsIgnoreCase("info")) {
                                           ^
client.java:14307: illegal start of type
        } else if (command.equalsIgnoreCase("info")) {
                                            ^
client.java:14309: illegal start of type
        } else if (command.equalsIgnoreCase("players")) {
          ^
client.java:14309: &lt;identifier&gt; expected
        } else if (command.equalsIgnoreCase("players")) {
                                           ^
client.java:14309: illegal start of type
        } else if (command.equalsIgnoreCase("players")) {
                                            ^
client.java:14313: illegal start of type
        } else if (command.startsWith("mypos")) {
          ^
client.java:14313: &lt;identifier&gt; expected
        } else if (command.startsWith("mypos")) {
                                     ^
client.java:14313: illegal start of type
        } else if (command.startsWith("mypos")) {
                                      ^
client.java:14329: class, interface, or enum expected
    public void fromBank(int itemID, int fromSlot, int amount) {
           ^
client.java:14337: class, interface, or enum expected
                                resetBank();
                                ^
client.java:14338: class, interface, or enum expected
                                resetItems(5064);
                                ^
client.java:14339: class, interface, or enum expected
                            }
                            ^
client.java:14344: class, interface, or enum expected
                                bankItemsN[fromSlot] = 0;
                                ^
client.java:14345: class, interface, or enum expected
                                resetBank();
                                ^
client.java:14346: class, interface, or enum expected
                                resetItems(5064);
                                ^
client.java:14347: class, interface, or enum expected
                            }
                            ^
client.java:14354: class, interface, or enum expected
                                    amount--;
                                    ^
client.java:14355: class, interface, or enum expected
                                } else {
                                ^
client.java:14357: class, interface, or enum expected
                                }
                                ^
client.java:14360: class, interface, or enum expected
                            }
                            ^
client.java:14363: class, interface, or enum expected
                        resetItems(5064);
                        ^
client.java:14364: class, interface, or enum expected
                    }
                    ^
client.java:14371: class, interface, or enum expected
                            resetBank();
                            ^
client.java:14372: class, interface, or enum expected
                            resetItems(5064);
                            ^
client.java:14373: class, interface, or enum expected
                        }
                        ^
client.java:14377: class, interface, or enum expected
                            bankItemsN[fromSlot] = 0;
                            ^
client.java:14378: class, interface, or enum expected
                            resetBank();
                            ^
client.java:14379: class, interface, or enum expected
                            resetItems(5064);
                            ^
client.java:14380: class, interface, or enum expected
                        }
                        ^
client.java:14384: class, interface, or enum expected
                    if (Item.itemStackable[bankItems[fromSlot] + 1]) {
                    ^
client.java:14388: class, interface, or enum expected
                                resetBank();
                                ^
client.java:14389: class, interface, or enum expected
                                resetItems(5064);
                                ^
client.java:14390: class, interface, or enum expected
                            }
                            ^
client.java:14395: class, interface, or enum expected
                                bankItemsN[fromSlot] = 0;
                                ^
client.java:14396: class, interface, or enum expected
                                resetBank();
                                ^
client.java:14397: class, interface, or enum expected
                                resetItems(5064);
                                ^
client.java:14398: class, interface, or enum expected
                            }
                            ^
client.java:14405: class, interface, or enum expected
                                    amount--;
                                    ^
client.java:14406: class, interface, or enum expected
                                } else {
                                ^
client.java:14408: class, interface, or enum expected
                                }
                                ^
client.java:14411: class, interface, or enum expected
                            }
                            ^
client.java:14414: class, interface, or enum expected
                        resetItems(5064);
                        ^
client.java:14415: class, interface, or enum expected
                    }
                    ^
client.java:14421: class, interface, or enum expected
    public int getXPForLevel(int level) {
           ^
client.java:14423: class, interface, or enum expected
        int output = 0;
        ^
client.java:14425: class, interface, or enum expected
        for (int lvl = 1; lvl &lt;= level; lvl++) {
        ^
client.java:14425: class, interface, or enum expected
        for (int lvl = 1; lvl &lt;= level; lvl++) {
                          ^
client.java:14425: class, interface, or enum expected
        for (int lvl = 1; lvl &lt;= level; lvl++) {
                                        ^
client.java:14428: class, interface, or enum expected
            if (lvl &gt;= level) {
            ^
client.java:14430: class, interface, or enum expected
            }
            ^
client.java:14432: class, interface, or enum expected
        }
        ^
client.java:14434: class, interface, or enum expected
    }
    ^
client.java:14436: class, interface, or enum expected
    public int getLevelForXP(int exp) {
           ^
client.java:14438: class, interface, or enum expected
        int output = 0;
        ^
client.java:14440: class, interface, or enum expected
        for (int lvl = 1; lvl &lt;= 99; lvl++) {
        ^
client.java:14440: class, interface, or enum expected
        for (int lvl = 1; lvl &lt;= 99; lvl++) {
                          ^
client.java:14440: class, interface, or enum expected
        for (int lvl = 1; lvl &lt;= 99; lvl++) {
                                     ^
client.java:14443: class, interface, or enum expected
            output = (int) Math.floor(points / 4);
            ^
client.java:14444: class, interface, or enum expected
            if (output &gt;= exp) {
            ^
client.java:14446: class, interface, or enum expected
            }
            ^
client.java:14449: class, interface, or enum expected
    }
    ^
client.java:14451: class, interface, or enum expected
    public boolean addSkillXP(int amount, int skill) {
           ^
client.java:14453: class, interface, or enum expected
        int Defence = getLevelForXP(playerXP[1]);
        ^
client.java:14454: class, interface, or enum expected
        int Strength = getLevelForXP(playerXP[2]);
        ^
client.java:14455: class, interface, or enum expected
        int Hitpoints = getLevelForXP(playerXP[3]);
        ^
client.java:14456: class, interface, or enum expected
        int Ranging = getLevelForXP(playerXP[4]);
        ^
client.java:14457: class, interface, or enum expected
        int Prayer = getLevelForXP(playerXP[5]);
        ^
client.java:14458: class, interface, or enum expected
        int Magic = getLevelForXP(playerXP[6]);
        ^
client.java:14459: class, interface, or enum expected
        int Cooking = getLevelForXP(playerXP[7]);
        ^
client.java:14460: class, interface, or enum expected
        int Woodcutting = getLevelForXP(playerXP[8]);
        ^
client.java:14461: class, interface, or enum expected
        int Fletching = getLevelForXP(playerXP[9]);
        ^
client.java:14462: class, interface, or enum expected
        int Fishing = getLevelForXP(playerXP[10]);
        ^
client.java:14463: class, interface, or enum expected
        int Firemaking = getLevelForXP(playerXP[11]);
        ^
client.java:14464: class, interface, or enum expected
        int Crafting = getLevelForXP(playerXP[12]);
        ^
client.java:14465: class, interface, or enum expected
        int Smithing = getLevelForXP(playerXP[13]);
        ^
client.java:14466: class, interface, or enum expected
        int Mining = getLevelForXP(playerXP[14]);
        ^
client.java:14467: class, interface, or enum expected
        int Herblore = getLevelForXP(playerXP[15]);
        ^
100 errors
Finished!
Press any key to continue . . .</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/errors/313167/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/errors/313167/1</link>
        <pubDate>Sun, 08 Nov 2009 19:48:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-313167-1</guid>
        <source url="https://forum.moparisthebest.com/t/errors/313167.rss">Errors</source>
      </item>
  </channel>
</rss>
