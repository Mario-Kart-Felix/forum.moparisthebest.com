<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Arraylist to array?</title>
    <link>https://forum.moparisthebest.com/t/arraylist-to-array/417599</link>
    <description>ok so i looked on google and found what i need to do. this is pretty much the code i was given:
[code]String[] result = new String[arrayList.size()];
arraylist.toArray(result);[/code]

my question is does that assign the array to the result array? i didn&#39; think u could reference variables in parameter like u can in the &quot;C&quot; languages or is it doing something different in order to get the same result?

i was thinking that it just returns an array and i have to assign the returned array to the result array.
[code]result = arrayList.toArray(result);[/code]

the only reason i can think u need the array argument is to get what type it is since the toArray method is a generic method.

thank you.

EDIT: after reading over the documentation for the method in the api, multiple times, im guessing the first code is correct seeing as it says &quot;... returned therein.&quot; verification on this would be appreciated.</description>
    
    <lastBuildDate>Mon, 10 Oct 2011 20:59:36 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/arraylist-to-array/417599.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Arraylist to array?</title>
        <dc:creator><![CDATA[@synchronized2 synchronized_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/synchronized2">@synchronized2</a> wrote:</p>
          <blockquote>
              <p>The method toArray(T[] a) will infact assign all the values within the arrayList to the specified array if and only if the array is EQUAL or HIGHER than the size of all the items in the array list.</p>
<p>Here’s some examples;</p>
<pre><code class="lang-auto">import java.util.ArrayList;
import java.util.Arrays;


public class ArrayListExample {
	public static void main(String[] args) {
		ArrayList&lt;String&gt; myArrayList = new ArrayList&lt;String&gt;();
		
		myArrayList.add("Hello");
		myArrayList.add("World");
		
		String[] myArray = new String[2];
		myArrayList.toArray(myArray);
		
		System.out.println(Arrays.toString(myArray));
	}
}</code></pre>
<p>Notice how I add 2 items into my ArrayList and normal string array holds 2 items. This code works fine and the myArray variable then holds “Hello” and “World”.</p>
<pre><code class="lang-auto">import java.util.ArrayList;
import java.util.Arrays;


public class ArrayListExample {
	public static void main(String[] args) {
		ArrayList&lt;String&gt; myArrayList = new ArrayList&lt;String&gt;();
		
		myArrayList.add("Hello");
		myArrayList.add("World");
		
		String[] myArray = new String[5];
		myArrayList.toArray(myArray);
		
		System.out.println(Arrays.toString(myArray));
	}
}</code></pre>
<p>This time notice how myArray was LARGER than then ArrayList. This code still works and the myArray array then contains: [Hello, World, null, null, null].</p>
<pre><code class="lang-auto">import java.util.ArrayList;
import java.util.Arrays;


public class ArrayListExample {
	public static void main(String[] args) {
		ArrayList&lt;String&gt; myArrayList = new ArrayList&lt;String&gt;();
		
		myArrayList.add("Hello");
		myArrayList.add("World");
		
		String[] myArray = new String[1];
		myArrayList.toArray(myArray);
		
		System.out.println(Arrays.toString(myArray));
	}
}</code></pre>
<p>Notice this time that the myArray array is SMALLER than the ArrayList. You may think it’ll only place one of my strings into the array but infact, it doesn’t - it doesn’t add any of them into the array. The myArray array then just contains [null].</p>
<p>Things can also start to get a bit more complicated. This is also valid syntax and works fine.</p>
<pre><code class="lang-auto">	public String[] toArray(ArrayList&lt;String&gt; e) {
		return e.toArray(new String[]{});
	}</code></pre>
<p>This is because you’re using the toArray method to return all the values in the ArrayList (This is defaulted to a Object[]) - because you’re passing in an empty String[] it returns the ArrayList as a String[].</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/arraylist-to-array/417599/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/arraylist-to-array/417599/2</link>
        <pubDate>Mon, 10 Oct 2011 20:59:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-417599-2</guid>
        <source url="https://forum.moparisthebest.com/t/arraylist-to-array/417599.rss">Arraylist to array?</source>
      </item>
      <item>
        <title>Arraylist to array?</title>
        <dc:creator><![CDATA[@xryz xryz]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xryz">@xryz</a> wrote:</p>
          <blockquote>
              <p>ok so i looked on google and found what i need to do. this is pretty much the code i was given:</p>
<p><code>String[] result = new String[arrayList.size()];
arraylist.toArray(result);</code></p>
<p>my question is does that assign the array to the result array? i didn’ think u could reference variables in parameter like u can in the “C” languages or is it doing something different in order to get the same result?</p>
<p>i was thinking that it just returns an array and i have to assign the returned array to the result array.</p>
<pre><code class="lang-auto"></code></pre>
<p>the only reason i can think u need the array argument is to get what type it is since the toArray method is a generic method.</p>
<p>thank you.</p>
<p>EDIT: after reading over the documentation for the method in the api, multiple times, im guessing the first code is correct seeing as it says “… returned therein.” verification on this would be appreciated.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/arraylist-to-array/417599/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/arraylist-to-array/417599/1</link>
        <pubDate>Sun, 09 Oct 2011 15:43:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-417599-1</guid>
        <source url="https://forum.moparisthebest.com/t/arraylist-to-array/417599.rss">Arraylist to array?</source>
      </item>
  </channel>
</rss>
