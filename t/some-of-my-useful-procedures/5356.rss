<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Some of my useful procedures</title>
    <link>https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356</link>
    <description>For your use or whatever, some are too specific to be put into SRL.

This finds your principal reference color with tolerance then looks to find ALL other refence colors in the specified box nearby...  
The concept: There might be 2 objects on the screen with similar colors... but do they share every single color... 
[code]
{*******************************************************************************
function FindAllColorsInBoxTolerance(var x,y: integer; ColorArray: array of Integer; BoxSize,Tol:integer):boolean;
By: Roberty Bob
Description: Pass in an array of object colors with principal reference color in Array[0]
             Returns true if all the colors were found in a box surrounding the principal reference color.
*******************************************************************************}
function FindAllColorsInBoxTolerance(var x,y: integer; ColorArray: array of Integer; BoxSize,Tol:integer):boolean;

var
  i,j,a1,b1,HBox,ArraySize,Sx,Sy,Ex,Ey: integer;
var
  AllFound,ColorMissing: boolean;

begin
  //******** Set these to your specific search area, to make function more efficient.
  Sx:= MSX1;     //currently main screen
  Sy:= MSY1;
  Ex:= MSX2;
  Ey:= MSY2;
  //********
  HBox:= (BoxSize/2);
  ColorMissing:= false;
  AllFound:= false;
  ArraySize:= GetArrayLength(ColorArray);
  x:= MSCX-250+random(500);
  y:= MSCY-200+random(400);

  repeat
    FindColorSpiralTolerance(x,y,ColorArray[0],Sx,Sy,Ex,Ey,Tol);
    a1:= x;
    b1:= y;
    i:= 0;
    repeat
      if FindColorSpiralTolerance(a1,b1,ColorArray[i],a1-(HBox),b1-(HBox),a1+(HBox),b1+(HBox),Tol) then
        AllFound:=true
      else
        begin
          ColorMissing:= true;
          AllFound:= false;
          break;
        end;

      i:= i+1;
    until i= (ArraySize-1)
    if ColorMissing then break;
    j:= j+1;
  until AllFound or (j=10)

result:= AllFound;
end;
[/code]

For example... to find a fire...  :)

setarraylength(Fire,8);
  Fire[0]:= 3326963;  // principal reference color. 
  Fire[1]:= 13376;
  Fire[2]:= 10548;
  Fire[3]:= 11834;
  Fire[4]:= 1997728;
  Fire[5]:= 2261664;
  Fire[6]:= 3840432;
FindAllColorsInBoxTolerance(x,y,Fire,15,30)


This is my motion detector from SRL. It uses a doubly symetric grid to scan for color change... Its very fast, even on super detaile motion checks...
[code]
{*******************************************************************************
Function DetectMotionInBox(var x,y:integer; BoxDimension,PointsHV,Accuracy,TimeFrame:integer):boolean;
By: Roberty Bob.
Description: Generates a grid of size (PointsHV X PointsHV) within a box of BoxDimension
around the x,y coords inputed. Accuracy (0-100) reflects how many pixels changing color will trigger the detector.
Timeframe is the time in ms which the change will occur over. This will be improved in future version.
*******************************************************************************}
Function DetectMotionInBox(var x,y:integer; BoxDimension,PointsHV,Accuracy,TimeFrame:integer):boolean;
var
  f,g,h,i,j,k, ArraySize,TempColor,
  x1,y1,x2,y2 :integer;
var
  Store1, Store2: array of integer;

begin
  ArraySize:= PointsHV*PointsHV;
  SetArrayLength(Store1,Arraysize);
  SetArrayLength(Store2,Arraysize);

  x1:= x-(BoxDimension/2);
  y1:= y-(BoxDimension/2);
  x2:= x+(BoxDimension/2);
  y2:= y+(BoxDimension/2);

  g:= 0;
  h:= 0;
  //---------------------------
  i:=  0;
  j:= x1;
  k:= y1;

  f:= 0;
  repeat
    Store1[f]:= 0;
    f:= f+1;
  until f=ArraySize-1

  f:= 0;
  repeat
    Store2[f]:= 0;
    f:= f+1;
  until f=ArraySize-1
  
  
  repeat
        j:=x1;
        repeat
          begin
            TempColor:= GetColor(j,k);

            Store1[i]:= TempColor;

            i:= i+1;
            j:= j+(BoxDimension/(PointsHV-1));
          end;
        until j&gt;=x2
    k:= k+(BoxDimension/(PointsHV-1));
  until k&gt;=y2

  wait(TimeFrame);
  //---------------------------
  i:=  0;
  j:= x1;
  k:= y1;
  repeat
        j:=x1;
        repeat
          begin
            TempColor:= GetColor(j,k);
            Store2[i]:= TempColor;

            if Store1[i] = Store2[i] then
              begin
                g:= g+1;
                h:= h+1;
              end
            else
                h:= h+1;

            i:= i+1;
            j:= j+(BoxDimension/(PointsHV-1));
          end;
        until j&gt;=x2
    k:= k+(BoxDimension/(PointsHV-1));
  until k&gt;=y2
  //---------------------------

if (Round(g/h*100))&gt;=Accuracy then
Result:= False
else
Result:= True;
end;
[/code]

This is to count specific ores. ie. how many coal ores are in my inventory. Just basic but just sharing the love.

[code]
{*******************************************************************************
Function CountOres(WhichOre: string; Tol:integer) :Integer;
By: Roberty Bob.
Description: Returns the number of specific ores in your inventory.
  Argument &#39;all&#39; returns the total number of ores you have.
*******************************************************************************}
Function CountOres(WhichOre: string; Tol:integer) :Integer;
var
  OreCount: integer;

begin
  OreCount:= 0;

  case WhichOre of
  &#39;copper&#39; : OreCount:= CountItemBmpTol( CopperOre, Tol)  ;
  &#39;tin&#39;    : OreCount:= CountItemBmpTol( TinOre, Tol)     ;
  &#39;iron&#39;   : OreCount:= CountItemBmpTol( IronOre, Tol)    ;
  &#39;coal&#39;   : OreCount:= CountItemBmpTol( CoalOre, Tol)    ;
  &#39;silver&#39; : OreCount:= CountItemBmpTol( SilverOre, Tol)  ;
  &#39;gold&#39;   : OreCount:= CountItemBmpTol( GoldOre, Tol)    ;
  &#39;mith&#39;   : OreCount:= CountItemBmpTol( MithOre, Tol)    ;
  &#39;addy&#39;   : OreCount:= CountItemBmpTol( AdamantOre, Tol) ;
  &#39;rune&#39;   : OreCount:= CountItemBmpTol( RuniteOre, Tol)  ;
  &#39;all&#39;    : begin
               OreCount:= OreCount + CountItemBmpTol( CopperOre, Tol)  ;
               OreCount:= OreCount + CountItemBmpTol( TinOre, Tol)     ;
               OreCount:= OreCount + CountItemBmpTol( IronOre, Tol)    ;
               OreCount:= OreCount + CountItemBmpTol( SilverOre, Tol)  ;
               OreCount:= OreCount + CountItemBmpTol( CoalOre, Tol)    ;
               OreCount:= OreCount + CountItemBmpTol( GoldOre, Tol)    ;
               OreCount:= OreCount + CountItemBmpTol( MithOre, Tol)    ;
               OreCount:= OreCount + CountItemBmpTol( AdamantOre, Tol) ;
               OreCount:= OreCount + CountItemBmpTol( RuniteOre, Tol)  ;
             end;
  end;

Result:= OreCount;
end;
[/code]

Another one for your miners... a random ore dropper... I have a better version of this somewhere but can&#39;t find it... this one will need a little tweaking... :) Not for SRL, just for whoever can use it.
[code]
{*******************************************************************************
Procedure OreDropRandom;
Description: Drops all normal Ores randomly.
By: Roberty Bob
Description: Drops all ores from your inventory in a guided random process.
*******************************************************************************}
Procedure OreDropRandom;

var
  a,b,
  c,d,
  OreMask: integer;

begin
  OreMask := BitmapFromString(11, 11, &#39;z78DA73730301033070436&#39; +
       &#39;2238B60024C35B84CC0A5923C13F0BB937813F0EB22DE04CC5022&#39; +
       &#39;CF04CADD404CC890EA0BFCE2F85D4E4C6A212FF470998FCC0600F&#39; +
       &#39;B599CC1&#39;);

  Repeat
    a:= a-80+random(160);
    b:= b-80+random(160);
    if FindBitmapMaskTolerance(OreMask, a, b, MIX1, MIY1, MIX2, MIY2, 10, 10) then
      begin
        MMouse(a,b,0,0);
        Wait(50+random(50));
        Mouse(a,b,5,5,false);
        Wait(200+Random(50));
        ChooseOption(c, d, &#39;rop&#39;);
        Wait(400+Random(200));
      end;
  until not FindBitmapMaskTolerance(OreMask, a, b, MIX1, MIY1, MIX2, MIY2, 10, 10)
  FreeBitmap(OreMask);
  
end;
[/code]</description>
    
    <lastBuildDate>Wed, 09 Aug 2006 06:56:27 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Some of my useful procedures</title>
        <dc:creator><![CDATA[@WhiteShadow WhiteShadow]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/whiteshadow">@WhiteShadow</a> wrote:</p>
          <blockquote>
              <p>LoadSmithingBitMaps;? For CountOres;</p>
<p>After I studied, your function a bit now I get prinicipal reference color.<br>
Basically this creates a box (size box based on BoxSize) around the principal color, then searches for the <span class="bbcode-b">all</span> other color that’s in the box. If there is all colors in the box then Result:= true;</p>
<p>Just in case you don’t know.</p>
<ul>
<li>Booleans are default false - locals are default 0.</li>
<li>for to dos are much faster looping than repeat until, and less messy! xD<br>
Well, I admire your work. Keep it up dude!</li>
</ul>
<p>One question. Why div BoxSize? Just tell people that it’s pixels out from coord. Or else they insert a small pixel and you div it even more can cause more result falses then needed.<br>
Also what would happen if this part…<br>
[scar]FindColorSpiralTolerance(x, y, ColorArray[0], MSX1, MSY1, MSX2, MSY2, Tol)<br>
a1:= x;<br>
b1:= y;[/scar]<br>
FindSpiral were false then you would get a1 b1 equalling 0, 0. Your box would be screwed too. Negative top left corner coords.<br>
I fixed it a bit<br>
[scar]{*******************************************************************************<br>
function FindAllColorsInBoxTolerance(var x,y: integer; ColorArray: array of Integer; BoxSize,Tol:integer):boolean;<br>
By: Roberty Bob<br>
Description: Pass in an array of object colors with principal reference color in Array[0]<br>
Returns true if all the colors were found in a box surrounding the principal reference color.<br>
*******************************************************************************}<br>
function FindAllColorsInBoxTolerance(var x, y : Integer; ColorArray: array of Integer; BoxSize, Tol : Integer) : Boolean;<br>
var<br>
i, j, a1, b1, ArraySize : Integer;<br>
AllFound, ColorMissing  : Boolean;<br>
begin<br>
ArraySize:= GetArrayLength(ColorArray);<br>
x:= MSCX - 250 + random(500);<br>
y:= MSCY - 200 + random(400);<br>
repeat<br>
if(not(FindColorSpiralTolerance(x, y, ColorArray[0], MSX1, MSY1, MSX2, MSY2, Tol))then<br>
begin<br>
Result:= False;<br>
Exit;<br>
end else<br>
begin<br>
a1:= x;<br>
b1:= y;<br>
end;<br>
for i:= 0 to ArraySize - 1 do<br>
begin<br>
if(FindColorSpiralTolerance(a1, b1, ColorArray[i], a1 - BoxSize, b1 - BoxSize, a1 + BoxSize, b1 + BoxSize, Tol))then<br>
AllFound:= True<br>
else<br>
begin<br>
ColorMissing:= True;<br>
AllFound:= False;<br>
Break;<br>
end;<br>
end;<br>
j:= j + 1;<br>
if(ColorMissing)then Break;<br>
until(AllFound) or (j &gt;= 10)<br>
Result:= AllFound;<br>
end;[/scar]<br>
If you mind, I’ll just remove it. :S</p>
<p>and again, great work!</p>
<p>-WhiteShadow</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356/10</link>
        <pubDate>Wed, 09 Aug 2006 06:56:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-5356-10</guid>
        <source url="https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356.rss">Some of my useful procedures</source>
      </item>
      <item>
        <title>Some of my useful procedures</title>
        <dc:creator><![CDATA[@_DEAD *DEAD*]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_dead">@_DEAD</a> wrote:</p>
          <blockquote>
              <p>ive got a better “find all colours in box” procedure, instead of being limited to a rectangle, you can scan any quadrilateral, ill post it if i can find it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356/9</link>
        <pubDate>Sat, 29 Jul 2006 14:15:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-5356-9</guid>
        <source url="https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356.rss">Some of my useful procedures</source>
      </item>
      <item>
        <title>Some of my useful procedures</title>
        <dc:creator><![CDATA[@roberty_bob roberty bob]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/roberty_bob">@roberty_bob</a> wrote:</p>
          <blockquote>
              <p>Hey Thanks Tara. I’m glad to see we haven’t lost you with Villavu gone…  <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=9" title=":smiley:" class="emoji" alt=":smiley:"></p>
<p>thanks for the feedback… It does work better with some things than others… I usually run it in a loop with a certain number of iterations / uptext condition.</p>
<p>I have made it so that every time you loop the starting coordinates for the spiral change to a random MS point.  Kinda like a Monte Carlo searching algorithm.</p>
<p>I find it better than searching for one color with tolerance though. You could always use it with a tolerance raising loop too I suppose.</p>
<p>~Rob</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356/8</link>
        <pubDate>Sat, 29 Jul 2006 08:53:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-5356-8</guid>
        <source url="https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356.rss">Some of my useful procedures</source>
      </item>
      <item>
        <title>Some of my useful procedures</title>
        <dc:creator><![CDATA[@tarajunky tarajunky]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tarajunky">@tarajunky</a> wrote:</p>
          <blockquote>
              <p>FindAllColorsInBoxTolerance looks great.  The one issue I would have with it is that it will only search for one box at the very first position found for the primary color.</p>
<p>So, if you’re looking for a fire, and you character happens to have a similar color cape or hair or something, then you’ll get a lot of ‘false negatives’ and miss a lot of fires.  If you set it up like a FindObj type procedure where it would scan the screen from left top to right bottom, you could test every color that matches your primary color and find a fire on the screen every time.</p>
<p>Of course, this could also be done using a loop that repeatedly calls the FindAllColorsInBoxTolerance procedure using a range of starting x,y positions, but I just wanted to give you some feedback.  Nice work!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356/7</link>
        <pubDate>Sat, 29 Jul 2006 04:25:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-5356-7</guid>
        <source url="https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356.rss">Some of my useful procedures</source>
      </item>
      <item>
        <title>Some of my useful procedures</title>
        <dc:creator><![CDATA[@Ron Ron]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ron">@Ron</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="5" data-topic="5356">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/cheesehunk/40/5_8504b32b4165840149d2c3dd52eb0686.png" class="avatar"> Cheesehunk:</div>
<blockquote>
<p>That is awesome! It works great as well. Awesome job Roberty rob, one of the most useful/cool procedures I have seen in a while. Also, it is very unique. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"> Keep up the good work.</p>
</blockquote>
</aside>
<p>I totally agree. Man you guys are on fire today creating new procedures and showing what you’ve been hiding from us all this time! Shame! lol. This is really wonderful man, sure would help on finding stuff a hell of a lot faster. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356/6</link>
        <pubDate>Thu, 20 Jul 2006 02:44:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-5356-6</guid>
        <source url="https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356.rss">Some of my useful procedures</source>
      </item>
      <item>
        <title>Some of my useful procedures</title>
        <dc:creator><![CDATA[@Cheesehunk Cheesehunk]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cheesehunk">@Cheesehunk</a> wrote:</p>
          <blockquote>
              <p>That is awesome! It works great as well. Awesome job Roberty rob, one of the most useful/cool procedures I have seen in a while. Also, it is very unique. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"> Keep up the good work.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356/5</link>
        <pubDate>Thu, 20 Jul 2006 00:56:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-5356-5</guid>
        <source url="https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356.rss">Some of my useful procedures</source>
      </item>
      <item>
        <title>Some of my useful procedures</title>
        <dc:creator><![CDATA[@roberty_bob roberty bob]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/roberty_bob">@roberty_bob</a> wrote:</p>
          <blockquote>
              <p>I’ve stuck this piece of code just after the “result assigment” so i know triggering accuracies for various things/ events.</p>
<pre><code class="lang-auto">WriteLn(inttostr(Round(g/h*100)));</code></pre>
<p>The below example is making a 10 point by 10 point box of size 40 located in the top left of the screen for arbitary motion checking… It will trigger on 50% color change in the gridpoints, as accuracy is set to 50%. It is scanning 150 ms apart in time. (much less than this will get your processor warmed up  :P)</p>
<pre><code class="lang-auto">begin
  repeat
    x:=50;
    y:=50;
  until DetectMotionInBox(x,y,40,10,50,150)
WriteLn('You are almost certainly in motion, depending on your environment');
end.</code></pre>
<p>Let me know how it goes. Just run the script while you are stationary… and then walk somewhere to watch it break out of the loop with the motion detector.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356/4</link>
        <pubDate>Thu, 20 Jul 2006 00:44:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-5356-4</guid>
        <source url="https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356.rss">Some of my useful procedures</source>
      </item>
      <item>
        <title>Some of my useful procedures</title>
        <dc:creator><![CDATA[@Starblaster100 Starblaster100]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/starblaster100">@Starblaster100</a> wrote:</p>
          <blockquote>
              <p>Can you show me an example of how DetectMotionInBox works?<br>
Looks very nice</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356/3</link>
        <pubDate>Wed, 19 Jul 2006 20:24:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-5356-3</guid>
        <source url="https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356.rss">Some of my useful procedures</source>
      </item>
      <item>
        <title>Some of my useful procedures</title>
        <dc:creator><![CDATA[@Cheesehunk Cheesehunk]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cheesehunk">@Cheesehunk</a> wrote:</p>
          <blockquote>
              <p>You got some nice stuff in there… Keep up the good work!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356/2</link>
        <pubDate>Wed, 19 Jul 2006 00:40:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-5356-2</guid>
        <source url="https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356.rss">Some of my useful procedures</source>
      </item>
      <item>
        <title>Some of my useful procedures</title>
        <dc:creator><![CDATA[@roberty_bob roberty bob]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/roberty_bob">@roberty_bob</a> wrote:</p>
          <blockquote>
              <p>For your use or whatever, some are too specific to be put into SRL.</p>
<p>This finds your principal reference color with tolerance then looks to find ALL other refence colors in the specified box nearby…<br>
The concept: There might be 2 objects on the screen with similar colors… but do they share every single color…</p>
<pre><code class="lang-auto">{*******************************************************************************
function FindAllColorsInBoxTolerance(var x,y: integer; ColorArray: array of Integer; BoxSize,Tol:integer):boolean;
By: Roberty Bob
Description: Pass in an array of object colors with principal reference color in Array[0]
             Returns true if all the colors were found in a box surrounding the principal reference color.
*******************************************************************************}
function FindAllColorsInBoxTolerance(var x,y: integer; ColorArray: array of Integer; BoxSize,Tol:integer):boolean;

var
  i,j,a1,b1,HBox,ArraySize,Sx,Sy,Ex,Ey: integer;
var
  AllFound,ColorMissing: boolean;

begin
  //******** Set these to your specific search area, to make function more efficient.
  Sx:= MSX1;     //currently main screen
  Sy:= MSY1;
  Ex:= MSX2;
  Ey:= MSY2;
  //********
  HBox:= (BoxSize/2);
  ColorMissing:= false;
  AllFound:= false;
  ArraySize:= GetArrayLength(ColorArray);
  x:= MSCX-250+random(500);
  y:= MSCY-200+random(400);

  repeat
    FindColorSpiralTolerance(x,y,ColorArray[0],Sx,Sy,Ex,Ey,Tol);
    a1:= x;
    b1:= y;
    i:= 0;
    repeat
      if FindColorSpiralTolerance(a1,b1,ColorArray[i],a1-(HBox),b1-(HBox),a1+(HBox),b1+(HBox),Tol) then
        AllFound:=true
      else
        begin
          ColorMissing:= true;
          AllFound:= false;
          break;
        end;

      i:= i+1;
    until i= (ArraySize-1)
    if ColorMissing then break;
    j:= j+1;
  until AllFound or (j=10)

result:= AllFound;
end;</code></pre>
<p>For example… to find a fire…  <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>setarraylength(Fire,8);<br>
Fire[0]:= 3326963;  // principal reference color.<br>
Fire[1]:= 13376;<br>
Fire[2]:= 10548;<br>
Fire[3]:= 11834;<br>
Fire[4]:= 1997728;<br>
Fire[5]:= 2261664;<br>
Fire[6]:= 3840432;<br>
FindAllColorsInBoxTolerance(x,y,Fire,15,30)</p>
<p>This is my motion detector from SRL. It uses a doubly symetric grid to scan for color change… Its very fast, even on super detaile motion checks…</p>
<pre><code class="lang-auto">{*******************************************************************************
Function DetectMotionInBox(var x,y:integer; BoxDimension,PointsHV,Accuracy,TimeFrame:integer):boolean;
By: Roberty Bob.
Description: Generates a grid of size (PointsHV X PointsHV) within a box of BoxDimension
around the x,y coords inputed. Accuracy (0-100) reflects how many pixels changing color will trigger the detector.
Timeframe is the time in ms which the change will occur over. This will be improved in future version.
*******************************************************************************}
Function DetectMotionInBox(var x,y:integer; BoxDimension,PointsHV,Accuracy,TimeFrame:integer):boolean;
var
  f,g,h,i,j,k, ArraySize,TempColor,
  x1,y1,x2,y2 :integer;
var
  Store1, Store2: array of integer;

begin
  ArraySize:= PointsHV*PointsHV;
  SetArrayLength(Store1,Arraysize);
  SetArrayLength(Store2,Arraysize);

  x1:= x-(BoxDimension/2);
  y1:= y-(BoxDimension/2);
  x2:= x+(BoxDimension/2);
  y2:= y+(BoxDimension/2);

  g:= 0;
  h:= 0;
  //---------------------------
  i:=  0;
  j:= x1;
  k:= y1;

  f:= 0;
  repeat
    Store1[f]:= 0;
    f:= f+1;
  until f=ArraySize-1

  f:= 0;
  repeat
    Store2[f]:= 0;
    f:= f+1;
  until f=ArraySize-1
  
  
  repeat
        j:=x1;
        repeat
          begin
            TempColor:= GetColor(j,k);

            Store1[i]:= TempColor;

            i:= i+1;
            j:= j+(BoxDimension/(PointsHV-1));
          end;
        until j&gt;=x2
    k:= k+(BoxDimension/(PointsHV-1));
  until k&gt;=y2

  wait(TimeFrame);
  //---------------------------
  i:=  0;
  j:= x1;
  k:= y1;
  repeat
        j:=x1;
        repeat
          begin
            TempColor:= GetColor(j,k);
            Store2[i]:= TempColor;

            if Store1[i] = Store2[i] then
              begin
                g:= g+1;
                h:= h+1;
              end
            else
                h:= h+1;

            i:= i+1;
            j:= j+(BoxDimension/(PointsHV-1));
          end;
        until j&gt;=x2
    k:= k+(BoxDimension/(PointsHV-1));
  until k&gt;=y2
  //---------------------------

if (Round(g/h*100))&gt;=Accuracy then
Result:= False
else
Result:= True;
end;</code></pre>
<p>This is to count specific ores. ie. how many coal ores are in my inventory. Just basic but just sharing the love.</p>
<pre><code class="lang-auto">{*******************************************************************************
Function CountOres(WhichOre: string; Tol:integer) :Integer;
By: Roberty Bob.
Description: Returns the number of specific ores in your inventory.
  Argument 'all' returns the total number of ores you have.
*******************************************************************************}
Function CountOres(WhichOre: string; Tol:integer) :Integer;
var
  OreCount: integer;

begin
  OreCount:= 0;

  case WhichOre of
  'copper' : OreCount:= CountItemBmpTol( CopperOre, Tol)  ;
  'tin'    : OreCount:= CountItemBmpTol( TinOre, Tol)     ;
  'iron'   : OreCount:= CountItemBmpTol( IronOre, Tol)    ;
  'coal'   : OreCount:= CountItemBmpTol( CoalOre, Tol)    ;
  'silver' : OreCount:= CountItemBmpTol( SilverOre, Tol)  ;
  'gold'   : OreCount:= CountItemBmpTol( GoldOre, Tol)    ;
  'mith'   : OreCount:= CountItemBmpTol( MithOre, Tol)    ;
  'addy'   : OreCount:= CountItemBmpTol( AdamantOre, Tol) ;
  'rune'   : OreCount:= CountItemBmpTol( RuniteOre, Tol)  ;
  'all'    : begin
               OreCount:= OreCount + CountItemBmpTol( CopperOre, Tol)  ;
               OreCount:= OreCount + CountItemBmpTol( TinOre, Tol)     ;
               OreCount:= OreCount + CountItemBmpTol( IronOre, Tol)    ;
               OreCount:= OreCount + CountItemBmpTol( SilverOre, Tol)  ;
               OreCount:= OreCount + CountItemBmpTol( CoalOre, Tol)    ;
               OreCount:= OreCount + CountItemBmpTol( GoldOre, Tol)    ;
               OreCount:= OreCount + CountItemBmpTol( MithOre, Tol)    ;
               OreCount:= OreCount + CountItemBmpTol( AdamantOre, Tol) ;
               OreCount:= OreCount + CountItemBmpTol( RuniteOre, Tol)  ;
             end;
  end;

Result:= OreCount;
end;</code></pre>
<p>Another one for your miners… a random ore dropper… I have a better version of this somewhere but can’t find it… this one will need a little tweaking… <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"> Not for SRL, just for whoever can use it.</p>
<pre><code class="lang-auto">{*******************************************************************************
Procedure OreDropRandom;
Description: Drops all normal Ores randomly.
By: Roberty Bob
Description: Drops all ores from your inventory in a guided random process.
*******************************************************************************}
Procedure OreDropRandom;

var
  a,b,
  c,d,
  OreMask: integer;

begin
  OreMask := BitmapFromString(11, 11, 'z78DA73730301033070436' +
       '2238B60024C35B84CC0A5923C13F0BB937813F0EB22DE04CC5022' +
       'CF04CADD404CC890EA0BFCE2F85D4E4C6A212FF470998FCC0600F' +
       'B599CC1');

  Repeat
    a:= a-80+random(160);
    b:= b-80+random(160);
    if FindBitmapMaskTolerance(OreMask, a, b, MIX1, MIY1, MIX2, MIY2, 10, 10) then
      begin
        MMouse(a,b,0,0);
        Wait(50+random(50));
        Mouse(a,b,5,5,false);
        Wait(200+Random(50));
        ChooseOption(c, d, 'rop');
        Wait(400+Random(200));
      end;
  until not FindBitmapMaskTolerance(OreMask, a, b, MIX1, MIY1, MIX2, MIY2, 10, 10)
  FreeBitmap(OreMask);
  
end;</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356/1</link>
        <pubDate>Wed, 19 Jul 2006 00:26:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-5356-1</guid>
        <source url="https://forum.moparisthebest.com/t/some-of-my-useful-procedures/5356.rss">Some of my useful procedures</source>
      </item>
  </channel>
</rss>
