<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>A Little Assistence - BCEL</title>
    <link>https://forum.moparisthebest.com/t/a-little-assistence-bcel/182492</link>
    <description>I&#39;ve been working on updating the Ares Updater for the past few hours now. Everything has been going good and I&#39;ve been getting alot more hooks as I go but for some reason I&#39;m stuck on this problem.

In Position.java when the updater comes reaches it a NullPointerException is produced. I&#39;m certain it has to do with the getLocationX and getLocationY part because when I comment that out everything is fine. I realize, though that in order to produce the character hooks &quot;getX&quot; and &quot;getY&quot; I need to get this part to work.

I&#39;m pretty sure it has to do with some new pattern in the client that I&#39;m not aware of. I looked over &#39;gi.class&#39; manually with jbe and it appears that it would all work properly with the code.

This is Position.java:
[code]
package com.aresbot.updater;

import com.sun.org.apache.bcel.internal.classfile.Method;
import com.sun.org.apache.bcel.internal.generic.ClassGen;
import com.sun.org.apache.bcel.internal.generic.FieldInstruction;
import com.sun.org.apache.bcel.internal.generic.Type;

public class Position extends Transformer {

	public Position(Updater u) {
		super(u);
	}

	public boolean toActivate(ClassGen cg) {
		return cp.lookupString(&quot;T2 - &quot;) != -1;
	}

	public boolean run() {
		ClassGen client = findClass(&quot;client&quot;);
		ClassGen character = findClass(get(&quot;Character&quot;, 0));
		for (Method m : classGen.getMethods()) {
			if (m.isStatic() &amp;&amp; m.getReturnType() == Type.BOOLEAN) {
				InstructionSearcher search = new InstructionSearcher(classGen, m);
				int FOUND = 0;
				if (search.nextLDC(&quot;T2 - &quot;) != null) {
					if (search.nextFieldInstructionType(Type.getType(&quot;L&quot; + get(&quot;Player&quot;, 0) + &quot;;&quot;)) != null) while (search.nextFieldInstruction() != null) {
						if (((FieldInstruction) search.current()).getFieldType(cp).equals(Type.getType(&quot;L&quot; + get(&quot;Player&quot;, 0) + &quot;;&quot;))) {
							addField(client, getType(&quot;hooks.Player&quot;), &quot;getMyPlayer&quot;, (FieldInstruction) search.current());
							FOUND++;
						} else if (((FieldInstruction) search.current()).getFieldType(cp).equals(Type.getType(int[].class)) &amp;&amp; get(&quot;LocationX&quot;, 1) == null) {
							addField(character, Type.getType(int[].class), &quot;getLocationX&quot;, (FieldInstruction) search.current());
							put(&quot;LocationX&quot;, ((FieldInstruction) search.current()).getFieldName(cp), 1);
							FOUND++;
						} else if (((FieldInstruction) search.current()).getFieldType(cp).equals(Type.getType(int[].class))) {
							addField(character, Type.getType(int[].class), &quot;getLocationY&quot;, (FieldInstruction) search.current());
							FOUND++;
						} else if (((FieldInstruction) search.current()).getFieldType(cp).equals(Type.INT) &amp;&amp; get(&quot;BaseX&quot;, 1) == null) {
							addField(client, Type.INT, &quot;getBaseX&quot;, (FieldInstruction) search.current());
							put(&quot;BaseX&quot;, ((FieldInstruction) search.current()).getFieldName(cp), 1);
							FOUND++;
						} else if (((FieldInstruction) search.current()).getFieldType(cp).equals(Type.INT)) {
							addField(client, Type.INT, &quot;getBaseY&quot;, (FieldInstruction) search.current());
							FOUND++;
						}
						if (FOUND &gt;= 5) return true;
					}
				}
			}
		}
		return false;
	}
}
[/code]

This is Character.java(notice it uses &quot;LocationX&quot; as a foothold to add the getX/getY hooks):
[code]
package com.aresbot.updater;

import com.sun.org.apache.bcel.internal.classfile.Field;
import com.sun.org.apache.bcel.internal.classfile.Method;
import com.sun.org.apache.bcel.internal.generic.ClassGen;
import com.sun.org.apache.bcel.internal.generic.FieldInstruction;
import com.sun.org.apache.bcel.internal.generic.Type;

public class Character extends Transformer {

	public Character(Updater u) {
		super(u);
	}

	public boolean toActivate(ClassGen cg) {
		return get(&quot;Character&quot;, 0) != null;
	}

	public boolean run() {
		addInterface(classGen, &quot;hooks.Character&quot;);
		for (Field f : classGen.getFields()) {
			if (!f.isStatic() &amp;&amp; f.getSignature().indexOf(&quot;L&quot;) != -1) {
				if (f.getSignature().equals(&quot;L&quot; + get(&quot;StringWrapper&quot;, 0) + &quot;;&quot;)) {
					addField(classGen, getType(&quot;hooks.StringWrapper&quot;), &quot;getMessage&quot;, f);
				}
			}
		}
		for (Method m : classGen.getMethods()) {
			if (!m.isStatic() &amp;&amp; m.isFinal() &amp;&amp; m.getReturnType() == Type.VOID &amp;&amp; m.getArgumentTypes().length &gt; 3) {
				InstructionSearcher search = new InstructionSearcher(classGen, m);
				if (search.next(&quot;ICONST_M1&quot;) != null) {
					FieldInstruction animation = (FieldInstruction) search.next(&quot;GETFIELD&quot;);
					if (animation != null &amp;&amp; animation.getFieldType(cp) == Type.INT) addField(classGen, Type.INT, &quot;getAnimation&quot;, animation);
				}
				if (search.nextBIPUSH(9, -10) != null) {
					addField(classGen, Type.INT, &quot;isMoving&quot;, (FieldInstruction) search.previous(&quot;GETFIELD&quot;));
				}
				if (search.nextBIPUSH(64) != null) {
					if (((FieldInstruction) search.previous(&quot;GETFIELD&quot;)).getFieldName(cp).equals(get(&quot;LocationX&quot;, 1))) {
						search.nextBIPUSH(64);
						addField(classGen, Type.INT, &quot;getX&quot;, (FieldInstruction) search.next(&quot;PUTFIELD&quot;));
						put(&quot;CharX&quot;, ((FieldInstruction) search.current()).getFieldName(cp), 1);
					} else {
						search.nextBIPUSH(64);
						addField(classGen, Type.INT, &quot;getY&quot;, (FieldInstruction) search.next(&quot;PUTFIELD&quot;));
						put(&quot;CharY&quot;, ((FieldInstruction) search.current()).getFieldName(cp), 1);
					}
					if (search.nextBIPUSH(64) != null) {
						if (get(&quot;CharX&quot;, 1) == null) {
							addField(classGen, Type.INT, &quot;getX&quot;, (FieldInstruction) search.next(&quot;PUTFIELD&quot;));
							put(&quot;CharX&quot;, ((FieldInstruction) search.current()).getFieldName(cp), 1);
						} else {
							addField(classGen, Type.INT, &quot;getY&quot;, (FieldInstruction) search.next(&quot;PUTFIELD&quot;));
							put(&quot;CharY&quot;, ((FieldInstruction) search.current()).getFieldName(cp), 1);
						}
					}
				}
			}
		}
		return get(&quot;CharY&quot;, 1) != null;
	}

	@Override
	public void runUpdates() {
		setClassGen(findClass(get(&quot;Character&quot;, 0)));
		run();
	}
}
[/code]

Bear with me as I&#39;m still new to the patterns in the client and my bcel knowledge is a bit rusty.

Much thanks, Speedster239...</description>
    
    <lastBuildDate>Mon, 18 Feb 2008 12:40:15 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/a-little-assistence-bcel/182492.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>A Little Assistence - BCEL</title>
        <dc:creator><![CDATA[@speedster239 speedster239]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/speedster239">@speedster239</a> wrote:</p>
          <blockquote>
              <p>Nevermind this, I found out that their was a mistake in the the instruction scanner.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/a-little-assistence-bcel/182492/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/a-little-assistence-bcel/182492/3</link>
        <pubDate>Mon, 18 Feb 2008 12:40:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-182492-3</guid>
        <source url="https://forum.moparisthebest.com/t/a-little-assistence-bcel/182492.rss">A Little Assistence - BCEL</source>
      </item>
      <item>
        <title>A Little Assistence - BCEL</title>
        <dc:creator><![CDATA[@Cheese_Police c|p]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cheese_police">@Cheese_Police</a> wrote:</p>
          <blockquote>
              <p>Post the stack trace.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/a-little-assistence-bcel/182492/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/a-little-assistence-bcel/182492/2</link>
        <pubDate>Mon, 18 Feb 2008 12:13:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-182492-2</guid>
        <source url="https://forum.moparisthebest.com/t/a-little-assistence-bcel/182492.rss">A Little Assistence - BCEL</source>
      </item>
      <item>
        <title>A Little Assistence - BCEL</title>
        <dc:creator><![CDATA[@speedster239 speedster239]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/speedster239">@speedster239</a> wrote:</p>
          <blockquote>
              <p>I’ve been working on updating the Ares Updater for the past few hours now. Everything has been going good and I’ve been getting alot more hooks as I go but for some reason I’m stuck on this problem.</p>
<p>In Position.java when the updater comes reaches it a NullPointerException is produced. I’m certain it has to do with the getLocationX and getLocationY part because when I comment that out everything is fine. I realize, though that in order to produce the character hooks “getX” and “getY” I need to get this part to work.</p>
<p>I’m pretty sure it has to do with some new pattern in the client that I’m not aware of. I looked over ‘gi.class’ manually with jbe and it appears that it would all work properly with the code.</p>
<p>This is Position.java:</p>
<pre><code class="lang-auto">package com.aresbot.updater;

import com.sun.org.apache.bcel.internal.classfile.Method;
import com.sun.org.apache.bcel.internal.generic.ClassGen;
import com.sun.org.apache.bcel.internal.generic.FieldInstruction;
import com.sun.org.apache.bcel.internal.generic.Type;

public class Position extends Transformer {

	public Position(Updater u) {
		super(u);
	}

	public boolean toActivate(ClassGen cg) {
		return cp.lookupString("T2 - ") != -1;
	}

	public boolean run() {
		ClassGen client = findClass("client");
		ClassGen character = findClass(get("Character", 0));
		for (Method m : classGen.getMethods()) {
			if (m.isStatic() &amp;&amp; m.getReturnType() == Type.BOOLEAN) {
				InstructionSearcher search = new InstructionSearcher(classGen, m);
				int FOUND = 0;
				if (search.nextLDC("T2 - ") != null) {
					if (search.nextFieldInstructionType(Type.getType("L" + get("Player", 0) + ";")) != null) while (search.nextFieldInstruction() != null) {
						if (((FieldInstruction) search.current()).getFieldType(cp).equals(Type.getType("L" + get("Player", 0) + ";"))) {
							addField(client, getType("hooks.Player"), "getMyPlayer", (FieldInstruction) search.current());
							FOUND++;
						} else if (((FieldInstruction) search.current()).getFieldType(cp).equals(Type.getType(int[].class)) &amp;&amp; get("LocationX", 1) == null) {
							addField(character, Type.getType(int[].class), "getLocationX", (FieldInstruction) search.current());
							put("LocationX", ((FieldInstruction) search.current()).getFieldName(cp), 1);
							FOUND++;
						} else if (((FieldInstruction) search.current()).getFieldType(cp).equals(Type.getType(int[].class))) {
							addField(character, Type.getType(int[].class), "getLocationY", (FieldInstruction) search.current());
							FOUND++;
						} else if (((FieldInstruction) search.current()).getFieldType(cp).equals(Type.INT) &amp;&amp; get("BaseX", 1) == null) {
							addField(client, Type.INT, "getBaseX", (FieldInstruction) search.current());
							put("BaseX", ((FieldInstruction) search.current()).getFieldName(cp), 1);
							FOUND++;
						} else if (((FieldInstruction) search.current()).getFieldType(cp).equals(Type.INT)) {
							addField(client, Type.INT, "getBaseY", (FieldInstruction) search.current());
							FOUND++;
						}
						if (FOUND &gt;= 5) return true;
					}
				}
			}
		}
		return false;
	}
}</code></pre>
<p>This is Character.java(notice it uses “LocationX” as a foothold to add the getX/getY hooks):</p>
<pre><code class="lang-auto">package com.aresbot.updater;

import com.sun.org.apache.bcel.internal.classfile.Field;
import com.sun.org.apache.bcel.internal.classfile.Method;
import com.sun.org.apache.bcel.internal.generic.ClassGen;
import com.sun.org.apache.bcel.internal.generic.FieldInstruction;
import com.sun.org.apache.bcel.internal.generic.Type;

public class Character extends Transformer {

	public Character(Updater u) {
		super(u);
	}

	public boolean toActivate(ClassGen cg) {
		return get("Character", 0) != null;
	}

	public boolean run() {
		addInterface(classGen, "hooks.Character");
		for (Field f : classGen.getFields()) {
			if (!f.isStatic() &amp;&amp; f.getSignature().indexOf("L") != -1) {
				if (f.getSignature().equals("L" + get("StringWrapper", 0) + ";")) {
					addField(classGen, getType("hooks.StringWrapper"), "getMessage", f);
				}
			}
		}
		for (Method m : classGen.getMethods()) {
			if (!m.isStatic() &amp;&amp; m.isFinal() &amp;&amp; m.getReturnType() == Type.VOID &amp;&amp; m.getArgumentTypes().length &gt; 3) {
				InstructionSearcher search = new InstructionSearcher(classGen, m);
				if (search.next("ICONST_M1") != null) {
					FieldInstruction animation = (FieldInstruction) search.next("GETFIELD");
					if (animation != null &amp;&amp; animation.getFieldType(cp) == Type.INT) addField(classGen, Type.INT, "getAnimation", animation);
				}
				if (search.nextBIPUSH(9, -10) != null) {
					addField(classGen, Type.INT, "isMoving", (FieldInstruction) search.previous("GETFIELD"));
				}
				if (search.nextBIPUSH(64) != null) {
					if (((FieldInstruction) search.previous("GETFIELD")).getFieldName(cp).equals(get("LocationX", 1))) {
						search.nextBIPUSH(64);
						addField(classGen, Type.INT, "getX", (FieldInstruction) search.next("PUTFIELD"));
						put("CharX", ((FieldInstruction) search.current()).getFieldName(cp), 1);
					} else {
						search.nextBIPUSH(64);
						addField(classGen, Type.INT, "getY", (FieldInstruction) search.next("PUTFIELD"));
						put("CharY", ((FieldInstruction) search.current()).getFieldName(cp), 1);
					}
					if (search.nextBIPUSH(64) != null) {
						if (get("CharX", 1) == null) {
							addField(classGen, Type.INT, "getX", (FieldInstruction) search.next("PUTFIELD"));
							put("CharX", ((FieldInstruction) search.current()).getFieldName(cp), 1);
						} else {
							addField(classGen, Type.INT, "getY", (FieldInstruction) search.next("PUTFIELD"));
							put("CharY", ((FieldInstruction) search.current()).getFieldName(cp), 1);
						}
					}
				}
			}
		}
		return get("CharY", 1) != null;
	}

	@Override
	public void runUpdates() {
		setClassGen(findClass(get("Character", 0)));
		run();
	}
}</code></pre>
<p>Bear with me as I’m still new to the patterns in the client and my bcel knowledge is a bit rusty.</p>
<p>Much thanks, Speedster239…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/a-little-assistence-bcel/182492/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/a-little-assistence-bcel/182492/1</link>
        <pubDate>Mon, 18 Feb 2008 09:15:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-182492-1</guid>
        <source url="https://forum.moparisthebest.com/t/a-little-assistence-bcel/182492.rss">A Little Assistence - BCEL</source>
      </item>
  </channel>
</rss>
