<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>MySQL</title>
    <link>https://forum.moparisthebest.com/t/mysql/460482</link>
    <description>Is there a way to check if a result has a value without using results.next()?  Like my code for checking votes: [code=java]    public static boolean checkVotes(String playerName)
        {
                try {
                        Statement statement = con.createStatement();
                        String query = &quot;SELECT * FROM votes WHERE username LIKE &#39;&quot; + playerName + &quot;&#39; AND recieved = 0&quot;;
                        ResultSet results = statement.executeQuery(query);
                        while(results.next()) {
                                int recieved = results.getInt(&quot;recieved&quot;);
                                if(recieved == 0)
                                {
                                return true;
                                }
                                
                        }
                } catch(SQLException e) {
                        e.printStackTrace();
                }
                return false;
        }
        public static boolean voteGiven(String playerName)
        {
                try
                {
                    query(&quot;UPDATE votes SET recieved = 1 WHERE username LIKE &#39;&quot; + playerName + &quot;&#39; AND recieved = 0&quot;);

                } catch (Exception e) {
                        e.printStackTrace();
                        return false;
                }
                return true;
        }[/code]
Instead of it saying [code=java]if(recieved == 0)[/code]
Could I just make the checkVotes boolean true if there is a result for [code=sql]SELECT * FROM votes WHERE username LIKE &#39;&quot; + playerName + &quot;&#39; AND recieved = 0[/code]
So I wouldn&#39;t need another method.  Well the main reason I want to do this is so I can get rid of con.createStatement();  I start the sql connection at the start of the server so I wouldn&#39;t have to call it for every player and just run querys.  But the only way I see to do it is to keep the if(recieved ==0) return true;  but I want to make it so I don&#39;t have to create another connection to the db.  And the same thing with this [code=java]        }
	public static boolean checkStatus(Player p) {
		try {
			Statement s = con.createStatement();
			ResultSet results = s.executeQuery(&quot;SELECT * FROM `donation` WHERE `username` = &#39;&quot; + p.getUsername() + &quot;&#39; AND `given` = &#39;0&#39; LIMIT 10;&quot;);
			while(results.next()) {
				//c.getItems().addItem(results.getInt(&quot;item&quot;), results.getInt(&quot;quantity&quot;));
				int item = results.getInt(&quot;item&quot;);
				if (item == 1){
					p.getActionSender().sendMessage(&quot;You have received your dice in your bank.&quot;);
					p.getBank().getContainer().add(new Item(15098, 1));
					s.executeUpdate(&quot;UPDATE `donation` SET `given` = &#39;10&#39; WHERE `id`=&#39;&quot; + results.getInt(&quot;id&quot;) + &quot;&#39;;&quot;);
				}
				if (item == 2){
					p.getActionSender().sendMessage(&quot;You received your &lt;col=255&gt;500M&lt;/col&gt;.&quot;);
					p.getBank().getContainer().add(new Item(995, 500000000));
					s.executeUpdate(&quot;UPDATE `donation` SET `given` = &#39;10&#39; WHERE `id`=&#39;&quot; + results.getInt(&quot;id&quot;) + &quot;&#39;;&quot;);
				}
				if (item == 3){
					p.customtag = 1;
					p.getActionSender().sendMessage(&quot;You received your &lt;col=255&gt;Custom Title&lt;/col&gt;.&quot;);
					s.executeUpdate(&quot;UPDATE `donation` SET `given` = &#39;10&#39; WHERE `id`=&#39;&quot; + results.getInt(&quot;id&quot;) + &quot;&#39;;&quot;);
				}
				if (item == 4){
					p.getActionSender().sendMessage(&quot;You have been promoted to a SageScape Donator.&quot;);
					p.donator = 1;
					p.DonatorPoints +=100;
					s.executeUpdate(&quot;UPDATE `donation` SET `given` = &#39;10&#39; WHERE `id`=&#39;&quot; + results.getInt(&quot;id&quot;) + &quot;&#39;;&quot;);
				}
				if (item == 5){
					p.getActionSender().sendMessage(&quot;You have been promoted to a SageScape Super Donator.&quot;);
					p.getActionSender().sendMessage(&quot;Use ::settag Your Tag to change your tag title.&quot;);
					p.getActionSender().sendMessage(&quot;Use ::col and ::sha  to change your tag colors.&quot;);
					p.donator = 2;
					p.DonatorPoints +=500;
					p.customtag = 2;
					s.executeUpdate(&quot;UPDATE `donation` SET `given` = &#39;10&#39; WHERE `id`=&#39;&quot; + results.getInt(&quot;id&quot;) + &quot;&#39;;&quot;);
				}
				if (item == 6){
					p.getActionSender().sendMessage(&quot;You receive your primal gear in your bank.&quot;);
					p.getBank().getContainer().add(new Item(16711, 1));
					p.getBank().getContainer().add(new Item(17259, 1));
					p.getBank().getContainer().add(new Item(16689, 1));
					p.getBank().getContainer().add(new Item(16293, 1));
					p.getBank().getContainer().add(new Item(16359, 1));
					p.getBank().getContainer().add(new Item(17361, 1));
					s.executeUpdate(&quot;UPDATE `donation` SET `given` = &#39;10&#39; WHERE `id`=&#39;&quot; + results.getInt(&quot;id&quot;) + &quot;&#39;;&quot;);
				}
				if (item == 7){
					p.getActionSender().sendMessage(&quot;You receive 500 gold keys in your bank.&quot;);
					p.getBank().getContainer().add(new Item(18325, 500));
					s.executeUpdate(&quot;UPDATE `donation` SET `given` = &#39;10&#39; WHERE `id`=&#39;&quot; + results.getInt(&quot;id&quot;) + &quot;&#39;;&quot;);
				}
				if (item == 8){
					p.getActionSender().sendMessage(&quot;You receive 100 Donator Points.&quot;);
					p.DonatorPoints += 100;
					s.executeUpdate(&quot;UPDATE `donation` SET `given` = &#39;10&#39; WHERE `id`=&#39;&quot; + results.getInt(&quot;id&quot;) + &quot;&#39;;&quot;);
				}
				if (item == 9){
					p.getActionSender().sendMessage(&quot;You receive a completionist cape and hood in your bank.&quot;);
					p.getBank().getContainer().add(new Item(20769, 1));
					p.getBank().getContainer().add(new Item(20770, 1));
					s.executeUpdate(&quot;UPDATE `donation` SET `given` = &#39;10&#39; WHERE `id`=&#39;&quot; + results.getInt(&quot;id&quot;) + &quot;&#39;;&quot;);
				}
			}
		
		} catch(Exception e) {
			e.printStackTrace();
		}
		return true;
	}[/code]
I know I have s.executeUpdate a lot in this method, but this is to make sure it doesn&#39;t set it to 10 before they even get it.  My query&#39;s are run on a timer liek every 600 seconds, and I&#39;m just trying to make sure there wouldn&#39;t be any lag caused from creating multiple connections rather than just the one I have at the start of the server.  Any help?</description>
    
    <lastBuildDate>Tue, 18 Sep 2012 20:23:12 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/mysql/460482.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>MySQL</title>
        <dc:creator><![CDATA[@sageofmali sageofmali]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sageofmali">@sageofmali</a> wrote:</p>
          <blockquote>
              <p>Is there a way to check if a result has a value without using results.next()?  Like my code for checking votes: [code=java]    public static boolean checkVotes(String playerName)<br>
{<br>
try {<br>
Statement statement = con.createStatement();<br>
String query = “SELECT * FROM votes WHERE username LIKE '” + playerName + “’ AND recieved = 0”;<br>
ResultSet results = statement.executeQuery(query);<br>
while(results.next()) {<br>
int recieved = results.getInt(“recieved”);<br>
if(recieved == 0)<br>
{<br>
return true;<br>
}</p>
<pre><code>                    }
            } catch(SQLException e) {
                    e.printStackTrace();
            }
            return false;
    }
    public static boolean voteGiven(String playerName)
    {
            try
            {
                query("UPDATE votes SET recieved = 1 WHERE username LIKE '" + playerName + "' AND recieved = 0");

            } catch (Exception e) {
                    e.printStackTrace();
                    return false;
            }
            return true;
    }[/code]
</code></pre>
<p>Instead of it saying <code>if(recieved == 0)</code><br>
Could I just make the checkVotes boolean true if there is a result for <code>SELECT * FROM votes WHERE username LIKE '" + playerName + "' AND recieved = 0</code><br>
So I wouldn’t need another method.  Well the main reason I want to do this is so I can get rid of con.createStatement();  I start the sql connection at the start of the server so I wouldn’t have to call it for every player and just run querys.  But the only way I see to do it is to keep the if(recieved ==0) return true;  but I want to make it so I don’t have to create another connection to the db.  And the same thing with this [code=java]        }<br>
public static boolean checkStatus(Player p) {<br>
try {<br>
Statement s = con.createStatement();<br>
ResultSet results = s.executeQuery(“SELECT * FROM <code>donation</code> WHERE <code>username</code> = '” + p.getUsername() + “’ AND <code>given</code> = ‘0’ LIMIT 10;”);<br>
while(results.next()) {<br>
<a href="//c.getItems" rel="nofollow noopener">//c.getItems</a>().addItem(results.getInt(“item”), results.getInt(“quantity”));<br>
int item = results.getInt(“item”);<br>
if (item == 1){<br>
p.getActionSender().sendMessage(“You have received your dice in your bank.”);<br>
p.getBank().getContainer().add(new Item(15098, 1));<br>
s.executeUpdate(“UPDATE <code>donation</code> SET <code>given</code> = ‘10’ WHERE <code>id</code>=’” + results.getInt(“id”) + “’;”);<br>
}<br>
if (item == 2){<br>
p.getActionSender().sendMessage(“You received your &lt;col=255&gt;500M.”);<br>
p.getBank().getContainer().add(new Item(995, 500000000));<br>
s.executeUpdate(“UPDATE <code>donation</code> SET <code>given</code> = ‘10’ WHERE <code>id</code>=’” + results.getInt(“id”) + “’;”);<br>
}<br>
if (item == 3){<br>
p.customtag = 1;<br>
p.getActionSender().sendMessage(“You received your &lt;col=255&gt;Custom Title.”);<br>
s.executeUpdate(“UPDATE <code>donation</code> SET <code>given</code> = ‘10’ WHERE <code>id</code>=’” + results.getInt(“id”) + “’;”);<br>
}<br>
if (item == 4){<br>
p.getActionSender().sendMessage(“You have been promoted to a SageScape Donator.”);<br>
p.donator = 1;<br>
p.DonatorPoints +=100;<br>
s.executeUpdate(“UPDATE <code>donation</code> SET <code>given</code> = ‘10’ WHERE <code>id</code>=’” + results.getInt(“id”) + “’;”);<br>
}<br>
if (item == 5){<br>
p.getActionSender().sendMessage(“You have been promoted to a SageScape Super Donator.”);<br>
p.getActionSender().sendMessage(“Use ::settag Your Tag to change your tag title.”);<br>
p.getActionSender().sendMessage(“Use ::col and ::sha  to change your tag colors.”);<br>
p.donator = 2;<br>
p.DonatorPoints +=500;<br>
p.customtag = 2;<br>
s.executeUpdate(“UPDATE <code>donation</code> SET <code>given</code> = ‘10’ WHERE <code>id</code>=’” + results.getInt(“id”) + “’;”);<br>
}<br>
if (item == 6){<br>
p.getActionSender().sendMessage(“You receive your primal gear in your bank.”);<br>
p.getBank().getContainer().add(new Item(16711, 1));<br>
p.getBank().getContainer().add(new Item(17259, 1));<br>
p.getBank().getContainer().add(new Item(16689, 1));<br>
p.getBank().getContainer().add(new Item(16293, 1));<br>
p.getBank().getContainer().add(new Item(16359, 1));<br>
p.getBank().getContainer().add(new Item(17361, 1));<br>
s.executeUpdate(“UPDATE <code>donation</code> SET <code>given</code> = ‘10’ WHERE <code>id</code>=’” + results.getInt(“id”) + “’;”);<br>
}<br>
if (item == 7){<br>
p.getActionSender().sendMessage(“You receive 500 gold keys in your bank.”);<br>
p.getBank().getContainer().add(new Item(18325, 500));<br>
s.executeUpdate(“UPDATE <code>donation</code> SET <code>given</code> = ‘10’ WHERE <code>id</code>=’” + results.getInt(“id”) + “’;”);<br>
}<br>
if (item == 8){<br>
p.getActionSender().sendMessage(“You receive 100 Donator Points.”);<br>
p.DonatorPoints += 100;<br>
s.executeUpdate(“UPDATE <code>donation</code> SET <code>given</code> = ‘10’ WHERE <code>id</code>=’” + results.getInt(“id”) + “’;”);<br>
}<br>
if (item == 9){<br>
p.getActionSender().sendMessage(“You receive a completionist cape and hood in your bank.”);<br>
p.getBank().getContainer().add(new Item(20769, 1));<br>
p.getBank().getContainer().add(new Item(20770, 1));<br>
s.executeUpdate(“UPDATE <code>donation</code> SET <code>given</code> = ‘10’ WHERE <code>id</code>=’” + results.getInt(“id”) + “’;”);<br>
}<br>
}</p>
<pre><code>	} catch(Exception e) {
		e.printStackTrace();
	}
	return true;
}[/code]
</code></pre>
<p>I know I have s.executeUpdate a lot in this method, but this is to make sure it doesn’t set it to 10 before they even get it.  My query’s are run on a timer liek every 600 seconds, and I’m just trying to make sure there wouldn’t be any lag caused from creating multiple connections rather than just the one I have at the start of the server.  Any help?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/mysql/460482/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/mysql/460482/1</link>
        <pubDate>Tue, 18 Sep 2012 20:23:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-460482-1</guid>
        <source url="https://forum.moparisthebest.com/t/mysql/460482.rss">MySQL</source>
      </item>
  </channel>
</rss>
