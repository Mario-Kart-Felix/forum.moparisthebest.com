<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>All my java initializers are saying server already in use</title>
    <link>https://forum.moparisthebest.com/t/all-my-java-initializers-are-saying-server-already-in-use/437037</link>
    <description>I have a strange problem. I know the server isn&#39;t a prank as I saw my Server.java and it still had the thing that says its running. See,

[code=java]
package org;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Properties;

import org.entity.NPCHandler;
import org.event.EventManager;
import org.items.GlobalItems;
import org.items.ItemHandler;
import org.model.Client;
import org.model.Player;
import org.model.PlayerHandler;
import org.model.combat.Specials;
import org.model.commandmanager.CommandManager;
import org.model.content.TextHandler;
import org.model.packetmanager.PacketManager;
import org.model.packets.ActionButtons;
import org.model.packets.ShopHandler;
import org.model.packets.UseItem;
import org.model.packets.Wearing;
import org.model.render.GraphicsHandler;
import org.util.Misc;
import org.util.SetConfig;
import org.util.Logger;
import org.world.objects.DoorHandler;
import org.world.objects.Object;

public class Server implements Runnable {
	public static ArrayList&lt;String&gt; banned = new ArrayList&lt;String&gt;();
	public static ArrayList&lt;Integer&gt; bannedUid = new ArrayList&lt;Integer&gt;();
	public static Server clientHandler = null; // handles all the clients
	public static java.net.ServerSocket clientListener = null;
	public static int MaxConnections = 100000;
	public static int[] ConnectionCount = new int[MaxConnections];
	public static ArrayList&lt;String&gt; connections = new ArrayList&lt;String&gt;();
	public static String[] Connections = new String[MaxConnections];
	public static DoorHandler doorHandler;
	public static GraphicsHandler GraphicsHandler = null;
	public static ItemHandler itemHandler = null;
	public static Wearing Wearing = null;
	public static Specials special = null;
	public static GlobalItems GlobalItems = null;
	public static SetConfig setConfig = null;
	public static TextHandler textHandler = null;
	public static UseItem UseItem = null;
	public static ActionButtons ActionButtons = null;
	public static ArrayList&lt;Object&gt; objects = new ArrayList&lt;Object&gt;();
	public static int[][] runesRequired = new int[24][9];
	public static int serverlistenerPort = 43594; // 43594=default
	public static int updateSeconds = 1800; // 180 because it doesnt make the

	public static boolean pking = true, pickup = true, trading = true,
			dueling = true, ShutDown = false, fightcaves = true,
			updateServer = false, shutdownClientHandler, enforceClient = false,
			shutdownServer = false, loginServerConnected = true;

	public static int world = 1, delay = 50, EnergyRegian = 60,
			ShutDownCounter = 0

			;

	public static long

	startTime, lastRunite = 0, delayUpdate = 0

	;

	public static void calcTime() {
		long curTime = System.currentTimeMillis();
		updateSeconds = 1800 - ((int) (curTime - startTime) / 1800);
		if (updateSeconds == 0) {
			shutdownServer = true;
		}
	}

	public static final boolean isConnected(String host, int j) {
		int k = 0;
		for (int i = 0; i &lt; PlayerHandler.players.length; i++) {
			Player p = PlayerHandler.players[i];
			if (p == null)
				continue;

			Client c = (Client) p;
			if (c == null || c.disconnected || c.connectedFrom == null)
				continue;
			else if (c.connectedFrom.equalsIgnoreCase(host))
				k++;

		}

		return k &gt;= j;
	}

	public static void logError(String message) {
		Misc.println(message);
	}

	public static void main(java.lang.String args[])
			throws NullPointerException {
		System.setOut(new Logger(System.out));
		System.setErr(new Logger(System.err));
		try {
			EventManager.initialise();
			File f = new File(&quot;./data/Server.ini&quot;);
			if (!f.exists()) {
				Misc.println(&quot;Server.ini doesn&#39;t exist!&quot;);
			}
			Properties p = new Properties();
			p.load(new FileInputStream(&quot;./data/Server.ini&quot;));
			int Client = Integer.parseInt(p.getProperty(&quot;ClientRequired&quot;)
					.trim());
			world = Integer.parseInt(p.getProperty(&quot;WorldId&quot;));
			serverlistenerPort = Integer.parseInt(p.getProperty(&quot;ServerPort&quot;)
					.trim());
			if (Client &gt; 0) {
				Misc.println(&quot;Enforcing Devolution Client requirement&quot;);
				enforceClient = true;
			}
		} catch (Exception e) {
			Misc.println(&quot;Error loading settings&quot;);
			e.printStackTrace();
		}
		/*
		 * Load handlers
		 */
		PacketManager.loadAllPackets();
		CommandManager.loadAllCommands();
		PlayerHandler.getInstance();
		NPCHandler.getInstance();
		ItemHandler.getInstance();
		GlobalItems = new GlobalItems();
		DoorHandler.getInstance();
		GraphicsHandler = new GraphicsHandler();
		// checkPlayerCapes = new checkPlayerCapes();
		Wearing = new Wearing();
		special = new Specials();
		setConfig = new SetConfig();
		textHandler = new TextHandler();
		UseItem = new UseItem();
		ActionButtons = new ActionButtons();
		GlobalItems.process();
		if (itemHandler == null) {
			itemHandler = new ItemHandler();
		}
		ShopHandler.getInstance();
		GraphicsHandler = new GraphicsHandler();
		Scheduler.submit(new Tick(600));
		clientHandler = new Server();
		(new Thread(clientHandler)).start(); // launch Server listener

	}

	public int[] ips = new int[1000];

	public long[] lastConnect = new long[1000];
	private String address = &quot;localhost&quot;;

	public Server() {
		// the current way of controlling the Server at runtime and a great
		// debugging/testing tool
		// jserv js = new jserv(this);
		// js.start();

	}

	public void banHost(String host, int num) {
		try {
			Misc.println(&quot;BANNING HOST &quot; + host + &quot; (flooding)&quot;);
			banned.add(host);
			delay = 2000;
			delayUpdate = System.currentTimeMillis() + 60000;
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	public boolean checkHost(String host) {
		for (String h : banned) {
			if (h.equals(host))
				return false;
		}
		int num = 0;
		for (String h : connections) {
			if (host.equals(h)) {
				num++;
			}
		}
		if (num &gt; 5) {
			banHost(host, num);
			return false;
		}

		if (checkLog(&quot;ipbans&quot;, host)) {
			System.out.println(&quot;They are in ip ban list!&quot;);
			return false; // ip ban added by Jonny J
		}
		return true;
	}

	public boolean checkLog(String file, String playerName) {
		// check ipbans -Jonny J
		try {
			BufferedReader in = new BufferedReader(new FileReader(
					&quot;./data/config\\&quot; + file + &quot;.txt&quot;));
			String data = null;
			while ((data = in.readLine()) != null) {
				if (playerName.equalsIgnoreCase(data)) {
					return true;
				}
			}
		} catch (IOException e) {
			System.out.println(&quot;Critical error while checking for data!&quot;);
			System.out.println(file + &quot;:&quot; + playerName);
			e.printStackTrace();
		}
		return false;
	}

	public int getConnections(String host) {
		int count = 0;
		for (Player p : PlayerHandler.players) {
			if ((p != null) &amp;&amp; !p.disconnected
					&amp;&amp; p.connectedFrom.equalsIgnoreCase(host)) {
				count++;
			}
		}
		return count;
	}

	public void killServer() {
		try {
			shutdownClientHandler = true;
			if (clientListener != null)
				clientListener.close();
			clientListener = null;
		} catch (java.lang.Exception __ex) {
			__ex.printStackTrace();
		}
	}

	public void run() {
		// setup the listener
		try {
			shutdownClientHandler = false;
			clientListener = new java.net.ServerSocket(serverlistenerPort, 1,
					null);
			Misc.println(&quot;Server running on &quot; + address + &quot; on port &quot;
					+ serverlistenerPort);
			while (true) {
				try {
					java.net.Socket s = clientListener.accept();
					s.setTcpNoDelay(true);
					String connectingHost = s.getInetAddress().getHostName();
					if (!isConnected(connectingHost, 3)) {
						connections.add(connectingHost);
						if (checkHost(connectingHost)) {
							// Misc.println(&quot;Connection from &quot; + connectingHost
							// + &quot;:&quot; + s.getPort());
							PlayerHandler.getInstance().newPlayerClient(s,
									connectingHost);
						} else {
							// Misc.println(&quot;ClientHandler: Rejected &quot; +
							// connectingHost + &quot;:&quot; + s.getPort());
							s.close();
						}
					} else {
						Misc.println(&quot;ClientHandler: Rejected &quot;
								+ connectingHost + &quot;:&quot; + s.getPort());
						s.close();
					}
					if ((delayUpdate &gt; 0)
							&amp;&amp; (System.currentTimeMillis() &gt; delayUpdate)) {
						delay = 50;
						delayUpdate = 0;
					}
					Thread.sleep(25);
				} catch (Exception e) {
					logError(e.getMessage());
				}
			}
		} catch (java.io.IOException ioe) {
			if (!shutdownClientHandler) {
				Misc.println(&quot;Server is already in use.&quot;);
			} else {
				Misc.println(&quot;ClientHandler was shut down.&quot;);
			}
		}
	}
}
[/code]

So... how would I fix this? All my java processes are closed, soo...

[URL=http://img405.imageshack.us/i/snap44z.png/][IMG]http://img405.imageshack.us/img405/3341/snap44z.png[/img][/URL]</description>
    
    <lastBuildDate>Wed, 21 Mar 2012 11:03:21 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/all-my-java-initializers-are-saying-server-already-in-use/437037.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>All my java initializers are saying server already in use</title>
        <dc:creator><![CDATA[@eshay_lad eshay lad]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/eshay_lad">@eshay_lad</a> wrote:</p>
          <blockquote>
              <p>why not download some otter source or change the port loc in the server?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/all-my-java-initializers-are-saying-server-already-in-use/437037/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/all-my-java-initializers-are-saying-server-already-in-use/437037/3</link>
        <pubDate>Wed, 21 Mar 2012 11:03:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-437037-3</guid>
        <source url="https://forum.moparisthebest.com/t/all-my-java-initializers-are-saying-server-already-in-use/437037.rss">All my java initializers are saying server already in use</source>
      </item>
      <item>
        <title>All my java initializers are saying server already in use</title>
        <dc:creator><![CDATA[@Tutorial Tutorial]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tutorial">@Tutorial</a> wrote:</p>
          <blockquote>
              <p>The port 43594 is still receiving a signal from something.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/all-my-java-initializers-are-saying-server-already-in-use/437037/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/all-my-java-initializers-are-saying-server-already-in-use/437037/2</link>
        <pubDate>Wed, 21 Mar 2012 02:00:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-437037-2</guid>
        <source url="https://forum.moparisthebest.com/t/all-my-java-initializers-are-saying-server-already-in-use/437037.rss">All my java initializers are saying server already in use</source>
      </item>
      <item>
        <title>All my java initializers are saying server already in use</title>
        <dc:creator><![CDATA[@arham_4 arham 4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/arham_4">@arham_4</a> wrote:</p>
          <blockquote>
              <p>I have a strange problem. I know the server isn’t a prank as I saw my Server.java and it still had the thing that says its running. See,</p>
<pre><code class="lang-auto">package org;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Properties;

import org.entity.NPCHandler;
import org.event.EventManager;
import org.items.GlobalItems;
import org.items.ItemHandler;
import org.model.Client;
import org.model.Player;
import org.model.PlayerHandler;
import org.model.combat.Specials;
import org.model.commandmanager.CommandManager;
import org.model.content.TextHandler;
import org.model.packetmanager.PacketManager;
import org.model.packets.ActionButtons;
import org.model.packets.ShopHandler;
import org.model.packets.UseItem;
import org.model.packets.Wearing;
import org.model.render.GraphicsHandler;
import org.util.Misc;
import org.util.SetConfig;
import org.util.Logger;
import org.world.objects.DoorHandler;
import org.world.objects.Object;

public class Server implements Runnable {
	public static ArrayList&lt;String&gt; banned = new ArrayList&lt;String&gt;();
	public static ArrayList&lt;Integer&gt; bannedUid = new ArrayList&lt;Integer&gt;();
	public static Server clientHandler = null; // handles all the clients
	public static java.net.ServerSocket clientListener = null;
	public static int MaxConnections = 100000;
	public static int[] ConnectionCount = new int[MaxConnections];
	public static ArrayList&lt;String&gt; connections = new ArrayList&lt;String&gt;();
	public static String[] Connections = new String[MaxConnections];
	public static DoorHandler doorHandler;
	public static GraphicsHandler GraphicsHandler = null;
	public static ItemHandler itemHandler = null;
	public static Wearing Wearing = null;
	public static Specials special = null;
	public static GlobalItems GlobalItems = null;
	public static SetConfig setConfig = null;
	public static TextHandler textHandler = null;
	public static UseItem UseItem = null;
	public static ActionButtons ActionButtons = null;
	public static ArrayList&lt;Object&gt; objects = new ArrayList&lt;Object&gt;();
	public static int[][] runesRequired = new int[24][9];
	public static int serverlistenerPort = 43594; // 43594=default
	public static int updateSeconds = 1800; // 180 because it doesnt make the

	public static boolean pking = true, pickup = true, trading = true,
			dueling = true, ShutDown = false, fightcaves = true,
			updateServer = false, shutdownClientHandler, enforceClient = false,
			shutdownServer = false, loginServerConnected = true;

	public static int world = 1, delay = 50, EnergyRegian = 60,
			ShutDownCounter = 0

			;

	public static long

	startTime, lastRunite = 0, delayUpdate = 0

	;

	public static void calcTime() {
		long curTime = System.currentTimeMillis();
		updateSeconds = 1800 - ((int) (curTime - startTime) / 1800);
		if (updateSeconds == 0) {
			shutdownServer = true;
		}
	}

	public static final boolean isConnected(String host, int j) {
		int k = 0;
		for (int i = 0; i &lt; PlayerHandler.players.length; i++) {
			Player p = PlayerHandler.players[i];
			if (p == null)
				continue;

			Client c = (Client) p;
			if (c == null || c.disconnected || c.connectedFrom == null)
				continue;
			else if (c.connectedFrom.equalsIgnoreCase(host))
				k++;

		}

		return k &gt;= j;
	}

	public static void logError(String message) {
		Misc.println(message);
	}

	public static void main(java.lang.String args[])
			throws NullPointerException {
		System.setOut(new Logger(System.out));
		System.setErr(new Logger(System.err));
		try {
			EventManager.initialise();
			File f = new File("./data/Server.ini");
			if (!f.exists()) {
				Misc.println("Server.ini doesn't exist!");
			}
			Properties p = new Properties();
			p.load(new FileInputStream("./data/Server.ini"));
			int Client = Integer.parseInt(p.getProperty("ClientRequired")
					.trim());
			world = Integer.parseInt(p.getProperty("WorldId"));
			serverlistenerPort = Integer.parseInt(p.getProperty("ServerPort")
					.trim());
			if (Client &gt; 0) {
				Misc.println("Enforcing Devolution Client requirement");
				enforceClient = true;
			}
		} catch (Exception e) {
			Misc.println("Error loading settings");
			e.printStackTrace();
		}
		/*
		 * Load handlers
		 */
		PacketManager.loadAllPackets();
		CommandManager.loadAllCommands();
		PlayerHandler.getInstance();
		NPCHandler.getInstance();
		ItemHandler.getInstance();
		GlobalItems = new GlobalItems();
		DoorHandler.getInstance();
		GraphicsHandler = new GraphicsHandler();
		// checkPlayerCapes = new checkPlayerCapes();
		Wearing = new Wearing();
		special = new Specials();
		setConfig = new SetConfig();
		textHandler = new TextHandler();
		UseItem = new UseItem();
		ActionButtons = new ActionButtons();
		GlobalItems.process();
		if (itemHandler == null) {
			itemHandler = new ItemHandler();
		}
		ShopHandler.getInstance();
		GraphicsHandler = new GraphicsHandler();
		Scheduler.submit(new Tick(600));
		clientHandler = new Server();
		(new Thread(clientHandler)).start(); // launch Server listener

	}

	public int[] ips = new int[1000];

	public long[] lastConnect = new long[1000];
	private String address = "localhost";

	public Server() {
		// the current way of controlling the Server at runtime and a great
		// debugging/testing tool
		// jserv js = new jserv(this);
		// js.start();

	}

	public void banHost(String host, int num) {
		try {
			Misc.println("BANNING HOST " + host + " (flooding)");
			banned.add(host);
			delay = 2000;
			delayUpdate = System.currentTimeMillis() + 60000;
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	public boolean checkHost(String host) {
		for (String h : banned) {
			if (h.equals(host))
				return false;
		}
		int num = 0;
		for (String h : connections) {
			if (host.equals(h)) {
				num++;
			}
		}
		if (num &gt; 5) {
			banHost(host, num);
			return false;
		}

		if (checkLog("ipbans", host)) {
			System.out.println("They are in ip ban list!");
			return false; // ip ban added by Jonny J
		}
		return true;
	}

	public boolean checkLog(String file, String playerName) {
		// check ipbans -Jonny J
		try {
			BufferedReader in = new BufferedReader(new FileReader(
					"./data/config\\" + file + ".txt"));
			String data = null;
			while ((data = in.readLine()) != null) {
				if (playerName.equalsIgnoreCase(data)) {
					return true;
				}
			}
		} catch (IOException e) {
			System.out.println("Critical error while checking for data!");
			System.out.println(file + ":" + playerName);
			e.printStackTrace();
		}
		return false;
	}

	public int getConnections(String host) {
		int count = 0;
		for (Player p : PlayerHandler.players) {
			if ((p != null) &amp;&amp; !p.disconnected
					&amp;&amp; p.connectedFrom.equalsIgnoreCase(host)) {
				count++;
			}
		}
		return count;
	}

	public void killServer() {
		try {
			shutdownClientHandler = true;
			if (clientListener != null)
				clientListener.close();
			clientListener = null;
		} catch (java.lang.Exception __ex) {
			__ex.printStackTrace();
		}
	}

	public void run() {
		// setup the listener
		try {
			shutdownClientHandler = false;
			clientListener = new java.net.ServerSocket(serverlistenerPort, 1,
					null);
			Misc.println("Server running on " + address + " on port "
					+ serverlistenerPort);
			while (true) {
				try {
					java.net.Socket s = clientListener.accept();
					s.setTcpNoDelay(true);
					String connectingHost = s.getInetAddress().getHostName();
					if (!isConnected(connectingHost, 3)) {
						connections.add(connectingHost);
						if (checkHost(connectingHost)) {
							// Misc.println("Connection from " + connectingHost
							// + ":" + s.getPort());
							PlayerHandler.getInstance().newPlayerClient(s,
									connectingHost);
						} else {
							// Misc.println("ClientHandler: Rejected " +
							// connectingHost + ":" + s.getPort());
							s.close();
						}
					} else {
						Misc.println("ClientHandler: Rejected "
								+ connectingHost + ":" + s.getPort());
						s.close();
					}
					if ((delayUpdate &gt; 0)
							&amp;&amp; (System.currentTimeMillis() &gt; delayUpdate)) {
						delay = 50;
						delayUpdate = 0;
					}
					Thread.sleep(25);
				} catch (Exception e) {
					logError(e.getMessage());
				}
			}
		} catch (java.io.IOException ioe) {
			if (!shutdownClientHandler) {
				Misc.println("Server is already in use.");
			} else {
				Misc.println("ClientHandler was shut down.");
			}
		}
	}
}</code></pre>
<p>So… how would I fix this? All my java processes are closed, soo…</p>
<p><a href="http://img405.imageshack.us/i/snap44z.png/" data-bbcode="true" rel="nofollow noopener"><img src="http://img405.imageshack.us/img405/3341/snap44z.png" alt width="" height=""></a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/all-my-java-initializers-are-saying-server-already-in-use/437037/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/all-my-java-initializers-are-saying-server-already-in-use/437037/1</link>
        <pubDate>Wed, 21 Mar 2012 01:58:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-437037-1</guid>
        <source url="https://forum.moparisthebest.com/t/all-my-java-initializers-are-saying-server-already-in-use/437037.rss">All my java initializers are saying server already in use</source>
      </item>
  </channel>
</rss>
