<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Request/Response Packets</title>
    <link>https://forum.moparisthebest.com/t/request-response-packets/546659</link>
    <description>I&#39;m trying to accomplish a request/response type of packet system. What I want is some kind of Future system with network capabilities. Does anyone know if there is a way to accomplish this?</description>
    
    <lastBuildDate>Sun, 14 Sep 2014 04:53:05 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/request-response-packets/546659.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Request/Response Packets</title>
        <dc:creator><![CDATA[@HcoJustin HcoJustin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hcojustin">@HcoJustin</a> wrote:</p>
          <blockquote>
              <p>[quote=“zyle1992, post:5, topic:546659”][quote author=HcoJustin link=topic=665555.msg4449563#msg4449563 date=1410567227]<br>
Are you looking for a future that supports client receiving the packet, or just once the network card sends it out<br>
[/quote]</p>
<p>Both. I’m looking for a type of pattern or framework that I can basically to something like:</p>
<p><code>
final PingPacket pingPacket = new PingPacket();
final PingPacket response = client.sendPacket(pingPacket);// basically future.get();
final long latency = response.getTime() - pingPacket.getTime();
</code>[/quote]<br>
You would have to have the client send an acknowledgement back to the server. TCP doesn’t know where one packet ends, and another begins so it can’t handle that for you.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/request-response-packets/546659/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/request-response-packets/546659/6</link>
        <pubDate>Sun, 14 Sep 2014 04:53:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546659-6</guid>
        <source url="https://forum.moparisthebest.com/t/request-response-packets/546659.rss">Request/Response Packets</source>
      </item>
      <item>
        <title>Request/Response Packets</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="4" data-topic="546659">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/hcojustin/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> HcoJustin:</div>
<blockquote>
<p>Are you looking for a future that supports client receiving the packet, or just once the network card sends it out</p>
</blockquote>
</aside>
<p>Both. I’m looking for a type of pattern or framework that I can basically to something like:</p>
<pre><code class="lang-auto">final PingPacket pingPacket = new PingPacket();
final PingPacket response = client.sendPacket(pingPacket);// basically future.get();
final long latency = response.getTime() - pingPacket.getTime();</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/request-response-packets/546659/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/request-response-packets/546659/5</link>
        <pubDate>Sat, 13 Sep 2014 18:53:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546659-5</guid>
        <source url="https://forum.moparisthebest.com/t/request-response-packets/546659.rss">Request/Response Packets</source>
      </item>
      <item>
        <title>Request/Response Packets</title>
        <dc:creator><![CDATA[@HcoJustin HcoJustin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hcojustin">@HcoJustin</a> wrote:</p>
          <blockquote>
              <p>Are you looking for a future that supports client receiving the packet, or just once the network card sends it out</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/request-response-packets/546659/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/request-response-packets/546659/4</link>
        <pubDate>Sat, 13 Sep 2014 00:13:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546659-4</guid>
        <source url="https://forum.moparisthebest.com/t/request-response-packets/546659.rss">Request/Response Packets</source>
      </item>
      <item>
        <title>Request/Response Packets</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>A good diagram to follow when working with communication is the two way communication model. It follows very close to the required abstraction you need in order to implement a protocol under certain parameters of course which vary which channel, noise, etc.</p>
<p>Fineagle is scala/java, well designed and concurrent. Specifically for HTTP though.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/request-response-packets/546659/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/request-response-packets/546659/3</link>
        <pubDate>Fri, 12 Sep 2014 19:49:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546659-3</guid>
        <source url="https://forum.moparisthebest.com/t/request-response-packets/546659.rss">Request/Response Packets</source>
      </item>
      <item>
        <title>Request/Response Packets</title>
        <dc:creator><![CDATA[@Protosstribe object]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/protosstribe">@Protosstribe</a> wrote:</p>
          <blockquote>
              <p>I’m not really sure if this is what you’re looking for. But I do have a set of libraries that could do what I believe you want. The core library defines an API for Messaging Systems in general. Then I have a separate library that adds support for networking. A third that defines the contract for a Server, as well as an implementation of that Server API, that uses Apache MINA. I also have a separate library that adds encryption and decryption capabilities. Currently only using an ISAAC Cipher. There are more libraries, but they are all for other things, such as logging and dependency injection.</p>
<p>The following is some code that demonstrates the core library (no networking included in this example):</p>
<pre><code class="lang-auto">//Create the MessageChannels to use. One for the request and one for the response:
MessageChannel requestMessageChannel = MessageChannel.newInstance();
MessageChannel responseMessageChannel = MessageChannel.newInstance();

//Initialize the MessageChannel used for sending a request with a MessageFilter and a MessageHandler:
requestMessageChannel.addMessageFilter(new RequestMessageFilter());
requestMessageChannel.addMessageHandler(new RequestMessageHandler(response));

//Initialize the MessageChannel used for receiving a response with a MessageFilter and a MessageHandler:
responseMessageChannel.addMessageFilter(new ResponseMessageFilter());
responseMessageChannel.addMessageHandler(new ResponseMessageHandler());

//Send a Message to the MessageChannel that requests a response:
requestMessageChannel.sendMessage(Messages.newStringMessage("Hello, World!"));</code></pre>
<p>More in detail what happens in the above code:</p>
<ol>
<li>Send a Message to the MessageChannel that requests a response.</li>
<li>That MessageChannel will filter out any unwanted Messages by using MessageFilters.</li>
<li>Then it will handle the Message by sending it to the destination and wait for a response.</li>
<li>Once the response has arrived, it will send it to the MessageChannel that presents the response to the application or user.</li>
<li>That MessageChannel will also filter out any unwanted Messages by using MessageFilters.</li>
<li>Then it will handle the Message in an application- or user specific manner by MessageHandlers.</li>
</ol>
<p>If you wish to encrypt or decrypt a Message, you can use any number of MessageTranslators to do that in a chain-like fashion.</p>
<p>If you need more than one MessageFilter or MessageHandler, they both also works in a chain-life fashion. And, you can stop the MessageHandler chain at any point simply by returning true in its method (where true means the Message has been successfully handled).</p>
<p>All libraries can be found on my GitHub account. But I’ll link to my core library here below.</p>
<p><a href="https://github.com/WavePropagation/org.amf4j.messaging" class="onebox" target="_blank" rel="nofollow noopener">https://github.com/WavePropagation/org.amf4j.messaging</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/request-response-packets/546659/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/request-response-packets/546659/2</link>
        <pubDate>Fri, 12 Sep 2014 12:16:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546659-2</guid>
        <source url="https://forum.moparisthebest.com/t/request-response-packets/546659.rss">Request/Response Packets</source>
      </item>
      <item>
        <title>Request/Response Packets</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>I’m trying to accomplish a request/response type of packet system. What I want is some kind of Future system with network capabilities. Does anyone know if there is a way to accomplish this?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/request-response-packets/546659/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/request-response-packets/546659/1</link>
        <pubDate>Thu, 11 Sep 2014 20:07:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546659-1</guid>
        <source url="https://forum.moparisthebest.com/t/request-response-packets/546659.rss">Request/Response Packets</source>
      </item>
  </channel>
</rss>
