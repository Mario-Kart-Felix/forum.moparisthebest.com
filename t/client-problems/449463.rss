<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Client Problems</title>
    <link>https://forum.moparisthebest.com/t/client-problems/449463</link>
    <description>Alright, I&#39;m having some problems with this client (friend is, I&#39;m posting this in his perspective):


The client seems to be downloading the cache quite fine, however, when it&#39;s done downloading the cache it states, &quot;Connection Error - Retrying in 1..2..3 etc&quot;, and in the CMD it states &#39;Access denied&quot;.


Also, it works perfect with old methods we use to use for another source we use to have online, but for this server and client, it seems to not work, it works perfect with default cache, however, I changed the name, webhosts etc., and I also change everything that needed to be change so I&#39;m not sure as to why it&#39;s not working.


Any suggestions?</description>
    
    <lastBuildDate>Sat, 14 Jul 2012 02:07:21 +0000</lastBuildDate>
    <category>Game Development</category>
    <atom:link href="https://forum.moparisthebest.com/t/client-problems/449463.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Client Problems</title>
        <dc:creator><![CDATA[@Ix_Soulcist_xI Soulcist]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ix_soulcist_xi">@Ix_Soulcist_xI</a> wrote:</p>
          <blockquote>
              <p>He said it’s causing the same error.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/client-problems/449463/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/client-problems/449463/9</link>
        <pubDate>Sat, 14 Jul 2012 02:07:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-449463-9</guid>
        <source url="https://forum.moparisthebest.com/t/client-problems/449463.rss">Client Problems</source>
      </item>
      <item>
        <title>Client Problems</title>
        <dc:creator><![CDATA[@arham_4 arham 4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/arham_4">@arham_4</a> wrote:</p>
          <blockquote>
              <p>[quote=“Ix Soulcist xI, post:7, topic:449463”][code]import java.io.File;<br>
import java.io.IOException;<br>
import java.io.OutputStream;<br>
import java.io.FileWriter;<br>
import java.io.BufferedWriter;<br>
import java.io.BufferedOutputStream;<br>
import java.io.BufferedInputStream;<br>
import java.io.FileOutputStream;<br>
import java.io.FileInputStream;<br>
import java.io.InputStream;<br>
import java.net.URLConnection;<br>
import java.net.URL;<br>
import java.util.zip.ZipFile;<br>
import java.util.zip.ZipEntry;<br>
import java.util.zip.ZipInputStream;<br>
import java.util.Enumeration;</p>
<p>public class CacheDownloader {</p>
<p>private client client;<br>
private final int BUFFER = 1024;<br>
private final int VERSION = 1;<br>
private String cacheLink = “<a href="http://www.valazar.com/valazar498_v" rel="nofollow noopener">http://www.valazar.com/valazar498_v</a>” + signlink.revision + “.zip”;<br>
private String fileToExtract = getCacheDir() + getArchivedName();</p>
<p>public CacheDownloader(client client) {<br>
this.client = client;<br>
}</p>
<p>private void drawLoadingText(String text) {<br>
client.drawLoadingText(35, text);<br>
}</p>
<p>private void drawLoadingText(int amount, String text) {<br>
client.drawLoadingText(amount, text);<br>
}</p>
<p>private String getCacheDir() {<br>
return signlink.findcachedir();<br>
}</p>
<p>private String getCacheLink() {<br>
return cacheLink;<br>
}</p>
<p>private int getCacheVersion() {<br>
return VERSION;<br>
}</p>
<p>public CacheDownloader downloadCache() {<br>
try {<br>
File location = new File(getCacheDir());<br>
File version = new File(getCacheDir() + “/cacheVersion” + getCacheVersion() + “.dat”);<br>
if(!location.exists()) {<br>
downloadFile(getCacheLink(), getArchivedName());<br>
unZip();<br>
BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + “/cacheVersion” + getCacheVersion() + “.dat”));<br>
versionFile.close();<br>
deleteZIP(getArchivedName());<br>
} else {<br>
if(!version.exists()) {<br>
downloadFile(getCacheLink(), getArchivedName());<br>
unZip();<br>
BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + “/cacheVersion” + getCacheVersion() + “.dat”));<br>
versionFile.close();<br>
deleteZIP(getArchivedName());<br>
} else {<br>
return null;<br>
}<br>
}<br>
} catch(Exception e) {<br>
}<br>
return null;<br>
}</p>
<p>private void downloadFile(String adress, String localFileName) {<br>
OutputStream out = null;<br>
URLConnection conn;<br>
InputStream in = null;<br>
try {<br>
URL url = new URL(adress);<br>
out = new BufferedOutputStream(new FileOutputStream(getCacheDir() + “/” +localFileName));<br>
conn = url.openConnection();<br>
in = conn.getInputStream();<br>
byte[] data = new byte[BUFFER];<br>
int numRead;<br>
long numWritten = 0;<br>
int length = conn.getContentLength();<br>
while((numRead = in.read(data)) != -1) {<br>
out.write(data, 0, numRead);<br>
numWritten += numRead;<br>
int percentage = (int)(((double)numWritten / (double)length) * 100D);<br>
drawLoadingText(percentage, "Downloading Cache " + percentage + “%”);<br>
}<br>
drawLoadingText(“Updates are now complete. Please wait.”);<br>
} catch (Exception exception) {<br>
exception.printStackTrace();<br>
} finally {<br>
try {<br>
if (in != null) {<br>
in.close();<br>
}<br>
if (out != null) {<br>
out.close();<br>
}<br>
} catch (IOException ioe) {<br>
}<br>
}<br>
}</p>
<p>private String getArchivedName() {<br>
int lastSlashIndex = getCacheLink().lastIndexOf(’/’);<br>
if (lastSlashIndex &gt;= 0<br>
&amp;&amp; lastSlashIndex &lt; getCacheLink().length() -1) {<br>
return getCacheLink().substring(lastSlashIndex + 1);<br>
} else {<br>
}<br>
return “”;<br>
}</p>
<p>private void unZip() {</p>
<pre><code>  try {
      InputStream in = new BufferedInputStream(new FileInputStream(fileToExtract));
     ZipInputStream zin = new ZipInputStream(in);
     ZipEntry e;
     while((e=zin.getNextEntry()) != null) {
              if(e.isDirectory()) {
           (new File(getCacheDir() + e.getName())).mkdir();
              } else {
        if (e.getName().equals(fileToExtract)) {
           unzip(zin, fileToExtract);
           break;
        }
           unzip(zin, getCacheDir() + e.getName());
        }
     }
     zin.close();
  } catch(Exception e) {
     e.printStackTrace();
  }
</code></pre>
<p>}</p>
<p>private void unzip(ZipInputStream zin, String s)<br>
throws IOException {<br>
FileOutputStream out = new FileOutputStream(s);<br>
byte [] b = new byte[BUFFER];<br>
int len = 0;<br>
while ((len = zin.read(b)) != -1) {<br>
out.write(b,0,len);<br>
}<br>
out.close();<br>
}</p>
<p>private void deleteZIP(String fileName){<br>
// A File object to represent the filename<br>
File f = new File(getCacheDir() + fileName);</p>
<pre><code>// Make sure the file or directory exists and isn't write protected
if (!f.exists())
  throw new IllegalArgumentException(
      "Delete: no such file or directory: " + fileName);

if (!f.canWrite())
  throw new IllegalArgumentException("Delete: write protected: "
      + fileName);

// If it is a directory, make sure it is empty
if (f.isDirectory()) {
  String[] files = f.list();
  if (files.length &gt; 0)
    throw new IllegalArgumentException(
        "Delete: directory not empty: " + fileName);
}

// Attempt to delete it
boolean success = f.delete();

if (!success)
  throw new IllegalArgumentException("Delete: deletion failed");
</code></pre>
<p>}<br>
}[/code][/quote]<br>
Backup your CacheDownloader, try this:</p>
<pre><code class="lang-auto">import java.io.File;
import java.io.IOException;
import java.io.OutputStream;
import java.io.FileWriter;
import java.io.BufferedWriter;
import java.io.BufferedOutputStream;
import java.io.BufferedInputStream;
import java.io.FileOutputStream;
import java.io.FileInputStream;
import java.io.InputStream;
import java.net.URLConnection;
import java.net.URL;
import java.util.zip.ZipFile;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;
import java.util.Enumeration;

import sign.signlink;

public class CacheDownloader {

	private client client;

	private final int BUFFER = 1024;

	private final int VERSION = 1; // Version of cache
	private String cacheLink = "http://www.valazar.com/valazar498_v"; // Link to cache
	
	private String fileToExtract = getCacheDir() + getArchivedName();

	public CacheDownloader(client client) {
		this.client = client;
	}

	private void drawLoadingText(String text) {
		client.drawLoadingText(35, text);
		//System.out.println(text);
	}


	private void drawLoadingText(int amount, String text) {
		client.drawLoadingText(amount, text);
		//System.out.println(text);
	}

	private String getCacheDir() {
		return signlink.findcachedir();
	}

	private String getCacheLink() {
		return cacheLink;
	}

	private int getCacheVersion() {
		return VERSION;
	}

	public CacheDownloader downloadCache() {
		try {
		File location = new File(getCacheDir());
		File version = new File(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat");
		
		if(!location.exists()) {
			//drawLoadingText("Loading new Updates....");
			downloadFile(getCacheLink(), getArchivedName());

			unZip();
			//System.out.println("UNZIP");

			BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat"));
			versionFile.close();
			deleteZIP(getArchivedName());
		} else {
			if(!version.exists()) {
				//drawLoadingText("~ First Time Installation, Only Once! ~");
				downloadFile(getCacheLink(), getArchivedName());

				unZip();
				//System.out.println("UNZIP");

				BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat"));
				versionFile.close();
				deleteZIP(getArchivedName());

			} else {
				return null;
			}
		}
		} catch(Exception e) {

		}
		return null;
	}
	
	private void downloadFile(String adress, String localFileName) {
		OutputStream out = null;
		URLConnection conn;
		InputStream in = null;
		
		try {

			URL url = new URL(adress);
			out = new BufferedOutputStream(
				new FileOutputStream(getCacheDir() + "/" +localFileName)); 

			conn = url.openConnection();
			in = conn.getInputStream(); 
		
			byte[] data = new byte[BUFFER]; 
	
			int numRead;
			long numWritten = 0;
			int length = conn.getContentLength();

	
			while((numRead = in.read(data)) != -1) {
				out.write(data, 0, numRead);
				numWritten += numRead;

            			int percentage = (int)(((double)numWritten / (double)length) * 100D);
				drawLoadingText(percentage, "Downloading Cache " + percentage + "%...");

			}

			System.out.println(localFileName + "\t" + numWritten);
			drawLoadingText("Unpacking..");

		} catch (Exception exception) {
			exception.printStackTrace();
		} finally {
			try {
				if (in != null) {
					in.close();
				}
				if (out != null) {
					out.close();
				}
			} catch (IOException ioe) {
			}
		}

	}

	private String getArchivedName() {
		int lastSlashIndex = getCacheLink().lastIndexOf('/');
		if (lastSlashIndex &gt;= 0 
			&amp;&amp; lastSlashIndex &lt; getCacheLink().length() -1) { 
			return getCacheLink().substring(lastSlashIndex + 1);
		} else {
			//System.err.println("error retreiving archivaed name.");
		}
		return "";
	}




	private void unZip() {

		try {
    			InputStream in = 
				new BufferedInputStream(new FileInputStream(fileToExtract));
			ZipInputStream zin = new ZipInputStream(in);
			ZipEntry e;

			while((e=zin.getNextEntry()) != null) {

               			if(e.isDirectory()) {
					(new File(getCacheDir() + e.getName())).mkdir();
               			} else {

				if (e.getName().equals(fileToExtract)) {
					unzip(zin, fileToExtract);
					break;
				}
       					unzip(zin, getCacheDir() + e.getName());
				}
				//System.out.println("unzipping2 " + e.getName());
			}
			zin.close();

		} catch(Exception e) {
			e.printStackTrace();
		}
	}

private void deleteZIP(String fileName){
    // A File object to represent the filename
    File f = new File(getCacheDir() + fileName);

    // Make sure the file or directory exists and isn't write protected
    if (!f.exists())
      throw new IllegalArgumentException(
          "Delete: no such file or directory: " + fileName);

    if (!f.canWrite())
      throw new IllegalArgumentException("Delete: write protected: "
          + fileName);

    // If it is a directory, make sure it is empty
    if (f.isDirectory()) {
      String[] files = f.list();
      if (files.length &gt; 0)
        throw new IllegalArgumentException(
            "Delete: directory not empty: " + fileName);
    }

    // Attempt to delete it
    boolean success = f.delete();

    if (!success)
      throw new IllegalArgumentException("Delete: deletion failed");

	}

	private void unzip(ZipInputStream zin, String s) 
		throws IOException {

		FileOutputStream out = new FileOutputStream(s);
		//System.out.println("unzipping " + s);
		byte [] b = new byte[BUFFER];
		int len = 0;

		while ((len = zin.read(b)) != -1) {
			out.write(b,0,len);
		}
		out.close();
	}
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/client-problems/449463/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/client-problems/449463/8</link>
        <pubDate>Fri, 13 Jul 2012 23:18:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-449463-8</guid>
        <source url="https://forum.moparisthebest.com/t/client-problems/449463.rss">Client Problems</source>
      </item>
      <item>
        <title>Client Problems</title>
        <dc:creator><![CDATA[@Ix_Soulcist_xI Soulcist]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ix_soulcist_xi">@Ix_Soulcist_xI</a> wrote:</p>
          <blockquote>
              <p>[code]import java.io.File;<br>
import java.io.IOException;<br>
import java.io.OutputStream;<br>
import java.io.FileWriter;<br>
import java.io.BufferedWriter;<br>
import java.io.BufferedOutputStream;<br>
import java.io.BufferedInputStream;<br>
import java.io.FileOutputStream;<br>
import java.io.FileInputStream;<br>
import java.io.InputStream;<br>
import java.net.URLConnection;<br>
import java.net.URL;<br>
import java.util.zip.ZipFile;<br>
import java.util.zip.ZipEntry;<br>
import java.util.zip.ZipInputStream;<br>
import java.util.Enumeration;</p>
<p>public class CacheDownloader {</p>
<p>private client client;<br>
private final int BUFFER = 1024;<br>
private final int VERSION = 1;<br>
private String cacheLink = “<a href="http://www.valazar.com/valazar498_v" rel="nofollow noopener">http://www.valazar.com/valazar498_v</a>” + signlink.revision + “.zip”;<br>
private String fileToExtract = getCacheDir() + getArchivedName();</p>
<p>public CacheDownloader(client client) {<br>
this.client = client;<br>
}</p>
<p>private void drawLoadingText(String text) {<br>
client.drawLoadingText(35, text);<br>
}</p>
<p>private void drawLoadingText(int amount, String text) {<br>
client.drawLoadingText(amount, text);<br>
}</p>
<p>private String getCacheDir() {<br>
return signlink.findcachedir();<br>
}</p>
<p>private String getCacheLink() {<br>
return cacheLink;<br>
}</p>
<p>private int getCacheVersion() {<br>
return VERSION;<br>
}</p>
<p>public CacheDownloader downloadCache() {<br>
try {<br>
File location = new File(getCacheDir());<br>
File version = new File(getCacheDir() + “/cacheVersion” + getCacheVersion() + “.dat”);<br>
if(!location.exists()) {<br>
downloadFile(getCacheLink(), getArchivedName());<br>
unZip();<br>
BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + “/cacheVersion” + getCacheVersion() + “.dat”));<br>
versionFile.close();<br>
deleteZIP(getArchivedName());<br>
} else {<br>
if(!version.exists()) {<br>
downloadFile(getCacheLink(), getArchivedName());<br>
unZip();<br>
BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + “/cacheVersion” + getCacheVersion() + “.dat”));<br>
versionFile.close();<br>
deleteZIP(getArchivedName());<br>
} else {<br>
return null;<br>
}<br>
}<br>
} catch(Exception e) {<br>
}<br>
return null;<br>
}</p>
<p>private void downloadFile(String adress, String localFileName) {<br>
OutputStream out = null;<br>
URLConnection conn;<br>
InputStream in = null;<br>
try {<br>
URL url = new URL(adress);<br>
out = new BufferedOutputStream(new FileOutputStream(getCacheDir() + “/” +localFileName));<br>
conn = url.openConnection();<br>
in = conn.getInputStream();<br>
byte[] data = new byte[BUFFER];<br>
int numRead;<br>
long numWritten = 0;<br>
int length = conn.getContentLength();<br>
while((numRead = in.read(data)) != -1) {<br>
out.write(data, 0, numRead);<br>
numWritten += numRead;<br>
int percentage = (int)(((double)numWritten / (double)length) * 100D);<br>
drawLoadingText(percentage, "Downloading Cache " + percentage + “%”);<br>
}<br>
drawLoadingText(“Updates are now complete. Please wait.”);<br>
} catch (Exception exception) {<br>
exception.printStackTrace();<br>
} finally {<br>
try {<br>
if (in != null) {<br>
in.close();<br>
}<br>
if (out != null) {<br>
out.close();<br>
}<br>
} catch (IOException ioe) {<br>
}<br>
}<br>
}</p>
<p>private String getArchivedName() {<br>
int lastSlashIndex = getCacheLink().lastIndexOf(’/’);<br>
if (lastSlashIndex &gt;= 0<br>
&amp;&amp; lastSlashIndex &lt; getCacheLink().length() -1) {<br>
return getCacheLink().substring(lastSlashIndex + 1);<br>
} else {<br>
}<br>
return “”;<br>
}</p>
<p>private void unZip() {</p>
<pre><code>  try {
      InputStream in = new BufferedInputStream(new FileInputStream(fileToExtract));
     ZipInputStream zin = new ZipInputStream(in);
     ZipEntry e;
     while((e=zin.getNextEntry()) != null) {
              if(e.isDirectory()) {
           (new File(getCacheDir() + e.getName())).mkdir();
              } else {
        if (e.getName().equals(fileToExtract)) {
           unzip(zin, fileToExtract);
           break;
        }
           unzip(zin, getCacheDir() + e.getName());
        }
     }
     zin.close();
  } catch(Exception e) {
     e.printStackTrace();
  }
</code></pre>
<p>}</p>
<p>private void unzip(ZipInputStream zin, String s)<br>
throws IOException {<br>
FileOutputStream out = new FileOutputStream(s);<br>
byte [] b = new byte[BUFFER];<br>
int len = 0;<br>
while ((len = zin.read(b)) != -1) {<br>
out.write(b,0,len);<br>
}<br>
out.close();<br>
}</p>
<p>private void deleteZIP(String fileName){<br>
// A File object to represent the filename<br>
File f = new File(getCacheDir() + fileName);</p>
<pre><code>// Make sure the file or directory exists and isn't write protected
if (!f.exists())
  throw new IllegalArgumentException(
      "Delete: no such file or directory: " + fileName);

if (!f.canWrite())
  throw new IllegalArgumentException("Delete: write protected: "
      + fileName);

// If it is a directory, make sure it is empty
if (f.isDirectory()) {
  String[] files = f.list();
  if (files.length &gt; 0)
    throw new IllegalArgumentException(
        "Delete: directory not empty: " + fileName);
}

// Attempt to delete it
boolean success = f.delete();

if (!success)
  throw new IllegalArgumentException("Delete: deletion failed");
</code></pre>
<p>}<br>
}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/client-problems/449463/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/client-problems/449463/7</link>
        <pubDate>Fri, 13 Jul 2012 17:19:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-449463-7</guid>
        <source url="https://forum.moparisthebest.com/t/client-problems/449463.rss">Client Problems</source>
      </item>
      <item>
        <title>Client Problems</title>
        <dc:creator><![CDATA[@doom_j doom_j]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/doom_j">@doom_j</a> wrote:</p>
          <blockquote>
              <p>Please post your CacheDownLoader class.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/client-problems/449463/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/client-problems/449463/6</link>
        <pubDate>Fri, 13 Jul 2012 16:44:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-449463-6</guid>
        <source url="https://forum.moparisthebest.com/t/client-problems/449463.rss">Client Problems</source>
      </item>
      <item>
        <title>Client Problems</title>
        <dc:creator><![CDATA[@Ix_Soulcist_xI Soulcist]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ix_soulcist_xi">@Ix_Soulcist_xI</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="4" data-topic="449463">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/whackatre/40/7608_1.png" class="avatar"> Whackatre:</div>
<blockquote>
<p>Is he running the client from some sort of security manager or sandbox?</p>
</blockquote>
</aside>
<p>No this issue happens with everyone.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/client-problems/449463/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/client-problems/449463/5</link>
        <pubDate>Fri, 13 Jul 2012 07:33:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-449463-5</guid>
        <source url="https://forum.moparisthebest.com/t/client-problems/449463.rss">Client Problems</source>
      </item>
      <item>
        <title>Client Problems</title>
        <dc:creator><![CDATA[@whackatre Whackatre]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/whackatre">@whackatre</a> wrote:</p>
          <blockquote>
              <p>Is he running the client from some sort of security manager or sandbox?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/client-problems/449463/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/client-problems/449463/4</link>
        <pubDate>Fri, 13 Jul 2012 07:17:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-449463-4</guid>
        <source url="https://forum.moparisthebest.com/t/client-problems/449463.rss">Client Problems</source>
      </item>
      <item>
        <title>Client Problems</title>
        <dc:creator><![CDATA[@Ix_Soulcist_xI Soulcist]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ix_soulcist_xi">@Ix_Soulcist_xI</a> wrote:</p>
          <blockquote>
              <p>Here it is mate:</p>
<p><img src="http://puu.sh/I7RJ" alt width="" height=""></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/client-problems/449463/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/client-problems/449463/3</link>
        <pubDate>Fri, 13 Jul 2012 04:57:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-449463-3</guid>
        <source url="https://forum.moparisthebest.com/t/client-problems/449463.rss">Client Problems</source>
      </item>
      <item>
        <title>Client Problems</title>
        <dc:creator><![CDATA[@doom_j doom_j]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/doom_j">@doom_j</a> wrote:</p>
          <blockquote>
              <p>Look for the code that returns the exception with “Access denied”. Then post it here.</p>
<p>EDIT: After I closed the page I thought of something, make sure the folder the cache goes in has read and write access. <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/client-problems/449463/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/client-problems/449463/2</link>
        <pubDate>Fri, 13 Jul 2012 04:33:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-449463-2</guid>
        <source url="https://forum.moparisthebest.com/t/client-problems/449463.rss">Client Problems</source>
      </item>
      <item>
        <title>Client Problems</title>
        <dc:creator><![CDATA[@Ix_Soulcist_xI Soulcist]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ix_soulcist_xi">@Ix_Soulcist_xI</a> wrote:</p>
          <blockquote>
              <p>Alright, I’m having some problems with this client (friend is, I’m posting this in his perspective):</p>
<p>The client seems to be downloading the cache quite fine, however, when it’s done downloading the cache it states, “Connection Error - Retrying in 1…2…3 etc”, and in the CMD it states 'Access denied".</p>
<p>Also, it works perfect with old methods we use to use for another source we use to have online, but for this server and client, it seems to not work, it works perfect with default cache, however, I changed the name, webhosts etc., and I also change everything that needed to be change so I’m not sure as to why it’s not working.</p>
<p>Any suggestions?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/client-problems/449463/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/client-problems/449463/1</link>
        <pubDate>Fri, 13 Jul 2012 03:51:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-449463-1</guid>
        <source url="https://forum.moparisthebest.com/t/client-problems/449463.rss">Client Problems</source>
      </item>
  </channel>
</rss>
