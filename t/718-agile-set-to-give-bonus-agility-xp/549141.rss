<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[718] Agile Set to give bonus agility xp?</title>
    <link>https://forum.moparisthebest.com/t/718-agile-set-to-give-bonus-agility-xp/549141</link>
    <description>Title says it all, im really stumped on this one. any help would be really appreciated.

This is what i have for agility:
Agility.java
[code]package com.rs.game.player.content.agility;

import com.rs.game.player.Player;
import com.rs.game.player.Skills;

public class Agility {

	public static boolean hasLevel(Player player, int level) {
		if (player.getSkills().getLevel(Skills.AGILITY) &lt; level) {
			player.getPackets().sendGameMessage(
					&quot;You need an agility level of &quot; + level + &quot; to use this obstacle.&quot;, true);
			return false;
		}
		return true;
	}

}[/code]

Barb

[code]package com.rs.game.player.content.agility;

import com.rs.game.Animation;
import com.rs.game.ForceMovement;
import com.rs.game.World;
import com.rs.game.WorldObject;
import com.rs.game.WorldTile;
import com.rs.game.player.Player;
import com.rs.game.player.Skills;
import com.rs.game.tasks.WorldTask;
import com.rs.game.tasks.WorldTasksManager;

public class BarbarianOutpostAgility {

	public static void enterObstaclePipe(final Player player, WorldObject object) {
		if (!Agility.hasLevel(player, 35))
			return;
		player.lock(4);
		player.setNextAnimation(new Animation(10580));
		final WorldTile toTile = new WorldTile(object.getX(), player.getY() &gt;= 3561 ? 3558 : 3561, object.getPlane());
		player.setNextForceMovement(new ForceMovement(player, 0, toTile, 2, player.getY() &gt;= 3561 ? ForceMovement.SOUTH : ForceMovement.NORTH));
		WorldTasksManager.schedule(new WorldTask() {

			@Override
			public void run() {
				player.setNextWorldTile(toTile);
				player.getSkills().addXp(Skills.AGILITY, 220);
			}

		}, 1);
	}

	public static void runUpWall(final Player player, WorldObject object) {
		if (!Agility.hasLevel(player, 90))
			return;
		player.lock(10);
		final WorldTile toTile = new WorldTile(2538, 3545, 2);
		WorldTasksManager.schedule(new WorldTask() {
			boolean secondLoop;
			@Override
			public void run() {
				if (!secondLoop) {
					player.setNextForceMovement(new ForceMovement(player, 7, toTile, 8, ForceMovement.NORTH));
					player.setNextAnimation(new Animation(10492));
					secondLoop = true;
				} else {
					player.setNextAnimation(new Animation(10493));
					player.setNextWorldTile(toTile);
					player.getSkills().addXp(Skills.AGILITY, 245);
					stop();
				}

			}

		}, 1, 6);
	}

	public static void climbUpWall(final Player player, WorldObject object) {
		if (!Agility.hasLevel(player, 90))
			return;
		player.useStairs(10023, new WorldTile(2536, 3546, 3), 2, 3);
		WorldTasksManager.schedule(new WorldTask() {

			@Override
			public void run() {
				player.setNextAnimation(new Animation(11794));
				player.getSkills().addXp(Skills.AGILITY, 245);
			}

		}, 1);
	}

	public static void fireSpringDevice(final Player player,
			final WorldObject object) {
		if (!Agility.hasLevel(player, 90))
			return;
		player.lock(5);
		player.addWalkSteps(2533, 3547, -1, false);
		final WorldTile toTile = new WorldTile(2532, 3553, 3);
		WorldTasksManager.schedule(new WorldTask() {

			boolean secondLoop;

			@Override
			public void run() {
				if (!secondLoop) {
					player.setNextForceMovement(new ForceMovement(player, 1,
							toTile, 3, ForceMovement.NORTH));
					player.setNextAnimation(new Animation(4189));
					World.sendObjectAnimation(player, object, new Animation(
							11819));

					secondLoop = true;
				} else {
					player.setNextWorldTile(toTile);
					player.getSkills().addXp(Skills.AGILITY, 245);
					stop();
				}
			}

		}, 1, 1);
	}

	public static void crossBalanceBeam(final Player player,
			final WorldObject object) {
		if (!Agility.hasLevel(player, 90))
			return;
		player.lock(4);
		final WorldTile toTile = new WorldTile(2536, 3553, 3);
		player.setNextForceMovement(new ForceMovement(player, 1, toTile, 3,
				ForceMovement.EAST));
		player.setNextAnimation(new Animation(16079));
		player.getAppearence().setRenderEmote(330);
		WorldTasksManager.schedule(new WorldTask() {
			@Override
			public void run() {
				player.setNextWorldTile(toTile);
				player.getSkills().addXp(Skills.AGILITY, 245);
				player.setNextAnimation(new Animation(-1));
				stop();
			}

		}, 2);
	}

	public static void jumpOverGap(final Player player, final WorldObject object) {
		if (!Agility.hasLevel(player, 90))
			return;
		player.lock(1);
		player.setNextAnimation(new Animation(2586));
		player.getAppearence().setRenderEmote(-1);
		WorldTasksManager.schedule(new WorldTask() {
			@Override
			public void run() {
				player.setNextWorldTile(new WorldTile(2538, 3553, 2));
				player.setNextAnimation(new Animation(2588));
				player.getSkills().addXp(Skills.AGILITY, 245);
				stop();
			}

		}, 0);
	}

	public static void slideDownRoof(final Player player,
			final WorldObject object) {
		if (!Agility.hasLevel(player, 90))
			return;
		player.lock(6);
		player.setNextAnimation(new Animation(11792));
		final WorldTile toTile = new WorldTile(2544, player.getY(), 0);
		player.setNextForceMovement(new ForceMovement(player, 0, toTile, 5,
				ForceMovement.EAST));
		WorldTasksManager.schedule(new WorldTask() {
			int stage;

			@Override
			public void run() {
				if (stage == 0) {
					player.setNextWorldTile(new WorldTile(2541, player.getY(),
							1));
					player.setNextAnimation(new Animation(11790));
					stage = 1;
				} else if (stage == 1) {
					stage = 2;
				} else if (stage == 2) {
					player.setNextAnimation(new Animation(11791));
					stage = 3;
				} else if (stage == 3) {
					player.setNextWorldTile(toTile);
					player.setNextAnimation(new Animation(2588));
					player.getSkills().addXp(Skills.AGILITY, 245);
					if (getStage(player) == 1) {
						removeStage(player);
						player.getSkills().addXp(Skills.AGILITY, 280);
					}
					stop();
				}
			}

		}, 0, 0);
	}

	public static void swingOnRopeSwing(final Player player, WorldObject object) {
		if (!Agility.hasLevel(player, 35))
			return;
		if (player.getY() != 3554) {
			player.getPackets().sendGameMessage(
					&quot;You&#39;ll need to get closer to make this jump.&quot;);
			return;
		}
		player.lock(4);
		player.setNextAnimation(new Animation(751));
		World.sendObjectAnimation(player, object, new Animation(497));
		final WorldTile toTile = new WorldTile(object.getX(), 3549, object.getPlane());
		player.setNextForceMovement(new ForceMovement(player, 1, toTile, 3, ForceMovement.SOUTH));
		player.getSkills().addXp(Skills.AGILITY, 262);
		player.getPackets().sendGameMessage(&quot;You skilfully swing across.&quot;, true);
		WorldTasksManager.schedule(new WorldTask() {
			@Override
			public void run() {
				player.setNextWorldTile(toTile);
				setStage(player, 0);
			}

		}, 1);
	}

	public static void walkAcrossLogBalance(final Player player,
			final WorldObject object) {
		if (!Agility.hasLevel(player, 35))
			return;
		if (player.getY() != object.getY()) {
			player.addWalkSteps(2551, 3546, -1, false);
			player.lock(2);
			WorldTasksManager.schedule(new WorldTask() {

				@Override
				public void run() {
					walkAcrossLogBalanceEnd(player, object);
				}
			}, 1);
		} else
			walkAcrossLogBalanceEnd(player, object);
	}

	private static void walkAcrossLogBalanceEnd(final Player player,
			WorldObject object) {
		player.getPackets().sendGameMessage(
				&quot;You walk carefully across the slippery log...&quot;, true);
		player.lock(17);
		player.setNextAnimation(new Animation(9908));
		final WorldTile toTile = new WorldTile(2541, object.getY(),
				object.getPlane());
		player.setNextForceMovement(new ForceMovement(player, 0, toTile, 16,
				ForceMovement.WEST));
		WorldTasksManager.schedule(new WorldTask() {

			@Override
			public void run() {
				player.setNextWorldTile(toTile);
				player.getSkills().addXp(Skills.AGILITY, 243);
				player.getPackets().sendGameMessage(&quot;... and make it safely to the other side.&quot;, true);
				if (getStage(player) == 0)
					setStage(player, 1);
			}

		}, 15);
	}

	public static void walkAcrossBalancingLedge(final Player player,
			final WorldObject object) {
		if (!Agility.hasLevel(player, 35))
			return;
		player.getPackets().sendGameMessage(&quot;You put your food on the ledge and try to edge across...&quot;, true);
		player.lock(5);
		player.setNextAnimation(new Animation(753));
		player.getAppearence().setRenderEmote(157);
		final WorldTile toTile = new WorldTile(2532, object.getY(),
				object.getPlane());
		player.setRun(true);
		player.addWalkSteps(toTile.getX(), toTile.getY(), -1, false);
		WorldTasksManager.schedule(new WorldTask() {
			@Override
			public void run() {
				player.setNextAnimation(new Animation(759));
				player.getAppearence().setRenderEmote(-1);
				player.getSkills().addXp(Skills.AGILITY, 252);
				player.getPackets().sendGameMessage(&quot;You skilfully edge across the gap.&quot;, true);
				if (getStage(player) == 2)
					setStage(player, 3);
			}
		}, 3);
	}

	public static void climbObstacleNet(final Player player, WorldObject object) {
		if (!Agility.hasLevel(player, 35) || player.getY() &lt; 3545
				|| player.getY() &gt; 3547)
			return;
		player.getPackets().sendGameMessage(&quot;You climb the netting...&quot;, true);
		player.getSkills().addXp(Skills.AGILITY, 225.2);
		player.useStairs(828,
				new WorldTile(object.getX() - 1, player.getY(), 1), 1, 2);
		if (getStage(player) == 1)
			setStage(player, 2);
	}

	public static void climbOverCrumblingWall(final Player player,
			WorldObject object) {
		if (!Agility.hasLevel(player, 35))
			return;
		if (player.getX() &gt;= object.getX()) {
			player.getPackets().sendGameMessage(&quot;You cannot climb that from this side.&quot;);
			return;
		}
		player.getPackets().sendGameMessage(&quot;You climb the low wall...&quot;, true);
		player.lock(3);
		player.setNextAnimation(new Animation(4853));
		final WorldTile toTile = new WorldTile(object.getX() + 1, object.getY(), object.getPlane());
		player.setNextForceMovement(new ForceMovement(player, 0, toTile, 2, ForceMovement.EAST));
		WorldTasksManager.schedule(new WorldTask() {

			@Override
			public void run() {
				player.setNextWorldTile(toTile);
				player.getSkills().addXp(Skills.AGILITY, 243.7);
				int stage = getStage(player);
				if (stage == 3)
					setStage(player, 4);
				else if (stage == 4) {
					removeStage(player);
					player.getSkills().addXp(Skills.AGILITY, 246.2);
				}
			}

		}, 1);
	}

	public static void removeStage(Player player) {
		player.getAttributes().remove(&quot;BarbarianOutpostCourse&quot;);
	}

	public static void setStage(Player player, int stage) {
		player.getAttributes().put(&quot;BarbarianOutpostCourse&quot;, stage);
	}

	public static int getStage(Player player) {
		Integer stage = (Integer) player.getAttributes().get(&quot;BarbarianOutpostCourse&quot;);
		if (stage == null)
			return -1;
		return stage;
	}
}
[/code]

Gnome:
[code]package com.rs.game.player.content.agility;

import com.rs.game.WorldTile;
import com.rs.game.player.Player;
import com.rs.game.player.Skills;
import com.rs.game.tasks.WorldTask;
import com.rs.game.tasks.WorldTasksManager;

public class GnomeAgility {

	// gnome course

	public static void walkGnomeLog(final Player player) {
		if (player.getX() != 2474 || player.getY() != 3436)
			return;
		final boolean running = player.getRun();
		player.setRunHidden(false);
		player.lock(8);
		player.addWalkSteps(2474, 3429, -1, false);
		player.getPackets().sendGameMessage(&quot;You walk carefully across the slippery log...&quot;, true);
		WorldTasksManager.schedule(new WorldTask() {
			boolean secondloop;

			@Override
			public void run() {
				if (!secondloop) {
					secondloop = true;
					player.getAppearence().setRenderEmote(155);
				} else {
					player.getAppearence().setRenderEmote(-1);
					player.setRunHidden(running);
					setGnomeStage(player, 0);
					player.getSkills().addXp(Skills.AGILITY, 200);
					player.getPackets().sendGameMessage(&quot;... and make it safely to the other side.&quot;, true);
					stop();
				}
			}
		}, 0, 6);
	}

	public static void climbGnomeObstacleNet(final Player player) {
		if (player.getY() != 3426)
			return;
		player.getPackets().sendGameMessage(&quot;You climb the netting.&quot;, true);
		player.useStairs(828, new WorldTile(player.getX(), 3423, 1), 1, 2);
		WorldTasksManager.schedule(new WorldTask() {
			@Override
			public void run() {
				if (getGnomeStage(player) == 0)
					setGnomeStage(player, 1);
				player.getSkills().addXp(Skills.AGILITY, 200);
			}
		}, 1);
	}

	public static void climbUpGnomeTreeBranch(final Player player) {
		player.getPackets().sendGameMessage(&quot;You climb the tree...&quot;, true);
		player.useStairs(828, new WorldTile(2473, 3420, 2), 1, 2, &quot;... to the platform above.&quot;);
		WorldTasksManager.schedule(new WorldTask() {
			@Override
			public void run() {
				if (getGnomeStage(player) == 1)
					setGnomeStage(player, 2);
				player.getSkills().addXp(Skills.AGILITY, 225);
			}
		}, 1);
	}

	public static void walkBackGnomeRope(final Player player) {
		if (player.getX() != 2483 || player.getY() != 3420
				|| player.getPlane() != 2)
			return;
		final boolean running = player.getRun();
		player.setRunHidden(false);
		player.lock(7);
		player.addWalkSteps(2477, 3420, -1, false);
		WorldTasksManager.schedule(new WorldTask() {
			boolean secondloop;

			@Override
			public void run() {
				if (!secondloop) {
					secondloop = true;
					player.getAppearence().setRenderEmote(155);
				} else {
					player.getAppearence().setRenderEmote(-1);
					player.setRunHidden(running);
					player.getSkills().addXp(Skills.AGILITY, 227);
					player.getPackets().sendGameMessage(&quot;You passed the obstacle successfully.&quot;, true);
					stop();
				}
			}
		}, 0, 5);
	}

	public static void walkGnomeRope(final Player player) {
		if (player.getX() != 2477 || player.getY() != 3420 || player.getPlane() != 2)
			return;
		final boolean running = player.getRun();
		player.setRunHidden(false);
		player.lock(7);
		player.addWalkSteps(2483, 3420, -1, false);
		WorldTasksManager.schedule(new WorldTask() {
			boolean secondloop;

			@Override
			public void run() {
				if (!secondloop) {
					secondloop = true;
					player.getAppearence().setRenderEmote(155);
				} else {
					player.getAppearence().setRenderEmote(-1);
					player.setRunHidden(running);
					if (getGnomeStage(player) == 2)
						setGnomeStage(player, 3);
					player.getSkills().addXp(Skills.AGILITY, 227);
					player.getPackets().sendGameMessage(&quot;You passed the obstacle successfully.&quot;, true);
					stop();
				}
			}
		}, 0, 5);
	}

	public static void climbDownGnomeTreeBranch(final Player player) {
		player.useStairs(828, new WorldTile(2487, 3421, 0), 1, 2, &quot;You climbed the tree branch successfully.&quot;);
		WorldTasksManager.schedule(new WorldTask() {
			@Override
			public void run() {
				if (getGnomeStage(player) == 3)
					setGnomeStage(player, 4);
				player.getSkills().addXp(Skills.AGILITY, 223);
			}
		}, 1);
	}

	public static void climbGnomeObstacleNet2(final Player player) {
		if (player.getY() != 3425)
			return;
		player.getPackets().sendGameMessage(&quot;You climb the netting.&quot;, true);
		player.useStairs(828, new WorldTile(player.getX(),
				player.getY() == 3425 ? 3428 : 3425, 0), 1, 2);
		WorldTasksManager.schedule(new WorldTask() {
			@Override
			public void run() {
				if (getGnomeStage(player) == 4)
					setGnomeStage(player, 5);
				player.getSkills().addXp(Skills.AGILITY, 228);
			}
		}, 1);
	}

	public static void enterGnomePipe(final Player player, int objectX,
			int objectY) {
		final boolean running = player.getRun();
		player.setRunHidden(false);
		player.lock(8);
		player.addWalkSteps(objectX, objectY == 3431 ? 3437 : 3430, -1, false);
		player.getPackets().sendGameMessage(&quot;You pulled yourself through the pipes.&quot;, true);
		WorldTasksManager.schedule(new WorldTask() {
			boolean secondloop;

			@Override
			public void run() {
				if (!secondloop) {
					secondloop = true;
					player.getAppearence().setRenderEmote(295);
				} else {
					player.getAppearence().setRenderEmote(-1);
					player.setRunHidden(running);
					player.getSkills().addXp(Skills.AGILITY, 7);
					if (getGnomeStage(player) == 5) {
						removeGnomeStage(player);
						player.getSkills().addXp(Skills.AGILITY, 239.5);

					}
					stop();
				}
			}
		}, 0, 6);
	}

	public static void removeGnomeStage(Player player) {
		player.getAttributes().remove(&quot;GnomeCourse&quot;);
	}

	public static void setGnomeStage(Player player, int stage) {
		player.getAttributes().put(&quot;GnomeCourse&quot;, stage);
	}

	public static int getGnomeStage(Player player) {
		Integer stage = (Integer) player.getAttributes().get(&quot;GnomeCourse&quot;);
		if (stage == null)
			return -1;
		return stage;
	}
}
[/code]</description>
    
    <lastBuildDate>Sun, 25 Jan 2015 23:17:23 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/718-agile-set-to-give-bonus-agility-xp/549141.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[718] Agile Set to give bonus agility xp?</title>
        <dc:creator><![CDATA[@fpsnipmob fpsnipmob]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/fpsnipmob">@fpsnipmob</a> wrote:</p>
          <blockquote>
              <p>Yeah that didn’t work. i tried a bunch of versions of the handling code, and it didn’t work <img src="https://forum.moparisthebest.com/images/emoji/twitter/confused.png?v=5" title=":confused:" class="emoji" alt=":confused:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/718-agile-set-to-give-bonus-agility-xp/549141/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/718-agile-set-to-give-bonus-agility-xp/549141/5</link>
        <pubDate>Sun, 25 Jan 2015 23:17:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-549141-5</guid>
        <source url="https://forum.moparisthebest.com/t/718-agile-set-to-give-bonus-agility-xp/549141.rss">[718] Agile Set to give bonus agility xp?</source>
      </item>
      <item>
        <title>[718] Agile Set to give bonus agility xp?</title>
        <dc:creator><![CDATA[@sk8rdude461 sk8rdude461]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sk8rdude461">@sk8rdude461</a> wrote:</p>
          <blockquote>
              <p>player.getSkills().addXp(Skills.AGILITY, 220);</p>
<p>Where you add the XP, you could do something like (because ternary’s are awesome):</p>
<pre><code class="lang-auto"></code></pre>
<p>If they’re wearing the outfit: 380 xp. if not: 220.</p>
<p>And then you’d create the boolean wearingOutfit:</p>
<p><code>public static void wearingOutfit(Player player) {
      return player.getEquipment.wearingItem(100001) &amp;&amp; player.getEquipment.wearingItem(100002);
}</code></p>
<p>Note: the code for wearingOutfit is wrong. I don’t know how 718+ handles anything so…<br>
Basically, you need to check if the player is wearing all the items in the method, and if they are it returns true.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/718-agile-set-to-give-bonus-agility-xp/549141/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/718-agile-set-to-give-bonus-agility-xp/549141/4</link>
        <pubDate>Tue, 20 Jan 2015 01:05:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-549141-4</guid>
        <source url="https://forum.moparisthebest.com/t/718-agile-set-to-give-bonus-agility-xp/549141.rss">[718] Agile Set to give bonus agility xp?</source>
      </item>
      <item>
        <title>[718] Agile Set to give bonus agility xp?</title>
        <dc:creator><![CDATA[@fpsnipmob fpsnipmob]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/fpsnipmob">@fpsnipmob</a> wrote:</p>
          <blockquote>
              <p>Bump.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/718-agile-set-to-give-bonus-agility-xp/549141/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/718-agile-set-to-give-bonus-agility-xp/549141/3</link>
        <pubDate>Mon, 19 Jan 2015 21:47:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-549141-3</guid>
        <source url="https://forum.moparisthebest.com/t/718-agile-set-to-give-bonus-agility-xp/549141.rss">[718] Agile Set to give bonus agility xp?</source>
      </item>
      <item>
        <title>[718] Agile Set to give bonus agility xp?</title>
        <dc:creator><![CDATA[@sk8rdude461 sk8rdude461]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sk8rdude461">@sk8rdude461</a> wrote:</p>
          <blockquote>
              <p>Provide some code please?</p>
<p>Like the code related to agility…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/718-agile-set-to-give-bonus-agility-xp/549141/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/718-agile-set-to-give-bonus-agility-xp/549141/2</link>
        <pubDate>Tue, 13 Jan 2015 03:57:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-549141-2</guid>
        <source url="https://forum.moparisthebest.com/t/718-agile-set-to-give-bonus-agility-xp/549141.rss">[718] Agile Set to give bonus agility xp?</source>
      </item>
      <item>
        <title>[718] Agile Set to give bonus agility xp?</title>
        <dc:creator><![CDATA[@fpsnipmob fpsnipmob]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/fpsnipmob">@fpsnipmob</a> wrote:</p>
          <blockquote>
              <p>Title says it all, im really stumped on this one. any help would be really appreciated.</p>
<p>This is what i have for agility:<br>
Agility.java</p>
<p>[code]package com.rs.game.player.content.agility;</p>
<p>import com.rs.game.player.Player;<br>
import com.rs.game.player.Skills;</p>
<p>public class Agility {</p>
<pre><code>public static boolean hasLevel(Player player, int level) {
	if (player.getSkills().getLevel(Skills.AGILITY) &lt; level) {
		player.getPackets().sendGameMessage(
				"You need an agility level of " + level + " to use this obstacle.", true);
		return false;
	}
	return true;
}
</code></pre>
<p>}[/code]</p>
<p>Barb</p>
<p>[code]package com.rs.game.player.content.agility;</p>
<p>import com.rs.game.Animation;<br>
import com.rs.game.ForceMovement;<br>
import com.rs.game.World;<br>
import com.rs.game.WorldObject;<br>
import com.rs.game.WorldTile;<br>
import com.rs.game.player.Player;<br>
import com.rs.game.player.Skills;<br>
import com.rs.game.tasks.WorldTask;<br>
import com.rs.game.tasks.WorldTasksManager;</p>
<p>public class BarbarianOutpostAgility {</p>
<pre><code>public static void enterObstaclePipe(final Player player, WorldObject object) {
	if (!Agility.hasLevel(player, 35))
		return;
	player.lock(4);
	player.setNextAnimation(new Animation(10580));
	final WorldTile toTile = new WorldTile(object.getX(), player.getY() &gt;= 3561 ? 3558 : 3561, object.getPlane());
	player.setNextForceMovement(new ForceMovement(player, 0, toTile, 2, player.getY() &gt;= 3561 ? ForceMovement.SOUTH : ForceMovement.NORTH));
	WorldTasksManager.schedule(new WorldTask() {

		@Override
		public void run() {
			player.setNextWorldTile(toTile);
			player.getSkills().addXp(Skills.AGILITY, 220);
		}

	}, 1);
}

public static void runUpWall(final Player player, WorldObject object) {
	if (!Agility.hasLevel(player, 90))
		return;
	player.lock(10);
	final WorldTile toTile = new WorldTile(2538, 3545, 2);
	WorldTasksManager.schedule(new WorldTask() {
		boolean secondLoop;
		@Override
		public void run() {
			if (!secondLoop) {
				player.setNextForceMovement(new ForceMovement(player, 7, toTile, 8, ForceMovement.NORTH));
				player.setNextAnimation(new Animation(10492));
				secondLoop = true;
			} else {
				player.setNextAnimation(new Animation(10493));
				player.setNextWorldTile(toTile);
				player.getSkills().addXp(Skills.AGILITY, 245);
				stop();
			}

		}

	}, 1, 6);
}

public static void climbUpWall(final Player player, WorldObject object) {
	if (!Agility.hasLevel(player, 90))
		return;
	player.useStairs(10023, new WorldTile(2536, 3546, 3), 2, 3);
	WorldTasksManager.schedule(new WorldTask() {

		@Override
		public void run() {
			player.setNextAnimation(new Animation(11794));
			player.getSkills().addXp(Skills.AGILITY, 245);
		}

	}, 1);
}

public static void fireSpringDevice(final Player player,
		final WorldObject object) {
	if (!Agility.hasLevel(player, 90))
		return;
	player.lock(5);
	player.addWalkSteps(2533, 3547, -1, false);
	final WorldTile toTile = new WorldTile(2532, 3553, 3);
	WorldTasksManager.schedule(new WorldTask() {

		boolean secondLoop;

		@Override
		public void run() {
			if (!secondLoop) {
				player.setNextForceMovement(new ForceMovement(player, 1,
						toTile, 3, ForceMovement.NORTH));
				player.setNextAnimation(new Animation(4189));
				World.sendObjectAnimation(player, object, new Animation(
						11819));

				secondLoop = true;
			} else {
				player.setNextWorldTile(toTile);
				player.getSkills().addXp(Skills.AGILITY, 245);
				stop();
			}
		}

	}, 1, 1);
}

public static void crossBalanceBeam(final Player player,
		final WorldObject object) {
	if (!Agility.hasLevel(player, 90))
		return;
	player.lock(4);
	final WorldTile toTile = new WorldTile(2536, 3553, 3);
	player.setNextForceMovement(new ForceMovement(player, 1, toTile, 3,
			ForceMovement.EAST));
	player.setNextAnimation(new Animation(16079));
	player.getAppearence().setRenderEmote(330);
	WorldTasksManager.schedule(new WorldTask() {
		@Override
		public void run() {
			player.setNextWorldTile(toTile);
			player.getSkills().addXp(Skills.AGILITY, 245);
			player.setNextAnimation(new Animation(-1));
			stop();
		}

	}, 2);
}

public static void jumpOverGap(final Player player, final WorldObject object) {
	if (!Agility.hasLevel(player, 90))
		return;
	player.lock(1);
	player.setNextAnimation(new Animation(2586));
	player.getAppearence().setRenderEmote(-1);
	WorldTasksManager.schedule(new WorldTask() {
		@Override
		public void run() {
			player.setNextWorldTile(new WorldTile(2538, 3553, 2));
			player.setNextAnimation(new Animation(2588));
			player.getSkills().addXp(Skills.AGILITY, 245);
			stop();
		}

	}, 0);
}

public static void slideDownRoof(final Player player,
		final WorldObject object) {
	if (!Agility.hasLevel(player, 90))
		return;
	player.lock(6);
	player.setNextAnimation(new Animation(11792));
	final WorldTile toTile = new WorldTile(2544, player.getY(), 0);
	player.setNextForceMovement(new ForceMovement(player, 0, toTile, 5,
			ForceMovement.EAST));
	WorldTasksManager.schedule(new WorldTask() {
		int stage;

		@Override
		public void run() {
			if (stage == 0) {
				player.setNextWorldTile(new WorldTile(2541, player.getY(),
						1));
				player.setNextAnimation(new Animation(11790));
				stage = 1;
			} else if (stage == 1) {
				stage = 2;
			} else if (stage == 2) {
				player.setNextAnimation(new Animation(11791));
				stage = 3;
			} else if (stage == 3) {
				player.setNextWorldTile(toTile);
				player.setNextAnimation(new Animation(2588));
				player.getSkills().addXp(Skills.AGILITY, 245);
				if (getStage(player) == 1) {
					removeStage(player);
					player.getSkills().addXp(Skills.AGILITY, 280);
				}
				stop();
			}
		}

	}, 0, 0);
}

public static void swingOnRopeSwing(final Player player, WorldObject object) {
	if (!Agility.hasLevel(player, 35))
		return;
	if (player.getY() != 3554) {
		player.getPackets().sendGameMessage(
				"You'll need to get closer to make this jump.");
		return;
	}
	player.lock(4);
	player.setNextAnimation(new Animation(751));
	World.sendObjectAnimation(player, object, new Animation(497));
	final WorldTile toTile = new WorldTile(object.getX(), 3549, object.getPlane());
	player.setNextForceMovement(new ForceMovement(player, 1, toTile, 3, ForceMovement.SOUTH));
	player.getSkills().addXp(Skills.AGILITY, 262);
	player.getPackets().sendGameMessage("You skilfully swing across.", true);
	WorldTasksManager.schedule(new WorldTask() {
		@Override
		public void run() {
			player.setNextWorldTile(toTile);
			setStage(player, 0);
		}

	}, 1);
}

public static void walkAcrossLogBalance(final Player player,
		final WorldObject object) {
	if (!Agility.hasLevel(player, 35))
		return;
	if (player.getY() != object.getY()) {
		player.addWalkSteps(2551, 3546, -1, false);
		player.lock(2);
		WorldTasksManager.schedule(new WorldTask() {

			@Override
			public void run() {
				walkAcrossLogBalanceEnd(player, object);
			}
		}, 1);
	} else
		walkAcrossLogBalanceEnd(player, object);
}

private static void walkAcrossLogBalanceEnd(final Player player,
		WorldObject object) {
	player.getPackets().sendGameMessage(
			"You walk carefully across the slippery log...", true);
	player.lock(17);
	player.setNextAnimation(new Animation(9908));
	final WorldTile toTile = new WorldTile(2541, object.getY(),
			object.getPlane());
	player.setNextForceMovement(new ForceMovement(player, 0, toTile, 16,
			ForceMovement.WEST));
	WorldTasksManager.schedule(new WorldTask() {

		@Override
		public void run() {
			player.setNextWorldTile(toTile);
			player.getSkills().addXp(Skills.AGILITY, 243);
			player.getPackets().sendGameMessage("... and make it safely to the other side.", true);
			if (getStage(player) == 0)
				setStage(player, 1);
		}

	}, 15);
}

public static void walkAcrossBalancingLedge(final Player player,
		final WorldObject object) {
	if (!Agility.hasLevel(player, 35))
		return;
	player.getPackets().sendGameMessage("You put your food on the ledge and try to edge across...", true);
	player.lock(5);
	player.setNextAnimation(new Animation(753));
	player.getAppearence().setRenderEmote(157);
	final WorldTile toTile = new WorldTile(2532, object.getY(),
			object.getPlane());
	player.setRun(true);
	player.addWalkSteps(toTile.getX(), toTile.getY(), -1, false);
	WorldTasksManager.schedule(new WorldTask() {
		@Override
		public void run() {
			player.setNextAnimation(new Animation(759));
			player.getAppearence().setRenderEmote(-1);
			player.getSkills().addXp(Skills.AGILITY, 252);
			player.getPackets().sendGameMessage("You skilfully edge across the gap.", true);
			if (getStage(player) == 2)
				setStage(player, 3);
		}
	}, 3);
}

public static void climbObstacleNet(final Player player, WorldObject object) {
	if (!Agility.hasLevel(player, 35) || player.getY() &lt; 3545
			|| player.getY() &gt; 3547)
		return;
	player.getPackets().sendGameMessage("You climb the netting...", true);
	player.getSkills().addXp(Skills.AGILITY, 225.2);
	player.useStairs(828,
			new WorldTile(object.getX() - 1, player.getY(), 1), 1, 2);
	if (getStage(player) == 1)
		setStage(player, 2);
}

public static void climbOverCrumblingWall(final Player player,
		WorldObject object) {
	if (!Agility.hasLevel(player, 35))
		return;
	if (player.getX() &gt;= object.getX()) {
		player.getPackets().sendGameMessage("You cannot climb that from this side.");
		return;
	}
	player.getPackets().sendGameMessage("You climb the low wall...", true);
	player.lock(3);
	player.setNextAnimation(new Animation(4853));
	final WorldTile toTile = new WorldTile(object.getX() + 1, object.getY(), object.getPlane());
	player.setNextForceMovement(new ForceMovement(player, 0, toTile, 2, ForceMovement.EAST));
	WorldTasksManager.schedule(new WorldTask() {

		@Override
		public void run() {
			player.setNextWorldTile(toTile);
			player.getSkills().addXp(Skills.AGILITY, 243.7);
			int stage = getStage(player);
			if (stage == 3)
				setStage(player, 4);
			else if (stage == 4) {
				removeStage(player);
				player.getSkills().addXp(Skills.AGILITY, 246.2);
			}
		}

	}, 1);
}

public static void removeStage(Player player) {
	player.getAttributes().remove("BarbarianOutpostCourse");
}

public static void setStage(Player player, int stage) {
	player.getAttributes().put("BarbarianOutpostCourse", stage);
}

public static int getStage(Player player) {
	Integer stage = (Integer) player.getAttributes().get("BarbarianOutpostCourse");
	if (stage == null)
		return -1;
	return stage;
}
</code></pre>
<p>}<br>
[/code]</p>
<p>Gnome:</p>
<p>[code]package com.rs.game.player.content.agility;</p>
<p>import com.rs.game.WorldTile;<br>
import com.rs.game.player.Player;<br>
import com.rs.game.player.Skills;<br>
import com.rs.game.tasks.WorldTask;<br>
import com.rs.game.tasks.WorldTasksManager;</p>
<p>public class GnomeAgility {</p>
<pre><code>// gnome course

public static void walkGnomeLog(final Player player) {
	if (player.getX() != 2474 || player.getY() != 3436)
		return;
	final boolean running = player.getRun();
	player.setRunHidden(false);
	player.lock(8);
	player.addWalkSteps(2474, 3429, -1, false);
	player.getPackets().sendGameMessage("You walk carefully across the slippery log...", true);
	WorldTasksManager.schedule(new WorldTask() {
		boolean secondloop;

		@Override
		public void run() {
			if (!secondloop) {
				secondloop = true;
				player.getAppearence().setRenderEmote(155);
			} else {
				player.getAppearence().setRenderEmote(-1);
				player.setRunHidden(running);
				setGnomeStage(player, 0);
				player.getSkills().addXp(Skills.AGILITY, 200);
				player.getPackets().sendGameMessage("... and make it safely to the other side.", true);
				stop();
			}
		}
	}, 0, 6);
}

public static void climbGnomeObstacleNet(final Player player) {
	if (player.getY() != 3426)
		return;
	player.getPackets().sendGameMessage("You climb the netting.", true);
	player.useStairs(828, new WorldTile(player.getX(), 3423, 1), 1, 2);
	WorldTasksManager.schedule(new WorldTask() {
		@Override
		public void run() {
			if (getGnomeStage(player) == 0)
				setGnomeStage(player, 1);
			player.getSkills().addXp(Skills.AGILITY, 200);
		}
	}, 1);
}

public static void climbUpGnomeTreeBranch(final Player player) {
	player.getPackets().sendGameMessage("You climb the tree...", true);
	player.useStairs(828, new WorldTile(2473, 3420, 2), 1, 2, "... to the platform above.");
	WorldTasksManager.schedule(new WorldTask() {
		@Override
		public void run() {
			if (getGnomeStage(player) == 1)
				setGnomeStage(player, 2);
			player.getSkills().addXp(Skills.AGILITY, 225);
		}
	}, 1);
}

public static void walkBackGnomeRope(final Player player) {
	if (player.getX() != 2483 || player.getY() != 3420
			|| player.getPlane() != 2)
		return;
	final boolean running = player.getRun();
	player.setRunHidden(false);
	player.lock(7);
	player.addWalkSteps(2477, 3420, -1, false);
	WorldTasksManager.schedule(new WorldTask() {
		boolean secondloop;

		@Override
		public void run() {
			if (!secondloop) {
				secondloop = true;
				player.getAppearence().setRenderEmote(155);
			} else {
				player.getAppearence().setRenderEmote(-1);
				player.setRunHidden(running);
				player.getSkills().addXp(Skills.AGILITY, 227);
				player.getPackets().sendGameMessage("You passed the obstacle successfully.", true);
				stop();
			}
		}
	}, 0, 5);
}

public static void walkGnomeRope(final Player player) {
	if (player.getX() != 2477 || player.getY() != 3420 || player.getPlane() != 2)
		return;
	final boolean running = player.getRun();
	player.setRunHidden(false);
	player.lock(7);
	player.addWalkSteps(2483, 3420, -1, false);
	WorldTasksManager.schedule(new WorldTask() {
		boolean secondloop;

		@Override
		public void run() {
			if (!secondloop) {
				secondloop = true;
				player.getAppearence().setRenderEmote(155);
			} else {
				player.getAppearence().setRenderEmote(-1);
				player.setRunHidden(running);
				if (getGnomeStage(player) == 2)
					setGnomeStage(player, 3);
				player.getSkills().addXp(Skills.AGILITY, 227);
				player.getPackets().sendGameMessage("You passed the obstacle successfully.", true);
				stop();
			}
		}
	}, 0, 5);
}

public static void climbDownGnomeTreeBranch(final Player player) {
	player.useStairs(828, new WorldTile(2487, 3421, 0), 1, 2, "You climbed the tree branch successfully.");
	WorldTasksManager.schedule(new WorldTask() {
		@Override
		public void run() {
			if (getGnomeStage(player) == 3)
				setGnomeStage(player, 4);
			player.getSkills().addXp(Skills.AGILITY, 223);
		}
	}, 1);
}

public static void climbGnomeObstacleNet2(final Player player) {
	if (player.getY() != 3425)
		return;
	player.getPackets().sendGameMessage("You climb the netting.", true);
	player.useStairs(828, new WorldTile(player.getX(),
			player.getY() == 3425 ? 3428 : 3425, 0), 1, 2);
	WorldTasksManager.schedule(new WorldTask() {
		@Override
		public void run() {
			if (getGnomeStage(player) == 4)
				setGnomeStage(player, 5);
			player.getSkills().addXp(Skills.AGILITY, 228);
		}
	}, 1);
}

public static void enterGnomePipe(final Player player, int objectX,
		int objectY) {
	final boolean running = player.getRun();
	player.setRunHidden(false);
	player.lock(8);
	player.addWalkSteps(objectX, objectY == 3431 ? 3437 : 3430, -1, false);
	player.getPackets().sendGameMessage("You pulled yourself through the pipes.", true);
	WorldTasksManager.schedule(new WorldTask() {
		boolean secondloop;

		@Override
		public void run() {
			if (!secondloop) {
				secondloop = true;
				player.getAppearence().setRenderEmote(295);
			} else {
				player.getAppearence().setRenderEmote(-1);
				player.setRunHidden(running);
				player.getSkills().addXp(Skills.AGILITY, 7);
				if (getGnomeStage(player) == 5) {
					removeGnomeStage(player);
					player.getSkills().addXp(Skills.AGILITY, 239.5);

				}
				stop();
			}
		}
	}, 0, 6);
}

public static void removeGnomeStage(Player player) {
	player.getAttributes().remove("GnomeCourse");
}

public static void setGnomeStage(Player player, int stage) {
	player.getAttributes().put("GnomeCourse", stage);
}

public static int getGnomeStage(Player player) {
	Integer stage = (Integer) player.getAttributes().get("GnomeCourse");
	if (stage == null)
		return -1;
	return stage;
}
</code></pre>
<p>}<br>
[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/718-agile-set-to-give-bonus-agility-xp/549141/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/718-agile-set-to-give-bonus-agility-xp/549141/1</link>
        <pubDate>Tue, 13 Jan 2015 03:55:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-549141-1</guid>
        <source url="https://forum.moparisthebest.com/t/718-agile-set-to-give-bonus-agility-xp/549141.rss">[718] Agile Set to give bonus agility xp?</source>
      </item>
  </channel>
</rss>
