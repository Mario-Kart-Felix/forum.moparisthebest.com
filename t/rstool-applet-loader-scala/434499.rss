<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Rstool applet loader (Scala)</title>
    <link>https://forum.moparisthebest.com/t/rstool-applet-loader-scala/434499</link>
    <description>Hello Everyone,

I&#39;ve just finished making a framework in Scala for doing things to the client, and applied it to an applet loader. It replaces the byte array right before defineClass is called, and then injects a println into every method. It allows transformations to happen in real time. I included Instrumentation for giggles, haven&#39;t tried it out yet.

scala.rstool.bytecode is really just an ASM pimp, but it allows for very brief descriptions of transforms. It uses implicit methods and some other weird crap so beware.

To add your own transform, do

[code]gamepack.transforms += ...[/code]

before the applet is started in Rs2AppletLoader.setup. Check out scala.rstool.bytecode.Transform for info. Gamepack has the class swap transform.

Since Scala is really just a compiler and core library, this means you just need Scala in your boot path, in the manifest. gen_manifest.pl will generate a manifest file for the agent jar, add your Scala path (e.g. /usr/share/scala) to it. I think this batch file might do the trick, but I haven&#39;t tested it.

[code]@echo off
set AGENT=&quot;Agent&quot;
set LIBS=&quot;lib\asm-all-4.0.jar;lib\jericho-html-3.2.jar&quot;
set SCALA_PATH=
scalac -deprecation -sourcepath rstool\src -classpath %LIBS% rstool\src\scala\rstool\bytecode\*.scala -d rstool\bin
scalac -deprecation -sourcepath rstool\src -classpath rstool\bin;%LIBS% rstool\src\scala\rstool\*.scala -d rstool\bin
javac -classpath rstool\bin;%SCALA_PATH%\lib\scala-library.jar;%SCALA_PATH%\lib\scala-swing.jar rstool\src\java\%AGENT%.java -d rstool\bin\java
perl gen_manifest.pl %AGENT% %SCALA_PATH%
jar -cfm agent.jar manifest -C rstool\bin\java %AGENT%.class
del manifest[/code]

Don&#39;t forget to delete the hashbang in the pl file. The run command should be the same. // oh you definitely need to change the directory separators to ; in the pl file, and maybe invert the slashes?

Edit, apparently you must change
[code]b.nonEmpty &amp;&amp; b.reduce(_ | _)[/code] at bytecode.Transform.zing to
[code]if (b.isEmpty) true else b.reduce(_ | _)[/code]

Dumb. Anybody got this to work?</description>
    
    <lastBuildDate>Tue, 28 Feb 2012 00:33:56 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/rstool-applet-loader-scala/434499.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Rstool applet loader (Scala)</title>
        <dc:creator><![CDATA[@silic silic]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silic">@silic</a> wrote:</p>
          <blockquote>
              <p>Hello Everyone,</p>
<p>I’ve just finished making a framework in Scala for doing things to the client, and applied it to an applet loader. It replaces the byte array right before defineClass is called, and then injects a println into every method. It allows transformations to happen in real time. I included Instrumentation for giggles, haven’t tried it out yet.</p>
<p>scala.rstool.bytecode is really just an ASM pimp, but it allows for very brief descriptions of transforms. It uses implicit methods and some other weird crap so beware.</p>
<p>To add your own transform, do</p>
<pre><code class="lang-auto"></code></pre>
<p>before the applet is started in Rs2AppletLoader.setup. Check out scala.rstool.bytecode.Transform for info. Gamepack has the class swap transform.</p>
<p>Since Scala is really just a compiler and core library, this means you just need Scala in your boot path, in the manifest. gen_manifest.pl will generate a manifest file for the agent jar, add your Scala path (e.g. /usr/share/scala) to it. I think this batch file might do the trick, but I haven’t tested it.</p>
<p><code>@echo off
set AGENT="Agent"
set LIBS="lib\asm-all-4.0.jar;lib\jericho-html-3.2.jar"
set SCALA_PATH=
scalac -deprecation -sourcepath rstool\src -classpath %LIBS% rstool\src\scala\rstool\bytecode\*.scala -d rstool\bin
scalac -deprecation -sourcepath rstool\src -classpath rstool\bin;%LIBS% rstool\src\scala\rstool\*.scala -d rstool\bin
javac -classpath rstool\bin;%SCALA_PATH%\lib\scala-library.jar;%SCALA_PATH%\lib\scala-swing.jar rstool\src\java\%AGENT%.java -d rstool\bin\java
perl gen_manifest.pl %AGENT% %SCALA_PATH%
jar -cfm agent.jar manifest -C rstool\bin\java %AGENT%.class
del manifest</code></p>
<p>Don’t forget to delete the hashbang in the pl file. The run command should be the same. // oh you definitely need to change the directory separators to ; in the pl file, and maybe invert the slashes?</p>
<p>Edit, apparently you must change</p>
<p><code>b.nonEmpty &amp;&amp; b.reduce(_ | _)</code> at bytecode.Transform.zing to</p>
<pre><code class="lang-auto"></code></pre>
<p>Dumb. Anybody got this to work?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/rstool-applet-loader-scala/434499/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/rstool-applet-loader-scala/434499/1</link>
        <pubDate>Tue, 28 Feb 2012 00:33:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-434499-1</guid>
        <source url="https://forum.moparisthebest.com/t/rstool-applet-loader-scala/434499.rss">Rstool applet loader (Scala)</source>
      </item>
  </channel>
</rss>
