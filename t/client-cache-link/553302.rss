<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Client cache link</title>
    <link>https://forum.moparisthebest.com/t/client-cache-link/553302</link>
    <description>Hello rune server, i seem to be getting the following error, and i&#39;m not sure why. i could be missing something fairly simple but i figured i&#39;d ask for some advice anyways.

Currently messing around with swiffy&#39;s latest give to the community.

The cache link and the url link to have the &quot;load images&quot; load up will not work unless it&#39;s the cache itself being the problem and i don&#39;t beleive it is.

I have all my links set up correctly as far as i know anyways, yet all the client does is blackscreen whist giving me a 403 error. Yes i know what that means, and i&#39;m not understanding what&#39;s wrong with it. Cache is packed correctly, and repacked correctly. links are live etc but the client just won&#39;t load up at all.

Would anyone be able to help me out with possibly adding the updatecache that was released Here:


[code][codeimport java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.Enumeration;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;

/**
 * The custom update server to download and update the cache.
 * @author Apacheah64
 */
public class Update {
	
	/**
	 * The client reference.
	 */
	private Client c;
	
	/**
	 * The cache directory.
	 */
	private static final String CACHE_DIR = signlink.findcachedir();
	
	/**
	 * Construct a new {@code Updater} {@code Object}.
	 * @param c The client reference.
	 */
	public Update(Client c) {
		this.c = c;
	}
	
	/**
	 * Update the cache.
	 */
	public void updateCache() {
		new File(CACHE_DIR).mkdirs();
		File file = new File(CACHE_DIR+&quot;rusereborn.dat&quot;);//its a check if the cache already exists
		if(!file.exists()) {
			c.drawLoadingText(0, &quot;Checking for updates&quot;);
			downloadArchive(&quot;http://162.218.48.74/~ruserebo/client/cache/RuseReborn.zip&quot;);
		}
		file = new File(CACHE_DIR+&quot;cache.zip&quot;);
		if(file.exists()) {
			unzip(CACHE_DIR+&quot;cache.zip&quot;);
		}
	}
	
	/**
	 * Download the cache archive from the web server.
	 * @param dlurl The uniform resource locater to the file that has to be downloaded.
	 * @param cachePart The part of the cache that is being downloaded.
	 */
	private void downloadArchive(String dlurl) {
		try {
			URLConnection url = new URL(dlurl).openConnection();
		    int i = url.getContentLength();
		    InputStream is = url.getInputStream();
			OutputStream os = new FileOutputStream(CACHE_DIR+&quot;/cache.zip&quot;);
			byte[] b = new byte[4096];
			int length;
			int old = 0;
			while ((length = is.read(b)) != -1) {
				os.write(b, 0, length);
				old += length;
				int percent = (int) ((double) old / (double) i * 100.0);
				drawLoadingText(percent, &quot;Checking for updates - &quot; + percent + &quot;%&quot;);
			}
			is.close();
			os.close();
			unzip(CACHE_DIR+&quot;cache.zip&quot;);
			File file = new File(CACHE_DIR+&quot;rusereborn.dat&quot;);
			if(!file.exists()) {
				file.createNewFile();// got ya
			}
		} catch (MalformedURLException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	/**
	 * Unzip the cache archive part.
	 * @param file The file location.
	 */
	private void unzip(String file) {
		Enumeration&lt;?&gt; entries;
		ZipFile zipFile;
		try {
			zipFile = new ZipFile(file);
			entries = zipFile.entries();
			while(entries.hasMoreElements()) {
				ZipEntry entry = (ZipEntry)entries.nextElement();
				if(entry.isDirectory()) {
					(new File(CACHE_DIR+&quot;/&quot;+entry.getName())).mkdir();
					continue;
				}
				copyInputStream(zipFile.getInputStream(entry),
				new BufferedOutputStream(new FileOutputStream(CACHE_DIR+&quot;/&quot;+entry.getName())));
				drawLoadingText(100, &quot;Unpacking Cache&quot;);
			}
			zipFile.close();
			File zip = new File(file);
			zip.delete();
		} catch (IOException ioe) {
			ioe.printStackTrace();
			return;
		}
	}
	
	/**
	 * Make a copy of the input stream and write it.
	 * @param in The input.
	 * @param out The output.
	 * @throws IOException
	 */
	private static final void copyInputStream(InputStream in, OutputStream out) throws IOException {
		byte[] buffer = new byte[1024];
		int len;
		while((len = in.read(buffer)) &gt;= 0) {
			out.write(buffer, 0, len);
		}
		in.close();
		out.close();
	}
	
	private static void drawLoadingText(int amount, String text) {
        Client.loadingPercentage = amount;
        Client.loadingText = text;
    }
	
}
[/code]

Thankyou very much. Pm me if you&#39;d like to assist me</description>
    
    <lastBuildDate>Tue, 15 Sep 2015 21:14:37 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/client-cache-link/553302.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Client cache link</title>
        <dc:creator><![CDATA[@4ces0fsp4des 4ces0fsp4des]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/4ces0fsp4des">@4ces0fsp4des</a> wrote:</p>
          <blockquote>
              <p>Hello rune server, i seem to be getting the following error, and i’m not sure why. i could be missing something fairly simple but i figured i’d ask for some advice anyways.</p>
<p>Currently messing around with swiffy’s latest give to the community.</p>
<p>The cache link and the url link to have the “load images” load up will not work unless it’s the cache itself being the problem and i don’t beleive it is.</p>
<p>I have all my links set up correctly as far as i know anyways, yet all the client does is blackscreen whist giving me a 403 error. Yes i know what that means, and i’m not understanding what’s wrong with it. Cache is packed correctly, and repacked correctly. links are live etc but the client just won’t load up at all.</p>
<p>Would anyone be able to help me out with possibly adding the updatecache that was released Here:</p>
<p>[code][codeimport java.io.BufferedOutputStream;<br>
import java.io.File;<br>
import java.io.FileOutputStream;<br>
import java.io.IOException;<br>
import java.io.InputStream;<br>
import java.io.OutputStream;<br>
import java.net.MalformedURLException;<br>
import java.net.URL;<br>
import java.net.URLConnection;<br>
import java.util.Enumeration;<br>
import java.util.zip.ZipEntry;<br>
import java.util.zip.ZipFile;</p>
<p>/**</p>
<ul>
<li>
<p>The custom update server to download and update the cache.</p>
</li>
<li>
<p><span class="mention">@author</span> Apacheah64<br>
*/<br>
public class Update {</p>
<p>/**</p>
<ul>
<li>The client reference.<br>
*/<br>
private Client c;</li>
</ul>
<p>/**</p>
<ul>
<li>The cache directory.<br>
*/<br>
private static final String CACHE_DIR = signlink.findcachedir();</li>
</ul>
<p>/**</p>
<ul>
<li>Construct a new {<a class="mention" href="/u/code">@code</a> Updater} {<a class="mention" href="/u/code">@code</a> Object}.</li>
<li>
<a class="mention" href="/u/param">@param</a> c The client reference.<br>
*/<br>
public Update(Client c) {<br>
this.c = c;<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Update the cache.<br>
*/<br>
public void updateCache() {<br>
new File(CACHE_DIR).mkdirs();<br>
File file = new File(CACHE_DIR+“rusereborn.dat”);//its a check if the cache already exists<br>
if(!file.exists()) {<br>
c.drawLoadingText(0, “Checking for updates”);<br>
downloadArchive(“<a href="http://162.218.48.74/~ruserebo/client/cache/RuseReborn.zip" rel="nofollow noopener">http://162.218.48.74/~ruserebo/client/cache/RuseReborn.zip</a>”);<br>
}<br>
file = new File(CACHE_DIR+“cache.zip”);<br>
if(file.exists()) {<br>
unzip(CACHE_DIR+“cache.zip”);<br>
}<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Download the cache archive from the web server.</li>
<li>
<a class="mention" href="/u/param">@param</a> dlurl The uniform resource locater to the file that has to be downloaded.</li>
<li>
<a class="mention" href="/u/param">@param</a> cachePart The part of the cache that is being downloaded.<br>
*/<br>
private void downloadArchive(String dlurl) {<br>
try {<br>
URLConnection url = new URL(dlurl).openConnection();<br>
int i = url.getContentLength();<br>
InputStream is = url.getInputStream();<br>
OutputStream os = new FileOutputStream(CACHE_DIR+"/cache.zip");<br>
byte[] b = new byte[4096];<br>
int length;<br>
int old = 0;<br>
while ((length = is.read(b)) != -1) {<br>
os.write(b, 0, length);<br>
old += length;<br>
int percent = (int) ((double) old / (double) i * 100.0);<br>
drawLoadingText(percent, "Checking for updates - " + percent + “%”);<br>
}<br>
is.close();<br>
os.close();<br>
unzip(CACHE_DIR+“cache.zip”);<br>
File file = new File(CACHE_DIR+“rusereborn.dat”);<br>
if(!file.exists()) {<br>
file.createNewFile();// got ya<br>
}<br>
} catch (MalformedURLException e) {<br>
e.printStackTrace();<br>
} catch (IOException e) {<br>
e.printStackTrace();<br>
}<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Unzip the cache archive part.</li>
<li>
<a class="mention" href="/u/param">@param</a> file The file location.<br>
*/<br>
private void unzip(String file) {<br>
Enumeration&lt;?&gt; entries;<br>
ZipFile zipFile;<br>
try {<br>
zipFile = new ZipFile(file);<br>
entries = zipFile.entries();<br>
while(entries.hasMoreElements()) {<br>
ZipEntry entry = (ZipEntry)entries.nextElement();<br>
if(entry.isDirectory()) {<br>
(new File(CACHE_DIR+"/"+entry.getName())).mkdir();<br>
continue;<br>
}<br>
copyInputStream(zipFile.getInputStream(entry),<br>
new BufferedOutputStream(new FileOutputStream(CACHE_DIR+"/"+entry.getName())));<br>
drawLoadingText(100, “Unpacking Cache”);<br>
}<br>
zipFile.close();<br>
File zip = new File(file);<br>
zip.delete();<br>
} catch (IOException ioe) {<br>
ioe.printStackTrace();<br>
return;<br>
}<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Make a copy of the input stream and write it.</li>
<li>
<a class="mention" href="/u/param">@param</a> in The input.</li>
<li>
<a class="mention" href="/u/param">@param</a> out The output.</li>
<li>
<span class="mention">@throws</span> IOException<br>
*/<br>
private static final void copyInputStream(InputStream in, OutputStream out) throws IOException {<br>
byte[] buffer = new byte[1024];<br>
int len;<br>
while((len = in.read(buffer)) &gt;= 0) {<br>
out.write(buffer, 0, len);<br>
}<br>
in.close();<br>
out.close();<br>
}</li>
</ul>
<p>private static void drawLoadingText(int amount, String text) {<br>
Client.loadingPercentage = amount;<br>
Client.loadingText = text;<br>
}</p>
</li>
</ul>
<p>}<br>
[/code]</p>
<p>Thankyou very much. Pm me if you’d like to assist me</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/client-cache-link/553302/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/client-cache-link/553302/1</link>
        <pubDate>Tue, 15 Sep 2015 21:14:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-553302-1</guid>
        <source url="https://forum.moparisthebest.com/t/client-cache-link/553302.rss">Client cache link</source>
      </item>
  </channel>
</rss>
