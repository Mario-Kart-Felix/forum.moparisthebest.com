<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Weird Death Bug</title>
    <link>https://forum.moparisthebest.com/t/weird-death-bug/542145</link>
    <description>Base : Virtue/Vicious Revolution

Revision: 317

Issue: When a player dies, said player respawns in the exact location he/she died at. The player loses items but does not get respawned in edgeville and does not regain prayer or hitpoints.

My giveLife method:
[code]	public void giveLife() {
		this.c.isDead = false;
		this.c.faceUpdate(-1);
		this.c.freezeTimer = 0;
		for (int count = 0; count &lt; this.c.godwarsKillCount.length; count++) {
			this.c.godwarsKillCount[count] = 0;
		}
		this.sendFrame126(&quot;@cya@&quot; + this.c.godwarsKillCount[0], 16217);
		this.sendFrame126(&quot;@cya@&quot; + this.c.godwarsKillCount[3], 16216);
		this.sendFrame126(&quot;@cya@&quot; + this.c.godwarsKillCount[2], 16218);
		this.sendFrame126(&quot;@cya@&quot; + this.c.godwarsKillCount[1], 16219);
		if (this.c.isOwner) {
			if (CastleWars.playerIsOnGame(this.c)) {
				// Saradomin respawn zone
				if (CastleWars.getTeamOneGame().contains(this.c)) {
					this.movePlayer(2426, 3076, 1);
					// Zamorak respawn zone
				}
				if (CastleWars.getTeamTwoGame().contains(this.c)) {
					this.movePlayer(2371, 3132, 1);
					// // Saradomin respawn at waiting zone
				}
				if (CastleWars.getTeamOne().contains(this.c)) {
					CastleObjects.CastleJoinObjects.ZAMORAK
							.canLeaveTeam(this.c);
					// // Zamorak respawn at waiting zone
				}
				if (CastleWars.getTeamTwo().contains(this.c)) {
					CastleObjects.CastleJoinObjects.ZAMORAK
							.canLeaveTeam(this.c);
				}
			} else {
				this.c.teleportToX = GameConstants.RESPAWN_X;
				this.c.teleportToY = GameConstants.RESPAWN_Y;
			}
			for (int i = 0; i &lt; 20; i++) {
				if (i == 5) {
					continue;
				}
				this.c.playerLevel[i] = this.getLevelForXP(this.c.playerXP[i]);
				this.c.getPA().refreshSkill(i);
			}
			SavingManager.save(this.c);
			this.requestUpdates();
			return;

		}
		int e = 0;
		if (!this.c.getPA().inPitsWait() &amp;&amp; !this.c.inFightPits()
				&amp;&amp; !CastleWars.playerIsOnGame(this.c) &amp;&amp; !this.c.inFightCaves()
				&amp;&amp; !this.c.inDung() &amp;&amp; !this.c.inFunPk() &amp;&amp; !this.c.inPcGame()
				&amp;&amp; !this.c.inDuelTournament() &amp;&amp; !this.c.inDuelArenaGame()) {
			this.c.getItems().resetKeepItems();
			if (!this.c.isSkulled) { // what items to keep
				this.c.getItems().keepItem(0, true);
				this.c.getItems().keepItem(1, true);
				this.c.getItems().keepItem(2, true);
			}
			if (this.c.prayerActive[10]
					&amp;&amp; System.currentTimeMillis() - this.c.lastProtItem &gt; 700) {
				this.c.getItems().keepItem(3, true);
			}
			final List&lt;Integer[]&gt; untradeables = new ArrayList&lt;Integer[]&gt;();
			for (int i = 0; i &lt; this.c.playerEquipment.length; i++) {
				if (!ItemAssistant.tradeable(this.c.playerEquipment[i])) {
					untradeables.add(new Integer[] { this.c.playerEquipment[i],
							this.c.playerEquipmentN[i] });
				}
			}
			for (int i = 0; i &lt; this.c.playerItems.length; i++) {
				if (!ItemAssistant.tradeable(this.c.playerItems[i] - 1)) {
					untradeables.add(new Integer[] { this.c.playerItems[i] - 1,
							this.c.playerItemsN[i] });
				}
			}
			// c.sendMessage(&quot;isInTournament: &quot;+c.isInTournament+&quot;, inDuelTournament(): &quot;+c.inDuelTournament()+&quot;, InDuelTournLobby: &quot;+c.inDuelTournLobby());
			this.c.getItems().dropAllItems(); // drop all items
			this.c.getItems().deleteAllItems(); // delete all items
			for (final Integer[] item : untradeables) {
				this.c.getItems().addItem(item[0], item[1]);
			}
			if (!this.c.isSkulled) { // add the kept items once we finish
										// deleting and dropping them
				for (int i1 = 0; i1 &lt; 3; i1++) {
					if (this.c.itemKeptId[i1] &gt; 0) {
						this.c.getItems().addItem(this.c.itemKeptId[i1], 1);
					}
				}
			}
			if (this.c.prayerActive[10]) { // if we have protect items
				if (this.c.itemKeptId[3] &gt; 0) {
					this.c.getItems().addItem(this.c.itemKeptId[3], 1);
				}
			}
			this.c.getItems().resetKeepItems();
		} else if (this.c.inDung()) {
			this.c.dungDeaths++;
			this.c.getPA().sendFrame126(
					&quot;@or2@Deaths: &quot; + this.c.dungDeaths + &quot;&quot;, 26255);
		} else if (this.c.inPcGame()) {
			this.movePlayer(2656, 2608, 0);
			for (int i = 0; i &lt; 20; i++) {
				this.c.playerLevel[i] = this.getLevelForXP(this.c.playerXP[i]);
				this.c.getPA().refreshSkill(i);
			}
			SavingManager.save(this.c);
			this.requestUpdates();
			if (this.c.familiarID &gt; 0) {
				Summoning.dismissFamiliar(this.c, true, true);
			}
			Prayer.closeAllPrayers(this.c);
			this.c.prayer = this.c.maxPrayer();
			this.c.getPA().refreshSkill(5);
			for (int i = 0; i &lt; 23; i++) {
				if (i == 5) {
					continue;
				}
				this.c.playerLevel[i] = this.getLevelForXP(this.c.playerXP[i]);
				this.c.getPA().refreshSkill(i);
			}
			this.c.playerLevel[23] = this
					.getLevelForDungXP(this.c.playerXP[23]);

			if (this.c.floor &gt; 0 &amp;&amp; this.c.inDung()) {
				Dungeoneering.deathRespawn(this.c);
			} else if (this.c.getDuelState().equals(Duel_State.FIGHT)
					&amp;&amp; this.c.getDuelSesion().rival.getDuelState().equals(
							Duel_State.FIGHT)) {
				this.c.getDuelSesion().rival.getDuelSesion().winDuel();
			} else if (this.c.pitsStatus == 1) {
				this.movePlayer(2399, 5173, 0);
			} else if (CastleWars.playerIsOnGame(this.c)) {
				if (Flags.manageFlagActions(this.c, -1, this.c.getX(),
						this.c.getY(), this.c.heightLevel, PLAYER_ACTION.DROP)) {
					;
				}
				// Saradomin respawn zone
				if (CastleWars.getTeamOneGame().contains(this.c)) {
					this.movePlayer(2426, 3076, 1);
					// Zamorak respawn zone
				}
				if (CastleWars.getTeamTwoGame().contains(this.c)) {
					this.movePlayer(2371, 3132, 1);
					// Saradomin respawn at waiting zone
				}
				if (CastleWars.getTeamOne().contains(this.c)) {
					CastleObjects.CastleJoinObjects.ZAMORAK
							.canLeaveTeam(this.c);
					// Zamorak respawn at waiting zone
				}
				if (CastleWars.getTeamTwo().contains(this.c)) {
					CastleObjects.CastleJoinObjects.ZAMORAK
							.canLeaveTeam(this.c);
				}
			} else if (this.c.inFightCaves()) {
				this.c.getPA().resetTzhaar();
			} else if (this.c.inFightPits()) {
				FightPits.handleDeath(this.c);
			} else {
				this.movePlayer(GameConstants.START_LOCATION_X,
						GameConstants.START_LOCATION_Y, 0);
			}
			// PlayerSaving.getSingleton().requestSave(c.playerId);
			SavingManager.save(this.c);
			this.c.getCombat().resetPlayerAttack();
			this.resetAnimation();
			this.c.startAnimation(65535);
			this.frame1();
			this.resetTb();
			this.refreshAll();
			this.c.isSkulled = false;
			this.c.attackedPlayers.clear();
			this.c.headIconPk = -1;
			this.c.skullTimer = -1;
			this.c.damageTaken = new int[GameConstants.MAX_PLAYERS];
			this.c.getPA().requestUpdates();
			this.removeAllWindows();
			this.c.tradeResetNeeded = true;
			if (this.c.tourneyStatus == 0) {
				this.c.tourneyStatus = 0;
			}
			final Client o = (Client) PlayerHandler.players[this.c.duelingWith];
			if (this.c.isInTournament) {
				o.getTradeAndDuel().duelVictory();
			}
			if (!this.c.inPcGame() || !this.c.inFightCaves()
					|| !this.c.inFightPits()) {
				this.c.getPA().walkableInterface(-1);
			}
			for (int i = 0; i &lt; this.c.prayerActive.length; i++) {
				if (this.c.prayerActive[i]) {
					this.c.prayerActive[i] = false;
				}
			}
			this.c.playerLevel[5] = this.c.getPA().getLevelForXP(
					this.c.playerXP[5]);
			this.c.getPA().refreshSkill(5);
			this.c.updateRequired = true;
		}
	}[/code]</description>
    
    <lastBuildDate>Sun, 13 Apr 2014 23:31:10 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/weird-death-bug/542145.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Weird Death Bug</title>
        <dc:creator><![CDATA[@eclipse_rsps eclipse rsps]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/eclipse_rsps">@eclipse_rsps</a> wrote:</p>
          <blockquote>
              <p>Base : Virtue/Vicious Revolution</p>
<p>Revision: 317</p>
<p>Issue: When a player dies, said player respawns in the exact location he/she died at. The player loses items but does not get respawned in edgeville and does not regain prayer or hitpoints.</p>
<p>My giveLife method:</p>
<p>[code]	public void giveLife() {<br>
this.c.isDead = false;<br>
this.c.faceUpdate(-1);<br>
this.c.freezeTimer = 0;<br>
for (int count = 0; count &lt; this.c.godwarsKillCount.length; count++) {<br>
this.c.godwarsKillCount[count] = 0;<br>
}<br>
this.sendFrame126("<a class="mention" href="/u/cya">@cya</a>@" + this.c.godwarsKillCount[0], 16217);<br>
this.sendFrame126("<a class="mention" href="/u/cya">@cya</a>@" + this.c.godwarsKillCount[3], 16216);<br>
this.sendFrame126("<a class="mention" href="/u/cya">@cya</a>@" + this.c.godwarsKillCount[2], 16218);<br>
this.sendFrame126("<a class="mention" href="/u/cya">@cya</a>@" + this.c.godwarsKillCount[1], 16219);<br>
if (this.c.isOwner) {<br>
if (CastleWars.playerIsOnGame(this.c)) {<br>
// Saradomin respawn zone<br>
if (CastleWars.getTeamOneGame().contains(this.c)) {<br>
this.movePlayer(2426, 3076, 1);<br>
// Zamorak respawn zone<br>
}<br>
if (CastleWars.getTeamTwoGame().contains(this.c)) {<br>
this.movePlayer(2371, 3132, 1);<br>
// // Saradomin respawn at waiting zone<br>
}<br>
if (CastleWars.getTeamOne().contains(this.c)) {<br>
CastleObjects.CastleJoinObjects.ZAMORAK<br>
.canLeaveTeam(this.c);<br>
// // Zamorak respawn at waiting zone<br>
}<br>
if (CastleWars.getTeamTwo().contains(this.c)) {<br>
CastleObjects.CastleJoinObjects.ZAMORAK<br>
.canLeaveTeam(this.c);<br>
}<br>
} else {<br>
this.c.teleportToX = GameConstants.RESPAWN_X;<br>
this.c.teleportToY = GameConstants.RESPAWN_Y;<br>
}<br>
for (int i = 0; i &lt; 20; i++) {<br>
if (i == 5) {<br>
continue;<br>
}<br>
this.c.playerLevel[i] = this.getLevelForXP(this.c.playerXP[i]);<br>
this.c.getPA().refreshSkill(i);<br>
}<br>
SavingManager.save(this.c);<br>
this.requestUpdates();<br>
return;</p>
<pre><code>	}
	int e = 0;
	if (!this.c.getPA().inPitsWait() &amp;&amp; !this.c.inFightPits()
			&amp;&amp; !CastleWars.playerIsOnGame(this.c) &amp;&amp; !this.c.inFightCaves()
			&amp;&amp; !this.c.inDung() &amp;&amp; !this.c.inFunPk() &amp;&amp; !this.c.inPcGame()
			&amp;&amp; !this.c.inDuelTournament() &amp;&amp; !this.c.inDuelArenaGame()) {
		this.c.getItems().resetKeepItems();
		if (!this.c.isSkulled) { // what items to keep
			this.c.getItems().keepItem(0, true);
			this.c.getItems().keepItem(1, true);
			this.c.getItems().keepItem(2, true);
		}
		if (this.c.prayerActive[10]
				&amp;&amp; System.currentTimeMillis() - this.c.lastProtItem &gt; 700) {
			this.c.getItems().keepItem(3, true);
		}
		final List&lt;Integer[]&gt; untradeables = new ArrayList&lt;Integer[]&gt;();
		for (int i = 0; i &lt; this.c.playerEquipment.length; i++) {
			if (!ItemAssistant.tradeable(this.c.playerEquipment[i])) {
				untradeables.add(new Integer[] { this.c.playerEquipment[i],
						this.c.playerEquipmentN[i] });
			}
		}
		for (int i = 0; i &lt; this.c.playerItems.length; i++) {
			if (!ItemAssistant.tradeable(this.c.playerItems[i] - 1)) {
				untradeables.add(new Integer[] { this.c.playerItems[i] - 1,
						this.c.playerItemsN[i] });
			}
		}
		// c.sendMessage("isInTournament: "+c.isInTournament+", inDuelTournament(): "+c.inDuelTournament()+", InDuelTournLobby: "+c.inDuelTournLobby());
		this.c.getItems().dropAllItems(); // drop all items
		this.c.getItems().deleteAllItems(); // delete all items
		for (final Integer[] item : untradeables) {
			this.c.getItems().addItem(item[0], item[1]);
		}
		if (!this.c.isSkulled) { // add the kept items once we finish
									// deleting and dropping them
			for (int i1 = 0; i1 &lt; 3; i1++) {
				if (this.c.itemKeptId[i1] &gt; 0) {
					this.c.getItems().addItem(this.c.itemKeptId[i1], 1);
				}
			}
		}
		if (this.c.prayerActive[10]) { // if we have protect items
			if (this.c.itemKeptId[3] &gt; 0) {
				this.c.getItems().addItem(this.c.itemKeptId[3], 1);
			}
		}
		this.c.getItems().resetKeepItems();
	} else if (this.c.inDung()) {
		this.c.dungDeaths++;
		this.c.getPA().sendFrame126(
				"@or2@Deaths: " + this.c.dungDeaths + "", 26255);
	} else if (this.c.inPcGame()) {
		this.movePlayer(2656, 2608, 0);
		for (int i = 0; i &lt; 20; i++) {
			this.c.playerLevel[i] = this.getLevelForXP(this.c.playerXP[i]);
			this.c.getPA().refreshSkill(i);
		}
		SavingManager.save(this.c);
		this.requestUpdates();
		if (this.c.familiarID &gt; 0) {
			Summoning.dismissFamiliar(this.c, true, true);
		}
		Prayer.closeAllPrayers(this.c);
		this.c.prayer = this.c.maxPrayer();
		this.c.getPA().refreshSkill(5);
		for (int i = 0; i &lt; 23; i++) {
			if (i == 5) {
				continue;
			}
			this.c.playerLevel[i] = this.getLevelForXP(this.c.playerXP[i]);
			this.c.getPA().refreshSkill(i);
		}
		this.c.playerLevel[23] = this
				.getLevelForDungXP(this.c.playerXP[23]);

		if (this.c.floor &gt; 0 &amp;&amp; this.c.inDung()) {
			Dungeoneering.deathRespawn(this.c);
		} else if (this.c.getDuelState().equals(Duel_State.FIGHT)
				&amp;&amp; this.c.getDuelSesion().rival.getDuelState().equals(
						Duel_State.FIGHT)) {
			this.c.getDuelSesion().rival.getDuelSesion().winDuel();
		} else if (this.c.pitsStatus == 1) {
			this.movePlayer(2399, 5173, 0);
		} else if (CastleWars.playerIsOnGame(this.c)) {
			if (Flags.manageFlagActions(this.c, -1, this.c.getX(),
					this.c.getY(), this.c.heightLevel, PLAYER_ACTION.DROP)) {
				;
			}
			// Saradomin respawn zone
			if (CastleWars.getTeamOneGame().contains(this.c)) {
				this.movePlayer(2426, 3076, 1);
				// Zamorak respawn zone
			}
			if (CastleWars.getTeamTwoGame().contains(this.c)) {
				this.movePlayer(2371, 3132, 1);
				// Saradomin respawn at waiting zone
			}
			if (CastleWars.getTeamOne().contains(this.c)) {
				CastleObjects.CastleJoinObjects.ZAMORAK
						.canLeaveTeam(this.c);
				// Zamorak respawn at waiting zone
			}
			if (CastleWars.getTeamTwo().contains(this.c)) {
				CastleObjects.CastleJoinObjects.ZAMORAK
						.canLeaveTeam(this.c);
			}
		} else if (this.c.inFightCaves()) {
			this.c.getPA().resetTzhaar();
		} else if (this.c.inFightPits()) {
			FightPits.handleDeath(this.c);
		} else {
			this.movePlayer(GameConstants.START_LOCATION_X,
					GameConstants.START_LOCATION_Y, 0);
		}
		// PlayerSaving.getSingleton().requestSave(c.playerId);
		SavingManager.save(this.c);
		this.c.getCombat().resetPlayerAttack();
		this.resetAnimation();
		this.c.startAnimation(65535);
		this.frame1();
		this.resetTb();
		this.refreshAll();
		this.c.isSkulled = false;
		this.c.attackedPlayers.clear();
		this.c.headIconPk = -1;
		this.c.skullTimer = -1;
		this.c.damageTaken = new int[GameConstants.MAX_PLAYERS];
		this.c.getPA().requestUpdates();
		this.removeAllWindows();
		this.c.tradeResetNeeded = true;
		if (this.c.tourneyStatus == 0) {
			this.c.tourneyStatus = 0;
		}
		final Client o = (Client) PlayerHandler.players[this.c.duelingWith];
		if (this.c.isInTournament) {
			o.getTradeAndDuel().duelVictory();
		}
		if (!this.c.inPcGame() || !this.c.inFightCaves()
				|| !this.c.inFightPits()) {
			this.c.getPA().walkableInterface(-1);
		}
		for (int i = 0; i &lt; this.c.prayerActive.length; i++) {
			if (this.c.prayerActive[i]) {
				this.c.prayerActive[i] = false;
			}
		}
		this.c.playerLevel[5] = this.c.getPA().getLevelForXP(
				this.c.playerXP[5]);
		this.c.getPA().refreshSkill(5);
		this.c.updateRequired = true;
	}
}[/code]</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/weird-death-bug/542145/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/weird-death-bug/542145/1</link>
        <pubDate>Sun, 13 Apr 2014 23:31:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-542145-1</guid>
        <source url="https://forum.moparisthebest.com/t/weird-death-bug/542145.rss">Weird Death Bug</source>
      </item>
  </channel>
</rss>
