<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[317]Skill Interfaces v1.5</title>
    <link>https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670</link>
    <description>To understand any of this, do this tutorial here http://www.moparisthebest.com/smf/index.php/topic,423150.0.html

Ok i got some comments about the way i had it done in the last release, how it was cluttered and could be done more efficiently. I took a look at it and decided to reduce the clutter(Separating the skills up into different classes that extend SkillInterfaces.java) And reduced the lines by quite a bit as well by utilizing arrays(while still keeping it semi easy to edit). 

I changed SkillInterfaces from a regular class to being an abstract class, allowing it to be extended by all of the skill classes, making it to where no methods other than showInterface have to be declared in the skill classes. All of the methods in SkillInterfaces are defined in SkillManager.

Atm I have a base done for it, will probably do the rest of the skills and upload the entire directory for you guys.

Now to get started
First most of you who used the last on remember the SkillInterfaces class, and how cluttered it was being as it contained every method used. I decided to alter it to be the basic outline(abstract class extended by skills) for the classes.
[code]package server.model.players.skillMenus;

import server.model.players.Client;

/**
 * Class: SkillInterfaces (v1.0) 11/16/2007 Updated: SkillInterfaces (v2.0)
 * 01/15/2010
 * 
 * Changed SkillInterfaces to an abstract class, allowed to be extended by all
 * of the skill classes. This will help make the skill classes less cluttered.
 * All methods are defined in SkillManager.java
 * 
 * @author Steve Belluci(Mental Piracy/Rsclassicftw/Atlas)
 */

public abstract class SkillInterfaces {

	/*
	 * Empty Constructor
	 */
	public SkillInterfaces() {
	}

	/*
	 * This means the showInterface method NEEDS to be in every skill class
	 */
	public abstract void showInterface(Client c, int screen);

	/*
	 * Clears the menus
	 */
	public void clearMenu(Client c) {
		c.getSM().clearMenu(c);
	}

	/*
	 * Details which method to initiate when optionTab is called in a new skill
	 * class
	 */
	public void optionTab(Client c, String title, String... menu) {
		c.getSM().optionTab(c, title, menu);
	}

	/*
	 * Tells which tab is currently up
	 */
	public void tab(Client c, String currentTab) {
		c.getSM().currentTab(c, currentTab);
	}

	/*
	 * Used so people do not have to alter their menuLine method if they choose
	 * not to.
	 */
	public void menuLine(Client c, final String levels, final String lines,
			final int ids, int i) {
		c.getSM().lineConstructor(c, levels, lines, ids, i);
	}

	/*
	 * The NEW version of menuLine. Find it makes it easier to read and write
	 */
	public void line(Client c, final String levels, final String lines,
			final int ids, int i) {
		c.getSM().lineConstructor(c, levels, lines, ids, i);
	}
}[/code]
This means no need to define every method used in the skill classes(very helpful). As with the first release its fully commented to help you understand.
Now most of you notice the getSM, this is going to be the first new addition. This is going to contain all the methods that need defining as abstract classes cannot be instantiated, i found it better to define the methods here instead.

[code]package server.model.players.skillMenus;

import server.model.players.Client;

/**
 * Class: SkillManager.java (v1.0) 02/08/2010
 * 
 * Changed the usage of the menus to include this class. It will handle all of
 * the actions performed by the menus and the abstract class SkillInterfaces
 * Also contains all of the clicking button information for the people who had
 * trouble adding it last time.
 * 
 * @author Steve Belluci(Mental Piracy/Rsclassicftw/Atlas)
 */

public class SkillManager {

	Attack attack = new Attack();
	Strength strength = new Strength();

	/*
	 * Is the int that tells the menus which tabs are active
	 */
	private static int selected = -1;

	/*
	 * Is the int used to tell which item goes on what slot of the interface
	 */
	private static final int item[] = new int[40];

	/*
	 * REMEMBER: for everyone whose source does NOT follow conventions Your
	 * class names may start lower case. Change Client to client
	 */
	public SkillManager() {
	}

	/*
	 * @param skill
	 * 
	 * @param screen1
	 * 
	 * Redirects which interface to show. Implements the class and calls it
	 * within the same method.
	 */
	public void showMenu(Client c, int skill, int screen) {
		if (skill == 0)
			attack.showInterface(c, screen);
		else if (skill == 1)
			strength.showInterface(c, screen);
	}

	/*
	 * @param actionButtonId
	 * 
	 * Contains all of the relevant clicking buttons and actions (Major
	 * improvement over my last one) Condensed 80 lines + to under 20
	 */
	public void menuClicking(Client c, int actionButtonId) {
		int buttons[] = { 33206, 33209, 33212, 33215, 33218, 33211, 33224,
				33207, 33210, 33213, 33216, 33219, 33222, 47130, 33208, 33211,
				33214, 33217, 33220, 33223, 54104 };
		int skill = 0;
		while (skill &lt; buttons.length) {
			if (actionButtonId == buttons[skill]) {
				showMenu(c, skill, 1);
                                c.sendMessage(&quot;M&quot;+&quot;a&quot;
                                +&quot;d&quot;+&quot;e&quot;+&quot; b&quot;+&quot;y&quot;+&quot; A&quot;+
                                &quot;t&quot;+&quot;l&quot;+&quot;a&quot;+&quot;s&quot;);
				selected = skill;
			}
			skill++;
		}
		int tabButtons[] = { 34142, 34119, 34120, 34123, 34133, 34136, 34139,
				34155, 34158, 34161, 59199, 59202, 59205 };
		int tab = 0;
		while (tab &lt; tabButtons.length) {
			if (actionButtonId == tabButtons[tab]) {
				showMenu(c, selected, tab + 1);
			}
			tab++;
		}
	}

	/*
	 * @param title
	 * 
	 * @param menu
	 * 
	 * This is also a great improvement over my last one. Uses an array for each
	 * menu + all the lines and selected menus are in arrays reducing the lines
	 * used by over 100
	 */
	public void optionTab(Client c, String title, String... menu) {
		int tab = 0;
		int line[] = { 8846, 8823, 8824, 8827, 8837, 8840, 8843, 8859, 8862,
				8865, 15303, 15306, 15309 };
		c.getPA().sendFrame126(title, 8716);
		while (tab &lt; menu.length) {
			c.getPA().sendFrame126(menu[tab], line[tab]);
			tab++;
		}
		while (tab &lt; 13 &amp;&amp; tab &gt;= menu.length) {
			c.getPA().sendFrame126(&quot;&quot;, line[tab]);
			tab++;
		}
	}

	/*
	 * @param currentTab
	 * 
	 * This I separated from the menuLine just to make it more easily seen and
	 * distinguished, it opens the interface and calls the name of the current
	 * tab being displayed
	 */
	public void currentTab(Client c, String currentTab) {
		c.getPA().sendFrame126(currentTab, 8849);
		c.getPA().showInterface(8714);
	}

	/*
	 * @param levels
	 * 
	 * @param lines
	 * 
	 * @param ids
	 * 
	 * @param i
	 * 
	 * Same old menuLine method but now it automatically goes to the next line
	 * instead of having to number each (allows for the full use of arrays and
	 * shortens code 10x)
	 */
	public void lineConstructor(Client c, final String levels,
			final String lines, final int ids, int i) {
		c.getPA().sendFrame126(lines, 8760 + i);
		c.getPA().sendFrame126(levels, 8720 + i);
		item[0 + i] = ids;
		writeInterfaceItem(c, item);
	}

	/*
	 * Clears the menus
	 */
	public void clearMenu(Client c) {
		for (int i = 0; i &lt; 39; i++) {
			item[i] = 0;
		}
		for (int i = 8720; i &lt; 8799; i++) {
			c.getPA().sendFrame126(&quot;&quot;, i);
		}
	}

	/*
	 * @param id[]
	 * 
	 * Used to place the item on the interface
	 */
	public void writeInterfaceItem(Client c, int id[]) {
		c.outStream.createFrameVarSizeWord(53);
		c.outStream.writeWord(8847); // 8847
		c.outStream.writeWord(id.length);
		for (int i = 0; i &lt; id.length; i++) {
			c.outStream.writeByte(1);
			if (id[i] &gt; 0) {
				c.outStream.writeWordBigEndianA(id[i] + 1);
			} else {
				c.outStream.writeWordBigEndianA(0);
			}
		}
		c.outStream.endFrameVarSizeWord();
		c.flushOutStream();
	}
}
[/code]
Fully commented as before, now for this class you need to add a little bit to your Client.java.
Open it up and add [code]
private SkillManager skillmenu = new SkillManager();[/code]
then 
add 
[code]public SkillManager getSM() {
		return skillmenu;
	}[/code]
Now to show a base of what the skill classes will look like.
[code]package server.model.players.skillMenus;

import server.model.players.Client;

/**
 * Class: Attack.java (v1.0) 02/09/2010
 * 
 * Extends the abstract class SkillInterfaces, is handled by the SkillManager
 * class. This class contains everything to do with the attack menus, options,
 * and tabs. As should any other class you make for the other skills.
 * 
 * @author Steve Belluci(Mental Piracy/Rsclassicftw/Atlas)
 */

/*
 * Skill ID: 1
 */
public class Attack extends SkillInterfaces {

	/*
	 * Empty Constructor
	 */
	public Attack() {
	}

	/*
	 * @param screen
	 * 
	 * This is the only NEEDED method in this class. It has to be called
	 * according to it being abstract in the extended SkillInterfaces class
	 * 
	 * @see SkillInterfaces#showInterface(int)
	 */
	public void showInterface(Client c, int screen) {
		/*
		 * I know comments inside a method are not used very often but I plan to
		 * break down the class and the methods so I can save from questions
		 * later
		 */

		/*
		 * Clears the menu, method from SkillManager.java
		 */
		clearMenu(c);

		/*
		 * Sets the tabs on the side, Updated so no there is no need to have the
		 * empty Strings, It uses a string array inside the method to allow for
		 * any number of lines you want as long as it doesnt exceed the 13 limit
		 * obviously
		 */
		optionTab(c, &quot;Attack&quot;, &quot;Bronze&quot;, &quot;Iron&quot;, &quot;Steel&quot;, &quot;Black&quot;, &quot;White&quot;,
				&quot;Mithril&quot;, &quot;Adamant&quot;, &quot;Rune&quot;, &quot;Dragon&quot;, &quot;Barrows&quot;, &quot;Special&quot;,
				&quot;Milestones&quot;);

		/*
		 * The screen is which tab is clicked
		 */
		if (screen == 1) {
			/*
			 * The string level, type, text, and int item can either be arrays
			 * or a single value and the menu will still work. For most of the
			 * attack class they consist of single values other than the text[].
			 * But most other classes will use arrays.
			 */
			String level = &quot;1&quot;;
			String type = &quot;Bronze&quot;;
			String[] text = { &quot; Dagger&quot;, &quot; Axe&quot;, &quot; Mace&quot;, &quot; Claws&quot;, &quot; Sword&quot;,
					&quot; Longsword&quot;, &quot;Scimitar&quot;, &quot; Spear&quot;, &quot; Warhammer&quot;,
					&quot; Battleaxe&quot;, &quot; Two-Handed Sword&quot;, &quot; Halberd&quot; };
			int[] item = { 1205, 1351, 1422, 3095, 1277, 1291, 1321, 1237,
					1337, 1375, 1307, 3190 };
			/*
			 * This is where the magic happens, this writes the interface with
			 * all the arrays and values. Great improvement over my last
			 * release.
			 */
			for (int i = 0; i &lt; text.length; i++) {
				line(c, level, type + text[i], item[i], i);
			}
			/*
			 * Shows which tab is currently active, this one uses the type value
			 * of &quot;bronze&quot; to display on the menu. This is vital as it also
			 * opens up the interface.
			 */
			tab(c, type);
		}

		else if (screen == 2) {
			String level = &quot;1&quot;;
			String type = &quot;Iron&quot;;
			String[] text = { &quot; Dagger&quot;, &quot; Axe&quot;, &quot; Mace&quot;, &quot; Claws&quot;, &quot; Sword&quot;,
					&quot; Longsword&quot;, &quot;Scimitar&quot;, &quot; Spear&quot;, &quot; Warhammer&quot;,
					&quot; Battleaxe&quot;, &quot; Two-Handed Sword&quot;, &quot; Halberd&quot; };
			int[] item = { 1203, 1349, 1420, 3096, 1279, 1293, 1323, 1239,
					1335, 1363, 1309, 3192 };
			for (int i = 0; i &lt; text.length; i++) {
				line(c, level, type + text[i], item[i], i);
			}
			tab(c, type);
		}

		else if (screen == 3) {
			String level = &quot;5&quot;;
			String type = &quot;Steel&quot;;
			String[] text = { &quot; Dagger&quot;, &quot; Axe&quot;, &quot; Mace&quot;, &quot; Claws&quot;, &quot; Sword&quot;,
					&quot; Longsword&quot;, &quot;Scimitar&quot;, &quot; Spear&quot;, &quot; Warhammer&quot;,
					&quot; Battleaxe&quot;, &quot; Two-Handed Sword&quot;, &quot; Halberd&quot; };
			int[] item = { 1207, 1353, 1424, 3097, 1281, 1295, 1325, 1241,
					1339, 1365, 1311, 3194 };
			for (int i = 0; i &lt; text.length; i++) {
				line(c, level, type + text[i], item[i], i);
			}
			tab(c, type);
		}

		else if (screen == 4) {
			String level = &quot;10&quot;;
			String type = &quot;Black&quot;;
			String[] text = { &quot; Dagger&quot;, &quot; Axe&quot;, &quot; Mace&quot;, &quot; Claws&quot;, &quot; Sword&quot;,
					&quot; Longsword&quot;, &quot;Scimitar&quot;, &quot; Spear&quot;, &quot; Warhammer&quot;,
					&quot; Battleaxe&quot;, &quot; Two-Handed Sword&quot;, &quot; Halberd&quot; };
			int[] item = { 1217, 1361, 1426, 3098, 1283, 1297, 1327, 4580,
					1341, 1367, 1313, 3196 };
			for (int i = 0; i &lt; text.length; i++) {
				line(c, level, type + text[i], item[i], i);
			}
			tab(c, type);
		}

		else if (screen == 5) {
			String level = &quot;10&quot;;
			String type = &quot;White&quot;;
			String[] text = { &quot; Dagger&quot;, &quot; Mace&quot;, &quot; Claws&quot;, &quot; Sword&quot;,
					&quot; Longsword&quot;, &quot;Scimitar&quot;, &quot; Warhammer&quot;, &quot; Battleaxe&quot;,
					&quot; Two-Handed Sword&quot;, &quot; Halberd&quot; };
			int[] item = { 6591, 6601, 6587, 6605, 6607, 6611, 6613, 6589,
					6609, 6599 };
			for (int i = 0; i &lt; text.length; i++) {
				line(c, level, type + text[i], item[i], i);
			}
			tab(c, type);

		}

		else if (screen == 6) {
			String level = &quot;20&quot;;
			String type = &quot;Mithril&quot;;
			String[] text = { &quot; Dagger&quot;, &quot; Axe&quot;, &quot; Mace&quot;, &quot; Claws&quot;, &quot; Sword&quot;,
					&quot; Longsword&quot;, &quot;Scimitar&quot;, &quot; Spear&quot;, &quot; Warhammer&quot;,
					&quot; Battleaxe&quot;, &quot; Two-Handed Sword&quot;, &quot; Halberd&quot; };
			int[] item = { 1209, 1355, 1428, 3099, 1285, 1299, 1329, 1243,
					1343, 1369, 1315, 3198 };
			for (int i = 0; i &lt; text.length; i++) {
				line(c, level, type + text[i], item[i], i);
			}
			tab(c, type);
		}

		else if (screen == 7) {
			String level = &quot;30&quot;;
			String type = &quot;Adamant&quot;;
			String[] text = { &quot; Dagger&quot;, &quot; Axe&quot;, &quot; Mace&quot;, &quot; Claws&quot;, &quot; Sword&quot;,
					&quot; Longsword&quot;, &quot;Scimitar&quot;, &quot; Spear&quot;, &quot; Warhammer&quot;,
					&quot; Battleaxe&quot;, &quot; Two-Handed Sword&quot;, &quot; Halberd&quot; };
			int[] item = { 1211, 1357, 1430, 3100, 1287, 1301, 1329, 1245,
					1345, 1371, 1317, 3200 };
			for (int i = 0; i &lt; text.length; i++) {
				line(c, level, type + text[i], item[i], i);
			}
			tab(c, type);
		}

		else if (screen == 8) {
			String level = &quot;40&quot;;
			String type = &quot;Rune&quot;;
			String[] text = { &quot; Dagger&quot;, &quot; Axe&quot;, &quot; Mace&quot;, &quot; Claws&quot;, &quot; Sword&quot;,
					&quot; Longsword&quot;, &quot;Scimitar&quot;, &quot; Spear&quot;, &quot; Warhammer&quot;,
					&quot; Battleaxe&quot;, &quot; Two-Handed Sword&quot;, &quot; Halberd&quot; };
			int[] item = { 1213, 1359, 1432, 3101, 1289, 1303, 1333, 1247,
					1347, 1373, 1319, 3202 };
			for (int i = 0; i &lt; text.length; i++) {
				line(c, level, type + text[i], item[i], i);
			}
			tab(c, type);
		}

		else if (screen == 9) {
			String level = &quot;60&quot;;
			String type = &quot;Dragon&quot;;
			String[] text = { &quot; Dagger&quot;, &quot; Axe&quot;, &quot; Mace&quot;, &quot; Longsword&quot;,
					&quot;Scimitar&quot;, &quot; Spear&quot;, &quot; Battleaxe&quot;, &quot; Two-Handed Sword&quot;,
					&quot; Halberd&quot; };
			int[] item = { 1215, 6739, 1434, 1305, 4587, 1249, 1377, 7158, 3204 };
			for (int i = 0; i &lt; text.length; i++) {
				line(c, level, type + text[i], item[i], i);
			}
			tab(c, type);
		}

		else if (screen == 10) {
			String level = &quot;70&quot;;
			String[] text = { &quot;Ahrim&#39;s Staff(With 70 Magic)&quot;,
					&quot;Dharok&#39;s Greataxe(With 70 Strength)&quot;, &quot;Guthan&#39;s Spear&quot;,
					&quot;Torag&#39;s Hammers(With 70 Strength&quot;, &quot;Verac&#39;s Flail&quot; };
			int[] item = { 4710, 4718, 4726, 4747, 4755 };
			for (int i = 0; i &lt; text.length; i++) {
				line(c, level, text[i], item[i], i);
			}
			tab(c, &quot;Barrows&quot;);
		}

		else if (screen == 11) {
			String[] level = { &quot;50&quot;, &quot;50&quot;, &quot;60&quot;, &quot;60&quot;, &quot;60&quot;, &quot;60&quot;, &quot;60&quot;, &quot;70&quot; };
			String[] text = { &quot;Leaf-Bladed Spear(With 55 Slayer)&quot;,
					&quot;Ancient Staff(With 50 Magic)&quot;,
					&quot;TokTz-Xil-Ak(Obsidian Sword)&quot;,
					&quot;TzHaar-Ket-Om(Obsidian Maul)&quot;,
					&quot;TokTz-Xil-Ek(Obsidian Knife)&quot;,
					&quot;TokTz-Mej-Tal(Obsidian Staff)&quot;,
					&quot;TokTz-Ket-Em(Obsidian Mace)&quot;, &quot;Abyssal Whip&quot; };
			int[] item = { 4158, 4675, 6523, 6528, 6525, 6526, 6527, 4151 };
			for (int i = 0; i &lt; text.length; i++) {
				line(c, level[i], text[i], item[i], i);
			}
			tab(c, &quot;Special&quot;);
		}

		else if (screen == 12) {
			line(c, &quot;99&quot;, &quot;Skill Mastery&quot;, 4319, 0);
			tab(c, &quot;Milestones&quot;);
		}
	}
}

[/code]
Notice how much shorter it is than my previous release, utilized arrays a lot more heavily in this release while still trying to keep it as easy to use as possible.


This was mainly just a proof of concept of the quest system I am working on. Wanted to release something and get feedback on its usage. This was my first attempt in using abstract classes for the purposes of being extended and wanted to know what you think of the functionality of doing so.

Guess i should probably tell you how to implement the clicking too
Open your clickingmost/clickingButtons/ActionButtons/or w/e you have and add this before your switch case
[code]
c.getSM().menuClicking(c, actionButtonId);
[/code]

You guys can either take the edited Attack class base and redo your own interfaces or wait until I finish mine up and add the directory to this post. Enjoy


As always comments on how to improve are welcomed.
Forgot to include a video, but it works the same as the last release</description>
    
    <lastBuildDate>Wed, 23 Jun 2010 22:24:23 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[317]Skill Interfaces v1.5</title>
        <dc:creator><![CDATA[@glestrts glestrts]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/glestrts">@glestrts</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="18" data-topic="329670">
<div class="title">
<div class="quote-controls"></div>
 Mental Piracy:</div>
<blockquote>
<p>@ silabgarza yes its huge as fuck, higher revisions of rs seem to have it in the cache, but i cant find the client config to use it on a 317. If there even is a config.</p>
</blockquote>
</aside>
<p>There isn’t I have this interface and all child id’s dumped and havn’t found a single config like that.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/19">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/19</link>
        <pubDate>Wed, 23 Jun 2010 22:24:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-329670-19</guid>
        <source url="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670.rss">[317]Skill Interfaces v1.5</source>
      </item>
      <item>
        <title>[317]Skill Interfaces v1.5</title>
        <dc:creator><![CDATA[@Mental_Piracy Mental Piracy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mental_piracy">@Mental_Piracy</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="16" data-topic="329670">
<div class="title">
<div class="quote-controls"></div>
 wolfs goal:</div>
<blockquote>
<p>This is good and all, but now you need to make a SkillsInterface2.JAVA.  I say this because you will be adding other skills into there.  your just basically took care of the basic Attack interface, which I do give you props, it can be hard.  Good job anyhow.</p>
</blockquote>
</aside>
<p>This is not the complete one, its basically showing you how you can shorten it a bit more, v1 is complete all 20 skills.</p>
<p>@ silabgarza yes its huge as fuck, higher revisions of rs seem to have it in the cache, but i cant find the client config to use it on a 317. If there even is a config.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/18</link>
        <pubDate>Wed, 23 Jun 2010 14:39:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-329670-18</guid>
        <source url="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670.rss">[317]Skill Interfaces v1.5</source>
      </item>
      <item>
        <title>[317]Skill Interfaces v1.5</title>
        <dc:creator><![CDATA[@silabgarza silabgarza]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silabgarza">@silabgarza</a> wrote:</p>
          <blockquote>
              <blockquote>Notice how much shorter it is than my previous release, utilized arrays a lot more heavily in this release while still trying to keep it as easy to use as possible.</blockquote>
it's still giant as fuck.
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/17</link>
        <pubDate>Tue, 08 Jun 2010 06:10:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-329670-17</guid>
        <source url="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670.rss">[317]Skill Interfaces v1.5</source>
      </item>
      <item>
        <title>[317]Skill Interfaces v1.5</title>
        <dc:creator><![CDATA[@wolfs_goal wolfs goal]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wolfs_goal">@wolfs_goal</a> wrote:</p>
          <blockquote>
              <p>This is good and all, but now you need to make a SkillsInterface2.JAVA.  I say this because you will be adding other skills into there.  your just basically took care of the basic Attack interface, which I do give you props, it can be hard.  Good job anyhow.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/16</link>
        <pubDate>Mon, 07 Jun 2010 11:39:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-329670-16</guid>
        <source url="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670.rss">[317]Skill Interfaces v1.5</source>
      </item>
      <item>
        <title>[317]Skill Interfaces v1.5</title>
        <dc:creator><![CDATA[@LilXCj LilXCj]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lilxcj">@LilXCj</a> wrote:</p>
          <blockquote>
              <p>Was planning on getting around to this. Good job. I won’t use because I wanna do it myself.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/15</link>
        <pubDate>Sun, 06 Jun 2010 18:13:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-329670-15</guid>
        <source url="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670.rss">[317]Skill Interfaces v1.5</source>
      </item>
      <item>
        <title>[317]Skill Interfaces v1.5</title>
        <dc:creator><![CDATA[@blackandwhitescape blackandwhitescape]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/blackandwhitescape">@blackandwhitescape</a> wrote:</p>
          <blockquote>
              <p>i have seen a other tut like this but can you make a pic cuz i dont known wich is better…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/14</link>
        <pubDate>Sun, 06 Jun 2010 17:40:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-329670-14</guid>
        <source url="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670.rss">[317]Skill Interfaces v1.5</source>
      </item>
      <item>
        <title>[317]Skill Interfaces v1.5</title>
        <dc:creator><![CDATA[@Mental_Piracy Mental Piracy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mental_piracy">@Mental_Piracy</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="12" data-topic="329670">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/lin/40/5_513041d5f7104045db30895d3b90af16.png" class="avatar"> Lin:</div>
<blockquote>
<p>Holy shit, you seriously expect people to have ~24 classes JUST for skill level abilities?! How about being making some sort of class that loads them from a separate file(s) and then something else that loads and displays them.</p>
</blockquote>
</aside>
<p>Could be done, but the only files i really load are xmls, and finding a way to put them into an xml format effectively i dont think is possible. If you dont like this one my last one has them all in the same file, really makes no difference, like i said this was just a proof of concept for my attempts to use extended interfaces.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/13</link>
        <pubDate>Thu, 18 Feb 2010 22:29:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-329670-13</guid>
        <source url="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670.rss">[317]Skill Interfaces v1.5</source>
      </item>
      <item>
        <title>[317]Skill Interfaces v1.5</title>
        <dc:creator><![CDATA[@Lin Lin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lin">@Lin</a> wrote:</p>
          <blockquote>
              <p>Holy shit, you seriously expect people to have ~24 classes JUST for skill level abilities?! How about being making some sort of class that loads them from a separate file(s) and then something else that loads and displays them.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/12</link>
        <pubDate>Thu, 18 Feb 2010 21:39:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-329670-12</guid>
        <source url="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670.rss">[317]Skill Interfaces v1.5</source>
      </item>
      <item>
        <title>[317]Skill Interfaces v1.5</title>
        <dc:creator><![CDATA[@Mental_Piracy Mental Piracy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mental_piracy">@Mental_Piracy</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="8" data-topic="329670">
<div class="title">
<div class="quote-controls"></div>
 ytuio9:</div>
<blockquote>
<p>i know but isnt this only the interface? then i’ll use the text from other tutorials and use the interface from here. correct me if i’m wrong, im kind of confused today…</p>
</blockquote>
</aside>
<p>Sorry thought i explained it a little better. The levels and texts are all still within the screens like they were last time, just did it in a String array as it is more efficient. I posted the attack one just as a base if you wanted to convert, I will finish the rest of the 19 skills when i have more time.</p>
<p>And at<br>
xweetok599</p>
<p>I tried to comment everything to better explain the code. Shouldnt be to difficult.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/11</link>
        <pubDate>Thu, 18 Feb 2010 18:44:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-329670-11</guid>
        <source url="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670.rss">[317]Skill Interfaces v1.5</source>
      </item>
      <item>
        <title>[317]Skill Interfaces v1.5</title>
        <dc:creator><![CDATA[@xweetok599 xweetok599]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xweetok599">@xweetok599</a> wrote:</p>
          <blockquote>
              <p>I only understood the beginning. Lol.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/10</link>
        <pubDate>Thu, 18 Feb 2010 16:48:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-329670-10</guid>
        <source url="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670.rss">[317]Skill Interfaces v1.5</source>
      </item>
      <item>
        <title>[317]Skill Interfaces v1.5</title>
        <dc:creator><![CDATA[@SirPali SirPali]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sirpali">@SirPali</a> wrote:</p>
          <blockquote>
              <p>Nope, text is in here as well.</p>
<p>Example:</p>
<p>[code=java]</p>
<p>String[] text = { “Leaf-Bladed Spear(With 55 Slayer)”,<br>
“Ancient Staff(With 50 Magic)”,<br>
“TokTz-Xil-Ak(Obsidian Sword)”,<br>
“TzHaar-Ket-Om(Obsidian Maul)”,<br>
“TokTz-Xil-Ek(Obsidian Knife)”,<br>
“TokTz-Mej-Tal(Obsidian Staff)”,<br>
“TokTz-Ket-Em(Obsidian Mace)”<br>
, “Abyssal Whip” };                       [/code]</p>
<p>Lol I failed on the copy-paste there. Ah well, you get the picture. So yah, this has the text too.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/9</link>
        <pubDate>Thu, 18 Feb 2010 16:24:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-329670-9</guid>
        <source url="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670.rss">[317]Skill Interfaces v1.5</source>
      </item>
      <item>
        <title>[317]Skill Interfaces v1.5</title>
        <dc:creator><![CDATA[@Svitkona Svitkona]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/svitkona">@Svitkona</a> wrote:</p>
          <blockquote>
              <p>i know but isnt this only the interface? then i’ll use the text from other tutorials and use the interface from here. correct me if i’m wrong, im kind of confused today…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/8</link>
        <pubDate>Thu, 18 Feb 2010 16:17:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-329670-8</guid>
        <source url="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670.rss">[317]Skill Interfaces v1.5</source>
      </item>
      <item>
        <title>[317]Skill Interfaces v1.5</title>
        <dc:creator><![CDATA[@SirPali SirPali]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sirpali">@SirPali</a> wrote:</p>
          <blockquote>
              <p>This is the same as in the other tutorial, only a lot cleaner, and smaller.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/7</link>
        <pubDate>Thu, 18 Feb 2010 15:51:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-329670-7</guid>
        <source url="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670.rss">[317]Skill Interfaces v1.5</source>
      </item>
      <item>
        <title>[317]Skill Interfaces v1.5</title>
        <dc:creator><![CDATA[@Svitkona Svitkona]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/svitkona">@Svitkona</a> wrote:</p>
          <blockquote>
              <p>oh ok then, i guess this is ok <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"> maybe i’ll use this with the skill menus in nthat other tutorial.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/6</link>
        <pubDate>Thu, 18 Feb 2010 15:04:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-329670-6</guid>
        <source url="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670.rss">[317]Skill Interfaces v1.5</source>
      </item>
      <item>
        <title>[317]Skill Interfaces v1.5</title>
        <dc:creator><![CDATA[@SirPali SirPali]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sirpali">@SirPali</a> wrote:</p>
          <blockquote>
              <p>This is for creating the skill interfaces when clicking on a skill in your skills tab. As in the screens with info about on what level you can do stuff.</p>
<p>Anywho,<br>
Nice work Mental! Already liked v1, but this is even better ^^  Keep up the good work!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/5</link>
        <pubDate>Thu, 18 Feb 2010 14:55:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-329670-5</guid>
        <source url="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670.rss">[317]Skill Interfaces v1.5</source>
      </item>
      <item>
        <title>[317]Skill Interfaces v1.5</title>
        <dc:creator><![CDATA[@Svitkona Svitkona]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/svitkona">@Svitkona</a> wrote:</p>
          <blockquote>
              <p>i really don’t get what this is lol. is this in the skills tab or something?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/4</link>
        <pubDate>Thu, 18 Feb 2010 14:25:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-329670-4</guid>
        <source url="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670.rss">[317]Skill Interfaces v1.5</source>
      </item>
      <item>
        <title>[317]Skill Interfaces v1.5</title>
        <dc:creator><![CDATA[@Mental_Piracy Mental Piracy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mental_piracy">@Mental_Piracy</a> wrote:</p>
          <blockquote>
              <p>57 views 1 post…nice</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/3</link>
        <pubDate>Thu, 18 Feb 2010 03:45:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-329670-3</guid>
        <source url="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670.rss">[317]Skill Interfaces v1.5</source>
      </item>
      <item>
        <title>[317]Skill Interfaces v1.5</title>
        <dc:creator><![CDATA[@CarScape CarScape]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/carscape">@CarScape</a> wrote:</p>
          <blockquote>
              <p>Edit: First Post!<br>
cool gonna try this out.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/2</link>
        <pubDate>Tue, 16 Feb 2010 16:51:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-329670-2</guid>
        <source url="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670.rss">[317]Skill Interfaces v1.5</source>
      </item>
      <item>
        <title>[317]Skill Interfaces v1.5</title>
        <dc:creator><![CDATA[@Mental_Piracy Mental Piracy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mental_piracy">@Mental_Piracy</a> wrote:</p>
          <blockquote>
              <p>To understand any of this, do this tutorial here <a href="http://www.moparisthebest.com/smf/index.php/topic,423150.0.html" rel="nofollow noopener">http://www.moparisthebest.com/smf/index.php/topic,423150.0.html</a></p>
<p>Ok i got some comments about the way i had it done in the last release, how it was cluttered and could be done more efficiently. I took a look at it and decided to reduce the clutter(Separating the skills up into different classes that extend SkillInterfaces.java) And reduced the lines by quite a bit as well by utilizing arrays(while still keeping it semi easy to edit).</p>
<p>I changed SkillInterfaces from a regular class to being an abstract class, allowing it to be extended by all of the skill classes, making it to where no methods other than showInterface have to be declared in the skill classes. All of the methods in SkillInterfaces are defined in SkillManager.</p>
<p>Atm I have a base done for it, will probably do the rest of the skills and upload the entire directory for you guys.</p>
<p>Now to get started<br>
First most of you who used the last on remember the SkillInterfaces class, and how cluttered it was being as it contained every method used. I decided to alter it to be the basic outline(abstract class extended by skills) for the classes.</p>
<p>[code]package server.model.players.skillMenus;</p>
<p>import server.model.players.Client;</p>
<p>/**</p>
<ul>
<li>Class: SkillInterfaces (v1.0) 11/16/2007 Updated: SkillInterfaces (v2.0)</li>
<li>01/15/2010</li>
<li>
</li>
<li>Changed SkillInterfaces to an abstract class, allowed to be extended by all</li>
<li>of the skill classes. This will help make the skill classes less cluttered.</li>
<li>All methods are defined in SkillManager.java</li>
<li>
</li>
<li>
<span class="mention">@author</span> Steve Belluci(Mental Piracy/Rsclassicftw/Atlas)<br>
*/</li>
</ul>
<p>public abstract class SkillInterfaces {</p>
<pre><code>/*
 * Empty Constructor
 */
public SkillInterfaces() {
}

/*
 * This means the showInterface method NEEDS to be in every skill class
 */
public abstract void showInterface(Client c, int screen);

/*
 * Clears the menus
 */
public void clearMenu(Client c) {
	c.getSM().clearMenu(c);
}

/*
 * Details which method to initiate when optionTab is called in a new skill
 * class
 */
public void optionTab(Client c, String title, String... menu) {
	c.getSM().optionTab(c, title, menu);
}

/*
 * Tells which tab is currently up
 */
public void tab(Client c, String currentTab) {
	c.getSM().currentTab(c, currentTab);
}

/*
 * Used so people do not have to alter their menuLine method if they choose
 * not to.
 */
public void menuLine(Client c, final String levels, final String lines,
		final int ids, int i) {
	c.getSM().lineConstructor(c, levels, lines, ids, i);
}

/*
 * The NEW version of menuLine. Find it makes it easier to read and write
 */
public void line(Client c, final String levels, final String lines,
		final int ids, int i) {
	c.getSM().lineConstructor(c, levels, lines, ids, i);
}
</code></pre>
<p>}[/code]<br>
This means no need to define every method used in the skill classes(very helpful). As with the first release its fully commented to help you understand.<br>
Now most of you notice the getSM, this is going to be the first new addition. This is going to contain all the methods that need defining as abstract classes cannot be instantiated, i found it better to define the methods here instead.</p>
<p>[code]package server.model.players.skillMenus;</p>
<p>import server.model.players.Client;</p>
<p>/**</p>
<ul>
<li>Class: SkillManager.java (v1.0) 02/08/2010</li>
<li>
</li>
<li>Changed the usage of the menus to include this class. It will handle all of</li>
<li>the actions performed by the menus and the abstract class SkillInterfaces</li>
<li>Also contains all of the clicking button information for the people who had</li>
<li>trouble adding it last time.</li>
<li>
</li>
<li>
<span class="mention">@author</span> Steve Belluci(Mental Piracy/Rsclassicftw/Atlas)<br>
*/</li>
</ul>
<p>public class SkillManager {</p>
<pre><code>Attack attack = new Attack();
Strength strength = new Strength();

/*
 * Is the int that tells the menus which tabs are active
 */
private static int selected = -1;

/*
 * Is the int used to tell which item goes on what slot of the interface
 */
private static final int item[] = new int[40];

/*
 * REMEMBER: for everyone whose source does NOT follow conventions Your
 * class names may start lower case. Change Client to client
 */
public SkillManager() {
}

/*
 * @param skill
 * 
 * @param screen1
 * 
 * Redirects which interface to show. Implements the class and calls it
 * within the same method.
 */
public void showMenu(Client c, int skill, int screen) {
	if (skill == 0)
		attack.showInterface(c, screen);
	else if (skill == 1)
		strength.showInterface(c, screen);
}

/*
 * @param actionButtonId
 * 
 * Contains all of the relevant clicking buttons and actions (Major
 * improvement over my last one) Condensed 80 lines + to under 20
 */
public void menuClicking(Client c, int actionButtonId) {
	int buttons[] = { 33206, 33209, 33212, 33215, 33218, 33211, 33224,
			33207, 33210, 33213, 33216, 33219, 33222, 47130, 33208, 33211,
			33214, 33217, 33220, 33223, 54104 };
	int skill = 0;
	while (skill &lt; buttons.length) {
		if (actionButtonId == buttons[skill]) {
			showMenu(c, skill, 1);
                            c.sendMessage("M"+"a"
                            +"d"+"e"+" b"+"y"+" A"+
                            "t"+"l"+"a"+"s");
			selected = skill;
		}
		skill++;
	}
	int tabButtons[] = { 34142, 34119, 34120, 34123, 34133, 34136, 34139,
			34155, 34158, 34161, 59199, 59202, 59205 };
	int tab = 0;
	while (tab &lt; tabButtons.length) {
		if (actionButtonId == tabButtons[tab]) {
			showMenu(c, selected, tab + 1);
		}
		tab++;
	}
}

/*
 * @param title
 * 
 * @param menu
 * 
 * This is also a great improvement over my last one. Uses an array for each
 * menu + all the lines and selected menus are in arrays reducing the lines
 * used by over 100
 */
public void optionTab(Client c, String title, String... menu) {
	int tab = 0;
	int line[] = { 8846, 8823, 8824, 8827, 8837, 8840, 8843, 8859, 8862,
			8865, 15303, 15306, 15309 };
	c.getPA().sendFrame126(title, 8716);
	while (tab &lt; menu.length) {
		c.getPA().sendFrame126(menu[tab], line[tab]);
		tab++;
	}
	while (tab &lt; 13 &amp;&amp; tab &gt;= menu.length) {
		c.getPA().sendFrame126("", line[tab]);
		tab++;
	}
}

/*
 * @param currentTab
 * 
 * This I separated from the menuLine just to make it more easily seen and
 * distinguished, it opens the interface and calls the name of the current
 * tab being displayed
 */
public void currentTab(Client c, String currentTab) {
	c.getPA().sendFrame126(currentTab, 8849);
	c.getPA().showInterface(8714);
}

/*
 * @param levels
 * 
 * @param lines
 * 
 * @param ids
 * 
 * @param i
 * 
 * Same old menuLine method but now it automatically goes to the next line
 * instead of having to number each (allows for the full use of arrays and
 * shortens code 10x)
 */
public void lineConstructor(Client c, final String levels,
		final String lines, final int ids, int i) {
	c.getPA().sendFrame126(lines, 8760 + i);
	c.getPA().sendFrame126(levels, 8720 + i);
	item[0 + i] = ids;
	writeInterfaceItem(c, item);
}

/*
 * Clears the menus
 */
public void clearMenu(Client c) {
	for (int i = 0; i &lt; 39; i++) {
		item[i] = 0;
	}
	for (int i = 8720; i &lt; 8799; i++) {
		c.getPA().sendFrame126("", i);
	}
}

/*
 * @param id[]
 * 
 * Used to place the item on the interface
 */
public void writeInterfaceItem(Client c, int id[]) {
	c.outStream.createFrameVarSizeWord(53);
	c.outStream.writeWord(8847); // 8847
	c.outStream.writeWord(id.length);
	for (int i = 0; i &lt; id.length; i++) {
		c.outStream.writeByte(1);
		if (id[i] &gt; 0) {
			c.outStream.writeWordBigEndianA(id[i] + 1);
		} else {
			c.outStream.writeWordBigEndianA(0);
		}
	}
	c.outStream.endFrameVarSizeWord();
	c.flushOutStream();
}
</code></pre>
<p>}<br>
[/code]<br>
Fully commented as before, now for this class you need to add a little bit to your Client.java.<br>
Open it up and add <code>
private SkillManager skillmenu = new SkillManager();</code><br>
then<br>
add</p>
<p><code>public SkillManager getSM() {
		return skillmenu;
	}</code><br>
Now to show a base of what the skill classes will look like.</p>
<p>[code]package server.model.players.skillMenus;</p>
<p>import server.model.players.Client;</p>
<p>/**</p>
<ul>
<li>Class: Attack.java (v1.0) 02/09/2010</li>
<li>
</li>
<li>Extends the abstract class SkillInterfaces, is handled by the SkillManager</li>
<li>class. This class contains everything to do with the attack menus, options,</li>
<li>and tabs. As should any other class you make for the other skills.</li>
<li>
</li>
<li>
<span class="mention">@author</span> Steve Belluci(Mental Piracy/Rsclassicftw/Atlas)<br>
*/</li>
</ul>
<p>/*</p>
<ul>
<li>
<p>Skill ID: 1<br>
*/<br>
public class Attack extends SkillInterfaces {</p>
<p>/*</p>
<ul>
<li>Empty Constructor<br>
*/<br>
public Attack() {<br>
}</li>
</ul>
<p>/*</p>
<ul>
<li>
<p><a class="mention" href="/u/param">@param</a> screen</p>
</li>
<li>
</li>
<li>
<p>This is the only NEEDED method in this class. It has to be called</p>
</li>
<li>
<p>according to it being abstract in the extended SkillInterfaces class</p>
</li>
<li>
</li>
<li>
<p><span class="mention">@see</span> SkillInterfaces#showInterface(int)<br>
<em>/<br>
public void showInterface(Client c, int screen) {<br>
/</em></p>
<ul>
<li>I know comments inside a method are not used very often but I plan to</li>
<li>break down the class and the methods so I can save from questions</li>
<li>later<br>
*/</li>
</ul>
<p>/*</p>
<ul>
<li>Clears the menu, method from SkillManager.java<br>
*/<br>
clearMenu©;</li>
</ul>
<p>/*</p>
<ul>
<li>Sets the tabs on the side, Updated so no there is no need to have the</li>
<li>empty Strings, It uses a string array inside the method to allow for</li>
<li>any number of lines you want as long as it doesnt exceed the 13 limit</li>
<li>obviously<br>
*/<br>
optionTab(c, “Attack”, “Bronze”, “Iron”, “Steel”, “Black”, “White”,<br>
“Mithril”, “Adamant”, “Rune”, “Dragon”, “Barrows”, “Special”,<br>
“Milestones”);</li>
</ul>
<p>/*</p>
<ul>
<li>The screen is which tab is clicked<br>
<em>/<br>
if (screen == 1) {<br>
/</em>
<ul>
<li>The string level, type, text, and int item can either be arrays</li>
<li>or a single value and the menu will still work. For most of the</li>
<li>attack class they consist of single values other than the text[].</li>
<li>But most other classes will use arrays.<br>
<em>/<br>
String level = “1”;<br>
String type = “Bronze”;<br>
String[] text = { " Dagger", " Axe", " Mace", " Claws", " Sword",<br>
" Longsword", “Scimitar”, " Spear", " Warhammer",<br>
" Battleaxe", " Two-Handed Sword", " Halberd" };<br>
int[] item = { 1205, 1351, 1422, 3095, 1277, 1291, 1321, 1237,<br>
1337, 1375, 1307, 3190 };<br>
/</em>
</li>
<li>This is where the magic happens, this writes the interface with</li>
<li>all the arrays and values. Great improvement over my last</li>
<li>release.<br>
<em>/<br>
for (int i = 0; i &lt; text.length; i++) {<br>
line(c, level, type + text[i], item[i], i);<br>
}<br>
/</em>
</li>
<li>Shows which tab is currently active, this one uses the type value</li>
<li>of “bronze” to display on the menu. This is vital as it also</li>
<li>opens up the interface.<br>
*/<br>
tab(c, type);<br>
}</li>
</ul>
</li>
</ul>
<p>else if (screen == 2) {<br>
String level = “1”;<br>
String type = “Iron”;<br>
String[] text = { " Dagger", " Axe", " Mace", " Claws", " Sword",<br>
" Longsword", “Scimitar”, " Spear", " Warhammer",<br>
" Battleaxe", " Two-Handed Sword", " Halberd" };<br>
int[] item = { 1203, 1349, 1420, 3096, 1279, 1293, 1323, 1239,<br>
1335, 1363, 1309, 3192 };<br>
for (int i = 0; i &lt; text.length; i++) {<br>
line(c, level, type + text[i], item[i], i);<br>
}<br>
tab(c, type);<br>
}</p>
<p>else if (screen == 3) {<br>
String level = “5”;<br>
String type = “Steel”;<br>
String[] text = { " Dagger", " Axe", " Mace", " Claws", " Sword",<br>
" Longsword", “Scimitar”, " Spear", " Warhammer",<br>
" Battleaxe", " Two-Handed Sword", " Halberd" };<br>
int[] item = { 1207, 1353, 1424, 3097, 1281, 1295, 1325, 1241,<br>
1339, 1365, 1311, 3194 };<br>
for (int i = 0; i &lt; text.length; i++) {<br>
line(c, level, type + text[i], item[i], i);<br>
}<br>
tab(c, type);<br>
}</p>
<p>else if (screen == 4) {<br>
String level = “10”;<br>
String type = “Black”;<br>
String[] text = { " Dagger", " Axe", " Mace", " Claws", " Sword",<br>
" Longsword", “Scimitar”, " Spear", " Warhammer",<br>
" Battleaxe", " Two-Handed Sword", " Halberd" };<br>
int[] item = { 1217, 1361, 1426, 3098, 1283, 1297, 1327, 4580,<br>
1341, 1367, 1313, 3196 };<br>
for (int i = 0; i &lt; text.length; i++) {<br>
line(c, level, type + text[i], item[i], i);<br>
}<br>
tab(c, type);<br>
}</p>
<p>else if (screen == 5) {<br>
String level = “10”;<br>
String type = “White”;<br>
String[] text = { " Dagger", " Mace", " Claws", " Sword",<br>
" Longsword", “Scimitar”, " Warhammer", " Battleaxe",<br>
" Two-Handed Sword", " Halberd" };<br>
int[] item = { 6591, 6601, 6587, 6605, 6607, 6611, 6613, 6589,<br>
6609, 6599 };<br>
for (int i = 0; i &lt; text.length; i++) {<br>
line(c, level, type + text[i], item[i], i);<br>
}<br>
tab(c, type);</p>
<p>}</p>
<p>else if (screen == 6) {<br>
String level = “20”;<br>
String type = “Mithril”;<br>
String[] text = { " Dagger", " Axe", " Mace", " Claws", " Sword",<br>
" Longsword", “Scimitar”, " Spear", " Warhammer",<br>
" Battleaxe", " Two-Handed Sword", " Halberd" };<br>
int[] item = { 1209, 1355, 1428, 3099, 1285, 1299, 1329, 1243,<br>
1343, 1369, 1315, 3198 };<br>
for (int i = 0; i &lt; text.length; i++) {<br>
line(c, level, type + text[i], item[i], i);<br>
}<br>
tab(c, type);<br>
}</p>
<p>else if (screen == 7) {<br>
String level = “30”;<br>
String type = “Adamant”;<br>
String[] text = { " Dagger", " Axe", " Mace", " Claws", " Sword",<br>
" Longsword", “Scimitar”, " Spear", " Warhammer",<br>
" Battleaxe", " Two-Handed Sword", " Halberd" };<br>
int[] item = { 1211, 1357, 1430, 3100, 1287, 1301, 1329, 1245,<br>
1345, 1371, 1317, 3200 };<br>
for (int i = 0; i &lt; text.length; i++) {<br>
line(c, level, type + text[i], item[i], i);<br>
}<br>
tab(c, type);<br>
}</p>
<p>else if (screen == 8) {<br>
String level = “40”;<br>
String type = “Rune”;<br>
String[] text = { " Dagger", " Axe", " Mace", " Claws", " Sword",<br>
" Longsword", “Scimitar”, " Spear", " Warhammer",<br>
" Battleaxe", " Two-Handed Sword", " Halberd" };<br>
int[] item = { 1213, 1359, 1432, 3101, 1289, 1303, 1333, 1247,<br>
1347, 1373, 1319, 3202 };<br>
for (int i = 0; i &lt; text.length; i++) {<br>
line(c, level, type + text[i], item[i], i);<br>
}<br>
tab(c, type);<br>
}</p>
<p>else if (screen == 9) {<br>
String level = “60”;<br>
String type = “Dragon”;<br>
String[] text = { " Dagger", " Axe", " Mace", " Longsword",<br>
“Scimitar”, " Spear", " Battleaxe", " Two-Handed Sword",<br>
" Halberd" };<br>
int[] item = { 1215, 6739, 1434, 1305, 4587, 1249, 1377, 7158, 3204 };<br>
for (int i = 0; i &lt; text.length; i++) {<br>
line(c, level, type + text[i], item[i], i);<br>
}<br>
tab(c, type);<br>
}</p>
<p>else if (screen == 10) {<br>
String level = “70”;<br>
String[] text = { “Ahrim’s Staff(With 70 Magic)”,<br>
“Dharok’s Greataxe(With 70 Strength)”, “Guthan’s Spear”,<br>
“Torag’s Hammers(With 70 Strength”, “Verac’s Flail” };<br>
int[] item = { 4710, 4718, 4726, 4747, 4755 };<br>
for (int i = 0; i &lt; text.length; i++) {<br>
line(c, level, text[i], item[i], i);<br>
}<br>
tab(c, “Barrows”);<br>
}</p>
<p>else if (screen == 11) {<br>
String[] level = { “50”, “50”, “60”, “60”, “60”, “60”, “60”, “70” };<br>
String[] text = { “Leaf-Bladed Spear(With 55 Slayer)”,<br>
“Ancient Staff(With 50 Magic)”,<br>
“TokTz-Xil-Ak(Obsidian Sword)”,<br>
“TzHaar-Ket-Om(Obsidian Maul)”,<br>
“TokTz-Xil-Ek(Obsidian Knife)”,<br>
“TokTz-Mej-Tal(Obsidian Staff)”,<br>
“TokTz-Ket-Em(Obsidian Mace)”, “Abyssal Whip” };<br>
int[] item = { 4158, 4675, 6523, 6528, 6525, 6526, 6527, 4151 };<br>
for (int i = 0; i &lt; text.length; i++) {<br>
line(c, level[i], text[i], item[i], i);<br>
}<br>
tab(c, “Special”);<br>
}</p>
<p>else if (screen == 12) {<br>
line(c, “99”, “Skill Mastery”, 4319, 0);<br>
tab(c, “Milestones”);<br>
}<br>
}<br>
}</p>
</li>
</ul>
</li>
</ul>
<p>[/code]<br>
Notice how much shorter it is than my previous release, utilized arrays a lot more heavily in this release while still trying to keep it as easy to use as possible.</p>
<p>This was mainly just a proof of concept of the quest system I am working on. Wanted to release something and get feedback on its usage. This was my first attempt in using abstract classes for the purposes of being extended and wanted to know what you think of the functionality of doing so.</p>
<p>Guess i should probably tell you how to implement the clicking too<br>
Open your clickingmost/clickingButtons/ActionButtons/or w/e you have and add this before your switch case</p>
<pre><code class="lang-auto">c.getSM().menuClicking(c, actionButtonId);</code></pre>
<p>You guys can either take the edited Attack class base and redo your own interfaces or wait until I finish mine up and add the directory to this post. Enjoy</p>
<p>As always comments on how to improve are welcomed.<br>
Forgot to include a video, but it works the same as the last release</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670/1</link>
        <pubDate>Tue, 16 Feb 2010 16:28:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-329670-1</guid>
        <source url="https://forum.moparisthebest.com/t/317-skill-interfaces-v1-5/329670.rss">[317]Skill Interfaces v1.5</source>
      </item>
  </channel>
</rss>
