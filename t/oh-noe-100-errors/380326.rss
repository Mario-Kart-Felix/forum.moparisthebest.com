<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Oh noe 100 Errors</title>
    <link>https://forum.moparisthebest.com/t/oh-noe-100-errors/380326</link>
    <description>&lt;blockquote&gt;client.java:3529: class, interface, or enum expected
                if (playerLevel[playerRunecrafting] &lt; level)
                ^
client.java:3532: class, interface, or enum expected
                        sM(&quot;You need at least &quot;+level+&quot; to runecraft this.&quot;);
                        ^
client.java:3533: class, interface, or enum expected
                        return;
                        ^
client.java:3534: class, interface, or enum expected
                }
                ^
client.java:3538: class, interface, or enum expected
                        return;
                        ^
client.java:3539: class, interface, or enum expected
                }
                ^
client.java:3544: class, interface, or enum expected
                        if (playerLevel[playerRunecrafting] &gt;= a3 &amp;&amp; playerLevel
[playerRunecrafting] &lt; a4)
                        ^
client.java:3546: class, interface, or enum expected
                        if (playerLevel[playerRunecrafting] &gt;= a4 &amp;&amp; playerLevel
[playerRunecrafting] &lt; a5)
                        ^
client.java:3548: class, interface, or enum expected
                        if (playerLevel[playerRunecrafting] &gt;= a5 &amp;&amp; playerLevel
[playerRunecrafting] &lt; a6)
                        ^
client.java:3550: class, interface, or enum expected
                        if (playerLevel[playerRunecrafting] &gt;= a6 &amp;&amp; playerLevel
[playerRunecrafting] &lt; a7)
                        ^
client.java:3552: class, interface, or enum expected
                        if (playerLevel[playerRunecrafting] &gt;= a7 &amp;&amp; playerLevel
[playerRunecrafting] &lt; a8)
                        ^
client.java:3554: class, interface, or enum expected
                        if (playerLevel[playerRunecrafting] &gt;= a8 &amp;&amp; playerLevel
[playerRunecrafting] &lt; a9)
                        ^
client.java:3556: class, interface, or enum expected
                        if (playerLevel[playerRunecrafting] &gt;= a9 &amp;&amp; playerLevel
[playerRunecrafting] &lt; a10)
                        ^
client.java:3558: class, interface, or enum expected
                        if (playerLevel[playerRunecrafting] &gt;= a10)
                        ^
client.java:3561: class, interface, or enum expected
                }
                ^
client.java:3562: class, interface, or enum expected
                for (int i = 0; i &lt; 29; i++)
                                ^
client.java:3562: class, interface, or enum expected
                for (int i = 0; i &lt; 29; i++)
                                        ^
client.java:3564: class, interface, or enum expected
                addItem(rune, essence);
                ^
client.java:3565: class, interface, or enum expected
                addSkillXP(experience*essence, playerRunecrafting);
                ^
client.java:3566: class, interface, or enum expected
                sM(&quot;You bind the temple&#39;s power into &quot;+getItemName(rune)+&quot;.&quot;);
                ^
client.java:3567: class, interface, or enum expected
                specGFX(186);
                ^
client.java:3568: class, interface, or enum expected
                setAnimation(791);
                ^
client.java:3569: class, interface, or enum expected
                return;
                ^
client.java:3570: class, interface, or enum expected
        }
        ^
client.java:3571: class, interface, or enum expected
public void SpecDamg(int maxDamage) {
       ^
client.java:3578: class, interface, or enum expected
        if (PlayerHandler.players[AttackingOn].playerLevel[3] - hitDiff &lt; 0)
        ^
client.java:3580: class, interface, or enum expected
        PlayerHandler.players[AttackingOn].updateRequired = true;
        ^
client.java:3581: class, interface, or enum expected
        PlayerHandler.players[AttackingOn].hitUpdateRequired = true;
        ^
client.java:3582: class, interface, or enum expected
        }
        ^
client.java:3587: class, interface, or enum expected
public void SpecDamgNPC(int maxDamage) {
       ^
client.java:3592: class, interface, or enum expected
                if(FullVMelee()){
                ^
client.java:3594: class, interface, or enum expected
                }
                ^
client.java:3596: class, interface, or enum expected
        if (npcHit()) {
        ^
client.java:3598: class, interface, or enum expected
        }
        ^
client.java:3601: class, interface, or enum expected
        server.npcHandler.npcs[attacknpc].StartKilling = playerId;
        ^
client.java:3602: class, interface, or enum expected
        server.npcHandler.npcs[attacknpc].RandomWalk = false;
        ^
client.java:3603: class, interface, or enum expected
        server.npcHandler.npcs[attacknpc].IsUnderAttack = true;
        ^
client.java:3604: class, interface, or enum expected
        server.npcHandler.npcs[attacknpc].hitDiff = damage;
        ^
client.java:3605: class, interface, or enum expected
        server.npcHandler.npcs[attacknpc].HP -= damage;
        ^
client.java:3606: class, interface, or enum expected
        server.npcHandler.npcs[attacknpc].updateRequired = true;
        ^
client.java:3607: class, interface, or enum expected
        server.npcHandler.npcs[attacknpc].hitUpdateRequired = true;
        ^
client.java:3608: class, interface, or enum expected
    }
    ^
client.java:3611: class, interface, or enum expected
public void cureAll()
       ^
client.java:3615: class, interface, or enum expected
if(p != null &amp;&amp; person.distanceToPoint(absX, absY) &lt;= 1) {
^
client.java:3617: class, interface, or enum expected
castOn.poisoned = false;
^
client.java:3618: class, interface, or enum expected
castOn.poisonDmg = false;
^
client.java:3619: class, interface, or enum expected
castOn.sM(&quot;You have been cured by &quot;+playerName+&quot;.&quot;);
^
client.java:3620: class, interface, or enum expected
setAnimation(1670);
^
client.java:3621: class, interface, or enum expected
lowGFX(79, 0);
^
client.java:3622: class, interface, or enum expected
       }
       ^
client.java:3625: class, interface, or enum expected
public void healAll()
       ^
client.java:3629: class, interface, or enum expected
if(p != null &amp;&amp; person.distanceToPoint(absX, absY) &lt;= 1) {
^
client.java:3631: class, interface, or enum expected
castOn.currentHealth += 5;
^
client.java:3632: class, interface, or enum expected
if (castOn.currentHealth &gt; castOn.playerLevel[castOn.playerHitpoints])
^
client.java:3634: class, interface, or enum expected
castOn.sendQuest(&quot;&quot; + castOn.currentHealth + &quot;&quot;, 4016);
^
client.java:3635: class, interface, or enum expected
castOn.sM(&quot;You have been healed by &quot;+playerName+&quot;.&quot;);
^
client.java:3636: class, interface, or enum expected
setAnimation(1670);
^
client.java:3637: class, interface, or enum expected
lowGFX(568, 0);
^
client.java:3638: class, interface, or enum expected
       }
       ^
client.java:3641: class, interface, or enum expected
public void hail()
       ^
client.java:3645: class, interface, or enum expected
if(p != null &amp;&amp; person.distanceToPoint(absX, absY) &lt;= 5) {
^
client.java:3647: class, interface, or enum expected
castOn.plrText = &quot;ALL HAIL &quot;+playerName+&quot;!&quot;;
^
client.java:3648: class, interface, or enum expected
castOn.plrTextUpdateRequired = true;
^
client.java:3649: class, interface, or enum expected
castOn.TurnPlayerTo(absX, absY);
^
client.java:3650: class, interface, or enum expected
castOn.setAnimation(1651);
^
client.java:3651: class, interface, or enum expected
castOn.updateRequired = true;
^
client.java:3652: class, interface, or enum expected
castOn.appearanceUpdateRequired = true;
^
client.java:3653: class, interface, or enum expected
       }
       ^
client.java:3657: class, interface, or enum expected
public void resetpc() {
       ^
client.java:3658: class, interface, or enum expected
                for (int i = 0; i &lt; server.npcHandler.maxNPCs; i++) {
                                ^
client.java:3658: class, interface, or enum expected
                for (int i = 0; i &lt; server.npcHandler.maxNPCs; i++) {
                                                               ^
client.java:3662: class, interface, or enum expected
server.npcHandler.npcs[i].absY = 0;
^
client.java:3663: class, interface, or enum expected
}
^
client.java:3668: class, interface, or enum expected
    public boolean IsInFightCave()
           ^
client.java:3671: class, interface, or enum expected
    }
    ^
client.java:3673: class, interface, or enum expected
  public boolean inPcGame() {
         ^
client.java:3677: class, interface, or enum expected
    } else {
    ^
client.java:3679: class, interface, or enum expected
    }
    ^
client.java:3681: class, interface, or enum expected
  public boolean inPcBoat() {
         ^
client.java:3685: class, interface, or enum expected
    } else {
    ^
client.java:3687: class, interface, or enum expected
    }
    ^
client.java:3690: class, interface, or enum expected
public boolean FullVMage() {
       ^
client.java:3694: class, interface, or enum expected
  }
  ^
client.java:3696: class, interface, or enum expected
}
^
client.java:3697: class, interface, or enum expected
public boolean FullVRange() {
       ^
client.java:3701: class, interface, or enum expected
  }
  ^
client.java:3703: class, interface, or enum expected
}
^
client.java:3704: class, interface, or enum expected
public boolean FullVMelee() {
       ^
client.java:3708: class, interface, or enum expected
  }
  ^
client.java:3710: class, interface, or enum expected
}
^
client.java:3711: class, interface, or enum expected
public boolean FullVeracEquipped() {
       ^
client.java:3715: class, interface, or enum expected
  }
  ^
client.java:3717: class, interface, or enum expected
}
^
client.java:3718: class, interface, or enum expected
public boolean FullGuthanEquipped() {
       ^
client.java:3722: class, interface, or enum expected
  }
  ^
client.java:3724: class, interface, or enum expected
}
^
client.java:3725: class, interface, or enum expected
        public boolean FullDharokEquipped() {
               ^
100 errors
Press any key to continue . . .



I can try and pay but I have a level 88 rs account im willing to give if I remember the details :P
I can definatly Rep++
I forgot to make a backup...... People tell me theres probably A Extra Bracket somewhere or You missing a bracket somewhere.
This was right  after I added MaxHitCalculator.
I removed it after I got the error but still no luck :(
Its a really good source and over nearly 2 months of coding. And I dont want it going down the drain :(&lt;/blockquote&gt;
W00T Fixed It.
But Lost about 5 days worth of coding :P atleast its fixed.</description>
    
    <lastBuildDate>Sat, 29 Jan 2011 01:23:20 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/oh-noe-100-errors/380326.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Oh noe 100 Errors</title>
        <dc:creator><![CDATA[@Mee0345 Mee0345]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mee0345">@Mee0345</a> wrote:</p>
          <blockquote>
              <blockquote>client.java:3529: class, interface, or enum expected
                if (playerLevel[playerRunecrafting] &lt; level)
                ^
client.java:3532: class, interface, or enum expected
                        sM("You need at least "+level+" to runecraft this.");
                        ^
client.java:3533: class, interface, or enum expected
                        return;
                        ^
client.java:3534: class, interface, or enum expected
                }
                ^
client.java:3538: class, interface, or enum expected
                        return;
                        ^
client.java:3539: class, interface, or enum expected
                }
                ^
client.java:3544: class, interface, or enum expected
                        if (playerLevel[playerRunecrafting] &gt;= a3 &amp;&amp; playerLevel
[playerRunecrafting] &lt; a4)
                        ^
client.java:3546: class, interface, or enum expected
                        if (playerLevel[playerRunecrafting] &gt;= a4 &amp;&amp; playerLevel
[playerRunecrafting] &lt; a5)
                        ^
client.java:3548: class, interface, or enum expected
                        if (playerLevel[playerRunecrafting] &gt;= a5 &amp;&amp; playerLevel
[playerRunecrafting] &lt; a6)
                        ^
client.java:3550: class, interface, or enum expected
                        if (playerLevel[playerRunecrafting] &gt;= a6 &amp;&amp; playerLevel
[playerRunecrafting] &lt; a7)
                        ^
client.java:3552: class, interface, or enum expected
                        if (playerLevel[playerRunecrafting] &gt;= a7 &amp;&amp; playerLevel
[playerRunecrafting] &lt; a8)
                        ^
client.java:3554: class, interface, or enum expected
                        if (playerLevel[playerRunecrafting] &gt;= a8 &amp;&amp; playerLevel
[playerRunecrafting] &lt; a9)
                        ^
client.java:3556: class, interface, or enum expected
                        if (playerLevel[playerRunecrafting] &gt;= a9 &amp;&amp; playerLevel
[playerRunecrafting] &lt; a10)
                        ^
client.java:3558: class, interface, or enum expected
                        if (playerLevel[playerRunecrafting] &gt;= a10)
                        ^
client.java:3561: class, interface, or enum expected
                }
                ^
client.java:3562: class, interface, or enum expected
                for (int i = 0; i &lt; 29; i++)
                                ^
client.java:3562: class, interface, or enum expected
                for (int i = 0; i &lt; 29; i++)
                                        ^
client.java:3564: class, interface, or enum expected
                addItem(rune, essence);
                ^
client.java:3565: class, interface, or enum expected
                addSkillXP(experience*essence, playerRunecrafting);
                ^
client.java:3566: class, interface, or enum expected
                sM("You bind the temple's power into "+getItemName(rune)+".");
                ^
client.java:3567: class, interface, or enum expected
                specGFX(186);
                ^
client.java:3568: class, interface, or enum expected
                setAnimation(791);
                ^
client.java:3569: class, interface, or enum expected
                return;
                ^
client.java:3570: class, interface, or enum expected
        }
        ^
client.java:3571: class, interface, or enum expected
public void SpecDamg(int maxDamage) {
       ^
client.java:3578: class, interface, or enum expected
        if (PlayerHandler.players[AttackingOn].playerLevel[3] - hitDiff &lt; 0)
        ^
client.java:3580: class, interface, or enum expected
        PlayerHandler.players[AttackingOn].updateRequired = true;
        ^
client.java:3581: class, interface, or enum expected
        PlayerHandler.players[AttackingOn].hitUpdateRequired = true;
        ^
client.java:3582: class, interface, or enum expected
        }
        ^
client.java:3587: class, interface, or enum expected
public void SpecDamgNPC(int maxDamage) {
       ^
client.java:3592: class, interface, or enum expected
                if(FullVMelee()){
                ^
client.java:3594: class, interface, or enum expected
                }
                ^
client.java:3596: class, interface, or enum expected
        if (npcHit()) {
        ^
client.java:3598: class, interface, or enum expected
        }
        ^
client.java:3601: class, interface, or enum expected
        server.npcHandler.npcs[attacknpc].StartKilling = playerId;
        ^
client.java:3602: class, interface, or enum expected
        server.npcHandler.npcs[attacknpc].RandomWalk = false;
        ^
client.java:3603: class, interface, or enum expected
        server.npcHandler.npcs[attacknpc].IsUnderAttack = true;
        ^
client.java:3604: class, interface, or enum expected
        server.npcHandler.npcs[attacknpc].hitDiff = damage;
        ^
client.java:3605: class, interface, or enum expected
        server.npcHandler.npcs[attacknpc].HP -= damage;
        ^
client.java:3606: class, interface, or enum expected
        server.npcHandler.npcs[attacknpc].updateRequired = true;
        ^
client.java:3607: class, interface, or enum expected
        server.npcHandler.npcs[attacknpc].hitUpdateRequired = true;
        ^
client.java:3608: class, interface, or enum expected
    }
    ^
client.java:3611: class, interface, or enum expected
public void cureAll()
       ^
client.java:3615: class, interface, or enum expected
if(p != null &amp;&amp; person.distanceToPoint(absX, absY) &lt;= 1) {
^
client.java:3617: class, interface, or enum expected
castOn.poisoned = false;
^
client.java:3618: class, interface, or enum expected
castOn.poisonDmg = false;
^
client.java:3619: class, interface, or enum expected
castOn.sM("You have been cured by "+playerName+".");
^
client.java:3620: class, interface, or enum expected
setAnimation(1670);
^
client.java:3621: class, interface, or enum expected
lowGFX(79, 0);
^
client.java:3622: class, interface, or enum expected
       }
       ^
client.java:3625: class, interface, or enum expected
public void healAll()
       ^
client.java:3629: class, interface, or enum expected
if(p != null &amp;&amp; person.distanceToPoint(absX, absY) &lt;= 1) {
^
client.java:3631: class, interface, or enum expected
castOn.currentHealth += 5;
^
client.java:3632: class, interface, or enum expected
if (castOn.currentHealth &gt; castOn.playerLevel[castOn.playerHitpoints])
^
client.java:3634: class, interface, or enum expected
castOn.sendQuest("" + castOn.currentHealth + "", 4016);
^
client.java:3635: class, interface, or enum expected
castOn.sM("You have been healed by "+playerName+".");
^
client.java:3636: class, interface, or enum expected
setAnimation(1670);
^
client.java:3637: class, interface, or enum expected
lowGFX(568, 0);
^
client.java:3638: class, interface, or enum expected
       }
       ^
client.java:3641: class, interface, or enum expected
public void hail()
       ^
client.java:3645: class, interface, or enum expected
if(p != null &amp;&amp; person.distanceToPoint(absX, absY) &lt;= 5) {
^
client.java:3647: class, interface, or enum expected
castOn.plrText = "ALL HAIL "+playerName+"!";
^
client.java:3648: class, interface, or enum expected
castOn.plrTextUpdateRequired = true;
^
client.java:3649: class, interface, or enum expected
castOn.TurnPlayerTo(absX, absY);
^
client.java:3650: class, interface, or enum expected
castOn.setAnimation(1651);
^
client.java:3651: class, interface, or enum expected
castOn.updateRequired = true;
^
client.java:3652: class, interface, or enum expected
castOn.appearanceUpdateRequired = true;
^
client.java:3653: class, interface, or enum expected
       }
       ^
client.java:3657: class, interface, or enum expected
public void resetpc() {
       ^
client.java:3658: class, interface, or enum expected
                for (int i = 0; i &lt; server.npcHandler.maxNPCs; i++) {
                                ^
client.java:3658: class, interface, or enum expected
                for (int i = 0; i &lt; server.npcHandler.maxNPCs; i++) {
                                                               ^
client.java:3662: class, interface, or enum expected
server.npcHandler.npcs[i].absY = 0;
^
client.java:3663: class, interface, or enum expected
}
^
client.java:3668: class, interface, or enum expected
    public boolean IsInFightCave()
           ^
client.java:3671: class, interface, or enum expected
    }
    ^
client.java:3673: class, interface, or enum expected
  public boolean inPcGame() {
         ^
client.java:3677: class, interface, or enum expected
    } else {
    ^
client.java:3679: class, interface, or enum expected
    }
    ^
client.java:3681: class, interface, or enum expected
  public boolean inPcBoat() {
         ^
client.java:3685: class, interface, or enum expected
    } else {
    ^
client.java:3687: class, interface, or enum expected
    }
    ^
client.java:3690: class, interface, or enum expected
public boolean FullVMage() {
       ^
client.java:3694: class, interface, or enum expected
  }
  ^
client.java:3696: class, interface, or enum expected
}
^
client.java:3697: class, interface, or enum expected
public boolean FullVRange() {
       ^
client.java:3701: class, interface, or enum expected
  }
  ^
client.java:3703: class, interface, or enum expected
}
^
client.java:3704: class, interface, or enum expected
public boolean FullVMelee() {
       ^
client.java:3708: class, interface, or enum expected
  }
  ^
client.java:3710: class, interface, or enum expected
}
^
client.java:3711: class, interface, or enum expected
public boolean FullVeracEquipped() {
       ^
client.java:3715: class, interface, or enum expected
  }
  ^
client.java:3717: class, interface, or enum expected
}
^
client.java:3718: class, interface, or enum expected
public boolean FullGuthanEquipped() {
       ^
client.java:3722: class, interface, or enum expected
  }
  ^
client.java:3724: class, interface, or enum expected
}
^
client.java:3725: class, interface, or enum expected
        public boolean FullDharokEquipped() {
               ^
100 errors
Press any key to continue . . .
<p>I can try and pay but I have a level 88 rs account im willing to give if I remember the details <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"><br>
I can definatly Rep++<br>
I forgot to make a backup… People tell me theres probably A Extra Bracket somewhere or You missing a bracket somewhere.<br>
This was right  after I added MaxHitCalculator.<br>
I removed it after I got the error but still no luck <img src="https://forum.moparisthebest.com/images/emoji/twitter/frowning.png?v=5" title=":frowning:" class="emoji" alt=":frowning:"><br>
Its a really good source and over nearly 2 months of coding. And I dont want it going down the drain <img src="https://forum.moparisthebest.com/images/emoji/twitter/frowning.png?v=5" title=":frowning:" class="emoji" alt=":frowning:"></p>
</blockquote><br>
W00T Fixed It.<br>
But Lost about 5 days worth of coding <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"> atleast its fixed.
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/oh-noe-100-errors/380326/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/oh-noe-100-errors/380326/1</link>
        <pubDate>Sat, 29 Jan 2011 01:23:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-380326-1</guid>
        <source url="https://forum.moparisthebest.com/t/oh-noe-100-errors/380326.rss">Oh noe 100 Errors</source>
      </item>
  </channel>
</rss>
