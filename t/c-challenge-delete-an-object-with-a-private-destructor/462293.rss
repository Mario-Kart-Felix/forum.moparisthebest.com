<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[C++ challenge] Delete an object with a private destructor</title>
    <link>https://forum.moparisthebest.com/t/c-challenge-delete-an-object-with-a-private-destructor/462293</link>
    <description>[code=cpp]
#include &lt;iostream&gt;
#include &lt;cstdlib&gt;

class Class
{
public:
	Class() { }

private:
	~Class() { std::cout &lt;&lt; &quot;:)&quot; &lt;&lt; std::endl; }
};

int main()
{
	Class* a = new Class; //1
	delete a; //2

	std::cin.sync();
	std::cin.get();
	return EXIT_SUCCESS;
}
[/code]

The line marked with 2 currently fails to compile, find a way around it. You&#39;re allowed to make any modification to class &#39;Class&#39; except adding any new non-private members to it (this includes changing the access specifier of the destructor) and calling delete or a function from the constructor. You may modify the code in function main however you wish - as long as it allocates the object and then deletes it.

Solution #1 - Using the public constructor to smuggle out a pointer to a private function.
[code=cpp]
#include &lt;iostream&gt;
#include &lt;cstdlib&gt;

class Class
{
public:
	Class(void (** const fPtr) (const Class* const c)) { *fPtr = &amp;delete_; }

private:
	~Class() { std::cout &lt;&lt; &quot;:)&quot; &lt;&lt; std::endl; }
	static void delete_(const Class* const c) { delete c; }
};

int main()
{
	void (* delete_) (const Class* const c) = nullptr;
	Class* c = new Class(&amp;delete_);
	delete_(c);

	std::cin.sync();
	std::cin.get();
	return EXIT_SUCCESS;
}
[/code]

Solution #2 - using a base class with a virtual public destructor, access control is not applied to virtual function calls.
[code=cpp]
#include &lt;iostream&gt;
#include &lt;cstdlib&gt;

class Base
{
public:
	Base() { }
	virtual ~Base() { }
};

class Class : public Base
{
public:
	Class() { }

private:
	~Class() { std::cout &lt;&lt; &quot;:)&quot; &lt;&lt; std::endl; }
};

int main()
{
	Base* base = new Class;
	delete base;

	std::cin.sync();
	std::cin.get();
	return EXIT_SUCCESS;
}
[/code]</description>
    
    <lastBuildDate>Thu, 27 Sep 2012 21:17:12 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/c-challenge-delete-an-object-with-a-private-destructor/462293.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[C++ challenge] Delete an object with a private destructor</title>
        <dc:creator><![CDATA[@The_Enforcer The Enforcer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_enforcer">@The_Enforcer</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="4" data-topic="462293">
<div class="title">
<div class="quote-controls"></div>
 t4:</div>
<blockquote>
<p>i don’t think it’s possible since it will cause undefined behavior. is this a pre-compile edit or post-compile edit?</p>
</blockquote>
</aside>
<p>No hacking involved, 100% defined behavior.</p>
<p>EDIT: Posted two solutions in the first post.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-challenge-delete-an-object-with-a-private-destructor/462293/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-challenge-delete-an-object-with-a-private-destructor/462293/5</link>
        <pubDate>Thu, 27 Sep 2012 21:17:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-462293-5</guid>
        <source url="https://forum.moparisthebest.com/t/c-challenge-delete-an-object-with-a-private-destructor/462293.rss">[C++ challenge] Delete an object with a private destructor</source>
      </item>
      <item>
        <title>[C++ challenge] Delete an object with a private destructor</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <p>i don’t think it’s possible since it will cause undefined behavior. is this a pre-compile edit or post-compile edit?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-challenge-delete-an-object-with-a-private-destructor/462293/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-challenge-delete-an-object-with-a-private-destructor/462293/4</link>
        <pubDate>Thu, 27 Sep 2012 17:15:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-462293-4</guid>
        <source url="https://forum.moparisthebest.com/t/c-challenge-delete-an-object-with-a-private-destructor/462293.rss">[C++ challenge] Delete an object with a private destructor</source>
      </item>
      <item>
        <title>[C++ challenge] Delete an object with a private destructor</title>
        <dc:creator><![CDATA[@The_Enforcer The Enforcer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_enforcer">@The_Enforcer</a> wrote:</p>
          <blockquote>
              <p>[quote=“t4, post:2, topic:462293”][code=c++]<br>
<span class="hashtag">#include</span> <br>
<span class="hashtag">#include</span> </p>
<p>class Class {<br>
public:<br>
Class() { }</p>
<p>private:<br>
~Class() { std::cout &lt;&lt; “:)” &lt;&lt; std::endl; }</p>
<p>friend int main(void);<br>
};</p>
<p>int main(void) {<br>
Class* a = new Class;<br>
delete a;<br>
return 0;<br>
}<br>
[/code]</p>
<p><code>
$ g++ -o test test.cpp 
$ ./test
:)
</code>[/quote]</p>
<p>Good, good. Now if someone could come up with a solution that doesn’t use friend declarations as I initially planned to not allow it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-challenge-delete-an-object-with-a-private-destructor/462293/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-challenge-delete-an-object-with-a-private-destructor/462293/3</link>
        <pubDate>Thu, 27 Sep 2012 15:34:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-462293-3</guid>
        <source url="https://forum.moparisthebest.com/t/c-challenge-delete-an-object-with-a-private-destructor/462293.rss">[C++ challenge] Delete an object with a private destructor</source>
      </item>
      <item>
        <title>[C++ challenge] Delete an object with a private destructor</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <pre><code class="lang-auto">#include &lt;iostream&gt;
#include &lt;cstdlib&gt;

class Class {
  public:
    Class() { }

  private:
    ~Class() { std::cout &lt;&lt; ":)" &lt;&lt; std::endl; }

  friend int main(void);
};

int main(void) {
  Class* a = new Class;
  delete a;
  return 0;
}</code></pre>
<pre><code class="lang-auto">$ g++ -o test test.cpp 
$ ./test
:)</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-challenge-delete-an-object-with-a-private-destructor/462293/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-challenge-delete-an-object-with-a-private-destructor/462293/2</link>
        <pubDate>Thu, 27 Sep 2012 15:20:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-462293-2</guid>
        <source url="https://forum.moparisthebest.com/t/c-challenge-delete-an-object-with-a-private-destructor/462293.rss">[C++ challenge] Delete an object with a private destructor</source>
      </item>
      <item>
        <title>[C++ challenge] Delete an object with a private destructor</title>
        <dc:creator><![CDATA[@The_Enforcer The Enforcer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_enforcer">@The_Enforcer</a> wrote:</p>
          <blockquote>
              <pre><code class="lang-auto">#include &lt;iostream&gt;
#include &lt;cstdlib&gt;

class Class
{
public:
	Class() { }

private:
	~Class() { std::cout &lt;&lt; ":)" &lt;&lt; std::endl; }
};

int main()
{
	Class* a = new Class; //1
	delete a; //2

	std::cin.sync();
	std::cin.get();
	return EXIT_SUCCESS;
}</code></pre>
<p>The line marked with 2 currently fails to compile, find a way around it. You’re allowed to make any modification to class ‘Class’ except adding any new non-private members to it (this includes changing the access specifier of the destructor) and calling delete or a function from the constructor. You may modify the code in function main however you wish - as long as it allocates the object and then deletes it.</p>
<p>Solution <span class="hashtag">#1</span> - Using the public constructor to smuggle out a pointer to a private function.</p>
<pre><code class="lang-auto">#include &lt;iostream&gt;
#include &lt;cstdlib&gt;

class Class
{
public:
	Class(void (** const fPtr) (const Class* const c)) { *fPtr = &amp;delete_; }

private:
	~Class() { std::cout &lt;&lt; ":)" &lt;&lt; std::endl; }
	static void delete_(const Class* const c) { delete c; }
};

int main()
{
	void (* delete_) (const Class* const c) = nullptr;
	Class* c = new Class(&amp;delete_);
	delete_(c);

	std::cin.sync();
	std::cin.get();
	return EXIT_SUCCESS;
}</code></pre>
<p>Solution <span class="hashtag">#2</span> - using a base class with a virtual public destructor, access control is not applied to virtual function calls.</p>
<pre><code class="lang-auto">#include &lt;iostream&gt;
#include &lt;cstdlib&gt;

class Base
{
public:
	Base() { }
	virtual ~Base() { }
};

class Class : public Base
{
public:
	Class() { }

private:
	~Class() { std::cout &lt;&lt; ":)" &lt;&lt; std::endl; }
};

int main()
{
	Base* base = new Class;
	delete base;

	std::cin.sync();
	std::cin.get();
	return EXIT_SUCCESS;
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-challenge-delete-an-object-with-a-private-destructor/462293/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-challenge-delete-an-object-with-a-private-destructor/462293/1</link>
        <pubDate>Thu, 27 Sep 2012 12:21:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-462293-1</guid>
        <source url="https://forum.moparisthebest.com/t/c-challenge-delete-an-object-with-a-private-destructor/462293.rss">[C++ challenge] Delete an object with a private destructor</source>
      </item>
  </channel>
</rss>
