<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Is this cool method for GUI? (Java)</title>
    <link>https://forum.moparisthebest.com/t/is-this-cool-method-for-gui-java/537179</link>
    <description>Well I have multiple frames and I did not want to use dispose() because it would close the window. 
I though of closing/showing frames within 1 window by using the factory pattern. 

[code=java]public abstract class GUI extends JFrame {
	protected String title;
	protected int width = 200;
	protected int height = 200;
	
	public GUI() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setTitle(title);
		setSize(width, height);
		
		show();
		setVisible(true);
	}
	
	public abstract void show();

        public void hide() {
            getContentPane().removeAll();
        }

}[/code]


[code=java]public class Launcher extends GUI {
	
	public Launcher() {
		super();
	}
	
	@Override
	public void show() {
		title = &quot;Launcher&quot;;
		
		setLocationRelativeTo(null);
		setResizable(false);

		getContentPane().setBackground(Color.BLACK);
		repaint();
	}
}[/code]

[code=java]public class Factory {
	
	public static Factory getGUI(String gui) {
		if (gui.equalsIgnoreCase(&quot;LAUNCHER&quot;)) {
			new Launcher();
		}
		return null;
	}

}[/code]

[code=java]public static void main(String[] args) {
		 Factory.getGUI(&quot;launcher&quot;);
	}[/code]


The hide() method would remove all the stuff on the frame then you would use show() to add everything back on and change all the things you need.

Would this be a bad idea to do? Are there any better ways to do this?

Note:
This was the first thing that came to mind and I couldn&#39;t find any better alternatives.

The frame does not open for some reason do you guys know why? I&#39;ll call the methods (twice?) and then the application will close. [size=8pt](Prob fail logic. Do you know whats wrong?)[/size]

Posted in a rush, sorry if anything does not make sense.</description>
    
    <lastBuildDate>Tue, 17 Dec 2013 19:56:32 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/is-this-cool-method-for-gui-java/537179.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Is this cool method for GUI? (Java)</title>
        <dc:creator><![CDATA[@Ashi Ashi]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ashi">@Ashi</a> wrote:</p>
          <blockquote>
              <p>[quote=“HcoJustin, post:2, topic:537179”]Dunno what this code is about but there are better ways to handle switching between UIs. If (based on the naming) you are switching from a launcher of some sort to the application, there is no problem with it closing for a second, or even opening the second before you close the first.</p>
<p>If you are constantly switching between the different UIs I would consider using a cardlayout.[/quote]<br>
Cardlayout is cool, thanks</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/is-this-cool-method-for-gui-java/537179/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/is-this-cool-method-for-gui-java/537179/3</link>
        <pubDate>Tue, 17 Dec 2013 19:56:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-537179-3</guid>
        <source url="https://forum.moparisthebest.com/t/is-this-cool-method-for-gui-java/537179.rss">Is this cool method for GUI? (Java)</source>
      </item>
      <item>
        <title>Is this cool method for GUI? (Java)</title>
        <dc:creator><![CDATA[@HcoJustin HcoJustin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hcojustin">@HcoJustin</a> wrote:</p>
          <blockquote>
              <p>Dunno what this code is about but there are better ways to handle switching between UIs. If (based on the naming) you are switching from a launcher of some sort to the application, there is no problem with it closing for a second, or even opening the second before you close the first.</p>
<p>If you are constantly switching between the different UIs I would consider using a cardlayout.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/is-this-cool-method-for-gui-java/537179/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/is-this-cool-method-for-gui-java/537179/2</link>
        <pubDate>Tue, 17 Dec 2013 18:41:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-537179-2</guid>
        <source url="https://forum.moparisthebest.com/t/is-this-cool-method-for-gui-java/537179.rss">Is this cool method for GUI? (Java)</source>
      </item>
      <item>
        <title>Is this cool method for GUI? (Java)</title>
        <dc:creator><![CDATA[@Ashi Ashi]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ashi">@Ashi</a> wrote:</p>
          <blockquote>
              <p>Well I have multiple frames and I did not want to use dispose() because it would close the window.<br>
I though of closing/showing frames within 1 window by using the factory pattern.</p>
<p>[code=java]public abstract class GUI extends JFrame {<br>
protected String title;<br>
protected int width = 200;<br>
protected int height = 200;</p>
<pre><code>public GUI() {
	setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	setTitle(title);
	setSize(width, height);
	
	show();
	setVisible(true);
}

public abstract void show();

    public void hide() {
        getContentPane().removeAll();
    }
</code></pre>
<p>}[/code]</p>
<p>[code=java]public class Launcher extends GUI {</p>
<pre><code>public Launcher() {
	super();
}

@Override
public void show() {
	title = "Launcher";
	
	setLocationRelativeTo(null);
	setResizable(false);

	getContentPane().setBackground(Color.BLACK);
	repaint();
}
</code></pre>
<p>}[/code]</p>
<p>[code=java]public class Factory {</p>
<pre><code>public static Factory getGUI(String gui) {
	if (gui.equalsIgnoreCase("LAUNCHER")) {
		new Launcher();
	}
	return null;
}
</code></pre>
<p>}[/code]</p>
<p><code>public static void main(String[] args) {
		 Factory.getGUI("launcher");
	}</code></p>
<p>The hide() method would remove all the stuff on the frame then you would use show() to add everything back on and change all the things you need.</p>
<p>Would this be a bad idea to do? Are there any better ways to do this?</p>
<p>Note:<br>
This was the first thing that came to mind and I couldn’t find any better alternatives.</p>
<p>The frame does not open for some reason do you guys know why? I’ll call the methods (twice?) and then the application will close. [size=8pt](Prob fail logic. Do you know whats wrong?)[/size]</p>
<p>Posted in a rush, sorry if anything does not make sense.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/is-this-cool-method-for-gui-java/537179/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/is-this-cool-method-for-gui-java/537179/1</link>
        <pubDate>Tue, 17 Dec 2013 16:36:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-537179-1</guid>
        <source url="https://forum.moparisthebest.com/t/is-this-cool-method-for-gui-java/537179.rss">Is this cool method for GUI? (Java)</source>
      </item>
  </channel>
</rss>
