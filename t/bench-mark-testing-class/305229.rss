<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Bench mark testing class</title>
    <link>https://forum.moparisthebest.com/t/bench-mark-testing-class/305229</link>
    <description>I got tired of having to make new test subjects each time I wanted a accurate result. So I made this: 

[code]

import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import java.lang.reflect.InvocationTargetException;

public final class benchmarks
{
	public static synchronized void testmethod(Method m, Object b, Object[] j) throws IllegalAccessException, InvocationTargetException
	{
		clinit();
		Thread t = Thread.currentThread();
		pauseall(t);
		int n = t.getPriority();
		t.setPriority(1);
		System.gc();
		bmem = jrt.freeMemory();
		ntime = System.nanoTime();
		m.invoke(b, j);
		ntime = System.nanoTime() - ntime;
		bmem -= jrt.freeMemory();
		t.setPriority(n);
		resumeall(t);
	}

	public static synchronized void testconstructor(Constructor c, Object[] b) throws InstantiationException, IllegalAccessException, InvocationTargetException
	{
		clinit();
		Thread t = Thread.currentThread();
		pauseall(t);
		int n = t.getPriority();
		t.setPriority(1);
		System.gc();
		bmem = jrt.freeMemory();
		ntime = System.nanoTime();
		c.newInstance(b);
		ntime = System.nanoTime() - ntime;
		bmem -= jrt.freeMemory();
		t.setPriority(n);
		resumeall(t);
	}

	private static void pauseall(Thread t)
	{
		stgroup.enumerate(tbuf);
		for (int n = 0; n != 1000; n++)
			if (tbuf[n] != null &amp;&amp; tbuf[n] != t &amp;&amp; tbuf[n].isAlive())
				try
				{
					tbuf[n].suspend();
				}
				catch (Throwable h) { }


	}

	private static void resumeall(Thread t)
	{
		stgroup.enumerate(tbuf);
		for (int n = 0; n != 1000; n++)
			if (tbuf[n] != null &amp;&amp; tbuf[n] != t &amp;&amp; tbuf[n].isAlive())
				try
				{
					tbuf[n].resume();
				}
				catch (Throwable h) { }


	}

	public static long mtime()
	{
		if (ntime % 1000000L &gt; 4999999L)
			return ntime / 1000000L + 1L;

		return ntime / 1000000L;
	}

	public static long kmem()
	{
		if (bmem % 1024L &gt; 511L)
			return bmem / 1024L + 1L;

		return bmem / 1024L;
	}

	public static synchronized void clinit()
	{
		if (clinited)
			return;

		stgroup = Thread.currentThread().getThreadGroup();
		for (ThreadGroup g = stgroup.getParent(); g != null; g = stgroup.getParent())
			stgroup = g;

		tbuf = new Thread[1000];
		jrt = Runtime.getRuntime();
		clinited = true;
	}

	private static boolean clinited;
	public static long ntime;
	public static long bmem;
	private static Thread[] tbuf;
	private static ThreadGroup stgroup;
	private static Runtime jrt;
}

[/code]

You can make this return an test result Object if you want, I made it set static fields for results.

Example:

[code]

import java.lang.reflect.Method;

public final class test
{
	public static void main(String[] s)
	{
		try
		{
			Class c = Class.forName(&quot;java.nio.ByteBuffer&quot;);
			Class[] l = new Class[] { Integer.TYPE };
			Method m = c.getDeclaredMethod(&quot;allocate&quot;, l);
			Object[] b = new Object[] { 1024 };
			System.out.println(&quot;test: \&quot;java.nio.ByteBuffer allocate(jint[jobj&lt;-&gt;jint])\&quot;&quot;);
			for (int n = 0; n != 32; n++)
			{
				benchmarks.testmethod(m, null, b);
				System.out.println(&quot;ntime: &quot; + benchmarks.ntime + &quot; mtime:&quot; + benchmarks.mtime() + &quot; bmem: &quot; + benchmarks.bmem + &quot; kmem:&quot; + benchmarks.kmem() + &quot;k&quot;);
			}

			m = c.getDeclaredMethod(&quot;allocateDirect&quot;, l);
			System.out.println(&quot;test: \&quot;java.nio.ByteBuffer allocateDirect(jint[jobj&lt;-&gt;jint])\&quot;&quot;);
			for (int n = 0; n != 32; n++)
			{
				benchmarks.testmethod(m, null, b);
				System.out.println(&quot;ntime: &quot; + benchmarks.ntime + &quot; mtime:&quot; + benchmarks.mtime() + &quot; bmem: &quot; + benchmarks.bmem + &quot; kmem:&quot; + benchmarks.kmem() + &quot;k&quot;);
			}

			System.exit(0);
		}
		catch (Exception x)
		{
			x.printStackTrace();
			System.exit(2);
		}
	}
}

[/code]

[code]
test: &quot;java.nio.ByteBuffer allocate(jint[jobj&lt;-&gt;jint])&quot;
ntime: 842285 mtime:0 bmem: 18376 kmem:18k //dont trust the first test because it is preforming class initialization
ntime: 65372 mtime:0 bmem: 19440 kmem:19k
ntime: 79619 mtime:0 bmem: 19440 kmem:19k
ntime: 82972 mtime:0 bmem: 19440 kmem:19k
ntime: 77105 mtime:0 bmem: 19440 kmem:19k
ntime: 68724 mtime:0 bmem: 19440 kmem:19k
ntime: 77105 mtime:0 bmem: 19440 kmem:19k
ntime: 58667 mtime:0 bmem: 19440 kmem:19k
ntime: 60343 mtime:0 bmem: 19440 kmem:19k
ntime: 66210 mtime:0 bmem: 19440 kmem:19k
ntime: 58667 mtime:0 bmem: 19440 kmem:19k
ntime: 57829 mtime:0 bmem: 19440 kmem:19k
ntime: 65372 mtime:0 bmem: 19440 kmem:19k
ntime: 72914 mtime:0 bmem: 19440 kmem:19k
ntime: 507048 mtime:0 bmem: 19440 kmem:19k
ntime: 8350780 mtime:8 bmem: 18400 kmem:18k //seperate invoked gc?
ntime: 119010 mtime:0 bmem: 19440 kmem:19k
ntime: 43581 mtime:0 bmem: 19440 kmem:19k
ntime: 62857 mtime:0 bmem: 19440 kmem:19k
ntime: 51124 mtime:0 bmem: 19440 kmem:19k
ntime: 42743 mtime:0 bmem: 19440 kmem:19k
ntime: 46095 mtime:0 bmem: 19440 kmem:19k
ntime: 47771 mtime:0 bmem: 19440 kmem:19k
ntime: 58666 mtime:0 bmem: 19440 kmem:19k
ntime: 57829 mtime:0 bmem: 19440 kmem:19k
ntime: 46933 mtime:0 bmem: 19440 kmem:19k
ntime: 45257 mtime:0 bmem: 19440 kmem:19k
ntime: 56152 mtime:0 bmem: 19440 kmem:19k
ntime: 254781 mtime:0 bmem: 19440 kmem:19k
ntime: 42742 mtime:0 bmem: 19440 kmem:19k
ntime: 44419 mtime:0 bmem: 19440 kmem:19k
ntime: 44419 mtime:0 bmem: 19440 kmem:19k
test: &quot;java.nio.ByteBuffer allocateDirect(jint[jobj&lt;-&gt;jint])&quot;
ntime: 2049981 mtime:2 bmem: 18408 kmem:18k //...
ntime: 76266 mtime:0 bmem: 120 kmem:0k
ntime: 70400 mtime:0 bmem: 120 kmem:0k
ntime: 104762 mtime:0 bmem: 120 kmem:0k
ntime: 71238 mtime:0 bmem: 120 kmem:0k
ntime: 84647 mtime:0 bmem: 120 kmem:0k
ntime: 75428 mtime:0 bmem: 120 kmem:0k
ntime: 74591 mtime:0 bmem: 120 kmem:0k
ntime: 191086 mtime:0 bmem: 120 kmem:0k
ntime: 70400 mtime:0 bmem: 120 kmem:0k
ntime: 85486 mtime:0 bmem: 120 kmem:0k
ntime: 88000 mtime:0 bmem: 120 kmem:0k
ntime: 146666 mtime:0 bmem: 120 kmem:0k
ntime: 72914 mtime:0 bmem: 120 kmem:0k
ntime: 70400 mtime:0 bmem: 120 kmem:0k
ntime: 2872990 mtime:2 bmem: 18504 kmem:18k //...
ntime: 104762 mtime:0 bmem: 120 kmem:0k
ntime: 57829 mtime:0 bmem: 120 kmem:0k
ntime: 65371 mtime:0 bmem: 120 kmem:0k
ntime: 88000 mtime:0 bmem: 120 kmem:0k
ntime: 60343 mtime:0 bmem: 120 kmem:0k
ntime: 76267 mtime:0 bmem: 120 kmem:0k
ntime: 59505 mtime:0 bmem: 120 kmem:0k
ntime: 89676 mtime:0 bmem: 120 kmem:0k
ntime: 57829 mtime:0 bmem: 120 kmem:0k
ntime: 66210 mtime:0 bmem: 120 kmem:0k
ntime: 74590 mtime:0 bmem: 120 kmem:0k
ntime: 56991 mtime:0 bmem: 120 kmem:0k
ntime: 62857 mtime:0 bmem: 120 kmem:0k
ntime: 61181 mtime:0 bmem: 120 kmem:0k
ntime: 56990 mtime:0 bmem: 120 kmem:0k
ntime: 91352 mtime:0 bmem: 120 kmem:0k
[/code]

Note: non direct jnio Buffer&#39;s got owned.</description>
    
    <lastBuildDate>Thu, 01 Oct 2009 21:52:13 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/bench-mark-testing-class/305229.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Bench mark testing class</title>
        <dc:creator><![CDATA[@Killer-99-pkz Killer-99-pkz]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/killer-99-pkz">@Killer-99-pkz</a> wrote:</p>
          <blockquote>
              <p>neither do i</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bench-mark-testing-class/305229/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bench-mark-testing-class/305229/12</link>
        <pubDate>Thu, 01 Oct 2009 21:52:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-305229-12</guid>
        <source url="https://forum.moparisthebest.com/t/bench-mark-testing-class/305229.rss">Bench mark testing class</source>
      </item>
      <item>
        <title>Bench mark testing class</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>i dont get it</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bench-mark-testing-class/305229/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bench-mark-testing-class/305229/11</link>
        <pubDate>Thu, 01 Oct 2009 12:58:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-305229-11</guid>
        <source url="https://forum.moparisthebest.com/t/bench-mark-testing-class/305229.rss">Bench mark testing class</source>
      </item>
      <item>
        <title>Bench mark testing class</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="9" data-topic="305229">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/abraham2119/40/5_513041d5f7104045db30895d3b90af16.png" class="avatar"> abraham2119:</div>
<blockquote>
<p>he should have the orsm award because he has got to the point where he outruns frank_!</p>
</blockquote>
</aside>
<p>not funny go away</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bench-mark-testing-class/305229/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bench-mark-testing-class/305229/10</link>
        <pubDate>Thu, 01 Oct 2009 12:34:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-305229-10</guid>
        <source url="https://forum.moparisthebest.com/t/bench-mark-testing-class/305229.rss">Bench mark testing class</source>
      </item>
      <item>
        <title>Bench mark testing class</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>he should have the orsm award because he has got to the point where he outruns frank_!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bench-mark-testing-class/305229/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bench-mark-testing-class/305229/9</link>
        <pubDate>Wed, 30 Sep 2009 22:57:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-305229-9</guid>
        <source url="https://forum.moparisthebest.com/t/bench-mark-testing-class/305229.rss">Bench mark testing class</source>
      </item>
      <item>
        <title>Bench mark testing class</title>
        <dc:creator><![CDATA[@system system]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/system">@system</a> wrote:</p>
          <blockquote>
              <p>AHAHAHAHA.</p>
<p>i think i’m going to play runescape legit now</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bench-mark-testing-class/305229/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bench-mark-testing-class/305229/8</link>
        <pubDate>Wed, 30 Sep 2009 02:59:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-305229-8</guid>
        <source url="https://forum.moparisthebest.com/t/bench-mark-testing-class/305229.rss">Bench mark testing class</source>
      </item>
      <item>
        <title>Bench mark testing class</title>
        <dc:creator><![CDATA[@Killer-99-pkz Killer-99-pkz]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/killer-99-pkz">@Killer-99-pkz</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="6" data-topic="305229">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/unhandled/40/5_513041d5f7104045db30895d3b90af16.png" class="avatar"> Unhandled:</div>
<blockquote>
<p>Nope, you seriously need a java guru award.</p>
</blockquote>
</aside>
<p>ok?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bench-mark-testing-class/305229/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bench-mark-testing-class/305229/7</link>
        <pubDate>Wed, 30 Sep 2009 01:10:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-305229-7</guid>
        <source url="https://forum.moparisthebest.com/t/bench-mark-testing-class/305229.rss">Bench mark testing class</source>
      </item>
      <item>
        <title>Bench mark testing class</title>
        <dc:creator><![CDATA[@Unhandled Unhandled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unhandled">@Unhandled</a> wrote:</p>
          <blockquote>
              <p>Nope, you seriously need a java guru award.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bench-mark-testing-class/305229/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bench-mark-testing-class/305229/6</link>
        <pubDate>Wed, 30 Sep 2009 01:05:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-305229-6</guid>
        <source url="https://forum.moparisthebest.com/t/bench-mark-testing-class/305229.rss">Bench mark testing class</source>
      </item>
      <item>
        <title>Bench mark testing class</title>
        <dc:creator><![CDATA[@Killer-99-pkz Killer-99-pkz]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/killer-99-pkz">@Killer-99-pkz</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="3" data-topic="305229">
<div class="title">
<div class="quote-controls"></div>
 seand:</div>
<blockquote>
<p>omg this is great! how can i nominate killer-99-pkz for the java guru award?</p>
</blockquote>
</aside>
<p>Are you mocking me?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bench-mark-testing-class/305229/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bench-mark-testing-class/305229/5</link>
        <pubDate>Wed, 30 Sep 2009 01:04:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-305229-5</guid>
        <source url="https://forum.moparisthebest.com/t/bench-mark-testing-class/305229.rss">Bench mark testing class</source>
      </item>
      <item>
        <title>Bench mark testing class</title>
        <dc:creator><![CDATA[@nueb35 Nueb35]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/nueb35">@nueb35</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="3" data-topic="305229">
<div class="title">
<div class="quote-controls"></div>
 seand:</div>
<blockquote>
<p>omg this is great! how can i nominate killer-99-pkz for the java guru award?</p>
</blockquote>
</aside>
<p>+1</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bench-mark-testing-class/305229/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bench-mark-testing-class/305229/4</link>
        <pubDate>Wed, 30 Sep 2009 00:06:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-305229-4</guid>
        <source url="https://forum.moparisthebest.com/t/bench-mark-testing-class/305229.rss">Bench mark testing class</source>
      </item>
      <item>
        <title>Bench mark testing class</title>
        <dc:creator><![CDATA[@system system]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/system">@system</a> wrote:</p>
          <blockquote>
              <p>omg this is great! how can i nominate killer-99-pkz for the java guru award?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bench-mark-testing-class/305229/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bench-mark-testing-class/305229/3</link>
        <pubDate>Tue, 29 Sep 2009 22:51:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-305229-3</guid>
        <source url="https://forum.moparisthebest.com/t/bench-mark-testing-class/305229.rss">Bench mark testing class</source>
      </item>
      <item>
        <title>Bench mark testing class</title>
        <dc:creator><![CDATA[@Unhandled Unhandled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unhandled">@Unhandled</a> wrote:</p>
          <blockquote>
              <p>Stop writing obfuscated code.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bench-mark-testing-class/305229/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bench-mark-testing-class/305229/2</link>
        <pubDate>Tue, 29 Sep 2009 21:47:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-305229-2</guid>
        <source url="https://forum.moparisthebest.com/t/bench-mark-testing-class/305229.rss">Bench mark testing class</source>
      </item>
      <item>
        <title>Bench mark testing class</title>
        <dc:creator><![CDATA[@Killer-99-pkz Killer-99-pkz]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/killer-99-pkz">@Killer-99-pkz</a> wrote:</p>
          <blockquote>
              <p>I got tired of having to make new test subjects each time I wanted a accurate result. So I made this:</p>
<pre><code class="lang-auto">
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import java.lang.reflect.InvocationTargetException;

public final class benchmarks
{
	public static synchronized void testmethod(Method m, Object b, Object[] j) throws IllegalAccessException, InvocationTargetException
	{
		clinit();
		Thread t = Thread.currentThread();
		pauseall(t);
		int n = t.getPriority();
		t.setPriority(1);
		System.gc();
		bmem = jrt.freeMemory();
		ntime = System.nanoTime();
		m.invoke(b, j);
		ntime = System.nanoTime() - ntime;
		bmem -= jrt.freeMemory();
		t.setPriority(n);
		resumeall(t);
	}

	public static synchronized void testconstructor(Constructor c, Object[] b) throws InstantiationException, IllegalAccessException, InvocationTargetException
	{
		clinit();
		Thread t = Thread.currentThread();
		pauseall(t);
		int n = t.getPriority();
		t.setPriority(1);
		System.gc();
		bmem = jrt.freeMemory();
		ntime = System.nanoTime();
		c.newInstance(b);
		ntime = System.nanoTime() - ntime;
		bmem -= jrt.freeMemory();
		t.setPriority(n);
		resumeall(t);
	}

	private static void pauseall(Thread t)
	{
		stgroup.enumerate(tbuf);
		for (int n = 0; n != 1000; n++)
			if (tbuf[n] != null &amp;&amp; tbuf[n] != t &amp;&amp; tbuf[n].isAlive())
				try
				{
					tbuf[n].suspend();
				}
				catch (Throwable h) { }


	}

	private static void resumeall(Thread t)
	{
		stgroup.enumerate(tbuf);
		for (int n = 0; n != 1000; n++)
			if (tbuf[n] != null &amp;&amp; tbuf[n] != t &amp;&amp; tbuf[n].isAlive())
				try
				{
					tbuf[n].resume();
				}
				catch (Throwable h) { }


	}

	public static long mtime()
	{
		if (ntime % 1000000L &gt; 4999999L)
			return ntime / 1000000L + 1L;

		return ntime / 1000000L;
	}

	public static long kmem()
	{
		if (bmem % 1024L &gt; 511L)
			return bmem / 1024L + 1L;

		return bmem / 1024L;
	}

	public static synchronized void clinit()
	{
		if (clinited)
			return;

		stgroup = Thread.currentThread().getThreadGroup();
		for (ThreadGroup g = stgroup.getParent(); g != null; g = stgroup.getParent())
			stgroup = g;

		tbuf = new Thread[1000];
		jrt = Runtime.getRuntime();
		clinited = true;
	}

	private static boolean clinited;
	public static long ntime;
	public static long bmem;
	private static Thread[] tbuf;
	private static ThreadGroup stgroup;
	private static Runtime jrt;
}
</code></pre>
<p>You can make this return an test result Object if you want, I made it set static fields for results.</p>
<p>Example:</p>
<pre><code class="lang-auto">
import java.lang.reflect.Method;

public final class test
{
	public static void main(String[] s)
	{
		try
		{
			Class c = Class.forName("java.nio.ByteBuffer");
			Class[] l = new Class[] { Integer.TYPE };
			Method m = c.getDeclaredMethod("allocate", l);
			Object[] b = new Object[] { 1024 };
			System.out.println("test: \"java.nio.ByteBuffer allocate(jint[jobj&lt;-&gt;jint])\"");
			for (int n = 0; n != 32; n++)
			{
				benchmarks.testmethod(m, null, b);
				System.out.println("ntime: " + benchmarks.ntime + " mtime:" + benchmarks.mtime() + " bmem: " + benchmarks.bmem + " kmem:" + benchmarks.kmem() + "k");
			}

			m = c.getDeclaredMethod("allocateDirect", l);
			System.out.println("test: \"java.nio.ByteBuffer allocateDirect(jint[jobj&lt;-&gt;jint])\"");
			for (int n = 0; n != 32; n++)
			{
				benchmarks.testmethod(m, null, b);
				System.out.println("ntime: " + benchmarks.ntime + " mtime:" + benchmarks.mtime() + " bmem: " + benchmarks.bmem + " kmem:" + benchmarks.kmem() + "k");
			}

			System.exit(0);
		}
		catch (Exception x)
		{
			x.printStackTrace();
			System.exit(2);
		}
	}
}
</code></pre>
<pre><code class="lang-auto">test: "java.nio.ByteBuffer allocate(jint[jobj&lt;-&gt;jint])"
ntime: 842285 mtime:0 bmem: 18376 kmem:18k //dont trust the first test because it is preforming class initialization
ntime: 65372 mtime:0 bmem: 19440 kmem:19k
ntime: 79619 mtime:0 bmem: 19440 kmem:19k
ntime: 82972 mtime:0 bmem: 19440 kmem:19k
ntime: 77105 mtime:0 bmem: 19440 kmem:19k
ntime: 68724 mtime:0 bmem: 19440 kmem:19k
ntime: 77105 mtime:0 bmem: 19440 kmem:19k
ntime: 58667 mtime:0 bmem: 19440 kmem:19k
ntime: 60343 mtime:0 bmem: 19440 kmem:19k
ntime: 66210 mtime:0 bmem: 19440 kmem:19k
ntime: 58667 mtime:0 bmem: 19440 kmem:19k
ntime: 57829 mtime:0 bmem: 19440 kmem:19k
ntime: 65372 mtime:0 bmem: 19440 kmem:19k
ntime: 72914 mtime:0 bmem: 19440 kmem:19k
ntime: 507048 mtime:0 bmem: 19440 kmem:19k
ntime: 8350780 mtime:8 bmem: 18400 kmem:18k //seperate invoked gc?
ntime: 119010 mtime:0 bmem: 19440 kmem:19k
ntime: 43581 mtime:0 bmem: 19440 kmem:19k
ntime: 62857 mtime:0 bmem: 19440 kmem:19k
ntime: 51124 mtime:0 bmem: 19440 kmem:19k
ntime: 42743 mtime:0 bmem: 19440 kmem:19k
ntime: 46095 mtime:0 bmem: 19440 kmem:19k
ntime: 47771 mtime:0 bmem: 19440 kmem:19k
ntime: 58666 mtime:0 bmem: 19440 kmem:19k
ntime: 57829 mtime:0 bmem: 19440 kmem:19k
ntime: 46933 mtime:0 bmem: 19440 kmem:19k
ntime: 45257 mtime:0 bmem: 19440 kmem:19k
ntime: 56152 mtime:0 bmem: 19440 kmem:19k
ntime: 254781 mtime:0 bmem: 19440 kmem:19k
ntime: 42742 mtime:0 bmem: 19440 kmem:19k
ntime: 44419 mtime:0 bmem: 19440 kmem:19k
ntime: 44419 mtime:0 bmem: 19440 kmem:19k
test: "java.nio.ByteBuffer allocateDirect(jint[jobj&lt;-&gt;jint])"
ntime: 2049981 mtime:2 bmem: 18408 kmem:18k //...
ntime: 76266 mtime:0 bmem: 120 kmem:0k
ntime: 70400 mtime:0 bmem: 120 kmem:0k
ntime: 104762 mtime:0 bmem: 120 kmem:0k
ntime: 71238 mtime:0 bmem: 120 kmem:0k
ntime: 84647 mtime:0 bmem: 120 kmem:0k
ntime: 75428 mtime:0 bmem: 120 kmem:0k
ntime: 74591 mtime:0 bmem: 120 kmem:0k
ntime: 191086 mtime:0 bmem: 120 kmem:0k
ntime: 70400 mtime:0 bmem: 120 kmem:0k
ntime: 85486 mtime:0 bmem: 120 kmem:0k
ntime: 88000 mtime:0 bmem: 120 kmem:0k
ntime: 146666 mtime:0 bmem: 120 kmem:0k
ntime: 72914 mtime:0 bmem: 120 kmem:0k
ntime: 70400 mtime:0 bmem: 120 kmem:0k
ntime: 2872990 mtime:2 bmem: 18504 kmem:18k //...
ntime: 104762 mtime:0 bmem: 120 kmem:0k
ntime: 57829 mtime:0 bmem: 120 kmem:0k
ntime: 65371 mtime:0 bmem: 120 kmem:0k
ntime: 88000 mtime:0 bmem: 120 kmem:0k
ntime: 60343 mtime:0 bmem: 120 kmem:0k
ntime: 76267 mtime:0 bmem: 120 kmem:0k
ntime: 59505 mtime:0 bmem: 120 kmem:0k
ntime: 89676 mtime:0 bmem: 120 kmem:0k
ntime: 57829 mtime:0 bmem: 120 kmem:0k
ntime: 66210 mtime:0 bmem: 120 kmem:0k
ntime: 74590 mtime:0 bmem: 120 kmem:0k
ntime: 56991 mtime:0 bmem: 120 kmem:0k
ntime: 62857 mtime:0 bmem: 120 kmem:0k
ntime: 61181 mtime:0 bmem: 120 kmem:0k
ntime: 56990 mtime:0 bmem: 120 kmem:0k
ntime: 91352 mtime:0 bmem: 120 kmem:0k</code></pre>
<p>Note: non direct jnio Buffer’s got owned.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bench-mark-testing-class/305229/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bench-mark-testing-class/305229/1</link>
        <pubDate>Tue, 29 Sep 2009 20:59:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-305229-1</guid>
        <source url="https://forum.moparisthebest.com/t/bench-mark-testing-class/305229.rss">Bench mark testing class</source>
      </item>
  </channel>
</rss>
