<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Range glitch? [delta]</title>
    <link>https://forum.moparisthebest.com/t/range-glitch-delta/452291</link>
    <description>[code]java.lang.ArrayIndexOutOfBoundsException: 100
        at client.CreateProjectile(client.java:7321)
        at client.rangeGFXNPC(client.java:2256)
        at client.process(client.java:16614)
        at PlayerHandler.process(PlayerHandler.java:286)
        at process.run(process.java:23)
        at java.lang.Thread.run(Unknown Source)
Game saved for player Mark[/code]

I get this error everytime i range an npc? i looked up all the lines and replaced them with the old lines i had in my older source.. didnt work :/. so please can someone help me???

Please, this project means alot to me.. if anyone helps i will be sure to give him credits in the future.

my lines: 
[code]    public void CreateProjectile(int casterY, int casterX, int offsetY,
			int offsetX, int angle, int speed, int gfxMoving, int startHeight,
			int endHeight, int MageAttackIndex)
    {
label0:
        {
            int i2 = 1;
            do
            {
                PlayerHandler _tmp = server.playerHandler;
                if(i2 &gt;= 650)
                    break label0;
                PlayerHandler _tmp1 = server.playerHandler;
                if(PlayerHandler.players[i2] != null)
                {
                    PlayerHandler _tmp2 = server.playerHandler;
                    client client1 = (client)PlayerHandler.players[i2];
                    if(client1.WithinDistance(absX, absY, client1.absX, client1.absY, 60) &amp;&amp; client1.heightLevel == heightLevel)
                    {
                        PlayerHandler _tmp3 = server.playerHandler;
                        if(PlayerHandler.players[i2] != null)
                        {
                            PlayerHandler _tmp4 = server.playerHandler;
                            if(!PlayerHandler.players[i2].disconnected)
                            {
                                client1.outStream.createFrame(85);
                                client1.outStream.writeByteC(casterY - client1.mapRegionY * 8 - 2);
                                client1.outStream.writeByteC(casterX - client1.mapRegionX * 8 - 3);
                                client1.outStream.createFrame(117);
                                client1.outStream.writeByte(angle);
                                client1.outStream.writeByte(offsetY);
                                client1.outStream.writeByte(offsetX);
                                client1.outStream.writeWord(MageAttackIndex);
                                client1.outStream.writeWord(gfxMoving);
                                client1.outStream.writeByte(startHeight);
                                client1.outStream.writeByte(endHeight);
                                client1.outStream.writeWord(51);
                                client1.outStream.writeWord(speed);
                                client1.outStream.writeByte(16);
                                client1.outStream.writeByte(64);
                            }
                        }
                    }
                }
                i2++;
            } while(true);
        }
    }

    public void CreateProjectile2(int i, int j, int k, int l, int i1, int j1, int k1, 
            int l1)
    {
label0:
        {
            int i2 = 1;
            do
            {
                PlayerHandler _tmp = server.playerHandler;
                if(i2 &gt;= 275)
                    break label0;
                PlayerHandler _tmp1 = server.playerHandler;
                if(PlayerHandler.players[i2] != null)
                {
                    PlayerHandler _tmp2 = server.playerHandler;
                    client client1 = (client)PlayerHandler.players[i2];
                    if(client1.WithinDistance(absX, absY, client1.absX, client1.absY, 60) &amp;&amp; client1.heightLevel == heightLevel)
                    {
                        PlayerHandler _tmp3 = server.playerHandler;
                        if(PlayerHandler.players[i2] != null)
                        {
                            PlayerHandler _tmp4 = server.playerHandler;
                            if(!PlayerHandler.players[i2].disconnected)
                            {
                                client1.outStream.createFrame(85);
                                client1.outStream.writeByteC(i - client1.mapRegionY * 8 - 2);
                                client1.outStream.writeByteC(j - client1.mapRegionX * 8 - 3);
                                client1.outStream.createFrame(117);
                                client1.outStream.writeByte(50);
                                client1.outStream.writeByte(k);
                                client1.outStream.writeByte(l);
                                client1.outStream.writeWord(l1);
                                client1.outStream.writeWord(i1);
                                client1.outStream.writeByte(j1);
                                client1.outStream.writeByte(31);
                                client1.outStream.writeWord(51);
                                client1.outStream.writeWord(k1);
                                client1.outStream.writeByte(16);
                                client1.outStream.writeByte(64);
                            }
                        }
                    }
                }
                i2++;
            } while(true);
        }
    }[/code]
[code]
public void rangeGFX(int speed, int arrow){
int EnemyX = 0;
int EnemyY = 0;
client AttackingOn2 = (client) server.playerHandler.players[AttackingOn];
if(AttackingOn2 != null){
EnemyX = PlayerHandler.players[AttackingOn].absX;
EnemyY = PlayerHandler.players[AttackingOn].absY;
}
				int offsetX = (absY - EnemyY) * -1;
				int offsetY = (absX - EnemyX) * -1;
CreateProjectile(absY, absX, offsetY, offsetX, 50, speed, arrow, 43, 31, -AttackingOn-1);
} 
public void rangeGFXNPC(int speed, int arrow){
		int EnemyX = server.npcHandler.npcs[attacknpc].absX;
		int EnemyY = server.npcHandler.npcs[attacknpc].absY;
				int offsetX = (absY - EnemyY) * -1;
				int offsetY = (absX - EnemyX) * -1;
CreateProjectile(absY, absX, offsetY, offsetX, 50, speed, arrow, 43, 31, attacknpc + 1);
}
public void degradeCrystalBow() {
if(playerEquipment[playerWeapon] == 4214 &amp;&amp; arrowsLeft &lt; 1){
playerEquipment[playerWeapon] = 4215;
playerEquipmentN[playerWeapon] = 1;
setEquipment(4215, 1, playerWeapon);
sM(&quot;Your crystal bow has slightly degraded!&quot;);
arrowsLeft = 100;
}
if(playerEquipment[playerWeapon] == 4215 &amp;&amp; arrowsLeft &lt; 1){
playerEquipment[playerWeapon] = 4216;
playerEquipmentN[playerWeapon] = 1;
setEquipment(4216, 1, playerWeapon);
sM(&quot;Your crystal bow has slightly degraded!&quot;);
arrowsLeft = 100;
}
if(playerEquipment[playerWeapon] == 4216 &amp;&amp; arrowsLeft &lt; 1){
playerEquipment[playerWeapon] = 4217;
playerEquipmentN[playerWeapon] = 1;
setEquipment(4217, 1, playerWeapon);
sM(&quot;Your crystal bow has slightly degraded!&quot;);
arrowsLeft = 100;
}
if(playerEquipment[playerWeapon] == 4217 &amp;&amp; arrowsLeft &lt; 1){
playerEquipment[playerWeapon] = 4218;
playerEquipmentN[playerWeapon] = 1;
setEquipment(4218, 1, playerWeapon);
sM(&quot;Your crystal bow has slightly degraded!&quot;);
arrowsLeft = 100;
}
if(playerEquipment[playerWeapon] == 4218 &amp;&amp; arrowsLeft &lt; 1){
playerEquipment[playerWeapon] = 4219;
playerEquipmentN[playerWeapon] = 1;
setEquipment(4219, 1, playerWeapon);
sM(&quot;Your crystal bow has slightly degraded!&quot;);
arrowsLeft = 100;
}
if(playerEquipment[playerWeapon] == 4219 &amp;&amp; arrowsLeft &lt; 1){
playerEquipment[playerWeapon] = 4220;
playerEquipmentN[playerWeapon] = 1;
setEquipment(4220, 1, playerWeapon);
sM(&quot;Your crystal bow has slightly degraded!&quot;);
arrowsLeft = 100;
}
if(playerEquipment[playerWeapon] == 4220 &amp;&amp; arrowsLeft &lt; 1){
playerEquipment[playerWeapon] = 4221;
playerEquipmentN[playerWeapon] = 1;
setEquipment(4221, 1, playerWeapon);
sM(&quot;Your crystal bow has slightly degraded!&quot;);
arrowsLeft = 100;
}
if(playerEquipment[playerWeapon] == 4221 &amp;&amp; arrowsLeft &lt; 1){
playerEquipment[playerWeapon] = 4222;
playerEquipmentN[playerWeapon] = 1;
setEquipment(4222, 1, playerWeapon);
sM(&quot;Your crystal bow has slightly degraded!&quot;);
arrowsLeft = 100;
}
if(playerEquipment[playerWeapon] == 4222 &amp;&amp; arrowsLeft &lt; 1){
playerEquipment[playerWeapon] = 4223;
playerEquipmentN[playerWeapon] = 1;
setEquipment(4223, 1, playerWeapon);
sM(&quot;Your crystal bow has slightly degraded!&quot;);
arrowsLeft = 100;
}
if(playerEquipment[playerWeapon] == 4223 &amp;&amp; arrowsLeft &lt; 1){
playerEquipment[playerWeapon] = -1;
playerEquipmentN[playerWeapon] = 0;
setEquipment(-1, 1, playerWeapon);
sM(&quot;Your crystal bow has slightly degraded!&quot;);
arrowsLeft = 100;
}
}
public void degradeCrystalShield() {
if(playerEquipment[playerShield] == 4224 &amp;&amp; shieldLeft &lt; 1){
playerEquipment[playerShield] = 4226;
playerEquipmentN[playerShield] = 1;
setEquipment(4226, 1, playerShield);
sM(&quot;Your crystal shield has slightly degraded!&quot;);
shieldLeft = 100;
}
if(playerEquipment[playerShield] == 4225 &amp;&amp; shieldLeft &lt; 1){
playerEquipment[playerShield] = 4226;
playerEquipmentN[playerShield] = 1;
setEquipment(4226, 1, playerShield);
sM(&quot;Your crystal shield has slightly degraded!&quot;);
shieldLeft = 100;
}
if(playerEquipment[playerShield] == 4226 &amp;&amp; shieldLeft &lt; 1){
playerEquipment[playerShield] = 4227;
playerEquipmentN[playerShield] = 1;
setEquipment(4227, 1, playerShield);
sM(&quot;Your crystal shield has slightly degraded!&quot;);
shieldLeft = 100;
}
if(playerEquipment[playerShield] == 4227 &amp;&amp; shieldLeft &lt; 1){
playerEquipment[playerShield] = 4228;
playerEquipmentN[playerShield] = 1;
setEquipment(4228, 1, playerShield);
sM(&quot;Your crystal shield has slightly degraded!&quot;);
shieldLeft = 100;
}
if(playerEquipment[playerShield] == 4228 &amp;&amp; shieldLeft &lt; 1){
playerEquipment[playerShield] = 4229;
playerEquipmentN[playerShield] = 1;
setEquipment(4229, 1, playerShield);
sM(&quot;Your crystal shield has slightly degraded!&quot;);
shieldLeft = 100;
}
if(playerEquipment[playerShield] == 4229 &amp;&amp; shieldLeft &lt; 1){
playerEquipment[playerShield] = 4230;
playerEquipmentN[playerShield] = 1;
setEquipment(4230, 1, playerShield);
sM(&quot;Your crystal shield has slightly degraded!&quot;);
shieldLeft = 100;
}
if(playerEquipment[playerShield] == 4230 &amp;&amp; shieldLeft &lt; 1){
playerEquipment[playerShield] = 4231;
playerEquipmentN[playerShield] = 1;
setEquipment(4231, 1, playerShield);
sM(&quot;Your crystal shield has slightly degraded!&quot;);
shieldLeft = 100;
}
if(playerEquipment[playerShield] == 4231 &amp;&amp; shieldLeft &lt; 1){
playerEquipment[playerShield] = 4232;
playerEquipmentN[playerShield] = 1;
setEquipment(4232, 1, playerShield);
sM(&quot;Your crystal shield has slightly degraded!&quot;);
shieldLeft = 100;
}
if(playerEquipment[playerShield] == 4232 &amp;&amp; shieldLeft &lt; 1){
playerEquipment[playerShield] = 4233;
playerEquipmentN[playerShield] = 1;
setEquipment(4233, 1, playerShield);
sM(&quot;Your crystal shield has slightly degraded!&quot;);
shieldLeft = 100;
}
if(playerEquipment[playerShield] == 4233 &amp;&amp; shieldLeft &lt; 1){
playerEquipment[playerShield] = 4234;
playerEquipmentN[playerShield] = 1;
setEquipment(4234, 1, playerShield);
sM(&quot;Your crystal shield has slightly degraded!&quot;);
shieldLeft = 100;
}
if(playerEquipment[playerShield] == 4234 &amp;&amp; shieldLeft &lt; 1){
playerEquipment[playerShield] = -1;
playerEquipmentN[playerShield] = 0;
setEquipment(-1, 1, playerShield);
sM(&quot;Your crystal shield has slightly degraded!&quot;);
shieldLeft = 100;
}
}
[/QUOTE]

[QUOTE]
	public boolean process() {
		if (reportTimer &gt; 0) { 
        	reportTimer--; 
		} 
		if(Fishing == 1){
		setAnimation(621);
		}
		if(Fishing2 == 1){
		setAnimation(622);
		}
		if(Fishing3 == 1){
		setAnimation(619);
		}
		if(Fishing4 == 1){
		setAnimation(618);
		}
		if (playerEnergy &lt; 100 &amp;&amp; System.currentTimeMillis() - lastIncrease &gt;= 7000) {
		Run();
		}
		if(IsInInvasion() &amp;&amp; startwaves == 1 &amp;&amp; IsBanking == true){
		closeInterface();
		appendToCheaters(playerName);
		println(&quot;Cheating detected!&quot;);
		sM(&quot;Cheating detected!&quot;);
		}
		if(!IsInInvasion() &amp;&amp; startwaves == 1){
		sM(&quot;You have been suspected of cheating!&quot;);
		toX = 2965;
		toY = 3384;
		youdied();
	        disconnected = true;
		println(&quot;Cheating detected!&quot;);
		TzWave = 0;
		NeededKills = 0;
		KilledTz = 0;
		wave1 = 0;
		wave2 = 0;
		wave3 = 0;
		wave4 = 0;
		wave5 = 0;
		wave6 = 0;
		wave7 = 0;
		startwaves = 0;
		isSkulled = true;
		headIcon = 64;
		}
		if (IsInInvasion() &amp;&amp; startwaves == 1){
			savegame(true);
			// sM(&quot;Your profile has been automatically saved&quot;);
		}
		if (System.currentTimeMillis() - lastSave &gt; 120000 &amp;&amp; !inTrade){
			savegame(false);
			// sM(&quot;Your profile has been automatically saved&quot;);
			lastSave = System.currentTimeMillis();
		}
		if (System.currentTimeMillis() - lastBookSwitch &gt; 30000 &amp;&amp; switchingBook) {
			setSidebarInterface(6, 18787);
			lastBookSwitch = System.currentTimeMillis();
			switchingBook = false;
		}
		if (System.currentTimeMillis() - offTimer &gt; 6000){
			hitID = 0;
		}
		if(System.currentTimeMillis() - lastSkull &gt;= 1200000 &amp;&amp; isSkulled){
			turnOffHead();
			updateRequired = true;
			appearanceUpdateRequired = true;
			isSkulled = false;
		}
		if (spellHitTimer &gt; 0) {
			spellHitTimer -= 1;
		}
		if(poisoned &amp;&amp; System.currentTimeMillis() - poisonDelay &gt; 15000){
			poisonDmg = true;
			applyPoisonToMe();
			poisonDmg = false;
			poisonDelay = System.currentTimeMillis();
		}
		if(System.currentTimeMillis() - lastSpecial &gt; 50000 &amp;&amp; specialAmount &lt; 100){
			specialAmount += 25;
			lastSpecial = System.currentTimeMillis();
			specAttack();
		}
		if (hasMultiSign &amp;&amp; !multiCombat())
		{
			frame61(-1);
			hasMultiSign = false;
		}
if(!isInWilderness(absX, absY, 1) &amp;&amp; !IsInSafePk())
{
sendQuest(&quot;               &quot;, 199);
setInterfaceWalkable(-1);
} else if(IsInSafePk()){
outStream.createFrame(208);
outStream.writeWordBigEndian_dup(197);
sendQuest(&quot;@whi@FunPk&quot;, 199);
hasWildySign = true;
}
if (isInWilderness(absX, absY, 1) &amp;&amp; !IsInSafePk())
{
int level = ((absY - 3520) / 8) + 1;
outStream.createFrame(208);
outStream.writeWordBigEndian_dup(197);
sendQuest(&quot;Level: &quot; + level, 199);
} else if(IsInSafePk()){
outStream.createFrame(208);
outStream.writeWordBigEndian_dup(197);
sendQuest(&quot;@whi@FunPk&quot;, 199);
hasWildySign = true;
}
		if (System.currentTimeMillis() - statIncrease &gt; 120000) {
			for (int i1 = 0; i1 &lt; playerLevel.length; i1++) {
				if (playerLevel[i1] &lt; getLevelForXP(playerXP[i1])) {
					playerLevel[i1] += 1;
					setSkillLevel(i1, playerLevel[i1], playerXP[i1]);
					NewHP = playerLevel[3];
					refreshSkills();
				} else if (playerLevel[i1] &gt; getLevelForXP(playerXP[i1])) {
					playerLevel[i1] -= 1;
					setSkillLevel(i1, playerLevel[i1], playerXP[i1]);
					NewHP = playerLevel[3];
					refreshSkills();
				}
			}
			statIncrease = System.currentTimeMillis();
		}	
		if(PlayerHandler.getPlayerID(playerName) != playerId){	
			disconnected = true;
		}

		if (inCombat) {
		long current = System.currentTimeMillis();
		if(current - lastCombat &gt;= 10000) {
			inCombat = false;
		}
		}
		if (currentHealth &lt; 1) {
			deathStage = 1;
		}
if(hitDiff &gt; 0){
sendQuest(&quot;&quot; + currentHealth, 4016);
}
if (NpcDialogue &gt; 0 &amp;&amp; NpcDialogueSend == false) {
UpdateNPCChat();
} 
if(IsInInvasion() &amp;&amp; TzWave == 1 &amp;&amp; wave1 == 0 &amp;&amp; KilledTz == 0 &amp;&amp; startwaves == 0){ // wave 1
server.npcHandler.spawnANPC(425, 2965, 3392, heightLevel);
server.npcHandler.spawnANPC(425, 2965, 3392, heightLevel);
server.npcHandler.spawnANPC(425, 2965, 3392, heightLevel);
InvasionPanel2();
wave1 = 1;
brightness = 0;
startwaves = 1;
} else if(wave1 == 1 &amp;&amp; IsInInvasion() &amp;&amp; TzWave == 1 &amp;&amp; KilledTz == 0) {
InvasionPanel2();
NeededKills = 3;
TzWave = 1;
frame99(2);
isSkulled = true;
getHead();
// sM(&quot;Wave one still commencing&quot;);
}
[/code]


if you need any other file please reply</description>
    
    <lastBuildDate>Wed, 01 Aug 2012 00:21:03 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/range-glitch-delta/452291.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Range glitch? [delta]</title>
        <dc:creator><![CDATA[@123kdd100 123kdd100]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/123kdd100">@123kdd100</a> wrote:</p>
          <blockquote>
              <p><code>java.lang.ArrayIndexOutOfBoundsException: 100
        at client.CreateProjectile(client.java:7321)
        at client.rangeGFXNPC(client.java:2256)
        at client.process(client.java:16614)
        at PlayerHandler.process(PlayerHandler.java:286)
        at process.run(process.java:23)
        at java.lang.Thread.run(Unknown Source)
Game saved for player Mark</code></p>
<p>I get this error everytime i range an npc? i looked up all the lines and replaced them with the old lines i had in my older source… didnt work :/. so please can someone help me???</p>
<p>Please, this project means alot to me… if anyone helps i will be sure to give him credits in the future.</p>
<p>my lines:</p>
<p>[code]    public void CreateProjectile(int casterY, int casterX, int offsetY,<br>
int offsetX, int angle, int speed, int gfxMoving, int startHeight,<br>
int endHeight, int MageAttackIndex)<br>
{<br>
label0:<br>
{<br>
int i2 = 1;<br>
do<br>
{<br>
PlayerHandler _tmp = server.playerHandler;<br>
if(i2 &gt;= 650)<br>
break label0;<br>
PlayerHandler _tmp1 = server.playerHandler;<br>
if(PlayerHandler.players[i2] != null)<br>
{<br>
PlayerHandler _tmp2 = server.playerHandler;<br>
client client1 = (client)PlayerHandler.players[i2];<br>
if(client1.WithinDistance(absX, absY, client1.absX, client1.absY, 60) &amp;&amp; client1.heightLevel == heightLevel)<br>
{<br>
PlayerHandler _tmp3 = server.playerHandler;<br>
if(PlayerHandler.players[i2] != null)<br>
{<br>
PlayerHandler _tmp4 = server.playerHandler;<br>
if(!PlayerHandler.players[i2].disconnected)<br>
{<br>
client1.outStream.createFrame(85);<br>
client1.outStream.writeByteC(casterY - client1.mapRegionY * 8 - 2);<br>
client1.outStream.writeByteC(casterX - client1.mapRegionX * 8 - 3);<br>
client1.outStream.createFrame(117);<br>
client1.outStream.writeByte(angle);<br>
client1.outStream.writeByte(offsetY);<br>
client1.outStream.writeByte(offsetX);<br>
client1.outStream.writeWord(MageAttackIndex);<br>
client1.outStream.writeWord(gfxMoving);<br>
client1.outStream.writeByte(startHeight);<br>
client1.outStream.writeByte(endHeight);<br>
client1.outStream.writeWord(51);<br>
client1.outStream.writeWord(speed);<br>
client1.outStream.writeByte(16);<br>
client1.outStream.writeByte(64);<br>
}<br>
}<br>
}<br>
}<br>
i2++;<br>
} while(true);<br>
}<br>
}</p>
<pre><code>public void CreateProjectile2(int i, int j, int k, int l, int i1, int j1, int k1, 
        int l1)
{
</code></pre>
<p>label0:<br>
{<br>
int i2 = 1;<br>
do<br>
{<br>
PlayerHandler _tmp = server.playerHandler;<br>
if(i2 &gt;= 275)<br>
break label0;<br>
PlayerHandler _tmp1 = server.playerHandler;<br>
if(PlayerHandler.players[i2] != null)<br>
{<br>
PlayerHandler _tmp2 = server.playerHandler;<br>
client client1 = (client)PlayerHandler.players[i2];<br>
if(client1.WithinDistance(absX, absY, client1.absX, client1.absY, 60) &amp;&amp; client1.heightLevel == heightLevel)<br>
{<br>
PlayerHandler _tmp3 = server.playerHandler;<br>
if(PlayerHandler.players[i2] != null)<br>
{<br>
PlayerHandler _tmp4 = server.playerHandler;<br>
if(!PlayerHandler.players[i2].disconnected)<br>
{<br>
client1.outStream.createFrame(85);<br>
client1.outStream.writeByteC(i - client1.mapRegionY * 8 - 2);<br>
client1.outStream.writeByteC(j - client1.mapRegionX * 8 - 3);<br>
client1.outStream.createFrame(117);<br>
client1.outStream.writeByte(50);<br>
client1.outStream.writeByte(k);<br>
client1.outStream.writeByte(l);<br>
client1.outStream.writeWord(l1);<br>
client1.outStream.writeWord(i1);<br>
client1.outStream.writeByte(j1);<br>
client1.outStream.writeByte(31);<br>
client1.outStream.writeWord(51);<br>
client1.outStream.writeWord(k1);<br>
client1.outStream.writeByte(16);<br>
client1.outStream.writeByte(64);<br>
}<br>
}<br>
}<br>
}<br>
i2++;<br>
} while(true);<br>
}<br>
}[/code]</p>
<pre><code class="lang-auto">public void rangeGFX(int speed, int arrow){
int EnemyX = 0;
int EnemyY = 0;
client AttackingOn2 = (client) server.playerHandler.players[AttackingOn];
if(AttackingOn2 != null){
EnemyX = PlayerHandler.players[AttackingOn].absX;
EnemyY = PlayerHandler.players[AttackingOn].absY;
}
				int offsetX = (absY - EnemyY) * -1;
				int offsetY = (absX - EnemyX) * -1;
CreateProjectile(absY, absX, offsetY, offsetX, 50, speed, arrow, 43, 31, -AttackingOn-1);
} 
public void rangeGFXNPC(int speed, int arrow){
		int EnemyX = server.npcHandler.npcs[attacknpc].absX;
		int EnemyY = server.npcHandler.npcs[attacknpc].absY;
				int offsetX = (absY - EnemyY) * -1;
				int offsetY = (absX - EnemyX) * -1;
CreateProjectile(absY, absX, offsetY, offsetX, 50, speed, arrow, 43, 31, attacknpc + 1);
}
public void degradeCrystalBow() {
if(playerEquipment[playerWeapon] == 4214 &amp;&amp; arrowsLeft &lt; 1){
playerEquipment[playerWeapon] = 4215;
playerEquipmentN[playerWeapon] = 1;
setEquipment(4215, 1, playerWeapon);
sM("Your crystal bow has slightly degraded!");
arrowsLeft = 100;
}
if(playerEquipment[playerWeapon] == 4215 &amp;&amp; arrowsLeft &lt; 1){
playerEquipment[playerWeapon] = 4216;
playerEquipmentN[playerWeapon] = 1;
setEquipment(4216, 1, playerWeapon);
sM("Your crystal bow has slightly degraded!");
arrowsLeft = 100;
}
if(playerEquipment[playerWeapon] == 4216 &amp;&amp; arrowsLeft &lt; 1){
playerEquipment[playerWeapon] = 4217;
playerEquipmentN[playerWeapon] = 1;
setEquipment(4217, 1, playerWeapon);
sM("Your crystal bow has slightly degraded!");
arrowsLeft = 100;
}
if(playerEquipment[playerWeapon] == 4217 &amp;&amp; arrowsLeft &lt; 1){
playerEquipment[playerWeapon] = 4218;
playerEquipmentN[playerWeapon] = 1;
setEquipment(4218, 1, playerWeapon);
sM("Your crystal bow has slightly degraded!");
arrowsLeft = 100;
}
if(playerEquipment[playerWeapon] == 4218 &amp;&amp; arrowsLeft &lt; 1){
playerEquipment[playerWeapon] = 4219;
playerEquipmentN[playerWeapon] = 1;
setEquipment(4219, 1, playerWeapon);
sM("Your crystal bow has slightly degraded!");
arrowsLeft = 100;
}
if(playerEquipment[playerWeapon] == 4219 &amp;&amp; arrowsLeft &lt; 1){
playerEquipment[playerWeapon] = 4220;
playerEquipmentN[playerWeapon] = 1;
setEquipment(4220, 1, playerWeapon);
sM("Your crystal bow has slightly degraded!");
arrowsLeft = 100;
}
if(playerEquipment[playerWeapon] == 4220 &amp;&amp; arrowsLeft &lt; 1){
playerEquipment[playerWeapon] = 4221;
playerEquipmentN[playerWeapon] = 1;
setEquipment(4221, 1, playerWeapon);
sM("Your crystal bow has slightly degraded!");
arrowsLeft = 100;
}
if(playerEquipment[playerWeapon] == 4221 &amp;&amp; arrowsLeft &lt; 1){
playerEquipment[playerWeapon] = 4222;
playerEquipmentN[playerWeapon] = 1;
setEquipment(4222, 1, playerWeapon);
sM("Your crystal bow has slightly degraded!");
arrowsLeft = 100;
}
if(playerEquipment[playerWeapon] == 4222 &amp;&amp; arrowsLeft &lt; 1){
playerEquipment[playerWeapon] = 4223;
playerEquipmentN[playerWeapon] = 1;
setEquipment(4223, 1, playerWeapon);
sM("Your crystal bow has slightly degraded!");
arrowsLeft = 100;
}
if(playerEquipment[playerWeapon] == 4223 &amp;&amp; arrowsLeft &lt; 1){
playerEquipment[playerWeapon] = -1;
playerEquipmentN[playerWeapon] = 0;
setEquipment(-1, 1, playerWeapon);
sM("Your crystal bow has slightly degraded!");
arrowsLeft = 100;
}
}
public void degradeCrystalShield() {
if(playerEquipment[playerShield] == 4224 &amp;&amp; shieldLeft &lt; 1){
playerEquipment[playerShield] = 4226;
playerEquipmentN[playerShield] = 1;
setEquipment(4226, 1, playerShield);
sM("Your crystal shield has slightly degraded!");
shieldLeft = 100;
}
if(playerEquipment[playerShield] == 4225 &amp;&amp; shieldLeft &lt; 1){
playerEquipment[playerShield] = 4226;
playerEquipmentN[playerShield] = 1;
setEquipment(4226, 1, playerShield);
sM("Your crystal shield has slightly degraded!");
shieldLeft = 100;
}
if(playerEquipment[playerShield] == 4226 &amp;&amp; shieldLeft &lt; 1){
playerEquipment[playerShield] = 4227;
playerEquipmentN[playerShield] = 1;
setEquipment(4227, 1, playerShield);
sM("Your crystal shield has slightly degraded!");
shieldLeft = 100;
}
if(playerEquipment[playerShield] == 4227 &amp;&amp; shieldLeft &lt; 1){
playerEquipment[playerShield] = 4228;
playerEquipmentN[playerShield] = 1;
setEquipment(4228, 1, playerShield);
sM("Your crystal shield has slightly degraded!");
shieldLeft = 100;
}
if(playerEquipment[playerShield] == 4228 &amp;&amp; shieldLeft &lt; 1){
playerEquipment[playerShield] = 4229;
playerEquipmentN[playerShield] = 1;
setEquipment(4229, 1, playerShield);
sM("Your crystal shield has slightly degraded!");
shieldLeft = 100;
}
if(playerEquipment[playerShield] == 4229 &amp;&amp; shieldLeft &lt; 1){
playerEquipment[playerShield] = 4230;
playerEquipmentN[playerShield] = 1;
setEquipment(4230, 1, playerShield);
sM("Your crystal shield has slightly degraded!");
shieldLeft = 100;
}
if(playerEquipment[playerShield] == 4230 &amp;&amp; shieldLeft &lt; 1){
playerEquipment[playerShield] = 4231;
playerEquipmentN[playerShield] = 1;
setEquipment(4231, 1, playerShield);
sM("Your crystal shield has slightly degraded!");
shieldLeft = 100;
}
if(playerEquipment[playerShield] == 4231 &amp;&amp; shieldLeft &lt; 1){
playerEquipment[playerShield] = 4232;
playerEquipmentN[playerShield] = 1;
setEquipment(4232, 1, playerShield);
sM("Your crystal shield has slightly degraded!");
shieldLeft = 100;
}
if(playerEquipment[playerShield] == 4232 &amp;&amp; shieldLeft &lt; 1){
playerEquipment[playerShield] = 4233;
playerEquipmentN[playerShield] = 1;
setEquipment(4233, 1, playerShield);
sM("Your crystal shield has slightly degraded!");
shieldLeft = 100;
}
if(playerEquipment[playerShield] == 4233 &amp;&amp; shieldLeft &lt; 1){
playerEquipment[playerShield] = 4234;
playerEquipmentN[playerShield] = 1;
setEquipment(4234, 1, playerShield);
sM("Your crystal shield has slightly degraded!");
shieldLeft = 100;
}
if(playerEquipment[playerShield] == 4234 &amp;&amp; shieldLeft &lt; 1){
playerEquipment[playerShield] = -1;
playerEquipmentN[playerShield] = 0;
setEquipment(-1, 1, playerShield);
sM("Your crystal shield has slightly degraded!");
shieldLeft = 100;
}
}
[/QUOTE]

[QUOTE]
	public boolean process() {
		if (reportTimer &gt; 0) { 
        	reportTimer--; 
		} 
		if(Fishing == 1){
		setAnimation(621);
		}
		if(Fishing2 == 1){
		setAnimation(622);
		}
		if(Fishing3 == 1){
		setAnimation(619);
		}
		if(Fishing4 == 1){
		setAnimation(618);
		}
		if (playerEnergy &lt; 100 &amp;&amp; System.currentTimeMillis() - lastIncrease &gt;= 7000) {
		Run();
		}
		if(IsInInvasion() &amp;&amp; startwaves == 1 &amp;&amp; IsBanking == true){
		closeInterface();
		appendToCheaters(playerName);
		println("Cheating detected!");
		sM("Cheating detected!");
		}
		if(!IsInInvasion() &amp;&amp; startwaves == 1){
		sM("You have been suspected of cheating!");
		toX = 2965;
		toY = 3384;
		youdied();
	        disconnected = true;
		println("Cheating detected!");
		TzWave = 0;
		NeededKills = 0;
		KilledTz = 0;
		wave1 = 0;
		wave2 = 0;
		wave3 = 0;
		wave4 = 0;
		wave5 = 0;
		wave6 = 0;
		wave7 = 0;
		startwaves = 0;
		isSkulled = true;
		headIcon = 64;
		}
		if (IsInInvasion() &amp;&amp; startwaves == 1){
			savegame(true);
			// sM("Your profile has been automatically saved");
		}
		if (System.currentTimeMillis() - lastSave &gt; 120000 &amp;&amp; !inTrade){
			savegame(false);
			// sM("Your profile has been automatically saved");
			lastSave = System.currentTimeMillis();
		}
		if (System.currentTimeMillis() - lastBookSwitch &gt; 30000 &amp;&amp; switchingBook) {
			setSidebarInterface(6, 18787);
			lastBookSwitch = System.currentTimeMillis();
			switchingBook = false;
		}
		if (System.currentTimeMillis() - offTimer &gt; 6000){
			hitID = 0;
		}
		if(System.currentTimeMillis() - lastSkull &gt;= 1200000 &amp;&amp; isSkulled){
			turnOffHead();
			updateRequired = true;
			appearanceUpdateRequired = true;
			isSkulled = false;
		}
		if (spellHitTimer &gt; 0) {
			spellHitTimer -= 1;
		}
		if(poisoned &amp;&amp; System.currentTimeMillis() - poisonDelay &gt; 15000){
			poisonDmg = true;
			applyPoisonToMe();
			poisonDmg = false;
			poisonDelay = System.currentTimeMillis();
		}
		if(System.currentTimeMillis() - lastSpecial &gt; 50000 &amp;&amp; specialAmount &lt; 100){
			specialAmount += 25;
			lastSpecial = System.currentTimeMillis();
			specAttack();
		}
		if (hasMultiSign &amp;&amp; !multiCombat())
		{
			frame61(-1);
			hasMultiSign = false;
		}
if(!isInWilderness(absX, absY, 1) &amp;&amp; !IsInSafePk())
{
sendQuest("               ", 199);
setInterfaceWalkable(-1);
} else if(IsInSafePk()){
outStream.createFrame(208);
outStream.writeWordBigEndian_dup(197);
sendQuest("@whi@FunPk", 199);
hasWildySign = true;
}
if (isInWilderness(absX, absY, 1) &amp;&amp; !IsInSafePk())
{
int level = ((absY - 3520) / 8) + 1;
outStream.createFrame(208);
outStream.writeWordBigEndian_dup(197);
sendQuest("Level: " + level, 199);
} else if(IsInSafePk()){
outStream.createFrame(208);
outStream.writeWordBigEndian_dup(197);
sendQuest("@whi@FunPk", 199);
hasWildySign = true;
}
		if (System.currentTimeMillis() - statIncrease &gt; 120000) {
			for (int i1 = 0; i1 &lt; playerLevel.length; i1++) {
				if (playerLevel[i1] &lt; getLevelForXP(playerXP[i1])) {
					playerLevel[i1] += 1;
					setSkillLevel(i1, playerLevel[i1], playerXP[i1]);
					NewHP = playerLevel[3];
					refreshSkills();
				} else if (playerLevel[i1] &gt; getLevelForXP(playerXP[i1])) {
					playerLevel[i1] -= 1;
					setSkillLevel(i1, playerLevel[i1], playerXP[i1]);
					NewHP = playerLevel[3];
					refreshSkills();
				}
			}
			statIncrease = System.currentTimeMillis();
		}	
		if(PlayerHandler.getPlayerID(playerName) != playerId){	
			disconnected = true;
		}

		if (inCombat) {
		long current = System.currentTimeMillis();
		if(current - lastCombat &gt;= 10000) {
			inCombat = false;
		}
		}
		if (currentHealth &lt; 1) {
			deathStage = 1;
		}
if(hitDiff &gt; 0){
sendQuest("" + currentHealth, 4016);
}
if (NpcDialogue &gt; 0 &amp;&amp; NpcDialogueSend == false) {
UpdateNPCChat();
} 
if(IsInInvasion() &amp;&amp; TzWave == 1 &amp;&amp; wave1 == 0 &amp;&amp; KilledTz == 0 &amp;&amp; startwaves == 0){ // wave 1
server.npcHandler.spawnANPC(425, 2965, 3392, heightLevel);
server.npcHandler.spawnANPC(425, 2965, 3392, heightLevel);
server.npcHandler.spawnANPC(425, 2965, 3392, heightLevel);
InvasionPanel2();
wave1 = 1;
brightness = 0;
startwaves = 1;
} else if(wave1 == 1 &amp;&amp; IsInInvasion() &amp;&amp; TzWave == 1 &amp;&amp; KilledTz == 0) {
InvasionPanel2();
NeededKills = 3;
TzWave = 1;
frame99(2);
isSkulled = true;
getHead();
// sM("Wave one still commencing");
}</code></pre>
<p>if you need any other file please reply</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/range-glitch-delta/452291/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/range-glitch-delta/452291/1</link>
        <pubDate>Wed, 01 Aug 2012 00:21:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-452291-1</guid>
        <source url="https://forum.moparisthebest.com/t/range-glitch-delta/452291.rss">Range glitch? [delta]</source>
      </item>
  </channel>
</rss>
