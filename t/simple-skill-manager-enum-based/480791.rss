<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Simple Skill Manager (Enum Based)</title>
    <link>https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791</link>
    <description>Probably not the absolute best way to handle this, but oh well. I made this in an attempt to get familiar with using Enums, so here you go. Included a few basic methods that might come in handy as well. (and props to me for finally somewhat figuring out enums..took forever!)

[code]import com.rs.game.player.Player;
import com.rs.utils.Utils;


public enum SkillManager {


   ATTACK(0, &quot;Attack&quot;),
   DEFENCE(1,&quot;Defence&quot;),
   STRENGTH(2,&quot;Strength&quot;),
   HITPOINTS(3, &quot;Hitpoints&quot;),
   RANGE(4, &quot;Range&quot;),
   PRAYER(5, &quot;Prayer&quot;),
   MAGIC(6, &quot;Magic&quot;),
   COOKING(7, &quot;Cooking&quot;),
   WOODCUTTING(8, &quot;Woodcutting&quot;),
   FLETCHING(9, &quot;Fletching&quot;),
   FISHING(10, &quot;Fishing&quot;),
   FIREMAKING(11, &quot;Firemaking&quot;),
   CRAFTING(12, &quot;Crafting&quot;),
   SMITHING(13, &quot;Smithing&quot;),
   MINING(14, &quot;Mining&quot;),
   HERBLORE(15, &quot;Herblore&quot;),
   AGILITY(16, &quot;Agility&quot;),
   THIEVING(17, &quot;Thieving&quot;),
   SLAYER(18, &quot;Slayer&quot;),
   FARMING(19, &quot;Farming&quot;),
   RUNECRAFTING(20, &quot;Runecrafting&quot;),
   HUNTER(21, &quot;Hunter&quot;),
   CONSTRUCTION(22, &quot;Construction&quot;),
   SUMMONING(23, &quot;Summoning&quot;),
   DUNGEONEERING(24, &quot;Dungeoneering&quot;);
   
   private int id;
   private String skillName;
   
   /**
   * The Constructor
   */
   SkillManager(int skillId, String skillName) {
       this.id = skillId;
       this.skillName = skillName;
    }
    
   /**
    * @return skill id
    */
    public int getId() {
       return id;
    }
    
    /**
     * @return skill name
     */
    public String getName() {
       return skillName;
    }
    
    /**
     * returns if the skill is a combat skill or not
     */
    public static boolean isCombatSkill(int id) {
       for (SkillManager skill : SkillManager.values()) {
          if (skill.getId() &lt; 7 || skill.getId() == 23)
             return true;
       }
       return false;
    }
    
    /**
     * @return skill&#39;s name based on skill id
     * Usage: SkillManager.getName(skillId)
     */
    public static String getName(int id) {
       for (SkillManager skill : SkillManager.values()) {
          if (skill.getId() == id)
             return skill.skillName;
       }
       return &quot;&quot;;
    }    


}[/code]</description>
    
    <lastBuildDate>Tue, 05 Feb 2013 14:00:02 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Simple Skill Manager (Enum Based)</title>
        <dc:creator><![CDATA[@relexlawl relexlawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/relexlawl">@relexlawl</a> wrote:</p>
          <blockquote>
              <p>[quote=“zyle1992, post:34, topic:480791”][quote author=relexlawl link=topic=599028.msg4214474#msg4214474 date=1360030309]</p>
<aside class="quote">
<blockquote>
<p>Using ordinal is rarely a good idea. Why? Because</p>
<pre><code class="lang-auto">public enum Foo {
    TAN,
    COS,
    SIN;
}</code></pre>
<p>And</p>
<p><code>
public enum Foo {
    BAR,
    TAN,
    COS,
    SIN;
}</code></p>
<p>Will assign different ordinal values to TAN, COS, and SIN. The reason? The ordinal value is determined by the order in which it is defined in the file. If you want an integer identifier, declare one. Micro-optimzations are not valuable.</p>
</blockquote>
</aside>
<p>Yes…I think we all know what ordinal is…What you’re basically saying is it’s rarely a good idea to use ordinal because it’s ordinal? Seeing as your example of why it’s a bad idea is just the definition of the ordinal method.</p>
<p>IMO, it’s just something that makes it look neater and stops useless writing…i.e:</p>
<p>[code]public enum PlayerRights {</p>
<pre><code>PLAYER,
DONATOR,
MODERATOR,
ADMINISTRATOR;
</code></pre>
<p>}[/code]</p>
<p>vs</p>
<p>[code]public enum PlayerRights {</p>
<pre><code>PLAYER(0),
DONATOR(1),
MODERATOR(2),
ADMINISTRATOR(3);

private PlayerRights(int id) {
	this.id = id;
}

private int id;

public int getId() {
	return id;
}
</code></pre>
<p>}[/code]<br>
[/quote]</p>
<p>From what I read, it seemed like people were considering using ordinal as a concrete identifier, when by it’s very nature it isn’t.[/quote]</p>
<p>As long as you have the respective order, doesn’t really matter, won’t affect performance what-so-ever, but again I prefer ordinal instead of wasting time writing (basically) useless fields.</p>
<p>[quote=“Clawz fury, post:30, topic:480791”]1 question when did the singleton pattern topic even come in… how does anyone not know the singleton pattern design a two year old could do it</p>
<p>and agree w/ fox[/quote]</p>
<p>AtomicInt_ or whatever his username is brought it up for some reason…Who knows, think he’s too embarrassed to even reply XD</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/36">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/36</link>
        <pubDate>Tue, 05 Feb 2013 14:00:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-480791-36</guid>
        <source url="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791.rss">Simple Skill Manager (Enum Based)</source>
      </item>
      <item>
        <title>Simple Skill Manager (Enum Based)</title>
        <dc:creator><![CDATA[@Fox2007 Fox2007]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/fox2007">@Fox2007</a> wrote:</p>
          <blockquote>
              <p>Yea idk about all that lol. Just trying to explore some alternatives to use using a shitload of IF statements like 1/2 of every community &gt;.&gt;</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/35">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/35</link>
        <pubDate>Tue, 05 Feb 2013 12:59:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-480791-35</guid>
        <source url="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791.rss">Simple Skill Manager (Enum Based)</source>
      </item>
      <item>
        <title>Simple Skill Manager (Enum Based)</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>[quote=“relexlawl, post:32, topic:480791”][quote author=zyle1992 link=topic=599028.msg4214460#msg4214460 date=1360028327]<br>
Using ordinal is rarely a good idea. Why? Because</p>
<pre><code class="lang-auto">public enum Foo {
    TAN,
    COS,
    SIN;
}</code></pre>
<p>And</p>
<p><code>
public enum Foo {
    BAR,
    TAN,
    COS,
    SIN;
}</code></p>
<p>Will assign different ordinal values to TAN, COS, and SIN. The reason? The ordinal value is determined by the order in which it is defined in the file. If you want an integer identifier, declare one. Micro-optimzations are not valuable.<br>
[/quote]</p>
<p>Yes…I think we all know what ordinal is…What you’re basically saying is it’s rarely a good idea to use ordinal because it’s ordinal? Seeing as your example of why it’s a bad idea is just the definition of the ordinal method.</p>
<p>IMO, it’s just something that makes it look neater and stops useless writing…i.e:</p>
<p>[code]public enum PlayerRights {</p>
<pre><code>PLAYER,
DONATOR,
MODERATOR,
ADMINISTRATOR;
</code></pre>
<p>}[/code]</p>
<p>vs</p>
<p>[code]public enum PlayerRights {</p>
<pre><code>PLAYER(0),
DONATOR(1),
MODERATOR(2),
ADMINISTRATOR(3);

private PlayerRights(int id) {
	this.id = id;
}

private int id;

public int getId() {
	return id;
}
</code></pre>
<p>}[/code][/quote]</p>
<p>From what I read, it seemed like people were considering using ordinal as a concrete identifier, when by it’s very nature it isn’t.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/34">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/34</link>
        <pubDate>Tue, 05 Feb 2013 04:53:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-480791-34</guid>
        <source url="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791.rss">Simple Skill Manager (Enum Based)</source>
      </item>
      <item>
        <title>Simple Skill Manager (Enum Based)</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>^^ what i was gonna type</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/33">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/33</link>
        <pubDate>Tue, 05 Feb 2013 02:20:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-480791-33</guid>
        <source url="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791.rss">Simple Skill Manager (Enum Based)</source>
      </item>
      <item>
        <title>Simple Skill Manager (Enum Based)</title>
        <dc:creator><![CDATA[@relexlawl relexlawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/relexlawl">@relexlawl</a> wrote:</p>
          <blockquote>
              <p>[quote=“zyle1992, post:31, topic:480791”]Using ordinal is rarely a good idea. Why? Because</p>
<pre><code class="lang-auto">public enum Foo {
    TAN,
    COS,
    SIN;
}</code></pre>
<p>And</p>
<p><code>
public enum Foo {
    BAR,
    TAN,
    COS,
    SIN;
}</code></p>
<p>Will assign different ordinal values to TAN, COS, and SIN. The reason? The ordinal value is determined by the order in which it is defined in the file. If you want an integer identifier, declare one. Micro-optimzations are not valuable.[/quote]</p>
<p>Yes…I think we all know what ordinal is…What you’re basically saying is it’s rarely a good idea to use ordinal because it’s ordinal? Seeing as your example of why it’s a bad idea is just the definition of the ordinal method.</p>
<p>IMO, it’s just something that makes it look neater and stops useless writing…i.e:</p>
<p>[code]public enum PlayerRights {</p>
<pre><code>PLAYER,
DONATOR,
MODERATOR,
ADMINISTRATOR;
</code></pre>
<p>}[/code]</p>
<p>vs</p>
<p>[code]public enum PlayerRights {</p>
<pre><code>PLAYER(0),
DONATOR(1),
MODERATOR(2),
ADMINISTRATOR(3);

private PlayerRights(int id) {
	this.id = id;
}

private int id;

public int getId() {
	return id;
}
</code></pre>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/32">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/32</link>
        <pubDate>Tue, 05 Feb 2013 02:11:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-480791-32</guid>
        <source url="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791.rss">Simple Skill Manager (Enum Based)</source>
      </item>
      <item>
        <title>Simple Skill Manager (Enum Based)</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>Using ordinal is rarely a good idea. Why? Because</p>
<pre><code class="lang-auto">public enum Foo {
    TAN,
    COS,
    SIN;
}</code></pre>
<p>And</p>
<p><code>
public enum Foo {
    BAR,
    TAN,
    COS,
    SIN;
}</code></p>
<p>Will assign different ordinal values to TAN, COS, and SIN. The reason? The ordinal value is determined by the order in which it is defined in the file. If you want an integer identifier, declare one. Micro-optimzations are not valuable.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/31">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/31</link>
        <pubDate>Tue, 05 Feb 2013 01:38:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-480791-31</guid>
        <source url="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791.rss">Simple Skill Manager (Enum Based)</source>
      </item>
      <item>
        <title>Simple Skill Manager (Enum Based)</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>1 question when did the singleton pattern topic even come in… how does anyone not know the singleton pattern design a two year old could do it</p>
<p>and agree w/ fox</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/30">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/30</link>
        <pubDate>Tue, 05 Feb 2013 00:06:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-480791-30</guid>
        <source url="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791.rss">Simple Skill Manager (Enum Based)</source>
      </item>
      <item>
        <title>Simple Skill Manager (Enum Based)</title>
        <dc:creator><![CDATA[@Fox2007 Fox2007]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/fox2007">@Fox2007</a> wrote:</p>
          <blockquote>
              <p>^ agreed.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/29">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/29</link>
        <pubDate>Tue, 05 Feb 2013 00:06:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-480791-29</guid>
        <source url="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791.rss">Simple Skill Manager (Enum Based)</source>
      </item>
      <item>
        <title>Simple Skill Manager (Enum Based)</title>
        <dc:creator><![CDATA[@Ruby_Forums_Coder Ruby]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ruby_forums_coder">@Ruby_Forums_Coder</a> wrote:</p>
          <blockquote>
              <p>mopar++</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/28">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/28</link>
        <pubDate>Mon, 04 Feb 2013 19:05:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-480791-28</guid>
        <source url="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791.rss">Simple Skill Manager (Enum Based)</source>
      </item>
      <item>
        <title>Simple Skill Manager (Enum Based)</title>
        <dc:creator><![CDATA[@Fox2007 Fox2007]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/fox2007">@Fox2007</a> wrote:</p>
          <blockquote>
              <p>^ Indeed. (it’s a pointless argument -.-)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/27">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/27</link>
        <pubDate>Sun, 03 Feb 2013 08:07:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-480791-27</guid>
        <source url="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791.rss">Simple Skill Manager (Enum Based)</source>
      </item>
      <item>
        <title>Simple Skill Manager (Enum Based)</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>lol r-s vs mopar</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/26">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/26</link>
        <pubDate>Sun, 03 Feb 2013 04:21:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-480791-26</guid>
        <source url="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791.rss">Simple Skill Manager (Enum Based)</source>
      </item>
      <item>
        <title>Simple Skill Manager (Enum Based)</title>
        <dc:creator><![CDATA[@Fox2007 Fox2007]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/fox2007">@Fox2007</a> wrote:</p>
          <blockquote>
              <p>After all of this, i still wouldn’t know the difference -.- This topic has been thrown way out of proportion -.-</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/25">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/25</link>
        <pubDate>Sat, 02 Feb 2013 21:15:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-480791-25</guid>
        <source url="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791.rss">Simple Skill Manager (Enum Based)</source>
      </item>
      <item>
        <title>Simple Skill Manager (Enum Based)</title>
        <dc:creator><![CDATA[@relexlawl relexlawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/relexlawl">@relexlawl</a> wrote:</p>
          <blockquote>
              <p>[quote=“AtomicInt_, post:22, topic:480791”][quote author=relexlawl link=topic=599028.msg4212830#msg4212830 date=1359826914]</p>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<p>In that case static would be acceptable</p>
</blockquote>
</aside>
<p>No…Stop avoiding OOP.</p>
</blockquote>
</aside>
<p>Do you even know what static means?</p>
<p>There’s no reason not to use static. Why would you allocate the same memory over and over again for every new player, while you just need it once.</p>
</blockquote>
</aside>
<p>Are you stupid?..When is it creating a new instance per player?..</p>
<p>Also look into OOP and learn when to use static vs instance. Either way an enum is self-defined as static and final.</p>
</blockquote>
</aside>
<p>Please explain to me why you would want more than one instance of this class.</p>
</blockquote>
</aside>
<p>Did you just not read what I said? Enums are self-defined as both static and final…</p>
</blockquote>
</aside>
<p>Then why do you want to have multiple instances of this class when it’s already static and final. Do you even listen to yourself?</p>
<p>As for the code you provided, it doesn’t have anything to do with the actual thread. This class is merely a file to store skill names. Not ‘skill handlers’, with which you implement skills.</p>
</blockquote>
</aside>
<p>When did I say I want multiple instances of the class?..:fp:</p>
<p>Please quote me on this…I don’t see why I would even say this when I already explained that enums are ALREADY loveING STATIC.</p>
<p>I don’t see why you would want to get the names.<br>
[/quote]</p>
<p>Like I’m trying to sound smart? You don’t clearly don’t understand what design patterns are. What I said was the equivalent to what you said. “static vs instance” (<a href="http://en.wikipedia.org/wiki/Singleton_pattern" rel="nofollow noopener">http://en.wikipedia.org/wiki/Singleton_pattern</a>) maybe if <em>you</em> made sense I could comprehend what you’re trying to say. I swear you Rune-Server kids think you know everything.[/quote]</p>
<p>I know what it is…I’m saying that <span class="bbcode-b">you don’t</span> and not to try and act smart when you have no idea what’s going on.</p>
<p>Stop being so ignorant and actually start off by reading the page before posting it…SINGLEton pattern…Notice single? Singleton is used so there is only ONE instance of the class…Nothing like creating a new instance per player, which again is something I never said, but someone put the words in my mouth, which is how this all started, but please, again, stop being so ignorant:</p>
<p>Example of singleton:</p>
<p>[code]public class SingletonDemo {<br>
private static volatile SingletonDemo instance = null;</p>
<pre><code>    private SingletonDemo() {       }

    public static SingletonDemo getInstance() {
            if (instance == null) {
                    synchronized (SingletonDemo .class){
                            if (instance == null) {
                                    instance = new SingletonDemo ();
                            }
                  }
            }
            return instance;
    }
</code></pre>
<p>}[/code]</p>
<p>That is the singleton pattern. Now please just shut up and stop embarrassing yourself.</p>
<p>When I said static vs instance I was referring to his general java knowledge, nothing to do with this thread, since he doesn’t know when it’s more appropriate to use static.</p>
<p>Honestly, if I were you, I would just stop posting now before you make yourself look like more of an idiot.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/24">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/24</link>
        <pubDate>Sat, 02 Feb 2013 20:39:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-480791-24</guid>
        <source url="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791.rss">Simple Skill Manager (Enum Based)</source>
      </item>
      <item>
        <title>Simple Skill Manager (Enum Based)</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>r-s sucks i got banned for calling someone a dyke</p>
<p>i make so much money off services tho</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/23">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/23</link>
        <pubDate>Sat, 02 Feb 2013 20:12:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-480791-23</guid>
        <source url="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791.rss">Simple Skill Manager (Enum Based)</source>
      </item>
      <item>
        <title>Simple Skill Manager (Enum Based)</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <p>[quote=“relexlawl, post:20, topic:480791”][quote author=Yesteryear link=topic=599028.msg4212714#msg4212714 date=1359810813]</p>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<p>In that case static would be acceptable</p>
</blockquote>
</aside>
<p>No…Stop avoiding OOP.</p>
</blockquote>
</aside>
<p>Do you even know what static means?</p>
<p>There’s no reason not to use static. Why would you allocate the same memory over and over again for every new player, while you just need it once.</p>
</blockquote>
</aside>
<p>Are you stupid?..When is it creating a new instance per player?..</p>
<p>Also look into OOP and learn when to use static vs instance. Either way an enum is self-defined as static and final.</p>
</blockquote>
</aside>
<p>Please explain to me why you would want more than one instance of this class.</p>
</blockquote>
</aside>
<p>Did you just not read what I said? Enums are self-defined as both static and final…</p>
</blockquote>
</aside>
<p>Then why do you want to have multiple instances of this class when it’s already static and final. Do you even listen to yourself?</p>
<p>As for the code you provided, it doesn’t have anything to do with the actual thread. This class is merely a file to store skill names. Not ‘skill handlers’, with which you implement skills.<br>
[/quote]</p>
<p>When did I say I want multiple instances of the class?..:fp:</p>
<p>Please quote me on this…I don’t see why I would even say this when I already explained that enums are ALREADY loveING STATIC.</p>
<p>I don’t see why you would want to get the names.[/quote]</p>
<p>Like I’m trying to sound smart? You don’t clearly don’t understand what design patterns are. What I said was the equivalent to what you said. “static vs instance” (<a href="http://en.wikipedia.org/wiki/Singleton_pattern" rel="nofollow noopener">http://en.wikipedia.org/wiki/Singleton_pattern</a>) maybe if <em>you</em> made sense I could comprehend what you’re trying to say. I swear you Rune-Server kids think you know everything.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/22">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/22</link>
        <pubDate>Sat, 02 Feb 2013 19:01:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-480791-22</guid>
        <source url="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791.rss">Simple Skill Manager (Enum Based)</source>
      </item>
      <item>
        <title>Simple Skill Manager (Enum Based)</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>why the fuck would you want multiple instances of this class… just make an abstract class have every skill extend the class and done end of story and discussion</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/21">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/21</link>
        <pubDate>Sat, 02 Feb 2013 18:41:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-480791-21</guid>
        <source url="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791.rss">Simple Skill Manager (Enum Based)</source>
      </item>
      <item>
        <title>Simple Skill Manager (Enum Based)</title>
        <dc:creator><![CDATA[@relexlawl relexlawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/relexlawl">@relexlawl</a> wrote:</p>
          <blockquote>
              <p>[quote=“Yesteryear, post:19, topic:480791”][quote author=relexlawl link=topic=599028.msg4212430#msg4212430 date=1359763059]</p>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<p>In that case static would be acceptable</p>
</blockquote>
</aside>
<p>No…Stop avoiding OOP.</p>
</blockquote>
</aside>
<p>Do you even know what static means?</p>
<p>There’s no reason not to use static. Why would you allocate the same memory over and over again for every new player, while you just need it once.</p>
</blockquote>
</aside>
<p>Are you stupid?..When is it creating a new instance per player?..</p>
<p>Also look into OOP and learn when to use static vs instance. Either way an enum is self-defined as static and final.</p>
</blockquote>
</aside>
<p>Please explain to me why you would want more than one instance of this class.</p>
</blockquote>
</aside>
<p>Did you just not read what I said? Enums are self-defined as both static and final…<br>
[/quote]<br>
Then why do you want to have multiple instances of this class when it’s already static and final. Do you even listen to yourself?</p>
<p>As for the code you provided, it doesn’t have anything to do with the actual thread. This class is merely a file to store skill names. Not ‘skill handlers’, with which you implement skills.[/quote]</p>
<p>When did I say I want multiple instances of the class?..:fp:</p>
<p>Please quote me on this…I don’t see why I would even say this when I already explained that enums are ALREADY FUCKING STATIC.</p>
<p>I don’t see why you would want to get the names.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/20">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/20</link>
        <pubDate>Sat, 02 Feb 2013 17:41:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-480791-20</guid>
        <source url="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791.rss">Simple Skill Manager (Enum Based)</source>
      </item>
      <item>
        <title>Simple Skill Manager (Enum Based)</title>
        <dc:creator><![CDATA[@Yesteryear Yesteryear]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/yesteryear">@Yesteryear</a> wrote:</p>
          <blockquote>
              <p>[quote=“relexlawl, post:17, topic:480791”][quote author=Yesteryear link=topic=599028.msg4212381#msg4212381 date=1359758322]</p>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<p>In that case static would be acceptable</p>
</blockquote>
</aside>
<p>No…Stop avoiding OOP.</p>
</blockquote>
</aside>
<p>Do you even know what static means?</p>
<p>There’s no reason not to use static. Why would you allocate the same memory over and over again for every new player, while you just need it once.</p>
</blockquote>
</aside>
<p>Are you stupid?..When is it creating a new instance per player?..</p>
<p>Also look into OOP and learn when to use static vs instance. Either way an enum is self-defined as static and final.</p>
</blockquote>
</aside>
<p>Please explain to me why you would want more than one instance of this class.<br>
[/quote]<br>
Did you just not read what I said? Enums are self-defined as both static and final…[/quote]<br>
Then why do you want to have multiple instances of this class when it’s already static and final. Do you even listen to yourself?</p>
<p>As for the code you provided, it doesn’t have anything to do with the actual thread. This class is merely a file to store skill names. Not ‘skill handlers’, with which you implement skills.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/19">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/19</link>
        <pubDate>Sat, 02 Feb 2013 13:13:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-480791-19</guid>
        <source url="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791.rss">Simple Skill Manager (Enum Based)</source>
      </item>
      <item>
        <title>Simple Skill Manager (Enum Based)</title>
        <dc:creator><![CDATA[@Fox2007 Fox2007]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/fox2007">@Fox2007</a> wrote:</p>
          <blockquote>
              <p>dafuq would you need all that for lmao. I wasn’t trying to write an entire system.<br>
This is just for handling shit from Skills.java, not actually for making an entire skill sytem -_____-</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/18</link>
        <pubDate>Sat, 02 Feb 2013 10:47:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-480791-18</guid>
        <source url="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791.rss">Simple Skill Manager (Enum Based)</source>
      </item>
      <item>
        <title>Simple Skill Manager (Enum Based)</title>
        <dc:creator><![CDATA[@relexlawl relexlawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/relexlawl">@relexlawl</a> wrote:</p>
          <blockquote>
              <p>[quote=“Yesteryear, post:14, topic:480791”][quote author=relexlawl link=topic=599028.msg4212367#msg4212367 date=1359756232]</p>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<p>In that case static would be acceptable</p>
</blockquote>
</aside>
<p>No…Stop avoiding OOP.</p>
</blockquote>
</aside>
<p>Do you even know what static means?</p>
<p>There’s no reason not to use static. Why would you allocate the same memory over and over again for every new player, while you just need it once.</p>
</blockquote>
</aside>
<p>Are you stupid?..When is it creating a new instance per player?..</p>
<p>Also look into OOP and learn when to use static vs instance. Either way an enum is self-defined as static and final.<br>
[/quote]<br>
Please explain to me why you would want more than one instance of this class.[/quote]</p>
<p>Did you just not read what I said? Enums are self-defined as both static and final…</p>
<p>Same goes for above.</p>
<p>edit: Also for above…Either use complete sentences that make sense (because it seems like your trying to sound smart, but have no idea what you’re talking about - i.e “singleton design pattern” :fp:) or just shut up…Why shouldn’t something like this be abstract? I swear this community is like r-s back in 2011…</p>
<p>Look how much easier it is to write skills when you have something like this:</p>
<p>[code]package org.niobe.world.content.skills;</p>
<p>import org.niobe.model.Animation;<br>
import org.niobe.model.Entity;<br>
import org.niobe.model.Item;<br>
import org.niobe.model.MovementQueue.MovementFlag;<br>
import org.niobe.model.Position;<br>
import org.niobe.model.Skills.Skill;<br>
import org.niobe.task.Task;<br>
import org.niobe.task.TaskScheduler;<br>
import org.niobe.util.MathUtils;<br>
import org.niobe.world.GameObject;<br>
import org.niobe.world.Player;<br>
import org.niobe.world.World;</p>
<p>/**</p>
<ul>
<li>Manages all skills that are categorized as being harvested, such as mining, woodcutting,</li>
<li>fishing, and so on.</li>
<li>
</li>
<li>
<span class="mention">@author</span> relex lawl<br>
*/</li>
</ul>
<p>public abstract class HarvestSkillAction {</p>
<pre><code>/**
 * Initializes the harvest event.
 */
public abstract boolean init(Player player, Entity entity);

/**
 * Gets the skill player is training/harvesting.
 */
public abstract Skill getSkill();

/**
 * Gets the amount of experience per harvest player will receive.
 */
public abstract int getExperience();

/**
 * Gets the animation object.
 */
public abstract Animation getAnimation();

/**
 * Gets the reward item instance that player will harvest.
 */
public abstract Item getReward();

/**
 * Gets the message player receives upon harvest action.
 */
public abstract String getHarvestMessage();

/**
 * Gets the reward message.
 */
public abstract String getRewardMessage();

/**
 * Checks if player will get periodic rewards over time, such as in woodcutting and fishing.
 */
public abstract boolean consecutiveRewards();

/**
 * Gets the cycles player needs to wait to get rewarded.
 */
public abstract int getCycles(Player player);

/**
 * Gets the total amount of harvested items to be given.
 */
public abstract int getHarvestAmount();

/**
 * Gets the new object to replace old object, such as stomps for trees.
 */
public abstract GameObject getNewObject();

/**
 * The harvest source's position.
 */
private Position position;

/**
 * Gets the source's position.
 * @return	position.
 */
public Position getPosition() {
	return position;
}

/**
 * Executes the harvest action.
 * @param player	Player trying to harvest.
 * @param entity	Entity being clicked upon.
 */
public void execute(final Player player, final Entity entity) {
	if (player.getInventory().isFull()) {
		player.getPacketSender().sendMessage("Not enough inventory space.");
		return;
	}
	if (!init(player, entity)) {
		return;
	}
	player.getMovementQueue().stopMovement();
	this.position = entity.getPosition();
	player.performAnimation(getAnimation());
	player.setPositionToFace(entity.getPosition());
	player.getPacketSender().sendMessage(getHarvestMessage());
	TaskScheduler.get().schedule(new Task() {
		int rewardTime = getCycles(player), harvest = getHarvestAmount();
		@Override
		protected void execute() {
			if (!player.getMovementQueue().getMovementFlag().equals(MovementFlag.NONE) || !init(player, entity)) {
				stop();
				return;
			}
			if (rewardTime &gt; 0) {
				rewardTime--;
			} else {
				player.performAnimation(getAnimation());
				player.setEntityToFace(entity);
				if (player.getInventory().isFull()) {
					player.getPacketSender().sendMessage("Not enough inventory space.");
					stop();
				} else {
					harvest--;
					player.getInventory().add(getReward());
					player.getSkills().addExperience(getSkill(), (int) (getExperience() * getSkill().getExperienceMultiplier()));
					player.getPacketSender().sendMessage(getRewardMessage());
					if (consecutiveRewards() &amp;&amp; harvest &gt; 0)
						rewardTime = getCycles(player);
					else {
						if (entity instanceof GameObject) {
							player.performAnimation(new Animation(65535));
							replaceObject((GameObject) entity);
						}
						stop();
					}
				}
			}
		}
	});
}

/**
 * Replaces an object with a new object.
 * @param object		Object to replace.
 */
private void replaceObject(GameObject object) {
	final GameObject oldObject = object;
	final GameObject newObject = getNewObject();
	for (Player players : World.getPlayers()) {
		if (players.getPosition().isWithinDistance(object.getPosition())) {
			final Player player = players;
			player.getPacketSender().sendObjectRemoval(oldObject);
			player.getPacketSender().sendObject(newObject);
			TaskScheduler.get().schedule(new Task(MathUtils.random(15)) {
				@Override
				public void execute() {
					player.getPacketSender().sendObjectRemoval(newObject);
					player.getPacketSender().sendObject(oldObject);
					stop();
				}
			});
		}
	}
}
</code></pre>
<p>}[/code]</p>
<p>[code]package org.niobe.world.content.skills.impl;</p>
<p>import java.util.HashMap;<br>
import java.util.Map;</p>
<p>import org.niobe.model.Animation;<br>
import org.niobe.model.Entity;<br>
import org.niobe.model.Item;<br>
import org.niobe.model.Skills.Skill;<br>
import org.niobe.util.MathUtils;<br>
import org.niobe.world.GameObject;<br>
import org.niobe.world.Player;<br>
import org.niobe.world.content.skills.HarvestSkillAction;</p>
<p>/**</p>
<ul>
<li>Handles the mining skill, which allows a player to extract</li>
<li>certain valuable ores.</li>
<li>
</li>
<li>
<span class="mention">@author</span> relex lawl<br>
*/</li>
</ul>
<p>public class Mining extends HarvestSkillAction {</p>
<pre><code>/**
 * Represents a mining pick axe to extract rocks with.
 * 
 * @author relex lawl
 */
private enum Pickaxe {
	
	BRONZE(1, new Item(1265), new Animation(625)),
	IRON(1, new Item(1267), new Animation(626)),
	STEEL(6, new Item(1269), new Animation(627)),
	MITHRIL(21, new Item(1273), new Animation(629)),
	ADAMANT(31, new Item(1271), new Animation(628)),
	RUNE(41, new Item(1275), new Animation(624));
	
	private Pickaxe(int levelRequirement, Item item, Animation animation) {
		this.levelRequirement = levelRequirement;
		this.item = item;
		this.animation = animation;
	}
	
	private int levelRequirement;
	
	private Item item;
	
	private Animation animation;
}

/**
 * Represents a rock to which player will
 * extract ores from.
 * 
 * @author relex lawl
 */
private enum Rock {
	COPPER(new Item(436), 1, 17.5, 
			new int[] { 2090, 2091 }),
	TIN(new Item(438), 1, 17.5, 
			new int[] { 2094, 2095 }),
	BLURITE(new Item(668), 10, 17.5, 
			new int[] { 2110 }),
	IRON(new Item(440), 15, 35, 
			new int[] { 2092, 2093 }),
	SILVER(new Item(442), 20, 40, 
			new int[] { 2100, 2101 }),
	CLAY(new Item(434), 1, 5, 
			new int[] { 2108, 2109 }),
	GOLD(new Item(444), 40, 65, 
			new int[] { 2098, 2099 }),
	COAL(new Item(453), 30, 50, 
			new int[] { 2096, 2097 }),
	MITHRIL(new Item(447), 55, 80, 
			new int[] { 2102, 2103 }),
	ADAMANTITE(new Item(449), 70, 95, 
			new int[] { 2104, 2105 }),
	RUNE(new Item(451), 85, 125, 
			new int[] { 2106, 2107}); //TODO no ore object
	
	private Rock(Item ore, int levelRequirement, double experience, int[] objectIds) {
		this.ore = ore;
		this.experience = experience;
		this.levelRequirement = levelRequirement;
		this.objectIds = objectIds;
	}
	
	private Item ore;
	
	private int levelRequirement;
	
	private double experience;
	
	private int[] objectIds;
	
	private static Map&lt;Integer, Rock&gt; rockMap = new HashMap&lt;Integer, Rock&gt;();
	
	static {
		for (Rock rock : Rock.values()) {
			for (int ids : rock.objectIds) {
				rockMap.put(ids, rock);
			}
		}
	}
}

/**
 * The player-associated pickaxe.
 */
private Pickaxe pickaxe;

/**
 * The player-associated rock.
 */
private Rock rock;

/**
 * Checks if the game object is a valid rock object.
 * @param gameObject	Game object being clicked upon.
 * @return				The rock enum contains this game object id.
 */
public static boolean isRock(GameObject gameObject) {
	return Rock.rockMap.containsKey(gameObject.getDefinition().getId());
}

@Override
public boolean init(Player player, Entity entity) {
	for (Pickaxe pickaxe : Pickaxe.values()) {
		if ((player.getInventory().contains(pickaxe.item.getId()) || player.getEquipment().contains(pickaxe.item.getId())) &amp;&amp; player.getSkills().getMaxLevel(Skill.MINING) &gt;= pickaxe.levelRequirement) {
			this.pickaxe = pickaxe;
		}
	}
	if (pickaxe == null) {
		player.getPacketSender().sendMessage("You do not have a pickaxe which you have the required level to use.");
		return false;
	}
	rock = Rock.rockMap.get(((GameObject)entity).getId());
	if (rock.levelRequirement &gt; player.getSkills().getMaxLevel(Skill.MINING)) {
		player.getPacketSender().sendMessage("You need a mining level of " + rock.levelRequirement + " to mine this rock.");
		return false;
	}
	return true;
}

@Override
public Skill getSkill() {
	return Skill.MINING;
}

@Override
public int getExperience() {
	return (int) rock.experience;
}

@Override
public Animation getAnimation() {
	return pickaxe.animation;
}

@Override
public Item getReward() {
	return rock.ore;
}

@Override
public String getHarvestMessage() {
	return "You swing your pick at the rock.";
}

@Override
public String getRewardMessage() {
	return "You manage to mine some ore.";
}

@Override
public boolean consecutiveRewards() {
	return true;
}

@Override
public int getCycles(Player player) {
	int random = MathUtils.random(10) + MathUtils.random(rock.ordinal()) - MathUtils.random(pickaxe.ordinal());
	return random &gt; 0 ? random : 1;
}

@Override
public int getHarvestAmount() {
	return (rock.equals(Rock.TIN) || rock.equals(Rock.COPPER)) ? 1 : MathUtils.random(7);
}

@Override
public GameObject getNewObject() {
	return new GameObject(450, getPosition()); //object are 450-453
}
</code></pre>
<p>}[/code]</p>
<p>No, but your right, let’s just stick with this</p>
<p><a href="http://pastebin.com/6CA0HT0v" data-bbcode="true" rel="nofollow noopener">http://pastebin.com/6CA0HT0v</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/17</link>
        <pubDate>Fri, 01 Feb 2013 23:57:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-480791-17</guid>
        <source url="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791.rss">Simple Skill Manager (Enum Based)</source>
      </item>
      <item>
        <title>Simple Skill Manager (Enum Based)</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="15" data-topic="480791">
<div class="title">
<div class="quote-controls"></div>
 Clawz fury:</div>
<blockquote>
<p>should be an abstract class</p>
</blockquote>
</aside>
<p>whats up with you and abstraction. No it shouldn’t.</p>
<p>[quote=“Yesteryear, post:14, topic:480791”][quote author=relexlawl link=topic=599028.msg4212367#msg4212367 date=1359756232]</p>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<p>In that case static would be acceptable</p>
</blockquote>
</aside>
<p>No…Stop avoiding OOP.</p>
</blockquote>
</aside>
<p>Do you even know what static means?</p>
<p>There’s no reason not to use static. Why would you allocate the same memory over and over again for every new player, while you just need it once.</p>
</blockquote>
</aside>
<p>Are you stupid?..When is it creating a new instance per player?..</p>
<p>Also look into OOP and learn when to use static vs instance. Either way an enum is self-defined as static and final.<br>
[/quote]<br>
Please explain to me why you would want more than one instance of this class.[/quote]</p>
<p>^This, <a class="mention" href="/u/relax">@relax</a> I totally understand when to use the singleton design pattern and when to use static. This is one of the times to use static, static variables and methods are also known as class variables or class methods because each class variable and each class method occurs once per class. Instance methods and variables occur once per instance of a class. Therefore, there is <em>no</em> need to create a new instance of this class each time it’s needed.</p>
<p>Stop trying to act big.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/16</link>
        <pubDate>Fri, 01 Feb 2013 23:23:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-480791-16</guid>
        <source url="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791.rss">Simple Skill Manager (Enum Based)</source>
      </item>
      <item>
        <title>Simple Skill Manager (Enum Based)</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>should be an abstract class</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/15</link>
        <pubDate>Fri, 01 Feb 2013 23:03:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-480791-15</guid>
        <source url="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791.rss">Simple Skill Manager (Enum Based)</source>
      </item>
      <item>
        <title>Simple Skill Manager (Enum Based)</title>
        <dc:creator><![CDATA[@Yesteryear Yesteryear]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/yesteryear">@Yesteryear</a> wrote:</p>
          <blockquote>
              <p>[quote=“relexlawl, post:13, topic:480791”][quote author=Yesteryear link=topic=599028.msg4212355#msg4212355 date=1359754835]</p>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<p>In that case static would be acceptable</p>
</blockquote>
</aside>
<p>No…Stop avoiding OOP.</p>
</blockquote>
</aside>
<p>Do you even know what static means?</p>
<p>There’s no reason not to use static. Why would you allocate the same memory over and over again for every new player, while you just need it once.<br>
[/quote]</p>
<p>Are you stupid?..When is it creating a new instance per player?..</p>
<p>Also look into OOP and learn when to use static vs instance. Either way an enum is self-defined as static and final.[/quote]<br>
Please explain to me why you would want more than one instance of this class.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/14</link>
        <pubDate>Fri, 01 Feb 2013 22:38:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-480791-14</guid>
        <source url="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791.rss">Simple Skill Manager (Enum Based)</source>
      </item>
      <item>
        <title>Simple Skill Manager (Enum Based)</title>
        <dc:creator><![CDATA[@relexlawl relexlawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/relexlawl">@relexlawl</a> wrote:</p>
          <blockquote>
              <p>[quote=“Yesteryear, post:12, topic:480791”][quote author=relexlawl link=topic=599028.msg4212233#msg4212233 date=1359741642]</p>
<aside class="quote">
<blockquote>
<p>In that case static would be acceptable</p>
</blockquote>
</aside>
<p>No…Stop avoiding OOP.<br>
[/quote]<br>
Do you even know what static means?</p>
<p>There’s no reason not to use static. Why would you allocate the same memory over and over again for every new player, while you just need it once.[/quote]</p>
<p>Are you stupid?..When is it creating a new instance per player?..</p>
<p>Also look into OOP and learn when to use static vs instance. Either way an enum is self-defined as static and final.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/13</link>
        <pubDate>Fri, 01 Feb 2013 22:03:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-480791-13</guid>
        <source url="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791.rss">Simple Skill Manager (Enum Based)</source>
      </item>
      <item>
        <title>Simple Skill Manager (Enum Based)</title>
        <dc:creator><![CDATA[@Yesteryear Yesteryear]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/yesteryear">@Yesteryear</a> wrote:</p>
          <blockquote>
              <p>[quote=“relexlawl, post:11, topic:480791”][quote author=Christmas_tree link=topic=599028.msg4212220#msg4212220 date=1359739585]<br>
In that case static would be acceptable<br>
[/quote]</p>
<p>No…Stop avoiding OOP.[/quote]<br>
Do you even know what static means?</p>
<p>There’s no reason not to use static. Why would you allocate the same memory over and over again for every new player, while you just need it once.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791/12</link>
        <pubDate>Fri, 01 Feb 2013 21:40:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-480791-12</guid>
        <source url="https://forum.moparisthebest.com/t/simple-skill-manager-enum-based/480791.rss">Simple Skill Manager (Enum Based)</source>
      </item>
  </channel>
</rss>
