<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[Guide] First Learning How To Program?</title>
    <link>https://forum.moparisthebest.com/t/guide-first-learning-how-to-program/91695</link>
    <description>This is a guide which will teach you how to make a basic program in Delphi, and will hopefully give you an idea of how to program in general, as all languages generally work the same.

I will be using Delphi 7SE, which can be obtained [url=http://www.megaupload.com/?d=XMFLF0UW]here[/url]

If you have another version of Delphi, or a different coding language and want to use it then don’t fret, it will be pretty much the same, but you may find you need to make slight changes, such as different parameters or commands.

I will walk you through how to make a program, which lets the user input a number from 1-7 and have it display the day of the week. Say if the user inputs 1 the program displays Monday etc.

First I will explain a few basic things about how basic coding generally works.
Please note that a semi colon (;) is used after every statement, and the coding is generally only on separate lines for neatness. When I was first starting out, and was reading other people’s code, I got confused about that.
EG: 
[code]Begin
	If (daynumber = 1) then
day:= (&#39;Monday&#39;);
if (daynumber = 2) then
day:= (&#39;Tuesday&#39;);
End;[/code]
Works the name as:
[code]Begin
If (daynumber = 1) then day:= (&#39;Monday&#39;);
if (daynumber = 2) then day:= (&#39;Tuesday&#39;);
End;[/code]

Variables:

Variables can be anything which varies. The program will use an edit box to so the user can input the number. This number will be saved as a variable, as it could be any number between 1 and 7.


There are 3 main variables that you will use:
String (any letters up to I think 255 characters)
Integer (any whole number)
Real (any number including decimals)
I also want to add
Boolean  (can only ever be 2 things, true or false)
You need to declare variables, either at the top of the script if you want it to affect the whole script, or if you only want the variable for one procedure, it goes on the line before begin
How to declare a variable
Global variables:
Find var at the top of your code, it is short for variable. You need to declare it underneath var.
EG:
[code]Var
day:  string;
number: integer;[/code]
Here we are declaring day a string, and number an integer. More on how to use variables later

If, then, and, or, and else statements:

Pretty much works like

[code]If (condition is met)
Then (do this)
Else (do this)[/code]

Many combinations can be used.

[code]If (condition is met) and (other condition is met)
Then (do this)
If (some other condition is met) or (another condition is met)
Then (do this)[/code]

Procedures:
Procedures are the bulk of your code. There are 2 types of procedures, the procedures that Delphi can add in for you, which runs when you click a button, or change the contents of an edit box, and the procedures that you add yourself.
The procedures you add yourself are ignored by Delphi, until you call them in the first type of procedure I mentioned. You can also use a procedure which runs when you click a button, run a procedure which you make, and have that procedure run another that you make. If you don’t understand all of this don’t worry, you should understand when you start following the guide.

Ok, before you start coding, it is a good idea to plan. Without a plan, you can screw up your code easily. For a basic program such as this, you don’t really need a plan unless you are starting out, but when programs get more complicated, it is very easy to get lost, not matter how experienced you are.

To write a plan, you have to realize what the program needs to do, and how you will do it.
Firstly I will realize what the program needs to do
The program lets the user input a number from 1-7 and have it display the day of the week. Say if the user inputs 1 the program displays Monday etc.
Now we have to figure out how we are going to do it.
The user needs to input a number, so we will need an edit box.  This number will have to convert to a day of the week. So the number will be saved to a variable, the variable needed is an integer.
We will then need an if statement
If the number is 1, then the day is Monday etc. So that is another  variable, the variable we will need is a string.
Finally we have to display the Day of the week, for this we will use a label.

That&#39;s basically 3 steps:

take the number

figure out what day it is

display the day

Now it’s time to open up Delphi and create a new application.
You should have a form, and a code box.

If you don&#39;t see the object inspector then go to view, tool bars and click on object inspector.

[url=http://imageshack.us][img]http://img504.imageshack.us/img504/6373/toolbarbr0.png[/img][/url]

In the picture I have circled the form, object inspector and the main tool bar at the top. I also have circled button, label and edit box, which are tools that will be used in this program.

Put 2 buttons, a label and an edit box on the form as shown. Resize the label by putting your mouse over the corner of it and dragging

Now we need to name them.

Click on the edit box, and go to the object inspector, find text, and make it 0. Find name, and call it inputedit.

Change the following settings for each item as follows:

Item               Caption            name

Button 1          &amp;Display           displaybtn
Button 2          &amp;Exit                exitbtn
Label               (blank)             daylbl

Note: Having an &amp; before your button caption will underline the first letter, and turn it into a shortcut. Press alt or shift and the underlined letter as a shortcut to use the button once you have compiled the program.

Once you have all that, it is time to add some code. Click the exit button, and on the object inspector click events, double click the blank space after on click. Delphi will then create a procedure, which will run when you click the exit button. 
If you leave this procedure blank, and compile and run your program, Delphi will automatically remove it, as it is unused. Never edit the line which declares the procedure. You can declare variables before begin, and write code after it, but do not edit the code that Delphi automatically puts there for you.

Make the procedure look like this.
[code]procedure TForm1.exitbtnClick(Sender: TObject);
begin
Application.Terminate;
end;[/code]

Go back to the form and save all. You will need to save a project and unit file. Name them chosenname_U and chosenname_P. Make sure the name has no spaces in it. When you open your program again, you will need to open both of these files. The dpr and pas files.

Hit f9 or run to compile and run the program. The program should compile, click on the exit button and it should close the program.
Yay.

Go back to your code, and go to the top.
If all your code has gone, note that sometimes when you save, you will have 2 tabs on your code box, make sure you have the unit tab selected.

We now need some variables. The user will put a number in the edit box, and that needs to be a variable so call it daynumber, and declare it as an integer. The day of the week will also be a variable so save day as a string. The code should look something like this:

[code]unit dayoftheweek_U;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls;

type
  TForm1 = class(TForm)
    displaybtn: TButton;
    inputedit: TEdit;
    exitbtn: TButton;
    daylbl: TLabel;
    procedure exitbtnClick(Sender: TObject);
    procedure displaybtnClick(Sender: TObject);
    procedure inputeditChange(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;
  day: string;
  daynumber: integer;

implementation

{$R *.dfm}

procedure TForm1.exitbtnClick(Sender: TObject);
begin
Application.Terminate;
end;[/code]

We now have variables.

Go back to your form, and create an event handler for your display button.
Make the code look like this.
[code]procedure TForm1.displaybtnClick(Sender: TObject);
begin

daynumber := strtoint(inputedit.text);
checkifvalid;
daylbl.Caption:=(day);[/code]

Don&#39;t panic, I will explain what it all does.

daynumber:= strtoint(inputedit.text);

What this does, is take the number you put in the edit box, and save it as the variable daynumber.

daynumber is a integer, := is what you use when saving a variable.
The edit box is a string, and daynumber is an integer. They need to be the same before they can work together.
strtoint() changes a string to an integer just for that line of code.

When you use strtoint, you must put what you are changing in brackets, which is the text from the edit box.
checkifvalid is a procedure that we will write in a minute. It will run the procedure checkifvalid, then go to the next line of code, which is:
daylbl.Caption:=(day);
this changes the caption of our label, (named daylbl) to day, and day is our variable.

Now the program can only give a day when the number is 1-7, because there is only 7 days. I will add a procedure that checks if then number is valid, so if somebody puts a 9 in, instead of crashing, the program will give an error message.

We have to put this procedure before the display button click procedure, because the program has not gotten past that yet, and will give an error message if it is put after it, as it hasn&#39;t read it and doesn&#39;t know that it is there.

So right before your display button click procedure, put in 

[code]procedure checkifvalid
begin

end;[/code]

after begin, put in.

[code]if
(daynumber &gt; 0) and (daynumber &lt; 8) then
checkday
else
MessageDlg(&#39;Invalid day&#39;, mtError,
      [mbOk], 0,);
end;[/code]

This makes the program check the number you have input, and run a procedure if it is between 0 and 8, and gives an error message if it isn&#39;t.

if (daynumber &gt; 0) and (daynumber &lt;  8) then 
checkday
Means that if the number assigned to daynumber is greater than 0 and less than 8, then run the procedure called checkday
if it isn&#39;t, then display a message.
MessageDlg() In the brackets are the parameters each parameter is separated by a comma. The first one is the message in inverted commas, the next is the icon, the next is the button, I actually don&#39;t know what the 0 is for, but it is needed. It doesn&#39;t seem to matter what number it is.

So now we have another procedure to write, called checkday. As the name suggests, it checks which day the number is. Actually what it will do is assign the variable day, a day of the week, depending on what number was inputted.

So before both of those procedures, make another.

[code]procedure checkday;
begin
if (daynumber = 1) then
day:= (&#39;Monday&#39;);
if (daynumber = 2) then
day:= (&#39;Tuesday&#39;);
if (daynumber = 3) then
day:= (&#39;Wednesday&#39;);
if (daynumber = 4) then
day:= (&#39;Thursday&#39;);
if (daynumber = 5) then
day:= (&#39;Friday&#39;);
if (daynumber = 6) then
day:= (&#39;Saturday&#39;);
if (daynumber = 7) then
day:= (&#39;Sunday&#39;);
end;[/code]

As you have probably guessed, if the variable daynumber (which what was inputted) is 1, then assign monday to the variable: day.
etc.

Run the program, if you did everything correctly it should run properly.


I realize this guide isn&#39;t too great right now, I pretty much quickly threw that together, I will fix it up and add more stuff later, but now I have school stuff to do.

If anybody has any questions, no matter how dumb they might seem to you I am happy to answer them.</description>
    
    <lastBuildDate>Fri, 11 May 2007 02:03:51 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/guide-first-learning-how-to-program/91695.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[Guide] First Learning How To Program?</title>
        <dc:creator><![CDATA[@I_chr1s_I I chr1s I]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/i_chr1s_i">@I_chr1s_I</a> wrote:</p>
          <blockquote>
              <p>v nice can you post it on my forum also <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"> <a href="http://www.rs2legendz.com/forum/index.php" rel="nofollow noopener">http://www.rs2legendz.com/forum/index.php</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/guide-first-learning-how-to-program/91695/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/guide-first-learning-how-to-program/91695/6</link>
        <pubDate>Fri, 11 May 2007 02:03:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-91695-6</guid>
        <source url="https://forum.moparisthebest.com/t/guide-first-learning-how-to-program/91695.rss">[Guide] First Learning How To Program?</source>
      </item>
      <item>
        <title>[Guide] First Learning How To Program?</title>
        <dc:creator><![CDATA[@system system]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/system">@system</a> wrote:</p>
          <blockquote>
              <p>Bahahaha good old delphi ay ;).<br>
BTW nice tutorial man</p>
<blockquote>Delphi 7.2 SE gives me the creeps :)</blockquote>
Just delphi gives me the creeps haha... Breeze too, really don't like it =\
Java ftw :)
<p>Good job dan.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/guide-first-learning-how-to-program/91695/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/guide-first-learning-how-to-program/91695/5</link>
        <pubDate>Thu, 10 May 2007 13:24:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-91695-5</guid>
        <source url="https://forum.moparisthebest.com/t/guide-first-learning-how-to-program/91695.rss">[Guide] First Learning How To Program?</source>
      </item>
      <item>
        <title>[Guide] First Learning How To Program?</title>
        <dc:creator><![CDATA[@Original_Daniel Original Daniel]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/original_daniel">@Original_Daniel</a> wrote:</p>
          <blockquote>
              <p>Lol that’s not how I code, I just didn’t use tab etc when I posted code examples.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/guide-first-learning-how-to-program/91695/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/guide-first-learning-how-to-program/91695/4</link>
        <pubDate>Thu, 10 May 2007 11:42:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-91695-4</guid>
        <source url="https://forum.moparisthebest.com/t/guide-first-learning-how-to-program/91695.rss">[Guide] First Learning How To Program?</source>
      </item>
      <item>
        <title>[Guide] First Learning How To Program?</title>
        <dc:creator><![CDATA[@Freddy1990 Freddy1990]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/freddy1990">@Freddy1990</a> wrote:</p>
          <blockquote>
              <p>Delphi 7.2 SE gives me the creeps <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"><br>
Delphi 7 Enterprise &lt;3</p>
<aside class="quote no-group" data-post="2" data-topic="91695">
<div class="title">
<div class="quote-controls"></div>
 The Un-Named:</div>
<blockquote>
<p>EWWWWWWW at your coding style.</p>
</blockquote>
</aside>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/guide-first-learning-how-to-program/91695/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/guide-first-learning-how-to-program/91695/3</link>
        <pubDate>Thu, 10 May 2007 03:29:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-91695-3</guid>
        <source url="https://forum.moparisthebest.com/t/guide-first-learning-how-to-program/91695.rss">[Guide] First Learning How To Program?</source>
      </item>
      <item>
        <title>[Guide] First Learning How To Program?</title>
        <dc:creator><![CDATA[@The_Un-Named The Un-Named]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_un-named">@The_Un-Named</a> wrote:</p>
          <blockquote>
              <p>EWWWWWWW at your coding style.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/guide-first-learning-how-to-program/91695/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/guide-first-learning-how-to-program/91695/2</link>
        <pubDate>Thu, 10 May 2007 03:28:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-91695-2</guid>
        <source url="https://forum.moparisthebest.com/t/guide-first-learning-how-to-program/91695.rss">[Guide] First Learning How To Program?</source>
      </item>
      <item>
        <title>[Guide] First Learning How To Program?</title>
        <dc:creator><![CDATA[@Original_Daniel Original Daniel]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/original_daniel">@Original_Daniel</a> wrote:</p>
          <blockquote>
              <p>This is a guide which will teach you how to make a basic program in Delphi, and will hopefully give you an idea of how to program in general, as all languages generally work the same.</p>
<p>I will be using Delphi 7SE, which can be obtained <a href="http://www.megaupload.com/?d=XMFLF0UW" data-bbcode="true" rel="nofollow noopener">here</a></p>
<p>If you have another version of Delphi, or a different coding language and want to use it then don’t fret, it will be pretty much the same, but you may find you need to make slight changes, such as different parameters or commands.</p>
<p>I will walk you through how to make a program, which lets the user input a number from 1-7 and have it display the day of the week. Say if the user inputs 1 the program displays Monday etc.</p>
<p>First I will explain a few basic things about how basic coding generally works.<br>
Please note that a semi colon (<img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=6" title=":wink:" class="emoji" alt=":wink:"> is used after every statement, and the coding is generally only on separate lines for neatness. When I was first starting out, and was reading other people’s code, I got confused about that.<br>
EG:</p>
<p><code>Begin
	If (daynumber = 1) then
day:= ('Monday');
if (daynumber = 2) then
day:= ('Tuesday');
End;</code><br>
Works the name as:</p>
<p><code>Begin
If (daynumber = 1) then day:= ('Monday');
if (daynumber = 2) then day:= ('Tuesday');
End;</code></p>
<p>Variables:</p>
<p>Variables can be anything which varies. The program will use an edit box to so the user can input the number. This number will be saved as a variable, as it could be any number between 1 and 7.</p>
<p>There are 3 main variables that you will use:<br>
String (any letters up to I think 255 characters)<br>
Integer (any whole number)<br>
Real (any number including decimals)<br>
I also want to add<br>
Boolean  (can only ever be 2 things, true or false)<br>
You need to declare variables, either at the top of the script if you want it to affect the whole script, or if you only want the variable for one procedure, it goes on the line before begin<br>
How to declare a variable<br>
Global variables:<br>
Find var at the top of your code, it is short for variable. You need to declare it underneath var.<br>
EG:</p>
<p><code>Var
day:  string;
number: integer;</code><br>
Here we are declaring day a string, and number an integer. More on how to use variables later</p>
<p>If, then, and, or, and else statements:</p>
<p>Pretty much works like</p>
<p><code>If (condition is met)
Then (do this)
Else (do this)</code></p>
<p>Many combinations can be used.</p>
<p><code>If (condition is met) and (other condition is met)
Then (do this)
If (some other condition is met) or (another condition is met)
Then (do this)</code></p>
<p>Procedures:<br>
Procedures are the bulk of your code. There are 2 types of procedures, the procedures that Delphi can add in for you, which runs when you click a button, or change the contents of an edit box, and the procedures that you add yourself.<br>
The procedures you add yourself are ignored by Delphi, until you call them in the first type of procedure I mentioned. You can also use a procedure which runs when you click a button, run a procedure which you make, and have that procedure run another that you make. If you don’t understand all of this don’t worry, you should understand when you start following the guide.</p>
<p>Ok, before you start coding, it is a good idea to plan. Without a plan, you can screw up your code easily. For a basic program such as this, you don’t really need a plan unless you are starting out, but when programs get more complicated, it is very easy to get lost, not matter how experienced you are.</p>
<p>To write a plan, you have to realize what the program needs to do, and how you will do it.<br>
Firstly I will realize what the program needs to do<br>
The program lets the user input a number from 1-7 and have it display the day of the week. Say if the user inputs 1 the program displays Monday etc.<br>
Now we have to figure out how we are going to do it.<br>
The user needs to input a number, so we will need an edit box.  This number will have to convert to a day of the week. So the number will be saved to a variable, the variable needed is an integer.<br>
We will then need an if statement<br>
If the number is 1, then the day is Monday etc. So that is another  variable, the variable we will need is a string.<br>
Finally we have to display the Day of the week, for this we will use a label.</p>
<p>That’s basically 3 steps:</p>
<p>take the number</p>
<p>figure out what day it is</p>
<p>display the day</p>
<p>Now it’s time to open up Delphi and create a new application.<br>
You should have a form, and a code box.</p>
<p>If you don’t see the object inspector then go to view, tool bars and click on object inspector.</p>
<p><a href="http://imageshack.us" data-bbcode="true" rel="nofollow noopener"><img src="http://img504.imageshack.us/img504/6373/toolbarbr0.png" alt width="" height=""></a></p>
<p>In the picture I have circled the form, object inspector and the main tool bar at the top. I also have circled button, label and edit box, which are tools that will be used in this program.</p>
<p>Put 2 buttons, a label and an edit box on the form as shown. Resize the label by putting your mouse over the corner of it and dragging</p>
<p>Now we need to name them.</p>
<p>Click on the edit box, and go to the object inspector, find text, and make it 0. Find name, and call it inputedit.</p>
<p>Change the following settings for each item as follows:</p>
<p>Item               Caption            name</p>
<p>Button 1          &amp;Display           displaybtn<br>
Button 2          &amp;Exit                exitbtn<br>
Label               (blank)             daylbl</p>
<p>Note: Having an &amp; before your button caption will underline the first letter, and turn it into a shortcut. Press alt or shift and the underlined letter as a shortcut to use the button once you have compiled the program.</p>
<p>Once you have all that, it is time to add some code. Click the exit button, and on the object inspector click events, double click the blank space after on click. Delphi will then create a procedure, which will run when you click the exit button.<br>
If you leave this procedure blank, and compile and run your program, Delphi will automatically remove it, as it is unused. Never edit the line which declares the procedure. You can declare variables before begin, and write code after it, but do not edit the code that Delphi automatically puts there for you.</p>
<p>Make the procedure look like this.</p>
<p><code>procedure TForm1.exitbtnClick(Sender: TObject);
begin
Application.Terminate;
end;</code></p>
<p>Go back to the form and save all. You will need to save a project and unit file. Name them chosenname_U and chosenname_P. Make sure the name has no spaces in it. When you open your program again, you will need to open both of these files. The dpr and pas files.</p>
<p>Hit f9 or run to compile and run the program. The program should compile, click on the exit button and it should close the program.<br>
Yay.</p>
<p>Go back to your code, and go to the top.<br>
If all your code has gone, note that sometimes when you save, you will have 2 tabs on your code box, make sure you have the unit tab selected.</p>
<p>We now need some variables. The user will put a number in the edit box, and that needs to be a variable so call it daynumber, and declare it as an integer. The day of the week will also be a variable so save day as a string. The code should look something like this:</p>
<p>[code]unit dayoftheweek_U;</p>
<p>interface</p>
<p>uses<br>
Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,<br>
Dialogs, StdCtrls;</p>
<p>type<br>
TForm1 = class(TForm)<br>
displaybtn: TButton;<br>
inputedit: TEdit;<br>
exitbtn: TButton;<br>
daylbl: TLabel;<br>
procedure exitbtnClick(Sender: TObject);<br>
procedure displaybtnClick(Sender: TObject);<br>
procedure inputeditChange(Sender: TObject);<br>
private<br>
{ Private declarations }<br>
public<br>
{ Public declarations }<br>
end;</p>
<p>var<br>
Form1: TForm1;<br>
day: string;<br>
daynumber: integer;</p>
<p>implementation</p>
<p>{$R *.dfm}</p>
<p>procedure TForm1.exitbtnClick(Sender: TObject);<br>
begin<br>
Application.Terminate;<br>
end;[/code]</p>
<p>We now have variables.</p>
<p>Go back to your form, and create an event handler for your display button.<br>
Make the code look like this.</p>
<p>[code]procedure TForm1.displaybtnClick(Sender: TObject);<br>
begin</p>
<p>daynumber := strtoint(inputedit.text);<br>
checkifvalid;<br>
daylbl.Caption:=(day);[/code]</p>
<p>Don’t panic, I will explain what it all does.</p>
<p>daynumber:= strtoint(inputedit.text);</p>
<p>What this does, is take the number you put in the edit box, and save it as the variable daynumber.</p>
<p>daynumber is a integer, := is what you use when saving a variable.<br>
The edit box is a string, and daynumber is an integer. They need to be the same before they can work together.<br>
strtoint() changes a string to an integer just for that line of code.</p>
<p>When you use strtoint, you must put what you are changing in brackets, which is the text from the edit box.<br>
checkifvalid is a procedure that we will write in a minute. It will run the procedure checkifvalid, then go to the next line of code, which is:<br>
daylbl.Caption:=(day);<br>
this changes the caption of our label, (named daylbl) to day, and day is our variable.</p>
<p>Now the program can only give a day when the number is 1-7, because there is only 7 days. I will add a procedure that checks if then number is valid, so if somebody puts a 9 in, instead of crashing, the program will give an error message.</p>
<p>We have to put this procedure before the display button click procedure, because the program has not gotten past that yet, and will give an error message if it is put after it, as it hasn’t read it and doesn’t know that it is there.</p>
<p>So right before your display button click procedure, put in</p>
<p>[code]procedure checkifvalid<br>
begin</p>
<p>end;[/code]</p>
<p>after begin, put in.</p>
<p><code>if
(daynumber &gt; 0) and (daynumber &lt; 8) then
checkday
else
MessageDlg('Invalid day', mtError,
      [mbOk], 0,);
end;</code></p>
<p>This makes the program check the number you have input, and run a procedure if it is between 0 and 8, and gives an error message if it isn’t.</p>
<p>if (daynumber &gt; 0) and (daynumber &lt;  8) then<br>
checkday<br>
Means that if the number assigned to daynumber is greater than 0 and less than 8, then run the procedure called checkday<br>
if it isn’t, then display a message.<br>
MessageDlg() In the brackets are the parameters each parameter is separated by a comma. The first one is the message in inverted commas, the next is the icon, the next is the button, I actually don’t know what the 0 is for, but it is needed. It doesn’t seem to matter what number it is.</p>
<p>So now we have another procedure to write, called checkday. As the name suggests, it checks which day the number is. Actually what it will do is assign the variable day, a day of the week, depending on what number was inputted.</p>
<p>So before both of those procedures, make another.</p>
<p><code>procedure checkday;
begin
if (daynumber = 1) then
day:= ('Monday');
if (daynumber = 2) then
day:= ('Tuesday');
if (daynumber = 3) then
day:= ('Wednesday');
if (daynumber = 4) then
day:= ('Thursday');
if (daynumber = 5) then
day:= ('Friday');
if (daynumber = 6) then
day:= ('Saturday');
if (daynumber = 7) then
day:= ('Sunday');
end;</code></p>
<p>As you have probably guessed, if the variable daynumber (which what was inputted) is 1, then assign monday to the variable: day.<br>
etc.</p>
<p>Run the program, if you did everything correctly it should run properly.</p>
<p>I realize this guide isn’t too great right now, I pretty much quickly threw that together, I will fix it up and add more stuff later, but now I have school stuff to do.</p>
<p>If anybody has any questions, no matter how dumb they might seem to you I am happy to answer them.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/guide-first-learning-how-to-program/91695/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/guide-first-learning-how-to-program/91695/1</link>
        <pubDate>Wed, 09 May 2007 12:02:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-91695-1</guid>
        <source url="https://forum.moparisthebest.com/t/guide-first-learning-how-to-program/91695.rss">[Guide] First Learning How To Program?</source>
      </item>
  </channel>
</rss>
