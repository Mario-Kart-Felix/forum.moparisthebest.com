<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Creating attacks for Pokemon</title>
    <link>https://forum.moparisthebest.com/t/creating-attacks-for-pokemon/520181</link>
    <description>I don&#39;t really mind using what I already have but I can already see there could be some problems with adding it to the Pokemon and getting it to attack.

Please...I beg you not to move this to the GameDev forums. Those forums are ridden with the stench of boring and death.

This is the code I have at the moment. I&#39;m looking to see if someone could see what would make this easily usable and efficient no matter what way used. Which means don&#39;t mind how my game is written so you can write it.

I would initialize if by doing
[code]
if (buttonSelection == aButtonID)
     attack(Moves.SCRATCH)
[/code]

[code=java]
package core.server.entity;

public enum Moves {
	
	SCRATCH(&quot;Scratch&quot;, FightType.NORMAL, new AttackAction() {

		@Override
		public void getAttackActions(Entity attacker) {
			
		}

		@Override
		public boolean attackMoreThanOnce() {
			return false;
		}
		
	}, (short)40, 1.0);
	
	
	private String move;
	private FightType type;
	private short power;
	private double accuracy;
	private AttackAction action;
	
	private Moves(String move, FightType type, AttackAction action, short power, double accuracy) {
		this.move = move;
		this.type = type;
		this.action = action;
		this.power = power;
		this.accuracy = accuracy;
	}
	
	public String getAttackName() {
		return move;
	}
	
	public String getTypeToString() {
		StringBuilder sb = new StringBuilder(type.toString().toLowerCase());
		sb.setCharAt(0, Character.toTitleCase(type.toString().charAt(0)));
		return sb.toString();
	}
	
	public AttackAction getAttackAction() {
		return action;
	}
	
	public short getPower() {
		return power;
	}
	
	public double getAccruacy() {
		return accuracy;
	}

}
[/code]

Really, just give me an option on what you would do with the code or how you would write it.</description>
    
    <lastBuildDate>Wed, 29 May 2013 04:04:12 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/creating-attacks-for-pokemon/520181.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Creating attacks for Pokemon</title>
        <dc:creator><![CDATA[@wildskiller wildskiller]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wildskiller">@wildskiller</a> wrote:</p>
          <blockquote>
              <p>[quote=“Lin, post:2, topic:520181”]When making a fan game, your best resource will be to look into ROM hacking. You’ll have access to raw dumps of the game’s data and you can replicate exactly what the game does.</p>
<p>If that’s too hard for you, create a class for an attack. In it, contain the name, type, power, animation, accuracy, own stat boosts, opponent stat changes, confusion chance, burn chance, etc… Create an external table containing all of the pieces of data for a move and make code to load it and create an array of moves. Now every move has an index and you can store and access a Pokemon’s moves through an array (Move[] moves, moves[0]). For movesets, have another table containing a Pokemon’s level and the index of the move they learn. That’s pretty similar to how the original games do it.[/quote]</p>
<p>Pfft, too hard? That’s why you learn :rolleyes:. I’ll look into rom hacking and as well take this information that you’ve given me to apply to the game.</p>
<p>I do note some information you give people</p>
<aside class="quote">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/lin/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Lin:</div>
<blockquote>
<p>If you want, the way the real games do Pokemon encounters is they actually have a set of entries for every single type of Pokemon to appear. Like if they wanted level 2 Rattatas to be common, they would add 4 Rattatas at level 2 to the list of encounters and then, say, 2 Pidgeys at level 3. A random number from 0-5 would be picked to decide what was encountered.</p>
</blockquote>
</aside>
<p>[hr]</p>
<p>Yeah, this is off topic, but “A tree falls out of the bird’s nest” made me laugh a bit.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/creating-attacks-for-pokemon/520181/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/creating-attacks-for-pokemon/520181/3</link>
        <pubDate>Wed, 29 May 2013 04:04:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-520181-3</guid>
        <source url="https://forum.moparisthebest.com/t/creating-attacks-for-pokemon/520181.rss">Creating attacks for Pokemon</source>
      </item>
      <item>
        <title>Creating attacks for Pokemon</title>
        <dc:creator><![CDATA[@Lin Lin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lin">@Lin</a> wrote:</p>
          <blockquote>
              <p>When making a fan game, your best resource will be to look into ROM hacking. You’ll have access to raw dumps of the game’s data and you can replicate exactly what the game does.</p>
<p>If that’s too hard for you, create a class for an attack. In it, contain the name, type, power, animation, accuracy, own stat boosts, opponent stat changes, confusion chance, burn chance, etc… Create an external table containing all of the pieces of data for a move and make code to load it and create an array of moves. Now every move has an index and you can store and access a Pokemon’s moves through an array (Move[] moves, moves[0]). For movesets, have another table containing a Pokemon’s level and the index of the move they learn. That’s pretty similar to how the original games do it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/creating-attacks-for-pokemon/520181/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/creating-attacks-for-pokemon/520181/2</link>
        <pubDate>Wed, 29 May 2013 02:01:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-520181-2</guid>
        <source url="https://forum.moparisthebest.com/t/creating-attacks-for-pokemon/520181.rss">Creating attacks for Pokemon</source>
      </item>
      <item>
        <title>Creating attacks for Pokemon</title>
        <dc:creator><![CDATA[@wildskiller wildskiller]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wildskiller">@wildskiller</a> wrote:</p>
          <blockquote>
              <p>I don’t really mind using what I already have but I can already see there could be some problems with adding it to the Pokemon and getting it to attack.</p>
<p>Please…I beg you not to move this to the GameDev forums. Those forums are ridden with the stench of boring and death.</p>
<p>This is the code I have at the moment. I’m looking to see if someone could see what would make this easily usable and efficient no matter what way used. Which means don’t mind how my game is written so you can write it.</p>
<p>I would initialize if by doing</p>
<pre><code class="lang-auto">if (buttonSelection == aButtonID)
     attack(Moves.SCRATCH)</code></pre>
<pre><code class="lang-auto">package core.server.entity;

public enum Moves {
	
	SCRATCH("Scratch", FightType.NORMAL, new AttackAction() {

		@Override
		public void getAttackActions(Entity attacker) {
			
		}

		@Override
		public boolean attackMoreThanOnce() {
			return false;
		}
		
	}, (short)40, 1.0);
	
	
	private String move;
	private FightType type;
	private short power;
	private double accuracy;
	private AttackAction action;
	
	private Moves(String move, FightType type, AttackAction action, short power, double accuracy) {
		this.move = move;
		this.type = type;
		this.action = action;
		this.power = power;
		this.accuracy = accuracy;
	}
	
	public String getAttackName() {
		return move;
	}
	
	public String getTypeToString() {
		StringBuilder sb = new StringBuilder(type.toString().toLowerCase());
		sb.setCharAt(0, Character.toTitleCase(type.toString().charAt(0)));
		return sb.toString();
	}
	
	public AttackAction getAttackAction() {
		return action;
	}
	
	public short getPower() {
		return power;
	}
	
	public double getAccruacy() {
		return accuracy;
	}

}</code></pre>
<p>Really, just give me an option on what you would do with the code or how you would write it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/creating-attacks-for-pokemon/520181/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/creating-attacks-for-pokemon/520181/1</link>
        <pubDate>Mon, 27 May 2013 12:58:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-520181-1</guid>
        <source url="https://forum.moparisthebest.com/t/creating-attacks-for-pokemon/520181.rss">Creating attacks for Pokemon</source>
      </item>
  </channel>
</rss>
