<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>DictionaryHandler</title>
    <link>https://forum.moparisthebest.com/t/dictionaryhandler/442552</link>
    <description>I&#39;ve observed a friend&#39;s dictionary feature in his bot, and so I&#39;ve created my own.

Basically, it takes a word as an argument and returns an array of Strings for the definitions.

Definitions are from an API (see my API key URL).

Class:
[code=Java]
/**
 * DictionaryHandler.java
 * 
 * @author Whac
 * @date May 18, 2012
 * @version 1.6
 * 
 */

package net.projectrainbow.util;

import java.net.*;
import java.io.*;
import java.util.*;

public class DictionaryHandler
{

	/**
	 * This is an example of how to use this class.
	 * @param args
	 */
	public static void main(String[] args)
	{
		// TODO Auto-generated method stub
		try
		{
			String word = &quot;love&quot;;
			String[] definitions = new DictionaryHandler().lookupWord(word);
			System.out.print(&quot;The word &#39;&quot; + word + &quot;&#39; can mean: &quot;);
			for (String d : definitions)
			{
				System.out.print(d + &quot;, &quot;);
			}
			System.out.println();
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
	}
	
	private static final String LINK = &quot;http://words.bighugelabs.com/api/2/b101d17407d0d5598515862959aeac68/&quot;;
	
	public String[] lookupWord(String word)
	{
		try
		{
			
			/**
			 * Joining the constant link and the word to form a URL string.
			 */
			String urlName = LINK  + word + &quot;/&quot;;
			URL url = new URL(urlName); //creates a new url
			//System.out.println(&quot;Looking up URL: &quot; + url);
			/**
			 * Opens a an inputstream to the URL.
			 */
			BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));
			String input;
			/**
			 * Dumping results into an arraylist.
			 */
			List&lt;String&gt; results = new ArrayList&lt;String&gt;();
			while ((input = in.readLine()) != null)
			{
				input = input.replace(&quot;|&quot;, &quot;_&quot;); //for some reason, regex appears, gay
				results.add(input);
			}
			String[] definitions = new String[results.size()]; //vulnerable to nulls, perhaps provide a check for syns and ants
			/**
			 * Adding elements into an array as the return value.
			 */
			for (int i = 0; i &lt; results.size(); i++)
			{
				String s = results.get(i);
				String[] argz = s.split(&quot;_&quot;);
				if (argz[1].equals(&quot;syn&quot;) || argz[1].equals(&quot;sim&quot;) || argz[1].equals(&quot;rel&quot;))
				{
					definitions[i] = argz[2]; //adds element to array if it is a synonym
					//System.out.println(argz[2]);
				}
			}
			in.close();
			return definitions; //returns the array of definitions
		}
		/**
		 * If something went wrong..
		 */
		catch (MalformedURLException mue)
		{
			System.out.println(&quot;Dictionary Error: MalformedURLException&quot;);
			return new String[] {&quot;Undefined&quot;};
		}
		catch (FileNotFoundException fnfe)
		{
			System.out.println(&quot;Dictionary Error: FileNotFoundException&quot;);
			return new String[] {&quot;Undefined&quot;};
		}
		catch (IOException ioe)
		{
			System.out.println(&quot;Dictionary Error: IOException&quot;);
			return new String[] {&quot;Undefined&quot;};
		}
		catch (Exception ex)
		{
			ex.printStackTrace();
			return new String[] {&quot;Undefined&quot;};			
		}
	}

}
[/code]

How it&#39;s used in my client (in da extremely shitty clint.jarbaahhsdfskf):
[code=Java]
if (s.startsWith(&quot;define:&quot;))
{
	if (s.length() &gt; 7)
	{
		String word = s.substring(7).toLowerCase().trim();
		String[] definitions = new DictionaryHandler().lookupWord(word);
		System.out.print(&quot;The word &#39;&quot; + word + &quot;&#39; can mean: &quot;);
		String finalString = &quot;&quot;;
		for (String d : definitions)
		{
			System.out.print(d + &quot;, &quot;);
			finalString = finalString + d + &quot;, &quot;;
		}
		
		if (finalString.toLowerCase().contains(&quot;undefined&quot;))
		{
			forceChat((&quot;[Autotalker] The word \&quot;&quot; + word + &quot;\&quot; is undefined in my dictionary&quot;), random(11), 0);
		}
		else
		{
			forceChat((&quot;[Autotalker] The word \&quot;&quot; + word + &quot;\&quot; means: &quot; + finalString), random(11), 0);
		}
		System.out.println(&quot;\n&quot;);
	}
}
[/code]


If you can improve it, feel free to post. Constructive criticism is [b]HIGHLY[/b] appreciated.</description>
    
    <lastBuildDate>Sat, 19 May 2012 02:12:44 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/dictionaryhandler/442552.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>DictionaryHandler</title>
        <dc:creator><![CDATA[@dain_bramage dain bramage]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/dain_bramage">@dain_bramage</a> wrote:</p>
          <blockquote>
              <p>Make a bot that serves me coffee.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dictionaryhandler/442552/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dictionaryhandler/442552/3</link>
        <pubDate>Sat, 19 May 2012 02:12:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-442552-3</guid>
        <source url="https://forum.moparisthebest.com/t/dictionaryhandler/442552.rss">DictionaryHandler</source>
      </item>
      <item>
        <title>DictionaryHandler</title>
        <dc:creator><![CDATA[@_s11 s1gma]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_s11">@_s11</a> wrote:</p>
          <blockquote>
              <aside class="onebox wikipedia">
  <header class="source">
      <a href="https://en.wikipedia.org/wiki/DICT" target="_blank" rel="nofollow noopener">en.wikipedia.org</a>
  </header>
  <article class="onebox-body">
    

<h3><a href="https://en.wikipedia.org/wiki/DICT" target="_blank" rel="nofollow noopener">DICT</a></h3>

<p>DICT is a dictionary network protocol created by the DICT Development Group. It is described by RFC 2229, published in 1997. Its goal is to surpass the Webster protocol and to allow clients to access more dictionaries during use. Dict servers and clients use TCP port 2628.   The standard dictd server made by the DICT Development Group uses a special DICT file format, although other dictd servers (such as GNU Dico) may optionally use other file formats.</p>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dictionaryhandler/442552/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dictionaryhandler/442552/2</link>
        <pubDate>Fri, 18 May 2012 16:09:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-442552-2</guid>
        <source url="https://forum.moparisthebest.com/t/dictionaryhandler/442552.rss">DictionaryHandler</source>
      </item>
      <item>
        <title>DictionaryHandler</title>
        <dc:creator><![CDATA[@whackatre Whackatre]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/whackatre">@whackatre</a> wrote:</p>
          <blockquote>
              <p>I’ve observed a friend’s dictionary feature in his bot, and so I’ve created my own.</p>
<p>Basically, it takes a word as an argument and returns an array of Strings for the definitions.</p>
<p>Definitions are from an API (see my API key URL).</p>
<p>Class:</p>
<pre><code class="lang-auto">/**
 * DictionaryHandler.java
 * 
 * @author Whac
 * @date May 18, 2012
 * @version 1.6
 * 
 */

package net.projectrainbow.util;

import java.net.*;
import java.io.*;
import java.util.*;

public class DictionaryHandler
{

	/**
	 * This is an example of how to use this class.
	 * @param args
	 */
	public static void main(String[] args)
	{
		// TODO Auto-generated method stub
		try
		{
			String word = "love";
			String[] definitions = new DictionaryHandler().lookupWord(word);
			System.out.print("The word '" + word + "' can mean: ");
			for (String d : definitions)
			{
				System.out.print(d + ", ");
			}
			System.out.println();
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
	}
	
	private static final String LINK = "http://words.bighugelabs.com/api/2/b101d17407d0d5598515862959aeac68/";
	
	public String[] lookupWord(String word)
	{
		try
		{
			
			/**
			 * Joining the constant link and the word to form a URL string.
			 */
			String urlName = LINK  + word + "/";
			URL url = new URL(urlName); //creates a new url
			//System.out.println("Looking up URL: " + url);
			/**
			 * Opens a an inputstream to the URL.
			 */
			BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));
			String input;
			/**
			 * Dumping results into an arraylist.
			 */
			List&lt;String&gt; results = new ArrayList&lt;String&gt;();
			while ((input = in.readLine()) != null)
			{
				input = input.replace("|", "_"); //for some reason, regex appears, gay
				results.add(input);
			}
			String[] definitions = new String[results.size()]; //vulnerable to nulls, perhaps provide a check for syns and ants
			/**
			 * Adding elements into an array as the return value.
			 */
			for (int i = 0; i &lt; results.size(); i++)
			{
				String s = results.get(i);
				String[] argz = s.split("_");
				if (argz[1].equals("syn") || argz[1].equals("sim") || argz[1].equals("rel"))
				{
					definitions[i] = argz[2]; //adds element to array if it is a synonym
					//System.out.println(argz[2]);
				}
			}
			in.close();
			return definitions; //returns the array of definitions
		}
		/**
		 * If something went wrong..
		 */
		catch (MalformedURLException mue)
		{
			System.out.println("Dictionary Error: MalformedURLException");
			return new String[] {"Undefined"};
		}
		catch (FileNotFoundException fnfe)
		{
			System.out.println("Dictionary Error: FileNotFoundException");
			return new String[] {"Undefined"};
		}
		catch (IOException ioe)
		{
			System.out.println("Dictionary Error: IOException");
			return new String[] {"Undefined"};
		}
		catch (Exception ex)
		{
			ex.printStackTrace();
			return new String[] {"Undefined"};			
		}
	}

}</code></pre>
<p>How it’s used in my client (in da extremely shitty clint.jarbaahhsdfskf):</p>
<pre><code class="lang-auto">if (s.startsWith("define:"))
{
	if (s.length() &gt; 7)
	{
		String word = s.substring(7).toLowerCase().trim();
		String[] definitions = new DictionaryHandler().lookupWord(word);
		System.out.print("The word '" + word + "' can mean: ");
		String finalString = "";
		for (String d : definitions)
		{
			System.out.print(d + ", ");
			finalString = finalString + d + ", ";
		}
		
		if (finalString.toLowerCase().contains("undefined"))
		{
			forceChat(("[Autotalker] The word \"" + word + "\" is undefined in my dictionary"), random(11), 0);
		}
		else
		{
			forceChat(("[Autotalker] The word \"" + word + "\" means: " + finalString), random(11), 0);
		}
		System.out.println("\n");
	}
}</code></pre>
<p>If you can improve it, feel free to post. Constructive criticism is <span class="bbcode-b">HIGHLY</span> appreciated.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dictionaryhandler/442552/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dictionaryhandler/442552/1</link>
        <pubDate>Fri, 18 May 2012 15:32:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-442552-1</guid>
        <source url="https://forum.moparisthebest.com/t/dictionaryhandler/442552.rss">DictionaryHandler</source>
      </item>
  </channel>
</rss>
