<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Java help - Recursion</title>
    <link>https://forum.moparisthebest.com/t/java-help-recursion/436317</link>
    <description>Efficient Computation of Fibonacci Numbers

The Fibonacci sequence is a well-known mathematical sequence in which each term is the sum of the two previous terms. More specifically, if fib(n) is the nth term of the sequence, then the sequence can be defined as follows: 

    fib(0) = 0
    fib(1) = 1
    fib(n) = fib(n-1) + fib(n-2)  n&gt;1

1.	Because the Fibonacci sequence is defined recursively, it is natural to write a recursive method to determine the nth number in the sequence. File Fib.java contains the skeleton for a class containing a method to compute Fibonacci numbers. Save this file to your directory. Following the specification above, fill in the code for method fib1 so that it recursively computes and returns the nth number in the sequence. 

2.	File TestFib.java contains a simple driver that asks the user for an integer and uses the fib1 method to compute that element in the Fibonacci sequence. Save this file to your directory and use it to test your fib1 method. First try small integers, then larger ones. You&#39;ll notice that the number doesn&#39;t have to get very big before the calculation takes a very long time. The problem is that the fib1 method is making lots and lots of recursive calls. To see this, add a print statement at the beginning of your fib1 method that indicates what call is being computed, e.g., &quot;In fib1(3)&quot; if the parameter is 3. Now run TestFib again and enter 5—you should get a number of messages from your print statement. Examine these messages and figure out the sequence of calls that generated them. (This is easiest if you first draw the call tree on paper.) . Since fib(5) is fib(4) + fib(3),you should not be surprised to find calls to fib(4) and fib(3) in the printout. But why are there two calls to fib(3)? Because both fib(4) and fib(5) need fib(3), so they both compute it—very inefficient. Run the program again with a slightly larger number and again note the repetition in the calls. 

3.	The fundamental source of the inefficiency is not the fact that recursive calls are being made, but that values are being recomputed. One way around this is to compute the values from the beginning of the sequence instead of from the end, saving them in an array as you go. Although this could be done recursively, it is more natural to do it iteratively. Proceed as follows: 
a.	Add a method fib2 to your Fib class. Like fib1, fib2 should be static and should take an integer and return an integer. 
b.	Inside fib2, create an array of integers the size of the value passed in. 
c.	Initialize the first two elements of the array to 0 and 1, corresponding to the first two elements of the Fibonacci sequence. Then loop through the integers up to the value passed in, computing each element of the array as the sum of the two previous elements. When the array is full, its last element is the element requested. Return this value. 
d.	Modify your TestFib class so that it calls fib2 (first) and prints the result, then calls fib1 and prints that result. You should get the same answers, but very different computation times. 


[code]// ******************************************************************
//   Fib.java
//
//   A utility class that provide methods to compute elements of the
//   Fibonacci sequence.
// ******************************************************************
public class Fib
{

    //--------------------------------------------------------------
    // Recursively computes fib(n)
    //--------------------------------------------------------------
    public static int fib1(int n)
    {
	//Fill in code -- this should look very much like the
	//mathematical specification
    }

}[/code]
 
[code]// ******************************************************************
//   TestFib.java
//
//   A simple driver that uses the Fib class to compute the
//   nth element of the Fibonacci sequence.
// ******************************************************************

import java.util.Scanner;

public class TestFib
{
    public static void main(String[] args)
    {
	int n, fib;

	Scanner scan = new Scanner(System.in);

	System.out.print(&quot;Enter an integer: &quot;);
	n = scan.nextInt();

	fib = Fib.fib1(n);
	System.out.println(&quot;Fib(&quot; + n + &quot;) is &quot; + fib);
    }
} [/code]</description>
    
    <lastBuildDate>Sat, 17 Mar 2012 19:30:08 +0000</lastBuildDate>
    <category>General Discussion</category>
    <atom:link href="https://forum.moparisthebest.com/t/java-help-recursion/436317.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Java help - Recursion</title>
        <dc:creator><![CDATA[@Echo3 Echo_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/echo3">@Echo3</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="9" data-topic="436317">
<div class="title">
<div class="quote-controls"></div>
 t4:</div>
<blockquote>
<p>you recreate your memoization table every frame idiet</p>
</blockquote>
</aside>
<p>I followed the directions exactly. If it were up to me, I would have used a language with lazy evaluation such as Clojure:</p>
<pre><code class="lang-auto"></code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-help-recursion/436317/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-help-recursion/436317/10</link>
        <pubDate>Sat, 17 Mar 2012 19:30:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-436317-10</guid>
        <source url="https://forum.moparisthebest.com/t/java-help-recursion/436317.rss">Java help - Recursion</source>
      </item>
      <item>
        <title>Java help - Recursion</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <p>[quote=“Echo_, post:8, topic:436317”]fib1:</p>
<p><code>    public static int fib1(int n) {
        if (n == 0)
            return 0;
        else if (n == 1)
            return 1;
        else
            return fib1(n - 1) + fib1(n - 2);
    }</code></p>
<p>fib2:</p>
<p><code>    public static int fib2(int n) {
        if (n == 0)
            return 0;
        else if (n == 1)
            return 1;
        else {
            int[] numbers = new int[n + 1];
            numbers[0] = 0;
            numbers[1] = 1;
            for (int i = 2; i &lt; numbers.length; i++)
                numbers[i] = numbers[i - 1] + numbers[i - 2];
            return numbers[n];
        }
    }</code>[/quote]you recreate your memoization table every frame idiet</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-help-recursion/436317/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-help-recursion/436317/9</link>
        <pubDate>Sat, 17 Mar 2012 16:01:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-436317-9</guid>
        <source url="https://forum.moparisthebest.com/t/java-help-recursion/436317.rss">Java help - Recursion</source>
      </item>
      <item>
        <title>Java help - Recursion</title>
        <dc:creator><![CDATA[@Echo3 Echo_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/echo3">@Echo3</a> wrote:</p>
          <blockquote>
              <p>fib1:</p>
<p><code>    public static int fib1(int n) {
        if (n == 0)
            return 0;
        else if (n == 1)
            return 1;
        else
            return fib1(n - 1) + fib1(n - 2);
    }</code></p>
<p>fib2:</p>
<p><code>    public static int fib2(int n) {
        if (n == 0)
            return 0;
        else if (n == 1)
            return 1;
        else {
            int[] numbers = new int[n + 1];
            numbers[0] = 0;
            numbers[1] = 1;
            for (int i = 2; i &lt; numbers.length; i++)
                numbers[i] = numbers[i - 1] + numbers[i - 2];
            return numbers[n];
        }
    }</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-help-recursion/436317/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-help-recursion/436317/8</link>
        <pubDate>Fri, 16 Mar 2012 22:53:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-436317-8</guid>
        <source url="https://forum.moparisthebest.com/t/java-help-recursion/436317.rss">Java help - Recursion</source>
      </item>
      <item>
        <title>Java help - Recursion</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="6" data-topic="436317">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/ollie/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Ollie:</div>
<blockquote>
<p>you’re teacher would not have given you a homework that you could not do. go back to your notes and read up.</p>
</blockquote>
</aside>
<p>this</p>
<p>there are plenty of notes online so that you can get the basics of recursion, I suggest you go there if you don’t have notes</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-help-recursion/436317/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-help-recursion/436317/7</link>
        <pubDate>Fri, 16 Mar 2012 15:32:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-436317-7</guid>
        <source url="https://forum.moparisthebest.com/t/java-help-recursion/436317.rss">Java help - Recursion</source>
      </item>
      <item>
        <title>Java help - Recursion</title>
        <dc:creator><![CDATA[@Ollie Ollie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ollie">@Ollie</a> wrote:</p>
          <blockquote>
              <p>you’re teacher would not have given you a homework that you could not do. go back to your notes and read up.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-help-recursion/436317/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-help-recursion/436317/6</link>
        <pubDate>Fri, 16 Mar 2012 12:33:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-436317-6</guid>
        <source url="https://forum.moparisthebest.com/t/java-help-recursion/436317.rss">Java help - Recursion</source>
      </item>
      <item>
        <title>Java help - Recursion</title>
        <dc:creator><![CDATA[@Mod_Whip Mod Whip]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_whip">@Mod_Whip</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="2" data-topic="436317">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/greeny/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Greeny:</div>
<blockquote>
<p>You haven’t even attempted it?</p>
</blockquote>
</aside>
<p>I can’t figure out how to start the first question.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-help-recursion/436317/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-help-recursion/436317/5</link>
        <pubDate>Thu, 15 Mar 2012 19:08:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-436317-5</guid>
        <source url="https://forum.moparisthebest.com/t/java-help-recursion/436317.rss">Java help - Recursion</source>
      </item>
      <item>
        <title>Java help - Recursion</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <p><aside class="onebox whitelistedgeneric">
  <header class="source">
      <img src="https://forum.moparisthebest.com/uploads/default/original/2X/1/1f0dc167bcf798bdbd70b03bf0fd1bc836e54e1a.png" class="site-icon" width="32" height="32">
      <a href="https://forum.moparisthebest.com/" target="_blank">moparisthebest.com</a>
  </header>
  <article class="onebox-body">
    <img src="https://forum.moparisthebest.com/uploads/default/original/2X/4/41fecb6185fddc2758aeba68c3f8c9c78e26e4ff.png" class="thumbnail onebox-avatar" width="500" height="500">

<h3><a href="https://forum.moparisthebest.com/" target="_blank">moparisthebest.com</a></h3>

<p>programming, irc, cars</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>
<br>
have fun</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-help-recursion/436317/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-help-recursion/436317/4</link>
        <pubDate>Wed, 14 Mar 2012 18:31:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-436317-4</guid>
        <source url="https://forum.moparisthebest.com/t/java-help-recursion/436317.rss">Java help - Recursion</source>
      </item>
      <item>
        <title>Java help - Recursion</title>
        <dc:creator><![CDATA[@R.I.P_RSC R.I.P RSC]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/r.i.p_rsc">@R.I.P_RSC</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="2" data-topic="436317">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/greeny/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Greeny:</div>
<blockquote>
<p>You haven’t even attempted it?</p>
</blockquote>
</aside>
<p>Of course not, the man has more important issues to deal with. Such as private servers.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-help-recursion/436317/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-help-recursion/436317/3</link>
        <pubDate>Wed, 14 Mar 2012 15:17:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-436317-3</guid>
        <source url="https://forum.moparisthebest.com/t/java-help-recursion/436317.rss">Java help - Recursion</source>
      </item>
      <item>
        <title>Java help - Recursion</title>
        <dc:creator><![CDATA[@Greeny Greeny]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/greeny">@Greeny</a> wrote:</p>
          <blockquote>
              <p>You haven’t even attempted it?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-help-recursion/436317/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-help-recursion/436317/2</link>
        <pubDate>Wed, 14 Mar 2012 15:15:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-436317-2</guid>
        <source url="https://forum.moparisthebest.com/t/java-help-recursion/436317.rss">Java help - Recursion</source>
      </item>
      <item>
        <title>Java help - Recursion</title>
        <dc:creator><![CDATA[@Mod_Whip Mod Whip]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_whip">@Mod_Whip</a> wrote:</p>
          <blockquote>
              <p>Efficient Computation of Fibonacci Numbers</p>
<p>The Fibonacci sequence is a well-known mathematical sequence in which each term is the sum of the two previous terms. More specifically, if fib(n) is the nth term of the sequence, then the sequence can be defined as follows:</p>
<pre><code>fib(0) = 0
fib(1) = 1
fib(n) = fib(n-1) + fib(n-2)  n&gt;1
</code></pre>
<ol>
<li>
<p>Because the Fibonacci sequence is defined recursively, it is natural to write a recursive method to determine the nth number in the sequence. File Fib.java contains the skeleton for a class containing a method to compute Fibonacci numbers. Save this file to your directory. Following the specification above, fill in the code for method fib1 so that it recursively computes and returns the nth number in the sequence.</p>
</li>
<li>
<p>File TestFib.java contains a simple driver that asks the user for an integer and uses the fib1 method to compute that element in the Fibonacci sequence. Save this file to your directory and use it to test your fib1 method. First try small integers, then larger ones. You’ll notice that the number doesn’t have to get very big before the calculation takes a very long time. The problem is that the fib1 method is making lots and lots of recursive calls. To see this, add a print statement at the beginning of your fib1 method that indicates what call is being computed, e.g., “In fib1(3)” if the parameter is 3. Now run TestFib again and enter 5—you should get a number of messages from your print statement. Examine these messages and figure out the sequence of calls that generated them. (This is easiest if you first draw the call tree on paper.) . Since fib(5) is fib(4) + fib(3),you should not be surprised to find calls to fib(4) and fib(3) in the printout. But why are there two calls to fib(3)? Because both fib(4) and fib(5) need fib(3), so they both compute it—very inefficient. Run the program again with a slightly larger number and again note the repetition in the calls.</p>
</li>
<li>
<p>The fundamental source of the inefficiency is not the fact that recursive calls are being made, but that values are being recomputed. One way around this is to compute the values from the beginning of the sequence instead of from the end, saving them in an array as you go. Although this could be done recursively, it is more natural to do it iteratively. Proceed as follows:<br>
a.	Add a method fib2 to your Fib class. Like fib1, fib2 should be static and should take an integer and return an integer.<br>
b.	Inside fib2, create an array of integers the size of the value passed in.<br>
c.	Initialize the first two elements of the array to 0 and 1, corresponding to the first two elements of the Fibonacci sequence. Then loop through the integers up to the value passed in, computing each element of the array as the sum of the two previous elements. When the array is full, its last element is the element requested. Return this value.<br>
d.	Modify your TestFib class so that it calls fib2 (first) and prints the result, then calls fib1 and prints that result. You should get the same answers, but very different computation times.</p>
</li>
</ol>
<p>[code]// ******************************************************************<br>
//   Fib.java<br>
//<br>
//   A utility class that provide methods to compute elements of the<br>
//   Fibonacci sequence.<br>
// ******************************************************************<br>
public class Fib<br>
{</p>
<pre><code>//--------------------------------------------------------------
// Recursively computes fib(n)
//--------------------------------------------------------------
public static int fib1(int n)
{
//Fill in code -- this should look very much like the
//mathematical specification
}
</code></pre>
<p>}[/code]</p>
<p>[code]// ******************************************************************<br>
//   TestFib.java<br>
//<br>
//   A simple driver that uses the Fib class to compute the<br>
//   nth element of the Fibonacci sequence.<br>
// ******************************************************************</p>
<p>import java.util.Scanner;</p>
<p>public class TestFib<br>
{<br>
public static void main(String[] args)<br>
{<br>
int n, fib;</p>
<pre><code>Scanner scan = new Scanner(System.in);

System.out.print("Enter an integer: ");
n = scan.nextInt();

fib = Fib.fib1(n);
System.out.println("Fib(" + n + ") is " + fib);
}
</code></pre>
<p>} [/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-help-recursion/436317/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-help-recursion/436317/1</link>
        <pubDate>Wed, 14 Mar 2012 14:58:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-436317-1</guid>
        <source url="https://forum.moparisthebest.com/t/java-help-recursion/436317.rss">Java help - Recursion</source>
      </item>
  </channel>
</rss>
