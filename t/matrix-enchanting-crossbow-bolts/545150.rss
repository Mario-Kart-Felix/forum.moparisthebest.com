<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[Matrix] Enchanting Crossbow Bolts</title>
    <link>https://forum.moparisthebest.com/t/matrix-enchanting-crossbow-bolts/545150</link>
    <description>EnchantingBolts.java
[code=java]
package com.rs.game.player.content;

import com.rs.game.Animation;
import com.rs.game.Graphics;
import com.rs.game.item.Item;
import com.rs.game.player.Player;
import com.rs.game.player.Skills;

/**
 * Created by Arham 4 on 7/19/14.
 */
public class EnchantingBolts {
    /**
     * Handles the button of the enchanting interfac.e
     *
     * @param player The Player enchanting.
     * @param button The component ID.
     * @param amount The amount to remove (based on packet ID. A &quot;STACK&quot; is &quot;10&quot;).
     */
    public static void handleButton(Player player, int button, int amount) {
        Bolt bolt = Bolt.forId(button);
        if (!player.getInventory().containsItem(bolt.getOriginal(), amount)) {
            player.getPackets().sendGameMessage(&quot;You need &quot; + amount + &quot; &quot; + new Item(bolt.getOriginal()).getName() + &quot; to enchant!&quot;);
            return;
        }
        for (Item rune : bolt.getRunes()) {
            if (!player.getInventory().containsItem(rune.getId(), rune.getAmount() * (amount / 10))) {
                player.getPackets().sendGameMessage(&quot;You need &quot; + rune.getAmount() + &quot; &quot; + rune.getName() + (rune.getAmount() &gt; 1 ? &quot;s&quot; : &quot;&quot;) + &quot; to enchant this bolt!&quot;);
                return;
            }
        }
        player.getInventory().deleteItem(bolt.getOriginal(), amount);
        player.getInventory().removeItems(bolt.getRunes());
        player.setNextAnimation(new Animation(4462));
        player.setNextGraphics(new Graphics(759));
        player.getInventory().addItem(bolt.getProduct(), amount);
        player.getSkills().addXp(Skills.MAGIC, amount);
        player.getPackets().sendGameMessage(&quot;The magic of the runes coaxes out the true nature of the gem tips.&quot;);
    }

    /**
     * A singular bolt in the crossbow bolt menu.
     */
    public enum Bolt {
        OPAL(14, 4, new Item[]{new Item(564), new Item(556, 2)}, 879, 9236, 9),
        SAPPHIRE(29, 7, new Item[]{new Item(564), new Item(555), new Item(558)}, 9337, 9240, 17),
        JADE(18, 14, new Item[]{new Item(564), new Item(557, 2)}, 9335, 9237, 19),
        PEARL(22, 24, new Item[]{new Item(564), new Item(556, 2)}, 880, 9238, 29),
        EMERALD(32, 27, new Item[]{new Item(564), new Item(556, 3), new Item(561)}, 9338, 9241, 37),
        RED_TOPAZ(26, 29, new Item[]{new Item(564), new Item(554, 2)}, 9336, 9239, 33),
        RUBY(35, 49, new Item[]{new Item(564), new Item(554, 5), new Item(565)}, 9339, 9242, 59),
        DIAMOND(38, 57, new Item[]{new Item(564), new Item(557, 10), new Item(563, 2)}, 9340, 9243, 67),
        DRAGONSTONE(41, 68, new Item[]{new Item(564), new Item(557, 15), new Item(566)}, 9341, 9244, 78),
        ONYX(44, 87, new Item[]{new Item(564), new Item(554, 20), new Item(560)}, 9342, 9245, 97);
        private final int componentId;
        private final int levelRequired;
        private final Item[] runes;
        private final int original;
        private final int product;
        private final double xp;

        Bolt(int componentId, int levelRequired, Item[] runes, int original, int product, double xp) {
            this.componentId = componentId;
            this.levelRequired = levelRequired;
            this.runes = runes;
            this.original = original;
            this.product = product;
            this.xp = xp;
        }

        public static Bolt forId(int id) {
            for (Bolt bolt : Bolt.values()) {
                if (bolt.getComponentId() == id)
                    return bolt;
            }
            return null;
        }

        public int getComponentId() {
            return componentId;
        }

        public int getLevelRequired() {
            return levelRequired;
        }

        public Item[] getRunes() {
            return runes;
        }

        public int getProduct() {
            return product;
        }

        public int getOriginal() {
            return original;
        }

        public double getXp() {
            return xp;
        }
    }
}
[/code]
ButtonHandler.java
[code=java]
        if (interfaceId == 432) {
            EnchantingBolts.handleButton(player, componentId, packetId == 14 ? 10 : packetId == 67 ? 50 : 100);
        }
[/code]

Short. Simple. Sweet.</description>
    
    <lastBuildDate>Sun, 20 Jul 2014 17:31:07 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/matrix-enchanting-crossbow-bolts/545150.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[Matrix] Enchanting Crossbow Bolts</title>
        <dc:creator><![CDATA[@arham_4 arham 4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/arham_4">@arham_4</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="545150">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/xvhincex/40/9675_1.png" class="avatar"> xVhincex:</div>
<blockquote>
<p>Good job on the content but i’m more curious how your ButtonHandler class works? You seem to be using static methods when you could approach it in a more object orientated style to it</p>
</blockquote>
</aside>
<p>Alot of stuff in that class are statically called, so I didn’t want to break the pattern.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/matrix-enchanting-crossbow-bolts/545150/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/matrix-enchanting-crossbow-bolts/545150/4</link>
        <pubDate>Sun, 20 Jul 2014 17:31:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-545150-4</guid>
        <source url="https://forum.moparisthebest.com/t/matrix-enchanting-crossbow-bolts/545150.rss">[Matrix] Enchanting Crossbow Bolts</source>
      </item>
      <item>
        <title>[Matrix] Enchanting Crossbow Bolts</title>
        <dc:creator><![CDATA[@sk8rdude461 sk8rdude461]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sk8rdude461">@sk8rdude461</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="545150">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/xvhincex/40/9675_1.png" class="avatar"> xVhincex:</div>
<blockquote>
<p>Good job on the content but i’m more curious how your ButtonHandler class works? You seem to be using static methods when you could approach it in a more object orientated style to it</p>
</blockquote>
</aside>
<p>From what I recall, skills are supposed to be static. (Because they don’t change per player, everyone can do the same skills and etc)<br>
That might not be related to what you’re talking about, but the buttons themselves are handled inside his Enchanting class, which is skill related.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/matrix-enchanting-crossbow-bolts/545150/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/matrix-enchanting-crossbow-bolts/545150/3</link>
        <pubDate>Sun, 20 Jul 2014 16:02:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-545150-3</guid>
        <source url="https://forum.moparisthebest.com/t/matrix-enchanting-crossbow-bolts/545150.rss">[Matrix] Enchanting Crossbow Bolts</source>
      </item>
      <item>
        <title>[Matrix] Enchanting Crossbow Bolts</title>
        <dc:creator><![CDATA[@xVhincex xVhincex]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xvhincex">@xVhincex</a> wrote:</p>
          <blockquote>
              <p>Good job on the content but i’m more curious how your ButtonHandler class works? You seem to be using static methods when you could approach it in a more object orientated style to it</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/matrix-enchanting-crossbow-bolts/545150/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/matrix-enchanting-crossbow-bolts/545150/2</link>
        <pubDate>Sun, 20 Jul 2014 14:26:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-545150-2</guid>
        <source url="https://forum.moparisthebest.com/t/matrix-enchanting-crossbow-bolts/545150.rss">[Matrix] Enchanting Crossbow Bolts</source>
      </item>
      <item>
        <title>[Matrix] Enchanting Crossbow Bolts</title>
        <dc:creator><![CDATA[@arham_4 arham 4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/arham_4">@arham_4</a> wrote:</p>
          <blockquote>
              <p>EnchantingBolts.java</p>
<pre><code class="lang-auto">package com.rs.game.player.content;

import com.rs.game.Animation;
import com.rs.game.Graphics;
import com.rs.game.item.Item;
import com.rs.game.player.Player;
import com.rs.game.player.Skills;

/**
 * Created by Arham 4 on 7/19/14.
 */
public class EnchantingBolts {
    /**
     * Handles the button of the enchanting interfac.e
     *
     * @param player The Player enchanting.
     * @param button The component ID.
     * @param amount The amount to remove (based on packet ID. A "STACK" is "10").
     */
    public static void handleButton(Player player, int button, int amount) {
        Bolt bolt = Bolt.forId(button);
        if (!player.getInventory().containsItem(bolt.getOriginal(), amount)) {
            player.getPackets().sendGameMessage("You need " + amount + " " + new Item(bolt.getOriginal()).getName() + " to enchant!");
            return;
        }
        for (Item rune : bolt.getRunes()) {
            if (!player.getInventory().containsItem(rune.getId(), rune.getAmount() * (amount / 10))) {
                player.getPackets().sendGameMessage("You need " + rune.getAmount() + " " + rune.getName() + (rune.getAmount() &gt; 1 ? "s" : "") + " to enchant this bolt!");
                return;
            }
        }
        player.getInventory().deleteItem(bolt.getOriginal(), amount);
        player.getInventory().removeItems(bolt.getRunes());
        player.setNextAnimation(new Animation(4462));
        player.setNextGraphics(new Graphics(759));
        player.getInventory().addItem(bolt.getProduct(), amount);
        player.getSkills().addXp(Skills.MAGIC, amount);
        player.getPackets().sendGameMessage("The magic of the runes coaxes out the true nature of the gem tips.");
    }

    /**
     * A singular bolt in the crossbow bolt menu.
     */
    public enum Bolt {
        OPAL(14, 4, new Item[]{new Item(564), new Item(556, 2)}, 879, 9236, 9),
        SAPPHIRE(29, 7, new Item[]{new Item(564), new Item(555), new Item(558)}, 9337, 9240, 17),
        JADE(18, 14, new Item[]{new Item(564), new Item(557, 2)}, 9335, 9237, 19),
        PEARL(22, 24, new Item[]{new Item(564), new Item(556, 2)}, 880, 9238, 29),
        EMERALD(32, 27, new Item[]{new Item(564), new Item(556, 3), new Item(561)}, 9338, 9241, 37),
        RED_TOPAZ(26, 29, new Item[]{new Item(564), new Item(554, 2)}, 9336, 9239, 33),
        RUBY(35, 49, new Item[]{new Item(564), new Item(554, 5), new Item(565)}, 9339, 9242, 59),
        DIAMOND(38, 57, new Item[]{new Item(564), new Item(557, 10), new Item(563, 2)}, 9340, 9243, 67),
        DRAGONSTONE(41, 68, new Item[]{new Item(564), new Item(557, 15), new Item(566)}, 9341, 9244, 78),
        ONYX(44, 87, new Item[]{new Item(564), new Item(554, 20), new Item(560)}, 9342, 9245, 97);
        private final int componentId;
        private final int levelRequired;
        private final Item[] runes;
        private final int original;
        private final int product;
        private final double xp;

        Bolt(int componentId, int levelRequired, Item[] runes, int original, int product, double xp) {
            this.componentId = componentId;
            this.levelRequired = levelRequired;
            this.runes = runes;
            this.original = original;
            this.product = product;
            this.xp = xp;
        }

        public static Bolt forId(int id) {
            for (Bolt bolt : Bolt.values()) {
                if (bolt.getComponentId() == id)
                    return bolt;
            }
            return null;
        }

        public int getComponentId() {
            return componentId;
        }

        public int getLevelRequired() {
            return levelRequired;
        }

        public Item[] getRunes() {
            return runes;
        }

        public int getProduct() {
            return product;
        }

        public int getOriginal() {
            return original;
        }

        public double getXp() {
            return xp;
        }
    }
}</code></pre>
<p>ButtonHandler.java</p>
<pre><code class="lang-auto">        if (interfaceId == 432) {
            EnchantingBolts.handleButton(player, componentId, packetId == 14 ? 10 : packetId == 67 ? 50 : 100);
        }</code></pre>
<p>Short. Simple. Sweet.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/matrix-enchanting-crossbow-bolts/545150/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/matrix-enchanting-crossbow-bolts/545150/1</link>
        <pubDate>Sat, 19 Jul 2014 21:27:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-545150-1</guid>
        <source url="https://forum.moparisthebest.com/t/matrix-enchanting-crossbow-bolts/545150.rss">[Matrix] Enchanting Crossbow Bolts</source>
      </item>
  </channel>
</rss>
