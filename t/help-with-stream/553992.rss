<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Help with stream</title>
    <link>https://forum.moparisthebest.com/t/help-with-stream/553992</link>
    <description>Hey there sk8r i address you directly because you respond to like EVERY post lol its kinda awesome well i finally got stuck streams aren&#39;t really my thing i feel as though i&#39;m missing some information so i just don&#39;t get it. Anyways my problem is here trying to match up the login blocks(And failing miserably)

I have like ALOT of trouble on offsets and i have no idea where i&#39;m supposed to find the size of the login packet... also i labeled it as best as i could its possibly wrong though client sided for some reason server side always seems a bit more clear to me for some reason probably naming conventions anyways I&#39;ve been having various errors everything between:

Wrong magic id.
&amp;
encryption size mismatch
&amp;
encryped id != 10

I have tried to add some debug printouts but stream offsets.... anyways they didn&#39;t yield any useful information.

also tried organizing both sides to fit with this article:
[url=http://rsps.wikia.com/wiki/317_Protocol]http://rsps.wikia.com/wiki/317_Protocol[/url]

however to no avail it seems that i had a couple extra pieces i couldn&#39;t make sense of for lack of knowledge honestly i would love a fix however i also know this is something i MUST learn anything you can do/teach would be appreciated :D

It&#39;s hilarious i feel like a noob again all i can manage is to ever so slightly manipulate a working stream like adding a variable to go from server to client. unfortunately this one came broken.

Sorry for terrible format problem with cutting from middle of a large file.

Client Block:
[code]
if (k == 0) { //case 0?
				socketStream.flushInputStream(inStream.buffer, 8);
				inStream.currentOffset = 0;
				aLong1215 = inStream.readQWord();//reading server session key
				int ai[] = new int[4];
				ai[0] = (int) (Math.random() * 99999999D);
				ai[1] = (int) (Math.random() * 99999999D);
				ai[2] = (int) (aLong1215 &gt;&gt; 32);
				ai[3] = (int) aLong1215;//end dat
				stream.currentOffset = 0;
				stream.writeWordBigEndian(10); //abyte10
				stream.writeDWord(ai[0]);
				stream.writeDWord(ai[1]);
				stream.writeDWord(ai[2]);
				stream.writeDWord(ai[3]);
				stream.writeDWord(12345);//uid
				stream.writeDWord(inStream.currentOffset);
				//stream.doKeys();
				aStream_847.currentOffset = 0;
				if (flag)
					aStream_847.writeWordBigEndian(18); //login type 1
				else
					aStream_847.writeWordBigEndian(16); //login type 2
				aStream_847.writeWordBigEndian(stream.currentOffset + 36 + 1
						+ 1 + 2);
				aStream_847.writeWordBigEndian(255);//magic number
				aStream_847.writeWordBigEndian(317);//version
				aStream_847.writeWord(1);//lowmem
				for (int l1 = 0; l1 &lt; 9; l1++)//write crc&#39;s
					aStream_847.writeDWord(expectedCRCs[l1]);

				aStream_847.writeBytes(stream.buffer, stream.currentOffset, 0);
				stream.writeString(s);//name or pass
				stream.writeString(s1);//pass or pass
				stream.encryption = new ISAACRandomGen(ai);//where the ai array finally gets used ooo XD
				for (int j2 = 0; j2 &lt; 4; j2++)
					ai[j2] += 50;

				encryption = new ISAACRandomGen(ai);
				socketStream.queueBytes(aStream_847.currentOffset,
						aStream_847.buffer);
				k = socketStream.read();
			}
[/code]
Server Block:
[code]
case 1:
				@SuppressWarnings(&quot;unused&quot;)
				int loginType = -1,
				loginPacketSize = -1,
				loginEncryptPacketSize = -1;
				if (2 &lt;= in.remaining()) {
					loginType = in.get() &amp; 0xff; // should be 16 or 18
					loginPacketSize = in.get() &amp; 0xff;
					loginEncryptPacketSize = loginPacketSize - (36 + 1 + 1 + 2);
					if (loginPacketSize &lt;= 0 || loginEncryptPacketSize &lt;= 0) {
						System.out.println(&quot;Zero or negative login size.&quot;);
						session.close();
						return false;
					}
				} else {
					in.rewind();
					return false;
				}
				if (loginPacketSize &lt;= in.remaining()) {
					final int magic = in.get() &amp; 0xff;//magic
					final int version = in.getUnsignedShort();//version
					if (magic != 255) {
						System.out.println(&quot;Wrong magic id, &quot;+magic);
						session.close();
						return false;
					}
					if (version != 1) {
						System.out.println(&quot;Version: &quot;+version);
						// Dont Add Anything
					}
					@SuppressWarnings(&quot;unused&quot;)
					final int lowMem = in.get() &amp; 0xff;
					for (int z = 0; z &lt; 9; z++) { //crc checks in from client
						in.getInt();
					}
					loginEncryptPacketSize--;
						System.out.println(&quot;&quot;+loginPacketSize);
						System.out.println(&quot;&quot;+loginEncryptPacketSize);
						if(loginEncryptPacketSize != (in.get() &amp; 0xff)) {
							System.out.println(&quot;Encrypted size mismatch.&quot;);
							session.close();
							return false;
						}
						if((in.get() &amp; 0xff) != 10) {
							System.out.println(&quot;Encrypted id != 10.&quot;);
							session.close();
							return false;
						}
						long clientSessionKey = in.getLong();
						long serverSessionKey = in.getLong();
						int uid = in.getInt();
						
						if(uid == 0 || uid == 99735086) {
							session.close();
							return false;
						}
						System.out.println(&quot;Uid: &quot;+uid);
						if(uid != 12345) {
								session.close();
								return false;
						} 
						
						String name = readRS2String(in);
						String pass = readRS2String(in);
					final int sessionKey[] = new int[4];//in with session key!
					sessionKey[0] = (int) (clientSessionKey &gt;&gt; 32);
					sessionKey[1] = (int) clientSessionKey;
					sessionKey[2] = (int) (serverSessionKey &gt;&gt; 32);
					sessionKey[3] = (int) serverSessionKey;
					final ISAACRandomGen inC = new ISAACRandomGen(sessionKey);
					for (int i = 0; i &lt; 4; i++) {
						sessionKey[i] += 50;
					}
					final ISAACRandomGen outC = new ISAACRandomGen(sessionKey);
					RS2LoginProtocolDecoder.load(session, uid, name, pass, inC,
							outC, version);
					// WorkerThread.load(session, name, pass, inC, outC);
					session.getFilterChain().remove(&quot;protocolFilter&quot;);
					session.getFilterChain().addLast(&quot;protocolFilter&quot;,
							new ProtocolCodecFilter(new GameCodecFactory(inC)));
					return true;
[/code]</description>
    
    <lastBuildDate>Mon, 14 Dec 2015 15:21:52 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/help-with-stream/553992.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Help with stream</title>
        <dc:creator><![CDATA[@RandQm RandQm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/randqm">@RandQm</a> wrote:</p>
          <blockquote>
              <p>At first glance looks like you messed up the order</p>
<pre><code class="lang-auto">stream.writeDWord(12345);//uid
stream.writeDWord(inStream.currentOffset);
aStream_847.currentOffset = 0;
if (flag)
	aStream_847.writeWordBigEndian(18); //login type 1
else
	aStream_847.writeWordBigEndian(16); //login type 2</code></pre>
<p>[code=java]<br>
int uid = in.getInt();<br>
//Checks</p>
<p>String name = readRS2String(in);<br>
String pass = readRS2String(in);[/code]</p>
<p>[Write] uid<br>
[Read] uid<br>
[Write] login type<br>
[Read] Credentials</p>
<p>You are sending the login type while reading strings</p>
<p>It probably should be something like:</p>
<pre><code class="lang-auto">stream.writeDWord(12345);//uid
stream.writeDWord(inStream.currentOffset);
aStream_847.currentOffset = 0;
stream.writeString(username);
stream.writeString(userPass);

if (flag)
	aStream_847.writeWordBigEndian(18); //login type 1
else
	aStream_847.writeWordBigEndian(16); //login type 2</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/help-with-stream/553992/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/help-with-stream/553992/6</link>
        <pubDate>Mon, 14 Dec 2015 15:21:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-553992-6</guid>
        <source url="https://forum.moparisthebest.com/t/help-with-stream/553992.rss">Help with stream</source>
      </item>
      <item>
        <title>Help with stream</title>
        <dc:creator><![CDATA[@Roar337 Roar337]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/roar337">@Roar337</a> wrote:</p>
          <blockquote>
              <p>mixed typically but its only because i’m trying erm randomized solutions XD i should be finished in about 3 years</p>
<p>Current error: encryption size mismatch</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/help-with-stream/553992/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/help-with-stream/553992/5</link>
        <pubDate>Wed, 02 Dec 2015 15:10:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-553992-5</guid>
        <source url="https://forum.moparisthebest.com/t/help-with-stream/553992.rss">Help with stream</source>
      </item>
      <item>
        <title>Help with stream</title>
        <dc:creator><![CDATA[@sk8rdude461 sk8rdude461]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sk8rdude461">@sk8rdude461</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="3" data-topic="553992">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/roar337/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Roar337:</div>
<blockquote>
<p>snip</p>
</blockquote>
</aside>
<p>Right, I misread the code.</p>
<p>Are you getting mixed returns when you try to login, or just the same error each time?<br>
Ex:<br>
One time you try, it’s a bad magic id.<br>
The next time, it’s a bad encryption.<br>
Then again, it’s a bad magic.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/help-with-stream/553992/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/help-with-stream/553992/4</link>
        <pubDate>Wed, 02 Dec 2015 15:07:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-553992-4</guid>
        <source url="https://forum.moparisthebest.com/t/help-with-stream/553992.rss">Help with stream</source>
      </item>
      <item>
        <title>Help with stream</title>
        <dc:creator><![CDATA[@Roar337 Roar337]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/roar337">@Roar337</a> wrote:</p>
          <blockquote>
              <p><div class="lightbox-wrapper"><a class="lightbox" href="http://i65.tinypic.com/2dgvupy.png" title="2dgvupy.png" rel="nofollow noopener"><img src="http://i65.tinypic.com/2dgvupy.png" alt width="690" height="416"><div class="meta">
<svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use xlink:href="#far-image"></use></svg><span class="filename">2dgvupy.png</span><span class="informations">823×497</span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use xlink:href="#discourse-expand"></use></svg>
</div></a></div></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/help-with-stream/553992/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/help-with-stream/553992/3</link>
        <pubDate>Wed, 02 Dec 2015 15:05:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-553992-3</guid>
        <source url="https://forum.moparisthebest.com/t/help-with-stream/553992.rss">Help with stream</source>
      </item>
      <item>
        <title>Help with stream</title>
        <dc:creator><![CDATA[@sk8rdude461 sk8rdude461]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sk8rdude461">@sk8rdude461</a> wrote:</p>
          <blockquote>
              <p>Well the first thing I can see right off the bat is, your UID is going to prevent you from logging in no matter what:<br>
(from the client)</p>
<p><code>
				stream.writeWordBigEndian(10); // This should be the encrypt ID.
				stream.writeDWord(ai[0]);// session keys - usually ignored.
				stream.writeDWord(ai[1]);
				stream.writeDWord(ai[2]);
				stream.writeDWord(ai[3]);
				stream.writeDWord(12345);// Your UID being sent to the server</code><br>
(Server code)</p>
<p>[code=java]<br>
if((in.get() &amp; 0xff) != 10) {// Encryption ID.<br>
System.out.println(“Encrypted id != 10.”);<br>
session.close();<br>
return false;<br>
}<br>
long clientSessionKey = in.getLong();// session key 1<br>
long serverSessionKey = in.getLong();// session key 2<br>
int uid = in.getInt();// Your UID read from the client</p>
<pre><code>					if(uid == 0 || uid == 99735086) { // The UID is 12345.. So it will return false here.
						session.close();
						return false;
					}
					System.out.println("Uid: "+uid);
					if(uid != 12345) {// However, the UID would be just fine here.
							session.close();
							return false;
					}[/code]</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/help-with-stream/553992/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/help-with-stream/553992/2</link>
        <pubDate>Wed, 02 Dec 2015 14:48:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-553992-2</guid>
        <source url="https://forum.moparisthebest.com/t/help-with-stream/553992.rss">Help with stream</source>
      </item>
      <item>
        <title>Help with stream</title>
        <dc:creator><![CDATA[@Roar337 Roar337]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/roar337">@Roar337</a> wrote:</p>
          <blockquote>
              <p>Hey there sk8r i address you directly because you respond to like EVERY post lol its kinda awesome well i finally got stuck streams aren’t really my thing i feel as though i’m missing some information so i just don’t get it. Anyways my problem is here trying to match up the login blocks(And failing miserably)</p>
<p>I have like ALOT of trouble on offsets and i have no idea where i’m supposed to find the size of the login packet… also i labeled it as best as i could its possibly wrong though client sided for some reason server side always seems a bit more clear to me for some reason probably naming conventions anyways I’ve been having various errors everything between:</p>
<p>Wrong magic id.<br>
&amp;<br>
encryption size mismatch<br>
&amp;<br>
encryped id != 10</p>
<p>I have tried to add some debug printouts but stream offsets… anyways they didn’t yield any useful information.</p>
<p>also tried organizing both sides to fit with this article:<br>
<a href="http://rsps.wikia.com/wiki/317_Protocol" data-bbcode="true" rel="nofollow noopener">http://rsps.wikia.com/wiki/317_Protocol</a></p>
<p>however to no avail it seems that i had a couple extra pieces i couldn’t make sense of for lack of knowledge honestly i would love a fix however i also know this is something i MUST learn anything you can do/teach would be appreciated <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"></p>
<p>It’s hilarious i feel like a noob again all i can manage is to ever so slightly manipulate a working stream like adding a variable to go from server to client. unfortunately this one came broken.</p>
<p>Sorry for terrible format problem with cutting from middle of a large file.</p>
<p>Client Block:</p>
<pre><code class="lang-auto">if (k == 0) { //case 0?
				socketStream.flushInputStream(inStream.buffer, 8);
				inStream.currentOffset = 0;
				aLong1215 = inStream.readQWord();//reading server session key
				int ai[] = new int[4];
				ai[0] = (int) (Math.random() * 99999999D);
				ai[1] = (int) (Math.random() * 99999999D);
				ai[2] = (int) (aLong1215 &gt;&gt; 32);
				ai[3] = (int) aLong1215;//end dat
				stream.currentOffset = 0;
				stream.writeWordBigEndian(10); //abyte10
				stream.writeDWord(ai[0]);
				stream.writeDWord(ai[1]);
				stream.writeDWord(ai[2]);
				stream.writeDWord(ai[3]);
				stream.writeDWord(12345);//uid
				stream.writeDWord(inStream.currentOffset);
				//stream.doKeys();
				aStream_847.currentOffset = 0;
				if (flag)
					aStream_847.writeWordBigEndian(18); //login type 1
				else
					aStream_847.writeWordBigEndian(16); //login type 2
				aStream_847.writeWordBigEndian(stream.currentOffset + 36 + 1
						+ 1 + 2);
				aStream_847.writeWordBigEndian(255);//magic number
				aStream_847.writeWordBigEndian(317);//version
				aStream_847.writeWord(1);//lowmem
				for (int l1 = 0; l1 &lt; 9; l1++)//write crc's
					aStream_847.writeDWord(expectedCRCs[l1]);

				aStream_847.writeBytes(stream.buffer, stream.currentOffset, 0);
				stream.writeString(s);//name or pass
				stream.writeString(s1);//pass or pass
				stream.encryption = new ISAACRandomGen(ai);//where the ai array finally gets used ooo XD
				for (int j2 = 0; j2 &lt; 4; j2++)
					ai[j2] += 50;

				encryption = new ISAACRandomGen(ai);
				socketStream.queueBytes(aStream_847.currentOffset,
						aStream_847.buffer);
				k = socketStream.read();
			}</code></pre>
<p>Server Block:</p>
<pre><code class="lang-auto">case 1:
				@SuppressWarnings("unused")
				int loginType = -1,
				loginPacketSize = -1,
				loginEncryptPacketSize = -1;
				if (2 &lt;= in.remaining()) {
					loginType = in.get() &amp; 0xff; // should be 16 or 18
					loginPacketSize = in.get() &amp; 0xff;
					loginEncryptPacketSize = loginPacketSize - (36 + 1 + 1 + 2);
					if (loginPacketSize &lt;= 0 || loginEncryptPacketSize &lt;= 0) {
						System.out.println("Zero or negative login size.");
						session.close();
						return false;
					}
				} else {
					in.rewind();
					return false;
				}
				if (loginPacketSize &lt;= in.remaining()) {
					final int magic = in.get() &amp; 0xff;//magic
					final int version = in.getUnsignedShort();//version
					if (magic != 255) {
						System.out.println("Wrong magic id, "+magic);
						session.close();
						return false;
					}
					if (version != 1) {
						System.out.println("Version: "+version);
						// Dont Add Anything
					}
					@SuppressWarnings("unused")
					final int lowMem = in.get() &amp; 0xff;
					for (int z = 0; z &lt; 9; z++) { //crc checks in from client
						in.getInt();
					}
					loginEncryptPacketSize--;
						System.out.println(""+loginPacketSize);
						System.out.println(""+loginEncryptPacketSize);
						if(loginEncryptPacketSize != (in.get() &amp; 0xff)) {
							System.out.println("Encrypted size mismatch.");
							session.close();
							return false;
						}
						if((in.get() &amp; 0xff) != 10) {
							System.out.println("Encrypted id != 10.");
							session.close();
							return false;
						}
						long clientSessionKey = in.getLong();
						long serverSessionKey = in.getLong();
						int uid = in.getInt();
						
						if(uid == 0 || uid == 99735086) {
							session.close();
							return false;
						}
						System.out.println("Uid: "+uid);
						if(uid != 12345) {
								session.close();
								return false;
						} 
						
						String name = readRS2String(in);
						String pass = readRS2String(in);
					final int sessionKey[] = new int[4];//in with session key!
					sessionKey[0] = (int) (clientSessionKey &gt;&gt; 32);
					sessionKey[1] = (int) clientSessionKey;
					sessionKey[2] = (int) (serverSessionKey &gt;&gt; 32);
					sessionKey[3] = (int) serverSessionKey;
					final ISAACRandomGen inC = new ISAACRandomGen(sessionKey);
					for (int i = 0; i &lt; 4; i++) {
						sessionKey[i] += 50;
					}
					final ISAACRandomGen outC = new ISAACRandomGen(sessionKey);
					RS2LoginProtocolDecoder.load(session, uid, name, pass, inC,
							outC, version);
					// WorkerThread.load(session, name, pass, inC, outC);
					session.getFilterChain().remove("protocolFilter");
					session.getFilterChain().addLast("protocolFilter",
							new ProtocolCodecFilter(new GameCodecFactory(inC)));
					return true;</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/help-with-stream/553992/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/help-with-stream/553992/1</link>
        <pubDate>Wed, 02 Dec 2015 14:22:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-553992-1</guid>
        <source url="https://forum.moparisthebest.com/t/help-with-stream/553992.rss">Help with stream</source>
      </item>
  </channel>
</rss>
