<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[RSCD] Adding exhausting % to mining rocks</title>
    <link>https://forum.moparisthebest.com/t/rscd-adding-exhausting-to-mining-rocks/411048</link>
    <description>
[ul]What this do?

[list]
[li]Will make mining rocks have a random chance to give more ores before it gets exhausted.[/li]
[li]Its fun since you never know how much ore you can obtain from a single rock.[/li][/list]

So lets find Objectaction.java in RSCDv25 or Mining.java on Darkquest. Lets open it and search for &quot;gem&quot;, below the &quot;You found a gem&quot; you will see this:[/ul]
[code]world.registerGameObject(new GameObject(object.getLocation(), 98, object.getDirection(), object.getType()));

world.delayedSpawnObject(object.getLoc(), def.getRespawnTime() * 1000);[/code]

replace with this:
[code]if (DataConversions.random(1, 100) &lt;= def.getExhausted()) {

world.registerGameObject(new GameObject(object.getLocation(), 98, object.getDirection(), object.getType()));

world.delayedSpawnObject(newobject.getLoc(), def.getRespawnTime() * 1000);

}[/code]

Now lets edit the ObjectMining.xml (located on Server/conf/server/defs/extras) adding the percent value for each mining rock. Like i did with these:
&lt;blockquote&gt;&lt;entry&gt;
		&lt;int&gt;176&lt;/int&gt;&lt;!-- Bluerite --&gt;
		&lt;ObjectMiningDef&gt;
			&lt;requiredLvl&gt;1&lt;/requiredLvl&gt;
			&lt;oreId&gt;266&lt;/oreId&gt;
			&lt;exp&gt;5&lt;/exp&gt;
			&lt;respawnTime&gt;15&lt;/respawnTime&gt;
			&lt;exhausted&gt;100&lt;/exhausted&gt;
		&lt;/ObjectMiningDef&gt;
	&lt;/entry&gt;
	&lt;entry&gt;
		&lt;int&gt;100&lt;/int&gt;&lt;!-- Copper --&gt;
		&lt;ObjectMiningDef&gt;
			&lt;requiredLvl&gt;1&lt;/requiredLvl&gt;
			&lt;oreId&gt;150&lt;/oreId&gt;
			&lt;exp&gt;18&lt;/exp&gt;
			&lt;respawnTime&gt;3&lt;/respawnTime&gt;
			&lt;exhausted&gt;20&lt;/exhausted&gt;
		&lt;/ObjectMiningDef&gt;
	&lt;/entry&gt;&lt;/blockquote&gt;

For example: a value of 100 means rock will exhaust on one successful swing but a value of 95 means 5% chance of extra ore. 

I tested with different values until i fell it was right, this are my exhausting values for each one:

bluerite 100, clay 10, tin 20, cooper 20, iron 40, silver 50, 
coal 55, gold 60, mith 60, addy 75, rune 95

And finally!  ;D on ObjectMiningDef.java u need to add

[code]public int exhausted;[/code]
 and 
[code]    public int getExhausted() {
	return exhausted;
    }[/code]</description>
    
    <lastBuildDate>Fri, 19 Aug 2011 20:11:08 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/rscd-adding-exhausting-to-mining-rocks/411048.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[RSCD] Adding exhausting % to mining rocks</title>
        <dc:creator><![CDATA[@latifundio latifundio]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/latifundio">@latifundio</a> wrote:</p>
          <blockquote>
              <p>[ul]What this do?</p>
<p>[list]<br>
[li]Will make mining rocks have a random chance to give more ores before it gets exhausted.[/li]<br>
[li]Its fun since you never know how much ore you can obtain from a single rock.[/li][/list]</p>
<p>So lets find Objectaction.java in RSCDv25 or Mining.java on Darkquest. Lets open it and search for “gem”, below the “You found a gem” you will see this:[/ul]</p>
<p>[code]world.registerGameObject(new GameObject(object.getLocation(), 98, object.getDirection(), object.getType()));</p>
<p>world.delayedSpawnObject(object.getLoc(), def.getRespawnTime() * 1000);[/code]</p>
<p>replace with this:</p>
<p>[code]if (DataConversions.random(1, 100) &lt;= def.getExhausted()) {</p>
<p>world.registerGameObject(new GameObject(object.getLocation(), 98, object.getDirection(), object.getType()));</p>
<p>world.delayedSpawnObject(newobject.getLoc(), def.getRespawnTime() * 1000);</p>
<p>}[/code]</p>
<p>Now lets edit the ObjectMining.xml (located on Server/conf/server/defs/extras) adding the percent value for each mining rock. Like i did with these:</p>
<blockquote>
		176
		
			1
			266
			5
			15
			100
		
	
	
		100
		
			1
			150
			18
			3
			20
		
	</blockquote>
<p>For example: a value of 100 means rock will exhaust on one successful swing but a value of 95 means 5% chance of extra ore.</p>
<p>I tested with different values until i fell it was right, this are my exhausting values for each one:</p>
<p>bluerite 100, clay 10, tin 20, cooper 20, iron 40, silver 50,<br>
coal 55, gold 60, mith 60, addy 75, rune 95</p>
<p>And finally!  ;D on ObjectMiningDef.java u need to add</p>
<pre><code class="lang-auto"></code></pre>
<p>and</p>
<p><code>    public int getExhausted() {
	return exhausted;
    }</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/rscd-adding-exhausting-to-mining-rocks/411048/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/rscd-adding-exhausting-to-mining-rocks/411048/1</link>
        <pubDate>Fri, 19 Aug 2011 20:11:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-411048-1</guid>
        <source url="https://forum.moparisthebest.com/t/rscd-adding-exhausting-to-mining-rocks/411048.rss">[RSCD] Adding exhausting % to mining rocks</source>
      </item>
  </channel>
</rss>
