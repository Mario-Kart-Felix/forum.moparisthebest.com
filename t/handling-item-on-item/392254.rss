<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Handling Item-On-Item</title>
    <link>https://forum.moparisthebest.com/t/handling-item-on-item/392254</link>
    <description>Just a quick question on how [b]best[/b] to handle Item-On-Item events. There&#39;s the traditional way of many conditionals like
[code=Java]
if ((item1 == X &amp;&amp; item2 == Y) || (item1 == Y &amp;&amp; item2 == X)) {
    doSomething();
}
[/code]

But i was thinking of having a Recipe type class that looks something like
[code=Java]
public final class Recipe {
    private Item itemA_;
    private Item ItemB_;

    public Recipe(Item itemA, Item itemB) {
        itemA_ = itemA;
        itemB_ = itemB;
    }

    // ...
}
[/code]

And then maybe doing something like this when the packet is received
[code=Java]
for (Recipe r : recipes) {
    if (r.handles(itemA, itemB)) {
        doSomething();
    }
}
[/code]

But the problem is that it&#39;s doing exactly the same thing, but with an added class.

I was just wondering what you guys think, and if you have any other ideas that have been successful.</description>
    
    <lastBuildDate>Sat, 23 Apr 2011 22:57:42 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/handling-item-on-item/392254.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Handling Item-On-Item</title>
        <dc:creator><![CDATA[@Pzezima2 Pzezima2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pzezima2">@Pzezima2</a> wrote:</p>
          <blockquote>
              <p>hmm okay.  <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/handling-item-on-item/392254/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/handling-item-on-item/392254/4</link>
        <pubDate>Sat, 23 Apr 2011 22:57:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-392254-4</guid>
        <source url="https://forum.moparisthebest.com/t/handling-item-on-item/392254.rss">Handling Item-On-Item</source>
      </item>
      <item>
        <title>Handling Item-On-Item</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>[quote=“Pzezima2, post:2, topic:392254”]Do you mean like</p>
<p>[code]package server.model.players.packets;</p>
<p>import server.model.items.UseItem;<br>
import server.model.players.Client;<br>
import server.model.players.PacketType;</p>
<p>public class ItemOnItem implements PacketType {</p>
<pre><code>@Override
public void processPacket(Client c, int packetType, int packetSize) {
	int usedWithSlot = c.getInStream().readUnsignedWord();
	int itemUsedSlot = c.getInStream().readUnsignedWordA();
	int useWith = c.playerItems[usedWithSlot] - 1;
	int itemUsed = c.playerItems[itemUsedSlot] - 1;
	UseItem.ItemonItem(c, itemUsed, useWith);
}
</code></pre>
<p>}<br>
[/code] ?[/quote]</p>
<p>But that itemonitem method still probably uses a huge switch/conditional block. I’m trying to remove that from the equation.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/handling-item-on-item/392254/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/handling-item-on-item/392254/3</link>
        <pubDate>Sat, 23 Apr 2011 22:56:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-392254-3</guid>
        <source url="https://forum.moparisthebest.com/t/handling-item-on-item/392254.rss">Handling Item-On-Item</source>
      </item>
      <item>
        <title>Handling Item-On-Item</title>
        <dc:creator><![CDATA[@Pzezima2 Pzezima2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pzezima2">@Pzezima2</a> wrote:</p>
          <blockquote>
              <p>Do you mean like</p>
<p>[code]package server.model.players.packets;</p>
<p>import server.model.items.UseItem;<br>
import server.model.players.Client;<br>
import server.model.players.PacketType;</p>
<p>public class ItemOnItem implements PacketType {</p>
<pre><code>@Override
public void processPacket(Client c, int packetType, int packetSize) {
	int usedWithSlot = c.getInStream().readUnsignedWord();
	int itemUsedSlot = c.getInStream().readUnsignedWordA();
	int useWith = c.playerItems[usedWithSlot] - 1;
	int itemUsed = c.playerItems[itemUsedSlot] - 1;
	UseItem.ItemonItem(c, itemUsed, useWith);
}
</code></pre>
<p>}<br>
[/code] ?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/handling-item-on-item/392254/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/handling-item-on-item/392254/2</link>
        <pubDate>Sat, 23 Apr 2011 22:14:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-392254-2</guid>
        <source url="https://forum.moparisthebest.com/t/handling-item-on-item/392254.rss">Handling Item-On-Item</source>
      </item>
      <item>
        <title>Handling Item-On-Item</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>Just a quick question on how <span class="bbcode-b">best</span> to handle Item-On-Item events. There’s the traditional way of many conditionals like</p>
<pre><code class="lang-auto">if ((item1 == X &amp;&amp; item2 == Y) || (item1 == Y &amp;&amp; item2 == X)) {
    doSomething();
}</code></pre>
<p>But i was thinking of having a Recipe type class that looks something like</p>
<pre><code class="lang-auto">public final class Recipe {
    private Item itemA_;
    private Item ItemB_;

    public Recipe(Item itemA, Item itemB) {
        itemA_ = itemA;
        itemB_ = itemB;
    }

    // ...
}</code></pre>
<p>And then maybe doing something like this when the packet is received</p>
<pre><code class="lang-auto">for (Recipe r : recipes) {
    if (r.handles(itemA, itemB)) {
        doSomething();
    }
}</code></pre>
<p>But the problem is that it’s doing exactly the same thing, but with an added class.</p>
<p>I was just wondering what you guys think, and if you have any other ideas that have been successful.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/handling-item-on-item/392254/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/handling-item-on-item/392254/1</link>
        <pubDate>Sat, 23 Apr 2011 20:41:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-392254-1</guid>
        <source url="https://forum.moparisthebest.com/t/handling-item-on-item/392254.rss">Handling Item-On-Item</source>
      </item>
  </channel>
</rss>
