<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Java API &#39;flaw&#39;?</title>
    <link>https://forum.moparisthebest.com/t/java-api-flaw/368491</link>
    <description>&quot;Fun with auto boxing and the integer cache in Java.
[code=java]
Integer foo = 1000;
Integer bar = 1000;

foo &lt;= bar; // true
foo &gt;= bar; // true
foo == bar; // false

//However, if the values of foo and bar are between 127 and -128 (inclusive)
//the behaviour changes:

Integer foo = 42;
Integer bar = 42;

foo &lt;= bar; // true
foo &gt;= bar; // true
foo == bar; // true
[/code]

[b]Explanation[/b]

A quick peek at the java source code will turn up the following:
[code=java]
/**
     * Returns a &lt;tt&gt;Integer&lt;/tt&gt; instance representing the specified
     * &lt;tt&gt;int&lt;/tt&gt; value.
     * If a new &lt;tt&gt;Integer&lt;/tt&gt; instance is not required, this method
     * should generally be used in preference to the constructor
     * {@link #Integer(int)}, as this method is likely to yield
     * significantly better space and time performance by caching
     * frequently requested values.
     *
     * @param  i an &lt;code&gt;int&lt;/code&gt; value.
     * @return a &lt;tt&gt;Integer&lt;/tt&gt; instance representing &lt;tt&gt;i&lt;/tt&gt;.
     * @since  1.5
     */
    public static Integer valueOf(int i) {
        if(i &gt;= -128 &amp;&amp; i &lt;= IntegerCache.high)
            return IntegerCache.cache[i + 128];
        else
            return new Integer(i);
    }
[/code]

Note: IntegerCache.high defaults to 127 unless set by a property.

What happens with auto boxing is that both foo and bar the same integer object retrieved from the cache unless explicitly created: e.g. foo = new Integer(42), thus when comparing reference equality, they will be true rather than false. The proper way of comparing Integer value is using .equals();&quot;


From: http://stackoverflow.com/questions/1995113/strangest-language-feature/2001861#2001861</description>
    
    <lastBuildDate>Sun, 14 Nov 2010 19:46:35 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/java-api-flaw/368491.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Java API &#39;flaw&#39;?</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>[quote=“abraham2119, post:18, topic:368491”][quote author=super_ link=topic=464640.msg3399067#msg3399067 date=1289749358]<br>
I am abraham2119 and don’t understand why you would cache frequently used items<br>
[/quote]i do, but a class that encapsulates a primitive type should generally cache values within that range[/quote]and generally, it does</p>
<p>move along</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-api-flaw/368491/19">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-api-flaw/368491/19</link>
        <pubDate>Sun, 14 Nov 2010 19:46:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-368491-19</guid>
        <source url="https://forum.moparisthebest.com/t/java-api-flaw/368491.rss">Java API &#39;flaw&#39;?</source>
      </item>
      <item>
        <title>Java API &#39;flaw&#39;?</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>[quote=“super_, post:17, topic:368491”]I am abraham2119 and don’t understand why you would cache frequently used items[/quote]i do, but a class that encapsulates a primitive type should generally cache values within that range</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-api-flaw/368491/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-api-flaw/368491/18</link>
        <pubDate>Sun, 14 Nov 2010 16:10:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-368491-18</guid>
        <source url="https://forum.moparisthebest.com/t/java-api-flaw/368491.rss">Java API &#39;flaw&#39;?</source>
      </item>
      <item>
        <title>Java API &#39;flaw&#39;?</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>I am abraham2119 and don’t understand why you would cache frequently used items</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-api-flaw/368491/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-api-flaw/368491/17</link>
        <pubDate>Sun, 14 Nov 2010 15:42:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-368491-17</guid>
        <source url="https://forum.moparisthebest.com/t/java-api-flaw/368491.rss">Java API &#39;flaw&#39;?</source>
      </item>
      <item>
        <title>Java API &#39;flaw&#39;?</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <p>[quote=“abraham2119, post:15, topic:368491”][quote author=Taharok link=topic=464640.msg3398773#msg3398773 date=1289711825]</p>
<aside class="quote no-group">
<blockquote>
<p>why does the class specifically cache only the potential 8-bit values?</p>
</blockquote>
</aside>
<p>I think it’s the high amount of usages of smaller primitive integers being treated as objects, throughout the API. Plus it’s a good round number, isn’t it?<br>
[/quote]indeed but then this should be the functionality of the Byte class, the Integer class should cache all potential 32-bit values. im not saying that all the values should be cached in , but rather, should be cached in a static map upon use</p>
<p>something like:</p>
<p><code>
    public static Integer valueOf(int i) {
        if (IntegerCacheMap.get(i) == null) {
            IntegerCacheMap.put(i, new Integer(i));
        }
        return IntegerCacheMap.get(i);
    }
</code>[/quote]</p>
<p>But aren’t all numerical values in Java treated as integers when they take up 1 slot on the stack, and long integers when they take up 2? If I remember correctly, then all the times in the API when the bytecode is trying to do the equivalent of ‘(Object)integerConstant8bit’ then it will evaluate it as an integer and utilize java.lang.Integer. I really don’t know if it the compiler is smart enough to use Byte.valueOf() for a bipush instead of Integer.valueOf (really what I’m trying to say). Could anyone elaborate?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-api-flaw/368491/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-api-flaw/368491/16</link>
        <pubDate>Sun, 14 Nov 2010 06:28:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-368491-16</guid>
        <source url="https://forum.moparisthebest.com/t/java-api-flaw/368491.rss">Java API &#39;flaw&#39;?</source>
      </item>
      <item>
        <title>Java API &#39;flaw&#39;?</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>[quote=“Taharok, post:14, topic:368491”][quote author=abraham2119 link=topic=464640.msg3398771#msg3398771 date=1289711683]<br>
why does the class specifically cache only the potential 8-bit values?<br>
[/quote]</p>
<p>I think it’s the high amount of usages of smaller primitive integers being treated as objects, throughout the API. Plus it’s a good round number, isn’t it?[/quote]indeed but then this should be the functionality of the Byte class, the Integer class should cache all potential 32-bit values. im not saying that all the values should be cached in , but rather, should be cached in a static map upon use</p>
<p>something like:</p>
<pre><code class="lang-auto">    public static Integer valueOf(int i) {
        if (IntegerCacheMap.get(i) == null) {
            IntegerCacheMap.put(i, new Integer(i));
        }
        return IntegerCacheMap.get(i);
    }</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-api-flaw/368491/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-api-flaw/368491/15</link>
        <pubDate>Sun, 14 Nov 2010 05:46:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-368491-15</guid>
        <source url="https://forum.moparisthebest.com/t/java-api-flaw/368491.rss">Java API &#39;flaw&#39;?</source>
      </item>
      <item>
        <title>Java API &#39;flaw&#39;?</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="13" data-topic="368491">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/abraham2119/40/5_1887921562df0dabfae55079ddabeb03.png" class="avatar"> abraham2119:</div>
<blockquote>
<p>why does the class specifically cache only the potential 8-bit values?</p>
</blockquote>
</aside>
<p>I think it’s the high amount of usages of smaller primitive integers being treated as objects, throughout the API. Plus it’s a good round number, isn’t it?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-api-flaw/368491/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-api-flaw/368491/14</link>
        <pubDate>Sun, 14 Nov 2010 05:17:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-368491-14</guid>
        <source url="https://forum.moparisthebest.com/t/java-api-flaw/368491.rss">Java API &#39;flaw&#39;?</source>
      </item>
      <item>
        <title>Java API &#39;flaw&#39;?</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>why does the class specifically cache only the potential 8-bit values?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-api-flaw/368491/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-api-flaw/368491/13</link>
        <pubDate>Sun, 14 Nov 2010 05:14:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-368491-13</guid>
        <source url="https://forum.moparisthebest.com/t/java-api-flaw/368491.rss">Java API &#39;flaw&#39;?</source>
      </item>
      <item>
        <title>Java API &#39;flaw&#39;?</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>Yea, there is the rare instance when you want to compare references, but in all my years of programming, I think I’ve done it once, maybe twice. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-api-flaw/368491/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-api-flaw/368491/12</link>
        <pubDate>Sun, 14 Nov 2010 05:03:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-368491-12</guid>
        <source url="https://forum.moparisthebest.com/t/java-api-flaw/368491.rss">Java API &#39;flaw&#39;?</source>
      </item>
      <item>
        <title>Java API &#39;flaw&#39;?</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="8" data-topic="368491">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/moparisthebest/40/30_1.png" class="avatar"> Moparisthebest:</div>
<blockquote>
<p>You should always use .equals() for comparing ANY Object in Java.  You can only use ‘==’ on primitive types, period.  So if you break the rules and it doesn’t work like YOU think it should, that’s more of a flaw with you, isn’t it? <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
</blockquote>
</aside>
<p>That’s not entirely true. There’s times where you actually should compare references. I the description to equals() specifies that a.equals(b) will always match b.equals(a), and if a == b then a.equals(b), but a.equals(b) doesn’t mean a == b. There’re definitely times when you have to use reference comparing.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-api-flaw/368491/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-api-flaw/368491/11</link>
        <pubDate>Sun, 14 Nov 2010 04:24:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-368491-11</guid>
        <source url="https://forum.moparisthebest.com/t/java-api-flaw/368491.rss">Java API &#39;flaw&#39;?</source>
      </item>
      <item>
        <title>Java API &#39;flaw&#39;?</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>I know about the play on the other thread, I’m just saying always use .equals on an object. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-api-flaw/368491/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-api-flaw/368491/10</link>
        <pubDate>Sun, 14 Nov 2010 00:40:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-368491-10</guid>
        <source url="https://forum.moparisthebest.com/t/java-api-flaw/368491.rss">Java API &#39;flaw&#39;?</source>
      </item>
      <item>
        <title>Java API &#39;flaw&#39;?</title>
        <dc:creator><![CDATA[@Unhandled Unhandled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unhandled">@Unhandled</a> wrote:</p>
          <blockquote>
              <p>for reference: <a href="http://www.moparisthebest.com/smf/index.php/topic,391885.msg2917752.html" rel="nofollow noopener">http://www.moparisthebest.com/smf/index.php/topic,391885.msg2917752.html</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-api-flaw/368491/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-api-flaw/368491/9</link>
        <pubDate>Sun, 14 Nov 2010 00:29:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-368491-9</guid>
        <source url="https://forum.moparisthebest.com/t/java-api-flaw/368491.rss">Java API &#39;flaw&#39;?</source>
      </item>
      <item>
        <title>Java API &#39;flaw&#39;?</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>You should always use .equals() for comparing ANY Object in Java.  You can only use ‘==’ on primitive types, period.  So if you break the rules and it doesn’t work like YOU think it should, that’s more of a flaw with you, isn’t it? <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-api-flaw/368491/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-api-flaw/368491/8</link>
        <pubDate>Sun, 14 Nov 2010 00:04:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-368491-8</guid>
        <source url="https://forum.moparisthebest.com/t/java-api-flaw/368491.rss">Java API &#39;flaw&#39;?</source>
      </item>
      <item>
        <title>Java API &#39;flaw&#39;?</title>
        <dc:creator><![CDATA[@Unhandled Unhandled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unhandled">@Unhandled</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="6" data-topic="368491">
<div class="title">
<div class="quote-controls"></div>
 super_:</div>
<blockquote>
<p>i don’t see whats wrong here. ==(Integer, Integer) doesn’t have to return true <span class="bbcode-i">ever</span>.</p>
</blockquote>
</aside>
<p>hence java being shit.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-api-flaw/368491/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-api-flaw/368491/7</link>
        <pubDate>Sat, 13 Nov 2010 21:28:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-368491-7</guid>
        <source url="https://forum.moparisthebest.com/t/java-api-flaw/368491.rss">Java API &#39;flaw&#39;?</source>
      </item>
      <item>
        <title>Java API &#39;flaw&#39;?</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>i don’t see whats wrong here. ==(Integer, Integer) doesn’t have to return true <span class="bbcode-i">ever</span>.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-api-flaw/368491/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-api-flaw/368491/6</link>
        <pubDate>Sat, 13 Nov 2010 20:38:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-368491-6</guid>
        <source url="https://forum.moparisthebest.com/t/java-api-flaw/368491.rss">Java API &#39;flaw&#39;?</source>
      </item>
      <item>
        <title>Java API &#39;flaw&#39;?</title>
        <dc:creator><![CDATA[@lothy Lothy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lothy">@lothy</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="4" data-topic="368491">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/speljohan/40/5_1887921562df0dabfae55079ddabeb03.png" class="avatar"> Speljohan:</div>
<blockquote>
<p>Ya Java Is Such A Bad Language You Should All Use Ruby Instead <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"> <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
</blockquote>
</aside>
<p>Speljohan on being bad.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-api-flaw/368491/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-api-flaw/368491/5</link>
        <pubDate>Sat, 13 Nov 2010 13:31:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-368491-5</guid>
        <source url="https://forum.moparisthebest.com/t/java-api-flaw/368491.rss">Java API &#39;flaw&#39;?</source>
      </item>
      <item>
        <title>Java API &#39;flaw&#39;?</title>
        <dc:creator><![CDATA[@Speljohan Speljohan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/speljohan">@Speljohan</a> wrote:</p>
          <blockquote>
              <p>Ya Java Is Such A Bad Language You Should All Use Ruby Instead <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"> <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-api-flaw/368491/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-api-flaw/368491/4</link>
        <pubDate>Sat, 13 Nov 2010 11:38:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-368491-4</guid>
        <source url="https://forum.moparisthebest.com/t/java-api-flaw/368491.rss">Java API &#39;flaw&#39;?</source>
      </item>
      <item>
        <title>Java API &#39;flaw&#39;?</title>
        <dc:creator><![CDATA[@Frell Frell]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frell">@Frell</a> wrote:</p>
          <blockquote>
              <p>frank_ on noobs</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-api-flaw/368491/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-api-flaw/368491/3</link>
        <pubDate>Sat, 13 Nov 2010 06:42:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-368491-3</guid>
        <source url="https://forum.moparisthebest.com/t/java-api-flaw/368491.rss">Java API &#39;flaw&#39;?</source>
      </item>
      <item>
        <title>Java API &#39;flaw&#39;?</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>get owned noobs</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-api-flaw/368491/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-api-flaw/368491/2</link>
        <pubDate>Sat, 13 Nov 2010 06:01:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-368491-2</guid>
        <source url="https://forum.moparisthebest.com/t/java-api-flaw/368491.rss">Java API &#39;flaw&#39;?</source>
      </item>
      <item>
        <title>Java API &#39;flaw&#39;?</title>
        <dc:creator><![CDATA[@Unhandled Unhandled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unhandled">@Unhandled</a> wrote:</p>
          <blockquote>
              <p>"Fun with auto boxing and the integer cache in Java.</p>
<pre><code class="lang-auto">Integer foo = 1000;
Integer bar = 1000;

foo &lt;= bar; // true
foo &gt;= bar; // true
foo == bar; // false

//However, if the values of foo and bar are between 127 and -128 (inclusive)
//the behaviour changes:

Integer foo = 42;
Integer bar = 42;

foo &lt;= bar; // true
foo &gt;= bar; // true
foo == bar; // true</code></pre>
<p><span class="bbcode-b">Explanation</span></p>
<p>A quick peek at the java source code will turn up the following:</p>
<pre><code class="lang-auto">/**
     * Returns a &lt;tt&gt;Integer&lt;/tt&gt; instance representing the specified
     * &lt;tt&gt;int&lt;/tt&gt; value.
     * If a new &lt;tt&gt;Integer&lt;/tt&gt; instance is not required, this method
     * should generally be used in preference to the constructor
     * {@link #Integer(int)}, as this method is likely to yield
     * significantly better space and time performance by caching
     * frequently requested values.
     *
     * @param  i an &lt;code&gt;int&lt;/code&gt; value.
     * @return a &lt;tt&gt;Integer&lt;/tt&gt; instance representing &lt;tt&gt;i&lt;/tt&gt;.
     * @since  1.5
     */
    public static Integer valueOf(int i) {
        if(i &gt;= -128 &amp;&amp; i &lt;= IntegerCache.high)
            return IntegerCache.cache[i + 128];
        else
            return new Integer(i);
    }</code></pre>
<p>Note: IntegerCache.high defaults to 127 unless set by a property.</p>
<p>What happens with auto boxing is that both foo and bar the same integer object retrieved from the cache unless explicitly created: e.g. foo = new Integer(42), thus when comparing reference equality, they will be true rather than false. The proper way of comparing Integer value is using .equals();"</p>
<p>From: <a href="http://stackoverflow.com/questions/1995113/strangest-language-feature/2001861#2001861" rel="nofollow noopener">http://stackoverflow.com/questions/1995113/strangest-language-feature/2001861#2001861</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-api-flaw/368491/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-api-flaw/368491/1</link>
        <pubDate>Sat, 13 Nov 2010 05:42:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-368491-1</guid>
        <source url="https://forum.moparisthebest.com/t/java-api-flaw/368491.rss">Java API &#39;flaw&#39;?</source>
      </item>
  </channel>
</rss>
