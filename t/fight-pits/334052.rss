<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Fight Pits</title>
    <link>https://forum.moparisthebest.com/t/fight-pits/334052</link>
    <description>[b]Source tested on: Devo 2.7, should work on others too.

Purpose: Creating a good Fight Pits base that doesn&#39;t use the process [u]At All[/u]

Sorry if the codes look a little messy. I use notepad++ and it doesn&#39;t always transfer well.[/b]

[b]Step 1:[/b]
If you already have a folder named Minigames skip this step!

Go into your Players folder, and make a new folder named Minigames. Next, go into Client.java and add this import:

[code]import server.players.Minigames.*;[/code]

[b]
Step 2:[/b]

Make a new file in your Minigames folder named FightPits.java and add this in it. if you read it you will see that I explain everything in it.

[code]package server.players.Minigames;

import server.*;
import server.players.*;
import server.items.*;
import server.util.*;
import server.world.*;
import server.npcs.*;
import server.players.Minigames.*;

public class FightPits {
    public client c;

    public FightPits(client c) {
      this.c = c;
   }
   
   
   public boolean inPits()
   {
 /**
   *Checks to see if the player is currently in the fightPits fighting area.
 **/
      if (c.absX &gt;= 2364 &amp;&amp; c.absY &gt;= 5122 &amp;&amp; c.absX &lt;= 2430 &amp;&amp; c.absY &lt;= 5168)
      {
         return true;
      }
      else
      {
         return false;
      }
   }

   public boolean pitsWaiting()
   {
 /**
   *Checks to see if the player is in the pits waiting area.
 **/
      if (c.absX &gt;= 2393 &amp;&amp; c.absY &gt;= 5169 &amp;&amp; c.absX &lt;= 2404 &amp;&amp; c.absY &lt;= 5175)
      {
         return true;
      }
      else
      {
         return false;
      }
   }

   public boolean gameInProgress()
   {
 /**
   *Checks to see if a game is currently going on.
   *It does this by counting the players in the FightPits area.
   *If there is 1 or more player, then there is a game in session.
 **/
      if (PlayerHandler.getCount() &gt; 0)
      {
         return true;
      }
      else
      {
         return false;
      }
   }

   public void Winner()
   {
 /**
   *Rewards winner, prepares to start next game
 **/
      c.sM(&quot;@red@You Win!&quot;);
      c.teleportToX = 2399;
      c.teleportToY = 5177;
      c.addItem(995, misc.random(10000) * server.pAmount);
      c.playerLevel[3] = c.getLevelForXP(c.playerXP[3]);
      server.registerEvent(new Event(20000)
      {
         public void execute()
         {
            server.deregisterEvent(this);
            startGame();
         }
      });
   }
   
   public void checkCount()
   {
 /**
   *Checks how many people are in the FightPits
   *If there is only one player, then it activates the Winner method, which rewards the player.
 **/
         client k = (client) server.playerHandler.players[c.KillerId];
            if (k.FP().inPits())
            {
               if (PlayerHandler.getCount() &lt;= 2)
               {
                  k.FP().Winner();
               }
            }
   }
   public void checkCount2()
   {
 /**
   *Same as above, but a diffrent way to check count.
   *You will see what this method is used for later.
 **/
      if (inPits())
      {
         if (PlayerHandler.getCount() &lt;= 1)
         {
            Winner();
         }
      }
   }
         
         public void startGame()
         {
 /**
   *Attempts to start the game.
 **/
            if (PlayerHandler.waitingCount() &lt; 1)
            {
               server.Pits = 0;
               c.sM(&quot;The game will begin when there are two or more players.&quot;);
               return;
            }
               for (Player p : c.handler.players)
               {
               if ((p == null) || !p.isActive)
                  continue;
                  final client temp = (client) p;      
                  server.Pits = 1;
                     if (temp.FP().pitsWaiting())
                     {
                        temp.sM(&quot;Game begining shortly.&quot;);
                     }
                     server.registerEvent(new Event(20000)
                     {
                        public void execute()
                        {
                           server.deregisterEvent(this);
                           if (temp.FP().pitsWaiting())
                           {
                              if (PlayerHandler.waitingCount() &lt; 2)
                              {
                                 server.Pits = 0;
                                 temp.sM(&quot;The game will begin when there are two or more players.&quot;);
                                 startGame();
                                 return;
                              }
                              server.pAmount = PlayerHandler.waitingCount();
                              temp.teleportToX = 2397 - misc.random(5);
                              temp.teleportToY = 5158 - misc.random(5);
                              temp.safe = 3;
                              if (c.safe &gt; 0)
                              pitsInter();
                           }
                        }
                     });
               }
         }
   public void pitsInter()
   {
 /**
   *Shows the Enemies left interface.
   *Also updates the interface every two seconds
   *Checks the number of players in-game aswell.
 **/   
         server.registerEvent(new Event(2000)
         {
            public void execute()
            {
               server.deregisterEvent(this);            
               c.setInterfaceWalkable(6673);
               c.CAM().sendFrame126(&quot;@red@Enemies Left: &quot; + (PlayerHandler.getCount() - 1), 6570);
               c.CAM().sendFrame126(&quot;&quot;, 6571);
               c.CAM().sendFrame126(&quot;&quot;, 6572);
               c.CAM().sendFrame126(&quot;&quot;, 6664);            
               checkCount2();
               pitsInter();
            }
         });
   }
         
}[/code]

This is a great method to use because it [b]DOES NOT USE THE SERVER&#39;S PROCESS AT ALL.[/b]


[b]Step 3:[/b]

Open server.java and add these ints:

[code]public static int Pits, pAmount = 0;[/code]

[b]
Step 4:[/b]

Open PlayerHandler.java and add these:

[code]   public static int getCount() {
      int count = 0;
      for (int i = 0; i &lt; players.length; i++) {
         if ((players[i] != null) &amp;&amp; !players[i].disconnected) {
            if (players[i].absX &gt;= 2364 &amp;&amp; players[i].absY &gt;= 5122 &amp;&amp; players[i].absX &lt;= 2430 &amp;&amp; players[i].absY &lt;= 5168)
            {
               count++;
            }
         }
      }
      return count;
   }
   public static int waitingCount() {
      int count = 0;
      for (int i = 0; i &lt; players.length; i++) {
         if ((players[i] != null) &amp;&amp; !players[i].disconnected) {
            if (players[i].absX &gt;= 2393 &amp;&amp; players[i].absY &gt;= 5169 &amp;&amp; players[i].absX &lt;= 2404 &amp;&amp; players[i].absY &lt;= 5175)
            {
               count++;
            }
         }
      }
      return count;
   }[/code]

Those are used for counting the number of players in the fighting area, and the waiting area.


[b]Step 5:[/b]

Open Client.java and add this:

[code]public FightPits FightPits = new FightPits(this);
public FightPits FP() {
return FightPits;
}[/code]

Next add this:

[code]      public void sM(String text)
      {
         CAM().sendMessage(text);
      }[/code]

Then add this:

[code]public int safe = 0;[/code]

Now go to &quot;public void youdied()&quot; and add this at the top:

[code]if (safe &gt; 0)
{
   return;
}[/code]

Now search for &quot;if (deathStage == 3) {&quot; You will see something like this:

[code]            if (QH().q1 == 15) {
               teleportToX = Constants.DEATH_SPAWN_POINT_X + misc.random(1);
               teleportToY = Constants.DEATH_SPAWN_POINT_Y - misc.random(1);
            } else {
               teleportToX = Constants.STARTING_SPAWN_POINT_X;
               teleportToY = Constants.STARTING_SPAWN_POINT_Y;
            }[/code]

Replace that with this:

[code]            if (QH().q1 == 15 &amp;&amp; safe == 0) {
               teleportToX = Constants.DEATH_SPAWN_POINT_X + misc.random(1);
               teleportToY = Constants.DEATH_SPAWN_POINT_Y - misc.random(1);
            } else if (safe == 3) {
               teleportToX = 2402 - misc.random(6);
               teleportToY = 5174 - misc.random(1);
               PlayerHandler.getCount();
            } else {
               teleportToX = Constants.STARTING_SPAWN_POINT_X;
               teleportToY = Constants.STARTING_SPAWN_POINT_Y;
            }[/code]

Scroll down a little until you see &quot;CAM().sendMessage(&quot;Oh dear you have died!.&quot;);&quot; Directly below that line add this:

[code]FP().checkCount();[/code]

That should be it for client.java, if not tell me.


[b]Step 6:[/b]

Add this to AtObjects.java

[code]      case 9369:
   if (c.absX == 2399 &amp;&amp; c.absY == 5177)
   {
      c.teleportToX = 2399;
      c.teleportToY = 5175;
      if (server.Pits == 0 &amp;&amp; !c.FP().gameInProgress())
      {
      c.FP().startGame();
      }
   }
   if (c.absX == 2399 &amp;&amp; c.absY == 5175)
   {
      c.teleportToX = 2399;
      c.teleportToY = 5177;
   }
break;[/code]


[b]Step 7:[/b]

Compile and Run.



That should be it, but if i forgot something or if you get errors please tell me!</description>
    
    <lastBuildDate>Fri, 23 Mar 2012 17:46:04 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/fight-pits/334052.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Fight Pits</title>
        <dc:creator><![CDATA[@i_do_skill i do skill]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/i_do_skill">@i_do_skill</a> wrote:</p>
          <blockquote>
              <p>i’m stuck in step 5, whenever i add this:</p>
<p>public FightPits FightPits = new FightPits(this);<br>
public FightPits FP() {<br>
return FightPits;<br>
}</p>
<p>I get an error:</p>
<p>client.java:300: cannot find symbol<br>
symbol : class FightPits<br>
Location: class client<br>
public FightPits Fightpits = new Fightpits;<br>
^<br>
client.java:301: cannot find symbol<br>
symbol : class FightPits<br>
Location: class client<br>
public FightPits Fightpits FP&lt;&gt; {<br>
^<br>
client.java:300: cannot find symbol<br>
symbol : class FightPits<br>
Location: class client<br>
public FightPits Fightpits = new Fightpits;<br>
^</p>
<p>3 errors<br>
Finished!<br>
Press any key to continue . . .</p>
<p>Can you please help me fix this, although im sure im doing something stupid</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/fight-pits/334052/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/fight-pits/334052/6</link>
        <pubDate>Fri, 23 Mar 2012 17:46:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-334052-6</guid>
        <source url="https://forum.moparisthebest.com/t/fight-pits/334052.rss">Fight Pits</source>
      </item>
      <item>
        <title>Fight Pits</title>
        <dc:creator><![CDATA[@John459 John459]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/john459">@John459</a> wrote:</p>
          <blockquote>
              <p>Ty everyone <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>The Elve Age, Oblisks do not work, because this is a base. Everything else does though.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/fight-pits/334052/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/fight-pits/334052/5</link>
        <pubDate>Thu, 25 Mar 2010 23:17:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-334052-5</guid>
        <source url="https://forum.moparisthebest.com/t/fight-pits/334052.rss">Fight Pits</source>
      </item>
      <item>
        <title>Fight Pits</title>
        <dc:creator><![CDATA[@the_elve_age the elve age]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_elve_age">@the_elve_age</a> wrote:</p>
          <blockquote>
              <p>Does this work correctly? With wait timers, obelisks, ect.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/fight-pits/334052/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/fight-pits/334052/4</link>
        <pubDate>Thu, 25 Mar 2010 19:38:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-334052-4</guid>
        <source url="https://forum.moparisthebest.com/t/fight-pits/334052.rss">Fight Pits</source>
      </item>
      <item>
        <title>Fight Pits</title>
        <dc:creator><![CDATA[@NewbieNewty Newty]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/newbienewty">@NewbieNewty</a> wrote:</p>
          <blockquote>
              <p>Not bad, I plan on adding this to my server to be honest.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/fight-pits/334052/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/fight-pits/334052/3</link>
        <pubDate>Thu, 25 Mar 2010 17:13:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-334052-3</guid>
        <source url="https://forum.moparisthebest.com/t/fight-pits/334052.rss">Fight Pits</source>
      </item>
      <item>
        <title>Fight Pits</title>
        <dc:creator><![CDATA[@spy_man47 spy man47]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/spy_man47">@spy_man47</a> wrote:</p>
          <blockquote>
              <p>Oh! Great tutorial!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/fight-pits/334052/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/fight-pits/334052/2</link>
        <pubDate>Thu, 25 Mar 2010 15:48:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-334052-2</guid>
        <source url="https://forum.moparisthebest.com/t/fight-pits/334052.rss">Fight Pits</source>
      </item>
      <item>
        <title>Fight Pits</title>
        <dc:creator><![CDATA[@John459 John459]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/john459">@John459</a> wrote:</p>
          <blockquote>
              <p>[b]Source tested on: Devo 2.7, should work on others too.</p>
<p>Purpose: Creating a good Fight Pits base that doesn’t use the process <span class="bbcode-u">At All</span></p>
<p>Sorry if the codes look a little messy. I use notepad++ and it doesn’t always transfer well.[/b]</p>
<p><span class="bbcode-b">Step 1:</span><br>
If you already have a folder named Minigames skip this step!</p>
<p>Go into your Players folder, and make a new folder named Minigames. Next, go into Client.java and add this import:</p>
<pre><code class="lang-auto">import server.players.Minigames.*;</code></pre>
<p><span class="bbcode-b"><br>
Step 2:</span></p>
<p>Make a new file in your Minigames folder named FightPits.java and add this in it. if you read it you will see that I explain everything in it.</p>
<p>[code]package server.players.Minigames;</p>
<p>import server.<em>;<br>
import server.players.</em>;<br>
import server.items.<em>;<br>
import server.util.</em>;<br>
import server.world.<em>;<br>
import server.npcs.</em>;<br>
import server.players.Minigames.*;</p>
<p>public class FightPits {<br>
public client c;</p>
<pre><code>public FightPits(client c) {
  this.c = c;
</code></pre>
<p>}</p>
<p>public boolean inPits()<br>
{<br>
/**<br>
*Checks to see if the player is currently in the fightPits fighting area.<br>
**/<br>
if (c.absX &gt;= 2364 &amp;&amp; c.absY &gt;= 5122 &amp;&amp; c.absX &lt;= 2430 &amp;&amp; c.absY &lt;= 5168)<br>
{<br>
return true;<br>
}<br>
else<br>
{<br>
return false;<br>
}<br>
}</p>
<p>public boolean pitsWaiting()<br>
{<br>
/**<br>
*Checks to see if the player is in the pits waiting area.<br>
**/<br>
if (c.absX &gt;= 2393 &amp;&amp; c.absY &gt;= 5169 &amp;&amp; c.absX &lt;= 2404 &amp;&amp; c.absY &lt;= 5175)<br>
{<br>
return true;<br>
}<br>
else<br>
{<br>
return false;<br>
}<br>
}</p>
<p>public boolean gameInProgress()<br>
{<br>
/**<br>
*Checks to see if a game is currently going on.<br>
*It does this by counting the players in the FightPits area.<br>
*If there is 1 or more player, then there is a game in session.<br>
**/<br>
if (PlayerHandler.getCount() &gt; 0)<br>
{<br>
return true;<br>
}<br>
else<br>
{<br>
return false;<br>
}<br>
}</p>
<p>public void Winner()<br>
{<br>
/**<br>
*Rewards winner, prepares to start next game<br>
**/<br>
c.sM("<a class="mention" href="/u/red">@red</a>@You Win!");<br>
c.teleportToX = 2399;<br>
c.teleportToY = 5177;<br>
c.addItem(995, misc.random(10000) * server.pAmount);<br>
c.playerLevel[3] = c.getLevelForXP(c.playerXP[3]);<br>
server.registerEvent(new Event(20000)<br>
{<br>
public void execute()<br>
{<br>
server.deregisterEvent(this);<br>
startGame();<br>
}<br>
});<br>
}</p>
<p>public void checkCount()<br>
{<br>
/**<br>
*Checks how many people are in the FightPits<br>
*If there is only one player, then it activates the Winner method, which rewards the player.<br>
<strong>/<br>
client k = (client) server.playerHandler.players[c.KillerId];<br>
if (k.FP().inPits())<br>
{<br>
if (PlayerHandler.getCount() &lt;= 2)<br>
{<br>
k.FP().Winner();<br>
}<br>
}<br>
}<br>
public void checkCount2()<br>
{<br>
/</strong><br>
*Same as above, but a diffrent way to check count.<br>
*You will see what this method is used for later.<br>
**/<br>
if (inPits())<br>
{<br>
if (PlayerHandler.getCount() &lt;= 1)<br>
{<br>
Winner();<br>
}<br>
}<br>
}</p>
<pre><code>     public void startGame()
     {
</code></pre>
<p>/**<br>
*Attempts to start the game.<br>
<strong>/<br>
if (PlayerHandler.waitingCount() &lt; 1)<br>
{<br>
server.Pits = 0;<br>
c.sM(“The game will begin when there are two or more players.”);<br>
return;<br>
}<br>
for (Player p : c.handler.players)<br>
{<br>
if ((p == null) || !p.isActive)<br>
continue;<br>
final client temp = (client) p;<br>
server.Pits = 1;<br>
if (temp.FP().pitsWaiting())<br>
{<br>
temp.sM(“Game begining shortly.”);<br>
}<br>
server.registerEvent(new Event(20000)<br>
{<br>
public void execute()<br>
{<br>
server.deregisterEvent(this);<br>
if (temp.FP().pitsWaiting())<br>
{<br>
if (PlayerHandler.waitingCount() &lt; 2)<br>
{<br>
server.Pits = 0;<br>
temp.sM(“The game will begin when there are two or more players.”);<br>
startGame();<br>
return;<br>
}<br>
server.pAmount = PlayerHandler.waitingCount();<br>
temp.teleportToX = 2397 - misc.random(5);<br>
temp.teleportToY = 5158 - misc.random(5);<br>
temp.safe = 3;<br>
if (c.safe &gt; 0)<br>
pitsInter();<br>
}<br>
}<br>
});<br>
}<br>
}<br>
public void pitsInter()<br>
{<br>
/</strong><br>
*Shows the Enemies left interface.<br>
*Also updates the interface every two seconds<br>
*Checks the number of players in-game aswell.<br>
**/<br>
server.registerEvent(new Event(2000)<br>
{<br>
public void execute()<br>
{<br>
server.deregisterEvent(this);<br>
c.setInterfaceWalkable(6673);<br>
c.CAM().sendFrame126("<a class="mention" href="/u/red">@red</a>@Enemies Left: " + (PlayerHandler.getCount() - 1), 6570);<br>
c.CAM().sendFrame126("", 6571);<br>
c.CAM().sendFrame126("", 6572);<br>
c.CAM().sendFrame126("", 6664);<br>
checkCount2();<br>
pitsInter();<br>
}<br>
});<br>
}</p>
<p>}[/code]</p>
<p>This is a great method to use because it <span class="bbcode-b">DOES NOT USE THE SERVER’S PROCESS AT ALL.</span></p>
<p><span class="bbcode-b">Step 3:</span></p>
<p>Open server.java and add these ints:</p>
<pre><code class="lang-auto">public static int Pits, pAmount = 0;</code></pre>
<p><span class="bbcode-b"><br>
Step 4:</span></p>
<p>Open PlayerHandler.java and add these:</p>
<p><code>   public static int getCount() {
      int count = 0;
      for (int i = 0; i &lt; players.length; i++) {
         if ((players[i] != null) &amp;&amp; !players[i].disconnected) {
            if (players[i].absX &gt;= 2364 &amp;&amp; players[i].absY &gt;= 5122 &amp;&amp; players[i].absX &lt;= 2430 &amp;&amp; players[i].absY &lt;= 5168)
            {
               count++;
            }
         }
      }
      return count;
   }
   public static int waitingCount() {
      int count = 0;
      for (int i = 0; i &lt; players.length; i++) {
         if ((players[i] != null) &amp;&amp; !players[i].disconnected) {
            if (players[i].absX &gt;= 2393 &amp;&amp; players[i].absY &gt;= 5169 &amp;&amp; players[i].absX &lt;= 2404 &amp;&amp; players[i].absY &lt;= 5175)
            {
               count++;
            }
         }
      }
      return count;
   }</code></p>
<p>Those are used for counting the number of players in the fighting area, and the waiting area.</p>
<p><span class="bbcode-b">Step 5:</span></p>
<p>Open Client.java and add this:</p>
<p><code>public FightPits FightPits = new FightPits(this);
public FightPits FP() {
return FightPits;
}</code></p>
<p>Next add this:</p>
<p><code>      public void sM(String text)
      {
         CAM().sendMessage(text);
      }</code></p>
<p>Then add this:</p>
<pre><code class="lang-auto">public int safe = 0;</code></pre>
<p>Now go to “public void youdied()” and add this at the top:</p>
<p><code>if (safe &gt; 0)
{
   return;
}</code></p>
<p>Now search for “if (deathStage == 3) {” You will see something like this:</p>
<p><code>            if (QH().q1 == 15) {
               teleportToX = Constants.DEATH_SPAWN_POINT_X + misc.random(1);
               teleportToY = Constants.DEATH_SPAWN_POINT_Y - misc.random(1);
            } else {
               teleportToX = Constants.STARTING_SPAWN_POINT_X;
               teleportToY = Constants.STARTING_SPAWN_POINT_Y;
            }</code></p>
<p>Replace that with this:</p>
<p><code>            if (QH().q1 == 15 &amp;&amp; safe == 0) {
               teleportToX = Constants.DEATH_SPAWN_POINT_X + misc.random(1);
               teleportToY = Constants.DEATH_SPAWN_POINT_Y - misc.random(1);
            } else if (safe == 3) {
               teleportToX = 2402 - misc.random(6);
               teleportToY = 5174 - misc.random(1);
               PlayerHandler.getCount();
            } else {
               teleportToX = Constants.STARTING_SPAWN_POINT_X;
               teleportToY = Constants.STARTING_SPAWN_POINT_Y;
            }</code></p>
<p>Scroll down a little until you see “CAM().sendMessage(“Oh dear you have died!.”);” Directly below that line add this:</p>
<pre><code class="lang-auto">FP().checkCount();</code></pre>
<p>That should be it for client.java, if not tell me.</p>
<p><span class="bbcode-b">Step 6:</span></p>
<p>Add this to AtObjects.java</p>
<p><code>      case 9369:
   if (c.absX == 2399 &amp;&amp; c.absY == 5177)
   {
      c.teleportToX = 2399;
      c.teleportToY = 5175;
      if (server.Pits == 0 &amp;&amp; !c.FP().gameInProgress())
      {
      c.FP().startGame();
      }
   }
   if (c.absX == 2399 &amp;&amp; c.absY == 5175)
   {
      c.teleportToX = 2399;
      c.teleportToY = 5177;
   }
break;</code></p>
<p><span class="bbcode-b">Step 7:</span></p>
<p>Compile and Run.</p>
<p>That should be it, but if i forgot something or if you get errors please tell me!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/fight-pits/334052/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/fight-pits/334052/1</link>
        <pubDate>Thu, 25 Mar 2010 00:17:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-334052-1</guid>
        <source url="https://forum.moparisthebest.com/t/fight-pits/334052.rss">Fight Pits</source>
      </item>
  </channel>
</rss>
