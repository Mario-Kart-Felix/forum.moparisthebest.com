<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>New package &quot;Jagex3&quot; [546]</title>
    <link>https://forum.moparisthebest.com/t/new-package-jagex3-546/279240</link>
    <description>Jagex added a new package: jagex3\jagmisc\jagmisc

Class26_Sub2.java and Applet_Sub1.java uses the new class.

They&#39;ve also added a custom game library called jaggl.

They added new dll&#39;s as well.

jaggl.dll
jagmisc.dll

[code]package jagex3.jagmisc;


public class jagmisc
{

	public jagmisc()
	{
	}

	public static native long nanoTime();

	public static void quit()
	{
		try
		{
			Quit0();
			return;
		}
		catch(RuntimeException runtimeexception)
		{
			throw runtimeexception;
		}
	}

	public static native boolean init();

	private static native void Quit0();
}[/code]


~~ Zhydrax</description>
    
    <lastBuildDate>Tue, 23 Jun 2009 13:50:05 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>New package &quot;Jagex3&quot; [546]</title>
        <dc:creator><![CDATA[@Mopman Mopman]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mopman">@Mopman</a> wrote:</p>
          <blockquote>
              <p>So yeah, I have no idea what the fuck I meant, I’m sure I had some reason for saying that <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/36">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/36</link>
        <pubDate>Tue, 23 Jun 2009 13:50:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-279240-36</guid>
        <source url="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240.rss">New package &quot;Jagex3&quot; [546]</source>
      </item>
      <item>
        <title>New package &quot;Jagex3&quot; [546]</title>
        <dc:creator><![CDATA[@the_bank the bank]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_bank">@the_bank</a> wrote:</p>
          <blockquote>
              <p>[quote=“Mopman, post:33, topic:279240”]I assume you mean the other way around, since the code that was posted is C++ :/[/quote]No, the code posted is in C.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/35">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/35</link>
        <pubDate>Tue, 23 Jun 2009 13:46:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-279240-35</guid>
        <source url="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240.rss">New package &quot;Jagex3&quot; [546]</source>
      </item>
      <item>
        <title>New package &quot;Jagex3&quot; [546]</title>
        <dc:creator><![CDATA[@unlimitedorb unlimitedorb]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unlimitedorb">@unlimitedorb</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="33" data-topic="279240">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/mopman/40/33_1.png" class="avatar"> Mopman:</div>
<blockquote>
<p>I assume you mean the other way around, since the code that was posted is C++ <img src="https://forum.moparisthebest.com/images/emoji/twitter/confused.png?v=5" title=":confused:" class="emoji" alt=":confused:"></p>
</blockquote>
</aside>
<p>I don’t know C++, but I do know C… I don’t see anything there that isn’t a feature of ANSI C?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/34">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/34</link>
        <pubDate>Tue, 23 Jun 2009 11:59:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-279240-34</guid>
        <source url="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240.rss">New package &quot;Jagex3&quot; [546]</source>
      </item>
      <item>
        <title>New package &quot;Jagex3&quot; [546]</title>
        <dc:creator><![CDATA[@Mopman Mopman]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mopman">@Mopman</a> wrote:</p>
          <blockquote>
              <p>I assume you mean the other way around, since the code that was posted is C++ <img src="https://forum.moparisthebest.com/images/emoji/twitter/confused.png?v=5" title=":confused:" class="emoji" alt=":confused:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/33">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/33</link>
        <pubDate>Tue, 23 Jun 2009 11:43:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-279240-33</guid>
        <source url="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240.rss">New package &quot;Jagex3&quot; [546]</source>
      </item>
      <item>
        <title>New package &quot;Jagex3&quot; [546]</title>
        <dc:creator><![CDATA[@qauters qauters]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/qauters">@qauters</a> wrote:</p>
          <blockquote>
              <p>[quote=“Unhandled, post:31, topic:279240”]Obviously not recompilable, but still fairly readable.<br>
I’m not seeing any usages of GetActiveWindow(), or even GetProcAddress(), unless they are in any of the methods that failed to decompile.<br>
So yeah, no bot detection…yet.[/quote]<br>
Those functions are used by “_CRT_INIT” which is automatically loaded in DLLMain, not by the dll itself (it’s compiler generated code in order to make it work)</p>
<p>[quote=“la­wl, post:30, topic:279240”][quote author=qauters link=topic=368545.msg2836627#msg2836627 date=1245709768]</p>
<aside class="quote no-group">
<blockquote>
<p>What a mess.  Is the file indeed encrypted, or does IDA Pro just suck?</p>
</blockquote>
</aside>
<p>It’s what happens if you decompile c++ into c.<br>
[/quote]<br>
c++ into c? what[/quote]<br>
c++ was compiled to binary, binary is decompiled back to c.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/32">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/32</link>
        <pubDate>Tue, 23 Jun 2009 10:18:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-279240-32</guid>
        <source url="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240.rss">New package &quot;Jagex3&quot; [546]</source>
      </item>
      <item>
        <title>New package &quot;Jagex3&quot; [546]</title>
        <dc:creator><![CDATA[@Unhandled Unhandled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unhandled">@Unhandled</a> wrote:</p>
          <blockquote>
              <p>Obviously not recompilable, but still fairly readable.<br>
I’m not seeing any usages of GetActiveWindow(), or even GetProcAddress(), unless they are in any of the methods that failed to decompile.<br>
So yeah, no bot detection…yet.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/31">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/31</link>
        <pubDate>Tue, 23 Jun 2009 01:12:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-279240-31</guid>
        <source url="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240.rss">New package &quot;Jagex3&quot; [546]</source>
      </item>
      <item>
        <title>New package &quot;Jagex3&quot; [546]</title>
        <dc:creator><![CDATA[@lawl lawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lawl">@lawl</a> wrote:</p>
          <blockquote>
              <p>[quote=“qauters, post:27, topic:279240”][quote author=the bank link=topic=368545.msg2836586#msg2836586 date=1245707731]<br>
What a mess.  Is the file indeed encrypted, or does IDA Pro just suck?<br>
[/quote]<br>
It’s what happens if you decompile c++ into c.[/quote]<br>
c++ into c? what</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/30">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/30</link>
        <pubDate>Mon, 22 Jun 2009 23:43:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-279240-30</guid>
        <source url="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240.rss">New package &quot;Jagex3&quot; [546]</source>
      </item>
      <item>
        <title>New package &quot;Jagex3&quot; [546]</title>
        <dc:creator><![CDATA[@the_bank the bank]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_bank">@the_bank</a> wrote:</p>
          <blockquote>
              <p>[quote=“Mopman, post:28, topic:279240”]Btw, how did you decide it was never loaded? It was loaded here earlier :/[/quote]Huh?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/29">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/29</link>
        <pubDate>Mon, 22 Jun 2009 23:16:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-279240-29</guid>
        <source url="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240.rss">New package &quot;Jagex3&quot; [546]</source>
      </item>
      <item>
        <title>New package &quot;Jagex3&quot; [546]</title>
        <dc:creator><![CDATA[@Mopman Mopman]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mopman">@Mopman</a> wrote:</p>
          <blockquote>
              <p>Ugh, decompiled C++, wonderful.</p>
<p>Btw, how did you decide it was never loaded? It was loaded here earlier <img src="https://forum.moparisthebest.com/images/emoji/twitter/confused.png?v=5" title=":confused:" class="emoji" alt=":confused:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/28">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/28</link>
        <pubDate>Mon, 22 Jun 2009 23:09:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-279240-28</guid>
        <source url="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240.rss">New package &quot;Jagex3&quot; [546]</source>
      </item>
      <item>
        <title>New package &quot;Jagex3&quot; [546]</title>
        <dc:creator><![CDATA[@qauters qauters]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/qauters">@qauters</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="26" data-topic="279240">
<div class="title">
<div class="quote-controls"></div>
 the bank:</div>
<blockquote>
<p>What a mess.  Is the file indeed encrypted, or does IDA Pro just suck?</p>
</blockquote>
</aside>
<p>It’s what happens if you decompile c++ into c. All method names are lost, so it just uses offset as names <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"><br>
But still I can quite clearly see what it does, can’t you?</p>
<p>Ohh, btw:<br>
A single user license of the Hex-Rays Decompiler is 2299USD (1500EUR).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/27">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/27</link>
        <pubDate>Mon, 22 Jun 2009 22:29:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-279240-27</guid>
        <source url="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240.rss">New package &quot;Jagex3&quot; [546]</source>
      </item>
      <item>
        <title>New package &quot;Jagex3&quot; [546]</title>
        <dc:creator><![CDATA[@the_bank the bank]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_bank">@the_bank</a> wrote:</p>
          <blockquote>
              <p>What a mess.  Is the file indeed encrypted, or does IDA Pro just suck?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/26">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/26</link>
        <pubDate>Mon, 22 Jun 2009 21:55:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-279240-26</guid>
        <source url="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240.rss">New package &quot;Jagex3&quot; [546]</source>
      </item>
      <item>
        <title>New package &quot;Jagex3&quot; [546]</title>
        <dc:creator><![CDATA[@qauters qauters]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/qauters">@qauters</a> wrote:</p>
          <blockquote>
              <p>If you happen to decompile the source you will see:</p>
<pre><code class="lang-auto">/* This file has been generated by the Hex-Rays decompiler.
   Copyright (c) 2007 Hex-Rays sprl &lt;info@hex-rays.com&gt;

   Detected compiler: Visual C++
*/

#include &lt;windows.h&gt;
#include &lt;defs.h&gt;


//-------------------------------------------------------------------------
// Data declarations

extern _UNKNOWN sub_10001E9F;
extern _UNKNOWN sub_10002145;
extern _UNKNOWN sub_10007180;
extern _UNKNOWN unk_1000926C; // weak
extern _UNKNOWN unk_10009274; // weak
extern HANDLE hObject; // idb
extern _UNKNOWN unk_1000A324; // weak
extern _UNKNOWN unk_1000A33C; // weak
extern int dword_1000A360; // weak
extern struct _RTL_CRITICAL_SECTION CriticalSection; // idb
extern HANDLE dword_1000AC38; // idb
extern HANDLE dword_1000AC3C; // idb
extern HANDLE dword_1000AC40; // idb
extern HANDLE dword_1000AC44; // idb
extern HANDLE hEvent; // idb
extern int dword_1000AC50; // weak
extern int dword_1000AC54; // weak
extern int dword_1000AC58; // weak

//-------------------------------------------------------------------------
// Function declarations

BOOL __stdcall DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved); // idb
int __cdecl sub_10001020();
BOOL __cdecl sub_10001080();
// _DWORD _mtinitlocks(); weak
void __cdecl sub_10001180();
signed int __cdecl sub_100011D0();
signed int __stdcall Java_jagex3_jagmisc_jagmisc_init(int a1, int a2);
__int64 __stdcall Java_jagex3_jagmisc_jagmisc_nanoTime(int a1, int a2);
void __stdcall Java_jagex3_jagmisc_jagmisc_Quit0(int a1, int a2);
// _DWORD _ftol2(); weak
// int __usercall sub_10001505&lt;eax&gt;(int a1&lt;ebp&gt;);
// void __usercall sub_10001519(int a1&lt;ebp&gt;);
// int __cdecl _beginthread(int, DWORD dwStackSize, int); idb
// void __cdecl _exit(int Code); idb
// int __cdecl _XcptFilter(int, struct _EXCEPTION_POINTERS *ExceptionInfo); idb
void __cdecl sub_10002C3D();
void __cdecl sub_10002C81(); // idb
// _DWORD __cdecl _ld12cvt(_DWORD, _DWORD, _DWORD); weak
int __cdecl sub_100033B9(int a1, int a2);
int __cdecl sub_100033CF(int a1, int a2);
int __cdecl sub_100033E5(int a1, int a2);
int __cdecl sub_10003422(int a1, int a2);
signed int __cdecl sub_10003AE2();
// _DWORD __cdecl __strgtold12(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD); weak
// BOOL __stdcall QueryPerformanceCounter(LARGE_INTEGER *lpPerformanceCount); idb
// BOOL __stdcall QueryPerformanceFrequency(LARGE_INTEGER *lpFrequency); idb
// DWORD __stdcall WaitForMultipleObjects(DWORD nCount, const HANDLE *lpHandles, BOOL bWaitAll, DWORD dwMilliseconds); idb
// BOOL __stdcall SetEvent(HANDLE hEvent); idb
// DWORD __stdcall SetThreadAffinityMask(HANDLE hThread, DWORD dwThreadAffinityMask); idb
// HANDLE __stdcall GetCurrentThread(); idb
// DWORD __stdcall WaitForSingleObject(HANDLE hHandle, DWORD dwMilliseconds); idb
// void __stdcall InitializeCriticalSection(LPCRITICAL_SECTION lpCriticalSection); idb
// HANDLE __stdcall CreateEventA(LPSECURITY_ATTRIBUTES lpEventAttributes, BOOL bManualReset, BOOL bInitialState, LPCSTR lpName); idb
// void __stdcall LeaveCriticalSection(LPCRITICAL_SECTION lpCriticalSection); idb
// void __stdcall EnterCriticalSection(LPCRITICAL_SECTION lpCriticalSection); idb


//----- (10001000) --------------------------------------------------------
BOOL __stdcall DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)
{
  return 1;
}

//----- (10001020) --------------------------------------------------------
int __cdecl sub_10001020()
{
  int result; // eax@1
  int v1; // edx@4
  LARGE_INTEGER Frequency; // [sp+8h] [bp-8h]@1
  LARGE_INTEGER PerformanceCount; // [sp+0h] [bp-10h]@2

  dword_1000AC50 = 0;
  dword_1000AC54 = 0;
  result = QueryPerformanceFrequency(&amp;Frequency);
  if ( result )
  {
    result = QueryPerformanceCounter(&amp;PerformanceCount);
    if ( result )
    {
      if ( Frequency )
      {
        __asm
        {
          fild    qword ptr [ebp+PerformanceCount]
          fmul    ds:dbl_10008140
          fild    qword ptr [ebp+Frequency]
          fdivp   st(1), st
        }
        result = _ftol2();
        dword_1000AC50 = result;
        dword_1000AC54 = v1;
      }
    }
  }
  return result;
}

//----- (10001080) --------------------------------------------------------
BOOL __cdecl sub_10001080()
{
  HANDLE v1; // eax@1
  DWORD v2; // eax@2
  HANDLE Handles; // [sp+4h] [bp-8h]@2
  HANDLE v4; // [sp+8h] [bp-4h]@2
  DWORD v5; // [sp+0h] [bp-Ch]@2

  v1 = GetCurrentThread();
  SetThreadAffinityMask(v1, 1u);
  sub_10001020();
  while ( 1 )
  {
    SetEvent(hEvent);
    Handles = dword_1000AC38;
    v4 = dword_1000AC40;
    v2 = WaitForMultipleObjects(2u, &amp;Handles, 0, 0xFFFFFFFFu);
    v5 = v2;
    if ( v2 == 1 )
      break;
    if ( !v5 )
    {
      sub_10001020();
      SetEvent(dword_1000AC3C);
    }
  }
  return SetEvent(dword_1000AC44);
}

//----- (10001180) --------------------------------------------------------
void __cdecl sub_10001180()
{
  char v0; // zf@3

  if ( dword_1000AC58 )
  {
    v0 = dword_1000AC58-- == 1;
    if ( v0 )
    {
      SetEvent(dword_1000AC40);
      if ( !WaitForSingleObject(dword_1000AC44, 0x3E8u) )
        _mtinitlocks();
    }
  }
}

//----- (100011D0) --------------------------------------------------------
signed int __cdecl sub_100011D0()
{
  signed int result; // eax@2
  int v1; // eax@1

  v1 = dword_1000AC58++;
  if ( v1 )
  {
    result = 1;
  }
  else
  {
    hEvent = CreateEventA(0, 0, 0, 0);
    dword_1000AC38 = CreateEventA(0, 0, 0, 0);
    dword_1000AC3C = CreateEventA(0, 0, 0, 0);
    dword_1000AC40 = CreateEventA(0, 0, 0, 0);
    dword_1000AC44 = CreateEventA(0, 0, 0, 0);
    InitializeCriticalSection(&amp;CriticalSection);
    hObject = (HANDLE)_beginthread((int)sub_10001080, 0, 0);
    if ( !WaitForSingleObject(hEvent, 0x3E8u)
      &amp;&amp; hEvent
      &amp;&amp; dword_1000AC38
      &amp;&amp; dword_1000AC3C
      &amp;&amp; dword_1000AC40
      &amp;&amp; dword_1000AC44
      &amp;&amp; hObject != (HANDLE)-1 )
    {
      result = 1;
    }
    else
    {
      _mtinitlocks();
      result = 0;
    }
  }
  return result;
}

//----- (100012E0) --------------------------------------------------------
signed int __stdcall Java_jagex3_jagmisc_jagmisc_init(int a1, int a2)
{
  return sub_100011D0();
}

//----- (100012F0) --------------------------------------------------------
__int64 __stdcall Java_jagex3_jagmisc_jagmisc_nanoTime(int a1, int a2)
{
  __int64 result; // qax@2
  __int64 v3; // [sp+0h] [bp-8h]@3

  if ( dword_1000AC58 )
  {
    EnterCriticalSection(&amp;CriticalSection);
    v3 = 0i64;
    SetEvent(dword_1000AC38);
    if ( !WaitForSingleObject(dword_1000AC3C, 0x3E8u) )
      v3 = *(_QWORD *)&amp;dword_1000AC50;
    LeaveCriticalSection(&amp;CriticalSection);
    result = v3;
  }
  else
  {
    result = 0i64;
  }
  return result;
}

//----- (10001370) --------------------------------------------------------
void __stdcall Java_jagex3_jagmisc_jagmisc_Quit0(int a1, int a2)
{
  Java_jagex3_jagmisc_jagmisc_nanoTime(a1, a2);
  sub_10001180();
}

//----- (10001505) --------------------------------------------------------
int __usercall sub_10001505&lt;eax&gt;(int a1&lt;ebp&gt;)
{
  struct _EXCEPTION_POINTERS *v2; // eax@1
  int v3; // ecx@1

  v2 = *(struct _EXCEPTION_POINTERS **)(a1 - 20);
  v3 = v2-&gt;ExceptionRecord-&gt;ExceptionCode;
  *(_DWORD *)(a1 - 28) = v2-&gt;ExceptionRecord-&gt;ExceptionCode;
  return _XcptFilter(v3, v2);
}

//----- (10001519) --------------------------------------------------------
void __usercall sub_10001519(int a1&lt;ebp&gt;)
{
  _exit(*(_DWORD *)(a1 - 28));
}

//----- (10001E9F) --------------------------------------------------------
#error "10001EA1: invalid basic block (funcsize=2)"

//----- (10002145) --------------------------------------------------------
#error "10002149: invalid basic block (funcsize=3)"

//----- (10002C3D) --------------------------------------------------------
void __cdecl sub_10002C3D()
{
  unsigned int v0; // [sp+Ch] [bp-1Ch]@1
  CPPEH_RECORD ms_exc; // [sp+10h] [bp-18h]@3

  v0 = (unsigned int)&amp;unk_1000926C;
  while ( v0 &lt; (unsigned int)&amp;unk_1000926C )
  {
    ms_exc.disabled = 0;
    if ( *(_DWORD *)v0 )
      (*(int (**)(void))v0)();
    v0 += 4;
  }
}

//----- (10002C81) --------------------------------------------------------
void __cdecl sub_10002C81()
{
  unsigned int v0; // [sp+Ch] [bp-1Ch]@1
  CPPEH_RECORD ms_exc; // [sp+10h] [bp-18h]@3

  v0 = (unsigned int)&amp;unk_10009274;
  while ( v0 &lt; (unsigned int)&amp;unk_10009274 )
  {
    ms_exc.disabled = 0;
    if ( *(_DWORD *)v0 )
      (*(int (**)(void))v0)();
    v0 += 4;
  }
}

//----- (100033B9) --------------------------------------------------------
int __cdecl sub_100033B9(int a1, int a2)
{
  return _ld12cvt(a1, a2, &amp;unk_1000A324);
}

//----- (100033CF) --------------------------------------------------------
int __cdecl sub_100033CF(int a1, int a2)
{
  return _ld12cvt(a1, a2, &amp;unk_1000A33C);
}

//----- (100033E5) --------------------------------------------------------
int __cdecl sub_100033E5(int a1, int a2)
{
  int v3; // [sp+10h] [bp-4h]@1
  char v4; // [sp+4h] [bp-10h]@1
  char v5; // [sp+0h] [bp-14h]@1

  v3 = dword_1000A360;
  __strgtold12(&amp;v4, &amp;v5, a2, 0, 0, 0, 0);
  return sub_100033B9((int)&amp;v4, a1);
}

//----- (10003422) --------------------------------------------------------
int __cdecl sub_10003422(int a1, int a2)
{
  int v3; // [sp+10h] [bp-4h]@1
  char v4; // [sp+4h] [bp-10h]@1
  char v5; // [sp+0h] [bp-14h]@1

  v3 = dword_1000A360;
  __strgtold12(&amp;v4, &amp;v5, a2, 0, 0, 0, 0);
  return sub_100033CF((int)&amp;v4, a1);
}

//----- (10003AE2) --------------------------------------------------------
signed int __cdecl sub_10003AE2()
{
  return 1;
}

//----- (10007180) --------------------------------------------------------
#error "10007185: invalid basic block (funcsize=3)"

#error "There were 3 decompilation failure(s) on 20 function(s)"</code></pre>
<p>Anybody can see nothing in that can be used to detect bots.</p>
<p>The init methods just does what it says, it initialized a thread and some critical section in order to calculate the nanoTime.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/25">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/25</link>
        <pubDate>Mon, 22 Jun 2009 21:10:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-279240-25</guid>
        <source url="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240.rss">New package &quot;Jagex3&quot; [546]</source>
      </item>
      <item>
        <title>New package &quot;Jagex3&quot; [546]</title>
        <dc:creator><![CDATA[@the_bank the bank]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_bank">@the_bank</a> wrote:</p>
          <blockquote>
              <p>Here is some more documentation:</p>
<p>If you follow the “Quit0” method you will get the following assembly code, i have added a comment to the function calls that you have to follow</p>
<p><code>10001370 j&gt;/$  55                PUSH EBP
10001371   |.  8BEC              MOV EBP,ESP
10001373   |.  8B45 0C           MOV EAX,[ARG.2]
10001376   |.  50                PUSH EAX                                                      ; /Arg2 = 00000010
10001377   |.  8B4D 08           MOV ECX,[ARG.1]                                               ; |
1000137A   |.  51                PUSH ECX                                                      ; |Arg1 = 0006FFB4
1000137B   |.  E8 70FFFFFF       CALL jagmisc.Java_jagex3_jagmisc_jagmisc_nanoTime             ; \Java_jagex3_jagmisc_jagmisc_nanoTime
10001380   |.  E8 FBFDFFFF       CALL jagmisc.10001180				; FOLLOW THIS
10001385   |.  5D                POP EBP                                                       ;  kernel32.7C816FD7
10001386   \.  C2 0800           RETN 8
...
10001180   /$  55                PUSH EBP
10001181   |.  8BEC              MOV EBP,ESP
10001183   |.  833D 58AC0010 00  CMP DWORD PTR DS:[1000AC58],0
1000118A   |.  75 02             JNZ SHORT jagmisc.1000118E
1000118C   |.  EB 39             JMP SHORT jagmisc.100011C7
1000118E   |&gt;  A1 58AC0010       MOV EAX,DWORD PTR DS:[1000AC58]
10001193   |.  83E8 01           SUB EAX,1
10001196   |.  A3 58AC0010       MOV DWORD PTR DS:[1000AC58],EAX
1000119B   |.  74 02             JE SHORT jagmisc.1000119F
1000119D   |.  EB 28             JMP SHORT jagmisc.100011C7
1000119F   |&gt;  8B0D 40AC0010     MOV ECX,DWORD PTR DS:[1000AC40]
100011A5   |.  51                PUSH ECX                                                      ; /hEvent = 0006FFB4
100011A6   |.  FF15 0C800010     CALL DWORD PTR DS:[&lt;&amp;KERNEL32.SetEvent&gt;]                      ; \SetEvent
100011AC   |.  68 E8030000       PUSH 3E8                                                      ; /Timeout = 1000. ms
100011B1   |.  8B15 44AC0010     MOV EDX,DWORD PTR DS:[1000AC44]                               ; |
100011B7   |.  52                PUSH EDX                                                      ; |hObject = 7C90EB94
100011B8   |.  FF15 20800010     CALL DWORD PTR DS:[&lt;&amp;KERNEL32.WaitForSingleObject&gt;]           ; \WaitForSingleObject
100011BE   |.  85C0              TEST EAX,EAX
100011C0   |.  75 05             JNZ SHORT jagmisc.100011C7
100011C2   |.  E8 49FFFFFF       CALL jagmisc.10001110                                         ;  FOLLOW THIS!
100011C7   |&gt;  5D                POP EBP                                                       ;  kernel32.7C816FD7
100011C8   \.  C3                RETN
...
10001110   /$  55                PUSH EBP
10001111   |.  8BEC              MOV EBP,ESP
10001113   |.  A1 30A00010       MOV EAX,DWORD PTR DS:[1000A030]
10001118   |.  50                PUSH EAX                                                      ; /hObject = 00000010
10001119   |.  FF15 1C800010     CALL DWORD PTR DS:[&lt;&amp;KERNEL32.CloseHandle&gt;]                   ; \CloseHandle
1000111F   |.  8B0D 48AC0010     MOV ECX,DWORD PTR DS:[1000AC48]
10001125   |.  51                PUSH ECX                                                      ; /hObject = 0006FFB4
10001126   |.  FF15 1C800010     CALL DWORD PTR DS:[&lt;&amp;KERNEL32.CloseHandle&gt;]                   ; \CloseHandle
1000112C   |.  8B15 38AC0010     MOV EDX,DWORD PTR DS:[1000AC38]
10001132   |.  52                PUSH EDX                                                      ; /hObject = 7C90EB94
10001133   |.  FF15 1C800010     CALL DWORD PTR DS:[&lt;&amp;KERNEL32.CloseHandle&gt;]                   ; \CloseHandle
10001139   |.  A1 3CAC0010       MOV EAX,DWORD PTR DS:[1000AC3C]
1000113E   |.  50                PUSH EAX                                                      ; /hObject = 00000010
1000113F   |.  FF15 1C800010     CALL DWORD PTR DS:[&lt;&amp;KERNEL32.CloseHandle&gt;]                   ; \CloseHandle
10001145   |.  8B0D 40AC0010     MOV ECX,DWORD PTR DS:[1000AC40]
1000114B   |.  51                PUSH ECX                                                      ; /hObject = 0006FFB4
1000114C   |.  FF15 1C800010     CALL DWORD PTR DS:[&lt;&amp;KERNEL32.CloseHandle&gt;]                   ; \CloseHandle
10001152   |.  8B15 44AC0010     MOV EDX,DWORD PTR DS:[1000AC44]
10001158   |.  52                PUSH EDX                                                      ; /hObject = 7C90EB94
10001159   |.  FF15 1C800010     CALL DWORD PTR DS:[&lt;&amp;KERNEL32.CloseHandle&gt;]                   ; \CloseHandle
1000115F   |.  68 20AC0010       PUSH jagmisc.1000AC20                                         ; /pCriticalSection = jagmisc.1000AC20
10001164   |.  FF15 18800010     CALL DWORD PTR DS:[&lt;&amp;KERNEL32.DeleteCriticalSection&gt;]         ; \DeleteCriticalSection
1000116A   |.  C705 58AC0010 000&gt;MOV DWORD PTR DS:[1000AC58],0
10001174   |.  5D                POP EBP                                                       ;  kernel32.7C816FD7
10001175   \.  C3                RETN</code></p>
<p>At this point it closes a handle to 6 objects, and also releases all resources of “jagmisc.1000AC20”.  We can see it also appears to use nanoTime, but what’s interesting is, if we look at the nanoTime() method:</p>
<p><code>100012F0 j&gt;/$  55                PUSH EBP
100012F1   |.  8BEC              MOV EBP,ESP
100012F3   |.  83EC 08           SUB ESP,8
100012F6   |.  833D 58AC0010 00  CMP DWORD PTR DS:[1000AC58],0
100012FD   |.  75 06             JNZ SHORT jagmisc.10001305
100012FF   |.  33C0              XOR EAX,EAX
10001301   |.  33D2              XOR EDX,EDX                                                   ;  ntdll.KiFastSystemCallRet
10001303   |.  EB 5D             JMP SHORT jagmisc.10001362
10001305   |&gt;  68 20AC0010       PUSH jagmisc.1000AC20                                         ; /pCriticalSection = jagmisc.1000AC20
1000130A   |.  FF15 30800010     CALL DWORD PTR DS:[&lt;&amp;KERNEL32.EnterCriticalSection&gt;]          ; \EnterCriticalSection
10001310   |.  C745 F8 00000000  MOV [LOCAL.2],0
10001317   |.  C745 FC 00000000  MOV [LOCAL.1],0
1000131E   |.  A1 38AC0010       MOV EAX,DWORD PTR DS:[1000AC38]
10001323   |.  50                PUSH EAX                                                      ; /hEvent = 00000010
10001324   |.  FF15 0C800010     CALL DWORD PTR DS:[&lt;&amp;KERNEL32.SetEvent&gt;]                      ; \SetEvent
1000132A   |.  68 E8030000       PUSH 3E8                                                      ; /Timeout = 1000. ms
1000132F   |.  8B0D 3CAC0010     MOV ECX,DWORD PTR DS:[1000AC3C]                               ; |
10001335   |.  51                PUSH ECX                                                      ; |hObject = 0006FFB4
10001336   |.  FF15 20800010     CALL DWORD PTR DS:[&lt;&amp;KERNEL32.WaitForSingleObject&gt;]           ; \WaitForSingleObject
1000133C   |.  85C0              TEST EAX,EAX
1000133E   |.  75 11             JNZ SHORT jagmisc.10001351
10001340   |.  8B15 50AC0010     MOV EDX,DWORD PTR DS:[1000AC50]
10001346   |.  8955 F8           MOV [LOCAL.2],EDX                                             ;  ntdll.KiFastSystemCallRet
10001349   |.  A1 54AC0010       MOV EAX,DWORD PTR DS:[1000AC54]
1000134E   |.  8945 FC           MOV [LOCAL.1],EAX
10001351   |&gt;  68 20AC0010       PUSH jagmisc.1000AC20                                         ; /pCriticalSection = jagmisc.1000AC20
10001356   |.  FF15 2C800010     CALL DWORD PTR DS:[&lt;&amp;KERNEL32.LeaveCriticalSection&gt;]          ; \LeaveCriticalSection
1000135C   |.  8B45 F8           MOV EAX,[LOCAL.2]
1000135F   |.  8B55 FC           MOV EDX,[LOCAL.1]
10001362   |&gt;  8BE5              MOV ESP,EBP
10001364   |.  5D                POP EBP                                                       ;  kernel32.7C816FD7
10001365   \.  C2 0800           RETN 8
</code></p>
<p>As you can see, nanoTime() both requests ownership of “jagmisc.1000AC20” then preforms some calculations, reaches the JNZ, but don’t worry the Z-flag will only be set if EAX = 0.  It then releases ownership of “jagmisc.1000AC20”.</p>
<p>In other words, it does not seem to check for any sort of macro system in the Quit0 or nanoTime methods.  I have done any documentation on init() yet though, and it appears to be the most likely choice for such a system.</p>
<p>init is called once in the client:</p>
<p><code>final void c(int i1)
    {
        int k1 = client.ob;
        p++;
        int j1 = -54 / ((42 - i1) / 44);
        if(e)
            break MISSING_BLOCK_LABEL_126;
        vf vf1 = pl.r.a(true, ec.n.getClass());
        if(k1 == 0) goto _L2; else goto _L1
_L1:
        uj.a(1, 100L);
_L2:
        if(vf1.f != 0)
            if(vf1.b != null)
            {
                throw (Throwable)vf1.b;
            } else
            {
                jagmisc.init();
                e = true;
                ke.i = qj.a((byte)-115);
                return;
            }
        if(true) goto _L1; else goto _L3
_L3:
        JVM INSTR pop ;
        return;
        RuntimeException runtimeexception;
        runtimeexception;
        throw v.a(runtimeexception, "ad.F(" + i1 + ')');
    }
</code>The class “ad” extends applet, so I suppose it’s possible that Jagex could be detecting things such as how the applet is loaded.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/24">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/24</link>
        <pubDate>Mon, 22 Jun 2009 16:28:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-279240-24</guid>
        <source url="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240.rss">New package &quot;Jagex3&quot; [546]</source>
      </item>
      <item>
        <title>New package &quot;Jagex3&quot; [546]</title>
        <dc:creator><![CDATA[@Unhandled Unhandled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unhandled">@Unhandled</a> wrote:</p>
          <blockquote>
              <p>haha, looking through a stringdump:</p>
<p>p:\Freestyle\jagmisc\native\win\jagmisc_2003\Release\jagmisc_2003.pdb<br>
also in jaggl.dll:<br>
p:\libs_v4s\jaggl\native\win\jag3d_2003\Release\jag3d_2003.pdb</p>
<p>It would appear they use visual studio (2003?).</p>
<p>(for those who don’t know pdb is a file used for debugging by visual studio)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/23">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/23</link>
        <pubDate>Mon, 22 Jun 2009 16:17:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-279240-23</guid>
        <source url="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240.rss">New package &quot;Jagex3&quot; [546]</source>
      </item>
      <item>
        <title>New package &quot;Jagex3&quot; [546]</title>
        <dc:creator><![CDATA[@the_bank the bank]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_bank">@the_bank</a> wrote:</p>
          <blockquote>
              <p>[quote=“Unhandled, post:20, topic:279240”]Have they actually written any native code or is it all glue code for native OS functions? I’d say its safe to assume nanoTime just bypasses Java’s System.nanoTime()…<br>
Also, has anyone tried this on Linux? Is it just a so instead of a dll?[/quote]I’m not sure, I will load up my linux box right now and see.  If it is a dll, ill compare the checksums.</p>
<p>[quote=“Ollie, post:19, topic:279240”]check if the library is being loaded, and if it isn’t, load it.[/quote]It’s not, the only references made to the functions in the library are made as static references.</p>
<p>Example:</p>
<p>in jagmisc.class:</p>
<p>[code]    private static native void Quit0();</p>
<pre><code>public static native boolean init();

public static native long nanoTime();[/code]
</code></pre>
<p>All calls are made like so:</p>
<p><code>import jagex3.jagmisc.jagmisc;
...
   long l = jagmisc.nanoTime();
...</code></p>
<p>So unless jagex has a custom way to load their libraries other than System.loadLibrary, it is never actually loaded.</p>
<p>[quote=“k00dr, post:21, topic:279240”]The import address table doesn’t really give out much information, because with GetModuleHandle and GetProcAddress they can make calls to any functions. It’s like checking the method references of a java classfile that invokes methods by reflection.</p>
<p>I have no time nor enough experience to analyze the code extensively, but looks pretty suspicious:</p>
<p>[code]<br>
1000592C   |.  68 DC880010       PUSH jagmisc.100088DC                                         ; /ProcNameOrOrdinal = “GetActiveWindow”<br>
10005931   |.  57                PUSH EDI                                                      ; |hModule = NULL<br>
10005932   |.  FFD6              CALL ESI                                                      ; \GetProcAddress<br>
10005934   |.  68 C8880010       PUSH jagmisc.100088C8                                         ; /ProcNameOrOrdinal = “GetLastActivePopup”<br>
10005939   |.  57                PUSH EDI                                                      ; |hModule = NULL<br>
1000593A   |.  A3 9CAF0010       MOV DWORD PTR DS:[1000AF9C],EAX                               ; |<br>
1000593F   |.  FFD6              CALL ESI                                                      ; \GetProcAddress<br>
10005941   |.  833D 8CAC0010 02  CMP DWORD PTR DS:[1000AC8C],2<br>
10005948   |.  A3 A0AF0010       MOV DWORD PTR DS:[1000AFA0],EAX</p>
<p>…</p>
<p>100059B2   |&gt;  A1 9CAF0010       MOV EAX,DWORD PTR DS:[1000AF9C]<br>
100059B7   |.  85C0              TEST EAX,EAX<br>
100059B9   |.  74 16             JE SHORT jagmisc.100059D1<br>
100059BB   |.  FFD0              CALL EAX<br>
100059BD   |.  8BD8              MOV EBX,EAX<br>
100059BF   |.  85DB              TEST EBX,EBX<br>
100059C1   |.  74 0E             JE SHORT jagmisc.100059D1<br>
100059C3   |.  A1 A0AF0010       MOV EAX,DWORD PTR DS:[1000AFA0]<br>
100059C8   |.  85C0              TEST EAX,EAX<br>
100059CA   |.  74 05             JE SHORT jagmisc.100059D1<br>
100059CC   |.  53                PUSH EBX<br>
100059CD   |.  FFD0              CALL EAX<br>
[/code][/quote]I must have missed that part, you are most certainly right.  I will run it in a debugger, both at loading the client legitimately and in a hacked loader and see if any of the flags change.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/22">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/22</link>
        <pubDate>Mon, 22 Jun 2009 15:49:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-279240-22</guid>
        <source url="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240.rss">New package &quot;Jagex3&quot; [546]</source>
      </item>
      <item>
        <title>New package &quot;Jagex3&quot; [546]</title>
        <dc:creator><![CDATA[@k00dr k00dr]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/k00dr">@k00dr</a> wrote:</p>
          <blockquote>
              <p>[quote=“the bank, post:18, topic:279240”]My first fear was a possible anti-cheat system which was stored native on the computer, which in itself would be easy for us to bypass, but we would have to know about it first.  After Jagex publicized their new “anti-macro” systems, found <a href="http://news.runescape.com/newsitem.ws?id=1937" data-bbcode="true" rel="nofollow noopener">here</a>, it proved that my fear of such a thing was plausible.</p>
<p>Here is some very generic and basic info I have documented on the new dynamic link library:</p>
<p>Functions:<br>
void Quit0()<br>
boolean init()<br>
long nanoTime()</p>
<p>All imports are from KERNEL32, and are as follows:</p>
<p>[code]function QueryPerformanceCounter(var lpPerformanceCount: TLargeInteger): BOOL;<br>
stdcall;<br>
external ‘kernel32.dll’ name ‘QueryPerformanceCounter’ index 556;</p>
<p>function QueryPerformanceFrequency(var lpFrequency: TLargeInteger): BOOL;<br>
stdcall;<br>
external ‘kernel32.dll’ name ‘QueryPerformanceFrequency’ index 557;</p>
<p>function WaitForMultipleObjects(nCount: DWORD; lpHandles: PWOHandleArray;<br>
bWaitAll: BOOL; dwMilliseconds: DWORD): DWORD; stdcall;<br>
external ‘kernel32.dll’ name ‘WaitForMultipleObjects’ index 764;</p>
<p>function SetEvent(hEvent: THandle): BOOL; stdcall;<br>
external ‘kernel32.dll’ name ‘SetEvent’ index 657;</p>
<p>function SetThreadAffinityMask(hThread: THandle;<br>
dwThreadAffinityMask: DWORD): DWORD; stdcall;<br>
external ‘kernel32.dll’ name ‘SetThreadAffinityMask’ index 688;</p>
<p>function GetCurrentThread: THandle; stdcall;<br>
external ‘kernel32.dll’ name ‘GetCurrentThread’ index 268;</p>
<p>procedure DeleteCriticalSection(var lpCriticalSection: TRTLCriticalSection);<br>
stdcall; external ‘kernel32.dll’ name ‘DeleteCriticalSection’ index 91;</p>
<p>function CloseHandle(hObject: THandle): BOOL; stdcall;<br>
external ‘kernel32.dll’ name ‘CloseHandle’ index 31;</p>
<p>function WaitForSingleObject(hHandle: THandle; dwMilliseconds: DWORD): DWORD;<br>
stdcall; external ‘kernel32.dll’ name ‘WaitForSingleObject’ index 766;</p>
<p>procedure InitializeCriticalSection(var lpCriticalSection:<br>
TRTLCriticalSection); stdcall;<br>
external ‘kernel32.dll’ name ‘InitializeCriticalSection’ index 454;</p>
<p>function CreateEvent(lpEventAttributes: PSecurityAttributes; bManualReset,<br>
bInitialState: BOOL; lpName: PAnsiChar): THandle; stdcall;<br>
external ‘kernel32.dll’ name ‘CreateEventA’ index 53;</p>
<p>procedure LeaveCriticalSection(var lpCriticalSection: TRTLCriticalSection);<br>
stdcall; external ‘kernel32.dll’ name ‘LeaveCriticalSection’ index 479;</p>
<p>procedure EnterCriticalSection(var lpCriticalSection: TRTLCriticalSection);<br>
stdcall; external ‘kernel32.dll’ name ‘EnterCriticalSection’ index 112;</p>
<p>procedure ExitThread(dwExitCode: DWORD); stdcall;<br>
external ‘kernel32.dll’ name ‘ExitThread’ index 142;</p>
<p>function GetLastError: DWORD; stdcall;<br>
external ‘kernel32.dll’ name ‘GetLastError’ index 302;</p>
<p>function ResumeThread(hThread: THandle): DWORD; stdcall;<br>
external ‘kernel32.dll’ name ‘ResumeThread’ index 597;</p>
<p>function CreateThread(lpThreadAttributes: Pointer; dwStackSize: DWORD;<br>
lpStartAddress: TFNThreadStartRoutine; lpParameter: Pointer;<br>
dwCreationFlags: DWORD; var lpThreadId: DWORD): THandle; stdcall;<br>
external ‘kernel32.dll’ name ‘CreateThread’ index 78;</p>
<p>function GetCurrentThreadId: DWORD; stdcall;<br>
external ‘kernel32.dll’ name ‘GetCurrentThreadId’ index 269;</p>
<p>function GetCommandLine: PAnsiChar; stdcall;<br>
external ‘kernel32.dll’ name ‘GetCommandLineA’ index 219;</p>
<p>function GetVersionEx(var lpVersionInformation: TOSVersionInfo): BOOL;<br>
stdcall; external ‘kernel32.dll’ name ‘GetVersionExA’ index 400;</p>
<p>function GetProcAddress(hModule: HMODULE; lpProcName: LPCSTR): FARPROC;<br>
stdcall; external ‘kernel32.dll’ name ‘GetProcAddress’ index 340;</p>
<p>function GetModuleHandle(lpModuleName: PAnsiChar): HMODULE; stdcall;<br>
external ‘kernel32.dll’ name ‘GetModuleHandleA’ index 315;</p>
<p>function TlsAlloc: DWORD; stdcall;<br>
external ‘kernel32.dll’ name ‘TlsAlloc’ index 721;</p>
<p>procedure SetLastError(dwErrCode: DWORD); stdcall;<br>
external ‘kernel32.dll’ name ‘SetLastError’ index 669;</p>
<p>function TlsFree(dwTlsIndex: DWORD): BOOL; stdcall;<br>
external ‘kernel32.dll’ name ‘TlsFree’ index 722;</p>
<p>function TlsSetValue(dwTlsIndex: DWORD; lpTlsValue: Pointer): BOOL; stdcall;<br>
external ‘kernel32.dll’ name ‘TlsSetValue’ index 724;</p>
<p>function TlsGetValue(dwTlsIndex: DWORD): Pointer; stdcall;<br>
external ‘kernel32.dll’ name ‘TlsGetValue’ index 723;</p>
<p>procedure ExitProcess(uExitCode: UINT); stdcall;<br>
external ‘kernel32.dll’ name ‘ExitProcess’ index 141;</p>
<p>function TerminateProcess(hProcess: THandle; uExitCode: UINT): BOOL; stdcall;<br>
external ‘kernel32.dll’ name ‘TerminateProcess’ index 716;</p>
<p>function GetCurrentProcess: THandle; stdcall;<br>
external ‘kernel32.dll’ name ‘GetCurrentProcess’ index 266;</p>
<p>function UnhandledExceptionFilter(const ExceptionInfo: TExceptionPointers):<br>
Longint; stdcall;<br>
external ‘kernel32.dll’ name ‘UnhandledExceptionFilter’ index 732;</p>
<p>function HeapFree(hHeap: THandle; dwFlags: DWORD; lpMem: Pointer): BOOL;<br>
stdcall; external ‘kernel32.dll’ name ‘HeapFree’ index 443;</p>
<p>function HeapAlloc(hHeap: THandle; dwFlags, dwBytes: DWORD): Pointer; stdcall;<br>
external ‘kernel32.dll’ name ‘HeapAlloc’ index 437;</p>
<p>function SetHandleCount(uNumber: UINT): UINT; stdcall;<br>
external ‘kernel32.dll’ name ‘SetHandleCount’ index 665;</p>
<p>function GetStdHandle(nStdHandle: DWORD): THandle; stdcall;<br>
external ‘kernel32.dll’ name ‘GetStdHandle’ index 361;</p>
<p>function GetFileType(hFile: THandle): DWORD; stdcall;<br>
external ‘kernel32.dll’ name ‘GetFileType’ index 297;</p>
<p>procedure GetStartupInfo(var lpStartupInfo: TStartupInfo); stdcall;<br>
external ‘kernel32.dll’ name ‘GetStartupInfoA’ index 359;</p>
<p>function GetModuleFileName(hModule: HINST; lpFilename: PAnsiChar;<br>
nSize: DWORD): DWORD; stdcall;<br>
external ‘kernel32.dll’ name ‘GetModuleFileNameA’ index 313;</p>
<p>function FreeEnvironmentStrings(p1: PAnsiChar): BOOL; stdcall;<br>
external ‘kernel32.dll’ name ‘FreeEnvironmentStringsA’ index 194;</p>
<p>// GetEnvironmentStrings		Information not available</p>
<p>function FreeEnvironmentStringsW(p1: PWideChar): BOOL; stdcall;<br>
external ‘kernel32.dll’ name ‘FreeEnvironmentStringsW’ index 195;</p>
<p>function WideCharToMultiByte(CodePage: UINT; dwFlags: DWORD;<br>
lpWideCharStr: LPWSTR; cchWideChar: Integer; lpMultiByteStr: LPSTR;<br>
cchMultiByte: Integer; lpDefaultChar: LPCSTR;<br>
lpUsedDefaultChar: PBOOL): Integer; stdcall;<br>
external ‘kernel32.dll’ name ‘WideCharToMultiByte’ index 770;</p>
<p>function GetEnvironmentStringsW: PWideChar; stdcall;<br>
external ‘kernel32.dll’ name ‘GetEnvironmentStringsW’ index 284;</p>
<p>function HeapDestroy(hHeap: THandle): BOOL; stdcall;<br>
external ‘kernel32.dll’ name ‘HeapDestroy’ index 441;</p>
<p>function HeapCreate(flOptions, dwInitialSize, dwMaximumSize: DWORD): THandle;<br>
stdcall; external ‘kernel32.dll’ name ‘HeapCreate’ index 439;</p>
<p>function VirtualFree(lpAddress: Pointer; dwSize, dwFreeType: DWORD): BOOL;<br>
stdcall; external ‘kernel32.dll’ name ‘VirtualFree’ index 754;</p>
<p>function WriteFile(hFile: THandle; const Buffer; nNumberOfBytesToWrite: DWORD;<br>
var lpNumberOfBytesWritten: DWORD; lpOverlapped: POverlapped): BOOL;<br>
stdcall; external ‘kernel32.dll’ name ‘WriteFile’ index 783;</p>
<p>function GetACP: UINT; stdcall;<br>
external ‘kernel32.dll’ name ‘GetACP’ index 202;</p>
<p>function GetOEMCP: UINT; stdcall;<br>
external ‘kernel32.dll’ name ‘GetOEMCP’ index 327;</p>
<p>function GetCPInfo(CodePage: UINT; var lpCPInfo: TCPInfo): BOOL; stdcall;<br>
external ‘kernel32.dll’ name ‘GetCPInfo’ index 208;</p>
<p>function VirtualAlloc(lpvAddress: Pointer; dwSize, flAllocationType,<br>
flProtect: DWORD): Pointer; stdcall;<br>
external ‘kernel32.dll’ name ‘VirtualAlloc’ index 751;</p>
<p>function HeapReAlloc(hHeap: THandle; dwFlags: DWORD; lpMem: Pointer;<br>
dwBytes: DWORD): Pointer; stdcall;<br>
external ‘kernel32.dll’ name ‘HeapReAlloc’ index 446;</p>
<p>// RtlUnwind				Information not available</p>
<p>function InterlockedExchange(var Target: Integer; Value: Integer): Integer;<br>
stdcall; external ‘kernel32.dll’ name ‘InterlockedExchange’ index 458;</p>
<p>function VirtualQuery(lpAddress: Pointer;<br>
var lpBuffer: TMemoryBasicInformation; dwLength: DWORD): DWORD; stdcall;<br>
external ‘kernel32.dll’ name ‘VirtualQuery’ index 759;</p>
<p>function LoadLibrary(lpLibFileName: PAnsiChar): HMODULE; stdcall;<br>
external ‘kernel32.dll’ name ‘LoadLibraryA’ index 480;</p>
<p>function LCMapString(Locale: LCID; dwMapFlags: DWORD; lpSrcStr: PAnsiChar;<br>
cchSrc: Integer; lpDestStr: PAnsiChar; cchDest: Integer): Integer;<br>
stdcall; external ‘kernel32.dll’ name ‘LCMapStringA’ index 477;</p>
<p>function MultiByteToWideChar(CodePage: UINT; dwFlags: DWORD;<br>
const lpMultiByteStr: LPCSTR; cchMultiByte: Integer;<br>
lpWideCharStr: LPWSTR; cchWideChar: Integer): Integer; stdcall;<br>
external ‘kernel32.dll’ name ‘MultiByteToWideChar’ index 515;</p>
<p>function LCMapStringW(Locale: LCID; dwMapFlags: DWORD; lpSrcStr: PWideChar;<br>
cchSrc: Integer; lpDestStr: PWideChar; cchDest: Integer): Integer;<br>
stdcall; external ‘kernel32.dll’ name ‘LCMapStringW’ index 478;</p>
<p>function GetTickCount: DWORD; stdcall;<br>
external ‘kernel32.dll’ name ‘GetTickCount’ index 391;</p>
<p>function GetCurrentProcessId: DWORD; stdcall;<br>
external ‘kernel32.dll’ name ‘GetCurrentProcessId’ index 267;</p>
<p>procedure GetSystemTimeAsFileTime(var lpSystemTimeAsFileTime: TFileTime);<br>
stdcall;<br>
external ‘kernel32.dll’ name ‘GetSystemTimeAsFileTime’ index 375;</p>
<p>function GetLocaleInfo(Locale: LCID; LCType: LCTYPE; lpLCData: PAnsiChar;<br>
cchData: Integer): Integer; stdcall;<br>
external ‘kernel32.dll’ name ‘GetLocaleInfoA’ index 305;</p>
<p>function GetStringTypeA(Locale: LCID; dwInfoType: DWORD;<br>
const lpSrcStr: LPCSTR; cchSrc: BOOL; var lpCharType: Word): BOOL;<br>
external ‘kernel32.dll’ name ‘GetStringTypeA’ index 362;</p>
<p>function GetStringTypeW(dwInfoType: DWORD; const lpSrcStr: WCHAR;<br>
cchSrc: BOOL; var lpCharType: Word): BOOL;<br>
external ‘kernel32.dll’ name ‘GetStringTypeW’ index 365;</p>
<p>function HeapSize(hHeap: THandle; dwFlags: DWORD; lpMem: Pointer): DWORD;<br>
stdcall; external ‘kernel32.dll’ name ‘HeapSize’ index 447;</p>
<p>function VirtualProtect(lpAddress: Pointer; dwSize, flNewProtect: DWORD;<br>
lpflOldProtect: Pointer): BOOL; stdcall;<br>
external ‘kernel32.dll’ name ‘VirtualProtect’ index 757;</p>
<p>procedure GetSystemInfo(var lpSystemInfo: TSystemInfo); stdcall;<br>
external ‘kernel32.dll’ name ‘GetSystemInfo’ index 371; [/code]</p>
<p>It appears that, like other DLL files previously used, jagmisc is encrypted.  Any attempt at decompilation or unpacking leads to a mangled mess of source code.  Don’t waste your time.</p>
<p>I then decided to have a look over the DLL with Olly.  Anyone interested in the assembly can find it <a href="http://rsmonkey.co.cc/jagmisc_asm.txt" data-bbcode="true" rel="nofollow noopener">here</a></p>
<p>I didn’t notice anything that could lead to any proof of an “anticheat” system.  Feel free to review it yourself.</p>
<p>I realize everything I have listed is fairly easy information to get given the right tools, but I figured I would give people some ease of mind.</p>
<p>EDIT:</p>
<p>Forgot the function entry points, here they are:<br>
Quit0 - 10011370<br>
init - 100012E0<br>
nanoTime - 100012F0[/quote]</p>
<p>The import address table doesn’t really give out much information, because with GetModuleHandle and GetProcAddress they can make calls to any functions. It’s like checking the method references of a java classfile that invokes methods by reflection.</p>
<p>I have no time nor enough experience to analyze the code extensively, but looks pretty suspicious:</p>
<pre><code class="lang-auto">1000592C   |.  68 DC880010       PUSH jagmisc.100088DC                                         ; /ProcNameOrOrdinal = "GetActiveWindow"
10005931   |.  57                PUSH EDI                                                      ; |hModule = NULL
10005932   |.  FFD6              CALL ESI                                                      ; \GetProcAddress
10005934   |.  68 C8880010       PUSH jagmisc.100088C8                                         ; /ProcNameOrOrdinal = "GetLastActivePopup"
10005939   |.  57                PUSH EDI                                                      ; |hModule = NULL
1000593A   |.  A3 9CAF0010       MOV DWORD PTR DS:[1000AF9C],EAX                               ; |
1000593F   |.  FFD6              CALL ESI                                                      ; \GetProcAddress
10005941   |.  833D 8CAC0010 02  CMP DWORD PTR DS:[1000AC8C],2
10005948   |.  A3 A0AF0010       MOV DWORD PTR DS:[1000AFA0],EAX

...

100059B2   |&gt;  A1 9CAF0010       MOV EAX,DWORD PTR DS:[1000AF9C]
100059B7   |.  85C0              TEST EAX,EAX
100059B9   |.  74 16             JE SHORT jagmisc.100059D1
100059BB   |.  FFD0              CALL EAX
100059BD   |.  8BD8              MOV EBX,EAX
100059BF   |.  85DB              TEST EBX,EBX
100059C1   |.  74 0E             JE SHORT jagmisc.100059D1
100059C3   |.  A1 A0AF0010       MOV EAX,DWORD PTR DS:[1000AFA0]
100059C8   |.  85C0              TEST EAX,EAX
100059CA   |.  74 05             JE SHORT jagmisc.100059D1
100059CC   |.  53                PUSH EBX
100059CD   |.  FFD0              CALL EAX</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/21">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/21</link>
        <pubDate>Mon, 22 Jun 2009 15:43:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-279240-21</guid>
        <source url="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240.rss">New package &quot;Jagex3&quot; [546]</source>
      </item>
      <item>
        <title>New package &quot;Jagex3&quot; [546]</title>
        <dc:creator><![CDATA[@Unhandled Unhandled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unhandled">@Unhandled</a> wrote:</p>
          <blockquote>
              <p>Have they actually written any native code or is it all glue code for native OS functions? I’d say its safe to assume nanoTime just bypasses Java’s System.nanoTime()…<br>
Also, has anyone tried this on Linux? Is it just a so instead of a dll?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/20">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/20</link>
        <pubDate>Mon, 22 Jun 2009 14:22:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-279240-20</guid>
        <source url="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240.rss">New package &quot;Jagex3&quot; [546]</source>
      </item>
      <item>
        <title>New package &quot;Jagex3&quot; [546]</title>
        <dc:creator><![CDATA[@Ollie Ollie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ollie">@Ollie</a> wrote:</p>
          <blockquote>
              <p>check if the library is being loaded, and if it isn’t, load it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/19">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/19</link>
        <pubDate>Mon, 22 Jun 2009 13:50:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-279240-19</guid>
        <source url="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240.rss">New package &quot;Jagex3&quot; [546]</source>
      </item>
      <item>
        <title>New package &quot;Jagex3&quot; [546]</title>
        <dc:creator><![CDATA[@the_bank the bank]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_bank">@the_bank</a> wrote:</p>
          <blockquote>
              <p>My first fear was a possible anti-cheat system which was stored native on the computer, which in itself would be easy for us to bypass, but we would have to know about it first.  After Jagex publicized their new “anti-macro” systems, found <a href="http://news.runescape.com/newsitem.ws?id=1937" data-bbcode="true" rel="nofollow noopener">here</a>, it proved that my fear of such a thing was plausible.</p>
<p>Here is some very generic and basic info I have documented on the new dynamic link library:</p>
<p>Functions:<br>
void Quit0()<br>
boolean init()<br>
long nanoTime()</p>
<p>All imports are from KERNEL32, and are as follows:</p>
<p>[code]function QueryPerformanceCounter(var lpPerformanceCount: TLargeInteger): BOOL;<br>
stdcall;<br>
external ‘kernel32.dll’ name ‘QueryPerformanceCounter’ index 556;</p>
<p>function QueryPerformanceFrequency(var lpFrequency: TLargeInteger): BOOL;<br>
stdcall;<br>
external ‘kernel32.dll’ name ‘QueryPerformanceFrequency’ index 557;</p>
<p>function WaitForMultipleObjects(nCount: DWORD; lpHandles: PWOHandleArray;<br>
bWaitAll: BOOL; dwMilliseconds: DWORD): DWORD; stdcall;<br>
external ‘kernel32.dll’ name ‘WaitForMultipleObjects’ index 764;</p>
<p>function SetEvent(hEvent: THandle): BOOL; stdcall;<br>
external ‘kernel32.dll’ name ‘SetEvent’ index 657;</p>
<p>function SetThreadAffinityMask(hThread: THandle;<br>
dwThreadAffinityMask: DWORD): DWORD; stdcall;<br>
external ‘kernel32.dll’ name ‘SetThreadAffinityMask’ index 688;</p>
<p>function GetCurrentThread: THandle; stdcall;<br>
external ‘kernel32.dll’ name ‘GetCurrentThread’ index 268;</p>
<p>procedure DeleteCriticalSection(var lpCriticalSection: TRTLCriticalSection);<br>
stdcall; external ‘kernel32.dll’ name ‘DeleteCriticalSection’ index 91;</p>
<p>function CloseHandle(hObject: THandle): BOOL; stdcall;<br>
external ‘kernel32.dll’ name ‘CloseHandle’ index 31;</p>
<p>function WaitForSingleObject(hHandle: THandle; dwMilliseconds: DWORD): DWORD;<br>
stdcall; external ‘kernel32.dll’ name ‘WaitForSingleObject’ index 766;</p>
<p>procedure InitializeCriticalSection(var lpCriticalSection:<br>
TRTLCriticalSection); stdcall;<br>
external ‘kernel32.dll’ name ‘InitializeCriticalSection’ index 454;</p>
<p>function CreateEvent(lpEventAttributes: PSecurityAttributes; bManualReset,<br>
bInitialState: BOOL; lpName: PAnsiChar): THandle; stdcall;<br>
external ‘kernel32.dll’ name ‘CreateEventA’ index 53;</p>
<p>procedure LeaveCriticalSection(var lpCriticalSection: TRTLCriticalSection);<br>
stdcall; external ‘kernel32.dll’ name ‘LeaveCriticalSection’ index 479;</p>
<p>procedure EnterCriticalSection(var lpCriticalSection: TRTLCriticalSection);<br>
stdcall; external ‘kernel32.dll’ name ‘EnterCriticalSection’ index 112;</p>
<p>procedure ExitThread(dwExitCode: DWORD); stdcall;<br>
external ‘kernel32.dll’ name ‘ExitThread’ index 142;</p>
<p>function GetLastError: DWORD; stdcall;<br>
external ‘kernel32.dll’ name ‘GetLastError’ index 302;</p>
<p>function ResumeThread(hThread: THandle): DWORD; stdcall;<br>
external ‘kernel32.dll’ name ‘ResumeThread’ index 597;</p>
<p>function CreateThread(lpThreadAttributes: Pointer; dwStackSize: DWORD;<br>
lpStartAddress: TFNThreadStartRoutine; lpParameter: Pointer;<br>
dwCreationFlags: DWORD; var lpThreadId: DWORD): THandle; stdcall;<br>
external ‘kernel32.dll’ name ‘CreateThread’ index 78;</p>
<p>function GetCurrentThreadId: DWORD; stdcall;<br>
external ‘kernel32.dll’ name ‘GetCurrentThreadId’ index 269;</p>
<p>function GetCommandLine: PAnsiChar; stdcall;<br>
external ‘kernel32.dll’ name ‘GetCommandLineA’ index 219;</p>
<p>function GetVersionEx(var lpVersionInformation: TOSVersionInfo): BOOL;<br>
stdcall; external ‘kernel32.dll’ name ‘GetVersionExA’ index 400;</p>
<p>function GetProcAddress(hModule: HMODULE; lpProcName: LPCSTR): FARPROC;<br>
stdcall; external ‘kernel32.dll’ name ‘GetProcAddress’ index 340;</p>
<p>function GetModuleHandle(lpModuleName: PAnsiChar): HMODULE; stdcall;<br>
external ‘kernel32.dll’ name ‘GetModuleHandleA’ index 315;</p>
<p>function TlsAlloc: DWORD; stdcall;<br>
external ‘kernel32.dll’ name ‘TlsAlloc’ index 721;</p>
<p>procedure SetLastError(dwErrCode: DWORD); stdcall;<br>
external ‘kernel32.dll’ name ‘SetLastError’ index 669;</p>
<p>function TlsFree(dwTlsIndex: DWORD): BOOL; stdcall;<br>
external ‘kernel32.dll’ name ‘TlsFree’ index 722;</p>
<p>function TlsSetValue(dwTlsIndex: DWORD; lpTlsValue: Pointer): BOOL; stdcall;<br>
external ‘kernel32.dll’ name ‘TlsSetValue’ index 724;</p>
<p>function TlsGetValue(dwTlsIndex: DWORD): Pointer; stdcall;<br>
external ‘kernel32.dll’ name ‘TlsGetValue’ index 723;</p>
<p>procedure ExitProcess(uExitCode: UINT); stdcall;<br>
external ‘kernel32.dll’ name ‘ExitProcess’ index 141;</p>
<p>function TerminateProcess(hProcess: THandle; uExitCode: UINT): BOOL; stdcall;<br>
external ‘kernel32.dll’ name ‘TerminateProcess’ index 716;</p>
<p>function GetCurrentProcess: THandle; stdcall;<br>
external ‘kernel32.dll’ name ‘GetCurrentProcess’ index 266;</p>
<p>function UnhandledExceptionFilter(const ExceptionInfo: TExceptionPointers):<br>
Longint; stdcall;<br>
external ‘kernel32.dll’ name ‘UnhandledExceptionFilter’ index 732;</p>
<p>function HeapFree(hHeap: THandle; dwFlags: DWORD; lpMem: Pointer): BOOL;<br>
stdcall; external ‘kernel32.dll’ name ‘HeapFree’ index 443;</p>
<p>function HeapAlloc(hHeap: THandle; dwFlags, dwBytes: DWORD): Pointer; stdcall;<br>
external ‘kernel32.dll’ name ‘HeapAlloc’ index 437;</p>
<p>function SetHandleCount(uNumber: UINT): UINT; stdcall;<br>
external ‘kernel32.dll’ name ‘SetHandleCount’ index 665;</p>
<p>function GetStdHandle(nStdHandle: DWORD): THandle; stdcall;<br>
external ‘kernel32.dll’ name ‘GetStdHandle’ index 361;</p>
<p>function GetFileType(hFile: THandle): DWORD; stdcall;<br>
external ‘kernel32.dll’ name ‘GetFileType’ index 297;</p>
<p>procedure GetStartupInfo(var lpStartupInfo: TStartupInfo); stdcall;<br>
external ‘kernel32.dll’ name ‘GetStartupInfoA’ index 359;</p>
<p>function GetModuleFileName(hModule: HINST; lpFilename: PAnsiChar;<br>
nSize: DWORD): DWORD; stdcall;<br>
external ‘kernel32.dll’ name ‘GetModuleFileNameA’ index 313;</p>
<p>function FreeEnvironmentStrings(p1: PAnsiChar): BOOL; stdcall;<br>
external ‘kernel32.dll’ name ‘FreeEnvironmentStringsA’ index 194;</p>
<p>// GetEnvironmentStrings		Information not available</p>
<p>function FreeEnvironmentStringsW(p1: PWideChar): BOOL; stdcall;<br>
external ‘kernel32.dll’ name ‘FreeEnvironmentStringsW’ index 195;</p>
<p>function WideCharToMultiByte(CodePage: UINT; dwFlags: DWORD;<br>
lpWideCharStr: LPWSTR; cchWideChar: Integer; lpMultiByteStr: LPSTR;<br>
cchMultiByte: Integer; lpDefaultChar: LPCSTR;<br>
lpUsedDefaultChar: PBOOL): Integer; stdcall;<br>
external ‘kernel32.dll’ name ‘WideCharToMultiByte’ index 770;</p>
<p>function GetEnvironmentStringsW: PWideChar; stdcall;<br>
external ‘kernel32.dll’ name ‘GetEnvironmentStringsW’ index 284;</p>
<p>function HeapDestroy(hHeap: THandle): BOOL; stdcall;<br>
external ‘kernel32.dll’ name ‘HeapDestroy’ index 441;</p>
<p>function HeapCreate(flOptions, dwInitialSize, dwMaximumSize: DWORD): THandle;<br>
stdcall; external ‘kernel32.dll’ name ‘HeapCreate’ index 439;</p>
<p>function VirtualFree(lpAddress: Pointer; dwSize, dwFreeType: DWORD): BOOL;<br>
stdcall; external ‘kernel32.dll’ name ‘VirtualFree’ index 754;</p>
<p>function WriteFile(hFile: THandle; const Buffer; nNumberOfBytesToWrite: DWORD;<br>
var lpNumberOfBytesWritten: DWORD; lpOverlapped: POverlapped): BOOL;<br>
stdcall; external ‘kernel32.dll’ name ‘WriteFile’ index 783;</p>
<p>function GetACP: UINT; stdcall;<br>
external ‘kernel32.dll’ name ‘GetACP’ index 202;</p>
<p>function GetOEMCP: UINT; stdcall;<br>
external ‘kernel32.dll’ name ‘GetOEMCP’ index 327;</p>
<p>function GetCPInfo(CodePage: UINT; var lpCPInfo: TCPInfo): BOOL; stdcall;<br>
external ‘kernel32.dll’ name ‘GetCPInfo’ index 208;</p>
<p>function VirtualAlloc(lpvAddress: Pointer; dwSize, flAllocationType,<br>
flProtect: DWORD): Pointer; stdcall;<br>
external ‘kernel32.dll’ name ‘VirtualAlloc’ index 751;</p>
<p>function HeapReAlloc(hHeap: THandle; dwFlags: DWORD; lpMem: Pointer;<br>
dwBytes: DWORD): Pointer; stdcall;<br>
external ‘kernel32.dll’ name ‘HeapReAlloc’ index 446;</p>
<p>// RtlUnwind				Information not available</p>
<p>function InterlockedExchange(var Target: Integer; Value: Integer): Integer;<br>
stdcall; external ‘kernel32.dll’ name ‘InterlockedExchange’ index 458;</p>
<p>function VirtualQuery(lpAddress: Pointer;<br>
var lpBuffer: TMemoryBasicInformation; dwLength: DWORD): DWORD; stdcall;<br>
external ‘kernel32.dll’ name ‘VirtualQuery’ index 759;</p>
<p>function LoadLibrary(lpLibFileName: PAnsiChar): HMODULE; stdcall;<br>
external ‘kernel32.dll’ name ‘LoadLibraryA’ index 480;</p>
<p>function LCMapString(Locale: LCID; dwMapFlags: DWORD; lpSrcStr: PAnsiChar;<br>
cchSrc: Integer; lpDestStr: PAnsiChar; cchDest: Integer): Integer;<br>
stdcall; external ‘kernel32.dll’ name ‘LCMapStringA’ index 477;</p>
<p>function MultiByteToWideChar(CodePage: UINT; dwFlags: DWORD;<br>
const lpMultiByteStr: LPCSTR; cchMultiByte: Integer;<br>
lpWideCharStr: LPWSTR; cchWideChar: Integer): Integer; stdcall;<br>
external ‘kernel32.dll’ name ‘MultiByteToWideChar’ index 515;</p>
<p>function LCMapStringW(Locale: LCID; dwMapFlags: DWORD; lpSrcStr: PWideChar;<br>
cchSrc: Integer; lpDestStr: PWideChar; cchDest: Integer): Integer;<br>
stdcall; external ‘kernel32.dll’ name ‘LCMapStringW’ index 478;</p>
<p>function GetTickCount: DWORD; stdcall;<br>
external ‘kernel32.dll’ name ‘GetTickCount’ index 391;</p>
<p>function GetCurrentProcessId: DWORD; stdcall;<br>
external ‘kernel32.dll’ name ‘GetCurrentProcessId’ index 267;</p>
<p>procedure GetSystemTimeAsFileTime(var lpSystemTimeAsFileTime: TFileTime);<br>
stdcall;<br>
external ‘kernel32.dll’ name ‘GetSystemTimeAsFileTime’ index 375;</p>
<p>function GetLocaleInfo(Locale: LCID; LCType: LCTYPE; lpLCData: PAnsiChar;<br>
cchData: Integer): Integer; stdcall;<br>
external ‘kernel32.dll’ name ‘GetLocaleInfoA’ index 305;</p>
<p>function GetStringTypeA(Locale: LCID; dwInfoType: DWORD;<br>
const lpSrcStr: LPCSTR; cchSrc: BOOL; var lpCharType: Word): BOOL;<br>
external ‘kernel32.dll’ name ‘GetStringTypeA’ index 362;</p>
<p>function GetStringTypeW(dwInfoType: DWORD; const lpSrcStr: WCHAR;<br>
cchSrc: BOOL; var lpCharType: Word): BOOL;<br>
external ‘kernel32.dll’ name ‘GetStringTypeW’ index 365;</p>
<p>function HeapSize(hHeap: THandle; dwFlags: DWORD; lpMem: Pointer): DWORD;<br>
stdcall; external ‘kernel32.dll’ name ‘HeapSize’ index 447;</p>
<p>function VirtualProtect(lpAddress: Pointer; dwSize, flNewProtect: DWORD;<br>
lpflOldProtect: Pointer): BOOL; stdcall;<br>
external ‘kernel32.dll’ name ‘VirtualProtect’ index 757;</p>
<p>procedure GetSystemInfo(var lpSystemInfo: TSystemInfo); stdcall;<br>
external ‘kernel32.dll’ name ‘GetSystemInfo’ index 371; [/code]</p>
<p>It appears that, like other DLL files previously used, jagmisc is encrypted.  Any attempt at decompilation or unpacking leads to a mangled mess of source code.  Don’t waste your time.</p>
<p>I then decided to have a look over the DLL with Olly.  Anyone interested in the assembly can find it <a href="http://rsmonkey.co.cc/jagmisc_asm.txt" data-bbcode="true" rel="nofollow noopener">here</a></p>
<p>I didn’t notice anything that could lead to any proof of an “anticheat” system.  Feel free to review it yourself.</p>
<p>I realize everything I have listed is fairly easy information to get given the right tools, but I figured I would give people some ease of mind.</p>
<p>EDIT:</p>
<p>Forgot the function entry points, here they are:<br>
Quit0 - 10011370<br>
init - 100012E0<br>
nanoTime - 100012F0</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/18</link>
        <pubDate>Mon, 22 Jun 2009 12:57:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-279240-18</guid>
        <source url="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240.rss">New package &quot;Jagex3&quot; [546]</source>
      </item>
      <item>
        <title>New package &quot;Jagex3&quot; [546]</title>
        <dc:creator><![CDATA[@Speljohan Speljohan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/speljohan">@Speljohan</a> wrote:</p>
          <blockquote>
              <p>[quote=“The_Flames, post:16, topic:279240”][quote author=qauters link=topic=368545.msg2835997#msg2835997 date=1245661027]</p>
<aside class="quote no-group">
<blockquote>
<p>I realize this thread is a bit old, but I’m curious to your thoughts on how this relates to the new updates in the RS macro detection?  They work against all bots and such according to JaGeX?</p>
<p><a href="http://news.runescape.com/c=pO-Bodlwbis/newsitem.ws?id=1937" data-bbcode="true" rel="nofollow noopener">http://news.runescape.com/c=pO-Bodlwbis/newsitem.ws?id=1937</a></p>
</blockquote>
</aside>
<p>It doesn’t, those dll’s do not detect bot’s in any kind.<br>
[/quote]</p>
<p>Does this mean… ruler’s been spreading propaganda  :([/quote]surprised?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/17</link>
        <pubDate>Mon, 22 Jun 2009 12:48:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-279240-17</guid>
        <source url="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240.rss">New package &quot;Jagex3&quot; [546]</source>
      </item>
      <item>
        <title>New package &quot;Jagex3&quot; [546]</title>
        <dc:creator><![CDATA[@The_Flames The_Flames]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_flames">@The_Flames</a> wrote:</p>
          <blockquote>
              <p>[quote=“qauters, post:15, topic:279240”][quote author=henry link=topic=368545.msg2835676#msg2835676 date=1245634223]<br>
I realize this thread is a bit old, but I’m curious to your thoughts on how this relates to the new updates in the RS macro detection?  They work against all bots and such according to JaGeX?</p>
<p><a href="http://news.runescape.com/c=pO-Bodlwbis/newsitem.ws?id=1937" data-bbcode="true" rel="nofollow noopener">http://news.runescape.com/c=pO-Bodlwbis/newsitem.ws?id=1937</a><br>
[/quote]<br>
It doesn’t, those dll’s do not detect bot’s in any kind.[/quote]</p>
<p>Does this mean… ruler’s been spreading propaganda  <img src="https://forum.moparisthebest.com/images/emoji/twitter/frowning.png?v=5" title=":frowning:" class="emoji" alt=":frowning:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/16</link>
        <pubDate>Mon, 22 Jun 2009 12:47:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-279240-16</guid>
        <source url="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240.rss">New package &quot;Jagex3&quot; [546]</source>
      </item>
      <item>
        <title>New package &quot;Jagex3&quot; [546]</title>
        <dc:creator><![CDATA[@qauters qauters]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/qauters">@qauters</a> wrote:</p>
          <blockquote>
              <p>[quote=“henry, post:14, topic:279240”]I realize this thread is a bit old, but I’m curious to your thoughts on how this relates to the new updates in the RS macro detection?  They work against all bots and such according to JaGeX?</p>
<p><a href="http://news.runescape.com/c=pO-Bodlwbis/newsitem.ws?id=1937" data-bbcode="true" rel="nofollow noopener">http://news.runescape.com/c=pO-Bodlwbis/newsitem.ws?id=1937</a>[/quote]<br>
It doesn’t, those dll’s do not detect bot’s in any kind.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/15</link>
        <pubDate>Mon, 22 Jun 2009 08:57:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-279240-15</guid>
        <source url="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240.rss">New package &quot;Jagex3&quot; [546]</source>
      </item>
      <item>
        <title>New package &quot;Jagex3&quot; [546]</title>
        <dc:creator><![CDATA[@henry henry]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/henry">@henry</a> wrote:</p>
          <blockquote>
              <p>I realize this thread is a bit old, but I’m curious to your thoughts on how this relates to the new updates in the RS macro detection?  They work against all bots and such according to JaGeX?</p>
<p><a href="http://news.runescape.com/c=pO-Bodlwbis/newsitem.ws?id=1937" data-bbcode="true" rel="nofollow noopener">http://news.runescape.com/c=pO-Bodlwbis/newsitem.ws?id=1937</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/14</link>
        <pubDate>Mon, 22 Jun 2009 01:30:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-279240-14</guid>
        <source url="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240.rss">New package &quot;Jagex3&quot; [546]</source>
      </item>
      <item>
        <title>New package &quot;Jagex3&quot; [546]</title>
        <dc:creator><![CDATA[@Ollie Ollie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ollie">@Ollie</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="11" data-topic="279240">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/moparisthebest/40/30_1.png" class="avatar"> Moparisthebest:</div>
<blockquote>
<p>Worst comes to worst and we will just have to start writing native hacks like all the other games do.  Interesting find though, the next few versions should be interesting to see what is changed.</p>
</blockquote>
</aside>
<p>Aslong as they stay using an applet (their main selling point being it can be ran from a browser) we can easily bot the system</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/13</link>
        <pubDate>Wed, 20 May 2009 02:20:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-279240-13</guid>
        <source url="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240.rss">New package &quot;Jagex3&quot; [546]</source>
      </item>
      <item>
        <title>New package &quot;Jagex3&quot; [546]</title>
        <dc:creator><![CDATA[@silabsoft RuneAgent]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silabsoft">@silabsoft</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="10" data-topic="279240">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/tenac/40/5_6bca9977b612b7aeef77ba1ec1cd67b3.png" class="avatar"> Tenac:</div>
<blockquote>
<p>I hope this isn’t them actually doing something to stop us, if it is, I’ve kinda feared this ever since I started putting a lot of my time into making a bot/updater.</p>
</blockquote>
</aside>
<p>I highly doubt its to stop cheating, they pretty much won the war against rwt so very little reason to goto such great lengths to find the few people that waste time to level. The system they have now works well enough to stop the few that do.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-package-jagex3-546/279240/12</link>
        <pubDate>Wed, 20 May 2009 00:57:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-279240-12</guid>
        <source url="https://forum.moparisthebest.com/t/new-package-jagex3-546/279240.rss">New package &quot;Jagex3&quot; [546]</source>
      </item>
  </channel>
</rss>
