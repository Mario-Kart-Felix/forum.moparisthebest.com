<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Run Server Shuts Down</title>
    <link>https://forum.moparisthebest.com/t/run-server-shuts-down/439998</link>
    <description>Well I have a weird error, that I don&#39;t know how to fix.. Any help? And can I have explanation with the help so I can learn from the mistake? Here is what it says when trying to run:
[IMG]http://i1132.photobucket.com/albums/m563/volsfantd/MessedupPI.png[/img]
Add me on skype: volsfantd@yahoo.com or post here to help, please.</description>
    
    <lastBuildDate>Wed, 18 Apr 2012 23:17:47 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/run-server-shuts-down/439998.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Run Server Shuts Down</title>
        <dc:creator><![CDATA[@matzie matzie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/matzie">@matzie</a> wrote:</p>
          <blockquote>
              <p>I found your problem, one of the items you edited in your cfg has too many numbers next to it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/run-server-shuts-down/439998/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/run-server-shuts-down/439998/4</link>
        <pubDate>Wed, 18 Apr 2012 23:17:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-439998-4</guid>
        <source url="https://forum.moparisthebest.com/t/run-server-shuts-down/439998.rss">Run Server Shuts Down</source>
      </item>
      <item>
        <title>Run Server Shuts Down</title>
        <dc:creator><![CDATA[@volsfan18 volsfan18]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/volsfan18">@volsfan18</a> wrote:</p>
          <blockquote>
              <p>No, I’ve messed with my item.cfg but that’s about it… Any other suggestions?<br>
This is my ItemHandler btw:</p>
<p>[code]package server.world;</p>
<p>import java.io.BufferedReader;<br>
import java.io.FileNotFoundException;<br>
import java.io.FileReader;<br>
import java.io.File;<br>
import java.util.Scanner;<br>
import java.io.IOException;<br>
import java.util.ArrayList;<br>
import java.util.List;</p>
<p>import server.Config;<br>
import server.Server;<br>
import server.model.items.GroundItem;<br>
import server.model.items.ItemList;<br>
import server.model.players.Client;<br>
import server.model.players.Player;<br>
import server.util.Misc;</p>
<p>/**</p>
<ul>
<li>Handles ground items<br>
**/</li>
</ul>
<p>public class ItemHandler {</p>
<pre><code>public List&lt;GroundItem&gt; items = new ArrayList&lt;GroundItem&gt;();
public static final int HIDE_TICKS = 100;

public ItemHandler() {			
	for(int i = 0; i &lt; Config.ITEM_LIMIT; i++) {
		ItemList[i] = null;
	}
	loadItemList("item.cfg");
	loadItemPrices("prices.txt");
}

/**
* Adds item to list
**/	
public void addItem(GroundItem item) {
	items.add(item);
}

/**
* Removes item from list
**/	
public void removeItem(GroundItem item) {
	items.remove(item);
}

/**
* Item amount
**/	
public int itemAmount(int itemId, int itemX, int itemY) {
	for(GroundItem i : items) {
		if(i.getItemId() == itemId &amp;&amp; i.getItemX() == itemX &amp;&amp; i.getItemY() == itemY) {
			return i.getItemAmount();
		}
	}
	return 0;
}


/**
* Item exists
**/	
public boolean itemExists(int itemId, int itemX, int itemY) {
	for(GroundItem i : items) {
		if(i.getItemId() == itemId &amp;&amp; i.getItemX() == itemX &amp;&amp; i.getItemY() == itemY) {
			return true;
		}
	}
	return false;
}

/**
* Reloads any items if you enter a new region
**/
public void reloadItems(Client c) {
	for(GroundItem i : items) {
		if(c != null){
			if (c.getItems().tradeable(i.getItemId()) || i.getName().equalsIgnoreCase(c.playerName)) {
				if (c.distanceToPoint(i.getItemX(), i.getItemY()) &lt;= 60) {
					if(i.hideTicks &gt; 0 &amp;&amp; i.getName().equalsIgnoreCase(c.playerName)) {
						c.getItems().removeGroundItem(i.getItemId(), i.getItemX(), i.getItemY(), i.getItemAmount());
						c.getItems().createGroundItem(i.getItemId(), i.getItemX(), i.getItemY(), i.getItemAmount());
					}
					if(i.hideTicks == 0) {
						c.getItems().removeGroundItem(i.getItemId(), i.getItemX(), i.getItemY(), i.getItemAmount());
						c.getItems().createGroundItem(i.getItemId(), i.getItemX(), i.getItemY(), i.getItemAmount());
					}
				}
			}	
		}
	}
}

public void process() {
	ArrayList&lt;GroundItem&gt; toRemove = new ArrayList&lt;GroundItem&gt;();
	for (int j = 0; j &lt; items.size(); j++) {			
		if (items.get(j) != null) {
			GroundItem i = items.get(j);
			if(i.hideTicks &gt; 0) {
				i.hideTicks--;
			}
			if(i.hideTicks == 1) { // item can now be seen by others
				i.hideTicks = 0;
				createGlobalItem(i);
				i.removeTicks = HIDE_TICKS;
			}
			if(i.removeTicks &gt; 0) {
				i.removeTicks--;
			}
			if(i.removeTicks == 1) {
				i.removeTicks = 0;
				toRemove.add(i);
				//removeGlobalItem(i, i.getItemId(), i.getItemX(), i.getItemY(), i.getItemAmount());
			}
		
		}
	
	}
	
	for (int j = 0; j &lt; toRemove.size(); j++) {
		GroundItem i = toRemove.get(j);
		removeGlobalItem(i, i.getItemId(), i.getItemX(), i.getItemY(), i.getItemAmount());	
	}
	/*for(GroundItem i : items) {
		if(i.hideTicks &gt; 0) {
			i.hideTicks--;
		}
		if(i.hideTicks == 1) { // item can now be seen by others
			i.hideTicks = 0;
			createGlobalItem(i);
			i.removeTicks = HIDE_TICKS;
		}
		if(i.removeTicks &gt; 0) {
			i.removeTicks--;
		}
		if(i.removeTicks == 1) {
			i.removeTicks = 0;
			removeGlobalItem(i, i.getItemId(), i.getItemX(), i.getItemY(), i.getItemAmount());
		}
	}*/
}



/**
* Creates the ground item 
**/
public int[][] brokenBarrows = {{4708,4860},{4710,4866},{4712,4872},{4714,4878},{4716,4884},
{4720,4896},{4718,4890},{4720,4896},{4722,4902},{4732,4932},{4734,4938},{4736,4944},{4738,4950},
{4724,4908},{4726,4914},{4728,4920},{4730,4926},{4745,4956},{4747,4926},{4749,4968},{4751,4994},
{4753,4980},{4755,4986},{4757,4992},{4759,4998}};
public void createGroundItem(Client c, int itemId, int itemX, int itemY, int itemAmount, int playerId) {
	if(itemId &gt; 0) {
		if (itemId &gt;= 2412 &amp;&amp; itemId &lt;= 2414) {
			c.sendMessage("The cape vanishes as it touches the ground.");
			return;
		}
		if (itemId &gt; 4705 &amp;&amp; itemId &lt; 4760) {
			for (int j = 0; j &lt; brokenBarrows.length; j++) {
				if (brokenBarrows[j][0] == itemId) {
					itemId = brokenBarrows[j][1];
					break;
				}
			}
		}
		if (!server.model.items.Item.itemStackable[itemId] &amp;&amp; itemAmount &gt; 0) {
			for (int j = 0; j &lt; itemAmount; j++) {
				c.getItems().createGroundItem(itemId, itemX, itemY, 1);
				GroundItem item = new GroundItem(itemId, itemX, itemY, 1, c.playerId, HIDE_TICKS, Server.playerHandler.players[playerId].playerName);
				addItem(item);
			}	
		} else {
			c.getItems().createGroundItem(itemId, itemX, itemY, itemAmount);
			GroundItem item = new GroundItem(itemId, itemX, itemY, itemAmount, c.playerId, HIDE_TICKS, Server.playerHandler.players[playerId].playerName);
			addItem(item);
		}
	}
}


/**
* Shows items for everyone who is within 60 squares
**/
public void createGlobalItem(GroundItem i) {
	for (Player p : Server.playerHandler.players){
		if(p != null) {
		Client person = (Client)p;
			if(person != null){
				if(person.playerId != i.getItemController()) {
					if (!person.getItems().tradeable(i.getItemId()) &amp;&amp; person.playerId != i.getItemController())
						continue;
					if (person.distanceToPoint(i.getItemX(), i.getItemY()) &lt;= 60) {
						person.getItems().createGroundItem(i.getItemId(), i.getItemX(), i.getItemY(), i.getItemAmount());
					}
				}
			}
		}
	}
}
		

		
/**
* Removing the ground item
**/

public void removeGroundItem(Client c, int itemId, int itemX, int itemY, boolean add){
	for(GroundItem i : items) {
		if(i.getItemId() == itemId &amp;&amp; i.getItemX() == itemX &amp;&amp; i.getItemY() == itemY) {
			if(i.hideTicks &gt; 0 &amp;&amp; i.getName().equalsIgnoreCase(c.playerName)) {
				if(add) {
					if (!c.getItems().specialCase(itemId)) {
						if(c.getItems().addItem(i.getItemId(), i.getItemAmount())) {   
							removeControllersItem(i, c, i.getItemId(), i.getItemX(), i.getItemY(), i.getItemAmount());
							break;
						}
					} else {
						c.getItems().handleSpecialPickup(itemId);
						removeControllersItem(i, c, i.getItemId(), i.getItemX(), i.getItemY(), i.getItemAmount());
						break;
					}
				} else {
					removeControllersItem(i, c, i.getItemId(), i.getItemX(), i.getItemY(), i.getItemAmount());
					break;
				}
			} else if (i.hideTicks &lt;= 0) {
				if(add) {
					if(c.getItems().addItem(i.getItemId(), i.getItemAmount())) {  
						removeGlobalItem(i, i.getItemId(), i.getItemX(), i.getItemY(), i.getItemAmount());
						break;
					}
				} else {
					removeGlobalItem(i, i.getItemId(), i.getItemX(), i.getItemY(), i.getItemAmount());
					break;
				}
			}
		}
	}
}

/**
* Remove item for just the item controller (item not global yet)
**/

public void removeControllersItem(GroundItem i, Client c, int itemId, int itemX, int itemY, int itemAmount) {
	c.getItems().removeGroundItem(itemId, itemX, itemY, itemAmount);
	removeItem(i);
}

/**
* Remove item for everyone within 60 squares
**/

public void removeGlobalItem(GroundItem i, int itemId, int itemX, int itemY, int itemAmount) {
	for (Player p : Server.playerHandler.players){
		if(p != null) {
		Client person = (Client)p;
			if(person != null){
				if (person.distanceToPoint(itemX, itemY) &lt;= 60) {
					person.getItems().removeGroundItem(itemId, itemX, itemY, itemAmount);
				}
			}
		}
	}
	removeItem(i);
}
	


/**
*Item List
**/

public ItemList ItemList[] = new ItemList[Config.ITEM_LIMIT];


public void newItemList(int ItemId, String ItemName, String ItemDescription, double ShopValue, double LowAlch, double HighAlch, int Bonuses[]) {
	// first, search for a free slot
	int slot = -1;
	for (int i = 0; i &lt; 20082; i++) {
		if (ItemList[i] == null) {
			slot = i;
			break;
		}
	}

	if(slot == -1) return;		// no free slot found
	ItemList newItemList = new ItemList(ItemId);
	newItemList.itemName = ItemName;
	newItemList.itemDescription = ItemDescription;
	newItemList.ShopValue = ShopValue;
	newItemList.LowAlch = LowAlch;
	newItemList.HighAlch = HighAlch;
	newItemList.Bonuses = Bonuses;
	ItemList[slot] = newItemList;
}

public void loadItemPrices(String filename) {
	try {
		Scanner s = new Scanner(new File("./data/cfg/" + filename));
		while (s.hasNextLine()) {
			String[] line = s.nextLine().split(" ");
			ItemList temp = getItemList(Integer.parseInt(line[0]));
			if (temp != null)
				temp.ShopValue = Integer.parseInt(line[1]);			
		}		
	} catch (IOException e) {
		e.printStackTrace();		
	}
}

public ItemList getItemList(int i) {
	for (int j = 0; j &lt; ItemList.length; j++) {
		if (ItemList[j] != null) {
			if (ItemList[j].itemId == i) {
				return ItemList[j];				
			}		
		}		
	}
	return null;
}

public boolean loadItemList(String FileName) {
	String line = "";
	String token = "";
	String token2 = "";
	String token2_2 = "";
	String[] token3 = new String[10];
	boolean EndOfFile = false;
	int ReadMode = 0;
	BufferedReader characterfile = null;
	try {
		characterfile = new BufferedReader(new FileReader("./Data/cfg/"+FileName));
	} catch(FileNotFoundException fileex) {
		Misc.println(FileName+": file not found.");
		return false;
	}
	try {
		line = characterfile.readLine();
	} catch(IOException ioexception) {
		Misc.println(FileName+": error loading file.");
		return false;
	}
	while(EndOfFile == false &amp;&amp; line != null) {
		line = line.trim();
		int spot = line.indexOf("=");
		if (spot &gt; -1) {
			token = line.substring(0, spot);
			token = token.trim();
			token2 = line.substring(spot + 1);
			token2 = token2.trim();
			token2_2 = token2.replaceAll("\t\t", "\t");
			token2_2 = token2_2.replaceAll("\t\t", "\t");
			token2_2 = token2_2.replaceAll("\t\t", "\t");
			token2_2 = token2_2.replaceAll("\t\t", "\t");
			token2_2 = token2_2.replaceAll("\t\t", "\t");
			token3 = token2_2.split("\t");
			if (token.equals("item")) {
				int[] Bonuses = new int[12];
				for (int i = 0; i &lt; 12; i++) {
					if (token3[(6 + i)] != null) {
						Bonuses[i] = Integer.parseInt(token3[(6 + i)]);
					} else {
						break;
					}
				}
				newItemList(Integer.parseInt(token3[0]), token3[1].replaceAll("_", " "), token3[2].replaceAll("_", " "), Double.parseDouble(token3[4]), Double.parseDouble(token3[4]), Double.parseDouble(token3[6]), Bonuses);
			}
		} else {
			if (line.equals("[ENDOFITEMLIST]")) {
				try { characterfile.close(); } catch(IOException ioexception) { }
				return true;
			}
		}
		try {
			line = characterfile.readLine();
		} catch(IOException ioexception1) { EndOfFile = true; }
	}
	try { characterfile.close(); } catch(IOException ioexception) { }
	return false;
}
</code></pre>
<p>}<br>
[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/run-server-shuts-down/439998/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/run-server-shuts-down/439998/3</link>
        <pubDate>Wed, 18 Apr 2012 23:11:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-439998-3</guid>
        <source url="https://forum.moparisthebest.com/t/run-server-shuts-down/439998.rss">Run Server Shuts Down</source>
      </item>
      <item>
        <title>Run Server Shuts Down</title>
        <dc:creator><![CDATA[@matzie matzie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/matzie">@matzie</a> wrote:</p>
          <blockquote>
              <p>were you editing in your ItemHandler class? because there is an array somewhere in there that is not supposed to go to 17. (max number should be less)</p>
<p>check line 365 of your ItemHandler class</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/run-server-shuts-down/439998/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/run-server-shuts-down/439998/2</link>
        <pubDate>Wed, 18 Apr 2012 23:05:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-439998-2</guid>
        <source url="https://forum.moparisthebest.com/t/run-server-shuts-down/439998.rss">Run Server Shuts Down</source>
      </item>
      <item>
        <title>Run Server Shuts Down</title>
        <dc:creator><![CDATA[@volsfan18 volsfan18]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/volsfan18">@volsfan18</a> wrote:</p>
          <blockquote>
              <p>Well I have a weird error, that I don’t know how to fix… Any help? And can I have explanation with the help so I can learn from the mistake? Here is what it says when trying to run:<br>
<img src="http://i1132.photobucket.com/albums/m563/volsfantd/MessedupPI.png" alt width="654" height="342"><br>
Add me on skype: <a href="mailto:volsfantd@yahoo.com">volsfantd@yahoo.com</a> or post here to help, please.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/run-server-shuts-down/439998/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/run-server-shuts-down/439998/1</link>
        <pubDate>Wed, 18 Apr 2012 23:03:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-439998-1</guid>
        <source url="https://forum.moparisthebest.com/t/run-server-shuts-down/439998.rss">Run Server Shuts Down</source>
      </item>
  </channel>
</rss>
