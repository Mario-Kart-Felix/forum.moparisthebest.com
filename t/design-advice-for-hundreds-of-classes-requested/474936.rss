<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Design advice for hundreds of classes requested</title>
    <link>https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936</link>
    <description>I&#39;m working on a little Pokemon project. As you probably know, there are hundreds of different Species. Each Species has a name, and set of base stats (hitpoints, attack, defense, special attack, special defense). I&#39;m trying to determine the most appropriate way to model these. My first implementation is

[code=Java]
public class Species {

    public String getName() {
        return name;
    }

    public final int getBaseHitpoints() {
        return baseHitpoints;
    }

    public final int getBaseAttack() {
        return baseAttack;
    }

    // ...

    protected Species(final String name, final int baseHitpoints,  final int baseAttack, /* ... */) {
        this.name = name;
        this.baseHitpoints = baseHitpoints;
        this.baseAttack = baseAttack;
    }

    private final String name;
    private final int baseHitpoints;
    private final int baseAttack;
    // ...
}

public final class Pikachu {
    public Pikachu(final String name, final int baseHitpoints, final int baseAttack) {
        super(name, baseHitpoints, baseAttack);
    }
}
[/code]

Is there a benefit in extracting those methods into an interface instead, and having each species implement that interface?
[code=Java]
public interface Species {

    public String getName();
    public int getBaseHitpoints();
    public int getBaseAttack();
}

public class Pikachu implements Species {

    @Override
    public String getName() {
        return &quot;Pikachu&quot;;
    }

    @Override
    public int getBaseHitpoints() {
        return 35;
    }

    @Override
    public int getBaseAttack() {
        return 55;
    }

    // ...
}
[/code]

I feel like using an interface in this manner is a form of abuse, as (to my understanding) interfaces are to be used to define behavior, and (for example) every time [i]getName[/i] is called, the name would be a new instance of a String loaded into memory.

Then I had the problem of defining what Pokemon evolves into what (which prompted my first idea of using an interface), but have revised it to the first implementation of the Species class, and then having an &quot;Evolveable&quot; interface, such that

[code=Java]
public interface Evolveable {

    public boolean evolvesInto(final Species species);

    public boolean evolvesFrom(final Species species);
}

public class Pikachu extends Species implements Evolveable {
    // first implementation

    @Override
    public boolean evolvesInto(final Species species) {
        return species.equals(Raichu);
    }

    @Override
    public boolean evolvesFrom(final Species species) {
        return species.equals(Pichu);
    }
}
[/code]

However, this exposed a new problem; and that is defining the evolutionary chain. As you can see, you would either need to make a new instance of the species (which isn&#39;t proper), or perhaps use the species name, such that
[code=Java]
public boolean evolvesInto(final Species species) {
    return species.getName().equals(&quot;Raichu&quot;);
}
[/code]

Which brings back the problem of creating a new string every time the method is called.

One alternative I can think of is to use the Singleton pattern, such that for each Species defined
[code=Java]
public class Pikachu extends Species implements Evolveable {
    public static final Pikachu INSTANCE = new Pikachu();

    private Pikachu() {
        super(...);
    }
}
[/code]

Which allows
[code=Java]
public boolean evolvesInto(final Species species) {
    return species.equals(Raichu.INSTANCE);
}
[/code]

However, I have no way of enforcing a static method in each class, and seems like bad practice.

To this, the only other alternative I can think of is to define the Species as an enum
[code=Java]
public enum Species implements Evolveable {
    PIKACHU(...) {
        @Override
        public boolean evolvesInto(final Species species) {
            return species == RAICHU;
        }
    },
    RAICHU(...) {
        @Override
        public boolean evolvesFrom(final Species species) {
            return species == PIKACHU;
        }
    };
}
[/code]

But this does not let me easily add new Species (which is a requirement), and the species enum becomes very large (currently 600+ members).

One idea was perhaps creating an EvolutionaryChain, such that
[code=Java]
public class PikachuChain implements EvolutionaryChain {

    @Override
    public Species getNext() {
        return Raichu;
    }

    @Override
    public Species getPrevious() {
        return Pichu;
    }
}
[/code]

But then we&#39;re back at the whole Singleton issue.

The final thing I could think of, was to load the attributes externally, store them in a repository, and access them from there, such that
[code=Java]
public class SpeciesRepository {

    public Species getSpecies(final String name) {
        // return species if one exists with the name,
        // if the species isn&#39;t in the map, try to create a new instance
        // null otherwise
    }

    private final Map&lt;String, Species&gt; species = ...;
}

public class Pikachu extends Species implements Evolveable {

    Pikachu(...) {
        super (...);
    }

    @Override
    public boolean evolvesInto(final Species species) {
        return species.equals(SpeciesRepository.getSpecies(&quot;Raichu&quot;));
    }
}
[/code]

But that&#39;s essentially the same solution as comparing it by name.

If you have any design suggestions to clean this up a bit, I&#39;d love to hear them.</description>
    
    <lastBuildDate>Mon, 24 Dec 2012 22:32:28 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Design advice for hundreds of classes requested</title>
        <dc:creator><![CDATA[@Cres Cres]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cres">@Cres</a> wrote:</p>
          <blockquote>
              <p>Load the evolutions seperately.<br>
Simply load all the Pokémon information first (independant of eachother).<br>
Load that to a list.<br>
Then load the evolution data:<br>
pokeID1 evolves at level x to pokeID2</p>
<p>As for the stats/lvls/skills/behaviour…<br>
You can load the skills seperately again. (a 3rd database)<br>
and define which type of pokemon this skill is designed for.<br>
so basically you’d have to load your skills first before you can define which elements your pokémon needs.<br>
For example; not every pokémon has a tail;<br>
0 Electrocute Electric<br>
1 Tail_Whip Physical/require_TAIL</p>
<p>At least, that’s how I’d do it xD</p>
<p>EDIT:<br>
As for the class structure; you would be allowed to keep it VERY simple<br>
class Pokémon -&gt;</p>
<ul>
<li>String: name</li>
<li>byte: level</li>
<li>byte[]: type (physical/electric/pyro/leaf/…)</li>
<li>byte[]: skills (tailwhip/bite/electrocute/ -&gt; simply asign an id to every skills, think of that 3rd database)<br>
etc<br>
You wouldn’t even need an abstract class or interfaces… all the data you need is in 3 lists and all the<br>
data regarding your pokemon is loaded in 1 compact class.</li>
</ul>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/22">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/22</link>
        <pubDate>Mon, 24 Dec 2012 22:32:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-474936-22</guid>
        <source url="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936.rss">Design advice for hundreds of classes requested</source>
      </item>
      <item>
        <title>Design advice for hundreds of classes requested</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>[quote=“Davidi2, post:20, topic:474936”][quote author=sinisoul link=topic=592946.msg4186046#msg4186046 date=1356153988]<br>
JSON would be perfect for this, also, creating a class for each pokemon sounds horrendous. Abstract out their behavior and then be done with it, or even, format their behavior in such a way that you can load it through data :eek:<br>
[/quote]aren’t you the one that used SQL for basic server config?[/quote]</p>
<p>No I think you are mistaking me for someone else.</p>
<p>Inb4 yes, although note the purposes of using SQL was so that we had a web control panel (which we did, and it worked pretty well). Not the simplest of solutions though.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/21">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/21</link>
        <pubDate>Sun, 23 Dec 2012 22:44:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-474936-21</guid>
        <source url="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936.rss">Design advice for hundreds of classes requested</source>
      </item>
      <item>
        <title>Design advice for hundreds of classes requested</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>[quote=“sinisoul, post:18, topic:474936”]JSON would be perfect for this, also, creating a class for each pokemon sounds horrendous. Abstract out their behavior and then be done with it, or even, format their behavior in such a way that you can load it through data :eek:[/quote]aren’t you the one that used SQL for basic server config?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/20">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/20</link>
        <pubDate>Sat, 22 Dec 2012 07:15:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-474936-20</guid>
        <source url="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936.rss">Design advice for hundreds of classes requested</source>
      </item>
      <item>
        <title>Design advice for hundreds of classes requested</title>
        <dc:creator><![CDATA[@RSCShadow RSCShadow]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rscshadow">@RSCShadow</a> wrote:</p>
          <blockquote>
              <p>[quote=“sinisoul, post:18, topic:474936”]JSON would be perfect for this, also, creating a class for each pokemon sounds horrendous. Abstract out their behavior and then be done with it, or even, format their behavior in such a way that you can load it through data :eek:[/quote]I like this guy. +1</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/19">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/19</link>
        <pubDate>Sat, 22 Dec 2012 06:45:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-474936-19</guid>
        <source url="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936.rss">Design advice for hundreds of classes requested</source>
      </item>
      <item>
        <title>Design advice for hundreds of classes requested</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>JSON would be perfect for this, also, creating a class for each pokemon sounds horrendous. Abstract out their behavior and then be done with it, or even, format their behavior in such a way that you can load it through data :eek:</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/18</link>
        <pubDate>Sat, 22 Dec 2012 05:26:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-474936-18</guid>
        <source url="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936.rss">Design advice for hundreds of classes requested</source>
      </item>
      <item>
        <title>Design advice for hundreds of classes requested</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>I was hoping to have a pure Java implementation, but I don’t think it’s very practical at this point. I’ll be using SQL anyways for the editing.</p>
<p>After changing by system (and being at a job interview for 6 hours), I believe I’ve set things up pretty well. The only thing I’m thinking of now is how to model the moves of each pokemon. I suppose I could just use Clojure or another scripting language to do those.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/17</link>
        <pubDate>Sat, 22 Dec 2012 00:38:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-474936-17</guid>
        <source url="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936.rss">Design advice for hundreds of classes requested</source>
      </item>
      <item>
        <title>Design advice for hundreds of classes requested</title>
        <dc:creator><![CDATA[@RSCShadow RSCShadow]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rscshadow">@RSCShadow</a> wrote:</p>
          <blockquote>
              <p>[quote=“Davidi2, post:10, topic:474936”][quote author=RSCShadow link=topic=592946.msg4185582#msg4185582 date=1356110793]<br>
XML is a poor choice for data saving in this case.<br>
[/quote]Actually it’s a fine choice, but I did specifically point out that other choices</p>
<p>EDIT - I know you’re pro json, but XML isn’t “poor”, especially when we’re not even in a web context[/quote]XML is for documents. JSON does a better job with data, which is what we’re dealing with here. Also it doesn’t really matter what context we’re in as JSON supports almost any modern language.</p>
<p><a href="http://www.json.org/xml.html" class="onebox" target="_blank" rel="nofollow noopener">http://www.json.org/xml.html</a><br>
<a href="http://www.json.org/" rel="nofollow noopener">http://www.json.org/</a> (Scroll down a bit for some of the library list)</p>
<blockquote>whereas others would argue that having to put quotes around every member and identifier is confusing, and much harder to format without andy obvious closing information for identifiers</blockquote>You put quotes around strings and object keys (which are strings). It isn't hard to format at all if you use a text editor or IDE made in the last 10 years.
<p><img src="http://i.imgur.com/z55lL.png" alt width="486" height="432"> <div class="lightbox-wrapper"><a class="lightbox" href="http://i.imgur.com/aCZsZ.png" title="aCZsZ.png" rel="nofollow noopener"><img src="http://i.imgur.com/aCZsZ.png" alt width="594" height="500"><div class="meta">
<svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use xlink:href="#far-image"></use></svg><span class="filename">aCZsZ.png</span><span class="informations">597×502</span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use xlink:href="#discourse-expand"></use></svg>
</div></a></div></p>
<p>And if you’re trying to format an object or an array, you have curly braces and square brackets to open and close respectively. It’s a lot easier to tell data types in JSON without relying on DOCTYPES.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/16</link>
        <pubDate>Fri, 21 Dec 2012 23:17:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-474936-16</guid>
        <source url="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936.rss">Design advice for hundreds of classes requested</source>
      </item>
      <item>
        <title>Design advice for hundreds of classes requested</title>
        <dc:creator><![CDATA[@Rodgerwilco Rodgerwilco]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rodgerwilco">@Rodgerwilco</a> wrote:</p>
          <blockquote>
              <p>Assuming you will want a website (if this was a serious project) you should go with sql.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/15</link>
        <pubDate>Fri, 21 Dec 2012 21:10:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-474936-15</guid>
        <source url="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936.rss">Design advice for hundreds of classes requested</source>
      </item>
      <item>
        <title>Design advice for hundreds of classes requested</title>
        <dc:creator><![CDATA[@bowserjr2 Bowser jr]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bowserjr2">@bowserjr2</a> wrote:</p>
          <blockquote>
              <p>[quote=“Davidi2, post:13, topic:474936”][quote author=imthenull link=topic=592946.msg4185606#msg4185606 date=1356115020]<br>
xml is too verbose and hard to read, for me.<br>
[/quote]whereas others would argue that having to put quotes around every member and identifier is confusing, and much harder to format without an<span class="bbcode-s">d</span>y obvious closing information for identifiers[/quote]<br>
And you would be better off by having some sort of system to generate the XML for you.<br>
A simple GUI to fill in the variables and save the nodes should save you some time. (When you want 600++ Pokemons).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/14</link>
        <pubDate>Fri, 21 Dec 2012 20:47:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-474936-14</guid>
        <source url="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936.rss">Design advice for hundreds of classes requested</source>
      </item>
      <item>
        <title>Design advice for hundreds of classes requested</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>[quote=“imthenull, post:11, topic:474936”]xml is too verbose and hard to read, for me.[/quote]whereas others would argue that having to put quotes around every member and identifier is confusing, and much harder to format without an<span class="bbcode-s">d</span>y obvious closing information for identifiers</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/13</link>
        <pubDate>Fri, 21 Dec 2012 18:40:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-474936-13</guid>
        <source url="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936.rss">Design advice for hundreds of classes requested</source>
      </item>
      <item>
        <title>Design advice for hundreds of classes requested</title>
        <dc:creator><![CDATA[@CoonHunter CoonHunter]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/coonhunter">@CoonHunter</a> wrote:</p>
          <blockquote>
              <p>If you use an MySQL database you could run it so that contain it contains name, stats (stores in seperate prices) and the I’d of the Pokemon it evolves into, if it evolves at all. Might create a slightly smaller memory footprint to.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/12</link>
        <pubDate>Fri, 21 Dec 2012 18:38:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-474936-12</guid>
        <source url="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936.rss">Design advice for hundreds of classes requested</source>
      </item>
      <item>
        <title>Design advice for hundreds of classes requested</title>
        <dc:creator><![CDATA[@imthenull imthenull]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imthenull">@imthenull</a> wrote:</p>
          <blockquote>
              <p>xml is too verbose and hard to read, for me.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/11</link>
        <pubDate>Fri, 21 Dec 2012 18:37:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-474936-11</guid>
        <source url="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936.rss">Design advice for hundreds of classes requested</source>
      </item>
      <item>
        <title>Design advice for hundreds of classes requested</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>[quote=“RSCShadow, post:8, topic:474936”]XML is a poor choice for data saving in this case.[/quote]Actually it’s a fine choice, but I did specifically point out that other choices</p>
<p>EDIT - I know you’re pro json, but XML isn’t “poor”, especially when we’re not even in a web context</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/10</link>
        <pubDate>Fri, 21 Dec 2012 18:28:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-474936-10</guid>
        <source url="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936.rss">Design advice for hundreds of classes requested</source>
      </item>
      <item>
        <title>Design advice for hundreds of classes requested</title>
        <dc:creator><![CDATA[@imthenull imthenull]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imthenull">@imthenull</a> wrote:</p>
          <blockquote>
              <p>[quote=“RSCShadow, post:8, topic:474936”][quote author=imthenull link=topic=592946.msg4185547#msg4185547 date=1356106412]<br>
JSON would be a nice way to store pokemon attributes</p>
<p><code>{
	"pichu": {
		"hits": 20,
		"attack-power": 7,
		"evolves-into": "pikachu"
 	}
	"pikachu": {
		"hits": 55,
		"attack-power": 12,
		"evolves-from": "pichu",
		"evolves-into": "raichu"
 	}
	"raichu": {
		"hits": 70,
		"attack-power": 20,
		"evolves-from": "pikachu"
 	}
}</code><br>
[/quote]You’re missing commas.[/quote]<br>
l2 pseudocode</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/9</link>
        <pubDate>Fri, 21 Dec 2012 18:03:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-474936-9</guid>
        <source url="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936.rss">Design advice for hundreds of classes requested</source>
      </item>
      <item>
        <title>Design advice for hundreds of classes requested</title>
        <dc:creator><![CDATA[@RSCShadow RSCShadow]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rscshadow">@RSCShadow</a> wrote:</p>
          <blockquote>
              <p>[quote=“imthenull, post:6, topic:474936”]JSON would be a nice way to store pokemon attributes</p>
<p><code>{
	"pichu": {
		"hits": 20,
		"attack-power": 7,
		"evolves-into": "pikachu"
 	}
	"pikachu": {
		"hits": 55,
		"attack-power": 12,
		"evolves-from": "pichu",
		"evolves-into": "raichu"
 	}
	"raichu": {
		"hits": 70,
		"attack-power": 20,
		"evolves-from": "pikachu"
 	}
}</code>[/quote]You’re missing commas.</p>
<p>[quote=“Davidi2, post:7, topic:474936”]If you design it correctly, you shouldn’t even need to have an ‘evolves into’ or ‘evolves from’ variable.</p>
<p>[tt]class Pokemon {<br>
Type type;<br>
PokeStage[] evolutions;<br>
}</p>
<p>class PokeStage {<br>
String name;<br>
int baseHits;<br>
etc…<br>
}<br>
[/tt]<br>
and the database would be simple, here’s an XML example<br>
[tt]<br>
Type.LIGHTNING<br>
<br>
<br>
Pichu<br>
10<br>
othershit<br>
<br>
<br>
Pikachu<br>
20<br>
othershit<br>
<br>
<br>
Raichu<br>
40<br>
othershit<br>
<br>
<br>
<br>
[/tt]<br>
obviously you could use a different type of storage but that’s probably the sort of design I’d use at a first glance of what you’re trying to do</p>
<p>For each persons pokemon you’d then just have an instance of some class that extends poketype, which has the stat modifiers (so in calculating their stat it would be poketype.batestat +/- poketypeinstance.statmodifier) and other info in it (like customized name, etc)[/quote]XML is a poor choice for data saving in this case.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/8</link>
        <pubDate>Fri, 21 Dec 2012 17:26:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-474936-8</guid>
        <source url="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936.rss">Design advice for hundreds of classes requested</source>
      </item>
      <item>
        <title>Design advice for hundreds of classes requested</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>If you design it correctly, you shouldn’t even need to have an ‘evolves into’ or ‘evolves from’ variable.</p>
<p>[tt]class Pokemon {<br>
Type type;<br>
PokeStage[] evolutions;<br>
}</p>
<p>class PokeStage {<br>
String name;<br>
int baseHits;<br>
etc…<br>
}<br>
[/tt]<br>
and the database would be simple, here’s an XML example<br>
[tt]<br>
Type.LIGHTNING<br>
<br>
<br>
Pichu<br>
10<br>
othershit<br>
<br>
<br>
Pikachu<br>
20<br>
othershit<br>
<br>
<br>
Raichu<br>
40<br>
othershit<br>
<br>
<br>
<br>
[/tt]<br>
obviously you could use a different type of storage but that’s probably the sort of design I’d use at a first glance of what you’re trying to do</p>
<p>For each persons pokemon you’d then just have an instance of some class that extends poketype, which has the stat modifiers (so in calculating their stat it would be poketype.batestat +/- poketypeinstance.statmodifier) and other info in it (like customized name, etc)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/7</link>
        <pubDate>Fri, 21 Dec 2012 17:08:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-474936-7</guid>
        <source url="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936.rss">Design advice for hundreds of classes requested</source>
      </item>
      <item>
        <title>Design advice for hundreds of classes requested</title>
        <dc:creator><![CDATA[@imthenull imthenull]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imthenull">@imthenull</a> wrote:</p>
          <blockquote>
              <p>JSON would be a nice way to store pokemon attributes</p>
<p><code>{
	"pichu": {
		"hits": 20,
		"attack-power": 7,
		"evolves-into": "pikachu"
 	}
	"pikachu": {
		"hits": 55,
		"attack-power": 12,
		"evolves-from": "pichu",
		"evolves-into": "raichu"
 	}
	"raichu": {
		"hits": 70,
		"attack-power": 20,
		"evolves-from": "pikachu"
 	}
}</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/6</link>
        <pubDate>Fri, 21 Dec 2012 16:13:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-474936-6</guid>
        <source url="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936.rss">Design advice for hundreds of classes requested</source>
      </item>
      <item>
        <title>Design advice for hundreds of classes requested</title>
        <dc:creator><![CDATA[@bowserjr2 Bowser jr]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bowserjr2">@bowserjr2</a> wrote:</p>
          <blockquote>
              <p>If you absolutely want to create unique Pokemons, have a fall-back. Make a note in the database that the game should load a special Pokemon class unique to that Pokemon.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/5</link>
        <pubDate>Fri, 21 Dec 2012 13:09:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-474936-5</guid>
        <source url="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936.rss">Design advice for hundreds of classes requested</source>
      </item>
      <item>
        <title>Design advice for hundreds of classes requested</title>
        <dc:creator><![CDATA[@silabsoft RuneAgent]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silabsoft">@silabsoft</a> wrote:</p>
          <blockquote>
              <p>i don’t know why you think you have less control over the behavior by using a database? that sounds like your first design flaw.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/4</link>
        <pubDate>Fri, 21 Dec 2012 08:27:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-474936-4</guid>
        <source url="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936.rss">Design advice for hundreds of classes requested</source>
      </item>
      <item>
        <title>Design advice for hundreds of classes requested</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="2" data-topic="474936">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/lin/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Lin:</div>
<blockquote>
<p>For the love of God, PLEASE don’t make a separate class for each Pokemon. Every single game just has a table of values for the Pokemon’s base stats, moveset, etc… Create ONE Pokemon class and make them load the data from dumps.</p>
</blockquote>
</aside>
<p>I know how the Pokemon are stored in the games (I’ve done my research <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"> ). An alternative I forgot to mention in the post was using a database to load the base states, gender ratio, etc. But doing this, I have less control over the behavior. My project allows the creation of unique Pokemon, and flawless integration of them. Using a database would allow me to have the evolutionary chain defined as some columns, next_evolution, and previous_evolution.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/3</link>
        <pubDate>Fri, 21 Dec 2012 07:47:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-474936-3</guid>
        <source url="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936.rss">Design advice for hundreds of classes requested</source>
      </item>
      <item>
        <title>Design advice for hundreds of classes requested</title>
        <dc:creator><![CDATA[@Lin Lin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lin">@Lin</a> wrote:</p>
          <blockquote>
              <p>For the love of God, PLEASE don’t make a separate class for each Pokemon. Every single game just has a table of values for the Pokemon’s base stats, moveset, etc… Create ONE Pokemon class and make them load the data from dumps.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/2</link>
        <pubDate>Fri, 21 Dec 2012 07:40:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-474936-2</guid>
        <source url="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936.rss">Design advice for hundreds of classes requested</source>
      </item>
      <item>
        <title>Design advice for hundreds of classes requested</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>I’m working on a little Pokemon project. As you probably know, there are hundreds of different Species. Each Species has a name, and set of base stats (hitpoints, attack, defense, special attack, special defense). I’m trying to determine the most appropriate way to model these. My first implementation is</p>
<pre><code class="lang-auto">public class Species {

    public String getName() {
        return name;
    }

    public final int getBaseHitpoints() {
        return baseHitpoints;
    }

    public final int getBaseAttack() {
        return baseAttack;
    }

    // ...

    protected Species(final String name, final int baseHitpoints,  final int baseAttack, /* ... */) {
        this.name = name;
        this.baseHitpoints = baseHitpoints;
        this.baseAttack = baseAttack;
    }

    private final String name;
    private final int baseHitpoints;
    private final int baseAttack;
    // ...
}

public final class Pikachu {
    public Pikachu(final String name, final int baseHitpoints, final int baseAttack) {
        super(name, baseHitpoints, baseAttack);
    }
}</code></pre>
<p>Is there a benefit in extracting those methods into an interface instead, and having each species implement that interface?</p>
<pre><code class="lang-auto">public interface Species {

    public String getName();
    public int getBaseHitpoints();
    public int getBaseAttack();
}

public class Pikachu implements Species {

    @Override
    public String getName() {
        return "Pikachu";
    }

    @Override
    public int getBaseHitpoints() {
        return 35;
    }

    @Override
    public int getBaseAttack() {
        return 55;
    }

    // ...
}</code></pre>
<p>I feel like using an interface in this manner is a form of abuse, as (to my understanding) interfaces are to be used to define behavior, and (for example) every time <span class="bbcode-i">getName</span> is called, the name would be a new instance of a String loaded into memory.</p>
<p>Then I had the problem of defining what Pokemon evolves into what (which prompted my first idea of using an interface), but have revised it to the first implementation of the Species class, and then having an “Evolveable” interface, such that</p>
<pre><code class="lang-auto">public interface Evolveable {

    public boolean evolvesInto(final Species species);

    public boolean evolvesFrom(final Species species);
}

public class Pikachu extends Species implements Evolveable {
    // first implementation

    @Override
    public boolean evolvesInto(final Species species) {
        return species.equals(Raichu);
    }

    @Override
    public boolean evolvesFrom(final Species species) {
        return species.equals(Pichu);
    }
}</code></pre>
<p>However, this exposed a new problem; and that is defining the evolutionary chain. As you can see, you would either need to make a new instance of the species (which isn’t proper), or perhaps use the species name, such that</p>
<pre><code class="lang-auto">public boolean evolvesInto(final Species species) {
    return species.getName().equals("Raichu");
}</code></pre>
<p>Which brings back the problem of creating a new string every time the method is called.</p>
<p>One alternative I can think of is to use the Singleton pattern, such that for each Species defined</p>
<pre><code class="lang-auto">public class Pikachu extends Species implements Evolveable {
    public static final Pikachu INSTANCE = new Pikachu();

    private Pikachu() {
        super(...);
    }
}</code></pre>
<p>Which allows</p>
<pre><code class="lang-auto">public boolean evolvesInto(final Species species) {
    return species.equals(Raichu.INSTANCE);
}</code></pre>
<p>However, I have no way of enforcing a static method in each class, and seems like bad practice.</p>
<p>To this, the only other alternative I can think of is to define the Species as an enum</p>
<pre><code class="lang-auto">public enum Species implements Evolveable {
    PIKACHU(...) {
        @Override
        public boolean evolvesInto(final Species species) {
            return species == RAICHU;
        }
    },
    RAICHU(...) {
        @Override
        public boolean evolvesFrom(final Species species) {
            return species == PIKACHU;
        }
    };
}</code></pre>
<p>But this does not let me easily add new Species (which is a requirement), and the species enum becomes very large (currently 600+ members).</p>
<p>One idea was perhaps creating an EvolutionaryChain, such that</p>
<pre><code class="lang-auto">public class PikachuChain implements EvolutionaryChain {

    @Override
    public Species getNext() {
        return Raichu;
    }

    @Override
    public Species getPrevious() {
        return Pichu;
    }
}</code></pre>
<p>But then we’re back at the whole Singleton issue.</p>
<p>The final thing I could think of, was to load the attributes externally, store them in a repository, and access them from there, such that</p>
<pre><code class="lang-auto">public class SpeciesRepository {

    public Species getSpecies(final String name) {
        // return species if one exists with the name,
        // if the species isn't in the map, try to create a new instance
        // null otherwise
    }

    private final Map&lt;String, Species&gt; species = ...;
}

public class Pikachu extends Species implements Evolveable {

    Pikachu(...) {
        super (...);
    }

    @Override
    public boolean evolvesInto(final Species species) {
        return species.equals(SpeciesRepository.getSpecies("Raichu"));
    }
}</code></pre>
<p>But that’s essentially the same solution as comparing it by name.</p>
<p>If you have any design suggestions to clean this up a bit, I’d love to hear them.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936/1</link>
        <pubDate>Fri, 21 Dec 2012 07:29:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-474936-1</guid>
        <source url="https://forum.moparisthebest.com/t/design-advice-for-hundreds-of-classes-requested/474936.rss">Design advice for hundreds of classes requested</source>
      </item>
  </channel>
</rss>
