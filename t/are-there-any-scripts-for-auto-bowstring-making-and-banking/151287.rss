<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Are there any Scripts for auto bowstring making and banking?</title>
    <link>https://forum.moparisthebest.com/t/are-there-any-scripts-for-auto-bowstring-making-and-banking/151287</link>
    <description>Any?  :eek:</description>
    
    <lastBuildDate>Sat, 13 Oct 2007 17:52:02 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/are-there-any-scripts-for-auto-bowstring-making-and-banking/151287.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Are there any Scripts for auto bowstring making and banking?</title>
        <dc:creator><![CDATA[@revean32 revean32]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/revean32">@revean32</a> wrote:</p>
          <blockquote>
              <p>Thank you sorry bout posting in wrong section ill be sure to pay more attention.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/are-there-any-scripts-for-auto-bowstring-making-and-banking/151287/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/are-there-any-scripts-for-auto-bowstring-making-and-banking/151287/3</link>
        <pubDate>Sat, 13 Oct 2007 17:52:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-151287-3</guid>
        <source url="https://forum.moparisthebest.com/t/are-there-any-scripts-for-auto-bowstring-making-and-banking/151287.rss">Are there any Scripts for auto bowstring making and banking?</source>
      </item>
      <item>
        <title>Are there any Scripts for auto bowstring making and banking?</title>
        <dc:creator><![CDATA[@Nashi Nashi]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/nashi">@Nashi</a> wrote:</p>
          <blockquote>
              <p>[code]program StringerAndFletcherByNashi;</p>
<p>Const<br>
Chest = False; //Using A Chest or Bank Booth;</p>
<p>//PRESS F2 TO START SCRIPT AFTER YOU HAVE FILLED IN FORM</p>
<p>{<br>
//|||||||||||||||||||||||||||||\<br>
||   SRL Stringer &amp; Fletcher   ||<br>
||          By Nashi           ||<br>
||  BowStrings In 1st BankSlot ||<br>
||  Unstrung Bows In 2nd &amp;     ||<br>
||  Logs In 3rd BankSlot       ||<br>
\|||||||||||||||||||||||||||||//</p>
<p>I AM NOT RESPONIBLE FOR ANY BANNAGE<br>
OR MUTING OF ANY ACCOUNT USING THIS<br>
}</p>
<p>Type<br>
I = Integer;<br>
S = String;<br>
B = Boolean;</p>
<p>Procedure SetUp; Forward;</p>
<p>{.include SRL\SRL.scar}</p>
<p>Var<br>
BowS, Bow, X, Y, Strung, Log, Fletched, TFletch, TString, BankColour, Nashi: I;<br>
TRFletch, TRString: S;<br>
RString, RFletch: B;<br>
frm1Design : TForm;<br>
Labell1, Labell2, Labell3, Labell4, Labell5, Labell6 : TLabel;<br>
Edit1, Edit2 : TEdit;<br>
ComboBox1, ComboBox2 : TComboBox;<br>
Edit3, Edit4 : TEdit;<br>
Button1 : TButton;</p>
<p>Function BMPInv(Bitmap: Integer): B;<br>
Var<br>
Rx, Ry: I;<br>
begin<br>
Result:= False;<br>
If FindBitmapSpiralTolerance(Bitmap, Rx, Ry, MIX1, MIY1, MIX2, MIY2, 15) then<br>
Result:= True;<br>
end;</p>
<p>Function BMPMaskInv(Bitmap: Integer): B;<br>
Var<br>
Rx, Ry: I;<br>
begin<br>
Result:= False;<br>
If FindBitmapMaskTolerance(Bitmap, Rx, Ry, MIX1, MIY1, MIX2, MIY2, 15, 25) then<br>
Result:= True;<br>
end;</p>
<p>procedure UseItem(Slot: I);<br>
begin<br>
MouseItem(Slot, True);<br>
end;</p>
<p>Procedure UseItems(Inv1, Inv2: I);<br>
begin<br>
UseItem(Inv1);<br>
Wait(150+Random(100));<br>
UseItem(Inv2);<br>
Wait(100+Random(150));<br>
end;</p>
<p>Procedure FletchEm;<br>
Begin<br>
If Not BMPMaskInv(Log) then Exit;<br>
Case Random(2) of<br>
0:<br>
UseItems(2, 1);<br>
1:<br>
UseItems(1, 2);<br>
end;<br>
Wait(250+random(200));<br>
Mouse(265, 400, 10, 10, False);<br>
Wait(250+random(200));<br>
ChooseOption(‘X’);<br>
Wait(550+random(200));<br>
TypeSend(IntToStr(27+Random(1000)));<br>
Repeat<br>
Wait(750);<br>
FindNormalRandoms;<br>
Until(Not BMPMaskInv(Log));<br>
Fletched := Fletched + 27;<br>
end;</p>
<p>Procedure StringEm;<br>
Begin<br>
If Not BMPInv(BowS) or Not BMPMaskInv(Bow) then Exit;<br>
Repeat<br>
Case Random(2) of<br>
0:<br>
UseItems(21, 22);<br>
1:<br>
UseItems(22, 21);<br>
end;<br>
FindNormalRandoms;<br>
Until((Not BMPInv(BowS)) and (Not BMPMaskInv(Bow)));<br>
Strung:= Strung + 11;<br>
end;</p>
<p>Procedure OpenChest(ChestColour: I);<br>
begin<br>
If FindObj(x, y, ‘Bank’, ChestColour, 5) then begin<br>
Mouse(x, y, 0, 0, True);<br>
Repeat Wait(750+random(500)); Until(BankScreen);<br>
end;<br>
end;</p>
<p>Procedure OpenBooth(BoothColour: I);<br>
begin<br>
If FindObj(x, y, ‘Use’, BoothColour, 5) then begin<br>
Mouse(x, y, 0, 0, False);<br>
Wait(750+random(500));<br>
ChooseOption(‘quickly’);<br>
Repeat Wait(750+random(500)); Until(BankScreen);<br>
end;<br>
end;</p>
<p>Procedure ModCloseBank;<br>
begin<br>
CloseBank; //Hey it’s an old script, I just deleted what was in here<br>
end;</p>
<p>Procedure DepWithEmString;<br>
Begin<br>
Deposit(1,28,2);<br>
Case Random(2) of<br>
0: Begin<br>
Withdraw(2, 1, 10);<br>
Wait(350+random(100));<br>
Withdraw(1, 1, 1);<br>
Wait(350+random(100));<br>
Withdraw(1, 1, 10);<br>
Wait(350+random(100));<br>
Withdraw(2, 1, 1);<br>
Wait(350+random(100));<br>
End;<br>
1: Begin<br>
Withdraw(2, 1, 10);<br>
Wait(350+random(100));<br>
Withdraw(1, 1, 1);<br>
Wait(350+random(100));<br>
Withdraw(1, 1, 10);<br>
Wait(350+random(100));<br>
Withdraw(2, 1, 1);<br>
Wait(350+random(100));<br>
End;<br>
End;<br>
ModCloseBank;<br>
Wait(150+random(200));<br>
end;</p>
<p>Procedure TPointMouse(Tpoint: TPoint; Left: B);<br>
begin<br>
Mouse(Tpoint.x, Tpoint.y, 2, 2, Left);<br>
end;</p>
<p>Procedure DepWithEmFletch;<br>
Var<br>
Tp: TPoint;<br>
Begin<br>
If Fletched&gt;=TFletch Then Deposit(1,28,2) Else Deposit(2, 28, 2);<br>
Tp.x:= 180 + Random(10);<br>
Tp.y:= 75 + Random(10);<br>
TpointMouse(Tp, False);<br>
Wait(50+random(200));<br>
ChooseOption(‘All’);<br>
Wait(350+random(100));<br>
ModCloseBank;<br>
Wait(150+random(200));<br>
end;</p>
<p>Procedure Report;<br>
begin<br>
ClearDebug;<br>
Writeln(‘Thank You For Using Nashi’‘s SRL Stringer &amp; Fletcher’);<br>
If Strung&gt;0 then begin<br>
Writeln(‘Strung ’ + IntToStr(Strung) + ’ Bows’);<br>
Writeln(‘Gained ’ + IntToStr(Strung<em>75) + ’ XP!’);<br>
end;<br>
If Fletched&gt;0 then begin<br>
Writeln(‘Cut ’ + IntToStr(Fletched) + ’ Bows’);<br>
Writeln('Gained ’ + IntToStr(Fletched</em>75) + ’ XP!’);<br>
end;<br>
Writeln(‘Gained At Total Of ’ + IntToStr((Fletched<em>75)+(Strung</em>75)) + ’ XP!’);<br>
Writeln('Worked For ’ + TimeRunning);<br>
end;</p>
<p>Procedure SetUp;<br>
begin<br>
TRString := ComboBox1.Text;<br>
TRFletch := ComboBox2.Text;<br>
If TRFletch=‘True’ then RFletch:=True Else RFletch:= False;<br>
If TRString=‘True’ then RString:=True Else RString:= False;<br>
NumberOfPlayers(1);<br>
Players[CurrentPlayer].Nick := Edit2.Text;<br>
TString := StrToInt(Edit3.Text);<br>
TFletch := StrToInt(Edit4.Text);<br>
BankColour := StrToInt(Edit1.Text);<br>
end;</p>
<p>procedure NHAntiBan; //Creds to Ashur2good, This is a slightly edited version of the one from your MonkKiller<br>
begin<br>
case Random(25) of<br>
1: PickUpMouse;<br>
2: MouseBox(MSX1, MSY1, MSX2, MSY2, False);<br>
3: AlmostLogout;<br>
4: HoverSkill(‘Defence’, False);<br>
5: HoverSkill(‘Attack’, False);<br>
6: MouseBox(MIX1, MIY1, MIX2, MIY2, False);<br>
7: HoverSkill(‘Strength’, False);<br>
8: RandomRClick;<br>
9: BoredHuman;<br>
10: GameTab(5);<br>
11: GameTab(6);<br>
12: GameTab(13);<br>
13: HoverSkill(‘Magic’, False);<br>
14: GameTab(Random(13) + 1);<br>
15: Wait(100 + Random(100));<br>
16: Wait(50 + Random(100));<br>
17: Wait(1000 + Random(100));<br>
19: BoredHuman;<br>
end;<br>
end;</p>
<p>Procedure BC(Sender: TObject);<br>
begin<br>
frm1Design.ModalResult := mrOk;<br>
SetUp;<br>
end;</p>
<p>Procedure PPaint;<br>
Var<br>
Pic: TCanvas;<br>
begin<br>
Pic:= GetBitmapCanvas(Nashi);<br>
SafeCopyCanvas(Pic, frm1Design.Canvas, 0, 0, 170, 80, 5, 5, 175, 85);<br>
end;</p>
<p>Procedure Paint(Sender: TObject);<br>
begin<br>
PPaint;<br>
end;</p>
<p>Procedure InitForm;<br>
begin</p>
<p>frm1Design := CreateForm;<br>
frm1Design.Left := 250;<br>
frm1Design.Top := 114;<br>
frm1Design.Width := 430;<br>
frm1Design.Height := 253;<br>
frm1Design.Caption := ‘SetUp For Nashi’<span class="hashtag">#39</span>’s SRL Stringer &amp; Fletcher’;<br>
frm1Design.Color := clBlack;<br>
frm1Design.Font.Color := clOlive;<br>
frm1Design.Font.Height := -11;<br>
frm1Design.Font.Name := ‘MS Sans Serif’;<br>
frm1Design.Font.Style := [];<br>
frm1Design.OnPaint := <a class="mention" href="/u/paint">@Paint</a>;<br>
frm1Design.Visible := False;<br>
frm1Design.PixelsPerInch := 96;</p>
<p>Labell2 := TLabel.Create(frm1Design);<br>
Labell2.Parent := frm1Design;<br>
Labell2.Left := 25;<br>
Labell2.Top := 109;<br>
Labell2.Width := 53;<br>
Labell2.Height := 13;<br>
Labell2.Caption := ‘NickName:’;</p>
<p>Labell3 := TLabel.Create(frm1Design);<br>
Labell3.Parent := frm1Design;<br>
Labell3.Left := 25;<br>
Labell3.Top := 147;<br>
Labell3.Width := 47;<br>
Labell3.Height := 13;<br>
Labell3.Caption := ‘Stringing?’;</p>
<p>Labell4 := TLabel.Create(frm1Design);<br>
Labell4.Parent := frm1Design;<br>
Labell4.Left := 225;<br>
Labell4.Top := 33;<br>
Labell4.Width := 49;<br>
Labell4.Height := 13;<br>
Labell4.Caption := ‘Fletching?’;</p>
<p>Labell5 := TLabel.Create(frm1Design);<br>
Labell5.Parent := frm1Design;<br>
Labell5.Left := 25;<br>
Labell5.Top := 183;<br>
Labell5.Width := 85;<br>
Labell5.Height := 13;<br>
Labell5.Caption := ‘Amount To String:’;</p>
<p>Labell6 := TLabel.Create(frm1Design);<br>
Labell6.Parent := frm1Design;<br>
Labell6.Left := 225;<br>
Labell6.Top := 74;<br>
Labell6.Width := 87;<br>
Labell6.Height := 13;<br>
Labell6.Caption := ‘Amount To Fletch:’;</p>
<p>Edit2 := TEdit.Create(frm1Design);<br>
Edit2.Parent := frm1Design;<br>
Edit2.Left := 88;<br>
Edit2.Top := 107;<br>
Edit2.Width := 121;<br>
Edit2.Height := 21;<br>
Edit2.Hint := ‘3 or 4 letters from Username’;<br>
Edit2.ParentShowHint := False;<br>
Edit2.ShowHint := True;<br>
Edit2.TabOrder := 8;</p>
<p>ComboBox1 := TComboBox.Create(frm1Design);<br>
ComboBox1.Parent := frm1Design;<br>
ComboBox1.Left := 88;<br>
ComboBox1.Top := 142;<br>
ComboBox1.Width := 121;<br>
ComboBox1.Height := 21;<br>
ComboBox1.ItemHeight := 13;<br>
ComboBox1.TabOrder := 9;<br>
ComboBox1.Items.Add(‘True’);<br>
ComboBox1.Items.Add(‘False’);</p>
<p>ComboBox2 := TComboBox.Create(frm1Design);<br>
ComboBox2.Parent := frm1Design;<br>
ComboBox2.Left := 288;<br>
ComboBox2.Top := 31;<br>
ComboBox2.Width := 121;<br>
ComboBox2.Height := 21;<br>
ComboBox2.ItemHeight := 13;<br>
ComboBox2.TabOrder := 10;<br>
ComboBox2.Items.Add(‘True’);<br>
ComboBox2.Items.Add(‘False’);</p>
<p>Edit3 := TEdit.Create(frm1Design);<br>
Edit3.Parent := frm1Design;<br>
Edit3.Left := 119;<br>
Edit3.Top := 179;<br>
Edit3.Width := 91;<br>
Edit3.Height := 21;<br>
Edit3.TabOrder := 11;</p>
<p>Edit4 := TEdit.Create(frm1Design);<br>
Edit4.Parent := frm1Design;<br>
Edit4.Left := 319;<br>
Edit4.Top := 72;<br>
Edit4.Width := 91;<br>
Edit4.Height := 21;<br>
Edit4.TabOrder := 12;</p>
<p>Button1 := TButton.Create(frm1Design);<br>
Button1.Parent := frm1Design;<br>
Button1.OnClick := <span class="mention">@BC</span>;<br>
Button1.Left := 229;<br>
Button1.Top := 134;<br>
Button1.Width := 184;<br>
Button1.Height := 71;<br>
Button1.Caption := ‘&amp;Start’;<br>
Button1.TabOrder := 13;</p>
<p>Edit1 := TEdit.Create(frm1Design);<br>
Edit1.Parent := frm1Design;<br>
Edit1.Left := 291;<br>
Edit1.Top := 106;<br>
Edit1.Width := 121;<br>
Edit1.Height := 21;<br>
Edit1.TabOrder := 14;</p>
<p>Labell1 := TLabel.Create(frm1Design);<br>
Labell1.Parent := frm1Design;<br>
Labell1.Left := 225;<br>
Labell1.Top := 109;<br>
Labell1.Width := 58;<br>
Labell1.Height := 15;<br>
Labell1.Caption := ‘BankColour:’;</p>
<p>end;</p>
<p>procedure SafeInitForm;<br>
var<br>
v: TVariantArray;<br>
begin<br>
setarraylength(V, 0);<br>
ThreadSafeCall(‘InitForm’, v);<br>
end;</p>
<p>procedure ShowFormModal;<br>
begin<br>
frm1Design.ShowModal;<br>
end;</p>
<p>procedure SafeShowFormModal;<br>
var<br>
v: TVariantArray;<br>
begin<br>
setarraylength(V, 0);<br>
ThreadSafeCall(‘ShowFormModal’, v);<br>
end;</p>
<p>begin<br>
Nashi := BitmapFromString(170, 80, ‘z78DAED5D5B6E242910BC52’ +<br>
‘CF6A352E7FCE4C8FEF7FA455755A5AA43238A97C104004527D587’ +<br>
‘6BB1A887C933C1E0441100441108878BEFF3F381B04B1363E5EE3’ +<br>
‘FDD7398ED74FFE7D9E833343106BE3A83C3325CFCFE31CE57FFFF’ +<br>
‘DCF39B83A04E18BBFEFE7A8B15E6C80B19287728020F2B9F6F6E7’ +<br>
‘1C63DFA1E3F9E71C5CD9F5F0EBED1C9A3D20BFC919ABE1F7F31C7’ +<br>
‘A4E4DC07AF593118C6976E9CBC613EDA35F5F723F82716EEFF0D2’ +<br>
‘CEC75009406042623ED51DF2FAB968AE9AF7FAF7C7393893165D7’ +<br>
‘F7DCADCCEA8EBC97D7C0867F1B5B94827B11E65D879118197B9F4’ +<br>
‘36963B07DA9331816048A6A61C96BDF17C0D646B198DFBD176757’ +<br>
‘B45DAB9036AFCDDFCCA7BFA487E73AC7ED7441B806CA744DED524’ +<br>
‘0026EB1134C89EDC97A8DD5C527A466D3256931EC04F62AE1D88E’ +<br>
‘F232358FBBD7990DD9E6DAF9340E37E267A63E0B52CC33EBAFE5E’ +<br>
‘A6557CA8B80864ED29FF97D078B876AD378B5FD6FB7D717611723’ +<br>
‘C4D5F092CF3292BCE4A9E1975C7D5A69A45E3CFAB3BDA92D31263’ +<br>
‘C1B1D97A25F317BAC9A9D2436655EC3D196BD812BE2BDECED1E37’ +<br>
‘05F63798ECD3258D6ABAC3AB8CA047CEE4BDF80B16FD2963CF8DC’ +<br>
‘7F96A3E8C3D0CEFF4AECE86ACFB767C35E39A65F2F7937E1662F4’ +<br>
‘36BDAF07A7A142D37547B43B4A7FDB4DD582954763098319270DD’ +<br>
‘E1E51EB668BAF6DF46AF57EDBFF4CE8C68C64F363525210EF74D5’ +<br>
‘1944293CA7747D6FEA3EAF72CFA0B410ED4ACBBD22B8FA8D2B45B’ +<br>
‘FB9AAA5DDF9DA6F18811FA56D9E776402D8D61DEECFFBD37F7EAF’ +<br>
‘5AD3F6DE6F41325BDB1F47B6F1867F3B7D7CB57C2F75A29637D7F’ +<br>
‘592F79879A1D722F6781A6FDEDD5C81A8F23E7BBC7599299D11B0’ +<br>
‘D6723F6C9CDD5BFE4DFF5D5B95ED92B5F7C14C32B4A96133DC8D7’ +<br>
‘F89A599A373682F3E6A5A6F6F2CEBC62BC6333D78323036AEDA98’ +<br>
‘F6B45733F4E83DCB3F4D06A0E916BA4ED79587CAF16F3AC2EF26E’ +<br>
‘CFB4F68F09A3256DEECB7ECB89CD5A22393B5486CF88B1158099D’ +<br>
‘66CC923E4BAC7F6FCE0F8F29AB7C5B4A6780214C16E4C8DED8BE5’ +<br>
‘3809EB0FB008647EF57E74148527404BE45B8FF99EFE2CAC2F33D’ +<br>
‘AC8F2CADE7B87D6FE9E1220C7C79F91FBF80C6AD7DB20C7E4C97D’ +<br>
‘040970B569F5BDD64771BF669978E54422B4A7CCADBDC646DF7F3’ +<br>
‘2621EDC3A5184C58D57420EF7A36DDACFAAA7E013405E51B81276’ +<br>
‘CFB4567526D18F5E49ABEF881B6E131A6683F13DCCE85F9C84F1A’ +<br>
‘A568A9EAB4C063D0A46E754D78FE53EED7C3D90334AA33CFDB8DD’ +<br>
‘78BDE32CA733092637BD2415B9BFA70DE0FBFEB5132E713B0A5F6’ +<br>
‘F5EADDF40E96AF6D3BDF2A4E4FE6EDC8F9B99AB576E8F4E64DA72’ +<br>
‘5EB3D1BEDD1521B38FD9B187DCAFED490769DF3C0D1A2155EC799’ +<br>
‘6CC757C3845D26E9ED555DB27D4F837B90F704BE6BD951A767E7C’ +<br>
‘90B51F9E230B8BA8C4699FCCF809B5BFFE9CE0F55CADAF151DB72’ +<br>
‘7BDAA437D35FE35263F4B343562D795E7A0A9F111B8DFEEDB83D3’ +<br>
‘1B36DC7EBE78137B6652E26A837362A76BC3EE356BF2C2BE91582’ +<br>
‘F2B378EFB576F6246EEC7F54BB7C710BC2CB49D71CF7A1479AEEF’ +<br>
‘FF665F232F1B4F13D7C5F4F433BB69898712C7AC596211B4F62DB’ +<br>
‘314917B8D5B713B77F2CFBDD6E4D85866B5BBA831AF37169A532A’ +<br>
‘F6DEB3116761E26AB6ED598F9C686A20BF8A48C5AAB5BB5BE7F50’ +<br>
‘C9EDAA828624E6C07B97AADF766D8B1DD38E3E639F33EA095A089’ +<br>
‘B1F8F699F7E5BEBD9623CEDAD7EC28879A04C5EA78792E11F360F’ +<br>
‘701ED9F806CEDCB0E176BD972DB856696A2BB10FB9E85418EEDF7’ +<br>
‘5689E833FEBDF7BF23640722DECD6B2760E29BFDF0B21BDB92BF3’ +<br>
‘7F71D072F4D2AD2CFE19C7E7005EF3D29ADC9B3E8E11599C7B4F6’ +<br>
‘656F7BE50771E0E5C5C4DD5BD70BDF2CBCBD2E2EBF82F71BEB4E2’ +<br>
‘1CD7AEFFBB35BC29655B3DCECB9675E0FB397269AA78FDF35C277’ +<br>
‘7EEEF962C81A9FDCD75B7A983765E74BB3E8158F3B5B776FFFDFB’ +<br>
‘41B0DD67EE9AD20737F0D8DBFF6BD03BE920ABF7ADF2BEE6AB901’ +<br>
‘0A3F7F8A7013C1CEACEF8D4B7F5C46E677F4627D2D4E1EDDE7533’ +<br>
‘F27F67BDF1CF2A786D9D0D89316CBC4AB1BE72860DEC0F24D3FF6’ +<br>
‘72A8E3D868DC8FF64DBE89E9356B12BCCE8F8FCDE66BBEC59EB57’ +<br>
‘C73DD1855635C4EFFF69C5AF747CA8EC25F6BDF1B99234EEDC967’ +<br>
‘E64869721FE1B69DE8F886EF8AE0C47231F7098E741A65EDCFDB1’ +<br>
‘9BBDD6B71161D577A2E71956C3BB3FE80DF1B6890DD18D7750DB9’ +<br>
‘1BFC1A4FDFDE02E43ECFEEF9C6A3A2ABD3B7E67E664DA62B0BBC6’ +<br>
‘E35AAFA564ED15A9EDB459E25AF2CCC01B967D6D6CE3B68FC35CE’ +<br>
‘ED46E70A2D27FBECDEAE6822CC7C68CD3AA24DFE457CDB20BDE56’ +<br>
‘F7DE3B196F3B098F0EA26ED7BAED9ABD260876E96F9D95BAF3C54’ +<br>
‘29A5BDF6C0750746F44D5D0F711D60A2DFC7774FEAD75DF66DAFA’ +<br>
‘DD2AE7ED7573F8A771C9D17D0D76F6BDE44FF69BEDDBC7BAD08DF’ +<br>
‘FE33EBC506A36F24D13037AE4EB857A6E9F3C8EDB7F2823D17A99’ +<br>
‘F5B5FD6F7463E7D73493B77E0D4CC52F4591ECD9B68BAFADF8B25’ +<br>
‘5A6CBC9A7EA9C54072ECCCDECA10DF3E3FBED2DEF2F9ECBF6799F’ +<br>
‘F9C33BCEDF5B2489EB6EDD72B4FF49F5FFD76CD6AC6DECE1BF608’ +<br>
‘CF3D5B37E76CF2BD9A3195A4DDD2C2AF715F5860E7821DA2AFBD2’ +<br>
‘CB12F626BAE3D8864178974B2FB2311DC2F258058CB08B749F666’ +<br>
‘782DDF3A5F7F11081036F9CA1322DAC7DC2DEA4E103BA0231691D’ +<br>
‘2259220081CD6AF575743107B22E736378220E6F2EB3333C80441’ +<br>
‘4443533D4E10C44AD074962008626D5D2F3F89AB5B20080287FB5’ +<br>
‘221CCD81D4110044110044110044110C47F4F690AEF’);<br>
SafeInitForm;<br>
SafeShowFormModal;<br>
SetUpSRL;<br>
NickNameBMP := CreateBitmapMaskFromText(Players[CurrentPlayer].Nick, UpChars);<br>
Bow := BitmapFromString(12, 11, ‘z78DA73730301032A01372’ +<br>
‘4400B3389379918F5A4BA139799E4F9975AE650D7B4C1E92AFA9B’ +<br>
‘0600A8E7A0E1’);<br>
BowS := BitmapFromString(5, 3, ‘z78DA33300002433357’ +<br>
‘3313134B0B4373535333641297B8A1B1A181A1012E5903B099005’ +<br>
‘32A129F’);<br>
Log := BitmapFromString(20, 12, ‘z78DA33301805C40237’ +<br>
‘BC80767611A3925A36524BBD1BD180D6EEA46E8C0C6CDA1B09F68’ +<br>
‘EB4F8C59F170031981AF4’);<br>
While Not IsFKeyDown(2) Do Wait(500);<br>
If RFletch Then<br>
Repeat<br>
Report;<br>
If Not LoggedIn then TerminateScript;<br>
FletchEm;<br>
Repeat<br>
If Chest Then OpenChest(BankColour) Else OpenBooth(BankColour);<br>
DepWithEmFletch;<br>
Until(InvCount=28);<br>
If Random(10) = 9 then NHAntiBan;<br>
Wait(500);<br>
Until(Fletched&gt;=TFletch);<br>
If RString Then<br>
Repeat<br>
Report;<br>
If Not LoggedIn then TerminateScript;<br>
StringEm;<br>
Repeat<br>
If Chest Then OpenChest(BankColour) Else OpenBooth(BankColour);<br>
DepWithEmString;<br>
Until(InvCount=22);<br>
If Random(10) = 9 then NHAntiBan;<br>
Wait(500);<br>
Until(Strung&gt;=TString);<br>
end.<br>
[/code]</p>
<p>Wrong section btw, Also, This script is old, I just made it compile</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/are-there-any-scripts-for-auto-bowstring-making-and-banking/151287/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/are-there-any-scripts-for-auto-bowstring-making-and-banking/151287/2</link>
        <pubDate>Sat, 13 Oct 2007 13:23:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-151287-2</guid>
        <source url="https://forum.moparisthebest.com/t/are-there-any-scripts-for-auto-bowstring-making-and-banking/151287.rss">Are there any Scripts for auto bowstring making and banking?</source>
      </item>
      <item>
        <title>Are there any Scripts for auto bowstring making and banking?</title>
        <dc:creator><![CDATA[@revean32 revean32]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/revean32">@revean32</a> wrote:</p>
          <blockquote>
              <p>Any?  :eek:</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/are-there-any-scripts-for-auto-bowstring-making-and-banking/151287/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/are-there-any-scripts-for-auto-bowstring-making-and-banking/151287/1</link>
        <pubDate>Sat, 13 Oct 2007 05:04:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-151287-1</guid>
        <source url="https://forum.moparisthebest.com/t/are-there-any-scripts-for-auto-bowstring-making-and-banking/151287.rss">Are there any Scripts for auto bowstring making and banking?</source>
      </item>
  </channel>
</rss>
