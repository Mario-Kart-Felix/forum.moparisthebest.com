<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[PI] Clipped following</title>
    <link>https://forum.moparisthebest.com/t/pi-clipped-following/470969</link>
    <description>Tired of seeing people trying to sell this when it was released, just no one ever made a tutorial for it. So, I will make one for you.. This is a spoon-feed tutorial. This will allow server side clipping when following. If this gets removed for whatever reason. Save this pastebin or bookmark it. [Java] SERVER SIDE: CLIPPED FOLLOWING - Pastebin.com - Open source or nothing.

Note: I did not program this system. I take no credits for this system. Do not ask me for help with this system. If you want to say leeched, or anything stupid.. Feel free to because in the end, you can go fuck yourself. 

Edit: The Region class appears to some how been leaked from Palidino, which is a mystery to him, as he never released it and he only had access to it. It appears to be identical to the one he created in early to mid 2010. He will be given full credits for this until someone want&#39;s to debate the ownership or steps forward to debate this. 100% credits to Palidino for the Region class. You can contact him through his profile here -Palidino

Media - GIF
Spoiler for GIF IMAGE: 
http://dl.dropbox.com/u/21484852/capture-21.gif


FIRST:
Download clip.rar and extract it and place this folder inside your server folder - it should now look like src/server/clip
Now inside the clip folder, go into the region folder and open up both ObjectDef.java and Region.java and replace the paths for the files to be loaded to suit your directories (you may not need to change them).

Download: http://dl.dropbox.com/u/21484852/clip.rar


SECOND:
Download world.rar and extract it, place this folder inside your data directory.
e.g servername/Data/WORLD FOLDER HERE

Download: http://dl.dropbox.com/u/21484852/world.rar


THIRD:
Create a new class, name it Pathfinder.java - paste the following code in it and save it to your server.model.players folder.

Code:
package server.model.players;

import java.util.LinkedList;

import server.clip.region.Region;
import server.model.players.Client;

public class PathFinder {

	private static final PathFinder pathFinder = new PathFinder();

	public static PathFinder getPathFinder() {
		return pathFinder;
	}

	public PathFinder() {
	}

	public void findRoute(Client c, int destX, int destY, boolean moveNear,
			int xLength, int yLength) {
		if (destX == c.getLocalX() &amp;&amp; destY == c.getLocalY() &amp;&amp; !moveNear) {
			c.sendMessage(&quot;ERROR!&quot;);
			return;
		}
		destX = destX - 8 * c.getMapRegionX();
		destY = destY - 8 * c.getMapRegionY();
		int[][] via = new int[104][104];
		int[][] cost = new int[104][104];
		LinkedList&lt;Integer&gt; tileQueueX = new LinkedList&lt;Integer&gt;();
		LinkedList&lt;Integer&gt; tileQueueY = new LinkedList&lt;Integer&gt;();
		for (int xx = 0; xx &lt; 104; xx++) {
			for (int yy = 0; yy &lt; 104; yy++) {
				cost[xx][yy] = 99999999;
			}
		}
		int curX = c.getLocalX();
		int curY = c.getLocalY();
		via[curX][curY] = 99;
		cost[curX][curY] = 0;
		int tail = 0;
		tileQueueX.add(curX);
		tileQueueY.add(curY);
		boolean foundPath = false;
		int pathLength = 4000;
		while (tail != tileQueueX.size() &amp;&amp; tileQueueX.size() &lt; pathLength) {
			curX = tileQueueX.get(tail);
			curY = tileQueueY.get(tail);
			int curAbsX = c.getMapRegionX() * 8 + curX;
			int curAbsY = c.getMapRegionY() * 8 + curY;
			if (curX == destX &amp;&amp; curY == destY) {
				foundPath = true;
				break;
			}
			tail = (tail + 1) % pathLength;
			int thisCost = cost[curX][curY] + 1;
			if (curY &gt; 0
					&amp;&amp; via[curX][curY - 1] == 0
					&amp;&amp; (Region.getClipping(curAbsX, curAbsY - 1, c.heightLevel) &amp; 0x1280102) == 0) {
				tileQueueX.add(curX);
				tileQueueY.add(curY - 1);
				via[curX][curY - 1] = 1;
				cost[curX][curY - 1] = thisCost;
			}
			if (curX &gt; 0
					&amp;&amp; via[curX - 1][curY] == 0
					&amp;&amp; (Region.getClipping(curAbsX - 1, curAbsY, c.heightLevel) &amp; 0x1280108) == 0) {
				tileQueueX.add(curX - 1);
				tileQueueY.add(curY);
				via[curX - 1][curY] = 2;
				cost[curX - 1][curY] = thisCost;
			}
			if (curY &lt; 104 - 1
					&amp;&amp; via[curX][curY + 1] == 0
					&amp;&amp; (Region.getClipping(curAbsX, curAbsY + 1, c.heightLevel) &amp; 0x1280120) == 0) {
				tileQueueX.add(curX);
				tileQueueY.add(curY + 1);
				via[curX][curY + 1] = 4;
				cost[curX][curY + 1] = thisCost;
			}
			if (curX &lt; 104 - 1
					&amp;&amp; via[curX + 1][curY] == 0
					&amp;&amp; (Region.getClipping(curAbsX + 1, curAbsY, c.heightLevel) &amp; 0x1280180) == 0) {
				tileQueueX.add(curX + 1);
				tileQueueY.add(curY);
				via[curX + 1][curY] = 8;
				cost[curX + 1][curY] = thisCost;
			}
			if (curX &gt; 0
					&amp;&amp; curY &gt; 0
					&amp;&amp; via[curX - 1][curY - 1] == 0
					&amp;&amp; (Region.getClipping(curAbsX - 1, curAbsY - 1,
							c.heightLevel) &amp; 0x128010e) == 0
					&amp;&amp; (Region.getClipping(curAbsX - 1, curAbsY, c.heightLevel) &amp; 0x1280108) == 0
					&amp;&amp; (Region.getClipping(curAbsX, curAbsY - 1, c.heightLevel) &amp; 0x1280102) == 0) {
				tileQueueX.add(curX - 1);
				tileQueueY.add(curY - 1);
				via[curX - 1][curY - 1] = 3;
				cost[curX - 1][curY - 1] = thisCost;
			}
			if (curX &gt; 0
					&amp;&amp; curY &lt; 104 - 1
					&amp;&amp; via[curX - 1][curY + 1] == 0
					&amp;&amp; (Region.getClipping(curAbsX - 1, curAbsY + 1,
							c.heightLevel) &amp; 0x1280138) == 0
					&amp;&amp; (Region.getClipping(curAbsX - 1, curAbsY, c.heightLevel) &amp; 0x1280108) == 0
					&amp;&amp; (Region.getClipping(curAbsX, curAbsY + 1, c.heightLevel) &amp; 0x1280120) == 0) {
				tileQueueX.add(curX - 1);
				tileQueueY.add(curY + 1);
				via[curX - 1][curY + 1] = 6;
				cost[curX - 1][curY + 1] = thisCost;
			}
			if (curX &lt; 104 - 1
					&amp;&amp; curY &gt; 0
					&amp;&amp; via[curX + 1][curY - 1] == 0
					&amp;&amp; (Region.getClipping(curAbsX + 1, curAbsY - 1,
							c.heightLevel) &amp; 0x1280183) == 0
					&amp;&amp; (Region.getClipping(curAbsX + 1, curAbsY, c.heightLevel) &amp; 0x1280180) == 0
					&amp;&amp; (Region.getClipping(curAbsX, curAbsY - 1, c.heightLevel) &amp; 0x1280102) == 0) {
				tileQueueX.add(curX + 1);
				tileQueueY.add(curY - 1);
				via[curX + 1][curY - 1] = 9;
				cost[curX + 1][curY - 1] = thisCost;
			}
			if (curX &lt; 104 - 1
					&amp;&amp; curY &lt; 104 - 1
					&amp;&amp; via[curX + 1][curY + 1] == 0
					&amp;&amp; (Region.getClipping(curAbsX + 1, curAbsY + 1,
							c.heightLevel) &amp; 0x12801e0) == 0
					&amp;&amp; (Region.getClipping(curAbsX + 1, curAbsY, c.heightLevel) &amp; 0x1280180) == 0
					&amp;&amp; (Region.getClipping(curAbsX, curAbsY + 1, c.heightLevel) &amp; 0x1280120) == 0) {
				tileQueueX.add(curX + 1);
				tileQueueY.add(curY + 1);
				via[curX + 1][curY + 1] = 12;
				cost[curX + 1][curY + 1] = thisCost;
			}
		}
		if (!foundPath) {
			if (moveNear) {
				int i_223_ = 1000;
				int thisCost = 100;
				int i_225_ = 10;
				for (int x = destX - i_225_; x &lt;= destX + i_225_; x++) {
					for (int y = destY - i_225_; y &lt;= destY + i_225_; y++) {
						if (x &gt;= 0 &amp;&amp; y &gt;= 0 &amp;&amp; x &lt; 104 &amp;&amp; y &lt; 104
								&amp;&amp; cost[x][y] &lt; 100) {
							int i_228_ = 0;
							if (x &lt; destX) {
								i_228_ = destX - x;
							} else if (x &gt; destX + xLength - 1) {
								i_228_ = x - (destX + xLength - 1);
							}
							int i_229_ = 0;
							if (y &lt; destY) {
								i_229_ = destY - y;
							} else if (y &gt; destY + yLength - 1) {
								i_229_ = y - (destY + yLength - 1);
							}
							int i_230_ = i_228_ * i_228_ + i_229_ * i_229_;
							if (i_230_ &lt; i_223_
									|| (i_230_ == i_223_ &amp;&amp; (cost[x][y] &lt; thisCost))) {
								i_223_ = i_230_;
								thisCost = cost[x][y];
								curX = x;
								curY = y;
							}
						}
					}
				}
				if (i_223_ == 1000) {
					return;
				}
			} else {
				return;
			}
		}
		tail = 0;
		tileQueueX.set(tail, curX);
		tileQueueY.set(tail++, curY);
		int l5;
		for (int j5 = l5 = via[curX][curY]; curX != c.getLocalX()
				|| curY != c.getLocalY(); j5 = via[curX][curY]) {
			if (j5 != l5) {
				l5 = j5;
				tileQueueX.set(tail, curX);
				tileQueueY.set(tail++, curY);
			}
			if ((j5 &amp; 2) != 0) {
				curX++;
			} else if ((j5 &amp; 8) != 0) {
				curX--;
			}
			if ((j5 &amp; 1) != 0) {
				curY++;
			} else if ((j5 &amp; 4) != 0) {
				curY--;
			}
		}
		c.resetWalkingQueue();
		int size = tail--;
		int pathX = c.getMapRegionX() * 8 + tileQueueX.get(tail);
		int pathY = c.getMapRegionY() * 8 + tileQueueY.get(tail);
		c.addToWalkingQueue(localize(pathX, c.getMapRegionX()),
				localize(pathY, c.getMapRegionY()));
		for (int i = 1; i &lt; size; i++) {
			tail--;
			pathX = c.getMapRegionX() * 8 + tileQueueX.get(tail);
			pathY = c.getMapRegionY() * 8 + tileQueueY.get(tail);
			c.addToWalkingQueue(localize(pathX, c.getMapRegionX()),
					localize(pathY, c.getMapRegionY()));
		}
	}

	public int localize(int x, int mapRegion) {
		return x - 8 * mapRegion;
	}

}


FOURTH:
Open up playerAssistant.java and add this anywhere you like.

Code:
	public void playerWalk(int x, int y) {
		PathFinder.getPathFinder().findRoute(c, x, y, true, 1, 1);
	}
Then search for public void followPlayer() and replace it with the one below.

Code:
	public void followPlayer() {
		if (PlayerHandler.players[c.followId] == null
				|| PlayerHandler.players[c.followId].isDead) {
			resetFollow();
			return;
		}
		if (c.freezeTimer &gt; 0) {
			return;
		}
		if (c.isDead || c.playerLevel[3] &lt;= 0)
			return;
	
		int otherX = PlayerHandler.players[c.followId].getX();
		int otherY = PlayerHandler.players[c.followId].getY();

		boolean sameSpot = (c.absX == otherX &amp;&amp; c.absY == otherY);

		boolean hallyDistance = c.goodDistance(otherX, otherY, c.getX(),
				c.getY(), 2);

		boolean rangeWeaponDistance = c.goodDistance(otherX, otherY, c.getX(),
				c.getY(), 4);
		boolean bowDistance = c.goodDistance(otherX, otherY, c.getX(),
				c.getY(), 6);
		boolean mageDistance = c.goodDistance(otherX, otherY, c.getX(),
				c.getY(), 7);

		boolean castingMagic = (c.usingMagic || c.mageFollow || c.autocasting || c.spellId &gt; 0)
				&amp;&amp; mageDistance;
		boolean playerRanging = (c.usingRangeWeapon)
				&amp;&amp; rangeWeaponDistance;
		boolean playerBowOrCross = (c.usingBow) &amp;&amp; bowDistance;

		if (!c.goodDistance(otherX, otherY, c.getX(), c.getY(), 25)) {
			c.followId = 0;
			resetFollow();
			return;
		}
		c.faceUpdate(c.followId + 32768);
		if (!sameSpot) {
			if (c.playerIndex &gt; 0 &amp;&amp; !c.usingSpecial &amp;&amp; c.inWild()) {
				if (c.usingSpecial &amp;&amp; (playerRanging || playerBowOrCross)) {
					c.stopMovement();
					return;
				}
				if (castingMagic || playerRanging || playerBowOrCross) {
					c.stopMovement();
					return;
				}
				if (c.getCombat().usingHally() &amp;&amp; hallyDistance) {
					c.stopMovement();
					return;
				}
			}
		}
		if (otherX == c.absX &amp;&amp; otherY == c.absY) {
			int r = Misc.random(3);
			switch (r) {
			case 0:
				walkTo(0, -1);
				break;
			case 1:
				walkTo(0, 1);
				break;
			case 2:
				walkTo(1, 0);
				break;
			case 3:
				walkTo(-1, 0);
				break;
			}
		} else if (c.isRunning2) {
			if (otherY &gt; c.getY() &amp;&amp; otherX == c.getX()) {
				playerWalk(otherX, otherY - 1);
			} else if (otherY &lt; c.getY() &amp;&amp; otherX == c.getX()) {
				playerWalk(otherX, otherY + 1);
			} else if (otherX &gt; c.getX() &amp;&amp; otherY == c.getY()) {
				playerWalk(otherX - 1, otherY);
			} else if (otherX &lt; c.getX() &amp;&amp; otherY == c.getY()) {
				playerWalk(otherX + 1, otherY);
			} else if (otherX &lt; c.getX() &amp;&amp; otherY &lt; c.getY()) {
				playerWalk(otherX + 1, otherY + 1);
			} else if (otherX &gt; c.getX() &amp;&amp; otherY &gt; c.getY()) {
				playerWalk(otherX - 1, otherY - 1);
			} else if (otherX &lt; c.getX() &amp;&amp; otherY &gt; c.getY()) {
				playerWalk(otherX + 1, otherY - 1);
			} else if (otherX &gt; c.getX() &amp;&amp; otherY &lt; c.getY()) {
				playerWalk(otherX + 1, otherY - 1);
			}
		} else {
			if (otherY &gt; c.getY() &amp;&amp; otherX == c.getX()) {
				playerWalk(otherX, otherY - 1);
			} else if (otherY &lt; c.getY() &amp;&amp; otherX == c.getX()) {
				playerWalk(otherX, otherY + 1);
			} else if (otherX &gt; c.getX() &amp;&amp; otherY == c.getY()) {
				playerWalk(otherX - 1, otherY);
			} else if (otherX &lt; c.getX() &amp;&amp; otherY == c.getY()) {
				playerWalk(otherX + 1, otherY);
			} else if (otherX &lt; c.getX() &amp;&amp; otherY &lt; c.getY()) {
				playerWalk(otherX + 1, otherY + 1);
			} else if (otherX &gt; c.getX() &amp;&amp; otherY &gt; c.getY()) {
				playerWalk(otherX - 1, otherY - 1);
			} else if (otherX &lt; c.getX() &amp;&amp; otherY &gt; c.getY()) {
				playerWalk(otherX + 1, otherY - 1);
			} else if (otherX &gt; c.getX() &amp;&amp; otherY &lt; c.getY()) {
				playerWalk(otherX - 1, otherY + 1);
			}
		}
		c.faceUpdate(c.followId+32768);
	}

FIFTH:
Open up Player.java and add this in where else you want it.

Code:
	public int getLocalX() {
		return getX() - 8 * getMapRegionX();
	}

	public int getLocalY() {
		return getY() - 8 * getMapRegionY();
	}


SIXTH:
Open up FollowPlayer.java which will be in your packets folder and replace it with this.. Probably the same as you have already to be honest.
Code:
package server.model.players.packets;

import server.Server;
import server.model.players.Client;
import server.model.players.PacketType;

public class FollowPlayer implements PacketType {
	
	@Override
	public void processPacket(Client c, int packetType, int packetSize) {
		int followPlayer = c.getInStream().readUnsignedWordBigEndian();
		if(Server.playerHandler.players[followPlayer] == null) {
			return;
		}
		c.playerIndex = 0;
		c.npcIndex = 0;
		c.mageFollow = false;
		c.usingBow = false;
		c.usingRangeWeapon = false;
		c.followDistance = 1;
		c.followId = followPlayer;
	}	
}

SEVENTH:
Open up Server.java and add these imports

Code:
import server.clip.region.ObjectDef;
import server.clip.region.Region;
Then add these under the main method. (public static void main)

Code:
ObjectDef.loadConfig();
		Region.load();



I am sure I left somethings out because I was in a hurry, just post and I will add anything that I may have left out. Cya around. I will release the NPC clipped follow here shortly. Not that I recommend using it..

This was released here: http://www.rune-server.org/runescape...ty-source.html - the user which released it is Wtf Ur Zerk, however he did not develop this source or this clipping system.

For those trying to sell this.. Go seek employment..</description>
    
    <lastBuildDate>Wed, 05 Dec 2012 19:04:00 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/pi-clipped-following/470969.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[PI] Clipped following</title>
        <dc:creator><![CDATA[@asshole_rule asshole_rule]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/asshole_rule">@asshole_rule</a> wrote:</p>
          <blockquote>
              <p>[quote=“hanesh, post:4, topic:470969”][quote author=RandQm link=topic=588501.msg4172759#msg4172759 date=1354575460]<br>
I hear you like stealing asshole_rules clipping tutorial<br>
[/quote]<br>
I hear you like giving credit to the wrong people… It wasn’t asshole_rule’s work for clipping… It was paladino…[/quote]</p>
<p>OP and you are stupid. He’s not saying I made it, he’s saying I released the tutorial. On my thread I clearly credited Palidino for ALL the work.</p>
<p>Reported this thread as it’s useless…</p>
<p>edit:</p>
<aside class="quote" data-post="1" data-topic="424518">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/asshole_rule/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"><a href="https://forum.moparisthebest.com/t/pi-emu-riot-server-side-pathfinding-clipped-following/424518/1">[PI/Emu/Riot] Server Side pathfinding (Clipped following)</a>
</div>
<blockquote>
<p>Credits to Palidino76 for all the code and everyone who leaked it.</p>
</blockquote>
</aside>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-clipped-following/470969/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-clipped-following/470969/7</link>
        <pubDate>Wed, 05 Dec 2012 19:04:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-470969-7</guid>
        <source url="https://forum.moparisthebest.com/t/pi-clipped-following/470969.rss">[PI] Clipped following</source>
      </item>
      <item>
        <title>[PI] Clipped following</title>
        <dc:creator><![CDATA[@Int_Bauk Int Bauk]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/int_bauk">@Int_Bauk</a> wrote:</p>
          <blockquote>
              <p>use code tags and give credits.</p>
<p>also, when your loading thousand(s) of gzipped files, don’t you think it will take a while for the server to initialize?</p>
<p>^rhetorical question.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-clipped-following/470969/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-clipped-following/470969/6</link>
        <pubDate>Tue, 04 Dec 2012 18:19:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-470969-6</guid>
        <source url="https://forum.moparisthebest.com/t/pi-clipped-following/470969.rss">[PI] Clipped following</source>
      </item>
      <item>
        <title>[PI] Clipped following</title>
        <dc:creator><![CDATA[@Owned_Pl0xs Owned_Pl0xs]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/owned_pl0xs">@Owned_Pl0xs</a> wrote:</p>
          <blockquote>
              <p>Most of your links are broken and most of this is copy pasta.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-clipped-following/470969/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-clipped-following/470969/5</link>
        <pubDate>Tue, 04 Dec 2012 04:06:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-470969-5</guid>
        <source url="https://forum.moparisthebest.com/t/pi-clipped-following/470969.rss">[PI] Clipped following</source>
      </item>
      <item>
        <title>[PI] Clipped following</title>
        <dc:creator><![CDATA[@hanesh hanesh]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hanesh">@hanesh</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="3" data-topic="470969">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/randqm/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> RandQm:</div>
<blockquote>
<p>I hear you like stealing asshole_rules clipping tutorial</p>
</blockquote>
</aside>
<p>I hear you like giving credit to the wrong people… It wasn’t asshole_rule’s work for clipping… It was paladino…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-clipped-following/470969/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-clipped-following/470969/4</link>
        <pubDate>Tue, 04 Dec 2012 00:10:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-470969-4</guid>
        <source url="https://forum.moparisthebest.com/t/pi-clipped-following/470969.rss">[PI] Clipped following</source>
      </item>
      <item>
        <title>[PI] Clipped following</title>
        <dc:creator><![CDATA[@RandQm RandQm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/randqm">@RandQm</a> wrote:</p>
          <blockquote>
              <p>I hear you like stealing asshole_rules clipping tutorial</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-clipped-following/470969/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-clipped-following/470969/3</link>
        <pubDate>Mon, 03 Dec 2012 22:57:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-470969-3</guid>
        <source url="https://forum.moparisthebest.com/t/pi-clipped-following/470969.rss">[PI] Clipped following</source>
      </item>
      <item>
        <title>[PI] Clipped following</title>
        <dc:creator><![CDATA[@relexlawl relexlawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/relexlawl">@relexlawl</a> wrote:</p>
          <blockquote>
              <p>So I hear you like c&amp;p’ing paste bin code.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-clipped-following/470969/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-clipped-following/470969/2</link>
        <pubDate>Mon, 03 Dec 2012 22:36:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-470969-2</guid>
        <source url="https://forum.moparisthebest.com/t/pi-clipped-following/470969.rss">[PI] Clipped following</source>
      </item>
      <item>
        <title>[PI] Clipped following</title>
        <dc:creator><![CDATA[@Chuckee Chuckee]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/chuckee">@Chuckee</a> wrote:</p>
          <blockquote>
              <p>Tired of seeing people trying to sell this when it was released, just no one ever made a tutorial for it. So, I will make one for you… This is a spoon-feed tutorial. This will allow server side clipping when following. If this gets removed for whatever reason. Save this pastebin or bookmark it. [Java] SERVER SIDE: CLIPPED FOLLOWING - <a href="http://Pastebin.com" rel="nofollow noopener">Pastebin.com</a> - Open source or nothing.</p>
<p>Note: I did not program this system. I take no credits for this system. Do not ask me for help with this system. If you want to say leeched, or anything stupid… Feel free to because in the end, you can go fuck yourself.</p>
<p>Edit: The Region class appears to some how been leaked from Palidino, which is a mystery to him, as he never released it and he only had access to it. It appears to be identical to the one he created in early to mid 2010. He will be given full credits for this until someone want’s to debate the ownership or steps forward to debate this. 100% credits to Palidino for the Region class. You can contact him through his profile here -Palidino</p>
<p>Media - GIF<br>
Spoiler for GIF IMAGE:<br>
<a href="http://dl.dropbox.com/u/21484852/capture-21.gif" class="onebox" target="_blank" rel="nofollow noopener">http://dl.dropbox.com/u/21484852/capture-21.gif</a></p>
<p>FIRST:<br>
Download clip.rar and extract it and place this folder inside your server folder - it should now look like src/server/clip<br>
Now inside the clip folder, go into the region folder and open up both ObjectDef.java and Region.java and replace the paths for the files to be loaded to suit your directories (you may not need to change them).</p>
<p>Download: <a href="http://dl.dropbox.com/u/21484852/clip.rar" rel="nofollow noopener">http://dl.dropbox.com/u/21484852/clip.rar</a></p>
<p>SECOND:<br>
Download world.rar and extract it, place this folder inside your data directory.<br>
e.g servername/Data/WORLD FOLDER HERE</p>
<p>Download: <a href="http://dl.dropbox.com/u/21484852/world.rar" rel="nofollow noopener">http://dl.dropbox.com/u/21484852/world.rar</a></p>
<p>THIRD:<br>
Create a new class, name it Pathfinder.java - paste the following code in it and save it to your server.model.players folder.</p>
<p>Code:<br>
package server.model.players;</p>
<p>import java.util.LinkedList;</p>
<p>import server.clip.region.Region;<br>
import server.model.players.Client;</p>
<p>public class PathFinder {</p>
<pre><code>private static final PathFinder pathFinder = new PathFinder();

public static PathFinder getPathFinder() {
	return pathFinder;
}

public PathFinder() {
}

public void findRoute(Client c, int destX, int destY, boolean moveNear,
		int xLength, int yLength) {
	if (destX == c.getLocalX() &amp;&amp; destY == c.getLocalY() &amp;&amp; !moveNear) {
		c.sendMessage("ERROR!");
		return;
	}
	destX = destX - 8 * c.getMapRegionX();
	destY = destY - 8 * c.getMapRegionY();
	int[][] via = new int[104][104];
	int[][] cost = new int[104][104];
	LinkedList&lt;Integer&gt; tileQueueX = new LinkedList&lt;Integer&gt;();
	LinkedList&lt;Integer&gt; tileQueueY = new LinkedList&lt;Integer&gt;();
	for (int xx = 0; xx &lt; 104; xx++) {
		for (int yy = 0; yy &lt; 104; yy++) {
			cost[xx][yy] = 99999999;
		}
	}
	int curX = c.getLocalX();
	int curY = c.getLocalY();
	via[curX][curY] = 99;
	cost[curX][curY] = 0;
	int tail = 0;
	tileQueueX.add(curX);
	tileQueueY.add(curY);
	boolean foundPath = false;
	int pathLength = 4000;
	while (tail != tileQueueX.size() &amp;&amp; tileQueueX.size() &lt; pathLength) {
		curX = tileQueueX.get(tail);
		curY = tileQueueY.get(tail);
		int curAbsX = c.getMapRegionX() * 8 + curX;
		int curAbsY = c.getMapRegionY() * 8 + curY;
		if (curX == destX &amp;&amp; curY == destY) {
			foundPath = true;
			break;
		}
		tail = (tail + 1) % pathLength;
		int thisCost = cost[curX][curY] + 1;
		if (curY &gt; 0
				&amp;&amp; via[curX][curY - 1] == 0
				&amp;&amp; (Region.getClipping(curAbsX, curAbsY - 1, c.heightLevel) &amp; 0x1280102) == 0) {
			tileQueueX.add(curX);
			tileQueueY.add(curY - 1);
			via[curX][curY - 1] = 1;
			cost[curX][curY - 1] = thisCost;
		}
		if (curX &gt; 0
				&amp;&amp; via[curX - 1][curY] == 0
				&amp;&amp; (Region.getClipping(curAbsX - 1, curAbsY, c.heightLevel) &amp; 0x1280108) == 0) {
			tileQueueX.add(curX - 1);
			tileQueueY.add(curY);
			via[curX - 1][curY] = 2;
			cost[curX - 1][curY] = thisCost;
		}
		if (curY &lt; 104 - 1
				&amp;&amp; via[curX][curY + 1] == 0
				&amp;&amp; (Region.getClipping(curAbsX, curAbsY + 1, c.heightLevel) &amp; 0x1280120) == 0) {
			tileQueueX.add(curX);
			tileQueueY.add(curY + 1);
			via[curX][curY + 1] = 4;
			cost[curX][curY + 1] = thisCost;
		}
		if (curX &lt; 104 - 1
				&amp;&amp; via[curX + 1][curY] == 0
				&amp;&amp; (Region.getClipping(curAbsX + 1, curAbsY, c.heightLevel) &amp; 0x1280180) == 0) {
			tileQueueX.add(curX + 1);
			tileQueueY.add(curY);
			via[curX + 1][curY] = 8;
			cost[curX + 1][curY] = thisCost;
		}
		if (curX &gt; 0
				&amp;&amp; curY &gt; 0
				&amp;&amp; via[curX - 1][curY - 1] == 0
				&amp;&amp; (Region.getClipping(curAbsX - 1, curAbsY - 1,
						c.heightLevel) &amp; 0x128010e) == 0
				&amp;&amp; (Region.getClipping(curAbsX - 1, curAbsY, c.heightLevel) &amp; 0x1280108) == 0
				&amp;&amp; (Region.getClipping(curAbsX, curAbsY - 1, c.heightLevel) &amp; 0x1280102) == 0) {
			tileQueueX.add(curX - 1);
			tileQueueY.add(curY - 1);
			via[curX - 1][curY - 1] = 3;
			cost[curX - 1][curY - 1] = thisCost;
		}
		if (curX &gt; 0
				&amp;&amp; curY &lt; 104 - 1
				&amp;&amp; via[curX - 1][curY + 1] == 0
				&amp;&amp; (Region.getClipping(curAbsX - 1, curAbsY + 1,
						c.heightLevel) &amp; 0x1280138) == 0
				&amp;&amp; (Region.getClipping(curAbsX - 1, curAbsY, c.heightLevel) &amp; 0x1280108) == 0
				&amp;&amp; (Region.getClipping(curAbsX, curAbsY + 1, c.heightLevel) &amp; 0x1280120) == 0) {
			tileQueueX.add(curX - 1);
			tileQueueY.add(curY + 1);
			via[curX - 1][curY + 1] = 6;
			cost[curX - 1][curY + 1] = thisCost;
		}
		if (curX &lt; 104 - 1
				&amp;&amp; curY &gt; 0
				&amp;&amp; via[curX + 1][curY - 1] == 0
				&amp;&amp; (Region.getClipping(curAbsX + 1, curAbsY - 1,
						c.heightLevel) &amp; 0x1280183) == 0
				&amp;&amp; (Region.getClipping(curAbsX + 1, curAbsY, c.heightLevel) &amp; 0x1280180) == 0
				&amp;&amp; (Region.getClipping(curAbsX, curAbsY - 1, c.heightLevel) &amp; 0x1280102) == 0) {
			tileQueueX.add(curX + 1);
			tileQueueY.add(curY - 1);
			via[curX + 1][curY - 1] = 9;
			cost[curX + 1][curY - 1] = thisCost;
		}
		if (curX &lt; 104 - 1
				&amp;&amp; curY &lt; 104 - 1
				&amp;&amp; via[curX + 1][curY + 1] == 0
				&amp;&amp; (Region.getClipping(curAbsX + 1, curAbsY + 1,
						c.heightLevel) &amp; 0x12801e0) == 0
				&amp;&amp; (Region.getClipping(curAbsX + 1, curAbsY, c.heightLevel) &amp; 0x1280180) == 0
				&amp;&amp; (Region.getClipping(curAbsX, curAbsY + 1, c.heightLevel) &amp; 0x1280120) == 0) {
			tileQueueX.add(curX + 1);
			tileQueueY.add(curY + 1);
			via[curX + 1][curY + 1] = 12;
			cost[curX + 1][curY + 1] = thisCost;
		}
	}
	if (!foundPath) {
		if (moveNear) {
			int i_223_ = 1000;
			int thisCost = 100;
			int i_225_ = 10;
			for (int x = destX - i_225_; x &lt;= destX + i_225_; x++) {
				for (int y = destY - i_225_; y &lt;= destY + i_225_; y++) {
					if (x &gt;= 0 &amp;&amp; y &gt;= 0 &amp;&amp; x &lt; 104 &amp;&amp; y &lt; 104
							&amp;&amp; cost[x][y] &lt; 100) {
						int i_228_ = 0;
						if (x &lt; destX) {
							i_228_ = destX - x;
						} else if (x &gt; destX + xLength - 1) {
							i_228_ = x - (destX + xLength - 1);
						}
						int i_229_ = 0;
						if (y &lt; destY) {
							i_229_ = destY - y;
						} else if (y &gt; destY + yLength - 1) {
							i_229_ = y - (destY + yLength - 1);
						}
						int i_230_ = i_228_ * i_228_ + i_229_ * i_229_;
						if (i_230_ &lt; i_223_
								|| (i_230_ == i_223_ &amp;&amp; (cost[x][y] &lt; thisCost))) {
							i_223_ = i_230_;
							thisCost = cost[x][y];
							curX = x;
							curY = y;
						}
					}
				}
			}
			if (i_223_ == 1000) {
				return;
			}
		} else {
			return;
		}
	}
	tail = 0;
	tileQueueX.set(tail, curX);
	tileQueueY.set(tail++, curY);
	int l5;
	for (int j5 = l5 = via[curX][curY]; curX != c.getLocalX()
			|| curY != c.getLocalY(); j5 = via[curX][curY]) {
		if (j5 != l5) {
			l5 = j5;
			tileQueueX.set(tail, curX);
			tileQueueY.set(tail++, curY);
		}
		if ((j5 &amp; 2) != 0) {
			curX++;
		} else if ((j5 &amp; 8) != 0) {
			curX--;
		}
		if ((j5 &amp; 1) != 0) {
			curY++;
		} else if ((j5 &amp; 4) != 0) {
			curY--;
		}
	}
	c.resetWalkingQueue();
	int size = tail--;
	int pathX = c.getMapRegionX() * 8 + tileQueueX.get(tail);
	int pathY = c.getMapRegionY() * 8 + tileQueueY.get(tail);
	c.addToWalkingQueue(localize(pathX, c.getMapRegionX()),
			localize(pathY, c.getMapRegionY()));
	for (int i = 1; i &lt; size; i++) {
		tail--;
		pathX = c.getMapRegionX() * 8 + tileQueueX.get(tail);
		pathY = c.getMapRegionY() * 8 + tileQueueY.get(tail);
		c.addToWalkingQueue(localize(pathX, c.getMapRegionX()),
				localize(pathY, c.getMapRegionY()));
	}
}

public int localize(int x, int mapRegion) {
	return x - 8 * mapRegion;
}
</code></pre>
<p>}</p>
<p>FOURTH:<br>
Open up playerAssistant.java and add this anywhere you like.</p>
<p>Code:<br>
public void playerWalk(int x, int y) {<br>
PathFinder.getPathFinder().findRoute(c, x, y, true, 1, 1);<br>
}<br>
Then search for public void followPlayer() and replace it with the one below.</p>
<p>Code:<br>
public void followPlayer() {<br>
if (PlayerHandler.players[c.followId] == null<br>
|| PlayerHandler.players[c.followId].isDead) {<br>
resetFollow();<br>
return;<br>
}<br>
if (c.freezeTimer &gt; 0) {<br>
return;<br>
}<br>
if (c.isDead || c.playerLevel[3] &lt;= 0)<br>
return;</p>
<pre><code>	int otherX = PlayerHandler.players[c.followId].getX();
	int otherY = PlayerHandler.players[c.followId].getY();

	boolean sameSpot = (c.absX == otherX &amp;&amp; c.absY == otherY);

	boolean hallyDistance = c.goodDistance(otherX, otherY, c.getX(),
			c.getY(), 2);

	boolean rangeWeaponDistance = c.goodDistance(otherX, otherY, c.getX(),
			c.getY(), 4);
	boolean bowDistance = c.goodDistance(otherX, otherY, c.getX(),
			c.getY(), 6);
	boolean mageDistance = c.goodDistance(otherX, otherY, c.getX(),
			c.getY(), 7);

	boolean castingMagic = (c.usingMagic || c.mageFollow || c.autocasting || c.spellId &gt; 0)
			&amp;&amp; mageDistance;
	boolean playerRanging = (c.usingRangeWeapon)
			&amp;&amp; rangeWeaponDistance;
	boolean playerBowOrCross = (c.usingBow) &amp;&amp; bowDistance;

	if (!c.goodDistance(otherX, otherY, c.getX(), c.getY(), 25)) {
		c.followId = 0;
		resetFollow();
		return;
	}
	c.faceUpdate(c.followId + 32768);
	if (!sameSpot) {
		if (c.playerIndex &gt; 0 &amp;&amp; !c.usingSpecial &amp;&amp; c.inWild()) {
			if (c.usingSpecial &amp;&amp; (playerRanging || playerBowOrCross)) {
				c.stopMovement();
				return;
			}
			if (castingMagic || playerRanging || playerBowOrCross) {
				c.stopMovement();
				return;
			}
			if (c.getCombat().usingHally() &amp;&amp; hallyDistance) {
				c.stopMovement();
				return;
			}
		}
	}
	if (otherX == c.absX &amp;&amp; otherY == c.absY) {
		int r = Misc.random(3);
		switch (r) {
		case 0:
			walkTo(0, -1);
			break;
		case 1:
			walkTo(0, 1);
			break;
		case 2:
			walkTo(1, 0);
			break;
		case 3:
			walkTo(-1, 0);
			break;
		}
	} else if (c.isRunning2) {
		if (otherY &gt; c.getY() &amp;&amp; otherX == c.getX()) {
			playerWalk(otherX, otherY - 1);
		} else if (otherY &lt; c.getY() &amp;&amp; otherX == c.getX()) {
			playerWalk(otherX, otherY + 1);
		} else if (otherX &gt; c.getX() &amp;&amp; otherY == c.getY()) {
			playerWalk(otherX - 1, otherY);
		} else if (otherX &lt; c.getX() &amp;&amp; otherY == c.getY()) {
			playerWalk(otherX + 1, otherY);
		} else if (otherX &lt; c.getX() &amp;&amp; otherY &lt; c.getY()) {
			playerWalk(otherX + 1, otherY + 1);
		} else if (otherX &gt; c.getX() &amp;&amp; otherY &gt; c.getY()) {
			playerWalk(otherX - 1, otherY - 1);
		} else if (otherX &lt; c.getX() &amp;&amp; otherY &gt; c.getY()) {
			playerWalk(otherX + 1, otherY - 1);
		} else if (otherX &gt; c.getX() &amp;&amp; otherY &lt; c.getY()) {
			playerWalk(otherX + 1, otherY - 1);
		}
	} else {
		if (otherY &gt; c.getY() &amp;&amp; otherX == c.getX()) {
			playerWalk(otherX, otherY - 1);
		} else if (otherY &lt; c.getY() &amp;&amp; otherX == c.getX()) {
			playerWalk(otherX, otherY + 1);
		} else if (otherX &gt; c.getX() &amp;&amp; otherY == c.getY()) {
			playerWalk(otherX - 1, otherY);
		} else if (otherX &lt; c.getX() &amp;&amp; otherY == c.getY()) {
			playerWalk(otherX + 1, otherY);
		} else if (otherX &lt; c.getX() &amp;&amp; otherY &lt; c.getY()) {
			playerWalk(otherX + 1, otherY + 1);
		} else if (otherX &gt; c.getX() &amp;&amp; otherY &gt; c.getY()) {
			playerWalk(otherX - 1, otherY - 1);
		} else if (otherX &lt; c.getX() &amp;&amp; otherY &gt; c.getY()) {
			playerWalk(otherX + 1, otherY - 1);
		} else if (otherX &gt; c.getX() &amp;&amp; otherY &lt; c.getY()) {
			playerWalk(otherX - 1, otherY + 1);
		}
	}
	c.faceUpdate(c.followId+32768);
}
</code></pre>
<p>FIFTH:<br>
Open up Player.java and add this in where else you want it.</p>
<p>Code:<br>
public int getLocalX() {<br>
return getX() - 8 * getMapRegionX();<br>
}</p>
<pre><code>public int getLocalY() {
	return getY() - 8 * getMapRegionY();
}
</code></pre>
<p>SIXTH:<br>
Open up FollowPlayer.java which will be in your packets folder and replace it with this… Probably the same as you have already to be honest.<br>
Code:<br>
package server.model.players.packets;</p>
<p>import server.Server;<br>
import server.model.players.Client;<br>
import server.model.players.PacketType;</p>
<p>public class FollowPlayer implements PacketType {</p>
<pre><code>@Override
public void processPacket(Client c, int packetType, int packetSize) {
	int followPlayer = c.getInStream().readUnsignedWordBigEndian();
	if(Server.playerHandler.players[followPlayer] == null) {
		return;
	}
	c.playerIndex = 0;
	c.npcIndex = 0;
	c.mageFollow = false;
	c.usingBow = false;
	c.usingRangeWeapon = false;
	c.followDistance = 1;
	c.followId = followPlayer;
}	
</code></pre>
<p>}</p>
<p>SEVENTH:<br>
Open up Server.java and add these imports</p>
<p>Code:<br>
import server.clip.region.ObjectDef;<br>
import server.clip.region.Region;<br>
Then add these under the main method. (public static void main)</p>
<p>Code:<br>
ObjectDef.loadConfig();<br>
Region.load();</p>
<p>I am sure I left somethings out because I was in a hurry, just post and I will add anything that I may have left out. Cya around. I will release the NPC clipped follow here shortly. Not that I recommend using it…</p>
<p>This was released here: <a href="http://www.rune-server.org/runescape...ty-source.html" rel="nofollow noopener">http://www.rune-server.org/runescape...ty-source.html</a> - the user which released it is Wtf Ur Zerk, however he did not develop this source or this clipping system.</p>
<p>For those trying to sell this… Go seek employment…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-clipped-following/470969/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-clipped-following/470969/1</link>
        <pubDate>Mon, 03 Dec 2012 22:29:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-470969-1</guid>
        <source url="https://forum.moparisthebest.com/t/pi-clipped-following/470969.rss">[PI] Clipped following</source>
      </item>
  </channel>
</rss>
