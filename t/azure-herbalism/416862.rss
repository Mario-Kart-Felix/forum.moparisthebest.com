<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[AZURE]Herbalism</title>
    <link>https://forum.moparisthebest.com/t/azure-herbalism/416862</link>
    <description>[CENTER][size=14pt][font=arial]AZURE[/font][/size]
[size=8pt]Herbalism by: DestriX[/size]

Hello, today I will be releasing my full Herbalism skill. This goes the whole nine yards. Which is Brewing, Grinding, and Identifying. Although this could be used universally I would appreciate if it wasn&#39;t converted to any other base. This is my first skill I have made and I thought I would share it; I did reference Satan666&#39;s Herblore base if anyone was wondering. Everything in this tutorial will be color coded for the ease of the person applying the tutorial.

[B][SIZE=1]I am currently doing some really small quick fixes; eg. animations, graphics.[/SIZE][/B]

[B]The Legend:[/B]
Adding Something: [COLOR=DarkRed]Dark Red[/COLOR]
Opening a class: [COLOR=SeaGreen]Sea Green[/COLOR]
Finding Something: [COLOR=RoyalBlue]Royal Blue[/COLOR]
[/CENTER]

To start off the tutorial please add the three classes provided:

[COLOR=DarkRed]BrewPotion.java[/COLOR]
[CODE=JAVA]
import com.rs2.Constants;
import com.rs2.model.World;
import com.rs2.model.item.Item;
import com.rs2.model.player.Player;
import com.rs2.model.tick.Tick;
/**
 * Brew Potions
 * @author DestriX (http://www.rune-server.org/members/destrix/)
 * 100% Potion Creation.
 * TODO: Support for Multiple Ingredient Potions.
 */
public class BrewPotion {
	
	private static final int BASE_MAT = 227;
	
	/**
	 * Potion data.
	 * @note herb, ingredient, unfinished, finished, exp, req
	 */
	private static final double[][] POTIONS = {
		{249, 221, 91, 121, 25, 3}, // Attack Potion.
		{251, 235, 93, 175, 37.5, 5}, // Anti-Poison.
		{253, 225, 95, 115, 50, 12}, // Strength Potion.
		{253, 592, 95, 3408, 50, 15}, // Serum 207
		{255, 223, 97, 127, 62.5, 22}, // Restore Potion.
		{255, 1581, 97, 1582, 80, 25}, // Blamish Oil.
		{255, 1975, 97, 3010, 67.5, 26}, // Energy Potion.
		{257, 239, 99, 133, 75, 30}, // Defence Potion.
		{2998, 2152, 3002, 3034, 80, 34}, // Agility Potion.
		{257, 231, 99, 139, 87.5, 38}, // Prayer Potion.
		{259, 221, 101, 145, 100, 45}, // Super Attack Potion.
		{259, 235, 101, 181, 106.3, 48}, // Super Anti-Poison.
		{261, 231, 103, 151, 112.5, 50}, // Fishing Potion.
		{261, 2970, 103, 3018, 117.5, 52}, // Super Energy Potion.
		{263, 225, 105, 157, 125, 55}, // Super Strength Potion.
		{263, 241, 105, 187, 137.5, 60}, // Weapon Poison.
		{3051, 223, 3004, 3026, 142.5, 63}, // Super Restore.
		{265, 239, 107, 163, 150, 66}, // Super Defence.
		{2481, 241, 2483, 2454, 157.5, 69}, // Antifire.
		{267, 245, 109, 169, 162.5, 72}, // Ranging Potion.
		{2481, 3138, 2483, 3042, 172.5, 76}, // Magic Potion.
		{219, 247, 111, 189, 175, 78}, // Zamorak Potion.
	};
	
	public static boolean createPotion(Player player, Item useItem, Item withItem, int slot, int slotUsed) {
		try {
		int item = useItem.getId(), usedItem = withItem.getId();
		double herb = -1, ingre = -1, unf = -1, fin = -1, exp = -1, req = -1;
		for (double[]data : POTIONS) {
			herb = data[0];
			ingre = data[1];
			unf = data[2];
			fin = data[3];
			exp = data[4] * Constants.EXP_RATE;
			req = data[5];
			if (item == herb &amp;&amp; usedItem == BASE_MAT || item == BASE_MAT &amp;&amp; usedItem == herb) {
                if (player.getSkill().getLevelForXP(player.getSkill().getExp()[15]) &lt; req) {
                    player.getActionSender().sendMessage(&quot;You need a Herblore level of &quot; + (int)req + &quot; in order to make this potion.&quot;);
                    return false;
                }
                createUnfinished(player, herb, unf);
                return true;
			}
			if (item == unf &amp;&amp; usedItem == ingre || item == ingre &amp;&amp; usedItem == unf) {
                if (player.getSkill().getLevelForXP(player.getSkill().getExp()[15]) &lt; req) {
                    player.getActionSender().sendMessage(&quot;You need a Herblore level of &quot; + (int)req + &quot; in order to make this potion.&quot;);
                    return false;
                }
                createFinished(player, ingre, unf, fin, exp);
			}
		}
		} catch (Exception e) {
		}
		return false;
	}
	
	public static void createUnfinished(final Player player, final double herb, final double unf) {
		final Item item = new Item((int)herb, 1);
        player.getUpdateFlags().sendAnimation(363, 0);
        player.getActionSender().sendMessage(&quot;You put the &quot; + item.getDefinition().getName().replace(&quot; herb&quot;, &quot;&quot;).toLowerCase() + &quot; into the vial of water.&quot;);
        World.submit(new Tick(2) {

            @Override
            public void execute() {
                player.getInventory().removeItem(item);
                player.getInventory().removeItem(new Item(BASE_MAT));
                player.getInventory().addItem(new Item((int)unf));
                this.stop();
            }
        });
	}
	
	public static void createFinished(final Player player, final double ingre, final double unf, final double fin, final double exp) {
		final Item item = new Item((int) ingre, 1);
        player.getUpdateFlags().sendAnimation(363, 0);
        player.getActionSender().sendMessage(&quot;You carefully mix the &quot; + item.getDefinition().getName().toLowerCase() + &quot; into your potion&quot;);
        World.submit(new Tick(2) {

            @Override
            public void execute() {
                player.getInventory().removeItem(item);
                player.getInventory().removeItem(new Item((int)unf));
                player.getInventory().addItem(new Item((int)fin));
                player.getSkill().addExp(15, exp);
                this.stop();
            }
        });
	}
}
[/CODE]

[COLOR=DarkRed]GrindItem.java[/COLOR]
[CODE=JAVA]
import com.rs2.model.World;
import com.rs2.model.item.Item;
import com.rs2.model.player.Player;
import com.rs2.model.tick.Tick;
/**
 * Grinding Item Support.
 * @author DestriX (http://www.rune-server.org/members/destrix/)
 *
 */
public class GrindItem {
	
	private static int BASE_MAT = 233;
	
	/**
	 * Grindable Item data.
	 * @note orig, ground
	 */
	private static final int[][] GRINDABLES = {
		{237, 235}, // Unicorn Horn.
		{1973, 1975}, // Chocolate Bar.
		{5075, 6693} // Bird&#39;s Nest.
	};
	
	public static boolean createProduct(Player player, Item useItem, Item withItem, int slot, int usedSlot) {
		try {
		int orig = -1, product = -1;
		int first = useItem.getId(), second = withItem.getId();
			for(int[]data : GRINDABLES) {
				orig = data[0];
				product = data[1];
				if (first == orig &amp;&amp; second == BASE_MAT || first == BASE_MAT &amp;&amp; second == orig){
				grindItem(player, orig, product);
				return true;
				}
			}
		} catch (Exception e) {
		}
			return false;
		}
	
	public static void grindItem(final Player player, final int orig, final int product) {
        World.submit(new Tick(2) {
        	@Override
        	public void execute() {
        		player.getInventory().removeItem(new Item(orig, 1));
        		player.getInventory().addItem(new Item(product));
        		this.stop();
        	}
        });
	}
}
[/CODE]

[COLOR=DarkRed]IdentifyHerb.java[/COLOR]
[CODE=JAVA]
import com.rs2.Constants;
import com.rs2.model.item.Item;
import com.rs2.model.player.Player;
/**
 * Herblore Identifying.
 * @author DestriX (http://www.rune-server.org/members/destrix/)
 *
 */
public class IdentifyHerb {
	
	/**
	 * Grimy herb data.
	 * @note grimy, clean, exp, req
	 */
	private static final double[][] GRIMY_HERBS = {
		{199, 249, 2.5, 3}, // Guam.
        {201, 251, 3.8, 5}, // Marrentill.
        {203, 253, 5, 11}, // Tarromin.
        {205, 255, 6.3, 20}, // Harralander.
        {207, 257, 7.5, 25}, // Ranarr.
        {3049, 2998, 8, 30}, // Toadflax.
        {209, 259, 8.8, 40}, // Irit.
        {211, 261, 10, 48}, // Avantoe.
        {213, 263, 11.3, 54}, // Kwaurm.
        {3000, 3051, 11.8, 59}, // Snapdragon.
        {215, 265, 12.5, 65}, // Cadantine
        {2485, 2481, 13.1, 67}, // Lantadyme
        {217, 267, 13.8, 70}, // Dwarf Weed.
        {219, 269, 15, 75} // Torstol.
	};
	
	public static boolean identHerb(Player player, int itemId, int slot) {
		double grimy = -1, clean = -1, exp = -1, req = -1;
		for (double[]data : GRIMY_HERBS) {
			grimy = data[0];
			clean = data[1];
			exp = data[2] * Constants.EXP_RATE;
			req = data[3];
			if (itemId == grimy) {
				if (player.getSkill().getLevelForXP(player.getSkill().getExp()[15]) &lt; req) {
                    player.getActionSender().sendMessage(&quot;You need a Herblore level of &quot; + (int)req + &quot; before being able to clean this herb&quot;);
                    return false;
				}
                player.getSkill().addExp(15, exp);
                player.getInventory().removeItemSlot(new Item(itemId), slot);
                player.getInventory().addItemToSlot(new Item((int) clean), slot);
                return true;
			}
		}
		return false;
	}
}
[/CODE]

Next what you will want to do is open the class &quot;[COLOR=SeaGreen]ItemPacketHandler.java[/COLOR]&quot; and scroll down to the method &quot;[COLOR=RoyalBlue]handleItemOnItem[/COLOR]&quot;.
Add these under &quot;[COLOR=RoyalBlue]Item useWithItem = player.getInventory().getItemContainer().get(withSlot);[/COLOR]&quot;
[CODE=JAVA]
        if (BrewPotion.createPotion(player, useItem, useWithItem, slot, withSlot)) {
            return;
        }
        if (GrindItem.createProduct(player, useItem, useWithItem, slot, withSlot)) {
        	return;
        }
[/CODE]

Than go to the method &quot;[COLOR=RoyalBlue]useItem[/COLOR]&quot; scroll down and add this:
[CODE]
        if (IdentifyHerb.identHerb(player, itemId, slot)) {
            return;
        }
[/CODE]
under &quot;[COLOR=RoyalBlue]int itemId = packet.getIn().readShort(StreamBuffer.ByteOrder.LITTLE);[/COLOR]&quot;.

Make sure you add the imports to &quot;[COLOR=SeaGreen]ItemPacketHandler.java[/COLOR]&quot;

[code=java]import com.rs2.model.content.skills.herblore.BrewPotion;
import com.rs2.model.content.skills.herblore.GrindItem;
import com.rs2.model.content.skills.herblore.IdentifyHerb;[/code]

That is it, each class is pretty self explanatory and is really easy to read (so you shouldn&#39;t have problems adding new recipes). Thank you for viewing my tutorial. :D</description>
    
    <lastBuildDate>Wed, 05 Oct 2011 20:32:35 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/azure-herbalism/416862.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[AZURE]Herbalism</title>
        <dc:creator><![CDATA[@demps2k9 demps2k9]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/demps2k9">@demps2k9</a> wrote:</p>
          <blockquote>
              <p>Rather nice. Good job on this.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/azure-herbalism/416862/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/azure-herbalism/416862/6</link>
        <pubDate>Wed, 05 Oct 2011 20:32:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-416862-6</guid>
        <source url="https://forum.moparisthebest.com/t/azure-herbalism/416862.rss">[AZURE]Herbalism</source>
      </item>
      <item>
        <title>[AZURE]Herbalism</title>
        <dc:creator><![CDATA[@DestriX_RS DestriX_RS]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/destrix_rs">@DestriX_RS</a> wrote:</p>
          <blockquote>
              <p>[quote=“imsuperman05, post:4, topic:416862”]Could be done waaaaaaaaaaaaaay much better.  It’d be better to use enums.  Why do you people like to use booleans to create the potion or whatever the instance is.  You can use a boolean to check if they have the appropriate items/levels and check it in a void…</p>
<p>Instead of calling the void inside the boolean, you could just check if it’s true/false.<br>
if(createPotion(correct shit here))</p>
<p>Snippet.[/quote]</p>
<p>That is true, and I should have used enums but it <span class="bbcode-b">does</span> get the job done :P. Thanks for the sort-of constructive criticism.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/azure-herbalism/416862/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/azure-herbalism/416862/5</link>
        <pubDate>Wed, 05 Oct 2011 04:30:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-416862-5</guid>
        <source url="https://forum.moparisthebest.com/t/azure-herbalism/416862.rss">[AZURE]Herbalism</source>
      </item>
      <item>
        <title>[AZURE]Herbalism</title>
        <dc:creator><![CDATA[@imsuperman05 imsuperman05]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imsuperman05">@imsuperman05</a> wrote:</p>
          <blockquote>
              <p>Could be done waaaaaaaaaaaaaay much better.  It’d be better to use enums.  Why do you people like to use booleans to create the potion or whatever the instance is.  You can use a boolean to check if they have the appropriate items/levels and check it in a void…</p>
<p>Instead of calling the void inside the boolean, you could just check if it’s true/false.<br>
if(createPotion(correct shit here))</p>
<p>Snippet.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/azure-herbalism/416862/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/azure-herbalism/416862/4</link>
        <pubDate>Mon, 03 Oct 2011 22:27:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-416862-4</guid>
        <source url="https://forum.moparisthebest.com/t/azure-herbalism/416862.rss">[AZURE]Herbalism</source>
      </item>
      <item>
        <title>[AZURE]Herbalism</title>
        <dc:creator><![CDATA[@DestriX_RS DestriX_RS]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/destrix_rs">@DestriX_RS</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="416862">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/pk2play/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> pk2play:</div>
<blockquote>
<p>Like I said on r-s, “inb4vault”</p>
</blockquote>
</aside>
<p>^.^ Lol</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/azure-herbalism/416862/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/azure-herbalism/416862/3</link>
        <pubDate>Mon, 03 Oct 2011 01:06:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-416862-3</guid>
        <source url="https://forum.moparisthebest.com/t/azure-herbalism/416862.rss">[AZURE]Herbalism</source>
      </item>
      <item>
        <title>[AZURE]Herbalism</title>
        <dc:creator><![CDATA[@pk2play pk2play]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pk2play">@pk2play</a> wrote:</p>
          <blockquote>
              <p>Like I said on r-s, “inb4vault”</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/azure-herbalism/416862/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/azure-herbalism/416862/2</link>
        <pubDate>Mon, 03 Oct 2011 01:05:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-416862-2</guid>
        <source url="https://forum.moparisthebest.com/t/azure-herbalism/416862.rss">[AZURE]Herbalism</source>
      </item>
      <item>
        <title>[AZURE]Herbalism</title>
        <dc:creator><![CDATA[@DestriX_RS DestriX_RS]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/destrix_rs">@DestriX_RS</a> wrote:</p>
          <blockquote>
              <p>[CENTER][size=14pt][font=arial]AZURE[/font][/size]<br>
[size=8pt]Herbalism by: DestriX[/size]</p>
<p>Hello, today I will be releasing my full Herbalism skill. This goes the whole nine yards. Which is Brewing, Grinding, and Identifying. Although this could be used universally I would appreciate if it wasn’t converted to any other base. This is my first skill I have made and I thought I would share it; I did reference Satan666’s Herblore base if anyone was wondering. Everything in this tutorial will be color coded for the ease of the person applying the tutorial.</p>
<p><span class="bbcode-b">[SIZE=1]I am currently doing some really small quick fixes; eg. animations, graphics.[/SIZE]</span></p>
<p><span class="bbcode-b">The Legend:</span><br>
Adding Something: [COLOR=DarkRed]Dark Red[/COLOR]<br>
Opening a class: [COLOR=SeaGreen]Sea Green[/COLOR]<br>
Finding Something: [COLOR=RoyalBlue]Royal Blue[/COLOR]<br>
[/CENTER]</p>
<p>To start off the tutorial please add the three classes provided:</p>
<p>[COLOR=DarkRed]BrewPotion.java[/COLOR]</p>
<pre><code class="lang-auto">import com.rs2.Constants;
import com.rs2.model.World;
import com.rs2.model.item.Item;
import com.rs2.model.player.Player;
import com.rs2.model.tick.Tick;
/**
 * Brew Potions
 * @author DestriX (http://www.rune-server.org/members/destrix/)
 * 100% Potion Creation.
 * TODO: Support for Multiple Ingredient Potions.
 */
public class BrewPotion {
	
	private static final int BASE_MAT = 227;
	
	/**
	 * Potion data.
	 * @note herb, ingredient, unfinished, finished, exp, req
	 */
	private static final double[][] POTIONS = {
		{249, 221, 91, 121, 25, 3}, // Attack Potion.
		{251, 235, 93, 175, 37.5, 5}, // Anti-Poison.
		{253, 225, 95, 115, 50, 12}, // Strength Potion.
		{253, 592, 95, 3408, 50, 15}, // Serum 207
		{255, 223, 97, 127, 62.5, 22}, // Restore Potion.
		{255, 1581, 97, 1582, 80, 25}, // Blamish Oil.
		{255, 1975, 97, 3010, 67.5, 26}, // Energy Potion.
		{257, 239, 99, 133, 75, 30}, // Defence Potion.
		{2998, 2152, 3002, 3034, 80, 34}, // Agility Potion.
		{257, 231, 99, 139, 87.5, 38}, // Prayer Potion.
		{259, 221, 101, 145, 100, 45}, // Super Attack Potion.
		{259, 235, 101, 181, 106.3, 48}, // Super Anti-Poison.
		{261, 231, 103, 151, 112.5, 50}, // Fishing Potion.
		{261, 2970, 103, 3018, 117.5, 52}, // Super Energy Potion.
		{263, 225, 105, 157, 125, 55}, // Super Strength Potion.
		{263, 241, 105, 187, 137.5, 60}, // Weapon Poison.
		{3051, 223, 3004, 3026, 142.5, 63}, // Super Restore.
		{265, 239, 107, 163, 150, 66}, // Super Defence.
		{2481, 241, 2483, 2454, 157.5, 69}, // Antifire.
		{267, 245, 109, 169, 162.5, 72}, // Ranging Potion.
		{2481, 3138, 2483, 3042, 172.5, 76}, // Magic Potion.
		{219, 247, 111, 189, 175, 78}, // Zamorak Potion.
	};
	
	public static boolean createPotion(Player player, Item useItem, Item withItem, int slot, int slotUsed) {
		try {
		int item = useItem.getId(), usedItem = withItem.getId();
		double herb = -1, ingre = -1, unf = -1, fin = -1, exp = -1, req = -1;
		for (double[]data : POTIONS) {
			herb = data[0];
			ingre = data[1];
			unf = data[2];
			fin = data[3];
			exp = data[4] * Constants.EXP_RATE;
			req = data[5];
			if (item == herb &amp;&amp; usedItem == BASE_MAT || item == BASE_MAT &amp;&amp; usedItem == herb) {
                if (player.getSkill().getLevelForXP(player.getSkill().getExp()[15]) &lt; req) {
                    player.getActionSender().sendMessage("You need a Herblore level of " + (int)req + " in order to make this potion.");
                    return false;
                }
                createUnfinished(player, herb, unf);
                return true;
			}
			if (item == unf &amp;&amp; usedItem == ingre || item == ingre &amp;&amp; usedItem == unf) {
                if (player.getSkill().getLevelForXP(player.getSkill().getExp()[15]) &lt; req) {
                    player.getActionSender().sendMessage("You need a Herblore level of " + (int)req + " in order to make this potion.");
                    return false;
                }
                createFinished(player, ingre, unf, fin, exp);
			}
		}
		} catch (Exception e) {
		}
		return false;
	}
	
	public static void createUnfinished(final Player player, final double herb, final double unf) {
		final Item item = new Item((int)herb, 1);
        player.getUpdateFlags().sendAnimation(363, 0);
        player.getActionSender().sendMessage("You put the " + item.getDefinition().getName().replace(" herb", "").toLowerCase() + " into the vial of water.");
        World.submit(new Tick(2) {

            @Override
            public void execute() {
                player.getInventory().removeItem(item);
                player.getInventory().removeItem(new Item(BASE_MAT));
                player.getInventory().addItem(new Item((int)unf));
                this.stop();
            }
        });
	}
	
	public static void createFinished(final Player player, final double ingre, final double unf, final double fin, final double exp) {
		final Item item = new Item((int) ingre, 1);
        player.getUpdateFlags().sendAnimation(363, 0);
        player.getActionSender().sendMessage("You carefully mix the " + item.getDefinition().getName().toLowerCase() + " into your potion");
        World.submit(new Tick(2) {

            @Override
            public void execute() {
                player.getInventory().removeItem(item);
                player.getInventory().removeItem(new Item((int)unf));
                player.getInventory().addItem(new Item((int)fin));
                player.getSkill().addExp(15, exp);
                this.stop();
            }
        });
	}
}</code></pre>
<p>[COLOR=DarkRed]GrindItem.java[/COLOR]</p>
<pre><code class="lang-auto">import com.rs2.model.World;
import com.rs2.model.item.Item;
import com.rs2.model.player.Player;
import com.rs2.model.tick.Tick;
/**
 * Grinding Item Support.
 * @author DestriX (http://www.rune-server.org/members/destrix/)
 *
 */
public class GrindItem {
	
	private static int BASE_MAT = 233;
	
	/**
	 * Grindable Item data.
	 * @note orig, ground
	 */
	private static final int[][] GRINDABLES = {
		{237, 235}, // Unicorn Horn.
		{1973, 1975}, // Chocolate Bar.
		{5075, 6693} // Bird's Nest.
	};
	
	public static boolean createProduct(Player player, Item useItem, Item withItem, int slot, int usedSlot) {
		try {
		int orig = -1, product = -1;
		int first = useItem.getId(), second = withItem.getId();
			for(int[]data : GRINDABLES) {
				orig = data[0];
				product = data[1];
				if (first == orig &amp;&amp; second == BASE_MAT || first == BASE_MAT &amp;&amp; second == orig){
				grindItem(player, orig, product);
				return true;
				}
			}
		} catch (Exception e) {
		}
			return false;
		}
	
	public static void grindItem(final Player player, final int orig, final int product) {
        World.submit(new Tick(2) {
        	@Override
        	public void execute() {
        		player.getInventory().removeItem(new Item(orig, 1));
        		player.getInventory().addItem(new Item(product));
        		this.stop();
        	}
        });
	}
}</code></pre>
<p>[COLOR=DarkRed]IdentifyHerb.java[/COLOR]</p>
<pre><code class="lang-auto">import com.rs2.Constants;
import com.rs2.model.item.Item;
import com.rs2.model.player.Player;
/**
 * Herblore Identifying.
 * @author DestriX (http://www.rune-server.org/members/destrix/)
 *
 */
public class IdentifyHerb {
	
	/**
	 * Grimy herb data.
	 * @note grimy, clean, exp, req
	 */
	private static final double[][] GRIMY_HERBS = {
		{199, 249, 2.5, 3}, // Guam.
        {201, 251, 3.8, 5}, // Marrentill.
        {203, 253, 5, 11}, // Tarromin.
        {205, 255, 6.3, 20}, // Harralander.
        {207, 257, 7.5, 25}, // Ranarr.
        {3049, 2998, 8, 30}, // Toadflax.
        {209, 259, 8.8, 40}, // Irit.
        {211, 261, 10, 48}, // Avantoe.
        {213, 263, 11.3, 54}, // Kwaurm.
        {3000, 3051, 11.8, 59}, // Snapdragon.
        {215, 265, 12.5, 65}, // Cadantine
        {2485, 2481, 13.1, 67}, // Lantadyme
        {217, 267, 13.8, 70}, // Dwarf Weed.
        {219, 269, 15, 75} // Torstol.
	};
	
	public static boolean identHerb(Player player, int itemId, int slot) {
		double grimy = -1, clean = -1, exp = -1, req = -1;
		for (double[]data : GRIMY_HERBS) {
			grimy = data[0];
			clean = data[1];
			exp = data[2] * Constants.EXP_RATE;
			req = data[3];
			if (itemId == grimy) {
				if (player.getSkill().getLevelForXP(player.getSkill().getExp()[15]) &lt; req) {
                    player.getActionSender().sendMessage("You need a Herblore level of " + (int)req + " before being able to clean this herb");
                    return false;
				}
                player.getSkill().addExp(15, exp);
                player.getInventory().removeItemSlot(new Item(itemId), slot);
                player.getInventory().addItemToSlot(new Item((int) clean), slot);
                return true;
			}
		}
		return false;
	}
}</code></pre>
<p>Next what you will want to do is open the class “[COLOR=SeaGreen]ItemPacketHandler.java[/COLOR]” and scroll down to the method “[COLOR=RoyalBlue]handleItemOnItem[/COLOR]”.<br>
Add these under “[COLOR=RoyalBlue]Item useWithItem = player.getInventory().getItemContainer().get(withSlot);[/COLOR]”</p>
<pre><code class="lang-auto">        if (BrewPotion.createPotion(player, useItem, useWithItem, slot, withSlot)) {
            return;
        }
        if (GrindItem.createProduct(player, useItem, useWithItem, slot, withSlot)) {
        	return;
        }</code></pre>
<p>Than go to the method “[COLOR=RoyalBlue]useItem[/COLOR]” scroll down and add this:</p>
<pre><code class="lang-auto">        if (IdentifyHerb.identHerb(player, itemId, slot)) {
            return;
        }</code></pre>
<p>under “[COLOR=RoyalBlue]int itemId = packet.getIn().readShort(StreamBuffer.ByteOrder.LITTLE);[/COLOR]”.</p>
<p>Make sure you add the imports to “[COLOR=SeaGreen]ItemPacketHandler.java[/COLOR]”</p>
<p><code>import com.rs2.model.content.skills.herblore.BrewPotion;
import com.rs2.model.content.skills.herblore.GrindItem;
import com.rs2.model.content.skills.herblore.IdentifyHerb;</code></p>
<p>That is it, each class is pretty self explanatory and is really easy to read (so you shouldn’t have problems adding new recipes). Thank you for viewing my tutorial. <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/azure-herbalism/416862/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/azure-herbalism/416862/1</link>
        <pubDate>Mon, 03 Oct 2011 01:01:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-416862-1</guid>
        <source url="https://forum.moparisthebest.com/t/azure-herbalism/416862.rss">[AZURE]Herbalism</source>
      </item>
  </channel>
</rss>
