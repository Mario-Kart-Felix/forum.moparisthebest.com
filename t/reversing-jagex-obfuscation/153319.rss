<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Reversing jagex obfuscation</title>
    <link>https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319</link>
    <description>So reversing jagex obfuscation is quite easy in source code, but in bytecode, obviously, it&#39;s not so simple.

For the stupid inverted vars (such as if(~var &lt;= -1)) you simply flip the operand and reverse the expression, as in this example to if(var &gt;= 0) (0 = -1 ^ 0xffffffff)

For inverted if-statement blocks, such as:
[code]
if(var != null) {
    if(expression) {
    } else {}
} else {
  expression2
}
[/code]
it&#39;s quite easy to un-nest the statement by hand to:
[code]
if(var == null) {
    expression2
} else if(expression) {
}
[/code]

Shifts are also very simple to reverse if you think about it logically.
For example, a shift such as i &lt;&lt; 295368, if I is an int, you get the remainder of the shift by 32 (295368 % 32), which is in this case 8.  If it&#39;s a long that is being shifted though, you&#39;ll have to get the remainder from 64.

I&#39;ve begun some simple work using my old bytecode lib on fixing these expressions, but due to my general lack of bytecode knowledge, I have only so-far been able to fix the shifts (as they are quite easy).

Here&#39;s my shift-fixer for anyone who&#39;s interested, and I would urge any improvements, or fixes for other types of obfuscation to be pasted here.
[code]
private static void transform(final List&lt;ClassFile&gt; classes) {
        try {
            int i, j;
            Instruction ins, prev;
            LDC ldc;
            for (ClassFile cf : classes) {
                for (Method m : cf.methods) {
                    if (m.code == null)
                        continue;
                    final int length = m.code.size();
                    for (i = 0; i &lt; length; i++) {
                        ins = m.code.get(i);
                        if (ins instanceof ISHL || ins instanceof ISHR || ins instanceof IUSHR || ins instanceof LSHR || ins instanceof LSHL || ins instanceof LUSHR) {
                            prev = m.code.get(i - 1);
                            if (prev instanceof LDC) {
                                ldc = (LDC) prev;
                                j = optimizeShift(((ConstantInteger) ldc.c).bytes, ins);
                                if(j == 1) {
                                    m.replaceInstruction(i - 1, new ICONST_1());
                                } else if(j == 2) {
                                    m.replaceInstruction(i - 1, new ICONST_2());
                                } else if(j == 3) {
                                    m.replaceInstruction(i - 1, new ICONST_3());
                                } else if(j == 4) {
                                    m.replaceInstruction(i - 1, new ICONST_4());
                                } else if(j == 5) {
                                    m.replaceInstruction(i - 1, new ICONST_5());
                                } else {
                                    m.replaceInstruction(i - 1, new BIPUSH((byte) j));
                                }
                            }
                        }
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private static int optimizeShift(final int shift, final Instruction ins) {
        if (ins instanceof ISHL || ins instanceof ISHR || ins instanceof IUSHR) {
            if (shift &lt; 0)
                return 32 + (shift % 32);
            else
                return shift % 32;
        } else if (ins instanceof LSHL || ins instanceof LSHR || ins instanceof LUSHR) {
            if (shift &lt; 0)
                return 64 + (shift % 64);
            else
                return shift % 64;
        }
        System.err.println(&quot;WTF, ERRAR, RUN!&quot;);
        return shift;
    }
[/code]

~newbiehacker</description>
    
    <lastBuildDate>Sun, 21 Dec 2008 19:36:01 +0000</lastBuildDate>
    <category>Community Inside Talk</category>
    <atom:link href="https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Reversing jagex obfuscation</title>
        <dc:creator><![CDATA[@White_Castle White Castle]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/white_castle">@White_Castle</a> wrote:</p>
          <blockquote>
              <p>Please stimulate us!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319/13</link>
        <pubDate>Sun, 21 Dec 2008 19:36:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-153319-13</guid>
        <source url="https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319.rss">Reversing jagex obfuscation</source>
      </item>
      <item>
        <title>Reversing jagex obfuscation</title>
        <dc:creator><![CDATA[@Mopman Mopman]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mopman">@Mopman</a> wrote:</p>
          <blockquote>
              <p>If you have any questions about what the code pasted by others here is doing, I’m sure here would be the best place to discuss it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319/12</link>
        <pubDate>Wed, 10 Dec 2008 23:01:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-153319-12</guid>
        <source url="https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319.rss">Reversing jagex obfuscation</source>
      </item>
      <item>
        <title>Reversing jagex obfuscation</title>
        <dc:creator><![CDATA[@Ron Ron]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ron">@Ron</a> wrote:</p>
          <blockquote>
              <p>How long have client-hackers been talking about reversing jagex’s obfuscation? I’m really curious to see some results, but all I see is code that I have no idea how to use. I said in another post that I have been working with quite a bit of java recently and would love to see if I can actually do anything to help.</p>
<p>Anyone wanna brief me on AIM/MSN on the latest and greatest in runescape client hacking? <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319/11</link>
        <pubDate>Wed, 10 Dec 2008 22:32:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-153319-11</guid>
        <source url="https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319.rss">Reversing jagex obfuscation</source>
      </item>
      <item>
        <title>Reversing jagex obfuscation</title>
        <dc:creator><![CDATA[@Speljohan Speljohan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/speljohan">@Speljohan</a> wrote:</p>
          <blockquote>
              <p>Offtopic: Wow, thx to frank_ these sections r being used again!!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319/10</link>
        <pubDate>Tue, 25 Nov 2008 05:06:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-153319-10</guid>
        <source url="https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319.rss">Reversing jagex obfuscation</source>
      </item>
      <item>
        <title>Reversing jagex obfuscation</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>[quote=“Ollie, post:8, topic:153319”]surely it would be better to remove them?<br>
example:  (x &lt;&lt; 39) + (x &lt;&lt; 38) + (x &lt;&lt; −95) + x.<br>
can be simplified to: (x &lt;&lt; 7) + (x &lt;&lt; 6) + (x &lt;&lt; 1) + x<br>
which is equivalent to: x ∗ 195</p>
<p>or am i missing the point here?[/quote]there is probably very little point using shifts that complex instead of the multiplication in java</p>
<p>but the shifts he are talking about is attemping to perform “irrational shifts”, that is, shifting by bits than you have</p>
<p>eg someInt &lt;&lt; 3569069</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319/9</link>
        <pubDate>Tue, 25 Nov 2008 05:02:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-153319-9</guid>
        <source url="https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319.rss">Reversing jagex obfuscation</source>
      </item>
      <item>
        <title>Reversing jagex obfuscation</title>
        <dc:creator><![CDATA[@Ollie Ollie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ollie">@Ollie</a> wrote:</p>
          <blockquote>
              <p>surely it would be better to remove them?<br>
example:  (x &lt;&lt; 39) + (x &lt;&lt; 38) + (x &lt;&lt; −95) + x.<br>
can be simplified to: (x &lt;&lt; 7) + (x &lt;&lt; 6) + (x &lt;&lt; 1) + x<br>
which is equivalent to: x ∗ 195</p>
<p>or am i missing the point here?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319/8</link>
        <pubDate>Tue, 25 Nov 2008 04:35:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-153319-8</guid>
        <source url="https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319.rss">Reversing jagex obfuscation</source>
      </item>
      <item>
        <title>Reversing jagex obfuscation</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>the second, though the goal here is not to remove the shifts, it is to “fix” them</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319/7</link>
        <pubDate>Mon, 22 Oct 2007 23:51:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-153319-7</guid>
        <source url="https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319.rss">Reversing jagex obfuscation</source>
      </item>
      <item>
        <title>Reversing jagex obfuscation</title>
        <dc:creator><![CDATA[@ruler ruler]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ruler">@ruler</a> wrote:</p>
          <blockquote>
              <p>Dont have time to read it all, however i understand the problem.</p>
<p>Translating all the logic to a standard in order to write bcel patterns is fine.  However I pled you not to keep the changes in your output.  Things like using shifts instead of modulus is much faster.</p>
<p>You know, if you do build a really good expression optmizier.<br>
Example you have a custom Class Loader that reads in bytecode classfiles.  You have a table of operations and the cost of the operation per CPU type.  You can optimziation alot of expressions.  Probably not that bad to do in Java since we have a limited about of data types.</p>
<p>Example:<br>
int color1 = 10, color2 = 15, tolerance = 3<br>
int registar1;<br>
boolean valid = (((registar1 = color1 - color2) &gt;&gt;&gt; 31 == 0) ? registar1 : ~registar1) - tolerance  &gt;&gt;&gt; 31)  !=  0;</p>
<p>int color1 = 10, color2 = 15, tolerance = 3<br>
int registar1;<br>
boolean valid =  ((registar1 = color1 - color2) &gt; 0 ? registar1 : -registar1) =&lt; tolerance);</p>
<p>Which is faster?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319/6</link>
        <pubDate>Mon, 22 Oct 2007 22:53:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-153319-6</guid>
        <source url="https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319.rss">Reversing jagex obfuscation</source>
      </item>
      <item>
        <title>Reversing jagex obfuscation</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>yeah, the shift fixer is really easy, i managed to get it as only a couple of lines as a transform for saevs deobber (that said, i still managed to stuff it up, HAH)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319/5</link>
        <pubDate>Mon, 22 Oct 2007 06:07:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-153319-5</guid>
        <source url="https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319.rss">Reversing jagex obfuscation</source>
      </item>
      <item>
        <title>Reversing jagex obfuscation</title>
        <dc:creator><![CDATA[@newbiehacker newbiehacker]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/newbiehacker">@newbiehacker</a> wrote:</p>
          <blockquote>
              <p>Nice.  As for the comment regarding my code; I forgot to mention about negatives, but if you look at the code I pasted it <span class="bbcode-i">does</span> handle them, but thanks for the other way, it’s definetly simpler at least <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=6" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319/4</link>
        <pubDate>Mon, 22 Oct 2007 03:47:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-153319-4</guid>
        <source url="https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319.rss">Reversing jagex obfuscation</source>
      </item>
      <item>
        <title>Reversing jagex obfuscation</title>
        <dc:creator><![CDATA[@White_Castle White Castle]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/white_castle">@White_Castle</a> wrote:</p>
          <blockquote>
              <p>newbiehacker: since sometimes they shift by a negative number, your remainder method doesn’t work. Here’s one that was derived from something frank_ made, I think:</p>
<p><code>	public static int correctShifts(ClassGen classGen) {
		if(classGen.isInterface())
			return 0;
		int i = 0;
		ConstantPoolGen constantPool = classGen.getConstantPool();
		InstructionFactory instructionFactory = new InstructionFactory(classGen, constantPool);
		for(Method method : classGen.getMethods()) {
			MethodGen methodGen = new MethodGen(method, classGen.getClassName(), constantPool);
			InstructionList instructionList = methodGen.getInstructionList();
			if(instructionList == null)
				continue;
			InstructionFinder instructionFinder = new InstructionFinder(instructionList);
			for(InstructionHandle[] match : instructionFinder.find("ldc", "[il]u?sh[lr]")) {
				int shiftOpcode = match[1].getInstruction().getOpcode();
				boolean longShift = shiftOpcode == Constants.LSHL || shiftOpcode == Constants.LSHR || shiftOpcode == Constants.LUSHR;
				match[0].setInstruction(instructionFactory.createConstant(((Integer)((LDC)match[0].getInstruction()).getValue(constantPool)).intValue() &amp; (longShift ? 63 : 31)));
				i++;
			}
			classGen.replaceMethod(method, methodGen.getMethod());
		}
		return i;
	}</code></p>
<p>About the not remover, the one Cheese_Police posted has worked in the past, but when I ran it before deobfuscation, the client simply wouldn’t run. I think the problem is simply the incompleteness of my pattern. The following is a piece of legitimate code within the client:</p>
<pre><code class="lang-auto">Class74_Sub7_Sub22.aBooleanArray2776[~j] = false;</code></pre>
<p>In bytecode:</p>
<p><code>getstatic boolean[] Class74_Sub7_Sub22.aBooleanArray2776 
iload_2 
iconst_m1 
ixor 
iconst_0 
bastore</code></p>
<p>Now, you can probably see what’s going on here. After my pattern is applied to that, it spits out the following code, when decompiled:</p>
<pre><code class="lang-auto">Class74_Sub7_Sub22.aBooleanArray2776[j] = -1;</code></pre>
<p>So yeah, I’ll get back to you guys when I make some progress :).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319/3</link>
        <pubDate>Sun, 21 Oct 2007 22:49:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-153319-3</guid>
        <source url="https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319.rss">Reversing jagex obfuscation</source>
      </item>
      <item>
        <title>Reversing jagex obfuscation</title>
        <dc:creator><![CDATA[@Cheese_Police c|p]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cheese_police">@Cheese_Police</a> wrote:</p>
          <blockquote>
              <blockquote>For the stupid inverted vars (such as if(~var &lt;= -1)) you simply flip the operand and reverse the expression, as in this example to if(var &gt;= 0) (0 = -1 ^ 0xffffffff)</blockquote>
<p>This does work, but it also disrupts legitimate operations (when you do it via bytecode).  whitecastle wrote a post-obfuscator to do this, but later caught on.  He is (I believe) working on a new solution.</p>
<p>[code]public class NOTRemover extends Transformer {<br>
public NOTRemover(ClassGen[] classGens) {<br>
super(classGens);<br>
}</p>
<pre><code>public void transform(String argument, boolean verbose) throws Throwable {
	int notsRemoved = 0;
	for(ClassGen classGen : classGens) {
		if(classGen.isInterface())
			continue;
		ConstantPoolGen constantPool = classGen.getConstantPool();
		InstructionFactory instructionFactory = new InstructionFactory(classGen, constantPool);
		for(Method method : classGen.getMethods()) {
			MethodGen methodGen = new MethodGen(method, classGen.getClassName(), constantPool);
			InstructionList instructionList = methodGen.getInstructionList();
			if(instructionList == null)
				continue;
			InstructionFinder instructionFinder = new InstructionFinder(instructionList);
			for(InstructionHandle[] match : instructionFinder.find("iconst_m1", "ixor", "iconst|[bs]ipush|ldc|if")) {
				InstructionHandle instructionHandle = match[2];
				Instruction instruction = instructionHandle.getInstruction();
				if(instruction instanceof IfInstruction) {
					instructionHandle.setInstruction(reversedIfInstruction((IfInstruction)instruction));
				} else
					instructionHandle.setInstruction(instructionFactory.createConstant(~((Number)(instruction instanceof LDC ? ((LDC)instruction).getValue(constantPool) : ((ConstantPushInstruction)instruction).getValue())).intValue()));
				instructionList.delete(match[0], match[1]);
				notsRemoved++;
			}
			classGen.replaceMethod(method, methodGen.getMethod());
		}
	}
	if(verbose)
		Logger.log(Priority.NORMAL, "removed " + notsRemoved + " not operations");
}

private static final IfInstruction reversedIfInstruction(IfInstruction ifInstruction) {
	InstructionHandle target = ifInstruction.getTarget();
	IfInstruction reversed = null;
	switch(ifInstruction.getOpcode()) {
		case Constants.IFEQ:
			reversed = new IFNE(target);
			break;
		case Constants.IFNE:
			reversed = new IFEQ(target);
			break;
		case Constants.IFLT:
			reversed = new IFGT(target);
			break;
		case Constants.IFGE:
			reversed = new IFLE(target);
			break;
		case Constants.IFGT:
			reversed = new IFLT(target);
			break;
		case Constants.IFLE:
			reversed = new IFGE(target);
			break;
		case Constants.IF_ICMPEQ:
			reversed = new IF_ICMPNE(target);
			break;
		case Constants.IF_ICMPNE:
			reversed = new IF_ICMPEQ(target);
			break;
		case Constants.IF_ICMPLT:
			reversed = new IF_ICMPGT(target);
			break;
		case Constants.IF_ICMPGE:
			reversed = new IF_ICMPLE(target);
			break;
		case Constants.IF_ICMPGT:
			reversed = new IF_ICMPLT(target);
			break;
		case Constants.IF_ICMPLE:
			reversed = new IF_ICMPGE(target);
			break;
	}
	return reversed;
}
</code></pre>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319/2</link>
        <pubDate>Sun, 21 Oct 2007 22:31:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-153319-2</guid>
        <source url="https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319.rss">Reversing jagex obfuscation</source>
      </item>
      <item>
        <title>Reversing jagex obfuscation</title>
        <dc:creator><![CDATA[@newbiehacker newbiehacker]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/newbiehacker">@newbiehacker</a> wrote:</p>
          <blockquote>
              <p>So reversing jagex obfuscation is quite easy in source code, but in bytecode, obviously, it’s not so simple.</p>
<p>For the stupid inverted vars (such as if(~var &lt;= -1)) you simply flip the operand and reverse the expression, as in this example to if(var &gt;= 0) (0 = -1 ^ 0xffffffff)</p>
<p>For inverted if-statement blocks, such as:</p>
<pre><code class="lang-auto">if(var != null) {
    if(expression) {
    } else {}
} else {
  expression2
}</code></pre>
<p>it’s quite easy to un-nest the statement by hand to:</p>
<pre><code class="lang-auto">if(var == null) {
    expression2
} else if(expression) {
}</code></pre>
<p>Shifts are also very simple to reverse if you think about it logically.<br>
For example, a shift such as i &lt;&lt; 295368, if I is an int, you get the remainder of the shift by 32 (295368 % 32), which is in this case 8.  If it’s a long that is being shifted though, you’ll have to get the remainder from 64.</p>
<p>I’ve begun some simple work using my old bytecode lib on fixing these expressions, but due to my general lack of bytecode knowledge, I have only so-far been able to fix the shifts (as they are quite easy).</p>
<p>Here’s my shift-fixer for anyone who’s interested, and I would urge any improvements, or fixes for other types of obfuscation to be pasted here.</p>
<pre><code class="lang-auto">private static void transform(final List&lt;ClassFile&gt; classes) {
        try {
            int i, j;
            Instruction ins, prev;
            LDC ldc;
            for (ClassFile cf : classes) {
                for (Method m : cf.methods) {
                    if (m.code == null)
                        continue;
                    final int length = m.code.size();
                    for (i = 0; i &lt; length; i++) {
                        ins = m.code.get(i);
                        if (ins instanceof ISHL || ins instanceof ISHR || ins instanceof IUSHR || ins instanceof LSHR || ins instanceof LSHL || ins instanceof LUSHR) {
                            prev = m.code.get(i - 1);
                            if (prev instanceof LDC) {
                                ldc = (LDC) prev;
                                j = optimizeShift(((ConstantInteger) ldc.c).bytes, ins);
                                if(j == 1) {
                                    m.replaceInstruction(i - 1, new ICONST_1());
                                } else if(j == 2) {
                                    m.replaceInstruction(i - 1, new ICONST_2());
                                } else if(j == 3) {
                                    m.replaceInstruction(i - 1, new ICONST_3());
                                } else if(j == 4) {
                                    m.replaceInstruction(i - 1, new ICONST_4());
                                } else if(j == 5) {
                                    m.replaceInstruction(i - 1, new ICONST_5());
                                } else {
                                    m.replaceInstruction(i - 1, new BIPUSH((byte) j));
                                }
                            }
                        }
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private static int optimizeShift(final int shift, final Instruction ins) {
        if (ins instanceof ISHL || ins instanceof ISHR || ins instanceof IUSHR) {
            if (shift &lt; 0)
                return 32 + (shift % 32);
            else
                return shift % 32;
        } else if (ins instanceof LSHL || ins instanceof LSHR || ins instanceof LUSHR) {
            if (shift &lt; 0)
                return 64 + (shift % 64);
            else
                return shift % 64;
        }
        System.err.println("WTF, ERRAR, RUN!");
        return shift;
    }</code></pre>
<p>~newbiehacker</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319/1</link>
        <pubDate>Sun, 21 Oct 2007 17:41:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-153319-1</guid>
        <source url="https://forum.moparisthebest.com/t/reversing-jagex-obfuscation/153319.rss">Reversing jagex obfuscation</source>
      </item>
  </channel>
</rss>
