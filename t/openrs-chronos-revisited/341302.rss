<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Openrs - Chronos revisited</title>
    <link>https://forum.moparisthebest.com/t/openrs-chronos-revisited/341302</link>
    <description>[center]openrs
A scalable, opensource framework by Communist

CodePlex project: http://openrs.codeplex.com/
(Revision 2)

&lt;blockquote&gt;Revision 2 - Worker example as well as minor improvements to the auth packet.
Revision 1 - Core framework, packet decoding, basic login (lol).&lt;/blockquote&gt;

&lt;blockquote&gt;    * Me
    * Pwnz

If you would like to join the team, send me a PM or add my msn: projekt-revolution@live.co.uk&lt;/blockquote&gt;

The goal
My goal, when creating this project, was one thing only: scalability.

The past
I guarantee you this is better than my old project, Chronos, however no real benchmarking or any other type of test has been performed.

Thread execution
The engine is run on two threads, the core, as well as a timer for future implementation. Everything else is executed on a thread pool.

Packet decoding
Packet decoding is done dynamically, through an xml configuration file as well as a context for acquiring field values with ease.

Packet encoding
The encoder encodes packet and vector objects into a writable state.

Documentation
The source code is well-documented, which should make it a little more user-friendly.

Networking
This project uses the Netty API, for simplicity as well as performance. In my experience, I have not found any other NIO framework more easy-to-use than Netty without trading performance.

Feedback
Please, be sure to leave constructive criticism, as it is much appreciated.[/center]</description>
    
    <lastBuildDate>Wed, 26 May 2010 01:52:14 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/openrs-chronos-revisited/341302.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Openrs - Chronos revisited</title>
        <dc:creator><![CDATA[@PeeHPee PeeHPee]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/peehpee">@PeeHPee</a> wrote:</p>
          <blockquote>
              <p>[quote=“xJaws, post:4, topic:341302”][quote author=PeeHPee link=topic=437700.msg3217442#msg3217442 date=1274822695]<br>
Looks like you took the way of decoding packets from rsdaemon.</p>
<p>edit: you did, except you did it wrong.<br>
[/quote]<br>
the only thing i see ‘wrong’ with it is the fact that it doesn’t do arrays in arrays, which i did purposely…</p>
<p>and it still works the way i want it to, nonetheless.[/quote]</p>
<p>why would you write a bug on purpose?  let me guess, it’s not a bug its a feature…?</p>
<p>why did you rip my code and rewrite it making it a thousand times worse when you could have just used my code and gave me credits for it?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/openrs-chronos-revisited/341302/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/openrs-chronos-revisited/341302/5</link>
        <pubDate>Wed, 26 May 2010 01:52:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-341302-5</guid>
        <source url="https://forum.moparisthebest.com/t/openrs-chronos-revisited/341302.rss">Openrs - Chronos revisited</source>
      </item>
      <item>
        <title>Openrs - Chronos revisited</title>
        <dc:creator><![CDATA[@xJaws xJaws]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xjaws">@xJaws</a> wrote:</p>
          <blockquote>
              <p>[quote=“PeeHPee, post:2, topic:341302”]Looks like you took the way of decoding packets from rsdaemon.</p>
<p>edit: you did, except you did it wrong.[/quote]<br>
the only thing i see ‘wrong’ with it is the fact that it doesn’t do arrays in arrays, which i did purposely…</p>
<p>and it still works the way i want it to, nonetheless.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/openrs-chronos-revisited/341302/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/openrs-chronos-revisited/341302/4</link>
        <pubDate>Tue, 25 May 2010 22:53:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-341302-4</guid>
        <source url="https://forum.moparisthebest.com/t/openrs-chronos-revisited/341302.rss">Openrs - Chronos revisited</source>
      </item>
      <item>
        <title>Openrs - Chronos revisited</title>
        <dc:creator><![CDATA[@lawl lawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lawl">@lawl</a> wrote:</p>
          <blockquote>
              <p>several thoughts</p>
<pre><code>/**
 * Creates a new location.
 * 
 * @param x
 *            The x.
 * @param y
 *            The y.
 * @param z
 *            The z.
 * @return The location.
 */
</code></pre>
<p>using comments like that is counter productive. you dont have to comment trivial stuff</p>
<pre><code>public static Location create(int x, int y, int z) {
	return new Location(x, y, z);
}
</code></pre>
<p>whats the purpose of using the factory system here?</p>
<p>i dont see any sort of multi threading going on</p>
<p>overall i dont see this getting very far</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/openrs-chronos-revisited/341302/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/openrs-chronos-revisited/341302/3</link>
        <pubDate>Tue, 25 May 2010 22:05:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-341302-3</guid>
        <source url="https://forum.moparisthebest.com/t/openrs-chronos-revisited/341302.rss">Openrs - Chronos revisited</source>
      </item>
      <item>
        <title>Openrs - Chronos revisited</title>
        <dc:creator><![CDATA[@PeeHPee PeeHPee]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/peehpee">@PeeHPee</a> wrote:</p>
          <blockquote>
              <p>Looks like you took the way of decoding packets from rsdaemon.</p>
<p>edit: you did, except you did it wrong.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/openrs-chronos-revisited/341302/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/openrs-chronos-revisited/341302/2</link>
        <pubDate>Tue, 25 May 2010 21:24:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-341302-2</guid>
        <source url="https://forum.moparisthebest.com/t/openrs-chronos-revisited/341302.rss">Openrs - Chronos revisited</source>
      </item>
      <item>
        <title>Openrs - Chronos revisited</title>
        <dc:creator><![CDATA[@xJaws xJaws]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xjaws">@xJaws</a> wrote:</p>
          <blockquote>
              <p>[center]openrs<br>
A scalable, opensource framework by Communist</p>
<p>CodePlex project: <a href="http://openrs.codeplex.com/" rel="nofollow noopener">http://openrs.codeplex.com/</a><br>
(Revision 2)</p>
<blockquote>Revision 2 - Worker example as well as minor improvements to the auth packet.
Revision 1 - Core framework, packet decoding, basic login (lol).</blockquote>
<blockquote>    * Me
    * Pwnz
<p>If you would like to join the team, send me a PM or add my msn: <a href="mailto:projekt-revolution@live.co.uk">projekt-revolution@live.co.uk</a></p>
</blockquote>
<p>The goal<br>
My goal, when creating this project, was one thing only: scalability.</p>
<p>The past<br>
I guarantee you this is better than my old project, Chronos, however no real benchmarking or any other type of test has been performed.</p>
<p>Thread execution<br>
The engine is run on two threads, the core, as well as a timer for future implementation. Everything else is executed on a thread pool.</p>
<p>Packet decoding<br>
Packet decoding is done dynamically, through an xml configuration file as well as a context for acquiring field values with ease.</p>
<p>Packet encoding<br>
The encoder encodes packet and vector objects into a writable state.</p>
<p>Documentation<br>
The source code is well-documented, which should make it a little more user-friendly.</p>
<p>Networking<br>
This project uses the Netty API, for simplicity as well as performance. In my experience, I have not found any other NIO framework more easy-to-use than Netty without trading performance.</p>
<p>Feedback<br>
Please, be sure to leave constructive criticism, as it is much appreciated.[/center]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/openrs-chronos-revisited/341302/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/openrs-chronos-revisited/341302/1</link>
        <pubDate>Mon, 24 May 2010 20:05:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-341302-1</guid>
        <source url="https://forum.moparisthebest.com/t/openrs-chronos-revisited/341302.rss">Openrs - Chronos revisited</source>
      </item>
  </channel>
</rss>
