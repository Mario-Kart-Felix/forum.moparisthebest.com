<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>I need help</title>
    <link>https://forum.moparisthebest.com/t/i-need-help/91157</link>
    <description>Ok  look I  used this script... and like almost all the scripts I u sed dont woork and yes I downloaded includes

[code]{
Before running the script, (if you are picking Flax) pick 2 different
Flax colors from the light bluish part of the plant. Also, pick the
Minimap Ladder Color and Main Screen Ladder Color to the Spinner. Make
sure to start the script inside Seers&#39; Village Bank. Play the script to
fill out the Player Form and Color Form. Note, the colors you set will
only show up on your first player (player 0), you don&#39;t need to set them
again. This also applies to the debug options. If debug is set on all,
you will get the timing each part of the script takes. That is mostly
for me so you probably won&#39;t want to use it.

If only spinning, have a full inventory of Flax to start, otherwise your
inventory should be empty.

Used the Pascal Formatter for standards.
}

program FlaxPicker;
{.include SRL\SRL.scar}
{.include SRL\SRL\Misc\Loading.scar}

var
  i, f, TotalTrips, NewLoads, MMTree, p, BSColor: integer;
  Loads: string;

var
  bk1, bk2, bk3, bk4, px, py, BeeKeepers: integer;
  bkm: longint;

var
  cUser: Integer;
  frmDesign: TForm;
  Label1, Label2, Label4, Label5, aString1, aString2, aNeeded, lblUser, aFlax1,
    aFlax2, aMMLadder, aMSLadder, aPin, aDebug: TLabel;
  gbControl: TGroupBox;
  CloseOther, MoreSettings, StartButton, btnBack, btnNext, btnCreate, btnDelete:
  TButton;
  edFlax1, edFlax2, edMMLadder, edMSLadder, edUser, edPass, edNick, edString1,
    edString2, edPin: TEdit;
  cbActive, cbDebug: TComboBox;
  StartScript: Boolean;

//-----------------------------------------------//

procedure AddUser;
begin
  SetArrayLength(Players, GetArrayLength(Players) + 1);
  Players[GetArrayLength(Players) - 1].Name := &#39;New Name&#39;;
  Players[GetArrayLength(Players) - 1].Pass := &#39;New Pass&#39;;
  Players[GetArrayLength(Players) - 1].Nick := &#39;New Nick&#39;;
  Players[GetArrayLength(Players) - 1].Active := True;
  Players[GetArrayLength(Players) - 1].String1 := &#39;New # Loads&#39;;
  Players[GetArrayLength(Players) - 1].String2 := &#39;New Job&#39;;
end;

//-----------------------------------------------//

procedure Inititate(Sender: TObject);
begin
  lblUser.Caption := IntToStr(cUser);
  Players[cUser].Nick := edNick.Text;
  Players[cUser].Name := edUser.Text;
  Players[cUser].Pass := edPass.Text;
  Players[cUser].String1 := edString1.Text;
  Players[cUser].String2 := edString2.Text;
  if (cbActive.Text = &#39;True&#39;) then
    Players[cUser].Active := True
  else
    Players[cUser].Active := False;
  Players[cUser].String3 := edPin.Text;
  if (cbDebug.Text = &#39;All&#39;) then
    Players[cUser].Boolean1 := True
  else
    Players[cUser].Boolean1 := False;
  cUser := GetArrayLength(Players) - 1;
end;

//-----------------------------------------------//

procedure CreateUser(Sender: TObject);
begin
  Players[cUser].Nick := edNick.Text;
  Players[cUser].Name := edUser.Text;
  Players[cUser].Pass := edPass.Text;
  Players[cUser].String1 := edString1.Text;
  Players[cUser].String2 := edString2.Text;
  if (cbActive.Text = &#39;True&#39;) then
    Players[cUser].Active := True
  else
    Players[cUser].Active := False;
  Players[cUser].String3 := edPin.Text;
  if (cbDebug.Text = &#39;All&#39;) then
    Players[cUser].Boolean1 := True
  else
    Players[cUser].Boolean1 := False;
  AddUser;
  cUser := GetArrayLength(Players) - 1;
  lblUser.Caption := IntToStr(cUser);
  edString1.Text := Players[cUser].String1;
  edString2.Text := Players[cUser].String2;
  edNick.Text := Players[cUser].Nick;
  edUser.Text := Players[cUser].Name;
  edPass.Text := Players[cUser].Pass;
  if (Players[cUser].Active) then
    cbActive.Text := &#39;True&#39;
  else
    cbActive.Text := &#39;False&#39;;
  edFlax1.Text := IntToStr(Players[cUser].Integer1);
  edFlax2.Text := IntToStr(Players[cUser].Integer2);
  edMMLadder.Text := IntToStr(Players[cUser].Integer3);
  edMSLadder.Text := IntToStr(Players[cUser].Integer4);
  edPin.Text := Players[cUser].String3;
  if (Players[cUser].Boolean1) then
    cbDebug.Text := &#39;All&#39;
  else
    cbDebug.Text := &#39;Proggies&#39;;
end;

//-----------------------------------------------//

procedure ForwardUser(Sender: TObject);
begin
  Players[cUser].Nick := edNick.Text;
  Players[cUser].Name := edUser.Text;
  Players[cUser].Pass := edPass.Text;
  Players[cUser].String1 := edString1.Text;
  Players[cUser].String2 := edString2.Text;
  if (cbActive.Text = &#39;True&#39;) then
    Players[cUser].Active := True
  else
    Players[cUser].Active := False;
  Players[cUser].String3 := edPin.Text;
  if (cbDebug.Text = &#39;All&#39;) then
    Players[cUser].Boolean1 := True
  else
    Players[cUser].Boolean1 := False;
  if (cUser + 1 &gt; GetArrayLength(Players) - 1) then
    cUser := 0
  else
    cUser := cUser + 1;
  lblUser.Caption := IntToStr(cUser);
  edString1.Text := Players[cUser].String1;
  edString2.Text := Players[cUser].String2;
  edNick.Text := Players[cUser].Nick;
  edUser.Text := Players[cUser].Name;
  edPass.Text := Players[cUser].Pass;
  if (Players[cUser].Active) then
    cbActive.Text := &#39;True&#39;
  else
    cbActive.Text := &#39;False&#39;;
  edFlax1.Text := IntToStr(Players[cUser].Integer1);
  edFlax2.Text := IntToStr(Players[cUser].Integer2);
  edMMLadder.Text := IntToStr(Players[cUser].Integer3);
  edMSLadder.Text := IntToStr(Players[cUser].Integer4);
  edPin.Text := Players[cUser].String3;
  if (Players[cUser].Boolean1) then
    cbDebug.Text := &#39;All&#39;
  else
    cbDebug.Text := &#39;Proggies&#39;;
end;

[/code][br][size=1]Posted on: May 07, 2007, 08:47:47 PM[/size][hr]Never mind the scriptis to big  to fit  the post</description>
    
    <lastBuildDate>Tue, 08 May 2007 07:50:15 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/i-need-help/91157.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>I need help</title>
        <dc:creator><![CDATA[@masterp00n masterp00n]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/masterp00n">@masterp00n</a> wrote:</p>
          <blockquote>
              <p>Ok  look I  used this script… and like almost all the scripts I u sed dont woork and yes I downloaded includes</p>
<p>[code]{<br>
Before running the script, (if you are picking Flax) pick 2 different<br>
Flax colors from the light bluish part of the plant. Also, pick the<br>
Minimap Ladder Color and Main Screen Ladder Color to the Spinner. Make<br>
sure to start the script inside Seers’ Village Bank. Play the script to<br>
fill out the Player Form and Color Form. Note, the colors you set will<br>
only show up on your first player (player 0), you don’t need to set them<br>
again. This also applies to the debug options. If debug is set on all,<br>
you will get the timing each part of the script takes. That is mostly<br>
for me so you probably won’t want to use it.</p>
<p>If only spinning, have a full inventory of Flax to start, otherwise your<br>
inventory should be empty.</p>
<p>Used the Pascal Formatter for standards.<br>
}</p>
<p>program FlaxPicker;<br>
{.include SRL\SRL.scar}<br>
{.include SRL\SRL\Misc\Loading.scar}</p>
<p>var<br>
i, f, TotalTrips, NewLoads, MMTree, p, BSColor: integer;<br>
Loads: string;</p>
<p>var<br>
bk1, bk2, bk3, bk4, px, py, BeeKeepers: integer;<br>
bkm: longint;</p>
<p>var<br>
cUser: Integer;<br>
frmDesign: TForm;<br>
Label1, Label2, Label4, Label5, aString1, aString2, aNeeded, lblUser, aFlax1,<br>
aFlax2, aMMLadder, aMSLadder, aPin, aDebug: TLabel;<br>
gbControl: TGroupBox;<br>
CloseOther, MoreSettings, StartButton, btnBack, btnNext, btnCreate, btnDelete:<br>
TButton;<br>
edFlax1, edFlax2, edMMLadder, edMSLadder, edUser, edPass, edNick, edString1,<br>
edString2, edPin: TEdit;<br>
cbActive, cbDebug: TComboBox;<br>
StartScript: Boolean;</p>
<p>//-----------------------------------------------//</p>
<p>procedure AddUser;<br>
begin<br>
SetArrayLength(Players, GetArrayLength(Players) + 1);<br>
Players[GetArrayLength(Players) - 1].Name := ‘New Name’;<br>
Players[GetArrayLength(Players) - 1].Pass := ‘New Pass’;<br>
Players[GetArrayLength(Players) - 1].Nick := ‘New Nick’;<br>
Players[GetArrayLength(Players) - 1].Active := True;<br>
Players[GetArrayLength(Players) - 1].String1 := ‘New # Loads’;<br>
Players[GetArrayLength(Players) - 1].String2 := ‘New Job’;<br>
end;</p>
<p>//-----------------------------------------------//</p>
<p>procedure Inititate(Sender: TObject);<br>
begin<br>
lblUser.Caption := IntToStr(cUser);<br>
Players[cUser].Nick := edNick.Text;<br>
Players[cUser].Name := edUser.Text;<br>
Players[cUser].Pass := edPass.Text;<br>
Players[cUser].String1 := edString1.Text;<br>
Players[cUser].String2 := edString2.Text;<br>
if (cbActive.Text = ‘True’) then<br>
Players[cUser].Active := True<br>
else<br>
Players[cUser].Active := False;<br>
Players[cUser].String3 := edPin.Text;<br>
if (cbDebug.Text = ‘All’) then<br>
Players[cUser].Boolean1 := True<br>
else<br>
Players[cUser].Boolean1 := False;<br>
cUser := GetArrayLength(Players) - 1;<br>
end;</p>
<p>//-----------------------------------------------//</p>
<p>procedure CreateUser(Sender: TObject);<br>
begin<br>
Players[cUser].Nick := edNick.Text;<br>
Players[cUser].Name := edUser.Text;<br>
Players[cUser].Pass := edPass.Text;<br>
Players[cUser].String1 := edString1.Text;<br>
Players[cUser].String2 := edString2.Text;<br>
if (cbActive.Text = ‘True’) then<br>
Players[cUser].Active := True<br>
else<br>
Players[cUser].Active := False;<br>
Players[cUser].String3 := edPin.Text;<br>
if (cbDebug.Text = ‘All’) then<br>
Players[cUser].Boolean1 := True<br>
else<br>
Players[cUser].Boolean1 := False;<br>
AddUser;<br>
cUser := GetArrayLength(Players) - 1;<br>
lblUser.Caption := IntToStr(cUser);<br>
edString1.Text := Players[cUser].String1;<br>
edString2.Text := Players[cUser].String2;<br>
edNick.Text := Players[cUser].Nick;<br>
edUser.Text := Players[cUser].Name;<br>
edPass.Text := Players[cUser].Pass;<br>
if (Players[cUser].Active) then<br>
cbActive.Text := ‘True’<br>
else<br>
cbActive.Text := ‘False’;<br>
edFlax1.Text := IntToStr(Players[cUser].Integer1);<br>
edFlax2.Text := IntToStr(Players[cUser].Integer2);<br>
edMMLadder.Text := IntToStr(Players[cUser].Integer3);<br>
edMSLadder.Text := IntToStr(Players[cUser].Integer4);<br>
edPin.Text := Players[cUser].String3;<br>
if (Players[cUser].Boolean1) then<br>
cbDebug.Text := ‘All’<br>
else<br>
cbDebug.Text := ‘Proggies’;<br>
end;</p>
<p>//-----------------------------------------------//</p>
<p>procedure ForwardUser(Sender: TObject);<br>
begin<br>
Players[cUser].Nick := edNick.Text;<br>
Players[cUser].Name := edUser.Text;<br>
Players[cUser].Pass := edPass.Text;<br>
Players[cUser].String1 := edString1.Text;<br>
Players[cUser].String2 := edString2.Text;<br>
if (cbActive.Text = ‘True’) then<br>
Players[cUser].Active := True<br>
else<br>
Players[cUser].Active := False;<br>
Players[cUser].String3 := edPin.Text;<br>
if (cbDebug.Text = ‘All’) then<br>
Players[cUser].Boolean1 := True<br>
else<br>
Players[cUser].Boolean1 := False;<br>
if (cUser + 1 &gt; GetArrayLength(Players) - 1) then<br>
cUser := 0<br>
else<br>
cUser := cUser + 1;<br>
lblUser.Caption := IntToStr(cUser);<br>
edString1.Text := Players[cUser].String1;<br>
edString2.Text := Players[cUser].String2;<br>
edNick.Text := Players[cUser].Nick;<br>
edUser.Text := Players[cUser].Name;<br>
edPass.Text := Players[cUser].Pass;<br>
if (Players[cUser].Active) then<br>
cbActive.Text := ‘True’<br>
else<br>
cbActive.Text := ‘False’;<br>
edFlax1.Text := IntToStr(Players[cUser].Integer1);<br>
edFlax2.Text := IntToStr(Players[cUser].Integer2);<br>
edMMLadder.Text := IntToStr(Players[cUser].Integer3);<br>
edMSLadder.Text := IntToStr(Players[cUser].Integer4);<br>
edPin.Text := Players[cUser].String3;<br>
if (Players[cUser].Boolean1) then<br>
cbDebug.Text := ‘All’<br>
else<br>
cbDebug.Text := ‘Proggies’;<br>
end;</p>
<p>[/code][br][size=1]Posted on: May 07, 2007, 08:47:47 PM[/size][hr]Never mind the scriptis to big  to fit  the post</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/i-need-help/91157/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/i-need-help/91157/1</link>
        <pubDate>Tue, 08 May 2007 07:50:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-91157-1</guid>
        <source url="https://forum.moparisthebest.com/t/i-need-help/91157.rss">I need help</source>
      </item>
  </channel>
</rss>
