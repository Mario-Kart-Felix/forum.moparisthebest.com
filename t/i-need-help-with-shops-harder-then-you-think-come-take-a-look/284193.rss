<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>I need help with shops (harder then you think, come take a look!)</title>
    <link>https://forum.moparisthebest.com/t/i-need-help-with-shops-harder-then-you-think-come-take-a-look/284193</link>
    <description>Yo, i don&#39;t have anything to do with shops in my client.java, so i added this

i added under case 155

100 errors...

[code]               ^
client.java:6487: class, interface, or enum expected
                String passM = new MD5(password).compute();
                ^
client.java:6488: class, interface, or enum expected
                return new MD5(saltM + passM).compute();
                ^
client.java:6489: class, interface, or enum expected
        }
        ^
client.java:6490: class, interface, or enum expected
        public boolean pickUpItem(int item, int amount) {
               ^
client.java:6494: class, interface, or enum expected
                }
                ^
client.java:6498: class, interface, or enum expected
                        for (int i = 0; i &lt; playerItems.length; i++) {
                                        ^
client.java:6498: class, interface, or enum expected
                        for (int i = 0; i &lt; playerItems.length; i++) {
                                                                ^
client.java:6502: class, interface, or enum expected
                                        if (((playerItemsN[i] + amount) &lt; maxIte
mAmount)
                                        ^
client.java:6505: class, interface, or enum expected
                                        } else {
                                        ^
client.java:6507: class, interface, or enum expected
                                        }
                                        ^
client.java:6509: class, interface, or enum expected
                                        outStream.writeWord(3214);
                                        ^
client.java:6510: class, interface, or enum expected
                                        outStream.writeByte(i);
                                        ^
client.java:6511: class, interface, or enum expected
                                        outStream.writeWord(playerItems[i]);
                                        ^
client.java:6512: class, interface, or enum expected
                                        if (playerItemsN[i] &gt; 254) {
                                        ^
client.java:6514: class, interface, or enum expected
                                                outStream.writeDWord(playerItems
N[i]);
                                                ^
client.java:6515: class, interface, or enum expected
                                        } else {
                                        ^
client.java:6517: class, interface, or enum expected
                                        }
                                        ^
client.java:6519: class, interface, or enum expected
                                        i = 30;
                                        ^
client.java:6520: class, interface, or enum expected
                                        return true;
                                        ^
client.java:6521: class, interface, or enum expected
                                }
                                ^
client.java:6523: class, interface, or enum expected
                        for (int i = 0; i &lt; playerItems.length; i++) {
                                        ^
client.java:6523: class, interface, or enum expected
                        for (int i = 0; i &lt; playerItems.length; i++) {
                                                                ^
client.java:6526: class, interface, or enum expected
                                        if (amount &lt; maxItemAmount) {
                                        ^
client.java:6528: class, interface, or enum expected
                                        } else {
                                        ^
client.java:6530: class, interface, or enum expected
                                        }
                                        ^
client.java:6532: class, interface, or enum expected
                                        outStream.writeWord(3214);
                                        ^
client.java:6533: class, interface, or enum expected
                                        outStream.writeByte(i);
                                        ^
client.java:6534: class, interface, or enum expected
                                        outStream.writeWord(playerItems[i]);
                                        ^
client.java:6535: class, interface, or enum expected
                                        if (playerItemsN[i] &gt; 254) {
                                        ^
client.java:6537: class, interface, or enum expected
                                                outStream.writeDWord_v2(playerIt
emsN[i]);
                                                ^
client.java:6538: class, interface, or enum expected
                                        } else {
                                        ^
client.java:6540: class, interface, or enum expected
                                        }
                                        ^
client.java:6542: class, interface, or enum expected
                                        i = 30;
                                        ^
client.java:6543: class, interface, or enum expected
                                        return true;
                                        ^
client.java:6544: class, interface, or enum expected
                                }
                                ^
client.java:6547: class, interface, or enum expected
                } else {
                ^
client.java:6549: class, interface, or enum expected
                }
                ^
client.java:6551: class, interface, or enum expected
        public boolean playerHasItem(int itemID, int amt) {
               ^
client.java:6553: class, interface, or enum expected
                int found = 0;
                ^
client.java:6554: class, interface, or enum expected
                for (int i = 0; i &lt; playerItems.length; i++) {
                ^
client.java:6554: class, interface, or enum expected
                for (int i = 0; i &lt; playerItems.length; i++) {
                                ^
client.java:6554: class, interface, or enum expected
                for (int i = 0; i &lt; playerItems.length; i++) {
                                                        ^
client.java:6558: class, interface, or enum expected
                                else
                                ^
client.java:6560: class, interface, or enum expected
                        }
                        ^
client.java:6564: class, interface, or enum expected
                return false;
                ^
client.java:6566: class, interface, or enum expected
        }
        ^
client.java:6567: class, interface, or enum expected
        public boolean playerHasItem(int itemID) {
               ^
client.java:6569: class, interface, or enum expected
                itemID++;
                ^
client.java:6570: class, interface, or enum expected
                int found = 0;
                ^
client.java:6571: class, interface, or enum expected
                for (int i = 0; i &lt; playerItems.length; i++) {
                ^
client.java:6571: class, interface, or enum expected
                for (int i = 0; i &lt; playerItems.length; i++) {
                                ^
client.java:6571: class, interface, or enum expected
                for (int i = 0; i &lt; playerItems.length; i++) {
                                                        ^
client.java:6575: class, interface, or enum expected
                                else
                                ^
client.java:6577: class, interface, or enum expected
                        }
                        ^
client.java:6581: class, interface, or enum expected
                return false;
                ^
client.java:6583: class, interface, or enum expected
        }
        ^
client.java:6584: class, interface, or enum expected
        public boolean FullDharokEquipped() {
               ^
client.java:6588: class, interface, or enum expected
                        }
                        ^
client.java:6590: class, interface, or enum expected
        }
        ^
client.java:6591: class, interface, or enum expected
        public boolean rehit3 = false, rehit4 = false;
               ^
client.java:6592: class, interface, or enum expected
        public boolean playerMeleeRehit() {
               ^
client.java:6595: class, interface, or enum expected
                        client AttackingOn2 = (client) server.playerHandler.play
ers[followThisPlayer];
                        ^
client.java:6596: class, interface, or enum expected
                        AttackingOn2.lastDamageTaken = System.currentTimeMillis(
);
                        ^
client.java:6597: class, interface, or enum expected
                        if (AttackingOn2.inTeleport) {
                        ^
client.java:6599: class, interface, or enum expected
                        }
                        ^
client.java:6601: class, interface, or enum expected
                        thisY = AttackingOn2.absY;
                        ^
client.java:6602: class, interface, or enum expected
                        int MAXHIT = 0;
                        ^
client.java:6603: class, interface, or enum expected
                        int EnemyX = PlayerHandler.players[followThisPlayer].abs
X;
                        ^
client.java:6604: class, interface, or enum expected
                        int EnemyY = PlayerHandler.players[followThisPlayer].abs
Y;
                        ^
client.java:6605: class, interface, or enum expected
                        int EnemyHP = PlayerHandler.players[followThisPlayer].cu
rrentHealth;
                        ^
client.java:6606: class, interface, or enum expected
                        int aBonus = 0;
                        ^
client.java:6607: class, interface, or enum expected
                        int dBonus = 0;
                        ^
client.java:6608: class, interface, or enum expected
                        int rand_att = misc.random(playerLevel[0]) + getPrayerAt
t();
                        ^
client.java:6609: class, interface, or enum expected
                        int rand_def = (int) (misc.random(AttackingOn2.playerLev
el[1]) + AttackingOn2.getPrayerDef());
                        ^
client.java:6610: class, interface, or enum expected
                        if (FightType == 2)
                        ^
client.java:6612: class, interface, or enum expected
                        if (rand_att &gt; rand_def) {
                        ^
client.java:6614: class, interface, or enum expected
                                if (PlayerHandler.players[followThisPlayer].prot
Melee) {
                                ^
client.java:6616: class, interface, or enum expected
                                }
                                ^
client.java:6619: class, interface, or enum expected
                        }
                        ^
client.java:6622: class, interface, or enum expected
                        }
                        ^
client.java:6625: class, interface, or enum expected
                        }
                        ^
client.java:6628: class, interface, or enum expected
                        }
                        ^
client.java:6633: class, interface, or enum expected
                                        } else if (MAXHIT &gt;= 1 &amp;&amp; MAXHIT &lt;= 7) {

                                        ^
client.java:6635: class, interface, or enum expected
                                        } else if (MAXHIT &gt;= 8 &amp;&amp; MAXHIT &lt;= 14)
{
                                        ^
client.java:6637: class, interface, or enum expected
                                        } else if (MAXHIT &gt;= 15 &amp;&amp; MAXHIT &lt;= 21)
 {
                                        ^
client.java:6639: class, interface, or enum expected
                                        } else if (MAXHIT &gt;= 22 &amp;&amp; MAXHIT &lt;= 28)
 {
                                        ^
client.java:6641: class, interface, or enum expected
                                        } else if (MAXHIT &gt;= 29 &amp;&amp; MAXHIT &lt;= 35)
 {
                                        ^
client.java:6643: class, interface, or enum expected
                                        } else if (MAXHIT &gt; 35) {
                                        ^
client.java:6645: class, interface, or enum expected
                                        }
                                        ^
client.java:6648: class, interface, or enum expected
                                                dealDamage(recoilDamage);
                                                ^
client.java:6649: class, interface, or enum expected
                                                killers[localId] += recoilDamage
;
                                                ^
client.java:6650: class, interface, or enum expected
                                                hits++;
                                                ^
client.java:6651: class, interface, or enum expected
                                                fighting = true;
                                                ^
100 errors
Finished!
Press any key to continue . . .[/code]

code

[code]		case 155: // first Click npc
			break;
		} else if (NPCID == 553) { //Aubury rune shop
					PutNPCCoords = true;
					WanneShop = 2; //Aubury Magic Shop
}
	private int WanneBank = 0;
	private int WanneShop = 0;
		//check shopping

	public int clickingWarning;
}
	if (WanneShop &gt; 0) {
			if (GoodDistance(skillX, skillY, absX, absY, 1) == true) {
				openUpShop(WanneShop);
				WanneShop = 0;
			}
}

		case 188:[/code]
Help :(</description>
    
    <lastBuildDate>Thu, 18 Jun 2009 18:40:13 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/i-need-help-with-shops-harder-then-you-think-come-take-a-look/284193.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>I need help with shops (harder then you think, come take a look!)</title>
        <dc:creator><![CDATA[@o.O_O.o o.O O.o]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/o.o_o.o">@o.O_O.o</a> wrote:</p>
          <blockquote>
              <p>Did you put it <span class="bbcode-b">between</span></p>
<p>[code]case 155:</p>
<p>break;[/code]</p>
<p>yet?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/i-need-help-with-shops-harder-then-you-think-come-take-a-look/284193/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/i-need-help-with-shops-harder-then-you-think-come-take-a-look/284193/5</link>
        <pubDate>Thu, 18 Jun 2009 18:40:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-284193-5</guid>
        <source url="https://forum.moparisthebest.com/t/i-need-help-with-shops-harder-then-you-think-come-take-a-look/284193.rss">I need help with shops (harder then you think, come take a look!)</source>
      </item>
      <item>
        <title>I need help with shops (harder then you think, come take a look!)</title>
        <dc:creator><![CDATA[@johno2 johno2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/johno2">@johno2</a> wrote:</p>
          <blockquote>
              <p><code>                            ^
client.java:5823: illegal start of type
                        if (GoodDistance(skillX, skillY, absX, absY, 1) == true)
 {
                           ^
client.java:5823: &lt;identifier&gt; expected
                        if (GoodDistance(skillX, skillY, absX, absY, 1) == true)
 {
                                               ^
client.java:5823: &lt;identifier&gt; expected
                        if (GoodDistance(skillX, skillY, absX, absY, 1) == true)
 {
                                                       ^
client.java:5823: &lt;identifier&gt; expected
                        if (GoodDistance(skillX, skillY, absX, absY, 1) == true)
 {
                                                             ^
client.java:5823: &lt;identifier&gt; expected
                        if (GoodDistance(skillX, skillY, absX, absY, 1) == true)
 {
                                                                   ^
client.java:5823: illegal start of type
                        if (GoodDistance(skillX, skillY, absX, absY, 1) == true)
 {
                                                                     ^
client.java:5823: ';' expected
                        if (GoodDistance(skillX, skillY, absX, absY, 1) == true)
 {
                                                                       ^
client.java:5829: class, interface, or enum expected
                case 188:
                ^
client.java:5831: class, interface, or enum expected
                case 192: // Use an item on an object
                ^
client.java:5833: class, interface, or enum expected
                case 199: // fags using xero's client
                ^
client.java:5835: class, interface, or enum expected
                case 202: // idle logout packet - ignore for now
                ^
client.java:5837: class, interface, or enum expected
                case 208: // Enter Amounth Part 2
                ^
client.java:5839: class, interface, or enum expected
                        int XinterfaceID = inStream.readUnsignedWordA();
                        ^
client.java:5840: class, interface, or enum expected
                        int XremoveID = inStream.readSignedWordBigEndian();
                        ^
client.java:5841: class, interface, or enum expected
                        int EnteredAmount = inStream.readDWord();
                        ^
client.java:5842: class, interface, or enum expected
                        if (EnteredAmount &lt; 1)
                        ^
client.java:5844: class, interface, or enum expected
                        if (XinterfaceID == 5064) {
                        ^
client.java:5846: class, interface, or enum expected
                        } else if (XinterfaceID == 5382) {
                        ^
client.java:5848: class, interface, or enum expected
                        }
                        ^
client.java:5850: class, interface, or enum expected
                case 210:
                ^
client.java:5852: class, interface, or enum expected
                case 214: // change item places
                ^
client.java:5854: class, interface, or enum expected
                        int itemFrom = inStream.readUnsignedWordA(); // slot1
                        ^
client.java:5855: class, interface, or enum expected
                        int itemTo = (inStream.readUnsignedWordA() - 128); // sl
ot2
                        ^
client.java:5856: class, interface, or enum expected
                        moveItems(itemFrom, itemTo, somejunk);
                        ^
client.java:5857: class, interface, or enum expected
                        break;
                        ^
client.java:5858: class, interface, or enum expected
                case 215:
                ^
client.java:5860: class, interface, or enum expected
                case 218:
                ^
client.java:5862: class, interface, or enum expected
                case 236: // pickup item
                ^
client.java:5864: class, interface, or enum expected
                        int itemID = inStream.readUnsignedWord();
                        ^
client.java:5865: class, interface, or enum expected
                        int itemX = inStream.readSignedWordBigEndian();
                        ^
client.java:5866: class, interface, or enum expected
                        if (!hasSpace()) {
                        ^
client.java:5868: class, interface, or enum expected
                                break;
                                ^
client.java:5869: class, interface, or enum expected
                        }
                        ^
client.java:5872: class, interface, or enum expected
                        }
                        ^
client.java:5874: class, interface, or enum expected
                        int itemAmount = ItemHandler.itemAmount(itemID, itemX, i
temY);
                        ^
client.java:5875: class, interface, or enum expected
                        if (ItemHandler.itemExists(itemID, itemX, itemY)) {
                        ^
client.java:5878: class, interface, or enum expected
                                        ItemHandler.removeItem(itemID, itemX, it
emY, itemAmount);
                                        ^
client.java:5879: class, interface, or enum expected
                                        resetItems(3214);
                                        ^
client.java:5880: class, interface, or enum expected
                                } else if (GoodDistance(itemX, itemY, absX, absY
, 1) == true)  {
                                ^
client.java:5882: class, interface, or enum expected
                                        ItemHandler.removeItem(itemID, itemX, it
emY, itemAmount);
                                        ^
client.java:5883: class, interface, or enum expected
                                        resetItems(3214);
                                        ^
client.java:5884: class, interface, or enum expected
                                        TurnPlayerTo(itemX, itemY);
                                        ^
client.java:5885: class, interface, or enum expected
                                        startAnimation(827);
                                        ^
client.java:5886: class, interface, or enum expected
                                }
                                ^
client.java:5890: class, interface, or enum expected
                case 237: // Magic on Items
                ^
client.java:5892: class, interface, or enum expected
                case 241:
                ^
client.java:5895: class, interface, or enum expected
                        lastMouse = System.currentTimeMillis();
                        ^
client.java:5896: class, interface, or enum expected
                        boolean validClick = false;
                        ^
client.java:5897: class, interface, or enum expected
                        long diff = System.currentTimeMillis() - lastMouse;
                        ^
client.java:5898: class, interface, or enum expected
                        if (diff &lt; 100) {
                        ^
client.java:5900: class, interface, or enum expected
                        }
                        ^
client.java:5904: class, interface, or enum expected
                case 249: // Magic on Players
                ^
client.java:5906: class, interface, or enum expected
                        followThisPlayer = playerIndex;
                        ^
client.java:5907: class, interface, or enum expected
                        playerMagicID = inStream.readSignedWordBigEndian();
                        ^
client.java:5909: class, interface, or enum expected
                        client playerIndex2 = (client) server.playerHandler.play
ers[playerIndex];
                        ^
client.java:5910: class, interface, or enum expected
                        if (playerIndex2.deathStage &gt; 0) {
                        ^
client.java:5912: class, interface, or enum expected
                        }
                        ^
client.java:5915: class, interface, or enum expected
                        }
                        ^
client.java:5918: class, interface, or enum expected
                                        AttackingOn = playerIndex2.playerId;
                                        ^
client.java:5919: class, interface, or enum expected
                        }
                        ^
client.java:5923: class, interface, or enum expected
                                ResetAttack();
                                ^
client.java:5924: class, interface, or enum expected
                                break;
                                ^
client.java:5925: class, interface, or enum expected
                        }
                        ^
client.java:5928: class, interface, or enum expected
                                autoCast = false;
                                ^
client.java:5929: class, interface, or enum expected
                        }
                        ^
client.java:5931: class, interface, or enum expected
                        break;
                        ^
client.java:5932: class, interface, or enum expected
                case 132: // first click objects //made by killamess
                ^
client.java:5934: class, interface, or enum expected
                        int objectIDz = inStream.readUnsignedWord();
                        ^
client.java:5935: class, interface, or enum expected
                        int objectYz = inStream.readUnsignedWordA();
                        ^
client.java:5936: class, interface, or enum expected
                        TurnPlayerTo(objectXz, objectYz);
                        ^
client.java:5937: class, interface, or enum expected
                        walkToObjectID = objectIDz;
                        ^
client.java:5938: class, interface, or enum expected
                        walkToObjectX = objectXz;
                        ^
client.java:5939: class, interface, or enum expected
                        walkToObjectY = objectYz;
                        ^
client.java:5940: class, interface, or enum expected
                        cancelWalkTo = false;
                        ^
client.java:5941: class, interface, or enum expected
                        if (runningWalkToEvent) {
                        ^
client.java:5943: class, interface, or enum expected
                        }
                        ^
client.java:5948: class, interface, or enum expected
                                        addSkillXPmelee(1 * SERVER_EXPERIENCE, p
layerHitpoints);
                                        ^
client.java:5949: class, interface, or enum expected
                                        refreshSkill(2);
                                        ^
client.java:5950: class, interface, or enum expected
                                        refreshSkill(3);
                                        ^
client.java:5951: class, interface, or enum expected
                                        sendMessage("You gain some strength expe
rience");
                                        ^
client.java:5952: class, interface, or enum expected
                                        click = System.currentTimeMillis();
                                        ^
client.java:5953: class, interface, or enum expected
                                        break;
                                        ^
client.java:5954: class, interface, or enum expected
                                } else {
                                ^
client.java:5956: class, interface, or enum expected
                                }
                                ^
client.java:5961: class, interface, or enum expected
                                        addSkillXP(2 * SERVER_EXPERIENCE, 6);
                                        ^
client.java:5962: class, interface, or enum expected
                                        addSkillXPmelee(1 * SERVER_EXPERIENCE, 3
);
                                        ^
client.java:5963: class, interface, or enum expected
                                        refreshSkill(1);
                                        ^
client.java:5964: class, interface, or enum expected
                                        refreshSkill(6);
                                        ^
client.java:5965: class, interface, or enum expected
                                        refreshSkill(3);
                                        ^
client.java:5966: class, interface, or enum expected
                                        sendMessage("You gain some defence and m
agic experience");
                                        ^
client.java:5967: class, interface, or enum expected
                                        click = System.currentTimeMillis();
                                        ^
client.java:5968: class, interface, or enum expected
                                        break;
                                        ^
client.java:5969: class, interface, or enum expected
                                } else {
                                ^
100 errors
Finished!
Press any key to continue . . .</code></p>
<p>DANGIT!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/i-need-help-with-shops-harder-then-you-think-come-take-a-look/284193/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/i-need-help-with-shops-harder-then-you-think-come-take-a-look/284193/4</link>
        <pubDate>Thu, 18 Jun 2009 18:21:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-284193-4</guid>
        <source url="https://forum.moparisthebest.com/t/i-need-help-with-shops-harder-then-you-think-come-take-a-look/284193.rss">I need help with shops (harder then you think, come take a look!)</source>
      </item>
      <item>
        <title>I need help with shops (harder then you think, come take a look!)</title>
        <dc:creator><![CDATA[@o.O_O.o o.O O.o]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/o.o_o.o">@o.O_O.o</a> wrote:</p>
          <blockquote>
              <p>Possibly putting it <span class="bbcode-b">under</span> case 155 isn’t the correct answer?  Maybe <span class="bbcode-b">inside</span> the packet, hmm?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/i-need-help-with-shops-harder-then-you-think-come-take-a-look/284193/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/i-need-help-with-shops-harder-then-you-think-come-take-a-look/284193/3</link>
        <pubDate>Thu, 18 Jun 2009 17:31:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-284193-3</guid>
        <source url="https://forum.moparisthebest.com/t/i-need-help-with-shops-harder-then-you-think-come-take-a-look/284193.rss">I need help with shops (harder then you think, come take a look!)</source>
      </item>
      <item>
        <title>I need help with shops (harder then you think, come take a look!)</title>
        <dc:creator><![CDATA[@_Ryan3 _Ryan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_ryan3">@_Ryan3</a> wrote:</p>
          <blockquote>
              <p>You could remove the click Warning</p>
<p>You can also just put your WanneBank and WanneShop ints along with others</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/i-need-help-with-shops-harder-then-you-think-come-take-a-look/284193/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/i-need-help-with-shops-harder-then-you-think-come-take-a-look/284193/2</link>
        <pubDate>Thu, 18 Jun 2009 17:19:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-284193-2</guid>
        <source url="https://forum.moparisthebest.com/t/i-need-help-with-shops-harder-then-you-think-come-take-a-look/284193.rss">I need help with shops (harder then you think, come take a look!)</source>
      </item>
      <item>
        <title>I need help with shops (harder then you think, come take a look!)</title>
        <dc:creator><![CDATA[@johno2 johno2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/johno2">@johno2</a> wrote:</p>
          <blockquote>
              <p>Yo, i don’t have anything to do with shops in my client.java, so i added this</p>
<p>i added under case 155</p>
<p>100 errors…</p>
<p>[code]               ^<br>
client.java:6487: class, interface, or enum expected<br>
String passM = new MD5(password).compute();<br>
^<br>
client.java:6488: class, interface, or enum expected<br>
return new MD5(saltM + passM).compute();<br>
^<br>
client.java:6489: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6490: class, interface, or enum expected<br>
public boolean pickUpItem(int item, int amount) {<br>
^<br>
client.java:6494: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6498: class, interface, or enum expected<br>
for (int i = 0; i &lt; playerItems.length; i++) {<br>
^<br>
client.java:6498: class, interface, or enum expected<br>
for (int i = 0; i &lt; playerItems.length; i++) {<br>
^<br>
client.java:6502: class, interface, or enum expected<br>
if (((playerItemsN[i] + amount) &lt; maxIte<br>
mAmount)<br>
^<br>
client.java:6505: class, interface, or enum expected<br>
} else {<br>
^<br>
client.java:6507: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6509: class, interface, or enum expected<br>
outStream.writeWord(3214);<br>
^<br>
client.java:6510: class, interface, or enum expected<br>
outStream.writeByte(i);<br>
^<br>
client.java:6511: class, interface, or enum expected<br>
outStream.writeWord(playerItems[i]);<br>
^<br>
client.java:6512: class, interface, or enum expected<br>
if (playerItemsN[i] &gt; 254) {<br>
^<br>
client.java:6514: class, interface, or enum expected<br>
outStream.writeDWord(playerItems<br>
N[i]);<br>
^<br>
client.java:6515: class, interface, or enum expected<br>
} else {<br>
^<br>
client.java:6517: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6519: class, interface, or enum expected<br>
i = 30;<br>
^<br>
client.java:6520: class, interface, or enum expected<br>
return true;<br>
^<br>
client.java:6521: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6523: class, interface, or enum expected<br>
for (int i = 0; i &lt; playerItems.length; i++) {<br>
^<br>
client.java:6523: class, interface, or enum expected<br>
for (int i = 0; i &lt; playerItems.length; i++) {<br>
^<br>
client.java:6526: class, interface, or enum expected<br>
if (amount &lt; maxItemAmount) {<br>
^<br>
client.java:6528: class, interface, or enum expected<br>
} else {<br>
^<br>
client.java:6530: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6532: class, interface, or enum expected<br>
outStream.writeWord(3214);<br>
^<br>
client.java:6533: class, interface, or enum expected<br>
outStream.writeByte(i);<br>
^<br>
client.java:6534: class, interface, or enum expected<br>
outStream.writeWord(playerItems[i]);<br>
^<br>
client.java:6535: class, interface, or enum expected<br>
if (playerItemsN[i] &gt; 254) {<br>
^<br>
client.java:6537: class, interface, or enum expected<br>
outStream.writeDWord_v2(playerIt<br>
emsN[i]);<br>
^<br>
client.java:6538: class, interface, or enum expected<br>
} else {<br>
^<br>
client.java:6540: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6542: class, interface, or enum expected<br>
i = 30;<br>
^<br>
client.java:6543: class, interface, or enum expected<br>
return true;<br>
^<br>
client.java:6544: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6547: class, interface, or enum expected<br>
} else {<br>
^<br>
client.java:6549: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6551: class, interface, or enum expected<br>
public boolean playerHasItem(int itemID, int amt) {<br>
^<br>
client.java:6553: class, interface, or enum expected<br>
int found = 0;<br>
^<br>
client.java:6554: class, interface, or enum expected<br>
for (int i = 0; i &lt; playerItems.length; i++) {<br>
^<br>
client.java:6554: class, interface, or enum expected<br>
for (int i = 0; i &lt; playerItems.length; i++) {<br>
^<br>
client.java:6554: class, interface, or enum expected<br>
for (int i = 0; i &lt; playerItems.length; i++) {<br>
^<br>
client.java:6558: class, interface, or enum expected<br>
else<br>
^<br>
client.java:6560: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6564: class, interface, or enum expected<br>
return false;<br>
^<br>
client.java:6566: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6567: class, interface, or enum expected<br>
public boolean playerHasItem(int itemID) {<br>
^<br>
client.java:6569: class, interface, or enum expected<br>
itemID++;<br>
^<br>
client.java:6570: class, interface, or enum expected<br>
int found = 0;<br>
^<br>
client.java:6571: class, interface, or enum expected<br>
for (int i = 0; i &lt; playerItems.length; i++) {<br>
^<br>
client.java:6571: class, interface, or enum expected<br>
for (int i = 0; i &lt; playerItems.length; i++) {<br>
^<br>
client.java:6571: class, interface, or enum expected<br>
for (int i = 0; i &lt; playerItems.length; i++) {<br>
^<br>
client.java:6575: class, interface, or enum expected<br>
else<br>
^<br>
client.java:6577: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6581: class, interface, or enum expected<br>
return false;<br>
^<br>
client.java:6583: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6584: class, interface, or enum expected<br>
public boolean FullDharokEquipped() {<br>
^<br>
client.java:6588: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6590: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6591: class, interface, or enum expected<br>
public boolean rehit3 = false, rehit4 = false;<br>
^<br>
client.java:6592: class, interface, or enum expected<br>
public boolean playerMeleeRehit() {<br>
^<br>
client.java:6595: class, interface, or enum expected<br>
client AttackingOn2 = (client) server.playerHandler.play<br>
ers[followThisPlayer];<br>
^<br>
client.java:6596: class, interface, or enum expected<br>
AttackingOn2.lastDamageTaken = System.currentTimeMillis(<br>
);<br>
^<br>
client.java:6597: class, interface, or enum expected<br>
if (AttackingOn2.inTeleport) {<br>
^<br>
client.java:6599: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6601: class, interface, or enum expected<br>
thisY = AttackingOn2.absY;<br>
^<br>
client.java:6602: class, interface, or enum expected<br>
int MAXHIT = 0;<br>
^<br>
client.java:6603: class, interface, or enum expected<br>
int EnemyX = PlayerHandler.players[followThisPlayer].abs<br>
X;<br>
^<br>
client.java:6604: class, interface, or enum expected<br>
int EnemyY = PlayerHandler.players[followThisPlayer].abs<br>
Y;<br>
^<br>
client.java:6605: class, interface, or enum expected<br>
int EnemyHP = PlayerHandler.players[followThisPlayer].cu<br>
rrentHealth;<br>
^<br>
client.java:6606: class, interface, or enum expected<br>
int aBonus = 0;<br>
^<br>
client.java:6607: class, interface, or enum expected<br>
int dBonus = 0;<br>
^<br>
client.java:6608: class, interface, or enum expected<br>
int rand_att = misc.random(playerLevel[0]) + getPrayerAt<br>
t();<br>
^<br>
client.java:6609: class, interface, or enum expected<br>
int rand_def = (int) (misc.random(AttackingOn2.playerLev<br>
el[1]) + AttackingOn2.getPrayerDef());<br>
^<br>
client.java:6610: class, interface, or enum expected<br>
if (FightType == 2)<br>
^<br>
client.java:6612: class, interface, or enum expected<br>
if (rand_att &gt; rand_def) {<br>
^<br>
client.java:6614: class, interface, or enum expected<br>
if (PlayerHandler.players[followThisPlayer].prot<br>
Melee) {<br>
^<br>
client.java:6616: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6619: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6622: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6625: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6628: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6633: class, interface, or enum expected<br>
} else if (MAXHIT &gt;= 1 &amp;&amp; MAXHIT &lt;= 7) {</p>
<pre><code>                                    ^
</code></pre>
<p>client.java:6635: class, interface, or enum expected<br>
} else if (MAXHIT &gt;= 8 &amp;&amp; MAXHIT &lt;= 14)<br>
{<br>
^<br>
client.java:6637: class, interface, or enum expected<br>
} else if (MAXHIT &gt;= 15 &amp;&amp; MAXHIT &lt;= 21)<br>
{<br>
^<br>
client.java:6639: class, interface, or enum expected<br>
} else if (MAXHIT &gt;= 22 &amp;&amp; MAXHIT &lt;= 28)<br>
{<br>
^<br>
client.java:6641: class, interface, or enum expected<br>
} else if (MAXHIT &gt;= 29 &amp;&amp; MAXHIT &lt;= 35)<br>
{<br>
^<br>
client.java:6643: class, interface, or enum expected<br>
} else if (MAXHIT &gt; 35) {<br>
^<br>
client.java:6645: class, interface, or enum expected<br>
}<br>
^<br>
client.java:6648: class, interface, or enum expected<br>
dealDamage(recoilDamage);<br>
^<br>
client.java:6649: class, interface, or enum expected<br>
killers[localId] += recoilDamage<br>
;<br>
^<br>
client.java:6650: class, interface, or enum expected<br>
hits++;<br>
^<br>
client.java:6651: class, interface, or enum expected<br>
fighting = true;<br>
^<br>
100 errors<br>
Finished!<br>
Press any key to continue . . .[/code]</p>
<p>code</p>
<p>[code]		case 155: // first Click npc<br>
break;<br>
} else if (NPCID == 553) { //Aubury rune shop<br>
PutNPCCoords = true;<br>
WanneShop = 2; //Aubury Magic Shop<br>
}<br>
private int WanneBank = 0;<br>
private int WanneShop = 0;<br>
//check shopping</p>
<pre><code>public int clickingWarning;
</code></pre>
<p>}<br>
if (WanneShop &gt; 0) {<br>
if (GoodDistance(skillX, skillY, absX, absY, 1) == true) {<br>
openUpShop(WanneShop);<br>
WanneShop = 0;<br>
}<br>
}</p>
<pre><code>	case 188:[/code]
</code></pre>
<p>Help <img src="https://forum.moparisthebest.com/images/emoji/twitter/frowning.png?v=5" title=":frowning:" class="emoji" alt=":frowning:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/i-need-help-with-shops-harder-then-you-think-come-take-a-look/284193/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/i-need-help-with-shops-harder-then-you-think-come-take-a-look/284193/1</link>
        <pubDate>Thu, 18 Jun 2009 17:05:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-284193-1</guid>
        <source url="https://forum.moparisthebest.com/t/i-need-help-with-shops-harder-then-you-think-come-take-a-look/284193.rss">I need help with shops (harder then you think, come take a look!)</source>
      </item>
  </channel>
</rss>
