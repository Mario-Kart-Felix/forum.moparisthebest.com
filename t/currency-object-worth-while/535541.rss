<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Currency Object(Worth while?)</title>
    <link>https://forum.moparisthebest.com/t/currency-object-worth-while/535541</link>
    <description>Edit: I will take that as a no considering no posts thus far lol. 


I keep seeing a lot of people complaining about making shops accept Pk points and such. I was wondering if it would be worth while Creating a currency object, that holds way to remove all such things related.  Then every reference to purchasing will be sent a currency, instead of an int. and this would even work with CoinPurses.



[code]public abstract Currency {
    /**
	Declare what to remove, can be an inventory item or from any other
    */
    public abstract boolean remove(int amount);
    /**
	Declare what to add, and how many, and where
    */
    public abstract boolean add(int amount);
    /**
	Returns the current balance of this currency type
    */
    public abstract int getAmount();
}[/code]
Simply use one of these for every case, Pkpoints, coinPurse, etc. I am sure it is usable for inventories as well, it would just be the long drawn out method that shops have.
Short:
[code]public class CoinPurse extends Currency {
	Client c;
    public CoinPurse(Client c) {
	this.c = c;
    }
    /**
	Declare what to remove, can be an inventory item or from any other
    */
    public abstract boolean remove(int amount) {
	if (c.coinPurse &gt;= amount + MIN_LIMITING_VALUE) {//MIN_LIMITING_VALUE = 0
	    coinPurse -= amount;
	    return true;
	} else {
		return false;
    }
    /**
	Declare what to add, and how many, and where
    */
    public abstract boolean add(int amount) {
	if (coinPurse &lt;= MAX_LIMITING_VALUE - amount)//MAX_LIMITING_VALUE = Integer.MAX_VALUE or Long.MAX_VALUE, typically
    }
    /**
	Returns the current balance of this currency type
    */
    public abstract int getAmount() {
	return coinPurse;
    }
}[/code]</description>
    
    <lastBuildDate>Wed, 13 Nov 2013 04:01:01 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/currency-object-worth-while/535541.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Currency Object(Worth while?)</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <p>[quote=“Clawz fury, post:2, topic:535541”]Your currency class should be an interface.</p>
<p>also, no I personally wouldn’t do it like this. but what I would do is make use of enumeration.</p>
<p>[code=java]public enum Currency {<br>
COINS(…),<br>
TOKKUL(…); // any data you want for the currency can be put here</p>
<p>…</p>
<p>}[/code]</p>
<p>then, each shop can load its own currency (assuming you have shops externally loaded)</p>
<p><code>&lt;shopId&gt;...&lt;/shopId&gt;
&lt;shopName&gt;...&lt;/shopName&gt;
&lt;shopItems&gt;...&lt;/shopItems&gt;
&lt;shopCurrency&gt;COINS&lt;/shopCurrency&gt;</code></p>
<p>I think this would be the best way to do it because it is very manageable. you wouldn’t have to change any actual code in your server to load a shop with a certain currency.[/quote]</p>
<p>Whether it’s an interface or an abstract class, it doesn’t matter.</p>
<p><span class="mention">@OP</span>; this is what we have done for currency:</p>
<pre><code class="lang-auto">	public interface Currency
	{
		String getName();

		int getAmount( Player player );

		void delete( Player player, int amount );

		void add( Player player, int amount );

		int getSellPrice( Item item );

		int getSpriteId();
	}</code></pre>
<p>And an implementation:</p>
<pre><code class="lang-auto">public final class PlayerKillPointsCurrency implements Currency
{

	@Override
	public String getName()
	{
		return "pk points";
	}

	@Override
	public int getAmount( Player player )
	{
		return player.getFields().getCombatAttributes().getPkPoints();
	}

	@Override
	public void delete( Player player, int amount )
	{
		if( amount &gt; 0 ) {
			int delete = player.getFields().getCombatAttributes().getPkPoints() - amount;
			player.getFields().getCombatAttributes().setPkPoints( delete );
			player.getPacketSender().sendMessage( "You now have: " + delete + " pk points." );
		}
	}

	@Override
	public void add( Player player, int amount )
	{
		if( amount &gt; 0 ) {
			int add = player.getFields().getCombatAttributes().getPkPoints() + amount;
			player.getFields().getCombatAttributes().setPkPoints( add );
			player.getPacketSender().sendMessage( "You now have: " + add + " pk points." );
		}
	}

	@Override
	public int getSellPrice( Item item )
	{
		return getPointPrice( item );
	}

	@Override
	public int getBuyPrice( Item item )
	{
		return getPointPrice( item ) / 2;
	}

	@Override
	public int getSpriteId()
	{
		return Shop.TOKEN_SPRITE_ID;
	}

	private static int getPointPrice( Item item )
	{
             return 50;
        }

}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/currency-object-worth-while/535541/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/currency-object-worth-while/535541/3</link>
        <pubDate>Wed, 13 Nov 2013 04:01:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-535541-3</guid>
        <source url="https://forum.moparisthebest.com/t/currency-object-worth-while/535541.rss">Currency Object(Worth while?)</source>
      </item>
      <item>
        <title>Currency Object(Worth while?)</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>Your currency class should be an interface.</p>
<p>also, no I personally wouldn’t do it like this. but what I would do is make use of enumeration.</p>
<p>[code=java]public enum Currency {<br>
COINS(…),<br>
TOKKUL(…); // any data you want for the currency can be put here</p>
<p>…</p>
<p>}[/code]</p>
<p>then, each shop can load its own currency (assuming you have shops externally loaded)</p>
<p><code>&lt;shopId&gt;...&lt;/shopId&gt;
&lt;shopName&gt;...&lt;/shopName&gt;
&lt;shopItems&gt;...&lt;/shopItems&gt;
&lt;shopCurrency&gt;COINS&lt;/shopCurrency&gt;</code></p>
<p>I think this would be the best way to do it because it is very manageable. you wouldn’t have to change any actual code in your server to load a shop with a certain currency.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/currency-object-worth-while/535541/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/currency-object-worth-while/535541/2</link>
        <pubDate>Wed, 13 Nov 2013 03:53:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-535541-2</guid>
        <source url="https://forum.moparisthebest.com/t/currency-object-worth-while/535541.rss">Currency Object(Worth while?)</source>
      </item>
      <item>
        <title>Currency Object(Worth while?)</title>
        <dc:creator><![CDATA[@matzie matzie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/matzie">@matzie</a> wrote:</p>
          <blockquote>
              <p>Edit: I will take that as a no considering no posts thus far lol.</p>
<p>I keep seeing a lot of people complaining about making shops accept Pk points and such. I was wondering if it would be worth while Creating a currency object, that holds way to remove all such things related.  Then every reference to purchasing will be sent a currency, instead of an int. and this would even work with CoinPurses.</p>
<p><code>public abstract Currency {
    /**
	Declare what to remove, can be an inventory item or from any other
    */
    public abstract boolean remove(int amount);
    /**
	Declare what to add, and how many, and where
    */
    public abstract boolean add(int amount);
    /**
	Returns the current balance of this currency type
    */
    public abstract int getAmount();
}</code><br>
Simply use one of these for every case, Pkpoints, coinPurse, etc. I am sure it is usable for inventories as well, it would just be the long drawn out method that shops have.<br>
Short:</p>
<p><code>public class CoinPurse extends Currency {
	Client c;
    public CoinPurse(Client c) {
	this.c = c;
    }
    /**
	Declare what to remove, can be an inventory item or from any other
    */
    public abstract boolean remove(int amount) {
	if (c.coinPurse &gt;= amount + MIN_LIMITING_VALUE) {//MIN_LIMITING_VALUE = 0
	    coinPurse -= amount;
	    return true;
	} else {
		return false;
    }
    /**
	Declare what to add, and how many, and where
    */
    public abstract boolean add(int amount) {
	if (coinPurse &lt;= MAX_LIMITING_VALUE - amount)//MAX_LIMITING_VALUE = Integer.MAX_VALUE or Long.MAX_VALUE, typically
    }
    /**
	Returns the current balance of this currency type
    */
    public abstract int getAmount() {
	return coinPurse;
    }
}</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/currency-object-worth-while/535541/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/currency-object-worth-while/535541/1</link>
        <pubDate>Tue, 12 Nov 2013 12:33:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-535541-1</guid>
        <source url="https://forum.moparisthebest.com/t/currency-object-worth-while/535541.rss">Currency Object(Worth while?)</source>
      </item>
  </channel>
</rss>
