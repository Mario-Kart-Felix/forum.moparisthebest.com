<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Event driven engines</title>
    <link>https://forum.moparisthebest.com/t/event-driven-engines/432853</link>
    <description>I have never seen a 100% event driven game server, which I would think would be hard to make. With that being said, without having a game loop, I&#39;m just curious as to how you update players, without having a continuous loop?

The only thing I could think of was to update the player upon log in, then assign another &#39;update&#39;, say 500ms, later. 

Such as:
[code=java]
public void update() {
	....
	wait(500);
	update();
}
[/code]

But then again, that&#39;s still a continuous loop... Anyone have any experience with event driven servers?</description>
    
    <lastBuildDate>Thu, 01 Mar 2012 14:42:24 +0000</lastBuildDate>
    <category>Game Development</category>
    <atom:link href="https://forum.moparisthebest.com/t/event-driven-engines/432853.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Event driven engines</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <p>It should really come down to what the project is, rather than your preferences. Building a synchronous server framework would be horrible, whereas it can be extremely difficult not to have a synchronous game client system. As for most other applications, I find a combination of those two is necessary more times than not.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/event-driven-engines/432853/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/event-driven-engines/432853/6</link>
        <pubDate>Thu, 01 Mar 2012 14:42:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-432853-6</guid>
        <source url="https://forum.moparisthebest.com/t/event-driven-engines/432853.rss">Event driven engines</source>
      </item>
      <item>
        <title>Event driven engines</title>
        <dc:creator><![CDATA[@imthenull imthenull]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imthenull">@imthenull</a> wrote:</p>
          <blockquote>
              <p>[quote=“Taharok, post:4, topic:432853”]A fully event-driven engine could easily make use of concurrency, where possible. Nevertheless, they have significant overhead that in terms of opportunity cost, is probably far greater than just running everything synchronously. Otherwise you could look into parallel processing, which is a lot more complicated than an event-driven model, but allows you to minimize concurrent overhead while maximizing efficiency in the concurrent environment.</p>
<p>I’m talking strictly about client-side features here. For any feature or aspect of the game that acts as a server (and by that, I mean it in the broad definition of any executable system which handles requests), that could most likely use an event-driven solution efficiently. Anything modular could use events too, but if the modules are directly part of the synchronous game engine, they would still have to be processed in the main game loop.</p>
<p>That was poorly organized, but I hope it made sense.[/quote]</p>
<p>Thanks for the response, I’ve yet to hear of parallel processing, although I am looking to develop a server. Ive never been the one to like modular programming, I’d much rather ‘hard code’ everything in, as i don’t often change things once implemented.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/event-driven-engines/432853/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/event-driven-engines/432853/5</link>
        <pubDate>Sat, 18 Feb 2012 16:00:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-432853-5</guid>
        <source url="https://forum.moparisthebest.com/t/event-driven-engines/432853.rss">Event driven engines</source>
      </item>
      <item>
        <title>Event driven engines</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <p>A fully event-driven engine could easily make use of concurrency, where possible. Nevertheless, they have significant overhead that in terms of opportunity cost, is probably far greater than just running everything synchronously. Otherwise you could look into parallel processing, which is a lot more complicated than an event-driven model, but allows you to minimize concurrent overhead while maximizing efficiency in the concurrent environment.</p>
<p>I’m talking strictly about client-side features here. For any feature or aspect of the game that acts as a server (and by that, I mean it in the broad definition of any executable system which handles requests), that could most likely use an event-driven solution efficiently. Anything modular could use events too, but if the modules are directly part of the synchronous game engine, they would still have to be processed in the main game loop.</p>
<p>That was poorly organized, but I hope it made sense.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/event-driven-engines/432853/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/event-driven-engines/432853/4</link>
        <pubDate>Wed, 15 Feb 2012 23:30:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-432853-4</guid>
        <source url="https://forum.moparisthebest.com/t/event-driven-engines/432853.rss">Event driven engines</source>
      </item>
      <item>
        <title>Event driven engines</title>
        <dc:creator><![CDATA[@imthenull imthenull]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imthenull">@imthenull</a> wrote:</p>
          <blockquote>
              <p>yes, it’s just an example. lol</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/event-driven-engines/432853/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/event-driven-engines/432853/3</link>
        <pubDate>Tue, 14 Feb 2012 04:20:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-432853-3</guid>
        <source url="https://forum.moparisthebest.com/t/event-driven-engines/432853.rss">Event driven engines</source>
      </item>
      <item>
        <title>Event driven engines</title>
        <dc:creator><![CDATA[@sppt sppt]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sppt">@sppt</a> wrote:</p>
          <blockquote>
              <p>[quote=“imthenull, post:1, topic:432853”]I have never seen a 100% event driven game server, which I would think would be hard to make. With that being said, without having a game loop, I’m just curious as to how you update players, without having a continuous loop?</p>
<p>The only thing I could think of was to update the player upon log in, then assign another ‘update’, say 500ms, later.</p>
<p>Such as:</p>
<pre><code class="lang-auto">public void update() {
	....
	wait(500);
	update();
}</code></pre>
<p>But then again, that’s still a continuous loop… Anyone have any experience with event driven servers?[/quote]<br>
I would highly advise you against doing it like that, if update runs at every frame it’ll rapidly fill up the call stack or something along those lines.<br>
It’d be better to have it run in a while loop you call from the constructor.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/event-driven-engines/432853/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/event-driven-engines/432853/2</link>
        <pubDate>Mon, 13 Feb 2012 22:58:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-432853-2</guid>
        <source url="https://forum.moparisthebest.com/t/event-driven-engines/432853.rss">Event driven engines</source>
      </item>
      <item>
        <title>Event driven engines</title>
        <dc:creator><![CDATA[@imthenull imthenull]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imthenull">@imthenull</a> wrote:</p>
          <blockquote>
              <p>I have never seen a 100% event driven game server, which I would think would be hard to make. With that being said, without having a game loop, I’m just curious as to how you update players, without having a continuous loop?</p>
<p>The only thing I could think of was to update the player upon log in, then assign another ‘update’, say 500ms, later.</p>
<p>Such as:</p>
<pre><code class="lang-auto">public void update() {
	....
	wait(500);
	update();
}</code></pre>
<p>But then again, that’s still a continuous loop… Anyone have any experience with event driven servers?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/event-driven-engines/432853/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/event-driven-engines/432853/1</link>
        <pubDate>Mon, 13 Feb 2012 06:39:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-432853-1</guid>
        <source url="https://forum.moparisthebest.com/t/event-driven-engines/432853.rss">Event driven engines</source>
      </item>
  </channel>
</rss>
