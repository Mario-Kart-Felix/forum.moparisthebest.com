<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>SQL Integration [UPDATED]</title>
    <link>https://forum.moparisthebest.com/t/sql-integration-updated/340258</link>
    <description>Today im going to post a tutorial on how to setup a database to connect with your server, along with full player loading/saving. Lets get started.

Note that this tutorial is being based on a 317 source, but the foundation of this tutorial can be applied to any other revision.

First off, we are going to get a database set up. Setting up your own MySQL database isnt what I cover here, but you can using a webhost or from using MySQL on your own computer. However, if your looking for a free database without having to register with a webhost or having to have the database on your computer, you should try [url=http://db4free.net]http://db4free.net[/url].

After your database has been setup, Java needs to be able to connect to this database. We are going to use whats called the JDBC ([b]J[/b]ava [b]D[/b]ata[b]B[/b]ase [b]C[/b]onnectivity) Driver. I have attatched the download link to the bottom of this topic. Using JDBC, we will be able to connect to your database.

Download the JDBC package at the bottom, and download/extract to your server source. Once extracted, a folder named [i]mysql-connector-java-5.1.6[/i] will appear. Go through the folder until you see a JAR file. Get the path to the JAR file. If you downloaded the JDBC driver from this topic, the path should be,
[i]mysql-connector-java-5.1.6\mysql-connector-java-5.1.6-bin.jar[/i]
Remember that path! Once you are sure you ha\ve the correct path, place a path to the JAR file in your run console. This is how mine looks,
&lt;blockquote&gt;java -cp .;.\mysql-connector-java-5.1.6\mysql-connector-java-5.1.6-bin.jar server&lt;/blockquote&gt;
Yours will probably be similar/exact.

Next, we need to actually configure the server. At the top of the server class (inside the class however), add this,
[code=java]public static DBConnectionPool dbConnectPool = null;[/code]
And add this under the main method (public static void main(java.lang.String args[])),
[code=java]dbConnectPool = new DBConnectionPool(&quot;db4free.net&quot;, 3306, &quot;pkevolution_serv&quot;, &quot;calandra&quot;, &quot;sql_pkevolution&quot;);
dbConnectPool.connect();[/code]

And create a file named DBConnectionPool.java with these inside, (thanks to (Anthony) who helped improve this tutorial by showing me how to use a connection pool)
[code=java]
/*
 *  Copyright (C) 2010 Anthony Snavely
 * 
 *  This program is free software. It comes without any warranty, to
 *  the extent permitted by applicable law. You can redistribute it
 *  and/or modify it under the terms of the Do What The Fuck You Want
 *  To Public License, Version 2, as published by Sam Hocevar. See
 *  http://sam.zoy.org/wtfpl/COPYING for more details.
 */

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.concurrent.ArrayBlockingQueue;

/**
 * 
 * @author Anthony Snavely &lt;anthony.snavely@gmail.com&gt;
 */
public class DBConnectionPool {

    public static final int POOL_SIZE = 10;
    private static int port;
    private static String host, user, pass, database;
    private static ArrayBlockingQueue&lt;Statement&gt; dbStatements = new ArrayBlockingQueue&lt;Statement&gt;(POOL_SIZE);
    private static Statement statement;

    public DBConnectionPool(String host, int port, String user, String pass, String database) {
        this.host = host;
        this.port = port;
        this.user = user;
        this.pass = pass;
        this.database = database;
    }

    public void connect() {
        for (int i = 0; i &lt; POOL_SIZE; i++) {
            try {
	        Class.forName(&quot;com.mysql.jdbc.Driver&quot;).newInstance();
                Connection conn = DriverManager.getConnection(&quot;jdbc:mysql://&quot; + host + &quot;:&quot; + port + &quot;/&quot; + database, user, pass);
                statement = conn.createStatement();
                statement.setEscapeProcessing(true);
                dbStatements.offer(statement);
            } catch (Exception e) {
		e.printStackTrace();
                System.out.println(&quot;Cannot connect to database!&quot;);
            }
        }
    }
    
    public static ResultSet executeQuery(String query) {
        try {
            statement = dbStatements.poll();
            ResultSet results = statement.executeQuery(query);
            dbStatements.offer(statement);
            return results;
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        return null;
    }
    
    public static int executeUpdate(String query) {
        try {
            statement = dbStatements.poll();
            int results = statement.executeUpdate(query);
            dbStatements.offer(statement);
            return results;
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        return -1;
    }
    
    public static Statement getNextStatement() {
        return dbStatements.poll();
    }

    public static void closeConnection() {
        try {
	    for (int i = 0; i &lt; dbStatements.size(); i++)
            	dbStatements.remove(i);
            statement.getConnection().close();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
}[/code]

You need to set the getConnection() method in the createConnection() method manually. There is an example provided,
[code=java]// (&quot;jdbc:mysql://SQL IP/DATABASENAME&quot; &quot;SQLUser&quot; &quot;SQLPass&quot;)[/code]

Compile, and if successfully done, should compile with no errors. Run the server, and if there are no errors, you have done well.

Next up, we are going to add player loading/saving with a database. Why? It has been proven Databases are [b]MUCH[/b] faster than text files, and are even faster when there are many instances of them. So for example, the more player files, the more a database can be of assistance. Not only are databases faster, they are easier to work with (if you know some basic SQL syntax).

[center]*During these steps it is highly recommended you backup your server, because if done incorrectly, can destroy your loading/saving methods! You may need to make some simple changes depending on your source.*[/center]

Start by heading into your database and running the following SQL queries,
[code]-----------------------------------------------------------
-- Table structure for table `player`
--

CREATE TABLE IF NOT EXISTS `player` (
  `username` varchar(20) NOT NULL,
  `password` varchar(32) NOT NULL,
  `rights` tinyint(4) NOT NULL,
  `x` smallint(6) NOT NULL,
  `y` smallint(6) NOT NULL,
  `height` tinyint(5) NOT NULL,
  PRIMARY KEY (`username`)
);

--
-- Table structure for table `playerdata`
--

CREATE TABLE IF NOT EXISTS `playerdata` (
  `username` varchar(20) NOT NULL,
  `appearance` text NOT NULL,
  `skills` text NOT NULL,
  `skillsxp` text NOT NULL,
  `item` text NOT NULL,
  `itemN` text NOT NULL,
  `bank` text NOT NULL,
  `bankN` text NOT NULL,
  `equipment` text NOT NULL,
  `equipmentN` text NOT NULL,
  `friends` text NOT NULL,
  `ignores` text NOT NULL,
  PRIMARY KEY (`username`)
);[/code]

Make sure you actually have a database setup!
Once you are sure all the tables and coloumns have been setup, we may proceed.

We are going to do some heavy editting. Go into the client class, and add these methods,
[code=java]	public String skillsToDatabase() {
		StringBuilder string = new StringBuilder();
		for (int i = 0; i &lt; playerLevel.length; i++)
			string.append(playerLevel[i]).append(&quot;:&quot;);
		return new String(string.deleteCharAt(string.length() - 1));
	}	

	public String skillsxpToDatabase() {
		StringBuilder string = new StringBuilder();
		for (int i = 0; i &lt; playerLevel.length; i++)
			string.append(playerXP[i]).append(&quot;:&quot;);
		return new String(string.deleteCharAt(string.length() - 1));
	}	

	public String appearanceToDatabase() {
		int[] looks = getLook();
		StringBuilder string = new StringBuilder();
		for (int i : looks)
			string.append(i).append(&quot;:&quot;);
		return new String(string.deleteCharAt(string.length() - 1));
	}

	public String bankToDatabase() {
		StringBuilder string = new StringBuilder();
		for (int i = 0; i &lt; bankItems.length; i++)
			string.append(bankItems[i]).append(&quot;:&quot;);
		return new String(string.deleteCharAt(string.length() - 1));
	}	

	public String bankNToDatabase() {
		StringBuilder string = new StringBuilder();
		for (int i = 0; i &lt; bankItems.length; i++)
			string.append(bankItemsN[i]).append(&quot;:&quot;);
		return new String(string.deleteCharAt(string.length() - 1));
	}

	public String itemsToDatabase() {
		StringBuilder string = new StringBuilder();
		for (int i = 0; i &lt; playerItems.length; i++)
			string.append(playerItems[i]).append(&quot;:&quot;);
		return new String(string.deleteCharAt(string.length() - 1));
	}

	public String itemNToDatabase() {
		StringBuilder string = new StringBuilder();
		for (int i = 0; i &lt; playerItems.length; i++)
			string.append(playerItemsN[i]).append(&quot;:&quot;);
		return new String(string.deleteCharAt(string.length() - 1));
	}

	public String equipmentToDatabase() {
		StringBuilder string = new StringBuilder();
		for (int i = 0; i &lt; playerEquipment.length; i++)
			string.append(playerEquipment[i]).append(&quot;:&quot;);
		return new String(string.deleteCharAt(string.length() - 1));
	}


	public String equipmentNToDatabase() {
		StringBuilder string = new StringBuilder();
		for (int i = 0; i &lt; playerEquipmentN.length; i++)
			string.append(playerEquipmentN[i]).append(&quot;:&quot;);
		return new String(string.deleteCharAt(string.length() - 1));
	}

	public String friendsToDatabase() {
		StringBuilder string = new StringBuilder();
			for (int i = 0; i &lt; friends.length; i++)
				string.append(friends[i]).append(&quot;:&quot;);
			return new String(string.deleteCharAt(string.length() - 1));
	}

	public String ignoresToDatabase() {
		StringBuilder string = new StringBuilder();
			for (int i = 0; i &lt; ignores.length; i++)
				string.append(Long.toString(ignores[i])).append(&quot;:&quot;);
			return new String(string.deleteCharAt(string.length() - 1));
	}[/code]
Head into your client class, and replace your entire savegame method(s) with this one method,
[code=java]	public void savegame(boolean logout) {

		if ((playerName == null) || !validClient) {
			saveNeeded = false;
			return;
		}

		if (logout &amp;&amp; inTrade) {
			declineTrade();
		}

		String player2 = &quot;`password` = &#39;&quot; + playerPass
				+ &quot;&#39;,`rights` =  &#39;&quot; + playerRights
				+ &quot;&#39;,`x` =  &#39;&quot; + absX + &quot;&#39;&quot;
				+ &quot;,`y` =  &#39;&quot; + absY + &quot;&#39;&quot;
				+ &quot;,`height` =  &#39;&quot; + heightLevel + &quot;&#39;&quot;;

		String player = &quot;&#39;&quot; + playerName + &quot;&#39;, &#39;&quot;
				+ playerPass + &quot;&#39;, &#39;&quot;
				+ playerRights + &quot;&#39;, &#39;&quot;
				+ absX
				+ &quot;&#39;, &#39;&quot; + absY + &quot;&#39;, &#39;&quot;
				+ heightLevel + &quot;&#39;&quot;;

		String playerData2 = &quot;`appearance` = &#39;&quot;
				+ mysql.appearanceToDatabase() + &quot;&#39;,`skills` =  &#39;&quot;
				+ mysql.skillsToDatabase() + &quot;&#39;,`skillsxp` =  &#39;&quot;
				+ mysql.skillsxpToDatabase() + &quot;&#39;,`item` =  &#39;&quot;
				+ mysql.itemsToDatabase() + &quot;&#39;,`itemN` =  &#39;&quot;
				+ mysql.itemNToDatabase() + &quot;&#39;,`bank` =  &#39;&quot;
				+ mysql.bankToDatabase() + &quot;&#39;,`bankN` =  &#39;&quot;
				+ mysql.bankNToDatabase() + &quot;&#39;,`equipment` =  &#39;&quot;
				+ mysql.equipmentToDatabase() + &quot;&#39;,`equipmentN` =  &#39;&quot;
				+ mysql.equipmentNToDatabase() + &quot;&#39;,`friends` =  &#39;&quot;
				+ mysql.friendsToDatabase() + &quot;&#39;,`ignores` =  &#39;&quot;
				+ mysql.ignoresToDatabase() + &quot;&#39;&quot;;

		String playerData = &quot;&#39;&quot; + playerName + &quot;&#39;, &#39;&quot;
				+ mysql.appearanceToDatabase() + &quot;&#39;, &#39;&quot;
				+ mysql.skillsToDatabase() + &quot;&#39;, &#39;&quot;
				+ mysql.skillsxpToDatabase() + &quot;&#39;, &#39;&quot;
				+ mysql.itemsToDatabase() + &quot;&#39;, &#39;&quot;
				+ mysql.itemNToDatabase() + &quot;&#39;, &#39;&quot;
				+ mysql.bankToDatabase() + &quot;&#39;, &#39;&quot;
				+ mysql.bankNToDatabase() + &quot;&#39;, &#39;&quot;
				+ mysql.equipmentToDatabase() + &quot;&#39;, &#39;&quot; 
				+ mysql.equipmentNToDatabase() + &quot;&#39;, &#39;&quot;
				+ mysql.friendsToDatabase() + &quot;&#39;, &#39;&quot;
				+ mysql.ignoresToDatabase() + &quot;&#39;&quot;;

		DBConnectionPool.sqlQuery(&quot;INSERT INTO player (username, password, rights, x, y, height) VALUES (&quot;+player+&quot;) ON duplicate KEY UPDATE &quot;+player2+&quot;&quot;);	
		DBConnectionPool.sqlQuery(&quot;INSERT INTO playerdata (username, appearance, skills, skillsxp, item, itemN, bank, bankN, equipment, equipmentN, friends, ignores) VALUES (&quot;+playerData+&quot;) ON duplicate KEY UPDATE &quot;+playerData2+&quot;&quot;);
		saveNeeded = false;
	}[/code]

The 4 strings are actually part of the SQL query. And the 2 sqlQuery() methods are what actually connect to the databse and execute queries. In this case, it is inserting player data into the database such as rights, username, password, etc.

Next off, we are going to edit the entire loadgame method,
[code=java]	public int loadgame(String playerName, String playerPass) {
		for (Integer bUid : server.bannedUid)
			if (uid == bUid.intValue())
				return 4;

		long start = System.currentTimeMillis();
		int[] playerLooks = new int[19];

		ResultSet res = DBConnectionPool.sqlQuery(&quot;SELECT * FROM player, playerdata WHERE player.username = &#39;&quot;+playerName+&quot;&#39;&quot;);
		try {
			if (!res.next())
				return 4; // Change for every table
		
			playerName = res.getString(&quot;username&quot;);
			playerPass = res.getString(&quot;password&quot;);
			playerRights = res.getInt(&quot;rights&quot;);
			toX = res.getInt(&quot;x&quot;);
			toY = res.getInt(&quot;y&quot;);
			heightLevel = res.getInt(&quot;height&quot;);
			String[] storedData = res.getString(&quot;appearance&quot;).split(&quot;:&quot;);
			for (int i = 0; i &lt; 19; i++)
				playerLooks[i] = Integer.parseInt(storedData[i]);
			setLook(playerLooks);
			storedData = res.getString(&quot;equipment&quot;).split(&quot;:&quot;);
			for (int i = 0; i &lt; playerEquipment.length; i++)
				playerEquipment[i] = Integer.parseInt(storedData[i]);
			storedData = res.getString(&quot;equipmentN&quot;).split(&quot;:&quot;);
			for (int i = 0; i &lt; playerEquipmentN.length; i++)
				playerEquipmentN[i] = Integer.parseInt(storedData[i]);
			storedData = res.getString(&quot;skills&quot;).split(&quot;:&quot;);
			for (int i = 0; i &lt; playerLevel.length; i++)
				playerLevel[i] = Integer.parseInt(storedData[i]);
			storedData = res.getString(&quot;skillsxp&quot;).split(&quot;:&quot;);
			for (int i = 0; i &lt; playerXP.length; i++)
				playerXP[i] = Integer.parseInt(storedData[i]);
			storedData = res.getString(&quot;item&quot;).split(&quot;:&quot;);
			for (int i = 0; i &lt; playerItems.length; i++)
				playerItems[i] = Integer.parseInt(storedData[i]);
			storedData = res.getString(&quot;itemN&quot;).split(&quot;:&quot;);
			for (int i = 0; i &lt; playerItemsN.length; i++)
				playerItemsN[i] = Integer.parseInt(storedData[i]);
			storedData = res.getString(&quot;bank&quot;).split(&quot;:&quot;);
			for (int i = 0; i &lt; bankItems.length; i++)
				bankItems[i] = Integer.parseInt(storedData[i]);
			storedData = res.getString(&quot;bankN&quot;).split(&quot;:&quot;);
			for (int i = 0; i &lt; bankItems.length; i++)
				bankItemsN[i] = Integer.parseInt(storedData[i]);
			storedData = res.getString(&quot;friends&quot;).split(&quot;:&quot;);
			for (int i = 0; i &lt; friends.length; i++)
				friends[i] = Long.parseLong(storedData[i]);
			storedData = res.getString(&quot;ignores&quot;).split(&quot;:&quot;);
			for (int i = 0; i &lt; ignores.length; i++)
				ignores[i] = Long.parseLong(storedData[i]);
		} catch (Exception e) {
			e.printStackTrace();
		}

		updateRequired = true;
		appearanceUpdateRequired = true;
		long end = System.currentTimeMillis() - start;
		println(&quot;Loading Process Completed  [&quot;+ (playerRights &gt; 0 ? &quot;Has powers&quot;: &quot;Regular player&quot;) + &quot;, lag: &quot; + end+ &quot; ms]&quot;);
		return 0;
	}[/code]

This method is now MUCH shorter than the last one. This simply connects to the database and grabs the players data. Take a good look at the loops and you will understand how it works.

And thats it! Full (My)SQL Integration for your server! In case I may have forgotten something, post any errors or problems with this tutorial. Perhaps I could have used a prepared statement to insert the values into a database? Can someone give me insight on this? And I probably should have used a StringBuilder instead of concatenating the strings. But I cbf on that one.

Partial credits to (Anthony), thanks.

Enjoy.
[b]JDBC DOWNLOAD HERE:[/b]  http://uppit.com/v/ZHC37I9S</description>
    
    <lastBuildDate>Mon, 05 Dec 2011 22:35:18 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/sql-integration-updated/340258.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>SQL Integration [UPDATED]</title>
        <dc:creator><![CDATA[@sageofmali sageofmali]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sageofmali">@sageofmali</a> wrote:</p>
          <blockquote>
              <p>I fixed that problem, my problem now is that it saves and everything, but when I relog, it like clears everything and it deletes all of the info except where they are.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/sql-integration-updated/340258/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/sql-integration-updated/340258/18</link>
        <pubDate>Mon, 05 Dec 2011 22:35:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-340258-18</guid>
        <source url="https://forum.moparisthebest.com/t/sql-integration-updated/340258.rss">SQL Integration [UPDATED]</source>
      </item>
      <item>
        <title>SQL Integration [UPDATED]</title>
        <dc:creator><![CDATA[@asshole_rule asshole_rule]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/asshole_rule">@asshole_rule</a> wrote:</p>
          <blockquote>
              <p>[quote=“sageofmali, post:16, topic:340258”]I get [code=java][12/5/11 4:33 PM]: com.mysql.jdbc.exceptions.MySQLSyntaxErrorException: You have<br>
an error in your SQL syntax; check the manual that corresponds to your MySQL se<br>
rver version for the right syntax to use near ‘) ON duplicate KEY UPDATE <code>appear ance</code> = ‘0:0:24:28:35:39:44:14:7:8:9:5:0’,`skil’ at line 1<br>
[12/5/11 4:33 PM]:      at com.mysql.jdbc.SQLError.createSQLException(SQLError.j<br>
ava:936)<br>
[12/5/11 4:33 PM]:      at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:<br>
2941)<br>
[12/5/11 4:33 PM]:      at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1623)</p>
<p>[12/5/11 4:33 PM]:      at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:17<br>
15)<br>
[12/5/11 4:33 PM]:      at com.mysql.jdbc.Connection.execSQL(Connection.java:324<br>
3)<br>
[12/5/11 4:33 PM]:      at com.mysql.jdbc.Statement.executeUpdate(Statement.java<br>
:1343)<br>
[12/5/11 4:33 PM]:      at com.mysql.jdbc.Statement.executeUpdate(Statement.java<br>
:1260)<br>
[12/5/11 4:33 PM]:      at server.util.DBConnectionPool.query(DBConnectionPool.j<br>
ava:60)<br>
[12/5/11 4:33 PM]:      at server.util.DBConnectionPool.saveGame(DBConnectionPoo<br>
l.java:216)<br>
[12/5/11 4:33 PM]:      at server.model.players.Client.SaveGame(Client.java:1250<br>
)<br>
[12/5/11 4:33 PM]:      at server.model.players.Client.process(Client.java:1381)</p>
<p>[12/5/11 4:33 PM]:      at server.model.players.PlayerHandler.process(PlayerHand<br>
ler.java:153)<br>
[12/5/11 4:33 PM]:      at server.Server.main(Server.java:200)[/code][/quote]</p>
<p>Coulda fucking pmed him instead, queer.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/sql-integration-updated/340258/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/sql-integration-updated/340258/17</link>
        <pubDate>Mon, 05 Dec 2011 21:41:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-340258-17</guid>
        <source url="https://forum.moparisthebest.com/t/sql-integration-updated/340258.rss">SQL Integration [UPDATED]</source>
      </item>
      <item>
        <title>SQL Integration [UPDATED]</title>
        <dc:creator><![CDATA[@sageofmali sageofmali]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sageofmali">@sageofmali</a> wrote:</p>
          <blockquote>
              <p>I get [code=java][12/5/11 4:33 PM]: com.mysql.jdbc.exceptions.MySQLSyntaxErrorException: You have<br>
an error in your SQL syntax; check the manual that corresponds to your MySQL se<br>
rver version for the right syntax to use near ‘) ON duplicate KEY UPDATE <code>appear ance</code> = ‘0:0:24:28:35:39:44:14:7:8:9:5:0’,`skil’ at line 1<br>
[12/5/11 4:33 PM]:      at com.mysql.jdbc.SQLError.createSQLException(SQLError.j<br>
ava:936)<br>
[12/5/11 4:33 PM]:      at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:<br>
2941)<br>
[12/5/11 4:33 PM]:      at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1623)</p>
<p>[12/5/11 4:33 PM]:      at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:17<br>
15)<br>
[12/5/11 4:33 PM]:      at com.mysql.jdbc.Connection.execSQL(Connection.java:324<br>
3)<br>
[12/5/11 4:33 PM]:      at com.mysql.jdbc.Statement.executeUpdate(Statement.java<br>
:1343)<br>
[12/5/11 4:33 PM]:      at com.mysql.jdbc.Statement.executeUpdate(Statement.java<br>
:1260)<br>
[12/5/11 4:33 PM]:      at server.util.DBConnectionPool.query(DBConnectionPool.j<br>
ava:60)<br>
[12/5/11 4:33 PM]:      at server.util.DBConnectionPool.saveGame(DBConnectionPoo<br>
l.java:216)<br>
[12/5/11 4:33 PM]:      at server.model.players.Client.SaveGame(Client.java:1250<br>
)<br>
[12/5/11 4:33 PM]:      at server.model.players.Client.process(Client.java:1381)</p>
<p>[12/5/11 4:33 PM]:      at server.model.players.PlayerHandler.process(PlayerHand<br>
ler.java:153)<br>
[12/5/11 4:33 PM]:      at server.Server.main(Server.java:200)[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/sql-integration-updated/340258/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/sql-integration-updated/340258/16</link>
        <pubDate>Mon, 05 Dec 2011 21:33:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-340258-16</guid>
        <source url="https://forum.moparisthebest.com/t/sql-integration-updated/340258.rss">SQL Integration [UPDATED]</source>
      </item>
      <item>
        <title>SQL Integration [UPDATED]</title>
        <dc:creator><![CDATA[@Yorchi_elite Yorchi elite]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/yorchi_elite">@Yorchi_elite</a> wrote:</p>
          <blockquote>
              <p>I got this Error:</p>
<p>i deleted the mysql. and now i got this error:</p>
<p>[code].\src\Client.java:6512: cannot find symbol<br>
symbol  : variable server<br>
location: class Client<br>
for (Integer bUid : server.bannedUid)<br>
^<br>
.\src\Client.java:6519: cannot find symbol<br>
symbol  : class ResultSet<br>
location: class Client<br>
ResultSet res = DBConnectionPool.sqlQuery(“SELECT * FROM player,<br>
playerdata WHERE player.username = '”+playerName+"’");<br>
^<br>
.\src\Client.java:6519: cannot find symbol<br>
symbol  : method sqlQuery(java.lang.String)<br>
location: class DBConnectionPool<br>
ResultSet res = DBConnectionPool.sqlQuery(“SELECT * FROM player,<br>
playerdata WHERE player.username = '”+playerName+"’");<br>
^<br>
.\src\Client.java:11801: cannot find symbol<br>
symbol  : variable Mysql<br>
location: class Client<br>
+ Mysql.appearanceToDatabase() + “’,<code>skills</code> =<br>
'”<br>
^<br>
.\src\Client.java:11802: cannot find symbol<br>
symbol  : variable mysql<br>
location: class Client<br>
+ mysql.skillsToDatabase() + “’,<code>skillsxp</code> =  '”</p>
<pre><code>                              ^
</code></pre>
<p>.\src\Client.java:11803: cannot find symbol<br>
symbol  : variable mysql<br>
location: class Client<br>
+ mysql.skillsxpToDatabase() + “’,<code>item</code> =  '”<br>
^<br>
.\src\Client.java:11804: cannot find symbol<br>
symbol  : variable mysql<br>
location: class Client<br>
+ mysql.itemsToDatabase() + “’,<code>itemN</code> =  '”<br>
^<br>
.\src\Client.java:11805: cannot find symbol<br>
symbol  : variable mysql<br>
location: class Client<br>
+ mysql.itemNToDatabase() + “’,<code>bank</code> =  '”<br>
^<br>
.\src\Client.java:11806: cannot find symbol<br>
symbol  : variable mysql<br>
location: class Client<br>
+ mysql.bankToDatabase() + “’,<code>bankN</code> =  '”<br>
^<br>
.\src\Client.java:11807: cannot find symbol<br>
symbol  : variable mysql<br>
location: class Client<br>
+ mysql.bankNToDatabase() + “’,<code>equipment</code> =  '”</p>
<pre><code>                              ^
</code></pre>
<p>.\src\Client.java:11808: cannot find symbol<br>
symbol  : variable mysql<br>
location: class Client<br>
+ mysql.equipmentToDatabase() + “’,<code>equipmentN</code><br>
=  '”<br>
^<br>
.\src\Client.java:11809: cannot find symbol<br>
symbol  : variable mysql<br>
location: class Client<br>
+ mysql.equipmentNToDatabase() + “’,<code>friends</code> =<br>
'”<br>
^<br>
.\src\Client.java:11810: cannot find symbol<br>
symbol  : variable mysql<br>
location: class Client<br>
+ mysql.friendsToDatabase() + “’,<code>ignores</code> =  '”</p>
<pre><code>                              ^
</code></pre>
<p>.\src\Client.java:11811: cannot find symbol<br>
symbol  : variable mysql<br>
location: class Client<br>
+ mysql.ignoresToDatabase() + “’”;<br>
^<br>
.\src\Client.java:11814: cannot find symbol<br>
symbol  : variable mysql<br>
location: class Client<br>
+ mysql.appearanceToDatabase() + “’, '”<br>
^<br>
.\src\Client.java:11815: cannot find symbol<br>
symbol  : variable mysql<br>
location: class Client<br>
+ mysql.skillsToDatabase() + “’, '”<br>
^<br>
.\src\Client.java:11816: cannot find symbol<br>
symbol  : variable mysql<br>
location: class Client<br>
+ mysql.skillsxpToDatabase() + “’, '”<br>
^<br>
.\src\Client.java:11817: cannot find symbol<br>
symbol  : variable mysql<br>
location: class Client<br>
+ mysql.itemsToDatabase() + “’, '”<br>
^<br>
.\src\Client.java:11818: cannot find symbol<br>
symbol  : variable mysql<br>
location: class Client<br>
+ mysql.itemNToDatabase() + “’, '”<br>
^<br>
.\src\Client.java:11819: cannot find symbol<br>
symbol  : variable mysql<br>
location: class Client<br>
+ mysql.bankToDatabase() + “’, '”<br>
^<br>
.\src\Client.java:11820: cannot find symbol<br>
symbol  : variable mysql<br>
location: class Client<br>
+ mysql.bankNToDatabase() + “’, '”<br>
^<br>
.\src\Client.java:11821: cannot find symbol<br>
symbol  : variable mysql<br>
location: class Client<br>
+ mysql.equipmentToDatabase() + “’, '”<br>
^<br>
.\src\Client.java:11822: cannot find symbol<br>
symbol  : variable mysql<br>
location: class Client<br>
+ mysql.equipmentNToDatabase() + “’, '”<br>
^<br>
.\src\Client.java:11823: cannot find symbol<br>
symbol  : variable mysql<br>
location: class Client<br>
+ mysql.friendsToDatabase() + “’, '”<br>
^<br>
.\src\Client.java:11824: cannot find symbol<br>
symbol  : variable mysql<br>
location: class Client<br>
+ mysql.ignoresToDatabase() + “’”;<br>
^<br>
.\src\Client.java:11826: cannot find symbol<br>
symbol  : method sqlQuery(java.lang.String)<br>
location: class DBConnectionPool<br>
DBConnectionPool.sqlQuery(“INSERT INTO player (username, passwor<br>
d, rights, x, y, height) VALUES (”+player+") ON duplicate KEY UPDATE “+player2+”<br>
“);<br>
^<br>
.\src\Client.java:11827: cannot find symbol<br>
symbol  : method sqlQuery(java.lang.String)<br>
location: class DBConnectionPool<br>
DBConnectionPool.sqlQuery(“INSERT INTO playerdata (username, app<br>
earance, skills, skillsxp, item, itemN, bank, bankN, equipment, equipmentN, frie<br>
nds, ignores) VALUES (”+playerData+”) ON duplicate KEY UPDATE “+playerData2+”");</p>
<pre><code>                            ^
</code></pre>
<p>27 errors<br>
Press any key to continue . . .[/code]</p>
<p>[code].\src\Client.java:6526: cannot find symbol<br>
symbol  : method sqlQuery(java.lang.String)<br>
location: class DBConnectionPool<br>
ResultSet res = DBConnectionPool.sqlQuery(“SELECT * FROM player,<br>
playerdata WHERE player.username = '”+playerName+"’");<br>
^<br>
.\src\Client.java:11833: cannot find symbol<br>
symbol  : method sqlQuery(java.lang.String)<br>
location: class DBConnectionPool<br>
DBConnectionPool.sqlQuery(“INSERT INTO player (username, passwor<br>
d, rights, x, y, height) VALUES (”+player+") ON duplicate KEY UPDATE “+player2+”<br>
“);<br>
^<br>
.\src\Client.java:11834: cannot find symbol<br>
symbol  : method sqlQuery(java.lang.String)<br>
location: class DBConnectionPool<br>
DBConnectionPool.sqlQuery(“INSERT INTO playerdata (username, app<br>
earance, skills, skillsxp, item, itemN, bank, bankN, equipment, equipmentN, frie<br>
nds, ignores) VALUES (”+playerData+”) ON duplicate KEY UPDATE “+playerData2+”");</p>
<pre><code>                            ^
</code></pre>
<p>3 errors<br>
Press any key to continue . . .[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/sql-integration-updated/340258/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/sql-integration-updated/340258/15</link>
        <pubDate>Fri, 13 May 2011 17:08:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-340258-15</guid>
        <source url="https://forum.moparisthebest.com/t/sql-integration-updated/340258.rss">SQL Integration [UPDATED]</source>
      </item>
      <item>
        <title>SQL Integration [UPDATED]</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>[quote=“gravenfire23, post:13, topic:340258”][quote author=Clawz fury link=topic=436622.msg3525888#msg3525888 date=1299807988]<br>
Pretty Cool.</p>
<p>PS: Listen to PeeHPee! HE IS A MASTER!<br>
[/quote]</p>
<p>Did you not see the last time this was posted in  <img src="https://forum.moparisthebest.com/images/emoji/twitter/expressionless.png?v=5" title=":expressionless:" class="emoji" alt=":expressionless:"> still tho i thank you for gravedigging i needed this.[/quote]<br>
Holy crap thanks, I didn’t realize the date.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/sql-integration-updated/340258/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/sql-integration-updated/340258/14</link>
        <pubDate>Mon, 21 Mar 2011 23:32:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-340258-14</guid>
        <source url="https://forum.moparisthebest.com/t/sql-integration-updated/340258.rss">SQL Integration [UPDATED]</source>
      </item>
      <item>
        <title>SQL Integration [UPDATED]</title>
        <dc:creator><![CDATA[@gravenfire23 gravenfire23]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/gravenfire23">@gravenfire23</a> wrote:</p>
          <blockquote>
              <p>[quote=“Clawz fury, post:12, topic:340258”]Pretty Cool.</p>
<p>PS: Listen to PeeHPee! HE IS A MASTER![/quote]</p>
<p>Did you not see the last time this was posted in  <img src="https://forum.moparisthebest.com/images/emoji/twitter/expressionless.png?v=5" title=":expressionless:" class="emoji" alt=":expressionless:"> still tho i thank you for gravedigging i needed this.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/sql-integration-updated/340258/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/sql-integration-updated/340258/13</link>
        <pubDate>Mon, 21 Mar 2011 22:16:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-340258-13</guid>
        <source url="https://forum.moparisthebest.com/t/sql-integration-updated/340258.rss">SQL Integration [UPDATED]</source>
      </item>
      <item>
        <title>SQL Integration [UPDATED]</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>Pretty Cool.</p>
<p>PS: Listen to PeeHPee! HE IS A MASTER!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/sql-integration-updated/340258/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/sql-integration-updated/340258/12</link>
        <pubDate>Fri, 11 Mar 2011 01:46:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-340258-12</guid>
        <source url="https://forum.moparisthebest.com/t/sql-integration-updated/340258.rss">SQL Integration [UPDATED]</source>
      </item>
      <item>
        <title>SQL Integration [UPDATED]</title>
        <dc:creator><![CDATA[@PeeHPee PeeHPee]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/peehpee">@PeeHPee</a> wrote:</p>
          <blockquote>
              <p>you are all retarded shut up</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/sql-integration-updated/340258/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/sql-integration-updated/340258/11</link>
        <pubDate>Tue, 22 Jun 2010 13:52:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-340258-11</guid>
        <source url="https://forum.moparisthebest.com/t/sql-integration-updated/340258.rss">SQL Integration [UPDATED]</source>
      </item>
      <item>
        <title>SQL Integration [UPDATED]</title>
        <dc:creator><![CDATA[@xVhincex xVhincex]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xvhincex">@xVhincex</a> wrote:</p>
          <blockquote>
              <p>Cool beans</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/sql-integration-updated/340258/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/sql-integration-updated/340258/10</link>
        <pubDate>Tue, 22 Jun 2010 09:59:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-340258-10</guid>
        <source url="https://forum.moparisthebest.com/t/sql-integration-updated/340258.rss">SQL Integration [UPDATED]</source>
      </item>
      <item>
        <title>SQL Integration [UPDATED]</title>
        <dc:creator><![CDATA[@chri5 chri5]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/chri5">@chri5</a> wrote:</p>
          <blockquote>
              <p>[quote=“Project Evolution, post:8, topic:340258”][quote author=chri5 link=topic=436622.msg3214665#msg3214665 date=1274575497]</p>
<aside class="quote no-group">
<blockquote>
<p>Why the FUCK would that be necessary when im only defining one new class.<br>
l2explaininsteadofpostinguselessshitlikethat</p>
</blockquote>
</aside>
<p>Relationships in your SQL you dick. Explain to me how 1 field with separated parameters is better than a new table (id and item_id) and then using a LEFT JOIN!</p>
<p>You sir are officially a retard.<br>
[/quote]</p>
<p>WHAT FIELD ARE YOU TALKING ABOUT? Is it that hard to express yourself? And dont call me a retard for what I posted above, because THIS is what I beleived you were reffering to,<br>
<a href="http://cnx.org/content/m11709/latest/" class="onebox" target="_blank" rel="nofollow noopener">http://cnx.org/content/m11709/latest/</a><br>
So stop thinking you can get the best of me you fucking dick.[/quote]<br>
Anyone that even knows what SQL is knows what a has many relationship is, try it out!</p>
<p>Next time you start an argument, remember that you actually need to know what the fuck you’re on about.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/sql-integration-updated/340258/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/sql-integration-updated/340258/9</link>
        <pubDate>Sun, 23 May 2010 08:15:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-340258-9</guid>
        <source url="https://forum.moparisthebest.com/t/sql-integration-updated/340258.rss">SQL Integration [UPDATED]</source>
      </item>
      <item>
        <title>SQL Integration [UPDATED]</title>
        <dc:creator><![CDATA[@Project_Evolution Project Evolution]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/project_evolution">@Project_Evolution</a> wrote:</p>
          <blockquote>
              <p>[quote=“chri5, post:7, topic:340258”][quote author=Project Evolution link=topic=436622.msg3213928#msg3213928 date=1274540041]<br>
Why the FUCK would that be necessary when im only defining one new class.<br>
l2explaininsteadofpostinguselessshitlikethat<br>
[/quote]<br>
Relationships in your SQL you dick. Explain to me how 1 field with separated parameters is better than a new table (id and item_id) and then using a LEFT JOIN!</p>
<p>You sir are officially a retard.[/quote]</p>
<p>WHAT FIELD ARE YOU TALKING ABOUT? Is it that hard to express yourself? And dont call me a retard for what I posted above, because THIS is what I beleived you were reffering to,<br>
<a href="http://cnx.org/content/m11709/latest/" class="onebox" target="_blank" rel="nofollow noopener">http://cnx.org/content/m11709/latest/</a><br>
So stop thinking you can get the best of me you fucking dick.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/sql-integration-updated/340258/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/sql-integration-updated/340258/8</link>
        <pubDate>Sun, 23 May 2010 01:15:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-340258-8</guid>
        <source url="https://forum.moparisthebest.com/t/sql-integration-updated/340258.rss">SQL Integration [UPDATED]</source>
      </item>
      <item>
        <title>SQL Integration [UPDATED]</title>
        <dc:creator><![CDATA[@chri5 chri5]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/chri5">@chri5</a> wrote:</p>
          <blockquote>
              <p>[quote=“Project Evolution, post:6, topic:340258”]Why the FUCK would that be necessary when im only defining one new class.<br>
l2explaininsteadofpostinguselessshitlikethat[/quote]<br>
Relationships in your SQL you dick. Explain to me how 1 field with separated parameters is better than a new table (id and item_id) and then using a LEFT JOIN!</p>
<p>You sir are officially a retard.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/sql-integration-updated/340258/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/sql-integration-updated/340258/7</link>
        <pubDate>Sun, 23 May 2010 00:44:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-340258-7</guid>
        <source url="https://forum.moparisthebest.com/t/sql-integration-updated/340258.rss">SQL Integration [UPDATED]</source>
      </item>
      <item>
        <title>SQL Integration [UPDATED]</title>
        <dc:creator><![CDATA[@Project_Evolution Project Evolution]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/project_evolution">@Project_Evolution</a> wrote:</p>
          <blockquote>
              <p>Why the FUCK would that be necessary when im only defining one new class.<br>
l2explaininsteadofpostinguselessshitlikethat</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/sql-integration-updated/340258/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/sql-integration-updated/340258/6</link>
        <pubDate>Sat, 22 May 2010 14:54:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-340258-6</guid>
        <source url="https://forum.moparisthebest.com/t/sql-integration-updated/340258.rss">SQL Integration [UPDATED]</source>
      </item>
      <item>
        <title>SQL Integration [UPDATED]</title>
        <dc:creator><![CDATA[@chri5 chri5]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/chri5">@chri5</a> wrote:</p>
          <blockquote>
              <p>l2relationship</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/sql-integration-updated/340258/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/sql-integration-updated/340258/5</link>
        <pubDate>Sat, 22 May 2010 12:28:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-340258-5</guid>
        <source url="https://forum.moparisthebest.com/t/sql-integration-updated/340258.rss">SQL Integration [UPDATED]</source>
      </item>
      <item>
        <title>SQL Integration [UPDATED]</title>
        <dc:creator><![CDATA[@Project_Evolution Project Evolution]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/project_evolution">@Project_Evolution</a> wrote:</p>
          <blockquote>
              <p>Good idea, I may redo some parts like you suggested. Ill talk to you on MSN.<br>
Updated tutorial.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/sql-integration-updated/340258/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/sql-integration-updated/340258/4</link>
        <pubDate>Sun, 16 May 2010 15:43:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-340258-4</guid>
        <source url="https://forum.moparisthebest.com/t/sql-integration-updated/340258.rss">SQL Integration [UPDATED]</source>
      </item>
      <item>
        <title>SQL Integration [UPDATED]</title>
        <dc:creator><![CDATA[@_bool]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_bool">@_bool</a> wrote:</p>
          <blockquote>
              <p>If you submit multiple queries quickly it will block and be all slow and shit<br>
You should do a connection pool and submit query events to it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/sql-integration-updated/340258/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/sql-integration-updated/340258/3</link>
        <pubDate>Sun, 16 May 2010 03:34:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-340258-3</guid>
        <source url="https://forum.moparisthebest.com/t/sql-integration-updated/340258.rss">SQL Integration [UPDATED]</source>
      </item>
      <item>
        <title>SQL Integration [UPDATED]</title>
        <dc:creator><![CDATA[@the_elve_age the elve age]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_elve_age">@the_elve_age</a> wrote:</p>
          <blockquote>
              <p>Looks good, good job.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/sql-integration-updated/340258/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/sql-integration-updated/340258/2</link>
        <pubDate>Sun, 16 May 2010 01:59:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-340258-2</guid>
        <source url="https://forum.moparisthebest.com/t/sql-integration-updated/340258.rss">SQL Integration [UPDATED]</source>
      </item>
      <item>
        <title>SQL Integration [UPDATED]</title>
        <dc:creator><![CDATA[@Project_Evolution Project Evolution]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/project_evolution">@Project_Evolution</a> wrote:</p>
          <blockquote>
              <p>Today im going to post a tutorial on how to setup a database to connect with your server, along with full player loading/saving. Lets get started.</p>
<p>Note that this tutorial is being based on a 317 source, but the foundation of this tutorial can be applied to any other revision.</p>
<p>First off, we are going to get a database set up. Setting up your own MySQL database isnt what I cover here, but you can using a webhost or from using MySQL on your own computer. However, if your looking for a free database without having to register with a webhost or having to have the database on your computer, you should try <a href="http://db4free.net" data-bbcode="true" rel="nofollow noopener">http://db4free.net</a>.</p>
<p>After your database has been setup, Java needs to be able to connect to this database. We are going to use whats called the JDBC (<span class="bbcode-b">J</span>ava <span class="bbcode-b">D</span>ata<span class="bbcode-b">B</span>ase <span class="bbcode-b">C</span>onnectivity) Driver. I have attatched the download link to the bottom of this topic. Using JDBC, we will be able to connect to your database.</p>
<p>Download the JDBC package at the bottom, and download/extract to your server source. Once extracted, a folder named <span class="bbcode-i">mysql-connector-java-5.1.6</span> will appear. Go through the folder until you see a JAR file. Get the path to the JAR file. If you downloaded the JDBC driver from this topic, the path should be,<br>
<span class="bbcode-i">mysql-connector-java-5.1.6\mysql-connector-java-5.1.6-bin.jar</span><br>
Remember that path! Once you are sure you ha\ve the correct path, place a path to the JAR file in your run console. This is how mine looks,</p>
<blockquote>java -cp .;.\mysql-connector-java-5.1.6\mysql-connector-java-5.1.6-bin.jar server</blockquote>
Yours will probably be similar/exact.
<p>Next, we need to actually configure the server. At the top of the server class (inside the class however), add this,</p>
<pre><code class="lang-auto">public static DBConnectionPool dbConnectPool = null;</code></pre>
<p>And add this under the main method (public static void main(java.lang.String args[])),</p>
<p><code>dbConnectPool = new DBConnectionPool("db4free.net", 3306, "pkevolution_serv", "calandra", "sql_pkevolution");
dbConnectPool.connect();</code></p>
<p>And create a file named DBConnectionPool.java with these inside, (thanks to (Anthony) who helped improve this tutorial by showing me how to use a connection pool)</p>
<p>[code=java]<br>
/*</p>
<ul>
<li>Copyright © 2010 Anthony Snavely</li>
<li>
</li>
<li>This program is free software. It comes without any warranty, to</li>
<li>the extent permitted by applicable law. You can redistribute it</li>
<li>and/or modify it under the terms of the Do What The Fuck You Want</li>
<li>To Public License, Version 2, as published by Sam Hocevar. See</li>
<li>
<a href="http://sam.zoy.org/wtfpl/COPYING" rel="nofollow noopener">http://sam.zoy.org/wtfpl/COPYING</a> for more details.<br>
*/</li>
</ul>
<p>import java.sql.Connection;<br>
import java.sql.DriverManager;<br>
import java.sql.ResultSet;<br>
import java.sql.SQLException;<br>
import java.sql.Statement;<br>
import java.util.concurrent.ArrayBlockingQueue;</p>
<p>/**<br>
*</p>
<ul>
<li>
<p><span class="mention">@author</span> Anthony Snavely <a href="mailto:anthony.snavely@gmail.com">anthony.snavely@gmail.com</a><br>
*/<br>
public class DBConnectionPool {</p>
<p>public static final int POOL_SIZE = 10;<br>
private static int port;<br>
private static String host, user, pass, database;<br>
private static ArrayBlockingQueue dbStatements = new ArrayBlockingQueue(POOL_SIZE);<br>
private static Statement statement;</p>
<p>public DBConnectionPool(String host, int port, String user, String pass, String database) {<br>
this.host = host;<br>
this.port = port;<br>
this.user = user;<br>
this.pass = pass;<br>
this.database = database;<br>
}</p>
<p>public void connect() {<br>
for (int i = 0; i &lt; POOL_SIZE; i++) {<br>
try {<br>
Class.forName(“com.mysql.jdbc.Driver”).newInstance();<br>
Connection conn = DriverManager.getConnection(“jdbc:mysql://” + host + “:” + port + “/” + database, user, pass);<br>
statement = conn.createStatement();<br>
statement.setEscapeProcessing(true);<br>
dbStatements.offer(statement);<br>
} catch (Exception e) {<br>
e.printStackTrace();<br>
System.out.println(“Cannot connect to database!”);<br>
}<br>
}<br>
}</p>
<p>public static ResultSet executeQuery(String query) {<br>
try {<br>
statement = dbStatements.poll();<br>
ResultSet results = statement.executeQuery(query);<br>
dbStatements.offer(statement);<br>
return results;<br>
} catch (SQLException ex) {<br>
ex.printStackTrace();<br>
}<br>
return null;<br>
}</p>
<p>public static int executeUpdate(String query) {<br>
try {<br>
statement = dbStatements.poll();<br>
int results = statement.executeUpdate(query);<br>
dbStatements.offer(statement);<br>
return results;<br>
} catch (SQLException ex) {<br>
ex.printStackTrace();<br>
}<br>
return -1;<br>
}</p>
<p>public static Statement getNextStatement() {<br>
return dbStatements.poll();<br>
}</p>
<p>public static void closeConnection() {<br>
try {<br>
for (int i = 0; i &lt; dbStatements.size(); i++)<br>
dbStatements.remove(i);<br>
statement.getConnection().close();<br>
} catch (SQLException ex) {<br>
ex.printStackTrace();<br>
}<br>
}<br>
}[/code]</p>
</li>
</ul>
<p>You need to set the getConnection() method in the createConnection() method manually. There is an example provided,</p>
<pre><code class="lang-auto">// ("jdbc:mysql://SQL IP/DATABASENAME" "SQLUser" "SQLPass")</code></pre>
<p>Compile, and if successfully done, should compile with no errors. Run the server, and if there are no errors, you have done well.</p>
<p>Next up, we are going to add player loading/saving with a database. Why? It has been proven Databases are <span class="bbcode-b">MUCH</span> faster than text files, and are even faster when there are many instances of them. So for example, the more player files, the more a database can be of assistance. Not only are databases faster, they are easier to work with (if you know some basic SQL syntax).</p>
<p>[center]<em>During these steps it is highly recommended you backup your server, because if done incorrectly, can destroy your loading/saving methods! You may need to make some simple changes depending on your source.</em>[/center]</p>
<p>Start by heading into your database and running the following SQL queries,</p>
<h2>[code]-----------------------------------------------------------<br>
– Table structure for table <code>player</code>
</h2>
<p>CREATE TABLE IF NOT EXISTS <code>player</code> (<br>
<code>username</code> varchar(20) NOT NULL,<br>
<code>password</code> varchar(32) NOT NULL,<br>
<code>rights</code> tinyint(4) NOT NULL,<br>
<code>x</code> smallint(6) NOT NULL,<br>
<code>y</code> smallint(6) NOT NULL,<br>
<code>height</code> tinyint(5) NOT NULL,<br>
PRIMARY KEY (<code>username</code>)<br>
);</p>
<h2>–<br>
– Table structure for table <code>playerdata</code>
</h2>
<p>CREATE TABLE IF NOT EXISTS <code>playerdata</code> (<br>
<code>username</code> varchar(20) NOT NULL,<br>
<code>appearance</code> text NOT NULL,<br>
<code>skills</code> text NOT NULL,<br>
<code>skillsxp</code> text NOT NULL,<br>
<code>item</code> text NOT NULL,<br>
<code>itemN</code> text NOT NULL,<br>
<code>bank</code> text NOT NULL,<br>
<code>bankN</code> text NOT NULL,<br>
<code>equipment</code> text NOT NULL,<br>
<code>equipmentN</code> text NOT NULL,<br>
<code>friends</code> text NOT NULL,<br>
<code>ignores</code> text NOT NULL,<br>
PRIMARY KEY (<code>username</code>)<br>
);[/code]</p>
<p>Make sure you actually have a database setup!<br>
Once you are sure all the tables and coloumns have been setup, we may proceed.</p>
<p>We are going to do some heavy editting. Go into the client class, and add these methods,</p>
<p>[code=java]	public String skillsToDatabase() {<br>
StringBuilder string = new StringBuilder();<br>
for (int i = 0; i &lt; playerLevel.length; i++)<br>
string.append(playerLevel[i]).append(":");<br>
return new String(string.deleteCharAt(string.length() - 1));<br>
}</p>
<pre><code>public String skillsxpToDatabase() {
	StringBuilder string = new StringBuilder();
	for (int i = 0; i &lt; playerLevel.length; i++)
		string.append(playerXP[i]).append(":");
	return new String(string.deleteCharAt(string.length() - 1));
}	

public String appearanceToDatabase() {
	int[] looks = getLook();
	StringBuilder string = new StringBuilder();
	for (int i : looks)
		string.append(i).append(":");
	return new String(string.deleteCharAt(string.length() - 1));
}

public String bankToDatabase() {
	StringBuilder string = new StringBuilder();
	for (int i = 0; i &lt; bankItems.length; i++)
		string.append(bankItems[i]).append(":");
	return new String(string.deleteCharAt(string.length() - 1));
}	

public String bankNToDatabase() {
	StringBuilder string = new StringBuilder();
	for (int i = 0; i &lt; bankItems.length; i++)
		string.append(bankItemsN[i]).append(":");
	return new String(string.deleteCharAt(string.length() - 1));
}

public String itemsToDatabase() {
	StringBuilder string = new StringBuilder();
	for (int i = 0; i &lt; playerItems.length; i++)
		string.append(playerItems[i]).append(":");
	return new String(string.deleteCharAt(string.length() - 1));
}

public String itemNToDatabase() {
	StringBuilder string = new StringBuilder();
	for (int i = 0; i &lt; playerItems.length; i++)
		string.append(playerItemsN[i]).append(":");
	return new String(string.deleteCharAt(string.length() - 1));
}

public String equipmentToDatabase() {
	StringBuilder string = new StringBuilder();
	for (int i = 0; i &lt; playerEquipment.length; i++)
		string.append(playerEquipment[i]).append(":");
	return new String(string.deleteCharAt(string.length() - 1));
}


public String equipmentNToDatabase() {
	StringBuilder string = new StringBuilder();
	for (int i = 0; i &lt; playerEquipmentN.length; i++)
		string.append(playerEquipmentN[i]).append(":");
	return new String(string.deleteCharAt(string.length() - 1));
}

public String friendsToDatabase() {
	StringBuilder string = new StringBuilder();
		for (int i = 0; i &lt; friends.length; i++)
			string.append(friends[i]).append(":");
		return new String(string.deleteCharAt(string.length() - 1));
}

public String ignoresToDatabase() {
	StringBuilder string = new StringBuilder();
		for (int i = 0; i &lt; ignores.length; i++)
			string.append(Long.toString(ignores[i])).append(":");
		return new String(string.deleteCharAt(string.length() - 1));
}[/code]
</code></pre>
<p>Head into your client class, and replace your entire savegame method(s) with this one method,</p>
<p>[code=java]	public void savegame(boolean logout) {</p>
<pre><code>	if ((playerName == null) || !validClient) {
		saveNeeded = false;
		return;
	}

	if (logout &amp;&amp; inTrade) {
		declineTrade();
	}

	String player2 = "`password` = '" + playerPass
			+ "',`rights` =  '" + playerRights
			+ "',`x` =  '" + absX + "'"
			+ ",`y` =  '" + absY + "'"
			+ ",`height` =  '" + heightLevel + "'";

	String player = "'" + playerName + "', '"
			+ playerPass + "', '"
			+ playerRights + "', '"
			+ absX
			+ "', '" + absY + "', '"
			+ heightLevel + "'";

	String playerData2 = "`appearance` = '"
			+ mysql.appearanceToDatabase() + "',`skills` =  '"
			+ mysql.skillsToDatabase() + "',`skillsxp` =  '"
			+ mysql.skillsxpToDatabase() + "',`item` =  '"
			+ mysql.itemsToDatabase() + "',`itemN` =  '"
			+ mysql.itemNToDatabase() + "',`bank` =  '"
			+ mysql.bankToDatabase() + "',`bankN` =  '"
			+ mysql.bankNToDatabase() + "',`equipment` =  '"
			+ mysql.equipmentToDatabase() + "',`equipmentN` =  '"
			+ mysql.equipmentNToDatabase() + "',`friends` =  '"
			+ mysql.friendsToDatabase() + "',`ignores` =  '"
			+ mysql.ignoresToDatabase() + "'";

	String playerData = "'" + playerName + "', '"
			+ mysql.appearanceToDatabase() + "', '"
			+ mysql.skillsToDatabase() + "', '"
			+ mysql.skillsxpToDatabase() + "', '"
			+ mysql.itemsToDatabase() + "', '"
			+ mysql.itemNToDatabase() + "', '"
			+ mysql.bankToDatabase() + "', '"
			+ mysql.bankNToDatabase() + "', '"
			+ mysql.equipmentToDatabase() + "', '" 
			+ mysql.equipmentNToDatabase() + "', '"
			+ mysql.friendsToDatabase() + "', '"
			+ mysql.ignoresToDatabase() + "'";

	DBConnectionPool.sqlQuery("INSERT INTO player (username, password, rights, x, y, height) VALUES ("+player+") ON duplicate KEY UPDATE "+player2+"");	
	DBConnectionPool.sqlQuery("INSERT INTO playerdata (username, appearance, skills, skillsxp, item, itemN, bank, bankN, equipment, equipmentN, friends, ignores) VALUES ("+playerData+") ON duplicate KEY UPDATE "+playerData2+"");
	saveNeeded = false;
}[/code]
</code></pre>
<p>The 4 strings are actually part of the SQL query. And the 2 sqlQuery() methods are what actually connect to the databse and execute queries. In this case, it is inserting player data into the database such as rights, username, password, etc.</p>
<p>Next off, we are going to edit the entire loadgame method,</p>
<p>[code=java]	public int loadgame(String playerName, String playerPass) {<br>
for (Integer bUid : server.bannedUid)<br>
if (uid == bUid.intValue())<br>
return 4;</p>
<pre><code>	long start = System.currentTimeMillis();
	int[] playerLooks = new int[19];

	ResultSet res = DBConnectionPool.sqlQuery("SELECT * FROM player, playerdata WHERE player.username = '"+playerName+"'");
	try {
		if (!res.next())
			return 4; // Change for every table
	
		playerName = res.getString("username");
		playerPass = res.getString("password");
		playerRights = res.getInt("rights");
		toX = res.getInt("x");
		toY = res.getInt("y");
		heightLevel = res.getInt("height");
		String[] storedData = res.getString("appearance").split(":");
		for (int i = 0; i &lt; 19; i++)
			playerLooks[i] = Integer.parseInt(storedData[i]);
		setLook(playerLooks);
		storedData = res.getString("equipment").split(":");
		for (int i = 0; i &lt; playerEquipment.length; i++)
			playerEquipment[i] = Integer.parseInt(storedData[i]);
		storedData = res.getString("equipmentN").split(":");
		for (int i = 0; i &lt; playerEquipmentN.length; i++)
			playerEquipmentN[i] = Integer.parseInt(storedData[i]);
		storedData = res.getString("skills").split(":");
		for (int i = 0; i &lt; playerLevel.length; i++)
			playerLevel[i] = Integer.parseInt(storedData[i]);
		storedData = res.getString("skillsxp").split(":");
		for (int i = 0; i &lt; playerXP.length; i++)
			playerXP[i] = Integer.parseInt(storedData[i]);
		storedData = res.getString("item").split(":");
		for (int i = 0; i &lt; playerItems.length; i++)
			playerItems[i] = Integer.parseInt(storedData[i]);
		storedData = res.getString("itemN").split(":");
		for (int i = 0; i &lt; playerItemsN.length; i++)
			playerItemsN[i] = Integer.parseInt(storedData[i]);
		storedData = res.getString("bank").split(":");
		for (int i = 0; i &lt; bankItems.length; i++)
			bankItems[i] = Integer.parseInt(storedData[i]);
		storedData = res.getString("bankN").split(":");
		for (int i = 0; i &lt; bankItems.length; i++)
			bankItemsN[i] = Integer.parseInt(storedData[i]);
		storedData = res.getString("friends").split(":");
		for (int i = 0; i &lt; friends.length; i++)
			friends[i] = Long.parseLong(storedData[i]);
		storedData = res.getString("ignores").split(":");
		for (int i = 0; i &lt; ignores.length; i++)
			ignores[i] = Long.parseLong(storedData[i]);
	} catch (Exception e) {
		e.printStackTrace();
	}

	updateRequired = true;
	appearanceUpdateRequired = true;
	long end = System.currentTimeMillis() - start;
	println("Loading Process Completed  ["+ (playerRights &gt; 0 ? "Has powers": "Regular player") + ", lag: " + end+ " ms]");
	return 0;
}[/code]
</code></pre>
<p>This method is now MUCH shorter than the last one. This simply connects to the database and grabs the players data. Take a good look at the loops and you will understand how it works.</p>
<p>And thats it! Full (My)SQL Integration for your server! In case I may have forgotten something, post any errors or problems with this tutorial. Perhaps I could have used a prepared statement to insert the values into a database? Can someone give me insight on this? And I probably should have used a StringBuilder instead of concatenating the strings. But I cbf on that one.</p>
<p>Partial credits to (Anthony), thanks.</p>
<p>Enjoy.<br>
<span class="bbcode-b">JDBC DOWNLOAD HERE:</span>  <a href="http://uppit.com/v/ZHC37I9S" rel="nofollow noopener">http://uppit.com/v/ZHC37I9S</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/sql-integration-updated/340258/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/sql-integration-updated/340258/1</link>
        <pubDate>Sun, 16 May 2010 01:28:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-340258-1</guid>
        <source url="https://forum.moparisthebest.com/t/sql-integration-updated/340258.rss">SQL Integration [UPDATED]</source>
      </item>
  </channel>
</rss>
