<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[Jython] mp3sorter</title>
    <link>https://forum.moparisthebest.com/t/jython-mp3sorter/430781</link>
    <description>[b]What is it?:[/b]
Recursively searches a given location for MP3&#39;s, reads the tags, and organizes the files into ARTIST/YEAR - ALBUM/TRACK format in the destination output directory. (same as my Java version [url=https://www.moparisthebest.com/smf/index.php/topic,533445.0.html]here[/url]) This was a really easy port, and very fun to use Jython for the first time (I&#39;ve written Python and Java alone, but this interpreter is very nice imo).

[b]Execution Instructions:[/b]
[code]
usage: MP3Sort [directory] [output] [extension]

[directory]: The directory to recursively search.
[output]: The directory to place the output.
[extension]: The extension of the audio files
[/code]

[b]Notes:[/b]
Only reason I imported Java String was because for some reason the python strip() was not working. I suppose I could have used Python&#39;s regex stuff too.

[b]Source:[/b]

[tt]MP3Sort.py[/tt]
[code=python]
#!/bin/env python
##
## MP3Sort.py
## Author: t4
#################################

import java.io.File as File
import java.io.FileInputStream as FileInputStream
import java.util.regex.Pattern as Pattern
import java.lang.String as String

import sys
from jarray import zeros

###############################

class RecursiveFileList:
    &#39;&#39;&#39;
        Provides an object that encapsulates a recursive file listing of a directory
    &#39;&#39;&#39;
    pattern = None
    list = []
    
    def __init__(self, directory, contains):
        rootDirectory = File(directory)
        self.pattern = contains
        self.generateListing(rootDirectory)
		
    def generateListing(self, current):
        for next in current.listFiles():
            if next.isDirectory():
                generateListing(next)
            elif next.isFile():
                if self.pattern is not None:
                    if self.pattern.matcher(next.getName().lower()).matches():
                        self.list += [next]
                else:
                    self.list += [next]

  
    def display(self):
        for item in self.list:
           print item.getCanonicalPath()

###############################

class MP3File:
    &#39;&#39;&#39;
        Wrapper containing MP3 ID3v1 tag data
    &#39;&#39;&#39;
    file_ = None
    artist = &quot;&quot;
    album = &quot;&quot;
    title = &quot;&quot;
    year = &quot;&quot;
    
    def __init__(self, file_):
        self.file_ = file_
        self.parseTagData()
        
    def parseTagData(self):
        fis = FileInputStream(self.file_)
        buffer_size = 128;
        buffer_ = zeros(buffer_size, &#39;b&#39;);
        fis.skip(self.file_.length() - buffer_size)
        fis.read(buffer_, 0, buffer_size)

        for i in range(3, 30):
            self.title += chr(buffer_[i])
        self.title = String(self.title).trim()
					
        for i in range(33, 63):
            self.artist += chr(buffer_[i])
        self.artist = String(self.artist).trim()
        
        for i in range(63, 93):
            self.album += chr(buffer_[i])
        self.album = String(self.album).trim()
        
        for i in range(93, 97):
            self.year += chr(buffer_[i])
	    self.year = self.year.strip()
	    
        fis.close()
        

###############################

def main():
    args = sys.argv
    #args = [&quot;../test/input&quot;, &quot;../test/output&quot;, &quot;mp3&quot;]
    if len(args) is not 3:
        print &quot;Usage: src_directory out_directory file_extension&quot;
        return
    
    r = RecursiveFileList(args[0], Pattern.compile(&quot;.*&quot; + args[2] + &quot;$&quot;))
    for item in r.list:
        mp3 = MP3File(item)
        print args[1] + &quot;/&quot; + mp3.artist + &quot;/&quot; + mp3.year + &quot; - &quot; + mp3.album
        dir_ = File(args[1] + &quot;/&quot; + mp3.artist + &quot;/&quot; + mp3.year + &quot; - &quot; + mp3.album)
        dir_.mkdirs()
        dest = File(args[1] + &quot;/&quot; + mp3.artist + &quot;/&quot; + mp3.year + &quot; - &quot; + mp3.album + &quot;/&quot; + mp3.title + &quot;.&quot; + args[2])
        mp3.file_.renameTo(dest);
        print &quot;Moved &quot; + str(mp3.file_.getCanonicalPath()) + &quot; to &quot; + str(dest.getCanonicalPath())
    
main()
[/code]</description>
    
    <lastBuildDate>Thu, 02 Feb 2012 17:26:58 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/jython-mp3sorter/430781.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[Jython] mp3sorter</title>
        <dc:creator><![CDATA[@Phillipe Phillipé]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/phillipe">@Phillipe</a> wrote:</p>
          <blockquote>
              <p>Stop being a tramp and use jpype</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/jython-mp3sorter/430781/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/jython-mp3sorter/430781/6</link>
        <pubDate>Thu, 02 Feb 2012 17:26:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430781-6</guid>
        <source url="https://forum.moparisthebest.com/t/jython-mp3sorter/430781.rss">[Jython] mp3sorter</source>
      </item>
      <item>
        <title>[Jython] mp3sorter</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <p>[quote=“Ollie, post:4, topic:430781”][quote author=SETO link=topic=533457.msg3899759#msg3899759 date=1327642224]<br>
don’t get this why do you have this, in C++,and Java???<br>
[/quote]</p>
<p>for comparative reasons.</p>
<p>Thanks.[/quote]<br>
exactly, I am comfortable in all the languages and wanted to see what each implementation would look like</p>
<aside class="quote" data-post="3" data-topic="430781">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/sinisoul/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> sinisoul:</div>
<blockquote>
<p>lisp next</p>
</blockquote>
</aside>
<p>clojure - but first i must learn lisp!!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/jython-mp3sorter/430781/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/jython-mp3sorter/430781/5</link>
        <pubDate>Fri, 27 Jan 2012 18:12:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430781-5</guid>
        <source url="https://forum.moparisthebest.com/t/jython-mp3sorter/430781.rss">[Jython] mp3sorter</source>
      </item>
      <item>
        <title>[Jython] mp3sorter</title>
        <dc:creator><![CDATA[@Ollie Ollie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ollie">@Ollie</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="2" data-topic="430781">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/seto/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> SETO:</div>
<blockquote>
<p>don’t get this why do you have this, in C++,and Java???</p>
</blockquote>
</aside>
<p>for comparative reasons.</p>
<p>Thanks.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/jython-mp3sorter/430781/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/jython-mp3sorter/430781/4</link>
        <pubDate>Fri, 27 Jan 2012 10:10:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430781-4</guid>
        <source url="https://forum.moparisthebest.com/t/jython-mp3sorter/430781.rss">[Jython] mp3sorter</source>
      </item>
      <item>
        <title>[Jython] mp3sorter</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>lisp next</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/jython-mp3sorter/430781/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/jython-mp3sorter/430781/3</link>
        <pubDate>Fri, 27 Jan 2012 06:28:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430781-3</guid>
        <source url="https://forum.moparisthebest.com/t/jython-mp3sorter/430781.rss">[Jython] mp3sorter</source>
      </item>
      <item>
        <title>[Jython] mp3sorter</title>
        <dc:creator><![CDATA[@SETO SETO]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/seto">@SETO</a> wrote:</p>
          <blockquote>
              <p>don’t get this why do you have this, in C++,and Java???</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/jython-mp3sorter/430781/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/jython-mp3sorter/430781/2</link>
        <pubDate>Fri, 27 Jan 2012 05:30:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430781-2</guid>
        <source url="https://forum.moparisthebest.com/t/jython-mp3sorter/430781.rss">[Jython] mp3sorter</source>
      </item>
      <item>
        <title>[Jython] mp3sorter</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <p><span class="bbcode-b">What is it?:</span><br>
Recursively searches a given location for MP3’s, reads the tags, and organizes the files into ARTIST/YEAR - ALBUM/TRACK format in the destination output directory. (same as my Java version <a href="https://www.moparisthebest.com/smf/index.php/topic,533445.0.html" data-bbcode="true" rel="nofollow noopener">here</a>) This was a really easy port, and very fun to use Jython for the first time (I’ve written Python and Java alone, but this interpreter is very nice imo).</p>
<p><span class="bbcode-b">Execution Instructions:</span></p>
<pre><code class="lang-auto">usage: MP3Sort [directory] [output] [extension]

[directory]: The directory to recursively search.
[output]: The directory to place the output.
[extension]: The extension of the audio files</code></pre>
<p><span class="bbcode-b">Notes:</span><br>
Only reason I imported Java String was because for some reason the python strip() was not working. I suppose I could have used Python’s regex stuff too.</p>
<p><span class="bbcode-b">Source:</span></p>
<p>[tt]MP3Sort.py[/tt]</p>
<pre><code class="lang-auto">#!/bin/env python
##
## MP3Sort.py
## Author: t4
#################################

import java.io.File as File
import java.io.FileInputStream as FileInputStream
import java.util.regex.Pattern as Pattern
import java.lang.String as String

import sys
from jarray import zeros

###############################

class RecursiveFileList:
    '''
        Provides an object that encapsulates a recursive file listing of a directory
    '''
    pattern = None
    list = []
    
    def __init__(self, directory, contains):
        rootDirectory = File(directory)
        self.pattern = contains
        self.generateListing(rootDirectory)
		
    def generateListing(self, current):
        for next in current.listFiles():
            if next.isDirectory():
                generateListing(next)
            elif next.isFile():
                if self.pattern is not None:
                    if self.pattern.matcher(next.getName().lower()).matches():
                        self.list += [next]
                else:
                    self.list += [next]

  
    def display(self):
        for item in self.list:
           print item.getCanonicalPath()

###############################

class MP3File:
    '''
        Wrapper containing MP3 ID3v1 tag data
    '''
    file_ = None
    artist = ""
    album = ""
    title = ""
    year = ""
    
    def __init__(self, file_):
        self.file_ = file_
        self.parseTagData()
        
    def parseTagData(self):
        fis = FileInputStream(self.file_)
        buffer_size = 128;
        buffer_ = zeros(buffer_size, 'b');
        fis.skip(self.file_.length() - buffer_size)
        fis.read(buffer_, 0, buffer_size)

        for i in range(3, 30):
            self.title += chr(buffer_[i])
        self.title = String(self.title).trim()
					
        for i in range(33, 63):
            self.artist += chr(buffer_[i])
        self.artist = String(self.artist).trim()
        
        for i in range(63, 93):
            self.album += chr(buffer_[i])
        self.album = String(self.album).trim()
        
        for i in range(93, 97):
            self.year += chr(buffer_[i])
	    self.year = self.year.strip()
	    
        fis.close()
        

###############################

def main():
    args = sys.argv
    #args = ["../test/input", "../test/output", "mp3"]
    if len(args) is not 3:
        print "Usage: src_directory out_directory file_extension"
        return
    
    r = RecursiveFileList(args[0], Pattern.compile(".*" + args[2] + "$"))
    for item in r.list:
        mp3 = MP3File(item)
        print args[1] + "/" + mp3.artist + "/" + mp3.year + " - " + mp3.album
        dir_ = File(args[1] + "/" + mp3.artist + "/" + mp3.year + " - " + mp3.album)
        dir_.mkdirs()
        dest = File(args[1] + "/" + mp3.artist + "/" + mp3.year + " - " + mp3.album + "/" + mp3.title + "." + args[2])
        mp3.file_.renameTo(dest);
        print "Moved " + str(mp3.file_.getCanonicalPath()) + " to " + str(dest.getCanonicalPath())
    
main()</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/jython-mp3sorter/430781/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/jython-mp3sorter/430781/1</link>
        <pubDate>Fri, 27 Jan 2012 04:44:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-430781-1</guid>
        <source url="https://forum.moparisthebest.com/t/jython-mp3sorter/430781.rss">[Jython] mp3sorter</source>
      </item>
  </channel>
</rss>
