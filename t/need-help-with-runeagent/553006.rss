<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Need help with Runeagent</title>
    <link>https://forum.moparisthebest.com/t/need-help-with-runeagent/553006</link>
    <description>The error I got was &quot;ReferenceError: &quot;stream&quot; is not defined in nashorn:mozilla_compat.js at line number 67&quot;. This happens when I try to execute the script. Also the quick input is not working. I got most of the methods already but cannot seem to find the IsaacCipher class and method403. I have tried numerous times to finding it but have failed. I would really appreciate all the help these forums can offer.</description>
    
    <lastBuildDate>Tue, 18 Aug 2015 05:14:04 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/need-help-with-runeagent/553006.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Need help with Runeagent</title>
        <dc:creator><![CDATA[@mrbad23 mrbad23]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mrbad23">@mrbad23</a> wrote:</p>
          <blockquote>
              <p>[quote=“sini, post:4, topic:553006”]one is a bitmap font<br>
one is the buffer class, yes[/quote]</p>
<p>What do you mean? Can you please explain?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/need-help-with-runeagent/553006/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/need-help-with-runeagent/553006/5</link>
        <pubDate>Tue, 18 Aug 2015 05:14:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-553006-5</guid>
        <source url="https://forum.moparisthebest.com/t/need-help-with-runeagent/553006.rss">Need help with Runeagent</source>
      </item>
      <item>
        <title>Need help with Runeagent</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>one is a bitmap font<br>
one is the buffer class, yes</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/need-help-with-runeagent/553006/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/need-help-with-runeagent/553006/4</link>
        <pubDate>Tue, 18 Aug 2015 05:05:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-553006-4</guid>
        <source url="https://forum.moparisthebest.com/t/need-help-with-runeagent/553006.rss">Need help with Runeagent</source>
      </item>
      <item>
        <title>Need help with Runeagent</title>
        <dc:creator><![CDATA[@mrbad23 mrbad23]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mrbad23">@mrbad23</a> wrote:</p>
          <blockquote>
              <p>[quote=“Miss Silabsoft, post:2, topic:553006”]the IsaacCipher class can be identified easily enough by looking for the class that has 2 integer arrays with the size of 256</p>
<p>[code]<br>
package bot.update.transformer;</p>
<p>import org.apache.bcel.classfile.Field;<br>
import org.apache.bcel.classfile.JavaClass;<br>
import org.apache.bcel.classfile.Method;<br>
import org.apache.bcel.generic.*;</p>
<p>/**<br>
*</p>
<ul>
<li>
<p><span class="mention">@author</span> Silabsoft<br>
*/<br>
public class IsaacCipherTransformer extends Transformer {</p>
<p><a class="mention" href="/u/override">@Override</a><br>
public boolean find(JavaClass javaClass) {<br>
int count = 0;<br>
int countB = 0;</p>
<pre><code> for (Field f : javaClass.getFields()) {
     if (f.getType().equals(integerArrayType) &amp;&amp; !f.isStatic()) {
         count++;
     }

 }
 ClassGen cg = new ClassGen(javaClass);
 boolean f = false;
 for (Method m : javaClass.getMethods()) {

     MethodGen mg = new MethodGen(m, className, cg.getConstantPool());
     InstructionList il = mg.getInstructionList();
     if (il == null) {
         continue;
     }
     for (InstructionHandle h : il.getInstructionHandles()) {
         Instruction x = h.getInstruction();
         if (x instanceof SIPUSH) {
             if (((SIPUSH) x).getValue().intValue() == 256 &amp;&amp; h.getNext().getInstruction() instanceof NEWARRAY) {
                 countB++;
             }
         }

     }
 }
 if (count == 2 &amp;&amp; countB == 2) {
     types.put("isaac", new ObjectType(className));
    
     return true;
 }
 return false;
</code></pre>
<p>}</p>
<p><a class="mention" href="/u/override">@Override</a><br>
public boolean transform(JavaClass javaClass) {<br>
return true;<br>
}</p>
<p><a class="mention" href="/u/override">@Override</a><br>
public void finish() {<br>
}<br>
}<br>
[/code][/quote]</p>
</li>
</ul>
<p>I cant find the two integer arrays with 256. The file I found has 5 integer 256 which i think is the isaacCipher. Also the method403 i cant find in the stream class. Every advice given will be appreciated.<br>
This is the class that I believe is the IsaacCipher</p>
<pre><code class="lang-auto">import java.util.Random;

public final class as extends v {
   private byte[][] b = new byte[256][];
   private int[] c = new int[256];
   private int[] d = new int[256];
   private int[] e = new int[256];
   private int[] f = new int[256];
   private int[] g = new int[256];
   public int a;
   private Random r = new Random();
   private boolean s = false;

   public as(boolean var1, String var2, aq var3) {
      ap var9 = new ap(var3.a(var2 + ".dat"));
      ap var10;
      (var10 = new ap(var3.a("index.dat"))).b = var9.f() + 4;
      int var4;
      if((var4 = var10.d()) &gt; 0) {
         var10.b += 3 * (var4 - 1);
      }

      for(var4 = 0; var4 &lt; 256; ++var4) {
         this.e[var4] = var10.d();
         this.f[var4] = var10.d();
         int var5 = this.c[var4] = var10.f();
         int var6 = this.d[var4] = var10.f();
         int var7 = var10.d();
         int var8 = var5 * var6;
         this.b[var4] = new byte[var8];
         if(var7 == 0) {
            for(var7 = 0; var7 &lt; var8; ++var7) {
               this.b[var4][var7] = var9.e();
            }
         } else if(var7 == 1) {
            for(var7 = 0; var7 &lt; var5; ++var7) {
               for(var8 = 0; var8 &lt; var6; ++var8) {
                  this.b[var4][var7 + var8 * var5] = var9.e();
               }
            }
         }

         if(var6 &gt; this.a &amp;&amp; var4 &lt; 128) {
            this.a = var6;
         }

         this.e[var4] = 1;
         this.g[var4] = var5 + 2;
         var7 = 0;

         for(var8 = var6 / 7; var8 &lt; var6; ++var8) {
            var7 += this.b[var4][var8 * var5];
         }

         if(var7 &lt;= var6 / 7) {
            --this.g[var4];
            this.e[var4] = 0;
         }

         var7 = 0;

         for(var8 = var6 / 7; var8 &lt; var6; ++var8) {
            var7 += this.b[var4][var5 - 1 + var8 * var5];
         }

         if(var7 &lt;= var6 / 7) {
            --this.g[var4];
         }
      }

      if(var1) {
         this.g[32] = this.g[73];
      } else {
         this.g[32] = this.g[105];
      }
   }

   public final void a(String var1, int var2, int var3, int var4) {
      this.b(var3, var1, var4, 507 - this.b(var1));
   }

   public final void a(int var1, String var2, int var3, int var4) {
      this.b(var1, var2, var3, var4 - this.b(var2) / 2);
   }

   public final void a(int var1, int var2, String var3, int var4, boolean var5) {
      this.a(var5, var2 - this.a(var3) / 2, var1, var3, var4);
   }

   public final void b(int var1, int var2, String var3, int var4, boolean var5) {
      this.a(false, var2, 255, var3, var4);
   }

   public final int a(String var1) {
      if(var1 == null) {
         return 0;
      } else {
         int var2 = 0;

         for(int var3 = 0; var3 &lt; var1.length(); ++var3) {
            if(var1.charAt(var3) == 64 &amp;&amp; var3 + 4 &lt; var1.length() &amp;&amp; var1.charAt(var3 + 4) == 64) {
               var3 += 4;
            } else {
               var2 += this.g[var1.charAt(var3)];
            }
         }

         return var2;
      }
   }

   public final int b(String var1) {
      if(var1 == null) {
         return 0;
      } else {
         int var2 = 0;

         for(int var3 = 0; var3 &lt; var1.length(); ++var3) {
            var2 += this.g[var1.charAt(var3)];
         }

         return var2;
      }
   }

   public final void b(int var1, String var2, int var3, int var4) {
      if(var2 != null) {
         var3 -= this.a;

         for(int var5 = 0; var5 &lt; var2.length(); ++var5) {
            char var6;
            if((var6 = var2.charAt(var5)) != 32) {
               this.a(this.b[var6], var4 + this.e[var6], var3 + this.f[var6], this.c[var6], this.d[var6], var1);
            }

            var4 += this.g[var6];
         }

      }
   }

   public final void a(int var1, String var2, int var3, int var4, int var5) {
      if(var2 != null) {
         var3 -= this.b(var2) / 2;
         var5 -= this.a;

         for(int var6 = 0; var6 &lt; var2.length(); ++var6) {
            char var7;
            if((var7 = var2.charAt(var6)) != 32) {
               this.a(this.b[var7], var3 + this.e[var7], var5 + this.f[var7] + (int)(Math.sin((double)var6 / 2.0D + (double)var4 / 5.0D) * 5.0D), this.c[var7], this.d[var7], var1);
            }

            var3 += this.g[var7];
         }

      }
   }

   public final void b(int var1, String var2, int var3, int var4, int var5) {
      if(var2 != null) {
         var1 -= this.b(var2) / 2;
         var4 -= this.a;

         for(int var6 = 0; var6 &lt; var2.length(); ++var6) {
            char var7;
            if((var7 = var2.charAt(var6)) != 32) {
               this.a(this.b[var7], var1 + this.e[var7] + (int)(Math.sin((double)var6 / 5.0D + (double)var3 / 5.0D) * 5.0D), var4 + this.f[var7] + (int)(Math.sin((double)var6 / 3.0D + (double)var3 / 5.0D) * 5.0D), this.c[var7], this.d[var7], var5);
            }

            var1 += this.g[var7];
         }

      }
   }

   public final void a(int var1, String var2, int var3, int var4, int var5, int var6) {
      if(var2 != null) {
         double var7;
         if((var7 = 7.0D - (double)var1 / 8.0D) &lt; 0.0D) {
            var7 = 0.0D;
         }

         var5 -= this.b(var2) / 2;
         var4 -= this.a;

         for(var1 = 0; var1 &lt; var2.length(); ++var1) {
            char var9;
            if((var9 = var2.charAt(var1)) != 32) {
               this.a(this.b[var9], var5 + this.e[var9], var4 + this.f[var9] + (int)(Math.sin((double)var1 / 1.5D + (double)var3) * var7), this.c[var9], this.d[var9], var6);
            }

            var5 += this.g[var9];
         }

      }
   }

   public final void a(boolean var1, int var2, int var3, String var4, int var5) {
      this.s = false;
      int var6 = var2;
      if(var4 != null) {
         var5 -= this.a;

         for(int var7 = 0; var7 &lt; var4.length(); ++var7) {
            if(var4.charAt(var7) == 64 &amp;&amp; var7 + 4 &lt; var4.length() &amp;&amp; var4.charAt(var7 + 4) == 64) {
               int var9;
               if((var9 = this.c(var4.substring(var7 + 1, var7 + 4))) != -1) {
                  var3 = var9;
               }

               var7 += 4;
            } else {
               char var8;
               if((var8 = var4.charAt(var7)) != 32) {
                  if(var1) {
                     this.a(this.b[var8], var2 + this.e[var8] + 1, var5 + this.f[var8] + 1, this.c[var8], this.d[var8], 0);
                  }

                  this.a(this.b[var8], var2 + this.e[var8], var5 + this.f[var8], this.c[var8], this.d[var8], var3);
               }

               var2 += this.g[var8];
            }
         }

         if(this.s) {
            v.b(var5 + (int)((double)this.a * 0.7D), 8388608, var2 - var6, var6);
         }

      }
   }

   public final void a(int var1, int var2, String var3, int var4, int var5) {
      if(var3 != null) {
         this.r.setSeed((long)var4);
         var4 = 192 + (this.r.nextInt() &amp; 31);
         var5 = 15 - this.a;

         for(int var6 = 0; var6 &lt; var3.length(); ++var6) {
            if(var3.charAt(var6) == 64 &amp;&amp; var6 + 4 &lt; var3.length() &amp;&amp; var3.charAt(var6 + 4) == 64) {
               int var8;
               if((var8 = this.c(var3.substring(var6 + 1, var6 + 4))) != -1) {
                  var2 = var8;
               }

               var6 += 4;
            } else {
               char var7;
               if((var7 = var3.charAt(var6)) != 32) {
                  this.a(192, var1 + this.e[var7] + 1, this.b[var7], this.c[var7], var5 + this.f[var7] + 1, this.d[var7], 0);
                  this.a(var4, var1 + this.e[var7], this.b[var7], this.c[var7], var5 + this.f[var7], this.d[var7], var2);
               }

               var1 += this.g[var7];
               if((this.r.nextInt() &amp; 3) == 0) {
                  ++var1;
               }
            }
         }

      }
   }

   private int c(String var1) {
      if(var1.equals("369")) {
         return 3368601;
      } else if(var1.equals("mon")) {
         return 'ﾀ';
      } else if(var1.equals("red")) {
         return 16711680;
      } else if(var1.equals("gre")) {
         return '\uff00';
      } else if(var1.equals("blu")) {
         return 255;
      } else if(var1.equals("yel")) {
         return 16776960;
      } else if(var1.equals("cya")) {
         return '\uffff';
      } else if(var1.equals("mag")) {
         return 16711935;
      } else if(var1.equals("whi")) {
         return 16777215;
      } else if(var1.equals("bla")) {
         return 0;
      } else if(var1.equals("lre")) {
         return 16748608;
      } else if(var1.equals("dre")) {
         return 8388608;
      } else if(var1.equals("dbl")) {
         return 128;
      } else if(var1.equals("or1")) {
         return 16756736;
      } else if(var1.equals("or2")) {
         return 16740352;
      } else if(var1.equals("or3")) {
         return 16723968;
      } else if(var1.equals("gr1")) {
         return 12648192;
      } else if(var1.equals("gr2")) {
         return 8453888;
      } else if(var1.equals("gr3")) {
         return 4259584;
      } else {
         if(var1.equals("str")) {
            this.s = true;
         }

         if(var1.equals("end")) {
            this.s = false;
         }

         return -1;
      }
   }

   private void a(byte[] var1, int var2, int var3, int var4, int var5, int var6) {
      int var7 = var2 + var3 * i;
      int var8 = i - var4;
      int var9 = 0;
      int var10 = 0;
      int var11;
      if(var3 &lt; k) {
         var11 = k - var3;
         var5 -= var11;
         var3 = k;
         var10 = 0 + var11 * var4;
         var7 += var11 * i;
      }

      if(var3 + var5 &gt;= l) {
         var5 -= var3 + var5 - l;
      }

      if(var2 &lt; m) {
         var11 = m - var2;
         var4 -= var11;
         var2 = m;
         var10 += var11;
         var7 += var11;
         var9 = var11 + 0;
         var8 += var11;
      }

      if(var2 + var4 &gt;= n) {
         var11 = var2 + var4 - n;
         var4 -= var11;
         var9 += var11;
         var8 += var11;
      }

      if(var4 &gt; 0 &amp;&amp; var5 &gt; 0) {
         int var10002 = var6;
         int var10004 = var7;
         var9 = var9;
         var8 = var8;
         var7 = var5;
         var6 = var4;
         var5 = var10004;
         var4 = var10;
         var3 = var10002;
         byte[] var13 = var1;
         int[] var12 = h;
         var10 = -(var6 &gt;&gt; 2);
         var6 = -(var6 &amp; 3);

         for(var7 = -var7; var7 &lt; 0; ++var7) {
            for(var11 = var10; var11 &lt; 0; ++var11) {
               if(var13[var4++] != 0) {
                  var12[var5++] = var3;
               } else {
                  ++var5;
               }

               if(var13[var4++] != 0) {
                  var12[var5++] = var3;
               } else {
                  ++var5;
               }

               if(var13[var4++] != 0) {
                  var12[var5++] = var3;
               } else {
                  ++var5;
               }

               if(var13[var4++] != 0) {
                  var12[var5++] = var3;
               } else {
                  ++var5;
               }
            }

            for(var11 = var6; var11 &lt; 0; ++var11) {
               if(var13[var4++] != 0) {
                  var12[var5++] = var3;
               } else {
                  ++var5;
               }
            }

            var5 += var8;
            var4 += var9;
         }
      }

   }

   private void a(int var1, int var2, byte[] var3, int var4, int var5, int var6, int var7) {
      int var8 = var2 + var5 * i;
      int var9 = i - var4;
      int var10 = 0;
      int var11 = 0;
      int var12;
      if(var5 &lt; k) {
         var12 = k - var5;
         var6 -= var12;
         var5 = k;
         var11 = 0 + var12 * var4;
         var8 += var12 * i;
      }

      if(var5 + var6 &gt;= l) {
         var6 -= var5 + var6 - l;
      }

      if(var2 &lt; m) {
         var12 = m - var2;
         var4 -= var12;
         var2 = m;
         var11 += var12;
         var8 += var12;
         var10 = var12 + 0;
         var9 += var12;
      }

      if(var2 + var4 &gt;= n) {
         var12 = var2 + var4 - n;
         var4 -= var12;
         var10 += var12;
         var9 += var12;
      }

      if(var4 &gt; 0 &amp;&amp; var6 &gt; 0) {
         int var10001 = var6;
         int var10002 = var8;
         int var10007 = var9;
         var9 = var7;
         var8 = var10007;
         var7 = var10;
         var6 = var4;
         var5 = var11;
         int[] var15 = h;
         int var14 = var10002;
         var2 = var10001;
         byte[] var13 = var3;
         var9 = ((var9 &amp; 16711935) * var1 &amp; -16711936) + ((var9 &amp; '\uff00') * var1 &amp; 16711680) &gt;&gt; 8;
         var10 = 256 - var1;

         for(var2 = -var2; var2 &lt; 0; ++var2) {
            for(var11 = -var6; var11 &lt; 0; ++var11) {
               if(var13[var5++] != 0) {
                  var12 = var15[var14];
                  var15[var14++] = (((var12 &amp; 16711935) * var10 &amp; -16711936) + ((var12 &amp; '\uff00') * var10 &amp; 16711680) &gt;&gt; 8) + var9;
               } else {
                  ++var14;
               }
            }

            var14 += var8;
            var5 += var7;
         }

      }
   }
}</code></pre>
<p>And this is the stream class, which I can’t find method403.</p>
<pre><code class="lang-auto">import java.io.UnsupportedEncodingException;

public final class ap extends S {
   public byte[] a;
   public int b;
   public int c;
   private static final int[] e = new int[]{0, 1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, '\uffff', 131071, 262143, 524287, 1048575, 2097151, 4194303, 8388607, 16777215, 33554431, 67108863, 134217727, 268435455, 536870911, 1073741823, Integer.MAX_VALUE, -1};
   public C d;
   private static int f;
   private static final R g = new R();

   public static ap a() {
      R var0 = g;
      synchronized(g) {
         ap var1 = null;
         if(f &gt; 0) {
            --f;
            var1 = (ap)g.a();
         }

         if(var1 != null) {
            var1.b = 0;
            return var1;
         }
      }

      ap var3;
      (var3 = new ap()).b = 0;
      var3.a = new byte[5000];
      return var3;
   }

   public final int b() {
      this.b += 2;
      int var1;
      if((var1 = ((this.a[this.b - 2] &amp; 255) &lt;&lt; 8) + (this.a[this.b - 1] &amp; 255)) &gt; '\uea60') {
         var1 += -65535;
      }

      return var1;
   }

   final int c() {
      this.b += 3;
      return (255 &amp; this.a[this.b - 3] &lt;&lt; 16) + (255 &amp; this.a[this.b - 2] &lt;&lt; 8) + (255 &amp; this.a[this.b - 1]);
   }

   private ap() {
   }

   public ap(byte[] var1) {
      this.a = var1;
      this.b = 0;
   }

   public final void a(int var1) {
      this.a[this.b++] = (byte)(var1 + this.d.a());
   }

   public final void b(int var1) {
      this.a[this.b++] = (byte)var1;
   }

   public final void c(int var1) {
      this.a[this.b++] = (byte)(var1 &gt;&gt; 8);
      this.a[this.b++] = (byte)var1;
   }

   public final void d(int var1) {
      this.a[this.b++] = (byte)(var1 &gt;&gt; 16);
      this.a[this.b++] = (byte)(var1 &gt;&gt; 8);
      this.a[this.b++] = (byte)var1;
   }

   public final void e(int var1) {
      this.a[this.b++] = (byte)(var1 &gt;&gt; 24);
      this.a[this.b++] = (byte)(var1 &gt;&gt; 16);
      this.a[this.b++] = (byte)(var1 &gt;&gt; 8);
      this.a[this.b++] = (byte)var1;
   }

   public final void a(long var1) {
      try {
         this.a[this.b++] = (byte)((int)(var1 &gt;&gt; 56));
         this.a[this.b++] = (byte)((int)(var1 &gt;&gt; 48));
         this.a[this.b++] = (byte)((int)(var1 &gt;&gt; 40));
         this.a[this.b++] = (byte)((int)(var1 &gt;&gt; 32));
         this.a[this.b++] = (byte)((int)(var1 &gt;&gt; 24));
         this.a[this.b++] = (byte)((int)(var1 &gt;&gt; 16));
         this.a[this.b++] = (byte)((int)(var1 &gt;&gt; 8));
         this.a[this.b++] = (byte)((int)var1);
      } catch (RuntimeException var4) {
         aA.b("14395, 5, " + var1 + ", " + var4.toString());
         throw new RuntimeException();
      }
   }

   public final void a(String var1) {
      System.arraycopy(var1.getBytes(), 0, this.a, this.b, var1.length());
      this.b += var1.length();
      this.a[this.b++] = 10;
   }

   public final void a(byte[] var1, int var2, int var3) {
      for(var3 = 0; var3 &lt; var2 + 0; ++var3) {
         this.a[this.b++] = var1[var3];
      }

   }

   public final void f(int var1) {
      this.a[this.b - var1 - 1] = (byte)var1;
   }

   public final int d() {
      return this.a[this.b++] &amp; 255;
   }

   public final byte e() {
      return this.a[this.b++];
   }

   public final int f() {
      this.b += 2;
      return ((this.a[this.b - 2] &amp; 255) &lt;&lt; 8) + (this.a[this.b - 1] &amp; 255);
   }

   public final int i() {
      this.b += 2;
      int var1;
      if((var1 = ((this.a[this.b - 2] &amp; 255) &lt;&lt; 8) + (this.a[this.b - 1] &amp; 255)) &gt; 32767) {
         var1 -= 65536;
      }

      return var1;
   }

   public final int j() {
      this.b += 3;
      return ((this.a[this.b - 3] &amp; 255) &lt;&lt; 16) + ((this.a[this.b - 2] &amp; 255) &lt;&lt; 8) + (this.a[this.b - 1] &amp; 255);
   }

   public final int k() {
      this.b += 4;
      return ((this.a[this.b - 4] &amp; 255) &lt;&lt; 24) + ((this.a[this.b - 3] &amp; 255) &lt;&lt; 16) + ((this.a[this.b - 2] &amp; 255) &lt;&lt; 8) + (this.a[this.b - 1] &amp; 255);
   }

   public final long l() {
      long var1 = (long)this.k() &amp; 4294967295L;
      long var3 = (long)this.k() &amp; 4294967295L;
      return (var1 &lt;&lt; 32) + var3;
   }

   public final String m() {
      int var1 = this.b;

      while(this.a[this.b++] != 10) {
         ;
      }

      return new String(this.a, var1, this.b - var1 - 1);
   }

   public final byte[] n() {
      int var1 = this.b;

      while(this.a[this.b++] != 10) {
         ;
      }

      byte[] var2 = new byte[this.b - var1 - 1];
      System.arraycopy(this.a, var1, var2, var1 - var1, this.b - 1 - var1);
      return var2;
   }

   public final void a(int var1, int var2, byte[] var3) {
      for(var2 = 0; var2 &lt; var1 + 0; ++var2) {
         var3[var2] = this.a[this.b++];
      }

   }

   public final void o() {
      this.c = this.b &lt;&lt; 3;
   }

   public final int g(int var1) {
      int var2 = this.c &gt;&gt; 3;
      int var3 = 8 - (this.c &amp; 7);
      int var4 = 0;

      for(this.c += var1; var1 &gt; var3; var3 = 8) {
         var4 += (this.a[var2++] &amp; e[var3]) &lt;&lt; var1 - var3;
         var1 -= var3;
      }

      if(var1 == var3) {
         var4 += this.a[var2] &amp; e[var3];
      } else {
         var4 += this.a[var2] &gt;&gt; var3 - var1 &amp; e[var1];
      }

      return var4;
   }

   public final void p() {
      this.b = (this.c + 7) / 8;
   }

   public final int q() {
      return (this.a[this.b] &amp; 255) &lt; 128?this.d() - 64:this.f() - '쀀';
   }

   public final int r() {
      return (this.a[this.b] &amp; 255) &lt; 128?this.d():this.f() - '耀';
   }

   public final void h(int var1) {
      this.a[this.b++] = (byte)(-var1);
   }

   public final void i(int var1) {
      this.a[this.b++] = (byte)(128 - var1);
   }

   public final int s() {
      return this.a[this.b++] - 128 &amp; 255;
   }

   public final int t() {
      return -this.a[this.b++] &amp; 255;
   }

   public final int u() {
      return 128 - this.a[this.b++] &amp; 255;
   }

   public final byte v() {
      return (byte)(-this.a[this.b++]);
   }

   public final void j(int var1) {
      this.a[this.b++] = (byte)var1;
      this.a[this.b++] = (byte)(var1 &gt;&gt; 8);
   }

   public final void k(int var1) {
      this.a[this.b++] = (byte)(var1 &gt;&gt; 8);
      this.a[this.b++] = (byte)(var1 + 128);
   }

   public final void l(int var1) {
      this.a[this.b++] = (byte)(var1 + 128);
      this.a[this.b++] = (byte)(var1 &gt;&gt; 8);
   }

   public final int w() {
      this.b += 2;
      return ((this.a[this.b - 1] &amp; 255) &lt;&lt; 8) + (this.a[this.b - 2] &amp; 255);
   }

   public final int x() {
      this.b += 2;
      return ((this.a[this.b - 2] &amp; 255) &lt;&lt; 8) + (this.a[this.b - 1] - 128 &amp; 255);
   }

   public final int y() {
      this.b += 2;
      return ((this.a[this.b - 1] &amp; 255) &lt;&lt; 8) + (this.a[this.b - 2] - 128 &amp; 255);
   }

   public final int z() {
      this.b += 2;
      int var1;
      if((var1 = ((this.a[this.b - 1] &amp; 255) &lt;&lt; 8) + (this.a[this.b - 2] &amp; 255)) &gt; 32767) {
         var1 -= 65536;
      }

      return var1;
   }

   public final int A() {
      this.b += 2;
      int var1;
      if((var1 = ((this.a[this.b - 1] &amp; 255) &lt;&lt; 8) + (this.a[this.b - 2] - 128 &amp; 255)) &gt; 32767) {
         var1 -= 65536;
      }

      return var1;
   }

   public final int B() {
      this.b += 4;
      return ((this.a[this.b - 2] &amp; 255) &lt;&lt; 24) + ((this.a[this.b - 1] &amp; 255) &lt;&lt; 16) + ((this.a[this.b - 4] &amp; 255) &lt;&lt; 8) + (this.a[this.b - 3] &amp; 255);
   }

   public final int C() {
      this.b += 4;
      return ((this.a[this.b - 3] &amp; 255) &lt;&lt; 24) + ((this.a[this.b - 4] &amp; 255) &lt;&lt; 16) + ((this.a[this.b - 1] &amp; 255) &lt;&lt; 8) + (this.a[this.b - 2] &amp; 255);
   }

   public final void a(int var1, byte[] var2, int var3) {
      for(var1 = var3 + 0 - 1; var1 &gt;= 0; --var1) {
         this.a[this.b++] = (byte)(var2[var1] + 128);
      }

   }

   public static String a(byte[] var0) {
      try {
         return new String(var0, "UTF-8");
      } catch (UnsupportedEncodingException var1) {
         var1.printStackTrace();
         return null;
      }
   }

   public final String D() {
      int var1 = this.b;

      while(this.a[this.b++] != 0) {
         ;
      }

      return new String(this.a, var1, this.b - var1 - 1);
   }
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/need-help-with-runeagent/553006/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/need-help-with-runeagent/553006/3</link>
        <pubDate>Tue, 18 Aug 2015 04:44:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-553006-3</guid>
        <source url="https://forum.moparisthebest.com/t/need-help-with-runeagent/553006.rss">Need help with Runeagent</source>
      </item>
      <item>
        <title>Need help with Runeagent</title>
        <dc:creator><![CDATA[@silabsoft RuneAgent]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silabsoft">@silabsoft</a> wrote:</p>
          <blockquote>
              <p>the IsaacCipher class can be identified easily enough by looking for the class that has 2 integer arrays with the size of 256</p>
<pre><code class="lang-auto">package bot.update.transformer;

import org.apache.bcel.classfile.Field;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.classfile.Method;
import org.apache.bcel.generic.*;

/**
 *
 * @author Silabsoft
 */
public class IsaacCipherTransformer extends Transformer {

    @Override
    public boolean find(JavaClass javaClass) {
        int count = 0;
        int countB = 0;

        for (Field f : javaClass.getFields()) {
            if (f.getType().equals(integerArrayType) &amp;&amp; !f.isStatic()) {
                count++;
            }

        }
        ClassGen cg = new ClassGen(javaClass);
        boolean f = false;
        for (Method m : javaClass.getMethods()) {

            MethodGen mg = new MethodGen(m, className, cg.getConstantPool());
            InstructionList il = mg.getInstructionList();
            if (il == null) {
                continue;
            }
            for (InstructionHandle h : il.getInstructionHandles()) {
                Instruction x = h.getInstruction();
                if (x instanceof SIPUSH) {
                    if (((SIPUSH) x).getValue().intValue() == 256 &amp;&amp; h.getNext().getInstruction() instanceof NEWARRAY) {
                        countB++;
                    }
                }

            }
        }
        if (count == 2 &amp;&amp; countB == 2) {
            types.put("isaac", new ObjectType(className));
           
            return true;
        }
        return false;
    }

    @Override
    public boolean transform(JavaClass javaClass) {
        return true;
    }

    @Override
    public void finish() {
    }
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/need-help-with-runeagent/553006/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/need-help-with-runeagent/553006/2</link>
        <pubDate>Mon, 17 Aug 2015 15:57:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-553006-2</guid>
        <source url="https://forum.moparisthebest.com/t/need-help-with-runeagent/553006.rss">Need help with Runeagent</source>
      </item>
      <item>
        <title>Need help with Runeagent</title>
        <dc:creator><![CDATA[@mrbad23 mrbad23]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mrbad23">@mrbad23</a> wrote:</p>
          <blockquote>
              <p>The error I got was “ReferenceError: “stream” is not defined in nashorn:mozilla_compat.js at line number 67”. This happens when I try to execute the script. Also the quick input is not working. I got most of the methods already but cannot seem to find the IsaacCipher class and method403. I have tried numerous times to finding it but have failed. I would really appreciate all the help these forums can offer.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/need-help-with-runeagent/553006/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/need-help-with-runeagent/553006/1</link>
        <pubDate>Mon, 17 Aug 2015 15:50:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-553006-1</guid>
        <source url="https://forum.moparisthebest.com/t/need-help-with-runeagent/553006.rss">Need help with Runeagent</source>
      </item>
  </channel>
</rss>
