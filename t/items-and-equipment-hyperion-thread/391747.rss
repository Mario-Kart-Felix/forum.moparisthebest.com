<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Items and equipment [Hyperion thread]</title>
    <link>https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747</link>
    <description>[center][i]The hyperion thread.[/i][/center]

[b]First of all[/b]
I would like to thank Graham for inspiring me into using hyperion, and some of his code has been used too make this tutorial. Although I will explain in detail and hopefully build on these tutorials and get hyperion recognized! Some of the code used in these tutorials are not mine, although this tutorial will help with the future tutorials that I will be adding to hyperion. Once I have the basic set up (Walk, run, items, npc, follow, ect) finished I will show you how too add quests, mini games and a good, strong combat system.

[i]First tutorial[/i]
This is the first tutorial that I have posted, and I will be adding items and equipment to hyperion.

[b]The tutorial[/b]
Right, let&#39;s begin. First of all create a new class file names &quot;Item&quot; in hyperion/rs2/model and paste the following code (Graham)

[code]package org.hyperion.rs2.model;


public class Item {


	private int id;
	private int count;

	public Item(int id) {
		this(id, 1);
	}


	public Item(int id, int count) {
		if (count &lt; 0) {
			throw new IllegalArgumentException(&quot;Count cannot be negative.&quot;);
		}
		this.id = id;
		this.count = count;
	}


	public ItemDefinition getDefinition() {
		return ItemDefinition.forId(id);
	}

	public int getId() {
		return id;
	}

	public int getCount() {
		return count;
	}

	public void setCount(int count) {
		this.count = count;
	}

	@Override
	public String toString() {
		return Item.class.getName() + &quot; [id=&quot; + id + &quot;, count=&quot; + count + &quot;]&quot;;
	}

}[/code]
[i]Explaining[/i]
[code]
	private int id;
	private int count;[/code]

These are the variables that are declared in the Item class, and should be self explanitory but for the newbies of hyperion I&#39;ll explain a little more.
[code]private int id;[/code]
The item ID.
[code]private int count;[/code]
The amount of items.

[code]	public Item(int id) {
		this(id, 1);
	}
[/code]
Now this method creates a single item.

[code]	public Item(int id, int count) {
		if (count &lt; 0) {
			throw new IllegalArgumentException(&quot;Count cannot be negative.&quot;);
		}
		this.id = id;
		this.count = count;
	}[/code]
Now we move on too creating stackable items, remembering the declared variables that where set earlier are now being used.

[code]	public ItemDefinition getDefinition() {
		return ItemDefinition.forId(id);
	}[/code]
Getting the definition of the item, you may notice this on mostly every other server and yes it does work the same way.

[code]	public int getId() {
		return id;
	}

	public int getCount() {
		return count;
	}[/code]

The first int get&#39;s the item ID, the second one get&#39;s the amount of (item) ids.

[code]	public void setCount(int count) {
		this.count = count;
	}

	@Override
	public String toString() {
		return Item.class.getName() + &quot; [id=&quot; + id + &quot;, count=&quot; + count + &quot;]&quot;;
	}

}
[/code]
Finally, this sets the count of the item. 

Pretty easy right?

Now moving onto the equipment, credits too (Miss silabsoft, lothy and Graham) 

In the directory /hyperion/rs2/model/container create a new file and name it &quot;Equipment.java&quot;.
[code]package org.hyperion.rs2.model.container;

import java.util.HashMap;
import java.util.Map;

import org.hyperion.rs2.model.Item;

/**
 * Contains equipment utility methods.
 * 
 * @author Graham Edgecombe
 */
public class Equipment {

	/**
	 * The size of the equipment container.
	 */
	public static final int SIZE = 14;

	/**
	 * Items which are classified as capes.
	 */
	public static int CAPES[] = {3781, 3783, 3785, 3787, 3789, 3777, 3779, 3759, 3761, 3763, 3765, 6111, 6570, 6568, 1007, 1019, 1021, 1023, 1027, 1029, 1031, 1052, 2412, 2413, 2414, 4304, 4315, 4317, 4319, 4321, 4323, 4325, 4327, 4329, 4331, 4333, 4335, 4337, 4339, 4341, 4343, 4345, 4347, 4349, 4351, 4353, 4355, 4357, 4359, 4361, 4363, 4365, 4367, 4369, 4371, 4373, 4375, 4377, 4379, 4381, 4383, 4385, 4387, 4389, 4391, 4393, 4395, 4397, 4399, 4401, 4403, 4405, 4407, 4409, 4411, 4413, 4514, 4516, 6070, 6568, 6570};

	/**
	 * Items which are classified as boots.
	 */
	public static int BOOTS[] = {7596, 6619, 7159, 7991, 6666, 6061, 6106, 88, 89, 626, 628, 630, 632, 634, 1061, 1837, 1846, 2577, 2579, 2894, 2904, 2914, 2924, 2934, 3061, 3105, 3107, 3791, 4097, 4107, 4117, 4119, 4121, 4123, 4125, 4127, 4129, 4131, 4310, 5064, 5345, 5557, 6069, 6106, 6143, 6145, 6147, 6328, 6920, 6349, 6357, 3393};

	/**
	 * Items which are classified as gloves.
	 */
	public static int GLOVES[] = {7595, 6629, 2491, 1065, 2487, 2489, 3060, 1495, 775, 777, 778, 6708, 1059, 1063, 1065, 1580, 2487, 2489, 2491, 2902, 2912, 2922, 2932, 2942, 3060, 3799, 4095, 4105, 4115, 4308, 5556, 6068, 6110, 6149, 6151, 6153, 6922, 7454, 7455, 7456, 7457, 7458, 7459, 7460, 7461, 7462, 6330, 3391};

	/**
	 * Items which are classified as shields.
	 */
	public static int SHIELDS[] = {7342, 7348, 7354, 7360, 7334, 7340, 7347, 7352, 7358, 7356, 7350, 7344, 7332, 7338, 7336, 7360, 1171, 1173, 1175, 1177, 1179, 1181, 1183, 1185, 1187, 1189, 1191, 1193, 1195, 1197, 1199, 1201, 1540, 2589, 2597, 2603, 2611, 2621, 2629, 2659, 2667, 2675, 2890, 3122, 3488, 3758, 3839, 3840, 3841, 3842, 3843, 3844, 4072, 4156, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4302, 4507, 4512, 6215, 6217, 6219, 6221, 6223, 6225, 6227, 6229, 6231, 6233, 6235, 6237, 6239, 6241, 6243, 6245, 6247, 6249, 6251, 6253, 6255, 6257, 6259, 6261, 6263, 6265, 6267, 6269, 6271, 6273, 6275, 6277, 6279, 6524, 6889};

	/**
	 * Items which are classified as hats.
	 */
	public static int HATS[] = {4041, 4042, 4502, 7319, 7321, 7323, 7325, 7327, 1167, 8074, 4168, 1169, 6665, 6665, 7321, 6886, 6547, 6548, 2645, 2647, 2649, 4856, 4857, 4858, 4859, 4880, 4881, 4882, 4883, 4904, 4905, 4906, 4907, 4928, 4929, 4930, 4931, 4952, 4953, 4954, 4955, 4976, 4977, 4978, 4979, 4732, 4753, 4611, 6188, 6182, 4511, 4056, 4071, 4724, 2639, 2641, 2643, 2665, 6109, 5525, 5527, 5529, 5531, 5533, 5535, 5537, 5539, 5541, 5543, 5545, 5547, 5549, 5551, 74, 579, 656, 658, 660, 662, 664, 740, 1017, 1037, 1040, 1042, 1044, 1046, 1048, 1050, 1053, 1055, 1057, 1137, 1139, 1141, 1143, 1145, 1147, 1149, 1151, 1153, 1155, 1157, 1159, 1161, 1163, 1165, 1506, 1949, 2422, 2581, 2587, 2595, 2605, 2613, 2619, 2627, 2631, 2633, 2635, 2637, 2651, 2657, 2673, 2900, 2910, 2920, 2930, 2940, 2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993, 2994, 2995, 3057, 3385, 3486, 3748, 3749, 3751, 3753, 3797, 4071, 4089, 3755, 4099, 4109, 4164, 4302,
			4506, 4511, 4513, 4515, 4551, 4567, 4708, 4716, 4724, 4745, 4753, 4856, 4857, 4858, 4859, 4880, 4881, 4882, 4883, 4904, 4905, 4906, 4907, 4952, 4953, 4954, 4955, 4976, 4977, 4978, 4979, 5013, 5014, 5554, 5574, 6109, 6128, 6131, 6137, 6182, 6188, 6335, 6337, 6339, 6345, 6355, 6365, 6375, 6382, 6392, 6400, 6918, 6656, 2581, 7539, 7394, 7396, 7534, 5574, 6885, 6858, 6860, 6862, 6856, 6326, 6128, 6137, 7400, 7323, 7325, 7327, 7003};

	/**
	 * Items which are classified as amulets.
	 */
	public static int AMULETS[] = {1654, 1656, 1658, 1660, 1662, 1664, 8081, 8033, 7968, 6585, 86, 87, 295, 421, 552, 589, 1478, 1692, 1694, 1696, 1698, 1700, 1702, 1704, 1706, 1708, 1710, 1712, 1725, 1727, 1729, 1731, 4021, 4081, 4250, 4677, 6040, 6041, 6208, 1718, 1722, 6859, 6863, 6857};

	/**
	 * Items which are classified as arrows.
	 */
	public static int ARROWS[] = {8052, 8065, 7919, 7906, 78, 598, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 942, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2866, 4160, 4172, 4173, 4174, 4175, 4740, 5616, 5617, 5618, 5619, 5620, 5621, 5622, 5623, 5624, 5625, 5626, 5627, 6061, 6062};

	/**
	 * Items which are classified as rings.
	 */
	public static int RINGS[] = {773, 1635, 1637, 1639, 1641, 1643, 1645, 2550, 2552, 2554, 2556, 2558, 2560, 2562, 2564, 2566, 2568, 2570, 2572, 4202, 4657, 6465, 6737, 6731, 6735, 6735, 6583, 6733};

	/**
	 * Items which are classified as body.
	 */
	public static int BODY[] = {7362, 7364, 636, 638, 640, 642, 644, 426, 1005, 1757, 7592, 6617, 7376, 544, 7372, 7370, 577, 3793, 3775, 3773, 3771, 3769, 3767, 6139, 1135, 2499, 2501, 1035, 540, 5553, 4757, 1833, 6388, 6384, 4111, 4101, 4091, 6186, 6184, 6180, 3058, 4509, 4504, 4069, 4728, 4736, 4712, 6107, 2661, 3140, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1129, 1131, 1133, 2583, 2591, 2599, 2607, 2615, 2623, 2653, 2669, 3481, 4712, 4720, 4728, 4749, 4892, 4893, 4894, 4895, 4916, 4917, 4918, 4919, 4964, 4965, 4966, 4967, 6107, 6133, 6322, 6322, 6129, 75, 6916, 6916, 4111, 6654, 6654, 75, 7399, 7390, 7374, 5575, 2503, 6341, 6351, 3387, 5030, 5032, 5034, 5030, 5032, 5034, 7392, 546};

	/**
	 * Items which are classified as legs.
	 */
	public static int LEGS[] = {7378, 7380, 7382, 7368, 7366, 7388, 646, 648, 650, 652, 654, 428, 1097, 1095, 7593, 6625, 8020, 8015, 7384, 6141, 1835, 538, 1033, 5555, 4759, 6386, 6390, 2497, 2495, 2493, 1099, 4113, 4103, 4093, 6924, 6187, 6185, 6181, 3059, 4510, 4505, 4070, 6108, 538, 542, 548, 1011, 1013, 1015, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 2585, 2593, 2601, 2609, 2617, 2625, 2655, 2663, 2671, 3059, 3389, 3472, 3473, 3474, 3475, 3476, 3477, 3478, 3479, 3480, 3483, 3485, 3795, 4087, 4585, 4712, 4714, 4722, 4730, 4738, 4751, 4759, 4874, 4875, 4876, 4877, 4898, 4899, 4900, 4901, 4922, 4923, 4924, 4925, 4946, 4947, 4948, 4949, 4970, 4971, 4972, 4973, 4994, 4995, 4996, 4997, 5048, 5050, 5052, 5576, 6107, 6130, 6187, 6390, 6386, 6390, 6396, 6404, 6135, 6809, 6916, 4091, 4111, 6655, 6654, 7398, 7398, 7386, 6324, 6343, 6353, 3387, 5036, 5038, 5040};

	/**
	 * Items which are classified as platebody.
	 */
	public static int PLATEBODY[] = {636, 638, 640, 642, 644, 426, 8031, 8027, 6617, 544, 577, 3793, 3773, 3775, 3771, 3769, 3767, 6139, 1035, 540, 5553, 4757, 1833, 1835, 6388, 6384, 4111, 4101, 4868, 4869, 4870, 4871, 4892, 4893, 4894, 4895, 4916, 4917, 4918, 4919, 4940, 4941, 4942, 4943, 4964, 4965, 4966, 4967, 4988, 4989, 4990, 0x2f9a0eb, 6186, 6184, 6180, 3058, 4509, 4504, 4069, 4728, 4736, 4712, 6107, 2661, 3140, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 2583, 2591, 2599, 2607, 2615, 6322, 2623, 2653, 2669, 3481, 4720, 4728, 4749, 2661, 6129, 6916, 4091, 6654, 6133, 75, 7399, 7390, 5575, 6341, 6351, 3387, 5030, 5032, 5034, 7392};

	/**
	 * Items which are classified as full helmets.
	 */
	public static int FULL_HELM[] = {4041, 4042, 1147, 3748, 6137, 6128, 3753, 3755, 3749, 3751, 1149, 3751, 7594, 4708, 4716, 4745, 4732, 5554, 4753, 4732, 4753, 6188, 4511, 4056, 4071, 4724, 6109, 2665, 1153, 1155, 1157, 1159, 1161, 1163, 1165, 2587, 2595, 2605, 2613, 2619, 2627, 2657, 2673, 3486, 6402, 6394, 6131, 74, 7539, 7539, 7534, 5574, 6326};

	/**
	 * Items which are classified as full masks.
	 */
	public static int FULL_MASK[] = {4502, 6623, 7990, 7594, 1153, 1155, 1157, 1159, 1161, 1163, 1165, 4732, 5554, 4753, 4611, 6188, 3507, 4511, 4056, 4071, 4724, 2665, 1053, 1055, 1057};

	/**
	 * The helmet slot.
	 */
	public static final int SLOT_HELM = 0;

	/**
	 * The cape slot.
	 */
	public static final int SLOT_CAPE = 1;

	/**
	 * The amulet slot.
	 */
	public static final int SLOT_AMULET = 2;

	/**
	 * The weapon slot.
	 */
	public static final int SLOT_WEAPON = 3;

	/**
	 * The chest slot.
	 */
	public static final int SLOT_CHEST = 4;

	/**
	 * The shield slot.
	 */
	public static final int SLOT_SHIELD = 5;

	/**
	 * The bottoms slot.
	 */
	public static final int SLOT_BOTTOMS = 7;

	/**
	 * The gloves slot.
	 */
	public static final int SLOT_GLOVES = 9;

	/**
	 * The boots slot.
	 */
	public static final int SLOT_BOOTS = 10;

	/**
	 * The rings slot.
	 */
	public static final int SLOT_RING = 12;

	/**
	 * The arrows slot.
	 */
	public static final int SLOT_ARROWS = 13;

	/**
	 * Equipment type map.
	 */
	private static final Map&lt;Integer, EquipmentType&gt; equipmentTypes = new HashMap&lt;Integer, EquipmentType&gt;();

	/**
	 * Equipment interface id.
	 */
	public static final int INTERFACE = 1688;

	/**
	 * Equipment type enum.
	 * 
	 * @author Lothy
	 * @author Miss Silabsoft
	 * 
	 */
	public enum EquipmentType {
		CAPE(&quot;Cape&quot;, Equipment.SLOT_CAPE), BOOTS(&quot;Boots&quot;, Equipment.SLOT_BOOTS), GLOVES(&quot;Gloves&quot;, Equipment.SLOT_GLOVES), SHIELD(&quot;Shield&quot;, Equipment.SLOT_SHIELD), HAT(&quot;Hat&quot;, Equipment.SLOT_HELM), AMULET(&quot;Amulet&quot;, Equipment.SLOT_AMULET), ARROWS(&quot;Arrows&quot;, Equipment.SLOT_ARROWS), RING(&quot;Ring&quot;, Equipment.SLOT_RING), BODY(&quot;Body&quot;, Equipment.SLOT_CHEST), LEGS(&quot;Legs&quot;, Equipment.SLOT_BOTTOMS), PLATEBODY(&quot;Plate body&quot;, Equipment.SLOT_CHEST), FULL_HELM(&quot;Full helm&quot;, Equipment.SLOT_HELM), FULL_MASK(&quot;Full mask&quot;, Equipment.SLOT_HELM), WEAPON(&quot;Weapon&quot;, Equipment.SLOT_WEAPON);

		/**
		 * The description.
		 */
		private String description;

		/**
		 * The slot.
		 */
		private int slot;

		/**
		 * Creates the equipment type.
		 * 
		 * @param description
		 *            The description.
		 * @param slot
		 *            The slot.
		 */
		private EquipmentType(String description, int slot) {
			this.description = description;
			this.slot = slot;
		}

		/**
		 * Gets the description.
		 * 
		 * @return The description.
		 */
		public String getDescription() {
			return description;
		}

		/**
		 * Gets the slot.
		 * 
		 * @return The slot.
		 */
		public int getSlot() {
			return slot;
		}

	}

	/**
	 * Static initializer block to populate the type map.
	 */
	static {
		for (int cape : CAPES) {
			equipmentTypes.put(cape, EquipmentType.CAPE);
		}
		for (int boots : BOOTS) {
			equipmentTypes.put(boots, EquipmentType.BOOTS);
		}
		for (int gloves : GLOVES) {
			equipmentTypes.put(gloves, EquipmentType.GLOVES);
		}
		for (int shield : SHIELDS) {
			equipmentTypes.put(shield, EquipmentType.SHIELD);
		}
		for (int hat : HATS) {
			equipmentTypes.put(hat, EquipmentType.HAT);
		}
		for (int amulet : AMULETS) {
			equipmentTypes.put(amulet, EquipmentType.AMULET);
		}
		for (int arrowType : ARROWS) {
			equipmentTypes.put(arrowType, EquipmentType.ARROWS);
		}
		for (int ring : RINGS) {
			equipmentTypes.put(ring, EquipmentType.RING);
		}
		for (int body : BODY) {
			equipmentTypes.put(body, EquipmentType.BODY);
		}
		for (int legs : LEGS) {
			equipmentTypes.put(legs, EquipmentType.LEGS);
		}
		for (int plateBody : PLATEBODY) {
			equipmentTypes.put(plateBody, EquipmentType.PLATEBODY);
		}
		for (int fullHelm : FULL_HELM) {
			equipmentTypes.put(fullHelm, EquipmentType.FULL_HELM);
		}
		for (int fullMask : FULL_MASK) {
			equipmentTypes.put(fullMask, EquipmentType.FULL_MASK);
		}
	}

	/**
	 * Gets an equipment type.
	 * 
	 * @param item
	 *            The item.
	 * @return The equipment type.
	 */
	public static EquipmentType getType(Item item) {
		int id = item.getId();
		if (equipmentTypes.containsKey(id)) {
			return equipmentTypes.get(id);
		} else {
			return EquipmentType.WEAPON;
		}
	}

	/**
	 * Checks if an item is of a specific type.
	 * 
	 * @param type
	 *            The type.
	 * @param item
	 *            The item.
	 * @return &lt;code&gt;true&lt;/code&gt; if the types are the same, &lt;code&gt;false&lt;/code&gt;
	 *         if not.
	 */
	public static boolean is(EquipmentType type, Item item) {
		return getType(item).equals(type);
	}

}
[/code]

I don&#39;t see a need to explain all of this code, although I will tell you what the essentials of this class does.

Like most/any server you need too declare what items go where, too do this you can use the ints provided in the class. For example.

I have added a new model too my client, and would like the model too be used as a cape. In order too do this I will need to add the item ID into the 
[code]public static int CAPES[] = {[/code]


[center][b]THIS TUTORIAL IS THE BASICS! LIKE I SAID I WILL BE CREATING MORE THREADS WHEN I FEEL PEOPLE ARE COMFORTABLE WITH THE BASIC FEATURES![/b][/center]</description>
    
    <lastBuildDate>Thu, 21 Apr 2011 09:33:08 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Items and equipment [Hyperion thread]</title>
        <dc:creator><![CDATA[@Saphire1 Saphire`]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/saphire1">@Saphire1</a> wrote:</p>
          <blockquote>
              <p>[quote=“Graham, post:10, topic:391747”]You probably have an outdated version, here’s a link to the last released version:</p>
<p><a href="http://www.megaupload.com/?d=4WTK2SX2%5B/quote%5D" class="onebox" target="_blank" rel="nofollow noopener">http://www.megaupload.com/?d=4WTK2SX2[/quote]</a><br>
Seems I have added a lot more features too the original one that I’m using for the charity project I’ll be sticking too that. But, thank you for providing the link and maybe this tutorial can just float around the forum waiting for search results.</p>
<p><span class="bbcode-s">I’ll get started on another tutorial now.</span><br>
Added another tutorial.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747/11</link>
        <pubDate>Thu, 21 Apr 2011 09:33:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-391747-11</guid>
        <source url="https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747.rss">Items and equipment [Hyperion thread]</source>
      </item>
      <item>
        <title>Items and equipment [Hyperion thread]</title>
        <dc:creator><![CDATA[@Graham Graham]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/graham">@Graham</a> wrote:</p>
          <blockquote>
              <p>You probably have an outdated version, here’s a link to the last released version:</p>
<p><a href="http://www.megaupload.com/?d=4WTK2SX2" class="onebox" target="_blank" rel="nofollow noopener">http://www.megaupload.com/?d=4WTK2SX2</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747/10</link>
        <pubDate>Wed, 20 Apr 2011 20:00:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-391747-10</guid>
        <source url="https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747.rss">Items and equipment [Hyperion thread]</source>
      </item>
      <item>
        <title>Items and equipment [Hyperion thread]</title>
        <dc:creator><![CDATA[@Saphire1 Saphire`]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/saphire1">@Saphire1</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="8" data-topic="391747">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/graham/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Graham:</div>
<blockquote>
<p>Hyperion comes with these classes iirc… what is the point of having a tutorial to re-add existing and identical functionality?</p>
</blockquote>
</aside>
<p>The one I downloaded didn’t, I had too search for this on google.</p>
<p>Never the less, it’s still explaining stuff. I also plan too release more tutorials when I have the basics complete.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747/9</link>
        <pubDate>Wed, 20 Apr 2011 19:59:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-391747-9</guid>
        <source url="https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747.rss">Items and equipment [Hyperion thread]</source>
      </item>
      <item>
        <title>Items and equipment [Hyperion thread]</title>
        <dc:creator><![CDATA[@Graham Graham]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/graham">@Graham</a> wrote:</p>
          <blockquote>
              <p>Hyperion comes with these classes… what is the point of having a tutorial to re-add existing and identical functionality?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747/8</link>
        <pubDate>Wed, 20 Apr 2011 19:57:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-391747-8</guid>
        <source url="https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747.rss">Items and equipment [Hyperion thread]</source>
      </item>
      <item>
        <title>Items and equipment [Hyperion thread]</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>Finally you start releasing these <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747/7</link>
        <pubDate>Wed, 20 Apr 2011 19:48:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-391747-7</guid>
        <source url="https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747.rss">Items and equipment [Hyperion thread]</source>
      </item>
      <item>
        <title>Items and equipment [Hyperion thread]</title>
        <dc:creator><![CDATA[@Saphire1 Saphire`]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/saphire1">@Saphire1</a> wrote:</p>
          <blockquote>
              <p>I’ve created another tutorial that should be used in your hyperion source also.</p>
<aside class="onebox whitelistedgeneric">
  <header class="source">
      <img src="https://forum.moparisthebest.com/uploads/default/original/2X/1/1f0dc167bcf798bdbd70b03bf0fd1bc836e54e1a.png" class="site-icon" width="32" height="32">
      <a href="https://forum.moparisthebest.com/" target="_blank">moparisthebest.com</a>
  </header>
  <article class="onebox-body">
    <img src="https://forum.moparisthebest.com/uploads/default/original/2X/4/41fecb6185fddc2758aeba68c3f8c9c78e26e4ff.png" class="thumbnail onebox-avatar" width="500" height="500">

<h3><a href="https://forum.moparisthebest.com/" target="_blank">moparisthebest.com</a></h3>

<p>programming, irc, cars</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747/6</link>
        <pubDate>Wed, 20 Apr 2011 13:49:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-391747-6</guid>
        <source url="https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747.rss">Items and equipment [Hyperion thread]</source>
      </item>
      <item>
        <title>Items and equipment [Hyperion thread]</title>
        <dc:creator><![CDATA[@mark033 mark033]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mark033">@mark033</a> wrote:</p>
          <blockquote>
              <p>[quote=“Saphire`, post:4, topic:391747”]That’s the main objective here, too start off with the basics and eventually work my way up. Hopefully when there is enough features in the hyperion source people may start using that.</p>
<p>The code I’ll be using won’t be messy, like some previous released hyperion servers.[/quote]</p>
<p>I think that some people will get into Hyperion if there’s more tuts definitely (like me), but I also think that Delta leeching will still be rampant amongst those that are the real problem.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747/5</link>
        <pubDate>Wed, 20 Apr 2011 12:54:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-391747-5</guid>
        <source url="https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747.rss">Items and equipment [Hyperion thread]</source>
      </item>
      <item>
        <title>Items and equipment [Hyperion thread]</title>
        <dc:creator><![CDATA[@Saphire1 Saphire`]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/saphire1">@Saphire1</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="391747">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/asshole_rule/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> asshole_rule:</div>
<blockquote>
<p>Finally some Hyperion tutorials. Good job <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
</blockquote>
</aside>
<p>Thank you <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<aside class="quote" data-post="3" data-topic="391747">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/mark033/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> mark033:</div>
<blockquote>
<p>You offering to make more Hyperion tuts has actually made me reconsider trying to get into Hyperion.</p>
</blockquote>
</aside>
<p>That’s the main objective here, too start off with the basics and eventually work my way up. Hopefully when there is enough features in the hyperion source people may start using that.</p>
<p>The code I’ll be using won’t be messy, like some previous released hyperion servers.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747/4</link>
        <pubDate>Wed, 20 Apr 2011 12:43:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-391747-4</guid>
        <source url="https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747.rss">Items and equipment [Hyperion thread]</source>
      </item>
      <item>
        <title>Items and equipment [Hyperion thread]</title>
        <dc:creator><![CDATA[@mark033 mark033]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mark033">@mark033</a> wrote:</p>
          <blockquote>
              <p>You offering to make more Hyperion tuts has actually made me reconsider trying to get into Hyperion.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747/3</link>
        <pubDate>Wed, 20 Apr 2011 12:36:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-391747-3</guid>
        <source url="https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747.rss">Items and equipment [Hyperion thread]</source>
      </item>
      <item>
        <title>Items and equipment [Hyperion thread]</title>
        <dc:creator><![CDATA[@asshole_rule asshole_rule]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/asshole_rule">@asshole_rule</a> wrote:</p>
          <blockquote>
              <p>Finally some Hyperion tutorials. Good job <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747/2</link>
        <pubDate>Wed, 20 Apr 2011 12:33:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-391747-2</guid>
        <source url="https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747.rss">Items and equipment [Hyperion thread]</source>
      </item>
      <item>
        <title>Items and equipment [Hyperion thread]</title>
        <dc:creator><![CDATA[@Saphire1 Saphire`]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/saphire1">@Saphire1</a> wrote:</p>
          <blockquote>
              <p>[center]<span class="bbcode-i">The hyperion thread.</span>[/center]</p>
<p><span class="bbcode-b">First of all</span><br>
I would like to thank Graham for inspiring me into using hyperion, and some of his code has been used too make this tutorial. Although I will explain in detail and hopefully build on these tutorials and get hyperion recognized! Some of the code used in these tutorials are not mine, although this tutorial will help with the future tutorials that I will be adding to hyperion. Once I have the basic set up (Walk, run, items, npc, follow, ect) finished I will show you how too add quests, mini games and a good, strong combat system.</p>
<p><span class="bbcode-i">First tutorial</span><br>
This is the first tutorial that I have posted, and I will be adding items and equipment to hyperion.</p>
<p><span class="bbcode-b">The tutorial</span><br>
Right, let’s begin. First of all create a new class file names “Item” in hyperion/rs2/model and paste the following code (Graham)</p>
<p>[code]package org.hyperion.rs2.model;</p>
<p>public class Item {</p>
<pre><code>private int id;
private int count;

public Item(int id) {
	this(id, 1);
}


public Item(int id, int count) {
	if (count &lt; 0) {
		throw new IllegalArgumentException("Count cannot be negative.");
	}
	this.id = id;
	this.count = count;
}


public ItemDefinition getDefinition() {
	return ItemDefinition.forId(id);
}

public int getId() {
	return id;
}

public int getCount() {
	return count;
}

public void setCount(int count) {
	this.count = count;
}

@Override
public String toString() {
	return Item.class.getName() + " [id=" + id + ", count=" + count + "]";
}
</code></pre>
<p>}[/code]<br>
<span class="bbcode-i">Explaining</span></p>
<pre><code class="lang-auto">	private int id;
	private int count;[/code]

These are the variables that are declared in the Item class, and should be self explanitory but for the newbies of hyperion I'll explain a little more.
[code]private int id;[/code]
The item ID.
[code]private int count;[/code]
The amount of items.

[code]	public Item(int id) {
		this(id, 1);
	}</code></pre>
<p>Now this method creates a single item.</p>
<p><code>	public Item(int id, int count) {
		if (count &lt; 0) {
			throw new IllegalArgumentException("Count cannot be negative.");
		}
		this.id = id;
		this.count = count;
	}</code><br>
Now we move on too creating stackable items, remembering the declared variables that where set earlier are now being used.</p>
<p><code>	public ItemDefinition getDefinition() {
		return ItemDefinition.forId(id);
	}</code><br>
Getting the definition of the item, you may notice this on mostly every other server and yes it does work the same way.</p>
<p>[code]	public int getId() {<br>
return id;<br>
}</p>
<pre><code>public int getCount() {
	return count;
}[/code]
</code></pre>
<p>The first int get’s the item ID, the second one get’s the amount of (item) ids.</p>
<p>[code]	public void setCount(int count) {<br>
this.count = count;<br>
}</p>
<pre><code>@Override
public String toString() {
	return Item.class.getName() + " [id=" + id + ", count=" + count + "]";
}
</code></pre>
<p>}<br>
[/code]<br>
Finally, this sets the count of the item.</p>
<p>Pretty easy right?</p>
<p>Now moving onto the equipment, credits too (Miss silabsoft, lothy and Graham)</p>
<p>In the directory /hyperion/rs2/model/container create a new file and name it “Equipment.java”.</p>
<p>[code]package org.hyperion.rs2.model.container;</p>
<p>import java.util.HashMap;<br>
import java.util.Map;</p>
<p>import org.hyperion.rs2.model.Item;</p>
<p>/**</p>
<ul>
<li>
<p>Contains equipment utility methods.</p>
</li>
<li>
</li>
<li>
<p><span class="mention">@author</span> Graham Edgecombe<br>
*/<br>
public class Equipment {</p>
<p>/**</p>
<ul>
<li>The size of the equipment container.<br>
*/<br>
public static final int SIZE = 14;</li>
</ul>
<p>/**</p>
<ul>
<li>Items which are classified as capes.<br>
*/<br>
public static int CAPES[] = {3781, 3783, 3785, 3787, 3789, 3777, 3779, 3759, 3761, 3763, 3765, 6111, 6570, 6568, 1007, 1019, 1021, 1023, 1027, 1029, 1031, 1052, 2412, 2413, 2414, 4304, 4315, 4317, 4319, 4321, 4323, 4325, 4327, 4329, 4331, 4333, 4335, 4337, 4339, 4341, 4343, 4345, 4347, 4349, 4351, 4353, 4355, 4357, 4359, 4361, 4363, 4365, 4367, 4369, 4371, 4373, 4375, 4377, 4379, 4381, 4383, 4385, 4387, 4389, 4391, 4393, 4395, 4397, 4399, 4401, 4403, 4405, 4407, 4409, 4411, 4413, 4514, 4516, 6070, 6568, 6570};</li>
</ul>
<p>/**</p>
<ul>
<li>Items which are classified as boots.<br>
*/<br>
public static int BOOTS[] = {7596, 6619, 7159, 7991, 6666, 6061, 6106, 88, 89, 626, 628, 630, 632, 634, 1061, 1837, 1846, 2577, 2579, 2894, 2904, 2914, 2924, 2934, 3061, 3105, 3107, 3791, 4097, 4107, 4117, 4119, 4121, 4123, 4125, 4127, 4129, 4131, 4310, 5064, 5345, 5557, 6069, 6106, 6143, 6145, 6147, 6328, 6920, 6349, 6357, 3393};</li>
</ul>
<p>/**</p>
<ul>
<li>Items which are classified as gloves.<br>
*/<br>
public static int GLOVES[] = {7595, 6629, 2491, 1065, 2487, 2489, 3060, 1495, 775, 777, 778, 6708, 1059, 1063, 1065, 1580, 2487, 2489, 2491, 2902, 2912, 2922, 2932, 2942, 3060, 3799, 4095, 4105, 4115, 4308, 5556, 6068, 6110, 6149, 6151, 6153, 6922, 7454, 7455, 7456, 7457, 7458, 7459, 7460, 7461, 7462, 6330, 3391};</li>
</ul>
<p>/**</p>
<ul>
<li>Items which are classified as shields.<br>
*/<br>
public static int SHIELDS[] = {7342, 7348, 7354, 7360, 7334, 7340, 7347, 7352, 7358, 7356, 7350, 7344, 7332, 7338, 7336, 7360, 1171, 1173, 1175, 1177, 1179, 1181, 1183, 1185, 1187, 1189, 1191, 1193, 1195, 1197, 1199, 1201, 1540, 2589, 2597, 2603, 2611, 2621, 2629, 2659, 2667, 2675, 2890, 3122, 3488, 3758, 3839, 3840, 3841, 3842, 3843, 3844, 4072, 4156, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4302, 4507, 4512, 6215, 6217, 6219, 6221, 6223, 6225, 6227, 6229, 6231, 6233, 6235, 6237, 6239, 6241, 6243, 6245, 6247, 6249, 6251, 6253, 6255, 6257, 6259, 6261, 6263, 6265, 6267, 6269, 6271, 6273, 6275, 6277, 6279, 6524, 6889};</li>
</ul>
<p>/**</p>
<ul>
<li>Items which are classified as hats.<br>
*/<br>
public static int HATS[] = {4041, 4042, 4502, 7319, 7321, 7323, 7325, 7327, 1167, 8074, 4168, 1169, 6665, 6665, 7321, 6886, 6547, 6548, 2645, 2647, 2649, 4856, 4857, 4858, 4859, 4880, 4881, 4882, 4883, 4904, 4905, 4906, 4907, 4928, 4929, 4930, 4931, 4952, 4953, 4954, 4955, 4976, 4977, 4978, 4979, 4732, 4753, 4611, 6188, 6182, 4511, 4056, 4071, 4724, 2639, 2641, 2643, 2665, 6109, 5525, 5527, 5529, 5531, 5533, 5535, 5537, 5539, 5541, 5543, 5545, 5547, 5549, 5551, 74, 579, 656, 658, 660, 662, 664, 740, 1017, 1037, 1040, 1042, 1044, 1046, 1048, 1050, 1053, 1055, 1057, 1137, 1139, 1141, 1143, 1145, 1147, 1149, 1151, 1153, 1155, 1157, 1159, 1161, 1163, 1165, 1506, 1949, 2422, 2581, 2587, 2595, 2605, 2613, 2619, 2627, 2631, 2633, 2635, 2637, 2651, 2657, 2673, 2900, 2910, 2920, 2930, 2940, 2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993, 2994, 2995, 3057, 3385, 3486, 3748, 3749, 3751, 3753, 3797, 4071, 4089, 3755, 4099, 4109, 4164, 4302,<br>
4506, 4511, 4513, 4515, 4551, 4567, 4708, 4716, 4724, 4745, 4753, 4856, 4857, 4858, 4859, 4880, 4881, 4882, 4883, 4904, 4905, 4906, 4907, 4952, 4953, 4954, 4955, 4976, 4977, 4978, 4979, 5013, 5014, 5554, 5574, 6109, 6128, 6131, 6137, 6182, 6188, 6335, 6337, 6339, 6345, 6355, 6365, 6375, 6382, 6392, 6400, 6918, 6656, 2581, 7539, 7394, 7396, 7534, 5574, 6885, 6858, 6860, 6862, 6856, 6326, 6128, 6137, 7400, 7323, 7325, 7327, 7003};</li>
</ul>
<p>/**</p>
<ul>
<li>Items which are classified as amulets.<br>
*/<br>
public static int AMULETS[] = {1654, 1656, 1658, 1660, 1662, 1664, 8081, 8033, 7968, 6585, 86, 87, 295, 421, 552, 589, 1478, 1692, 1694, 1696, 1698, 1700, 1702, 1704, 1706, 1708, 1710, 1712, 1725, 1727, 1729, 1731, 4021, 4081, 4250, 4677, 6040, 6041, 6208, 1718, 1722, 6859, 6863, 6857};</li>
</ul>
<p>/**</p>
<ul>
<li>Items which are classified as arrows.<br>
*/<br>
public static int ARROWS[] = {8052, 8065, 7919, 7906, 78, 598, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 942, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2866, 4160, 4172, 4173, 4174, 4175, 4740, 5616, 5617, 5618, 5619, 5620, 5621, 5622, 5623, 5624, 5625, 5626, 5627, 6061, 6062};</li>
</ul>
<p>/**</p>
<ul>
<li>Items which are classified as rings.<br>
*/<br>
public static int RINGS[] = {773, 1635, 1637, 1639, 1641, 1643, 1645, 2550, 2552, 2554, 2556, 2558, 2560, 2562, 2564, 2566, 2568, 2570, 2572, 4202, 4657, 6465, 6737, 6731, 6735, 6735, 6583, 6733};</li>
</ul>
<p>/**</p>
<ul>
<li>Items which are classified as body.<br>
*/<br>
public static int BODY[] = {7362, 7364, 636, 638, 640, 642, 644, 426, 1005, 1757, 7592, 6617, 7376, 544, 7372, 7370, 577, 3793, 3775, 3773, 3771, 3769, 3767, 6139, 1135, 2499, 2501, 1035, 540, 5553, 4757, 1833, 6388, 6384, 4111, 4101, 4091, 6186, 6184, 6180, 3058, 4509, 4504, 4069, 4728, 4736, 4712, 6107, 2661, 3140, 1101, 1103, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1129, 1131, 1133, 2583, 2591, 2599, 2607, 2615, 2623, 2653, 2669, 3481, 4712, 4720, 4728, 4749, 4892, 4893, 4894, 4895, 4916, 4917, 4918, 4919, 4964, 4965, 4966, 4967, 6107, 6133, 6322, 6322, 6129, 75, 6916, 6916, 4111, 6654, 6654, 75, 7399, 7390, 7374, 5575, 2503, 6341, 6351, 3387, 5030, 5032, 5034, 5030, 5032, 5034, 7392, 546};</li>
</ul>
<p>/**</p>
<ul>
<li>Items which are classified as legs.<br>
*/<br>
public static int LEGS[] = {7378, 7380, 7382, 7368, 7366, 7388, 646, 648, 650, 652, 654, 428, 1097, 1095, 7593, 6625, 8020, 8015, 7384, 6141, 1835, 538, 1033, 5555, 4759, 6386, 6390, 2497, 2495, 2493, 1099, 4113, 4103, 4093, 6924, 6187, 6185, 6181, 3059, 4510, 4505, 4070, 6108, 538, 542, 548, 1011, 1013, 1015, 1067, 1069, 1071, 1073, 1075, 1077, 1079, 1081, 1083, 1085, 1087, 1089, 1091, 1093, 2585, 2593, 2601, 2609, 2617, 2625, 2655, 2663, 2671, 3059, 3389, 3472, 3473, 3474, 3475, 3476, 3477, 3478, 3479, 3480, 3483, 3485, 3795, 4087, 4585, 4712, 4714, 4722, 4730, 4738, 4751, 4759, 4874, 4875, 4876, 4877, 4898, 4899, 4900, 4901, 4922, 4923, 4924, 4925, 4946, 4947, 4948, 4949, 4970, 4971, 4972, 4973, 4994, 4995, 4996, 4997, 5048, 5050, 5052, 5576, 6107, 6130, 6187, 6390, 6386, 6390, 6396, 6404, 6135, 6809, 6916, 4091, 4111, 6655, 6654, 7398, 7398, 7386, 6324, 6343, 6353, 3387, 5036, 5038, 5040};</li>
</ul>
<p>/**</p>
<ul>
<li>Items which are classified as platebody.<br>
*/<br>
public static int PLATEBODY[] = {636, 638, 640, 642, 644, 426, 8031, 8027, 6617, 544, 577, 3793, 3773, 3775, 3771, 3769, 3767, 6139, 1035, 540, 5553, 4757, 1833, 1835, 6388, 6384, 4111, 4101, 4868, 4869, 4870, 4871, 4892, 4893, 4894, 4895, 4916, 4917, 4918, 4919, 4940, 4941, 4942, 4943, 4964, 4965, 4966, 4967, 4988, 4989, 4990, 0x2f9a0eb, 6186, 6184, 6180, 3058, 4509, 4504, 4069, 4728, 4736, 4712, 6107, 2661, 3140, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 2583, 2591, 2599, 2607, 2615, 6322, 2623, 2653, 2669, 3481, 4720, 4728, 4749, 2661, 6129, 6916, 4091, 6654, 6133, 75, 7399, 7390, 5575, 6341, 6351, 3387, 5030, 5032, 5034, 7392};</li>
</ul>
<p>/**</p>
<ul>
<li>Items which are classified as full helmets.<br>
*/<br>
public static int FULL_HELM[] = {4041, 4042, 1147, 3748, 6137, 6128, 3753, 3755, 3749, 3751, 1149, 3751, 7594, 4708, 4716, 4745, 4732, 5554, 4753, 4732, 4753, 6188, 4511, 4056, 4071, 4724, 6109, 2665, 1153, 1155, 1157, 1159, 1161, 1163, 1165, 2587, 2595, 2605, 2613, 2619, 2627, 2657, 2673, 3486, 6402, 6394, 6131, 74, 7539, 7539, 7534, 5574, 6326};</li>
</ul>
<p>/**</p>
<ul>
<li>Items which are classified as full masks.<br>
*/<br>
public static int FULL_MASK[] = {4502, 6623, 7990, 7594, 1153, 1155, 1157, 1159, 1161, 1163, 1165, 4732, 5554, 4753, 4611, 6188, 3507, 4511, 4056, 4071, 4724, 2665, 1053, 1055, 1057};</li>
</ul>
<p>/**</p>
<ul>
<li>The helmet slot.<br>
*/<br>
public static final int SLOT_HELM = 0;</li>
</ul>
<p>/**</p>
<ul>
<li>The cape slot.<br>
*/<br>
public static final int SLOT_CAPE = 1;</li>
</ul>
<p>/**</p>
<ul>
<li>The amulet slot.<br>
*/<br>
public static final int SLOT_AMULET = 2;</li>
</ul>
<p>/**</p>
<ul>
<li>The weapon slot.<br>
*/<br>
public static final int SLOT_WEAPON = 3;</li>
</ul>
<p>/**</p>
<ul>
<li>The chest slot.<br>
*/<br>
public static final int SLOT_CHEST = 4;</li>
</ul>
<p>/**</p>
<ul>
<li>The shield slot.<br>
*/<br>
public static final int SLOT_SHIELD = 5;</li>
</ul>
<p>/**</p>
<ul>
<li>The bottoms slot.<br>
*/<br>
public static final int SLOT_BOTTOMS = 7;</li>
</ul>
<p>/**</p>
<ul>
<li>The gloves slot.<br>
*/<br>
public static final int SLOT_GLOVES = 9;</li>
</ul>
<p>/**</p>
<ul>
<li>The boots slot.<br>
*/<br>
public static final int SLOT_BOOTS = 10;</li>
</ul>
<p>/**</p>
<ul>
<li>The rings slot.<br>
*/<br>
public static final int SLOT_RING = 12;</li>
</ul>
<p>/**</p>
<ul>
<li>The arrows slot.<br>
*/<br>
public static final int SLOT_ARROWS = 13;</li>
</ul>
<p>/**</p>
<ul>
<li>Equipment type map.<br>
*/<br>
private static final Map&lt;Integer, EquipmentType&gt; equipmentTypes = new HashMap&lt;Integer, EquipmentType&gt;();</li>
</ul>
<p>/**</p>
<ul>
<li>Equipment interface id.<br>
*/<br>
public static final int INTERFACE = 1688;</li>
</ul>
<p>/**</p>
<ul>
<li>Equipment type enum.</li>
<li>
</li>
<li>
<span class="mention">@author</span> Lothy</li>
<li>
<span class="mention">@author</span> Miss Silabsoft</li>
<li>
</li>
</ul>
<p>*/<br>
public enum EquipmentType {<br>
CAPE(“Cape”, Equipment.SLOT_CAPE), BOOTS(“Boots”, Equipment.SLOT_BOOTS), GLOVES(“Gloves”, Equipment.SLOT_GLOVES), SHIELD(“Shield”, Equipment.SLOT_SHIELD), HAT(“Hat”, Equipment.SLOT_HELM), AMULET(“Amulet”, Equipment.SLOT_AMULET), ARROWS(“Arrows”, Equipment.SLOT_ARROWS), RING(“Ring”, Equipment.SLOT_RING), BODY(“Body”, Equipment.SLOT_CHEST), LEGS(“Legs”, Equipment.SLOT_BOTTOMS), PLATEBODY(“Plate body”, Equipment.SLOT_CHEST), FULL_HELM(“Full helm”, Equipment.SLOT_HELM), FULL_MASK(“Full mask”, Equipment.SLOT_HELM), WEAPON(“Weapon”, Equipment.SLOT_WEAPON);</p>
<pre><code> /**
  * The description.
  */
 private String description;

 /**
  * The slot.
  */
 private int slot;

 /**
  * Creates the equipment type.
  * 
  * @param description
  *            The description.
  * @param slot
  *            The slot.
  */
 private EquipmentType(String description, int slot) {
 	this.description = description;
 	this.slot = slot;
 }

 /**
  * Gets the description.
  * 
  * @return The description.
  */
 public String getDescription() {
 	return description;
 }

 /**
  * Gets the slot.
  * 
  * @return The slot.
  */
 public int getSlot() {
 	return slot;
 }
</code></pre>
<p>}</p>
<p>/**</p>
<ul>
<li>Static initializer block to populate the type map.<br>
*/<br>
static {<br>
for (int cape : CAPES) {<br>
equipmentTypes.put(cape, EquipmentType.CAPE);<br>
}<br>
for (int boots : BOOTS) {<br>
equipmentTypes.put(boots, EquipmentType.BOOTS);<br>
}<br>
for (int gloves : GLOVES) {<br>
equipmentTypes.put(gloves, EquipmentType.GLOVES);<br>
}<br>
for (int shield : SHIELDS) {<br>
equipmentTypes.put(shield, EquipmentType.SHIELD);<br>
}<br>
for (int hat : HATS) {<br>
equipmentTypes.put(hat, EquipmentType.HAT);<br>
}<br>
for (int amulet : AMULETS) {<br>
equipmentTypes.put(amulet, EquipmentType.AMULET);<br>
}<br>
for (int arrowType : ARROWS) {<br>
equipmentTypes.put(arrowType, EquipmentType.ARROWS);<br>
}<br>
for (int ring : RINGS) {<br>
equipmentTypes.put(ring, EquipmentType.RING);<br>
}<br>
for (int body : BODY) {<br>
equipmentTypes.put(body, EquipmentType.BODY);<br>
}<br>
for (int legs : LEGS) {<br>
equipmentTypes.put(legs, EquipmentType.LEGS);<br>
}<br>
for (int plateBody : PLATEBODY) {<br>
equipmentTypes.put(plateBody, EquipmentType.PLATEBODY);<br>
}<br>
for (int fullHelm : FULL_HELM) {<br>
equipmentTypes.put(fullHelm, EquipmentType.FULL_HELM);<br>
}<br>
for (int fullMask : FULL_MASK) {<br>
equipmentTypes.put(fullMask, EquipmentType.FULL_MASK);<br>
}<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Gets an equipment type.</li>
<li>
</li>
<li>
<a class="mention" href="/u/param">@param</a> item</li>
<li>
<pre><code>       The item.
</code></pre>
</li>
<li>
<a class="mention" href="/u/return">@return</a> The equipment type.<br>
*/<br>
public static EquipmentType getType(Item item) {<br>
int id = item.getId();<br>
if (equipmentTypes.containsKey(id)) {<br>
return equipmentTypes.get(id);<br>
} else {<br>
return EquipmentType.WEAPON;<br>
}<br>
}</li>
</ul>
<p>/**</p>
<ul>
<li>Checks if an item is of a specific type.</li>
<li>
</li>
<li>
<a class="mention" href="/u/param">@param</a> type</li>
<li>
<pre><code>       The type.
</code></pre>
</li>
<li>
<a class="mention" href="/u/param">@param</a> item</li>
<li>
<pre><code>       The item.
</code></pre>
</li>
<li>
<a class="mention" href="/u/return">@return</a> <code>true</code> if the types are the same, <code>false</code>
</li>
<li>
<pre><code>    if not.
</code></pre>
</li>
</ul>
<p>*/<br>
public static boolean is(EquipmentType type, Item item) {<br>
return getType(item).equals(type);<br>
}</p>
</li>
</ul>
<p>}<br>
[/code]</p>
<p>I don’t see a need to explain all of this code, although I will tell you what the essentials of this class does.</p>
<p>Like most/any server you need too declare what items go where, too do this you can use the ints provided in the class. For example.</p>
<p>I have added a new model too my client, and would like the model too be used as a cape. In order too do this I will need to add the item ID into the</p>
<pre><code class="lang-auto"></code></pre>
<p>[center]<span class="bbcode-b">THIS TUTORIAL IS THE BASICS! LIKE I SAID I WILL BE CREATING MORE THREADS WHEN I FEEL PEOPLE ARE COMFORTABLE WITH THE BASIC FEATURES!</span>[/center]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747/1</link>
        <pubDate>Wed, 20 Apr 2011 09:34:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-391747-1</guid>
        <source url="https://forum.moparisthebest.com/t/items-and-equipment-hyperion-thread/391747.rss">Items and equipment [Hyperion thread]</source>
      </item>
  </channel>
</rss>
