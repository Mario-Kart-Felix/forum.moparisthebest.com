<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Understanding and implementing a binary search algorithm</title>
    <link>https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414</link>
    <description>[center][size=24pt][b][u][color=teal]Understanding and implementing a binary search algorithm[/color][/u][/b][/size][/center]

[center][size=18pt][b][u][color=teal]Introduction[/color][/u][/b][/size][/center]
Hello and thank you for taking the time to read my tutorial. Hopefully you&#39;ll learn something from it. If there&#39;s anything you struggle with, or anything you think I&#39;ve underexplained, please post a reply to the thread and I will clarify it!

Recently, in my Decision Mathematics course, I learnt about binary searches and how they work. I believe that binary searches are used in the get() function for HashMaps, and they are definitely used for the Arrays.binarySearch functions. This tutorial should hopefully teach you what a binary search is, and how it works.

[hr]

[center][size=18pt][b][u][color=teal]What is a binary search?[/color][/u][/b][/size][/center]
A binary search is a way of searching through a list of [b]ordered[/b] data of a [b]common type[/b]. It can tell you if the target piece of data exists in the list, and the position of the target data (if it is in the list). If the list isn&#39;t perfectly ordered, a binary search cannot be executed on it!

[hr]

[center][size=18pt][b][u][color=teal]How does a binary search work?[/color][/u][/b][/size][/center]
In order to explain, I will put it in text and then I will show an example. After that, I will provide some code which may clear it up for some people.

A binary search works by first selecting the median value of the list (known as the midpoint). This can be gained through the following equation: 
[center](length of list + 1) / 2[/center]
Then, you need to compare the target to the value of the midpoint. If the value is [b]before[/b] the midpoint (to the left of it in the list), then you take all the items to the left of the midpoint ([b]not[/b] including the midpoint) and run the process again. If the value is [b]after[/b] the midpoint (to the right of it in the list), then you take all the items to the right of the midpoint ([b]not[/b] including the midpoint) and run the process again. If the value is [b]equal to[/b] the midpoint, then you have found the target. If the number of items in the list becomes 0 and you haven&#39;t yet found a target, then the target does not exist in the list.

[hr]

[center][size=18pt][b][u][color=teal]Can I see an example?[/color][/u][/b][/size][/center]
Of course! We&#39;ll be working with the following data set:
[center]1    5    7    8   19   20   27   28   29[/center]
Firstly, we&#39;ll be trying to find the number 5. We need to calculate the midpoint, so we do ((9 + 1) / 2) as there are 9 items in the list. This gives us 5. The fifth item is 19 - this is our midpoint. Our target (5) is less than 19, so we dispose of the midpoint and everything above it.
[center]1    5    7    8   [s]19[/s]   [s]20[/s]   [s]27[/s]   [s]28[/s]   [s]29[/s][/center]
We now need to recalculate the midpoint. ((4 + 1) / 2) gives us 2.5, which we round to 3. The third item in the list is 7, and this will be our midpoint. Our target (5) is less than 7, so we dispose of the midpoint and everything above it.
[center]1    5    [s]7[/s]    [s]8[/s]   [s]19[/s]   [s]20[/s]   [s]27[/s]   [s]28[/s]   [s]29[/s][/center]
Again, we need to recalculate the midpoint. ((2 + 1) / 2) gives us 1.5, which we round to 2. The second item in the list is 5, and this will be our midpoint. Our target (5) is equal to 5, so we have found the target and it is the second item in the list.

Let&#39;s try that again, and see what happens when the number doesn&#39;t exist. We&#39;ll use the same data set, but we&#39;ll search for the number 23.
[center]1    5    7    8   19   20   27   28   29[/center]
The midpoint at the beginning is the same as before - 19. This is because the number of items in the list hasn&#39;t changed. Our target (23) is more than the midpoint, so dispose the midpoint and everything below it.
[center][s]1[/s]    [s]5[/s]    [s]7[/s]    [s]8[/s]   [s]19[/s]   20   27   28   29[/center]
Time to work out the midpoint again. ((4 + 1) / 2) gives us 2.5, which we round to 3. The third item is 28, and so our midpoint is 28. Our target (23) is less than our midpoint, so dispose the midpoint and everything above it.
[center][s]1[/s]    [s]5[/s]    [s]7[/s]    [s]8[/s]   [s]19[/s]   20   27   [s]28[/s]   [s]29[/s][/center]
The midpoint for this time is 27 - I&#39;m sure you can work out how I got that conclusion! (hint: 1.5 rounded) Our target (23) is less than our midpoint, so dispose the midpoint and everything above it again.
[center][s]1[/s]    [s]5[/s]    [s]7[/s]    [s]8[/s]   [s]19[/s]   20   [s]27[/s]   [s]28[/s]   [s]29[/s][/center]
We only have one item left now, so our midpoint is ((1 + 1) / 2), which is 1. The midpoint is 20, which is less than our target of 23. This means that we dispose our midpoint and everything that&#39;s below it.
[center][s]1[/s]    [s]5[/s]    [s]7[/s]    [s]8[/s]   [s]19[/s]   [s]20[/s]   [s]27[/s]   [s]28[/s]   [s]29[/s][/center]
As you can see, we now have an empty list, but we haven&#39;t yet found our target. This means that the target was not in the list.

[hr]

[center][size=18pt][b][u][color=teal]Put it in code![/color][/u][/b][/size][/center]
[code=Java]public static void main(String[] args)
{
	int[] array = new int[] {1, 2, 3, 4, 5, 7, 8, 9};

	/* Output: 4 */
	System.out.println(binarySearch(array, 5));
}
	
public static int binarySearch(int[] searchArray, int target)
{
	/* Set the minimum bound to the first item in the array. */
	int minimum = 0;
	/* Set the maximum bound to the last item in the array. */
	int maximum = searchArray.length - 1;
	
	/*
	 * Repeat whilst the maximum bound is more than or equal to the minimum
	 * bound.
	 */
	while (maximum &gt;= minimum)
	{
		/* Calculate the midpoint between the minimum and the maximum bound. */
		int midpoint = (maximum + minimum) / 2;

		/* Determine which action to take. */
		if (searchArray[midpoint] &lt; target)
			/*
			 * If the target value is bigger than the midpoint value, move
			 * the minimum bound upwards.
			 */
			minimum = midpoint + 1;
		else if (searchArray[midpoint] &gt; target)
			/*
			 * If the target value is smaller than the midpoint value, move
			 * the maximum bound downwards.
			 */
			maximum = midpoint - 1;
		else
			/*
			 * If the target value is equal to the midpoint value, return
			 * the index of the midpoint.
			 */
			return midpoint;
	}
	/*
	 * The maximum bound was smaller than the minimum bound, and so the
	 * target was not found.
	 */
	return -1;
}[/code]

[hr]

[center][size=18pt][b][u][color=teal]Thankyou![/color][/u][/b][/size][/center]
Thank you for reading my tutorial, hopefully it has helped you learn something new!</description>
    
    <lastBuildDate>Tue, 15 Oct 2013 08:47:33 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Understanding and implementing a binary search algorithm</title>
        <dc:creator><![CDATA[@hadesflames hadesflames]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hadesflames">@hadesflames</a> wrote:</p>
          <blockquote>
              <p>[quote=“HcoJustin, post:13, topic:533414”][quote author=hadesflames link=topic=652205.msg4374986#msg4374986 date=1381817363]</p>
<aside class="quote">
<blockquote>
<p>You should have definitely focused on sorting algorithms first. Especially when Java already has a binary search <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Arrays.html#binarySearch" rel="nofollow noopener">http://docs.oracle.com/javase/7/docs/api/java/util/Arrays.html#binarySearch</a>(byte[], byte)</p>
</blockquote>
</aside>
<p>The idea here is to understand how something that’s more efficient works, not memorize the algorithm…<em>facepalm</em><br>
[/quote]<br>
Anyone interested in computer science should know how a binary search works. It is one of the easiest concepts to grasp. There is only a small number of ways it can be implemented and refined until you reach the most efficient state. OP should have focused more on how to use them in one of our servers[/quote]</p>
<p><em>facepalm</em></p>
<p>You’re absolutely wrong. This tut is meant to help people starting out with algorithms, be they interested in computer science or any other field. People that already know how this works would know how to implement it themselves for whatever they would need it for. Also, simply being interested in computer science does NOT mean someone knows about the field.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/15</link>
        <pubDate>Tue, 15 Oct 2013 08:47:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-533414-15</guid>
        <source url="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414.rss">Understanding and implementing a binary search algorithm</source>
      </item>
      <item>
        <title>Understanding and implementing a binary search algorithm</title>
        <dc:creator><![CDATA[@Ambokile Ambokile]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ambokile">@Ambokile</a> wrote:</p>
          <blockquote>
              <p>[quote=“HcoJustin, post:13, topic:533414”][quote author=hadesflames link=topic=652205.msg4374986#msg4374986 date=1381817363]</p>
<aside class="quote">
<blockquote>
<p>You should have definitely focused on sorting algorithms first. Especially when Java already has a binary search <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Arrays.html#binarySearch" rel="nofollow noopener">http://docs.oracle.com/javase/7/docs/api/java/util/Arrays.html#binarySearch</a>(byte[], byte)</p>
</blockquote>
</aside>
<p>The idea here is to understand how something that’s more efficient works, not memorize the algorithm…<em>facepalm</em><br>
[/quote]<br>
Anyone interested in computer science should know how a binary search works. It is one of the easiest concepts to grasp. There is only a small number of ways it can be implemented and refined until you reach the most efficient state. OP should have focused more on how to use them in one of our servers[/quote]<br>
However clearly some people <span class="bbcode-b">don’t</span> understand it, and so this guide is for those people. I might make a tutorial based on RSPS implementation of a binary search algorithm later on.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/14</link>
        <pubDate>Tue, 15 Oct 2013 07:46:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-533414-14</guid>
        <source url="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414.rss">Understanding and implementing a binary search algorithm</source>
      </item>
      <item>
        <title>Understanding and implementing a binary search algorithm</title>
        <dc:creator><![CDATA[@HcoJustin HcoJustin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hcojustin">@HcoJustin</a> wrote:</p>
          <blockquote>
              <p>[quote=“hadesflames, post:12, topic:533414”][quote author=HcoJustin link=topic=652205.msg4373887#msg4373887 date=1381523332]<br>
You should have definitely focused on sorting algorithms first. Especially when Java already has a binary search <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Arrays.html#binarySearch" rel="nofollow noopener">http://docs.oracle.com/javase/7/docs/api/java/util/Arrays.html#binarySearch</a>(byte[], byte)<br>
[/quote]</p>
<p>The idea here is to understand how something that’s more efficient works, not memorize the algorithm…<em>facepalm</em>[/quote]<br>
Anyone interested in computer science should know how a binary search works. It is one of the easiest concepts to grasp. There is only a small number of ways it can be implemented and refined until you reach the most efficient state. OP should have focused more on how to use them in one of our servers</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/13</link>
        <pubDate>Tue, 15 Oct 2013 06:33:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-533414-13</guid>
        <source url="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414.rss">Understanding and implementing a binary search algorithm</source>
      </item>
      <item>
        <title>Understanding and implementing a binary search algorithm</title>
        <dc:creator><![CDATA[@hadesflames hadesflames]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hadesflames">@hadesflames</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="9" data-topic="533414">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/hcojustin/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> HcoJustin:</div>
<blockquote>
<p>You should have definitely focused on sorting algorithms first. Especially when Java already has a binary search <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Arrays.html#binarySearch" rel="nofollow noopener">http://docs.oracle.com/javase/7/docs/api/java/util/Arrays.html#binarySearch</a>(byte[], byte)</p>
</blockquote>
</aside>
<p>The idea here is to understand how something that’s more efficient works, not memorize the algorithm…<em>facepalm</em></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/12</link>
        <pubDate>Tue, 15 Oct 2013 06:09:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-533414-12</guid>
        <source url="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414.rss">Understanding and implementing a binary search algorithm</source>
      </item>
      <item>
        <title>Understanding and implementing a binary search algorithm</title>
        <dc:creator><![CDATA[@Ambokile Ambokile]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ambokile">@Ambokile</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="9" data-topic="533414">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/hcojustin/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> HcoJustin:</div>
<blockquote>
<p>You should have definitely focused on sorting algorithms first. Especially when Java already has a binary search <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Arrays.html#binarySearch" rel="nofollow noopener">http://docs.oracle.com/javase/7/docs/api/java/util/Arrays.html#binarySearch</a>(byte[], byte)</p>
</blockquote>
</aside>
<p>Java also has sorting functions. Binary search is useful to understand, because when a lot of people write a function to search for something they normally use a linear search.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/11</link>
        <pubDate>Sat, 12 Oct 2013 07:05:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-533414-11</guid>
        <source url="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414.rss">Understanding and implementing a binary search algorithm</source>
      </item>
      <item>
        <title>Understanding and implementing a binary search algorithm</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="9" data-topic="533414">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/hcojustin/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> HcoJustin:</div>
<blockquote>
<p>Java already has a binary search</p>
</blockquote>
</aside>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/10</link>
        <pubDate>Fri, 11 Oct 2013 22:30:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-533414-10</guid>
        <source url="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414.rss">Understanding and implementing a binary search algorithm</source>
      </item>
      <item>
        <title>Understanding and implementing a binary search algorithm</title>
        <dc:creator><![CDATA[@HcoJustin HcoJustin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hcojustin">@HcoJustin</a> wrote:</p>
          <blockquote>
              <p>You should have definitely focused on sorting algorithms first. Especially when Java already has a binary search <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Arrays.html#binarySearch" rel="nofollow noopener">http://docs.oracle.com/javase/7/docs/api/java/util/Arrays.html#binarySearch</a>(byte[], byte)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/9</link>
        <pubDate>Fri, 11 Oct 2013 20:28:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-533414-9</guid>
        <source url="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414.rss">Understanding and implementing a binary search algorithm</source>
      </item>
      <item>
        <title>Understanding and implementing a binary search algorithm</title>
        <dc:creator><![CDATA[@Ambokile Ambokile]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ambokile">@Ambokile</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="7" data-topic="533414">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/loveandpower/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Loveandpower:</div>
<blockquote>
<p>of course they can’t be nominated you are an editor so that would be a conflict of interest would it not ? <img src="https://forum.moparisthebest.com/images/emoji/twitter/expressionless.png?v=5" title=":expressionless:" class="emoji" alt=":expressionless:"></p>
</blockquote>
</aside>
<p>Not at all. The aim is to show people which tutorials are the best, if an editor’s tutorial is the best then it will be listed!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/8</link>
        <pubDate>Fri, 11 Oct 2013 15:45:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-533414-8</guid>
        <source url="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414.rss">Understanding and implementing a binary search algorithm</source>
      </item>
      <item>
        <title>Understanding and implementing a binary search algorithm</title>
        <dc:creator><![CDATA[@Loveandpower Loveandpower]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/loveandpower">@Loveandpower</a> wrote:</p>
          <blockquote>
              <p>of course they can’t be nominated you are an editor so that would be a conflict of interest would it not ? <img src="https://forum.moparisthebest.com/images/emoji/twitter/expressionless.png?v=5" title=":expressionless:" class="emoji" alt=":expressionless:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/7</link>
        <pubDate>Fri, 11 Oct 2013 14:56:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-533414-7</guid>
        <source url="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414.rss">Understanding and implementing a binary search algorithm</source>
      </item>
      <item>
        <title>Understanding and implementing a binary search algorithm</title>
        <dc:creator><![CDATA[@Ambokile Ambokile]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ambokile">@Ambokile</a> wrote:</p>
          <blockquote>
              <p>[quote=“hadesflames, post:3, topic:533414”]A better understanding of programming techniques leads to a better developer, and hence a better private server. Nice explanation, and will certainly help people wet their feet into using and understanding more efficient ways of doing things. But as far as actually using this in a private server’s code, yeah you’ll never see this or any other search algorithm in the code.</p>
<p>Next you should look at explaining a sorting algorithm with an average case complexity of O(nlogn) =p[/quote]<br>
I intend to cover sorting algorithms soon.</p>
<aside class="quote" data-post="4" data-topic="533414">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/rodgerwilco/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Rodgerwilco:</div>
<blockquote>
<p>I am not reading this until that teal color is changed to something more appealing. Making my eyes bleed.</p>
</blockquote>
</aside>
<p>What a shame</p>
<p>[quote=“Loveandpower, post:5, topic:533414”]very nice explanation</p>
<p>it’s a shame mopar monthly staff can’t be nominated for tut of the month huh?[/quote]<br>
They can be nominated, I just wasn’t <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/6</link>
        <pubDate>Fri, 11 Oct 2013 01:18:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-533414-6</guid>
        <source url="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414.rss">Understanding and implementing a binary search algorithm</source>
      </item>
      <item>
        <title>Understanding and implementing a binary search algorithm</title>
        <dc:creator><![CDATA[@Loveandpower Loveandpower]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/loveandpower">@Loveandpower</a> wrote:</p>
          <blockquote>
              <p>very nice explanation</p>
<p>it’s a shame mopar monthly staff can’t be nominated for tut of the month huh?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/5</link>
        <pubDate>Thu, 10 Oct 2013 12:38:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-533414-5</guid>
        <source url="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414.rss">Understanding and implementing a binary search algorithm</source>
      </item>
      <item>
        <title>Understanding and implementing a binary search algorithm</title>
        <dc:creator><![CDATA[@Rodgerwilco Rodgerwilco]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rodgerwilco">@Rodgerwilco</a> wrote:</p>
          <blockquote>
              <p>I am not reading this until that teal color is changed to something more appealing. Making my eyes bleed.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/4</link>
        <pubDate>Thu, 10 Oct 2013 06:20:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-533414-4</guid>
        <source url="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414.rss">Understanding and implementing a binary search algorithm</source>
      </item>
      <item>
        <title>Understanding and implementing a binary search algorithm</title>
        <dc:creator><![CDATA[@hadesflames hadesflames]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hadesflames">@hadesflames</a> wrote:</p>
          <blockquote>
              <p>A better understanding of programming techniques leads to a better developer, and hence a better private server. Nice explanation, and will certainly help people wet their feet into using and understanding more efficient ways of doing things. But as far as actually using this in a private server’s code, yeah you’ll never see this or any other search algorithm in the code.</p>
<p>Next you should look at explaining a sorting algorithm with an average case complexity of O(nlogn) =p</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/3</link>
        <pubDate>Thu, 10 Oct 2013 04:28:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-533414-3</guid>
        <source url="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414.rss">Understanding and implementing a binary search algorithm</source>
      </item>
      <item>
        <title>Understanding and implementing a binary search algorithm</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>I honestly have never used this search algorithm when I was programming a RSPS. But its a nice explanation.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/2</link>
        <pubDate>Sun, 29 Sep 2013 22:19:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-533414-2</guid>
        <source url="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414.rss">Understanding and implementing a binary search algorithm</source>
      </item>
      <item>
        <title>Understanding and implementing a binary search algorithm</title>
        <dc:creator><![CDATA[@Ambokile Ambokile]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ambokile">@Ambokile</a> wrote:</p>
          <blockquote>
              <p>[center][size=24pt]<span class="bbcode-b"><span class="bbcode-u">[color=teal]Understanding and implementing a binary search algorithm[/color]</span></span>[/size][/center]</p>
<p>[center][size=18pt]<span class="bbcode-b"><span class="bbcode-u">[color=teal]Introduction[/color]</span></span>[/size][/center]<br>
Hello and thank you for taking the time to read my tutorial. Hopefully you’ll learn something from it. If there’s anything you struggle with, or anything you think I’ve underexplained, please post a reply to the thread and I will clarify it!</p>
<p>Recently, in my Decision Mathematics course, I learnt about binary searches and how they work. I believe that binary searches are used in the get() function for HashMaps, and they are definitely used for the Arrays.binarySearch functions. This tutorial should hopefully teach you what a binary search is, and how it works.</p>
<p>[hr]</p>
<p>[center][size=18pt]<span class="bbcode-b"><span class="bbcode-u">[color=teal]What is a binary search?[/color]</span></span>[/size][/center]<br>
A binary search is a way of searching through a list of <span class="bbcode-b">ordered</span> data of a <span class="bbcode-b">common type</span>. It can tell you if the target piece of data exists in the list, and the position of the target data (if it is in the list). If the list isn’t perfectly ordered, a binary search cannot be executed on it!</p>
<p>[hr]</p>
<p>[center][size=18pt]<span class="bbcode-b"><span class="bbcode-u">[color=teal]How does a binary search work?[/color]</span></span>[/size][/center]<br>
In order to explain, I will put it in text and then I will show an example. After that, I will provide some code which may clear it up for some people.</p>
<p>A binary search works by first selecting the median value of the list (known as the midpoint). This can be gained through the following equation:<br>
[center](length of list + 1) / 2[/center]<br>
Then, you need to compare the target to the value of the midpoint. If the value is <span class="bbcode-b">before</span> the midpoint (to the left of it in the list), then you take all the items to the left of the midpoint (<span class="bbcode-b">not</span> including the midpoint) and run the process again. If the value is <span class="bbcode-b">after</span> the midpoint (to the right of it in the list), then you take all the items to the right of the midpoint (<span class="bbcode-b">not</span> including the midpoint) and run the process again. If the value is <span class="bbcode-b">equal to</span> the midpoint, then you have found the target. If the number of items in the list becomes 0 and you haven’t yet found a target, then the target does not exist in the list.</p>
<p>[hr]</p>
<p>[center][size=18pt]<span class="bbcode-b"><span class="bbcode-u">[color=teal]Can I see an example?[/color]</span></span>[/size][/center]<br>
Of course! We’ll be working with the following data set:<br>
[center]1    5    7    8   19   20   27   28   29[/center]<br>
Firstly, we’ll be trying to find the number 5. We need to calculate the midpoint, so we do ((9 + 1) / 2) as there are 9 items in the list. This gives us 5. The fifth item is 19 - this is our midpoint. Our target (5) is less than 19, so we dispose of the midpoint and everything above it.<br>
[center]1    5    7    8   <span class="bbcode-s">19</span>   <span class="bbcode-s">20</span>   <span class="bbcode-s">27</span>   <span class="bbcode-s">28</span>   <span class="bbcode-s">29</span>[/center]<br>
We now need to recalculate the midpoint. ((4 + 1) / 2) gives us 2.5, which we round to 3. The third item in the list is 7, and this will be our midpoint. Our target (5) is less than 7, so we dispose of the midpoint and everything above it.<br>
[center]1    5    <span class="bbcode-s">7</span>    <span class="bbcode-s">8</span>   <span class="bbcode-s">19</span>   <span class="bbcode-s">20</span>   <span class="bbcode-s">27</span>   <span class="bbcode-s">28</span>   <span class="bbcode-s">29</span>[/center]<br>
Again, we need to recalculate the midpoint. ((2 + 1) / 2) gives us 1.5, which we round to 2. The second item in the list is 5, and this will be our midpoint. Our target (5) is equal to 5, so we have found the target and it is the second item in the list.</p>
<p>Let’s try that again, and see what happens when the number doesn’t exist. We’ll use the same data set, but we’ll search for the number 23.<br>
[center]1    5    7    8   19   20   27   28   29[/center]<br>
The midpoint at the beginning is the same as before - 19. This is because the number of items in the list hasn’t changed. Our target (23) is more than the midpoint, so dispose the midpoint and everything below it.<br>
[center]<span class="bbcode-s">1</span>    <span class="bbcode-s">5</span>    <span class="bbcode-s">7</span>    <span class="bbcode-s">8</span>   <span class="bbcode-s">19</span>   20   27   28   29[/center]<br>
Time to work out the midpoint again. ((4 + 1) / 2) gives us 2.5, which we round to 3. The third item is 28, and so our midpoint is 28. Our target (23) is less than our midpoint, so dispose the midpoint and everything above it.<br>
[center]<span class="bbcode-s">1</span>    <span class="bbcode-s">5</span>    <span class="bbcode-s">7</span>    <span class="bbcode-s">8</span>   <span class="bbcode-s">19</span>   20   27   <span class="bbcode-s">28</span>   <span class="bbcode-s">29</span>[/center]<br>
The midpoint for this time is 27 - I’m sure you can work out how I got that conclusion! (hint: 1.5 rounded) Our target (23) is less than our midpoint, so dispose the midpoint and everything above it again.<br>
[center]<span class="bbcode-s">1</span>    <span class="bbcode-s">5</span>    <span class="bbcode-s">7</span>    <span class="bbcode-s">8</span>   <span class="bbcode-s">19</span>   20   <span class="bbcode-s">27</span>   <span class="bbcode-s">28</span>   <span class="bbcode-s">29</span>[/center]<br>
We only have one item left now, so our midpoint is ((1 + 1) / 2), which is 1. The midpoint is 20, which is less than our target of 23. This means that we dispose our midpoint and everything that’s below it.<br>
[center]<span class="bbcode-s">1</span>    <span class="bbcode-s">5</span>    <span class="bbcode-s">7</span>    <span class="bbcode-s">8</span>   <span class="bbcode-s">19</span>   <span class="bbcode-s">20</span>   <span class="bbcode-s">27</span>   <span class="bbcode-s">28</span>   <span class="bbcode-s">29</span>[/center]<br>
As you can see, we now have an empty list, but we haven’t yet found our target. This means that the target was not in the list.</p>
<p>[hr]</p>
<p>[center][size=18pt]<span class="bbcode-b"><span class="bbcode-u">[color=teal]Put it in code![/color]</span></span>[/size][/center]</p>
<p>[code=Java]public static void main(String[] args)<br>
{<br>
int[] array = new int[] {1, 2, 3, 4, 5, 7, 8, 9};</p>
<pre><code>/* Output: 4 */
System.out.println(binarySearch(array, 5));
</code></pre>
<p>}</p>
<p>public static int binarySearch(int[] searchArray, int target)<br>
{<br>
/* Set the minimum bound to the first item in the array. <em>/<br>
int minimum = 0;<br>
/</em> Set the maximum bound to the last item in the array. */<br>
int maximum = searchArray.length - 1;</p>
<pre><code>/*
 * Repeat whilst the maximum bound is more than or equal to the minimum
 * bound.
 */
while (maximum &gt;= minimum)
{
	/* Calculate the midpoint between the minimum and the maximum bound. */
	int midpoint = (maximum + minimum) / 2;

	/* Determine which action to take. */
	if (searchArray[midpoint] &lt; target)
		/*
		 * If the target value is bigger than the midpoint value, move
		 * the minimum bound upwards.
		 */
		minimum = midpoint + 1;
	else if (searchArray[midpoint] &gt; target)
		/*
		 * If the target value is smaller than the midpoint value, move
		 * the maximum bound downwards.
		 */
		maximum = midpoint - 1;
	else
		/*
		 * If the target value is equal to the midpoint value, return
		 * the index of the midpoint.
		 */
		return midpoint;
}
/*
 * The maximum bound was smaller than the minimum bound, and so the
 * target was not found.
 */
return -1;
</code></pre>
<p>}[/code]</p>
<p>[hr]</p>
<p>[center][size=18pt]<span class="bbcode-b"><span class="bbcode-u">[color=teal]Thankyou![/color]</span></span>[/size][/center]<br>
Thank you for reading my tutorial, hopefully it has helped you learn something new!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414/1</link>
        <pubDate>Sun, 29 Sep 2013 22:00:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-533414-1</guid>
        <source url="https://forum.moparisthebest.com/t/understanding-and-implementing-a-binary-search-algorithm/533414.rss">Understanding and implementing a binary search algorithm</source>
      </item>
  </channel>
</rss>
