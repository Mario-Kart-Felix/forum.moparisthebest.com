<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>First JAVA game on my own [noob]</title>
    <link>https://forum.moparisthebest.com/t/first-java-game-on-my-own-noob/429079</link>
    <description>I will accept constructive criticism, but please do not flame me too hard as I&#39;m fairly new to java.
I know there is some useless code and some VERY wrong ways to do some things..
[code=java]
public class Main {

	public static int wins = 0;
	public static int isWalking = -1;
	public static int isFighting = 0;
	public static int isPlayerTurn = 0;
	public static int walkDelay = 0;
	public static int maxPlayerHp = 100;
	public static int playerHp = 100;
	public static int monsterHp = 100;
	public static int maxMonsterHp = 90;
	public static int randomHeal = random(3);
	

	/*
	 * Idle Game
	 */

	public static void main(String[] args) {

		/*
		 * main code goes into here* add the interfaces and all that good shit
		 */

		/*
		 * Make sure the player is not walking and not fighting
		 */
		if (isWalking == -1 &amp;&amp; isFighting == 0) {
			isWalking = random(5);
			walkMethod();
		}
	}

	public static int random(int range) {
		return (int) (java.lang.Math.random() * (range + 1));
	}

	/*
	 * useless voids go here
	 */

	/*
	 * common sense
	 */
	public static void walkAgain() {
		walkMethod();
	}

	public static void walkMethod() {
		/*
		 * random walking(0-6)
		 */
		int bullshit = random(10);
		while (isWalking &gt; -1) {
			isWalking--;
			try {
				Thread.sleep(1500);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			System.out.println(&quot;[WALKING]*trot*&quot;);

		}
		int randomWalk = random(1);
		if (randomWalk != 1) {
			System.out.println(&quot;&quot;);
			System.out.println(&quot;[ENEMY]No enemy found!&quot;); // if no enemy is
															// found, we walk
															// again
			System.out.println(&quot;&quot;);
			isWalking = random(5);
			walkAgain();
		}
		if (isWalking &lt;= 0 &amp;&amp; randomWalk == 1) {
			isFighting = 1;
			System.out.println(&quot;[random]Random event&quot;);
			System.out.println(&quot;&quot;);
			/*
			 * eleminates the use of the &quot;if stat
			 */
			switch (bullshit) {
			case 0:
				System.out.println(&quot;bullshit == 0&quot;);
				break;
			case 1:
				maxPlayerHp -= 25;
				System.out
						.println(&quot;You stepped on a dildo and lost 25 hitpoints!&quot;);
				break;
			case 2:
				playerHp += 25;
				System.out
						.println(&quot;You notice a dildo on the ground and you jump over it! +25 hitpoints!&quot;);
				break;
			case 3:
				monsterHp += 25;
				System.out
						.println(&quot;The troll notices you coming and prepares! +25 monster HP&quot;);
				break;
			case 4:
				monsterHp -= 25;
				System.out
						.println(&quot;the troll notices you coming and hides! -25 monster HP&quot;);
				break;
			case 5:
				System.out.println(&quot;bullshit == 5&quot;);
				break;
			case 6:
				System.out.println(&quot;bullshit == 6&quot;);
				break;
			case 7:
				System.out.println(&quot;bullshit == 7&quot;);
				break;
			case 8:
				System.out.println(&quot;bullshit == 8&quot;);
				break;
			case 9:
				System.out.println(&quot;bullshit == 9&quot;);
				break;
			case 10:
				System.out.println(&quot;bullshit == 10&quot;);
				break;

			}
			System.out.println(&quot;&quot;);
			System.out.println(&quot;[ENEMY]You have found an enemy!&quot;);
			System.out.println(&quot;&quot;);
			fightingMonster();
		}
		/*
		 * random walking with random shit
		 */

	}

	/*
	 * public static void playerFight() { if (isFighting == 1 &amp;&amp; playerHp &gt; 0) {
	 * fightingMonster(); isPlayerTurn = 1; } else {
	 * System.out.println(&quot;end of fight&quot;); }
	 * 
	 * }
	 */
	public static void fightingMonster() {
		/*
		 * handle fake BS combat with random damage*
		 */
		while (isFighting == 1 &amp;&amp; playerHp &gt; 0) {
			if (monsterHp &lt; 0)
				return;
			int randomPlayerHit = random(30);
			int randomMonsterHit = random(30);
			int playerHpHeal = 0;
			int randomNpcDodge = 0;
			if (playerHp &gt; 0 &amp;&amp; monsterHp &gt; 0 &amp;&amp; isPlayerTurn == 1) {
				monsterHp -= randomPlayerHit;
				System.out.println(&quot;[DAMAGE] You have dealt &quot; + randomPlayerHit
						+ &quot; damage!&quot;);

				playerHpHeal = random(10);
				playerHp += playerHpHeal;
				randomNpcDodge = random(3);
				if (randomHeal == 3) {
					System.out.println(&quot;[PLAYER HEALTH] You have been healed &quot;
							+ playerHpHeal + &quot; hitpoints!&quot;);
				}
				if ((monsterHp - randomPlayerHit == 0)) {
					System.out.println(&quot;[PLAYER HEALTH] You now have 0 health&quot;);
				} else {
					System.out.println(&quot;[NPC HEALTH] The npc now has &quot;
							+ monsterHp + &quot;&quot;);
				}
				System.out.println(&quot;&quot;);
				isPlayerTurn = 0;
				try {
					Thread.sleep(2000);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}

			if (playerHp &gt; 0 &amp;&amp; monsterHp &gt; 0 &amp;&amp; isPlayerTurn == 0) {
				playerHp -= randomMonsterHit;

				System.out.println(&quot;[DAMAGE] You have been hit for &quot;
						+ randomMonsterHit + &quot; damage!&quot;);
				if ((playerHp - randomMonsterHit == 0)) {
					System.out.println(&quot;[PLAYER HEALTH] You now have 0 health&quot;);
				} else {
					System.out.println(&quot;[PLAYER HEALTH] You now have &quot;
							+ playerHp

							+ &quot; health&quot;);
					if (randomNpcDodge == 3) {
						monsterHp = playerHp;
						System.out
								.println(&quot;[LEECH]You&#39;re enemy leeched your HP!&quot;);
					}
				}
				System.out.println(&quot;&quot;);
				isPlayerTurn = 1;
				try {
					Thread.sleep(2000);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}

			if (playerHp &lt;= 0) {

				System.out.println(&quot;You HAVE LOST THE BATTLE AT ROUND &quot; + wins
						+ &quot;!&quot;);
				System.out.println(&quot;[NPC HEALTH] The npc had &quot; + monsterHp
						+ &quot; health left!&quot;);
				System.out.println(&quot;&quot;);
			}
			if (monsterHp &lt;= 0) {

				wins += 1;
				System.out.println(&quot;You HAVE WON THE BATTLE WITH &quot; + playerHp
						+ &quot; HP LEFT!&quot;);
				System.out.println(&quot;You HAVE WON &quot; + wins + &quot; ROUNDS!&quot;);
				maxPlayerHp += 25;
				maxMonsterHp += 25.5;
				monsterHp = maxMonsterHp;
				playerHp = maxPlayerHp;
				System.out.println(&quot;You NOW HAVE &quot; + playerHp + &quot; MAX HEALTH&quot;);
				isFighting = 0;
				// confirm();
				isWalking = 6;
				walkMethod();

			}
		}
	}

	/*
	 * public static void confirm() { Scanner input = new Scanner(System.in);
	 * System.out.println(&quot;Press ENTER.&quot;); input.nextLine(); if (input ==
	 * (input)) { walkMethod(); } }
	 */

}
[/code]</description>
    
    <lastBuildDate>Fri, 13 Jan 2012 04:55:16 +0000</lastBuildDate>
    <category>Game Development</category>
    <atom:link href="https://forum.moparisthebest.com/t/first-java-game-on-my-own-noob/429079.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>First JAVA game on my own [noob]</title>
        <dc:creator><![CDATA[@chazion chazion]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/chazion">@chazion</a> wrote:</p>
          <blockquote>
              <p>I know it does absolutely nothing except run the walkMethod again. I don’t know why I left it there, thanks.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/first-java-game-on-my-own-noob/429079/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/first-java-game-on-my-own-noob/429079/3</link>
        <pubDate>Fri, 13 Jan 2012 04:55:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-429079-3</guid>
        <source url="https://forum.moparisthebest.com/t/first-java-game-on-my-own-noob/429079.rss">First JAVA game on my own [noob]</source>
      </item>
      <item>
        <title>First JAVA game on my own [noob]</title>
        <dc:creator><![CDATA[@lemme_winks lemme_winks_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lemme_winks">@lemme_winks</a> wrote:</p>
          <blockquote>
              <p>what exactly does the walkAgain method do besides wrap walkMethod with absolutely nothing</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/first-java-game-on-my-own-noob/429079/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/first-java-game-on-my-own-noob/429079/2</link>
        <pubDate>Fri, 13 Jan 2012 04:52:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-429079-2</guid>
        <source url="https://forum.moparisthebest.com/t/first-java-game-on-my-own-noob/429079.rss">First JAVA game on my own [noob]</source>
      </item>
      <item>
        <title>First JAVA game on my own [noob]</title>
        <dc:creator><![CDATA[@chazion chazion]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/chazion">@chazion</a> wrote:</p>
          <blockquote>
              <p>I will accept constructive criticism, but please do not flame me too hard as I’m fairly new to java.<br>
I know there is some useless code and some VERY wrong ways to do some things…</p>
<pre><code class="lang-auto">public class Main {

	public static int wins = 0;
	public static int isWalking = -1;
	public static int isFighting = 0;
	public static int isPlayerTurn = 0;
	public static int walkDelay = 0;
	public static int maxPlayerHp = 100;
	public static int playerHp = 100;
	public static int monsterHp = 100;
	public static int maxMonsterHp = 90;
	public static int randomHeal = random(3);
	

	/*
	 * Idle Game
	 */

	public static void main(String[] args) {

		/*
		 * main code goes into here* add the interfaces and all that good shit
		 */

		/*
		 * Make sure the player is not walking and not fighting
		 */
		if (isWalking == -1 &amp;&amp; isFighting == 0) {
			isWalking = random(5);
			walkMethod();
		}
	}

	public static int random(int range) {
		return (int) (java.lang.Math.random() * (range + 1));
	}

	/*
	 * useless voids go here
	 */

	/*
	 * common sense
	 */
	public static void walkAgain() {
		walkMethod();
	}

	public static void walkMethod() {
		/*
		 * random walking(0-6)
		 */
		int bullshit = random(10);
		while (isWalking &gt; -1) {
			isWalking--;
			try {
				Thread.sleep(1500);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			System.out.println("[WALKING]*trot*");

		}
		int randomWalk = random(1);
		if (randomWalk != 1) {
			System.out.println("");
			System.out.println("[ENEMY]No enemy found!"); // if no enemy is
															// found, we walk
															// again
			System.out.println("");
			isWalking = random(5);
			walkAgain();
		}
		if (isWalking &lt;= 0 &amp;&amp; randomWalk == 1) {
			isFighting = 1;
			System.out.println("[random]Random event");
			System.out.println("");
			/*
			 * eleminates the use of the "if stat
			 */
			switch (bullshit) {
			case 0:
				System.out.println("bullshit == 0");
				break;
			case 1:
				maxPlayerHp -= 25;
				System.out
						.println("You stepped on a dildo and lost 25 hitpoints!");
				break;
			case 2:
				playerHp += 25;
				System.out
						.println("You notice a dildo on the ground and you jump over it! +25 hitpoints!");
				break;
			case 3:
				monsterHp += 25;
				System.out
						.println("The troll notices you coming and prepares! +25 monster HP");
				break;
			case 4:
				monsterHp -= 25;
				System.out
						.println("the troll notices you coming and hides! -25 monster HP");
				break;
			case 5:
				System.out.println("bullshit == 5");
				break;
			case 6:
				System.out.println("bullshit == 6");
				break;
			case 7:
				System.out.println("bullshit == 7");
				break;
			case 8:
				System.out.println("bullshit == 8");
				break;
			case 9:
				System.out.println("bullshit == 9");
				break;
			case 10:
				System.out.println("bullshit == 10");
				break;

			}
			System.out.println("");
			System.out.println("[ENEMY]You have found an enemy!");
			System.out.println("");
			fightingMonster();
		}
		/*
		 * random walking with random shit
		 */

	}

	/*
	 * public static void playerFight() { if (isFighting == 1 &amp;&amp; playerHp &gt; 0) {
	 * fightingMonster(); isPlayerTurn = 1; } else {
	 * System.out.println("end of fight"); }
	 * 
	 * }
	 */
	public static void fightingMonster() {
		/*
		 * handle fake BS combat with random damage*
		 */
		while (isFighting == 1 &amp;&amp; playerHp &gt; 0) {
			if (monsterHp &lt; 0)
				return;
			int randomPlayerHit = random(30);
			int randomMonsterHit = random(30);
			int playerHpHeal = 0;
			int randomNpcDodge = 0;
			if (playerHp &gt; 0 &amp;&amp; monsterHp &gt; 0 &amp;&amp; isPlayerTurn == 1) {
				monsterHp -= randomPlayerHit;
				System.out.println("[DAMAGE] You have dealt " + randomPlayerHit
						+ " damage!");

				playerHpHeal = random(10);
				playerHp += playerHpHeal;
				randomNpcDodge = random(3);
				if (randomHeal == 3) {
					System.out.println("[PLAYER HEALTH] You have been healed "
							+ playerHpHeal + " hitpoints!");
				}
				if ((monsterHp - randomPlayerHit == 0)) {
					System.out.println("[PLAYER HEALTH] You now have 0 health");
				} else {
					System.out.println("[NPC HEALTH] The npc now has "
							+ monsterHp + "");
				}
				System.out.println("");
				isPlayerTurn = 0;
				try {
					Thread.sleep(2000);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}

			if (playerHp &gt; 0 &amp;&amp; monsterHp &gt; 0 &amp;&amp; isPlayerTurn == 0) {
				playerHp -= randomMonsterHit;

				System.out.println("[DAMAGE] You have been hit for "
						+ randomMonsterHit + " damage!");
				if ((playerHp - randomMonsterHit == 0)) {
					System.out.println("[PLAYER HEALTH] You now have 0 health");
				} else {
					System.out.println("[PLAYER HEALTH] You now have "
							+ playerHp

							+ " health");
					if (randomNpcDodge == 3) {
						monsterHp = playerHp;
						System.out
								.println("[LEECH]You're enemy leeched your HP!");
					}
				}
				System.out.println("");
				isPlayerTurn = 1;
				try {
					Thread.sleep(2000);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}

			if (playerHp &lt;= 0) {

				System.out.println("You HAVE LOST THE BATTLE AT ROUND " + wins
						+ "!");
				System.out.println("[NPC HEALTH] The npc had " + monsterHp
						+ " health left!");
				System.out.println("");
			}
			if (monsterHp &lt;= 0) {

				wins += 1;
				System.out.println("You HAVE WON THE BATTLE WITH " + playerHp
						+ " HP LEFT!");
				System.out.println("You HAVE WON " + wins + " ROUNDS!");
				maxPlayerHp += 25;
				maxMonsterHp += 25.5;
				monsterHp = maxMonsterHp;
				playerHp = maxPlayerHp;
				System.out.println("You NOW HAVE " + playerHp + " MAX HEALTH");
				isFighting = 0;
				// confirm();
				isWalking = 6;
				walkMethod();

			}
		}
	}

	/*
	 * public static void confirm() { Scanner input = new Scanner(System.in);
	 * System.out.println("Press ENTER."); input.nextLine(); if (input ==
	 * (input)) { walkMethod(); } }
	 */

}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/first-java-game-on-my-own-noob/429079/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/first-java-game-on-my-own-noob/429079/1</link>
        <pubDate>Fri, 13 Jan 2012 04:50:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-429079-1</guid>
        <source url="https://forum.moparisthebest.com/t/first-java-game-on-my-own-noob/429079.rss">First JAVA game on my own [noob]</source>
      </item>
  </channel>
</rss>
