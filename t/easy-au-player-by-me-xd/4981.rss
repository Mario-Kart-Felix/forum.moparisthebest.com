<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Easy au player by me XD</title>
    <link>https://forum.moparisthebest.com/t/easy-au-player-by-me-xd/4981</link>
    <description>ok every1 this will add .au support for clients or just a standalone player

au is equaled to wav almost

this will be in my next client update look for it

credts:100% me took some time to make this

[code]
/*
 * Au player by goat spirit http://goat-spirit.com
 */

import java.io.InputStream;
import java.util.Hashtable;
import java.util.Enumeration;
import java.util.StringTokenizer;

import java.awt.*;
import java.net.*;
import java.applet.AudioClip;


public class AudioItem extends java.applet.Applet {
    /**
     * The sounds to be played.
     */
    private String sounds;

    /**
     * The index of the next sound in the sounds strings.
     */
    private int index;

    /**
     * The currently playing audio stream, or null
     * when no audio is playing.
     */
    private AudioClip audio;

    /**
     * Play the next sound. The sound URLS are obtained
     * from the &quot;snd&quot; attribute. You can specify a list
     * of them by seperating the sounds by &#39;|&#39;s.&lt;p&gt;
     * Note that the URL is constructed relative to the
     * getDocumentBase(), that is because the url is obtained
     * from within the document
     */
    public void next() {
	try {
	    if (audio != null) {
		audio.stop();
		audio = null;
	    }
	    
	    String url = sounds;
	    if (sounds.indexOf(&#39;|&#39;) &gt;= 0) {
		int start = index;
		if ((index = sounds.indexOf(&#39;|&#39;, index)) &lt; 0) {
		    url = sounds.substring(start);
		    index = start;
		} else {
		    url = sounds.substring(start, index++);
		}
	    }
	    if (url.length() &gt; 0) {
		audio = getAudioClip(new URL(getDocumentBase(), url));
		audio.play();
	    }
	} catch(Exception e) {
	}
    }

    /**
     * Initialize the applet. First resize it, then get the
     * &quot;snd&quot; attribute.
     */
    public void init() {
	resize(10, 12);

	sounds = getParameter(&quot;snd&quot;);
	if (sounds == null) {
	    sounds = &quot;doc:/demo/audio/ding.au&quot;;
	}
    }

    /**
     * When the applet is started play the next sound.
     */
    public void start() {
	next();
    }

    /**
     * When the applet is stopped, stop playing the current sound.
     */
    public void stop() {
	if (audio != null) {
	    audio.stop();
	    audio = null;
	}
    }

    /**
     * When the user clicks in the applet, play the next sound.
     */
    public boolean mouseUp(java.awt.Event evt, int x, int y) {
	next();
	return true;
    }

    /**
     * Paint an audio icon.
     */
    public void paint(Graphics g) {
	double f = ((double)(size().height - 1)) / ((size().width - 1) * 2);
	int offset = size().height / 2;
	for (int i = size().width - 1; i &gt;= 0; i -= 3) {
	    int h = (int)(i * f);
	    g.drawLine(i, offset - h, i, offset + h);
	}
    }
}
[/code]</description>
    
    <lastBuildDate>Sat, 15 Jul 2006 05:21:27 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/easy-au-player-by-me-xd/4981.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Easy au player by me XD</title>
        <dc:creator><![CDATA[@Drunk_On_Java Drunk On Java]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/drunk_on_java">@Drunk_On_Java</a> wrote:</p>
          <blockquote>
              <p>ok every1 this will add .au support for clients or just a standalone player</p>
<p>au is equaled to wav almost</p>
<p>this will be in my next client update look for it</p>
<p>credts:100% me took some time to make this</p>
<pre><code class="lang-auto">/*
 * Au player by goat spirit http://goat-spirit.com
 */

import java.io.InputStream;
import java.util.Hashtable;
import java.util.Enumeration;
import java.util.StringTokenizer;

import java.awt.*;
import java.net.*;
import java.applet.AudioClip;


public class AudioItem extends java.applet.Applet {
    /**
     * The sounds to be played.
     */
    private String sounds;

    /**
     * The index of the next sound in the sounds strings.
     */
    private int index;

    /**
     * The currently playing audio stream, or null
     * when no audio is playing.
     */
    private AudioClip audio;

    /**
     * Play the next sound. The sound URLS are obtained
     * from the "snd" attribute. You can specify a list
     * of them by seperating the sounds by '|'s.&lt;p&gt;
     * Note that the URL is constructed relative to the
     * getDocumentBase(), that is because the url is obtained
     * from within the document
     */
    public void next() {
	try {
	    if (audio != null) {
		audio.stop();
		audio = null;
	    }
	    
	    String url = sounds;
	    if (sounds.indexOf('|') &gt;= 0) {
		int start = index;
		if ((index = sounds.indexOf('|', index)) &lt; 0) {
		    url = sounds.substring(start);
		    index = start;
		} else {
		    url = sounds.substring(start, index++);
		}
	    }
	    if (url.length() &gt; 0) {
		audio = getAudioClip(new URL(getDocumentBase(), url));
		audio.play();
	    }
	} catch(Exception e) {
	}
    }

    /**
     * Initialize the applet. First resize it, then get the
     * "snd" attribute.
     */
    public void init() {
	resize(10, 12);

	sounds = getParameter("snd");
	if (sounds == null) {
	    sounds = "doc:/demo/audio/ding.au";
	}
    }

    /**
     * When the applet is started play the next sound.
     */
    public void start() {
	next();
    }

    /**
     * When the applet is stopped, stop playing the current sound.
     */
    public void stop() {
	if (audio != null) {
	    audio.stop();
	    audio = null;
	}
    }

    /**
     * When the user clicks in the applet, play the next sound.
     */
    public boolean mouseUp(java.awt.Event evt, int x, int y) {
	next();
	return true;
    }

    /**
     * Paint an audio icon.
     */
    public void paint(Graphics g) {
	double f = ((double)(size().height - 1)) / ((size().width - 1) * 2);
	int offset = size().height / 2;
	for (int i = size().width - 1; i &gt;= 0; i -= 3) {
	    int h = (int)(i * f);
	    g.drawLine(i, offset - h, i, offset + h);
	}
    }
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/easy-au-player-by-me-xd/4981/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/easy-au-player-by-me-xd/4981/1</link>
        <pubDate>Sat, 15 Jul 2006 05:21:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-4981-1</guid>
        <source url="https://forum.moparisthebest.com/t/easy-au-player-by-me-xd/4981.rss">Easy au player by me XD</source>
      </item>
  </channel>
</rss>
