<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[Delta] Cutting Logs [Delta]</title>
    <link>https://forum.moparisthebest.com/t/delta-cutting-logs-delta/524684</link>
    <description>The fletching in deltascape is very glitchy and the interfaces don&#39;t work properly so i re-wrote cutting logs. 
[code]
package server.Player.skills.fletching;

import server.client;
import server.Player.Events.Event;
import server.Player.Events.EventContainer;
import server.Player.Events.EventManager;


public class fletching extends fletchingdata {
	

	
	public static void getInterface(client c, int objectused, int objecton) {
			for (interfaces i : interfaces.values()) {
			if(objectused == i.getLog() &amp;&amp; objecton == 5605 || objectused == 5605 &amp;&amp; objecton == i.getLog()) {
		getLog(objectused, objecton);
		c.dialog = true;
		c.dialogInterface = 2459;
		c.dialogId = 1;
		if(i.getThirdPIC() == -1) {
		c.sendFrame126(&quot;Select a bow&quot;, 8879);
		c.sendFrame246(8870, 250, i.getFirstPIC()); // right picture
		c.sendFrame246(8869, 250, i.getSecondPIC()); // left picture
		c.sendFrame126(c.getItemName(i.getSecondPIC()), 8871);
		c.sendFrame126(c.getItemName(i.getSecondPIC()), 8874);
		c.sendFrame126(c.getItemName(i.getFirstPIC()), 8878);
		c.sendFrame126(c.getItemName(i.getFirstPIC()), 8875);
		c.sendFrame164(8866);
	} else
		if(i.getThirdPIC() != -1) {
			c.sendFrame126(&quot;Select a bow&quot;, 8879);
         	c.sendFrame246(8884, 250, i.getThirdPIC()); // middle
         	c.sendFrame246(8883, 250, i.getSecondPIC());
         	c.sendFrame246(8885, 250, i.getFirstPIC());
     		c.sendFrame126(c.getItemName(i.getSecondPIC()), 8889);
     		c.sendFrame126(c.getItemName(i.getThirdPIC()), 8893);
     		c.sendFrame126(c.getItemName(i.getFirstPIC()),  8897);
			c.sendFrame164(8880);
			}
			}
			}
			
		
	}
	public static void buttons(client c, int button) {
		switch(button) {
		case 34190:
			InterfaceID = 2;
			run = 27;
			fletch(c);
			break;
			case 34182:
				InterfaceID = 1;
				run = 27;
				fletch(c);
				break;
			case 34186:
				InterfaceID = 3;
				run = 27;
				fletch(c);
				break;

		case 34191:
			InterfaceID = 2;
			run = 10;
			fletch(c);
			break;
			case 34183:
				InterfaceID = 1;
				run = 10;
				fletch(c);
				break;
			case 34187:
				InterfaceID = 3;
				run = 10;
				fletch(c);
				break;


		case 34192:
		InterfaceID = 2;
		run = 5;
		fletch(c);
		break;
		case 34184:
			InterfaceID = 1;
			run = 5;
			fletch(c);
			break;


case 34193:
		InterfaceID = 2;
		run = 1;
		fletch(c);
		break;
		case 34189:
			InterfaceID = 3;
			run = 1;
			fletch(c);
			break;
		case 34185:
			InterfaceID = 1;
			run = 1;
			fletch(c);
			break;
		case 34188:
			InterfaceID = 3;
			run = 5;
			fletch(c);
			break;
		case 34170:
			InterfaceID = 1;
			run = 1;
			fletch(c);
			break;
		case 34174:
			InterfaceID = 2;
			run = 1;
			fletch(c);
			break;
		case 34169:
			InterfaceID = 1;
			run = 5;
			fletch(c);
			break;
		case 34173:
			InterfaceID = 2;
			run = 5;
			fletch(c);
			break;
		case 34168:
			InterfaceID = 1;
			run = 10;
			fletch(c);
			break;
		case 34172:
			InterfaceID = 2;
			run = 10;
			fletch(c);
			break;
		case 34167:
			InterfaceID = 1;
			run = 27;
			fletch(c);
			break;
		case 34171:
			InterfaceID = 2;
			run = 27;
			fletch(c);
			break;
		}
		
	}
	

	
	public static void fletch(final client c) {
			for (final bows b : bows.values()) {
				System.out.println(log);
			if(InterfaceID == b.giveInterface() &amp;&amp; c.playerHasItem(b.giveLog()) &amp;&amp; log == b.giveLog()) {
			if(c.playerLevel[9] &lt; b.giveLevel()) {
				c.sM(&quot;You need a fletching level of &quot;+b.giveLevel()+&quot; to fletch a&quot; + c.getItemName(b.giveItem()));
				return;
			}
			if(!c.playerHasItem(b.giveLog())) {
				c.sM(&quot;you need a log to fletch.&quot;);
				return;
			}
				c.RemoveAllWindows();
				c.setAnimation(1248);
				c.deleteItem(b.giveLog(), 1);
				if(b.giveItem() == 52) {
				c.addItem(b.giveItem(), 15);
				} else
				c.addItem(b.giveItem(), 1);
				c.addSkillXP(b.giveExp(), 9);
				run--;
				EventManager.getSingleton().addEvent(new Event() {
			        public void execute(EventContainer e) {
			        	if(run != 0 &amp;&amp; c.playerHasItem(b.giveLog())) {
			        		run --;
							c.RemoveAllWindows();
							c.setAnimation(1248);
							c.deleteItem(b.giveLog(), 1);
							c.addSkillXP(b.giveExp(), 9);
							if(b.giveItem() == 52) {
								c.addItem(b.giveItem(), 15);
								} else
									c.addItem(b.giveItem(), 1);
			        	} else
			        		if(run == 0) {
			        			e.stop();
			        		
			        } else 
			        	if(!c.playerHasItem(b.giveLog())) {
			        		e.stop();
	    }
			        }
			   
	}, 2500); // executes every 60,000 ms = 60 seconds
	};
			}
	}
	

	public static void fletchreset() {
			run = 0;
			}
		}
	


        [/code]

Now save and close that and make a new class and name in fletchingdata.java

and put this inside

[code]package server.Player.skills.fletching;


public class fletchingdata {
	
	
	protected static int InterfaceID, log, run;
	
	

	
	public static enum interfaces {
		ShortAndLong(1511, 48, 50, 52),
		OAKShortAndLong(1521, 56, 54, -1),
		WILLOWShortAndLong(1519, 58, 60, -1);

		
		
		private int log, firstPic, secondPic, thirdPic;
		
		private interfaces(int log, int firstPic, int secondPic, int thirdPic) {
			this.log = log;
			this.firstPic = firstPic;
			this.secondPic = secondPic;
			this.thirdPic = thirdPic;
			
		
		}
		public int getLog() {
			return log;
		}
		public int getFirstPIC() {
			return firstPic;
		}
		public int getSecondPIC() {
			return secondPic;
		}
		public int getThirdPIC() {
			return thirdPic;
		}
	
		
	}
	
	public static enum bows {	
		SHORTBOW(1, 5, 20, 50, 1511),
		LONGBOW(2, 10, 40, 48, 1511),
		SHAFTS(3, 1, 5, 52, 1511),
		OAKSHORTBOW(1, 15, 80, 54, 1521),
		OAKLONGBOW(2, 20, 160, 56, 1521),
		WILLOWSHORTBOW(1, 30, 300, 60, 1519),
		WILLOWLONGBOW(2, 35, 400, 58, 1519);
	
		private int interfaceId, level, exp, give, log;
		
		private bows(int interfaceId, int level, int exp, int give, int log) {
			this.interfaceId = interfaceId;
			this.level = level;
			this.exp = exp;
			this.give = give;
			this.log = log;
			
		
		}
		public int giveInterface() {
			return interfaceId;
		
	}
		public int giveLevel() {
			return level;
		}
		public int giveExp() {
			return exp;
		}
		public int giveItem() {
			return give;
		}
		public int giveLog() {
			return log;
		}
	}
	
	public static void getLog(int objectused, int objecton) {
		for (interfaces i : interfaces.values()) {
	if(objectused == i.getLog()) {
		log = objectused;
	} else
		if(objecton == i.getLog()) {
			log = objecton;
		}
		}
	}

	
}


Now save and close that

now in case 53 add:

[code]fletching.getInterface(this, itemUsed, otherItem);[/code]

and also in [code]case 98 case 87:[/code]

add [code]fletching.fletchreset();[/code]

Now save and close that and in the clickingButtons.java above the switch statement add:

[code]fletching.buttons(c, c.actionButtonId);[/code]</description>
    
    <lastBuildDate>Fri, 12 Jul 2013 13:47:45 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/delta-cutting-logs-delta/524684.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[Delta] Cutting Logs [Delta]</title>
        <dc:creator><![CDATA[@Driman_Rune Driman Rune]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/driman_rune">@Driman_Rune</a> wrote:</p>
          <blockquote>
              <p>looks good brah</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delta-cutting-logs-delta/524684/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delta-cutting-logs-delta/524684/5</link>
        <pubDate>Fri, 12 Jul 2013 13:47:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-524684-5</guid>
        <source url="https://forum.moparisthebest.com/t/delta-cutting-logs-delta/524684.rss">[Delta] Cutting Logs [Delta]</source>
      </item>
      <item>
        <title>[Delta] Cutting Logs [Delta]</title>
        <dc:creator><![CDATA[@Loveandpower Loveandpower]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/loveandpower">@Loveandpower</a> wrote:</p>
          <blockquote>
              <p>thanks for the delta contrib</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delta-cutting-logs-delta/524684/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delta-cutting-logs-delta/524684/4</link>
        <pubDate>Fri, 12 Jul 2013 13:28:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-524684-4</guid>
        <source url="https://forum.moparisthebest.com/t/delta-cutting-logs-delta/524684.rss">[Delta] Cutting Logs [Delta]</source>
      </item>
      <item>
        <title>[Delta] Cutting Logs [Delta]</title>
        <dc:creator><![CDATA[@enzo42 enzo42]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/enzo42">@enzo42</a> wrote:</p>
          <blockquote>
              <p>The fletching class is not very well written, and classes should start with a uppercase, like “Fletching”, “FletchingData”</p>
<p>Thanks for the contribution though</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delta-cutting-logs-delta/524684/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delta-cutting-logs-delta/524684/3</link>
        <pubDate>Thu, 11 Jul 2013 23:10:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-524684-3</guid>
        <source url="https://forum.moparisthebest.com/t/delta-cutting-logs-delta/524684.rss">[Delta] Cutting Logs [Delta]</source>
      </item>
      <item>
        <title>[Delta] Cutting Logs [Delta]</title>
        <dc:creator><![CDATA[@Vain1 Vain_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/vain1">@Vain1</a> wrote:</p>
          <blockquote>
              <p>your naming and conventions makes me want to kill myself</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delta-cutting-logs-delta/524684/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delta-cutting-logs-delta/524684/2</link>
        <pubDate>Thu, 11 Jul 2013 22:58:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-524684-2</guid>
        <source url="https://forum.moparisthebest.com/t/delta-cutting-logs-delta/524684.rss">[Delta] Cutting Logs [Delta]</source>
      </item>
      <item>
        <title>[Delta] Cutting Logs [Delta]</title>
        <dc:creator><![CDATA[@Dan0194 Dan0194]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/dan0194">@Dan0194</a> wrote:</p>
          <blockquote>
              <p>The fletching in deltascape is very glitchy and the interfaces don’t work properly so i re-wrote cutting logs.</p>
<p>[code]<br>
package server.Player.skills.fletching;</p>
<p>import server.client;<br>
import server.Player.Events.Event;<br>
import server.Player.Events.EventContainer;<br>
import server.Player.Events.EventManager;</p>
<p>public class fletching extends fletchingdata {</p>
<pre><code>public static void getInterface(client c, int objectused, int objecton) {
		for (interfaces i : interfaces.values()) {
		if(objectused == i.getLog() &amp;&amp; objecton == 5605 || objectused == 5605 &amp;&amp; objecton == i.getLog()) {
	getLog(objectused, objecton);
	c.dialog = true;
	c.dialogInterface = 2459;
	c.dialogId = 1;
	if(i.getThirdPIC() == -1) {
	c.sendFrame126("Select a bow", 8879);
	c.sendFrame246(8870, 250, i.getFirstPIC()); // right picture
	c.sendFrame246(8869, 250, i.getSecondPIC()); // left picture
	c.sendFrame126(c.getItemName(i.getSecondPIC()), 8871);
	c.sendFrame126(c.getItemName(i.getSecondPIC()), 8874);
	c.sendFrame126(c.getItemName(i.getFirstPIC()), 8878);
	c.sendFrame126(c.getItemName(i.getFirstPIC()), 8875);
	c.sendFrame164(8866);
} else
	if(i.getThirdPIC() != -1) {
		c.sendFrame126("Select a bow", 8879);
     	c.sendFrame246(8884, 250, i.getThirdPIC()); // middle
     	c.sendFrame246(8883, 250, i.getSecondPIC());
     	c.sendFrame246(8885, 250, i.getFirstPIC());
 		c.sendFrame126(c.getItemName(i.getSecondPIC()), 8889);
 		c.sendFrame126(c.getItemName(i.getThirdPIC()), 8893);
 		c.sendFrame126(c.getItemName(i.getFirstPIC()),  8897);
		c.sendFrame164(8880);
		}
		}
		}
		
	
}
public static void buttons(client c, int button) {
	switch(button) {
	case 34190:
		InterfaceID = 2;
		run = 27;
		fletch(c);
		break;
		case 34182:
			InterfaceID = 1;
			run = 27;
			fletch(c);
			break;
		case 34186:
			InterfaceID = 3;
			run = 27;
			fletch(c);
			break;

	case 34191:
		InterfaceID = 2;
		run = 10;
		fletch(c);
		break;
		case 34183:
			InterfaceID = 1;
			run = 10;
			fletch(c);
			break;
		case 34187:
			InterfaceID = 3;
			run = 10;
			fletch(c);
			break;


	case 34192:
	InterfaceID = 2;
	run = 5;
	fletch(c);
	break;
	case 34184:
		InterfaceID = 1;
		run = 5;
		fletch(c);
		break;
</code></pre>
<p>case 34193:<br>
InterfaceID = 2;<br>
run = 1;<br>
fletch©;<br>
break;<br>
case 34189:<br>
InterfaceID = 3;<br>
run = 1;<br>
fletch©;<br>
break;<br>
case 34185:<br>
InterfaceID = 1;<br>
run = 1;<br>
fletch©;<br>
break;<br>
case 34188:<br>
InterfaceID = 3;<br>
run = 5;<br>
fletch©;<br>
break;<br>
case 34170:<br>
InterfaceID = 1;<br>
run = 1;<br>
fletch©;<br>
break;<br>
case 34174:<br>
InterfaceID = 2;<br>
run = 1;<br>
fletch©;<br>
break;<br>
case 34169:<br>
InterfaceID = 1;<br>
run = 5;<br>
fletch©;<br>
break;<br>
case 34173:<br>
InterfaceID = 2;<br>
run = 5;<br>
fletch©;<br>
break;<br>
case 34168:<br>
InterfaceID = 1;<br>
run = 10;<br>
fletch©;<br>
break;<br>
case 34172:<br>
InterfaceID = 2;<br>
run = 10;<br>
fletch©;<br>
break;<br>
case 34167:<br>
InterfaceID = 1;<br>
run = 27;<br>
fletch©;<br>
break;<br>
case 34171:<br>
InterfaceID = 2;<br>
run = 27;<br>
fletch©;<br>
break;<br>
}</p>
<pre><code>}



public static void fletch(final client c) {
		for (final bows b : bows.values()) {
			System.out.println(log);
		if(InterfaceID == b.giveInterface() &amp;&amp; c.playerHasItem(b.giveLog()) &amp;&amp; log == b.giveLog()) {
		if(c.playerLevel[9] &lt; b.giveLevel()) {
			c.sM("You need a fletching level of "+b.giveLevel()+" to fletch a" + c.getItemName(b.giveItem()));
			return;
		}
		if(!c.playerHasItem(b.giveLog())) {
			c.sM("you need a log to fletch.");
			return;
		}
			c.RemoveAllWindows();
			c.setAnimation(1248);
			c.deleteItem(b.giveLog(), 1);
			if(b.giveItem() == 52) {
			c.addItem(b.giveItem(), 15);
			} else
			c.addItem(b.giveItem(), 1);
			c.addSkillXP(b.giveExp(), 9);
			run--;
			EventManager.getSingleton().addEvent(new Event() {
		        public void execute(EventContainer e) {
		        	if(run != 0 &amp;&amp; c.playerHasItem(b.giveLog())) {
		        		run --;
						c.RemoveAllWindows();
						c.setAnimation(1248);
						c.deleteItem(b.giveLog(), 1);
						c.addSkillXP(b.giveExp(), 9);
						if(b.giveItem() == 52) {
							c.addItem(b.giveItem(), 15);
							} else
								c.addItem(b.giveItem(), 1);
		        	} else
		        		if(run == 0) {
		        			e.stop();
		        		
		        } else 
		        	if(!c.playerHasItem(b.giveLog())) {
		        		e.stop();
    }
		        }
		   
}, 2500); // executes every 60,000 ms = 60 seconds
};
		}
}


public static void fletchreset() {
		run = 0;
		}
	}



    [/code]
</code></pre>
<p>Now save and close that and make a new class and name in fletchingdata.java</p>
<p>and put this inside</p>
<p>[code]package server.Player.skills.fletching;</p>
<p>public class fletchingdata {</p>
<pre><code>protected static int InterfaceID, log, run;




public static enum interfaces {
	ShortAndLong(1511, 48, 50, 52),
	OAKShortAndLong(1521, 56, 54, -1),
	WILLOWShortAndLong(1519, 58, 60, -1);

	
	
	private int log, firstPic, secondPic, thirdPic;
	
	private interfaces(int log, int firstPic, int secondPic, int thirdPic) {
		this.log = log;
		this.firstPic = firstPic;
		this.secondPic = secondPic;
		this.thirdPic = thirdPic;
		
	
	}
	public int getLog() {
		return log;
	}
	public int getFirstPIC() {
		return firstPic;
	}
	public int getSecondPIC() {
		return secondPic;
	}
	public int getThirdPIC() {
		return thirdPic;
	}

	
}

public static enum bows {	
	SHORTBOW(1, 5, 20, 50, 1511),
	LONGBOW(2, 10, 40, 48, 1511),
	SHAFTS(3, 1, 5, 52, 1511),
	OAKSHORTBOW(1, 15, 80, 54, 1521),
	OAKLONGBOW(2, 20, 160, 56, 1521),
	WILLOWSHORTBOW(1, 30, 300, 60, 1519),
	WILLOWLONGBOW(2, 35, 400, 58, 1519);

	private int interfaceId, level, exp, give, log;
	
	private bows(int interfaceId, int level, int exp, int give, int log) {
		this.interfaceId = interfaceId;
		this.level = level;
		this.exp = exp;
		this.give = give;
		this.log = log;
		
	
	}
	public int giveInterface() {
		return interfaceId;
	
}
	public int giveLevel() {
		return level;
	}
	public int giveExp() {
		return exp;
	}
	public int giveItem() {
		return give;
	}
	public int giveLog() {
		return log;
	}
}

public static void getLog(int objectused, int objecton) {
	for (interfaces i : interfaces.values()) {
if(objectused == i.getLog()) {
	log = objectused;
} else
	if(objecton == i.getLog()) {
		log = objecton;
	}
	}
}
</code></pre>
<p>}</p>
<p>Now save and close that</p>
<p>now in case 53 add:</p>
<pre><code class="lang-auto"></code></pre>
<p>and also in <code>case 98 case 87:</code></p>
<p>add <code>fletching.fletchreset();</code></p>
<p>Now save and close that and in the clickingButtons.java above the switch statement add:</p>
<pre><code class="lang-auto"></code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delta-cutting-logs-delta/524684/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delta-cutting-logs-delta/524684/1</link>
        <pubDate>Thu, 11 Jul 2013 22:57:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-524684-1</guid>
        <source url="https://forum.moparisthebest.com/t/delta-cutting-logs-delta/524684.rss">[Delta] Cutting Logs [Delta]</source>
      </item>
  </channel>
</rss>
