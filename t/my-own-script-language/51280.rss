<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>My own script language</title>
    <link>https://forum.moparisthebest.com/t/my-own-script-language/51280</link>
    <description>This wasn&#39;t supposed to be anything big, but it took me a while so i thought i&#39;d share.

It only has 5 functions, i&#39;d add more but i was working for a while on the parameter reading and such.

[b]functions:[/b]
click(x, y: integer; right: boolean);
cleardebug();
mousedirect(x, y: integer);
wait(time: integer);
write(s: string);

no real use, just see-ing if i could do it.
example script:
[code]
begin
wait(1000);
cleardebug();
write(&#39;started&#39;);
mousedirect(5, 5);
click(5, 5, true);
write(&#39;end&#39;);
end.
[/code]


[code]
type Intstrb = record
    i: Integer;
    s: string;
    b: boolean;
  end;

type Pars = record
    Commers: Integer;
    Position: array of Integer;
    Parameters: array of Intstrb;
    fName: string;
  end;

var
  frmDesign: TForm;
  Label1: TLabel;
  Label2: TLabel;
  Memo1: TMemo;
  Button1: TButton;
  Button2: TButton;

function EraseSpaces(s: string): string;
var i: Integer;
var ss: string;
begin
  ss := s;
  for i := 1 to Length(ss) do
  begin
    if (Copy(ss, i, 1) = &#39; &#39;) then
    begin
      Delete(ss, i, 1);
    end;
  end;
  Result := ss;
end;

function isStr(par: string): boolean;
begin
  Result := false;
  if (Copy(par, 1, 1) = #39) and (Copy(par, Length(par), 1) = #39) then Result := true;
end;

function isInt(s: string): boolean;
begin
  if (isStr(s)) then
  begin
    Result := false;
    exit;
  end;
  result := true;
  try
    strtoint(s)
  except
    result := false;
  end;
end;

function isBool(s: string): boolean;
begin
  Result := false;
  if (isStr(s)) then
  begin
    Result := false;
    exit;
  end;
  if (Lowercase(s) = &#39;true&#39;) or (Lowercase(s) = &#39;false&#39;) then result := true;
end;

function ReadOptions(Linex: string): Pars;
var i, e, a: Integer;
var s: array of string;
var x: Pars;
var Line: string;
begin
  SetarrayLength(x.Position, 1);
  Line := EraseSpaces(Linex);
  for i := 1 to Length(Line) do
  begin
    if (copy(Line, i, 1) = &#39;,&#39;) then
    begin
      x.Commers := x.Commers + 1;
      x.Position[GetarrayLength(x.Position) - 1] := i;
      SetarrayLength(x.Position, GetarrayLength(x.Position) + 1);
    end;
  end;
  x.Commers := x.Commers + 1;
  x.Position[GetarrayLength(x.Position) - 1] := Length(Line);
  SetarrayLength(x.Position, GetarrayLength(x.Position) + 1);
  SetarrayLength(s, x.Commers);
  for i := 0 to x.Commers - 1 do
  begin
    if (i = 0) then
    begin
      a := pos(&#39;(&#39;, Line) + 1;
    end else
    begin
      a := x.Position[i - 1] + 1;
    end;
    for e := a to x.Position[i] - 1 do
    begin
      s[i] := s[i] + Copy(Line, e, 1);
    end;
    SetarrayLength(x.Parameters, GetarrayLength(x.Parameters) + 1);
    if (i = x.Commers - 1) then Delete(s[i], length(s[i]), 1);

    if (isInt(s[i])) then
    begin
      x.Parameters[i].i := strtoint(s[i]);
    end;
    if (isStr(s[i])) then
    begin
      Delete(s[i], 1, 1);
      Delete(s[i], Length(s[i]), 1);
      x.Parameters[i].s := s[i];
    end;
    if (isBool(s[i])) then
    begin
      case s[i] of
        &#39;true&#39;: x.Parameters[i].b := true;
        &#39;false&#39;: x.Parameters[i].b := false;
      end;
    end;
    //Writeln(s[i]);
  end;
  x.fName := Copy(Line, 1, pos(&#39;(&#39;, Line) - 1);
  Result := x;
end;

procedure Operate(Line: string; i: Integer);
var m: Pars;
begin
  m := ReadOptions(Line);
  case m.fName of
    &#39;mousedirect&#39;: begin
        if (m.Commers &lt;&gt; 2) then
        begin
          Writeln(&#39;Error: Line &#39; + inttostr(i) + &#39;: Invalid Parameters.&#39;);
          exit;
        end;
        MoveMouse(m.Parameters[0].i, m.Parameters[1].i)
      end;

    &#39;cleardebug&#39;: begin
        if (m.Commers &gt; 1) then
        begin
          Writeln(&#39;Error: Line &#39; + inttostr(i) + &#39;: Invalid Parameters.&#39;);
          exit;
        end;
        Cleardebug;
      end;

    &#39;click&#39;: begin
        if (m.Commers &lt;&gt; 3) then
        begin
          Writeln(&#39;Error: Line &#39; + inttostr(i) + &#39;: Invalid Parameters.&#39;);
          exit;
        end;
        ClickMouse(m.Parameters[0].i, m.Parameters[1].i, m.Parameters[0].b);
      end;

    &#39;wait&#39;: begin
        if (m.Commers &lt;&gt; 1) then
        begin
          Writeln(&#39;Error: Line &#39; + inttostr(i) + &#39;: Invalid Parameters.&#39;);
          exit;
        end;

        Wait(m.Parameters[0].i);
      end;

    &#39;write&#39;: begin
        if (m.Commers &lt;&gt; 1) then
        begin
          Writeln(&#39;Error: Line &#39; + inttostr(i) + &#39;: Invalid Parameters.&#39;);
          exit;
        end;
        writeln(m.Parameters[0].s);
      end;

  end;
end;

procedure Compile(sender: TObject);
var i: Integer;
begin
  if (not (lowercase(Memo1.Lines.Strings[0]) = &#39;begin&#39;)) then
  begin
    Writeln(&#39;Error: Line 1: Begin is needed.&#39;);
    Writeln(&#39;Script ended.&#39;);
    exit;
  end;
  Writeln(&#39;Script started.&#39;);
  for i := 1 to Memo1.Lines.Count do
  begin
    if (lowercase(Memo1.Lines.Strings[i - 1]) = &#39;end.&#39;) then
    begin
      Writeln(&#39;Script ended.&#39;);
      exit;
    end;
    if (lowercase(Memo1.Lines.Strings[i - 1]) = &#39;end;&#39;) then
    begin
      Writeln(&#39;Error: Line &#39; + inttostr(i - 1) + &#39;: A full stop is needed after &quot;end&quot;&#39;);
      Writeln(&#39;Script ended.&#39;);
      exit;
    end;
    Operate(lowercase(Memo1.Lines.Strings[i - 1]), i);
  end;
end;

procedure RunForm;
begin
  frmDesign := CreateForm;
  frmDesign.Left := 250;
  frmDesign.Top := 114;
  frmDesign.Width := 399;
  frmDesign.Height := 368;
  frmDesign.Caption := &#39;Made By XxKanexX&#39;;
  frmDesign.Color := clWhite;
  frmDesign.Font.Color := clWindowText;
  frmDesign.Font.Height := -11;
  frmDesign.Font.Name := &#39;MS Sans Serif&#39;;
  frmDesign.Font.Style := [];
  frmDesign.Visible := False;
  frmDesign.PixelsPerInch := 96;
  Label1 := TLabel.Create(frmDesign);
  Label1.Parent := frmDesign;
  Label1.Left := 5;
  Label1.Top := 5;
  Label1.Width := 30;
  Label1.Height := 13;
  Label1.Caption := &#39;Script:&#39;;
  Label2 := TLabel.Create(frmDesign);
  Label2.Parent := frmDesign;
  Label2.Left := 167;
  Label2.Top := 308;
  Label2.Width := 94;
  Label2.Height := 13;
  Label2.Caption := &#39;Made By XxKanexX&#39;;
  Memo1 := TMemo.Create(frmDesign);
  Memo1.Parent := frmDesign;
  Memo1.Left := 5;
  Memo1.Top := 22;
  Memo1.Width := 378;
  Memo1.Height := 272;
  Memo1.Color := clWhite;
  Memo1.Font.Color := clRed;
  Memo1.Font.Height := -11;
  Memo1.Font.Name := &#39;MS Sans Serif&#39;;
  Memo1.Font.Style := [];
  Memo1.Lines.Add(&#39;begin&#39;);
  Memo1.Lines.Add(&#39;end.&#39;);
  Memo1.ParentFont := False;
  Memo1.ScrollBars := ssBoth;
  Memo1.TabOrder := 8;
  Button1 := TButton.Create(frmDesign);
  Button1.Parent := frmDesign;
  Button1.Left := 5;
  Button1.Top := 302;
  Button1.Width := 75;
  Button1.Height := 25;
  Button1.Caption := &#39;Compile&#39;;
  Button1.TabOrder := 9;
  Button2 := TButton.Create(frmDesign);
  Button2.Parent := frmDesign;
  Button2.Left := 84;
  Button2.Top := 302;
  Button2.Width := 75;
  Button2.Height := 25;
  Button2.Caption := &#39;Stop&#39;;
  Button2.TabOrder := 10;
  Button1.OnClick := @Compile;
end;

procedure SafeInitForm;
var
  v: TVariantArray;
begin
  setarraylength(V, 0);
  ThreadSafeCall(&#39;RunForm&#39;, v);
end;

procedure ShowFormModal;
begin
  frmDesign.ShowModal;
end;

procedure SafeShowFormModal;
var
  v: TVariantArray;
begin
  setarraylength(V, 0);
  ThreadSafeCall(&#39;ShowFormModal&#39;, v);
end;

begin
  ClearDebug;
  SafeInitForm;
  SafeShowFormModal;
end.
[/code]</description>
    
    <lastBuildDate>Fri, 26 Jan 2007 12:15:25 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/my-own-script-language/51280.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>My own script language</title>
        <dc:creator><![CDATA[@XxKanexX Kane.]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xxkanexx">@XxKanexX</a> wrote:</p>
          <blockquote>
              <p>[quote=“yakman, post:7, topic:51280”]this is really good, your own interpreter in a language that looks like scar,<br>
well done![/quote]<br>
Thanks, Yakman. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>You’re not as active lately, here? <img src="https://forum.moparisthebest.com/images/emoji/twitter/frowning.png?v=6" title=":frowning:" class="emoji" alt=":frowning:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-own-script-language/51280/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-own-script-language/51280/8</link>
        <pubDate>Fri, 26 Jan 2007 12:15:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-51280-8</guid>
        <source url="https://forum.moparisthebest.com/t/my-own-script-language/51280.rss">My own script language</source>
      </item>
      <item>
        <title>My own script language</title>
        <dc:creator><![CDATA[@yakman yakman]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/yakman">@yakman</a> wrote:</p>
          <blockquote>
              <p>this is really good, your own interpreter in a language that looks like scar,<br>
well done!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-own-script-language/51280/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-own-script-language/51280/7</link>
        <pubDate>Fri, 26 Jan 2007 00:38:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-51280-7</guid>
        <source url="https://forum.moparisthebest.com/t/my-own-script-language/51280.rss">My own script language</source>
      </item>
      <item>
        <title>My own script language</title>
        <dc:creator><![CDATA[@MujaheD Radeon]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mujahed">@MujaheD</a> wrote:</p>
          <blockquote>
              <p>Looks very nice, I wanna try this…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-own-script-language/51280/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-own-script-language/51280/6</link>
        <pubDate>Thu, 25 Jan 2007 17:22:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-51280-6</guid>
        <source url="https://forum.moparisthebest.com/t/my-own-script-language/51280.rss">My own script language</source>
      </item>
      <item>
        <title>My own script language</title>
        <dc:creator><![CDATA[@Ron Ron]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ron">@Ron</a> wrote:</p>
          <blockquote>
              <p>This is pretty cool. Hey you forgot to put in a FreeForm(frmDesign); at the bottom. Grrr, fix memory leaks please. <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<p>Also, this does not seem to work.</p>
<pre><code class="lang-auto">begin
  write('test');
end.</code></pre>
<p>But this does:</p>
<pre><code class="lang-auto">begin
write('test');
end.</code></pre>
<p>Odd, but if you have only 1 space before the write, that will still work. 2 spaces it doesn’t work. Strange.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-own-script-language/51280/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-own-script-language/51280/5</link>
        <pubDate>Thu, 25 Jan 2007 09:06:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-51280-5</guid>
        <source url="https://forum.moparisthebest.com/t/my-own-script-language/51280.rss">My own script language</source>
      </item>
      <item>
        <title>My own script language</title>
        <dc:creator><![CDATA[@XxKanexX Kane.]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xxkanexx">@XxKanexX</a> wrote:</p>
          <blockquote>
              <p>Thankyou.</p>
<p>I wasn’t going to post, but i thought it took me long enough so i’d may aswell.<br>
Good luck with yours ;).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-own-script-language/51280/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-own-script-language/51280/4</link>
        <pubDate>Wed, 24 Jan 2007 21:06:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-51280-4</guid>
        <source url="https://forum.moparisthebest.com/t/my-own-script-language/51280.rss">My own script language</source>
      </item>
      <item>
        <title>My own script language</title>
        <dc:creator><![CDATA[@thiefmn6092 thiefmn6092]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/thiefmn6092">@thiefmn6092</a> wrote:</p>
          <blockquote>
              <p>[quote=“XxKanexX, post:1, topic:51280”]This wasn’t supposed to be anything big, but it took me a while so i thought i’d share.</p>
<p>It only has 5 functions, i’d add more but i was working for a while on the parameter reading and such.</p>
<p><span class="bbcode-b">functions:</span><br>
click(x, y: integer; right: boolean);<br>
cleardebug();<br>
mousedirect(x, y: integer);<br>
wait(time: integer);<br>
write(s: string);</p>
<p>no real use, just see-ing if i could do it.<br>
example script:</p>
<pre><code class="lang-auto">begin
wait(1000);
cleardebug();
write('started');
mousedirect(5, 5);
click(5, 5, true);
write('end');
end.</code></pre>
<p>[code]<br>
type Intstrb = record<br>
i: Integer;<br>
s: string;<br>
b: boolean;<br>
end;</p>
<p>type Pars = record<br>
Commers: Integer;<br>
Position: array of Integer;<br>
Parameters: array of Intstrb;<br>
fName: string;<br>
end;</p>
<p>var<br>
frmDesign: TForm;<br>
Label1: TLabel;<br>
Label2: TLabel;<br>
Memo1: TMemo;<br>
Button1: TButton;<br>
Button2: TButton;</p>
<p>function EraseSpaces(s: string): string;<br>
var i: Integer;<br>
var ss: string;<br>
begin<br>
ss := s;<br>
for i := 1 to Length(ss) do<br>
begin<br>
if (Copy(ss, i, 1) = ’ ') then<br>
begin<br>
Delete(ss, i, 1);<br>
end;<br>
end;<br>
Result := ss;<br>
end;</p>
<p>function isStr(par: string): boolean;<br>
begin<br>
Result := false;<br>
if (Copy(par, 1, 1) = <span class="hashtag">#39</span>) and (Copy(par, Length(par), 1) = <span class="hashtag">#39</span>) then Result := true;<br>
end;</p>
<p>function isInt(s: string): boolean;<br>
begin<br>
if (isStr(s)) then<br>
begin<br>
Result := false;<br>
exit;<br>
end;<br>
result := true;<br>
try<br>
strtoint(s)<br>
except<br>
result := false;<br>
end;<br>
end;</p>
<p>function isBool(s: string): boolean;<br>
begin<br>
Result := false;<br>
if (isStr(s)) then<br>
begin<br>
Result := false;<br>
exit;<br>
end;<br>
if (Lowercase(s) = ‘true’) or (Lowercase(s) = ‘false’) then result := true;<br>
end;</p>
<p>function ReadOptions(Linex: string): Pars;<br>
var i, e, a: Integer;<br>
var s: array of string;<br>
var x: Pars;<br>
var Line: string;<br>
begin<br>
SetarrayLength(x.Position, 1);<br>
Line := EraseSpaces(Linex);<br>
for i := 1 to Length(Line) do<br>
begin<br>
if (copy(Line, i, 1) = ‘,’) then<br>
begin<br>
x.Commers := x.Commers + 1;<br>
x.Position[GetarrayLength(x.Position) - 1] := i;<br>
SetarrayLength(x.Position, GetarrayLength(x.Position) + 1);<br>
end;<br>
end;<br>
x.Commers := x.Commers + 1;<br>
x.Position[GetarrayLength(x.Position) - 1] := Length(Line);<br>
SetarrayLength(x.Position, GetarrayLength(x.Position) + 1);<br>
SetarrayLength(s, x.Commers);<br>
for i := 0 to x.Commers - 1 do<br>
begin<br>
if (i = 0) then<br>
begin<br>
a := pos(’(’, Line) + 1;<br>
end else<br>
begin<br>
a := x.Position[i - 1] + 1;<br>
end;<br>
for e := a to x.Position[i] - 1 do<br>
begin<br>
s[i] := s[i] + Copy(Line, e, 1);<br>
end;<br>
SetarrayLength(x.Parameters, GetarrayLength(x.Parameters) + 1);<br>
if (i = x.Commers - 1) then Delete(s[i], length(s[i]), 1);</p>
<pre><code>if (isInt(s[i])) then
begin
  x.Parameters[i].i := strtoint(s[i]);
end;
if (isStr(s[i])) then
begin
  Delete(s[i], 1, 1);
  Delete(s[i], Length(s[i]), 1);
  x.Parameters[i].s := s[i];
end;
if (isBool(s[i])) then
begin
  case s[i] of
    'true': x.Parameters[i].b := true;
    'false': x.Parameters[i].b := false;
  end;
end;
//Writeln(s[i]);
</code></pre>
<p>end;<br>
x.fName := Copy(Line, 1, pos(’(’, Line) - 1);<br>
Result := x;<br>
end;</p>
<p>procedure Operate(Line: string; i: Integer);<br>
var m: Pars;<br>
begin<br>
m := ReadOptions(Line);<br>
case m.fName of<br>
‘mousedirect’: begin<br>
if (m.Commers &lt;&gt; 2) then<br>
begin<br>
Writeln('Error: Line ’ + inttostr(i) + ‘: Invalid Parameters.’);<br>
exit;<br>
end;<br>
MoveMouse(m.Parameters[0].i, m.Parameters[1].i)<br>
end;</p>
<pre><code>'cleardebug': begin
    if (m.Commers &gt; 1) then
    begin
      Writeln('Error: Line ' + inttostr(i) + ': Invalid Parameters.');
      exit;
    end;
    Cleardebug;
  end;

'click': begin
    if (m.Commers &lt;&gt; 3) then
    begin
      Writeln('Error: Line ' + inttostr(i) + ': Invalid Parameters.');
      exit;
    end;
    ClickMouse(m.Parameters[0].i, m.Parameters[1].i, m.Parameters[0].b);
  end;

'wait': begin
    if (m.Commers &lt;&gt; 1) then
    begin
      Writeln('Error: Line ' + inttostr(i) + ': Invalid Parameters.');
      exit;
    end;

    Wait(m.Parameters[0].i);
  end;

'write': begin
    if (m.Commers &lt;&gt; 1) then
    begin
      Writeln('Error: Line ' + inttostr(i) + ': Invalid Parameters.');
      exit;
    end;
    writeln(m.Parameters[0].s);
  end;
</code></pre>
<p>end;<br>
end;</p>
<p>procedure Compile(sender: TObject);<br>
var i: Integer;<br>
begin<br>
if (not (lowercase(Memo1.Lines.Strings[0]) = ‘begin’)) then<br>
begin<br>
Writeln(‘Error: Line 1: Begin is needed.’);<br>
Writeln(‘Script ended.’);<br>
exit;<br>
end;<br>
Writeln(‘Script started.’);<br>
for i := 1 to Memo1.Lines.Count do<br>
begin<br>
if (lowercase(Memo1.Lines.Strings[i - 1]) = ‘end.’) then<br>
begin<br>
Writeln(‘Script ended.’);<br>
exit;<br>
end;<br>
if (lowercase(Memo1.Lines.Strings[i - 1]) = ‘end;’) then<br>
begin<br>
Writeln('Error: Line ’ + inttostr(i - 1) + ‘: A full stop is needed after “end”’);<br>
Writeln(‘Script ended.’);<br>
exit;<br>
end;<br>
Operate(lowercase(Memo1.Lines.Strings[i - 1]), i);<br>
end;<br>
end;</p>
<p>procedure RunForm;<br>
begin<br>
frmDesign := CreateForm;<br>
frmDesign.Left := 250;<br>
frmDesign.Top := 114;<br>
frmDesign.Width := 399;<br>
frmDesign.Height := 368;<br>
frmDesign.Caption := ‘Made By XxKanexX’;<br>
frmDesign.Color := clWhite;<br>
frmDesign.Font.Color := clWindowText;<br>
frmDesign.Font.Height := -11;<br>
frmDesign.Font.Name := ‘MS Sans Serif’;<br>
frmDesign.Font.Style := [];<br>
frmDesign.Visible := False;<br>
frmDesign.PixelsPerInch := 96;<br>
Label1 := TLabel.Create(frmDesign);<br>
Label1.Parent := frmDesign;<br>
Label1.Left := 5;<br>
Label1.Top := 5;<br>
Label1.Width := 30;<br>
Label1.Height := 13;<br>
Label1.Caption := ‘Script:’;<br>
Label2 := TLabel.Create(frmDesign);<br>
Label2.Parent := frmDesign;<br>
Label2.Left := 167;<br>
Label2.Top := 308;<br>
Label2.Width := 94;<br>
Label2.Height := 13;<br>
Label2.Caption := ‘Made By XxKanexX’;<br>
Memo1 := TMemo.Create(frmDesign);<br>
Memo1.Parent := frmDesign;<br>
Memo1.Left := 5;<br>
Memo1.Top := 22;<br>
Memo1.Width := 378;<br>
Memo1.Height := 272;<br>
Memo1.Color := clWhite;<br>
Memo1.Font.Color := clRed;<br>
Memo1.Font.Height := -11;<br>
Memo1.Font.Name := ‘MS Sans Serif’;<br>
Memo1.Font.Style := [];<br>
Memo1.Lines.Add(‘begin’);<br>
Memo1.Lines.Add(‘end.’);<br>
Memo1.ParentFont := False;<br>
Memo1.ScrollBars := ssBoth;<br>
Memo1.TabOrder := 8;<br>
Button1 := TButton.Create(frmDesign);<br>
Button1.Parent := frmDesign;<br>
Button1.Left := 5;<br>
Button1.Top := 302;<br>
Button1.Width := 75;<br>
Button1.Height := 25;<br>
Button1.Caption := ‘Compile’;<br>
Button1.TabOrder := 9;<br>
Button2 := TButton.Create(frmDesign);<br>
Button2.Parent := frmDesign;<br>
Button2.Left := 84;<br>
Button2.Top := 302;<br>
Button2.Width := 75;<br>
Button2.Height := 25;<br>
Button2.Caption := ‘Stop’;<br>
Button2.TabOrder := 10;<br>
Button1.OnClick := <a class="mention" href="/u/compile">@Compile</a>;<br>
end;</p>
<p>procedure SafeInitForm;<br>
var<br>
v: TVariantArray;<br>
begin<br>
setarraylength(V, 0);<br>
ThreadSafeCall(‘RunForm’, v);<br>
end;</p>
<p>procedure ShowFormModal;<br>
begin<br>
frmDesign.ShowModal;<br>
end;</p>
<p>procedure SafeShowFormModal;<br>
var<br>
v: TVariantArray;<br>
begin<br>
setarraylength(V, 0);<br>
ThreadSafeCall(‘ShowFormModal’, v);<br>
end;</p>
<p>begin<br>
ClearDebug;<br>
SafeInitForm;<br>
SafeShowFormModal;<br>
end.<br>
[/code][/quote]</p>
<p>Very cool :-), I’m actully doing something like this in Python… Really just an interpreter <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-own-script-language/51280/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-own-script-language/51280/3</link>
        <pubDate>Wed, 24 Jan 2007 20:32:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-51280-3</guid>
        <source url="https://forum.moparisthebest.com/t/my-own-script-language/51280.rss">My own script language</source>
      </item>
      <item>
        <title>My own script language</title>
        <dc:creator><![CDATA[@silabsoft RuneAgent]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silabsoft">@silabsoft</a> wrote:</p>
          <blockquote>
              <p>its more like a parser <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-own-script-language/51280/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-own-script-language/51280/2</link>
        <pubDate>Wed, 24 Jan 2007 20:01:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-51280-2</guid>
        <source url="https://forum.moparisthebest.com/t/my-own-script-language/51280.rss">My own script language</source>
      </item>
      <item>
        <title>My own script language</title>
        <dc:creator><![CDATA[@XxKanexX Kane.]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xxkanexx">@XxKanexX</a> wrote:</p>
          <blockquote>
              <p>This wasn’t supposed to be anything big, but it took me a while so i thought i’d share.</p>
<p>It only has 5 functions, i’d add more but i was working for a while on the parameter reading and such.</p>
<p><span class="bbcode-b">functions:</span><br>
click(x, y: integer; right: boolean);<br>
cleardebug();<br>
mousedirect(x, y: integer);<br>
wait(time: integer);<br>
write(s: string);</p>
<p>no real use, just see-ing if i could do it.<br>
example script:</p>
<pre><code class="lang-auto">begin
wait(1000);
cleardebug();
write('started');
mousedirect(5, 5);
click(5, 5, true);
write('end');
end.</code></pre>
<pre><code class="lang-auto">type Intstrb = record
    i: Integer;
    s: string;
    b: boolean;
  end;

type Pars = record
    Commers: Integer;
    Position: array of Integer;
    Parameters: array of Intstrb;
    fName: string;
  end;

var
  frmDesign: TForm;
  Label1: TLabel;
  Label2: TLabel;
  Memo1: TMemo;
  Button1: TButton;
  Button2: TButton;

function EraseSpaces(s: string): string;
var i: Integer;
var ss: string;
begin
  ss := s;
  for i := 1 to Length(ss) do
  begin
    if (Copy(ss, i, 1) = ' ') then
    begin
      Delete(ss, i, 1);
    end;
  end;
  Result := ss;
end;

function isStr(par: string): boolean;
begin
  Result := false;
  if (Copy(par, 1, 1) = #39) and (Copy(par, Length(par), 1) = #39) then Result := true;
end;

function isInt(s: string): boolean;
begin
  if (isStr(s)) then
  begin
    Result := false;
    exit;
  end;
  result := true;
  try
    strtoint(s)
  except
    result := false;
  end;
end;

function isBool(s: string): boolean;
begin
  Result := false;
  if (isStr(s)) then
  begin
    Result := false;
    exit;
  end;
  if (Lowercase(s) = 'true') or (Lowercase(s) = 'false') then result := true;
end;

function ReadOptions(Linex: string): Pars;
var i, e, a: Integer;
var s: array of string;
var x: Pars;
var Line: string;
begin
  SetarrayLength(x.Position, 1);
  Line := EraseSpaces(Linex);
  for i := 1 to Length(Line) do
  begin
    if (copy(Line, i, 1) = ',') then
    begin
      x.Commers := x.Commers + 1;
      x.Position[GetarrayLength(x.Position) - 1] := i;
      SetarrayLength(x.Position, GetarrayLength(x.Position) + 1);
    end;
  end;
  x.Commers := x.Commers + 1;
  x.Position[GetarrayLength(x.Position) - 1] := Length(Line);
  SetarrayLength(x.Position, GetarrayLength(x.Position) + 1);
  SetarrayLength(s, x.Commers);
  for i := 0 to x.Commers - 1 do
  begin
    if (i = 0) then
    begin
      a := pos('(', Line) + 1;
    end else
    begin
      a := x.Position[i - 1] + 1;
    end;
    for e := a to x.Position[i] - 1 do
    begin
      s[i] := s[i] + Copy(Line, e, 1);
    end;
    SetarrayLength(x.Parameters, GetarrayLength(x.Parameters) + 1);
    if (i = x.Commers - 1) then Delete(s[i], length(s[i]), 1);

    if (isInt(s[i])) then
    begin
      x.Parameters[i].i := strtoint(s[i]);
    end;
    if (isStr(s[i])) then
    begin
      Delete(s[i], 1, 1);
      Delete(s[i], Length(s[i]), 1);
      x.Parameters[i].s := s[i];
    end;
    if (isBool(s[i])) then
    begin
      case s[i] of
        'true': x.Parameters[i].b := true;
        'false': x.Parameters[i].b := false;
      end;
    end;
    //Writeln(s[i]);
  end;
  x.fName := Copy(Line, 1, pos('(', Line) - 1);
  Result := x;
end;

procedure Operate(Line: string; i: Integer);
var m: Pars;
begin
  m := ReadOptions(Line);
  case m.fName of
    'mousedirect': begin
        if (m.Commers &lt;&gt; 2) then
        begin
          Writeln('Error: Line ' + inttostr(i) + ': Invalid Parameters.');
          exit;
        end;
        MoveMouse(m.Parameters[0].i, m.Parameters[1].i)
      end;

    'cleardebug': begin
        if (m.Commers &gt; 1) then
        begin
          Writeln('Error: Line ' + inttostr(i) + ': Invalid Parameters.');
          exit;
        end;
        Cleardebug;
      end;

    'click': begin
        if (m.Commers &lt;&gt; 3) then
        begin
          Writeln('Error: Line ' + inttostr(i) + ': Invalid Parameters.');
          exit;
        end;
        ClickMouse(m.Parameters[0].i, m.Parameters[1].i, m.Parameters[0].b);
      end;

    'wait': begin
        if (m.Commers &lt;&gt; 1) then
        begin
          Writeln('Error: Line ' + inttostr(i) + ': Invalid Parameters.');
          exit;
        end;

        Wait(m.Parameters[0].i);
      end;

    'write': begin
        if (m.Commers &lt;&gt; 1) then
        begin
          Writeln('Error: Line ' + inttostr(i) + ': Invalid Parameters.');
          exit;
        end;
        writeln(m.Parameters[0].s);
      end;

  end;
end;

procedure Compile(sender: TObject);
var i: Integer;
begin
  if (not (lowercase(Memo1.Lines.Strings[0]) = 'begin')) then
  begin
    Writeln('Error: Line 1: Begin is needed.');
    Writeln('Script ended.');
    exit;
  end;
  Writeln('Script started.');
  for i := 1 to Memo1.Lines.Count do
  begin
    if (lowercase(Memo1.Lines.Strings[i - 1]) = 'end.') then
    begin
      Writeln('Script ended.');
      exit;
    end;
    if (lowercase(Memo1.Lines.Strings[i - 1]) = 'end;') then
    begin
      Writeln('Error: Line ' + inttostr(i - 1) + ': A full stop is needed after "end"');
      Writeln('Script ended.');
      exit;
    end;
    Operate(lowercase(Memo1.Lines.Strings[i - 1]), i);
  end;
end;

procedure RunForm;
begin
  frmDesign := CreateForm;
  frmDesign.Left := 250;
  frmDesign.Top := 114;
  frmDesign.Width := 399;
  frmDesign.Height := 368;
  frmDesign.Caption := 'Made By XxKanexX';
  frmDesign.Color := clWhite;
  frmDesign.Font.Color := clWindowText;
  frmDesign.Font.Height := -11;
  frmDesign.Font.Name := 'MS Sans Serif';
  frmDesign.Font.Style := [];
  frmDesign.Visible := False;
  frmDesign.PixelsPerInch := 96;
  Label1 := TLabel.Create(frmDesign);
  Label1.Parent := frmDesign;
  Label1.Left := 5;
  Label1.Top := 5;
  Label1.Width := 30;
  Label1.Height := 13;
  Label1.Caption := 'Script:';
  Label2 := TLabel.Create(frmDesign);
  Label2.Parent := frmDesign;
  Label2.Left := 167;
  Label2.Top := 308;
  Label2.Width := 94;
  Label2.Height := 13;
  Label2.Caption := 'Made By XxKanexX';
  Memo1 := TMemo.Create(frmDesign);
  Memo1.Parent := frmDesign;
  Memo1.Left := 5;
  Memo1.Top := 22;
  Memo1.Width := 378;
  Memo1.Height := 272;
  Memo1.Color := clWhite;
  Memo1.Font.Color := clRed;
  Memo1.Font.Height := -11;
  Memo1.Font.Name := 'MS Sans Serif';
  Memo1.Font.Style := [];
  Memo1.Lines.Add('begin');
  Memo1.Lines.Add('end.');
  Memo1.ParentFont := False;
  Memo1.ScrollBars := ssBoth;
  Memo1.TabOrder := 8;
  Button1 := TButton.Create(frmDesign);
  Button1.Parent := frmDesign;
  Button1.Left := 5;
  Button1.Top := 302;
  Button1.Width := 75;
  Button1.Height := 25;
  Button1.Caption := 'Compile';
  Button1.TabOrder := 9;
  Button2 := TButton.Create(frmDesign);
  Button2.Parent := frmDesign;
  Button2.Left := 84;
  Button2.Top := 302;
  Button2.Width := 75;
  Button2.Height := 25;
  Button2.Caption := 'Stop';
  Button2.TabOrder := 10;
  Button1.OnClick := @Compile;
end;

procedure SafeInitForm;
var
  v: TVariantArray;
begin
  setarraylength(V, 0);
  ThreadSafeCall('RunForm', v);
end;

procedure ShowFormModal;
begin
  frmDesign.ShowModal;
end;

procedure SafeShowFormModal;
var
  v: TVariantArray;
begin
  setarraylength(V, 0);
  ThreadSafeCall('ShowFormModal', v);
end;

begin
  ClearDebug;
  SafeInitForm;
  SafeShowFormModal;
end.</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-own-script-language/51280/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-own-script-language/51280/1</link>
        <pubDate>Wed, 24 Jan 2007 19:28:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-51280-1</guid>
        <source url="https://forum.moparisthebest.com/t/my-own-script-language/51280.rss">My own script language</source>
      </item>
  </channel>
</rss>
