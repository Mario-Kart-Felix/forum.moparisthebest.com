<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Where would i add npc ints to this, and where in my client folder?</title>
    <link>https://forum.moparisthebest.com/t/where-would-i-add-npc-ints-to-this-and-where-in-my-client-folder/366529</link>
    <description>[code=java]// Decompiled by Jad v1.5.8f. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 

public final class EntityDef
{
    public static EntityDef forID(int i)
    {
        for(int j = 0; j &lt; 20; j++)
            if(cache[j].interfaceType == (long)i)
                return cache[j];
        anInt56 = (anInt56 + 1) % 20;
        EntityDef entityDef = cache[anInt56] = new EntityDef();
        stream.currentOffset = streamIndices[i];
        entityDef.interfaceType = i;
        entityDef.readValues(stream);
        return entityDef;
    }

    public Model method160()
    {
        if(childrenIDs != null)
        {
            EntityDef entityDef = method161();
            if(entityDef == null)
                return null;
            else
                return entityDef.method160();
        }
        if(anIntArray73 == null)
            return null;
        boolean flag1 = false;
        for(int i = 0; i &lt; anIntArray73.length; i++)
            if(!Model.method463(anIntArray73[i]))
                flag1 = true;

        if(flag1)
            return null;
        Model aclass30_sub2_sub4_sub6s[] = new Model[anIntArray73.length];
        for(int j = 0; j &lt; anIntArray73.length; j++)
            aclass30_sub2_sub4_sub6s[j] = Model.method462(anIntArray73[j]);

        Model model;
        if(aclass30_sub2_sub4_sub6s.length == 1)
            model = aclass30_sub2_sub4_sub6s[0];
        else
            model = new Model(aclass30_sub2_sub4_sub6s.length, aclass30_sub2_sub4_sub6s);
        if(anIntArray76 != null)
        {
            for(int k = 0; k &lt; anIntArray76.length; k++)
                model.method476(anIntArray76[k], anIntArray70[k]);

        }
        return model;
    }

    public EntityDef method161() {
		try {
			int j = -1;
			if(anInt57 != -1)
			{
				VarBit varBit = VarBit.cache[anInt57];
				int k = varBit.anInt648;
				int l = varBit.anInt649;
				int i1 = varBit.anInt650;
				int j1 = client.anIntArray1232[i1 - l];
				j = clientInstance.variousSettings[k] &gt;&gt; l &amp; j1;
			} else
			if(anInt59 != -1) {
				j = clientInstance.variousSettings[anInt59];
			}
			if(j &lt; 0 || j &gt;= childrenIDs.length || childrenIDs[j] == -1) {
				return null;
			} else {
				return forID(childrenIDs[j]);
			}
		} catch (Exception e) {
			return null;
		}
	}
	
	

    public static void unpackConfig(NamedArchive archive)
    {
        stream = new Stream(archive.getDataForName(&quot;npc.dat&quot;));
        Stream stream2 = new Stream(archive.getDataForName(&quot;npc.idx&quot;));
        int totalNPCs = stream2.readUnsignedWord();
        streamIndices = new int[totalNPCs];
        int i = 2;
        for(int j = 0; j &lt; totalNPCs; j++)
        {
            streamIndices[j] = i;
            i += stream2.readUnsignedWord();
        }

        cache = new EntityDef[20];
        for(int k = 0; k &lt; 20; k++)
            cache[k] = new EntityDef();
    }

    public static void nullLoader()
    {
        mruNodes = null;
        streamIndices = null;
        cache = null;
        stream = null;
    }

    public Model method164(int j, int k, int ai[])
    {
        if(childrenIDs != null)
        {
            EntityDef entityDef = method161();
            if(entityDef == null)
                return null;
            else
                return entityDef.method164(j, k, ai);
        }
        Model model = (Model) mruNodes.insertFromCache(interfaceType);
        if(model == null)
        {
            boolean flag = false;
            for(int i1 = 0; i1 &lt; anIntArray94.length; i1++)
                if(!Model.method463(anIntArray94[i1]))
                    flag = true;

            if(flag)
                return null;
            Model aclass30_sub2_sub4_sub6s[] = new Model[anIntArray94.length];
            for(int j1 = 0; j1 &lt; anIntArray94.length; j1++)
                aclass30_sub2_sub4_sub6s[j1] = Model.method462(anIntArray94[j1]);

            if(aclass30_sub2_sub4_sub6s.length == 1)
                model = aclass30_sub2_sub4_sub6s[0];
            else
                model = new Model(aclass30_sub2_sub4_sub6s.length, aclass30_sub2_sub4_sub6s);
            if(anIntArray76 != null)
            {
                for(int k1 = 0; k1 &lt; anIntArray76.length; k1++)
                    model.method476(anIntArray76[k1], anIntArray70[k1]);

            }
            model.method469();
            model.method479(64 + anInt85, 850 + anInt92, -30, -50, -30, true);
            mruNodes.removeFromCache(model, interfaceType);
        }
        Model model_1 = Model.aModel_1621;
        model_1.method464(model, Class36.method532(k) &amp; Class36.method532(j));
        if(k != -1 &amp;&amp; j != -1)
            model_1.method471(ai, j, k);
        else
        if(k != -1)
            model_1.method470(k);
        if(anInt91 != 128 || anInt86 != 128)
            model_1.method478(anInt91, anInt91, anInt86);
        model_1.method466();
        model_1.anIntArrayArray1658 = null;
        model_1.anIntArrayArray1657 = null;
        if(aByte68 == 1)
            model_1.aBoolean1659 = true;
        return model_1;
    }

    private void readValues(Stream stream)
    {
        do
        {
            int i = stream.readUnsignedByte();
            if(i == 0)
                return;
            if(i == 1)
            {
                int j = stream.readUnsignedByte();
                anIntArray94 = new int[j];
                for(int j1 = 0; j1 &lt; j; j1++)
                    anIntArray94[j1] = stream.readUnsignedWord();

            } else
            if(i == 2)
                name = stream.readNewString();
            else
            if(i == 3)
                description = stream.readBytes();
            else
            if(i == 12)
                aByte68 = stream.readSignedByte();
            else
            if(i == 13)
                anInt77 = stream.readUnsignedWord();
            else
            if(i == 14)
                anInt67 = stream.readUnsignedWord();
            else
            if(i == 17)
            {
                anInt67 = stream.readUnsignedWord();
                anInt58 = stream.readUnsignedWord();
                anInt83 = stream.readUnsignedWord();
                anInt55 = stream.readUnsignedWord();
            } else
            if(i &gt;= 30 &amp;&amp; i &lt; 40)
            {
                if(itemActions == null)
                    itemActions = new String[5];
                itemActions[i - 30] = stream.readNewString();
                if(itemActions[i - 30].equalsIgnoreCase(&quot;hidden&quot;))
                    itemActions[i - 30] = null;
            } else
            if(i == 40)
            {
                int k = stream.readUnsignedByte();
                anIntArray76 = new int[k];
                anIntArray70 = new int[k];
                for(int k1 = 0; k1 &lt; k; k1++)
                {
                    anIntArray76[k1] = stream.readUnsignedWord();
                    anIntArray70[k1] = stream.readUnsignedWord();
                }

            } else
            if(i == 60)
            {
                int l = stream.readUnsignedByte();
                anIntArray73 = new int[l];
                for(int l1 = 0; l1 &lt; l; l1++)
                    anIntArray73[l1] = stream.readUnsignedWord();

            } else
            if(i == 90)
                stream.readUnsignedWord();
            else
            if(i == 91)
                stream.readUnsignedWord();
            else
            if(i == 92)
                stream.readUnsignedWord();
            else
            if(i == 93)
                aBoolean87 = false;
            else
            if(i == 95)
                combatLevel = stream.readUnsignedWord();
            else
            if(i == 97)
                anInt91 = stream.readUnsignedWord();
            else
            if(i == 98)
                anInt86 = stream.readUnsignedWord();
            else
            if(i == 99)
                aBoolean93 = true;
            else
            if(i == 100)
                anInt85 = stream.readSignedByte();
            else
            if(i == 101)
                anInt92 = stream.readSignedByte() * 5;
            else
            if(i == 102)
                anInt75 = stream.readUnsignedWord();
            else
            if(i == 103)
                anInt79 = stream.readUnsignedWord();
            else
            if(i == 106)
            {
                anInt57 = stream.readUnsignedWord();
                if(anInt57 == 65535)
                    anInt57 = -1;
                anInt59 = stream.readUnsignedWord();
                if(anInt59 == 65535)
                    anInt59 = -1;
                int i1 = stream.readUnsignedByte();
                childrenIDs = new int[i1 + 1];
                for(int i2 = 0; i2 &lt;= i1; i2++)
                {
                    childrenIDs[i2] = stream.readUnsignedWord();
                    if(childrenIDs[i2] == 65535)
                        childrenIDs[i2] = -1;
                }

            } else
            if(i == 107)
                aBoolean84 = false;
        } while(true);
    }

    private EntityDef()
    {
        anInt55 = -1;
        anInt57 = -1;
        anInt58 = -1;
        anInt59 = -1;
        combatLevel = -1;
        anInt64 = 1834;
        anInt67 = -1;
        aByte68 = 1;
        anInt75 = -1;
        anInt77 = -1;
        interfaceType = -1L;
        anInt79 = 32;
        anInt83 = -1;
        aBoolean84 = true;
        anInt86 = 128;
        aBoolean87 = true;
        anInt91 = 128;
        aBoolean93 = false;
    }

    public int anInt55;
    private static int anInt56;
    private int anInt57;
    public int anInt58;
    private int anInt59;
    private static Stream stream;
	
    public int combatLevel;
	
    private final int anInt64;
    public String name;
    public String itemActions[];
    public int anInt67;
    public byte aByte68;
    private int[] anIntArray70;
    private static int[] streamIndices;
    private int[] anIntArray73;
    public int anInt75;
    private int[] anIntArray76;
    public int anInt77;
    public long interfaceType;
    public int anInt79;
    private static EntityDef[] cache;
    public static client clientInstance;
    public int anInt83;
    public boolean aBoolean84;
    private int anInt85;
    private int anInt86;
    public boolean aBoolean87;
    public int childrenIDs[];
    public byte description[];
    private int anInt91;
    private int anInt92;
    public boolean aBoolean93;
    private int[] anIntArray94;
    public static MRUNodes mruNodes = new MRUNodes(30);

}
[/code]


hey, im new to the rsps stuff, and this is the help section so...
where would i add npc ints to this file?
im tryign to add the corp beast, and this is what my entitydef looks like.
also there is no models folder in my client folder, where would the models go?</description>
    
    <lastBuildDate>Sat, 30 Oct 2010 10:30:56 +0000</lastBuildDate>
    <category>Game Development</category>
    <atom:link href="https://forum.moparisthebest.com/t/where-would-i-add-npc-ints-to-this-and-where-in-my-client-folder/366529.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Where would i add npc ints to this, and where in my client folder?</title>
        <dc:creator><![CDATA[@wboar wboar]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wboar">@wboar</a> wrote:</p>
          <blockquote>
              <p>Umm im not sure but i think they goes there <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"> :</p>
<p>[code]// Decompiled by Jad v1.5.8f. Copyright 2001 Pavel Kouznetsov.<br>
// Jad home page: <a href="http://www.kpdus.com/jad.html" rel="nofollow noopener">http://www.kpdus.com/jad.html</a><br>
// Decompiler options: packimports(3)</p>
<p>public final class EntityDef<br>
{<br>
public static EntityDef forID(int i)<br>
{<br>
for(int j = 0; j &lt; 20; j++)<br>
if(cache[j].interfaceType == (long)i)<br>
return cache[j];<br>
anInt56 = (anInt56 + 1) % 20;<br>
EntityDef entityDef = cache[anInt56] = new EntityDef();<br>
stream.currentOffset = streamIndices[i];<br>
entityDef.interfaceType = i;<br>
entityDef.readValues(stream); // Add your INTS below<br>
if(i == 82) {<br>
stream.currentOffset = streamIndices[630];<br>
entityDef.aByte68 = 3;<br>
entityDef.readValues(stream); // Collect original NPC data<br>
entityDef.actions = new String[5];<br>
entityDef.actions[1] = “Attack”;<br>
entityDef.models = new int[5];<br>
entityDef.models[0] = 17391;<br>
entityDef.models[1] = 17375;<br>
entityDef.models[2] = 17384;<br>
entityDef.models[3] = 17388;<br>
entityDef.models[4] = 17390;<br>
entityDef.standAnim = 66;<br>
entityDef.walkAnim = 63;<br>
entityDef.name = “Lesser Demon”;<br>
entityDef.combatLevel = 82;<br>
entityDef.description = “Lesser, but still Scary”.getBytes();<br>
}</p>
<pre><code>    return entityDef;
}

public Model method160()
{
    if(childrenIDs != null)
    {
        EntityDef entityDef = method161();
        if(entityDef == null)
            return null;
        else
            return entityDef.method160();
    }
    if(anIntArray73 == null)
        return null;
    boolean flag1 = false;
    for(int i = 0; i &lt; anIntArray73.length; i++)
        if(!Model.method463(anIntArray73[i]))
            flag1 = true;

    if(flag1)
        return null;
    Model aclass30_sub2_sub4_sub6s[] = new Model[anIntArray73.length];
    for(int j = 0; j &lt; anIntArray73.length; j++)
        aclass30_sub2_sub4_sub6s[j] = Model.method462(anIntArray73[j]);

    Model model;
    if(aclass30_sub2_sub4_sub6s.length == 1)
        model = aclass30_sub2_sub4_sub6s[0];
    else
        model = new Model(aclass30_sub2_sub4_sub6s.length, aclass30_sub2_sub4_sub6s);
    if(anIntArray76 != null)
    {
        for(int k = 0; k &lt; anIntArray76.length; k++)
            model.method476(anIntArray76[k], anIntArray70[k]);

    }
    return model;
}

public EntityDef method161() {
            try {
                    int j = -1;
                    if(anInt57 != -1)
                    {
                            VarBit varBit = VarBit.cache[anInt57];
                            int k = varBit.anInt648;
                            int l = varBit.anInt649;
                            int i1 = varBit.anInt650;
                            int j1 = client.anIntArray1232[i1 - l];
                            j = clientInstance.variousSettings[k] &gt;&gt; l &amp; j1;
                    } else
                    if(anInt59 != -1) {
                            j = clientInstance.variousSettings[anInt59];
                    }
                    if(j &lt; 0 || j &gt;= childrenIDs.length || childrenIDs[j] == -1) {
                            return null;
                    } else {
                            return forID(childrenIDs[j]);
                    }
            } catch (Exception e) {
                    return null;
            }
    }
   
   

public static void unpackConfig(NamedArchive archive)
{
    stream = new Stream(archive.getDataForName("npc.dat"));
    Stream stream2 = new Stream(archive.getDataForName("npc.idx"));
    int totalNPCs = stream2.readUnsignedWord();
    streamIndices = new int[totalNPCs];
    int i = 2;
    for(int j = 0; j &lt; totalNPCs; j++)
    {
        streamIndices[j] = i;
        i += stream2.readUnsignedWord();
    }

    cache = new EntityDef[20];
    for(int k = 0; k &lt; 20; k++)
        cache[k] = new EntityDef();
}

public static void nullLoader()
{
    mruNodes = null;
    streamIndices = null;
    cache = null;
    stream = null;
}

public Model method164(int j, int k, int ai[])
{
    if(childrenIDs != null)
    {
        EntityDef entityDef = method161();
        if(entityDef == null)
            return null;
        else
            return entityDef.method164(j, k, ai);
    }
    Model model = (Model) mruNodes.insertFromCache(interfaceType);
    if(model == null)
    {
        boolean flag = false;
        for(int i1 = 0; i1 &lt; anIntArray94.length; i1++)
            if(!Model.method463(anIntArray94[i1]))
                flag = true;

        if(flag)
            return null;
        Model aclass30_sub2_sub4_sub6s[] = new Model[anIntArray94.length];
        for(int j1 = 0; j1 &lt; anIntArray94.length; j1++)
            aclass30_sub2_sub4_sub6s[j1] = Model.method462(anIntArray94[j1]);

        if(aclass30_sub2_sub4_sub6s.length == 1)
            model = aclass30_sub2_sub4_sub6s[0];
        else
            model = new Model(aclass30_sub2_sub4_sub6s.length, aclass30_sub2_sub4_sub6s);
        if(anIntArray76 != null)
        {
            for(int k1 = 0; k1 &lt; anIntArray76.length; k1++)
                model.method476(anIntArray76[k1], anIntArray70[k1]);

        }
        model.method469();
        model.method479(64 + anInt85, 850 + anInt92, -30, -50, -30, true);
        mruNodes.removeFromCache(model, interfaceType);
    }
    Model model_1 = Model.aModel_1621;
    model_1.method464(model, Class36.method532(k) &amp; Class36.method532(j));
    if(k != -1 &amp;&amp; j != -1)
        model_1.method471(ai, j, k);
    else
    if(k != -1)
        model_1.method470(k);
    if(anInt91 != 128 || anInt86 != 128)
        model_1.method478(anInt91, anInt91, anInt86);
    model_1.method466();
    model_1.anIntArrayArray1658 = null;
    model_1.anIntArrayArray1657 = null;
    if(aByte68 == 1)
        model_1.aBoolean1659 = true;
    return model_1;
}

private void readValues(Stream stream)
{
    do
    {
        int i = stream.readUnsignedByte();
        if(i == 0)
            return;
        if(i == 1)
        {
            int j = stream.readUnsignedByte();
            anIntArray94 = new int[j];
            for(int j1 = 0; j1 &lt; j; j1++)
                anIntArray94[j1] = stream.readUnsignedWord();

        } else
        if(i == 2)
            name = stream.readNewString();
        else
        if(i == 3)
            description = stream.readBytes();
        else
        if(i == 12)
            aByte68 = stream.readSignedByte();
        else
        if(i == 13)
            anInt77 = stream.readUnsignedWord();
        else
        if(i == 14)
            anInt67 = stream.readUnsignedWord();
        else
        if(i == 17)
        {
            anInt67 = stream.readUnsignedWord();
            anInt58 = stream.readUnsignedWord();
            anInt83 = stream.readUnsignedWord();
            anInt55 = stream.readUnsignedWord();
        } else
        if(i &gt;= 30 &amp;&amp; i &lt; 40)
        {
            if(itemActions == null)
                itemActions = new String[5];
            itemActions[i - 30] = stream.readNewString();
            if(itemActions[i - 30].equalsIgnoreCase("hidden"))
                itemActions[i - 30] = null;
        } else
        if(i == 40)
        {
            int k = stream.readUnsignedByte();
            anIntArray76 = new int[k];
            anIntArray70 = new int[k];
            for(int k1 = 0; k1 &lt; k; k1++)
            {
                anIntArray76[k1] = stream.readUnsignedWord();
                anIntArray70[k1] = stream.readUnsignedWord();
            }

        } else
        if(i == 60)
        {
            int l = stream.readUnsignedByte();
            anIntArray73 = new int[l];
            for(int l1 = 0; l1 &lt; l; l1++)
                anIntArray73[l1] = stream.readUnsignedWord();

        } else
        if(i == 90)
            stream.readUnsignedWord();
        else
        if(i == 91)
            stream.readUnsignedWord();
        else
        if(i == 92)
            stream.readUnsignedWord();
        else
        if(i == 93)
            aBoolean87 = false;
        else
        if(i == 95)
            combatLevel = stream.readUnsignedWord();
        else
        if(i == 97)
            anInt91 = stream.readUnsignedWord();
        else
        if(i == 98)
            anInt86 = stream.readUnsignedWord();
        else
        if(i == 99)
            aBoolean93 = true;
        else
        if(i == 100)
            anInt85 = stream.readSignedByte();
        else
        if(i == 101)
            anInt92 = stream.readSignedByte() * 5;
        else
        if(i == 102)
            anInt75 = stream.readUnsignedWord();
        else
        if(i == 103)
            anInt79 = stream.readUnsignedWord();
        else
        if(i == 106)
        {
            anInt57 = stream.readUnsignedWord();
            if(anInt57 == 65535)
                anInt57 = -1;
            anInt59 = stream.readUnsignedWord();
            if(anInt59 == 65535)
                anInt59 = -1;
            int i1 = stream.readUnsignedByte();
            childrenIDs = new int[i1 + 1];
            for(int i2 = 0; i2 &lt;= i1; i2++)
            {
                childrenIDs[i2] = stream.readUnsignedWord();
                if(childrenIDs[i2] == 65535)
                    childrenIDs[i2] = -1;
            }

        } else
        if(i == 107)
            aBoolean84 = false;
    } while(true);
}

private EntityDef()
{
    anInt55 = -1;
    anInt57 = -1;
    anInt58 = -1;
    anInt59 = -1;
    combatLevel = -1;
    anInt64 = 1834;
    anInt67 = -1;
    aByte68 = 1;
    anInt75 = -1;
    anInt77 = -1;
    interfaceType = -1L;
    anInt79 = 32;
    anInt83 = -1;
    aBoolean84 = true;
    anInt86 = 128;
    aBoolean87 = true;
    anInt91 = 128;
    aBoolean93 = false;
}

public int anInt55;
private static int anInt56;
private int anInt57;
public int anInt58;
private int anInt59;
private static Stream stream;
   
public int combatLevel;
   
private final int anInt64;
public String name;
public String itemActions[];
public int anInt67;
public byte aByte68;
private int[] anIntArray70;
private static int[] streamIndices;
private int[] anIntArray73;
public int anInt75;
private int[] anIntArray76;
public int anInt77;
public long interfaceType;
public int anInt79;
private static EntityDef[] cache;
public static client clientInstance;
public int anInt83;
public boolean aBoolean84;
private int anInt85;
private int anInt86;
public boolean aBoolean87;
public int childrenIDs[];
public byte description[];
private int anInt91;
private int anInt92;
public boolean aBoolean93;
private int[] anIntArray94;
public static MRUNodes mruNodes = new MRUNodes(30);
</code></pre>
<p>}[/code]</p>
<p>And add your models in to folder called “Raw” <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/where-would-i-add-npc-ints-to-this-and-where-in-my-client-folder/366529/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/where-would-i-add-npc-ints-to-this-and-where-in-my-client-folder/366529/2</link>
        <pubDate>Sat, 30 Oct 2010 10:30:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-366529-2</guid>
        <source url="https://forum.moparisthebest.com/t/where-would-i-add-npc-ints-to-this-and-where-in-my-client-folder/366529.rss">Where would i add npc ints to this, and where in my client folder?</source>
      </item>
      <item>
        <title>Where would i add npc ints to this, and where in my client folder?</title>
        <dc:creator><![CDATA[@neil1111 neil1111]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/neil1111">@neil1111</a> wrote:</p>
          <blockquote>
              <p>[code=java]// Decompiled by Jad v1.5.8f. Copyright 2001 Pavel Kouznetsov.<br>
// Jad home page: <a href="http://www.kpdus.com/jad.html" rel="nofollow noopener">http://www.kpdus.com/jad.html</a><br>
// Decompiler options: packimports(3)</p>
<p>public final class EntityDef<br>
{<br>
public static EntityDef forID(int i)<br>
{<br>
for(int j = 0; j &lt; 20; j++)<br>
if(cache[j].interfaceType == (long)i)<br>
return cache[j];<br>
anInt56 = (anInt56 + 1) % 20;<br>
EntityDef entityDef = cache[anInt56] = new EntityDef();<br>
stream.currentOffset = streamIndices[i];<br>
entityDef.interfaceType = i;<br>
entityDef.readValues(stream);<br>
return entityDef;<br>
}</p>
<pre><code>public Model method160()
{
    if(childrenIDs != null)
    {
        EntityDef entityDef = method161();
        if(entityDef == null)
            return null;
        else
            return entityDef.method160();
    }
    if(anIntArray73 == null)
        return null;
    boolean flag1 = false;
    for(int i = 0; i &lt; anIntArray73.length; i++)
        if(!Model.method463(anIntArray73[i]))
            flag1 = true;

    if(flag1)
        return null;
    Model aclass30_sub2_sub4_sub6s[] = new Model[anIntArray73.length];
    for(int j = 0; j &lt; anIntArray73.length; j++)
        aclass30_sub2_sub4_sub6s[j] = Model.method462(anIntArray73[j]);

    Model model;
    if(aclass30_sub2_sub4_sub6s.length == 1)
        model = aclass30_sub2_sub4_sub6s[0];
    else
        model = new Model(aclass30_sub2_sub4_sub6s.length, aclass30_sub2_sub4_sub6s);
    if(anIntArray76 != null)
    {
        for(int k = 0; k &lt; anIntArray76.length; k++)
            model.method476(anIntArray76[k], anIntArray70[k]);

    }
    return model;
}

public EntityDef method161() {
	try {
		int j = -1;
		if(anInt57 != -1)
		{
			VarBit varBit = VarBit.cache[anInt57];
			int k = varBit.anInt648;
			int l = varBit.anInt649;
			int i1 = varBit.anInt650;
			int j1 = client.anIntArray1232[i1 - l];
			j = clientInstance.variousSettings[k] &gt;&gt; l &amp; j1;
		} else
		if(anInt59 != -1) {
			j = clientInstance.variousSettings[anInt59];
		}
		if(j &lt; 0 || j &gt;= childrenIDs.length || childrenIDs[j] == -1) {
			return null;
		} else {
			return forID(childrenIDs[j]);
		}
	} catch (Exception e) {
		return null;
	}
}



public static void unpackConfig(NamedArchive archive)
{
    stream = new Stream(archive.getDataForName("npc.dat"));
    Stream stream2 = new Stream(archive.getDataForName("npc.idx"));
    int totalNPCs = stream2.readUnsignedWord();
    streamIndices = new int[totalNPCs];
    int i = 2;
    for(int j = 0; j &lt; totalNPCs; j++)
    {
        streamIndices[j] = i;
        i += stream2.readUnsignedWord();
    }

    cache = new EntityDef[20];
    for(int k = 0; k &lt; 20; k++)
        cache[k] = new EntityDef();
}

public static void nullLoader()
{
    mruNodes = null;
    streamIndices = null;
    cache = null;
    stream = null;
}

public Model method164(int j, int k, int ai[])
{
    if(childrenIDs != null)
    {
        EntityDef entityDef = method161();
        if(entityDef == null)
            return null;
        else
            return entityDef.method164(j, k, ai);
    }
    Model model = (Model) mruNodes.insertFromCache(interfaceType);
    if(model == null)
    {
        boolean flag = false;
        for(int i1 = 0; i1 &lt; anIntArray94.length; i1++)
            if(!Model.method463(anIntArray94[i1]))
                flag = true;

        if(flag)
            return null;
        Model aclass30_sub2_sub4_sub6s[] = new Model[anIntArray94.length];
        for(int j1 = 0; j1 &lt; anIntArray94.length; j1++)
            aclass30_sub2_sub4_sub6s[j1] = Model.method462(anIntArray94[j1]);

        if(aclass30_sub2_sub4_sub6s.length == 1)
            model = aclass30_sub2_sub4_sub6s[0];
        else
            model = new Model(aclass30_sub2_sub4_sub6s.length, aclass30_sub2_sub4_sub6s);
        if(anIntArray76 != null)
        {
            for(int k1 = 0; k1 &lt; anIntArray76.length; k1++)
                model.method476(anIntArray76[k1], anIntArray70[k1]);

        }
        model.method469();
        model.method479(64 + anInt85, 850 + anInt92, -30, -50, -30, true);
        mruNodes.removeFromCache(model, interfaceType);
    }
    Model model_1 = Model.aModel_1621;
    model_1.method464(model, Class36.method532(k) &amp; Class36.method532(j));
    if(k != -1 &amp;&amp; j != -1)
        model_1.method471(ai, j, k);
    else
    if(k != -1)
        model_1.method470(k);
    if(anInt91 != 128 || anInt86 != 128)
        model_1.method478(anInt91, anInt91, anInt86);
    model_1.method466();
    model_1.anIntArrayArray1658 = null;
    model_1.anIntArrayArray1657 = null;
    if(aByte68 == 1)
        model_1.aBoolean1659 = true;
    return model_1;
}

private void readValues(Stream stream)
{
    do
    {
        int i = stream.readUnsignedByte();
        if(i == 0)
            return;
        if(i == 1)
        {
            int j = stream.readUnsignedByte();
            anIntArray94 = new int[j];
            for(int j1 = 0; j1 &lt; j; j1++)
                anIntArray94[j1] = stream.readUnsignedWord();

        } else
        if(i == 2)
            name = stream.readNewString();
        else
        if(i == 3)
            description = stream.readBytes();
        else
        if(i == 12)
            aByte68 = stream.readSignedByte();
        else
        if(i == 13)
            anInt77 = stream.readUnsignedWord();
        else
        if(i == 14)
            anInt67 = stream.readUnsignedWord();
        else
        if(i == 17)
        {
            anInt67 = stream.readUnsignedWord();
            anInt58 = stream.readUnsignedWord();
            anInt83 = stream.readUnsignedWord();
            anInt55 = stream.readUnsignedWord();
        } else
        if(i &gt;= 30 &amp;&amp; i &lt; 40)
        {
            if(itemActions == null)
                itemActions = new String[5];
            itemActions[i - 30] = stream.readNewString();
            if(itemActions[i - 30].equalsIgnoreCase("hidden"))
                itemActions[i - 30] = null;
        } else
        if(i == 40)
        {
            int k = stream.readUnsignedByte();
            anIntArray76 = new int[k];
            anIntArray70 = new int[k];
            for(int k1 = 0; k1 &lt; k; k1++)
            {
                anIntArray76[k1] = stream.readUnsignedWord();
                anIntArray70[k1] = stream.readUnsignedWord();
            }

        } else
        if(i == 60)
        {
            int l = stream.readUnsignedByte();
            anIntArray73 = new int[l];
            for(int l1 = 0; l1 &lt; l; l1++)
                anIntArray73[l1] = stream.readUnsignedWord();

        } else
        if(i == 90)
            stream.readUnsignedWord();
        else
        if(i == 91)
            stream.readUnsignedWord();
        else
        if(i == 92)
            stream.readUnsignedWord();
        else
        if(i == 93)
            aBoolean87 = false;
        else
        if(i == 95)
            combatLevel = stream.readUnsignedWord();
        else
        if(i == 97)
            anInt91 = stream.readUnsignedWord();
        else
        if(i == 98)
            anInt86 = stream.readUnsignedWord();
        else
        if(i == 99)
            aBoolean93 = true;
        else
        if(i == 100)
            anInt85 = stream.readSignedByte();
        else
        if(i == 101)
            anInt92 = stream.readSignedByte() * 5;
        else
        if(i == 102)
            anInt75 = stream.readUnsignedWord();
        else
        if(i == 103)
            anInt79 = stream.readUnsignedWord();
        else
        if(i == 106)
        {
            anInt57 = stream.readUnsignedWord();
            if(anInt57 == 65535)
                anInt57 = -1;
            anInt59 = stream.readUnsignedWord();
            if(anInt59 == 65535)
                anInt59 = -1;
            int i1 = stream.readUnsignedByte();
            childrenIDs = new int[i1 + 1];
            for(int i2 = 0; i2 &lt;= i1; i2++)
            {
                childrenIDs[i2] = stream.readUnsignedWord();
                if(childrenIDs[i2] == 65535)
                    childrenIDs[i2] = -1;
            }

        } else
        if(i == 107)
            aBoolean84 = false;
    } while(true);
}

private EntityDef()
{
    anInt55 = -1;
    anInt57 = -1;
    anInt58 = -1;
    anInt59 = -1;
    combatLevel = -1;
    anInt64 = 1834;
    anInt67 = -1;
    aByte68 = 1;
    anInt75 = -1;
    anInt77 = -1;
    interfaceType = -1L;
    anInt79 = 32;
    anInt83 = -1;
    aBoolean84 = true;
    anInt86 = 128;
    aBoolean87 = true;
    anInt91 = 128;
    aBoolean93 = false;
}

public int anInt55;
private static int anInt56;
private int anInt57;
public int anInt58;
private int anInt59;
private static Stream stream;

public int combatLevel;

private final int anInt64;
public String name;
public String itemActions[];
public int anInt67;
public byte aByte68;
private int[] anIntArray70;
private static int[] streamIndices;
private int[] anIntArray73;
public int anInt75;
private int[] anIntArray76;
public int anInt77;
public long interfaceType;
public int anInt79;
private static EntityDef[] cache;
public static client clientInstance;
public int anInt83;
public boolean aBoolean84;
private int anInt85;
private int anInt86;
public boolean aBoolean87;
public int childrenIDs[];
public byte description[];
private int anInt91;
private int anInt92;
public boolean aBoolean93;
private int[] anIntArray94;
public static MRUNodes mruNodes = new MRUNodes(30);
</code></pre>
<p>}<br>
[/code]</p>
<p>hey, im new to the rsps stuff, and this is the help section so…<br>
where would i add npc ints to this file?<br>
im tryign to add the corp beast, and this is what my entitydef looks like.<br>
also there is no models folder in my client folder, where would the models go?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/where-would-i-add-npc-ints-to-this-and-where-in-my-client-folder/366529/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/where-would-i-add-npc-ints-to-this-and-where-in-my-client-folder/366529/1</link>
        <pubDate>Fri, 29 Oct 2010 20:28:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-366529-1</guid>
        <source url="https://forum.moparisthebest.com/t/where-would-i-add-npc-ints-to-this-and-where-in-my-client-folder/366529.rss">Where would i add npc ints to this, and where in my client folder?</source>
      </item>
  </channel>
</rss>
