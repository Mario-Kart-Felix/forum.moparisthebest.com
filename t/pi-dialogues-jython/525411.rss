<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[PI] Dialogues &amp; Jython</title>
    <link>https://forum.moparisthebest.com/t/pi-dialogues-jython/525411</link>
    <description>Figured I&#39;d release something. I feel this is better than the traditional system because you won&#39;t have 1,000 cases in your switch block in the dialogues class. It works, almost the same essentially. Using the Jython scripting included in the PI base really helps clean up some of these gigantic classes that are impossible to navigate. Anyways, here&#39;s the code:

[code=Java]
package server.model.players.dialogue;

import server.model.players.Client;
import server.util.ScriptManager;

/**
 * @author 4x4Chevrolet
 * 
 */
public class Dialogues {

	public static final int HAPPY = 588;
	public static final int CALM = 589;
	public static final int EVIL = 592;
	public static final int ANNOYED = 595;
	public static final int DISTRESSED = 596;
	public static final int CRYING = 598;
	public static final int SAD = 599;
	public static final int ANGRY = 614;

	public static void sendPythonDialogue(Client c, String defName) {
		ScriptManager.callFunc(defName, c);
	}

	public static void sendDialogue(Client c, String title, boolean isNPC,
			int mood, String... dialogues) {
		try {
			if (isNPC) {
				switch (dialogues.length) {
				case 1:
					c.getPA().sendFrame200(4883, mood);
					c.getPA().sendFrame126(title, 4884);
					c.getPA().sendFrame126(dialogues[0], 4885);
					c.getPA().sendFrame75(c.talkingNpc, 4883);
					c.getPA().sendFrame164(4882);
					break;
				case 2:
					c.getPA().sendFrame200(4888, mood);
					c.getPA().sendFrame126(title, 4889);
					c.getPA().sendFrame126(dialogues[0], 4890);
					c.getPA().sendFrame126(dialogues[1], 4891);
					c.getPA().sendFrame75(c.talkingNpc, 4888);
					c.getPA().sendFrame164(4887);
					break;
				case 3:
					c.getPA().sendFrame200(4894, mood);
					c.getPA().sendFrame126(title, 4895);
					c.getPA().sendFrame126(dialogues[0], 4896);
					c.getPA().sendFrame126(dialogues[1], 4897);
					c.getPA().sendFrame126(dialogues[2], 4898);
					c.getPA().sendFrame75(c.talkingNpc, 4894);
					c.getPA().sendFrame164(4893);
					break;
				case 4:
					c.getPA().sendFrame200(4901, mood);
					c.getPA().sendFrame126(title, 4902);
					c.getPA().sendFrame126(dialogues[0], 4903);
					c.getPA().sendFrame126(dialogues[1], 4904);
					c.getPA().sendFrame126(dialogues[2], 4905);
					c.getPA().sendFrame126(dialogues[3], 4906);
					c.getPA().sendFrame75(c.talkingNpc, 4901);
					c.getPA().sendFrame164(4900);
					break;
				}
			} else {
				switch (dialogues.length) {
				case 1:
					c.getPA().sendFrame200(969, mood);
					c.getPA().sendFrame126(c.playerName, 970);
					c.getPA().sendFrame126(dialogues[0], 971);
					c.getPA().sendFrame185(969);
					c.getPA().sendFrame164(968);
					break;
				case 2:
					c.getPA().sendFrame200(974, mood);
					c.getPA().sendFrame126(c.playerName, 975);
					c.getPA().sendFrame126(dialogues[0], 976);
					c.getPA().sendFrame126(dialogues[1], 977);
					c.getPA().sendFrame185(974);
					c.getPA().sendFrame164(973);
					break;
				case 3:
					c.getPA().sendFrame200(980, mood);
					c.getPA().sendFrame126(c.playerName, 981);
					c.getPA().sendFrame126(dialogues[0], 982);
					c.getPA().sendFrame126(dialogues[1], 983);
					c.getPA().sendFrame126(dialogues[2], 984);
					c.getPA().sendFrame185(980);
					c.getPA().sendFrame164(979);
					break;
				case 4:
					c.getPA().sendFrame200(987, mood);
					c.getPA().sendFrame126(c.playerName, 988);
					c.getPA().sendFrame126(dialogues[0], 989);
					c.getPA().sendFrame126(dialogues[1], 990);
					c.getPA().sendFrame126(dialogues[2], 991);
					c.getPA().sendFrame126(dialogues[2], 992);
					c.getPA().sendFrame185(987);
					c.getPA().sendFrame164(986);
					break;
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}
[/code]

Your Python file could look something like this:

[code=Python]
from server.util import ScriptManager
from server.model.players.dialogue import Dialogues

def introduction(player):
	player.talkingNpc = 2253;
	Dialogues.sendDialogue(player, &quot;Wise Old Man&quot;, True, Dialogues.CALM, [&quot;Come to me in the park, quickly.&quot;])

def welcomeToFalador1(player):
	player.talkingNpc = 2253;
	Dialogues.sendDialogue(player, &quot;Wise Old Man&quot;, True, Dialogues.CALM, [&quot;Welcome to Falador, young hero.&quot;, &quot;You have arrived during some very troubling times..&quot;])
[/code]

I named the above file &quot;WiseOldMan.py&quot; in a folders dialogue&gt;npc, which keeps things pretty organized.

Here the other method is used:
[code=Python]
def button_click14067(player):
	Dialogues.sendPythonDialogue(player, &quot;introduction&quot;)
[/code]
This should just give you an idea of how the system works, enjoy.

Only [b]constructive[/b] criticism please, anything else will just be ignored.</description>
    
    <lastBuildDate>Fri, 19 Jul 2013 18:03:59 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/pi-dialogues-jython/525411.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[PI] Dialogues &amp; Jython</title>
        <dc:creator><![CDATA[@system system]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/system">@system</a> wrote:</p>
          <blockquote>
              <p>[quote=“Java-RSPS-Noob, post:5, topic:525411”]:eek: yeah I use an IDE a fairly good bit. Is there an IDe that checks both java/jython? lol</p>
<p>and thanks for the documentation will look into it more.[/quote]</p>
<p><a href="http://pydev.org/" class="onebox" target="_blank">http://pydev.org/</a></p>
<p>I searched it up and there actually is one lmao.</p>
<p>[quote=“Vain_, post:6, topic:525411”]when loading a large amount of data, it may hinder load time of the server by a few milliseconds/seconds(would take a lot of data) as jython is compiled on runtime</p>
<p>thats the only real performance issue[/quote]<br>
Ahh, thanks for that info.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-dialogues-jython/525411/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-dialogues-jython/525411/7</link>
        <pubDate>Fri, 19 Jul 2013 18:03:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-525411-7</guid>
        <source url="https://forum.moparisthebest.com/t/pi-dialogues-jython/525411.rss">[PI] Dialogues &amp; Jython</source>
      </item>
      <item>
        <title>[PI] Dialogues &amp; Jython</title>
        <dc:creator><![CDATA[@Vain1 Vain_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/vain1">@Vain1</a> wrote:</p>
          <blockquote>
              <p>when loading a large amount of data, it may hinder load time of the server by a few milliseconds/seconds(would take a lot of data) as jython is compiled on runtime</p>
<p>thats the only real performance issue</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-dialogues-jython/525411/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-dialogues-jython/525411/6</link>
        <pubDate>Fri, 19 Jul 2013 18:02:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-525411-6</guid>
        <source url="https://forum.moparisthebest.com/t/pi-dialogues-jython/525411.rss">[PI] Dialogues &amp; Jython</source>
      </item>
      <item>
        <title>[PI] Dialogues &amp; Jython</title>
        <dc:creator><![CDATA[@Java-RSPS-Noob Java-RSPS-Noob]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/java-rsps-noob">@Java-RSPS-Noob</a> wrote:</p>
          <blockquote>
              <p>:eek: yeah I use an IDE a fairly good bit. Is there an IDe that checks both java/jython? lol</p>
<p>and thanks for the documentation will look into it more.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-dialogues-jython/525411/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-dialogues-jython/525411/5</link>
        <pubDate>Fri, 19 Jul 2013 17:53:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-525411-5</guid>
        <source url="https://forum.moparisthebest.com/t/pi-dialogues-jython/525411.rss">[PI] Dialogues &amp; Jython</source>
      </item>
      <item>
        <title>[PI] Dialogues &amp; Jython</title>
        <dc:creator><![CDATA[@system system]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/system">@system</a> wrote:</p>
          <blockquote>
              <p>[quote=“Java-RSPS-Noob, post:3, topic:525411”]is there any difference in stability/performance by using this?</p>
<p>And does it automatically swap over to the jython if you take out the regular old version? Sorry never used jython before so just wondering.</p>
<p>Heck, I wasn’t even aware this was in there <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"></p>
<p>I’d love some more documentation on how this works in general and if there is any stability differences. I would start converting a lot of stuff to jython then.[/quote]</p>
<pre><code class="lang-auto">package server.util;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;

import org.python.core.Py;
import org.python.core.PyException;
import org.python.core.PyFunction;
import org.python.core.PyObject;
import org.python.util.PythonInterpreter;

import server.util.log.Logger;

/**
 * @Not My Code
 */
public class ScriptManager {

	public static PythonInterpreter python = new PythonInterpreter();
	private static int scriptsLoaded = 0;

	public static PyObject getVariable(String variable) {
		try {
			return ScriptManager.python.get(variable);
		} catch (PyException e) {
			e.printStackTrace();
			return null;
		}
	}

	public static Object callFunc(Class&lt;?&gt; c, String funcName, Object... binds) {
		try {
			PyObject obj = ScriptManager.python.get(funcName);
			if (obj != null &amp;&amp; obj instanceof PyFunction) {
				PyFunction func = (PyFunction) obj;
				PyObject[] objects = new PyObject[binds.length];
				for (int i = 0; i &lt; binds.length; i++) {
					Object bind = binds[i];
					objects[i] = Py.java2py(bind);
				}
				return func.__call__(objects).__tojava__(c);
			} else
				return null;
		} catch (PyException ex) {
			ex.printStackTrace();
			return null;
		}
	}

	public static boolean callFunc(String funcName, Object... binds) {
		try {
			PyObject obj = ScriptManager.python.get(funcName);
			if (obj != null &amp;&amp; obj instanceof PyFunction) {
				PyFunction func = (PyFunction) obj;
				PyObject[] objects = new PyObject[binds.length];
				for (int i = 0; i &lt; binds.length; i++) {
					Object bind = binds[i];
					objects[i] = Py.java2py(bind);
				}
				func.__call__(objects);
				return true;
			} else
				return false;
		} catch (PyException ex) {
			ex.printStackTrace();
			return false;
		}
	}

	public static void loadScripts() throws IOException {
		System.out.println("Loading scripts...");
		ScriptManager.python.cleanup();
		File scriptDir = new File("./data/scripts/");
		if (scriptDir.isDirectory() &amp;&amp; !scriptDir.getName().startsWith(".")) {
			File[] children = scriptDir.listFiles();
			for (File child : children)
				if (child.isFile()) {
					if (child.getName().endsWith(".py")) {
						System.out.println("\tLoading script: "
								+ child.getPath());
						ScriptManager.python
								.execfile(new FileInputStream(child));
						ScriptManager.scriptsLoaded++;
					}
				} else
					ScriptManager.recurse(child.getPath());
		}
		System.out.println("Loaded " + ScriptManager.scriptsLoaded
				+ " scripts!");
		ScriptManager.scriptsLoaded = 0;
	}

	private static void recurse(String dir) throws IOException {
		File scriptDir = new File(dir);
		if (scriptDir.isDirectory() &amp;&amp; !scriptDir.getName().startsWith(".")) {
			File[] children = scriptDir.listFiles();
			for (File child : children)
				if (child.isFile()) {
					if (child.getName().endsWith(".py")) {
						System.out.println("\tLoading script: \r"
								+ child.getPath());
						ScriptManager.python
								.execfile(new FileInputStream(child));
						ScriptManager.scriptsLoaded++;
					}
				} else
					ScriptManager.recurse(child.getPath());
		}
	}

	static {
		ScriptManager.python.setOut(new Logger(System.out));
		ScriptManager.python.setErr(new Logger(System.err));
	}
}</code></pre>
<p>You have to call the functions themselves in the Java code.</p>
<p>Performance improvement? I don’t think there is any, but it’s better than hardcoding everything into the packet handling classes, you can organize them to your liking in the scripts folder, so you can reach everything easily.</p>
<p><img src="http://screencloud.net/img/screenshots/757089a835f13b5bfcd322f898f54323.png" alt width="" height=""></p>
<p>This is my current folder structure to show you how things can be handled, is a big freaking help when it comes to quests. None of my quest dialogues, tasks, or anything like that are found in the source, it’s all there.</p>
<p>If I’m reading this correctly: <a href="http://www.jython.org/javadoc/org/python/core/Py.html#java2py(java.lang.Object)">http://www.jython.org/javadoc/org/python/core/Py.html#java2py(java.lang.Object)</a></p>
<p>It sounds like it just takes the code objects and converts them to Java objects, so no real stability difference at all, just more organized and easier to work with.</p>
<p>Disadvantages to Jython however, you don’t get the help from a Java IDE when writing python scripts, and the smallest of errors can throw your whole program off. Certain messups won’t even really have a good explanation to them when you get an error on start up, so be prepared to dig.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-dialogues-jython/525411/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-dialogues-jython/525411/4</link>
        <pubDate>Fri, 19 Jul 2013 17:50:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-525411-4</guid>
        <source url="https://forum.moparisthebest.com/t/pi-dialogues-jython/525411.rss">[PI] Dialogues &amp; Jython</source>
      </item>
      <item>
        <title>[PI] Dialogues &amp; Jython</title>
        <dc:creator><![CDATA[@Java-RSPS-Noob Java-RSPS-Noob]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/java-rsps-noob">@Java-RSPS-Noob</a> wrote:</p>
          <blockquote>
              <p>is there any difference in stability/performance by using this?</p>
<p>And does it automatically swap over to the jython if you take out the regular old version? Sorry never used jython before so just wondering.</p>
<p>Heck, I wasn’t even aware this was in there <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"></p>
<p>I’d love some more documentation on how this works in general and if there is any stability differences. I would start converting a lot of stuff to jython then.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-dialogues-jython/525411/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-dialogues-jython/525411/3</link>
        <pubDate>Fri, 19 Jul 2013 12:55:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-525411-3</guid>
        <source url="https://forum.moparisthebest.com/t/pi-dialogues-jython/525411.rss">[PI] Dialogues &amp; Jython</source>
      </item>
      <item>
        <title>[PI] Dialogues &amp; Jython</title>
        <dc:creator><![CDATA[@jal_knight jal knight]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jal_knight">@jal_knight</a> wrote:</p>
          <blockquote>
              <p>nice, thanks for contributing. I used this and it works like a charm! <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-dialogues-jython/525411/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-dialogues-jython/525411/2</link>
        <pubDate>Fri, 19 Jul 2013 04:23:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-525411-2</guid>
        <source url="https://forum.moparisthebest.com/t/pi-dialogues-jython/525411.rss">[PI] Dialogues &amp; Jython</source>
      </item>
      <item>
        <title>[PI] Dialogues &amp; Jython</title>
        <dc:creator><![CDATA[@system system]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/system">@system</a> wrote:</p>
          <blockquote>
              <p>Figured I’d release something. I feel this is better than the traditional system because you won’t have 1,000 cases in your switch block in the dialogues class. It works, almost the same essentially. Using the Jython scripting included in the PI base really helps clean up some of these gigantic classes that are impossible to navigate. Anyways, here’s the code:</p>
<pre><code class="lang-auto">package server.model.players.dialogue;

import server.model.players.Client;
import server.util.ScriptManager;

/**
 * @author 4x4Chevrolet
 * 
 */
public class Dialogues {

	public static final int HAPPY = 588;
	public static final int CALM = 589;
	public static final int EVIL = 592;
	public static final int ANNOYED = 595;
	public static final int DISTRESSED = 596;
	public static final int CRYING = 598;
	public static final int SAD = 599;
	public static final int ANGRY = 614;

	public static void sendPythonDialogue(Client c, String defName) {
		ScriptManager.callFunc(defName, c);
	}

	public static void sendDialogue(Client c, String title, boolean isNPC,
			int mood, String... dialogues) {
		try {
			if (isNPC) {
				switch (dialogues.length) {
				case 1:
					c.getPA().sendFrame200(4883, mood);
					c.getPA().sendFrame126(title, 4884);
					c.getPA().sendFrame126(dialogues[0], 4885);
					c.getPA().sendFrame75(c.talkingNpc, 4883);
					c.getPA().sendFrame164(4882);
					break;
				case 2:
					c.getPA().sendFrame200(4888, mood);
					c.getPA().sendFrame126(title, 4889);
					c.getPA().sendFrame126(dialogues[0], 4890);
					c.getPA().sendFrame126(dialogues[1], 4891);
					c.getPA().sendFrame75(c.talkingNpc, 4888);
					c.getPA().sendFrame164(4887);
					break;
				case 3:
					c.getPA().sendFrame200(4894, mood);
					c.getPA().sendFrame126(title, 4895);
					c.getPA().sendFrame126(dialogues[0], 4896);
					c.getPA().sendFrame126(dialogues[1], 4897);
					c.getPA().sendFrame126(dialogues[2], 4898);
					c.getPA().sendFrame75(c.talkingNpc, 4894);
					c.getPA().sendFrame164(4893);
					break;
				case 4:
					c.getPA().sendFrame200(4901, mood);
					c.getPA().sendFrame126(title, 4902);
					c.getPA().sendFrame126(dialogues[0], 4903);
					c.getPA().sendFrame126(dialogues[1], 4904);
					c.getPA().sendFrame126(dialogues[2], 4905);
					c.getPA().sendFrame126(dialogues[3], 4906);
					c.getPA().sendFrame75(c.talkingNpc, 4901);
					c.getPA().sendFrame164(4900);
					break;
				}
			} else {
				switch (dialogues.length) {
				case 1:
					c.getPA().sendFrame200(969, mood);
					c.getPA().sendFrame126(c.playerName, 970);
					c.getPA().sendFrame126(dialogues[0], 971);
					c.getPA().sendFrame185(969);
					c.getPA().sendFrame164(968);
					break;
				case 2:
					c.getPA().sendFrame200(974, mood);
					c.getPA().sendFrame126(c.playerName, 975);
					c.getPA().sendFrame126(dialogues[0], 976);
					c.getPA().sendFrame126(dialogues[1], 977);
					c.getPA().sendFrame185(974);
					c.getPA().sendFrame164(973);
					break;
				case 3:
					c.getPA().sendFrame200(980, mood);
					c.getPA().sendFrame126(c.playerName, 981);
					c.getPA().sendFrame126(dialogues[0], 982);
					c.getPA().sendFrame126(dialogues[1], 983);
					c.getPA().sendFrame126(dialogues[2], 984);
					c.getPA().sendFrame185(980);
					c.getPA().sendFrame164(979);
					break;
				case 4:
					c.getPA().sendFrame200(987, mood);
					c.getPA().sendFrame126(c.playerName, 988);
					c.getPA().sendFrame126(dialogues[0], 989);
					c.getPA().sendFrame126(dialogues[1], 990);
					c.getPA().sendFrame126(dialogues[2], 991);
					c.getPA().sendFrame126(dialogues[2], 992);
					c.getPA().sendFrame185(987);
					c.getPA().sendFrame164(986);
					break;
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}</code></pre>
<p>Your Python file could look something like this:</p>
<pre><code class="lang-auto">from server.util import ScriptManager
from server.model.players.dialogue import Dialogues

def introduction(player):
	player.talkingNpc = 2253;
	Dialogues.sendDialogue(player, "Wise Old Man", True, Dialogues.CALM, ["Come to me in the park, quickly."])

def welcomeToFalador1(player):
	player.talkingNpc = 2253;
	Dialogues.sendDialogue(player, "Wise Old Man", True, Dialogues.CALM, ["Welcome to Falador, young hero.", "You have arrived during some very troubling times.."])</code></pre>
<p>I named the above file “WiseOldMan.py” in a folders dialogue&gt;npc, which keeps things pretty organized.</p>
<p>Here the other method is used:</p>
<pre><code class="lang-auto">def button_click14067(player):
	Dialogues.sendPythonDialogue(player, "introduction")</code></pre>
<p>This should just give you an idea of how the system works, enjoy.</p>
<p>Only <span class="bbcode-b">constructive</span> criticism please, anything else will just be ignored.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-dialogues-jython/525411/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-dialogues-jython/525411/1</link>
        <pubDate>Fri, 19 Jul 2013 03:32:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-525411-1</guid>
        <source url="https://forum.moparisthebest.com/t/pi-dialogues-jython/525411.rss">[PI] Dialogues &amp; Jython</source>
      </item>
  </channel>
</rss>
