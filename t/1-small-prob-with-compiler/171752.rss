<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>1 small prob with compiler</title>
    <link>https://forum.moparisthebest.com/t/1-small-prob-with-compiler/171752</link>
    <description>hey i have a ...well ...small prob that just apeared when i was doing some updates (i wast even doin anything with the skills that the error is in)

[code] ^
client.java:8201: &lt;identifier&gt; expected
 if (command.equalsIgnoreCase(&quot;noclip&quot;))
                             ^
client.java:8201: illegal start of type
 if (command.equalsIgnoreCase(&quot;noclip&quot;))
                              ^
client.java:8210: illegal start of type
 if (command.startsWith(&quot;npc&quot;)) {
 ^
client.java:8210: &lt;identifier&gt; expected
 if (command.startsWith(&quot;npc&quot;)) {
                       ^
client.java:8210: illegal start of type
 if (command.startsWith(&quot;npc&quot;)) {
                        ^
client.java:8226: illegal start of type
if (command.equalsIgnoreCase(&quot;god&quot;) &amp;&amp; playerRights &gt;= 1)
^
client.java:8226: &lt;identifier&gt; expected
if (command.equalsIgnoreCase(&quot;god&quot;) &amp;&amp; playerRights &gt;= 1)
                            ^
client.java:8226: illegal start of type
if (command.equalsIgnoreCase(&quot;god&quot;) &amp;&amp; playerRights &gt;= 1)
                             ^
client.java:8238: illegal start of type
}else if (command.equalsIgnoreCase(&quot;godoff&quot;) &amp;&amp; playerRights &gt;= 1){
 ^
client.java:8238: &lt;identifier&gt; expected
}else if (command.equalsIgnoreCase(&quot;godoff&quot;) &amp;&amp; playerRights &gt;= 1){
                                  ^
client.java:8238: illegal start of type
}else if (command.equalsIgnoreCase(&quot;godoff&quot;) &amp;&amp; playerRights &gt;= 1){
                                   ^
client.java:8250: illegal start of type
if (command.startsWith(&quot;empty&quot;)) {
^
client.java:8250: &lt;identifier&gt; expected
if (command.startsWith(&quot;empty&quot;)) {
                      ^
client.java:8250: illegal start of type
if (command.startsWith(&quot;empty&quot;)) {
                       ^
client.java:8254: illegal start of type
 if(command.startsWith(&quot;banuser&quot;) &amp;&amp; (playerRights &gt;= 2))
 ^
client.java:8254: &lt;identifier&gt; expected
 if(command.startsWith(&quot;banuser&quot;) &amp;&amp; (playerRights &gt;= 2))
                      ^
client.java:8254: illegal start of type
 if(command.startsWith(&quot;banuser&quot;) &amp;&amp; (playerRights &gt;= 2))
                       ^
client.java:8269: illegal start of type
                }     else if (command.equalsIgnoreCase(&quot;bank&quot;)) {
                      ^
client.java:8269: &lt;identifier&gt; expected
                }     else if (command.equalsIgnoreCase(&quot;bank&quot;)) {
                                                       ^
client.java:8269: illegal start of type
                }     else if (command.equalsIgnoreCase(&quot;bank&quot;)) {
                                                        ^
client.java:8271: illegal start of type
                        } else if (command.startsWith(&quot;tele&quot;))  {
                          ^
client.java:8271: &lt;identifier&gt; expected
                        } else if (command.startsWith(&quot;tele&quot;))  {
                                                     ^
client.java:8271: illegal start of type
                        } else if (command.startsWith(&quot;tele&quot;))  {
                                                      ^
client.java:8281: illegal start of type
        else if (command.startsWith(&quot;interface&quot;)) {
        ^
client.java:8281: &lt;identifier&gt; expected
        else if (command.startsWith(&quot;interface&quot;)) {
                                   ^
client.java:8281: illegal start of type
        else if (command.startsWith(&quot;interface&quot;)) {
                                    ^
client.java:8319: class, interface, or enum expected
        public void fromBank(int itemID, int fromSlot, int amount) {
               ^
client.java:8327: class, interface, or enum expected
                                                                resetBank();
                                                                ^
client.java:8328: class, interface, or enum expected
                                                                resetItems(5064)
;
                                                                ^
client.java:8329: class, interface, or enum expected
                                                        }
                                                        ^
client.java:8333: class, interface, or enum expected
                                                                bankItemsN[fromS
lot] = 0;
                                                                ^
client.java:8334: class, interface, or enum expected
                                                                resetBank();
                                                                ^
client.java:8335: class, interface, or enum expected
                                                                resetItems(5064)
;
                                                                ^
client.java:8336: class, interface, or enum expected
                                                        }
                                                        ^
client.java:8345: class, interface, or enum expected

        amount--;

        ^
client.java:8346: class, interface, or enum expected

}

^
client.java:8349: class, interface, or enum expected

}

^
client.java:8352: class, interface, or enum expected
                                                }
                                                ^
client.java:8354: class, interface, or enum expected
                                                resetItems(5064);
                                                ^
client.java:8355: class, interface, or enum expected
                                        }
                                        ^
client.java:8367: class, interface, or enum expected

resetBank();

^
client.java:8368: class, interface, or enum expected

resetItems(5064);

^
client.java:8369: class, interface, or enum expected
                                                        }
                                                        ^
client.java:8376: class, interface, or enum expected

bankItemsN[fromSlot]=0;

^
client.java:8377: class, interface, or enum expected

resetBank();

^
client.java:8378: class, interface, or enum expected

resetItems(5064);

^
client.java:8379: class, interface, or enum expected
                                                        }
                                                        ^
client.java:8385: class, interface, or enum expected
                                        if (Item.itemStackable[bankItems[fromSlo
t]+1])
                                        ^
client.java:8392: class, interface, or enum expected

resetBank();

^
client.java:8393: class, interface, or enum expected

resetItems(5064);

^
client.java:8394: class, interface, or enum expected
                                                        }
                                                        ^
client.java:8401: class, interface, or enum expected

bankItemsN[fromSlot]=0;

^
client.java:8402: class, interface, or enum expected

resetBank();

^
client.java:8403: class, interface, or enum expected

resetItems(5064);

^
client.java:8404: class, interface, or enum expected
                                                        }
                                                        ^
client.java:8416: class, interface, or enum expected

        amount--;

        ^
client.java:8417: class, interface, or enum expected

}

^
client.java:8420: class, interface, or enum expected

}

^
client.java:8423: class, interface, or enum expected
                                                }
                                                ^
client.java:8425: class, interface, or enum expected
                                                resetItems(5064);
                                                ^
client.java:8426: class, interface, or enum expected
                                        }
                                        ^
client.java:8433: class, interface, or enum expected
        public int getXPForLevel(int level) {
               ^
client.java:8435: class, interface, or enum expected
                int output = 0;
                ^
client.java:8437: class, interface, or enum expected
                for (int lvl = 1; lvl &lt;= level; lvl++) {
                ^
client.java:8437: class, interface, or enum expected
                for (int lvl = 1; lvl &lt;= level; lvl++) {
                                  ^
client.java:8437: class, interface, or enum expected
                for (int lvl = 1; lvl &lt;= level; lvl++) {
                                                ^
client.java:8439: class, interface, or enum expected
                        if (lvl &gt;= level) {
                        ^
client.java:8441: class, interface, or enum expected
                        }
                        ^
client.java:8443: class, interface, or enum expected
                }
                ^
client.java:8445: class, interface, or enum expected
        }
        ^
client.java:8447: class, interface, or enum expected
        public int getLevelForXP(int exp) {
               ^
client.java:8449: class, interface, or enum expected
                int output = 0;
                ^
client.java:8451: class, interface, or enum expected
                for (int lvl = 1; lvl &lt;= 99; lvl++) {
                ^
client.java:8451: class, interface, or enum expected
                for (int lvl = 1; lvl &lt;= 99; lvl++) {
                                  ^
client.java:8451: class, interface, or enum expected
                for (int lvl = 1; lvl &lt;= 99; lvl++) {
                                             ^
client.java:8453: class, interface, or enum expected
                        output = (int)Math.floor(points / 4);
                        ^
client.java:8454: class, interface, or enum expected
                        if (output &gt;= exp) {
                        ^
client.java:8456: class, interface, or enum expected
                        }
                        ^
client.java:8459: class, interface, or enum expected
        }
        ^
client.java:8461: class, interface, or enum expected
public boolean addSkillXP(int amount, int skill){
       ^
client.java:8463: class, interface, or enum expected
      int Defence = getLevelForXP(playerXP[1]);
      ^
client.java:8464: class, interface, or enum expected
      int Strength = getLevelForXP(playerXP[2]);
      ^
client.java:8465: class, interface, or enum expected
      int Hitpoints = getLevelForXP(playerXP[3]);
      ^
client.java:8466: class, interface, or enum expected
      int Ranging = getLevelForXP(playerXP[4]);
      ^
client.java:8467: class, interface, or enum expected
      int Prayer = getLevelForXP(playerXP[5]);
      ^
client.java:8468: class, interface, or enum expected
      int Magic = getLevelForXP(playerXP[6]);
      ^
client.java:8469: class, interface, or enum expected
      int Cooking = getLevelForXP(playerXP[7]);
      ^
100 errors
Press any key to continue . . .[/code]


well its kinda small....XD but anyway can any1 help???</description>
    
    <lastBuildDate>Tue, 08 Jan 2008 00:29:44 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/1-small-prob-with-compiler/171752.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>1 small prob with compiler</title>
        <dc:creator><![CDATA[@java-programmer java-programmer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/java-programmer">@java-programmer</a> wrote:</p>
          <blockquote>
              <p>well you see it happed when i tryed to add runecrafting using that new tut, then i went to compile it and it had 100 errors so i removed it and it still had 100 errors so which part of the code do you want to see??</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/1-small-prob-with-compiler/171752/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/1-small-prob-with-compiler/171752/3</link>
        <pubDate>Tue, 08 Jan 2008 00:29:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-171752-3</guid>
        <source url="https://forum.moparisthebest.com/t/1-small-prob-with-compiler/171752.rss">1 small prob with compiler</source>
      </item>
      <item>
        <title>1 small prob with compiler</title>
        <dc:creator><![CDATA[@_Rich Rich]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_rich">@_Rich</a> wrote:</p>
          <blockquote>
              <p>You probably missed a bracket… or had 1 too many of them, show the code you added/edited.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/1-small-prob-with-compiler/171752/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/1-small-prob-with-compiler/171752/2</link>
        <pubDate>Tue, 08 Jan 2008 00:26:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-171752-2</guid>
        <source url="https://forum.moparisthebest.com/t/1-small-prob-with-compiler/171752.rss">1 small prob with compiler</source>
      </item>
      <item>
        <title>1 small prob with compiler</title>
        <dc:creator><![CDATA[@java-programmer java-programmer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/java-programmer">@java-programmer</a> wrote:</p>
          <blockquote>
              <p>hey i have a …well …small prob that just apeared when i was doing some updates (i wast even doin anything with the skills that the error is in)</p>
<p>[code] ^<br>
client.java:8201:  expected<br>
if (command.equalsIgnoreCase(“noclip”))<br>
^<br>
client.java:8201: illegal start of type<br>
if (command.equalsIgnoreCase(“noclip”))<br>
^<br>
client.java:8210: illegal start of type<br>
if (command.startsWith(“npc”)) {<br>
^<br>
client.java:8210:  expected<br>
if (command.startsWith(“npc”)) {<br>
^<br>
client.java:8210: illegal start of type<br>
if (command.startsWith(“npc”)) {<br>
^<br>
client.java:8226: illegal start of type<br>
if (command.equalsIgnoreCase(“god”) &amp;&amp; playerRights &gt;= 1)<br>
^<br>
client.java:8226:  expected<br>
if (command.equalsIgnoreCase(“god”) &amp;&amp; playerRights &gt;= 1)<br>
^<br>
client.java:8226: illegal start of type<br>
if (command.equalsIgnoreCase(“god”) &amp;&amp; playerRights &gt;= 1)<br>
^<br>
client.java:8238: illegal start of type<br>
}else if (command.equalsIgnoreCase(“godoff”) &amp;&amp; playerRights &gt;= 1){<br>
^<br>
client.java:8238:  expected<br>
}else if (command.equalsIgnoreCase(“godoff”) &amp;&amp; playerRights &gt;= 1){<br>
^<br>
client.java:8238: illegal start of type<br>
}else if (command.equalsIgnoreCase(“godoff”) &amp;&amp; playerRights &gt;= 1){<br>
^<br>
client.java:8250: illegal start of type<br>
if (command.startsWith(“empty”)) {<br>
^<br>
client.java:8250:  expected<br>
if (command.startsWith(“empty”)) {<br>
^<br>
client.java:8250: illegal start of type<br>
if (command.startsWith(“empty”)) {<br>
^<br>
client.java:8254: illegal start of type<br>
if(command.startsWith(“banuser”) &amp;&amp; (playerRights &gt;= 2))<br>
^<br>
client.java:8254:  expected<br>
if(command.startsWith(“banuser”) &amp;&amp; (playerRights &gt;= 2))<br>
^<br>
client.java:8254: illegal start of type<br>
if(command.startsWith(“banuser”) &amp;&amp; (playerRights &gt;= 2))<br>
^<br>
client.java:8269: illegal start of type<br>
}     else if (command.equalsIgnoreCase(“bank”)) {<br>
^<br>
client.java:8269:  expected<br>
}     else if (command.equalsIgnoreCase(“bank”)) {<br>
^<br>
client.java:8269: illegal start of type<br>
}     else if (command.equalsIgnoreCase(“bank”)) {<br>
^<br>
client.java:8271: illegal start of type<br>
} else if (command.startsWith(“tele”))  {<br>
^<br>
client.java:8271:  expected<br>
} else if (command.startsWith(“tele”))  {<br>
^<br>
client.java:8271: illegal start of type<br>
} else if (command.startsWith(“tele”))  {<br>
^<br>
client.java:8281: illegal start of type<br>
else if (command.startsWith(“interface”)) {<br>
^<br>
client.java:8281:  expected<br>
else if (command.startsWith(“interface”)) {<br>
^<br>
client.java:8281: illegal start of type<br>
else if (command.startsWith(“interface”)) {<br>
^<br>
client.java:8319: class, interface, or enum expected<br>
public void fromBank(int itemID, int fromSlot, int amount) {<br>
^<br>
client.java:8327: class, interface, or enum expected<br>
resetBank();<br>
^<br>
client.java:8328: class, interface, or enum expected<br>
resetItems(5064)<br>
;<br>
^<br>
client.java:8329: class, interface, or enum expected<br>
}<br>
^<br>
client.java:8333: class, interface, or enum expected<br>
bankItemsN[fromS<br>
lot] = 0;<br>
^<br>
client.java:8334: class, interface, or enum expected<br>
resetBank();<br>
^<br>
client.java:8335: class, interface, or enum expected<br>
resetItems(5064)<br>
;<br>
^<br>
client.java:8336: class, interface, or enum expected<br>
}<br>
^<br>
client.java:8345: class, interface, or enum expected</p>
<pre><code>    amount--;

    ^
</code></pre>
<p>client.java:8346: class, interface, or enum expected</p>
<p>}</p>
<p>^<br>
client.java:8349: class, interface, or enum expected</p>
<p>}</p>
<p>^<br>
client.java:8352: class, interface, or enum expected<br>
}<br>
^<br>
client.java:8354: class, interface, or enum expected<br>
resetItems(5064);<br>
^<br>
client.java:8355: class, interface, or enum expected<br>
}<br>
^<br>
client.java:8367: class, interface, or enum expected</p>
<p>resetBank();</p>
<p>^<br>
client.java:8368: class, interface, or enum expected</p>
<p>resetItems(5064);</p>
<p>^<br>
client.java:8369: class, interface, or enum expected<br>
}<br>
^<br>
client.java:8376: class, interface, or enum expected</p>
<p>bankItemsN[fromSlot]=0;</p>
<p>^<br>
client.java:8377: class, interface, or enum expected</p>
<p>resetBank();</p>
<p>^<br>
client.java:8378: class, interface, or enum expected</p>
<p>resetItems(5064);</p>
<p>^<br>
client.java:8379: class, interface, or enum expected<br>
}<br>
^<br>
client.java:8385: class, interface, or enum expected<br>
if (Item.itemStackable[bankItems[fromSlo<br>
t]+1])<br>
^<br>
client.java:8392: class, interface, or enum expected</p>
<p>resetBank();</p>
<p>^<br>
client.java:8393: class, interface, or enum expected</p>
<p>resetItems(5064);</p>
<p>^<br>
client.java:8394: class, interface, or enum expected<br>
}<br>
^<br>
client.java:8401: class, interface, or enum expected</p>
<p>bankItemsN[fromSlot]=0;</p>
<p>^<br>
client.java:8402: class, interface, or enum expected</p>
<p>resetBank();</p>
<p>^<br>
client.java:8403: class, interface, or enum expected</p>
<p>resetItems(5064);</p>
<p>^<br>
client.java:8404: class, interface, or enum expected<br>
}<br>
^<br>
client.java:8416: class, interface, or enum expected</p>
<pre><code>    amount--;

    ^
</code></pre>
<p>client.java:8417: class, interface, or enum expected</p>
<p>}</p>
<p>^<br>
client.java:8420: class, interface, or enum expected</p>
<p>}</p>
<p>^<br>
client.java:8423: class, interface, or enum expected<br>
}<br>
^<br>
client.java:8425: class, interface, or enum expected<br>
resetItems(5064);<br>
^<br>
client.java:8426: class, interface, or enum expected<br>
}<br>
^<br>
client.java:8433: class, interface, or enum expected<br>
public int getXPForLevel(int level) {<br>
^<br>
client.java:8435: class, interface, or enum expected<br>
int output = 0;<br>
^<br>
client.java:8437: class, interface, or enum expected<br>
for (int lvl = 1; lvl &lt;= level; lvl++) {<br>
^<br>
client.java:8437: class, interface, or enum expected<br>
for (int lvl = 1; lvl &lt;= level; lvl++) {<br>
^<br>
client.java:8437: class, interface, or enum expected<br>
for (int lvl = 1; lvl &lt;= level; lvl++) {<br>
^<br>
client.java:8439: class, interface, or enum expected<br>
if (lvl &gt;= level) {<br>
^<br>
client.java:8441: class, interface, or enum expected<br>
}<br>
^<br>
client.java:8443: class, interface, or enum expected<br>
}<br>
^<br>
client.java:8445: class, interface, or enum expected<br>
}<br>
^<br>
client.java:8447: class, interface, or enum expected<br>
public int getLevelForXP(int exp) {<br>
^<br>
client.java:8449: class, interface, or enum expected<br>
int output = 0;<br>
^<br>
client.java:8451: class, interface, or enum expected<br>
for (int lvl = 1; lvl &lt;= 99; lvl++) {<br>
^<br>
client.java:8451: class, interface, or enum expected<br>
for (int lvl = 1; lvl &lt;= 99; lvl++) {<br>
^<br>
client.java:8451: class, interface, or enum expected<br>
for (int lvl = 1; lvl &lt;= 99; lvl++) {<br>
^<br>
client.java:8453: class, interface, or enum expected<br>
output = (int)Math.floor(points / 4);<br>
^<br>
client.java:8454: class, interface, or enum expected<br>
if (output &gt;= exp) {<br>
^<br>
client.java:8456: class, interface, or enum expected<br>
}<br>
^<br>
client.java:8459: class, interface, or enum expected<br>
}<br>
^<br>
client.java:8461: class, interface, or enum expected<br>
public boolean addSkillXP(int amount, int skill){<br>
^<br>
client.java:8463: class, interface, or enum expected<br>
int Defence = getLevelForXP(playerXP[1]);<br>
^<br>
client.java:8464: class, interface, or enum expected<br>
int Strength = getLevelForXP(playerXP[2]);<br>
^<br>
client.java:8465: class, interface, or enum expected<br>
int Hitpoints = getLevelForXP(playerXP[3]);<br>
^<br>
client.java:8466: class, interface, or enum expected<br>
int Ranging = getLevelForXP(playerXP[4]);<br>
^<br>
client.java:8467: class, interface, or enum expected<br>
int Prayer = getLevelForXP(playerXP[5]);<br>
^<br>
client.java:8468: class, interface, or enum expected<br>
int Magic = getLevelForXP(playerXP[6]);<br>
^<br>
client.java:8469: class, interface, or enum expected<br>
int Cooking = getLevelForXP(playerXP[7]);<br>
^<br>
100 errors<br>
Press any key to continue . . .[/code]</p>
<p>well its kinda small…XD but anyway can any1 help???</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/1-small-prob-with-compiler/171752/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/1-small-prob-with-compiler/171752/1</link>
        <pubDate>Tue, 08 Jan 2008 00:21:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-171752-1</guid>
        <source url="https://forum.moparisthebest.com/t/1-small-prob-with-compiler/171752.rss">1 small prob with compiler</source>
      </item>
  </channel>
</rss>
