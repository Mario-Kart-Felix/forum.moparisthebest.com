<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[Refactored]Custom Mapback Tutorial</title>
    <link>https://forum.moparisthebest.com/t/refactored-custom-mapback-tutorial/275383</link>
    <description>

Classes Modified: Client.java, Sprite.java
Purpose: To load a Custom Mapback
Difficulty: 5/10(Depends on Knowledge)
Before you All Start Saying I stole this from Impulser
I didn&#39;t I figured it out on my own.
Client Tested: Galkon&#39;s Refactored Base

Ok first off Find your markMinimap Method.
It should look somethign like this:
[code]
public void markMinimap(Sprite sprite, int i, int j) {
        int k = minimapInt1 + minimapInt2 &amp; 0x7ff;
        int l = i * i + j * j;

        if (l &gt; 6400) {
            return;
        }
        int i1 = Model.modelIntArray1[k];
        int j1 = Model.modelIntArray2[k];

        i1 = (i1 * 256) / (minimapInt3 + 256);
        j1 = (j1 * 256) / (minimapInt3 + 256);
        int k1 = j * i1 + i * j1 &gt;&gt; 16;
        int l1 = j * j1 - i * i1 &gt;&gt; 16;

        if (l &gt; 2500) {
            sprite.method354(mapBack, 83 - l1 - sprite.anInt1445 / 2 - 4,
                    ((94 + k1) - sprite.anInt1444 / 2) + 4);
        } else {
            sprite.drawSprite(((94 + k1) - sprite.anInt1444 / 2) + 4,
                    83 - l1 - sprite.anInt1445 / 2 - 4);
        }
    }[/code]Replace it with this:

[code]     private void markMinimap(Sprite sprite, int x, int y)
    {
        int k = minimapInt1 + minimapInt2 &amp; 0x7ff;
        int l = x * x + y * y;
        if(l &gt; 6400)
            return;
        int i1 = Model.modelIntArray1[k];
        int j1 = Model.modelIntArray2[k];
        i1 = (i1 * 256) / (minimapInt3 + 256);
        j1 = (j1 * 256) / (minimapInt3 + 256);
        int k1 = y * i1 + x * j1 &gt;&gt; 16;
        int l1 = y * j1 - x * i1 &gt;&gt; 16;
        if(l &gt; 2500)
        {
            sprite.drawSprite(((94 + k1) - sprite.anInt1444 / 2) + 4, 83 - l1 - sprite.anInt1445 / 2 - 4);

                CustomMapback.drawSprite(0, 0);
        } else
        {
            sprite.drawSprite(((94 + k1) - sprite.anInt1444 / 2) + 4, 83 - l1 - sprite.anInt1445 / 2 - 4);

                CustomMapback.drawSprite(0, 0);
        }
    }    [/code]Now, go to the bottom of client.java and add this int:
[code]private Sprite CustomMapback;[/code]Next go to the bottom of DrawMinimap Method, and right above this:
[code]        aRSImageProducer_1165.initDrawingArea();[/code]add this:
[code]CustomMapback.drawSprite(0, 0);[/code]Then find this:
[code]mapBack = null;[/code]Below that add this
[code]CustomMapback = null;[/code]Then find the method called &quot;ResetRSImageProducers2&quot;

Youll see something a few codes that look like this:
[code]aRSImageProducer_1163[/code]Above that add this Little Code:
[code]CustomMapback.drawSprite(0, 0);[/code]Now find this:
drawLoadingText(80, &quot;Unpacking media&quot;);

Add this underneath that with other thigns
[code]CustomMapback = new Sprite(streamLoader_2, &quot;MAPBACK&quot;, 0);[/code]Now save and close Client.java
Open up sprite.java and find your other sprite loading codes.

Under them add this:
[code]if (s.equalsIgnoreCase(&quot;MAPBACK&quot;) &amp;&amp; i &gt;= 0)
        {
            try {
                Image image = Toolkit.getDefaultToolkit().getImage(&quot;./Sprites/MAPBACK &quot;+i+&quot;.png&quot;);
                myPixels = new int[myWidth * myHeight];
                PixelGrabber pixelgrabber = new PixelGrabber(image, 0, 0, myWidth, myHeight, myPixels, 0, myWidth);
                pixelgrabber.grabPixels();
            } catch (Exception exception) {
                System.out.println(((Object) (exception)));
            }
        }
    else[/code]



Tell me how that works
It ain&#39;t perfect cause of the positioning but you have to work it out by yourself.
This just enables you to load a custom mapback.
Have fun with it!

And here is for the loading positions of the Minimap since some people want the 500+ look.

First Find the drawGameScreen Method.
Youll see something like this a few lines into the method
[code]            if (loadingStage != 2) {
                aRSImageProducer_1165.drawGraphics(4, super.graphics, 4);GameScreen
                aRSImageProducer_1164.drawGraphics(9, super.graphics, 527);//Minimap\mapback
            }[/code]The RSImageProducer_1164 is your Minimap/Mapback drawing.
The 9 is for the Y Coords.and the 527 is the X Coords.
What you do there is kind of Self-Explanatory.
Note your&#39;s may be different than mine. As I have already resized mine.

Also. Every time you change those numbers they must Correspond with the others in the RSImageProducer_1164 in the method.
It looks like this:
[code] if (loadingStage == 2) {
            drawMinimap();
            aRSImageProducer_1164.drawGraphics(9, super.graphics, 527);///Mapback/Minimap[/code]Now that that is over with. You must be wanting the clicking areas right?

Find processMainScreenClick and youll see this:
[code]        if (super.clickMode3 == 1) {
            int i = super.saveClickX - 25 - 527;
            int j = super.saveClickY - 5 - 4;
[/code]That code is also kinda a slap in the face if you don&#39;t understand.
Here is an explaination
int i is the XAxis Clicking position
int j is the YAxis Clicking Position.

And One last thing.
Every time you change the position of the minimap, you may also need to change the Co-ordinates on the CustomMapback.drawSprite(0, 0); the same amount of pixels to the amount you moved the Minimap to the left&lt;&gt;Right and Up&lt;&gt;Down.

Oh yeah, Don&#39;t forget to put a mapback sprite in your sprite files and change the directory!
Well need any help. Post
Also note you may have to change the size of your MAPBACK sprite.

Before you start posting about a Non-Refactored Version. I am already working on it.</description>
    
    <lastBuildDate>Thu, 14 May 2009 16:50:28 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/refactored-custom-mapback-tutorial/275383.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[Refactored]Custom Mapback Tutorial</title>
        <dc:creator><![CDATA[@faded_vision Faded Vision]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/faded_vision">@faded_vision</a> wrote:</p>
          <blockquote>
              <p>nice cant wait for Non Refractored</p>
<p>Rep++</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/refactored-custom-mapback-tutorial/275383/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/refactored-custom-mapback-tutorial/275383/2</link>
        <pubDate>Thu, 14 May 2009 16:50:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-275383-2</guid>
        <source url="https://forum.moparisthebest.com/t/refactored-custom-mapback-tutorial/275383.rss">[Refactored]Custom Mapback Tutorial</source>
      </item>
      <item>
        <title>[Refactored]Custom Mapback Tutorial</title>
        <dc:creator><![CDATA[@Stewie2 Stewie_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/stewie2">@Stewie2</a> wrote:</p>
          <blockquote>
              <p>Classes Modified: Client.java, Sprite.java<br>
Purpose: To load a Custom Mapback<br>
Difficulty: 5/10(Depends on Knowledge)<br>
Before you All Start Saying I stole this from Impulser<br>
I didn’t I figured it out on my own.<br>
Client Tested: Galkon’s Refactored Base</p>
<p>Ok first off Find your markMinimap Method.<br>
It should look somethign like this:</p>
<p>[code]<br>
public void markMinimap(Sprite sprite, int i, int j) {<br>
int k = minimapInt1 + minimapInt2 &amp; 0x7ff;<br>
int l = i * i + j * j;</p>
<pre><code>    if (l &gt; 6400) {
        return;
    }
    int i1 = Model.modelIntArray1[k];
    int j1 = Model.modelIntArray2[k];

    i1 = (i1 * 256) / (minimapInt3 + 256);
    j1 = (j1 * 256) / (minimapInt3 + 256);
    int k1 = j * i1 + i * j1 &gt;&gt; 16;
    int l1 = j * j1 - i * i1 &gt;&gt; 16;

    if (l &gt; 2500) {
        sprite.method354(mapBack, 83 - l1 - sprite.anInt1445 / 2 - 4,
                ((94 + k1) - sprite.anInt1444 / 2) + 4);
    } else {
        sprite.drawSprite(((94 + k1) - sprite.anInt1444 / 2) + 4,
                83 - l1 - sprite.anInt1445 / 2 - 4);
    }
}[/code]Replace it with this:
</code></pre>
<p>[code]     private void markMinimap(Sprite sprite, int x, int y)<br>
{<br>
int k = minimapInt1 + minimapInt2 &amp; 0x7ff;<br>
int l = x * x + y * y;<br>
if(l &gt; 6400)<br>
return;<br>
int i1 = Model.modelIntArray1[k];<br>
int j1 = Model.modelIntArray2[k];<br>
i1 = (i1 * 256) / (minimapInt3 + 256);<br>
j1 = (j1 * 256) / (minimapInt3 + 256);<br>
int k1 = y * i1 + x * j1 &gt;&gt; 16;<br>
int l1 = y * j1 - x * i1 &gt;&gt; 16;<br>
if(l &gt; 2500)<br>
{<br>
sprite.drawSprite(((94 + k1) - sprite.anInt1444 / 2) + 4, 83 - l1 - sprite.anInt1445 / 2 - 4);</p>
<pre><code>            CustomMapback.drawSprite(0, 0);
    } else
    {
        sprite.drawSprite(((94 + k1) - sprite.anInt1444 / 2) + 4, 83 - l1 - sprite.anInt1445 / 2 - 4);

            CustomMapback.drawSprite(0, 0);
    }
}    [/code]Now, go to the bottom of client.java and add this int:
</code></pre>
<p><code>private Sprite CustomMapback;</code>Next go to the bottom of DrawMinimap Method, and right above this:</p>
<p><code>        aRSImageProducer_1165.initDrawingArea();</code>add this:</p>
<p><code>CustomMapback.drawSprite(0, 0);</code>Then find this:</p>
<p><code>mapBack = null;</code>Below that add this</p>
<p><code>CustomMapback = null;</code>Then find the method called “ResetRSImageProducers2”</p>
<p>Youll see something a few codes that look like this:</p>
<p><code>aRSImageProducer_1163</code>Above that add this Little Code:</p>
<p><code>CustomMapback.drawSprite(0, 0);</code>Now find this:<br>
drawLoadingText(80, “Unpacking media”);</p>
<p>Add this underneath that with other thigns</p>
<p><code>CustomMapback = new Sprite(streamLoader_2, "MAPBACK", 0);</code>Now save and close Client.java<br>
Open up sprite.java and find your other sprite loading codes.</p>
<p>Under them add this:</p>
<p><code>if (s.equalsIgnoreCase("MAPBACK") &amp;&amp; i &gt;= 0)
        {
            try {
                Image image = Toolkit.getDefaultToolkit().getImage("./Sprites/MAPBACK "+i+".png");
                myPixels = new int[myWidth * myHeight];
                PixelGrabber pixelgrabber = new PixelGrabber(image, 0, 0, myWidth, myHeight, myPixels, 0, myWidth);
                pixelgrabber.grabPixels();
            } catch (Exception exception) {
                System.out.println(((Object) (exception)));
            }
        }
    else</code></p>
<p>Tell me how that works<br>
It ain’t perfect cause of the positioning but you have to work it out by yourself.<br>
This just enables you to load a custom mapback.<br>
Have fun with it!</p>
<p>And here is for the loading positions of the Minimap since some people want the 500+ look.</p>
<p>First Find the drawGameScreen Method.<br>
Youll see something like this a few lines into the method</p>
<p><code>            if (loadingStage != 2) {
                aRSImageProducer_1165.drawGraphics(4, super.graphics, 4);GameScreen
                aRSImageProducer_1164.drawGraphics(9, super.graphics, 527);//Minimap\mapback
            }</code>The RSImageProducer_1164 is your Minimap/Mapback drawing.<br>
The 9 is for the Y Coords.and the 527 is the X Coords.<br>
What you do there is kind of Self-Explanatory.<br>
Note your’s may be different than mine. As I have already resized mine.</p>
<p>Also. Every time you change those numbers they must Correspond with the others in the RSImageProducer_1164 in the method.<br>
It looks like this:</p>
<p><code> if (loadingStage == 2) {
            drawMinimap();
            aRSImageProducer_1164.drawGraphics(9, super.graphics, 527);///Mapback/Minimap</code>Now that that is over with. You must be wanting the clicking areas right?</p>
<p>Find processMainScreenClick and youll see this:</p>
<p><code>        if (super.clickMode3 == 1) {
            int i = super.saveClickX - 25 - 527;
            int j = super.saveClickY - 5 - 4;
</code>That code is also kinda a slap in the face if you don’t understand.<br>
Here is an explaination<br>
int i is the XAxis Clicking position<br>
int j is the YAxis Clicking Position.</p>
<p>And One last thing.<br>
Every time you change the position of the minimap, you may also need to change the Co-ordinates on the CustomMapback.drawSprite(0, 0); the same amount of pixels to the amount you moved the Minimap to the left&lt;&gt;Right and Up&lt;&gt;Down.</p>
<p>Oh yeah, Don’t forget to put a mapback sprite in your sprite files and change the directory!<br>
Well need any help. Post<br>
Also note you may have to change the size of your MAPBACK sprite.</p>
<p>Before you start posting about a Non-Refactored Version. I am already working on it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/refactored-custom-mapback-tutorial/275383/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/refactored-custom-mapback-tutorial/275383/1</link>
        <pubDate>Fri, 24 Apr 2009 23:04:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-275383-1</guid>
        <source url="https://forum.moparisthebest.com/t/refactored-custom-mapback-tutorial/275383.rss">[Refactored]Custom Mapback Tutorial</source>
      </item>
  </channel>
</rss>
