<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Text-To-Object parsing</title>
    <link>https://forum.moparisthebest.com/t/text-to-object-parsing/205349</link>
    <description>I have made an Utility-class I would like to get tested for bugs, if someone would like to do this.

What is this Utility-class used for?
You can create Object instances for almost any type of Object using simple text written in a certain format.

What limitations does it have?
This Utility-class cannot create Object-instances for Objects using variables and methods. However, every other Object using one of their proper constructors can be instantiated (or should be able to).

I cannot guarantee that every Object can be instantiated properly (which is why I want people to test it out for bugs). But as it is made in a non-hard coded way, it should be flexible enough to instantiate almost every Object.

You perhaps wish to know what text-format you need to use. Here are a few examples:
[code]java.lang.Integer(10)[/code]
[code]java.lang.Integer(10), java.lang.Integer(11)[/code]
[code]java.awt.Dimension(java.awt.Dimension(java.lang.Integer(10), java.lang.Integer(11)))[/code]
[code]java.awt.Dimension(java.awt.Dimension(java.lang.Integer(10), java.lang.Integer(11))), java.lang.Integer(12)[/code]

As you can see, it is pretty easy to understand.

Methods have been included to return an array of Objects, or a java.util.List with Objects, aswell as one method for checking whether some text are valid to parse, or not.

The source-code is attached...

Please leave comments, feedback etc. when you try it out.</description>
    
    <lastBuildDate>Tue, 13 May 2008 16:23:32 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/text-to-object-parsing/205349.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Text-To-Object parsing</title>
        <dc:creator><![CDATA[@yakman yakman]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/yakman">@yakman</a> wrote:</p>
          <blockquote>
              <p>i think this already exists, JavaBeans which also uses XML</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/text-to-object-parsing/205349/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/text-to-object-parsing/205349/5</link>
        <pubDate>Tue, 13 May 2008 16:23:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-205349-5</guid>
        <source url="https://forum.moparisthebest.com/t/text-to-object-parsing/205349.rss">Text-To-Object parsing</source>
      </item>
      <item>
        <title>Text-To-Object parsing</title>
        <dc:creator><![CDATA[@system system]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/system">@system</a> wrote:</p>
          <blockquote>
              <p>So, you’re saying that Jython (or whatever it is called) can create Object instances from text in the exact same format as this program can?</p>
<p>Well, I need it to be in this format, as it makes it alot easier to handle and/or read. This program is just part of something bigger, a text-to-GUI-creation program. And the text representing the Object instances for the GUI-components constructors should be stored in an XML-file (which is why its name is as it is).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/text-to-object-parsing/205349/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/text-to-object-parsing/205349/4</link>
        <pubDate>Tue, 13 May 2008 12:20:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-205349-4</guid>
        <source url="https://forum.moparisthebest.com/t/text-to-object-parsing/205349.rss">Text-To-Object parsing</source>
      </item>
      <item>
        <title>Text-To-Object parsing</title>
        <dc:creator><![CDATA[@Unhandled Unhandled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unhandled">@Unhandled</a> wrote:</p>
          <blockquote>
              <p>It’s called Jython now is it not?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/text-to-object-parsing/205349/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/text-to-object-parsing/205349/3</link>
        <pubDate>Tue, 13 May 2008 05:02:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-205349-3</guid>
        <source url="https://forum.moparisthebest.com/t/text-to-object-parsing/205349.rss">Text-To-Object parsing</source>
      </item>
      <item>
        <title>Text-To-Object parsing</title>
        <dc:creator><![CDATA[@ruler ruler]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ruler">@ruler</a> wrote:</p>
          <blockquote>
              <p>read jpython</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/text-to-object-parsing/205349/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/text-to-object-parsing/205349/2</link>
        <pubDate>Tue, 13 May 2008 04:38:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-205349-2</guid>
        <source url="https://forum.moparisthebest.com/t/text-to-object-parsing/205349.rss">Text-To-Object parsing</source>
      </item>
      <item>
        <title>Text-To-Object parsing</title>
        <dc:creator><![CDATA[@system system]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/system">@system</a> wrote:</p>
          <blockquote>
              <p>I have made an Utility-class I would like to get tested for bugs, if someone would like to do this.</p>
<p>What is this Utility-class used for?<br>
You can create Object instances for almost any type of Object using simple text written in a certain format.</p>
<p>What limitations does it have?<br>
This Utility-class cannot create Object-instances for Objects using variables and methods. However, every other Object using one of their proper constructors can be instantiated (or should be able to).</p>
<p>I cannot guarantee that every Object can be instantiated properly (which is why I want people to test it out for bugs). But as it is made in a non-hard coded way, it should be flexible enough to instantiate almost every Object.</p>
<p>You perhaps wish to know what text-format you need to use. Here are a few examples:</p>
<pre><code class="lang-auto">java.lang.Integer(10)</code></pre>
<pre><code class="lang-auto">java.lang.Integer(10), java.lang.Integer(11)</code></pre>
<pre><code class="lang-auto">java.awt.Dimension(java.awt.Dimension(java.lang.Integer(10), java.lang.Integer(11)))</code></pre>
<pre><code class="lang-auto">java.awt.Dimension(java.awt.Dimension(java.lang.Integer(10), java.lang.Integer(11))), java.lang.Integer(12)</code></pre>
<p>As you can see, it is pretty easy to understand.</p>
<p>Methods have been included to return an array of Objects, or a java.util.List with Objects, aswell as one method for checking whether some text are valid to parse, or not.</p>
<p>The source-code is attached…</p>
<p>Please leave comments, feedback etc. when you try it out.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/text-to-object-parsing/205349/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/text-to-object-parsing/205349/1</link>
        <pubDate>Tue, 13 May 2008 03:13:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-205349-1</guid>
        <source url="https://forum.moparisthebest.com/t/text-to-object-parsing/205349.rss">Text-To-Object parsing</source>
      </item>
  </channel>
</rss>
