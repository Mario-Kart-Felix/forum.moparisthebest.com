<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>PI WC Help</title>
    <link>https://forum.moparisthebest.com/t/pi-wc-help/376287</link>
    <description>Why can&#39;t I not cut down trees and the trees I can cut down need like 1 thousand clicks just to start chopping?

[code]package server.model.players.skills;

import server.Config;
import server.Server;
import server.util.Misc;
import server.event.Event;
import server.event.EventContainer;
import server.event.EventManager;
import server.model.objects.Objects;
import server.model.players.Client;

/**
* @Author Sanity
*/

public class Woodcutting {
	
	Client c;
	
	public Woodcutting(Client c) {
		this.c = c;
	}
	
public void WoodcuttingProcess() {
	//Woodcutting?
        if (c.choptimer &gt; 0) {
            c.choptimer--;
        }

        if (c.chopping &amp;&amp; c.getItems().freeSlots() &lt;= 0) {
            c.chopping = false;
            c.sendMessage(&quot;Your inventory is full&quot;);
        }

        if (c.chopping &amp;&amp; c.choptimer &gt;= 0) {
            c.getPA().addSkillXP(c.chopXP, 8);
            c.getItems().addItem(c.logID, 1);
            c.sendMessage(&quot;You chop some &quot; + c.getItems().getItemName(c.logID).toLowerCase());
            c.choptimer = Misc.random(calcchop(c.logID));
            treefall();
        }

        if (c.chopping) {
            c.startAnimation(c.wcemote);
            //frame317(317 + misc.random(2), 3);
        }
	}

    public boolean hasaxe() {
        if ((c.playerEquipment[c.playerWeapon] == 6739 || c.getItems().playerHasItem(6739)) &amp;&amp; c.playerLevel[8] &gt;= 61) {
            c.wcemote = 2846;
            return true;
        }
        if ((c.playerEquipment[c.playerWeapon] == 1359 || c.getItems().playerHasItem(1359)) &amp;&amp; c.playerLevel[8] &gt;= 41) {
            c.wcemote = 867;
            return true;
        }
        if ((c.playerEquipment[c.playerWeapon] == 1357 || c.getItems().playerHasItem(1357)) &amp;&amp; c.playerLevel[8] &gt;= 31) {
            c.wcemote = 869;
            return true;
        }
        if ((c.playerEquipment[c.playerWeapon] == 1355 || c.getItems().playerHasItem(1355)) &amp;&amp; c.playerLevel[8] &gt;= 21) {
            c.wcemote = 871;
            return true;
        }
        if ((c.playerEquipment[c.playerWeapon] == 1353 || c.getItems().playerHasItem(1353)) &amp;&amp; c.playerLevel[8] &gt;= 6) {
            c.wcemote = 875;
            return true;
        }
        if ((c.playerEquipment[c.playerWeapon] == 1349 || c.getItems().playerHasItem(1349)) &amp;&amp; c.playerLevel[8] &gt;= 1) {
            c.wcemote = 877;
            return true;
        }
        if ((c.playerEquipment[c.playerWeapon] == 1351 || c.getItems().playerHasItem(1351)) &amp;&amp; c.playerLevel[8] &gt;= 1) {
            c.wcemote = 879;
            return true;
        }
        return true;
    }
	public int calcchop(int logs) {
        int time = 10;
        if (logs == 1511) {
            time = 10;
        }
        if (logs == 1521) {
            time = 15;
        }
        if (logs == 1519) {
            time = 20;
        }
        if (logs == 1517) {
            time = 25;
        }
        if (logs == 1515) {
            time = 30;
        }
        if (logs == 1513) {
            time = 35;
        }
        if (c.playerEquipment[c.playerWeapon] == 1349) {//iron axe
            time -= time * .2;
        }
        if (c.playerEquipment[c.playerWeapon] == 1353) {//steel axe
            time -= time * .5;
        }
        if (c.playerEquipment[c.playerWeapon] == 1355) {//mith axe
            time -= time * .10;
        }
        if (c.playerEquipment[c.playerWeapon] == 1357) {//mith axe
            time -= time * .15;
        }
        if (c.playerEquipment[c.playerWeapon] == 1359) {//Rune axe
            time -= time * .20;
        }
        if (c.playerEquipment[c.playerWeapon] == 6739) {//Dragon axe
            time -= time * .30;
        }
        time -= c.playerLevel[8] / 20;
        return time;
    }

    public void startChop(int logs, int req, int XP) {
        if (!hasaxe()) {
            c.sendMessage(&quot;You do not have an axe that you have the levels to use.&quot;);
            return;
        }
        if (c.playerLevel[8] &gt;= req) {
			if (Misc.random(30) == 1) {
			Server.itemHandler.createGroundItem(c, 5073, c.absX, c.absY, 1, c.playerId);
				c.chopping = true;
				c.logID = logs;
				c.chopXP = XP;
				c.choptimer = Misc.random(calcchop(c.logID));
			}
        } else {
            c.sendMessage(&quot;You need &quot; + req + &quot; woodcutting to chop this tree.&quot;);
        }
    }
	public void treefall() {
        if (Misc.random(c.treechance) != 0) return;
        final int treeID = c.treetype;
        final int Treetimer = c.treetimer;
        final int X = c.treeX;
        final int Y = c.treeY;

       for (int j = 0; j &lt; Server.playerHandler.players.length; j++) {
					if (Server.playerHandler.players[j] != null) {
					Objects stumpID = new Objects(1341, X, Y, 0, -2, 10, 0);
				Server.objectHandler.addObject(stumpID);
				Server.objectHandler.placeObject(stumpID);
                if (c.chopping) {
                    c.frame1();
                    if (c.treeX == X &amp;&amp; c.treeY == Y) {
                        c.chopping = true;
                    }
                }
            }
        }
       
	   
    }

}[/code]

WTF is the problem</description>
    
    <lastBuildDate>Sat, 01 Jan 2011 19:44:02 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/pi-wc-help/376287.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>PI WC Help</title>
        <dc:creator><![CDATA[@Code_kai Code kai]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/code_kai">@Code_kai</a> wrote:</p>
          <blockquote>
              <p>Why can’t I not cut down trees and the trees I can cut down need like 1 thousand clicks just to start chopping?</p>
<p>[code]package server.model.players.skills;</p>
<p>import server.Config;<br>
import server.Server;<br>
import server.util.Misc;<br>
import server.event.Event;<br>
import server.event.EventContainer;<br>
import server.event.EventManager;<br>
import server.model.objects.Objects;<br>
import server.model.players.Client;</p>
<p>/**</p>
<ul>
<li>
<span class="mention">@Author</span> Sanity<br>
*/</li>
</ul>
<p>public class Woodcutting {</p>
<pre><code>Client c;

public Woodcutting(Client c) {
	this.c = c;
}
</code></pre>
<p>public void WoodcuttingProcess() {<br>
//Woodcutting?<br>
if (c.choptimer &gt; 0) {<br>
c.choptimer–;<br>
}</p>
<pre><code>    if (c.chopping &amp;&amp; c.getItems().freeSlots() &lt;= 0) {
        c.chopping = false;
        c.sendMessage("Your inventory is full");
    }

    if (c.chopping &amp;&amp; c.choptimer &gt;= 0) {
        c.getPA().addSkillXP(c.chopXP, 8);
        c.getItems().addItem(c.logID, 1);
        c.sendMessage("You chop some " + c.getItems().getItemName(c.logID).toLowerCase());
        c.choptimer = Misc.random(calcchop(c.logID));
        treefall();
    }

    if (c.chopping) {
        c.startAnimation(c.wcemote);
        //frame317(317 + misc.random(2), 3);
    }
}

public boolean hasaxe() {
    if ((c.playerEquipment[c.playerWeapon] == 6739 || c.getItems().playerHasItem(6739)) &amp;&amp; c.playerLevel[8] &gt;= 61) {
        c.wcemote = 2846;
        return true;
    }
    if ((c.playerEquipment[c.playerWeapon] == 1359 || c.getItems().playerHasItem(1359)) &amp;&amp; c.playerLevel[8] &gt;= 41) {
        c.wcemote = 867;
        return true;
    }
    if ((c.playerEquipment[c.playerWeapon] == 1357 || c.getItems().playerHasItem(1357)) &amp;&amp; c.playerLevel[8] &gt;= 31) {
        c.wcemote = 869;
        return true;
    }
    if ((c.playerEquipment[c.playerWeapon] == 1355 || c.getItems().playerHasItem(1355)) &amp;&amp; c.playerLevel[8] &gt;= 21) {
        c.wcemote = 871;
        return true;
    }
    if ((c.playerEquipment[c.playerWeapon] == 1353 || c.getItems().playerHasItem(1353)) &amp;&amp; c.playerLevel[8] &gt;= 6) {
        c.wcemote = 875;
        return true;
    }
    if ((c.playerEquipment[c.playerWeapon] == 1349 || c.getItems().playerHasItem(1349)) &amp;&amp; c.playerLevel[8] &gt;= 1) {
        c.wcemote = 877;
        return true;
    }
    if ((c.playerEquipment[c.playerWeapon] == 1351 || c.getItems().playerHasItem(1351)) &amp;&amp; c.playerLevel[8] &gt;= 1) {
        c.wcemote = 879;
        return true;
    }
    return true;
}
public int calcchop(int logs) {
    int time = 10;
    if (logs == 1511) {
        time = 10;
    }
    if (logs == 1521) {
        time = 15;
    }
    if (logs == 1519) {
        time = 20;
    }
    if (logs == 1517) {
        time = 25;
    }
    if (logs == 1515) {
        time = 30;
    }
    if (logs == 1513) {
        time = 35;
    }
    if (c.playerEquipment[c.playerWeapon] == 1349) {//iron axe
        time -= time * .2;
    }
    if (c.playerEquipment[c.playerWeapon] == 1353) {//steel axe
        time -= time * .5;
    }
    if (c.playerEquipment[c.playerWeapon] == 1355) {//mith axe
        time -= time * .10;
    }
    if (c.playerEquipment[c.playerWeapon] == 1357) {//mith axe
        time -= time * .15;
    }
    if (c.playerEquipment[c.playerWeapon] == 1359) {//Rune axe
        time -= time * .20;
    }
    if (c.playerEquipment[c.playerWeapon] == 6739) {//Dragon axe
        time -= time * .30;
    }
    time -= c.playerLevel[8] / 20;
    return time;
}

public void startChop(int logs, int req, int XP) {
    if (!hasaxe()) {
        c.sendMessage("You do not have an axe that you have the levels to use.");
        return;
    }
    if (c.playerLevel[8] &gt;= req) {
		if (Misc.random(30) == 1) {
		Server.itemHandler.createGroundItem(c, 5073, c.absX, c.absY, 1, c.playerId);
			c.chopping = true;
			c.logID = logs;
			c.chopXP = XP;
			c.choptimer = Misc.random(calcchop(c.logID));
		}
    } else {
        c.sendMessage("You need " + req + " woodcutting to chop this tree.");
    }
}
public void treefall() {
    if (Misc.random(c.treechance) != 0) return;
    final int treeID = c.treetype;
    final int Treetimer = c.treetimer;
    final int X = c.treeX;
    final int Y = c.treeY;

   for (int j = 0; j &lt; Server.playerHandler.players.length; j++) {
				if (Server.playerHandler.players[j] != null) {
				Objects stumpID = new Objects(1341, X, Y, 0, -2, 10, 0);
			Server.objectHandler.addObject(stumpID);
			Server.objectHandler.placeObject(stumpID);
            if (c.chopping) {
                c.frame1();
                if (c.treeX == X &amp;&amp; c.treeY == Y) {
                    c.chopping = true;
                }
            }
        }
    }
   
   
}
</code></pre>
<p>}[/code]</p>
<p>WTF is the problem</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-wc-help/376287/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-wc-help/376287/1</link>
        <pubDate>Sat, 01 Jan 2011 19:44:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-376287-1</guid>
        <source url="https://forum.moparisthebest.com/t/pi-wc-help/376287.rss">PI WC Help</source>
      </item>
  </channel>
</rss>
