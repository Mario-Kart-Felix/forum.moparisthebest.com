<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Cross-platform detect when another process ends C or C++?</title>
    <link>https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294</link>
    <description>I&#39;m not even sure if this is possible to write in a decent cross platform way, first I&#39;ll tell you what I am doing so you might have another solution, then I&#39;ll tell you my idea to solve this particular problem.

I am spawning a native program from java using the Process class, then reading/writing to it over stdin and stdout.  This works great, except for when the java process is forcibly killed, since I can&#39;t catch the signal in Java and close the process nicely, I need some way to detect if the java process quit running from the native code and end it nicely if it did.

One of my ideas is to pass the PID of the java process into the spawned process, then every iteration the native code can check if the java process is still running or not, and, if not, stop itself nicely.

Of course this needs to be cross platform, at least supporting windows, linux, osx, and bsd variants.  (where ever sun java runs, basically)

Any ideas?</description>
    
    <lastBuildDate>Thu, 09 Jun 2011 06:47:19 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Cross-platform detect when another process ends C or C++?</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>So here is a ‘cross-platform’ way to do this, tested under linux, and not windows (I’d appreciate it if anyone could test it for me, though I probably still won’t use it)</p>
<p>I’m going to post it here in case I or someone else needs it again, because I’m taking it out of my program, the other two ways work fine:</p>
<pre><code class="lang-auto">int ppid = 0;

#ifdef _WIN32

// no idea if this is right
// http://stackoverflow.com/questions/185254/how-can-a-win32-process-get-the-pid-of-its-parent
ULONG_PTR getppid() // By Napalm @ NetCore2K
{
 ULONG_PTR pbi[6];
 ULONG ulSize = 0;
 LONG (WINAPI *NtQueryInformationProcess)(HANDLE ProcessHandle, ULONG ProcessInformationClass,
  PVOID ProcessInformation, ULONG ProcessInformationLength, PULONG ReturnLength);
 *(FARPROC *)&amp;NtQueryInformationProcess =
  GetProcAddress(LoadLibraryA("NTDLL.DLL"), "NtQueryInformationProcess");
 if(NtQueryInformationProcess){
  if(NtQueryInformationProcess(GetCurrentProcess(), 0,
    &amp;pbi, sizeof(pbi), &amp;ulSize) &gt;= 0 &amp;&amp; ulSize == sizeof(pbi))
     return pbi[5];
 }
 return (ULONG_PTR)-1;
}

bool parent_died(){
    HANDLE h = OpenProcess(SYNCHRONIZE, FALSE, ppid);
    DWORD ret = WaitForSingleObject(h, 0);
    CloseHandle(h);
    return ret != WAIT_TIMEOUT;
}

#else

bool parent_died(){return false;
	int cur_ppid = getppid();
	debug("current pid: %d, expected pid: %d\n", cur_ppid, ppid);
	return (cur_ppid != ppid || cur_ppid == 1);
}

#endif

int main(int argc, char* argv[])
{
	ppid = getppid();

	while(true){
		printf("doing stuff");
		if(parent_died())
			break;
	}
}
</code></pre>
<p>I wrote that in the code box, so things might not work quite right, you need to at least include some headers and probably add a sleep to the loop so as not to eat your CPU cycles.</p>
<p>Anyway, thanks for all the help, in the end signal handling is nice to have, but the only real platform-independent solution is for your child process to just timeout after no communication with the parent process after X amount of time.  Grr.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294/12</link>
        <pubDate>Thu, 09 Jun 2011 06:47:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398294-12</guid>
        <source url="https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294.rss">Cross-platform detect when another process ends C or C++?</source>
      </item>
      <item>
        <title>Cross-platform detect when another process ends C or C++?</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>The POSIX way should work cross-platform with the exception of windows.  Assuming Ollie’s windows code works, and assuming I can get the parent pid in windows, I can do the same there perhaps.</p>
<p>Anyway, the cleanest POSIX way to do it appears to be this:<br>
<span class="hashtag">#ifndef</span> _WIN32<br>
signal(SIGPIPE, signal_callback_handler);<br>
<span class="hashtag">#endif</span></p>
<p>Since the program gets a SIGPIPE signal when the JVM exits, so that is nice.  I’m debating whether to leave my parent process code in there or not.</p>
<p>Also, all of this is probably mute since I found a nice way of timing out the process if it hasn’t received a command for X seconds, still all of this might be useful elsewhere…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294/11</link>
        <pubDate>Thu, 09 Jun 2011 06:27:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398294-11</guid>
        <source url="https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294.rss">Cross-platform detect when another process ends C or C++?</source>
      </item>
      <item>
        <title>Cross-platform detect when another process ends C or C++?</title>
        <dc:creator><![CDATA[@Mopman Mopman]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mopman">@Mopman</a> wrote:</p>
          <blockquote>
              <p>Incredibly doubtful you’ll be able to do this cross-platform.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294/10</link>
        <pubDate>Thu, 09 Jun 2011 05:57:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398294-10</guid>
        <source url="https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294.rss">Cross-platform detect when another process ends C or C++?</source>
      </item>
      <item>
        <title>Cross-platform detect when another process ends C or C++?</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>[quote=“lawl_temp, post:8, topic:398294”][quote author=Moparisthebest link=topic=495430.msg3622602#msg3622602 date=1307563642]<br>
Not for a SIGKILL, but nothing can handle that, it should work for a regular kill, abort message or similar.  I’ll see soon I guess.<br>
[/quote]<br>
yeah, but there are solutions that would work for a sigkill. for example, keeping a socket open between parent and child, polling, etc[/quote]</p>
<p>I don’t really want to introduce sockets to this C code if I can avoid it, what do you mean about polling?</p>
<p>edit:<br>
I found a POSIX way of doing it, simply call ‘getppid’, which returns the pid of the parent process (in this case the JVM), if it ever returns anything different than what it returned for the first call to it, or 1, then the parent process has ended and I can exit gracefully.  Still can’t find a nice windows way of doing it, unless maybe I could use Ollie’s code, but I need a way to find the parent pid in windows in the first place, and I can’t find that out, every post says you either can’t do it or it is too unreliable.</p>
<p>In other news, the addShutdownHook works well except in the case of a SIGKILL or similar. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294/9</link>
        <pubDate>Thu, 09 Jun 2011 03:48:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398294-9</guid>
        <source url="https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294.rss">Cross-platform detect when another process ends C or C++?</source>
      </item>
      <item>
        <title>Cross-platform detect when another process ends C or C++?</title>
        <dc:creator><![CDATA[@lawl lawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lawl">@lawl</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="7" data-topic="398294">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/moparisthebest/40/30_1.png" class="avatar"> Moparisthebest:</div>
<blockquote>
<p>Not for a SIGKILL, but nothing can handle that, it should work for a regular kill, abort message or similar.  I’ll see soon I guess.</p>
</blockquote>
</aside>
<p>yeah, but there are solutions that would work for a sigkill. for example, keeping a socket open between parent and child, polling, etc</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294/8</link>
        <pubDate>Wed, 08 Jun 2011 20:13:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398294-8</guid>
        <source url="https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294.rss">Cross-platform detect when another process ends C or C++?</source>
      </item>
      <item>
        <title>Cross-platform detect when another process ends C or C++?</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>Not for a SIGKILL, but nothing can handle that, it should work for a regular kill, abort message or similar.  I’ll see soon I guess.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294/7</link>
        <pubDate>Wed, 08 Jun 2011 20:07:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398294-7</guid>
        <source url="https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294.rss">Cross-platform detect when another process ends C or C++?</source>
      </item>
      <item>
        <title>Cross-platform detect when another process ends C or C++?</title>
        <dc:creator><![CDATA[@lawl lawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lawl">@lawl</a> wrote:</p>
          <blockquote>
              <p>[quote=“Moparisthebest, post:5, topic:398294”]Hmm, actually this might work just fine:<br>
<a href="http://download.oracle.com/javase/1.4.2/docs/api/java/lang/Runtime.html#addShutdownHook%28java.lang.Thread%29" class="onebox" target="_blank" rel="nofollow noopener">http://download.oracle.com/javase/1.4.2/docs/api/java/lang/Runtime.html#addShutdownHook(java.lang.Thread)</a><br>
I’ll have to test to see how it works later.[/quote]<br>
very unlikely that it will work for a kill signal, seeing as the process gets no notification</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294/6</link>
        <pubDate>Wed, 08 Jun 2011 17:32:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398294-6</guid>
        <source url="https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294.rss">Cross-platform detect when another process ends C or C++?</source>
      </item>
      <item>
        <title>Cross-platform detect when another process ends C or C++?</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>Hmm, actually this might work just fine:<br>
<a href="http://download.oracle.com/javase/1.4.2/docs/api/java/lang/Runtime.html#addShutdownHook%28java.lang.Thread%29" class="onebox" target="_blank">http://download.oracle.com/javase/1.4.2/docs/api/java/lang/Runtime.html#addShutdownHook(java.lang.Thread)</a><br>
I’ll have to test to see how it works later.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294/5</link>
        <pubDate>Wed, 08 Jun 2011 17:16:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398294-5</guid>
        <source url="https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294.rss">Cross-platform detect when another process ends C or C++?</source>
      </item>
      <item>
        <title>Cross-platform detect when another process ends C or C++?</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p><a class="mention" href="/u/ollie">@Ollie</a>, looks like it could work, it’s windows only though.</p>
<p><a class="mention" href="/u/lawl">@lawl</a>, I don’t think this is actually a child process in the normal sense of the word, just a process spawned from java code, I’ll have to look into it, thanks.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294/4</link>
        <pubDate>Wed, 08 Jun 2011 17:04:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398294-4</guid>
        <source url="https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294.rss">Cross-platform detect when another process ends C or C++?</source>
      </item>
      <item>
        <title>Cross-platform detect when another process ends C or C++?</title>
        <dc:creator><![CDATA[@lawl lawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lawl">@lawl</a> wrote:</p>
          <blockquote>
              <p>this might help<br>
<aside class="onebox stackexchange">
  <header class="source">
      <a href="https://stackoverflow.com/questions/284325/how-to-make-child-process-die-after-parent-exits" target="_blank" rel="nofollow noopener">stackoverflow.com</a>
  </header>
  <article class="onebox-body">
      <a href="https://stackoverflow.com/users/9403/pawe%c5%82-hajdan" target="_blank" rel="nofollow noopener">
    <img alt="Paweł Hajdan" src="https://www.gravatar.com/avatar/df22611131aab1cc1f41fa8ea463f604?s=128&amp;d=identicon&amp;r=PG" class="thumbnail onebox-avatar" width="128" height="128">
  </a>
<h4>
  <a href="https://stackoverflow.com/questions/284325/how-to-make-child-process-die-after-parent-exits" target="_blank" rel="nofollow noopener">How to make child process die after parent exits?</a>
</h4>

<div class="tags">
  <strong>c, linux, unix, process</strong>
</div>

<div class="date">
  asked by
  
  <a href="https://stackoverflow.com/users/9403/pawe%c5%82-hajdan" target="_blank" rel="nofollow noopener">
    Paweł Hajdan
  </a>
  on <a href="https://stackoverflow.com/questions/284325/how-to-make-child-process-die-after-parent-exits" target="_blank" rel="nofollow noopener">03:37PM - 12 Nov 08</a>
</div>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>
</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294/3</link>
        <pubDate>Wed, 08 Jun 2011 16:54:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398294-3</guid>
        <source url="https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294.rss">Cross-platform detect when another process ends C or C++?</source>
      </item>
      <item>
        <title>Cross-platform detect when another process ends C or C++?</title>
        <dc:creator><![CDATA[@Ollie Ollie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ollie">@Ollie</a> wrote:</p>
          <blockquote>
              <p>do you need something like this? then do what you said before and cache the pid’s</p>
<p><code>BOOL IsRunning(DWORD id)
{
    HANDLE h = OpenProcess(SYNCHRONIZE, FALSE, id);
    DWORD return = WaitForSingleObject(h, 0);
    CloseHandle(h);
    return return == WAIT_TIMEOUT;
}</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294/2</link>
        <pubDate>Wed, 08 Jun 2011 13:59:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398294-2</guid>
        <source url="https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294.rss">Cross-platform detect when another process ends C or C++?</source>
      </item>
      <item>
        <title>Cross-platform detect when another process ends C or C++?</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>I’m not even sure if this is possible to write in a decent cross platform way, first I’ll tell you what I am doing so you might have another solution, then I’ll tell you my idea to solve this particular problem.</p>
<p>I am spawning a native program from java using the Process class, then reading/writing to it over stdin and stdout.  This works great, except for when the java process is forcibly killed, since I can’t catch the signal in Java and close the process nicely, I need some way to detect if the java process quit running from the native code and end it nicely if it did.</p>
<p>One of my ideas is to pass the PID of the java process into the spawned process, then every iteration the native code can check if the java process is still running or not, and, if not, stop itself nicely.</p>
<p>Of course this needs to be cross platform, at least supporting windows, linux, osx, and bsd variants.  (where ever sun java runs, basically)</p>
<p>Any ideas?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294/1</link>
        <pubDate>Wed, 08 Jun 2011 05:34:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398294-1</guid>
        <source url="https://forum.moparisthebest.com/t/cross-platform-detect-when-another-process-ends-c-or-c/398294.rss">Cross-platform detect when another process ends C or C++?</source>
      </item>
  </channel>
</rss>
