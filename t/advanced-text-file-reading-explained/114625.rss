<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Advanced Text File Reading Explained</title>
    <link>https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625</link>
    <description>Posted this on moparisthebest.com. . . figured it has to do more with java than servers. . . so posted it here too


Well, I figured, &quot;Hey, the new rules disallow me to put any copy and paste tutorials(My Text File Tuts), So I might as well explain how text file reading works&quot;. And thats where I start.

During this tutorial, we will be using this piece of code, my command loader.
[code]	public void loadCommand(String command) {
		String line = &quot;&quot;;
		String token = &quot;&quot;;
		String token2 = &quot;&quot;;
		String[] token3 = new String[3];
		boolean EndOfFile = false;
		int ReadMode = 0;
		BufferedReader characterfile = null;
		BufferedReader characterfile2 = null;
		boolean File1 = false;
		boolean File2 = false;
                
		try {
			characterfile = new BufferedReader(new FileReader(&quot;./config/Commands/&quot;+command+&quot;.txt&quot;));
			File1 = true;
		} catch(FileNotFoundException fileex1) {
		}
File myfile1 = null;
File myfile2 = null;
if (File1 == true &amp;&amp; File2 == true) {
			myfile1 = new File (&quot;./config/Commands/&quot;+command+&quot;.txt&quot;);
			myfile2 = new File (&quot;./config/Commands/&quot;+command+&quot;.txt&quot;);
			if (myfile1.lastModified() &lt; myfile2.lastModified()) {
				characterfile = characterfile2;
			}
		} else if (File1 == false &amp;&amp; File2 == true) {
			characterfile = characterfile2;
		} else if (File1 == false &amp;&amp; File2 == false) {
		}
    boolean exists = (new File(&quot;./config/Commands/&quot;+command+&quot;.txt&quot;)).exists();
    if (exists) {

	
		try {
			line = characterfile.readLine();
		} catch(IOException ioexception) {
		}
		while(EndOfFile == false &amp;&amp; line != null) {
			try{
				token = line;
				token = token.trim();
				token2 = line;
				token2 = token2.trim();
				token3 = token2.split(&quot;\t&quot;);
				if (line.equals(&quot;[ITEMS]&quot;)) {		
								ReadMode = 1;
				}  else if (line.equals(&quot;[MESSAGES]&quot;)) {
                                ReadMode = 2;
				} else if (line.equals(&quot;[TELE]&quot;)) {
                                ReadMode = 3;
				} else if (line.equals(&quot;[MENU]&quot;)) {
                                ReadMode = 4;
				}
								switch (ReadMode) {
					case 1:
						try {
							int itemId = Integer.parseInt(token3[0]);
							int itemAmount = Integer.parseInt(token3[1]);
addItem(itemId, itemAmount);
						} catch (Exception e) {
						}
						break;
					case 2: 
						try {
							if(line.equals(&quot;[MESSAGES]&quot;)) {
							} else {
sendMessage(line);
							}
						} catch (Exception e) {
						}
                                                break;
					case 3:
						try {
							teleportToX = Integer.parseInt(token3[0]);
							teleportToY = Integer.parseInt(token3[1]);
						} catch (Exception e) {
						}
						break;
					case 4: 
						try {
							if(line.equals(&quot;[MENU]&quot;)) {
							} else {
loadMenu(line);
							}
						} catch (Exception e) {
						}
                                                break;
				}
				 if (line.equals(&quot;[END]&quot;)) {		
					try { characterfile.close(); } catch(IOException ioexception) { } 
				}
			
			try {
				line = characterfile.readLine();
			} catch(IOException ioexception1) { EndOfFile = true; }
						} catch (Exception e){
		}
		}
	
		try { characterfile.close(); } catch(IOException ioexception) { }
    } else {
    }
	}[/code]

Of course, I am not going to teach you with the whole code above. I Here is the first part of the code. 

[b]Variable Declarations:[/b]

		String line = &quot;&quot;;
		String token = &quot;&quot;;
		String token2 = &quot;&quot;;
		String[] token3 = new String[3];
		boolean EndOfFile = false;
		int ReadMode = 0;
		BufferedReader characterfile = null;
		BufferedReader characterfile2 = null;
		boolean File1 = false;
		boolean File2 = false;

[b]Attempting to find the file/giving the bufferedreader its properties[/b]
                
		try {
			characterfile = new BufferedReader(new FileReader(&quot;./config/Commands/&quot;+command+&quot;.txt&quot;));
			File1 = true;
		} catch(FileNotFoundException fileex1) {
		}

[b]Again, declarations[/b]
File myfile1 = null;
File myfile2 = null;

[b]Checking if file exists[/b]

if (File1 == true &amp;&amp; File2 == true) {

[b]Giving vars properties[/b]
			myfile1 = new File (&quot;./config/Commands/&quot;+command+&quot;.txt&quot;);
			myfile2 = new File (&quot;./config/Commands/&quot;+command+&quot;.txt&quot;);
			if (myfile1.lastModified() &lt; myfile2.lastModified()) {
				characterfile = characterfile2;
			}
		} else if (File1 == false &amp;&amp; File2 == true) {
			characterfile = characterfile2;
		} else if (File1 == false &amp;&amp; File2 == false) {
		}
[b]File Exists? Getting ready for the loop[below][/b]

    boolean exists = (new File(&quot;./config/Commands/&quot;+command+&quot;.txt&quot;)).exists();

[b]Loop Starts. The exists boolean will later be turned to false, breaking the loop[/b]
    if (exists) {

[b]Gives the String &#39;line&#39; the text of the line currently being read - This exact method is only being called once. The if statement below blocks this line out for later use, so it is being called at the bottom of the code too.[/b]
		try {
			line = characterfile.readLine();
		} catch(IOException ioexception) {
		}
[b]Making sure that the file didn&#39;t end in the line reading above[/b]
		while(EndOfFile == false &amp;&amp; line != null) {
[b]Tokenizing the String (line) [Splits it between the indents][/b]


			try{
				token = line;
				token = token.trim();
				token2 = line;
				token2 = token2.trim();
				token3 = token2.split(&quot;\t&quot;);
[b]The brown code below tells the switch[below] what kind of action it will be doing. (you will likely understand it when you see the example text file below) [/b]

				if (line.equals(&quot;[b][ITEMS][/b]&quot;)) {		
								ReadMode = [b]1[/b];
				}  else if (line.equals(&quot;[b][MESSAGES][/b]&quot;)) {
                                ReadMode = [b]2[/b];
				} else if (line.equals(&quot;[b][TELE][/b]&quot;)) {
                                ReadMode = [b]3[/b];
				} else if (line.equals(&quot;[b][MENU][/b]&quot;)) {
                                ReadMode = [b]4[/b];
				}

								switch (ReadMode) {
[b]If the brown code above determined that the code coming will be interpreting the text to give you an ITEM, it will read the first case.[/b]
					case 1:
						try {
							int itemId = Integer.parseInt(token3[0]);
							int itemAmount = Integer.parseInt(token3[1]);
addItem(itemId, itemAmount);
						} catch (Exception e) {
						}
						break;
[b]If the brown code above determined that the code coming will be interpreting the text send you a MESSAGE, it will read the second case.[/b]
					case 2: 
						try {
							if(line.equals(&quot;[MESSAGES]&quot;)) {
							} else {
sendMessage(line);
							}
						} catch (Exception e) {
						}
                                                break;
[b]If the brown code above determined that the code coming will be interpreting the text to TELEPORT you, it will read the third case.[/b]
					case 3:
						try {
							teleportToX = Integer.parseInt(token3[0]);
							teleportToY = Integer.parseInt(token3[1]);
						} catch (Exception e) {
						}
						break;
[b]If the brown code above determined that the code coming will be interpreting the text to open a MENU, it will read the fourth case.[/b]
					case 4: 
						try {
							if(line.equals(&quot;[MENU]&quot;)) {
							} else {
loadMenu(line);
							}
						} catch (Exception e) {
						}
                                                break;
				}
[b]If the line says &quot;[END]&quot;, it will close the file, leaving all of the text below it useless.[/b]

				 if (line.equals(&quot;[END]&quot;)) {		
					try { characterfile.close(); } catch(IOException ioexception) { } 
				}
[b]The code that keeps reading the file once all of the processing is done(mentioned above)[/b]
			try {
				line = characterfile.readLine();
			} catch(IOException ioexception1) { EndOfFile = true; }
						} catch (Exception e){
		}
		}
[b]If it hasn&#39;t been done yet, the code finally closes the connection with the file.[/b]
		try { characterfile.close(); } catch(IOException ioexception) { }
    } else {
    }</description>
    
    <lastBuildDate>Sun, 04 Nov 2007 08:22:51 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Advanced Text File Reading Explained</title>
        <dc:creator><![CDATA[@_cake _cake]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_cake">@_cake</a> wrote:</p>
          <blockquote>
              <p>[quote=“Iamadam, post:17, topic:114625”]hang on i dont get how this works. i put it in client.java but it makes the server lag. some1 told me to put this up the top… is it right or will it give me a virus?</p>
<pre><code class="lang-auto">import com.moparisthebest.users.regex.*;</code></pre>
<p>help plz[/quote]<br>
no iz kelogr</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/18</link>
        <pubDate>Sun, 04 Nov 2007 08:22:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-114625-18</guid>
        <source url="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625.rss">Advanced Text File Reading Explained</source>
      </item>
      <item>
        <title>Advanced Text File Reading Explained</title>
        <dc:creator><![CDATA[@Iamadam Iamadam]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/iamadam">@Iamadam</a> wrote:</p>
          <blockquote>
              <p>hang on i dont get how this works. i put it in client.java but it makes the server lag. some1 told me to put this up the top… is it right or will it give me a virus?</p>
<pre><code class="lang-auto">import com.moparisthebest.users.regex.*;</code></pre>
<p>help plz</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/17</link>
        <pubDate>Sun, 04 Nov 2007 08:21:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-114625-17</guid>
        <source url="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625.rss">Advanced Text File Reading Explained</source>
      </item>
      <item>
        <title>Advanced Text File Reading Explained</title>
        <dc:creator><![CDATA[@_cake _cake]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_cake">@_cake</a> wrote:</p>
          <blockquote>
              <p>[quote=“frank_, post:15, topic:114625”][quote author=_cake link=topic=163823.msg1862944#msg1862944 date=1194067342]</p>
<aside class="quote no-group">
<blockquote>
<aside class="quote no-group">
<blockquote>
<aside class="quote no-group">
<blockquote>
<aside class="quote no-group">
<blockquote>
<aside class="quote no-group">
<blockquote>
<p>uhh, GO LEARN REGEX</p>
</blockquote>
</aside>
<p>Watch him say, “RegeX made Aryan”</p>
</blockquote>
</aside>
<p>ofck</p>
<p>ARYAN IS THE PERFECT RACE, AND HITLER COULDN’T EVEN MAKE IT.<br>
SO REGECKS &gt; HITLER???</p>
</blockquote>
</aside>
<p>We meant the bot.</p>
</blockquote>
</aside>
<p>l2evaluatesarcasm</p>
</blockquote>
</aside>
<p>rep++ for intelligence<br>
[/quote]<br>
rep-- for humanity</p>
<p>o wait[/quote]<br>
rep± for lulz</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/16</link>
        <pubDate>Sat, 03 Nov 2007 06:07:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-114625-16</guid>
        <source url="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625.rss">Advanced Text File Reading Explained</source>
      </item>
      <item>
        <title>Advanced Text File Reading Explained</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>[quote="_cake, post:14, topic:114625"][quote author=Speljohan link=topic=163823.msg1862924#msg1862924 date=1194067077]</p>
<aside class="quote no-group">
<blockquote>
<aside class="quote no-group">
<blockquote>
<aside class="quote no-group">
<blockquote>
<aside class="quote no-group">
<blockquote>
<p>uhh, GO LEARN REGEX</p>
</blockquote>
</aside>
<p>Watch him say, “RegeX made Aryan”</p>
</blockquote>
</aside>
<p>ofck</p>
<p>ARYAN IS THE PERFECT RACE, AND HITLER COULDN’T EVEN MAKE IT.<br>
SO REGECKS &gt; HITLER???</p>
</blockquote>
</aside>
<p>We meant the bot.</p>
</blockquote>
</aside>
<p>l2evaluatesarcasm<br>
[/quote]<br>
rep++ for intelligence[/quote]<br>
rep-- for humanity</p>
<p>o wait</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/15</link>
        <pubDate>Sat, 03 Nov 2007 05:49:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-114625-15</guid>
        <source url="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625.rss">Advanced Text File Reading Explained</source>
      </item>
      <item>
        <title>Advanced Text File Reading Explained</title>
        <dc:creator><![CDATA[@_cake _cake]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_cake">@_cake</a> wrote:</p>
          <blockquote>
              <p>[quote=“Speljohan, post:13, topic:114625”][quote author=io9 link=topic=163823.msg1862907#msg1862907 date=1194066539]</p>
<aside class="quote no-group">
<blockquote>
<aside class="quote no-group">
<blockquote>
<aside class="quote no-group">
<blockquote>
<p>uhh, GO LEARN REGEX</p>
</blockquote>
</aside>
<p>Watch him say, “RegeX made Aryan”</p>
</blockquote>
</aside>
<p>ofck</p>
<p>ARYAN IS THE PERFECT RACE, AND HITLER COULDN’T EVEN MAKE IT.<br>
SO REGECKS &gt; HITLER???</p>
</blockquote>
</aside>
<p>We meant the bot.<br>
[/quote]</p>
<p>l2evaluatesarcasm[/quote]<br>
rep++ for intelligence</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/14</link>
        <pubDate>Sat, 03 Nov 2007 05:22:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-114625-14</guid>
        <source url="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625.rss">Advanced Text File Reading Explained</source>
      </item>
      <item>
        <title>Advanced Text File Reading Explained</title>
        <dc:creator><![CDATA[@Speljohan Speljohan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/speljohan">@Speljohan</a> wrote:</p>
          <blockquote>
              <p>[quote=“io9, post:12, topic:114625”][quote author=_cake link=topic=163823.msg1862626#msg1862626 date=1194060903]</p>
<aside class="quote no-group">
<blockquote>
<aside class="quote no-group">
<blockquote>
<p>uhh, GO LEARN REGEX</p>
</blockquote>
</aside>
<p>Watch him say, “RegeX made Aryan”</p>
</blockquote>
</aside>
<p>ofck</p>
<p>ARYAN IS THE PERFECT RACE, AND HITLER COULDN’T EVEN MAKE IT.<br>
SO REGECKS &gt; HITLER???<br>
[/quote]<br>
We meant the bot.[/quote]</p>
<p>l2evaluatesarcasm</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/13</link>
        <pubDate>Sat, 03 Nov 2007 05:17:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-114625-13</guid>
        <source url="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625.rss">Advanced Text File Reading Explained</source>
      </item>
      <item>
        <title>Advanced Text File Reading Explained</title>
        <dc:creator><![CDATA[@ilyaostr9 io9]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ilyaostr9">@ilyaostr9</a> wrote:</p>
          <blockquote>
              <p>[quote="_cake, post:11, topic:114625"][quote author=io9 link=topic=163823.msg1531099#msg1531099 date=1182495930]</p>
<aside class="quote no-group">
<blockquote>
<p>uhh, GO LEARN REGEX</p>
</blockquote>
</aside>
<p>Watch him say, “RegeX made Aryan”<br>
[/quote]<br>
ofck</p>
<p>ARYAN IS THE PERFECT RACE, AND HITLER COULDN’T EVEN MAKE IT.<br>
SO REGECKS &gt; HITLER???[/quote]<br>
We meant the bot.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/12</link>
        <pubDate>Sat, 03 Nov 2007 05:08:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-114625-12</guid>
        <source url="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625.rss">Advanced Text File Reading Explained</source>
      </item>
      <item>
        <title>Advanced Text File Reading Explained</title>
        <dc:creator><![CDATA[@_cake _cake]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_cake">@_cake</a> wrote:</p>
          <blockquote>
              <p>[quote=“io9, post:8, topic:114625”][quote author=lawl link=topic=163823.msg1531034#msg1531034 date=1182494601]<br>
uhh, GO LEARN REGEX<br>
[/quote]<br>
Watch him say, “RegeX made Aryan”[/quote]<br>
ofck</p>
<p>ARYAN IS THE PERFECT RACE, AND HITLER COULDN’T EVEN MAKE IT.<br>
SO REGECKS &gt; HITLER???</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/11</link>
        <pubDate>Sat, 03 Nov 2007 03:35:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-114625-11</guid>
        <source url="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625.rss">Advanced Text File Reading Explained</source>
      </item>
      <item>
        <title>Advanced Text File Reading Explained</title>
        <dc:creator><![CDATA[@Cheese_Police c|p]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cheese_police">@Cheese_Police</a> wrote:</p>
          <blockquote>
              <p>Use String.split().  StringTokenizer is deprecated, and you all are retarded anyway.</p>
<p>REGEX MADE ARYAN</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/10</link>
        <pubDate>Fri, 02 Nov 2007 23:45:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-114625-10</guid>
        <source url="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625.rss">Advanced Text File Reading Explained</source>
      </item>
      <item>
        <title>Advanced Text File Reading Explained</title>
        <dc:creator><![CDATA[@ThatOneServer Mike_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/thatoneserver">@ThatOneServer</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="7" data-topic="114625">
<div class="title">
<div class="quote-controls"></div>
 blah bah7:</div>
<blockquote>
<p>it is like copy-paste, but it IS useful because it explains how it works, so good job thatoneserver</p>
</blockquote>
</aside>
<p>yes back then i had to copy paste to edit and make codes, but i still did it thoroughly.<br>
if a code works already, why not re-use to edit?<br>
w/e you are totally correct about it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/9</link>
        <pubDate>Fri, 02 Nov 2007 18:22:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-114625-9</guid>
        <source url="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625.rss">Advanced Text File Reading Explained</source>
      </item>
      <item>
        <title>Advanced Text File Reading Explained</title>
        <dc:creator><![CDATA[@ilyaostr9 io9]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ilyaostr9">@ilyaostr9</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="1" data-topic="114809">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/lawl/40/5_6259e4fa9dfe0dec282fb0955bb1974c.png" class="avatar"><a href="https://forum.moparisthebest.com/t/114809/1">On another topic</a>
</div>
<blockquote>
<p>uhh, GO LEARN REGEX</p>
</blockquote>
</aside>
<p>Watch him say, “RegeX made Aryan”</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/8</link>
        <pubDate>Fri, 22 Jun 2007 07:05:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-114625-8</guid>
        <source url="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625.rss">Advanced Text File Reading Explained</source>
      </item>
      <item>
        <title>Advanced Text File Reading Explained</title>
        <dc:creator><![CDATA[@blah_bah7 blah bah7]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/blah_bah7">@blah_bah7</a> wrote:</p>
          <blockquote>
              <p>it is like copy-paste, but it IS useful because it explains how it works, so good job thatoneserver</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/7</link>
        <pubDate>Fri, 22 Jun 2007 07:00:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-114625-7</guid>
        <source url="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625.rss">Advanced Text File Reading Explained</source>
      </item>
      <item>
        <title>Advanced Text File Reading Explained</title>
        <dc:creator><![CDATA[@ThatOneServer Mike_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/thatoneserver">@ThatOneServer</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="4" data-topic="114625">
<div class="title">
<div class="quote-controls"></div>
 Mod Taharok:</div>
<blockquote>
<p>This looks like a copy and paste job from the character file readers. I can tell because of the file2 boolean.</p>
</blockquote>
</aside>
<p>It is <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/6</link>
        <pubDate>Fri, 22 Jun 2007 04:27:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-114625-6</guid>
        <source url="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625.rss">Advanced Text File Reading Explained</source>
      </item>
      <item>
        <title>Advanced Text File Reading Explained</title>
        <dc:creator><![CDATA[@Pwnd Pwnd]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pwnd">@Pwnd</a> wrote:</p>
          <blockquote>
              <p>Checking if file exists</p>
<p>if (File1 == true &amp;&amp; File2 == true) {</p>
<p>Man, you’re leet.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/5</link>
        <pubDate>Fri, 22 Jun 2007 01:12:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-114625-5</guid>
        <source url="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625.rss">Advanced Text File Reading Explained</source>
      </item>
      <item>
        <title>Advanced Text File Reading Explained</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <p>This looks like a copy and paste job from the character file readers. I can tell because of the file2 boolean. That is never used once in the entire block of code, other then checking if it is true.</p>
<p>Also, instead of using advanced tokens like that, you can just do something like:</p>
<pre><code class="lang-auto">try {
File f = new File(filepath, filename);
FileInputStream fis = new FileInputStream(f);
byte[] buffer = new byte[(int)f.length()];
fis.read(buffer);
fis.close();
String read = new String(buffer);
StringTokenizer tokenizer = new StringTokenizer(read);
for (int i = 0; i &lt; read.length(); i++) {
try {
Thread.sleep(100);
System.out.println(tokenizer.nextToken());
} catch (InterruptedException e) { e.printStackTrace(); }
}
} catch (IOException ioe) { ioe.printStackTrace(); }</code></pre>
<p>That uses java.util.StringTokenizer</p>
<pre><code class="lang-auto">try {
File f = new File(filepath, filename);
FileInputStream fis = new FileInputStream(f);
byte[] buffer = new byte[(int)f.length()];
fis.read(buffer);
fis.close();
String read = new String(buffer);
String[] token = new read.split("\n");
for (int i = 0; i &lt; token.length; i++) {
try {
Thread.sleep(100);
System.out.println(token[i]);
} catch (InterruptedException e) { e.printStackTrace(); }
}
} catch (IOException ioe) { ioe.printStackTrace(); }</code></pre>
<p>That uses a simple java.lang.String.split()[] String array as the token.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/4</link>
        <pubDate>Fri, 22 Jun 2007 01:07:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-114625-4</guid>
        <source url="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625.rss">Advanced Text File Reading Explained</source>
      </item>
      <item>
        <title>Advanced Text File Reading Explained</title>
        <dc:creator><![CDATA[@ThatOneServer Mike_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/thatoneserver">@ThatOneServer</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="2" data-topic="114625">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/fasga/40/5_6259e4fa9dfe0dec282fb0955bb1974c.png" class="avatar"> Fasga:</div>
<blockquote>
<p>Honestly, there are much easier ways to do this.</p>
</blockquote>
</aside>
<p>Bet there are <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/3</link>
        <pubDate>Thu, 21 Jun 2007 23:37:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-114625-3</guid>
        <source url="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625.rss">Advanced Text File Reading Explained</source>
      </item>
      <item>
        <title>Advanced Text File Reading Explained</title>
        <dc:creator><![CDATA[@Fasga Fasga]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/fasga">@Fasga</a> wrote:</p>
          <blockquote>
              <p>Honestly, there are much easier ways to do this.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/2</link>
        <pubDate>Thu, 21 Jun 2007 23:31:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-114625-2</guid>
        <source url="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625.rss">Advanced Text File Reading Explained</source>
      </item>
      <item>
        <title>Advanced Text File Reading Explained</title>
        <dc:creator><![CDATA[@ThatOneServer Mike_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/thatoneserver">@ThatOneServer</a> wrote:</p>
          <blockquote>
              <p>Posted this on <a href="http://moparisthebest.com" rel="nofollow noopener">moparisthebest.com</a>. . . figured it has to do more with java than servers. . . so posted it here too</p>
<p>Well, I figured, “Hey, the new rules disallow me to put any copy and paste tutorials(My Text File Tuts), So I might as well explain how text file reading works”. And thats where I start.</p>
<p>During this tutorial, we will be using this piece of code, my command loader.</p>
<p>[code]	public void loadCommand(String command) {<br>
String line = “”;<br>
String token = “”;<br>
String token2 = “”;<br>
String[] token3 = new String[3];<br>
boolean EndOfFile = false;<br>
int ReadMode = 0;<br>
BufferedReader characterfile = null;<br>
BufferedReader characterfile2 = null;<br>
boolean File1 = false;<br>
boolean File2 = false;</p>
<pre><code>	try {
		characterfile = new BufferedReader(new FileReader("./config/Commands/"+command+".txt"));
		File1 = true;
	} catch(FileNotFoundException fileex1) {
	}
</code></pre>
<p>File myfile1 = null;<br>
File myfile2 = null;<br>
if (File1 == true &amp;&amp; File2 == true) {<br>
myfile1 = new File ("./config/Commands/"+command+".txt");<br>
myfile2 = new File ("./config/Commands/"+command+".txt");<br>
if (myfile1.lastModified() &lt; myfile2.lastModified()) {<br>
characterfile = characterfile2;<br>
}<br>
} else if (File1 == false &amp;&amp; File2 == true) {<br>
characterfile = characterfile2;<br>
} else if (File1 == false &amp;&amp; File2 == false) {<br>
}<br>
boolean exists = (new File("./config/Commands/"+command+".txt")).exists();<br>
if (exists) {</p>
<pre><code>	try {
		line = characterfile.readLine();
	} catch(IOException ioexception) {
	}
	while(EndOfFile == false &amp;&amp; line != null) {
		try{
			token = line;
			token = token.trim();
			token2 = line;
			token2 = token2.trim();
			token3 = token2.split("\t");
			if (line.equals("[ITEMS]")) {		
							ReadMode = 1;
			}  else if (line.equals("[MESSAGES]")) {
                            ReadMode = 2;
			} else if (line.equals("[TELE]")) {
                            ReadMode = 3;
			} else if (line.equals("[MENU]")) {
                            ReadMode = 4;
			}
							switch (ReadMode) {
				case 1:
					try {
						int itemId = Integer.parseInt(token3[0]);
						int itemAmount = Integer.parseInt(token3[1]);
</code></pre>
<p>addItem(itemId, itemAmount);<br>
} catch (Exception e) {<br>
}<br>
break;<br>
case 2:<br>
try {<br>
if(line.equals("[MESSAGES]")) {<br>
} else {<br>
sendMessage(line);<br>
}<br>
} catch (Exception e) {<br>
}<br>
break;<br>
case 3:<br>
try {<br>
teleportToX = Integer.parseInt(token3[0]);<br>
teleportToY = Integer.parseInt(token3[1]);<br>
} catch (Exception e) {<br>
}<br>
break;<br>
case 4:<br>
try {<br>
if(line.equals("[MENU]")) {<br>
} else {<br>
loadMenu(line);<br>
}<br>
} catch (Exception e) {<br>
}<br>
break;<br>
}<br>
if (line.equals("[END]")) {		<br>
try { characterfile.close(); } catch(IOException ioexception) { }<br>
}</p>
<pre><code>		try {
			line = characterfile.readLine();
		} catch(IOException ioexception1) { EndOfFile = true; }
					} catch (Exception e){
	}
	}

	try { characterfile.close(); } catch(IOException ioexception) { }
} else {
}
}[/code]
</code></pre>
<p>Of course, I am not going to teach you with the whole code above. I Here is the first part of the code.</p>
<p><span class="bbcode-b">Variable Declarations:</span></p>
<pre><code>	String line = "";
	String token = "";
	String token2 = "";
	String[] token3 = new String[3];
	boolean EndOfFile = false;
	int ReadMode = 0;
	BufferedReader characterfile = null;
	BufferedReader characterfile2 = null;
	boolean File1 = false;
	boolean File2 = false;
</code></pre>
<p><span class="bbcode-b">Attempting to find the file/giving the bufferedreader its properties</span></p>
<pre><code>	try {
		characterfile = new BufferedReader(new FileReader("./config/Commands/"+command+".txt"));
		File1 = true;
	} catch(FileNotFoundException fileex1) {
	}
</code></pre>
<p><span class="bbcode-b">Again, declarations</span><br>
File myfile1 = null;<br>
File myfile2 = null;</p>
<p><span class="bbcode-b">Checking if file exists</span></p>
<p>if (File1 == true &amp;&amp; File2 == true) {</p>
<p><span class="bbcode-b">Giving vars properties</span><br>
myfile1 = new File ("./config/Commands/"+command+".txt");<br>
myfile2 = new File ("./config/Commands/"+command+".txt");<br>
if (myfile1.lastModified() &lt; myfile2.lastModified()) {<br>
characterfile = characterfile2;<br>
}<br>
} else if (File1 == false &amp;&amp; File2 == true) {<br>
characterfile = characterfile2;<br>
} else if (File1 == false &amp;&amp; File2 == false) {<br>
}<br>
<span class="bbcode-b">File Exists? Getting ready for the loop[below]</span></p>
<pre><code>boolean exists = (new File("./config/Commands/"+command+".txt")).exists();
</code></pre>
<p><span class="bbcode-b">Loop Starts. The exists boolean will later be turned to false, breaking the loop</span><br>
if (exists) {</p>
<p><span class="bbcode-b">Gives the String ‘line’ the text of the line currently being read - This exact method is only being called once. The if statement below blocks this line out for later use, so it is being called at the bottom of the code too.</span><br>
try {<br>
line = characterfile.readLine();<br>
} catch(IOException ioexception) {<br>
}<br>
<span class="bbcode-b">Making sure that the file didn’t end in the line reading above</span><br>
while(EndOfFile == false &amp;&amp; line != null) {<br>
<span class="bbcode-b">Tokenizing the String (line) [Splits it between the indents]</span></p>
<pre><code>		try{
			token = line;
			token = token.trim();
			token2 = line;
			token2 = token2.trim();
			token3 = token2.split("\t");
</code></pre>
<p><span class="bbcode-b">The brown code below tells the switch[below] what kind of action it will be doing. (you will likely understand it when you see the example text file below) </span></p>
<pre><code>			if (line.equals("[b][ITEMS][/b]")) {		
							ReadMode = [b]1[/b];
			}  else if (line.equals("[b][MESSAGES][/b]")) {
                            ReadMode = [b]2[/b];
			} else if (line.equals("[b][TELE][/b]")) {
                            ReadMode = [b]3[/b];
			} else if (line.equals("[b][MENU][/b]")) {
                            ReadMode = [b]4[/b];
			}

							switch (ReadMode) {
</code></pre>
<p><span class="bbcode-b">If the brown code above determined that the code coming will be interpreting the text to give you an ITEM, it will read the first case.</span><br>
case 1:<br>
try {<br>
int itemId = Integer.parseInt(token3[0]);<br>
int itemAmount = Integer.parseInt(token3[1]);<br>
addItem(itemId, itemAmount);<br>
} catch (Exception e) {<br>
}<br>
break;<br>
<span class="bbcode-b">If the brown code above determined that the code coming will be interpreting the text send you a MESSAGE, it will read the second case.</span><br>
case 2:<br>
try {<br>
if(line.equals("[MESSAGES]")) {<br>
} else {<br>
sendMessage(line);<br>
}<br>
} catch (Exception e) {<br>
}<br>
break;<br>
<span class="bbcode-b">If the brown code above determined that the code coming will be interpreting the text to TELEPORT you, it will read the third case.</span><br>
case 3:<br>
try {<br>
teleportToX = Integer.parseInt(token3[0]);<br>
teleportToY = Integer.parseInt(token3[1]);<br>
} catch (Exception e) {<br>
}<br>
break;<br>
<span class="bbcode-b">If the brown code above determined that the code coming will be interpreting the text to open a MENU, it will read the fourth case.</span><br>
case 4:<br>
try {<br>
if(line.equals("[MENU]")) {<br>
} else {<br>
loadMenu(line);<br>
}<br>
} catch (Exception e) {<br>
}<br>
break;<br>
}<br>
<span class="bbcode-b">If the line says “[END]”, it will close the file, leaving all of the text below it useless.</span></p>
<pre><code>			 if (line.equals("[END]")) {		
				try { characterfile.close(); } catch(IOException ioexception) { } 
			}
</code></pre>
<p><span class="bbcode-b">The code that keeps reading the file once all of the processing is done(mentioned above)</span><br>
try {<br>
line = characterfile.readLine();<br>
} catch(IOException ioexception1) { EndOfFile = true; }<br>
} catch (Exception e){<br>
}<br>
}<br>
<span class="bbcode-b">If it hasn’t been done yet, the code finally closes the connection with the file.</span><br>
try { characterfile.close(); } catch(IOException ioexception) { }<br>
} else {<br>
}</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625/1</link>
        <pubDate>Thu, 21 Jun 2007 23:26:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-114625-1</guid>
        <source url="https://forum.moparisthebest.com/t/advanced-text-file-reading-explained/114625.rss">Advanced Text File Reading Explained</source>
      </item>
  </channel>
</rss>
