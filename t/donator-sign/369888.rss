<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Donator sign</title>
    <link>https://forum.moparisthebest.com/t/donator-sign/369888</link>
    <description>ok i need to put any1 rights to 4 to make em donator and have donator sign how can i make it so it need
[code]member = true[/code] to be donator and have donator sign?</description>
    
    <lastBuildDate>Mon, 22 Nov 2010 22:58:06 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/donator-sign/369888.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Donator sign</title>
        <dc:creator><![CDATA[@str2own99 str2own99]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/str2own99">@str2own99</a> wrote:</p>
          <blockquote>
              <p>and how i ment to edit player.class if i get simbols</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/donator-sign/369888/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/donator-sign/369888/5</link>
        <pubDate>Mon, 22 Nov 2010 22:58:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-369888-5</guid>
        <source url="https://forum.moparisthebest.com/t/donator-sign/369888.rss">Donator sign</source>
      </item>
      <item>
        <title>Donator sign</title>
        <dc:creator><![CDATA[@str2own99 str2own99]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/str2own99">@str2own99</a> wrote:</p>
          <blockquote>
              <p>[code]package server.util;</p>
<p>import server.Config;</p>
<p>public class Stream<br>
{</p>
<pre><code>public Stream()
{
}

public Stream(byte abyte0[]) {
    buffer = abyte0;
    currentOffset = 0;
}

public byte readSignedByteA() {
    return (byte)(buffer[currentOffset++] - 128);
}

public byte readSignedByteC() {
    return (byte)(-buffer[currentOffset++]);
}

public byte readSignedByteS() {
    return (byte)(128 - buffer[currentOffset++]);
}

public int readUnsignedByteA() {
    return buffer[currentOffset++] - 128 &amp; 0xff;
}

public int readUnsignedByteC() {
    return -buffer[currentOffset++] &amp; 0xff;
}

public int readUnsignedByteS() {
    return 128 - buffer[currentOffset++] &amp; 0xff;
}

public void writeByteA(int i) {
	ensureCapacity(1);
    buffer[currentOffset++] = (byte)(i + 128);
}

public void writeByteS(int i) {
	ensureCapacity(1);
    buffer[currentOffset++] = (byte)(128 - i);
}

public void writeByteC(int i) {
	ensureCapacity(1);
    buffer[currentOffset++] = (byte)(-i);
}

public int readSignedWordBigEndian() {
    currentOffset += 2;
    int i = ((buffer[currentOffset - 1] &amp; 0xff) &lt;&lt; 8) + (buffer[currentOffset - 2] &amp; 0xff);
    if(i &gt; 32767)
        i -= 0x10000;
    return i;
}

public int readSignedWordA() {
    currentOffset += 2;
    int i = ((buffer[currentOffset - 2] &amp; 0xff) &lt;&lt; 8) + (buffer[currentOffset - 1] - 128 &amp; 0xff);
    if(i &gt; 32767)
        i -= 0x10000;
    return i;
}

public int readSignedWordBigEndianA() {
    currentOffset += 2;
    int i = ((buffer[currentOffset - 1] &amp; 0xff) &lt;&lt; 8) + (buffer[currentOffset - 2] - 128 &amp; 0xff);
    if(i &gt; 32767)
        i -= 0x10000;
    return i;
}

public int readUnsignedWordBigEndian() {
    currentOffset += 2;
    return ((buffer[currentOffset - 1] &amp; 0xff) &lt;&lt; 8) + (buffer[currentOffset - 2] &amp; 0xff);
}

public int readUnsignedWordA() {
    currentOffset += 2;
    return ((buffer[currentOffset - 2] &amp; 0xff) &lt;&lt; 8) + (buffer[currentOffset - 1] - 128 &amp; 0xff);
}

public int readUnsignedWordBigEndianA() {
    currentOffset += 2;
    return ((buffer[currentOffset - 1] &amp; 0xff) &lt;&lt; 8) + (buffer[currentOffset - 2] - 128 &amp; 0xff);
}

public void writeWordBigEndianA(int i) {
	ensureCapacity(2);
    buffer[currentOffset++] = (byte)(i + 128);
    buffer[currentOffset++] = (byte)(i &gt;&gt; 8);
}

public void writeWordA(int i) {
	ensureCapacity(2);
    buffer[currentOffset++] = (byte)(i &gt;&gt; 8);
    buffer[currentOffset++] = (byte)(i + 128);
}

public void writeWordBigEndian_dup(int i) {
	ensureCapacity(2);
    buffer[currentOffset++] = (byte)i;
    buffer[currentOffset++] = (byte)(i &gt;&gt; 8);
}

public int readDWord_v1() {
    currentOffset += 4;
    return ((buffer[currentOffset - 2] &amp; 0xff) &lt;&lt; 24) + ((buffer[currentOffset - 1] &amp; 0xff) &lt;&lt; 16) + ((buffer[currentOffset - 4] &amp; 0xff) &lt;&lt; 8) + (buffer[currentOffset - 3] &amp; 0xff);
}

public int readDWord_v2() {
    currentOffset += 4;
    return ((buffer[currentOffset - 3] &amp; 0xff) &lt;&lt; 24) + ((buffer[currentOffset - 4] &amp; 0xff) &lt;&lt; 16) + ((buffer[currentOffset - 1] &amp; 0xff) &lt;&lt; 8) + (buffer[currentOffset - 2] &amp; 0xff);
}

public void writeDWord_v1(int i) {
	ensureCapacity(4);
    buffer[currentOffset++] = (byte)(i &gt;&gt; 8);
    buffer[currentOffset++] = (byte)i;
    buffer[currentOffset++] = (byte)(i &gt;&gt; 24);
    buffer[currentOffset++] = (byte)(i &gt;&gt; 16);
}

public void writeDWord_v2(int i) {
	ensureCapacity(4);
    buffer[currentOffset++] = (byte)(i &gt;&gt; 16);
    buffer[currentOffset++] = (byte)(i &gt;&gt; 24);
    buffer[currentOffset++] = (byte)i;
    buffer[currentOffset++] = (byte)(i &gt;&gt; 8);
}

public void readBytes_reverse(byte abyte0[], int i, int j) {
    for(int k = (j + i) - 1; k &gt;= j; k--)
        abyte0[k] = buffer[currentOffset++];

}

public void writeBytes_reverse(byte abyte0[], int i, int j) {
	ensureCapacity(i);
    for(int k = (j + i) - 1; k &gt;= j; k--)
        buffer[currentOffset++] = abyte0[k];

}

public void readBytes_reverseA(byte abyte0[], int i, int j) {
	ensureCapacity(i);
    for(int k = (j + i) - 1; k &gt;= j; k--)
        abyte0[k] = (byte)(buffer[currentOffset++] - 128);

}

public void writeBytes_reverseA(byte abyte0[], int i, int j) {
	ensureCapacity(i);
    for(int k = (j + i) - 1; k &gt;= j; k--)
        buffer[currentOffset++] = (byte)(abyte0[k] + 128);

}

public void createFrame(int id) {
	ensureCapacity(1);
    buffer[currentOffset++] = (byte)(id + packetEncryption.getNextKey());
}

private static final int frameStackSize = 10;
private int frameStackPtr = -1;
private int frameStack[] = new int[frameStackSize];
public void createFrameVarSize(int id) {
	ensureCapacity(3);
	buffer[currentOffset++] = (byte)(id + packetEncryption.getNextKey());
	buffer[currentOffset++] = 0;		
	if(frameStackPtr &gt;= frameStackSize-1) {
		throw new RuntimeException("Stack overflow");
	}
	else frameStack[++frameStackPtr] = currentOffset;
}
public void createFrameVarSizeWord(int id)	 {
	ensureCapacity(2);
	buffer[currentOffset++] = (byte)(id + packetEncryption.getNextKey());
	writeWord(0);		
	if(frameStackPtr &gt;= frameStackSize-1) {
		throw new RuntimeException("Stack overflow");
	}
	else frameStack[++frameStackPtr] = currentOffset;
}

public void endFrameVarSize() {
	if(frameStackPtr &lt; 0) throw new RuntimeException("Stack empty");
	else writeFrameSize(currentOffset - frameStack[frameStackPtr--]);
}

public void endFrameVarSizeWord() {
	if(frameStackPtr &lt; 0) throw new RuntimeException("Stack empty");
	else writeFrameSizeWord(currentOffset - frameStack[frameStackPtr--]);
}

public void writeByte(int i) {
	ensureCapacity(1);
    buffer[currentOffset++] = (byte)i;
}

public void writeWord(int i) {
	ensureCapacity(2);
    buffer[currentOffset++] = (byte)(i &gt;&gt; 8);
    buffer[currentOffset++] = (byte)i;
}

public void writeWordBigEndian(int i) {	
	ensureCapacity(2);
    buffer[currentOffset++] = (byte)i;
    buffer[currentOffset++] = (byte)(i &gt;&gt; 8);
}

public void write3Byte(int i) {
	ensureCapacity(3);
    buffer[currentOffset++] = (byte)(i &gt;&gt; 16);
    buffer[currentOffset++] = (byte)(i &gt;&gt; 8);
    buffer[currentOffset++] = (byte)i;
}

public void writeDWord(int i) {
	ensureCapacity(4);
    buffer[currentOffset++] = (byte)(i &gt;&gt; 24);
    buffer[currentOffset++] = (byte)(i &gt;&gt; 16);
    buffer[currentOffset++] = (byte)(i &gt;&gt; 8);
    buffer[currentOffset++] = (byte)i;
}

public void writeDWordBigEndian(int i) {
	ensureCapacity(4);
    buffer[currentOffset++] = (byte)i;
    buffer[currentOffset++] = (byte)(i &gt;&gt; 8);
    buffer[currentOffset++] = (byte)(i &gt;&gt; 16);
    buffer[currentOffset++] = (byte)(i &gt;&gt; 24);
}

public void writeQWord(long l) {
	ensureCapacity(8);
    buffer[currentOffset++] = (byte)(int)(l &gt;&gt; 56);
    buffer[currentOffset++] = (byte)(int)(l &gt;&gt; 48);
    buffer[currentOffset++] = (byte)(int)(l &gt;&gt; 40);
    buffer[currentOffset++] = (byte)(int)(l &gt;&gt; 32);
    buffer[currentOffset++] = (byte)(int)(l &gt;&gt; 24);
    buffer[currentOffset++] = (byte)(int)(l &gt;&gt; 16);
    buffer[currentOffset++] = (byte)(int)(l &gt;&gt; 8);
    buffer[currentOffset++] = (byte)(int)l;
}

public void writeString(java.lang.String s) {
	ensureCapacity(s.length());
	System.arraycopy(s.getBytes(), 0, buffer, currentOffset, s.length());
    currentOffset += s.length();
    buffer[currentOffset++] = 10;
}

public void writeBytes(byte abyte0[], int i, int j) {
	ensureCapacity(i);
    for(int k = j; k &lt; j + i; k++)
        buffer[currentOffset++] = abyte0[k];
}

public void writeFrameSize(int i) {
    buffer[currentOffset - i - 1] = (byte)i;
}

public void writeFrameSizeWord(int i) {
    buffer[currentOffset - i - 2] = (byte)(i &gt;&gt; 8);
    buffer[currentOffset - i - 1] = (byte)i;
}

public int readUnsignedByte() {
    return buffer[currentOffset++] &amp; 0xff;
}

public byte readSignedByte() {
    return buffer[currentOffset++];
}

public int readUnsignedWord() {
    currentOffset += 2;
    return ((buffer[currentOffset - 2] &amp; 0xff) &lt;&lt; 8) + (buffer[currentOffset - 1] &amp; 0xff);
}

public int readSignedWord() {
    currentOffset += 2;
    int i = ((buffer[currentOffset - 2] &amp; 0xff) &lt;&lt; 8) + (buffer[currentOffset - 1] &amp; 0xff);
    if(i &gt; 32767)
        i -= 0x10000;
    return i;
}

public int readDWord() {
    currentOffset += 4;
    return ((buffer[currentOffset - 4] &amp; 0xff) &lt;&lt; 24) + ((buffer[currentOffset - 3] &amp; 0xff) &lt;&lt; 16) + ((buffer[currentOffset - 2] &amp; 0xff) &lt;&lt; 8) + (buffer[currentOffset - 1] &amp; 0xff);
}

public long readQWord() {
    long l = (long)readDWord() &amp; 0xffffffffL;
    long l1 = (long)readDWord() &amp; 0xffffffffL;
    return (l &lt;&lt; 32) + l1;
}

public java.lang.String readString() {
    int i = currentOffset;
    while(buffer[currentOffset++] != 10) ;
    return new String(buffer, i, currentOffset - i - 1);
}

public void readBytes(byte abyte0[], int i, int j) {
    for(int k = j; k &lt; j + i; k++)
        abyte0[k] = buffer[currentOffset++];

}

public void initBitAccess() {
    bitPosition = currentOffset * 8;
}

public void writeBits(int numBits, int value) {
	ensureCapacity(((int)Math.ceil(numBits*8))*4);
	int bytePos = bitPosition &gt;&gt; 3;
	int bitOffset = 8 - (bitPosition &amp; 7);
	bitPosition += numBits;

	for(; numBits &gt; bitOffset; bitOffset = 8) {
		buffer[bytePos] &amp;= ~ bitMaskOut[bitOffset];		
		buffer[bytePos++] |= (value &gt;&gt; (numBits-bitOffset)) &amp; bitMaskOut[bitOffset];

		numBits -= bitOffset;
	}
	if(numBits == bitOffset) {
		buffer[bytePos] &amp;= ~ bitMaskOut[bitOffset];
		buffer[bytePos] |= value &amp; bitMaskOut[bitOffset];
	}
	else {
		buffer[bytePos] &amp;= ~ (bitMaskOut[numBits]&lt;&lt;(bitOffset - numBits));
		buffer[bytePos] |= (value&amp;bitMaskOut[numBits]) &lt;&lt; (bitOffset - numBits);
	}
}

public void finishBitAccess() {
    currentOffset = (bitPosition + 7) / 8;
}

public byte buffer[] = null;
public int currentOffset = 0;
public int bitPosition = 0;

public static int bitMaskOut[] = new int[32];
static {
	for(int i = 0; i &lt; 32; i++)
		bitMaskOut[i] = (1 &lt;&lt; i) - 1;
}

public void ensureCapacity(int len) {
	if((currentOffset+len+1) &gt;= buffer.length) {
		byte[] oldBuffer = buffer;
		int newLength = (buffer.length * 2);
		buffer = new byte[newLength];
		System.arraycopy(oldBuffer, 0, buffer, 0, oldBuffer.length);
		ensureCapacity(len);
	}
}

public void reset() {
	if(!(currentOffset &gt; Config.BUFFER_SIZE)) {
		byte[] oldBuffer = buffer;
		buffer = new byte[Config.BUFFER_SIZE];
		for(int i = 0; i &lt; currentOffset; i++) {
			buffer[i] = oldBuffer[i];
		}
	}
}

public ISAACRandomGen packetEncryption = null;
</code></pre>
<p>}<br>
[/code] here is my stream wat i change so if its member = true players get donator icon</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/donator-sign/369888/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/donator-sign/369888/4</link>
        <pubDate>Mon, 22 Nov 2010 22:26:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-369888-4</guid>
        <source url="https://forum.moparisthebest.com/t/donator-sign/369888.rss">Donator sign</source>
      </item>
      <item>
        <title>Donator sign</title>
        <dc:creator><![CDATA[@str2own99 str2own99]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/str2own99">@str2own99</a> wrote:</p>
          <blockquote>
              <p>i dont get anything thats its in stream</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/donator-sign/369888/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/donator-sign/369888/3</link>
        <pubDate>Mon, 22 Nov 2010 22:18:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-369888-3</guid>
        <source url="https://forum.moparisthebest.com/t/donator-sign/369888.rss">Donator sign</source>
      </item>
      <item>
        <title>Donator sign</title>
        <dc:creator><![CDATA[@stickywicky stickywicky]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/stickywicky">@stickywicky</a> wrote:</p>
          <blockquote>
              <p>if using PI<br>
set to 5</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/donator-sign/369888/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/donator-sign/369888/2</link>
        <pubDate>Mon, 22 Nov 2010 22:13:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-369888-2</guid>
        <source url="https://forum.moparisthebest.com/t/donator-sign/369888.rss">Donator sign</source>
      </item>
      <item>
        <title>Donator sign</title>
        <dc:creator><![CDATA[@str2own99 str2own99]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/str2own99">@str2own99</a> wrote:</p>
          <blockquote>
              <p>ok i need to put any1 rights to 4 to make em donator and have donator sign how can i make it so it need</p>
<p><code>member = true</code> to be donator and have donator sign?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/donator-sign/369888/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/donator-sign/369888/1</link>
        <pubDate>Mon, 22 Nov 2010 22:06:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-369888-1</guid>
        <source url="https://forum.moparisthebest.com/t/donator-sign/369888.rss">Donator sign</source>
      </item>
  </channel>
</rss>
