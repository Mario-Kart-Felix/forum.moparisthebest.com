<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[C#] Help With Abstract Classes and Interfaces</title>
    <link>https://forum.moparisthebest.com/t/c-help-with-abstract-classes-and-interfaces/528159</link>
    <description>Alright, so I&#39;m trying to make a &quot;system&quot; if you will, in Unity, that will manage all things such as: health regeneration, hunger, etc.

Me trying to mirror Java into this though is causing some issues with the fact that you can&#39;t initialize abstract classes or interfaces. Here&#39;s an example in Java of how I want this to work:

[code=java]
public SomeAbstractClass doStuff() {
    return new SomeAbstractClass() {
        public void run() {
            System.out.println(&quot;Ran&quot;);
        }
    }
}[/code] 

Here is the C# code I&#39;ve pwned to death, please, mind my conventions and naming, as it&#39;s temporary, and I&#39;m new to C#

[code=csharp]
using UnityEngine;
using System.Collections;

public interface PlannedEvent {
	
	void Run();
	
}
[/code]

[code=csharp]
using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class PlannedEventManager : MonoBehaviour {
	
	private static List&lt;PlannedEventInitializer&gt; events = new List&lt;PlannedEventInitializer&gt;();
	
	public static void AddEvent(PlannedEventInitializer e) {
		events.Add(e);
	}
	
	public static void RemoveEvent(PlannedEventInitializer e) {
		events.Remove(e);	
	}
	
	public static void FreakingStopThisMadnessNow() {
		foreach (PlannedEventInitializer e in events) {
			events.Remove(e);	
		}
	}
	
	void Update () {
		foreach (PlannedEventInitializer e in events) {
			if (e.getTicks() &gt; 0) {
				e.decreaseTick();	
			} else {
				e.getEvent().Run();
				events.Remove(e);
			}
		}
	}
}
[/code]

[code=csharp]
using UnityEngine;
using System.Collections;

public class PlannedEventInitializer : PlannedEvent {
	
	PlannedEvent e;
	private int ticks = 0;
	
	public PlannedEventInitializer(PlannedEvent e, int ticks) {
		this.e = e;
		this.ticks = ticks;
	}
	
	public PlannedEvent getEvent() {
		return e;	
	}
	
	public int getTicks() {
		return ticks;	
	}
	
	public void setTicks(int ticks) {
		this.ticks = ticks;	
	}
	
	public void decreaseTick() {
		ticks -= 1;	
	}
}
[/code]

[code=csharp]
using UnityEngine;
using System.Collections;

public class Player : MonoBehaviour {

	void Start () {
                //Had an attempt to mirror the code I&#39;m trying to create, but deleted it, so it&#39;s incomplete here.
		PlannedEventManager.AddEvent(new PlannedEventInitializer(new PlannedEvent(), 10));
	}
	
}
[/code]

So the bottom line is, I want to get it work in a way that I can call the AddEvent method, and supply code to Run per event. Any pointers on how to get me in the right direction? I&#39;m stumped.</description>
    
    <lastBuildDate>Thu, 15 Aug 2013 23:17:03 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/c-help-with-abstract-classes-and-interfaces/528159.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[C#] Help With Abstract Classes and Interfaces</title>
        <dc:creator><![CDATA[@sppt sppt]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sppt">@sppt</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="1" data-topic="528159">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/4x4chevrolet/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> 4x4Chevrolet:</div>
<blockquote>
<p>Me trying to mirror Java into this though is causing some issues with the fact that <span class="bbcode-b">you can’t initialize abstract classes or interfaces.</span> Here’s an example in Java of how I want this to work:</p>
</blockquote>
</aside>
<p>That’s a property of both abstract classes and interfaces, and is intended behaviour.<br>
As for what you’re trying to do, you might want to look into delegates.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-help-with-abstract-classes-and-interfaces/528159/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-help-with-abstract-classes-and-interfaces/528159/2</link>
        <pubDate>Thu, 15 Aug 2013 23:17:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-528159-2</guid>
        <source url="https://forum.moparisthebest.com/t/c-help-with-abstract-classes-and-interfaces/528159.rss">[C#] Help With Abstract Classes and Interfaces</source>
      </item>
      <item>
        <title>[C#] Help With Abstract Classes and Interfaces</title>
        <dc:creator><![CDATA[@system system]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/system">@system</a> wrote:</p>
          <blockquote>
              <p>Alright, so I’m trying to make a “system” if you will, in Unity, that will manage all things such as: health regeneration, hunger, etc.</p>
<p>Me trying to mirror Java into this though is causing some issues with the fact that you can’t initialize abstract classes or interfaces. Here’s an example in Java of how I want this to work:</p>
<p><code>
public SomeAbstractClass doStuff() {
    return new SomeAbstractClass() {
        public void run() {
            System.out.println("Ran");
        }
    }
}</code></p>
<p>Here is the C# code I’ve pwned to death, please, mind my conventions and naming, as it’s temporary, and I’m new to C#</p>
<pre><code class="lang-auto">using UnityEngine;
using System.Collections;

public interface PlannedEvent {
	
	void Run();
	
}</code></pre>
<pre><code class="lang-auto">using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class PlannedEventManager : MonoBehaviour {
	
	private static List&lt;PlannedEventInitializer&gt; events = new List&lt;PlannedEventInitializer&gt;();
	
	public static void AddEvent(PlannedEventInitializer e) {
		events.Add(e);
	}
	
	public static void RemoveEvent(PlannedEventInitializer e) {
		events.Remove(e);	
	}
	
	public static void FreakingStopThisMadnessNow() {
		foreach (PlannedEventInitializer e in events) {
			events.Remove(e);	
		}
	}
	
	void Update () {
		foreach (PlannedEventInitializer e in events) {
			if (e.getTicks() &gt; 0) {
				e.decreaseTick();	
			} else {
				e.getEvent().Run();
				events.Remove(e);
			}
		}
	}
}</code></pre>
<pre><code class="lang-auto">using UnityEngine;
using System.Collections;

public class PlannedEventInitializer : PlannedEvent {
	
	PlannedEvent e;
	private int ticks = 0;
	
	public PlannedEventInitializer(PlannedEvent e, int ticks) {
		this.e = e;
		this.ticks = ticks;
	}
	
	public PlannedEvent getEvent() {
		return e;	
	}
	
	public int getTicks() {
		return ticks;	
	}
	
	public void setTicks(int ticks) {
		this.ticks = ticks;	
	}
	
	public void decreaseTick() {
		ticks -= 1;	
	}
}</code></pre>
<pre><code class="lang-auto">using UnityEngine;
using System.Collections;

public class Player : MonoBehaviour {

	void Start () {
                //Had an attempt to mirror the code I'm trying to create, but deleted it, so it's incomplete here.
		PlannedEventManager.AddEvent(new PlannedEventInitializer(new PlannedEvent(), 10));
	}
	
}</code></pre>
<p>So the bottom line is, I want to get it work in a way that I can call the AddEvent method, and supply code to Run per event. Any pointers on how to get me in the right direction? I’m stumped.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-help-with-abstract-classes-and-interfaces/528159/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-help-with-abstract-classes-and-interfaces/528159/1</link>
        <pubDate>Thu, 15 Aug 2013 02:24:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-528159-1</guid>
        <source url="https://forum.moparisthebest.com/t/c-help-with-abstract-classes-and-interfaces/528159.rss">[C#] Help With Abstract Classes and Interfaces</source>
      </item>
  </channel>
</rss>
