<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Equals() vs ==</title>
    <link>https://forum.moparisthebest.com/t/equals-vs/415815</link>
    <description>[code=Java]
public class Entity {
    private Entity target;

    public void setTarget(final Entity target) {
        this.target = target;
    }

    public Entity getTarget() {
        return target;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((target == null) ? 0 : target.hashCode());
        return result;
    }

    @Override
    public boolean equals(final Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (!(obj instanceof Entity)) {
            return false;
        }
        final Entity other = (Entity) obj;
        if (target == null) {
            if (other.target != null) {
                return false;
            }
        }
        else if (!target.equals(other.target)) {
            return false;
        }
        return true;
    }
}
[/code]

Seems normal right? What I want you to pay attention to is
[code=Java]
else if (!target.equals(other.target)) {
    return false;
}
[/code]

Now if you were to do something like this
[code=Java]
final Entity entityA = new Entity();
final Entity entityB = new Entity();

entityA.setTarget(entityA);
entityB.setTarget(entityA);
[/code]

comparing entityA and entityB with equals() would evaluate to true, because they both share the same target (entityA).

Now, if you were to do this
[code=Java]
entityA.setTarget(entityB);
entityB.setTarget(entityA);
[/code]

you would expect equals to evaluate to false (because they do not have the same target). However, you would be wrong. In this case, it would cause a StackOverflowException. Why? Because in the equals() method, you are using equals inside itself (the part I told you to pay attention to).

It would be analogous to
[code=Java]
public static void main(String[] args) {
    main(args);
}
[/code]

The StackOverflowException is caused by a paradox of sorts. It&#39;s like saying

The next statement is true
The previous statement is false

Or in this case, something like
&lt;blockquote&gt;Test for equality between these two Entities
entityA cannot be evaluated until entityB is evaluated
entityB cannot be evaluated until entityA is evaluated&lt;/blockquote&gt;

So how would you fix this? Simple. equals() compares the objects state (all values compared in the equals() method) where as == refers to an object in memory. So all you need to do is replace
[code=Java]
else if (!target.equals(other.target)) {
    return false;
}
[/code]

with
[code=Java]
else if (target != other.target) {
    return false;
}
[/code]

That way you are referring to the object in memory, instead of an identity.</description>
    
    <lastBuildDate>Fri, 30 Sep 2011 01:21:59 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/equals-vs/415815.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Equals() vs ==</title>
        <dc:creator><![CDATA[@IlikeArrays IlikeArrays]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ilikearrays">@IlikeArrays</a> wrote:</p>
          <blockquote>
              <p><span class="bbcode-i">Someone</span> is not referring to veer. Don’t get too upset there frank.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/equals-vs/415815/23">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/equals-vs/415815/23</link>
        <pubDate>Fri, 30 Sep 2011 01:21:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-415815-23</guid>
        <source url="https://forum.moparisthebest.com/t/equals-vs/415815.rss">Equals() vs ==</source>
      </item>
      <item>
        <title>Equals() vs ==</title>
        <dc:creator><![CDATA[@slavemaster veer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/slavemaster">@slavemaster</a> wrote:</p>
          <blockquote>
              <p>[quote=“IlikeArrays, post:18, topic:415815”]^<br>
lol. Someone needs to read the API[/quote]</p>
<p>To be frank, your stupidity is uninviting and even unnerving. An implementation of equals() is by definition to be collision-less.<br>
hashCode(), on the other hand, is governed by a contract that states that two Objects which are equal produce a deterministic equal hash value. That does not necessarily mean that given two equal hash codes implies two equal Objects.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/equals-vs/415815/22">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/equals-vs/415815/22</link>
        <pubDate>Wed, 28 Sep 2011 22:36:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-415815-22</guid>
        <source url="https://forum.moparisthebest.com/t/equals-vs/415815.rss">Equals() vs ==</source>
      </item>
      <item>
        <title>Equals() vs ==</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>[quote=“iKilem, post:20, topic:415815”][quote author=IlikeArrays link=topic=517758.msg3764987#msg3764987 date=1317164397]<br>
^<br>
lol. Someone needs to read the API<br>
[/quote]<br>
Who are you talking to? veer is right.</p>
<p>zyle1992, I think you meant to highlight the part underneath. You know, the part that’s relevant to the discussion.[/quote]</p>
<p>Yeah, I did it in the quick reply box. Doesn’t format well =\</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/equals-vs/415815/21">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/equals-vs/415815/21</link>
        <pubDate>Wed, 28 Sep 2011 17:22:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-415815-21</guid>
        <source url="https://forum.moparisthebest.com/t/equals-vs/415815.rss">Equals() vs ==</source>
      </item>
      <item>
        <title>Equals() vs ==</title>
        <dc:creator><![CDATA[@iKilem iKilem]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ikilem">@iKilem</a> wrote:</p>
          <blockquote>
              <p>[quote=“IlikeArrays, post:18, topic:415815”]^<br>
lol. Someone needs to read the API[/quote]<br>
Who are you talking to? veer is right.</p>
<p>zyle1992, I think you meant to highlight the part underneath. You know, the part that’s relevant to the discussion.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/equals-vs/415815/20">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/equals-vs/415815/20</link>
        <pubDate>Wed, 28 Sep 2011 16:43:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-415815-20</guid>
        <source url="https://forum.moparisthebest.com/t/equals-vs/415815.rss">Equals() vs ==</source>
      </item>
      <item>
        <title>Equals() vs ==</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>[quote=“Java API”]public int hashCode()</p>
<p>Returns a hash code value for the object. This method is supported for the benefit of hash tables such as those provided by HashMap.</p>
<p>The general contract of hashCode is:</p>
<pre><code>Whenever it is invoked on the same object more than once during an execution of a Java application, the hashCode method must consistently return the same integer, provided no information used in equals comparisons on the object is modified. This integer need not remain consistent from one execution of an application to another execution of the same application.
If two objects are equal according to the equals(Object) method, then calling the hashCode method on each of the two objects must produce the same integer result.
[b]It is not required that if two objects are unequal according to the equals(java.lang.Object) method, then calling the hashCode method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables. [/b]
</code></pre>
<p>As much as is reasonably practical, the hashCode method defined by class Object does return distinct integers for distinct objects. (This is typically implemented by converting the internal address of the object into an integer, but this implementation technique is not required by the JavaTM programming language.)[/quote]</p>
<p>[quote=“Java API”]public boolean equals(Object obj)</p>
<p>Indicates whether some other object is “equal to” this one.</p>
<p>The equals method implements an equivalence relation on non-null object references:</p>
<pre><code>It is reflexive: for any non-null reference value x, x.equals(x) should return true.
It is symmetric: for any non-null reference values x and y, x.equals(y) should return true if and only if y.equals(x) returns true.
It is transitive: for any non-null reference values x, y, and z, if x.equals(y) returns true and y.equals(z) returns true, then x.equals(z) should return true.
It is consistent: for any non-null reference values x and y, multiple invocations of x.equals(y) consistently return true or consistently return false, provided no information used in equals comparisons on the objects is modified.
For any non-null reference value x, x.equals(null) should return false. 
</code></pre>
<p>The equals method for class Object implements the most discriminating possible equivalence relation on objects; that is, for any non-null reference values x and y, this method returns true if and only if x and y refer to the same object (x == y has the value true).</p>
<p>Note that it is generally necessary to override the hashCode method whenever this method is overridden, so as to maintain the general contract for the hashCode method, which states that equal objects must have equal hash codes.[/quote]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/equals-vs/415815/19">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/equals-vs/415815/19</link>
        <pubDate>Wed, 28 Sep 2011 00:14:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-415815-19</guid>
        <source url="https://forum.moparisthebest.com/t/equals-vs/415815.rss">Equals() vs ==</source>
      </item>
      <item>
        <title>Equals() vs ==</title>
        <dc:creator><![CDATA[@IlikeArrays IlikeArrays]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ilikearrays">@IlikeArrays</a> wrote:</p>
          <blockquote>
              <p>^<br>
lol. Someone needs to read the API</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/equals-vs/415815/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/equals-vs/415815/18</link>
        <pubDate>Tue, 27 Sep 2011 22:59:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-415815-18</guid>
        <source url="https://forum.moparisthebest.com/t/equals-vs/415815.rss">Equals() vs ==</source>
      </item>
      <item>
        <title>Equals() vs ==</title>
        <dc:creator><![CDATA[@slavemaster veer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/slavemaster">@slavemaster</a> wrote:</p>
          <blockquote>
              <p>You guys know even less about the programming language than I thought. It isn’t fair to keep falling back on object to be the voice of reason.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/equals-vs/415815/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/equals-vs/415815/17</link>
        <pubDate>Tue, 27 Sep 2011 20:22:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-415815-17</guid>
        <source url="https://forum.moparisthebest.com/t/equals-vs/415815.rss">Equals() vs ==</source>
      </item>
      <item>
        <title>Equals() vs ==</title>
        <dc:creator><![CDATA[@Protosstribe object]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/protosstribe">@Protosstribe</a> wrote:</p>
          <blockquote>
              <p>Two Objects that are equal (according to the contract of the equals(Object) method) should produce the same hash code. But two Objects that are unequal preferrably should produce unequal hash codes, although this is not a strict requirement. So, yes, two unequal Objects may aswell produce the same hash code, which means there are collisions.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/equals-vs/415815/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/equals-vs/415815/16</link>
        <pubDate>Tue, 27 Sep 2011 08:37:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-415815-16</guid>
        <source url="https://forum.moparisthebest.com/t/equals-vs/415815.rss">Equals() vs ==</source>
      </item>
      <item>
        <title>Equals() vs ==</title>
        <dc:creator><![CDATA[@Not_a_bot Not_a_bot]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/not_a_bot">@Not_a_bot</a> wrote:</p>
          <blockquote>
              <p>[quote="-Nothing, post:14, topic:415815"][quote author=veer link=topic=517758.msg3763264#msg3763264 date=1317027495]<br>
hashCode() is not guaranteed to be collisionless; equals() sure as hell is.<br>
[/quote]<br>
Explain why it doesn’t guarantee that it’s equal to another object? hashCodes should be always unique.[/quote]</p>
<p>Hash codes are only as accurate as it’s implementation, and are not guaranteed to be distinct. Basically what veer said.</p>
<p>Refer to: <a href="http://download.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html" rel="nofollow noopener">http://download.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/equals-vs/415815/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/equals-vs/415815/15</link>
        <pubDate>Tue, 27 Sep 2011 07:47:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-415815-15</guid>
        <source url="https://forum.moparisthebest.com/t/equals-vs/415815.rss">Equals() vs ==</source>
      </item>
      <item>
        <title>Equals() vs ==</title>
        <dc:creator><![CDATA[@Nothing1 -Nothing]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/nothing1">@Nothing1</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="10" data-topic="415815">
<div class="title">
<div class="quote-controls"></div>
 veer:</div>
<blockquote>
<p>hashCode() is not guaranteed to be collisionless; equals() sure as hell is.</p>
</blockquote>
</aside>
<p>Explain why it doesn’t guarantee that it’s equal to another object? hashCodes should be always unique.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/equals-vs/415815/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/equals-vs/415815/14</link>
        <pubDate>Tue, 27 Sep 2011 07:13:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-415815-14</guid>
        <source url="https://forum.moparisthebest.com/t/equals-vs/415815.rss">Equals() vs ==</source>
      </item>
      <item>
        <title>Equals() vs ==</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="10" data-topic="415815">
<div class="title">
<div class="quote-controls"></div>
 veer:</div>
<blockquote>
<p>hashCode() is not guaranteed to be collisionless; equals() sure as hell is.</p>
</blockquote>
</aside>
<p>Mmm nope, check the documentation on it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/equals-vs/415815/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/equals-vs/415815/13</link>
        <pubDate>Tue, 27 Sep 2011 01:27:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-415815-13</guid>
        <source url="https://forum.moparisthebest.com/t/equals-vs/415815.rss">Equals() vs ==</source>
      </item>
      <item>
        <title>Equals() vs ==</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="11" data-topic="415815">
<div class="title">
<div class="quote-controls"></div>
 object:</div>
<blockquote>
<p>To optimize, you don’t have to check whether obj is null. The instanceof check already takes that into account for you.</p>
</blockquote>
</aside>
<p>I didn’t know that. Thanks for the tip <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/equals-vs/415815/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/equals-vs/415815/12</link>
        <pubDate>Mon, 26 Sep 2011 18:04:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-415815-12</guid>
        <source url="https://forum.moparisthebest.com/t/equals-vs/415815.rss">Equals() vs ==</source>
      </item>
      <item>
        <title>Equals() vs ==</title>
        <dc:creator><![CDATA[@Protosstribe object]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/protosstribe">@Protosstribe</a> wrote:</p>
          <blockquote>
              <p>To optimize, you don’t have to check whether obj is null. The instanceof check already takes that into account for you.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/equals-vs/415815/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/equals-vs/415815/11</link>
        <pubDate>Mon, 26 Sep 2011 10:11:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-415815-11</guid>
        <source url="https://forum.moparisthebest.com/t/equals-vs/415815.rss">Equals() vs ==</source>
      </item>
      <item>
        <title>Equals() vs ==</title>
        <dc:creator><![CDATA[@slavemaster veer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/slavemaster">@slavemaster</a> wrote:</p>
          <blockquote>
              <p>hashCode() is not guaranteed to be collisionless; equals() sure as hell is.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/equals-vs/415815/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/equals-vs/415815/10</link>
        <pubDate>Mon, 26 Sep 2011 08:58:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-415815-10</guid>
        <source url="https://forum.moparisthebest.com/t/equals-vs/415815.rss">Equals() vs ==</source>
      </item>
      <item>
        <title>Equals() vs ==</title>
        <dc:creator><![CDATA[@Coelho Coelho]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/coelho">@Coelho</a> wrote:</p>
          <blockquote>
              <p>nvm</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/equals-vs/415815/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/equals-vs/415815/9</link>
        <pubDate>Mon, 26 Sep 2011 06:44:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-415815-9</guid>
        <source url="https://forum.moparisthebest.com/t/equals-vs/415815.rss">Equals() vs ==</source>
      </item>
      <item>
        <title>Equals() vs ==</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>[quote="-Nothing, post:7, topic:415815"][quote author=veer link=topic=517758.msg3762514#msg3762514 date=1316979393]</p>
<aside class="quote">
<blockquote>
<p><code>
        if (!(obj instanceof Entity)) { //If the object your comparing to is Entity you send a false? What the fuck?
            return false;
        }</code></p>
<pre><code class="lang-auto">        else if (!target.equals(other.target)) {//If you want to check if this entity is equal to an object, why would u do this?
            return false;
        }</code></pre>
</blockquote>
</aside>
<p>What exactly is wrong with the first part? Perhaps you misunderstand; why would anything that isn’t an Entity possibly be equal to this Entity?<br>
For the second part, that’s merely how he tests semantic equality…<br>
[/quote]<br>
I need glasses, I didn’t see the ! there. If I would be him, I’d use the hashCode method he has to compare if the 2 entities are the same.[/quote]</p>
<p>But according to the equals() and hashCode() contracts, just because the hashcode is the same does not necessarily mean that two objects are equal.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/equals-vs/415815/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/equals-vs/415815/8</link>
        <pubDate>Mon, 26 Sep 2011 05:40:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-415815-8</guid>
        <source url="https://forum.moparisthebest.com/t/equals-vs/415815.rss">Equals() vs ==</source>
      </item>
      <item>
        <title>Equals() vs ==</title>
        <dc:creator><![CDATA[@Nothing1 -Nothing]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/nothing1">@Nothing1</a> wrote:</p>
          <blockquote>
              <p>[quote=“veer, post:6, topic:415815”][quote author=-Nothing link=topic=517758.msg3762453#msg3762453 date=1316976394]</p>
<p><code>
        if (!(obj instanceof Entity)) { //If the object your comparing to is Entity you send a false? What the fuck?
            return false;
        }</code></p>
<pre><code class="lang-auto">        else if (!target.equals(other.target)) {//If you want to check if this entity is equal to an object, why would u do this?
            return false;
        }</code></pre>
<p>[/quote]<br>
What exactly is wrong with the first part? Perhaps you misunderstand; why would anything that isn’t an Entity possibly be equal to this Entity?<br>
For the second part, that’s merely how he tests semantic equality…[/quote]<br>
I need glasses, I didn’t see the ! there. If I would be him, I’d use the hashCode method he has to compare if the 2 entities are the same.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/equals-vs/415815/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/equals-vs/415815/7</link>
        <pubDate>Mon, 26 Sep 2011 04:20:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-415815-7</guid>
        <source url="https://forum.moparisthebest.com/t/equals-vs/415815.rss">Equals() vs ==</source>
      </item>
      <item>
        <title>Equals() vs ==</title>
        <dc:creator><![CDATA[@slavemaster veer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/slavemaster">@slavemaster</a> wrote:</p>
          <blockquote>
              <p>[quote="-Nothing, post:5, topic:415815"]<code>
        if (!(obj instanceof Entity)) { //If the object your comparing to is Entity you send a false? What the fuck?
            return false;
        }</code></p>
<p><code>
        else if (!target.equals(other.target)) {//If you want to check if this entity is equal to an object, why would u do this?
            return false;
        }
</code>[/quote]<br>
What exactly is wrong with the first part? Perhaps you misunderstand; why would anything that isn’t an Entity possibly be equal to this Entity?<br>
For the second part, that’s merely how he tests semantic equality…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/equals-vs/415815/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/equals-vs/415815/6</link>
        <pubDate>Sun, 25 Sep 2011 19:36:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-415815-6</guid>
        <source url="https://forum.moparisthebest.com/t/equals-vs/415815.rss">Equals() vs ==</source>
      </item>
      <item>
        <title>Equals() vs ==</title>
        <dc:creator><![CDATA[@Nothing1 -Nothing]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/nothing1">@Nothing1</a> wrote:</p>
          <blockquote>
              <p>That equals method of Entity doesn’t make sense to me.</p>
<pre><code class="lang-auto">    public boolean equals(final Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (!(obj instanceof Entity)) { //If the object your comparing to is Entity you send a false? What the fuck?
            return false;
        }
        final Entity other = (Entity) obj;
        if (target == null) {
            if (other.target != null) {
                return false;
            }
        }
        else if (!target.equals(other.target)) {//If you want to check if this entity is equal to an object, why would u do this?
            return false;
        }
        return true;
    }</code></pre>
<p>The equals method is so much of what the fuck, don’t know what you were trying to achieve but it’s obvious that you’re doing it wrong.</p>
<p>And you really can’t do equals in an equals method</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/equals-vs/415815/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/equals-vs/415815/5</link>
        <pubDate>Sun, 25 Sep 2011 18:46:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-415815-5</guid>
        <source url="https://forum.moparisthebest.com/t/equals-vs/415815.rss">Equals() vs ==</source>
      </item>
      <item>
        <title>Equals() vs ==</title>
        <dc:creator><![CDATA[@Mod_Adam Adam]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_adam">@Mod_Adam</a> wrote:</p>
          <blockquote>
              <p>Ok so you just wrote this whole thing to show recursion?</p>
<p>edit: and why sometimes it doesn’t work?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/equals-vs/415815/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/equals-vs/415815/4</link>
        <pubDate>Sun, 25 Sep 2011 01:40:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-415815-4</guid>
        <source url="https://forum.moparisthebest.com/t/equals-vs/415815.rss">Equals() vs ==</source>
      </item>
      <item>
        <title>Equals() vs ==</title>
        <dc:creator><![CDATA[@_s11 s1gma]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_s11">@_s11</a> wrote:</p>
          <blockquote>
              <blockquote>The StackOverflowException is caused by a paradox of sorts.</blockquote>
lol
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/equals-vs/415815/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/equals-vs/415815/3</link>
        <pubDate>Sat, 24 Sep 2011 21:47:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-415815-3</guid>
        <source url="https://forum.moparisthebest.com/t/equals-vs/415815.rss">Equals() vs ==</source>
      </item>
      <item>
        <title>Equals() vs ==</title>
        <dc:creator><![CDATA[@slavemaster veer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/slavemaster">@slavemaster</a> wrote:</p>
          <blockquote>
              <p>This issue is equivalent to detecting cycles in a directed graph.<br>
<aside class="onebox stackexchange">
  <header class="source">
      <a href="https://stackoverflow.com/questions/526331/cycles-in-an-undirected-graph/526371#526371" target="_blank" rel="nofollow noopener">stackoverflow.com</a>
  </header>
  <article class="onebox-body">
      <a href="https://stackoverflow.com/users/12166/rafa%c5%82-dowgird" target="_blank" rel="nofollow noopener">
    <img alt="Rafał Dowgird" src="https://www.gravatar.com/avatar/8ae44dc366eacfc7e7eede0ae0ac065c?s=128&amp;d=identicon&amp;r=PG" class="thumbnail onebox-avatar" width="128" height="128">
  </a>
<h4>
  <a href="https://stackoverflow.com/questions/526331/cycles-in-an-undirected-graph/526371#526371" target="_blank" rel="nofollow noopener">Cycles in an Undirected Graph</a>
</h4>

<div class="tags">
  <strong>algorithm, graph, graph-theory</strong>
</div>

<div class="date">
  
  answered by
  <a href="https://stackoverflow.com/users/12166/rafa%c5%82-dowgird" target="_blank" rel="nofollow noopener">
    Rafał Dowgird
  </a>
  on <a href="https://stackoverflow.com/questions/526331/cycles-in-an-undirected-graph/526371#526371" target="_blank" rel="nofollow noopener">09:00PM - 08 Feb 09</a>
</div>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>
</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/equals-vs/415815/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/equals-vs/415815/2</link>
        <pubDate>Sat, 24 Sep 2011 20:18:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-415815-2</guid>
        <source url="https://forum.moparisthebest.com/t/equals-vs/415815.rss">Equals() vs ==</source>
      </item>
      <item>
        <title>Equals() vs ==</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <pre><code class="lang-auto">public class Entity {
    private Entity target;

    public void setTarget(final Entity target) {
        this.target = target;
    }

    public Entity getTarget() {
        return target;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((target == null) ? 0 : target.hashCode());
        return result;
    }

    @Override
    public boolean equals(final Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (!(obj instanceof Entity)) {
            return false;
        }
        final Entity other = (Entity) obj;
        if (target == null) {
            if (other.target != null) {
                return false;
            }
        }
        else if (!target.equals(other.target)) {
            return false;
        }
        return true;
    }
}</code></pre>
<p>Seems normal right? What I want you to pay attention to is</p>
<pre><code class="lang-auto">else if (!target.equals(other.target)) {
    return false;
}</code></pre>
<p>Now if you were to do something like this</p>
<pre><code class="lang-auto">final Entity entityA = new Entity();
final Entity entityB = new Entity();

entityA.setTarget(entityA);
entityB.setTarget(entityA);</code></pre>
<p>comparing entityA and entityB with equals() would evaluate to true, because they both share the same target (entityA).</p>
<p>Now, if you were to do this</p>
<pre><code class="lang-auto">entityA.setTarget(entityB);
entityB.setTarget(entityA);</code></pre>
<p>you would expect equals to evaluate to false (because they do not have the same target). However, you would be wrong. In this case, it would cause a StackOverflowException. Why? Because in the equals() method, you are using equals inside itself (the part I told you to pay attention to).</p>
<p>It would be analogous to</p>
<pre><code class="lang-auto">public static void main(String[] args) {
    main(args);
}</code></pre>
<p>The StackOverflowException is caused by a paradox of sorts. It’s like saying</p>
<p>The next statement is true<br>
The previous statement is false</p>
<p>Or in this case, something like</p>
<blockquote>Test for equality between these two Entities
entityA cannot be evaluated until entityB is evaluated
entityB cannot be evaluated until entityA is evaluated</blockquote>
<p>So how would you fix this? Simple. equals() compares the objects state (all values compared in the equals() method) where as == refers to an object in memory. So all you need to do is replace</p>
<pre><code class="lang-auto">else if (!target.equals(other.target)) {
    return false;
}</code></pre>
<p>with</p>
<pre><code class="lang-auto">else if (target != other.target) {
    return false;
}</code></pre>
<p>That way you are referring to the object in memory, instead of an identity.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/equals-vs/415815/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/equals-vs/415815/1</link>
        <pubDate>Sat, 24 Sep 2011 18:28:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-415815-1</guid>
        <source url="https://forum.moparisthebest.com/t/equals-vs/415815.rss">Equals() vs ==</source>
      </item>
  </channel>
</rss>
