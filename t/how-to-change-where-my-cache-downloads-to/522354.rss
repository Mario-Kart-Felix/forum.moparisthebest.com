<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>How to change where my cache downloads to?</title>
    <link>https://forum.moparisthebest.com/t/how-to-change-where-my-cache-downloads-to/522354</link>
    <description>heres my signlink but but i can&#39;t find 
public static String sencondDir() {                seeing as i can&#39;t find it i can&#39;t change where it downloads to it needs to go to c drive not my client files...
[code]package sign;

import java.applet.Applet;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintStream;
import java.io.RandomAccessFile;
import java.net.InetAddress;
import java.net.Socket;
import java.net.URL;

public final class signlink
  implements Runnable
{
  public static final int clientversion = 317;
  public static int uid;
  public static int storeid = 32;
  public static RandomAccessFile cache_dat = null;
  public static final RandomAccessFile[] cache_idx = new RandomAccessFile[5];
  public static boolean sunjava;
  public static Applet mainapp = null;
  private static boolean active;
  private static int threadliveid;
  private static InetAddress socketip;
  private static int socketreq;
  private static Socket socket = null;
  private static int threadreqpri = 1;
  private static Runnable threadreq = null;
  private static String dnsreq = null;
  public static String dns = null;
  private static String urlreq = null;
  private static DataInputStream urlstream = null;
  private static int savelen;
  private static String savereq = null;
  private static byte[] savebuf = null;
  private static boolean midiplay;
  private static int midipos;
  public static String midi = null;
  public static int midivol;
  public static int midifade;
  private static boolean waveplay;
  private static int wavepos;
  public static int wavevol;
  public static boolean reporterror = true;
  public static String errorname = &quot;&quot;;

  public static void startpriv(InetAddress inetaddress)
  {
    threadliveid = (int)(Math.random() * 99999999.0D);
    if (active)
    {
      try
      {
        Thread.sleep(500L);
      } catch (Exception localException) {
      }
      active = false;
    }
    socketreq = 0;
    threadreq = null;
    dnsreq = null;
    savereq = null;
    urlreq = null;
    socketip = inetaddress;
    Thread thread = new Thread(new signlink());
    thread.setDaemon(true);
    thread.start();
    while (!active)
      try
      {
        Thread.sleep(50L);
      } catch (Exception localException1) {
      }
  }

  public static void setuid() {
    uid = 26342;
  }

  public void run() {
    active = true;
    String s = findcachedir();

    uid = 26342;
    try {
      cache_dat = new RandomAccessFile(s + &quot;main_file_cache.dat&quot;, &quot;rw&quot;);
      for (int j = 0; j &lt; 5; j++)
        cache_idx[j] = new RandomAccessFile(s + &quot;main_file_cache.idx&quot; + j, &quot;rw&quot;);
    }
    catch (Exception exception) {
      exception.printStackTrace();
    }
    for (int i = threadliveid; threadliveid == i; )
    {
      if (socketreq != 0)
      {
        try
        {
          socket = new Socket(socketip, socketreq);
        }
        catch (Exception _ex)
        {
          socket = null;
        }
        socketreq = 0;
      }
      else if (threadreq != null)
      {
        Thread thread = new Thread(threadreq);
        thread.setDaemon(true);
        thread.start();
        thread.setPriority(threadreqpri);
        threadreq = null;
      }
      else if (dnsreq != null)
      {
        try
        {
          dns = InetAddress.getByName(dnsreq).getHostName();
        }
        catch (Exception _ex)
        {
          dns = &quot;unknown&quot;;
        }
        dnsreq = null;
      }
      else if (savereq != null)
      {
        if (savebuf != null)
          try
          {
            FileOutputStream fileoutputstream = new FileOutputStream(s + savereq);
            fileoutputstream.write(savebuf, 0, savelen);
            fileoutputstream.close();
          } catch (Exception localException1) {
          }
        if (waveplay)
        {
          String wave = s + savereq;
          waveplay = false;
        }
        if (midiplay)
        {
          midi = s + savereq;
          midiplay = false;
        }
        savereq = null;
      }
      else if (urlreq != null)
      {
        try
        {
          System.out.println(&quot;urlstream&quot;);
          urlstream = new DataInputStream(new URL(mainapp.getCodeBase(), urlreq).openStream());
        }
        catch (Exception _ex)
        {
          urlstream = null;
        }
        urlreq = null;
      }
      try
      {
        Thread.sleep(50L);
      }
      catch (Exception localException2)
      {
      }
    }
  }

  public static final String findcachedir()
  {
    File[] drives = File.listRoots();

    String HomeIsBaws = System.getProperty(&quot;user.home&quot;);
    String s = &quot;lostsoulcache&quot;;
    File file = new File(s);
    if ((file.exists()) || (file.mkdirs())) {
      return s + &quot;/&quot;;
    }
    return null;
  }

  public static int getuid(String s) {
    return 26342;
  }

  public static synchronized Socket opensocket(int i)
    throws IOException
  {
    for (socketreq = i; socketreq != 0; )
      try
      {
        Thread.sleep(50L);
      }
      catch (Exception localException) {
      }
    if (socket == null) {
      throw new IOException(&quot;could not open socket&quot;);
    }
    return socket;
  }

  public static synchronized DataInputStream openurl(String s)
    throws IOException
  {
    for (urlreq = s; urlreq != null; )
      try
      {
        Thread.sleep(50L);
      }
      catch (Exception localException) {
      }
    if (urlstream == null) {
      throw new IOException(&quot;could not open: &quot; + s);
    }
    return urlstream;
  }

  public static synchronized void dnslookup(String s)
  {
    dns = s;
    dnsreq = s;
  }

  public static synchronized void startthread(Runnable runnable, int i)
  {
    threadreqpri = i;
    threadreq = runnable;
  }

  public static synchronized boolean wavesave(byte[] abyte0, int i)
  {
    return false;
  }

  public static synchronized boolean wavereplay()
  {
    if (savereq != null)
    {
      return false;
    }

    savebuf = null;
    waveplay = true;
    savereq = &quot;sound&quot; + wavepos + &quot;.wav&quot;;
    return true;
  }

  public static synchronized void midisave(byte[] abyte0, int i)
  {
  }

  public static void reporterror(String s)
  {
    System.out.println(&quot;Error: &quot; + s);
  }
}[/code]</description>
    
    <lastBuildDate>Fri, 21 Jun 2013 02:37:07 +0000</lastBuildDate>
    <category>Game Development</category>
    <atom:link href="https://forum.moparisthebest.com/t/how-to-change-where-my-cache-downloads-to/522354.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>How to change where my cache downloads to?</title>
        <dc:creator><![CDATA[@Nicksworld Nicksworld]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/nicksworld">@Nicksworld</a> wrote:</p>
          <blockquote>
              <p>heres my signlink but but i can’t find<br>
public static String sencondDir() {                seeing as i can’t find it i can’t change where it downloads to it needs to go to c drive not my client files…</p>
<p>[code]package sign;</p>
<p>import java.applet.Applet;<br>
import java.io.DataInputStream;<br>
import java.io.File;<br>
import java.io.FileOutputStream;<br>
import java.io.IOException;<br>
import java.io.PrintStream;<br>
import java.io.RandomAccessFile;<br>
import java.net.InetAddress;<br>
import java.net.Socket;<br>
import java.net.URL;</p>
<p>public final class signlink<br>
implements Runnable<br>
{<br>
public static final int clientversion = 317;<br>
public static int uid;<br>
public static int storeid = 32;<br>
public static RandomAccessFile cache_dat = null;<br>
public static final RandomAccessFile[] cache_idx = new RandomAccessFile[5];<br>
public static boolean sunjava;<br>
public static Applet mainapp = null;<br>
private static boolean active;<br>
private static int threadliveid;<br>
private static InetAddress socketip;<br>
private static int socketreq;<br>
private static Socket socket = null;<br>
private static int threadreqpri = 1;<br>
private static Runnable threadreq = null;<br>
private static String dnsreq = null;<br>
public static String dns = null;<br>
private static String urlreq = null;<br>
private static DataInputStream urlstream = null;<br>
private static int savelen;<br>
private static String savereq = null;<br>
private static byte[] savebuf = null;<br>
private static boolean midiplay;<br>
private static int midipos;<br>
public static String midi = null;<br>
public static int midivol;<br>
public static int midifade;<br>
private static boolean waveplay;<br>
private static int wavepos;<br>
public static int wavevol;<br>
public static boolean reporterror = true;<br>
public static String errorname = “”;</p>
<p>public static void startpriv(InetAddress inetaddress)<br>
{<br>
threadliveid = (int)(Math.random() * 99999999.0D);<br>
if (active)<br>
{<br>
try<br>
{<br>
Thread.sleep(500L);<br>
} catch (Exception localException) {<br>
}<br>
active = false;<br>
}<br>
socketreq = 0;<br>
threadreq = null;<br>
dnsreq = null;<br>
savereq = null;<br>
urlreq = null;<br>
socketip = inetaddress;<br>
Thread thread = new Thread(new signlink());<br>
thread.setDaemon(true);<br>
thread.start();<br>
while (!active)<br>
try<br>
{<br>
Thread.sleep(50L);<br>
} catch (Exception localException1) {<br>
}<br>
}</p>
<p>public static void setuid() {<br>
uid = 26342;<br>
}</p>
<p>public void run() {<br>
active = true;<br>
String s = findcachedir();</p>
<pre><code>uid = 26342;
try {
  cache_dat = new RandomAccessFile(s + "main_file_cache.dat", "rw");
  for (int j = 0; j &lt; 5; j++)
    cache_idx[j] = new RandomAccessFile(s + "main_file_cache.idx" + j, "rw");
}
catch (Exception exception) {
  exception.printStackTrace();
}
for (int i = threadliveid; threadliveid == i; )
{
  if (socketreq != 0)
  {
    try
    {
      socket = new Socket(socketip, socketreq);
    }
    catch (Exception _ex)
    {
      socket = null;
    }
    socketreq = 0;
  }
  else if (threadreq != null)
  {
    Thread thread = new Thread(threadreq);
    thread.setDaemon(true);
    thread.start();
    thread.setPriority(threadreqpri);
    threadreq = null;
  }
  else if (dnsreq != null)
  {
    try
    {
      dns = InetAddress.getByName(dnsreq).getHostName();
    }
    catch (Exception _ex)
    {
      dns = "unknown";
    }
    dnsreq = null;
  }
  else if (savereq != null)
  {
    if (savebuf != null)
      try
      {
        FileOutputStream fileoutputstream = new FileOutputStream(s + savereq);
        fileoutputstream.write(savebuf, 0, savelen);
        fileoutputstream.close();
      } catch (Exception localException1) {
      }
    if (waveplay)
    {
      String wave = s + savereq;
      waveplay = false;
    }
    if (midiplay)
    {
      midi = s + savereq;
      midiplay = false;
    }
    savereq = null;
  }
  else if (urlreq != null)
  {
    try
    {
      System.out.println("urlstream");
      urlstream = new DataInputStream(new URL(mainapp.getCodeBase(), urlreq).openStream());
    }
    catch (Exception _ex)
    {
      urlstream = null;
    }
    urlreq = null;
  }
  try
  {
    Thread.sleep(50L);
  }
  catch (Exception localException2)
  {
  }
}
</code></pre>
<p>}</p>
<p>public static final String findcachedir()<br>
{<br>
File[] drives = File.listRoots();</p>
<pre><code>String HomeIsBaws = System.getProperty("user.home");
String s = "lostsoulcache";
File file = new File(s);
if ((file.exists()) || (file.mkdirs())) {
  return s + "/";
}
return null;
</code></pre>
<p>}</p>
<p>public static int getuid(String s) {<br>
return 26342;<br>
}</p>
<p>public static synchronized Socket opensocket(int i)<br>
throws IOException<br>
{<br>
for (socketreq = i; socketreq != 0; )<br>
try<br>
{<br>
Thread.sleep(50L);<br>
}<br>
catch (Exception localException) {<br>
}<br>
if (socket == null) {<br>
throw new IOException(“could not open socket”);<br>
}<br>
return socket;<br>
}</p>
<p>public static synchronized DataInputStream openurl(String s)<br>
throws IOException<br>
{<br>
for (urlreq = s; urlreq != null; )<br>
try<br>
{<br>
Thread.sleep(50L);<br>
}<br>
catch (Exception localException) {<br>
}<br>
if (urlstream == null) {<br>
throw new IOException("could not open: " + s);<br>
}<br>
return urlstream;<br>
}</p>
<p>public static synchronized void dnslookup(String s)<br>
{<br>
dns = s;<br>
dnsreq = s;<br>
}</p>
<p>public static synchronized void startthread(Runnable runnable, int i)<br>
{<br>
threadreqpri = i;<br>
threadreq = runnable;<br>
}</p>
<p>public static synchronized boolean wavesave(byte[] abyte0, int i)<br>
{<br>
return false;<br>
}</p>
<p>public static synchronized boolean wavereplay()<br>
{<br>
if (savereq != null)<br>
{<br>
return false;<br>
}</p>
<pre><code>savebuf = null;
waveplay = true;
savereq = "sound" + wavepos + ".wav";
return true;
</code></pre>
<p>}</p>
<p>public static synchronized void midisave(byte[] abyte0, int i)<br>
{<br>
}</p>
<p>public static void reporterror(String s)<br>
{<br>
System.out.println("Error: " + s);<br>
}<br>
}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/how-to-change-where-my-cache-downloads-to/522354/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/how-to-change-where-my-cache-downloads-to/522354/1</link>
        <pubDate>Fri, 21 Jun 2013 02:37:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-522354-1</guid>
        <source url="https://forum.moparisthebest.com/t/how-to-change-where-my-cache-downloads-to/522354.rss">How to change where my cache downloads to?</source>
      </item>
  </channel>
</rss>
