<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Is this efficient?</title>
    <link>https://forum.moparisthebest.com/t/is-this-efficient/475520</link>
    <description>Alright, I have a Player class, an Inventory class and a Skills class.
Both the Inventory and Skills class are fields inside the Player class.

Let&#39;s say that when the Player achieves level 50 (which is an event encountered in the Skills class) he will receive an item (an action performed within the Inventory class).

I see 2 options to make this possible;
(these are the constructors in the 2 classes)
[code=java]
public Skills(Player player)
and
public Inventory(Player player)
uses
player.getInventory().addItem();[/code]

OR

[code=java]
public Skills(int playerID)
and
public Inventory(int playerID)
uses
PlayerManager.getPlayer(playerID).getInventory().addItem();[/code]

Essentially I want to make a reference from the Skills class to the Inventory class.

Which one of these is the most efficient?  :confused:</description>
    
    <lastBuildDate>Sat, 29 Dec 2012 21:19:09 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/is-this-efficient/475520.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Is this efficient?</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>[quote=“sinisoul, post:15, topic:475520”][quote author=zyle1992 link=topic=593636.msg4188081#msg4188081 date=1356470486]</p>
<aside class="quote">
<blockquote>
<p>I need one way or another to indicate the specific player. So it doesn’t matter if I execute the event immediately or add it to the EventManager(which I do have). So I need to indicate that I want that specific playe’r sinventory. The same player to whom the skills belong. So it goes without<br>
saying I will need at least one way to identify that player ^^</p>
<p>I’m not sure about my EventManager; there’s about 2 points in it’s logic that could cause trouble:</p>
<p>[code=java]package org.runescape.events;</p>
<p>import java.util.ArrayList;<br>
import java.util.List;</p>
<p>public class EventManager {</p>
<pre><code>/**
 * List of all the events we have to process.
 */
private static List&lt;EventContainer&gt; events;

/**
 * The state of the EventManager.
 * If this is set to active then the ticker shall instruct this class to perform the events.
 */
private static boolean active = false; 

/**
 * Indicates whether or not you want to see how many events have been processed over what time.
 */
private static boolean debug = true;

/**
 * Constructs the list containing the tasks.
 * May be neccesary for future improvements.
 */
public static void initialize() {
	events = new ArrayList&lt;EventContainer&gt;();
}

public static void performEvents() {
	//these 2 values are used for debugging
	long flag = System.currentTimeMillis();
	int processed = 0;
	for (;;) {
		if (events.size() &gt; 0) {
			if (events.get(0) != null) {
				events.get(0).getEvent().perform();
				events.remove(0);
				processed++;
			} else {
				break; //im not quite so sure about this break statement...chances are it shouldnt be here.
			}
		} else {
			break;
		}
	}
	if (debug) {
		long elapsed = System.currentTimeMillis()-flag;
		System.out.println("Performed "+processed+" events over "+elapsed+" milliseconds.");
	}
	//its possible that new events have been added to the list, so we perform a final check.
	if (events.size() &lt;= 0) {
		setActive(false);
	} else if (events.size() &gt; 0) {
		//perform the newly added events.
		setActive(true);
		performEvents();
	}
}

public static void add(EventContainer event) {
	events.add(event);
	setActive(true);
}

public static void setActive(boolean state) {
	active = state;
}

public static boolean isActive() {
	return active;
}

public static boolean getDebugState() {
	return debug;
}

public static void setDebugState(boolean debug) {
	EventManager.debug = debug;
}
</code></pre>
<p>}<br>
[/code]</p>
</blockquote>
</aside>
<p>All you would need is something like</p>
<pre><code class="lang-auto">public class SkillLevelChangeEvent extends EventContainer {

    public SkillLevelChangeEvent(final Player player, final ItemContainer container) {
        // null check
        this.player = player;
        this.container = container;
    }

    public void perform() {
        inventory.addItem(item, amount);
        sendMessage(player, "For reaching level 50 in blah, here ya go");
    }

    private final Player player;
    private final ItemContainer inventory;
}</code></pre>
<p>[/quote]</p>
<aside class="quote">
<blockquote>
<p>SkillLevelChangeEvent extends EventContainer</p>
</blockquote>
</aside>
<p>Wat</p>
<p>Listener pattern would be better for this.[/quote]</p>
<p>Poor naming, yes. I don’t know the API, so I was going off what I could see in the code provided.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/is-this-efficient/475520/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/is-this-efficient/475520/17</link>
        <pubDate>Sat, 29 Dec 2012 21:19:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-475520-17</guid>
        <source url="https://forum.moparisthebest.com/t/is-this-efficient/475520.rss">Is this efficient?</source>
      </item>
      <item>
        <title>Is this efficient?</title>
        <dc:creator><![CDATA[@HcoJustin HcoJustin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hcojustin">@HcoJustin</a> wrote:</p>
          <blockquote>
              <p>[quote=“sinisoul, post:15, topic:475520”]Wat</p>
<p>Listener pattern would be better for this.[/quote]</p>
<p>It probably is the listener pattern, firing off a change event every time needed… The naming is poor but I don’t see any signs that this represents a repeating task</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/is-this-efficient/475520/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/is-this-efficient/475520/16</link>
        <pubDate>Fri, 28 Dec 2012 13:07:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-475520-16</guid>
        <source url="https://forum.moparisthebest.com/t/is-this-efficient/475520.rss">Is this efficient?</source>
      </item>
      <item>
        <title>Is this efficient?</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>[quote=“zyle1992, post:14, topic:475520”][quote author=Cres link=topic=593636.msg4187898#msg4187898 date=1356441184]<br>
I need one way or another to indicate the specific player. So it doesn’t matter if I execute the event immediately or add it to the EventManager(which I do have). So I need to indicate that I want that specific playe’r sinventory. The same player to whom the skills belong. So it goes without<br>
saying I will need at least one way to identify that player ^^</p>
<p>I’m not sure about my EventManager; there’s about 2 points in it’s logic that could cause trouble:</p>
<p>[code=java]package org.runescape.events;</p>
<p>import java.util.ArrayList;<br>
import java.util.List;</p>
<p>public class EventManager {</p>
<pre><code>/**
 * List of all the events we have to process.
 */
private static List&lt;EventContainer&gt; events;

/**
 * The state of the EventManager.
 * If this is set to active then the ticker shall instruct this class to perform the events.
 */
private static boolean active = false; 

/**
 * Indicates whether or not you want to see how many events have been processed over what time.
 */
private static boolean debug = true;

/**
 * Constructs the list containing the tasks.
 * May be neccesary for future improvements.
 */
public static void initialize() {
	events = new ArrayList&lt;EventContainer&gt;();
}

public static void performEvents() {
	//these 2 values are used for debugging
	long flag = System.currentTimeMillis();
	int processed = 0;
	for (;;) {
		if (events.size() &gt; 0) {
			if (events.get(0) != null) {
				events.get(0).getEvent().perform();
				events.remove(0);
				processed++;
			} else {
				break; //im not quite so sure about this break statement...chances are it shouldnt be here.
			}
		} else {
			break;
		}
	}
	if (debug) {
		long elapsed = System.currentTimeMillis()-flag;
		System.out.println("Performed "+processed+" events over "+elapsed+" milliseconds.");
	}
	//its possible that new events have been added to the list, so we perform a final check.
	if (events.size() &lt;= 0) {
		setActive(false);
	} else if (events.size() &gt; 0) {
		//perform the newly added events.
		setActive(true);
		performEvents();
	}
}

public static void add(EventContainer event) {
	events.add(event);
	setActive(true);
}

public static void setActive(boolean state) {
	active = state;
}

public static boolean isActive() {
	return active;
}

public static boolean getDebugState() {
	return debug;
}

public static void setDebugState(boolean debug) {
	EventManager.debug = debug;
}
</code></pre>
<p>}<br>
[/code]<br>
[/quote]</p>
<p>All you would need is something like</p>
<p>[code=Java]<br>
public class SkillLevelChangeEvent extends EventContainer {</p>
<pre><code>public SkillLevelChangeEvent(final Player player, final ItemContainer container) {
    // null check
    this.player = player;
    this.container = container;
}

public void perform() {
    inventory.addItem(item, amount);
    sendMessage(player, "For reaching level 50 in blah, here ya go");
}

private final Player player;
private final ItemContainer inventory;
</code></pre>
<p>}<br>
[/code][/quote]</p>
<blockquote>SkillLevelChangeEvent extends EventContainer</blockquote>
<p>Wat</p>
<p>Listener pattern would be better for this.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/is-this-efficient/475520/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/is-this-efficient/475520/15</link>
        <pubDate>Fri, 28 Dec 2012 05:34:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-475520-15</guid>
        <source url="https://forum.moparisthebest.com/t/is-this-efficient/475520.rss">Is this efficient?</source>
      </item>
      <item>
        <title>Is this efficient?</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>[quote=“Cres, post:11, topic:475520”]I need one way or another to indicate the specific player. So it doesn’t matter if I execute the event immediately or add it to the EventManager(which I do have). So I need to indicate that I want that specific playe’r sinventory. The same player to whom the skills belong. So it goes without<br>
saying I will need at least one way to identify that player ^^</p>
<p>I’m not sure about my EventManager; there’s about 2 points in it’s logic that could cause trouble:</p>
<p>[code=java]package org.runescape.events;</p>
<p>import java.util.ArrayList;<br>
import java.util.List;</p>
<p>public class EventManager {</p>
<pre><code>/**
 * List of all the events we have to process.
 */
private static List&lt;EventContainer&gt; events;

/**
 * The state of the EventManager.
 * If this is set to active then the ticker shall instruct this class to perform the events.
 */
private static boolean active = false; 

/**
 * Indicates whether or not you want to see how many events have been processed over what time.
 */
private static boolean debug = true;

/**
 * Constructs the list containing the tasks.
 * May be neccesary for future improvements.
 */
public static void initialize() {
	events = new ArrayList&lt;EventContainer&gt;();
}

public static void performEvents() {
	//these 2 values are used for debugging
	long flag = System.currentTimeMillis();
	int processed = 0;
	for (;;) {
		if (events.size() &gt; 0) {
			if (events.get(0) != null) {
				events.get(0).getEvent().perform();
				events.remove(0);
				processed++;
			} else {
				break; //im not quite so sure about this break statement...chances are it shouldnt be here.
			}
		} else {
			break;
		}
	}
	if (debug) {
		long elapsed = System.currentTimeMillis()-flag;
		System.out.println("Performed "+processed+" events over "+elapsed+" milliseconds.");
	}
	//its possible that new events have been added to the list, so we perform a final check.
	if (events.size() &lt;= 0) {
		setActive(false);
	} else if (events.size() &gt; 0) {
		//perform the newly added events.
		setActive(true);
		performEvents();
	}
}

public static void add(EventContainer event) {
	events.add(event);
	setActive(true);
}

public static void setActive(boolean state) {
	active = state;
}

public static boolean isActive() {
	return active;
}

public static boolean getDebugState() {
	return debug;
}

public static void setDebugState(boolean debug) {
	EventManager.debug = debug;
}
</code></pre>
<p>}<br>
[/code][/quote]</p>
<p>All you would need is something like</p>
<pre><code class="lang-auto">public class SkillLevelChangeEvent extends EventContainer {

    public SkillLevelChangeEvent(final Player player, final ItemContainer container) {
        // null check
        this.player = player;
        this.container = container;
    }

    public void perform() {
        inventory.addItem(item, amount);
        sendMessage(player, "For reaching level 50 in blah, here ya go");
    }

    private final Player player;
    private final ItemContainer inventory;
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/is-this-efficient/475520/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/is-this-efficient/475520/14</link>
        <pubDate>Tue, 25 Dec 2012 21:21:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-475520-14</guid>
        <source url="https://forum.moparisthebest.com/t/is-this-efficient/475520.rss">Is this efficient?</source>
      </item>
      <item>
        <title>Is this efficient?</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>[quote=“HcoJustin, post:12, topic:475520”]<code>inventory.addListener(new ContainerListener() {
    @Override
    public void onItemAdd(Item item, boolean successful) {
        if(!successful)
            player.getActionSender().sendMessage("make more space bla bla bla!");
        else
            player.getActionSender().sendInventoryRefresh();
    }
});
</code>[/quote]</p>
<p>^ This is beautiful.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/is-this-efficient/475520/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/is-this-efficient/475520/13</link>
        <pubDate>Tue, 25 Dec 2012 20:03:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-475520-13</guid>
        <source url="https://forum.moparisthebest.com/t/is-this-efficient/475520.rss">Is this efficient?</source>
      </item>
      <item>
        <title>Is this efficient?</title>
        <dc:creator><![CDATA[@HcoJustin HcoJustin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hcojustin">@HcoJustin</a> wrote:</p>
          <blockquote>
              <p><code>inventory.addListener(new ContainerListener() {
    @Override
    public void onItemAdd(Item item, boolean successful) {
        if(!successful)
            player.getActionSender().sendMessage("make more space bla bla bla!");
        else
            player.getActionSender().sendInventoryRefresh();
    }
});
</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/is-this-efficient/475520/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/is-this-efficient/475520/12</link>
        <pubDate>Tue, 25 Dec 2012 18:08:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-475520-12</guid>
        <source url="https://forum.moparisthebest.com/t/is-this-efficient/475520.rss">Is this efficient?</source>
      </item>
      <item>
        <title>Is this efficient?</title>
        <dc:creator><![CDATA[@Cres Cres]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cres">@Cres</a> wrote:</p>
          <blockquote>
              <p>I need one way or another to indicate the specific player. So it doesn’t matter if I execute the event immediately or add it to the EventManager(which I do have). So I need to indicate that I want that specific playe’r sinventory. The same player to whom the skills belong. So it goes without<br>
saying I will need at least one way to identify that player ^^</p>
<p>I’m not sure about my EventManager; there’s about 2 points in it’s logic that could cause trouble:</p>
<p>[code=java]package org.runescape.events;</p>
<p>import java.util.ArrayList;<br>
import java.util.List;</p>
<p>public class EventManager {</p>
<pre><code>/**
 * List of all the events we have to process.
 */
private static List&lt;EventContainer&gt; events;

/**
 * The state of the EventManager.
 * If this is set to active then the ticker shall instruct this class to perform the events.
 */
private static boolean active = false; 

/**
 * Indicates whether or not you want to see how many events have been processed over what time.
 */
private static boolean debug = true;

/**
 * Constructs the list containing the tasks.
 * May be neccesary for future improvements.
 */
public static void initialize() {
	events = new ArrayList&lt;EventContainer&gt;();
}

public static void performEvents() {
	//these 2 values are used for debugging
	long flag = System.currentTimeMillis();
	int processed = 0;
	for (;;) {
		if (events.size() &gt; 0) {
			if (events.get(0) != null) {
				events.get(0).getEvent().perform();
				events.remove(0);
				processed++;
			} else {
				break; //im not quite so sure about this break statement...chances are it shouldnt be here.
			}
		} else {
			break;
		}
	}
	if (debug) {
		long elapsed = System.currentTimeMillis()-flag;
		System.out.println("Performed "+processed+" events over "+elapsed+" milliseconds.");
	}
	//its possible that new events have been added to the list, so we perform a final check.
	if (events.size() &lt;= 0) {
		setActive(false);
	} else if (events.size() &gt; 0) {
		//perform the newly added events.
		setActive(true);
		performEvents();
	}
}

public static void add(EventContainer event) {
	events.add(event);
	setActive(true);
}

public static void setActive(boolean state) {
	active = state;
}

public static boolean isActive() {
	return active;
}

public static boolean getDebugState() {
	return debug;
}

public static void setDebugState(boolean debug) {
	EventManager.debug = debug;
}
</code></pre>
<p>}<br>
[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/is-this-efficient/475520/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/is-this-efficient/475520/11</link>
        <pubDate>Tue, 25 Dec 2012 13:13:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-475520-11</guid>
        <source url="https://forum.moparisthebest.com/t/is-this-efficient/475520.rss">Is this efficient?</source>
      </item>
      <item>
        <title>Is this efficient?</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <p>[quote=“zyle1992, post:8, topic:475520”][quote author=iKilem link=topic=593636.msg4187557#msg4187557 date=1356381965]<br>
Object references don’t consume as much memory as you think. At least with HotSpot VMs, the size of an object pointer is the same as a native pointer (or less with 64-bit systems, if compressed oops are enabled). The increase in memory usage compared to using an integer, if any, will be negligible.</p>
<p>I don’t see why the Inventory class needs a Player instance, though.<br>
[/quote]</p>
<p>I believe it’s the wL established way of dealing with packets. Something like</p>
<p><code>
public void addItem(int item, int amount) {
    // ...
    player.sendMessage("you got some random item");
}
</code>[/quote]</p>
<p>Which is poor design, naturally. In terms of organizational structures, an inventory should only maintain a state of items for the player. That task alone has nothing to do with interacting with other states of the player. One should write some sort of event handler for when an item is added which then proceeds to send a message to the player upon receiving the item. Therefore, the inventory would fire an event when an item is added, as opposed to directly handling that particular instance.</p>
<p>The above is not refuting the concept of passing the player reference to an instance of the inventory object, etc.</p>
<p>Edit: I do want to say, though, that efficiency shouldn’t be a massive concern here. You first concern should be design. If you don’t implement design stupidly, then you really shouldn’t have an inefficient server. After you’re happy with your design, then you should start thinking about optimizing certain portions, but only if it needs it. Chances are, you’ll find that you won’t really need to with these servers, anyway.</p>
<p>Unless your goal is super efficiency, which is another situation altogether…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/is-this-efficient/475520/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/is-this-efficient/475520/10</link>
        <pubDate>Tue, 25 Dec 2012 05:34:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-475520-10</guid>
        <source url="https://forum.moparisthebest.com/t/is-this-efficient/475520.rss">Is this efficient?</source>
      </item>
      <item>
        <title>Is this efficient?</title>
        <dc:creator><![CDATA[@Cres Cres]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cres">@Cres</a> wrote:</p>
          <blockquote>
              <p>[quote=“iKilem, post:7, topic:475520”]Object references don’t consume as much memory as you think. At least with HotSpot VMs, the size of an object pointer is the same as a native pointer (or less with 64-bit systems, if compressed oops are enabled). The increase in memory usage compared to using an integer, if any, will be negligible.</p>
<p>I don’t see why the Inventory class needs a Player instance, though.[/quote]</p>
<p>Yeah maybe I picked the example wrong.<br>
Thanks for the information though ^^.<br>
Basically I needed this because I’m trying to split every aspect of a player up in objects.<br>
So it would be helpfull when you have several things like Prayer, Settings, Skills, Inventory, Contacts, etc…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/is-this-efficient/475520/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/is-this-efficient/475520/9</link>
        <pubDate>Mon, 24 Dec 2012 22:21:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-475520-9</guid>
        <source url="https://forum.moparisthebest.com/t/is-this-efficient/475520.rss">Is this efficient?</source>
      </item>
      <item>
        <title>Is this efficient?</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>[quote=“iKilem, post:7, topic:475520”]Object references don’t consume as much memory as you think. At least with HotSpot VMs, the size of an object pointer is the same as a native pointer (or less with 64-bit systems, if compressed oops are enabled). The increase in memory usage compared to using an integer, if any, will be negligible.</p>
<p>I don’t see why the Inventory class needs a Player instance, though.[/quote]</p>
<p>I believe it’s the wL established way of dealing with packets. Something like</p>
<pre><code class="lang-auto">public void addItem(int item, int amount) {
    // ...
    player.sendMessage("you got some random item");
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/is-this-efficient/475520/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/is-this-efficient/475520/8</link>
        <pubDate>Mon, 24 Dec 2012 21:22:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-475520-8</guid>
        <source url="https://forum.moparisthebest.com/t/is-this-efficient/475520.rss">Is this efficient?</source>
      </item>
      <item>
        <title>Is this efficient?</title>
        <dc:creator><![CDATA[@iKilem iKilem]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ikilem">@iKilem</a> wrote:</p>
          <blockquote>
              <p>Object references don’t consume as much memory as you think. At least with HotSpot VMs, the size of an object pointer is the same as a native pointer (or less with 64-bit systems, if compressed oops are enabled). The increase in memory usage compared to using an integer, if any, will be negligible.</p>
<p>I don’t see why the Inventory class needs a Player instance, though.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/is-this-efficient/475520/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/is-this-efficient/475520/7</link>
        <pubDate>Mon, 24 Dec 2012 20:46:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-475520-7</guid>
        <source url="https://forum.moparisthebest.com/t/is-this-efficient/475520.rss">Is this efficient?</source>
      </item>
      <item>
        <title>Is this efficient?</title>
        <dc:creator><![CDATA[@Cres Cres]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cres">@Cres</a> wrote:</p>
          <blockquote>
              <p>In both methods the Inventory and Skills objects are inside of the Player object.<br>
I just need to know what the best way is to let the Skills and the Inventory class interact with eachother.<br>
So I either construct them with the player’s ID and then use the static class PlayerManager to retrieve the player with that ID OR I construct the Skills and Inventory objects with the Player object itself.(of which I’m afraid that it will use more memory than it should)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/is-this-efficient/475520/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/is-this-efficient/475520/6</link>
        <pubDate>Mon, 24 Dec 2012 11:02:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-475520-6</guid>
        <source url="https://forum.moparisthebest.com/t/is-this-efficient/475520.rss">Is this efficient?</source>
      </item>
      <item>
        <title>Is this efficient?</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="4" data-topic="475520">
<div class="title">
<div class="quote-controls"></div>
 Miss Silabsoft:</div>
<blockquote>
<p>in my opinion a players inventory should be an object in the player considering the relationship.</p>
</blockquote>
</aside>
<p>It works best this way because then you can attach listeners to specific inventories and handle events easier <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/is-this-efficient/475520/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/is-this-efficient/475520/5</link>
        <pubDate>Sun, 23 Dec 2012 23:03:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-475520-5</guid>
        <source url="https://forum.moparisthebest.com/t/is-this-efficient/475520.rss">Is this efficient?</source>
      </item>
      <item>
        <title>Is this efficient?</title>
        <dc:creator><![CDATA[@silabsoft RuneAgent]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silabsoft">@silabsoft</a> wrote:</p>
          <blockquote>
              <p>in my opinion a players inventory should be an object in the player considering the relationship.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/is-this-efficient/475520/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/is-this-efficient/475520/4</link>
        <pubDate>Sun, 23 Dec 2012 23:01:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-475520-4</guid>
        <source url="https://forum.moparisthebest.com/t/is-this-efficient/475520.rss">Is this efficient?</source>
      </item>
      <item>
        <title>Is this efficient?</title>
        <dc:creator><![CDATA[@Cres Cres]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cres">@Cres</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="2" data-topic="475520">
<div class="title">
<div class="quote-controls"></div>
 Miss Silabsoft:</div>
<blockquote>
<p>I wouldn’t have your skills interact directly with the player inventory.</p>
</blockquote>
</aside>
<p>It’s only an example. I need a way for the classes to interact (directly) but I’m thinking that constructing the classes with the Player object will just take up more memory than it should…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/is-this-efficient/475520/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/is-this-efficient/475520/3</link>
        <pubDate>Sun, 23 Dec 2012 21:44:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-475520-3</guid>
        <source url="https://forum.moparisthebest.com/t/is-this-efficient/475520.rss">Is this efficient?</source>
      </item>
      <item>
        <title>Is this efficient?</title>
        <dc:creator><![CDATA[@silabsoft RuneAgent]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silabsoft">@silabsoft</a> wrote:</p>
          <blockquote>
              <p>I wouldn’t have your skills interact directly with the player inventory.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/is-this-efficient/475520/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/is-this-efficient/475520/2</link>
        <pubDate>Sun, 23 Dec 2012 21:40:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-475520-2</guid>
        <source url="https://forum.moparisthebest.com/t/is-this-efficient/475520.rss">Is this efficient?</source>
      </item>
      <item>
        <title>Is this efficient?</title>
        <dc:creator><![CDATA[@Cres Cres]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cres">@Cres</a> wrote:</p>
          <blockquote>
              <p>Alright, I have a Player class, an Inventory class and a Skills class.<br>
Both the Inventory and Skills class are fields inside the Player class.</p>
<p>Let’s say that when the Player achieves level 50 (which is an event encountered in the Skills class) he will receive an item (an action performed within the Inventory class).</p>
<p>I see 2 options to make this possible;<br>
(these are the constructors in the 2 classes)</p>
<p><code>
public Skills(Player player)
and
public Inventory(Player player)
uses
player.getInventory().addItem();</code></p>
<p>OR</p>
<p><code>
public Skills(int playerID)
and
public Inventory(int playerID)
uses
PlayerManager.getPlayer(playerID).getInventory().addItem();</code></p>
<p>Essentially I want to make a reference from the Skills class to the Inventory class.</p>
<p>Which one of these is the most efficient?  <img src="https://forum.moparisthebest.com/images/emoji/twitter/confused.png?v=5" title=":confused:" class="emoji" alt=":confused:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/is-this-efficient/475520/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/is-this-efficient/475520/1</link>
        <pubDate>Sun, 23 Dec 2012 21:17:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-475520-1</guid>
        <source url="https://forum.moparisthebest.com/t/is-this-efficient/475520.rss">Is this efficient?</source>
      </item>
  </channel>
</rss>
