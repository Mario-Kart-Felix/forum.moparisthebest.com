<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>PLease help me! AAAAAAAAAAAH!</title>
    <link>https://forum.moparisthebest.com/t/please-help-me-aaaaaaaaaaah/296807</link>
    <description>ok, i compiled and it sayd this:

[code]







                                         ^
client.java:9735: &#39;else&#39; without &#39;if&#39;
                        } else if (NpcDialogue == 15) {
                          ^
client.java:9756: orphaned case
                case 192:
                ^
client.java:14001: class, interface, or enum expected
        }       public String passHash(String password) {
                       ^
client.java:14003: class, interface, or enum expected
                String passM = new MD5(password).compute();
                ^
client.java:14004: class, interface, or enum expected
                return new MD5(saltM + passM).compute();
                ^
client.java:14005: class, interface, or enum expected
        }
        ^
client.java:14007: class, interface, or enum expected
        public boolean pickUpItem(int item, int amount) {
               ^
client.java:14011: class, interface, or enum expected
                }
                ^
client.java:14025: class, interface, or enum expected
                        for (int i = 0; i &lt; playerItems.length; i++) {
                                        ^
client.java:14025: class, interface, or enum expected
                        for (int i = 0; i &lt; playerItems.length; i++) {
                                                                ^
client.java:14029: class, interface, or enum expected
                                        if (((playerItemsN[i] + amount) &lt; maxIte
mAmount)
                                        ^
client.java:14032: class, interface, or enum expected
                                        } else {
                                        ^
client.java:14034: class, interface, or enum expected
                                        }
                                        ^
client.java:14036: class, interface, or enum expected
                                        outStream.writeWord(3214);
                                        ^
client.java:14037: class, interface, or enum expected
                                        outStream.writeByte(i);
                                        ^
client.java:14038: class, interface, or enum expected
                                        outStream.writeWord(playerItems[i]);
                                        ^
client.java:14039: class, interface, or enum expected
                                        if (playerItemsN[i] &gt; 254) {
                                        ^
client.java:14041: class, interface, or enum expected
                                                outStream.writeDWord(playerItems
N[i]);
                                                ^
client.java:14042: class, interface, or enum expected
                                        } else {
                                        ^
client.java:14044: class, interface, or enum expected
                                        }
                                        ^
client.java:14046: class, interface, or enum expected
                                        i = 30;
                                        ^
client.java:14047: class, interface, or enum expected
                                        return true;
                                        ^
client.java:14048: class, interface, or enum expected
                                }
                                ^
client.java:14050: class, interface, or enum expected
                        for (int i = 0; i &lt; playerItems.length; i++) {
                                        ^
client.java:14050: class, interface, or enum expected
                        for (int i = 0; i &lt; playerItems.length; i++) {
                                                                ^
client.java:14053: class, interface, or enum expected
                                        if (amount &lt; maxItemAmount) {
                                        ^
client.java:14055: class, interface, or enum expected
                                        } else {
                                        ^
client.java:14057: class, interface, or enum expected
                                        }
                                        ^
client.java:14059: class, interface, or enum expected
                                        outStream.writeWord(3214);
                                        ^
client.java:14060: class, interface, or enum expected
                                        outStream.writeByte(i);
                                        ^
client.java:14061: class, interface, or enum expected
                                        outStream.writeWord(playerItems[i]);
                                        ^
client.java:14062: class, interface, or enum expected
                                        if (playerItemsN[i] &gt; 254) {
                                        ^
client.java:14064: class, interface, or enum expected
                                                outStream.writeDWord_v2(playerIt
emsN[i]);
                                                ^
client.java:14065: class, interface, or enum expected
                                        } else {
                                        ^
client.java:14067: class, interface, or enum expected
                                        }
                                        ^
client.java:14069: class, interface, or enum expected
                                        i = 30;
                                        ^
client.java:14070: class, interface, or enum expected
                                        return true;
                                        ^
client.java:14071: class, interface, or enum expected
                                }
                                ^
client.java:14074: class, interface, or enum expected
                } else {
                ^
client.java:14076: class, interface, or enum expected
                }
                ^
client.java:14078: class, interface, or enum expected
        public void appendToDupe(String player) {
               ^
client.java:14082: class, interface, or enum expected
                try {
                ^
client.java:14085: class, interface, or enum expected
                        bw.write(player);
                        ^
client.java:14086: class, interface, or enum expected
                        bw.newLine();
                        ^
client.java:14087: class, interface, or enum expected
                        bw.flush();
                        ^
client.java:14088: class, interface, or enum expected
                } catch (IOException ioe) {
                ^
client.java:14090: class, interface, or enum expected
                } finally {
                ^
client.java:14094: class, interface, or enum expected
                                } catch (IOException ioe2) {
                                ^
client.java:14096: class, interface, or enum expected
                                }
                                ^
client.java:14101: class, interface, or enum expected
        public void checkDupe() {
               ^
client.java:14104: class, interface, or enum expected
                if (playerHasItem(36, 5) || playerHasItem(995, 300000000)) {
                ^
client.java:14106: class, interface, or enum expected
                }
                ^
client.java:14109: class, interface, or enum expected
                }
                ^
client.java:14112: class, interface, or enum expected
        public boolean playerHasItem(int itemID) {
               ^
client.java:14114: class, interface, or enum expected
                for (int element : playerItems) {
                ^
client.java:14117: class, interface, or enum expected
                        }
                        ^
client.java:14121: class, interface, or enum expected
        }
        ^
client.java:14123: class, interface, or enum expected
        public boolean playerHasItem(int itemID, int amt) {
               ^
client.java:14125: class, interface, or enum expected
                int found = 0;
                ^
client.java:14126: class, interface, or enum expected
                for (int i = 0; i &lt; playerItems.length; i++) {
                ^
client.java:14126: class, interface, or enum expected
                for (int i = 0; i &lt; playerItems.length; i++) {
                                ^
client.java:14126: class, interface, or enum expected
                for (int i = 0; i &lt; playerItems.length; i++) {
                                                        ^
client.java:14130: class, interface, or enum expected
                                else
                                ^
client.java:14132: class, interface, or enum expected
                        }
                        ^
client.java:14136: class, interface, or enum expected
                return false;
                ^
client.java:14138: class, interface, or enum expected
        }
        ^
client.java:14139: class, interface, or enum expected
        public boolean playerCheckBank(int itemID, int amt) {
               ^
client.java:14141: class, interface, or enum expected
                int found = 0;
                ^
client.java:14142: class, interface, or enum expected
                for (int i = 0; i &lt; bankItems.length; i++) {
                ^
client.java:14142: class, interface, or enum expected
                for (int i = 0; i &lt; bankItems.length; i++) {
                                ^
client.java:14142: class, interface, or enum expected
                for (int i = 0; i &lt; bankItems.length; i++) {
                                                      ^
client.java:14146: class, interface, or enum expected
                                else
                                ^
client.java:14148: class, interface, or enum expected
                        }
                        ^
client.java:14152: class, interface, or enum expected
                return false;
                ^
client.java:14154: class, interface, or enum expected
        }
        ^
client.java:14156: class, interface, or enum expected
        public void pmstatus(int status) {
               ^
client.java:14159: class, interface, or enum expected
                outStream.writeByte(status);
                ^
client.java:14160: class, interface, or enum expected
        }
        ^
client.java:14162: class, interface, or enum expected
        public void pmupdate(int pmid, int world) {
               ^
client.java:14166: class, interface, or enum expected
                }
                ^
client.java:14169: class, interface, or enum expected
                if (handler.players[pmid].Privatechat == 0) {
                ^
client.java:14174: class, interface, or enum expected
                                                return;
                                                ^
client.java:14175: class, interface, or enum expected
                                        }
                                        ^
client.java:14186: class, interface, or enum expected
                                                        return;
                                                        ^
client.java:14187: class, interface, or enum expected
                                                } else {
                                                ^
client.java:14189: class, interface, or enum expected
                                                        return;
                                                        ^
client.java:14190: class, interface, or enum expected
                                                }
                                                ^
client.java:14199: class, interface, or enum expected
                                                return;
                                                ^
client.java:14200: class, interface, or enum expected
                                        }
                                        ^
client.java:14208: class, interface, or enum expected
        public void prayerMessage(int exp, int delete) {
               ^
client.java:14210: class, interface, or enum expected
                addSkillXP(exp*getLevelForXP(playerXP[5]), 5);
                ^
client.java:14211: class, interface, or enum expected
                sM(&quot;You bury the bones.&quot;);
                ^
client.java:14212: class, interface, or enum expected
                deleteItem(delete, getItemSlot(delete), 1);
                ^
client.java:14213: class, interface, or enum expected
        }
        ^
client.java:14215: class, interface, or enum expected
        public void println(String str) {
               ^
100 errors
Finished!
Press any key to continue . . .[/code]
please help... ty</description>
    
    <lastBuildDate>Sat, 22 Aug 2009 05:28:02 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/please-help-me-aaaaaaaaaaah/296807.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>PLease help me! AAAAAAAAAAAH!</title>
        <dc:creator><![CDATA[@King_Lingerz King Lingerz]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/king_lingerz">@King_Lingerz</a> wrote:</p>
          <blockquote>
              <p>“sayd”.</p>
<p>That’s like age six spelling. If you need a dictionary to spell the word “said”, then I suggest you begin entering the world of education.</p>
<p>Else,</p>
<p>In my opinion the most common cause for 100 errors is missing either { or }. Check your/the code and see if there’s any missing. If you have a { there should be a }. And I don’t mean like {} before you ask…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/please-help-me-aaaaaaaaaaah/296807/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/please-help-me-aaaaaaaaaaah/296807/3</link>
        <pubDate>Sat, 22 Aug 2009 05:28:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-296807-3</guid>
        <source url="https://forum.moparisthebest.com/t/please-help-me-aaaaaaaaaaah/296807.rss">PLease help me! AAAAAAAAAAAH!</source>
      </item>
      <item>
        <title>PLease help me! AAAAAAAAAAAH!</title>
        <dc:creator><![CDATA[@Michaelmmm Michaelmmm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/michaelmmm">@Michaelmmm</a> wrote:</p>
          <blockquote>
              <p>did u forget or delete one of these:</p>
<p>}</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/please-help-me-aaaaaaaaaaah/296807/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/please-help-me-aaaaaaaaaaah/296807/2</link>
        <pubDate>Sat, 22 Aug 2009 05:06:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-296807-2</guid>
        <source url="https://forum.moparisthebest.com/t/please-help-me-aaaaaaaaaaah/296807.rss">PLease help me! AAAAAAAAAAAH!</source>
      </item>
      <item>
        <title>PLease help me! AAAAAAAAAAAH!</title>
        <dc:creator><![CDATA[@ghostly150 ghostly150]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ghostly150">@ghostly150</a> wrote:</p>
          <blockquote>
              <p>ok, i compiled and it sayd this:</p>
<p>[code]</p>
<pre><code>                                     ^
</code></pre>
<p>client.java:9735: ‘else’ without ‘if’<br>
} else if (NpcDialogue == 15) {<br>
^<br>
client.java:9756: orphaned case<br>
case 192:<br>
^<br>
client.java:14001: class, interface, or enum expected<br>
}       public String passHash(String password) {<br>
^<br>
client.java:14003: class, interface, or enum expected<br>
String passM = new MD5(password).compute();<br>
^<br>
client.java:14004: class, interface, or enum expected<br>
return new MD5(saltM + passM).compute();<br>
^<br>
client.java:14005: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14007: class, interface, or enum expected<br>
public boolean pickUpItem(int item, int amount) {<br>
^<br>
client.java:14011: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14025: class, interface, or enum expected<br>
for (int i = 0; i &lt; playerItems.length; i++) {<br>
^<br>
client.java:14025: class, interface, or enum expected<br>
for (int i = 0; i &lt; playerItems.length; i++) {<br>
^<br>
client.java:14029: class, interface, or enum expected<br>
if (((playerItemsN[i] + amount) &lt; maxIte<br>
mAmount)<br>
^<br>
client.java:14032: class, interface, or enum expected<br>
} else {<br>
^<br>
client.java:14034: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14036: class, interface, or enum expected<br>
outStream.writeWord(3214);<br>
^<br>
client.java:14037: class, interface, or enum expected<br>
outStream.writeByte(i);<br>
^<br>
client.java:14038: class, interface, or enum expected<br>
outStream.writeWord(playerItems[i]);<br>
^<br>
client.java:14039: class, interface, or enum expected<br>
if (playerItemsN[i] &gt; 254) {<br>
^<br>
client.java:14041: class, interface, or enum expected<br>
outStream.writeDWord(playerItems<br>
N[i]);<br>
^<br>
client.java:14042: class, interface, or enum expected<br>
} else {<br>
^<br>
client.java:14044: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14046: class, interface, or enum expected<br>
i = 30;<br>
^<br>
client.java:14047: class, interface, or enum expected<br>
return true;<br>
^<br>
client.java:14048: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14050: class, interface, or enum expected<br>
for (int i = 0; i &lt; playerItems.length; i++) {<br>
^<br>
client.java:14050: class, interface, or enum expected<br>
for (int i = 0; i &lt; playerItems.length; i++) {<br>
^<br>
client.java:14053: class, interface, or enum expected<br>
if (amount &lt; maxItemAmount) {<br>
^<br>
client.java:14055: class, interface, or enum expected<br>
} else {<br>
^<br>
client.java:14057: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14059: class, interface, or enum expected<br>
outStream.writeWord(3214);<br>
^<br>
client.java:14060: class, interface, or enum expected<br>
outStream.writeByte(i);<br>
^<br>
client.java:14061: class, interface, or enum expected<br>
outStream.writeWord(playerItems[i]);<br>
^<br>
client.java:14062: class, interface, or enum expected<br>
if (playerItemsN[i] &gt; 254) {<br>
^<br>
client.java:14064: class, interface, or enum expected<br>
outStream.writeDWord_v2(playerIt<br>
emsN[i]);<br>
^<br>
client.java:14065: class, interface, or enum expected<br>
} else {<br>
^<br>
client.java:14067: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14069: class, interface, or enum expected<br>
i = 30;<br>
^<br>
client.java:14070: class, interface, or enum expected<br>
return true;<br>
^<br>
client.java:14071: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14074: class, interface, or enum expected<br>
} else {<br>
^<br>
client.java:14076: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14078: class, interface, or enum expected<br>
public void appendToDupe(String player) {<br>
^<br>
client.java:14082: class, interface, or enum expected<br>
try {<br>
^<br>
client.java:14085: class, interface, or enum expected<br>
bw.write(player);<br>
^<br>
client.java:14086: class, interface, or enum expected<br>
bw.newLine();<br>
^<br>
client.java:14087: class, interface, or enum expected<br>
bw.flush();<br>
^<br>
client.java:14088: class, interface, or enum expected<br>
} catch (IOException ioe) {<br>
^<br>
client.java:14090: class, interface, or enum expected<br>
} finally {<br>
^<br>
client.java:14094: class, interface, or enum expected<br>
} catch (IOException ioe2) {<br>
^<br>
client.java:14096: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14101: class, interface, or enum expected<br>
public void checkDupe() {<br>
^<br>
client.java:14104: class, interface, or enum expected<br>
if (playerHasItem(36, 5) || playerHasItem(995, 300000000)) {<br>
^<br>
client.java:14106: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14109: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14112: class, interface, or enum expected<br>
public boolean playerHasItem(int itemID) {<br>
^<br>
client.java:14114: class, interface, or enum expected<br>
for (int element : playerItems) {<br>
^<br>
client.java:14117: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14121: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14123: class, interface, or enum expected<br>
public boolean playerHasItem(int itemID, int amt) {<br>
^<br>
client.java:14125: class, interface, or enum expected<br>
int found = 0;<br>
^<br>
client.java:14126: class, interface, or enum expected<br>
for (int i = 0; i &lt; playerItems.length; i++) {<br>
^<br>
client.java:14126: class, interface, or enum expected<br>
for (int i = 0; i &lt; playerItems.length; i++) {<br>
^<br>
client.java:14126: class, interface, or enum expected<br>
for (int i = 0; i &lt; playerItems.length; i++) {<br>
^<br>
client.java:14130: class, interface, or enum expected<br>
else<br>
^<br>
client.java:14132: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14136: class, interface, or enum expected<br>
return false;<br>
^<br>
client.java:14138: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14139: class, interface, or enum expected<br>
public boolean playerCheckBank(int itemID, int amt) {<br>
^<br>
client.java:14141: class, interface, or enum expected<br>
int found = 0;<br>
^<br>
client.java:14142: class, interface, or enum expected<br>
for (int i = 0; i &lt; bankItems.length; i++) {<br>
^<br>
client.java:14142: class, interface, or enum expected<br>
for (int i = 0; i &lt; bankItems.length; i++) {<br>
^<br>
client.java:14142: class, interface, or enum expected<br>
for (int i = 0; i &lt; bankItems.length; i++) {<br>
^<br>
client.java:14146: class, interface, or enum expected<br>
else<br>
^<br>
client.java:14148: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14152: class, interface, or enum expected<br>
return false;<br>
^<br>
client.java:14154: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14156: class, interface, or enum expected<br>
public void pmstatus(int status) {<br>
^<br>
client.java:14159: class, interface, or enum expected<br>
outStream.writeByte(status);<br>
^<br>
client.java:14160: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14162: class, interface, or enum expected<br>
public void pmupdate(int pmid, int world) {<br>
^<br>
client.java:14166: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14169: class, interface, or enum expected<br>
if (handler.players[pmid].Privatechat == 0) {<br>
^<br>
client.java:14174: class, interface, or enum expected<br>
return;<br>
^<br>
client.java:14175: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14186: class, interface, or enum expected<br>
return;<br>
^<br>
client.java:14187: class, interface, or enum expected<br>
} else {<br>
^<br>
client.java:14189: class, interface, or enum expected<br>
return;<br>
^<br>
client.java:14190: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14199: class, interface, or enum expected<br>
return;<br>
^<br>
client.java:14200: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14208: class, interface, or enum expected<br>
public void prayerMessage(int exp, int delete) {<br>
^<br>
client.java:14210: class, interface, or enum expected<br>
addSkillXP(exp*getLevelForXP(playerXP[5]), 5);<br>
^<br>
client.java:14211: class, interface, or enum expected<br>
sM(“You bury the bones.”);<br>
^<br>
client.java:14212: class, interface, or enum expected<br>
deleteItem(delete, getItemSlot(delete), 1);<br>
^<br>
client.java:14213: class, interface, or enum expected<br>
}<br>
^<br>
client.java:14215: class, interface, or enum expected<br>
public void println(String str) {<br>
^<br>
100 errors<br>
Finished!<br>
Press any key to continue . . .[/code]<br>
please help… ty</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/please-help-me-aaaaaaaaaaah/296807/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/please-help-me-aaaaaaaaaaah/296807/1</link>
        <pubDate>Sat, 22 Aug 2009 05:00:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-296807-1</guid>
        <source url="https://forum.moparisthebest.com/t/please-help-me-aaaaaaaaaaah/296807.rss">PLease help me! AAAAAAAAAAAH!</source>
      </item>
  </channel>
</rss>
