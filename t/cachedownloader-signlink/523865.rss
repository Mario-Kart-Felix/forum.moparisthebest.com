<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Cachedownloader/signlink</title>
    <link>https://forum.moparisthebest.com/t/cachedownloader-signlink/523865</link>
    <description>for some reason my cache doesnt auto download/download at all, i have added in the download link so that it downloads straight away.
could someone take a look at my cachedownloader.java please?

[code]import java.io.File;
import java.io.IOException;
import java.io.OutputStream;
import java.io.FileWriter;
import java.io.BufferedWriter;
import java.io.BufferedOutputStream;
import java.io.BufferedInputStream;
import java.io.FileOutputStream;
import java.io.FileInputStream;
import java.io.InputStream;
import java.net.URLConnection;
import java.net.URL;
import java.util.zip.ZipFile;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;
import java.util.Enumeration;
import sign.signlink;

public class CacheDownloader {

	private client client;
	private final int BUFFER = 1024;
	private final int VERSION = 1;
	private String cacheLink = &quot;dl.dropbox.com/s/3jrgslb58axbs2q/diversity_Cache.zip&quot;;
	private String fileToExtract = getCacheDir() + getArchivedName();

	public CacheDownloader(client client) {
		this.client = client;
	}

	private void drawLoadingText(String text) {
		client.drawLoadingText(35, text);
	}

	private void drawLoadingText(int amount, String text) {
		client.drawLoadingText(amount, text);
	}

	private String getCacheDir() {
		return signlink.findcachedir();
	}

	private String getCacheLink() {
		return cacheLink;
	}

	private int getCacheVersion() {
		return VERSION;
	}

	public CacheDownloader downloadCache() {
		try {
		File location = new File(getCacheDir());
		File version = new File(getCacheDir() + &quot;/cacheVersion&quot; + getCacheVersion() + &quot;.dat&quot;);
		if(!location.exists()) {
			downloadFile(getCacheLink(), getArchivedName());
			unZip();
			BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + &quot;/cacheVersion&quot; + getCacheVersion() + &quot;.dat&quot;));
			versionFile.close();
		} else {
			if(!version.exists()) {
				downloadFile(getCacheLink(), getArchivedName());
				unZip();
				BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + &quot;/cacheVersion&quot; + getCacheVersion() + &quot;.dat&quot;));
				versionFile.close();
			} else {
				return null;
			}
		}
		} catch(Exception e) {
		}
		return null;
	}
	
	private void downloadFile(String adress, String localFileName) {
		OutputStream out = null;
		URLConnection conn;
		InputStream in = null;
		try {
			URL url = new URL(adress);
			out = new BufferedOutputStream(new FileOutputStream(getCacheDir() + &quot;/&quot; +localFileName)); 
			conn = url.openConnection();
			in = conn.getInputStream(); 
			byte[] data = new byte[BUFFER]; 
			int numRead;
			long numWritten = 0;
			int length = conn.getContentLength();
			while((numRead = in.read(data)) != -1) {
				out.write(data, 0, numRead);
				numWritten += numRead;
            int percentage = (int)(((double)numWritten / (double)length) * 100D);
				drawLoadingText(percentage, &quot;Downloading Cache &quot; + percentage + &quot;%&quot;);
			}
			drawLoadingText(&quot;Finished downloading &quot;+getArchivedName()+&quot;!&quot;);
		} catch (Exception exception) {
			exception.printStackTrace();
		} finally {
			try {
				if (in != null) {
					in.close();
				}
				if (out != null) {
					out.close();
				}
			} catch (IOException ioe) {
			}
		}
	}

	private String getArchivedName() {
		int lastSlashIndex = getCacheLink().lastIndexOf(&#39;/&#39;);
		if (lastSlashIndex &gt;= 0 
			&amp;&amp; lastSlashIndex &lt; getCacheLink().length() -1) { 
			return getCacheLink().substring(lastSlashIndex + 1);
		} else {
		}
		return &quot;&quot;;
	}

	private void unZip() {

		try {
    		InputStream in = new BufferedInputStream(new FileInputStream(fileToExtract));
			ZipInputStream zin = new ZipInputStream(in);
			ZipEntry e;
			while((e=zin.getNextEntry()) != null) {
               	if(e.isDirectory()) {
					(new File(getCacheDir() + e.getName())).mkdir();
               	} else {
				if (e.getName().equals(fileToExtract)) {
					unzip(zin, fileToExtract);
					break;
				}
					unzip(zin, getCacheDir() + e.getName());
				}
			}
			zin.close();
		} catch(Exception e) {
			e.printStackTrace();
		}
	}

	private void unzip(ZipInputStream zin, String s) 
		throws IOException {
		FileOutputStream out = new FileOutputStream(s);
		byte [] b = new byte[BUFFER];
		int len = 0;
		while ((len = zin.read(b)) != -1) {
			out.write(b,0,len);
		}
		out.close();
	}
}[/code]

if someone could help me with this i would be so great full, thank you</description>
    
    <lastBuildDate>Fri, 05 Jul 2013 05:46:37 +0000</lastBuildDate>
    <category>Game Development</category>
    <atom:link href="https://forum.moparisthebest.com/t/cachedownloader-signlink/523865.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Cachedownloader/signlink</title>
        <dc:creator><![CDATA[@u_loose u loose]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/u_loose">@u_loose</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="523865">
<div class="title">
<div class="quote-controls"></div>
 i want fire:</div>
<blockquote>
<p>This might help you <a href="http://www.moparisthebest.com/smf/index.php?topic=517172.0" data-bbcode="true" rel="nofollow noopener">http://www.moparisthebest.com/smf/index.php?topic=517172.0</a></p>
</blockquote>
</aside>
<p>yeah ive already used an autocache downloader, same thing happens.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cachedownloader-signlink/523865/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cachedownloader-signlink/523865/3</link>
        <pubDate>Fri, 05 Jul 2013 05:46:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-523865-3</guid>
        <source url="https://forum.moparisthebest.com/t/cachedownloader-signlink/523865.rss">Cachedownloader/signlink</source>
      </item>
      <item>
        <title>Cachedownloader/signlink</title>
        <dc:creator><![CDATA[@i_want_fire i want fire]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/i_want_fire">@i_want_fire</a> wrote:</p>
          <blockquote>
              <p>This might help you <a href="http://www.moparisthebest.com/smf/index.php?topic=517172.0" data-bbcode="true" rel="nofollow noopener">http://www.moparisthebest.com/smf/index.php?topic=517172.0</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cachedownloader-signlink/523865/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cachedownloader-signlink/523865/2</link>
        <pubDate>Thu, 04 Jul 2013 19:28:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-523865-2</guid>
        <source url="https://forum.moparisthebest.com/t/cachedownloader-signlink/523865.rss">Cachedownloader/signlink</source>
      </item>
      <item>
        <title>Cachedownloader/signlink</title>
        <dc:creator><![CDATA[@u_loose u loose]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/u_loose">@u_loose</a> wrote:</p>
          <blockquote>
              <p>for some reason my cache doesnt auto download/download at all, i have added in the download link so that it downloads straight away.<br>
could someone take a look at my cachedownloader.java please?</p>
<p>[code]import java.io.File;<br>
import java.io.IOException;<br>
import java.io.OutputStream;<br>
import java.io.FileWriter;<br>
import java.io.BufferedWriter;<br>
import java.io.BufferedOutputStream;<br>
import java.io.BufferedInputStream;<br>
import java.io.FileOutputStream;<br>
import java.io.FileInputStream;<br>
import java.io.InputStream;<br>
import java.net.URLConnection;<br>
import java.net.URL;<br>
import java.util.zip.ZipFile;<br>
import java.util.zip.ZipEntry;<br>
import java.util.zip.ZipInputStream;<br>
import java.util.Enumeration;<br>
import sign.signlink;</p>
<p>public class CacheDownloader {</p>
<pre><code>private client client;
private final int BUFFER = 1024;
private final int VERSION = 1;
private String cacheLink = "dl.dropbox.com/s/3jrgslb58axbs2q/diversity_Cache.zip";
private String fileToExtract = getCacheDir() + getArchivedName();

public CacheDownloader(client client) {
	this.client = client;
}

private void drawLoadingText(String text) {
	client.drawLoadingText(35, text);
}

private void drawLoadingText(int amount, String text) {
	client.drawLoadingText(amount, text);
}

private String getCacheDir() {
	return signlink.findcachedir();
}

private String getCacheLink() {
	return cacheLink;
}

private int getCacheVersion() {
	return VERSION;
}

public CacheDownloader downloadCache() {
	try {
	File location = new File(getCacheDir());
	File version = new File(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat");
	if(!location.exists()) {
		downloadFile(getCacheLink(), getArchivedName());
		unZip();
		BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat"));
		versionFile.close();
	} else {
		if(!version.exists()) {
			downloadFile(getCacheLink(), getArchivedName());
			unZip();
			BufferedWriter versionFile = new BufferedWriter(new FileWriter(getCacheDir() + "/cacheVersion" + getCacheVersion() + ".dat"));
			versionFile.close();
		} else {
			return null;
		}
	}
	} catch(Exception e) {
	}
	return null;
}

private void downloadFile(String adress, String localFileName) {
	OutputStream out = null;
	URLConnection conn;
	InputStream in = null;
	try {
		URL url = new URL(adress);
		out = new BufferedOutputStream(new FileOutputStream(getCacheDir() + "/" +localFileName)); 
		conn = url.openConnection();
		in = conn.getInputStream(); 
		byte[] data = new byte[BUFFER]; 
		int numRead;
		long numWritten = 0;
		int length = conn.getContentLength();
		while((numRead = in.read(data)) != -1) {
			out.write(data, 0, numRead);
			numWritten += numRead;
        int percentage = (int)(((double)numWritten / (double)length) * 100D);
			drawLoadingText(percentage, "Downloading Cache " + percentage + "%");
		}
		drawLoadingText("Finished downloading "+getArchivedName()+"!");
	} catch (Exception exception) {
		exception.printStackTrace();
	} finally {
		try {
			if (in != null) {
				in.close();
			}
			if (out != null) {
				out.close();
			}
		} catch (IOException ioe) {
		}
	}
}

private String getArchivedName() {
	int lastSlashIndex = getCacheLink().lastIndexOf('/');
	if (lastSlashIndex &gt;= 0 
		&amp;&amp; lastSlashIndex &lt; getCacheLink().length() -1) { 
		return getCacheLink().substring(lastSlashIndex + 1);
	} else {
	}
	return "";
}

private void unZip() {

	try {
		InputStream in = new BufferedInputStream(new FileInputStream(fileToExtract));
		ZipInputStream zin = new ZipInputStream(in);
		ZipEntry e;
		while((e=zin.getNextEntry()) != null) {
           	if(e.isDirectory()) {
				(new File(getCacheDir() + e.getName())).mkdir();
           	} else {
			if (e.getName().equals(fileToExtract)) {
				unzip(zin, fileToExtract);
				break;
			}
				unzip(zin, getCacheDir() + e.getName());
			}
		}
		zin.close();
	} catch(Exception e) {
		e.printStackTrace();
	}
}

private void unzip(ZipInputStream zin, String s) 
	throws IOException {
	FileOutputStream out = new FileOutputStream(s);
	byte [] b = new byte[BUFFER];
	int len = 0;
	while ((len = zin.read(b)) != -1) {
		out.write(b,0,len);
	}
	out.close();
}
</code></pre>
<p>}[/code]</p>
<p>if someone could help me with this i would be so great full, thank you</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/cachedownloader-signlink/523865/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/cachedownloader-signlink/523865/1</link>
        <pubDate>Thu, 04 Jul 2013 05:52:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-523865-1</guid>
        <source url="https://forum.moparisthebest.com/t/cachedownloader-signlink/523865.rss">Cachedownloader/signlink</source>
      </item>
  </channel>
</rss>
