<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Smelting bug dun need coal</title>
    <link>https://forum.moparisthebest.com/t/smelting-bug-dun-need-coal/386283</link>
    <description>[code]package server.model.players.skills;

import server.Config;
import server.model.players.Client;
/**
 * Smithing.java
 *
 * @author Sanity
 *
 **/
 
public class Smithing {
   
   private Client c;
   private final int[] SMELT_BARS = {2349,2351,2355,2353,2357,2359,2361,2363};
   private final int[] SMELT_FRAME = {2405,2406,2407,2409,2410,2411,2412,2413};
   private final int[] BAR_REQS = {1,15,20,30,40,50,70,85};
   private final int[] ORE_1 = {438,440,-1,440,444,447,449,451};
   private final int[] ORE_2 = {436,-1,-1,453,453,453,453,453};
   private final int[] ORE_3 = {436,-1,-1,-1,-1,453,453,453};
   private final int[] ORE_4 = {436,-1,-1,-1,-1,-1,-1,453};
   private final int[] SMELT_EXP = {6,13,-1,18,23,30,38,50};
   public int item;
   public int xp;
   public int remove;
   public int removeamount;
   public int maketimes;
   private int exp;
   private int oreId;
   private int oreId2;
   private int oreId3;
   private int oreId4;
   private int barId;
   
   public Smithing(Client c) {
      this.c = c;
   }
   
   public void sendSmelting() {
      for (int j = 0; j &lt; SMELT_FRAME.length; j++) {
         c.getPA().sendFrame246(SMELT_FRAME[j], 150, SMELT_BARS[j]);
      }
      c.getPA().sendFrame164(2400);
      c.smeltInterface = true;   
   }
   
   public void startSmelting(int barType) {
      if (canSmelt(barType)) {
         //c.sendMessage(&quot;We canSmelt&quot;);
         if (hasOres(barType)) {
            //c.sendMessage(&quot;We have ores&quot;);
            this.exp = getExp(barType);
            this.oreId = getOre(barType);
            this.oreId2 = getOre2(barType);
            this.oreId3 = getOre2(barType);
            this.oreId4 = getOre2(barType);
            this.barId = barType;
            c.smeltAmount = c.getItems().getItemAmount(getOre(barType));
            smelt(barType);      
         } else {
            c.sendMessage(&quot;You do not have the required ores to smelt this.&quot;);
            c.getPA().resetVariables();
         }
      } else {
         c.sendMessage(&quot;You must have a higher smithing level to smith this.&quot;);
         c.getPA().resetVariables();
      }
   }
   
   public void smelt(int barType) {
      if (c.smeltAmount &gt; 0) {
         c.getPA().closeAllWindows();
         if (hasOres(barType)) {
            c.getItems().deleteItem(oreId, c.getItems().getItemSlot(oreId), 1);
            if (oreId2 &gt; 0)
               c.getItems().deleteItem(oreId2, c.getItems().getItemSlot(oreId2), 1);
            if (oreId3 &gt; 0)
               c.getItems().deleteItem(oreId3, c.getItems().getItemSlot
(oreId3),1);
            if (oreId4 &gt; 0)
               c.getItems().deleteItem(oreId3, c.getItems().getItemSlot
(oreId4),1);

            c.getItems().addItem(barId,1);
            c.getPA().addSkillXP(exp * Config.SMITHING_EXPERIENCE, c.playerSmithing);
            c.getPA().refreshSkill(c.playerSmithing);
            c.smeltAmount--;
            c.smeltTimer = 3;
         } else {
            c.sendMessage(&quot;You do not have the required ores to smelt this.&quot;);
            c.getPA().removeAllWindows();
         }
      } else {
         c.getPA().resetVariables();
      }
   }
   
   public int getExp(int barType) {
      for (int j = 0; j &lt; SMELT_BARS.length; j++) {
         if (barType == SMELT_BARS[j]) {
            return SMELT_EXP[j];
         }
      }
      return 0;   
   }
   
   public int getOre(int barType) {
      for (int j = 0; j &lt; SMELT_BARS.length; j++) {
         if (barType == SMELT_BARS[j]) {
            //c.sendMessage(&quot;&quot; + ORE_1[j]);
            return ORE_1[j];
         }
      }
      return 0;   
   }
   
   public int getOre2(int barType) {
      for (int j = 0; j &lt; SMELT_BARS.length; j++) {
         if (barType == SMELT_BARS[j]) {
            //c.sendMessage(&quot;&quot; + ORE_2[j]);
            return ORE_2[j];
         }
      }
      return 0;   
   }
   
   public boolean canSmelt(int barType) {
      for (int j = 0; j &lt; SMELT_BARS.length; j++) {
         if (barType == SMELT_BARS[j]) {
            //c.sendMessage(&quot;&quot; + c.playerLevel + &quot; bar: &quot; + BAR_REQS[j]);
            return c.playerLevel[c.playerSmithing] &gt;= BAR_REQS[j];
         }
      }
      return false;
   }
   
   public boolean hasOres(int barType) {
      if (getOre2(barType) &gt; 0)
         return c.getItems().playerHasItem(getOre(barType)) &amp;&amp; c.getItems().playerHasItem(getOre2(barType));
      else
         return c.getItems().playerHasItem(getOre(barType));
   }
   
   public void readInput(int level, String type, Client c, int amounttomake) {
      
      if (c.getItems().getItemName(Integer.parseInt(type)).contains(&quot;Bronze&quot;))
      {
         CheckBronze(c, level, amounttomake, type);
      }
      else if (c.getItems().getItemName(Integer.parseInt(type)).contains(&quot;Iron&quot;))
[/code]



this is my code... If I have 3 coal and 1 runite ore, it will take all of them to make a rune bar. Butif i only get 1 runite ore and coal in my inventary, I can also make rune bar...plz helppp
I have tried to code it but fail...</description>
    
    <lastBuildDate>Tue, 15 Mar 2011 01:52:14 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/smelting-bug-dun-need-coal/386283.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Smelting bug dun need coal</title>
        <dc:creator><![CDATA[@bloodmaniet bloodmaniet]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bloodmaniet">@bloodmaniet</a> wrote:</p>
          <blockquote>
              <p>[code]package server.model.players.skills;</p>
<p>import server.Config;<br>
import server.model.players.Client;<br>
/**</p>
<ul>
<li>Smithing.java</li>
<li>
</li>
<li>
<span class="mention">@author</span> Sanity</li>
<li>
</li>
</ul>
<p>**/</p>
<p>public class Smithing {</p>
<p>private Client c;<br>
private final int[] SMELT_BARS = {2349,2351,2355,2353,2357,2359,2361,2363};<br>
private final int[] SMELT_FRAME = {2405,2406,2407,2409,2410,2411,2412,2413};<br>
private final int[] BAR_REQS = {1,15,20,30,40,50,70,85};<br>
private final int[] ORE_1 = {438,440,-1,440,444,447,449,451};<br>
private final int[] ORE_2 = {436,-1,-1,453,453,453,453,453};<br>
private final int[] ORE_3 = {436,-1,-1,-1,453,453,453,453};<br>
private final int[] ORE_4 = {436,-1,-1,-1,453,453,453,453};<br>
private final int[] SMELT_EXP = {6,13,-1,18,23,30,38,50};<br>
public int item;<br>
public int xp;<br>
public int remove;<br>
public int removeamount;<br>
public int maketimes;<br>
private int exp;<br>
private int oreId;<br>
private int oreId2;<br>
private int oreId3;<br>
private int oreId4;<br>
private int barId;</p>
<p>public Smithing(Client c) {<br>
this.c = c;<br>
}</p>
<p>public void sendSmelting() {<br>
for (int j = 0; j &lt; SMELT_FRAME.length; j++) {<br>
c.getPA().sendFrame246(SMELT_FRAME[j], 150, SMELT_BARS[j]);<br>
}<br>
c.getPA().sendFrame164(2400);<br>
c.smeltInterface = true;<br>
}</p>
<p>public void startSmelting(int barType) {<br>
if (canSmelt(barType)) {<br>
<a href="//c.sendMessage" rel="nofollow noopener">//c.sendMessage</a>(“We canSmelt”);<br>
if (hasOres(barType)) {<br>
<a href="//c.sendMessage" rel="nofollow noopener">//c.sendMessage</a>(“We have ores”);<br>
this.exp = getExp(barType);<br>
this.oreId = getOre(barType);<br>
this.oreId2 = getOre2(barType);<br>
this.oreId3 = getOre2(barType);<br>
this.oreId4 = getOre2(barType);<br>
this.barId = barType;<br>
c.smeltAmount = c.getItems().getItemAmount(getOre(barType));<br>
smelt(barType);<br>
} else {<br>
c.sendMessage(“You do not have the required ores to smelt this.”);<br>
c.getPA().resetVariables();<br>
}<br>
} else {<br>
c.sendMessage(“You must have a higher smithing level to smith this.”);<br>
c.getPA().resetVariables();<br>
}<br>
}</p>
<p>public void smelt(int barType) {<br>
if (c.smeltAmount &gt; 0) {<br>
c.getPA().closeAllWindows();<br>
if (hasOres(barType)) {<br>
c.getItems().deleteItem(oreId, c.getItems().getItemSlot(oreId), 1);<br>
if (oreId2 &gt; 0)<br>
c.getItems().deleteItem(oreId2, c.getItems().getItemSlot(oreId2), 1);<br>
if (oreId3 &gt; 0)<br>
c.getItems().deleteItem(oreId3, c.getItems().getItemSlot<br>
(oreId3),1);<br>
if (oreId4 &gt; 0)<br>
c.getItems().deleteItem(oreId3, c.getItems().getItemSlot<br>
(oreId4),1);</p>
<pre><code>        c.getItems().addItem(barId,1);
        c.getPA().addSkillXP(exp * Config.SMITHING_EXPERIENCE, c.playerSmithing);
        c.getPA().refreshSkill(c.playerSmithing);
        c.smeltAmount--;
        c.smeltTimer = 3;
     } else {
        c.sendMessage("You do not have the required ores to smelt this.");
        c.getPA().removeAllWindows();
     }
  } else {
     c.getPA().resetVariables();
  }
</code></pre>
<p>}</p>
<p>public int getExp(int barType) {<br>
for (int j = 0; j &lt; SMELT_BARS.length; j++) {<br>
if (barType == SMELT_BARS[j]) {<br>
return SMELT_EXP[j];<br>
}<br>
}<br>
return 0;<br>
}</p>
<p>public int getOre(int barType) {<br>
for (int j = 0; j &lt; SMELT_BARS.length; j++) {<br>
if (barType == SMELT_BARS[j]) {<br>
<a href="//c.sendMessage" rel="nofollow noopener">//c.sendMessage</a>("" + ORE_1[j]);<br>
return ORE_1[j];<br>
}<br>
}<br>
return 0;<br>
}</p>
<p>public int getOre2(int barType) {<br>
for (int j = 0; j &lt; SMELT_BARS.length; j++) {<br>
if (barType == SMELT_BARS[j]) {<br>
<a href="//c.sendMessage" rel="nofollow noopener">//c.sendMessage</a>("" + ORE_2[j]);<br>
return ORE_2[j];<br>
}<br>
}<br>
return 0;<br>
}</p>
<p>public boolean canSmelt(int barType) {<br>
for (int j = 0; j &lt; SMELT_BARS.length; j++) {<br>
if (barType == SMELT_BARS[j]) {<br>
<a href="//c.sendMessage" rel="nofollow noopener">//c.sendMessage</a>("" + c.playerLevel + " bar: " + BAR_REQS[j]);<br>
return c.playerLevel[c.playerSmithing] &gt;= BAR_REQS[j];<br>
}<br>
}<br>
return false;<br>
}</p>
<p>public boolean hasOres(int barType) {<br>
if (getOre2(barType) &gt; 0)<br>
return c.getItems().playerHasItem(getOre(barType)) &amp;&amp; c.getItems().playerHasItem(getOre2(barType));<br>
else<br>
return c.getItems().playerHasItem(getOre(barType));<br>
}</p>
<p>public void readInput(int level, String type, Client c, int amounttomake) {</p>
<pre><code>  if (c.getItems().getItemName(Integer.parseInt(type)).contains("Bronze"))
  {
     CheckBronze(c, level, amounttomake, type);
  }
  else if (c.getItems().getItemName(Integer.parseInt(type)).contains("Iron"))
</code></pre>
<p>[/code]</p>
<p>Try that… i’m not sure if itll work just let me know.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/smelting-bug-dun-need-coal/386283/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/smelting-bug-dun-need-coal/386283/4</link>
        <pubDate>Tue, 15 Mar 2011 01:52:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-386283-4</guid>
        <source url="https://forum.moparisthebest.com/t/smelting-bug-dun-need-coal/386283.rss">Smelting bug dun need coal</source>
      </item>
      <item>
        <title>Smelting bug dun need coal</title>
        <dc:creator><![CDATA[@deathnote777 deathnote777]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/deathnote777">@deathnote777</a> wrote:</p>
          <blockquote>
              <p>449 :addy ore<br>
451 : runite ore<br>
440 : iron ore<br>
447 : mithril ore<br>
453 : coal</p>
<p>2351 :iron bar   -  1 iron ore<br>
2353 : steel bar   -   1 iron + 1 coal<br>
2359 : mithril bar  -  1 mithril ore + 2 coal<br>
2361 : addy bar  -  1 addy ore + 2 coal<br>
2363 : rune bar   -  1 runite ore + 3 coal</p>
<p>Plz help <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"> rep++</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/smelting-bug-dun-need-coal/386283/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/smelting-bug-dun-need-coal/386283/3</link>
        <pubDate>Mon, 14 Mar 2011 16:39:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-386283-3</guid>
        <source url="https://forum.moparisthebest.com/t/smelting-bug-dun-need-coal/386283.rss">Smelting bug dun need coal</source>
      </item>
      <item>
        <title>Smelting bug dun need coal</title>
        <dc:creator><![CDATA[@bloodmaniet bloodmaniet]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bloodmaniet">@bloodmaniet</a> wrote:</p>
          <blockquote>
              <p>i can help you out whats the coal ID and the Rune ore ID?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/smelting-bug-dun-need-coal/386283/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/smelting-bug-dun-need-coal/386283/2</link>
        <pubDate>Mon, 14 Mar 2011 16:32:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-386283-2</guid>
        <source url="https://forum.moparisthebest.com/t/smelting-bug-dun-need-coal/386283.rss">Smelting bug dun need coal</source>
      </item>
      <item>
        <title>Smelting bug dun need coal</title>
        <dc:creator><![CDATA[@deathnote777 deathnote777]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/deathnote777">@deathnote777</a> wrote:</p>
          <blockquote>
              <p>[code]package server.model.players.skills;</p>
<p>import server.Config;<br>
import server.model.players.Client;<br>
/**</p>
<ul>
<li>Smithing.java</li>
<li>
</li>
<li>
<span class="mention">@author</span> Sanity</li>
<li>
</li>
</ul>
<p>**/</p>
<p>public class Smithing {</p>
<p>private Client c;<br>
private final int[] SMELT_BARS = {2349,2351,2355,2353,2357,2359,2361,2363};<br>
private final int[] SMELT_FRAME = {2405,2406,2407,2409,2410,2411,2412,2413};<br>
private final int[] BAR_REQS = {1,15,20,30,40,50,70,85};<br>
private final int[] ORE_1 = {438,440,-1,440,444,447,449,451};<br>
private final int[] ORE_2 = {436,-1,-1,453,453,453,453,453};<br>
private final int[] ORE_3 = {436,-1,-1,-1,-1,453,453,453};<br>
private final int[] ORE_4 = {436,-1,-1,-1,-1,-1,-1,453};<br>
private final int[] SMELT_EXP = {6,13,-1,18,23,30,38,50};<br>
public int item;<br>
public int xp;<br>
public int remove;<br>
public int removeamount;<br>
public int maketimes;<br>
private int exp;<br>
private int oreId;<br>
private int oreId2;<br>
private int oreId3;<br>
private int oreId4;<br>
private int barId;</p>
<p>public Smithing(Client c) {<br>
this.c = c;<br>
}</p>
<p>public void sendSmelting() {<br>
for (int j = 0; j &lt; SMELT_FRAME.length; j++) {<br>
c.getPA().sendFrame246(SMELT_FRAME[j], 150, SMELT_BARS[j]);<br>
}<br>
c.getPA().sendFrame164(2400);<br>
c.smeltInterface = true;<br>
}</p>
<p>public void startSmelting(int barType) {<br>
if (canSmelt(barType)) {<br>
<a href="//c.sendMessage" rel="nofollow noopener">//c.sendMessage</a>(“We canSmelt”);<br>
if (hasOres(barType)) {<br>
<a href="//c.sendMessage" rel="nofollow noopener">//c.sendMessage</a>(“We have ores”);<br>
this.exp = getExp(barType);<br>
this.oreId = getOre(barType);<br>
this.oreId2 = getOre2(barType);<br>
this.oreId3 = getOre2(barType);<br>
this.oreId4 = getOre2(barType);<br>
this.barId = barType;<br>
c.smeltAmount = c.getItems().getItemAmount(getOre(barType));<br>
smelt(barType);<br>
} else {<br>
c.sendMessage(“You do not have the required ores to smelt this.”);<br>
c.getPA().resetVariables();<br>
}<br>
} else {<br>
c.sendMessage(“You must have a higher smithing level to smith this.”);<br>
c.getPA().resetVariables();<br>
}<br>
}</p>
<p>public void smelt(int barType) {<br>
if (c.smeltAmount &gt; 0) {<br>
c.getPA().closeAllWindows();<br>
if (hasOres(barType)) {<br>
c.getItems().deleteItem(oreId, c.getItems().getItemSlot(oreId), 1);<br>
if (oreId2 &gt; 0)<br>
c.getItems().deleteItem(oreId2, c.getItems().getItemSlot(oreId2), 1);<br>
if (oreId3 &gt; 0)<br>
c.getItems().deleteItem(oreId3, c.getItems().getItemSlot<br>
(oreId3),1);<br>
if (oreId4 &gt; 0)<br>
c.getItems().deleteItem(oreId3, c.getItems().getItemSlot<br>
(oreId4),1);</p>
<pre><code>        c.getItems().addItem(barId,1);
        c.getPA().addSkillXP(exp * Config.SMITHING_EXPERIENCE, c.playerSmithing);
        c.getPA().refreshSkill(c.playerSmithing);
        c.smeltAmount--;
        c.smeltTimer = 3;
     } else {
        c.sendMessage("You do not have the required ores to smelt this.");
        c.getPA().removeAllWindows();
     }
  } else {
     c.getPA().resetVariables();
  }
</code></pre>
<p>}</p>
<p>public int getExp(int barType) {<br>
for (int j = 0; j &lt; SMELT_BARS.length; j++) {<br>
if (barType == SMELT_BARS[j]) {<br>
return SMELT_EXP[j];<br>
}<br>
}<br>
return 0;<br>
}</p>
<p>public int getOre(int barType) {<br>
for (int j = 0; j &lt; SMELT_BARS.length; j++) {<br>
if (barType == SMELT_BARS[j]) {<br>
<a href="//c.sendMessage" rel="nofollow noopener">//c.sendMessage</a>("" + ORE_1[j]);<br>
return ORE_1[j];<br>
}<br>
}<br>
return 0;<br>
}</p>
<p>public int getOre2(int barType) {<br>
for (int j = 0; j &lt; SMELT_BARS.length; j++) {<br>
if (barType == SMELT_BARS[j]) {<br>
<a href="//c.sendMessage" rel="nofollow noopener">//c.sendMessage</a>("" + ORE_2[j]);<br>
return ORE_2[j];<br>
}<br>
}<br>
return 0;<br>
}</p>
<p>public boolean canSmelt(int barType) {<br>
for (int j = 0; j &lt; SMELT_BARS.length; j++) {<br>
if (barType == SMELT_BARS[j]) {<br>
<a href="//c.sendMessage" rel="nofollow noopener">//c.sendMessage</a>("" + c.playerLevel + " bar: " + BAR_REQS[j]);<br>
return c.playerLevel[c.playerSmithing] &gt;= BAR_REQS[j];<br>
}<br>
}<br>
return false;<br>
}</p>
<p>public boolean hasOres(int barType) {<br>
if (getOre2(barType) &gt; 0)<br>
return c.getItems().playerHasItem(getOre(barType)) &amp;&amp; c.getItems().playerHasItem(getOre2(barType));<br>
else<br>
return c.getItems().playerHasItem(getOre(barType));<br>
}</p>
<p>public void readInput(int level, String type, Client c, int amounttomake) {</p>
<pre><code>  if (c.getItems().getItemName(Integer.parseInt(type)).contains("Bronze"))
  {
     CheckBronze(c, level, amounttomake, type);
  }
  else if (c.getItems().getItemName(Integer.parseInt(type)).contains("Iron"))
</code></pre>
<p>[/code]</p>
<p>this is my code… If I have 3 coal and 1 runite ore, it will take all of them to make a rune bar. Butif i only get 1 runite ore and coal in my inventary, I can also make rune bar…plz helppp<br>
I have tried to code it but fail…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/smelting-bug-dun-need-coal/386283/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/smelting-bug-dun-need-coal/386283/1</link>
        <pubDate>Mon, 14 Mar 2011 16:09:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-386283-1</guid>
        <source url="https://forum.moparisthebest.com/t/smelting-bug-dun-need-coal/386283.rss">Smelting bug dun need coal</source>
      </item>
  </channel>
</rss>
