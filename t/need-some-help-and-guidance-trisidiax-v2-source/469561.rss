<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Need some help and guidance - TrisidiaX V2 Source</title>
    <link>https://forum.moparisthebest.com/t/need-some-help-and-guidance-trisidiax-v2-source/469561</link>
    <description>okay, ive been exploring and trying to figure out how to fix very small things and adding some things. and probably learn how to code.

there are bugs i found in this source like everytime you log out your recorded pvp points are resetted. i was wondering in what file would i be able to find and fix this problem? 

also ive found that the ladder to the KBD boss is glitched and cant be used to enter the boss like other servers. i was wondering how i could fix that? or wheres that located?

and the source has 4 different classes like soulsplit. easy, medium, hard and extreme. the xp multipliers are all the same as easy mode and i was wondering where id be able to fix the xp ratings?</description>
    
    <lastBuildDate>Fri, 23 Nov 2012 15:37:46 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/need-some-help-and-guidance-trisidiax-v2-source/469561.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Need some help and guidance - TrisidiaX V2 Source</title>
        <dc:creator><![CDATA[@Karma_K1 Karma_K]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/karma_k1">@Karma_K1</a> wrote:</p>
          <blockquote>
              <p>[code]package server.model.players;<br>
import java.io.BufferedReader;<br>
import java.io.BufferedWriter;<br>
import java.io.File;<br>
import java.io.FileNotFoundException;<br>
import java.io.FileReader;<br>
import java.io.FileWriter;<br>
import java.io.IOException;</p>
<p>import server.Server;<br>
import server.util.Misc;</p>
<p>public class PlayerSave<br>
{</p>
<pre><code>/**
*Loading
**/
public static int loadGame(Client p, String playerName, String playerPass) {
	String line = "";
	String token = "";
	String token2 = "";
	String[] token3 = new String[3];
	boolean EndOfFile = false;
	int ReadMode = 0;
	BufferedReader characterfile = null;
	boolean File1 = false;
	
	try {
		characterfile = new BufferedReader(new FileReader("./Data/characters/"+playerName+".txt"));
		File1 = true;
	} catch(FileNotFoundException fileex1) {
	}
	
	if (File1) {
		//new File ("./characters/"+playerName+".txt");
	} else {
		Misc.println(playerName+": character file not found.");
		p.newPlayer = false;
		return 0;
	}
	try {
		line = characterfile.readLine();
	} catch(IOException ioexception) {
		Misc.println(playerName+": error loading file.");
		return 3;
	}
	while(EndOfFile == false &amp;&amp; line != null) {
		line = line.trim();
		int spot = line.indexOf("=");
		if (spot &gt; -1) {
			token = line.substring(0, spot);
			token = token.trim();
			token2 = line.substring(spot + 1);
			token2 = token2.trim();
			token3 = token2.split("\t");
			switch (ReadMode) {
			case 1:
				 if (token.equals("character-password")) {
					if (playerPass.equalsIgnoreCase(token2) || Misc.basicEncrypt(playerPass).equals(token2)) {
						playerPass = token2;
					} else {
						return 3;
					}
				}
				break;
			case 2:
				if (token.equals("character-height")) {
					p.heightLevel = Integer.parseInt(token2);
				} else if (token.equals("character-posx")) {
					p.teleportToX = (Integer.parseInt(token2) &lt;= 0 ? 3210 : Integer.parseInt(token2));
				} else if (token.equals("character-posy")) {
					p.teleportToY = (Integer.parseInt(token2) &lt;= 0 ? 3424 : Integer.parseInt(token2));
				} else if (token.equals("character-rights")) {
					p.playerRights = Integer.parseInt(token2);
				} else if(token.equals("mute-end")) {
              p.muteEnd = Long.parseLong(token2);
			  } else if(token.equals("ban-start")) {
                 p.banStart = Long.parseLong(token2);
               } else if(token.equals("ban-end")) {
                 p.banEnd = Long.parseLong(token2);
            } else if (token.equals("SETHOMEX")) {
</code></pre>
<p>p.SETHOMEX = Integer.parseInt(token2);<br>
} else if (token.equals(“SETHOMEY”)) {<br>
p.SETHOMEY = Integer.parseInt(token2);<br>
} else if (token.equals(“easyMode”)) {<br>
p.easyMode = Boolean.parseBoolean(token2);<br>
} else if (token.equals(“mediumMode”)) {<br>
p.mediumMode = Boolean.parseBoolean(token2);<br>
} else if (token.equals(“hardMode”)) {<br>
p.hardMode = Boolean.parseBoolean(token2);<br>
} else if (token.equals(“extremeMode”)) {<br>
p.extremeMode = Boolean.parseBoolean(token2);<br>
} else if (token.equals(“finishTut”)) {<br>
p.finishedTut = Boolean.parseBoolean(token2);<br>
} else if (token.equals(“dungPoints”)) {<br>
p.dungPoints = Integer.parseInt(token2);<br>
} else if (token.equals(“Used-Puremaster”)) {<br>
p.pure = Integer.parseInt(token2);<br>
} else if (token.equals(“tutorial-progress”)) {<br>
p.tutorial = Integer.parseInt(token2);	<br>
} else if (token.equals(“MoneyOrb”)) {<br>
p.MoneyCash = Integer.parseInt(token2);<br>
} else if (token.equals(“skull-timer”)) {<br>
p.skullTimer = Integer.parseInt(token2);<br>
} else if (token.equals(“EP”)) {<br>
p.earningPotential = Integer.parseInt(token2);<br>
} else if (token.equals(“loyalty-rank”)) {<br>
p.loyaltyRank = Integer.parseInt(token2);<br>
} else if (token.equals(“snowOn”)) {<br>
p.snowOn = Integer.parseInt(token2);<br>
} else if (token.equals(“Donor-Points”)) {<br>
p.donorPoints = Integer.parseInt(token2);<br>
} else if (token.equals(“character-longsword”)) {<br>
p.vlsLeft = Integer.parseInt(token2);<br>
} else if (token.equals(“character-warhammer”)) {<br>
p.statLeft = Integer.parseInt(token2);<br>
} else if (token.equals(“character-spear”)) {<br>
p.vSpearLeft = Integer.parseInt(token2);<br>
} else if (token.equals(“character-chainbody”)) {<br>
p.vTopLeft = Integer.parseInt(token2);<br>
} else if (token.equals(“shopcollect”)) {<br>
p.playerCollect = Integer.parseInt(token2);<br>
} else if (token.equals(“character-chainskirt”)) {<br>
p.vLegsLeft = Integer.parseInt(token2);<br>
} else if (token.equals(“character-full helm”)) {<br>
p.sHelmLeft = Integer.parseInt(token2);<br>
} else if (token.equals(“character-platebody”)) {<br>
p.sTopLeft = Integer.parseInt(token2);<br>
} else if (token.equals(“character-platelegs”)) {<br>
p.sLegsLeft = Integer.parseInt(token2);<br>
} else if (token.equals(“character-hood”)) {<br>
p.zHoodLeft = Integer.parseInt(token2);<br>
} else if (token.equals(“character-staff”)) {<br>
p.zStaffLeft = Integer.parseInt(token2);<br>
} else if (token.equals(“character-robe top”)) {<br>
p.zTopLeft = Integer.parseInt(token2);<br>
} else if (token.equals(“character-robe bottom”)) {<br>
p.zBottomLeft = Integer.parseInt(token2);<br>
} else if (token.equals(“character-leather body”)) {<br>
p.mBodyLeft = Integer.parseInt(token2);<br>
} else if (token.equals(“character-chaps”)) {<br>
p.mChapsLeft = Integer.parseInt(token2);<br>
} else if (token.equals(“magic-book”)) {<br>
p.playerMagicBook = Integer.parseInt(token2);<br>
} else if (token.equals(“xpLock”)) {<br>
p.xpLock = Boolean.parseBoolean(token2);<br>
} else if (token.equals(“Jailed”)) {<br>
p.Jail = Boolean.parseBoolean(token2);<br>
} else if (token.equals(“Agrith”)) {<br>
p.Agrith = Boolean.parseBoolean(token2);<br>
} else if (token.equals(“degrade”)) {<br>
p.degradeTime = Integer.parseInt(token2);<br>
} else if (token.equals(“Flambeed”)) {<br>
p.Flambeed = Boolean.parseBoolean(token2);<br>
} else if (token.equals(“Karamel”)) {<br>
p.Karamel = Boolean.parseBoolean(token2);<br>
} else if (token.equals(“Dessourt”)) {<br>
p.Dessourt = Boolean.parseBoolean(token2);<br>
} else if (token.equals(“culin”)) {<br>
p.Culin = Boolean.parseBoolean(token2);		<br>
} else if (token.equals(“brother-info”)) {<br>
p.barrowsNpcs[Integer.parseInt(token3[0])][1] = Integer.parseInt(token3[1]);<br>
} else if (token.equals(“special-amount”)) {<br>
p.specAmount = Double.parseDouble(token2);	<br>
} else if (token.equals(“selected-coffin”)) {<br>
p.randomCoffin = Integer.parseInt(token2);	<br>
} else if (token.equals(“barrows-killcount”)) {<br>
p.pkPoints = Integer.parseInt(token2);							<br>
} else if (token.equals(“teleblock-length”)) {<br>
p.teleBlockDelay = System.currentTimeMillis();<br>
p.teleBlockLength = Integer.parseInt(token2);							<br>
} else if (token.equals(“pf-points”)) {<br>
p.pfPoints = Integer.parseInt(token2);	<br>
} else if (token.equals(“pc-points”)) {<br>
p.pcPoints = Integer.parseInt(token2);	<br>
} else if (token.equals(“killStreak”)) {<br>
p.killStreak = Integer.parseInt(token2);<br>
} else if (token.equals(“gwdelay”)) {<br>
p.gwdelay = Integer.parseInt(token2);<br>
} else if (token.equals(“summonSpec”)) {<br>
p.summonSpec = Integer.parseInt(token2);<br>
} else if (token.equals(“dungRest”)) {<br>
p.dungRest = Integer.parseInt(token2);<br>
} else if (token.equals(“Altar”)) {<br>
p.altarPrayed = Integer.parseInt(token2);<br>
} else if (token.equals(“Arma-KC”)) {<br>
p.Arma = Integer.parseInt(token2);	<br>
} else if (token.equals(“Band-KC”)) {<br>
p.Band = Integer.parseInt(token2);	<br>
} else if (token.equals(“Zammy-KC”)) {<br>
p.Zammy = Integer.parseInt(token2);	<br>
} else if (token.equals(“Sara-KC”)) {<br>
p.Sara = Integer.parseInt(token2);	<br>
} else if (token.equals(“pk-points”)) {<br>
p.pkPoints = Integer.parseInt(token2);	<br>
} else if (token.equals(“lvl-Points”)) {<br>
p.lvlPoints = Integer.parseInt(token2);<br>
} else if (token.equals(“Wheel”)) {<br>
p.Wheel = Integer.parseInt(token2);<br>
} else if (token.equals(“Donator-Points”)) {<br>
p.donorPoints = Integer.parseInt(token2);<br>
} else if (token.equals(“isDonator”)) {<br>
p.isDonator = Integer.parseInt(token2);<br>
} else if (token.equals(“donatorChest”)) {<br>
p.donatorChest = Integer.parseInt(token2);						<br>
} else if (token.equals(“slayerTask”)) {<br>
p.slayerTask = Integer.parseInt(token2);					<br>
} else if (token.equals(“taskAmount”)) {<br>
p.taskAmount = Integer.parseInt(token2);					<br>
} else if (token.equals(“magePoints”)) {<br>
p.magePoints = Integer.parseInt(token2);<br>
} else if (line.startsWith(“KC”)) {<br>
p.KC = Integer.parseInt(token2);<br>
} else if (line.startsWith(“DC”)) {<br>
p.DC = Integer.parseInt(token2);<br>
} else if (line.startsWith(“totalstored”)) {<br>
p.totalstored = Integer.parseInt(token2);<br>
} else if (token.equals(“autoRet”)) {<br>
p.autoRet = Integer.parseInt(token2);<br>
} else if (token.equals(“trade11”)) {<br>
p.trade11 = Integer.parseInt(token2);<br>
} else if (token.equals(“SpeDelay”)) {<br>
p.SpecialDelay = Integer.parseInt(token2);<br>
} else if (token.equals(“barrowskillcount”)) {<br>
p.barrowsKillCount = Integer.parseInt(token2);<br>
} else if (token.equals(“flagged”)) {<br>
p.accountFlagged = Boolean.parseBoolean(token2);<br>
} else if (token.equals(“Rules”)) {<br>
p.readRules = Boolean.parseBoolean(token2);<br>
} else if (token.equals(“isShopping”)) {<br>
p.isShopping = Boolean.parseBoolean(token2);<br>
} else if (token.equals(“SPoints”)) {<br>
p.SPoints = Integer.parseInt(token2);<br>
} else if (token.equals(“wave”)) {<br>
p.waveId = Integer.parseInt(token2);<br>
} else if (token.equals(“dfs-charges”)) {<br>
p.dfsCount = Integer.parseInt(token2);<br>
} else if (token.equals(“lastsummon”)) {<br>
p.lastsummon = Integer.parseInt(token2);</p>
<pre><code>				} else if (token.equals("summoningnpcid")) {
					p.summoningnpcid = Integer.parseInt(token2);

				} else if (token.equals("void")) {
					for (int j = 0; j &lt; token3.length; j++) {
						p.voidStatus[j] = Integer.parseInt(token3[j]);						
					}
				} else if (token.equals("fightMode")) {
					p.fightMode = Integer.parseInt(token2);
				
				} else if (token.equals("Black-marks")) {
					p.BlackMarks = Integer.parseInt(token2);
				}
				break;
			case 3:
				if (token.equals("character-equip")) {
					p.playerEquipment[Integer.parseInt(token3[0])] = Integer.parseInt(token3[1]);
					p.playerEquipmentN[Integer.parseInt(token3[0])] = Integer.parseInt(token3[2]);
				}
				break;
			case 4:
				if (token.equals("character-look")) {
					p.playerAppearance[Integer.parseInt(token3[0])] = Integer.parseInt(token3[1]);
				} 
				break;
			case 5:
				if (token.equals("character-skill")) {
					p.playerLevel[Integer.parseInt(token3[0])] = Integer.parseInt(token3[1]);
					p.playerXP[Integer.parseInt(token3[0])] = Integer.parseInt(token3[2]);
				}
				break;
			case 6:
				if (token.equals("character-item")) {
					p.playerItems[Integer.parseInt(token3[0])] = Integer.parseInt(token3[1]);
					p.playerItemsN[Integer.parseInt(token3[0])] = Integer.parseInt(token3[2]);
				}
				break;
			case 7:
				if (token.equals("character-bank")) {
					p.bankItems[Integer.parseInt(token3[0])] = Integer.parseInt(token3[1]);
					p.bankItemsN[Integer.parseInt(token3[0])] = Integer.parseInt(token3[2]);
				}
				break;
			case 8:
				 if (token.equals("character-friend")) {
					p.friends[Integer.parseInt(token3[0])] = Long.parseLong(token3[1]);
				} 
				break;
			case 9:
				/* if (token.equals("character-ignore")) {
					ignores[Integer.parseInt(token3[0])] = Long.parseLong(token3[1]);
				} */
				break;
			case 20:
				if (token.equals("stored")) {
					p.storeditems[Integer.parseInt(token3[0])] = Integer.parseInt(token3[1]);
				}
				break;

			case 21:
				 if (token.equals("occupy")) {
					p.occupied[Integer.parseInt(token3[0])] = Boolean.parseBoolean(token3[1]);
				} 
				break;
			case 10:
	if (token.equals("character-shop")) {
		p.playerShop[Integer.parseInt(token3[0])] = Integer.parseInt(token3[1]);
		p.playerShopP[Integer.parseInt(token3[0])] = Integer.parseInt(token3[2]);
		p.playerShopN[Integer.parseInt(token3[0])] = Integer.parseInt(token3[3]);
	} 
break;
			}
		} else {
			if (line.equals("[ACCOUNT]")) {		ReadMode = 1;
			} else if (line.equals("[CHARACTER]")) {	ReadMode = 2;
			} else if (line.equals("[EQUIPMENT]")) {	ReadMode = 3;
			} else if (line.equals("[LOOK]")) {		ReadMode = 4;
			} else if (line.equals("[SKILLS]")) {		ReadMode = 5;
			} else if (line.equals("[ITEMS]")) {		ReadMode = 6;
			} else if (line.equals("[BANK]")) {		ReadMode = 7;
			} else if (line.equals("[FRIENDS]")) {		ReadMode = 8;
			} else if (line.equals("[IGNORES]")) {		ReadMode = 9;
</code></pre>
<p>} else if (line.equals("[STORED]")) {		ReadMode = 20;<br>
} else if (line.equals("[OCCUPY]")) {		ReadMode = 21;<br>
} else if (line.equals("[SHOP]")) {		ReadMode = 10;<br>
} else if (line.equals("[EOF]")) {		try { characterfile.close(); } catch(IOException ioexception) { } return 1;<br>
}<br>
}<br>
try {<br>
line = characterfile.readLine();<br>
} catch(IOException ioexception1) { EndOfFile = true; }<br>
}<br>
try { characterfile.close(); } catch(IOException ioexception) { }<br>
return 13;<br>
}</p>
<pre><code>/**
*Saving
**/
public static boolean saveGame(Client p) {
	if(!p.saveFile || p.newPlayer || !p.saveCharacter) {
		//System.out.println("first");
		return false;
	}
	if(p.playerName == null || Server.playerHandler.players[p.playerId] == null) {
		//System.out.println("second");
		return false;
	}
	p.playerName = p.playerName2;
	int tbTime = (int)(p.teleBlockDelay - System.currentTimeMillis() + p.teleBlockLength);
	if(tbTime &gt; 300000 || tbTime &lt; 0){
		tbTime = 0;
	}
	
	BufferedWriter characterfile = null;
	try {
		characterfile = new BufferedWriter(new FileWriter("./Data/characters/"+p.playerName+".txt"));
		
		/*ACCOUNT*/
		characterfile.write("[ACCOUNT]", 0, 9);
		characterfile.newLine();
		characterfile.write("character-username = ", 0, 21);
		characterfile.write(p.playerName, 0, p.playerName.length());
		characterfile.newLine();
		characterfile.write("character-password = ", 0, 21);
		characterfile.write(p.playerPass, 0, p.playerPass.length());
		characterfile.newLine();
		characterfile.newLine();
		characterfile.write("snowOn = ", 0, 9);
                    characterfile.write(Integer.toString(p.snowOn), 0, Integer.toString(p.snowOn).length());
                    characterfile.newLine();
		characterfile.newLine();
		characterfile.newLine();
		
		/*CHARACTER*/
		characterfile.write("[CHARACTER]", 0, 11);
		characterfile.newLine();
		characterfile.newLine();
		characterfile.write("character-rights = ", 0, 19);
		characterfile.write(Integer.toString(p.playerRights), 0, Integer.toString(p.playerRights).length());
		characterfile.newLine();
		characterfile.write("MoneyOrb = ", 0, 11);
        characterfile.write(Integer.toString(p.MoneyCash), 0, Integer.toString(p.MoneyCash).length());
        characterfile.newLine();
		characterfile.write("mute-end = ", 0, 11);
        characterfile.write(Long.toString(p.muteEnd), 0, Long.toString(p.muteEnd).length());
        characterfile.newLine();
		characterfile.write("Black-marks = ", 0, 12);
		characterfile.write(Integer.toString(p.BlackMarks), 0, Integer.toString(p.BlackMarks).length());
		characterfile.newLine();
		characterfile.write("ban-start = ", 0, 12);
        characterfile.write(Long.toString(p.banStart), 0, Long.toString(p.banStart).length());
        characterfile.newLine();
		characterfile.write("ban-end = ", 0, 10);
        characterfile.write(Long.toString(p.banEnd), 0, Long.toString(p.banEnd).length());
        characterfile.newLine();
		characterfile.write("character-height = ", 0, 19);
		characterfile.write(Integer.toString(p.heightLevel), 0, Integer.toString(p.heightLevel).length());
		characterfile.newLine();
		characterfile.write("pf-points = ", 0, 12);
		characterfile.write(Integer.toString(p.pfPoints), 0, Integer.toString(p.pfPoints).length());
		characterfile.newLine();
		characterfile.write("character-posx = ", 0, 17);
		characterfile.write(Integer.toString(p.absX), 0, Integer.toString(p.absX).length());
		characterfile.newLine();
		characterfile.write("character-posy = ", 0, 17);
		characterfile.write(Integer.toString(p.absY), 0, Integer.toString(p.absY).length());
</code></pre>
<p>[/code]<br>
theres mroe but…i cant double post and i reached over 2000 characters</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/need-some-help-and-guidance-trisidiax-v2-source/469561/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/need-some-help-and-guidance-trisidiax-v2-source/469561/3</link>
        <pubDate>Fri, 23 Nov 2012 15:37:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-469561-3</guid>
        <source url="https://forum.moparisthebest.com/t/need-some-help-and-guidance-trisidiax-v2-source/469561.rss">Need some help and guidance - TrisidiaX V2 Source</source>
      </item>
      <item>
        <title>Need some help and guidance - TrisidiaX V2 Source</title>
        <dc:creator><![CDATA[@horses2007 horses2007]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/horses2007">@horses2007</a> wrote:</p>
          <blockquote>
              <p>please post your entire playersave.java for the pk points thing</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/need-some-help-and-guidance-trisidiax-v2-source/469561/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/need-some-help-and-guidance-trisidiax-v2-source/469561/2</link>
        <pubDate>Thu, 22 Nov 2012 23:57:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-469561-2</guid>
        <source url="https://forum.moparisthebest.com/t/need-some-help-and-guidance-trisidiax-v2-source/469561.rss">Need some help and guidance - TrisidiaX V2 Source</source>
      </item>
      <item>
        <title>Need some help and guidance - TrisidiaX V2 Source</title>
        <dc:creator><![CDATA[@Karma_K1 Karma_K]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/karma_k1">@Karma_K1</a> wrote:</p>
          <blockquote>
              <p>okay, ive been exploring and trying to figure out how to fix very small things and adding some things. and probably learn how to code.</p>
<p>there are bugs i found in this source like everytime you log out your recorded pvp points are resetted. i was wondering in what file would i be able to find and fix this problem?</p>
<p>also ive found that the ladder to the KBD boss is glitched and cant be used to enter the boss like other servers. i was wondering how i could fix that? or wheres that located?</p>
<p>and the source has 4 different classes like soulsplit. easy, medium, hard and extreme. the xp multipliers are all the same as easy mode and i was wondering where id be able to fix the xp ratings?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/need-some-help-and-guidance-trisidiax-v2-source/469561/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/need-some-help-and-guidance-trisidiax-v2-source/469561/1</link>
        <pubDate>Thu, 22 Nov 2012 23:11:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-469561-1</guid>
        <source url="https://forum.moparisthebest.com/t/need-some-help-and-guidance-trisidiax-v2-source/469561.rss">Need some help and guidance - TrisidiaX V2 Source</source>
      </item>
  </channel>
</rss>
