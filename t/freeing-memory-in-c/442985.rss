<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Freeing memory in C</title>
    <link>https://forum.moparisthebest.com/t/freeing-memory-in-c/442985</link>
    <description>aight so here&#39;s my situation. I have a scruct, which is using the malloc function to allocate memory. When using the free function, do I need to free all the components of the scruct, and then the struct itself. or can I just free the scruct?

[code=c]
void free_data(struct data* d)
{
	free(d);
}
[/code]

[code=c]
void free_data(struct data* d)
{
	free(d-&gt;some_data);
	free(d);
}
[/code]</description>
    
    <lastBuildDate>Mon, 23 Jul 2012 21:18:38 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/freeing-memory-in-c/442985.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Freeing memory in C</title>
        <dc:creator><![CDATA[@imthenull imthenull]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imthenull">@imthenull</a> wrote:</p>
          <blockquote>
              <p>Thanks, Touru, that helped a lot.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/freeing-memory-in-c/442985/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/freeing-memory-in-c/442985/7</link>
        <pubDate>Mon, 23 Jul 2012 21:18:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-442985-7</guid>
        <source url="https://forum.moparisthebest.com/t/freeing-memory-in-c/442985.rss">Freeing memory in C</source>
      </item>
      <item>
        <title>Freeing memory in C</title>
        <dc:creator><![CDATA[@Touru Touru]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/touru">@Touru</a> wrote:</p>
          <blockquote>
              <p>This depends on specifications of said struct.<br>
If it’s a struct with plain old data, such as integers, characters, arrays, then yes- free the memory like normal.</p>
<pre><code class="lang-auto">typedef struct
{
    int myint;
    char mychar;
    char mystring[32];
} Foo;

int main()
{
    Foo * myfoo= malloc(sizeof(Foo));
    free(myfoo); //safe
}
</code></pre>
<p>However, if you dynamically allocate memory in said struct, you must use initialization and deinitialization functions to free any memory within the struct. Freeing the struct will not free the memory it allocated, and will cause a memory leak if not handled properly.</p>
<p>Assume the Foo struct allocates memory.</p>
<pre><code class="lang-auto">
int main()
{
    Foo *myfoo= malloc(sizeof(Foo));
    Foo_init(myfoo); //Foo allocates resources
    ///code
    Foo_destroy(myfoo); //Foo releases resources
    free(myfoo); //release Foo
}
</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/freeing-memory-in-c/442985/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/freeing-memory-in-c/442985/6</link>
        <pubDate>Mon, 23 Jul 2012 19:39:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-442985-6</guid>
        <source url="https://forum.moparisthebest.com/t/freeing-memory-in-c/442985.rss">Freeing memory in C</source>
      </item>
      <item>
        <title>Freeing memory in C</title>
        <dc:creator><![CDATA[@imthenull imthenull]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imthenull">@imthenull</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="4" data-topic="442985">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/disorder/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Disorder:</div>
<blockquote>
<p>If your structs contain other structs I suggest creating alloc/free for each struct as if they were constructors and destructors.</p>
</blockquote>
</aside>
<p>Thanks for the advice.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/freeing-memory-in-c/442985/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/freeing-memory-in-c/442985/5</link>
        <pubDate>Wed, 06 Jun 2012 18:55:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-442985-5</guid>
        <source url="https://forum.moparisthebest.com/t/freeing-memory-in-c/442985.rss">Freeing memory in C</source>
      </item>
      <item>
        <title>Freeing memory in C</title>
        <dc:creator><![CDATA[@Disorder Disorder]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/disorder">@Disorder</a> wrote:</p>
          <blockquote>
              <p>If your structs contain other structs I suggest creating alloc/free for each struct as if they were constructors and destructors.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/freeing-memory-in-c/442985/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/freeing-memory-in-c/442985/4</link>
        <pubDate>Wed, 06 Jun 2012 17:27:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-442985-4</guid>
        <source url="https://forum.moparisthebest.com/t/freeing-memory-in-c/442985.rss">Freeing memory in C</source>
      </item>
      <item>
        <title>Freeing memory in C</title>
        <dc:creator><![CDATA[@imthenull imthenull]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imthenull">@imthenull</a> wrote:</p>
          <blockquote>
              <p>[quote=“Evil_, post:2, topic:442985”]if you allocated the data in the struct you need to free it, e.g:</p>
<p>[code]<br>
typedef struct {<br>
char* s;<br>
} wat;</p>
<p>wat* w = malloc(sizeof(wat));<br>
w.s = malloc(512);<br>
…<br>
free(w.s);<br>
free(w);<br>
[/code][/quote]<br>
Thank you :3</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/freeing-memory-in-c/442985/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/freeing-memory-in-c/442985/3</link>
        <pubDate>Wed, 23 May 2012 21:29:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-442985-3</guid>
        <source url="https://forum.moparisthebest.com/t/freeing-memory-in-c/442985.rss">Freeing memory in C</source>
      </item>
      <item>
        <title>Freeing memory in C</title>
        <dc:creator><![CDATA[@Evil1 Evil_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/evil1">@Evil1</a> wrote:</p>
          <blockquote>
              <p>if you allocated the data in the struct you need to free it, e.g:</p>
<pre><code class="lang-auto">typedef struct {
    char* s;
} wat;

wat* w = malloc(sizeof(wat));
w.s = malloc(512);
...
free(w.s);
free(w);</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/freeing-memory-in-c/442985/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/freeing-memory-in-c/442985/2</link>
        <pubDate>Wed, 23 May 2012 21:13:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-442985-2</guid>
        <source url="https://forum.moparisthebest.com/t/freeing-memory-in-c/442985.rss">Freeing memory in C</source>
      </item>
      <item>
        <title>Freeing memory in C</title>
        <dc:creator><![CDATA[@imthenull imthenull]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imthenull">@imthenull</a> wrote:</p>
          <blockquote>
              <p>aight so here’s my situation. I have a scruct, which is using the malloc function to allocate memory. When using the free function, do I need to free all the components of the scruct, and then the struct itself. or can I just free the scruct?</p>
<pre><code class="lang-auto">void free_data(struct data* d)
{
	free(d);
}</code></pre>
<pre><code class="lang-auto">void free_data(struct data* d)
{
	free(d-&gt;some_data);
	free(d);
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/freeing-memory-in-c/442985/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/freeing-memory-in-c/442985/1</link>
        <pubDate>Wed, 23 May 2012 18:59:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-442985-1</guid>
        <source url="https://forum.moparisthebest.com/t/freeing-memory-in-c/442985.rss">Freeing memory in C</source>
      </item>
  </channel>
</rss>
