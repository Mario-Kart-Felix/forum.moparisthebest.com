<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Freeing memory in C</title>
    <link>https://forum.moparisthebest.com/t/freeing-memory-in-c/442986</link>
    <description>aight so here&#39;s my situation. I have a scruct, which is using the malloc function to allocate memory. When using the free function, do I need to free all the components of the scruct, and then the struct itself. or can I just free the scruct?

[code=c]
void free_data(struct data* d)
{
	free(d);
}
[/code]

[code=c]
void free_data(struct data* d)
{
	free(d-&gt;some_data);
	free(d);
}
[/code]

I also posted this on moparisthebest, the reason i posted here as well is because sometimes mitb can be a little dead..</description>
    
    <lastBuildDate>Wed, 23 May 2012 19:48:20 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/freeing-memory-in-c/442986.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Freeing memory in C</title>
        <dc:creator><![CDATA[@imthenull imthenull]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imthenull">@imthenull</a> wrote:</p>
          <blockquote>
              <p>thanks.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/freeing-memory-in-c/442986/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/freeing-memory-in-c/442986/3</link>
        <pubDate>Wed, 23 May 2012 19:48:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-442986-3</guid>
        <source url="https://forum.moparisthebest.com/t/freeing-memory-in-c/442986.rss">Freeing memory in C</source>
      </item>
      <item>
        <title>Freeing memory in C</title>
        <dc:creator><![CDATA[@iKilem iKilem]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ikilem">@iKilem</a> wrote:</p>
          <blockquote>
              <p>If <span class="bbcode-i">some_data</span> is a pointer to allocated storage, then yes. For example:</p>
<pre><code class="lang-auto">struct data {
    char *some_data;
};
...
struct data *d = malloc(sizeof(struct data));
d-&gt;some_data = malloc(256);</code></pre>
<p>Otherwise, you don’t have to. The idea is that you free any pointer that points to allocated storage (provided they’re different).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/freeing-memory-in-c/442986/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/freeing-memory-in-c/442986/2</link>
        <pubDate>Wed, 23 May 2012 19:38:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-442986-2</guid>
        <source url="https://forum.moparisthebest.com/t/freeing-memory-in-c/442986.rss">Freeing memory in C</source>
      </item>
      <item>
        <title>Freeing memory in C</title>
        <dc:creator><![CDATA[@imthenull imthenull]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imthenull">@imthenull</a> wrote:</p>
          <blockquote>
              <p>aight so here’s my situation. I have a scruct, which is using the malloc function to allocate memory. When using the free function, do I need to free all the components of the scruct, and then the struct itself. or can I just free the scruct?</p>
<pre><code class="lang-auto">void free_data(struct data* d)
{
	free(d);
}</code></pre>
<pre><code class="lang-auto">void free_data(struct data* d)
{
	free(d-&gt;some_data);
	free(d);
}</code></pre>
<p>I also posted this on moparisthebest, the reason i posted here as well is because sometimes mitb can be a little dead…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/freeing-memory-in-c/442986/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/freeing-memory-in-c/442986/1</link>
        <pubDate>Wed, 23 May 2012 19:01:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-442986-1</guid>
        <source url="https://forum.moparisthebest.com/t/freeing-memory-in-c/442986.rss">Freeing memory in C</source>
      </item>
  </channel>
</rss>
