<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Java challenge</title>
    <link>https://forum.moparisthebest.com/t/java-challenge/459323</link>
    <description>[code=java]public final class Test {

  public static void main(final String[] argv) {
    System.out.print(Foo.foo());
  }
}
[/code]

Is it possible for the above to print &quot;256&quot;, given a class Foo as follows?

[code=java]
class Foo {

  static byte foo();
}
[/code]

edit: I think iKilem wins this for his brilliant solution.
[quote=&quot;iKilem&quot;]What are the restrictions? I mean, assuming you can only implement foo(), I could easily do:
[code=java]
static byte foo() {
    System.out.print(25);
    return 6;
}
[/code][/quote]</description>
    
    <lastBuildDate>Mon, 12 Aug 2013 18:55:18 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/java-challenge/459323.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Java challenge</title>
        <dc:creator><![CDATA[@imthenull imthenull]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imthenull">@imthenull</a> wrote:</p>
          <blockquote>
              <p>[quote=“veer, post:39, topic:459323”]so codeforfame are you still this dumb or did you learn something out of this?[/quote]Hi, friend.<br>
<em>waves</em></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-challenge/459323/41">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-challenge/459323/41</link>
        <pubDate>Mon, 12 Aug 2013 18:55:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459323-41</guid>
        <source url="https://forum.moparisthebest.com/t/java-challenge/459323.rss">Java challenge</source>
      </item>
      <item>
        <title>Java challenge</title>
        <dc:creator><![CDATA[@xx_matty_xx Justin Bieber]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xx_matty_xx">@xx_matty_xx</a> wrote:</p>
          <blockquote>
              <p>BLAH BLAH BLAH EVERYONE ELSE IS DUMB BECAUSE I KNOW WHAT TWO’S COMPLEMENT IS</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-challenge/459323/40">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-challenge/459323/40</link>
        <pubDate>Mon, 12 Aug 2013 06:18:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459323-40</guid>
        <source url="https://forum.moparisthebest.com/t/java-challenge/459323.rss">Java challenge</source>
      </item>
      <item>
        <title>Java challenge</title>
        <dc:creator><![CDATA[@slavemaster veer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/slavemaster">@slavemaster</a> wrote:</p>
          <blockquote>
              <p>so codeforfame are you still this dumb or did you learn something out of this?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-challenge/459323/39">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-challenge/459323/39</link>
        <pubDate>Mon, 12 Aug 2013 06:09:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459323-39</guid>
        <source url="https://forum.moparisthebest.com/t/java-challenge/459323.rss">Java challenge</source>
      </item>
      <item>
        <title>Java challenge</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>That’s enough, guys.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-challenge/459323/38">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-challenge/459323/38</link>
        <pubDate>Thu, 13 Sep 2012 23:41:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459323-38</guid>
        <source url="https://forum.moparisthebest.com/t/java-challenge/459323.rss">Java challenge</source>
      </item>
      <item>
        <title>Java challenge</title>
        <dc:creator><![CDATA[@CodeForFame CodeForFame]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/codeforfame">@CodeForFame</a> wrote:</p>
          <blockquote>
              <p>[quote=“veer, post:36, topic:459323”]Are you being a troll? This isn’t a semantics game, this is an attempt to help you understand.[/quote]You’re the one who wanted to play semantics… I’m just rolling with it.</p>
<p>[quote=“veer, post:36, topic:459323”]The contract is only guaranteed for Java API implementations, which necessarily means they abide by the specification. If they do not (i.e. breaking the legitimacy of the API by modifying what Integer.toString does) then there is <span class="bbcode-b">no</span> more contract according to the standard for your String.valueOf, because your modified API is not actually the Java API. The Java API specification does not concern whatever you’re describing because it’s not specification-abiding and therefore not a Java API implementation – it’s just very much like one.[/quote]By your logic, every time there is a bug that causes the contract to be broken then it is not the Java API. That is the most idiotic thing I’ve <span class="bbcode-b">ever</span> heard.</p>
<p>Furthermore, it doesn’t matter if you call it the Java API or something entirely different. All we’re talking about are the classes java.lang.Integer and java.lang.String.</p>
<p>And it’s not ‘just very much like one’, it’s still the Java API.</p>
<p>[quote=“veer, post:36, topic:459323”]Furhtermore, neither I nor my thread are concerned with whatever you’re describing, again, because it’s not a Java API. To put it straightforwardly, by modifying what <span class="bbcode-i">was</span> a Java API implementation to violate the specification means it then fails to qualify as a Java API implementation.[/quote]By that logic your solution to the problem is completely irrelevant, because you broke numerous contracts. Not only did you break contracts, but you didn’t follow the <a href="http://docs.oracle.com/javase/specs/jls/se7/html/jls-4.html#jls-4.2.1" data-bbcode="true" rel="nofollow noopener">JLS</a>, which means you weren’t even using Java. Thereby, your entire ‘solution’ is invalid and has absolutely nothing to do with the problem title, “Java challenge”.</p>
<p>[quote=“veer, post:36, topic:459323”]PS if the specification’s contract for Integer.toString changes, you’re right that String.valueOf’s behavior must change too (I don’t recall ever doubting that) - but that still does not <span class="bbcode-b">require</span> String.valueOf to call Integer.toString.[/quote]There is no way to ensure consistency other than to call that method. Therefore, you must call it.</p>
<p>Consider this:<br>
Some new version of the Java API completely changes the contract for Integer.toString, but the contract of String.valueOf stays the same. I then load the Java API, with the exception of the Integer class, where I load the new version. If String.valueOf didn’t call Integer.toString, then String.valueOf would be breaking its contract. Therefore, it is required to call Integer.toString.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-challenge/459323/37">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-challenge/459323/37</link>
        <pubDate>Thu, 13 Sep 2012 23:36:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459323-37</guid>
        <source url="https://forum.moparisthebest.com/t/java-challenge/459323.rss">Java challenge</source>
      </item>
      <item>
        <title>Java challenge</title>
        <dc:creator><![CDATA[@slavemaster veer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/slavemaster">@slavemaster</a> wrote:</p>
          <blockquote>
              <p>Are you being a troll? This isn’t a semantics game, this is an attempt to help you understand.</p>
<blockquote>I can override it just fine by editing the bytecode or replacing the class entirely...
<p>String.valueOf isn’t defined in terms of what Integer.toString should be, it’s defined in terms of what it is. Go ahead, re-read the contract.</p>
</blockquote><br>
The contract is only guaranteed for Java API implementations, which necessarily means they abide by the specification. If they do not (i.e. breaking the legitimacy of the API by modifying what Integer.toString does) then there is <span class="bbcode-b">no</span> more contract according to the standard for your String.valueOf, because your modified API is not actually the Java API. The Java API specification does not concern whatever you’re describing because it’s not specification-abiding and therefore not a Java API implementation – it’s just very much like one. Furthermore, neither I nor my thread are concerned with whatever you’re describing, again, because it’s not a Java API. To put it straightforwardly, by modifying what <span class="bbcode-i">was</span> a Java API implementation to violate the specification means it then fails to qualify as a Java API implementation.
<p>PS if the specification’s contract for Integer.toString changes, you’re right that String.valueOf’s behavior must change too (I don’t recall ever doubting that) - but that still does not <span class="bbcode-b">require</span> String.valueOf to call Integer.toString.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-challenge/459323/36">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-challenge/459323/36</link>
        <pubDate>Thu, 13 Sep 2012 21:35:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459323-36</guid>
        <source url="https://forum.moparisthebest.com/t/java-challenge/459323.rss">Java challenge</source>
      </item>
      <item>
        <title>Java challenge</title>
        <dc:creator><![CDATA[@CodeForFame CodeForFame]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/codeforfame">@CodeForFame</a> wrote:</p>
          <blockquote>
              <p>[quote=“iKilem, post:34, topic:459323”][quote author=CodeForFame link=topic=562229.msg4101525#msg4101525 date=1347553930]<br>
It must be, because it’s defined in terms of Integer.toString. It’s not defined in terms of the contract that Integer.toString abides by. Integer.toString(int) is defined in terms of Integer.toString(int, int). So, if the implementation of Integer.toString(int, int) is broken, everything that is defined in terms of it (even nested) should be broken.</p>
<p>If this isn’t how it worked, and the contract was changed for some reason, you’d have to go hunting down every single instance where it was used and change it. This is why things are defined in terms of the result of something, rather than the contract of something.</p>
<p>String.valueOf(int) is being delegated to of Integer.toString(int). One of the primary purposes are code reuse and that it inverts control. That being said, when using IoC, you only assume that their contract is correctly satisfied, you don’t go re-implementing, checking it, or guaranteeing it as that defeats the entire purpose.<br>
[/quote]<br>
It was just the documenters preference to mention Integer.toString instead of writing the same thing again. What matters is that they <span class="bbcode-i">can</span> be written independently because String.valueOf doesn’t depend on the behaviour of Integer.toString. We were told the representation is decimal. That’s the only thing linking the two methods.</p>
<p>Yes, reusing code is definitely wise, but the point is that an implementation can in theory write the two methods independently.</p>
<p>P.S. Not sure how it inverts control (I think of event dispatching when you say that).[/quote]No, it doesn’t just mention it to save time on documentation. It is defined in terms of Integer.toString because that is exactly the behavior it should have no matter what that behavior is.</p>
<p>You can’t write the methods independently, otherwise you’re merely hoping the implementation and contract of Integer.toString stays the same. Specifically, you’re not following the contract, which guarantees consistency between them.</p>
<p>String.valueOf is delegating the behavior to Integer.toString. This is an inversion of control because Integer.toString is given the responsibility of turning the integer into a string. Furthermore, String.valueOf doesn’t care how it does it, or what the result is. It just needs it done.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-challenge/459323/35">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-challenge/459323/35</link>
        <pubDate>Thu, 13 Sep 2012 19:38:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459323-35</guid>
        <source url="https://forum.moparisthebest.com/t/java-challenge/459323.rss">Java challenge</source>
      </item>
      <item>
        <title>Java challenge</title>
        <dc:creator><![CDATA[@iKilem iKilem]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ikilem">@iKilem</a> wrote:</p>
          <blockquote>
              <p>[quote=“CodeForFame, post:33, topic:459323”]It must be, because it’s defined in terms of Integer.toString. It’s not defined in terms of the contract that Integer.toString abides by. Integer.toString(int) is defined in terms of Integer.toString(int, int). So, if the implementation of Integer.toString(int, int) is broken, everything that is defined in terms of it (even nested) should be broken.</p>
<p>If this isn’t how it worked, and the contract was changed for some reason, you’d have to go hunting down every single instance where it was used and change it. This is why things are defined in terms of the result of something, rather than the contract of something.</p>
<p>String.valueOf(int) is being delegated to of Integer.toString(int). One of the primary purposes are code reuse and that it inverts control. That being said, when using IoC, you only assume that their contract is correctly satisfied, you don’t go re-implementing, checking it, or guaranteeing it as that defeats the entire purpose.[/quote]<br>
It was just the documenters preference to mention Integer.toString instead of writing the same thing again. What matters is that they <span class="bbcode-i">can</span> be written independently because String.valueOf doesn’t depend on the behaviour of Integer.toString. We were told the representation is decimal. That’s the only thing linking the two methods.</p>
<p>Yes, reusing code is definitely wise, but the point is that an implementation can in theory write the two methods independently.</p>
<p>P.S. Not sure how it inverts control (I think of event dispatching when you say that).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-challenge/459323/34">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-challenge/459323/34</link>
        <pubDate>Thu, 13 Sep 2012 16:43:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459323-34</guid>
        <source url="https://forum.moparisthebest.com/t/java-challenge/459323.rss">Java challenge</source>
      </item>
      <item>
        <title>Java challenge</title>
        <dc:creator><![CDATA[@CodeForFame CodeForFame]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/codeforfame">@CodeForFame</a> wrote:</p>
          <blockquote>
              <p>[quote=“iKilem, post:32, topic:459323”][quote author=CodeForFame link=topic=562229.msg4101184#msg4101184 date=1347499401]<br>
Give me one good reason why it wouldn’t just call Integer.toString in every implementation…<br>
[/quote]<br>
That’s not really relevant. He’s saying it’s not guaranteed.</p>
<p><span class="bbcode-i">The representation is exactly the one returned by the Integer.toString method of one argument</span> just means it’s also radix 10, which is clearly stated for Integer.toString, so no dependency there. If it didn’t state the radix (which would be stupid), then String.valueOf would have to call Integer.toString.[/quote]It must be, because it’s defined in terms of Integer.toString. It’s not defined in terms of the contract that Integer.toString abides by. Integer.toString(int) is defined in terms of Integer.toString(int, int). So, if the implementation of Integer.toString(int, int) is broken, everything that is defined in terms of it (even nested) should be broken.</p>
<p>If this isn’t how it worked, and the contract was changed for some reason, you’d have to go hunting down every single instance where it was used and change it. This is why things are defined in terms of the result of something, rather than the contract of something.</p>
<p>String.valueOf(int) is being delegated to of Integer.toString(int). One of the primary purposes are code reuse and that it inverts control. That being said, when using IoC, you only assume that their contract is correctly satisfied, you don’t go re-implementing, checking it, or guaranteeing it as that defeats the entire purpose.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-challenge/459323/33">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-challenge/459323/33</link>
        <pubDate>Thu, 13 Sep 2012 16:32:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459323-33</guid>
        <source url="https://forum.moparisthebest.com/t/java-challenge/459323.rss">Java challenge</source>
      </item>
      <item>
        <title>Java challenge</title>
        <dc:creator><![CDATA[@iKilem iKilem]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ikilem">@iKilem</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="28" data-topic="459323">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/codeforfame/40/3743_1.png" class="avatar"> CodeForFame:</div>
<blockquote>
<p>Give me one good reason why it wouldn’t just call Integer.toString in every implementation…</p>
</blockquote>
</aside>
<p>That’s not really relevant. He’s saying it’s not guaranteed.</p>
<p><span class="bbcode-i">The representation is exactly the one returned by the Integer.toString method of one argument</span> just means it’s also radix 10, which is clearly stated for Integer.toString, so no dependency there. If it didn’t state the radix (which would be stupid), then String.valueOf would have to call Integer.toString.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-challenge/459323/32">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-challenge/459323/32</link>
        <pubDate>Thu, 13 Sep 2012 15:23:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459323-32</guid>
        <source url="https://forum.moparisthebest.com/t/java-challenge/459323.rss">Java challenge</source>
      </item>
      <item>
        <title>Java challenge</title>
        <dc:creator><![CDATA[@Protosstribe object]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/protosstribe">@Protosstribe</a> wrote:</p>
          <blockquote>
              <p>veer: I never fully looked in to it, but I assumed it would be that way, based on my interpretation of the Javadoc comment. Of course you can also patch String.valueOf(int), and I was going to include that as an alternative in my post, but I skipped it. Anyway, the point was that you can patch classes (even the core ones).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-challenge/459323/31">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-challenge/459323/31</link>
        <pubDate>Thu, 13 Sep 2012 07:08:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459323-31</guid>
        <source url="https://forum.moparisthebest.com/t/java-challenge/459323.rss">Java challenge</source>
      </item>
      <item>
        <title>Java challenge</title>
        <dc:creator><![CDATA[@CodeForFame CodeForFame]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/codeforfame">@CodeForFame</a> wrote:</p>
          <blockquote>
              <p>[quote=“veer, post:29, topic:459323”]Integer.toString has well-defined behavior and is a static method, therefore it cannot be overridden and if it were replaced with a method that did not satisfy the constraints than the problem would be that Integer.toString is wrong – its discrepancy here with String.valueOf is not violating the contract, since String.valueOf is exactly what Integer.toString <span class="bbcode-i">should</span> be… e.g. if primitive integer arithmetic were implemented incorrectly in a VM, then would you say BigInteger then breaks its contract because it states as follows in the specification?</p>
<aside class="quote">
<blockquote>
<p>All operations behave as if BigIntegers were represented in two’s-complement notation (like Java’s primitive integer types). BigInteger provides analogues to all of Java’s primitive integer operators, and all relevant methods from java.lang.Math.[/quote]</p>
</blockquote>
</aside>
<p>I can override it just fine by editing the bytecode or replacing the class entirely…</p>
<p>String.valueOf isn’t defined in terms of what Integer.toString <span class="bbcode-i">should</span> be, it’s defined in terms of what it is. Go ahead, re-read the contract.</p>
<p>And it depends on how you interpret ‘analogues’. If you take it to mean ‘exactly the same as’, then it would. But if you take it to mean ‘comparable’ then it depends on how it is actually implemented.</p>
<p>Also, you never gave me a good reason why it wouldn’t just call Integer.toString.</p>
<p>P.S. I don’t generally like playing these semantic based games where we start dissecting the contracts into what they literally say rather than what they should say. But, you decided to open that can of worms…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-challenge/459323/30">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-challenge/459323/30</link>
        <pubDate>Thu, 13 Sep 2012 03:56:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459323-30</guid>
        <source url="https://forum.moparisthebest.com/t/java-challenge/459323.rss">Java challenge</source>
      </item>
      <item>
        <title>Java challenge</title>
        <dc:creator><![CDATA[@slavemaster veer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/slavemaster">@slavemaster</a> wrote:</p>
          <blockquote>
              <p>Integer.toString has well-defined behavior and is a static method, therefore it cannot be overridden and if it were replaced with a method that did not satisfy the constraints than the problem would be that Integer.toString is wrong – its discrepancy here with String.valueOf is not violating the contract, since String.valueOf is exactly what Integer.toString <span class="bbcode-i">should</span> be… e.g. if primitive integer arithmetic were implemented incorrectly in a VM, then would you say BigInteger then breaks its contract because it states as follows in the specification?</p>
<blockquote>All operations behave as if BigIntegers were represented in two's-complement notation (like Java's primitive integer types). BigInteger provides analogues to all of Java's primitive integer operators, and all relevant methods from java.lang.Math.</blockquote>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-challenge/459323/29">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-challenge/459323/29</link>
        <pubDate>Thu, 13 Sep 2012 03:24:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459323-29</guid>
        <source url="https://forum.moparisthebest.com/t/java-challenge/459323.rss">Java challenge</source>
      </item>
      <item>
        <title>Java challenge</title>
        <dc:creator><![CDATA[@CodeForFame CodeForFame]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/codeforfame">@CodeForFame</a> wrote:</p>
          <blockquote>
              <p>[quote=“veer, post:27, topic:459323”][quote author=CodeForFame link=topic=562229.msg4101045#msg4101045 date=1347483294]</p>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<p>Or, you could always patch Integer.toString(int) to return “256”. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
</blockquote>
</aside>
<p>Try it… PrintStream.println doesn’t use Integer.toString <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"> Maybe you meant String.valueOf?<br>
[/quote]Which uses Integer.toString(int)…</p>
</blockquote>
</aside>
<p>You assert that without it being guaranteed. Did you not read the specification on <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#valueOf(int)" data-bbcode="true" rel="nofollow noopener">String.valueOf</a>?</p>
<aside class="quote">
<blockquote>
<p>The representation is exactly the one returned by the Integer.toString method of one argument.</p>
</blockquote>
</aside>
<p>Just because the representation are exactly equivalent doesn’t mean one must call the other. You may be correct in the context of one implementation of the Java SE API, but you are making presumptions over all implementations of the API.[/quote]Give me one good reason why it wouldn’t just call Integer.toString in every implementation…</p>
<p>Also, if you didn’t call Integer.toString, the contract could potentially be broken when someone overrides Integer.toString. So, you’re pretty much forced to call it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-challenge/459323/28">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-challenge/459323/28</link>
        <pubDate>Thu, 13 Sep 2012 01:23:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459323-28</guid>
        <source url="https://forum.moparisthebest.com/t/java-challenge/459323.rss">Java challenge</source>
      </item>
      <item>
        <title>Java challenge</title>
        <dc:creator><![CDATA[@slavemaster veer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/slavemaster">@slavemaster</a> wrote:</p>
          <blockquote>
              <p>[quote=“CodeForFame, post:26, topic:459323”][quote author=veer link=topic=562229.msg4101039#msg4101039 date=1347482982]</p>
<aside class="quote">
<blockquote>
<p>Or, you could always patch Integer.toString(int) to return “256”. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
</blockquote>
</aside>
<p>Try it… PrintStream.println doesn’t use Integer.toString <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"> Maybe you meant String.valueOf?<br>
[/quote]Which uses Integer.toString(int)…[/quote]</p>
<p>You assert that without it being guaranteed. Did you not read the specification on <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#valueOf(int)" data-bbcode="true" rel="nofollow noopener">String.valueOf</a>?</p>
<blockquote>The representation is exactly the one returned by the Integer.toString method of one argument.</blockquote>
<p>Just because the representation are exactly equivalent doesn’t mean one must call the other. You may be correct in the context of one implementation of the Java SE API, but you are making presumptions over all implementations of the API.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-challenge/459323/27">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-challenge/459323/27</link>
        <pubDate>Wed, 12 Sep 2012 23:05:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459323-27</guid>
        <source url="https://forum.moparisthebest.com/t/java-challenge/459323.rss">Java challenge</source>
      </item>
      <item>
        <title>Java challenge</title>
        <dc:creator><![CDATA[@CodeForFame CodeForFame]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/codeforfame">@CodeForFame</a> wrote:</p>
          <blockquote>
              <p>[quote=“veer, post:25, topic:459323”][quote author=object link=topic=562229.msg4100783#msg4100783 date=1347429821]<br>
Or, you could always patch Integer.toString(int) to return “256”. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"><br>
[/quote]</p>
<p>Try it… PrintStream.println doesn’t use Integer.toString <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"> Maybe you meant String.valueOf?[/quote]Which uses Integer.toString(int)…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-challenge/459323/26">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-challenge/459323/26</link>
        <pubDate>Wed, 12 Sep 2012 20:54:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459323-26</guid>
        <source url="https://forum.moparisthebest.com/t/java-challenge/459323.rss">Java challenge</source>
      </item>
      <item>
        <title>Java challenge</title>
        <dc:creator><![CDATA[@slavemaster veer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/slavemaster">@slavemaster</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="24" data-topic="459323">
<div class="title">
<div class="quote-controls"></div>
 object:</div>
<blockquote>
<p>Or, you could always patch Integer.toString(int) to return “256”. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
</blockquote>
</aside>
<p>Try it… PrintStream.println doesn’t use Integer.toString <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"> Maybe you meant String.valueOf?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-challenge/459323/25">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-challenge/459323/25</link>
        <pubDate>Wed, 12 Sep 2012 20:49:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459323-25</guid>
        <source url="https://forum.moparisthebest.com/t/java-challenge/459323.rss">Java challenge</source>
      </item>
      <item>
        <title>Java challenge</title>
        <dc:creator><![CDATA[@Protosstribe object]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/protosstribe">@Protosstribe</a> wrote:</p>
          <blockquote>
              <p>Or, you could always patch Integer.toString(int) to return “256”. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-challenge/459323/24">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-challenge/459323/24</link>
        <pubDate>Wed, 12 Sep 2012 06:03:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459323-24</guid>
        <source url="https://forum.moparisthebest.com/t/java-challenge/459323.rss">Java challenge</source>
      </item>
      <item>
        <title>Java challenge</title>
        <dc:creator><![CDATA[@slavemaster veer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/slavemaster">@slavemaster</a> wrote:</p>
          <blockquote>
              <p>[quote=“Davidi2, post:21, topic:459323”][quote author=Bowser jr link=topic=562229.msg4100377#msg4100377 date=1347389785]</p>
<aside class="quote">
<blockquote>
<p>I think his point was he thought you were showing us the answer, he misunderstood</p>
</blockquote>
</aside>
<p>I can see it output 256, but the point here is how to do it. For all we know, he could have cheated.<br>
[s]<br>
EDIT2: Must be something wrong in my decompile process, as I can’t reverse the process.<br>
And why make it so difficult when he just could have posted:</p>
<pre><code class="lang-auto">[s]
class Foo {

   public static byte foo() {
      return (byte)256;
   }
}
[/s]</code></pre>
<p><span class="bbcode-s"><br>
EDIT: What I got with a decompiler<br>
</span><br>
[/quote]His point was there is a way to write pure java code that compiles to bytecode as 256, from what I understand.[/quote]</p>
<p>Not Java source code… <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-challenge/459323/23">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-challenge/459323/23</link>
        <pubDate>Tue, 11 Sep 2012 22:54:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459323-23</guid>
        <source url="https://forum.moparisthebest.com/t/java-challenge/459323.rss">Java challenge</source>
      </item>
      <item>
        <title>Java challenge</title>
        <dc:creator><![CDATA[@CodeForFame CodeForFame]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/codeforfame">@CodeForFame</a> wrote:</p>
          <blockquote>
              <p>[quote=“Davidi2, post:21, topic:459323”][quote author=Bowser jr link=topic=562229.msg4100377#msg4100377 date=1347389785]</p>
<aside class="quote">
<blockquote>
<p>I think his point was he thought you were showing us the answer, he misunderstood</p>
</blockquote>
</aside>
<p>I can see it output 256, but the point here is how to do it. For all we know, he could have cheated.<br>
[s]<br>
EDIT2: Must be something wrong in my decompile process, as I can’t reverse the process.<br>
And why make it so difficult when he just could have posted:</p>
<pre><code class="lang-auto">[s]
class Foo {

   public static byte foo() {
      return (byte)256;
   }
}
[/s]</code></pre>
<p><span class="bbcode-s"><br>
EDIT: What I got with a decompiler<br>
</span><br>
[/quote]His point was there is a way to write pure java code that compiles to bytecode as 256, from what I understand.[/quote]I don’t see how that’s a point… It’s not like you can accidentally do it and not be aware of it being a possibility.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-challenge/459323/22">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-challenge/459323/22</link>
        <pubDate>Tue, 11 Sep 2012 20:52:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459323-22</guid>
        <source url="https://forum.moparisthebest.com/t/java-challenge/459323.rss">Java challenge</source>
      </item>
      <item>
        <title>Java challenge</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>[quote=“Bowser jr, post:19, topic:459323”][quote author=Davidi2 link=topic=562229.msg4100368#msg4100368 date=1347388225]<br>
I think his point was he thought you were showing us the answer, he misunderstood<br>
[/quote]<br>
I can see it output 256, but the point here is how to do it. For all we know, he could have cheated.<br>
[s]<br>
EDIT2: Must be something wrong in my decompile process, as I can’t reverse the process.<br>
And why make it so difficult when he just could have posted:</p>
<pre><code class="lang-auto">[s]
class Foo {

   public static byte foo() {
      return (byte)256;
   }
}
[/s]</code></pre>
<p><span class="bbcode-s"><br>
EDIT: What I got with a decompiler<br>
</span>[/quote]His point was there is a way to write pure java code that compiles to bytecode as 256, from what I understand.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-challenge/459323/21">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-challenge/459323/21</link>
        <pubDate>Tue, 11 Sep 2012 20:15:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459323-21</guid>
        <source url="https://forum.moparisthebest.com/t/java-challenge/459323.rss">Java challenge</source>
      </item>
      <item>
        <title>Java challenge</title>
        <dc:creator><![CDATA[@CodeForFame CodeForFame]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/codeforfame">@CodeForFame</a> wrote:</p>
          <blockquote>
              <p>[quote=“Bowser jr, post:19, topic:459323”][quote author=Davidi2 link=topic=562229.msg4100368#msg4100368 date=1347388225]<br>
I think his point was he thought you were showing us the answer, he misunderstood<br>
[/quote]<br>
I can see it output 256, but the point here is how to do it. For all we know, he could have cheated.</p>
<p>EDIT2: Must be something wrong in my decompile process, as I can’t reverse the process.<br>
And why make it so difficult when he just could have posted:</p>
<pre><code class="lang-auto">
class Foo {

   public static byte foo() {
      return (byte)256;
   }
}</code></pre>
<p>EDIT: What I got with a decompiler[/quote]I got it without a cast.</p>
<p>He probably did it just constructing the bytecode by ‘hand’. AFAIK there isn’t something you can do to get it to only generate the following and have the signature still be returning a byte:</p>
<p><code>sipush 256
ireturn</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-challenge/459323/20">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-challenge/459323/20</link>
        <pubDate>Tue, 11 Sep 2012 19:35:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459323-20</guid>
        <source url="https://forum.moparisthebest.com/t/java-challenge/459323.rss">Java challenge</source>
      </item>
      <item>
        <title>Java challenge</title>
        <dc:creator><![CDATA[@bowserjr2 Bowser jr]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bowserjr2">@bowserjr2</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="18" data-topic="459323">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/davidi2/40/2579_1.png" class="avatar"> Davidi2:</div>
<blockquote>
<p>I think his point was he thought you were showing us the answer, he misunderstood</p>
</blockquote>
</aside>
<p>I can see it output 256, but the point here is how to do it. For all we know, he could have cheated.<br>
[s]<br>
EDIT2: Must be something wrong in my decompile process, as I can’t reverse the process.<br>
And why make it so difficult when he just could have posted:</p>
<pre><code class="lang-auto">[s]
class Foo {

   public static byte foo() {
      return (byte)256;
   }
}
[/s]</code></pre>
<p><span class="bbcode-s"><br>
EDIT: What I got with a decompiler<br>
</span></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-challenge/459323/19">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-challenge/459323/19</link>
        <pubDate>Tue, 11 Sep 2012 18:56:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459323-19</guid>
        <source url="https://forum.moparisthebest.com/t/java-challenge/459323.rss">Java challenge</source>
      </item>
      <item>
        <title>Java challenge</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>I think his point was he thought you were showing us the answer, he misunderstood</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-challenge/459323/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-challenge/459323/18</link>
        <pubDate>Tue, 11 Sep 2012 18:30:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459323-18</guid>
        <source url="https://forum.moparisthebest.com/t/java-challenge/459323.rss">Java challenge</source>
      </item>
      <item>
        <title>Java challenge</title>
        <dc:creator><![CDATA[@slavemaster veer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/slavemaster">@slavemaster</a> wrote:</p>
          <blockquote>
              <p>Obviously you have to define the method… the point is that the Foo must match the template. You cannot change anything specified by the template – so no changing the return type of foo(), and you cannot change any of Test. By the way, try compiling that.</p>
<aside class="quote quote-modified" data-post="15" data-topic="459323">
<div class="title">
<div class="quote-controls"></div>
 Bowser jr:</div>
<blockquote>
<p>Use the code tag, and don’t post the compressed .class files.</p>
</blockquote>
</aside>
<p>Uh… the point of creating the archive was so you could merely run as follows: java -jar test.jar<br>
Is that too complex for you?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-challenge/459323/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-challenge/459323/17</link>
        <pubDate>Tue, 11 Sep 2012 18:04:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-459323-17</guid>
        <source url="https://forum.moparisthebest.com/t/java-challenge/459323.rss">Java challenge</source>
      </item>
  </channel>
</rss>
