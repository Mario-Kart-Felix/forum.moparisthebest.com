<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Efficient Item Handling</title>
    <link>https://forum.moparisthebest.com/t/efficient-item-handling/434731</link>
    <description>I was just curious as to what your thoughts are for handling Item-on-Item packets. The traditional method is to have all of the code in several conditionals, which would bloat the code quite significantly. The next method that seems to have been gaining popularity recently, is having them in reloadable scripts which are loaded at runtime, but scripts are slower to process than bytecode. Neither of those are very good for modular design.

What are your thoughts?</description>
    
    <lastBuildDate>Thu, 01 Mar 2012 03:31:52 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/efficient-item-handling/434731.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Efficient Item Handling</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>[quote=“imsuperman05, post:4, topic:434731”][quote author=zyle1992 link=topic=537449.msg3929888#msg3929888 date=1330571437]<br>
It’s not restricted to Item-on-Item handling, but event handling in general. Item’s were just an example. And saying that it’s not a huge aspect is crazy. All crafting skills require item-on-item events, and currently, all changes require stopping the server, recompiling, and starting the server again. Even with scripts, it takes longer than it should (unless you compile the scripts at startup, but even then that takes work).<br>
[/quote]<br>
Oh, I forgot about crafting and fletching, etc.  Most people use arrays or enums to store the data to be later grabbed, which you could do too, but in terms of efficiency, I doubt that would help.  If you debug through an IDE, you don’t have to restart then recompile.  Back to topic though, I can’t think of an other way to handle it other than what was already said.  You could load data from a binary, but that would be useless. [/quote]</p>
<p>No program should require an IDE to run properly.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/efficient-item-handling/434731/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/efficient-item-handling/434731/5</link>
        <pubDate>Thu, 01 Mar 2012 03:31:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-434731-5</guid>
        <source url="https://forum.moparisthebest.com/t/efficient-item-handling/434731.rss">Efficient Item Handling</source>
      </item>
      <item>
        <title>Efficient Item Handling</title>
        <dc:creator><![CDATA[@imsuperman05 imsuperman05]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imsuperman05">@imsuperman05</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="3" data-topic="434731">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/zyle1992/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> zyle1992:</div>
<blockquote>
<p>It’s not restricted to Item-on-Item handling, but event handling in general. Item’s were just an example. And saying that it’s not a huge aspect is crazy. All crafting skills require item-on-item events, and currently, all changes require stopping the server, recompiling, and starting the server again. Even with scripts, it takes longer than it should (unless you compile the scripts at startup, but even then that takes work).</p>
</blockquote>
</aside>
<p>Oh, I forgot about crafting and fletching, etc.  Most people use arrays or enums to store the data to be later grabbed, which you could do too, but in terms of efficiency, I doubt that would help.  If you debug through an IDE, you don’t have to restart then recompile.  Back to the topic though, I can’t think of any other way to handle it other than what was already said.  You could load data from a binary, but that would be useless.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/efficient-item-handling/434731/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/efficient-item-handling/434731/4</link>
        <pubDate>Thu, 01 Mar 2012 03:26:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-434731-4</guid>
        <source url="https://forum.moparisthebest.com/t/efficient-item-handling/434731.rss">Efficient Item Handling</source>
      </item>
      <item>
        <title>Efficient Item Handling</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>It’s not restricted to Item-on-Item handling, but event handling in general. Item’s were just an example. And saying that it’s not a huge aspect is crazy. All crafting skills require item-on-item events, and currently, all changes require stopping the server, recompiling, and starting the server again. Even with scripts, it takes longer than it should (unless you compile the scripts at startup, but even then that takes work).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/efficient-item-handling/434731/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/efficient-item-handling/434731/3</link>
        <pubDate>Thu, 01 Mar 2012 03:10:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-434731-3</guid>
        <source url="https://forum.moparisthebest.com/t/efficient-item-handling/434731.rss">Efficient Item Handling</source>
      </item>
      <item>
        <title>Efficient Item Handling</title>
        <dc:creator><![CDATA[@imsuperman05 imsuperman05]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imsuperman05">@imsuperman05</a> wrote:</p>
          <blockquote>
              <p>What would be the point in achieving efficiency in only item handling?  Do you really have that much code to add?  It’s a misc that isn’t used that often, unless it’s a huge aspect of your server.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/efficient-item-handling/434731/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/efficient-item-handling/434731/2</link>
        <pubDate>Thu, 01 Mar 2012 02:49:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-434731-2</guid>
        <source url="https://forum.moparisthebest.com/t/efficient-item-handling/434731.rss">Efficient Item Handling</source>
      </item>
      <item>
        <title>Efficient Item Handling</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>I was just curious as to what your thoughts are for handling Item-on-Item packets. The traditional method is to have all of the code in several conditionals, which would bloat the code quite significantly. The next method that seems to have been gaining popularity recently, is having them in reloadable scripts which are loaded at runtime, but scripts are slower to process than bytecode. Neither of those are very good for modular design.</p>
<p>What are your thoughts?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/efficient-item-handling/434731/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/efficient-item-handling/434731/1</link>
        <pubDate>Thu, 01 Mar 2012 02:39:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-434731-1</guid>
        <source url="https://forum.moparisthebest.com/t/efficient-item-handling/434731.rss">Efficient Item Handling</source>
      </item>
  </channel>
</rss>
