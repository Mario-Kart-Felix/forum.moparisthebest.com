<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Text Sever</title>
    <link>https://forum.moparisthebest.com/t/text-sever/297471</link>
    <description>As you might know or guessed, I suck at Java so I need some help.

I started to make a Online (hopefully multiplayer) text-based RPG. I looked around the java website and I came accross making a [url=http://java.sun.com/docs/books/tutorial/networking/sockets/clientServer.html]Server/Client[/url], I used this as a base and started to get basic greeting and player details to work.
(I do admit, I did not write EVERYTHING but I have gone over the code; I do not lie like some idiots)

Unfortunately, When trying to to ask &quot;What is your name&quot; recording the response and replying &quot;Welcome&quot; + input I fall into many problems.

[code]public String processInput(String theInput) {
        String theOutput = null;

        if (state == WAITING) {
             theOutput = &quot;Welcome&quot;;
            pause(1000);
            theOutput = &quot;What is your name&quot;;
             String input = scan.nextLine();
            state = NAME;

        } else if (state == NAME) {
                           theOutput = &quot;Hi&quot; +input;
                state = WAITING;
            } else {
                System.exit(1);
            }
        }
        return theOutput;
    }
}[/code]
Also &quot;Welcome&quot; is not printed...
Finally, would it be possible to send messages via methods (I would find it much easier that way)

Can someone nudge me onto the right path.</description>
    
    <lastBuildDate>Fri, 28 Aug 2009 02:55:52 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/text-sever/297471.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Text Sever</title>
        <dc:creator><![CDATA[@lawl lawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lawl">@lawl</a> wrote:</p>
          <blockquote>
              <p>im pretty sure i read somewhere that void main will just implicitly add a return 0 but this probably isnt true for all compilers and i am probably wrong on some level</p>
<p>edit: Under C89, the return statement at the end of main() is required, whereas under C99 if no return statement is present, return 0 is implied.</p>
<p>also i just realized this is pretty offtopic</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/text-sever/297471/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/text-sever/297471/14</link>
        <pubDate>Fri, 28 Aug 2009 02:55:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-297471-14</guid>
        <source url="https://forum.moparisthebest.com/t/text-sever/297471.rss">Text Sever</source>
      </item>
      <item>
        <title>Text Sever</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>Appears it only does pop eax on some compilers and on mine mov eax, val but the issue is still there… whatever was originally in eax is the new return exit code.[br][br][size=1]Posted on: August 28, 2009, 02:54:10 am[/size][hr]On windows, it passes it to ExitProcess() in the start routine that calls main.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/text-sever/297471/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/text-sever/297471/13</link>
        <pubDate>Fri, 28 Aug 2009 02:42:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-297471-13</guid>
        <source url="https://forum.moparisthebest.com/t/text-sever/297471.rss">Text Sever</source>
      </item>
      <item>
        <title>Text Sever</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>oh, in that case, i stand corrected</p>
<p>use it all you want, op</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/text-sever/297471/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/text-sever/297471/12</link>
        <pubDate>Fri, 28 Aug 2009 02:15:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-297471-12</guid>
        <source url="https://forum.moparisthebest.com/t/text-sever/297471.rss">Text Sever</source>
      </item>
      <item>
        <title>Text Sever</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="8" data-topic="297471">
<div class="title">
<div class="quote-controls"></div>
 xeez`:</div>
<blockquote>
<p>abraham2119, I disagree. Even when one does not require the return value of an application, the user should be accustomed in reporting any errors, anyways. For example, with most C++ compilers, declaring main() of type “void” is valid; although, if any C++ programmer sees this, they will immediately list 100 reasons as to why one should declare main as int and return a proper status indication value. I have yet to see a failure in using [tt]java.lang.System.exit(int)[/tt].</p>
</blockquote>
</aside>
<p>Procedures, data types … all just source-level abstractions. Down native, the return value of main() is expected to be in eax after the call completes (or at least for x86 cdecl calling convention). If declared void, it’ll try doing pop eax and get a garbage value. Yay! Well I think that was it…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/text-sever/297471/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/text-sever/297471/11</link>
        <pubDate>Fri, 28 Aug 2009 02:14:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-297471-11</guid>
        <source url="https://forum.moparisthebest.com/t/text-sever/297471.rss">Text Sever</source>
      </item>
      <item>
        <title>Text Sever</title>
        <dc:creator><![CDATA[@lawl lawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lawl">@lawl</a> wrote:</p>
          <blockquote>
              <p>system.exit gracefully exits</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/text-sever/297471/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/text-sever/297471/10</link>
        <pubDate>Fri, 28 Aug 2009 02:11:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-297471-10</guid>
        <source url="https://forum.moparisthebest.com/t/text-sever/297471.rss">Text Sever</source>
      </item>
      <item>
        <title>Text Sever</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>[quote=“abraham2119, post:7, topic:297471”]ownagesbot, that is correct. its just as if i would return a !0 value in C in int main().</p>
<p>most articles state, however, that this method should be invoked only when implicitly required. there are questions as to whether it shuts down all other instantiated threads (whether daemon or non-daemon).</p>
<p>from what im seeing, he has no use in indicating that the application has returned with an error, since he is not doing anything outside of the process. i do see your point though. runtime.exit has very poor documentations, so i dont really have enough knowledge about how the function works.</p>
<p>ps found this article: <a href="http://www.javapractices.com/topic/TopicAction.do?Id=86" rel="nofollow noopener">http://www.javapractices.com/topic/TopicAction.do?Id=86</a></p>
<p>if anyone finds clearer documentations on this method (other than the java api, for i have read them), please link[/quote]</p>
<p>It’s called an exit code btw.</p>
<p>java.lang.System.exit():</p>
<p><code>    /**
     * Terminates the currently running Java Virtual Machine. The
     * argument serves as a status code; by convention, a nonzero status
     * code indicates abnormal termination.
     * &lt;p&gt;
     * This method calls the &lt;code&gt;exit&lt;/code&gt; method in class
     * &lt;code&gt;Runtime&lt;/code&gt;. This method never returns normally.
     * &lt;p&gt;
     * The call &lt;code&gt;System.exit(n)&lt;/code&gt; is effectively equivalent to
     * the call:
     * &lt;blockquote&gt;&lt;pre&gt;
     * Runtime.getRuntime().exit(n)
     * &lt;/pre&gt;&lt;/blockquote&gt;
     *
     * @param      status   exit status.
     * @throws  SecurityException
     *        if a security manager exists and its &lt;code&gt;checkExit&lt;/code&gt;
     *        method doesn't allow exit with the specified status.
     * @see        java.lang.Runtime#exit(int)
     */
    public static void exit(int status) {
        Runtime.getRuntime().exit(status);
    }
</code></p>
<p>java.lang.Runtime.exit():</p>
<p><code>    /**
     * Terminates the currently running Java virtual machine by initiating its
     * shutdown sequence.  This method never returns normally.  The argument
     * serves as a status code; by convention, a nonzero status code indicates
     * abnormal termination.
     *
     * &lt;p&gt; The virtual machine's shutdown sequence consists of two phases.  In
     * the first phase all registered {@link #addShutdownHook shutdown hooks},
     * if any, are started in some unspecified order and allowed to run
     * concurrently until they finish.  In the second phase all uninvoked
     * finalizers are run if {@link #runFinalizersOnExit finalization-on-exit}
     * has been enabled.  Once this is done the virtual machine {@link #halt
     * halts}.
     *
     * &lt;p&gt; If this method is invoked after the virtual machine has begun its
     * shutdown sequence then if shutdown hooks are being run this method will
     * block indefinitely.  If shutdown hooks have already been run and on-exit
     * finalization has been enabled then this method halts the virtual machine
     * with the given status code if the status is nonzero; otherwise, it
     * blocks indefinitely.
     *
     * &lt;p&gt; The &lt;tt&gt;{@link System#exit(int) System.exit}&lt;/tt&gt; method is the
     * conventional and convenient means of invoking this method. &lt;p&gt;
     *
     * @param  status
     *         Termination status.  By convention, a nonzero status code
     *         indicates abnormal termination.
     *
     * @throws SecurityException
     *         If a security manager is present and its &lt;tt&gt;{@link
     *         SecurityManager#checkExit checkExit}&lt;/tt&gt; method does not permit
     *         exiting with the specified status
     *
     * @see java.lang.SecurityException
     * @see java.lang.SecurityManager#checkExit(int)
     * @see #addShutdownHook
     * @see #removeShutdownHook
     * @see #runFinalizersOnExit
     * @see #halt(int)
     */
    public void exit(int status) {
        SecurityManager security = System.getSecurityManager();
        if (security != null) {
            security.checkExit(status);
        }
        Shutdown.exit(status);
    }</code></p>
<p>java.lang.Shutdown.exit():</p>
<p><code>    /* Invoked by Runtime.exit, which does all the security checks.
     * Also invoked by handlers for system-provided termination events,
     * which should pass a nonzero status code.
     */
    static void exit(int status) {
        boolean runMoreFinalizers = false;
        synchronized (lock) {
            if (status != 0) runFinalizersOnExit = false;
            switch (state) {
            case RUNNING:       /* Initiate shutdown */
                state = HOOKS;
                break;
            case HOOKS:         /* Stall and halt */
                break;
            case FINALIZERS:
                if (status != 0) {
                    /* Halt immediately on nonzero status */
                    halt(status);
                } else {
                    /* Compatibility with old behavior:
                     * Run more finalizers and then halt
                     */
                    runMoreFinalizers = runFinalizersOnExit;
                }
                break;
            }
        }
        if (runMoreFinalizers) {
            runAllFinalizers();
            halt(status);
        }
        synchronized (Shutdown.class) {
            /* Synchronize on the class object, causing any other thread
             * that attempts to initiate shutdown to stall indefinitely
             */
            sequence();
            halt(status);
        }
    }</code></p>
<p>java.lang.Shutdown.halt():</p>
<pre><code class="lang-auto">    static native void halt0(int status);[/code]

shared/native/java/lang/Shutdown.c:
[code]JNIEXPORT void JNICALL
Java_java_lang_Shutdown_halt0(JNIEnv *env, jclass ignored, jint code)
{
    JVM_Halt(code);
}[/code]

share/vm/prims/jvm.cpp:
[code]JVM_ENTRY_NO_ENV(void, JVM_Halt(jint code))  
  before_exit(thread);
  vm_exit(code);
JVM_END</code></pre>
<p>share/vm/runtime/interfaceSupport.hpp:</p>
<p><code>#define JVM_ENTRY_NO_ENV(result_type, header)                        \
extern "C" {                                                         \
  result_type JNICALL header {                                       \
    JavaThread* thread = (JavaThread*)ThreadLocalStorage::thread();  \
    ThreadInVMfromNative __tiv(thread);                              \
    debug_only(VMNativeEntryWrapper __vew;)                          \
    __ENTRY(result_type, header, thread)</code></p>
<pre><code class="lang-auto">#define __ENTRY(result_type, header, thread)                         \
  TRACE_CALL(result_type, header)                                    \
  HandleMarkCleaner __hm(thread);                                    \
  Thread* THREAD = thread;                                           \
  /* begin of body */</code></pre>
<p>share/vm/runtime/java.cpp:</p>
<p>[code]// Note: before_exit() can be executed only once, if more than one threads<br>
//       are trying to shutdown the VM at the same time, only one thread<br>
//       can run before_exit() and all other threads must wait.<br>
void before_exit(JavaThread * thread) {<br>
<span class="hashtag">#define</span> BEFORE_EXIT_NOT_RUN 0<br>
<span class="hashtag">#define</span> BEFORE_EXIT_RUNNING 1<br>
<span class="hashtag">#define</span> BEFORE_EXIT_DONE    2<br>
static jint volatile _before_exit_status = BEFORE_EXIT_NOT_RUN;</p>
<p>// Note: don’t use a Mutex to guard the entire before_exit(), as<br>
// JVMTI post_thread_end_event and post_vm_death_event will run native code.<br>
// A CAS or OSMutex would work just fine but then we need to manipulate<br>
// thread state for Safepoint. Here we use Monitor wait() and notify_all()<br>
// for synchronization.<br>
{ MutexLocker ml(BeforeExit_lock);<br>
switch (_before_exit_status) {<br>
case BEFORE_EXIT_NOT_RUN:<br>
_before_exit_status = BEFORE_EXIT_RUNNING;<br>
break;<br>
case BEFORE_EXIT_RUNNING:<br>
while (_before_exit_status == BEFORE_EXIT_RUNNING) {<br>
BeforeExit_lock-&gt;wait();<br>
}<br>
assert(_before_exit_status == BEFORE_EXIT_DONE, “invalid state”);<br>
return;<br>
case BEFORE_EXIT_DONE:<br>
return;<br>
}<br>
}</p>
<p>// The only difference between this and Win32’s _onexit procs is that<br>
// this version is invoked before any threads get killed.<br>
ExitProc* current = exit_procs;<br>
while (current != NULL) {<br>
ExitProc* next = current-&gt;next();<br>
current-&gt;evaluate();<br>
delete current;<br>
current = next;<br>
}</p>
<p>// Hang forever on exit if we’re reporting an error.<br>
if (ShowMessageBoxOnError &amp;&amp; is_error_reported()) {<br>
os::infinite_sleep();<br>
}</p>
<p>// Terminate watcher thread - must before disenrolling any periodic task<br>
WatcherThread::stop();</p>
<p>// Print statistics gathered (profiling …)<br>
if (Arguments::has_profile()) {<br>
FlatProfiler::disengage();<br>
FlatProfiler::print(10);<br>
}</p>
<p>// shut down the StatSampler task<br>
StatSampler::disengage();<br>
StatSampler::destroy();</p>
<p>// shut down the TimeMillisUpdateTask<br>
if (CacheTimeMillis) {<br>
TimeMillisUpdateTask::disengage();<br>
}</p>
<p><span class="hashtag">#ifndef</span> SERIALGC<br>
// stop CMS threads<br>
if (UseConcMarkSweepGC) {<br>
ConcurrentMarkSweepThread::stop();<br>
}<br>
<span class="hashtag">#endif</span> // SERIALGC</p>
<p>// Print GC/heap related information.<br>
if (PrintGCDetails) {<br>
Universe::print();<br>
AdaptiveSizePolicyOutput(0);<br>
}</p>
<p>if (Arguments::has_alloc_profile()) {<br>
HandleMark hm;<br>
// Do one last collection to enumerate all the objects<br>
// allocated since the last one.<br>
Universe::heap()-&gt;collect(GCCause::_allocation_profiler);<br>
AllocationProfiler::disengage();<br>
AllocationProfiler::print(0);<br>
}</p>
<p>if (PrintBytecodeHistogram) {<br>
BytecodeHistogram::print();<br>
}</p>
<p>if (JvmtiExport::should_post_thread_life()) {<br>
JvmtiExport::post_thread_end(thread);<br>
}<br>
// Always call even when there are not JVMTI environments yet, since environments<br>
// may be attached late and JVMTI must track phases of VM execution<br>
JvmtiExport::post_vm_death();<br>
Threads::shutdown_vm_agents();</p>
<p>// Terminate the signal thread<br>
// Note: we don’t wait until it actually dies.<br>
os::terminate_signal_thread();</p>
<p>print_statistics();<br>
Universe::heap()-&gt;print_tracing_info();</p>
<p>VTune::exit();</p>
<p>{ MutexLocker ml(BeforeExit_lock);<br>
_before_exit_status = BEFORE_EXIT_DONE;<br>
BeforeExit_lock-&gt;notify_all();<br>
}</p>
<p><span class="hashtag">#undef</span> BEFORE_EXIT_NOT_RUN<br>
<span class="hashtag">#undef</span> BEFORE_EXIT_RUNNING<br>
<span class="hashtag">#undef</span> BEFORE_EXIT_DONE<br>
}</p>
<p>void vm_exit(int code) {<br>
Thread* thread = ThreadLocalStorage::thread_index() == -1 ? NULL<br>
: ThreadLocalStorage::get_thread_slow();<br>
if (thread == NULL) {<br>
// we have serious problems – just exit<br>
vm_direct_exit(code);<br>
}</p>
<p>if (VMThread::vm_thread() != NULL) {<br>
// Fire off a VM_Exit operation to bring VM to a safepoint and exit<br>
VM_Exit op(code);<br>
if (thread-&gt;is_Java_thread())<br>
((JavaThread*)thread)-&gt;set_thread_state(_thread_in_vm);<br>
VMThread::execute(&amp;op);<br>
// should never reach here; but in case something wrong with VM Thread.<br>
vm_direct_exit(code);<br>
} else {<br>
// VM thread is gone, just exit<br>
vm_direct_exit(code);<br>
}<br>
ShouldNotReachHere();<br>
}<br>
[/code]</p>
<p><code>void vm_direct_exit(int code) {
  notify_vm_shutdown();
  ::exit(code);
}
</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/text-sever/297471/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/text-sever/297471/9</link>
        <pubDate>Fri, 28 Aug 2009 02:08:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-297471-9</guid>
        <source url="https://forum.moparisthebest.com/t/text-sever/297471.rss">Text Sever</source>
      </item>
      <item>
        <title>Text Sever</title>
        <dc:creator><![CDATA[@xeez xeez`]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xeez">@xeez</a> wrote:</p>
          <blockquote>
              <p>abraham2119, I disagree. Even when one does not require the return value of an application, the user should be accustomed in reporting any errors, anyways. For example, with most C++ compilers, declaring main() of type “void” is valid; although, if any C++ programmer sees this, they will immediately list 100 reasons as to why one should declare main as int and return a proper status indication value. I have yet to see a failure in using [tt]java.lang.System.exit(int)[/tt].</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/text-sever/297471/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/text-sever/297471/8</link>
        <pubDate>Fri, 28 Aug 2009 01:50:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-297471-8</guid>
        <source url="https://forum.moparisthebest.com/t/text-sever/297471.rss">Text Sever</source>
      </item>
      <item>
        <title>Text Sever</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>ownagesbot, that is correct. its just as if i would return a !0 value in C in int main().</p>
<p>most articles state, however, that this method should be invoked only when implicitly required. there are questions as to whether it shuts down all other instantiated threads (whether daemon or non-daemon).</p>
<p>from what im seeing, he has no use in indicating that the application has returned with an error, since he is not doing anything outside of the process. i do see your point though. runtime.exit has very poor documentations, so i dont really have enough knowledge about how the function works.</p>
<p>ps found this article: <a href="http://www.javapractices.com/topic/TopicAction.do?Id=86" rel="nofollow noopener">http://www.javapractices.com/topic/TopicAction.do?Id=86</a></p>
<p>if anyone finds clearer documentations on this method (other than the java api, for i have read them), please link</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/text-sever/297471/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/text-sever/297471/7</link>
        <pubDate>Fri, 28 Aug 2009 01:32:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-297471-7</guid>
        <source url="https://forum.moparisthebest.com/t/text-sever/297471.rss">Text Sever</source>
      </item>
      <item>
        <title>Text Sever</title>
        <dc:creator><![CDATA[@ownagesbot ownagesbot]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ownagesbot">@ownagesbot</a> wrote:</p>
          <blockquote>
              <p>He’s using System.exit(1); when an invalid state is used. This is a correct usage of System.exit(int) as it signals that the program was terminated with an error. In this circumstance, returning back to main for a clean exit would effectively be signalling the wrong response.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/text-sever/297471/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/text-sever/297471/6</link>
        <pubDate>Thu, 27 Aug 2009 12:41:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-297471-6</guid>
        <source url="https://forum.moparisthebest.com/t/text-sever/297471.rss">Text Sever</source>
      </item>
      <item>
        <title>Text Sever</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>[quote=“Nueb35, post:4, topic:297471”][quote author=abraham2119 link=topic=393509.msg2929070#msg2929070 date=1251161980]<br>
ps. System.exit() is a bad habit, return in main<br>
[/quote]</p>
<p>and call [tt]thread.setDaemon(true);[/tt] on all threads?[/quote]the main thread is disposed of when returning. but any additional threads that were created need to invoke that function.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/text-sever/297471/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/text-sever/297471/5</link>
        <pubDate>Tue, 25 Aug 2009 02:02:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-297471-5</guid>
        <source url="https://forum.moparisthebest.com/t/text-sever/297471.rss">Text Sever</source>
      </item>
      <item>
        <title>Text Sever</title>
        <dc:creator><![CDATA[@nueb35 Nueb35]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/nueb35">@nueb35</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="3" data-topic="297471">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/abraham2119/40/5_513041d5f7104045db30895d3b90af16.png" class="avatar"> abraham2119:</div>
<blockquote>
<p>ps. System.exit() is a bad habit, return in main</p>
</blockquote>
</aside>
<p>and call [tt]thread.setDaemon(true);[/tt] on all threads?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/text-sever/297471/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/text-sever/297471/4</link>
        <pubDate>Tue, 25 Aug 2009 01:57:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-297471-4</guid>
        <source url="https://forum.moparisthebest.com/t/text-sever/297471.rss">Text Sever</source>
      </item>
      <item>
        <title>Text Sever</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>err hopefully you are invoking System.out.println(theOutput) because if not, how do you expect it to print?</p>
<p>ps. System.exit() is a bad habit, return in main</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/text-sever/297471/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/text-sever/297471/3</link>
        <pubDate>Tue, 25 Aug 2009 00:59:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-297471-3</guid>
        <source url="https://forum.moparisthebest.com/t/text-sever/297471.rss">Text Sever</source>
      </item>
      <item>
        <title>Text Sever</title>
        <dc:creator><![CDATA[@Tree_Climber Tree_Climber]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tree_climber">@Tree_Climber</a> wrote:</p>
          <blockquote>
              <p>When you are doing <code>theOutput.append("Welcome");
            pause(1000);
            theOutput = "What is your name";</code> You are basically creating a new String object when you are trying to append more data to the existing String because you did = which just resets the variable’s value to the new String object. being “what is your name”, so it is returning that. Instead you could probably use a StringBuilder for your purposes so that you can just append data. Or you could do .= if you really have a reason not to use a StringBuilder.[code]public String processInput(String theInput) {<br>
StringBuilder theOutput = new StringBuilder();</p>
<pre><code>    if (state == WAITING) {
         theOutput.append("Welcome");
        pause(1000);
        theOutput.append("What is your name");
         String input = scan.nextLine();
        state = NAME;

    } else if (state == NAME) {
                       theOutput.append("Hi" +input);
            state = WAITING;
        } else {
            System.exit(1);
        }
    }
    return theOutput.toString();
}
</code></pre>
<p>}[/code]</p>
<p>The reason you aren’t getting what you want is because you did and if-else statement. So it executes one or the other, and it just is never getting to the code block in the if statement. That or it’s cause you are storing the input variable locally and so when it recalls the method that data is lost. It’s hard to tell because I don’t know in which context it is called.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/text-sever/297471/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/text-sever/297471/2</link>
        <pubDate>Mon, 24 Aug 2009 17:22:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-297471-2</guid>
        <source url="https://forum.moparisthebest.com/t/text-sever/297471.rss">Text Sever</source>
      </item>
      <item>
        <title>Text Sever</title>
        <dc:creator><![CDATA[@Fat_Cookies Fat Cookies]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/fat_cookies">@Fat_Cookies</a> wrote:</p>
          <blockquote>
              <p>As you might know or guessed, I suck at Java so I need some help.</p>
<p>I started to make a Online (hopefully multiplayer) text-based RPG. I looked around the java website and I came accross making a <a href="http://java.sun.com/docs/books/tutorial/networking/sockets/clientServer.html" data-bbcode="true">Server/Client</a>, I used this as a base and started to get basic greeting and player details to work.<br>
(I do admit, I did not write EVERYTHING but I have gone over the code; I do not lie like some idiots)</p>
<p>Unfortunately, When trying to to ask “What is your name” recording the response and replying “Welcome” + input I fall into many problems.</p>
<p>[code]public String processInput(String theInput) {<br>
String theOutput = null;</p>
<pre><code>    if (state == WAITING) {
         theOutput = "Welcome";
        pause(1000);
        theOutput = "What is your name";
         String input = scan.nextLine();
        state = NAME;

    } else if (state == NAME) {
                       theOutput = "Hi" +input;
            state = WAITING;
        } else {
            System.exit(1);
        }
    }
    return theOutput;
}
</code></pre>
<p>}[/code]<br>
Also “Welcome” is not printed…<br>
Finally, would it be possible to send messages via methods (I would find it much easier that way)</p>
<p>Can someone nudge me onto the right path.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/text-sever/297471/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/text-sever/297471/1</link>
        <pubDate>Mon, 24 Aug 2009 17:08:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-297471-1</guid>
        <source url="https://forum.moparisthebest.com/t/text-sever/297471.rss">Text Sever</source>
      </item>
  </channel>
</rss>
