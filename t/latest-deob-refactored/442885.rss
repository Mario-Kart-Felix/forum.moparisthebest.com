<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Latest deob refactored</title>
    <link>https://forum.moparisthebest.com/t/latest-deob-refactored/442885</link>
    <description>This is a work in progress. The deobfuscation isn&#39;t perfect, there are still lots of redundant increments, dummy arguments and static members scattered around. It also isn&#39;t refactored as much as I&#39;d like it to be. After fixing a bug with adding friends caused by my XOR transformer, it does compile and run perfectly.

The revision is 233. The protocol is mostly the same as the [url=http://rswiki.moparisthebest.com/index.php?title=204_Protocol]204 protocol[/url], with changes to the login block, banking, shops, trading and staking.

Interesting stuff:

The client now uses DirectX for audio, which makes sense with sun.audio.AudioPlayer being deprecated.

The cache format is now the same as RS2. I&#39;ve made it load the cache from the hard disk but it&#39;s badly done. A better solution would be to hack the loader.

Action processing and the way action menus are created is very different in comparison to older revisions.

Class46 is creepy.</description>
    
    <lastBuildDate>Sun, 27 May 2012 18:56:19 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/latest-deob-refactored/442885.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Latest deob refactored</title>
        <dc:creator><![CDATA[@amfg amfg]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/amfg">@amfg</a> wrote:</p>
          <blockquote>
              <p>[quote=“veer, post:5, topic:442885”]Sample audio is implemented via DirectX in the case you use the old MSJVM, afaik. Otherwise, it defaults to using javax.sound.sampled.</p>
<p>edit:</p>
<p>[code]final class SunAudioOutput extends AudioOutput<br>
{<br>
private AudioFormat format;<br>
private int sample_cnt;<br>
private byte[] recoded_data;<br>
private SourceDataLine output;<br>
static Class line_type;<br>
private static final String[] aStringArray1096;</p>
<pre><code>final void initialize(Component arg0) {
    Mixer.Info[] infos = AudioSystem.getMixerInfo();
    if (infos != null) {
        Mixer.Info[] infos_0_ = infos;
        int i = 0;
        for (/**/; infos_0_.length &gt; i; i++) {
            Mixer.Info info = infos_0_[i];
            if (info != null) {
                String string = info.getName();
                if (string == null
                    || 0 &gt;= string.toLowerCase().indexOf("soundmax"))
                    continue;
            }
        }
    }
    format
        = new AudioFormat((float) IOException_Sub1.sample_rate, 16,
                          !Class59.stereo ? 1 : 2, true, false);
    recoded_data = new byte[256 &lt;&lt; (!Class59.stereo ? 1 : 2)];
}

final void close() {
    if (null != output) {
        output.close();
        output = null;
    }
}

final int remaining() {
    return sample_cnt - (output.available()
                        &gt;&gt; (!Class59.stereo ? 1 : 2));
}

final void flush() {
    int flush_size = 256;
    if (Class59.stereo)
        flush_size &lt;&lt;= 1;
    for (int n = 0; n &lt; flush_size; n++) {
        int sample = this.samples[n];
        if ((sample &amp; ~0xffffff) != 0)
            sample = 0x7fffff ^ n &gt;&gt; 31;
        recoded_data[n * 2] = (byte) (sample &gt;&gt; 8);
        recoded_data[n * 2 + 1] = (byte) (sample &gt;&gt; 16);
    }
    output.write(recoded_data, 0, flush_size &lt;&lt; 1);
}

final void start(int num_samples) throws LineUnavailableException {
    DataLine.Info info
        = (new DataLine.Info
           ((line_type == null
             ? line_type = resolve("javax.sound.sampled.SourceDataLine")
             : line_type),
            format, num_samples &lt;&lt; (Class59.stereo ? 2 : 1)));
    output = (SourceDataLine) AudioSystem.getLine(info);
    output.open();
    output.start();
    sample_cnt = num_samples;
}

static Class resolve(String name) {
    return Class.forName(name);
}
</code></pre>
<p>}[/code]</p>
<p>SampledAudio misrepresents what meaningful purpose the class has… not only is it not representative of audio itself rather than a strategy for audio output, but what distinguishes it from the other Class42 subclass is not that it uses sampled audio, as both do (the fact that the files are .PCM themselves makes this obvious), but rather that it uses javax.sound.sampled for emitting sampled audio to mix.[/quote]</p>
<p>Thanks for the useful info.</p>
<p>[quote=“imthenull, post:6, topic:442885”]nice release. this is very interesting… im definitely going through this!</p>
<p>edit, did anyone else know you can type “-null-” in the sleep screen for a new word??[/quote]</p>
<p>Yeah, it’s been like that since the sleep word system was first implemented afaik.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/latest-deob-refactored/442885/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/latest-deob-refactored/442885/8</link>
        <pubDate>Sun, 27 May 2012 18:56:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-442885-8</guid>
        <source url="https://forum.moparisthebest.com/t/latest-deob-refactored/442885.rss">Latest deob refactored</source>
      </item>
      <item>
        <title>Latest deob refactored</title>
        <dc:creator><![CDATA[@Rodgerwilco Rodgerwilco]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rodgerwilco">@Rodgerwilco</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="6" data-topic="442885">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/imthenull/40/1273_1.png" class="avatar"> imthenull:</div>
<blockquote>
<p>“-null-” in the sleep screen for a new word??</p>
</blockquote>
</aside>
<p>Naise.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/latest-deob-refactored/442885/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/latest-deob-refactored/442885/7</link>
        <pubDate>Wed, 23 May 2012 03:44:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-442885-7</guid>
        <source url="https://forum.moparisthebest.com/t/latest-deob-refactored/442885.rss">Latest deob refactored</source>
      </item>
      <item>
        <title>Latest deob refactored</title>
        <dc:creator><![CDATA[@imthenull imthenull]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imthenull">@imthenull</a> wrote:</p>
          <blockquote>
              <p>nice release. this is very interesting… im definitely going through this!</p>
<p>edit, did anyone else know you can type “-null-” in the sleep screen for a new word??</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/latest-deob-refactored/442885/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/latest-deob-refactored/442885/6</link>
        <pubDate>Wed, 23 May 2012 03:19:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-442885-6</guid>
        <source url="https://forum.moparisthebest.com/t/latest-deob-refactored/442885.rss">Latest deob refactored</source>
      </item>
      <item>
        <title>Latest deob refactored</title>
        <dc:creator><![CDATA[@slavemaster veer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/slavemaster">@slavemaster</a> wrote:</p>
          <blockquote>
              <p>Sample audio is implemented via DirectX in the case you use the old MSJVM, afaik. Otherwise, it defaults to using javax.sound.sampled.</p>
<p>edit:</p>
<p>[code]final class SunAudioOutput extends AudioOutput<br>
{<br>
private AudioFormat format;<br>
private int sample_cnt;<br>
private byte[] recoded_data;<br>
private SourceDataLine output;<br>
static Class line_type;<br>
private static final String[] aStringArray1096;</p>
<pre><code>final void initialize(Component arg0) {
    Mixer.Info[] infos = AudioSystem.getMixerInfo();
    if (infos != null) {
        Mixer.Info[] infos_0_ = infos;
        int i = 0;
        for (/**/; infos_0_.length &gt; i; i++) {
            Mixer.Info info = infos_0_[i];
            if (info != null) {
                String string = info.getName();
                if (string == null
                    || 0 &gt;= string.toLowerCase().indexOf("soundmax"))
                    continue;
            }
        }
    }
    format
        = new AudioFormat((float) IOException_Sub1.sample_rate, 16,
                          !Class59.stereo ? 1 : 2, true, false);
    recoded_data = new byte[256 &lt;&lt; (!Class59.stereo ? 1 : 2)];
}

final void close() {
    if (null != output) {
        output.close();
        output = null;
    }
}

final int remaining() {
    return sample_cnt - (output.available()
                        &gt;&gt; (!Class59.stereo ? 1 : 2));
}

final void flush() {
    int flush_size = 256;
    if (Class59.stereo)
        flush_size &lt;&lt;= 1;
    for (int n = 0; n &lt; flush_size; n++) {
        int sample = this.samples[n];
        if ((sample &amp; ~0xffffff) != 0)
            sample = 0x7fffff ^ n &gt;&gt; 31;
        recoded_data[n * 2] = (byte) (sample &gt;&gt; 8);
        recoded_data[n * 2 + 1] = (byte) (sample &gt;&gt; 16);
    }
    output.write(recoded_data, 0, flush_size &lt;&lt; 1);
}

final void start(int num_samples) throws LineUnavailableException {
    DataLine.Info info
        = (new DataLine.Info
           ((line_type == null
             ? line_type = resolve("javax.sound.sampled.SourceDataLine")
             : line_type),
            format, num_samples &lt;&lt; (Class59.stereo ? 2 : 1)));
    output = (SourceDataLine) AudioSystem.getLine(info);
    output.open();
    output.start();
    sample_cnt = num_samples;
}

static Class resolve(String name) {
    return Class.forName(name);
}
</code></pre>
<p>}[/code]</p>
<p>SampledAudio misrepresents what meaningful purpose the class has… not only is it not representative of audio itself rather than a strategy for audio output, but what distinguishes it from the other Class42 subclass is not that it uses sampled audio, as both do (the fact that the files are .PCM themselves makes this obvious), but rather that it uses javax.sound.sampled for emitting sampled audio to mix.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/latest-deob-refactored/442885/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/latest-deob-refactored/442885/5</link>
        <pubDate>Tue, 22 May 2012 23:27:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-442885-5</guid>
        <source url="https://forum.moparisthebest.com/t/latest-deob-refactored/442885.rss">Latest deob refactored</source>
      </item>
      <item>
        <title>Latest deob refactored</title>
        <dc:creator><![CDATA[@Chuck_testa Chuck testa]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/chuck_testa">@Chuck_testa</a> wrote:</p>
          <blockquote>
              <p><code>    private final void method83(byte arg0, String arg1) {
	if (aClass23_Sub2_Sub2_114 != null &amp;&amp; !aBoolean166) {
	    int i
		= Class57.method583(arg1 + ".pcm", aByteArray350, -947693082);
	    int i_766_ = Frame_Sub1.method381(arg1 + ".pcm", (byte) -125,
					      aByteArray350);
	    if (i_766_ != 0) {
		Class23_Sub3_Sub1 class23_sub3_sub1
		    = (new Class23_Sub3_Sub1
		       (8000,
			Class36_Sub1.method270(i, 116, i_766_, aByteArray350),
			0, i_766_));
		aClass23_Sub2_Sub2_114.method570(class23_sub3_sub1, 100, 256);
		if (arg0 &gt; -85)
		    aBooleanArray32 = null;
	    }
	}
    }</code></p>
<p>As I see they still use the old format, decompressing it from the cache after that then played in a type of way using the actual old RSC sound method and not even the directx sound method.</p>
<p>Please research, they do not use everything what is in there client.</p>
<p>More info for you.<br>
Loading sounds</p>
<p><code>    private final void method118(int arg0) {
	aByteArray350 = this.method350(arg0, 90, "Sound effects", arg0 ^ ~0x3);
	Class36_Sub1.method268(50000, 1, false, 22050);
	java.awt.Container container;
	if (Class22.aFrame_Sub1_656 == null) {
	    if (Class26.anApplet737 != null)
		container = Class26.anApplet737;
	    else
		container = this;
	} else
	    container = Class22.aFrame_Sub1_656;
	aClass42_126 = ActionMenu.method558(container, (byte) 123, 22050,
					    Class44.aClass48_961, 0);
	aClass23_Sub2_Sub2_114 = new Class23_Sub2_Sub2();
	aClass42_126.method483(aClass23_Sub2_Sub2_114, 16385);
    }</code></p>
<p>aClass42_126 = ActionMenu.method558(container, (byte) 123, 22050,<br>
Class44.aClass48_961, 0);</p>
<p><code>    static final Class42 method558(Component arg0, byte arg1, int arg2,
				   Class48 arg3, int arg4) {
	if (IOException_Sub1.anInt549 == 0)
	    throw new IllegalStateException();
	if (arg4 &lt; 0 || arg4 &gt;= 2)
	    throw new IllegalArgumentException();
	if (arg2 &lt; 256)
	    arg2 = 256;
	Class42 class42
	    = (Class42) Class.forName("Class42_Sub2").newInstance();
	((Class42) class42).anIntArray912
	    = new int[(!Class59.aBoolean1126 ? 1 : 2) * 256];
	((Class42) class42).anInt920 = arg2;
	class42.method275(arg0);
	((Class42) class42).anInt928 = (~0x3ff &amp; arg2) + 1024;
	if (((Class42) class42).anInt928 &gt; 16384)
	    ((Class42) class42).anInt928 = 16384;
	class42.method276(((Class42) class42).anInt928);
	if (Class22.anInt657 &gt; 0 &amp;&amp; MobWrapper.aClass35_638 == null) {
	    MobWrapper.aClass35_638 = new Class35();
	    ((Class35) MobWrapper.aClass35_638).aClass48_828 = arg3;
	    arg3.method542(Class22.anInt657, (byte) -128,
			   MobWrapper.aClass35_638);
	}
	int i = -47 / ((arg1 - 77) / 46);
	if (MobWrapper.aClass35_638 != null) {
	    if (((Class35) MobWrapper.aClass35_638).aClass42Array826[arg4]
		!= null)
		throw new IllegalArgumentException();
	    ((Class35) MobWrapper.aClass35_638).aClass42Array826[arg4]
		= class42;
	}
	return class42;
    }</code></p>
<pre><code>Class42 class42
    = (Class42) Class.forName("Class42_Sub2").newInstance();
</code></pre>
<p>[code]/* Class42_Sub2 - Decompiled by JODE</p>
<ul>
<li>Visit <a href="http://jode.sourceforge.net/" rel="nofollow noopener">http://jode.sourceforge.net/</a><br>
*/<br>
import java.awt.Component;</li>
</ul>
<p>import javax.sound.sampled.AudioFormat;<br>
import javax.sound.sampled.AudioSystem;<br>
import javax.sound.sampled.DataLine;<br>
import javax.sound.sampled.LineUnavailableException;<br>
import javax.sound.sampled.Mixer;<br>
import javax.sound.sampled.SourceDataLine;</p>
<p>final class Class42_Sub2 extends Class42<br>
{<br>
private AudioFormat anAudioFormat1099;<br>
private int anInt1098;<br>
private byte[] aByteArray1097;<br>
private SourceDataLine aSourceDataLine1095;<br>
static Class aClass1100;<br>
private static final String[] aStringArray1096;</p>
<pre><code>final void method275(Component arg0) {
Mixer.Info[] infos = AudioSystem.getMixerInfo();
if (infos != null) {
    Mixer.Info[] infos_0_ = infos;
    int i = 0;
    for (/**/; infos_0_.length &gt; i; i++) {
	Mixer.Info info = infos_0_[i];
	if (info != null) {
	    String string = info.getName();
	    if (string == null
		|| -1 &gt;= (string.toLowerCase().indexOf("soundmax")
			  ^ 0xffffffff))
		continue;
	}
    }
}
anAudioFormat1099
    = new AudioFormat((float) IOException_Sub1.anInt549, 16,
		      !Class59.aBoolean1126 ? 1 : 2, true, false);
aByteArray1097 = new byte[256 &lt;&lt; (!Class59.aBoolean1126 ? 1 : 2)];
}

final void method277() {
if (null != aSourceDataLine1095) {
    aSourceDataLine1095.close();
    aSourceDataLine1095 = null;
}
}

final int method273() {
return anInt1098 - (aSourceDataLine1095.available()
		    &gt;&gt; (!Class59.aBoolean1126 ? 1 : 2));
}

final void method274() {
int i = 256;
if (Class59.aBoolean1126)
    i &lt;&lt;= 1;
for (int i_1_ = 0; i_1_ &lt; i; i_1_++) {
    int i_2_ = ((Class42_Sub2) this).anIntArray912[i_1_];
    if ((i_2_ + 8388608 &amp; ~0xffffff) != 0)
	i_2_ = 0x7fffff ^ i_2_ &gt;&gt; 31;
    aByteArray1097[i_1_ * 2] = (byte) (i_2_ &gt;&gt; 8);
    aByteArray1097[i_1_ * 2 + 1] = (byte) (i_2_ &gt;&gt; 16);
}
aSourceDataLine1095.write(aByteArray1097, 0, i &lt;&lt; 1);
}

final void method276(int arg0) throws LineUnavailableException {
DataLine.Info info
    = (new DataLine.Info
       ((aClass1100 == null
	 ? aClass1100 = method577("javax.sound.sampled.SourceDataLine")
	 : aClass1100),
	anAudioFormat1099, arg0 &lt;&lt; (Class59.aBoolean1126 ? 2 : 1)));
aSourceDataLine1095 = (SourceDataLine) AudioSystem.getLine(info);
aSourceDataLine1095.open();
aSourceDataLine1095.start();
anInt1098 = arg0;
}

static Class method577(String arg0) {
return Class.forName(arg0);
}
</code></pre>
<p>}<br>
[/code]</p>
<p>So what I see is that there using javax sound? Interesting you can say sorry when ever.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/latest-deob-refactored/442885/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/latest-deob-refactored/442885/4</link>
        <pubDate>Tue, 22 May 2012 22:57:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-442885-4</guid>
        <source url="https://forum.moparisthebest.com/t/latest-deob-refactored/442885.rss">Latest deob refactored</source>
      </item>
      <item>
        <title>Latest deob refactored</title>
        <dc:creator><![CDATA[@amfg amfg]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/amfg">@amfg</a> wrote:</p>
          <blockquote>
              <p>[quote=“Chuck testa, post:2, topic:442885”]Interesting fact. the Directx direct sound is never ever used in the RSC client and they still use there old System…</p>
<p>Interesting.[/quote]</p>
<p>sun.audio.AudioPlayer is never used anywhere…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/latest-deob-refactored/442885/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/latest-deob-refactored/442885/3</link>
        <pubDate>Tue, 22 May 2012 22:47:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-442885-3</guid>
        <source url="https://forum.moparisthebest.com/t/latest-deob-refactored/442885.rss">Latest deob refactored</source>
      </item>
      <item>
        <title>Latest deob refactored</title>
        <dc:creator><![CDATA[@Chuck_testa Chuck testa]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/chuck_testa">@Chuck_testa</a> wrote:</p>
          <blockquote>
              <p>Interesting fact. the Directx direct sound is never ever used in the RSC client and they still use there old System…</p>
<p>Interesting.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/latest-deob-refactored/442885/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/latest-deob-refactored/442885/2</link>
        <pubDate>Tue, 22 May 2012 22:27:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-442885-2</guid>
        <source url="https://forum.moparisthebest.com/t/latest-deob-refactored/442885.rss">Latest deob refactored</source>
      </item>
      <item>
        <title>Latest deob refactored</title>
        <dc:creator><![CDATA[@amfg amfg]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/amfg">@amfg</a> wrote:</p>
          <blockquote>
              <p>This is a work in progress. The deobfuscation isn’t perfect, there are still lots of redundant increments, dummy arguments and static members scattered around. It also isn’t refactored as much as I’d like it to be. After fixing a bug with adding friends caused by my XOR transformer, it does compile and run perfectly.</p>
<p>The revision is 233. The protocol is mostly the same as the <a href="http://rswiki.moparisthebest.com/index.php?title=204_Protocol" data-bbcode="true" rel="nofollow noopener">204 protocol</a>, with changes to the login block, banking, shops, trading and staking.</p>
<p>Interesting stuff:</p>
<p>The client now uses DirectX for audio, which makes sense with sun.audio.AudioPlayer being deprecated.</p>
<p>The cache format is now the same as RS2. I’ve made it load the cache from the hard disk but it’s badly done. A better solution would be to hack the loader.</p>
<p>Action processing and the way action menus are created is very different in comparison to older revisions.</p>
<p>Class46 is creepy.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/latest-deob-refactored/442885/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/latest-deob-refactored/442885/1</link>
        <pubDate>Tue, 22 May 2012 12:02:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-442885-1</guid>
        <source url="https://forum.moparisthebest.com/t/latest-deob-refactored/442885.rss">Latest deob refactored</source>
      </item>
  </channel>
</rss>
