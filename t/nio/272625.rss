<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Nio</title>
    <link>https://forum.moparisthebest.com/t/nio/272625</link>
    <description>Well, I am curious. I want to learn about the NIO library to make a networking system for my Server using a SocketChannel. I have learned a little about NIO itself but I do not understand the full library of NIO yet. I understand somethings like ByteBuffers, all that garbage. Readers and writers are really where I am confused at in making a networking system using the NIO library.

Anyone mind help explaining a bit so I can learn about the library itself?</description>
    
    <lastBuildDate>Sun, 12 Apr 2009 15:22:52 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/nio/272625.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Nio</title>
        <dc:creator><![CDATA[@bundy bundy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bundy">@bundy</a> wrote:</p>
          <blockquote>
              <p>xpatx, I can assure you I’ve used NIO a lot; probably more times then you have. That’s simply the select() event handler.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/nio/272625/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/nio/272625/5</link>
        <pubDate>Sun, 12 Apr 2009 15:22:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-272625-5</guid>
        <source url="https://forum.moparisthebest.com/t/nio/272625.rss">Nio</source>
      </item>
      <item>
        <title>Nio</title>
        <dc:creator><![CDATA[@xpatx xpatx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xpatx">@xpatx</a> wrote:</p>
          <blockquote>
              <p>Bundy, a NIO networking system uses reading, writing, and accepting as its main three executions. Example from OpenRS made by Blake:</p>
<p>[code=java]/*</p>
<ul>
<li>This file is free software; you can redistribute it and/or modify it under</li>
<li>the terms of the GNU General Public License version 2, 1991 as published by</li>
<li>the Free Software Foundation.</li>
<li>
</li>
<li>This program is distributed in the hope that it will be useful, but WITHOUT</li>
<li>ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS</li>
<li>FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more</li>
<li>details.</li>
<li>
</li>
<li>A copy of the GNU General Public License can be found at:</li>
<li>
<a href="http://www.gnu.org/licenses/gpl.html" rel="nofollow noopener">http://www.gnu.org/licenses/gpl.html</a><br>
*/</li>
</ul>
<p>package com.openrs.nio;</p>
<p>import java.io.IOException;<br>
import java.nio.ByteBuffer;<br>
import java.nio.channels.SelectionKey;<br>
import java.nio.channels.ServerSocketChannel;<br>
import java.nio.channels.SocketChannel;</p>
<p>import com.openrs.Main;<br>
import com.openrs.model.client.Session;</p>
<p>/**</p>
<ul>
<li>
<p>NioEventHandler.java</p>
</li>
<li>
</li>
<li>
<p>Handles a demultiplexed and dispatched network event.</p>
</li>
<li>
</li>
<li>
<p><span class="mention">@author</span> defqon<br>
*/<br>
public class NioEventHandler implements Runnable {</p>
<p>private SelectionKey selectionKey;</p>
<p>public NioEventHandler(SelectionKey selectionKey) {<br>
this.selectionKey = selectionKey;<br>
}</p>
<p>public void run() {<br>
Thread.currentThread().setName(“NioEventHandler”);<br>
if (selectionKey.isValid()) {<br>
switch (selectionKey.readyOps()) {<br>
case SelectionKey.OP_ACCEPT:<br>
accept();<br>
break;<br>
case SelectionKey.OP_READ:<br>
read();<br>
break;<br>
case SelectionKey.OP_WRITE:<br>
write();<br>
break;<br>
default:<br>
return;<br>
}<br>
}<br>
}</p>
<p>/*</p>
<ul>
<li>Accepts an in-bound connection.<br>
*/<br>
private final void accept() {<br>
ServerSocketChannel ssc = (ServerSocketChannel) selectionKey.channel();<br>
try {<br>
SocketChannel socketChannel = ssc.accept();<br>
if (socketChannel != null) {<br>
socketChannel.configureBlocking(false);<br>
Main.getSessionManager().addSession(socketChannel);<br>
Main.getNioDemultiplexer().register(socketChannel,<br>
SelectionKey.OP_READ);<br>
}<br>
} catch (IOException ioe) {<br>
System.out.println(“exception”);<br>
selectionKey.cancel();<br>
}<br>
}</li>
</ul>
<p>/*</p>
<ul>
<li>Reads data from a connection.<br>
*/<br>
private final void read() {<br>
SocketChannel socketChannel = (SocketChannel) selectionKey.channel();<br>
Session session = Main.getSessionManager().getSession(socketChannel);<br>
ByteBuffer buffer = ByteBuffer.allocate(256);<br>
try {<br>
switch (socketChannel.read(buffer)) {<br>
case -1:<br>
session.terminate();<br>
selectionKey.cancel();<br>
break;<br>
case 0: // no data was read<br>
break;<br>
default:<br>
buffer.flip();<br>
synchronized (session.getInData()) {<br>
session.getInData().add(buffer);<br>
}<br>
break;<br>
}<br>
} catch (IOException ioe) {<br>
selectionKey.cancel();<br>
if (session != null) {<br>
session.terminate();<br>
}<br>
}<br>
}</li>
</ul>
<p>/*</p>
<ul>
<li>Writes data to a connection.<br>
*/<br>
private final void write() {<br>
SocketChannel socketChannel = (SocketChannel) selectionKey.channel();<br>
Session session = Main.getSessionManager().getSession(socketChannel);<br>
try {<br>
synchronized (session.getOutData()) {<br>
for (ByteBuffer buffer : session.getOutData()) {<br>
socketChannel.write(buffer);<br>
}<br>
session.getOutData().clear();<br>
}<br>
Main.getNioDemultiplexer().switchOp(socketChannel,<br>
SelectionKey.OP_READ);<br>
} catch (IOException ioe) {<br>
selectionKey.cancel();<br>
session.terminate();<br>
}<br>
}<br>
[/code]</li>
</ul>
</li>
</ul>
<p>It read, writes, and accepts the connection.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/nio/272625/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/nio/272625/4</link>
        <pubDate>Sun, 12 Apr 2009 15:17:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-272625-4</guid>
        <source url="https://forum.moparisthebest.com/t/nio/272625.rss">Nio</source>
      </item>
      <item>
        <title>Nio</title>
        <dc:creator><![CDATA[@bundy bundy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bundy">@bundy</a> wrote:</p>
          <blockquote>
              <p>java.io.Reader &amp; Writer are stream-based, what the fuck? I thought this was discussing the channel-based I/O found in java.nio not stream-based I/O in <a href="http://java.io" rel="nofollow noopener">java.io</a>.</p>
<p>NIO provides a new feel to do I/O, although it is incomplete. To see what it lacks, check out JSR 203. You won’t regret it <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=6" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/nio/272625/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/nio/272625/3</link>
        <pubDate>Sun, 12 Apr 2009 05:23:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-272625-3</guid>
        <source url="https://forum.moparisthebest.com/t/nio/272625.rss">Nio</source>
      </item>
      <item>
        <title>Nio</title>
        <dc:creator><![CDATA[@Unhandled Unhandled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unhandled">@Unhandled</a> wrote:</p>
          <blockquote>
              <p>There are like 9999 tutorials, why should we bother writing another one. If you have a <span class="bbcode-b">specific</span> question, we may be able to help you out.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/nio/272625/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/nio/272625/2</link>
        <pubDate>Sun, 12 Apr 2009 00:11:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-272625-2</guid>
        <source url="https://forum.moparisthebest.com/t/nio/272625.rss">Nio</source>
      </item>
      <item>
        <title>Nio</title>
        <dc:creator><![CDATA[@xpatx xpatx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xpatx">@xpatx</a> wrote:</p>
          <blockquote>
              <p>Well, I am curious. I want to learn about the NIO library to make a networking system for my Server using a SocketChannel. I have learned a little about NIO itself but I do not understand the full library of NIO yet. I understand somethings like ByteBuffers, all that garbage. Readers and writers are really where I am confused at in making a networking system using the NIO library.</p>
<p>Anyone mind help explaining a bit so I can learn about the library itself?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/nio/272625/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/nio/272625/1</link>
        <pubDate>Sat, 11 Apr 2009 23:57:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-272625-1</guid>
        <source url="https://forum.moparisthebest.com/t/nio/272625.rss">Nio</source>
      </item>
  </channel>
</rss>
