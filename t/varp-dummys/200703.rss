<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Varp dummys?</title>
    <link>https://forum.moparisthebest.com/t/varp-dummys/200703</link>
    <description>Moparisthebest i was going through your refactored deob i was looking into what varp.dat was actually for what i do not understand is why jagex would throw in so many dummies?

[code]public final class  Varp {

    public static void unpackConfig(StreamLoader streamLoader)
    {
        Stream stream = new Stream(streamLoader.getDataForName(&quot;varp.dat&quot;));
        anInt702 = 0;
        int cacheSize = stream.readUnsignedWord();
        if(cache == null)
            cache = new Varp[cacheSize];
        if(anIntArray703 == null)
            anIntArray703 = new int[cacheSize];
        for(int j = 0; j &lt; cacheSize; j++)
        {
            if(cache[j] == null)
                cache[j] = new Varp();
            cache[j].readValues(stream, j);
        }
        if(stream.currentOffset != stream.buffer.length)
            System.out.println(&quot;varptype load mismatch&quot;);
    }

    private void readValues(Stream stream, int i)
    {
        do
        {
            int j = stream.readUnsignedByte();
            if(j == 0)
                return;
            int dummy;
            if(j == 1)
                 stream.readUnsignedByte();
            else
            if(j == 2)
                stream.readUnsignedByte();
            else
            if(j == 3)
                anIntArray703[anInt702++] = i;
            else
            if(j == 4)
                dummy = 2;
            else
            if(j == 5)
                anInt709 = stream.readUnsignedWord();
            else
            if(j == 6)
                dummy = 2;
            else
            if(j == 7)
                stream.readDWord();
            else
            if(j == 8)
                aBoolean713 = true;
             else
            if(j == 10) {
                stream.readString();
            }
            else
            if(j == 11)
                aBoolean713 = true;
            else
            if(j == 12)
                stream.readDWord();
            else
            if(j == 13)
                dummy = 2;
            else
                System.out.println(&quot;Error unrecognised config code: &quot; + j);
        } while(true);
    }

    private Varp()
    {
        aBoolean713 = false;
    }

    public static Varp cache[];
    private static int anInt702;
    private static int[] anIntArray703;
    public int anInt709;
    public boolean aBoolean713;

}[/code]

does anyone have any information as to why jagex would throw in so many dummies or could this possible be a bad refactor job?</description>
    
    <lastBuildDate>Thu, 17 Apr 2008 10:01:57 +0000</lastBuildDate>
    <category>Community Inside Talk</category>
    <atom:link href="https://forum.moparisthebest.com/t/varp-dummys/200703.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Varp dummys?</title>
        <dc:creator><![CDATA[@silabsoft RuneAgent]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silabsoft">@silabsoft</a> wrote:</p>
          <blockquote>
              <p>Moparisthebest i was going through your refactored deob i was looking into what varp.dat was actually for what i do not understand is why jagex would throw in so many dummies?</p>
<p>[code]public final class  Varp {</p>
<pre><code>public static void unpackConfig(StreamLoader streamLoader)
{
    Stream stream = new Stream(streamLoader.getDataForName("varp.dat"));
    anInt702 = 0;
    int cacheSize = stream.readUnsignedWord();
    if(cache == null)
        cache = new Varp[cacheSize];
    if(anIntArray703 == null)
        anIntArray703 = new int[cacheSize];
    for(int j = 0; j &lt; cacheSize; j++)
    {
        if(cache[j] == null)
            cache[j] = new Varp();
        cache[j].readValues(stream, j);
    }
    if(stream.currentOffset != stream.buffer.length)
        System.out.println("varptype load mismatch");
}

private void readValues(Stream stream, int i)
{
    do
    {
        int j = stream.readUnsignedByte();
        if(j == 0)
            return;
        int dummy;
        if(j == 1)
             stream.readUnsignedByte();
        else
        if(j == 2)
            stream.readUnsignedByte();
        else
        if(j == 3)
            anIntArray703[anInt702++] = i;
        else
        if(j == 4)
            dummy = 2;
        else
        if(j == 5)
            anInt709 = stream.readUnsignedWord();
        else
        if(j == 6)
            dummy = 2;
        else
        if(j == 7)
            stream.readDWord();
        else
        if(j == 8)
            aBoolean713 = true;
         else
        if(j == 10) {
            stream.readString();
        }
        else
        if(j == 11)
            aBoolean713 = true;
        else
        if(j == 12)
            stream.readDWord();
        else
        if(j == 13)
            dummy = 2;
        else
            System.out.println("Error unrecognised config code: " + j);
    } while(true);
}

private Varp()
{
    aBoolean713 = false;
}

public static Varp cache[];
private static int anInt702;
private static int[] anIntArray703;
public int anInt709;
public boolean aBoolean713;
</code></pre>
<p>}[/code]</p>
<p>does anyone have any information as to why jagex would throw in so many dummies or could this possible be a bad refactor job?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/varp-dummys/200703/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/varp-dummys/200703/1</link>
        <pubDate>Thu, 17 Apr 2008 10:01:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-200703-1</guid>
        <source url="https://forum.moparisthebest.com/t/varp-dummys/200703.rss">Varp dummys?</source>
      </item>
  </channel>
</rss>
