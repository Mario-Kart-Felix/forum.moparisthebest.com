<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Need a little help</title>
    <link>https://forum.moparisthebest.com/t/need-a-little-help/112532</link>
    <description>ok i have the following program:

[code]
public class Test 
{
    static void g(int [] a)
    {
        for (int i = 0; i &lt; a.length; i++){
            if ( s(a, i) &lt; 0 ){
                a[i] = -a[i];
            }
        }
    }
    
    static int s(int [] a, int i)
    {
        int temp = 0;
        for (int j = 0; j &lt;= i; j++){
            temp+=a[j];
        }
        return temp;
    }
 }
[/code]

Ands 2 questions:
1.What does method g do?
2. How do i write both methods recursively?</description>
    
    <lastBuildDate>Mon, 18 Jun 2007 02:56:55 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/need-a-little-help/112532.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Need a little help</title>
        <dc:creator><![CDATA[@Cheese_Police c|p]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cheese_police">@Cheese_Police</a> wrote:</p>
          <blockquote>
              <p>[code]public class Test {</p>
<pre><code>/**
 * This corrects negatives (applys an abs, essentially) in an array
 * of integers based of getValueOfSection
 */
static void correctNegatives( int[] numbers ) {
	for ( int position = 0; position &lt; numbers.length; position++ )
		if ( getValueOfSection(numbers, position) &lt; 0 )
			numbers[position] = -numbers[position];
}

/**
 * Say you have an array of integers, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
 * this will sum the values up to 'position'.
 * For example, getValueOfSection( myArray, 7 ); will return 
 * 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8, seeing as keys 0-7 are those numbers.
 */
static int getValueOfSection( int[] numbers, int position ) {
	int temp = 0;
	for ( int offset = 0; offset &lt;= position; offset++ )
		temp += numbers[offset];
	return temp;
}
</code></pre>
<p>}[/code]</p>
<p>I made it a bit more understandable</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/need-a-little-help/112532/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/need-a-little-help/112532/3</link>
        <pubDate>Mon, 18 Jun 2007 02:56:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-112532-3</guid>
        <source url="https://forum.moparisthebest.com/t/need-a-little-help/112532.rss">Need a little help</source>
      </item>
      <item>
        <title>Need a little help</title>
        <dc:creator><![CDATA[@RLN RLN]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rln">@RLN</a> wrote:</p>
          <blockquote>
              <ol>
<li>
<p>It checks if the sum of all the numbers up to the current loop index is negative, and makes the current index positive if so. (I think, there may be a better way to word it :D)</p>
</li>
<li>
<p>I tried to write one, but without a test case I can’t check to see if it’s right. I most likely have a logic problem</p>
</li>
</ol>
<p>[code]public int[] recursive(int[] a, int i /*should be 0 when first called */) {<br>
int temp = 0;</p>
<pre><code>for(int x = 0; x &lt; i; ++x) {
	temp += a[x];

	if(temp &lt; 0)
		a[x] = -a[x];
}

if(i != a.length)
	a = recursive(a, i + 1)

return a;
</code></pre>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/need-a-little-help/112532/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/need-a-little-help/112532/2</link>
        <pubDate>Mon, 18 Jun 2007 02:49:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-112532-2</guid>
        <source url="https://forum.moparisthebest.com/t/need-a-little-help/112532.rss">Need a little help</source>
      </item>
      <item>
        <title>Need a little help</title>
        <dc:creator><![CDATA[@Quilby Quilby]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/quilby">@Quilby</a> wrote:</p>
          <blockquote>
              <p>ok i have the following program:</p>
<pre><code class="lang-auto">public class Test 
{
    static void g(int [] a)
    {
        for (int i = 0; i &lt; a.length; i++){
            if ( s(a, i) &lt; 0 ){
                a[i] = -a[i];
            }
        }
    }
    
    static int s(int [] a, int i)
    {
        int temp = 0;
        for (int j = 0; j &lt;= i; j++){
            temp+=a[j];
        }
        return temp;
    }
 }</code></pre>
<p>Ands 2 questions:<br>
1.What does method g do?<br>
2. How do i write both methods recursively?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/need-a-little-help/112532/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/need-a-little-help/112532/1</link>
        <pubDate>Mon, 18 Jun 2007 00:15:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-112532-1</guid>
        <source url="https://forum.moparisthebest.com/t/need-a-little-help/112532.rss">Need a little help</source>
      </item>
  </channel>
</rss>
