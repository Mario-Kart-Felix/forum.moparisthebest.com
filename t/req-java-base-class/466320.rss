<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[Req][Java] Base class</title>
    <link>https://forum.moparisthebest.com/t/req-java-base-class/466320</link>
    <description>EDIT: i am working on this myself. and i am nearly finished :) At least i hope i am...

Class Name: Base

Constructors:
(byte base, int number)BASE=base, VALUE=getString(number)&lt;-- know i didnt put this down farther, but should only be if necessary
(byte base, String number)
(byte base) 
()Default BASE=10, VALUE=&quot;0&quot;

Features:
convertTo(int newBase) changes current base (and stored value) to the value with the newBase
setBaseNumbers(String newBaseNumbers) For ex, &quot;0123456789&quot; would be base 10, 0-9 a-f is 16.
getString() String representation of the number
getValue() Returns base 10 value (integer,long,etc.)


I know theres more i want in it and i am working on it myself too, the main reason i want something like this is for a base3 number(jad).
[code]public class Base { 
// converts base10 integer to a string
    public static String toString(int number, int base, String BASE_DIGITS) {
        String s = &quot;&quot;;
        do {
            int d = number % base;
            if (d&lt;=BASE_DIGITS.length() &amp;&amp; BASE_DIGITS.charAt(d)!=-1)
                s = BASE_DIGITS.charAt(d) + s;
            else
                throw new java.lang.IllegalArgumentException(&quot;Digit out of Range: &quot; +d);
        number /= base;
        } while (number &gt; 0);
        return s;
    }
    
    // convert a numeric String into its base10 value
    public final static int fromString(String s, int base,String BASE_DIGITS) {
        int value = 0;
        int digit = 0;
        for (int i = 0; i &lt; s.length(); i++) {
            char c = s.charAt(i);
            if (BASE_DIGITS.indexOf(c)!=-1)
                digit = BASE_DIGITS.indexOf(c);
            else
                throw new java.lang.IllegalArgumentException(&quot;Character not in available digits: &quot;+c);
            if (digit &lt; base)
                value = base * value + digit;
            else
                throw new java.lang.IllegalArgumentException(&quot;Invalid character for selected base: &quot;+c);
        }
        return value;
    }
    
    //common presets
    public static String toBinaryString(int number) {
        return toString(number,  2, &quot;01&quot;);
    }
    public static String toHexString(int number) {
        return toString(number, 16, &quot;0123456789ABCDEF&quot;);
    }
    public static String toOctalString(int number) {
        return toString(number, 8, &quot;01234567&quot;);
    }
    public static int fromBinaryString(String number) {
        return fromString(number,  2, &quot;01&quot;);
    }
    public static int fromHexString(String number) {
        return fromString(number.toUpperCase(), 16, &quot;0123456789ABCDEF&quot;); 
    }
    public static int fromOctalString(String number) {
        return fromString(number, 8, &quot;01234567&quot;);
    }
    //base is determined by length of BASE_DIGITS, converts using those properties
    public static int fromString(String s, String BASE_DIGITS) {
        int value = 0;
        int digit = 0;
        int base = BASE_DIGITS.length();
        for (int i = 0; i &lt; s.length(); i++) {
            char c = s.charAt(i);
            if (BASE_DIGITS.indexOf(c)!=-1)
                digit = BASE_DIGITS.indexOf(c);
            else
                throw new java.lang.IllegalArgumentException(&quot;Character not in available digits: &quot;+c);
            if (digit &lt; base)
                value = base * value + digit;
            else
                throw new java.lang.IllegalArgumentException(&quot;Invalid character for selected base: &quot;+c);
        }
        return value;
    }
    //base is determined by the length of the BASE_DIGITS string
    public static String toString(int number, String BASE_DIGITS) {
        String s = &quot;&quot;;
        int base= BASE_DIGITS.length();
        do {
            int d = number % base;
            if (d&gt;=0&amp;&amp;d&lt;=BASE_DIGITS.length() &amp;&amp; BASE_DIGITS.charAt(d)!=-1)
                s = BASE_DIGITS.charAt(d) + s;
            else
                throw new java.lang.IllegalArgumentException(&quot;Digit out of Range: &quot; +d);
        number /= base;
        } while (number &gt; 0);
        return s;
    }
}[/code]

finished :)</description>
    
    <lastBuildDate>Thu, 08 Nov 2012 21:40:25 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/req-java-base-class/466320.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[Req][Java] Base class</title>
        <dc:creator><![CDATA[@matzie matzie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/matzie">@matzie</a> wrote:</p>
          <blockquote>
              <p>DOH!</p>
<p>lmao</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/req-java-base-class/466320/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/req-java-base-class/466320/4</link>
        <pubDate>Thu, 08 Nov 2012 21:40:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-466320-4</guid>
        <source url="https://forum.moparisthebest.com/t/req-java-base-class/466320.rss">[Req][Java] Base class</source>
      </item>
      <item>
        <title>[Req][Java] Base class</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>[quote=“HcoJustin, post:2, topic:466320”]Integer.parseInt(String value, int radix);</p>
<p>Integer.toString(int value, int radix);[/quote]^ This</p>
<p>But it’s good practice to write your own converter too. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"> If you show us the source we can take a look at it</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/req-java-base-class/466320/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/req-java-base-class/466320/3</link>
        <pubDate>Thu, 08 Nov 2012 01:46:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-466320-3</guid>
        <source url="https://forum.moparisthebest.com/t/req-java-base-class/466320.rss">[Req][Java] Base class</source>
      </item>
      <item>
        <title>[Req][Java] Base class</title>
        <dc:creator><![CDATA[@HcoJustin HcoJustin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hcojustin">@HcoJustin</a> wrote:</p>
          <blockquote>
              <p>Integer.parseInt(String value, int radix);</p>
<p>Integer.toString(int value, int radix);</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/req-java-base-class/466320/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/req-java-base-class/466320/2</link>
        <pubDate>Thu, 08 Nov 2012 01:44:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-466320-2</guid>
        <source url="https://forum.moparisthebest.com/t/req-java-base-class/466320.rss">[Req][Java] Base class</source>
      </item>
      <item>
        <title>[Req][Java] Base class</title>
        <dc:creator><![CDATA[@matzie matzie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/matzie">@matzie</a> wrote:</p>
          <blockquote>
              <p>EDIT: i am working on this myself. and i am nearly finished <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"> At least i hope i am…</p>
<p>Class Name: Base</p>
<p>Constructors:<br>
(byte base, int number)BASE=base, VALUE=getString(number)&lt;-- know i didnt put this down farther, but should only be if necessary<br>
(byte base, String number)<br>
(byte base)<br>
()Default BASE=10, VALUE=“0”</p>
<p>Features:<br>
convertTo(int newBase) changes current base (and stored value) to the value with the newBase<br>
setBaseNumbers(String newBaseNumbers) For ex, “0123456789” would be base 10, 0-9 a-f is 16.<br>
getString() String representation of the number<br>
getValue() Returns base 10 value (integer,long,etc.)</p>
<p>I know theres more i want in it and i am working on it myself too, the main reason i want something like this is for a base3 number(jad).</p>
<p>[code]public class Base {<br>
// converts base10 integer to a string<br>
public static String toString(int number, int base, String BASE_DIGITS) {<br>
String s = “”;<br>
do {<br>
int d = number % base;<br>
if (d&lt;=BASE_DIGITS.length() &amp;&amp; BASE_DIGITS.charAt(d)!=-1)<br>
s = BASE_DIGITS.charAt(d) + s;<br>
else<br>
throw new java.lang.IllegalArgumentException("Digit out of Range: " +d);<br>
number /= base;<br>
} while (number &gt; 0);<br>
return s;<br>
}</p>
<pre><code>// convert a numeric String into its base10 value
public final static int fromString(String s, int base,String BASE_DIGITS) {
    int value = 0;
    int digit = 0;
    for (int i = 0; i &lt; s.length(); i++) {
        char c = s.charAt(i);
        if (BASE_DIGITS.indexOf(c)!=-1)
            digit = BASE_DIGITS.indexOf(c);
        else
            throw new java.lang.IllegalArgumentException("Character not in available digits: "+c);
        if (digit &lt; base)
            value = base * value + digit;
        else
            throw new java.lang.IllegalArgumentException("Invalid character for selected base: "+c);
    }
    return value;
}

//common presets
public static String toBinaryString(int number) {
    return toString(number,  2, "01");
}
public static String toHexString(int number) {
    return toString(number, 16, "0123456789ABCDEF");
}
public static String toOctalString(int number) {
    return toString(number, 8, "01234567");
}
public static int fromBinaryString(String number) {
    return fromString(number,  2, "01");
}
public static int fromHexString(String number) {
    return fromString(number.toUpperCase(), 16, "0123456789ABCDEF"); 
}
public static int fromOctalString(String number) {
    return fromString(number, 8, "01234567");
}
//base is determined by length of BASE_DIGITS, converts using those properties
public static int fromString(String s, String BASE_DIGITS) {
    int value = 0;
    int digit = 0;
    int base = BASE_DIGITS.length();
    for (int i = 0; i &lt; s.length(); i++) {
        char c = s.charAt(i);
        if (BASE_DIGITS.indexOf(c)!=-1)
            digit = BASE_DIGITS.indexOf(c);
        else
            throw new java.lang.IllegalArgumentException("Character not in available digits: "+c);
        if (digit &lt; base)
            value = base * value + digit;
        else
            throw new java.lang.IllegalArgumentException("Invalid character for selected base: "+c);
    }
    return value;
}
//base is determined by the length of the BASE_DIGITS string
public static String toString(int number, String BASE_DIGITS) {
    String s = "";
    int base= BASE_DIGITS.length();
    do {
        int d = number % base;
        if (d&gt;=0&amp;&amp;d&lt;=BASE_DIGITS.length() &amp;&amp; BASE_DIGITS.charAt(d)!=-1)
            s = BASE_DIGITS.charAt(d) + s;
        else
            throw new java.lang.IllegalArgumentException("Digit out of Range: " +d);
    number /= base;
    } while (number &gt; 0);
    return s;
}
</code></pre>
<p>}[/code]</p>
<p>finished <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/req-java-base-class/466320/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/req-java-base-class/466320/1</link>
        <pubDate>Wed, 07 Nov 2012 11:32:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-466320-1</guid>
        <source url="https://forum.moparisthebest.com/t/req-java-base-class/466320.rss">[Req][Java] Base class</source>
      </item>
  </channel>
</rss>
