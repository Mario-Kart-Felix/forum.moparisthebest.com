<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>BCEL Method Instruction Modification</title>
    <link>https://forum.moparisthebest.com/t/bcel-method-instruction-modification/450185</link>
    <description>got it</description>
    
    <lastBuildDate>Sun, 22 Jul 2012 06:36:39 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/bcel-method-instruction-modification/450185.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>BCEL Method Instruction Modification</title>
        <dc:creator><![CDATA[@slavemaster veer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/slavemaster">@slavemaster</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="1" data-topic="450579">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/747/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar">
</div>
<blockquote>
<p>the push of ‘offset’ onto the stack won’t necessarily be the instruction immediately before the call to get the String (I.I), so it’s probably safer to add a pop instruction before the ldc <span class="bbcode-i">which replaces the method call</span> (than to remove the previous instruction).</p>
</blockquote>
</aside>
<ol>
<li>If it’s not directly preceding, then his transformer won’t even find the offset so there will be no way to determine the deciphered string in the first place.</li>
<li>Pretending it did manage to do that somehow, dead stack manipulation is not generally decompiler-friendly:</li>
</ol>
<p>[code].class public HelloWorld</p>
<p>.method public static main([Ljava/lang/String;)V<br>
.limit stack 2<br>
.limit locals 1</p>
<p>ldc “hello”<br>
getstatic java/lang/System/out Ljava/io/PrintStream;<br>
swap<br>
pop<br>
ldc “hi”<br>
invokevirtual java/io/PrintStream/println(Ljava/lang/String;)V<br>
return<br>
.end method<br>
[/code]</p>
<p>[code]C:\dev\scrap&gt;java -jar jasmin.jar HelloWorld.j<br>
Generated: HelloWorld.class</p>
<p>C:\dev\scrap&gt;java HelloWorld<br>
hi</p>
<p>C:\dev\scrap&gt;jad -t2 -nonlb -b HelloWorld<br>
Parsing HelloWorld… Generating HelloWorld.jad<br>
Couldn’t fully decompile method main[/code]</p>
<p>[code]// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.<br>
// Jad home page: <a href="http://www.kpdus.com/jad.html" rel="nofollow noopener">http://www.kpdus.com/jad.html</a><br>
// Decompiler options: packimports(3) braces nonlb<br>
// Source File Name:   HelloWorld.j</p>
<p>import java.io.PrintStream;</p>
<p>public class HelloWorld {</p>
<p>public static void main(String args[]) {<br>
“hello”;<br>
System.out;<br>
JVM INSTR swap ;<br>
JVM INSTR pop ;<br>
“hi”;<br>
println();<br>
}<br>
}[/code]</p>
<p>If you truly needed to, one could just implement some sort of abstract interpreter to keep track of the stack, and thus determine the instructions that produce the offset so long as they’re in the local method and thus effectively deal with more heavily obfuscated code… if your curious, this is precisely what ASM’s source interpreter does… <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bcel-method-instruction-modification/450185/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bcel-method-instruction-modification/450185/2</link>
        <pubDate>Sun, 22 Jul 2012 06:36:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-450185-2</guid>
        <source url="https://forum.moparisthebest.com/t/bcel-method-instruction-modification/450185.rss">BCEL Method Instruction Modification</source>
      </item>
      <item>
        <title>BCEL Method Instruction Modification</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <p>got it</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bcel-method-instruction-modification/450185/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bcel-method-instruction-modification/450185/1</link>
        <pubDate>Wed, 18 Jul 2012 22:39:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-450185-1</guid>
        <source url="https://forum.moparisthebest.com/t/bcel-method-instruction-modification/450185.rss">BCEL Method Instruction Modification</source>
      </item>
  </channel>
</rss>
