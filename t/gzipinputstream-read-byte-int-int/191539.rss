<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>GZIPInputStream.read(byte[], int, int)</title>
    <link>https://forum.moparisthebest.com/t/gzipinputstream-read-byte-int-int/191539</link>
    <description>Alright, well, before I begin, I&#39;ll say that the purpose for the following involves the RS2 Client. Whenever I try to read data from an active GZIPInputStream and manipulate it, the data is &#39;incomplete&#39; or &#39;corrupt.&#39; For example:

I GZIPed the JPEG Image File named background.tn into its new archive called archive.tn using the &#39;official&#39; GZIP program (gzip.exe).

Now I do the following:
[code]
    private GZIPInputStream getGZIPforBytes(byte[] abyte3)
    {
    	GZIPInputStream tempStream = null;
    	try
    	{
    		tempStream = new GZIPInputStream(new DataInputStream(new ByteArrayInputStream(abyte3)));
    	}
    	catch(IOException ioe) { ioe.printStackTrace(); }
    	return tempStream;
    }

    private void doStuff()
    {
    	byte origBytes[], indvBytes[] = null;
    	try
    	{
    		origBytes = getBytes(&quot;./cache/archive.tn&quot;);
    		indvBytes = new byte[278832];
    		GZIPInputStream inStream = getGZIPforBytes(origBytes);
    		inStream.read(indvBytes, 0, indvBytes.length);
    		inStream.close();
    	}
    	catch(Exception e) { e.printStackTrace(); }
        Sprite sprite = new Sprite(indvBytes, this);
        //Rest goes here
    }
[/code]

What I&#39;m trying to do is to get the original file&#39;s bytes from the GZIP archive, then use it for creating an image, etc. I&#39;m not sure if its still compressed when I read from it and retrieve the bytes, but for some reason it only reads part of it and then the rest of the file is just null. The original and new file byte sizes are the same, but the new one has nulls for 3/4 of it. Oh, and the original file has 278,832 bytes, which explains the new byte array. 

Any ideas?</description>
    
    <lastBuildDate>Sat, 22 Mar 2008 06:06:15 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/gzipinputstream-read-byte-int-int/191539.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>GZIPInputStream.read(byte[], int, int)</title>
        <dc:creator><![CDATA[@BAsh_CntLgn BAsh(CntLgn)]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bash_cntlgn">@BAsh_CntLgn</a> wrote:</p>
          <blockquote>
              <p>You don’t know the size of the decompressed file until you read it. Compressed you do.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/gzipinputstream-read-byte-int-int/191539/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/gzipinputstream-read-byte-int-int/191539/4</link>
        <pubDate>Sat, 22 Mar 2008 06:06:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-191539-4</guid>
        <source url="https://forum.moparisthebest.com/t/gzipinputstream-read-byte-int-int/191539.rss">GZIPInputStream.read(byte[], int, int)</source>
      </item>
      <item>
        <title>GZIPInputStream.read(byte[], int, int)</title>
        <dc:creator><![CDATA[@TeleNubby TeleNubby]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/telenubby">@TeleNubby</a> wrote:</p>
          <blockquote>
              <p>Alright, thanks BAsh. That got it working.</p>
<p>I knew it was something like that, where I didn’t know the size of the file when reading it. But I had no idea how to work around that to solve the problem. So thanks for the help.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/gzipinputstream-read-byte-int-int/191539/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/gzipinputstream-read-byte-int-int/191539/3</link>
        <pubDate>Sat, 22 Mar 2008 05:32:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-191539-3</guid>
        <source url="https://forum.moparisthebest.com/t/gzipinputstream-read-byte-int-int/191539.rss">GZIPInputStream.read(byte[], int, int)</source>
      </item>
      <item>
        <title>GZIPInputStream.read(byte[], int, int)</title>
        <dc:creator><![CDATA[@BAsh_CntLgn BAsh(CntLgn)]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bash_cntlgn">@BAsh_CntLgn</a> wrote:</p>
          <blockquote>
              <p>You need to read the file in a loop. The definition of read states that it may return before all of the bytes have been read.<br>
int len = -1;<br>
int offset = 0;<br>
while ((len = inStream.read(indvBytes, offset, indvBytes.length-offset) != -1) {<br>
offset += len;<br>
}[br][br][size=1]Posted on: 22 March 2008, 09:25:14 AM[/size][hr]Problem is you don’t know the size of the file before you start reading it so I recommend you use a ByteArrayOutputStream.</p>
<p>ByteArrayOutputStream baos = new ByteArrayOutputStream();<br>
byte[] buffer = new byte[1000];<br>
int len = -1;<br>
while ((len = inStream.read(buffer, 0, buffer.length) != -1) {<br>
baos.write(buffer,0,len);<br>
}<br>
byte[] out = baos.toByteArray();</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/gzipinputstream-read-byte-int-int/191539/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/gzipinputstream-read-byte-int-int/191539/2</link>
        <pubDate>Sat, 22 Mar 2008 05:20:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-191539-2</guid>
        <source url="https://forum.moparisthebest.com/t/gzipinputstream-read-byte-int-int/191539.rss">GZIPInputStream.read(byte[], int, int)</source>
      </item>
      <item>
        <title>GZIPInputStream.read(byte[], int, int)</title>
        <dc:creator><![CDATA[@TeleNubby TeleNubby]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/telenubby">@TeleNubby</a> wrote:</p>
          <blockquote>
              <p>Alright, well, before I begin, I’ll say that the purpose for the following involves the RS2 Client. Whenever I try to read data from an active GZIPInputStream and manipulate it, the data is ‘incomplete’ or ‘corrupt.’ For example:</p>
<p>I GZIPed the JPEG Image File named background.tn into its new archive called archive.tn using the ‘official’ GZIP program (gzip.exe).</p>
<p>Now I do the following:</p>
<pre><code class="lang-auto">    private GZIPInputStream getGZIPforBytes(byte[] abyte3)
    {
    	GZIPInputStream tempStream = null;
    	try
    	{
    		tempStream = new GZIPInputStream(new DataInputStream(new ByteArrayInputStream(abyte3)));
    	}
    	catch(IOException ioe) { ioe.printStackTrace(); }
    	return tempStream;
    }

    private void doStuff()
    {
    	byte origBytes[], indvBytes[] = null;
    	try
    	{
    		origBytes = getBytes("./cache/archive.tn");
    		indvBytes = new byte[278832];
    		GZIPInputStream inStream = getGZIPforBytes(origBytes);
    		inStream.read(indvBytes, 0, indvBytes.length);
    		inStream.close();
    	}
    	catch(Exception e) { e.printStackTrace(); }
        Sprite sprite = new Sprite(indvBytes, this);
        //Rest goes here
    }</code></pre>
<p>What I’m trying to do is to get the original file’s bytes from the GZIP archive, then use it for creating an image, etc. I’m not sure if its still compressed when I read from it and retrieve the bytes, but for some reason it only reads part of it and then the rest of the file is just null. The original and new file byte sizes are the same, but the new one has nulls for 3/4 of it. Oh, and the original file has 278,832 bytes, which explains the new byte array.</p>
<p>Any ideas?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/gzipinputstream-read-byte-int-int/191539/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/gzipinputstream-read-byte-int-int/191539/1</link>
        <pubDate>Sat, 22 Mar 2008 05:10:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-191539-1</guid>
        <source url="https://forum.moparisthebest.com/t/gzipinputstream-read-byte-int-int/191539.rss">GZIPInputStream.read(byte[], int, int)</source>
      </item>
  </channel>
</rss>
