<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Client&#39;s Pathing Algorithm</title>
    <link>https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734</link>
    <description>I wanted to see how they used to do their pathing and so I went into the client and found it. I&#39;m actually kind of surprised that I didn&#39;t find a discussion on it here already. Anyways, the method was formally called &quot;getStepCount&quot; in the EngineHandle class of whatever client I downloaded, I believe it was the MoparClassic one. This is actually an incorrect name. While the method does return an integer that is indeed the step count, the true meaning of the method is to find the path the player must walk.

I refactored the method, including renaming of all variables to be more clear as well as adding in comments to the method to help people follow what is going on better. If anyone has questions feel free to ask, and I&#39;ll try to stop back into the forums at some point.

[code]	public int findPath(int startX, int startY, int endXmin, int endYmin,
                        int endXmax, int endYmax, int[] xWaypoints, int[] yWaypoints,
                        boolean adjacentStop) {
		int[][] pathMap = new int[96][96];
		for (int i = 0; i &lt; 96; i++) {
			for (int j = 0; j &lt; 96; j++) {
				pathMap[i][j] = 0;
			}
		}

		int nextStep = 0;
		int currentStep = 0;
		int currentX = startX;
		int currentY = startY;
		pathMap[startX][startY] = 99;
		xWaypoints[nextStep] = startX;
		yWaypoints[nextStep++] = startY;
		int MAX_ARRAY_SIZE = xWaypoints.length;
		boolean reachedGoal = false;
        //walk at tile
		while (currentStep != nextStep) {
			currentX = xWaypoints[currentStep];
			currentY = yWaypoints[currentStep];
			currentStep = (currentStep + 1) % MAX_ARRAY_SIZE;
			if (currentX &gt;= endXmin &amp;&amp; currentX &lt;= endXmax &amp;&amp; currentY &gt;= endYmin &amp;&amp; currentY &lt;= endYmax) {
				reachedGoal = true;
				break;
			}
			if (adjacentStop) {
				if (currentX &gt; 0 &amp;&amp; currentX - 1 &gt;= endXmin &amp;&amp; currentX - 1 &lt;= endXmax &amp;&amp; currentY &gt;= endYmin
						&amp;&amp; currentY &lt;= endYmax &amp;&amp; (walkableValue[currentX - 1][currentY] &amp; 8) == 0) {
					reachedGoal = true;
					break;
				}
				if (currentX &lt; 95 &amp;&amp; currentX + 1 &gt;= endXmin &amp;&amp; currentX + 1 &lt;= endXmax &amp;&amp; currentY &gt;= endYmin
						&amp;&amp; currentY &lt;= endYmax &amp;&amp; (walkableValue[currentX + 1][currentY] &amp; 2) == 0) {
					reachedGoal = true;
					break;
				}
				if (currentY &gt; 0 &amp;&amp; currentX &gt;= endXmin &amp;&amp; currentX &lt;= endXmax &amp;&amp; currentY - 1 &gt;= endYmin
						&amp;&amp; currentY - 1 &lt;= endYmax &amp;&amp; (walkableValue[currentX][currentY - 1] &amp; 4) == 0) {
					reachedGoal = true;
					break;
				}
				if (currentY &lt; 95 &amp;&amp; currentX &gt;= endXmin &amp;&amp; currentX &lt;= endXmax &amp;&amp; currentY + 1 &gt;= endYmin
						&amp;&amp; currentY + 1 &lt;= endYmax &amp;&amp; (walkableValue[currentX][currentY + 1] &amp; 1) == 0) {
					reachedGoal = true;
					break;
				}
			}
            // Tile hasn&#39;t been reached yet, can we reach it from here?
            // Reachable from right
			if (currentX &gt; 0 &amp;&amp; pathMap[currentX - 1][currentY] == 0
					&amp;&amp; (walkableValue[currentX - 1][currentY] &amp; 0x78) == 0) {
				xWaypoints[nextStep] = currentX - 1;
				yWaypoints[nextStep] = currentY;
				nextStep = (nextStep + 1) % MAX_ARRAY_SIZE;
				pathMap[currentX - 1][currentY] = 2;
			}
            // Reachable from left
			if (currentX &lt; 95 &amp;&amp; pathMap[currentX + 1][currentY] == 0
					&amp;&amp; (walkableValue[currentX + 1][currentY] &amp; 0x72) == 0) {
				xWaypoints[nextStep] = currentX + 1;
				yWaypoints[nextStep] = currentY;
				nextStep = (nextStep + 1) % MAX_ARRAY_SIZE;
				pathMap[currentX + 1][currentY] = 8;
			}
            // Reachable from below
			if (currentY &gt; 0 &amp;&amp; pathMap[currentX][currentY - 1] == 0
					&amp;&amp; (walkableValue[currentX][currentY - 1] &amp; 0x74) == 0) {
				xWaypoints[nextStep] = currentX;
				yWaypoints[nextStep] = currentY - 1;
				nextStep = (nextStep + 1) % MAX_ARRAY_SIZE;
				pathMap[currentX][currentY - 1] = 1;
			}
            // Reachable from above
			if (currentY &lt; 95 &amp;&amp; pathMap[currentX][currentY + 1] == 0
					&amp;&amp; (walkableValue[currentX][currentY + 1] &amp; 0x71) == 0) {
				xWaypoints[nextStep] = currentX;
				yWaypoints[nextStep] = currentY + 1;
				nextStep = (nextStep + 1) % MAX_ARRAY_SIZE;
				pathMap[currentX][currentY + 1] = 4;
			}
            // Diagonal reachables
            // All tiles need to be reachable:
            // player = p, x = goal, r = reachable tiles
            // p r
            // r x
			if (currentX &gt; 0 &amp;&amp; currentY &gt; 0 &amp;&amp; (walkableValue[currentX][currentY - 1] &amp; 0x74) == 0
					&amp;&amp; (walkableValue[currentX - 1][currentY] &amp; 0x78) == 0
					&amp;&amp; (walkableValue[currentX - 1][currentY - 1] &amp; 0x7c) == 0
					&amp;&amp; pathMap[currentX - 1][currentY - 1] == 0) {
				xWaypoints[nextStep] = currentX - 1;
				yWaypoints[nextStep] = currentY - 1;
				nextStep = (nextStep + 1) % MAX_ARRAY_SIZE;
				pathMap[currentX - 1][currentY - 1] = 3;
			}
			if (currentX &lt; 95 &amp;&amp; currentY &gt; 0 &amp;&amp; (walkableValue[currentX][currentY - 1] &amp; 0x74) == 0
					&amp;&amp; (walkableValue[currentX + 1][currentY] &amp; 0x72) == 0
					&amp;&amp; (walkableValue[currentX + 1][currentY - 1] &amp; 0x76) == 0
					&amp;&amp; pathMap[currentX + 1][currentY - 1] == 0) {
				xWaypoints[nextStep] = currentX + 1;
				yWaypoints[nextStep] = currentY - 1;
				nextStep = (nextStep + 1) % MAX_ARRAY_SIZE;
				pathMap[currentX + 1][currentY - 1] = 9;
			}
			if (currentX &gt; 0 &amp;&amp; currentY &lt; 95 &amp;&amp; (walkableValue[currentX][currentY + 1] &amp; 0x71) == 0
					&amp;&amp; (walkableValue[currentX - 1][currentY] &amp; 0x78) == 0
					&amp;&amp; (walkableValue[currentX - 1][currentY + 1] &amp; 0x79) == 0
					&amp;&amp; pathMap[currentX - 1][currentY + 1] == 0) {
				xWaypoints[nextStep] = currentX - 1;
				yWaypoints[nextStep] = currentY + 1;
				nextStep = (nextStep + 1) % MAX_ARRAY_SIZE;
				pathMap[currentX - 1][currentY + 1] = 6;
			}
			if (currentX &lt; 95 &amp;&amp; currentY &lt; 95 &amp;&amp; (walkableValue[currentX][currentY + 1] &amp; 0x71) == 0
					&amp;&amp; (walkableValue[currentX + 1][currentY] &amp; 0x72) == 0
					&amp;&amp; (walkableValue[currentX + 1][currentY + 1] &amp; 0x73) == 0
					&amp;&amp; pathMap[currentX + 1][currentY + 1] == 0) {
				xWaypoints[nextStep] = currentX + 1;
				yWaypoints[nextStep] = currentY + 1;
				nextStep = (nextStep + 1) % MAX_ARRAY_SIZE;
				pathMap[currentX + 1][currentY + 1] = 12;
			}
		}
		if (!reachedGoal) {
			return -1;
		}
		currentStep = 0;
		xWaypoints[currentStep] = currentX;
		yWaypoints[currentStep++] = currentY;
		int currentStepDirection;
        // Once we change direction we add a new waypoint
		for (int nextStepDirection = currentStepDirection = pathMap[currentX][currentY]; currentX != startX
				|| currentY != startY; nextStepDirection = pathMap[currentX][currentY]) {
			if (nextStepDirection != currentStepDirection) {
				currentStepDirection = nextStepDirection;
				xWaypoints[currentStep] = currentX;
				yWaypoints[currentStep++] = currentY;
			}
			if ((nextStepDirection &amp; 2) != 0) {
				currentX++;
			} else if ((nextStepDirection &amp; 8) != 0) {
				currentX--;
			}
			if ((nextStepDirection &amp; 1) != 0) {
				currentY++;
			} else if ((nextStepDirection &amp; 4) != 0) {
				currentY--;
			}
		}
		return currentStep;
	}[/code]</description>
    
    <lastBuildDate>Tue, 23 Jul 2013 17:22:45 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Client&#39;s Pathing Algorithm</title>
        <dc:creator><![CDATA[@imthenull imthenull]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imthenull">@imthenull</a> wrote:</p>
          <blockquote>
              <p>[quote=“tigerclan, post:3, topic:525734”][quote author=veer link=topic=644475.msg4336398#msg4336398 date=1374442224]<br>
You didn’t find a post on it because this has been well-known and understood as it was used in RSC bots at least 9 years ago.<br>
[/quote]</p>
<p>Bot makers tend not to be the smartest, unless you’re like Reines[/quote]pls don’t doubt the all mighty veer.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734/10</link>
        <pubDate>Tue, 23 Jul 2013 17:22:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-525734-10</guid>
        <source url="https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734.rss">Client&#39;s Pathing Algorithm</source>
      </item>
      <item>
        <title>Client&#39;s Pathing Algorithm</title>
        <dc:creator><![CDATA[@slavemaster veer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/slavemaster">@slavemaster</a> wrote:</p>
          <blockquote>
              <p>well clearly they were smart enough to understand this procedure</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734/9</link>
        <pubDate>Tue, 23 Jul 2013 05:57:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-525734-9</guid>
        <source url="https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734.rss">Client&#39;s Pathing Algorithm</source>
      </item>
      <item>
        <title>Client&#39;s Pathing Algorithm</title>
        <dc:creator><![CDATA[@waj waj]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/waj">@waj</a> wrote:</p>
          <blockquote>
              <p>[quote=“Methods, post:6, topic:525734”][quote author=waj link=topic=644475.msg4336702#msg4336702 date=1374495585]</p>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<p>You didn’t find a post on it because this has been well-known and understood as it was used in RSC bots at least 9 years ago.</p>
</blockquote>
</aside>
<p>Bot makers tend not to be the smartest, unless you’re like Reines</p>
</blockquote>
</aside>
<p>Is their even any bot makers around still?<br>
[/quote]</p>
<p>I have the whole RAHbot source if anyone wants it[/quote]<br>
Lol, Rahbot.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734/8</link>
        <pubDate>Mon, 22 Jul 2013 21:18:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-525734-8</guid>
        <source url="https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734.rss">Client&#39;s Pathing Algorithm</source>
      </item>
      <item>
        <title>Client&#39;s Pathing Algorithm</title>
        <dc:creator><![CDATA[@Nothing1 -Nothing]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/nothing1">@Nothing1</a> wrote:</p>
          <blockquote>
              <p>[quote=“tigerclan, post:5, topic:525734”][quote author=waj link=topic=644475.msg4336702#msg4336702 date=1374495585]</p>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<p>You didn’t find a post on it because this has been well-known and understood as it was used in RSC bots at least 9 years ago.</p>
</blockquote>
</aside>
<p>Bot makers tend not to be the smartest, unless you’re like Reines</p>
</blockquote>
</aside>
<p>Is their even any bot makers around still?<br>
[/quote]</p>
<p>Lol, doubt it. Anyone who can program a server can also program a bot though[/quote]<br>
Simple packet bot, yeah.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734/7</link>
        <pubDate>Mon, 22 Jul 2013 17:04:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-525734-7</guid>
        <source url="https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734.rss">Client&#39;s Pathing Algorithm</source>
      </item>
      <item>
        <title>Client&#39;s Pathing Algorithm</title>
        <dc:creator><![CDATA[@Methods Methods]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/methods">@Methods</a> wrote:</p>
          <blockquote>
              <p>[quote=“waj, post:4, topic:525734”][quote author=tigerclan link=topic=644475.msg4336473#msg4336473 date=1374452227]</p>
<aside class="quote">
<blockquote>
<p>You didn’t find a post on it because this has been well-known and understood as it was used in RSC bots at least 9 years ago.</p>
</blockquote>
</aside>
<p>Bot makers tend not to be the smartest, unless you’re like Reines<br>
[/quote]<br>
Is their even any bot makers around still?[/quote]</p>
<p>I have the whole RAHbot source if anyone wants it</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734/6</link>
        <pubDate>Mon, 22 Jul 2013 16:28:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-525734-6</guid>
        <source url="https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734.rss">Client&#39;s Pathing Algorithm</source>
      </item>
      <item>
        <title>Client&#39;s Pathing Algorithm</title>
        <dc:creator><![CDATA[@tigerclan tigerclan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tigerclan">@tigerclan</a> wrote:</p>
          <blockquote>
              <p>[quote=“waj, post:4, topic:525734”][quote author=tigerclan link=topic=644475.msg4336473#msg4336473 date=1374452227]</p>
<aside class="quote">
<blockquote>
<p>You didn’t find a post on it because this has been well-known and understood as it was used in RSC bots at least 9 years ago.</p>
</blockquote>
</aside>
<p>Bot makers tend not to be the smartest, unless you’re like Reines<br>
[/quote]<br>
Is their even any bot makers around still?[/quote]</p>
<p>Lol, doubt it. Anyone who can program a server can also program a bot though</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734/5</link>
        <pubDate>Mon, 22 Jul 2013 16:21:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-525734-5</guid>
        <source url="https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734.rss">Client&#39;s Pathing Algorithm</source>
      </item>
      <item>
        <title>Client&#39;s Pathing Algorithm</title>
        <dc:creator><![CDATA[@waj waj]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/waj">@waj</a> wrote:</p>
          <blockquote>
              <p>[quote=“tigerclan, post:3, topic:525734”][quote author=veer link=topic=644475.msg4336398#msg4336398 date=1374442224]<br>
You didn’t find a post on it because this has been well-known and understood as it was used in RSC bots at least 9 years ago.<br>
[/quote]</p>
<p>Bot makers tend not to be the smartest, unless you’re like Reines[/quote]<br>
Is their even any bot makers around still?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734/4</link>
        <pubDate>Mon, 22 Jul 2013 12:19:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-525734-4</guid>
        <source url="https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734.rss">Client&#39;s Pathing Algorithm</source>
      </item>
      <item>
        <title>Client&#39;s Pathing Algorithm</title>
        <dc:creator><![CDATA[@tigerclan tigerclan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tigerclan">@tigerclan</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="2" data-topic="525734">
<div class="title">
<div class="quote-controls"></div>
 veer:</div>
<blockquote>
<p>You didn’t find a post on it because this has been well-known and understood as it was used in RSC bots at least 9 years ago.</p>
</blockquote>
</aside>
<p>Bot makers tend not to be the smartest, unless you’re like Reines</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734/3</link>
        <pubDate>Mon, 22 Jul 2013 00:17:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-525734-3</guid>
        <source url="https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734.rss">Client&#39;s Pathing Algorithm</source>
      </item>
      <item>
        <title>Client&#39;s Pathing Algorithm</title>
        <dc:creator><![CDATA[@slavemaster veer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/slavemaster">@slavemaster</a> wrote:</p>
          <blockquote>
              <p>You didn’t find a post on it because this has been well-known and understood as it was used in RSC bots at least 9 years ago.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734/2</link>
        <pubDate>Sun, 21 Jul 2013 21:30:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-525734-2</guid>
        <source url="https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734.rss">Client&#39;s Pathing Algorithm</source>
      </item>
      <item>
        <title>Client&#39;s Pathing Algorithm</title>
        <dc:creator><![CDATA[@henry henry]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/henry">@henry</a> wrote:</p>
          <blockquote>
              <p>I wanted to see how they used to do their pathing and so I went into the client and found it. I’m actually kind of surprised that I didn’t find a discussion on it here already. Anyways, the method was formally called “getStepCount” in the EngineHandle class of whatever client I downloaded, I believe it was the MoparClassic one. This is actually an incorrect name. While the method does return an integer that is indeed the step count, the true meaning of the method is to find the path the player must walk.</p>
<p>I refactored the method, including renaming of all variables to be more clear as well as adding in comments to the method to help people follow what is going on better. If anyone has questions feel free to ask, and I’ll try to stop back into the forums at some point.</p>
<p>[code]	public int findPath(int startX, int startY, int endXmin, int endYmin,<br>
int endXmax, int endYmax, int[] xWaypoints, int[] yWaypoints,<br>
boolean adjacentStop) {<br>
int[][] pathMap = new int[96][96];<br>
for (int i = 0; i &lt; 96; i++) {<br>
for (int j = 0; j &lt; 96; j++) {<br>
pathMap[i][j] = 0;<br>
}<br>
}</p>
<pre><code>	int nextStep = 0;
	int currentStep = 0;
	int currentX = startX;
	int currentY = startY;
	pathMap[startX][startY] = 99;
	xWaypoints[nextStep] = startX;
	yWaypoints[nextStep++] = startY;
	int MAX_ARRAY_SIZE = xWaypoints.length;
	boolean reachedGoal = false;
    //walk at tile
	while (currentStep != nextStep) {
		currentX = xWaypoints[currentStep];
		currentY = yWaypoints[currentStep];
		currentStep = (currentStep + 1) % MAX_ARRAY_SIZE;
		if (currentX &gt;= endXmin &amp;&amp; currentX &lt;= endXmax &amp;&amp; currentY &gt;= endYmin &amp;&amp; currentY &lt;= endYmax) {
			reachedGoal = true;
			break;
		}
		if (adjacentStop) {
			if (currentX &gt; 0 &amp;&amp; currentX - 1 &gt;= endXmin &amp;&amp; currentX - 1 &lt;= endXmax &amp;&amp; currentY &gt;= endYmin
					&amp;&amp; currentY &lt;= endYmax &amp;&amp; (walkableValue[currentX - 1][currentY] &amp; 8) == 0) {
				reachedGoal = true;
				break;
			}
			if (currentX &lt; 95 &amp;&amp; currentX + 1 &gt;= endXmin &amp;&amp; currentX + 1 &lt;= endXmax &amp;&amp; currentY &gt;= endYmin
					&amp;&amp; currentY &lt;= endYmax &amp;&amp; (walkableValue[currentX + 1][currentY] &amp; 2) == 0) {
				reachedGoal = true;
				break;
			}
			if (currentY &gt; 0 &amp;&amp; currentX &gt;= endXmin &amp;&amp; currentX &lt;= endXmax &amp;&amp; currentY - 1 &gt;= endYmin
					&amp;&amp; currentY - 1 &lt;= endYmax &amp;&amp; (walkableValue[currentX][currentY - 1] &amp; 4) == 0) {
				reachedGoal = true;
				break;
			}
			if (currentY &lt; 95 &amp;&amp; currentX &gt;= endXmin &amp;&amp; currentX &lt;= endXmax &amp;&amp; currentY + 1 &gt;= endYmin
					&amp;&amp; currentY + 1 &lt;= endYmax &amp;&amp; (walkableValue[currentX][currentY + 1] &amp; 1) == 0) {
				reachedGoal = true;
				break;
			}
		}
        // Tile hasn't been reached yet, can we reach it from here?
        // Reachable from right
		if (currentX &gt; 0 &amp;&amp; pathMap[currentX - 1][currentY] == 0
				&amp;&amp; (walkableValue[currentX - 1][currentY] &amp; 0x78) == 0) {
			xWaypoints[nextStep] = currentX - 1;
			yWaypoints[nextStep] = currentY;
			nextStep = (nextStep + 1) % MAX_ARRAY_SIZE;
			pathMap[currentX - 1][currentY] = 2;
		}
        // Reachable from left
		if (currentX &lt; 95 &amp;&amp; pathMap[currentX + 1][currentY] == 0
				&amp;&amp; (walkableValue[currentX + 1][currentY] &amp; 0x72) == 0) {
			xWaypoints[nextStep] = currentX + 1;
			yWaypoints[nextStep] = currentY;
			nextStep = (nextStep + 1) % MAX_ARRAY_SIZE;
			pathMap[currentX + 1][currentY] = 8;
		}
        // Reachable from below
		if (currentY &gt; 0 &amp;&amp; pathMap[currentX][currentY - 1] == 0
				&amp;&amp; (walkableValue[currentX][currentY - 1] &amp; 0x74) == 0) {
			xWaypoints[nextStep] = currentX;
			yWaypoints[nextStep] = currentY - 1;
			nextStep = (nextStep + 1) % MAX_ARRAY_SIZE;
			pathMap[currentX][currentY - 1] = 1;
		}
        // Reachable from above
		if (currentY &lt; 95 &amp;&amp; pathMap[currentX][currentY + 1] == 0
				&amp;&amp; (walkableValue[currentX][currentY + 1] &amp; 0x71) == 0) {
			xWaypoints[nextStep] = currentX;
			yWaypoints[nextStep] = currentY + 1;
			nextStep = (nextStep + 1) % MAX_ARRAY_SIZE;
			pathMap[currentX][currentY + 1] = 4;
		}
        // Diagonal reachables
        // All tiles need to be reachable:
        // player = p, x = goal, r = reachable tiles
        // p r
        // r x
		if (currentX &gt; 0 &amp;&amp; currentY &gt; 0 &amp;&amp; (walkableValue[currentX][currentY - 1] &amp; 0x74) == 0
				&amp;&amp; (walkableValue[currentX - 1][currentY] &amp; 0x78) == 0
				&amp;&amp; (walkableValue[currentX - 1][currentY - 1] &amp; 0x7c) == 0
				&amp;&amp; pathMap[currentX - 1][currentY - 1] == 0) {
			xWaypoints[nextStep] = currentX - 1;
			yWaypoints[nextStep] = currentY - 1;
			nextStep = (nextStep + 1) % MAX_ARRAY_SIZE;
			pathMap[currentX - 1][currentY - 1] = 3;
		}
		if (currentX &lt; 95 &amp;&amp; currentY &gt; 0 &amp;&amp; (walkableValue[currentX][currentY - 1] &amp; 0x74) == 0
				&amp;&amp; (walkableValue[currentX + 1][currentY] &amp; 0x72) == 0
				&amp;&amp; (walkableValue[currentX + 1][currentY - 1] &amp; 0x76) == 0
				&amp;&amp; pathMap[currentX + 1][currentY - 1] == 0) {
			xWaypoints[nextStep] = currentX + 1;
			yWaypoints[nextStep] = currentY - 1;
			nextStep = (nextStep + 1) % MAX_ARRAY_SIZE;
			pathMap[currentX + 1][currentY - 1] = 9;
		}
		if (currentX &gt; 0 &amp;&amp; currentY &lt; 95 &amp;&amp; (walkableValue[currentX][currentY + 1] &amp; 0x71) == 0
				&amp;&amp; (walkableValue[currentX - 1][currentY] &amp; 0x78) == 0
				&amp;&amp; (walkableValue[currentX - 1][currentY + 1] &amp; 0x79) == 0
				&amp;&amp; pathMap[currentX - 1][currentY + 1] == 0) {
			xWaypoints[nextStep] = currentX - 1;
			yWaypoints[nextStep] = currentY + 1;
			nextStep = (nextStep + 1) % MAX_ARRAY_SIZE;
			pathMap[currentX - 1][currentY + 1] = 6;
		}
		if (currentX &lt; 95 &amp;&amp; currentY &lt; 95 &amp;&amp; (walkableValue[currentX][currentY + 1] &amp; 0x71) == 0
				&amp;&amp; (walkableValue[currentX + 1][currentY] &amp; 0x72) == 0
				&amp;&amp; (walkableValue[currentX + 1][currentY + 1] &amp; 0x73) == 0
				&amp;&amp; pathMap[currentX + 1][currentY + 1] == 0) {
			xWaypoints[nextStep] = currentX + 1;
			yWaypoints[nextStep] = currentY + 1;
			nextStep = (nextStep + 1) % MAX_ARRAY_SIZE;
			pathMap[currentX + 1][currentY + 1] = 12;
		}
	}
	if (!reachedGoal) {
		return -1;
	}
	currentStep = 0;
	xWaypoints[currentStep] = currentX;
	yWaypoints[currentStep++] = currentY;
	int currentStepDirection;
    // Once we change direction we add a new waypoint
	for (int nextStepDirection = currentStepDirection = pathMap[currentX][currentY]; currentX != startX
			|| currentY != startY; nextStepDirection = pathMap[currentX][currentY]) {
		if (nextStepDirection != currentStepDirection) {
			currentStepDirection = nextStepDirection;
			xWaypoints[currentStep] = currentX;
			yWaypoints[currentStep++] = currentY;
		}
		if ((nextStepDirection &amp; 2) != 0) {
			currentX++;
		} else if ((nextStepDirection &amp; 8) != 0) {
			currentX--;
		}
		if ((nextStepDirection &amp; 1) != 0) {
			currentY++;
		} else if ((nextStepDirection &amp; 4) != 0) {
			currentY--;
		}
	}
	return currentStep;
}[/code]</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734/1</link>
        <pubDate>Sun, 21 Jul 2013 16:49:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-525734-1</guid>
        <source url="https://forum.moparisthebest.com/t/clients-pathing-algorithm/525734.rss">Client&#39;s Pathing Algorithm</source>
      </item>
  </channel>
</rss>
