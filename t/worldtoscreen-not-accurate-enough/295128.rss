<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>worldToScreen not accurate enough</title>
    <link>https://forum.moparisthebest.com/t/worldtoscreen-not-accurate-enough/295128</link>
    <description>I have recently added model (polygon) bounds to KBot, but I have met a few problems on the way.
(See video)
http://www.youtube.com/watch?v=rB5uyFeNCfc

I discovered that if I paint a vertex anywhere in the world (using the worldToScreen method), it will move a bit when rotating the camera 360 degrees. It should be perfectly still.
Here is a video where you can clearly see the problem:
http://kbot.info/files/videos/WorldToScreenGlitch/WorldToScreenGlitch.html

When I first saw it I though my worldToScreen was outdated so I got a fresh one from the client, but it has not changed.
Here is my fresh worldToScreen method with tileHeight()

[code]
public Point worldToScreen(int X, int Y, int height) {

        if(X &lt; 128 || Y &lt; 128 || X &gt; 13056 || Y &gt; 13056) {
            return new Point(-1, -1);
        }
        final Client client = getClient();
        int Z = tileHeight(client.getPlane(), X, Y) - height;

        X -= client.getCameraX();
        Y -= client.getCameraY();
        Z -= client.getCameraZ();

        final int curveX = client.getCameraCurveX();
        final int curveY = client.getCameraCurveY();
        int curveCosX = CURVECOS[curveX];
        int curveCosY = CURVECOS[curveY];

        int curveSinX = CURVESIN[curveX];
        int curveSinY = CURVESIN[curveY];

        int tempCalculation = ((curveCosX * X) + (Y * curveSinX)) &gt;&gt; 16;
        Y = ((Y * curveCosX) - (X * curveSinX)) &gt;&gt; 16;
        X = tempCalculation;
        tempCalculation = ((Z * curveCosY) - (Y * curveSinY)) &gt;&gt; 16;
        Y = ((Z * curveSinY) - -(curveCosY * Y)) &gt;&gt; 16;
        Z = tempCalculation;
        if(Y &lt; 50) {
            return new Point(-1, -1);
        } else {
            int calculatedScreenPosX = 256 - -((X &lt;&lt; 9) / Y);
            int calculatedScreenPosY = (Z &lt;&lt; 9) / Y + 167;

            return new Point(calculatedScreenPosX, calculatedScreenPosY);
        }
    }

public int tileHeight(int plane, int x, int y) {
        final Client client = getClient();
        final int[][][] groundHeights = client.getGroundHeights();
        if(groundHeights == null)
            return 0;
        int x1 = x &gt;&gt; 7;
        int y1 = y &gt;&gt; 7;
        if(x1 &lt; 0 || y1 &lt; 0 || x1 &gt; 103 || y1 &gt; 103)
            return 0;
        int x2 = x &amp; 0x7f;
        int y2 = y &amp; 0x7f;
        int zIndex = plane;
        if(zIndex &gt; 3 &amp;&amp; (client.getGroundSettings()[1][x1][y1] &amp; 2) == 2)
            zIndex++;
        int i2 = (((-x2 + 128) * groundHeights[zIndex][x1][y1]) + (x2 * groundHeights[zIndex][x1 + 1][y1])) &gt;&gt; 7;
        int j2 = ((groundHeights[zIndex][x1][1 + y1] * (128 - x2)) + (groundHeights[zIndex][1 + x1][1 + y1] * x2)) &gt;&gt; 7;
        return ((i2 * (128 - y2)) - -(y2 * j2)) &gt;&gt; 7;
    }
[/code]

Anyone got some ideas why it does not match up? 
The screenOffsetX and Y in worldToScreen is set manually btw, in client they are set by one of the arguments.</description>
    
    <lastBuildDate>Fri, 14 Aug 2009 15:41:37 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/worldtoscreen-not-accurate-enough/295128.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>worldToScreen not accurate enough</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>f(you) = bad<br>
^theres your problem</p>
<p>you should be using then screenspace models, you obviously arent (clarification edit: rather than recalculate per vertex)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/worldtoscreen-not-accurate-enough/295128/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/worldtoscreen-not-accurate-enough/295128/2</link>
        <pubDate>Fri, 14 Aug 2009 15:41:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-295128-2</guid>
        <source url="https://forum.moparisthebest.com/t/worldtoscreen-not-accurate-enough/295128.rss">worldToScreen not accurate enough</source>
      </item>
      <item>
        <title>worldToScreen not accurate enough</title>
        <dc:creator><![CDATA[@Kosaki Kosaki]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/kosaki">@Kosaki</a> wrote:</p>
          <blockquote>
              <p>I have recently added model (polygon) bounds to KBot, but I have met a few problems on the way.<br>
(See video)<br>
<a href="http://www.youtube.com/watch?v=rB5uyFeNCfc" class="onebox" target="_blank" rel="nofollow noopener">http://www.youtube.com/watch?v=rB5uyFeNCfc</a></p>
<p>I discovered that if I paint a vertex anywhere in the world (using the worldToScreen method), it will move a bit when rotating the camera 360 degrees. It should be perfectly still.<br>
Here is a video where you can clearly see the problem:<br>
<a href="http://kbot.info/files/videos/WorldToScreenGlitch/WorldToScreenGlitch.html" class="onebox" target="_blank" rel="nofollow noopener">http://kbot.info/files/videos/WorldToScreenGlitch/WorldToScreenGlitch.html</a></p>
<p>When I first saw it I though my worldToScreen was outdated so I got a fresh one from the client, but it has not changed.<br>
Here is my fresh worldToScreen method with tileHeight()</p>
<pre><code class="lang-auto">public Point worldToScreen(int X, int Y, int height) {

        if(X &lt; 128 || Y &lt; 128 || X &gt; 13056 || Y &gt; 13056) {
            return new Point(-1, -1);
        }
        final Client client = getClient();
        int Z = tileHeight(client.getPlane(), X, Y) - height;

        X -= client.getCameraX();
        Y -= client.getCameraY();
        Z -= client.getCameraZ();

        final int curveX = client.getCameraCurveX();
        final int curveY = client.getCameraCurveY();
        int curveCosX = CURVECOS[curveX];
        int curveCosY = CURVECOS[curveY];

        int curveSinX = CURVESIN[curveX];
        int curveSinY = CURVESIN[curveY];

        int tempCalculation = ((curveCosX * X) + (Y * curveSinX)) &gt;&gt; 16;
        Y = ((Y * curveCosX) - (X * curveSinX)) &gt;&gt; 16;
        X = tempCalculation;
        tempCalculation = ((Z * curveCosY) - (Y * curveSinY)) &gt;&gt; 16;
        Y = ((Z * curveSinY) - -(curveCosY * Y)) &gt;&gt; 16;
        Z = tempCalculation;
        if(Y &lt; 50) {
            return new Point(-1, -1);
        } else {
            int calculatedScreenPosX = 256 - -((X &lt;&lt; 9) / Y);
            int calculatedScreenPosY = (Z &lt;&lt; 9) / Y + 167;

            return new Point(calculatedScreenPosX, calculatedScreenPosY);
        }
    }

public int tileHeight(int plane, int x, int y) {
        final Client client = getClient();
        final int[][][] groundHeights = client.getGroundHeights();
        if(groundHeights == null)
            return 0;
        int x1 = x &gt;&gt; 7;
        int y1 = y &gt;&gt; 7;
        if(x1 &lt; 0 || y1 &lt; 0 || x1 &gt; 103 || y1 &gt; 103)
            return 0;
        int x2 = x &amp; 0x7f;
        int y2 = y &amp; 0x7f;
        int zIndex = plane;
        if(zIndex &gt; 3 &amp;&amp; (client.getGroundSettings()[1][x1][y1] &amp; 2) == 2)
            zIndex++;
        int i2 = (((-x2 + 128) * groundHeights[zIndex][x1][y1]) + (x2 * groundHeights[zIndex][x1 + 1][y1])) &gt;&gt; 7;
        int j2 = ((groundHeights[zIndex][x1][1 + y1] * (128 - x2)) + (groundHeights[zIndex][1 + x1][1 + y1] * x2)) &gt;&gt; 7;
        return ((i2 * (128 - y2)) - -(y2 * j2)) &gt;&gt; 7;
    }</code></pre>
<p>Anyone got some ideas why it does not match up?<br>
The screenOffsetX and Y in worldToScreen is set manually btw, in client they are set by one of the arguments.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/worldtoscreen-not-accurate-enough/295128/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/worldtoscreen-not-accurate-enough/295128/1</link>
        <pubDate>Fri, 14 Aug 2009 12:00:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-295128-1</guid>
        <source url="https://forum.moparisthebest.com/t/worldtoscreen-not-accurate-enough/295128.rss">worldToScreen not accurate enough</source>
      </item>
  </channel>
</rss>
