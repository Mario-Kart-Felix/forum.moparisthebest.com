<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Trivia bot. enum help</title>
    <link>https://forum.moparisthebest.com/t/trivia-bot-enum-help/533173</link>
    <description>Well I wrote this earlier for learning purposes. I know this can be done in a much easier way using String arrays, but I need to get to grips with using enums. It currently has no events and could be written a lot better I know.

For some reason I&#39;m coming across some problems though, it never actually sets the variables properly? In some methods when I call them they return a question, but when I refer to them in another method when trying to return the answer it returns null.

[code=java]package server.model.content.trivia;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.*;

import server.Server;
import server.model.players.Client;
import server.model.items.GameItem;
import server.model.players.Player;
import server.util.Colours;
import server.Config;
public class Trivia {

		private Question currentQuestion;
		private String chosenQuestion;
		private String currentAnswer;

		private static Trivia trivia;
		public static Trivia getTrivia() {
			trivia = new Trivia();
			return trivia;
		}
		
		public Trivia() {
		
		}
		
		public void chooseQuestion() {
		int selection = new Random().nextInt(Question.values().length);
		this.currentQuestion = (Question) Question.values()[selection];
		this.currentAnswer = (String) currentQuestion.getAnswer();
		this.chosenQuestion = (String) currentQuestion.getQuestion();
		}
		
		public void process() {
		
		if (answered) resetTrivia();
		
		if (triviaCycle &gt; 0) {
		if (triviaCycle == 130) {
		chooseQuestion();
		answered = false;
		sendQuestion(getCurrentQuestion());//sends current question in as Question, uses currentQuestion
		}
			if (triviaCycle == 40 &amp;&amp; !answered) {
				triviaMessage(&quot;20 seconds left on question:&quot;);
				triviaMessage(currentQuestion.getQuestion());//works here, returns the current question
			}
			if (triviaCycle == 1 &amp;&amp; !answered) {
				triviaMessage(&quot;Question was not answered. New question incoming.&quot;);
				triviaCycle = 150;
				//resetTrivia();
			}
		triviaCycle--;
		}
			
		}

		
		public void sendQuestion(Question question) {
			triviaMessage(question.getQuestion());
				
		}
		
		public void roundWinner(Client player, String answer) {
			triviaMessage(player.playerName + &quot; has answered the question correctly. Answer was: &quot;+ answer);
			triviaMessage(&quot;Next round starting soon...&quot;);
			player.getItems().addItem(995,5000);
			answered = true;
			
		}
		
		public void resetTrivia() {
		triviaCycle = 150;
		currentQuestion = (Question) null;
		
		}
		
		
		public void processInput(Client player, String command) {
		
			if (answered) {
				player.sendMessage(&quot;This question has been answered. Please wait for the next question...&quot;);
				return;
			}
			

			
			if (!command.equalsIgnoreCase(currentQuestion.getAnswer())) {
			player.sendMessage(&quot;Incorrect answer.&quot;);
			return;
			}
			
			for (Question q : Question.values()) {
				if (currentQuestion.getQuestion().toString().equalsIgnoreCase(q.getQuestion().toString())) {
				 if (command.equalsIgnoreCase(currentQuestion.getAnswer())) {
					roundWinner(player, command);
				 }
				}
			
			
			}
			
			
		
		}
		
		public void triviaMessage(String str) {
			for (int i = 0; i &lt; Server.playerHandler.players.length; i++) {
				if (Server.playerHandler.players[i] != null) {
					if (Server.playerHandler.players[i].triviaEnabled) {
						Client c = (Client) Server.playerHandler.players[i];
						c.sendMessage(prefix + str);
					}
				}
			}
		}
		
		public Question getCurrentQuestion() {
			return currentQuestion;
		}
		
		public String getCurrentAnswer() {
			return currentAnswer;
		}
		
		private final String prefix = &quot;[&quot; + Colours.getColourByName(&quot;white&quot;) +&quot;Trivia&quot;+ Colours.getColourByName(&quot;black&quot;) + &quot;] &quot;;
		private int triviaCycle = 150;
		private boolean answered = false;
		


}
[/code]

[code=java]
package server.model.content.trivia;

public enum Question {
			Language(&quot;What programming language is used to program RSPS?&quot;, &quot;Java&quot;),
			Capital(&quot;What is the capital of England?&quot;, &quot;London&quot;);
			
			private String question;
			private String answer;
			
			private Question(String question, String answer) {
				this.question = question;
				this.answer = answer;
			}

			public String getQuestion() {
				return question;
			}
			
			public String getAnswer() {
				return answer;
			}
			

} 
[/code]

Null is occurring on this line:
[code=java]
if (!command.equalsIgnoreCase(currentQuestion.getAnswer())) {
[/code]

But before the user reaches this code, the value for currentQuestion should be set.

It works fine when setting/sending the question
[code=java]
sendQuestion(getCurrentQuestion());

		public void sendQuestion(Question question) {
			triviaMessage(question.getQuestion());
				
		}
[/code]

In some places the use of currentQuestion will work, when printing the question to everyone, but when I&#39;m processing the input from the user, it will return null like it&#39;s not even been set. It&#39;s probably something simple that I&#39;ve missed so if someone can guide me in the right direction, it would be greatly appreciated.</description>
    
    <lastBuildDate>Mon, 30 Sep 2013 11:38:42 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/trivia-bot-enum-help/533173.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Trivia bot. enum help</title>
        <dc:creator><![CDATA[@ohokay ohokay]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ohokay">@ohokay</a> wrote:</p>
          <blockquote>
              <p>[quote=“Miss Silabsoft, post:4, topic:533173”]You should use enum types any time you need to represent a fixed set of constants. That includes natural enum types such as the planets in our solar system and data sets where you know all possible values at compile time—for example, the choices on a menu, command line flags, and so on.</p>
<p><a href="http://docs.oracle.com/javase/tutorial/java/javaOO/enum.html%5B/quote%5D" class="onebox" target="_blank" rel="nofollow noopener">http://docs.oracle.com/javase/tutorial/java/javaOO/enum.html[/quote]</a></p>
<p>Ah right, thanks for the help</p>
<p>[quote=“Pwnd, post:5, topic:533173”][quote author=Miss Silabsoft link=topic=651968.msg4370207#msg4370207 date=1380454628]<br>
I would like to guide you away from using ENUM in this manner.<br>
[/quote]I’m glad you answered before me because I, literally, was going to say “What in the fudge are you doing here…”[/quote]</p>
<blockquote>I understand it's probably the wrong way to go about it</blockquote>
<blockquote>but I need to get to grips with using enums.</blockquote>
<p>I’m glad Miss Silabsoft answered before you too, the post was actually directional and helpful. Just learning here  <img src="https://forum.moparisthebest.com/images/emoji/twitter/expressionless.png?v=5" title=":expressionless:" class="emoji" alt=":expressionless:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/trivia-bot-enum-help/533173/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/trivia-bot-enum-help/533173/6</link>
        <pubDate>Mon, 30 Sep 2013 11:38:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-533173-6</guid>
        <source url="https://forum.moparisthebest.com/t/trivia-bot-enum-help/533173.rss">Trivia bot. enum help</source>
      </item>
      <item>
        <title>Trivia bot. enum help</title>
        <dc:creator><![CDATA[@Pwnd Pwnd]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pwnd">@Pwnd</a> wrote:</p>
          <blockquote>
              <p>[quote=“Miss Silabsoft, post:2, topic:533173”]I would like to guide you away from using ENUM in this manner.[/quote]I’m glad you answered before me because I, literally, was going to say “What in the fuck are you doing here…”</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/trivia-bot-enum-help/533173/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/trivia-bot-enum-help/533173/5</link>
        <pubDate>Mon, 30 Sep 2013 08:48:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-533173-5</guid>
        <source url="https://forum.moparisthebest.com/t/trivia-bot-enum-help/533173.rss">Trivia bot. enum help</source>
      </item>
      <item>
        <title>Trivia bot. enum help</title>
        <dc:creator><![CDATA[@silabsoft RuneAgent]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silabsoft">@silabsoft</a> wrote:</p>
          <blockquote>
              <p>You should use enum types any time you need to represent a fixed set of constants. That includes natural enum types such as the planets in our solar system and data sets where you know all possible values at compile time—for example, the choices on a menu, command line flags, and so on.</p>
<p><a href="http://docs.oracle.com/javase/tutorial/java/javaOO/enum.html" class="onebox" target="_blank" rel="nofollow noopener">http://docs.oracle.com/javase/tutorial/java/javaOO/enum.html</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/trivia-bot-enum-help/533173/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/trivia-bot-enum-help/533173/4</link>
        <pubDate>Sun, 29 Sep 2013 16:49:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-533173-4</guid>
        <source url="https://forum.moparisthebest.com/t/trivia-bot-enum-help/533173.rss">Trivia bot. enum help</source>
      </item>
      <item>
        <title>Trivia bot. enum help</title>
        <dc:creator><![CDATA[@ohokay ohokay]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ohokay">@ohokay</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="533173">
<div class="title">
<div class="quote-controls"></div>
 Miss Silabsoft:</div>
<blockquote>
<p>I would like to guide you away from using ENUM in this manner.</p>
</blockquote>
</aside>
<p>Thanks for the guidance.</p>
<p>I understand it’s probably the wrong way to go about it, I just wanted to get some experience with enums. Can I ask why?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/trivia-bot-enum-help/533173/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/trivia-bot-enum-help/533173/3</link>
        <pubDate>Sun, 29 Sep 2013 14:09:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-533173-3</guid>
        <source url="https://forum.moparisthebest.com/t/trivia-bot-enum-help/533173.rss">Trivia bot. enum help</source>
      </item>
      <item>
        <title>Trivia bot. enum help</title>
        <dc:creator><![CDATA[@silabsoft RuneAgent]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silabsoft">@silabsoft</a> wrote:</p>
          <blockquote>
              <p>I would like to guide you away from using ENUM in this manner.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/trivia-bot-enum-help/533173/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/trivia-bot-enum-help/533173/2</link>
        <pubDate>Sun, 29 Sep 2013 11:37:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-533173-2</guid>
        <source url="https://forum.moparisthebest.com/t/trivia-bot-enum-help/533173.rss">Trivia bot. enum help</source>
      </item>
      <item>
        <title>Trivia bot. enum help</title>
        <dc:creator><![CDATA[@ohokay ohokay]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ohokay">@ohokay</a> wrote:</p>
          <blockquote>
              <p>Well I wrote this earlier for learning purposes. I know this can be done in a much easier way using String arrays, but I need to get to grips with using enums. It currently has no events and could be written a lot better I know.</p>
<p>For some reason I’m coming across some problems though, it never actually sets the variables properly? In some methods when I call them they return a question, but when I refer to them in another method when trying to return the answer it returns null.</p>
<p>[code=java]package server.model.content.trivia;</p>
<p>import java.util.ArrayList;<br>
import java.util.Collections;<br>
import java.util.Random;<br>
import java.util.List;<br>
import java.util.*;</p>
<p>import server.Server;<br>
import server.model.players.Client;<br>
import server.model.items.GameItem;<br>
import server.model.players.Player;<br>
import server.util.Colours;<br>
import server.Config;<br>
public class Trivia {</p>
<pre><code>	private Question currentQuestion;
	private String chosenQuestion;
	private String currentAnswer;

	private static Trivia trivia;
	public static Trivia getTrivia() {
		trivia = new Trivia();
		return trivia;
	}
	
	public Trivia() {
	
	}
	
	public void chooseQuestion() {
	int selection = new Random().nextInt(Question.values().length);
	this.currentQuestion = (Question) Question.values()[selection];
	this.currentAnswer = (String) currentQuestion.getAnswer();
	this.chosenQuestion = (String) currentQuestion.getQuestion();
	}
	
	public void process() {
	
	if (answered) resetTrivia();
	
	if (triviaCycle &gt; 0) {
	if (triviaCycle == 130) {
	chooseQuestion();
	answered = false;
	sendQuestion(getCurrentQuestion());//sends current question in as Question, uses currentQuestion
	}
		if (triviaCycle == 40 &amp;&amp; !answered) {
			triviaMessage("20 seconds left on question:");
			triviaMessage(currentQuestion.getQuestion());//works here, returns the current question
		}
		if (triviaCycle == 1 &amp;&amp; !answered) {
			triviaMessage("Question was not answered. New question incoming.");
			triviaCycle = 150;
			//resetTrivia();
		}
	triviaCycle--;
	}
		
	}

	
	public void sendQuestion(Question question) {
		triviaMessage(question.getQuestion());
			
	}
	
	public void roundWinner(Client player, String answer) {
		triviaMessage(player.playerName + " has answered the question correctly. Answer was: "+ answer);
		triviaMessage("Next round starting soon...");
		player.getItems().addItem(995,5000);
		answered = true;
		
	}
	
	public void resetTrivia() {
	triviaCycle = 150;
	currentQuestion = (Question) null;
	
	}
	
	
	public void processInput(Client player, String command) {
	
		if (answered) {
			player.sendMessage("This question has been answered. Please wait for the next question...");
			return;
		}
		

		
		if (!command.equalsIgnoreCase(currentQuestion.getAnswer())) {
		player.sendMessage("Incorrect answer.");
		return;
		}
		
		for (Question q : Question.values()) {
			if (currentQuestion.getQuestion().toString().equalsIgnoreCase(q.getQuestion().toString())) {
			 if (command.equalsIgnoreCase(currentQuestion.getAnswer())) {
				roundWinner(player, command);
			 }
			}
		
		
		}
		
		
	
	}
	
	public void triviaMessage(String str) {
		for (int i = 0; i &lt; Server.playerHandler.players.length; i++) {
			if (Server.playerHandler.players[i] != null) {
				if (Server.playerHandler.players[i].triviaEnabled) {
					Client c = (Client) Server.playerHandler.players[i];
					c.sendMessage(prefix + str);
				}
			}
		}
	}
	
	public Question getCurrentQuestion() {
		return currentQuestion;
	}
	
	public String getCurrentAnswer() {
		return currentAnswer;
	}
	
	private final String prefix = "[" + Colours.getColourByName("white") +"Trivia"+ Colours.getColourByName("black") + "] ";
	private int triviaCycle = 150;
	private boolean answered = false;
</code></pre>
<p>}<br>
[/code]</p>
<pre><code class="lang-auto">package server.model.content.trivia;

public enum Question {
			Language("What programming language is used to program RSPS?", "Java"),
			Capital("What is the capital of England?", "London");
			
			private String question;
			private String answer;
			
			private Question(String question, String answer) {
				this.question = question;
				this.answer = answer;
			}

			public String getQuestion() {
				return question;
			}
			
			public String getAnswer() {
				return answer;
			}
			

} </code></pre>
<p>Null is occurring on this line:</p>
<pre><code class="lang-auto">if (!command.equalsIgnoreCase(currentQuestion.getAnswer())) {</code></pre>
<p>But before the user reaches this code, the value for currentQuestion should be set.</p>
<p>It works fine when setting/sending the question</p>
<pre><code class="lang-auto">sendQuestion(getCurrentQuestion());

		public void sendQuestion(Question question) {
			triviaMessage(question.getQuestion());
				
		}</code></pre>
<p>In some places the use of currentQuestion will work, when printing the question to everyone, but when I’m processing the input from the user, it will return null like it’s not even been set. It’s probably something simple that I’ve missed so if someone can guide me in the right direction, it would be greatly appreciated.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/trivia-bot-enum-help/533173/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/trivia-bot-enum-help/533173/1</link>
        <pubDate>Sat, 28 Sep 2013 11:23:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-533173-1</guid>
        <source url="https://forum.moparisthebest.com/t/trivia-bot-enum-help/533173.rss">Trivia bot. enum help</source>
      </item>
  </channel>
</rss>
