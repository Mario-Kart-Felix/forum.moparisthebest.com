<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>NullPointer issue</title>
    <link>https://forum.moparisthebest.com/t/nullpointer-issue/439746</link>
    <description>Can someone be useful and help me with this?

[code]
java.lang.NullPointerException
        at com.rs.utils.NPCDrops.getDrops(NPCDrops.java:30)
        at com.rs.game.npc.NPC.drop(NPC.java:597)
        at com.rs.game.npc.NPC$11.run(NPC.java:582)
        at com.rs.game.tasks.WorldTasksManager.processTasks(WorldTasksManager.ja
va:19)[/code]

Class File:

[code]package com.rs.utils;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.File;
import java.io.RandomAccessFile;
import java.nio.ByteBuffer;
import java.nio.channels.FileChannel;
import java.nio.channels.FileChannel.MapMode;
import java.util.HashMap;

import com.rs.game.npc.Drop;

public class NPCDrops {
	private final static String PACKED_PATH = &quot;data/npcs/packedDrops.d&quot;;
	private final static String UNPACKED_PATH = &quot;data/npcs/unpackedDrops.txt&quot;;
	private static HashMap&lt;Integer, Drop[]&gt; npcDrops;
	private static final HashMap&lt;Integer, Drop&gt; npcDrops2 = new HashMap&lt;Integer, Drop&gt;();
	public static final void init() {
		if (new File(PACKED_PATH).exists()){
			loadPackedNPCDrops();
		}else{
			loadUnpackedDrops();
		}
	}

	public static Drop[] getDrops(int npcId) {
		return npcDrops.get(npcId);
	}
	static int i = 0;
	private static void loadUnpackedDrops() {
		Logger.log(&quot;NPCDrops&quot;, &quot;Packing drops...&quot;);
		try {
			BufferedReader in = new BufferedReader(
					new FileReader(UNPACKED_PATH));
			DataOutputStream out = new DataOutputStream(new FileOutputStream(
					PACKED_PATH));
			while (true) {
				String line = in.readLine();
				if (line == null)
					break;
				if (line.startsWith(&quot;//&quot;))
					continue;
				String[] splitedNPCID = line.split(&quot;:&quot;, 2);
				//if (splitedNPCID.length != 2)
					//throw new RuntimeException(&quot;Invalid list for drop line: &quot;
						//	+ line);
				String[] splitedDropLine = line.split(&quot;:&quot;, 6);
				//if (splitedDropLine.length != 6|| splitedDropLine.length != 2)
					//throw new RuntimeException(&quot;Invalid list for drop line: &quot;
						//	+ line);
//				String[] splitedItems = splitedLine[2].split(&quot; &quot;);
//				int key = Integer.valueOf(splitedInform[0]);
//				int money = Integer.valueOf(splitedInform[1]);
//				boolean generalStore = Boolean.valueOf(splitedInform[2]);
//				Item[] items = new Item[splitedItems.length / 2];
				short NPCID = 2;
				if (splitedDropLine[0].equalsIgnoreCase(&quot;NPCID&quot;)){
					NPCID = Short.valueOf(splitedNPCID[1]);
					out.writeShort(NPCID);
					out.writeUTF(&quot;\n&quot;);
				}else{
					String[] splitItem = splitedDropLine[1].split(&quot; &quot;,2);
					int ItemID = Integer.valueOf(splitItem[0]);
					String[] splitRate = splitedDropLine[2].split(&quot; &quot;,2);
					System.out.println(splitRate[0]);
					double Rate = Double.valueOf(splitRate[0]);
					String[] splitMin = splitedDropLine[3].split(&quot; &quot;,2);
					int Min = Integer.valueOf(splitMin[0]);
					String[] splitMax = splitedDropLine[4].split(&quot; &quot;,2);
					int Max = Integer.valueOf(splitMax[0]);
					boolean Rare = Boolean.valueOf(splitedDropLine[5]);
					
					//out.writeUTF(&quot;ITEMID:&quot;+ItemID+&quot; RATE:&quot;+Rate+&quot; MINAMOUNT:&quot;+Min+&quot; MAXAMOUNT:&quot;+Max+&quot; RARE:&quot;+Rare);
					out.writeInt(ItemID);
					out.writeDouble(Rate);
					out.writeInt(Min);
					out.writeInt(Max);
					out.writeBoolean(Rare);
				}
			}
			in.close();
			out.close();
		} catch (Throwable e) {
			Logger.handle(e);
		}
	}
	private static void loadPackedNPCDrops() {
		try {
			RandomAccessFile in = new RandomAccessFile(PACKED_PATH, &quot;r&quot;);
			FileChannel channel = in.getChannel();
			ByteBuffer buffer = channel.map(MapMode.READ_ONLY, 0,
					channel.size());
			int dropSize = buffer.getShort() &amp; 0xffff;
			npcDrops = new HashMap&lt;Integer, Drop[]&gt;(dropSize);
			for (int i = 0; i &lt; dropSize; i++) {
				int npcId = buffer.getShort() &amp; 0xffff;
				Drop[] drops = new Drop[buffer.getShort() &amp; 0xffff];
				for (int d = 0; d &lt; drops.length; d++) {
					if (buffer.get() == 0)
						drops[d] = new Drop(buffer.getShort() &amp; 0xffff,
								buffer.getDouble(), buffer.getInt(),
								buffer.getInt(), false);
					else
						drops[d] = new Drop(0, 0, 0, 0, true);

				}
				npcDrops.put(npcId, drops);
			}
			channel.close();
			in.close();
		} catch (Throwable e) {
			Logger.handle(e);
		}
	}
	public HashMap&lt;Integer, Drop[]&gt; getDropMap() {
		return npcDrops;
	}
}
[/code]


So this error rises when an NPC is killed, I have already figured out how to pack the file it is just not working correctly. Need some help, will greatly appreciate it.</description>
    
    <lastBuildDate>Thu, 19 Apr 2012 10:06:03 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/nullpointer-issue/439746.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>NullPointer issue</title>
        <dc:creator><![CDATA[@killnpwn killnpwn]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/killnpwn">@killnpwn</a> wrote:</p>
          <blockquote>
              <p>I do not know how to fix thisâ€¦ although could you help me with packing my NPCDrops? D: I will REP you if you tell me how :o</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/nullpointer-issue/439746/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/nullpointer-issue/439746/2</link>
        <pubDate>Thu, 19 Apr 2012 10:06:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-439746-2</guid>
        <source url="https://forum.moparisthebest.com/t/nullpointer-issue/439746.rss">NullPointer issue</source>
      </item>
      <item>
        <title>NullPointer issue</title>
        <dc:creator><![CDATA[@lukenuke75 lukenuke75]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lukenuke75">@lukenuke75</a> wrote:</p>
          <blockquote>
              <p>Can someone be useful and help me with this?</p>
<pre><code class="lang-auto">java.lang.NullPointerException
        at com.rs.utils.NPCDrops.getDrops(NPCDrops.java:30)
        at com.rs.game.npc.NPC.drop(NPC.java:597)
        at com.rs.game.npc.NPC$11.run(NPC.java:582)
        at com.rs.game.tasks.WorldTasksManager.processTasks(WorldTasksManager.ja
va:19)[/code]

Class File:

[code]package com.rs.utils;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.File;
import java.io.RandomAccessFile;
import java.nio.ByteBuffer;
import java.nio.channels.FileChannel;
import java.nio.channels.FileChannel.MapMode;
import java.util.HashMap;

import com.rs.game.npc.Drop;

public class NPCDrops {
	private final static String PACKED_PATH = "data/npcs/packedDrops.d";
	private final static String UNPACKED_PATH = "data/npcs/unpackedDrops.txt";
	private static HashMap&lt;Integer, Drop[]&gt; npcDrops;
	private static final HashMap&lt;Integer, Drop&gt; npcDrops2 = new HashMap&lt;Integer, Drop&gt;();
	public static final void init() {
		if (new File(PACKED_PATH).exists()){
			loadPackedNPCDrops();
		}else{
			loadUnpackedDrops();
		}
	}

	public static Drop[] getDrops(int npcId) {
		return npcDrops.get(npcId);
	}
	static int i = 0;
	private static void loadUnpackedDrops() {
		Logger.log("NPCDrops", "Packing drops...");
		try {
			BufferedReader in = new BufferedReader(
					new FileReader(UNPACKED_PATH));
			DataOutputStream out = new DataOutputStream(new FileOutputStream(
					PACKED_PATH));
			while (true) {
				String line = in.readLine();
				if (line == null)
					break;
				if (line.startsWith("//"))
					continue;
				String[] splitedNPCID = line.split(":", 2);
				//if (splitedNPCID.length != 2)
					//throw new RuntimeException("Invalid list for drop line: "
						//	+ line);
				String[] splitedDropLine = line.split(":", 6);
				//if (splitedDropLine.length != 6|| splitedDropLine.length != 2)
					//throw new RuntimeException("Invalid list for drop line: "
						//	+ line);
//				String[] splitedItems = splitedLine[2].split(" ");
//				int key = Integer.valueOf(splitedInform[0]);
//				int money = Integer.valueOf(splitedInform[1]);
//				boolean generalStore = Boolean.valueOf(splitedInform[2]);
//				Item[] items = new Item[splitedItems.length / 2];
				short NPCID = 2;
				if (splitedDropLine[0].equalsIgnoreCase("NPCID")){
					NPCID = Short.valueOf(splitedNPCID[1]);
					out.writeShort(NPCID);
					out.writeUTF("\n");
				}else{
					String[] splitItem = splitedDropLine[1].split(" ",2);
					int ItemID = Integer.valueOf(splitItem[0]);
					String[] splitRate = splitedDropLine[2].split(" ",2);
					System.out.println(splitRate[0]);
					double Rate = Double.valueOf(splitRate[0]);
					String[] splitMin = splitedDropLine[3].split(" ",2);
					int Min = Integer.valueOf(splitMin[0]);
					String[] splitMax = splitedDropLine[4].split(" ",2);
					int Max = Integer.valueOf(splitMax[0]);
					boolean Rare = Boolean.valueOf(splitedDropLine[5]);
					
					//out.writeUTF("ITEMID:"+ItemID+" RATE:"+Rate+" MINAMOUNT:"+Min+" MAXAMOUNT:"+Max+" RARE:"+Rare);
					out.writeInt(ItemID);
					out.writeDouble(Rate);
					out.writeInt(Min);
					out.writeInt(Max);
					out.writeBoolean(Rare);
				}
			}
			in.close();
			out.close();
		} catch (Throwable e) {
			Logger.handle(e);
		}
	}
	private static void loadPackedNPCDrops() {
		try {
			RandomAccessFile in = new RandomAccessFile(PACKED_PATH, "r");
			FileChannel channel = in.getChannel();
			ByteBuffer buffer = channel.map(MapMode.READ_ONLY, 0,
					channel.size());
			int dropSize = buffer.getShort() &amp; 0xffff;
			npcDrops = new HashMap&lt;Integer, Drop[]&gt;(dropSize);
			for (int i = 0; i &lt; dropSize; i++) {
				int npcId = buffer.getShort() &amp; 0xffff;
				Drop[] drops = new Drop[buffer.getShort() &amp; 0xffff];
				for (int d = 0; d &lt; drops.length; d++) {
					if (buffer.get() == 0)
						drops[d] = new Drop(buffer.getShort() &amp; 0xffff,
								buffer.getDouble(), buffer.getInt(),
								buffer.getInt(), false);
					else
						drops[d] = new Drop(0, 0, 0, 0, true);

				}
				npcDrops.put(npcId, drops);
			}
			channel.close();
			in.close();
		} catch (Throwable e) {
			Logger.handle(e);
		}
	}
	public HashMap&lt;Integer, Drop[]&gt; getDropMap() {
		return npcDrops;
	}
}</code></pre>
<p>So this error rises when an NPC is killed, I have already figured out how to pack the file it is just not working correctly. Need some help, will greatly appreciate it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/nullpointer-issue/439746/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/nullpointer-issue/439746/1</link>
        <pubDate>Sun, 15 Apr 2012 20:51:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-439746-1</guid>
        <source url="https://forum.moparisthebest.com/t/nullpointer-issue/439746.rss">NullPointer issue</source>
      </item>
  </channel>
</rss>
