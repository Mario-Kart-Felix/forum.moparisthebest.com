<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Delete</title>
    <link>https://forum.moparisthebest.com/t/delete/425831</link>
    <description>Delete</description>
    
    <lastBuildDate>Tue, 20 Dec 2011 04:04:30 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/delete/425831.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Delete</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>[quote=“veer, post:7, topic:425831”][quote author=sinisoul link=topic=528489.msg3855702#msg3855702 date=1324339265]<br>
The faster your server pulse cycle, the faster events will happen on the client. The client doesn’t necessarily have a set pulse cycle time to run at,</p>
<p>Of course it has a minimum and maximum delta time it will run at but now with modern computers you really don’t see the frame rate of the application dipping below ‘fast’.</p>
<p>If you send the response frames faster than 600 ms which is that golden tick number, then the client will process them just as fast as you are sending them within the range of the maximum and minimum delta times.</p>
<pre><code class="lang-auto">int opos = 0;
        int ratio = 256;
        int del = 1;
        int count = 0;
        int intex = 0;
        for(int k1 = 0; k1 &lt; 10; k1++)
            times[k1] = System.currentTimeMillis();
        long l = System.currentTimeMillis();
        while(anInt4 &gt;= 0) {
            if(anInt4 &gt; 0) {
                anInt4--;
                if(anInt4 == 0) {
                    method3(4747);
                    return;
                }
            }
            int r = ratio;
            int d = del;
            ratio = 300;
            del = 1;
            long l1 = System.currentTimeMillis();
            if(times[opos] == 0L) {
                ratio = r;
                del = d;
            } else
            if(l1 &gt; times[opos])
                ratio = (int)((long) (2560 * deltime) / (l1 - times[opos]));
            if(ratio &lt; 25)
                ratio = 25;
            if(ratio &gt; 256)
            {
                ratio = 256;
                del = (int)((long) deltime - (l1 - times[opos]) / 10L);
            }
            if(del &gt; deltime)
                del = deltime;
            times[opos] = l1;
            opos = (opos + 1) % 10;
            if(del &gt; 1)
            {
                for(int k2 = 0; k2 &lt; 10; k2++)
                    if(times[k2] != 0L)
                        times[k2] += del;

            }
            if(del &lt; mindel)
                del = mindel;
            try
            {
                Thread.sleep(del);
            }
            catch(InterruptedException _ex)
            {
                intex++;
            }
            for(; count &lt; 256; count += ratio)
            {
                anInt26 = anInt22;
                curpressed_x = pressed_x;
                curpressed_y = pressed_y;
                curpressed_t = pressed_t;
                anInt22 = 0;
                handleLoopCycle();
                kread_offset = kwrite_offset;
            }
            count &amp;= 0xff;
            if(deltime &gt; 0)
                fps = (1000 * ratio) / (deltime * 256);
            handleDrawCycle(0);
            if(aBoolean9)
            {
                System.out.println("ntime:" + l1);
                for(int l2 = 0; l2 &lt; 10; l2++)
                {
                    int i3 = ((opos - l2 - 1) + 20) % 10;
                    System.out.println("otim" + i3 + ":" + times[i3]);
                }

                System.out.println("fps:" + fps + " ratio:" + ratio + " count:" + count);
                System.out.println("del:" + del + " deltime:" + deltime + " mindel:" + mindel);
                System.out.println("intex:" + intex + " opos:" + opos);
                aBoolean9 = false;
                intex = 0;
            }
        }</code></pre>
<p>[/quote]</p>
<p>[code]    public void run() {<br>
component().addMouseListener(this);<br>
component().addMouseMotionListener(this);<br>
component().addKeyListener(this);<br>
component().addFocusListener(this);<br>
if (window != null)<br>
window.addWindowListener(this);<br>
update_progress(0, “Loading…”);<br>
initialize();<br>
int tick_ptr = 0;<br>
int update_step = 256;<br>
int delay = 1;<br>
int update_slots = 0;<br>
int interrupt_counter = 0;<br>
for (int k1 = 0; k1 &lt; 10; k1++)<br>
tick_cache[k1] = System.currentTimeMillis();</p>
<pre><code>    long l = System.currentTimeMillis();
    while (exit_delay &gt;= 0) {
        if (exit_delay &gt; 0) {
            exit_delay--;
            if (exit_delay == 0) {
                exit();
                return;
            }
        }
        int prev_step = update_step;
        int prev_delay = delay;
        update_step = 300;
        delay = 1;
        long tick = System.currentTimeMillis();
        if (tick_cache[tick_ptr] == 0L) {
            update_step = prev_step;
            delay = prev_delay;
        } else if (tick &gt; tick_cache[tick_ptr])
            update_step = (int) ((long) (2560 * frame_time) / (tick - tick_cache[tick_ptr]));
        if (update_step &lt; 25)
            update_step = 25;
        if (update_step &gt; 256) {
            update_step = 256;
            delay = (int) ((long) frame_time - (tick - tick_cache[tick_ptr]) / 10L);
        }
        if (delay &gt; frame_time)
            delay = frame_time;
        tick_cache[tick_ptr] = tick;
        tick_ptr = (tick_ptr + 1) % 10;
        if (delay &gt; 1) {
            for (int k2 = 0; k2 &lt; 10; k2++)
                if (tick_cache[k2] != 0L)
                    tick_cache[k2] += delay;

        }
        if (delay &lt; min_delay)
            delay = min_delay;
        try {
            Thread.sleep(delay);
        } catch (InterruptedException _ex) {
            interrupt_counter++;
        }
        for (; update_slots &lt; 256; update_slots += update_step) {
            modifier_state = cur_modifier_state;
            click_x = cur_click_x;
            click_y = cur_click_y;
            click_time = cur_click_time;
            cur_modifier_state = 0;
            update();
            key_buf_read_ptr = key_buf_write_ptr;
        }

        update_slots &amp;= 0xff;
        if (frame_time &gt; 0)
            real_rate = (1000 * update_step) / (frame_time * 256);
        display();
        if (show_diagnostics) {
            System.out.println("ntime:" + tick);
            for (int l2 = 0; l2 &lt; 10; l2++) {
                int i3 = ((tick_ptr - l2 - 1) + 20) % 10;
                System.out.println("otim" + i3 + ":" + tick_cache[i3]);
            }

            System.out.println("fps:" + real_rate + " ratio:" + update_step + " count:" + update_slots);
            System.out.println("del:" + delay + " deltime:" + frame_time + " mindel:" + min_delay);
            System.out.println("intex:" + interrupt_counter + " opos:" + tick_ptr);
            show_diagnostics = false;
            interrupt_counter = 0;
        }
    }
    if (exit_delay == -1)
        exit();
}
</code></pre>
<p>[/code][/quote]</p>
<p>Much better representation.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delete/425831/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delete/425831/8</link>
        <pubDate>Tue, 20 Dec 2011 04:04:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-425831-8</guid>
        <source url="https://forum.moparisthebest.com/t/delete/425831.rss">Delete</source>
      </item>
      <item>
        <title>Delete</title>
        <dc:creator><![CDATA[@slavemaster veer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/slavemaster">@slavemaster</a> wrote:</p>
          <blockquote>
              <p>[quote=“sinisoul, post:6, topic:425831”]The faster your server pulse cycle, the faster events will happen on the client. The client doesn’t necessarily have a set pulse cycle time to run at,</p>
<p>Of course it has a minimum and maximum delta time it will run at but now with modern computers you really don’t see the frame rate of the application dipping below ‘fast’.</p>
<p>If you send the response frames faster than 600 ms which is that golden tick number, then the client will process them just as fast as you are sending them within the range of the maximum and minimum delta times.</p>
<pre><code class="lang-auto">int opos = 0;
        int ratio = 256;
        int del = 1;
        int count = 0;
        int intex = 0;
        for(int k1 = 0; k1 &lt; 10; k1++)
            times[k1] = System.currentTimeMillis();
        long l = System.currentTimeMillis();
        while(anInt4 &gt;= 0) {
            if(anInt4 &gt; 0) {
                anInt4--;
                if(anInt4 == 0) {
                    method3(4747);
                    return;
                }
            }
            int r = ratio;
            int d = del;
            ratio = 300;
            del = 1;
            long l1 = System.currentTimeMillis();
            if(times[opos] == 0L) {
                ratio = r;
                del = d;
            } else
            if(l1 &gt; times[opos])
                ratio = (int)((long) (2560 * deltime) / (l1 - times[opos]));
            if(ratio &lt; 25)
                ratio = 25;
            if(ratio &gt; 256)
            {
                ratio = 256;
                del = (int)((long) deltime - (l1 - times[opos]) / 10L);
            }
            if(del &gt; deltime)
                del = deltime;
            times[opos] = l1;
            opos = (opos + 1) % 10;
            if(del &gt; 1)
            {
                for(int k2 = 0; k2 &lt; 10; k2++)
                    if(times[k2] != 0L)
                        times[k2] += del;

            }
            if(del &lt; mindel)
                del = mindel;
            try
            {
                Thread.sleep(del);
            }
            catch(InterruptedException _ex)
            {
                intex++;
            }
            for(; count &lt; 256; count += ratio)
            {
                anInt26 = anInt22;
                curpressed_x = pressed_x;
                curpressed_y = pressed_y;
                curpressed_t = pressed_t;
                anInt22 = 0;
                handleLoopCycle();
                kread_offset = kwrite_offset;
            }
            count &amp;= 0xff;
            if(deltime &gt; 0)
                fps = (1000 * ratio) / (deltime * 256);
            handleDrawCycle(0);
            if(aBoolean9)
            {
                System.out.println("ntime:" + l1);
                for(int l2 = 0; l2 &lt; 10; l2++)
                {
                    int i3 = ((opos - l2 - 1) + 20) % 10;
                    System.out.println("otim" + i3 + ":" + times[i3]);
                }

                System.out.println("fps:" + fps + " ratio:" + ratio + " count:" + count);
                System.out.println("del:" + del + " deltime:" + deltime + " mindel:" + mindel);
                System.out.println("intex:" + intex + " opos:" + opos);
                aBoolean9 = false;
                intex = 0;
            }
        }
[/code][/quote]

[code]    public void run() {
        component().addMouseListener(this);
        component().addMouseMotionListener(this);
        component().addKeyListener(this);
        component().addFocusListener(this);
        if (window != null)
            window.addWindowListener(this);
        update_progress(0, "Loading...");
        initialize();
        int tick_ptr = 0;
        int update_step = 256;
        int delay = 1;
        int update_slots = 0;
        int interrupt_counter = 0;
        for (int k1 = 0; k1 &lt; 10; k1++)
            tick_cache[k1] = System.currentTimeMillis();

        long l = System.currentTimeMillis();
        while (exit_delay &gt;= 0) {
            if (exit_delay &gt; 0) {
                exit_delay--;
                if (exit_delay == 0) {
                    exit();
                    return;
                }
            }
            int prev_step = update_step;
            int prev_delay = delay;
            update_step = 300;
            delay = 1;
            long tick = System.currentTimeMillis();
            if (tick_cache[tick_ptr] == 0L) {
                update_step = prev_step;
                delay = prev_delay;
            } else if (tick &gt; tick_cache[tick_ptr])
                update_step = (int) ((long) (2560 * frame_time) / (tick - tick_cache[tick_ptr]));
            if (update_step &lt; 25)
                update_step = 25;
            if (update_step &gt; 256) {
                update_step = 256;
                delay = (int) ((long) frame_time - (tick - tick_cache[tick_ptr]) / 10L);
            }
            if (delay &gt; frame_time)
                delay = frame_time;
            tick_cache[tick_ptr] = tick;
            tick_ptr = (tick_ptr + 1) % 10;
            if (delay &gt; 1) {
                for (int k2 = 0; k2 &lt; 10; k2++)
                    if (tick_cache[k2] != 0L)
                        tick_cache[k2] += delay;

            }
            if (delay &lt; min_delay)
                delay = min_delay;
            try {
                Thread.sleep(delay);
            } catch (InterruptedException _ex) {
                interrupt_counter++;
            }
            for (; update_slots &lt; 256; update_slots += update_step) {
                modifier_state = cur_modifier_state;
                click_x = cur_click_x;
                click_y = cur_click_y;
                click_time = cur_click_time;
                cur_modifier_state = 0;
                update();
                key_buf_read_ptr = key_buf_write_ptr;
            }

            update_slots &amp;= 0xff;
            if (frame_time &gt; 0)
                real_rate = (1000 * update_step) / (frame_time * 256);
            display();
            if (show_diagnostics) {
                System.out.println("ntime:" + tick);
                for (int l2 = 0; l2 &lt; 10; l2++) {
                    int i3 = ((tick_ptr - l2 - 1) + 20) % 10;
                    System.out.println("otim" + i3 + ":" + tick_cache[i3]);
                }

                System.out.println("fps:" + real_rate + " ratio:" + update_step + " count:" + update_slots);
                System.out.println("del:" + delay + " deltime:" + frame_time + " mindel:" + min_delay);
                System.out.println("intex:" + interrupt_counter + " opos:" + tick_ptr);
                show_diagnostics = false;
                interrupt_counter = 0;
            }
        }
        if (exit_delay == -1)
            exit();
    }</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delete/425831/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delete/425831/7</link>
        <pubDate>Tue, 20 Dec 2011 01:49:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-425831-7</guid>
        <source url="https://forum.moparisthebest.com/t/delete/425831.rss">Delete</source>
      </item>
      <item>
        <title>Delete</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>The faster your server pulse cycle, the faster events will happen on the client. The client doesn’t necessarily have a set pulse cycle time to run at,</p>
<p>Of course it has a minimum and maximum delta time it will run at but now with modern computers you really don’t see the frame rate of the application dipping below ‘fast’.</p>
<p>If you send the response frames faster than 600 ms which is that golden tick number, then the client will process them just as fast as you are sending them within the range of the maximum and minimum delta times.</p>
<pre><code class="lang-auto">int opos = 0;
        int ratio = 256;
        int del = 1;
        int count = 0;
        int intex = 0;
        for(int k1 = 0; k1 &lt; 10; k1++)
            times[k1] = System.currentTimeMillis();
        long l = System.currentTimeMillis();
        while(anInt4 &gt;= 0) {
            if(anInt4 &gt; 0) {
                anInt4--;
                if(anInt4 == 0) {
                    method3(4747);
                    return;
                }
            }
            int r = ratio;
            int d = del;
            ratio = 300;
            del = 1;
            long l1 = System.currentTimeMillis();
            if(times[opos] == 0L) {
                ratio = r;
                del = d;
            } else
            if(l1 &gt; times[opos])
                ratio = (int)((long) (2560 * deltime) / (l1 - times[opos]));
            if(ratio &lt; 25)
                ratio = 25;
            if(ratio &gt; 256)
            {
                ratio = 256;
                del = (int)((long) deltime - (l1 - times[opos]) / 10L);
            }
            if(del &gt; deltime)
                del = deltime;
            times[opos] = l1;
            opos = (opos + 1) % 10;
            if(del &gt; 1)
            {
                for(int k2 = 0; k2 &lt; 10; k2++)
                    if(times[k2] != 0L)
                        times[k2] += del;

            }
            if(del &lt; mindel)
                del = mindel;
            try
            {
                Thread.sleep(del);
            }
            catch(InterruptedException _ex)
            {
                intex++;
            }
            for(; count &lt; 256; count += ratio)
            {
                anInt26 = anInt22;
                curpressed_x = pressed_x;
                curpressed_y = pressed_y;
                curpressed_t = pressed_t;
                anInt22 = 0;
                handleLoopCycle();
                kread_offset = kwrite_offset;
            }
            count &amp;= 0xff;
            if(deltime &gt; 0)
                fps = (1000 * ratio) / (deltime * 256);
            handleDrawCycle(0);
            if(aBoolean9)
            {
                System.out.println("ntime:" + l1);
                for(int l2 = 0; l2 &lt; 10; l2++)
                {
                    int i3 = ((opos - l2 - 1) + 20) % 10;
                    System.out.println("otim" + i3 + ":" + times[i3]);
                }

                System.out.println("fps:" + fps + " ratio:" + ratio + " count:" + count);
                System.out.println("del:" + del + " deltime:" + deltime + " mindel:" + mindel);
                System.out.println("intex:" + intex + " opos:" + opos);
                aBoolean9 = false;
                intex = 0;
            }
        }</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delete/425831/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delete/425831/6</link>
        <pubDate>Tue, 20 Dec 2011 00:01:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-425831-6</guid>
        <source url="https://forum.moparisthebest.com/t/delete/425831.rss">Delete</source>
      </item>
      <item>
        <title>Delete</title>
        <dc:creator><![CDATA[@slavemaster veer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/slavemaster">@slavemaster</a> wrote:</p>
          <blockquote>
              <p>I investigated into the issue of dealing with responding to incoming game events from the client a while ago. If you’re familiar to the cycle-free server design I shared on rune-server several months ago, then this should come pretty easily to you… all events can be handled immediately, just as they come in, unless you are in the midst of synchronizing the clients (the update phase - every 600ms). Frames the server sends to clients that are purely responses to requests, like for preparing skill interfaces, can be sent immediately as they are 100% localized and have no influence on others in the game. This already happens in real RuneScape, and is an effective way to reduce contention on event queues and keep them from being bottlenecks. You should not delay when you don’t have to.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delete/425831/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delete/425831/5</link>
        <pubDate>Mon, 19 Dec 2011 16:55:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-425831-5</guid>
        <source url="https://forum.moparisthebest.com/t/delete/425831.rss">Delete</source>
      </item>
      <item>
        <title>Delete</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <p>it makes it so people with high pings are less effected</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delete/425831/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delete/425831/4</link>
        <pubDate>Mon, 19 Dec 2011 15:58:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-425831-4</guid>
        <source url="https://forum.moparisthebest.com/t/delete/425831.rss">Delete</source>
      </item>
      <item>
        <title>Delete</title>
        <dc:creator><![CDATA[@Speljohan Speljohan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/speljohan">@Speljohan</a> wrote:</p>
          <blockquote>
              <p>[quote=“yo123, post:1, topic:425913”][quote author=dain bramage link=topic=528489.msg3854713#msg3854713 date=1324259655]<br>
In the case of walking, it is processed every 600 milliseconds. So it would be more like: Client sends walking packet -&gt; Server gets packet in ping time -&gt; Server processes packet -&gt; Server waits until next loop (every 600 ms) -&gt; Server sends response packet (update packet).<br>
[/quote]So what if the server receives the packet at 5 ms? It’ll only send the response in 595 ms? That doesn’t seem right.[/quote]That’s precisely what it does.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delete/425831/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delete/425831/3</link>
        <pubDate>Mon, 19 Dec 2011 14:06:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-425831-3</guid>
        <source url="https://forum.moparisthebest.com/t/delete/425831.rss">Delete</source>
      </item>
      <item>
        <title>Delete</title>
        <dc:creator><![CDATA[@dain_bramage dain bramage]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/dain_bramage">@dain_bramage</a> wrote:</p>
          <blockquote>
              <p>In the case of walking, it is processed every 600 milliseconds. So it would be more like: Client sends walking packet -&gt; Server gets packet in ping time -&gt; Server processes packet -&gt; Server waits until next loop (every 600 ms) -&gt; Server sends response packet (update packet).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delete/425831/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delete/425831/2</link>
        <pubDate>Mon, 19 Dec 2011 01:54:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-425831-2</guid>
        <source url="https://forum.moparisthebest.com/t/delete/425831.rss">Delete</source>
      </item>
      <item>
        <title>Delete</title>
        <dc:creator><![CDATA[@yo123 yo123]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/yo123">@yo123</a> wrote:</p>
          <blockquote>
              <p>Delete</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delete/425831/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delete/425831/1</link>
        <pubDate>Sun, 18 Dec 2011 21:53:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-425831-1</guid>
        <source url="https://forum.moparisthebest.com/t/delete/425831.rss">Delete</source>
      </item>
  </channel>
</rss>
