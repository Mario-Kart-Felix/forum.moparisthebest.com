<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>317pi client help</title>
    <link>https://forum.moparisthebest.com/t/317pi-client-help/553521</link>
    <description>heyguys i want to add items bug my itemdef is diffrent and when i try to add and switch the name the items crash my client

itemdef:

[code]import java.io.*;

public final class ItemDef {

	public static void nullLoader() {
		mruNodes2 = null;
		mruNodes1 = null;
		streamIndices = null;
		cache = null;
		stream = null;
	}
public int doggystyle = 0;
public int doggystyle2 = 0;
public int doggystyle3 = 0;
	public boolean method192(int j) {
		int k = anInt175;
		int l = anInt166;
		if(j == 1)
		{
			k = anInt197;
			l = anInt173;
		}
		if(k == -1)
			return true;
		boolean flag = true;
		if(!Model.method463(k))
			flag = false;
		if(l != -1 &amp;&amp; !Model.method463(l))
			flag = false;
		return flag;
	}
	
	/*public static void dumpStacks() {
		try {
			FileOutputStream out = new FileOutputStream(new File(&quot;stackable.dat&quot;));
			for (int j = 0; j &lt; 12000; j++) {
				ItemDef item = ItemDef.forID(j);
				out.write(item.stackable ? 1 : 0);
			}
			out.write(-1);
			out.close();
		} catch (IOException ioe) {ioe.printStackTrace();}	
	}
	
	public static void dumpNotes() {
		try {
			FileOutputStream out = new FileOutputStream(new File(&quot;notes.dat&quot;));
			for (int j = 0; j &lt; 12000; j++) {
				ItemDef item = ItemDef.forID(j);
				out.write(item.certTemplateID != -1 ? 0 : 1);
			}
			out.write(-1);
			out.close();
		} catch (IOException ioe) {ioe.printStackTrace();}
	
	
	}*/
	
	public static void dumpPrices() {
		try {
			//FileOutputStream out = new FileOutputStream(new File(&quot;prices.dat&quot;));
			FileWriter fw = new FileWriter(&quot;prices.txt&quot;);
			for (int j = 0; j &lt; 12000; j++) {
				ItemDef item = ItemDef.forID(j);
				fw.write(item.id + &quot; &quot; + item.value + &quot;\r\n&quot;);
			}
			fw.close();
		} catch (IOException ioe) {ioe.printStackTrace();}
	
	
	}
	
	public static void unpackConfig(StreamLoader streamLoader)	 {
		stream = new Stream(streamLoader.getDataForName(&quot;obj.dat&quot;));
		Stream stream = new Stream(streamLoader.getDataForName(&quot;obj.idx&quot;));
		totalItems = stream.readUnsignedWord();
		streamIndices = new int[totalItems + 400000];
		int i = 2;
		for(int j = 0; j &lt; totalItems; j++) {
			streamIndices[j] = i;
			i += stream.readUnsignedWord();
		}
		cache = new ItemDef[10];
		for(int k = 0; k &lt; 10; k++)
			cache[k] = new ItemDef();
		//dumpStacks();
		//dumpNotes();
		dumpPrices();
	}

	public Model method194(int j) {
		int k = anInt175;
		int l = anInt166;
		if(j == 1) {
			k = anInt197;
			l = anInt173;
		}
		if(k == -1)
			return null;
		Model model = Model.method462(k);
		if(l != -1) {
			Model model_1 = Model.method462(l);
			Model aclass30_sub2_sub4_sub6s[] = {
					model, model_1
			};
			model = new Model(2, aclass30_sub2_sub4_sub6s);
		}
		if(anInt167 != 128 || anInt192 != 128 || anInt191 != 128)
			model.method478(anInt167, anInt191, anInt192);
	   if (originalModelColors != null) {
			for (int i1 = 0; i1 &lt; originalModelColors.length; i1++)
				model.method476(originalModelColors[i1], modifiedModelColors[i1]);

		}
				if (doggystyle &gt; 0)
		model.method1337(doggystyle);
		if (doggystyle2 != 0)
		model.method1338(doggystyle2);
		if (doggystyle3 != 0)
		model.method1339(doggystyle3);
		return model;
	}

	public boolean method195(int j) {
		int k = maleEquip1;
		int l = maleEquip2;
		int i1 = anInt185;
		if(j == 1) {
			k = femaleEquip1;
			l = femaleEquip2;
			i1 = anInt162;
		}
		if(k == -1)
			return true;
		boolean flag = true;
		if(!Model.method463(k))
			flag = false;
		if(l != -1 &amp;&amp; !Model.method463(l))
			flag = false;
		if(i1 != -1 &amp;&amp; !Model.method463(i1))
			flag = false;
		return flag;
	}

	public Model method196(int i) {
		int j = maleEquip1;
		int k = maleEquip2;
		int l = anInt185;
		if(i == 1) {
			j = femaleEquip1;
			k = femaleEquip2;
			l = anInt162;
		}
		if(j == -1)
			return null;
		Model model = Model.method462(j);
		if(k != -1)
			if(l != -1) {
				Model model_1 = Model.method462(k);
				Model model_3 = Model.method462(l);
				Model aclass30_sub2_sub4_sub6_1s[] = {
						model, model_1, model_3
				};
				model = new Model(3, aclass30_sub2_sub4_sub6_1s);
			} else {
				Model model_2 = Model.method462(k);
				Model aclass30_sub2_sub4_sub6s[] = {
						model, model_2
				};
				model = new Model(2, aclass30_sub2_sub4_sub6s);
			}
		if(i == 0 &amp;&amp; (aByte205 != 0 || aByteXMale != 0))
			model.method475(aByteXMale, aByte205, 0);
		if(i == 1 &amp;&amp; (aByte154 != 0 || aByteXFemale != 0))
			model.method475(aByteXFemale, aByte154, 0);
		if(anInt167 != 128 || anInt192 != 128 || anInt191 != 128)
			model.method478(anInt167, anInt191, anInt192);
		if (originalModelColors != null) {
			for (int i1 = 0; i1 &lt; originalModelColors.length; i1++)
				model.method476(originalModelColors[i1], modifiedModelColors[i1]);

		}
				if (doggystyle &gt; 0)
		model.method1337(doggystyle);
		if (doggystyle2 != 0)
		model.method1338(doggystyle2);
		if (doggystyle3 != 0)
		model.method1339(doggystyle3);
		return model;
	}

	
	public void setDefaults() {
		modelID = 0;
		name = null;
		description = null;
		originalModelColors = null;
		modifiedModelColors = null;
		modelZoom = 2000;
		modelRotation1 = 0;
		modelRotation2 = 0;
		anInt204 = 0;
		modelOffset1 = 0;
		modelOffset2 = 0;
		stackable = false;
		value = 1;
		membersObject = false;
		groundActions = null;
		actions = null;
		maleEquip1 = -1;
		maleEquip2 = -1;
		aByteXMale = 0;
		aByteXFemale = 0;
		aByte205 = 0;
		femaleEquip1 = -1;
		femaleEquip2 = -1;
		aByte154 = 0;
		anInt185 = -1;
		anInt162 = -1;
		anInt175 = -1;
		anInt166 = -1;
		anInt197 = -1;
		anInt173 = -1;
		stackIDs = null;
		stackAmounts = null;
		certID = -1;
		certTemplateID = -1;
		anInt167 = 128;
		anInt192 = 128;
		anInt191 = 128;
		anInt196 = 0;
		anInt184 = 0;
		team = 0;
		doggystyle = 0;
		doggystyle2 = 0;
	}

	public static ItemDef forID(int i) {
		for(int j = 0; j &lt; 10; j++)
			if(cache[j].id == i)
				return cache[j];
		cacheIndex = (cacheIndex + 1) % 10;
		ItemDef itemDef = cache[cacheIndex];
		stream.currentOffset = streamIndices[i];
		itemDef.id = i;
		itemDef.setDefaults();
		itemDef.readValues(stream);
		if(itemDef.certTemplateID != -1)
			itemDef.toNote();
		if(!isMembers &amp;&amp; itemDef.membersObject) {
			itemDef.name = &quot;Members Object&quot;;
			itemDef.description = &quot;Login to a members&#39; server to use this object.&quot;.getBytes();
			itemDef.groundActions = null;
			itemDef.actions = null;
			itemDef.team = 0;
		}

if (i == 2438) {
      itemDef.actions = new String[5];
      itemDef.actions[0] = &quot;Drink&quot;;
      itemDef.name = &quot;Overload (4)&quot;;
      itemDef.description = &quot;4 doses of overload potion.&quot;.getBytes();
      itemDef.originalModelColors = new int[1];
      itemDef.modifiedModelColors = new int[1];
      itemDef.originalModelColors[0] = 61;
      itemDef.modifiedModelColors[0] = 0;
      itemDef.modelID = 2789;
      itemDef.modelZoom = 550;
      itemDef.modelRotation1 = 84;
      itemDef.modelRotation2 = 1996;
      itemDef.anInt204 = 0;
      itemDef.modelOffset1 = 0;
      itemDef.modelOffset2 = -1;
    }
    if (i == 151) {
      itemDef.actions = new String[5];
      itemDef.actions[0] = &quot;Drink&quot;;
      itemDef.name = &quot;Overload (3)&quot;;
      itemDef.description = &quot;3 doses of overload potion.&quot;.getBytes();
      itemDef.originalModelColors = new int[1];
      itemDef.modifiedModelColors = new int[1];
      itemDef.originalModelColors[0] = 61;
      itemDef.modifiedModelColors[0] = 0;
      itemDef.modelID = 2697;
      itemDef.modelZoom = 550;
      itemDef.modelRotation1 = 84;
      itemDef.modelRotation2 = 1996;
      itemDef.anInt204 = 0;
      itemDef.modelOffset1 = 0;
      itemDef.modelOffset2 = -1;
    }
    if (i == 155) {
      itemDef.actions = new String[5];
      itemDef.actions[0] = &quot;Drink&quot;;
      itemDef.name = &quot;Overload (1)&quot;;
      itemDef.description = &quot;1 dose of overload potion.&quot;.getBytes();
      itemDef.originalModelColors = new int[1];
      itemDef.modifiedModelColors = new int[1];
      itemDef.originalModelColors[0] = 61;
      itemDef.modifiedModelColors[0] = 0;
      itemDef.modelID = 2621;
      itemDef.modelZoom = 550;
      itemDef.modelRotation1 = 84;
      itemDef.modelRotation2 = 1996;
      itemDef.anInt204 = 0;
      itemDef.modelOffset1 = 0;
      itemDef.modelOffset2 = -1;
    }


			switch (itemDef.id) {
				case 11722:
				itemDef.femaleEquip1 = itemDef.maleEquip1;
				itemDef.femaleEquip2 = itemDef.maleEquip2;
				break;




	case 13399:
      itemDef.actions = new String[5];
      itemDef.actions[1] = &quot;Wield&quot;;
      itemDef.femaleEquip1 = 56042;
      itemDef.modelZoom = 1400;
      itemDef.modelRotation2 = 337;
      itemDef.maleEquip1 = 56042;
      itemDef.modelID = 54520;
      itemDef.anInt164 = -1;
	  
		itemDef.aByte205 = -12;
			itemDef.aByte154 = -12;
      itemDef.name = &quot;@red@Primal maul&quot;;
      itemDef.description = &quot;A maul used to claim life from those who don&#39;t deserve it. (Tier 11)&quot;.getBytes();
      break;

    case 13022:
      itemDef.actions = new String[5];
      itemDef.actions[1] = &quot;Wield&quot;;
      itemDef.modelID = 48512;
      itemDef.modelZoom = 1744;
      itemDef.modelRotation2 = 738;
      itemDef.modelRotation1 = 1985;
      itemDef.modelOffset1 = 0;
      itemDef.modelOffset2 = 0;
      itemDef.maleEquip1 = 48465;
      itemDef.femaleEquip1 = 48465;
      itemDef.name = &quot;Hand cannon&quot;;
      itemDef.description = &quot;A miniature dwarven cannon. &quot;.getBytes();
      break;
case 15135:
     itemDef.actions = new String[5];
      itemDef.actions[1] = &quot;Wear&quot;;
      itemDef.femaleEquip1 = 55770;
      itemDef.modelOffset2 = 1;
      itemDef.modelZoom = 921;
      itemDef.modelRotation2 = 121;
      itemDef.maleEquip1 = 55770;
      itemDef.modelID = 54164;
      itemDef.name = &quot;@or1@Primal full helm&quot;;
      itemDef.description = &quot;A full face helmet&quot;.getBytes();
		break;
    case 15590:
      itemDef.actions = new String[5];
      itemDef.actions[1] = &quot;Wear&quot;;
      itemDef.femaleEquip1 = 56460;
      itemDef.modelOffset2 = 6;
      itemDef.modelZoom = 1720;
      itemDef.modelRotation2 = 0;
      itemDef.maleEquip1 = 55804;
      itemDef.modelID = 54068;
      itemDef.name = &quot;@or1@Primal plateskirt&quot;;
      itemDef.description = &quot;Designer leg protection.&quot;.getBytes();
      break;
    case 15592:
      itemDef.actions = new String[5];
      itemDef.actions[1] = &quot;Wear&quot;;
      itemDef.femaleEquip1 = 55770;
      itemDef.modelOffset2 = 1;
      itemDef.modelZoom = 921;
      itemDef.modelRotation2 = 121;
      itemDef.maleEquip1 = 55770;
      itemDef.modelID = 54164;
      itemDef.name = &quot;@or1@Primal full helm&quot;;
      itemDef.description = &quot;A full face helmet&quot;.getBytes();
      break;
    case 15593:
      itemDef.actions = new String[5];
      itemDef.actions[1] = &quot;Wear&quot;;
      itemDef.femaleEquip1 = 56515;
      itemDef.modelOffset2 = 10;
      itemDef.modelZoom = 1447;
      itemDef.modelRotation2 = 0;
      itemDef.modelRotation1 = 504;
      itemDef.maleEquip1 = 55851;
      itemDef.modelID = 54126;
      itemDef.name = &quot;@or1@Primal platebody&quot;;
      itemDef.description = &quot;An epic platebody&quot;.getBytes();
      break;
    case 15594:
      itemDef.actions = new String[5];
      itemDef.actions[1] = &quot;Wear&quot;;
      itemDef.femaleEquip1 = 55991;
      itemDef.modelOffset2 = 0;
      itemDef.modelZoom = 1776;
      itemDef.modelRotation2 = 0;
      itemDef.modelRotation1 = 344;
      itemDef.maleEquip1 = 55991;
      itemDef.modelID = 54253;
      itemDef.anInt188 = -1;
      itemDef.anInt164 = -1;
      itemDef.aByte154 = -10;
      itemDef.aByte205 = -10;
      itemDef.name = &quot;@or1@Primal kiteshield&quot;;
      itemDef.description = &quot;A large metal shield.&quot;.getBytes();
      break;
    case 15574:
      itemDef.actions = new String[5];
      itemDef.actions[1] = &quot;Wield&quot;;
      itemDef.femaleEquip1 = 56163;
      itemDef.modelOffset1 = 3;
      itemDef.modelOffset2 = 0;
      itemDef.modelZoom = 1650;
      itemDef.modelRotation2 = 1300;
      itemDef.modelRotation1 = 498;
      itemDef.maleEquip1 = 56100;
	  
		itemDef.aByte205 = -12;
			itemDef.aByte154 = -12;
      itemDef.modelID = 54437;
      itemDef.anInt164 = -1;
      itemDef.name = &quot;@red@Primal longsword&quot;;
      itemDef.description = &quot;A razor-sharp longsword. (Tier 11)&quot;.getBytes();
      break;
    case 6149:
    case 6150:
    	itemDef.originalModelColors = new int[2];
    	itemDef.modifiedModelColors = new int[2];
    	itemDef.originalModelColors[0] = 10283;
    	itemDef.originalModelColors[1] = 10270;
    	itemDef.modifiedModelColors[0] = 8523;
    	itemDef.modifiedModelColors[1] = 902;
    	itemDef.name = &quot;@or1@Spined gauntlets&quot;;
    	itemDef.description = &quot;When worn, imbues power of magic shortbow to make it stronger.&quot;.getBytes();
    	break;
		case 15038:
			itemDef.actions = new String[5];
			itemDef.actions[1] = &quot;Wield&quot;;
			itemDef.femaleEquip1 = 35087;//female
			itemDef.modelOffset1 = 3;
			itemDef.modelOffset2 = 0;
			itemDef.modelZoom = 1650;
			itemDef.modelRotation2 = 1300;
			itemDef.modelRotation1 = 498;
			itemDef.maleEquip1 = 35087;
			itemDef.modelID = 35086;
		itemDef.aByte205 = -12;
			itemDef.aByte154 = -12;
			itemDef.name = &quot;@or1@Chaotic longsword&quot;;
			itemDef.anInt188 = -1;//female sleeve
			itemDef.anInt164 = -1;//male sleeve
			itemDef.description = &quot;A dangerously-sharp longsword. (It doesnt look in good condition.)&quot;.getBytes();
		break;
		case 4227:
		itemDef.name = &quot;@or1@Seren&#39;s shield&quot;;
		itemDef.doggystyle2 = 56311;
		break;
		case 4228:
		itemDef.name = &quot;@or1@Artisan&#39;s shield&quot;;
		itemDef.doggystyle2 = 84300;
		break;
		case 10662:
		itemDef.name = &quot;@or1@Headhunter&#39;s cape&quot;;
		itemDef.doggystyle2 = 16230;
		break;
		case 15039:
			itemDef.actions = new String[5];
			itemDef.actions[1] = &quot;Wield&quot;;
			itemDef.femaleEquip1 = 35089;//female
			itemDef.modelOffset1 = 4;
			itemDef.modelOffset2 = 2;
			itemDef.modelZoom = 1360;
			itemDef.modelRotation2 = 354;
			itemDef.modelRotation1 = 498;
			itemDef.maleEquip1 = 35089;
			itemDef.modelID = 35088;
			
		itemDef.aByte205 = -12;
			itemDef.aByte154 = -12;
			itemDef.name = &quot;@or1@Chaotic maul&quot;;
			itemDef.anInt188 = -1;//female sleeve
			itemDef.anInt164 = -1;//male sleeve
itemDef.aByte205 = -10;            itemDef.aByte154 = -10;
			itemDef.description = &quot;A dangerously-blunt maul. (It doesnt look in good condition.)&quot;.getBytes();
		break;
		case 15040:
			itemDef.actions = new String[5];
			itemDef.actions[1] = &quot;Wield&quot;;
			itemDef.femaleEquip1 = 35091;//female
			itemDef.modelOffset1 = 5;
			itemDef.modelOffset2 = 0;
			itemDef.modelZoom = 1711;
			itemDef.modelRotation2 = 365;
			itemDef.modelRotation1 = 350;
			itemDef.maleEquip1 = 35091;
			itemDef.modelID = 35090;
			
		itemDef.aByte205 = -12;
			itemDef.aByte154 = -12;
			itemDef.name = &quot;@or1@Chaotic staff&quot;;
			itemDef.aByte205 = -10;
			itemDef.aByte154 = -10;
			itemDef.anInt188 = -1;//female sleeve
			itemDef.anInt164 = -1;//male sleeve
			itemDef.description = &quot;A staff used by the greatest of wizards. (It doesnt look in good condition.)&quot;.getBytes();
		break;

				
			
				
				
			}
		/* Hardcoded items start here */
		/**/
		return itemDef;
	}

	public void actionData(int a, String b) {
		actions = new String[5];
		actions[a] = b;
	}
	
	public void totalColors(int total) {
	   originalModelColors = new int[total];	   
	   modifiedModelColors = new int[total];
	}
	
	public void colors(int id, int original, int modified) {
		originalModelColors[id] = original;
		modifiedModelColors[id] = modified;
	}
	public void itemData(String n, String d) {
		name = n;
		description = d.getBytes();
	}
	public void models(int mID, int mE, int fE, int mE2, int fE2) {
		modelID = mID;
		maleEquip1 = mE;
		femaleEquip1 = fE;
		maleEquip2 = mE2;
		femaleEquip2 = fE2;
	}
	public void modelData(int mZ, int mR1, int mR2, int mO1, int mO2) {
		modelZoom = mZ;
		modelRotation1 = mR1;
		modelRotation2 = mR2;
		modelOffset1 = mO1;
		modelOffset2 = mO2;
	}

	public void toNote() {
		ItemDef itemDef = forID(certTemplateID);
		modelID = itemDef.modelID;
		modelZoom = itemDef.modelZoom;
		modelRotation1 = itemDef.modelRotation1;
		modelRotation2 = itemDef.modelRotation2;
		anInt204 = itemDef.anInt204;
		modelOffset1 = itemDef.modelOffset1;
		modelOffset2 = itemDef.modelOffset2;
		originalModelColors = itemDef.originalModelColors;
		modifiedModelColors = itemDef.modifiedModelColors;
		ItemDef itemDef_1 = forID(certID);
		name = itemDef_1.name;
		membersObject = itemDef_1.membersObject;
		value = itemDef_1.value;
		String s = &quot;a&quot;;
		char c = itemDef_1.name.charAt(0);
		if(c == &#39;A&#39; || c == &#39;E&#39; || c == &#39;I&#39; || c == &#39;O&#39; || c == &#39;U&#39;)
			s = &quot;an&quot;;
		description = (&quot;Swap this note at any bank for &quot; + s + &quot; &quot; + itemDef_1.name + &quot;.&quot;).getBytes();
		stackable = true;
	}

	public static Sprite getSprite(int i, int j, int k) {
		if(k == 0) {
			Sprite sprite = (Sprite) mruNodes1.insertFromCache(i);
			if(sprite != null &amp;&amp; sprite.anInt1445 != j &amp;&amp; sprite.anInt1445 != -1) {
				sprite.unlink();
				sprite = null;
			}
			if(sprite != null)
				return sprite;
		}
		ItemDef itemDef = forID(i);
		if(itemDef.stackIDs == null)
			j = -1;
		if(j &gt; 1) {
			int i1 = -1;
			for(int j1 = 0; j1 &lt; 10; j1++)
				if(j &gt;= itemDef.stackAmounts[j1] &amp;&amp; itemDef.stackAmounts[j1] != 0)
					i1 = itemDef.stackIDs[j1];
			if(i1 != -1)
				itemDef = forID(i1);
		}
		Model model = itemDef.method201(1);
		if(model == null)
			return null;
		Sprite sprite = null;
		if(itemDef.certTemplateID != -1) {
			sprite = getSprite(itemDef.certID, 10, -1);
			if(sprite == null)
				return null;
		}
		Sprite sprite2 = new Sprite(32, 32);
		int k1 = Texture.textureInt1;
		int l1 = Texture.textureInt2;
		int ai[] = Texture.anIntArray1472;
		int ai1[] = DrawingArea.pixels;
		int i2 = DrawingArea.width;
		int j2 = DrawingArea.height;
		int k2 = DrawingArea.topX;
		int l2 = DrawingArea.bottomX;
		int i3 = DrawingArea.topY;
		int j3 = DrawingArea.bottomY;
		Texture.aBoolean1464 = false;
		DrawingArea.initDrawingArea(32, 32, sprite2.myPixels);
		DrawingArea.drawPixels(32, 0, 0, 0, 32);
		Texture.method364();
		int k3 = itemDef.modelZoom;
		if(k == -1)
			k3 = (int)((double)k3 * 1.5D);
		if(k &gt; 0)
			k3 = (int)((double)k3 * 1.04D);
		int l3 = Texture.anIntArray1470[itemDef.modelRotation1] * k3 &gt;&gt; 16;
		int i4 = Texture.anIntArray1471[itemDef.modelRotation1] * k3 &gt;&gt; 16;
		model.method482(itemDef.modelRotation2, itemDef.anInt204, itemDef.modelRotation1, itemDef.modelOffset1, l3 + model.modelHeight / 2 + itemDef.modelOffset2, i4 + itemDef.modelOffset2);
		for(int i5 = 31; i5 &gt;= 0; i5--) {
			for(int j4 = 31; j4 &gt;= 0; j4--)
				if(sprite2.myPixels[i5 + j4 * 32] == 0)
					if(i5 &gt; 0 &amp;&amp; sprite2.myPixels[(i5 - 1) + j4 * 32] &gt; 1)
						sprite2.myPixels[i5 + j4 * 32] = 1;
					else if(j4 &gt; 0 &amp;&amp; sprite2.myPixels[i5 + (j4 - 1) * 32] &gt; 1)
						sprite2.myPixels[i5 + j4 * 32] = 1;
					else if(i5 &lt; 31 &amp;&amp; sprite2.myPixels[i5 + 1 + j4 * 32] &gt; 1)
						sprite2.myPixels[i5 + j4 * 32] = 1;
					else if(j4 &lt; 31 &amp;&amp; sprite2.myPixels[i5 + (j4 + 1) * 32] &gt; 1)
						sprite2.myPixels[i5 + j4 * 32] = 1;
		}
		if(k &gt; 0) {
			for(int j5 = 31; j5 &gt;= 0; j5--) {
				for(int k4 = 31; k4 &gt;= 0; k4--)
					if(sprite2.myPixels[j5 + k4 * 32] == 0)
						if(j5 &gt; 0 &amp;&amp; sprite2.myPixels[(j5 - 1) + k4 * 32] == 1)
							sprite2.myPixels[j5 + k4 * 32] = k;
						else if(k4 &gt; 0 &amp;&amp; sprite2.myPixels[j5 + (k4 - 1) * 32] == 1)
							sprite2.myPixels[j5 + k4 * 32] = k;
						else if(j5 &lt; 31 &amp;&amp; sprite2.myPixels[j5 + 1 + k4 * 32] == 1)
							sprite2.myPixels[j5 + k4 * 32] = k;
						else if(k4 &lt; 31 &amp;&amp; sprite2.myPixels[j5 + (k4 + 1) * 32] == 1)
							sprite2.myPixels[j5 + k4 * 32] = k;
			}
		} else if(k == 0) {
			for(int k5 = 31; k5 &gt;= 0; k5--) {
				for(int l4 = 31; l4 &gt;= 0; l4--)
					if(sprite2.myPixels[k5 + l4 * 32] == 0 &amp;&amp; k5 &gt; 0 &amp;&amp; l4 &gt; 0 &amp;&amp; sprite2.myPixels[(k5 - 1) + (l4 - 1) * 32] &gt; 0)
						sprite2.myPixels[k5 + l4 * 32] = 0x302020;
			}
		}
		if(itemDef.certTemplateID != -1) {
			int l5 = sprite.anInt1444;
			int j6 = sprite.anInt1445;
			sprite.anInt1444 = 32;
			sprite.anInt1445 = 32;
			sprite.drawSprite(0, 0);
			sprite.anInt1444 = l5;
			sprite.anInt1445 = j6;
		}
		if(k == 0)
			mruNodes1.removeFromCache(sprite2, i);
		DrawingArea.initDrawingArea(j2, i2, ai1);
		DrawingArea.setDrawingArea(j3, k2, l2, i3);
		Texture.textureInt1 = k1;
		Texture.textureInt2 = l1;
		Texture.anIntArray1472 = ai;
		Texture.aBoolean1464 = true;
		if(itemDef.stackable)
			sprite2.anInt1444 = 33;
		else
			sprite2.anInt1444 = 32;
		sprite2.anInt1445 = j;
		return sprite2;
	}

	public Model method201(int i) {
		if(stackIDs != null &amp;&amp; i &gt; 1) {
			int j = -1;
			for(int k = 0; k &lt; 10; k++)
				if(i &gt;= stackAmounts[k] &amp;&amp; stackAmounts[k] != 0)
					j = stackIDs[k];
			if(j != -1)
				return forID(j).method201(1);
		}
		Model model = (Model) mruNodes2.insertFromCache(id);
		if(model != null)
			return model;
		model = Model.method462(modelID);
		if(model == null)
			return null;
		if(anInt167 != 128 || anInt192 != 128 || anInt191 != 128)
			model.method478(anInt167, anInt191, anInt192);
		if (originalModelColors != null) {
			for (int l = 0; l &lt; originalModelColors.length; l++)
				model.method476(originalModelColors[l], modifiedModelColors[l]);

		}
				if (doggystyle &gt; 0)
		model.method1337(doggystyle);
		if (doggystyle2 != 0)
		model.method1338(doggystyle2);
		if (doggystyle3 != 0)
		model.method1339(doggystyle3);
		model.method479(64 + anInt196, 768 + anInt184, -50, -10, -50, true);
		model.aBoolean1659 = true;
		mruNodes2.removeFromCache(model, id);
		return model;
	}

	public Model method202(int i) {
		if(stackIDs != null &amp;&amp; i &gt; 1) {
			int j = -1;
			for(int k = 0; k &lt; 10; k++)
				if(i &gt;= stackAmounts[k] &amp;&amp; stackAmounts[k] != 0)
					j = stackIDs[k];
			if(j != -1)
				return forID(j).method202(1);
		}
		Model model = Model.method462(modelID);
		if(model == null)
			return null;
			if(anInt167 != 128 || anInt192 != 128 || anInt191 != 128)
			model.method478(anInt167, anInt191, anInt192);
		if (originalModelColors != null) {
			for (int l = 0; l &lt; originalModelColors.length; l++)
				model.method476(originalModelColors[l], modifiedModelColors[l]);

		}
				if (doggystyle &gt; 0)
		model.method1337(doggystyle);
		if (doggystyle2 != 0)
		model.method1338(doggystyle2);
		if (doggystyle3 != 0)
		model.method1339(doggystyle3);
		return model;
	}

	public void readValues(Stream stream) {
		do {
			int i = stream.readUnsignedByte();
			if(i == 0)
				return;
			if(i == 1)
				modelID = stream.readUnsignedWord();
			else if(i == 2)
				name = stream.readString();
			else if(i == 3)
				description = stream.readBytes();
			else if(i == 4)
				modelZoom = stream.readUnsignedWord();
			else if(i == 5)
				modelRotation1 = stream.readUnsignedWord();
			else if(i == 6)
				modelRotation2 = stream.readUnsignedWord();
			else if(i == 7) {
				modelOffset1 = stream.readUnsignedWord();
				if(modelOffset1 &gt; 32767)
					modelOffset1 -= 0x10000;
			} else if(i == 8) {
				modelOffset2 = stream.readUnsignedWord();
				if(modelOffset2 &gt; 32767)
					modelOffset2 -= 0x10000;
			} else if(i == 10)
				stream.readUnsignedWord();
			else if(i == 11)
				stackable = true;
			else if(i == 12)
				value = stream.readDWord();
			else if(i == 16)
				membersObject = true;
			else if(i == 23) {
				maleEquip1 = stream.readUnsignedWord();
				aByte205 = stream.readSignedByte();
			} else if(i == 24)
				maleEquip2 = stream.readUnsignedWord();
			else if(i == 25) {
				femaleEquip1 = stream.readUnsignedWord();
				aByte154 = stream.readSignedByte();
			} else if(i == 26)
				femaleEquip2 = stream.readUnsignedWord();
			else if(i &gt;= 30 &amp;&amp; i &lt; 35) {
				if(groundActions == null)
					groundActions = new String[5];
				groundActions[i - 30] = stream.readString();
				if(groundActions[i - 30].equalsIgnoreCase(&quot;hidden&quot;))
					groundActions[i - 30] = null;
			} else if(i &gt;= 35 &amp;&amp; i &lt; 40) {
				if(actions == null)
					actions = new String[5];
				actions[i - 35] = stream.readString();
			} else if(i == 40) {
				int j = stream.readUnsignedByte();
				originalModelColors = new int[j];
				modifiedModelColors = new int[j];
				for(int k = 0; k &lt; j; k++) {
					originalModelColors[k] = stream.readUnsignedWord();
					modifiedModelColors[k] = stream.readUnsignedWord();
				}
			} else if(i == 78)
				anInt185 = stream.readUnsignedWord();
			else if(i == 79)
				anInt162 = stream.readUnsignedWord();
			else if(i == 90)
				anInt175 = stream.readUnsignedWord();
			else if(i == 91)
				anInt197 = stream.readUnsignedWord();
			else if(i == 92)
				anInt166 = stream.readUnsignedWord();
			else if(i == 93)
				anInt173 = stream.readUnsignedWord();
			else if(i == 95)
				anInt204 = stream.readUnsignedWord();
			else if(i == 97)
				certID = stream.readUnsignedWord();
			else if(i == 98)
				certTemplateID = stream.readUnsignedWord();
			else if(i &gt;= 100 &amp;&amp; i &lt; 110) {
				if(stackIDs == null) {
					stackIDs = new int[10];
					stackAmounts = new int[10];
				}
				stackIDs[i - 100] = stream.readUnsignedWord();
				stackAmounts[i - 100] = stream.readUnsignedWord();
			} else if(i == 110)
				anInt167 = stream.readUnsignedWord();
			else if(i == 111)
				anInt192 = stream.readUnsignedWord();
			else if(i == 112)
				anInt191 = stream.readUnsignedWord();
			else if(i == 113)
				anInt196 = stream.readSignedByte();
			else if(i == 114)
				anInt184 = stream.readSignedByte() * 5;
			else if(i == 115)
				team = stream.readUnsignedByte();
		} while(true);
	}

	public ItemDef() {
		id = -1;
	}

	public byte aByte154;
	public int value;
	public int[] modifiedModelColors;
	public int id;
	static MRUNodes mruNodes1 = new MRUNodes(100);
	public static MRUNodes mruNodes2 = new MRUNodes(50);
	public int[] originalModelColors;
	public boolean membersObject;
	public int anInt162;
	public int certTemplateID;
	public int femaleEquip2;
	public int maleEquip1;
	public int anInt166;
	public int anInt167;
	public String groundActions[];
	public int modelOffset1;
	public String name;
	public static ItemDef[] cache;
	public int anInt173;
	public int modelID;
	public int anInt175;
	public boolean stackable;
	public byte description[];
	public int certID;
	public static int cacheIndex;
	public int modelZoom;
	public static boolean isMembers = true;
	public static Stream stream;
	public int anInt184;
	public int anInt185;
	public int maleEquip2;
	public String actions[];
	public int modelRotation1;
	public int anInt191;
	public int anInt192;
	public int[] stackIDs;
	public int modelOffset2;
	public static int[] streamIndices;
	public int anInt196;
	public int anInt197;
	public int modelRotation2;
	public int femaleEquip1;
	public int[] stackAmounts;
	public int team;
	public static int totalItems;
	public int anInt204;
	public byte aByte205;
	public byte aByteXFemale;
	public byte aByteXMale;
	public int anInt164;
	public int anInt199;
	public int anInt188;
}[/code]
every client has 	
itemDef.anInt165 = 13417;
		itemDef.anInt200 = 13417;

exept mine.</description>
    
    <lastBuildDate>Wed, 07 Oct 2015 13:14:58 +0000</lastBuildDate>
    <category>Game Development</category>
    <atom:link href="https://forum.moparisthebest.com/t/317pi-client-help/553521.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>317pi client help</title>
        <dc:creator><![CDATA[@sbruinsma77 sbruinsma77]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sbruinsma77">@sbruinsma77</a> wrote:</p>
          <blockquote>
              <p>heyguys i want to add items bug my itemdef is diffrent and when i try to add and switch the name the items crash my client</p>
<p>itemdef:</p>
<p>[code]import <a href="http://java.io" rel="nofollow noopener">java.io</a>.*;</p>
<p>public final class ItemDef {</p>
<pre><code>public static void nullLoader() {
	mruNodes2 = null;
	mruNodes1 = null;
	streamIndices = null;
	cache = null;
	stream = null;
}
</code></pre>
<p>public int doggystyle = 0;<br>
public int doggystyle2 = 0;<br>
public int doggystyle3 = 0;<br>
public boolean method192(int j) {<br>
int k = anInt175;<br>
int l = anInt166;<br>
if(j == 1)<br>
{<br>
k = anInt197;<br>
l = anInt173;<br>
}<br>
if(k == -1)<br>
return true;<br>
boolean flag = true;<br>
if(!Model.method463(k))<br>
flag = false;<br>
if(l != -1 &amp;&amp; !Model.method463(l))<br>
flag = false;<br>
return flag;<br>
}</p>
<pre><code>/*public static void dumpStacks() {
	try {
		FileOutputStream out = new FileOutputStream(new File("stackable.dat"));
		for (int j = 0; j &lt; 12000; j++) {
			ItemDef item = ItemDef.forID(j);
			out.write(item.stackable ? 1 : 0);
		}
		out.write(-1);
		out.close();
	} catch (IOException ioe) {ioe.printStackTrace();}	
}

public static void dumpNotes() {
	try {
		FileOutputStream out = new FileOutputStream(new File("notes.dat"));
		for (int j = 0; j &lt; 12000; j++) {
			ItemDef item = ItemDef.forID(j);
			out.write(item.certTemplateID != -1 ? 0 : 1);
		}
		out.write(-1);
		out.close();
	} catch (IOException ioe) {ioe.printStackTrace();}


}*/

public static void dumpPrices() {
	try {
		//FileOutputStream out = new FileOutputStream(new File("prices.dat"));
		FileWriter fw = new FileWriter("prices.txt");
		for (int j = 0; j &lt; 12000; j++) {
			ItemDef item = ItemDef.forID(j);
			fw.write(item.id + " " + item.value + "\r\n");
		}
		fw.close();
	} catch (IOException ioe) {ioe.printStackTrace();}


}

public static void unpackConfig(StreamLoader streamLoader)	 {
	stream = new Stream(streamLoader.getDataForName("obj.dat"));
	Stream stream = new Stream(streamLoader.getDataForName("obj.idx"));
	totalItems = stream.readUnsignedWord();
	streamIndices = new int[totalItems + 400000];
	int i = 2;
	for(int j = 0; j &lt; totalItems; j++) {
		streamIndices[j] = i;
		i += stream.readUnsignedWord();
	}
	cache = new ItemDef[10];
	for(int k = 0; k &lt; 10; k++)
		cache[k] = new ItemDef();
	//dumpStacks();
	//dumpNotes();
	dumpPrices();
}

public Model method194(int j) {
	int k = anInt175;
	int l = anInt166;
	if(j == 1) {
		k = anInt197;
		l = anInt173;
	}
	if(k == -1)
		return null;
	Model model = Model.method462(k);
	if(l != -1) {
		Model model_1 = Model.method462(l);
		Model aclass30_sub2_sub4_sub6s[] = {
				model, model_1
		};
		model = new Model(2, aclass30_sub2_sub4_sub6s);
	}
	if(anInt167 != 128 || anInt192 != 128 || anInt191 != 128)
		model.method478(anInt167, anInt191, anInt192);
   if (originalModelColors != null) {
		for (int i1 = 0; i1 &lt; originalModelColors.length; i1++)
			model.method476(originalModelColors[i1], modifiedModelColors[i1]);

	}
			if (doggystyle &gt; 0)
	model.method1337(doggystyle);
	if (doggystyle2 != 0)
	model.method1338(doggystyle2);
	if (doggystyle3 != 0)
	model.method1339(doggystyle3);
	return model;
}

public boolean method195(int j) {
	int k = maleEquip1;
	int l = maleEquip2;
	int i1 = anInt185;
	if(j == 1) {
		k = femaleEquip1;
		l = femaleEquip2;
		i1 = anInt162;
	}
	if(k == -1)
		return true;
	boolean flag = true;
	if(!Model.method463(k))
		flag = false;
	if(l != -1 &amp;&amp; !Model.method463(l))
		flag = false;
	if(i1 != -1 &amp;&amp; !Model.method463(i1))
		flag = false;
	return flag;
}

public Model method196(int i) {
	int j = maleEquip1;
	int k = maleEquip2;
	int l = anInt185;
	if(i == 1) {
		j = femaleEquip1;
		k = femaleEquip2;
		l = anInt162;
	}
	if(j == -1)
		return null;
	Model model = Model.method462(j);
	if(k != -1)
		if(l != -1) {
			Model model_1 = Model.method462(k);
			Model model_3 = Model.method462(l);
			Model aclass30_sub2_sub4_sub6_1s[] = {
					model, model_1, model_3
			};
			model = new Model(3, aclass30_sub2_sub4_sub6_1s);
		} else {
			Model model_2 = Model.method462(k);
			Model aclass30_sub2_sub4_sub6s[] = {
					model, model_2
			};
			model = new Model(2, aclass30_sub2_sub4_sub6s);
		}
	if(i == 0 &amp;&amp; (aByte205 != 0 || aByteXMale != 0))
		model.method475(aByteXMale, aByte205, 0);
	if(i == 1 &amp;&amp; (aByte154 != 0 || aByteXFemale != 0))
		model.method475(aByteXFemale, aByte154, 0);
	if(anInt167 != 128 || anInt192 != 128 || anInt191 != 128)
		model.method478(anInt167, anInt191, anInt192);
	if (originalModelColors != null) {
		for (int i1 = 0; i1 &lt; originalModelColors.length; i1++)
			model.method476(originalModelColors[i1], modifiedModelColors[i1]);

	}
			if (doggystyle &gt; 0)
	model.method1337(doggystyle);
	if (doggystyle2 != 0)
	model.method1338(doggystyle2);
	if (doggystyle3 != 0)
	model.method1339(doggystyle3);
	return model;
}


public void setDefaults() {
	modelID = 0;
	name = null;
	description = null;
	originalModelColors = null;
	modifiedModelColors = null;
	modelZoom = 2000;
	modelRotation1 = 0;
	modelRotation2 = 0;
	anInt204 = 0;
	modelOffset1 = 0;
	modelOffset2 = 0;
	stackable = false;
	value = 1;
	membersObject = false;
	groundActions = null;
	actions = null;
	maleEquip1 = -1;
	maleEquip2 = -1;
	aByteXMale = 0;
	aByteXFemale = 0;
	aByte205 = 0;
	femaleEquip1 = -1;
	femaleEquip2 = -1;
	aByte154 = 0;
	anInt185 = -1;
	anInt162 = -1;
	anInt175 = -1;
	anInt166 = -1;
	anInt197 = -1;
	anInt173 = -1;
	stackIDs = null;
	stackAmounts = null;
	certID = -1;
	certTemplateID = -1;
	anInt167 = 128;
	anInt192 = 128;
	anInt191 = 128;
	anInt196 = 0;
	anInt184 = 0;
	team = 0;
	doggystyle = 0;
	doggystyle2 = 0;
}

public static ItemDef forID(int i) {
	for(int j = 0; j &lt; 10; j++)
		if(cache[j].id == i)
			return cache[j];
	cacheIndex = (cacheIndex + 1) % 10;
	ItemDef itemDef = cache[cacheIndex];
	stream.currentOffset = streamIndices[i];
	itemDef.id = i;
	itemDef.setDefaults();
	itemDef.readValues(stream);
	if(itemDef.certTemplateID != -1)
		itemDef.toNote();
	if(!isMembers &amp;&amp; itemDef.membersObject) {
		itemDef.name = "Members Object";
		itemDef.description = "Login to a members' server to use this object.".getBytes();
		itemDef.groundActions = null;
		itemDef.actions = null;
		itemDef.team = 0;
	}
</code></pre>
<p>if (i == 2438) {<br>
itemDef.actions = new String[5];<br>
itemDef.actions[0] = “Drink”;<br>
itemDef.name = “Overload (4)”;<br>
itemDef.description = “4 doses of overload potion.”.getBytes();<br>
itemDef.originalModelColors = new int[1];<br>
itemDef.modifiedModelColors = new int[1];<br>
itemDef.originalModelColors[0] = 61;<br>
itemDef.modifiedModelColors[0] = 0;<br>
itemDef.modelID = 2789;<br>
itemDef.modelZoom = 550;<br>
itemDef.modelRotation1 = 84;<br>
itemDef.modelRotation2 = 1996;<br>
itemDef.anInt204 = 0;<br>
itemDef.modelOffset1 = 0;<br>
itemDef.modelOffset2 = -1;<br>
}<br>
if (i == 151) {<br>
itemDef.actions = new String[5];<br>
itemDef.actions[0] = “Drink”;<br>
itemDef.name = “Overload (3)”;<br>
itemDef.description = “3 doses of overload potion.”.getBytes();<br>
itemDef.originalModelColors = new int[1];<br>
itemDef.modifiedModelColors = new int[1];<br>
itemDef.originalModelColors[0] = 61;<br>
itemDef.modifiedModelColors[0] = 0;<br>
itemDef.modelID = 2697;<br>
itemDef.modelZoom = 550;<br>
itemDef.modelRotation1 = 84;<br>
itemDef.modelRotation2 = 1996;<br>
itemDef.anInt204 = 0;<br>
itemDef.modelOffset1 = 0;<br>
itemDef.modelOffset2 = -1;<br>
}<br>
if (i == 155) {<br>
itemDef.actions = new String[5];<br>
itemDef.actions[0] = “Drink”;<br>
itemDef.name = “Overload (1)”;<br>
itemDef.description = “1 dose of overload potion.”.getBytes();<br>
itemDef.originalModelColors = new int[1];<br>
itemDef.modifiedModelColors = new int[1];<br>
itemDef.originalModelColors[0] = 61;<br>
itemDef.modifiedModelColors[0] = 0;<br>
itemDef.modelID = 2621;<br>
itemDef.modelZoom = 550;<br>
itemDef.modelRotation1 = 84;<br>
itemDef.modelRotation2 = 1996;<br>
itemDef.anInt204 = 0;<br>
itemDef.modelOffset1 = 0;<br>
itemDef.modelOffset2 = -1;<br>
}</p>
<pre><code>		switch (itemDef.id) {
			case 11722:
			itemDef.femaleEquip1 = itemDef.maleEquip1;
			itemDef.femaleEquip2 = itemDef.maleEquip2;
			break;




case 13399:
  itemDef.actions = new String[5];
  itemDef.actions[1] = "Wield";
  itemDef.femaleEquip1 = 56042;
  itemDef.modelZoom = 1400;
  itemDef.modelRotation2 = 337;
  itemDef.maleEquip1 = 56042;
  itemDef.modelID = 54520;
  itemDef.anInt164 = -1;
  
	itemDef.aByte205 = -12;
		itemDef.aByte154 = -12;
  itemDef.name = "@red@Primal maul";
  itemDef.description = "A maul used to claim life from those who don't deserve it. (Tier 11)".getBytes();
  break;

case 13022:
  itemDef.actions = new String[5];
  itemDef.actions[1] = "Wield";
  itemDef.modelID = 48512;
  itemDef.modelZoom = 1744;
  itemDef.modelRotation2 = 738;
  itemDef.modelRotation1 = 1985;
  itemDef.modelOffset1 = 0;
  itemDef.modelOffset2 = 0;
  itemDef.maleEquip1 = 48465;
  itemDef.femaleEquip1 = 48465;
  itemDef.name = "Hand cannon";
  itemDef.description = "A miniature dwarven cannon. ".getBytes();
  break;
</code></pre>
<p>case 15135:<br>
itemDef.actions = new String[5];<br>
itemDef.actions[1] = “Wear”;<br>
itemDef.femaleEquip1 = 55770;<br>
itemDef.modelOffset2 = 1;<br>
itemDef.modelZoom = 921;<br>
itemDef.modelRotation2 = 121;<br>
itemDef.maleEquip1 = 55770;<br>
itemDef.modelID = 54164;<br>
itemDef.name = “<span class="mention">@or1</span>@Primal full helm”;<br>
itemDef.description = “A full face helmet”.getBytes();<br>
break;<br>
case 15590:<br>
itemDef.actions = new String[5];<br>
itemDef.actions[1] = “Wear”;<br>
itemDef.femaleEquip1 = 56460;<br>
itemDef.modelOffset2 = 6;<br>
itemDef.modelZoom = 1720;<br>
itemDef.modelRotation2 = 0;<br>
itemDef.maleEquip1 = 55804;<br>
itemDef.modelID = 54068;<br>
itemDef.name = “<span class="mention">@or1</span>@Primal plateskirt”;<br>
itemDef.description = “Designer leg protection.”.getBytes();<br>
break;<br>
case 15592:<br>
itemDef.actions = new String[5];<br>
itemDef.actions[1] = “Wear”;<br>
itemDef.femaleEquip1 = 55770;<br>
itemDef.modelOffset2 = 1;<br>
itemDef.modelZoom = 921;<br>
itemDef.modelRotation2 = 121;<br>
itemDef.maleEquip1 = 55770;<br>
itemDef.modelID = 54164;<br>
itemDef.name = “<span class="mention">@or1</span>@Primal full helm”;<br>
itemDef.description = “A full face helmet”.getBytes();<br>
break;<br>
case 15593:<br>
itemDef.actions = new String[5];<br>
itemDef.actions[1] = “Wear”;<br>
itemDef.femaleEquip1 = 56515;<br>
itemDef.modelOffset2 = 10;<br>
itemDef.modelZoom = 1447;<br>
itemDef.modelRotation2 = 0;<br>
itemDef.modelRotation1 = 504;<br>
itemDef.maleEquip1 = 55851;<br>
itemDef.modelID = 54126;<br>
itemDef.name = “<span class="mention">@or1</span>@Primal platebody”;<br>
itemDef.description = “An epic platebody”.getBytes();<br>
break;<br>
case 15594:<br>
itemDef.actions = new String[5];<br>
itemDef.actions[1] = “Wear”;<br>
itemDef.femaleEquip1 = 55991;<br>
itemDef.modelOffset2 = 0;<br>
itemDef.modelZoom = 1776;<br>
itemDef.modelRotation2 = 0;<br>
itemDef.modelRotation1 = 344;<br>
itemDef.maleEquip1 = 55991;<br>
itemDef.modelID = 54253;<br>
itemDef.anInt188 = -1;<br>
itemDef.anInt164 = -1;<br>
itemDef.aByte154 = -10;<br>
itemDef.aByte205 = -10;<br>
itemDef.name = “<span class="mention">@or1</span>@Primal kiteshield”;<br>
itemDef.description = “A large metal shield.”.getBytes();<br>
break;<br>
case 15574:<br>
itemDef.actions = new String[5];<br>
itemDef.actions[1] = “Wield”;<br>
itemDef.femaleEquip1 = 56163;<br>
itemDef.modelOffset1 = 3;<br>
itemDef.modelOffset2 = 0;<br>
itemDef.modelZoom = 1650;<br>
itemDef.modelRotation2 = 1300;<br>
itemDef.modelRotation1 = 498;<br>
itemDef.maleEquip1 = 56100;</p>
<pre><code>	itemDef.aByte205 = -12;
		itemDef.aByte154 = -12;
  itemDef.modelID = 54437;
  itemDef.anInt164 = -1;
  itemDef.name = "@red@Primal longsword";
  itemDef.description = "A razor-sharp longsword. (Tier 11)".getBytes();
  break;
case 6149:
case 6150:
	itemDef.originalModelColors = new int[2];
	itemDef.modifiedModelColors = new int[2];
	itemDef.originalModelColors[0] = 10283;
	itemDef.originalModelColors[1] = 10270;
	itemDef.modifiedModelColors[0] = 8523;
	itemDef.modifiedModelColors[1] = 902;
	itemDef.name = "@or1@Spined gauntlets";
	itemDef.description = "When worn, imbues power of magic shortbow to make it stronger.".getBytes();
	break;
	case 15038:
		itemDef.actions = new String[5];
		itemDef.actions[1] = "Wield";
		itemDef.femaleEquip1 = 35087;//female
		itemDef.modelOffset1 = 3;
		itemDef.modelOffset2 = 0;
		itemDef.modelZoom = 1650;
		itemDef.modelRotation2 = 1300;
		itemDef.modelRotation1 = 498;
		itemDef.maleEquip1 = 35087;
		itemDef.modelID = 35086;
	itemDef.aByte205 = -12;
		itemDef.aByte154 = -12;
		itemDef.name = "@or1@Chaotic longsword";
		itemDef.anInt188 = -1;//female sleeve
		itemDef.anInt164 = -1;//male sleeve
		itemDef.description = "A dangerously-sharp longsword. (It doesnt look in good condition.)".getBytes();
	break;
	case 4227:
	itemDef.name = "@or1@Seren's shield";
	itemDef.doggystyle2 = 56311;
	break;
	case 4228:
	itemDef.name = "@or1@Artisan's shield";
	itemDef.doggystyle2 = 84300;
	break;
	case 10662:
	itemDef.name = "@or1@Headhunter's cape";
	itemDef.doggystyle2 = 16230;
	break;
	case 15039:
		itemDef.actions = new String[5];
		itemDef.actions[1] = "Wield";
		itemDef.femaleEquip1 = 35089;//female
		itemDef.modelOffset1 = 4;
		itemDef.modelOffset2 = 2;
		itemDef.modelZoom = 1360;
		itemDef.modelRotation2 = 354;
		itemDef.modelRotation1 = 498;
		itemDef.maleEquip1 = 35089;
		itemDef.modelID = 35088;
		
	itemDef.aByte205 = -12;
		itemDef.aByte154 = -12;
		itemDef.name = "@or1@Chaotic maul";
		itemDef.anInt188 = -1;//female sleeve
		itemDef.anInt164 = -1;//male sleeve
</code></pre>
<p>itemDef.aByte205 = -10;            itemDef.aByte154 = -10;<br>
itemDef.description = “A dangerously-blunt maul. (It doesnt look in good condition.)”.getBytes();<br>
break;<br>
case 15040:<br>
itemDef.actions = new String[5];<br>
itemDef.actions[1] = “Wield”;<br>
itemDef.femaleEquip1 = 35091;//female<br>
itemDef.modelOffset1 = 5;<br>
itemDef.modelOffset2 = 0;<br>
itemDef.modelZoom = 1711;<br>
itemDef.modelRotation2 = 365;<br>
itemDef.modelRotation1 = 350;<br>
itemDef.maleEquip1 = 35091;<br>
itemDef.modelID = 35090;</p>
<pre><code>	itemDef.aByte205 = -12;
		itemDef.aByte154 = -12;
		itemDef.name = "@or1@Chaotic staff";
		itemDef.aByte205 = -10;
		itemDef.aByte154 = -10;
		itemDef.anInt188 = -1;//female sleeve
		itemDef.anInt164 = -1;//male sleeve
		itemDef.description = "A staff used by the greatest of wizards. (It doesnt look in good condition.)".getBytes();
	break;

			
		
			
			
		}
	/* Hardcoded items start here */
	/**/
	return itemDef;
}

public void actionData(int a, String b) {
	actions = new String[5];
	actions[a] = b;
}

public void totalColors(int total) {
   originalModelColors = new int[total];	   
   modifiedModelColors = new int[total];
}

public void colors(int id, int original, int modified) {
	originalModelColors[id] = original;
	modifiedModelColors[id] = modified;
}
public void itemData(String n, String d) {
	name = n;
	description = d.getBytes();
}
public void models(int mID, int mE, int fE, int mE2, int fE2) {
	modelID = mID;
	maleEquip1 = mE;
	femaleEquip1 = fE;
	maleEquip2 = mE2;
	femaleEquip2 = fE2;
}
public void modelData(int mZ, int mR1, int mR2, int mO1, int mO2) {
	modelZoom = mZ;
	modelRotation1 = mR1;
	modelRotation2 = mR2;
	modelOffset1 = mO1;
	modelOffset2 = mO2;
}

public void toNote() {
	ItemDef itemDef = forID(certTemplateID);
	modelID = itemDef.modelID;
	modelZoom = itemDef.modelZoom;
	modelRotation1 = itemDef.modelRotation1;
	modelRotation2 = itemDef.modelRotation2;
	anInt204 = itemDef.anInt204;
	modelOffset1 = itemDef.modelOffset1;
	modelOffset2 = itemDef.modelOffset2;
	originalModelColors = itemDef.originalModelColors;
	modifiedModelColors = itemDef.modifiedModelColors;
	ItemDef itemDef_1 = forID(certID);
	name = itemDef_1.name;
	membersObject = itemDef_1.membersObject;
	value = itemDef_1.value;
	String s = "a";
	char c = itemDef_1.name.charAt(0);
	if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')
		s = "an";
	description = ("Swap this note at any bank for " + s + " " + itemDef_1.name + ".").getBytes();
	stackable = true;
}

public static Sprite getSprite(int i, int j, int k) {
	if(k == 0) {
		Sprite sprite = (Sprite) mruNodes1.insertFromCache(i);
		if(sprite != null &amp;&amp; sprite.anInt1445 != j &amp;&amp; sprite.anInt1445 != -1) {
			sprite.unlink();
			sprite = null;
		}
		if(sprite != null)
			return sprite;
	}
	ItemDef itemDef = forID(i);
	if(itemDef.stackIDs == null)
		j = -1;
	if(j &gt; 1) {
		int i1 = -1;
		for(int j1 = 0; j1 &lt; 10; j1++)
			if(j &gt;= itemDef.stackAmounts[j1] &amp;&amp; itemDef.stackAmounts[j1] != 0)
				i1 = itemDef.stackIDs[j1];
		if(i1 != -1)
			itemDef = forID(i1);
	}
	Model model = itemDef.method201(1);
	if(model == null)
		return null;
	Sprite sprite = null;
	if(itemDef.certTemplateID != -1) {
		sprite = getSprite(itemDef.certID, 10, -1);
		if(sprite == null)
			return null;
	}
	Sprite sprite2 = new Sprite(32, 32);
	int k1 = Texture.textureInt1;
	int l1 = Texture.textureInt2;
	int ai[] = Texture.anIntArray1472;
	int ai1[] = DrawingArea.pixels;
	int i2 = DrawingArea.width;
	int j2 = DrawingArea.height;
	int k2 = DrawingArea.topX;
	int l2 = DrawingArea.bottomX;
	int i3 = DrawingArea.topY;
	int j3 = DrawingArea.bottomY;
	Texture.aBoolean1464 = false;
	DrawingArea.initDrawingArea(32, 32, sprite2.myPixels);
	DrawingArea.drawPixels(32, 0, 0, 0, 32);
	Texture.method364();
	int k3 = itemDef.modelZoom;
	if(k == -1)
		k3 = (int)((double)k3 * 1.5D);
	if(k &gt; 0)
		k3 = (int)((double)k3 * 1.04D);
	int l3 = Texture.anIntArray1470[itemDef.modelRotation1] * k3 &gt;&gt; 16;
	int i4 = Texture.anIntArray1471[itemDef.modelRotation1] * k3 &gt;&gt; 16;
	model.method482(itemDef.modelRotation2, itemDef.anInt204, itemDef.modelRotation1, itemDef.modelOffset1, l3 + model.modelHeight / 2 + itemDef.modelOffset2, i4 + itemDef.modelOffset2);
	for(int i5 = 31; i5 &gt;= 0; i5--) {
		for(int j4 = 31; j4 &gt;= 0; j4--)
			if(sprite2.myPixels[i5 + j4 * 32] == 0)
				if(i5 &gt; 0 &amp;&amp; sprite2.myPixels[(i5 - 1) + j4 * 32] &gt; 1)
					sprite2.myPixels[i5 + j4 * 32] = 1;
				else if(j4 &gt; 0 &amp;&amp; sprite2.myPixels[i5 + (j4 - 1) * 32] &gt; 1)
					sprite2.myPixels[i5 + j4 * 32] = 1;
				else if(i5 &lt; 31 &amp;&amp; sprite2.myPixels[i5 + 1 + j4 * 32] &gt; 1)
					sprite2.myPixels[i5 + j4 * 32] = 1;
				else if(j4 &lt; 31 &amp;&amp; sprite2.myPixels[i5 + (j4 + 1) * 32] &gt; 1)
					sprite2.myPixels[i5 + j4 * 32] = 1;
	}
	if(k &gt; 0) {
		for(int j5 = 31; j5 &gt;= 0; j5--) {
			for(int k4 = 31; k4 &gt;= 0; k4--)
				if(sprite2.myPixels[j5 + k4 * 32] == 0)
					if(j5 &gt; 0 &amp;&amp; sprite2.myPixels[(j5 - 1) + k4 * 32] == 1)
						sprite2.myPixels[j5 + k4 * 32] = k;
					else if(k4 &gt; 0 &amp;&amp; sprite2.myPixels[j5 + (k4 - 1) * 32] == 1)
						sprite2.myPixels[j5 + k4 * 32] = k;
					else if(j5 &lt; 31 &amp;&amp; sprite2.myPixels[j5 + 1 + k4 * 32] == 1)
						sprite2.myPixels[j5 + k4 * 32] = k;
					else if(k4 &lt; 31 &amp;&amp; sprite2.myPixels[j5 + (k4 + 1) * 32] == 1)
						sprite2.myPixels[j5 + k4 * 32] = k;
		}
	} else if(k == 0) {
		for(int k5 = 31; k5 &gt;= 0; k5--) {
			for(int l4 = 31; l4 &gt;= 0; l4--)
				if(sprite2.myPixels[k5 + l4 * 32] == 0 &amp;&amp; k5 &gt; 0 &amp;&amp; l4 &gt; 0 &amp;&amp; sprite2.myPixels[(k5 - 1) + (l4 - 1) * 32] &gt; 0)
					sprite2.myPixels[k5 + l4 * 32] = 0x302020;
		}
	}
	if(itemDef.certTemplateID != -1) {
		int l5 = sprite.anInt1444;
		int j6 = sprite.anInt1445;
		sprite.anInt1444 = 32;
		sprite.anInt1445 = 32;
		sprite.drawSprite(0, 0);
		sprite.anInt1444 = l5;
		sprite.anInt1445 = j6;
	}
	if(k == 0)
		mruNodes1.removeFromCache(sprite2, i);
	DrawingArea.initDrawingArea(j2, i2, ai1);
	DrawingArea.setDrawingArea(j3, k2, l2, i3);
	Texture.textureInt1 = k1;
	Texture.textureInt2 = l1;
	Texture.anIntArray1472 = ai;
	Texture.aBoolean1464 = true;
	if(itemDef.stackable)
		sprite2.anInt1444 = 33;
	else
		sprite2.anInt1444 = 32;
	sprite2.anInt1445 = j;
	return sprite2;
}

public Model method201(int i) {
	if(stackIDs != null &amp;&amp; i &gt; 1) {
		int j = -1;
		for(int k = 0; k &lt; 10; k++)
			if(i &gt;= stackAmounts[k] &amp;&amp; stackAmounts[k] != 0)
				j = stackIDs[k];
		if(j != -1)
			return forID(j).method201(1);
	}
	Model model = (Model) mruNodes2.insertFromCache(id);
	if(model != null)
		return model;
	model = Model.method462(modelID);
	if(model == null)
		return null;
	if(anInt167 != 128 || anInt192 != 128 || anInt191 != 128)
		model.method478(anInt167, anInt191, anInt192);
	if (originalModelColors != null) {
		for (int l = 0; l &lt; originalModelColors.length; l++)
			model.method476(originalModelColors[l], modifiedModelColors[l]);

	}
			if (doggystyle &gt; 0)
	model.method1337(doggystyle);
	if (doggystyle2 != 0)
	model.method1338(doggystyle2);
	if (doggystyle3 != 0)
	model.method1339(doggystyle3);
	model.method479(64 + anInt196, 768 + anInt184, -50, -10, -50, true);
	model.aBoolean1659 = true;
	mruNodes2.removeFromCache(model, id);
	return model;
}

public Model method202(int i) {
	if(stackIDs != null &amp;&amp; i &gt; 1) {
		int j = -1;
		for(int k = 0; k &lt; 10; k++)
			if(i &gt;= stackAmounts[k] &amp;&amp; stackAmounts[k] != 0)
				j = stackIDs[k];
		if(j != -1)
			return forID(j).method202(1);
	}
	Model model = Model.method462(modelID);
	if(model == null)
		return null;
		if(anInt167 != 128 || anInt192 != 128 || anInt191 != 128)
		model.method478(anInt167, anInt191, anInt192);
	if (originalModelColors != null) {
		for (int l = 0; l &lt; originalModelColors.length; l++)
			model.method476(originalModelColors[l], modifiedModelColors[l]);

	}
			if (doggystyle &gt; 0)
	model.method1337(doggystyle);
	if (doggystyle2 != 0)
	model.method1338(doggystyle2);
	if (doggystyle3 != 0)
	model.method1339(doggystyle3);
	return model;
}

public void readValues(Stream stream) {
	do {
		int i = stream.readUnsignedByte();
		if(i == 0)
			return;
		if(i == 1)
			modelID = stream.readUnsignedWord();
		else if(i == 2)
			name = stream.readString();
		else if(i == 3)
			description = stream.readBytes();
		else if(i == 4)
			modelZoom = stream.readUnsignedWord();
		else if(i == 5)
			modelRotation1 = stream.readUnsignedWord();
		else if(i == 6)
			modelRotation2 = stream.readUnsignedWord();
		else if(i == 7) {
			modelOffset1 = stream.readUnsignedWord();
			if(modelOffset1 &gt; 32767)
				modelOffset1 -= 0x10000;
		} else if(i == 8) {
			modelOffset2 = stream.readUnsignedWord();
			if(modelOffset2 &gt; 32767)
				modelOffset2 -= 0x10000;
		} else if(i == 10)
			stream.readUnsignedWord();
		else if(i == 11)
			stackable = true;
		else if(i == 12)
			value = stream.readDWord();
		else if(i == 16)
			membersObject = true;
		else if(i == 23) {
			maleEquip1 = stream.readUnsignedWord();
			aByte205 = stream.readSignedByte();
		} else if(i == 24)
			maleEquip2 = stream.readUnsignedWord();
		else if(i == 25) {
			femaleEquip1 = stream.readUnsignedWord();
			aByte154 = stream.readSignedByte();
		} else if(i == 26)
			femaleEquip2 = stream.readUnsignedWord();
		else if(i &gt;= 30 &amp;&amp; i &lt; 35) {
			if(groundActions == null)
				groundActions = new String[5];
			groundActions[i - 30] = stream.readString();
			if(groundActions[i - 30].equalsIgnoreCase("hidden"))
				groundActions[i - 30] = null;
		} else if(i &gt;= 35 &amp;&amp; i &lt; 40) {
			if(actions == null)
				actions = new String[5];
			actions[i - 35] = stream.readString();
		} else if(i == 40) {
			int j = stream.readUnsignedByte();
			originalModelColors = new int[j];
			modifiedModelColors = new int[j];
			for(int k = 0; k &lt; j; k++) {
				originalModelColors[k] = stream.readUnsignedWord();
				modifiedModelColors[k] = stream.readUnsignedWord();
			}
		} else if(i == 78)
			anInt185 = stream.readUnsignedWord();
		else if(i == 79)
			anInt162 = stream.readUnsignedWord();
		else if(i == 90)
			anInt175 = stream.readUnsignedWord();
		else if(i == 91)
			anInt197 = stream.readUnsignedWord();
		else if(i == 92)
			anInt166 = stream.readUnsignedWord();
		else if(i == 93)
			anInt173 = stream.readUnsignedWord();
		else if(i == 95)
			anInt204 = stream.readUnsignedWord();
		else if(i == 97)
			certID = stream.readUnsignedWord();
		else if(i == 98)
			certTemplateID = stream.readUnsignedWord();
		else if(i &gt;= 100 &amp;&amp; i &lt; 110) {
			if(stackIDs == null) {
				stackIDs = new int[10];
				stackAmounts = new int[10];
			}
			stackIDs[i - 100] = stream.readUnsignedWord();
			stackAmounts[i - 100] = stream.readUnsignedWord();
		} else if(i == 110)
			anInt167 = stream.readUnsignedWord();
		else if(i == 111)
			anInt192 = stream.readUnsignedWord();
		else if(i == 112)
			anInt191 = stream.readUnsignedWord();
		else if(i == 113)
			anInt196 = stream.readSignedByte();
		else if(i == 114)
			anInt184 = stream.readSignedByte() * 5;
		else if(i == 115)
			team = stream.readUnsignedByte();
	} while(true);
}

public ItemDef() {
	id = -1;
}

public byte aByte154;
public int value;
public int[] modifiedModelColors;
public int id;
static MRUNodes mruNodes1 = new MRUNodes(100);
public static MRUNodes mruNodes2 = new MRUNodes(50);
public int[] originalModelColors;
public boolean membersObject;
public int anInt162;
public int certTemplateID;
public int femaleEquip2;
public int maleEquip1;
public int anInt166;
public int anInt167;
public String groundActions[];
public int modelOffset1;
public String name;
public static ItemDef[] cache;
public int anInt173;
public int modelID;
public int anInt175;
public boolean stackable;
public byte description[];
public int certID;
public static int cacheIndex;
public int modelZoom;
public static boolean isMembers = true;
public static Stream stream;
public int anInt184;
public int anInt185;
public int maleEquip2;
public String actions[];
public int modelRotation1;
public int anInt191;
public int anInt192;
public int[] stackIDs;
public int modelOffset2;
public static int[] streamIndices;
public int anInt196;
public int anInt197;
public int modelRotation2;
public int femaleEquip1;
public int[] stackAmounts;
public int team;
public static int totalItems;
public int anInt204;
public byte aByte205;
public byte aByteXFemale;
public byte aByteXMale;
public int anInt164;
public int anInt199;
public int anInt188;
</code></pre>
<p>}[/code]<br>
every client has 	<br>
itemDef.anInt165 = 13417;<br>
itemDef.anInt200 = 13417;</p>
<p>exept mine.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/317pi-client-help/553521/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/317pi-client-help/553521/1</link>
        <pubDate>Wed, 07 Oct 2015 13:14:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-553521-1</guid>
        <source url="https://forum.moparisthebest.com/t/317pi-client-help/553521.rss">317pi client help</source>
      </item>
  </channel>
</rss>
