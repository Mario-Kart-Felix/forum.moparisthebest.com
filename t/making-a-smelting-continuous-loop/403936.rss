<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Making a smelting continuous loop</title>
    <link>https://forum.moparisthebest.com/t/making-a-smelting-continuous-loop/403936</link>
    <description>Alright, so all dspk sources have a really messed up smelting system. And I had the idea of making smelting like cooking where it went into a continuous loop smelting all the ores in your inventory. The only problem is I&#39;m not sure what to convert in the cooking.java file. I was wondering if anyone has a continuous loop for smelting and wouldn&#39;t mind posting their method for me. 

Thanks, 
Yelser</description>
    
    <lastBuildDate>Wed, 13 Jul 2011 16:39:07 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/making-a-smelting-continuous-loop/403936.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Making a smelting continuous loop</title>
        <dc:creator><![CDATA[@imsuperman05 imsuperman05]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imsuperman05">@imsuperman05</a> wrote:</p>
          <blockquote>
              <p>Look at the cooking.java and learn it, then look at the smelting and try to convert it.</p>
<p>Look at these for a start:</p>
<p><code>	public void itemOnObject(int id) {
		for (int j = 0; j &lt; cookingItems.length; j++) {
			if (cookingItems[j][0] == id)
				cookFish(cookingItems[j][0],j);
		}
	}
	private void sendStatementTwo(String s) { // 1 line click here to continue chat box interface
		c.getPA().sendFrame126(s, 357);
		c.getPA().sendFrame126("Click here to continue", 358);
		c.getPA().sendFrame164(356);
	}
	public void cookFish(int id, int slot) {
		for (int j = 0; j &lt; 28; j++) {
			if (c.getItems().playerHasItem(id,1)) {
				if (c.playerLevel[c.playerCooking] &gt;= cookingItems[slot][3]) {
					if (Misc.random(c.playerLevel[c.playerCooking] + 3 - cookingItems[slot][3]) == 1) {
						c.sendMessage("You accidently burn the fish.");
						c.getItems().deleteItem(id, c.getItems().getItemSlot(id), 1);
						c.getItems().addItem(cookingItems[slot][2], 1);</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/making-a-smelting-continuous-loop/403936/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/making-a-smelting-continuous-loop/403936/2</link>
        <pubDate>Wed, 13 Jul 2011 16:39:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-403936-2</guid>
        <source url="https://forum.moparisthebest.com/t/making-a-smelting-continuous-loop/403936.rss">Making a smelting continuous loop</source>
      </item>
      <item>
        <title>Making a smelting continuous loop</title>
        <dc:creator><![CDATA[@yelser yelser]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/yelser">@yelser</a> wrote:</p>
          <blockquote>
              <p>Alright, so all dspk sources have a really messed up smelting system. And I had the idea of making smelting like cooking where it went into a continuous loop smelting all the ores in your inventory. The only problem is I’m not sure what to convert in the cooking.java file. I was wondering if anyone has a continuous loop for smelting and wouldn’t mind posting their method for me.</p>
<p>Thanks,<br>
Yelser</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/making-a-smelting-continuous-loop/403936/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/making-a-smelting-continuous-loop/403936/1</link>
        <pubDate>Wed, 13 Jul 2011 16:17:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-403936-1</guid>
        <source url="https://forum.moparisthebest.com/t/making-a-smelting-continuous-loop/403936.rss">Making a smelting continuous loop</source>
      </item>
  </channel>
</rss>
