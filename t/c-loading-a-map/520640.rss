<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>C# loading a map</title>
    <link>https://forum.moparisthebest.com/t/c-loading-a-map/520640</link>
    <description>I&#39;m developing a small 2D game in my free time with C#.Net.
Since I&#39;m kind of new to game-programming I&#39;m not sure at all whether what I wrote for loading a map is actually efficient..

If anyone finds the time to read through the code, I&#39;d be happy with their feedback!

This basicly gets the data out of a file and puts it into a class array.

The map&#39;s name is &quot;Home.map&quot; so you can load it by:
[code]cMap map = new cMap(&quot;Home.map&quot;);[/code]

The code for loading the map (ignore the collision, it&#39;s not finished yet):
[code=cMap.cs]using System;
using System.Collections.Generic;
using System.IO;
using System.Drawing;

namespace Game
{

    public class Tiles
    {
        public Point position { get; set; }
        public int type { get; set; }
        public bool collision { get; set; }
    }


    class cMap
    {

        public string NameOfMap;
        public List&lt;Tiles&gt; tiles = new List&lt;Tiles&gt;();

        public cMap (string NameOfMap)
        {
            this.NameOfMap = NameOfMap;
            Console.WriteLine(&quot;Loading map: &quot; + NameOfMap);
            getMapInfo(getFileData());
            Console.WriteLine(&quot;Finished loading the map!&quot;);
        }

        private string getFileData()
        {
            StreamReader sr = new StreamReader(&quot;Maps\\&quot; + NameOfMap);
            string data = sr.ReadToEnd();
            return data;
        }

        private void AddTile(Point position, int type, bool collision)
        {
            Tiles tile = new Tiles();
            tile.position = position;
            tile.type = type;
            tile.collision = collision;
            tiles.Add(tile);
        }

        private void getMapInfo(string data)
        {
            StringReader sr = new StringReader(data);
            int[] dimensions = Array.ConvertAll&lt;string, int&gt;(sr.ReadLine().Split(&#39;,&#39;), int.Parse);
            int amountoftiles = dimensions[0] * dimensions[1];
            int amountoftypes = Convert.ToInt32(sr.ReadLine());
            int tilenumber = 0;
            string[] rows = data.Split(&#39;\n&#39;);

            for (int row = 0; row &lt; dimensions[1]; row++)
            {
                for (int column = 0; column &lt; dimensions[0]; column++)
                {
                    Point position = new Point(column*30,row*30);
                    StringReader typereader = new StringReader(rows[row + 2 + amountoftypes]);
                    int type = Convert.ToInt32(typereader.ReadLine().Split(&#39;,&#39;)[column]);
                    AddTile(position, type, true);
                    tilenumber++;
                }
            }
            Console.WriteLine(&quot;A total of &quot; + amountoftiles + &quot; tiles has been loaded containing &quot; + amountoftypes +&quot; different types of tiles (&quot; + dimensions[0].ToString() + &quot;*&quot; + dimensions[1].ToString() + &quot;)&quot;);
        }

    }
}
[/code]

The Home.map file (once again, ignore the collision):
[code=Home.map]22,16
21
0=TRUE
1=TRUE
2=TRUE
3=TRUE
4=FALSE
5=FALSE
6=FALSE
7=FALSE
8=FALSE
9=FALSE
10=FALSE
11=FALSE
12=FALSE
13=FALSE
14=FALSE
15=FALSE
16=FALSE
17=FALSE
18=FALSE
19=FALSE
20=FALSE
8,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,9
7,0,0,3,3,1,2,1,0,3,0,1,2,3,0,0,1,2,0,3,3,5
7,1,1,2,0,0,1,3,2,2,0,3,2,1,3,2,2,0,3,1,2,5
7,1,3,2,0,2,3,1,2,0,3,3,2,0,2,0,2,1,3,2,1,5
7,1,1,2,0,0,1,3,2,2,0,3,2,1,3,2,2,0,3,1,2,5
7,0,0,3,3,1,2,1,0,2,0,1,2,3,0,0,1,2,0,3,3,5
7,1,2,3,1,2,2,3,2,1,12,13,14,3,1,0,2,1,0,3,1,5
7,0,0,3,3,1,2,1,3,2,15,16,17,3,0,0,1,2,0,3,3,5
7,1,1,2,0,0,1,1,2,2,18,19,20,1,3,2,2,0,3,1,2,5
7,1,3,2,0,2,3,1,2,0,3,0,2,0,2,0,2,1,3,2,1,5
7,1,1,2,0,0,1,3,2,2,0,3,2,1,3,2,2,0,3,1,2,5
7,0,0,3,3,1,2,3,0,2,0,1,2,3,0,0,1,2,0,3,3,5
7,1,2,3,1,2,2,3,2,1,0,0,2,3,1,0,2,1,0,3,1,5
7,0,0,3,3,1,2,1,0,3,0,1,2,3,0,0,1,2,0,3,3,5
7,1,1,2,0,0,1,3,2,2,0,3,2,1,3,2,2,0,3,1,2,5
11,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,10[/code]

Output:
[code]Loading map: Home.map
A total of 352 tiles has been loaded containing 21 different types of tiles (22*16)
Finished loading the map![/code]</description>
    
    <lastBuildDate>Thu, 06 Jun 2013 00:29:49 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/c-loading-a-map/520640.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>C# loading a map</title>
        <dc:creator><![CDATA[@RSCShadow RSCShadow]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rscshadow">@RSCShadow</a> wrote:</p>
          <blockquote>
              <p>[quote=“sppt, post:4, topic:520640”]Or you could just be lazy like me and make a tile editor that dumps to json[/quote]Superior solution.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-loading-a-map/520640/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-loading-a-map/520640/5</link>
        <pubDate>Thu, 06 Jun 2013 00:29:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-520640-5</guid>
        <source url="https://forum.moparisthebest.com/t/c-loading-a-map/520640.rss">C# loading a map</source>
      </item>
      <item>
        <title>C# loading a map</title>
        <dc:creator><![CDATA[@sppt sppt]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sppt">@sppt</a> wrote:</p>
          <blockquote>
              <p>Or you could just be lazy like me and make a tile editor that dumps to json</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-loading-a-map/520640/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-loading-a-map/520640/4</link>
        <pubDate>Thu, 06 Jun 2013 00:14:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-520640-4</guid>
        <source url="https://forum.moparisthebest.com/t/c-loading-a-map/520640.rss">C# loading a map</source>
      </item>
      <item>
        <title>C# loading a map</title>
        <dc:creator><![CDATA[@Lin Lin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lin">@Lin</a> wrote:</p>
          <blockquote>
              <p>Oh… Oh my… That is a painful method to load maps <img src="https://forum.moparisthebest.com/images/emoji/twitter/frowning.png?v=5" title=":frowning:" class="emoji" alt=":frowning:">  As someone who has built over 10 gameboy, gameboy color, and gameboy advance game map viewers, not to mention created several of my own 2D and 3D games that all rely on a tile map, I feel I am fully qualified to answer your question! [size=1pt]Please note that was supposed to be a joke and not actually be trying to brag.[/size]</p>
<p>But seriously, do it the ‘binary’ way. Get a hex editor like <a href="http://www.softcircuits.com/cygnus/fe/" rel="nofollow noopener">http://www.softcircuits.com/cygnus/fe/</a> and create a new file, entering all of your tiles as bytes. What you could do is since every tile is under 16, use the upper nybble as the collision (or any of the higher 4 bits I guess) to indicate the collision and the lower nybble for the tile index. I would try sticking to using the 7th bit for collisions so you can go above 16 for a tile, leaving you with 128 possible ones while using the same amount of space. Of course, you’ll need a header as well, so you can put the size and name at the very beginning as well.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-loading-a-map/520640/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-loading-a-map/520640/3</link>
        <pubDate>Tue, 04 Jun 2013 20:57:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-520640-3</guid>
        <source url="https://forum.moparisthebest.com/t/c-loading-a-map/520640.rss">C# loading a map</source>
      </item>
      <item>
        <title>C# loading a map</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>[quote=“VbCoder, post:1, topic:520640”]I’m developing a small 2D game in my free time with[/quote]Join the club :o</p>
<p>Anyways, why are you storing everything as text? A character is a byte, so if all of your tileID’s are &lt;10, you’d be using around the same amount of space, but once you get into two digits you are using twice the space. The only reason you’d use a format at all like yours would be if you wanted it to be easily readable and easy to modify by opening the document. If you have a map editor or generate the maps through code, your format is very very bad.</p>
<p>You can read my thread about 2D maps I made a few days ago, there is a lot of insight in there from a few people.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-loading-a-map/520640/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-loading-a-map/520640/2</link>
        <pubDate>Mon, 03 Jun 2013 19:31:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-520640-2</guid>
        <source url="https://forum.moparisthebest.com/t/c-loading-a-map/520640.rss">C# loading a map</source>
      </item>
      <item>
        <title>C# loading a map</title>
        <dc:creator><![CDATA[@VbCoder VbCoder]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/vbcoder">@VbCoder</a> wrote:</p>
          <blockquote>
              <p>I’m developing a small 2D game in my free time with C#.Net.<br>
Since I’m kind of new to game-programming I’m not sure at all whether what I wrote for loading a map is actually efficient…</p>
<p>If anyone finds the time to read through the code, I’d be happy with their feedback!</p>
<p>This basicly gets the data out of a file and puts it into a class array.</p>
<p>The map’s name is “Home.map” so you can load it by:</p>
<pre><code class="lang-auto"></code></pre>
<p>The code for loading the map (ignore the collision, it’s not finished yet):</p>
<p>[code=cMap.cs]using System;<br>
using System.Collections.Generic;<br>
using <a href="http://System.IO" rel="nofollow noopener">System.IO</a>;<br>
using System.Drawing;</p>
<p>namespace Game<br>
{</p>
<pre><code>public class Tiles
{
    public Point position { get; set; }
    public int type { get; set; }
    public bool collision { get; set; }
}


class cMap
{

    public string NameOfMap;
    public List&lt;Tiles&gt; tiles = new List&lt;Tiles&gt;();

    public cMap (string NameOfMap)
    {
        this.NameOfMap = NameOfMap;
        Console.WriteLine("Loading map: " + NameOfMap);
        getMapInfo(getFileData());
        Console.WriteLine("Finished loading the map!");
    }

    private string getFileData()
    {
        StreamReader sr = new StreamReader("Maps\\" + NameOfMap);
        string data = sr.ReadToEnd();
        return data;
    }

    private void AddTile(Point position, int type, bool collision)
    {
        Tiles tile = new Tiles();
        tile.position = position;
        tile.type = type;
        tile.collision = collision;
        tiles.Add(tile);
    }

    private void getMapInfo(string data)
    {
        StringReader sr = new StringReader(data);
        int[] dimensions = Array.ConvertAll&lt;string, int&gt;(sr.ReadLine().Split(','), int.Parse);
        int amountoftiles = dimensions[0] * dimensions[1];
        int amountoftypes = Convert.ToInt32(sr.ReadLine());
        int tilenumber = 0;
        string[] rows = data.Split('\n');

        for (int row = 0; row &lt; dimensions[1]; row++)
        {
            for (int column = 0; column &lt; dimensions[0]; column++)
            {
                Point position = new Point(column*30,row*30);
                StringReader typereader = new StringReader(rows[row + 2 + amountoftypes]);
                int type = Convert.ToInt32(typereader.ReadLine().Split(',')[column]);
                AddTile(position, type, true);
                tilenumber++;
            }
        }
        Console.WriteLine("A total of " + amountoftiles + " tiles has been loaded containing " + amountoftypes +" different types of tiles (" + dimensions[0].ToString() + "*" + dimensions[1].ToString() + ")");
    }

}
</code></pre>
<p>}<br>
[/code]</p>
<p>The Home.map file (once again, ignore the collision):</p>
<p><code>22,16
21
0=TRUE
1=TRUE
2=TRUE
3=TRUE
4=FALSE
5=FALSE
6=FALSE
7=FALSE
8=FALSE
9=FALSE
10=FALSE
11=FALSE
12=FALSE
13=FALSE
14=FALSE
15=FALSE
16=FALSE
17=FALSE
18=FALSE
19=FALSE
20=FALSE
8,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,9
7,0,0,3,3,1,2,1,0,3,0,1,2,3,0,0,1,2,0,3,3,5
7,1,1,2,0,0,1,3,2,2,0,3,2,1,3,2,2,0,3,1,2,5
7,1,3,2,0,2,3,1,2,0,3,3,2,0,2,0,2,1,3,2,1,5
7,1,1,2,0,0,1,3,2,2,0,3,2,1,3,2,2,0,3,1,2,5
7,0,0,3,3,1,2,1,0,2,0,1,2,3,0,0,1,2,0,3,3,5
7,1,2,3,1,2,2,3,2,1,12,13,14,3,1,0,2,1,0,3,1,5
7,0,0,3,3,1,2,1,3,2,15,16,17,3,0,0,1,2,0,3,3,5
7,1,1,2,0,0,1,1,2,2,18,19,20,1,3,2,2,0,3,1,2,5
7,1,3,2,0,2,3,1,2,0,3,0,2,0,2,0,2,1,3,2,1,5
7,1,1,2,0,0,1,3,2,2,0,3,2,1,3,2,2,0,3,1,2,5
7,0,0,3,3,1,2,3,0,2,0,1,2,3,0,0,1,2,0,3,3,5
7,1,2,3,1,2,2,3,2,1,0,0,2,3,1,0,2,1,0,3,1,5
7,0,0,3,3,1,2,1,0,3,0,1,2,3,0,0,1,2,0,3,3,5
7,1,1,2,0,0,1,3,2,2,0,3,2,1,3,2,2,0,3,1,2,5
11,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,10</code></p>
<p>Output:</p>
<p><code>Loading map: Home.map
A total of 352 tiles has been loaded containing 21 different types of tiles (22*16)
Finished loading the map!</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-loading-a-map/520640/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-loading-a-map/520640/1</link>
        <pubDate>Mon, 03 Jun 2013 18:55:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-520640-1</guid>
        <source url="https://forum.moparisthebest.com/t/c-loading-a-map/520640.rss">C# loading a map</source>
      </item>
  </channel>
</rss>
