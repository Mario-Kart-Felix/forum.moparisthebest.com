<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[PI] Perfect Teleporting And Tab Teleporting. [PI]</title>
    <link>https://forum.moparisthebest.com/t/pi-perfect-teleporting-and-tab-teleporting-pi/392101</link>
    <description>The teleporting PI has is horrible, so I thought I remake it. Credit to Sigex also.

Teleporting tab is missing the gfx that breaks the tab which I couldn&#39;t find.

You need cycle manager

If you know how to create new directories:

You need this class
[code]
package server.model.players.content.teleporting;

import server.model.players.*;
import server.*;
import server.util.*;
import server.event.CycleEventHandler;
import server.event.CycleEvent;
import server.event.CycleEventContainer;

public class Requirements {

	public static boolean proceedTeleporting(Client c) {
		if(System.currentTimeMillis() - c.teleBlockDelay &lt; c.teleBlockLength) {
			c.sendMessage(&quot;You are teleblocked and can&#39;t teleport.&quot;);
			return false;
		}
		if(c.inWild() &amp;&amp; c.wildLevel &gt; Config.NO_TELEPORT_WILD_LEVEL) {
			c.sendMessage(&quot;You can&#39;t teleport above level &quot;+Config.NO_TELEPORT_WILD_LEVEL+&quot; in the wilderness.&quot;);
			return false;
		}
		if(c.isDead || c.respawnTimer != -6) {
			return false;
		}
		if(c.teleporting || c.teleportDelay != -1){
			return false;
		}
		if(c.teleporting) {
			return false;
		}
		if (c.playerIndex &gt; 0 || c.npcIndex &gt; 0) {
			c.getCombat().resetPlayerAttack();
		}
		c.teleporting = true;
		c.getPA().removeAllWindows();
		c.npcIndex = 0;
		c.playerIndex = 0;
		c.faceUpdate(0);
		return true;
	}

	public static void stopPlayerEmote(Client c){
		c.playerSEW = 819;
		c.playerSER = 824;
		c.getPA().requestUpdates();
		c.outStream.createFrame(1);
		for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
			if(Server.playerHandler.players[i] != null) {
				Client person = (Client)Server.playerHandler.players[i];
				if(person != null) {
					Client cc = (Client)person;
					person.outStream.createFrame(1);
				}
			}
		}
	}

	public static void teleport(Client c) {
		if(c.ancientstele){
			c.teleportDelay = 4;
			c.startAnimation(1979);
			c.gfx0(392);
		} else if(!c.ancientstele) {
			c.teleportDelay = 3;
			c.startAnimation(714);
			c.gfx100(111);
		}
	}
}[/code]

Tabbing.
[code]
package server.model.players.content.teleporting;

import server.model.players.*;
import server.util.*;
import server.event.CycleEventHandler;
import server.event.CycleEvent;
import server.event.CycleEventContainer;

public class TeleportingTab extends Requirements {

	public static void teleportTab(final Client c, int teleX, int teleY, int height, int itemId, int slot) {
		if(System.currentTimeMillis() - c.lastAction &gt; 4000){
			if(!proceedTeleporting(c)) {
				return;
			}
			c.lastAction = System.currentTimeMillis();
			c.teleToX = teleX + Misc.random(1);
			c.teleToY = teleY - Misc.random(1);
			c.newHeight = height;
			c.startAnimation(4069);
			c.getItems().deleteItem(itemId, slot, 1);
			CycleEventHandler.getSingleton().addEvent(c, new CycleEvent() {
				@Override
				public void execute(CycleEventContainer container) {
					c.startAnimation(4071);
					c.gfx0(678);
					container.stop();
				}
				@Override
				public void stop() {

				}
			}, 2);

			CycleEventHandler.getSingleton().addEvent(c, new CycleEvent() {
				@Override
				public void execute(CycleEventContainer container) {
					c.teleportToX = c.teleToX;
					c.teleportToY = c.teleToY;
					c.heightLevel = c.newHeight;
					c.teleporting = false;
					stopPlayerEmote(c);
					container.stop();
				}
				@Override
				public void stop() {

				}
			}, 4);
		}
	}
}[/code]

Teleporting (Modern and Ancient)
[code]
package server.model.players.content.teleporting;

import server.model.players.*;
import server.*;
import server.util.*;
import server.event.CycleEventHandler;
import server.event.CycleEvent;
import server.event.CycleEventContainer;

public class Teleporting extends Requirements {

	public static void startTeleport(final Client c, int teleX,int teleY,int height,String type){
		if(System.currentTimeMillis() - c.lastAction &gt; 4000){
			if(!proceedTeleporting(c)) {
				return;
			}
			c.lastAction = System.currentTimeMillis();
			c.teleToX = teleX + Misc.random(1);
			c.teleToY = teleY - Misc.random(1);
			c.newHeight = height;
			if(type == &quot;ancient&quot;) {
				c.ancientstele = true;
			} else {
				c.ancientstele = false;
			}
			teleport(c);
			CycleEventHandler.getSingleton().addEvent(c, new CycleEvent() {
				@Override
				public void execute(CycleEventContainer container) {
					c.teleportToX = c.teleToX;
					c.teleportToY = c.teleToY;
					c.heightLevel = c.newHeight;
					c.teleporting = false;
					c.teleportDelay = -1;
					stopPlayerEmote(c);
					container.stop();
				}
				@Override
				public void stop() {

				}
			}, c.teleportDelay);
		}
	}
}[/code]

ClickingButtons
Don&#39;t forget imports, if you are using correct locations,
[code]
			case 4140: 	Teleporting.startTeleport(c, 3216,3424,0,&quot;modern&quot;); 		break;	//Varrock
			case 4143: 	Teleporting.startTeleport(c, 3221,3217,0,&quot;modern&quot;); 		break;	//Lumbridge
			case 4146: 	Teleporting.startTeleport(c, 2964,3380,0,&quot;modern&quot;); 		break;	//Falador
			case 4150: 	Teleporting.startTeleport(c, 2756,3479,0,&quot;modern&quot;); 		break;	//Camelot
			case 6004: 	Teleporting.startTeleport(c, 2661,3306,0,&quot;modern&quot;); 		break;	//Ardougne
			case 6005: 	Teleporting.startTeleport(c, 2549,3113,0,&quot;modern&quot;); 		break;	//Watchtower
			case 29031: 	Teleporting.startTeleport(c, 3285,3345,0,&quot;modern&quot;); 		break;	//Trollhelm
			case 72038: 	Teleporting.startTeleport(c, 2796,2799,1,&quot;modern&quot;); 		break;	//Ape Atoll
			case 50235: 	Teleporting.startTeleport(c, 3098,9884,0,&quot;ancient&quot;); 	break;	//Paddwwa
			case 50245: 	Teleporting.startTeleport(c, 3322,3337,0,&quot;ancient&quot;); 	break;	//Senntisten
			case 50253: 	Teleporting.startTeleport(c, 3491,3471,0,&quot;ancient&quot;); 	break;	//Kharyrll
			case 51005: 	Teleporting.startTeleport(c, 3008,3477,0,&quot;ancient&quot;); 	break;	//Lassar
			case 51013: 	Teleporting.startTeleport(c, 2963,3696,0,&quot;ancient&quot;); 	break;	//Dareeyak
			case 51023: 	Teleporting.startTeleport(c, 3156,3666,0,&quot;ancient&quot;); 	break;	//Carrallangar
			case 51031: 	Teleporting.startTeleport(c, 3288,3886,0,&quot;ancient&quot;); 	break;	//Annakarl
			case 51039: 	Teleporting.startTeleport(c, 2976,3874,0,&quot;ancient&quot;); 	break;	//Ghorrock[/code]

ClickItem
[code]
			case 8007: TeleportingTab.teleportTab(c,3216,3424,0,itemId,itemSlot); break;
			case 8008: TeleportingTab.teleportTab(c,3221,3217,0,itemId,itemSlot); break;
			case 8009: TeleportingTab.teleportTab(c,2964,3380,0,itemId,itemSlot); break;
			case 8010: TeleportingTab.teleportTab(c,2756,3479,0,itemId,itemSlot); break;
			case 8011: TeleportingTab.teleportTab(c,2661,3306,0,itemId,itemSlot); break;
			case 8012: TeleportingTab.teleportTab(c,2549,3113,0,itemId,itemSlot); break;[/code]

If you don&#39;t know then grab the methods from the class and replace/add them to class PA.

Variables required
[code]
	public boolean ancientstele = false;
	public boolean teleporting = false;
	public int teleportDelay = -1;
	public int teleToX = 0;
	public int teleToY = 0;
	public int newHeight = 0;[/code]

You don&#39;t actually need the variables but with the current code you do.</description>
    
    <lastBuildDate>Fri, 22 Apr 2011 21:24:53 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/pi-perfect-teleporting-and-tab-teleporting-pi/392101.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[PI] Perfect Teleporting And Tab Teleporting. [PI]</title>
        <dc:creator><![CDATA[@deathschaos9 DeathsChaos9]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/deathschaos9">@deathschaos9</a> wrote:</p>
          <blockquote>
              <p>This is more of a snippet, you can post it in the snippets topic.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-perfect-teleporting-and-tab-teleporting-pi/392101/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-perfect-teleporting-and-tab-teleporting-pi/392101/2</link>
        <pubDate>Fri, 22 Apr 2011 21:24:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-392101-2</guid>
        <source url="https://forum.moparisthebest.com/t/pi-perfect-teleporting-and-tab-teleporting-pi/392101.rss">[PI] Perfect Teleporting And Tab Teleporting. [PI]</source>
      </item>
      <item>
        <title>[PI] Perfect Teleporting And Tab Teleporting. [PI]</title>
        <dc:creator><![CDATA[@pot_up_pls pot up pls]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pot_up_pls">@pot_up_pls</a> wrote:</p>
          <blockquote>
              <p>The teleporting PI has is horrible, so I thought I remake it. Credit to Sigex also.</p>
<p>Teleporting tab is missing the gfx that breaks the tab which I couldnâ€™t find.</p>
<p>You need cycle manager</p>
<p>If you know how to create new directories:</p>
<p>You need this class</p>
<p>[code]<br>
package server.model.players.content.teleporting;</p>
<p>import server.model.players.<em>;<br>
import server.</em>;<br>
import server.util.*;<br>
import server.event.CycleEventHandler;<br>
import server.event.CycleEvent;<br>
import server.event.CycleEventContainer;</p>
<p>public class Requirements {</p>
<pre><code>public static boolean proceedTeleporting(Client c) {
	if(System.currentTimeMillis() - c.teleBlockDelay &lt; c.teleBlockLength) {
		c.sendMessage("You are teleblocked and can't teleport.");
		return false;
	}
	if(c.inWild() &amp;&amp; c.wildLevel &gt; Config.NO_TELEPORT_WILD_LEVEL) {
		c.sendMessage("You can't teleport above level "+Config.NO_TELEPORT_WILD_LEVEL+" in the wilderness.");
		return false;
	}
	if(c.isDead || c.respawnTimer != -6) {
		return false;
	}
	if(c.teleporting || c.teleportDelay != -1){
		return false;
	}
	if(c.teleporting) {
		return false;
	}
	if (c.playerIndex &gt; 0 || c.npcIndex &gt; 0) {
		c.getCombat().resetPlayerAttack();
	}
	c.teleporting = true;
	c.getPA().removeAllWindows();
	c.npcIndex = 0;
	c.playerIndex = 0;
	c.faceUpdate(0);
	return true;
}

public static void stopPlayerEmote(Client c){
	c.playerSEW = 819;
	c.playerSER = 824;
	c.getPA().requestUpdates();
	c.outStream.createFrame(1);
	for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
		if(Server.playerHandler.players[i] != null) {
			Client person = (Client)Server.playerHandler.players[i];
			if(person != null) {
				Client cc = (Client)person;
				person.outStream.createFrame(1);
			}
		}
	}
}

public static void teleport(Client c) {
	if(c.ancientstele){
		c.teleportDelay = 4;
		c.startAnimation(1979);
		c.gfx0(392);
	} else if(!c.ancientstele) {
		c.teleportDelay = 3;
		c.startAnimation(714);
		c.gfx100(111);
	}
}
</code></pre>
<p>}[/code]</p>
<p>Tabbing.</p>
<p>[code]<br>
package server.model.players.content.teleporting;</p>
<p>import server.model.players.<em>;<br>
import server.util.</em>;<br>
import server.event.CycleEventHandler;<br>
import server.event.CycleEvent;<br>
import server.event.CycleEventContainer;</p>
<p>public class TeleportingTab extends Requirements {</p>
<pre><code>public static void teleportTab(final Client c, int teleX, int teleY, int height, int itemId, int slot) {
	if(System.currentTimeMillis() - c.lastAction &gt; 4000){
		if(!proceedTeleporting(c)) {
			return;
		}
		c.lastAction = System.currentTimeMillis();
		c.teleToX = teleX + Misc.random(1);
		c.teleToY = teleY - Misc.random(1);
		c.newHeight = height;
		c.startAnimation(4069);
		c.getItems().deleteItem(itemId, slot, 1);
		CycleEventHandler.getSingleton().addEvent(c, new CycleEvent() {
			@Override
			public void execute(CycleEventContainer container) {
				c.startAnimation(4071);
				c.gfx0(678);
				container.stop();
			}
			@Override
			public void stop() {

			}
		}, 2);

		CycleEventHandler.getSingleton().addEvent(c, new CycleEvent() {
			@Override
			public void execute(CycleEventContainer container) {
				c.teleportToX = c.teleToX;
				c.teleportToY = c.teleToY;
				c.heightLevel = c.newHeight;
				c.teleporting = false;
				stopPlayerEmote(c);
				container.stop();
			}
			@Override
			public void stop() {

			}
		}, 4);
	}
}
</code></pre>
<p>}[/code]</p>
<p>Teleporting (Modern and Ancient)</p>
<p>[code]<br>
package server.model.players.content.teleporting;</p>
<p>import server.model.players.<em>;<br>
import server.</em>;<br>
import server.util.*;<br>
import server.event.CycleEventHandler;<br>
import server.event.CycleEvent;<br>
import server.event.CycleEventContainer;</p>
<p>public class Teleporting extends Requirements {</p>
<pre><code>public static void startTeleport(final Client c, int teleX,int teleY,int height,String type){
	if(System.currentTimeMillis() - c.lastAction &gt; 4000){
		if(!proceedTeleporting(c)) {
			return;
		}
		c.lastAction = System.currentTimeMillis();
		c.teleToX = teleX + Misc.random(1);
		c.teleToY = teleY - Misc.random(1);
		c.newHeight = height;
		if(type == "ancient") {
			c.ancientstele = true;
		} else {
			c.ancientstele = false;
		}
		teleport(c);
		CycleEventHandler.getSingleton().addEvent(c, new CycleEvent() {
			@Override
			public void execute(CycleEventContainer container) {
				c.teleportToX = c.teleToX;
				c.teleportToY = c.teleToY;
				c.heightLevel = c.newHeight;
				c.teleporting = false;
				c.teleportDelay = -1;
				stopPlayerEmote(c);
				container.stop();
			}
			@Override
			public void stop() {

			}
		}, c.teleportDelay);
	}
}
</code></pre>
<p>}[/code]</p>
<p>ClickingButtons<br>
Donâ€™t forget imports, if you are using correct locations,</p>
<p><code>
			case 4140: 	Teleporting.startTeleport(c, 3216,3424,0,"modern"); 		break;	//Varrock
			case 4143: 	Teleporting.startTeleport(c, 3221,3217,0,"modern"); 		break;	//Lumbridge
			case 4146: 	Teleporting.startTeleport(c, 2964,3380,0,"modern"); 		break;	//Falador
			case 4150: 	Teleporting.startTeleport(c, 2756,3479,0,"modern"); 		break;	//Camelot
			case 6004: 	Teleporting.startTeleport(c, 2661,3306,0,"modern"); 		break;	//Ardougne
			case 6005: 	Teleporting.startTeleport(c, 2549,3113,0,"modern"); 		break;	//Watchtower
			case 29031: 	Teleporting.startTeleport(c, 3285,3345,0,"modern"); 		break;	//Trollhelm
			case 72038: 	Teleporting.startTeleport(c, 2796,2799,1,"modern"); 		break;	//Ape Atoll
			case 50235: 	Teleporting.startTeleport(c, 3098,9884,0,"ancient"); 	break;	//Paddwwa
			case 50245: 	Teleporting.startTeleport(c, 3322,3337,0,"ancient"); 	break;	//Senntisten
			case 50253: 	Teleporting.startTeleport(c, 3491,3471,0,"ancient"); 	break;	//Kharyrll
			case 51005: 	Teleporting.startTeleport(c, 3008,3477,0,"ancient"); 	break;	//Lassar
			case 51013: 	Teleporting.startTeleport(c, 2963,3696,0,"ancient"); 	break;	//Dareeyak
			case 51023: 	Teleporting.startTeleport(c, 3156,3666,0,"ancient"); 	break;	//Carrallangar
			case 51031: 	Teleporting.startTeleport(c, 3288,3886,0,"ancient"); 	break;	//Annakarl
			case 51039: 	Teleporting.startTeleport(c, 2976,3874,0,"ancient"); 	break;	//Ghorrock</code></p>
<p>ClickItem</p>
<p><code>
			case 8007: TeleportingTab.teleportTab(c,3216,3424,0,itemId,itemSlot); break;
			case 8008: TeleportingTab.teleportTab(c,3221,3217,0,itemId,itemSlot); break;
			case 8009: TeleportingTab.teleportTab(c,2964,3380,0,itemId,itemSlot); break;
			case 8010: TeleportingTab.teleportTab(c,2756,3479,0,itemId,itemSlot); break;
			case 8011: TeleportingTab.teleportTab(c,2661,3306,0,itemId,itemSlot); break;
			case 8012: TeleportingTab.teleportTab(c,2549,3113,0,itemId,itemSlot); break;</code></p>
<p>If you donâ€™t know then grab the methods from the class and replace/add them to class PA.</p>
<p>Variables required</p>
<p><code>
	public boolean ancientstele = false;
	public boolean teleporting = false;
	public int teleportDelay = -1;
	public int teleToX = 0;
	public int teleToY = 0;
	public int newHeight = 0;</code></p>
<p>You donâ€™t actually need the variables but with the current code you do.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-perfect-teleporting-and-tab-teleporting-pi/392101/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-perfect-teleporting-and-tab-teleporting-pi/392101/1</link>
        <pubDate>Fri, 22 Apr 2011 20:57:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-392101-1</guid>
        <source url="https://forum.moparisthebest.com/t/pi-perfect-teleporting-and-tab-teleporting-pi/392101.rss">[PI] Perfect Teleporting And Tab Teleporting. [PI]</source>
      </item>
  </channel>
</rss>
