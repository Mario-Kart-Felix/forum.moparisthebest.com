<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>The new &quot;signlink&quot; objects</title>
    <link>https://forum.moparisthebest.com/t/the-new-signlink-objects/7855</link>
    <description>Upon attempting to run the current client as an Applet in a frame, I was faced with it redownloading the entire cache every runtime.
This is because JageX now obfuscate and include their signlink class in their deobs.

In the client superclass, we have:
[code]if(nd.c == null)
                    ub.i = nd.c = new hc(false, this, InetAddress.getByName(getCodeBase().getHost()), arg1, null, 0);[/code]
Which we can find with:
[code]if\(\w+.\w+ == null\)\r\n+\s+(\w+.\w+) = (\w+.\w+) = new (\w+)\(.*\);[/code]
Groups: (object1, object2, signlinkClass)

Now, the constructor args are:
[code]false, this, InetAddress.getByName(getCodeBase().getHost()), arg1, null, 0
// bool, not sure? Always false?
// InetAddress, codebase
// int - arg1, Make this 32, I do believe it&#39;s the 32 in .filestore_32
// nulltype, not sure
// int, not sure[/code]

Mind the 
 in the pattern, it may cause unix users problems.
The constructor signature remains exactly the same, I am positive, since I believe JageX&#39;s static loader creates an instance of this class?

Upon setting the 2 objects, the client should no longer load its&#39; datafiles upon runtime as an Applet, and you have an undetectable original client possibly, I haven&#39;t been banned as of yet.

I haven&#39;t tested this pattern on newer deobs, but try it if you want the BCEL version:
[code]invokespecial dup (putstatic) (putstatic) getstatic[/code]
Groups (firstSignlinkObject, secondSignlinkObject, determine class from field type, easiest way)
In the client superclass. I really don&#39;t see how it can break/change, but, can&#39;t be too sure.

[b]If this tutorial was of no use to you, please do not post. Please note I&#39;m NOT using a deob for any of this, so I&#39;m not sure how it will come out in the deob.[/b][br][size=1]Posted at: August 04, 2006, 06:39:53 AM[/size][hr]Here, this is the (ugly) code I use to initialise the signlink objects:
[code]            Field f1 = propertyVarToField((String)props.get(&quot;firstRunnerInstance&quot;));
            Field f2 = propertyVarToField((String)props.get(&quot;secondRunnerInstance&quot;));
            if(!f1.getType().equals(f1.getType()))
                throw new RuntimeException(&quot;Mismatch in runner class!&quot;);
            Class runnerClass = f1.getType();
            Class[] types = {Boolean.
                            TYPE, Applet.class, InetAddress.class, Integer.TYPE,
                            String.class,
                            Integer.TYPE};
            Object[] args = {
                            true, clientApplet,
                            InetAddress.getByName(&quot;&quot; + server +
                                                  &quot;.runescape.com&quot;), 32,
                            &quot;runescape&quot;, 12
            };
            Constructor ct = runnerClass.getConstructor(types);
            Object runnerObject = ct.newInstance(args);
            Reflector.setStaticValue(f1, runnerObject);
            Reflector.setStaticValue(f2, runnerObject);[/code]
Where &quot;firstRunnerInstance&quot; and &quot;secondRunnerInstance&quot; are in the format:
[code]fieldType declaringClass.fieldName[/code]
So:
[code]hc ub.i
hc nd.c[/code]</description>
    
    <lastBuildDate>Fri, 04 Aug 2006 23:00:50 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/the-new-signlink-objects/7855.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>The new &quot;signlink&quot; objects</title>
        <dc:creator><![CDATA[@Pwnd Pwnd]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pwnd">@Pwnd</a> wrote:</p>
          <blockquote>
              <p>Definately.  You’re helping me out a lot anyways <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=9" title=":smiley:" class="emoji" alt=":smiley:"></p>
<p>Just have to get bytecode down and work on BCEL :\</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/the-new-signlink-objects/7855/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/the-new-signlink-objects/7855/3</link>
        <pubDate>Fri, 04 Aug 2006 23:00:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-7855-3</guid>
        <source url="https://forum.moparisthebest.com/t/the-new-signlink-objects/7855.rss">The new &quot;signlink&quot; objects</source>
      </item>
      <item>
        <title>The new &quot;signlink&quot; objects</title>
        <dc:creator><![CDATA[@Ollie Ollie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ollie">@Ollie</a> wrote:</p>
          <blockquote>
              <p>nice you seem to be helping out this community with open arms</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/the-new-signlink-objects/7855/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/the-new-signlink-objects/7855/2</link>
        <pubDate>Fri, 04 Aug 2006 19:21:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-7855-2</guid>
        <source url="https://forum.moparisthebest.com/t/the-new-signlink-objects/7855.rss">The new &quot;signlink&quot; objects</source>
      </item>
      <item>
        <title>The new &quot;signlink&quot; objects</title>
        <dc:creator><![CDATA[@NOURLOL NOURLOL]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/nourlol">@NOURLOL</a> wrote:</p>
          <blockquote>
              <p>Upon attempting to run the current client as an Applet in a frame, I was faced with it redownloading the entire cache every runtime.<br>
This is because JageX now obfuscate and include their signlink class in their deobs.</p>
<p>In the client superclass, we have:</p>
<p><code>if(nd.c == null)
                    ub.i = nd.c = new hc(false, this, InetAddress.getByName(getCodeBase().getHost()), arg1, null, 0);</code><br>
Which we can find with:</p>
<pre><code class="lang-auto">if\(\w+.\w+ == null\)\r\n+\s+(\w+.\w+) = (\w+.\w+) = new (\w+)\(.*\);</code></pre>
<p>Groups: (object1, object2, signlinkClass)</p>
<p>Now, the constructor args are:</p>
<p><code>false, this, InetAddress.getByName(getCodeBase().getHost()), arg1, null, 0
// bool, not sure? Always false?
// InetAddress, codebase
// int - arg1, Make this 32, I do believe it's the 32 in .filestore_32
// nulltype, not sure
// int, not sure</code></p>
<p>Mind the<br>
in the pattern, it may cause unix users problems.<br>
The constructor signature remains exactly the same, I am positive, since I believe JageX’s static loader creates an instance of this class?</p>
<p>Upon setting the 2 objects, the client should no longer load its’ datafiles upon runtime as an Applet, and you have an undetectable original client possibly, I haven’t been banned as of yet.</p>
<p>I haven’t tested this pattern on newer deobs, but try it if you want the BCEL version:</p>
<pre><code class="lang-auto">invokespecial dup (putstatic) (putstatic) getstatic</code></pre>
<p>Groups (firstSignlinkObject, secondSignlinkObject, determine class from field type, easiest way)<br>
In the client superclass. I really don’t see how it can break/change, but, can’t be too sure.</p>
<p><span class="bbcode-b">If this tutorial was of no use to you, please do not post. Please note I’m NOT using a deob for any of this, so I’m not sure how it will come out in the deob.</span>[br][size=1]Posted at: August 04, 2006, 06:39:53 AM[/size][hr]Here, this is the (ugly) code I use to initialise the signlink objects:</p>
<p><code>            Field f1 = propertyVarToField((String)props.get("firstRunnerInstance"));
            Field f2 = propertyVarToField((String)props.get("secondRunnerInstance"));
            if(!f1.getType().equals(f1.getType()))
                throw new RuntimeException("Mismatch in runner class!");
            Class runnerClass = f1.getType();
            Class[] types = {Boolean.
                            TYPE, Applet.class, InetAddress.class, Integer.TYPE,
                            String.class,
                            Integer.TYPE};
            Object[] args = {
                            true, clientApplet,
                            InetAddress.getByName("" + server +
                                                  ".runescape.com"), 32,
                            "runescape", 12
            };
            Constructor ct = runnerClass.getConstructor(types);
            Object runnerObject = ct.newInstance(args);
            Reflector.setStaticValue(f1, runnerObject);
            Reflector.setStaticValue(f2, runnerObject);</code><br>
Where “firstRunnerInstance” and “secondRunnerInstance” are in the format:</p>
<pre><code class="lang-auto">fieldType declaringClass.fieldName</code></pre>
<p>So:</p>
<p><code>hc ub.i
hc nd.c</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/the-new-signlink-objects/7855/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/the-new-signlink-objects/7855/1</link>
        <pubDate>Fri, 04 Aug 2006 11:03:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-7855-1</guid>
        <source url="https://forum.moparisthebest.com/t/the-new-signlink-objects/7855.rss">The new &quot;signlink&quot; objects</source>
      </item>
  </channel>
</rss>
