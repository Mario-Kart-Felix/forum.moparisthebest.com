<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Objectdef array problem</title>
    <link>https://forum.moparisthebest.com/t/objectdef-array-problem/520100</link>
    <description>when i go to varrock , it while lagg so damn hard

i did an catch expection

this what it says

[code=java]steamIndices exception:java.lang.ArrayIndexOutOfBoundsException: 38425
steamIndices exception:java.lang.ArrayIndexOutOfBoundsException: 38426[/code]

it is something in my object def it has to do with an array

my Objectdef

[code=java]// Decompiled by Jad v1.5.8f. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 

import java.io.*;
import sign.signlink;

import java.io.DataInputStream;
import java.io.FileInputStream;
import java.io.DataOutputStream;
import java.io.FileOutputStream;

public final class ObjectDef
{
	public static ObjectDef forID(int i) {
		for(int j = 0; j &lt; 20; j++)
			if(cache[j].type == i)
				return cache[j];
			cacheIndex = (cacheIndex + 1) % 20;
			ObjectDef objectDef = cache[cacheIndex];
			try {
				stream.currentOffset = streamIndices[i];
				} catch(Exception e) {
					System.out.println(&quot;steamIndices exception:&quot; + e);
				}
			
			objectDef.type = i;
			objectDef.setDefaults();
			objectDef.readValues(stream);
			if (i == 574) {
				objectDef.name = &quot;Pk Point Statue&quot;;
				objectDef.actions = new String[5];
				objectDef.actions[0] = &quot;Inspect&quot;;
				objectDef.description = &quot;A mysterious looking statue.&quot;.getBytes();
			}
			if (i == 575) {
				objectDef.name = &quot;Highscores Statue&quot;;
				objectDef.actions = new String[5];
				objectDef.actions[0] = &quot;Inspect&quot;;
				objectDef.description = &quot;Check out the highscores.&quot;.getBytes();
			}
			if (i == 162) {
				objectDef.name = &quot;Lottery Machine&quot;;
				objectDef.actions = new String[5];
				objectDef.actions[0] = &quot;Inspect&quot;;
				objectDef.description = &quot;Take a risk!&quot;.getBytes();
			}
			if (i == 11356) {
				objectDef.name = &quot;Mysterious Portal&quot;;
				objectDef.actions = new String[5];
				objectDef.actions[0] = &quot;Enter&quot;;
				objectDef.description = &quot;Take a risk!&quot;.getBytes();
			}
			if (i == 4000) {
				objectDef.name = &quot;Help Desk&quot;;
				objectDef.description = &quot;Alienware.&quot;.getBytes();
				objectDef.anIntArray773 = new int[1];
				objectDef.anIntArray773[0] = 12361;
				objectDef.actions = new String[5];
				objectDef.actions[0] = &quot;Access&quot;;
				objectDef.actions[1] = &quot;Help&quot;;
				objectDef.hasActions = true;
				objectDef.aBoolean767 = true;
				objectDef.aBoolean762 = false;
				objectDef.aBoolean769 = false;
			}
			if(i == 3515) {
				objectDef.name = &quot;Completionist cape&quot;;
				objectDef.description = &quot;Completionist cape is hanging here.&quot;.getBytes();
				objectDef.anInt744 = 2;
				objectDef.anInt761 = 1;
				objectDef.anIntArray773 = new int[1];
				objectDef.anIntArray773[0] = 65274;
				objectDef.actions = new String[5];
				objectDef.actions[0] = &quot;Inspect&quot;;
				objectDef.hasActions = true;
				objectDef.aBoolean767 = true;
				objectDef.aBoolean762 = false;
				objectDef.aBoolean769 = false;
			}
			if (i == 1503) {
				objectDef.anIntArray773 = new int[1];
				objectDef.anIntArray773[0] = 28124;
				objectDef.hasActions = false;
			}
			if (i == 26392) {
				objectDef.anIntArray773 = new int[2];
				objectDef.anIntArray773[0] = 27816;
				objectDef.anIntArray773[1] = 27836;
				objectDef.hasActions = false;
			}
			if (i == 6788) {
				objectDef.anIntArray773 = new int[1];
				objectDef.anIntArray773[0] = 28124;
				objectDef.hasActions = false;
			}
			if (i == 8935) {
				objectDef.anIntArray773 = new int[1];
				objectDef.anIntArray773[0] = 28124;
				objectDef.hasActions = false;
			}
			if (i == 1460) {
				objectDef.anIntArray773 = new int[1];
				objectDef.anIntArray773[0] = 28124;
				objectDef.hasActions = false;
			}
			if (i == 9383) {
				objectDef.anIntArray773 = new int[1];
				objectDef.anIntArray773[0] = 28124;
				objectDef.hasActions = false;
			}
			if (i == 1434) {
				objectDef.anIntArray773 = new int[1];
				objectDef.anIntArray773[0] = 28124;
				objectDef.hasActions = false;
			}
			if (i == 6282) {
				objectDef.name = &quot;Member Portal&quot;;
				objectDef.description = &quot;This portal will bring you to the member zone.&quot;.getBytes();
				objectDef.actions = new String[] { &quot;Enter&quot;, null, null, null, null };
			}
			if (i == 13617) {
				objectDef.name = &quot;Skilling Portal&quot;;
				objectDef.description = &quot;This portal will bring you to specified skilling areas.&quot;.getBytes();
				objectDef.actions = new String[] { &quot;Enter&quot;, null, null, null, null };
			}
			if (i == 13618) {
				objectDef.name = &quot;Training Portal&quot;;
				objectDef.description = &quot;This portal will bring you to the specified trainning areas.&quot;.getBytes();
				objectDef.actions = new String[] { &quot;Enter&quot;, null, null, null, null };
			}
			if (i == 13619) {
				objectDef.name = &quot;Boss Portal&quot;;
				objectDef.description = &quot;This portal will bring you to the specified boss areas.&quot;.getBytes();
				objectDef.actions = new String[] { &quot;Enter&quot;, null, null, null, null };
			}
			if (i == 13620) {
				objectDef.name = &quot;Minigame Portal&quot;;
				objectDef.description = &quot;This portal will bring you to the specified minigame areas.&quot;.getBytes();
				objectDef.actions = new String[] { &quot;Enter&quot;, null, null, null, null };
			}
			if (i == 13621) {
				objectDef.name = &quot;Free For All Portal&quot;;
				objectDef.description = &quot;Enter this portal to play&quot;.getBytes();
				objectDef.actions = new String[] { &quot;Enter&quot;, null, null, null, null };
			}
			if (i == 13623) {
				objectDef.name = &quot;Player killing Portal&quot;;
				objectDef.description = &quot;Enter this portal to Pk!&quot;.getBytes();
				objectDef.actions = new String[] { &quot;Enter&quot;, null, null, null, null };
			}
			if (i == 2182) {
				objectDef.name = &quot;Mystery Chest&quot;;
				objectDef.description = &quot;What&#39;s inside is the real mystery..&quot;.getBytes();
				objectDef.actions = new String[] { &quot;Search&quot;, null, null, null, null };
			}
			if (i == 10660) {
				objectDef.name = &quot;Christmas tree&quot;;
				objectDef.anIntArray773 = new int[1]; 
				objectDef.anIntArray773[0] = 62446;	
				objectDef.actions = new String[]{&quot;Chop&quot;, null, null, null, null};
				objectDef.description = &quot;Symbolizing christmas!&quot;.getBytes();
			}
		return objectDef;
	}
	
	public void setDefaults() {
		anIntArray773 = null;
		anIntArray776 = null;
		name = null;
		description = null;
		modifiedModelColors = null;
		originalModelColors = null;
		anInt744 = 1;
		anInt761 = 1;
		aBoolean767 = true;
		aBoolean757 = true;
		hasActions = false;
		aBoolean762 = false;
		aBoolean769 = false;
		aBoolean764 = false;
		anInt781 = -1;
		anInt775 = 16;
		aByte737 = 0;
		aByte742 = 0;
		actions = null;
		anInt746 = -1;
		anInt758 = -1;
		aBoolean751 = false;
		aBoolean779 = true;
		anInt748 = 128;
		anInt772 = 128;
		anInt740 = 128;
		anInt768 = 0;
		anInt738 = 0;
		anInt745 = 0;
		anInt783 = 0;
		aBoolean736 = false;
		aBoolean766 = false;
		anInt760 = -1;
		anInt774 = -1;
		anInt749 = -1;
		childrenIDs = null;
	}

	public void method574(OnDemandFetcher class42_sub1) {
		if (anIntArray773 == null)
			return;
		for (int j = 0; j &lt; anIntArray773.length; j++)
			class42_sub1.method560(anIntArray773[j] &amp; 0xffff, 0);
	}

	public static void nullLoader() {
		mruNodes1 = null;
		mruNodes2 = null;
		streamIndices = null;
		cache = null;
		stream = null;
	}

	public static void unpackConfig(StreamLoader streamLoader) {
		stream = new Stream(streamLoader.getDataForName(&quot;loc.dat&quot;));
		Stream stream = new Stream(streamLoader.getDataForName(&quot;loc.idx&quot;));
		int totalObjects = stream.readUnsignedWord();
		System.out.println(&quot;508 Object Amount: &quot; + totalObjects);
		streamIndices = new int[totalObjects];
		int i = 2;
		for (int j = 0; j &lt; totalObjects; j++) {
			streamIndices[j] = i;
			i += stream.readUnsignedWord();
		}
		cache = new ObjectDef[20];
		for (int k = 0; k &lt; 20; k++)
			cache[k] = new ObjectDef();
		/*for (int I = 0; I &lt; totalObjects; I++) {
				ObjectDef D = ObjectDef.forID(I);
			if (D.anIntArray773 != null) {
				for (int i2 = 0; i2 &lt; D.anIntArray773.length; i2++) {
					byte[] Byte0 = FileOperations.ReadFile(&quot;525Models/&quot; + D.anIntArray773[i2] + &quot;.dat&quot;);
					FileOperations.WriteFile(&quot;508 Models/&quot; + D.anIntArray773[i2] + &quot;.dat&quot;, Byte0);
				}
			}
		}*/
	}

	public boolean method577(int i) {
		if (anIntArray776 == null) {
			if (anIntArray773 == null)
				return true;
			if (i != 10)
				return true;
			boolean flag1 = true;
			for (int k = 0; k &lt; anIntArray773.length; k++)
				flag1 &amp;= Model.method463(anIntArray773[k] &amp; 0xffff);

			return flag1;
		}
		for (int j = 0; j &lt; anIntArray776.length; j++)
			if (anIntArray776[j] == i)
				return Model.method463(anIntArray773[j] &amp; 0xffff);

		return true;
	}

	public Model method578(int i, int j, int k, int l, int i1, int j1, int k1) {
		Model model = method581(i, k1, j);
		if (model == null)
			return null;
		if (aBoolean762 || aBoolean769)
			model = new Model(aBoolean762, aBoolean769, model);
		if (aBoolean762) {
			int l1 = (k + l + i1 + j1) / 4;
			for (int i2 = 0; i2 &lt; model.anInt1626; i2++) {
				int j2 = model.anIntArray1627[i2];
				int k2 = model.anIntArray1629[i2];
				int l2 = k + ((l - k) * (j2 + 64)) / 128;
				int i3 = j1 + ((i1 - j1) * (j2 + 64)) / 128;
				int j3 = l2 + ((i3 - l2) * (k2 + 64)) / 128;
				model.anIntArray1628[i2] += j3 - l1;
			}
			model.method467();
		}
		return model;
	}

	public boolean method579() {
		if (anIntArray773 == null)
			return true;
		boolean flag1 = true;
		for (int i = 0; i &lt; anIntArray773.length; i++)
			flag1 &amp;= Model.method463(anIntArray773[i] &amp; 0xffff);
		return flag1;
	}

	public ObjectDef method580() {
		int i = -1;
		if (anInt774 != -1) {
			VarBit varBit = VarBit.cache[anInt774];
			int j = varBit.anInt648;
			int k = varBit.anInt649;
			int l = varBit.anInt650;
			int i1 = client.anIntArray1232[l - k];
			i = clientInstance.variousSettings[j] &gt;&gt; k &amp; i1;
		} else if (anInt749 != -1)
			i = clientInstance.variousSettings[anInt749];
		if (i &lt; 0 || i &gt;= childrenIDs.length || childrenIDs[i] == -1)
			return null;
		else
			return forID(childrenIDs[i]);
	}

	public Model method581(int j, int k, int l) {
		Model model = null;
		long l1;
		if (anIntArray776 == null) {
			if (j != 10)
				return null;
			l1 = (long) ((type &lt;&lt; 6) + l) + ((long) (k + 1) &lt;&lt; 32);
			Model model_1 = (Model) mruNodes2.insertFromCache(l1);
			if (model_1 != null)
				return model_1;
			if (anIntArray773 == null)
				return null;
			boolean flag1 = aBoolean751 ^ (l &gt; 3);
			int k1 = anIntArray773.length;
			for (int i2 = 0; i2 &lt; k1; i2++) {
				int l2 = anIntArray773[i2];
				if (flag1)
					l2 += 0x10000;
				model = (Model) mruNodes1.insertFromCache(l2);
				if (model == null) {
					model = Model.method462(l2 &amp; 0xffff);
					if (model == null)
						return null;
					if (flag1)
						model.method477();
					mruNodes1.removeFromCache(model, l2);
				}
				if (k1 &gt; 1)
					aModelArray741s[i2] = model;
			}

			if (k1 &gt; 1)
				model = new Model(k1, aModelArray741s);
		} else {
			int i1 = -1;
			for (int j1 = 0; j1 &lt; anIntArray776.length; j1++) {
				if (anIntArray776[j1] != j)
					continue;
				i1 = j1;
				break;
			}

			if (i1 == -1)
				return null;
			l1 = (long) ((type &lt;&lt; 6) + (i1 &lt;&lt; 3) + l) + ((long) (k + 1) &lt;&lt; 32);
			Model model_2 = (Model) mruNodes2.insertFromCache(l1);
			if (model_2 != null)
				return model_2;
			int j2 = anIntArray773[i1];
			boolean flag3 = aBoolean751 ^ (l &gt; 3);
			if (flag3)
				j2 += 0x10000;
			model = (Model) mruNodes1.insertFromCache(j2);
			if (model == null) {
				model = Model.method462(j2 &amp; 0xffff);
				if (model == null)
					return null;
				if (flag3)
					model.method477();
				mruNodes1.removeFromCache(model, j2);
			}
		}
		boolean flag;
		flag = anInt748 != 128 || anInt772 != 128 || anInt740 != 128;
		boolean flag2;
		flag2 = anInt738 != 0 || anInt745 != 0 || anInt783 != 0;
		Model model_3 = new Model(modifiedModelColors == null, Class36
				.method532(k), l == 0 &amp;&amp; k == -1 &amp;&amp; !flag &amp;&amp; !flag2, model);
		if (k != -1) {
			model_3.method469();
			model_3.method470(k);
			model_3.anIntArrayArray1658 = null;
			model_3.anIntArrayArray1657 = null;
		}
		while (l-- &gt; 0)
			model_3.method473();
		if (modifiedModelColors != null) {
			for (int k2 = 0; k2 &lt; modifiedModelColors.length; k2++)
				model_3.method476(modifiedModelColors[k2],
						originalModelColors[k2]);

		}
		if (flag)
			model_3.method478(anInt748, anInt740, anInt772);
		if (flag2)
			model_3.method475(anInt738, anInt745, anInt783);
		//model_3.method479(64 + aByte737, 768 + aByte742 * 5, -50, -10, -50,
		model_3.method479(74, 1000, -90, -580, -90, !aBoolean769);
		if (anInt760 == 1)
			model_3.anInt1654 = model_3.modelHeight;
		mruNodes2.removeFromCache(model_3, l1);
		return model_3;
	}

	private void readValues(Stream stream) {
		int i = -1;
		label0: do {
			int j;
			do {
				j = stream.readUnsignedByte();
				if (j == 0)
					break label0;
				if (j == 1) {
					int k = stream.readUnsignedByte();
					if (k &gt; 0)
						if (anIntArray773 == null || lowMem) {
							anIntArray776 = new int[k];
							anIntArray773 = new int[k];
							for (int k1 = 0; k1 &lt; k; k1++) {
								anIntArray773[k1] = stream.readUnsignedWord();
								anIntArray776[k1] = stream.readUnsignedByte();
							}
						} else {
							stream.currentOffset += k * 3;
						}
				} else if (j == 2)
					name = stream.readString();
				else if (j == 3)
					description = stream.readBytes();
				else if (j == 5) {
					int l = stream.readUnsignedByte();
					if (l &gt; 0)
						if (anIntArray773 == null || lowMem) {
							anIntArray776 = null;
							anIntArray773 = new int[l];
							for (int l1 = 0; l1 &lt; l; l1++)
								anIntArray773[l1] = stream.readUnsignedWord();
						} else {
							stream.currentOffset += l * 2;
						}
				} else if (j == 14)
					anInt744 = stream.readUnsignedByte();
				else if (j == 15)
					anInt761 = stream.readUnsignedByte();
				else if (j == 17)
					aBoolean767 = false;
				else if (j == 18)
					aBoolean757 = false;
				else if (j == 19) {
					i = stream.readUnsignedByte();
					if (i == 1)
						hasActions = true;
				} else if (j == 21)
					aBoolean762 = true;
				else if (j == 22)
					aBoolean769 = true; // change to false to fix gowwars waterfalls??
				else if (j == 23)
					aBoolean764 = true;
				else if (j == 24) {
					anInt781 = stream.readUnsignedWord();
					if (anInt781 == 65535)
						anInt781 = -1;
				} else if (j == 28)
					anInt775 = stream.readUnsignedByte();
				else if (j == 29)
					aByte737 = stream.readSignedByte();
				else if (j == 39)
					aByte742 = stream.readSignedByte();
				else if (j &gt;= 30 &amp;&amp; j &lt; 39) {
					if (actions == null)
						actions = new String[10];
					actions[j - 30] = stream.readString();
					if (actions[j - 30].equalsIgnoreCase(&quot;hidden&quot;))
						actions[j - 30] = null;
				} else if (j == 40) {
					int i1 = stream.readUnsignedByte();
					modifiedModelColors = new int[i1];
					originalModelColors = new int[i1];
					for (int i2 = 0; i2 &lt; i1; i2++) {
						modifiedModelColors[i2] = stream.readUnsignedWord();
						originalModelColors[i2] = stream.readUnsignedWord();
					}
				} else if (j == 60)
					anInt746 = stream.readUnsignedWord();
				else if (j == 62)
					aBoolean751 = true;
				else if (j == 64)
					aBoolean779 = false;
				else if (j == 65)
					anInt748 = stream.readUnsignedWord();
				else if (j == 66)
					anInt772 = stream.readUnsignedWord();
				else if (j == 67)
					anInt740 = stream.readUnsignedWord();
				else if (j == 68)
					anInt758 = stream.readUnsignedWord();
				else if (j == 69)
					anInt768 = stream.readUnsignedByte();
				else if (j == 70)
					anInt738 = stream.readSignedWord();
				else if (j == 71)
					anInt745 = stream.readSignedWord();
				else if (j == 72)
					anInt783 = stream.readSignedWord();
				else if (j == 73)
					aBoolean736 = true;
				else if (j == 74) {
					aBoolean766 = true;
				} else {
					if (j != 75)
						continue;
					anInt760 = stream.readUnsignedByte();
				}
				continue label0;
			} while (j != 77);
			anInt774 = stream.readUnsignedWord();
			if (anInt774 == 65535)
				anInt774 = -1;
			anInt749 = stream.readUnsignedWord();
			if (anInt749 == 65535)
				anInt749 = -1;
			int j1 = stream.readUnsignedByte();
			childrenIDs = new int[j1 + 1];
			for (int j2 = 0; j2 &lt;= j1; j2++) {
				childrenIDs[j2] = stream.readUnsignedWord();
				if (childrenIDs[j2] == 65535)
					childrenIDs[j2] = -1;
			}

		} while (true);
		if (i == -1) {
			hasActions = anIntArray773 != null &amp;&amp; (anIntArray776 == null || anIntArray776[0] == 10);
			if (actions != null)
				hasActions = true;
		}
		if (aBoolean766) {
			aBoolean767 = false;
			aBoolean757 = false;
		}
		if (anInt760 == -1)
			anInt760 = aBoolean767 ? 1 : 0;
	}

	public ObjectDef() {
		type = -1;
	}

	public boolean aBoolean736;
	public byte aByte737;
	public int anInt738;
	public String name;
	public int anInt740;
	public static final Model[] aModelArray741s = new Model[4];
	public byte aByte742;
	public int anInt744;
	public int anInt745;
	public int anInt746;
	public int[] originalModelColors;
	public int anInt748;
	public int anInt749;
	public boolean aBoolean751;
	public static boolean lowMem;
	public static Stream stream;
	public int type;
	public static int[] streamIndices;
	public boolean aBoolean757;
	public int anInt758;
	public int childrenIDs[];
	public int anInt760;
	public int anInt761;
	public boolean aBoolean762;
	public boolean aBoolean764;
	public static client clientInstance;
	public boolean aBoolean766;
	public boolean aBoolean767;
	public int anInt768;
	public boolean aBoolean769;
	public static int cacheIndex;
	public int anInt772;
	public int[] anIntArray773;
	public int anInt774;
	public int anInt775;
	public int dummy;
	public int[] anIntArray776;
	public byte description[];
	public boolean hasActions;
	public boolean aBoolean779;
	public static MRUNodes mruNodes2 = new MRUNodes(30);
	public int anInt781;
	public static ObjectDef[] cache;
	public int anInt783;
	public int[] modifiedModelColors;
	public static MRUNodes mruNodes1 = new MRUNodes(500);
	public String actions[];

}[/code]

if someone could help me or say what is going on

thanks for reading &lt;3</description>
    
    <lastBuildDate>Sun, 26 May 2013 09:30:14 +0000</lastBuildDate>
    <category>Game Development</category>
    <atom:link href="https://forum.moparisthebest.com/t/objectdef-array-problem/520100.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Objectdef array problem</title>
        <dc:creator><![CDATA[@Bullos Bullos]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bullos">@Bullos</a> wrote:</p>
          <blockquote>
              <p>when i go to varrock , it while lagg so damn hard</p>
<p>i did an catch expection</p>
<p>this what it says</p>
<p><code>steamIndices exception:java.lang.ArrayIndexOutOfBoundsException: 38425
steamIndices exception:java.lang.ArrayIndexOutOfBoundsException: 38426</code></p>
<p>it is something in my object def it has to do with an array</p>
<p>my Objectdef</p>
<p>[code=java]// Decompiled by Jad v1.5.8f. Copyright 2001 Pavel Kouznetsov.<br>
// Jad home page: <a href="http://www.kpdus.com/jad.html" rel="nofollow noopener">http://www.kpdus.com/jad.html</a><br>
// Decompiler options: packimports(3)</p>
<p>import <a href="http://java.io" rel="nofollow noopener">java.io</a>.*;<br>
import sign.signlink;</p>
<p>import java.io.DataInputStream;<br>
import java.io.FileInputStream;<br>
import java.io.DataOutputStream;<br>
import java.io.FileOutputStream;</p>
<p>public final class ObjectDef<br>
{<br>
public static ObjectDef forID(int i) {<br>
for(int j = 0; j &lt; 20; j++)<br>
if(cache[j].type == i)<br>
return cache[j];<br>
cacheIndex = (cacheIndex + 1) % 20;<br>
ObjectDef objectDef = cache[cacheIndex];<br>
try {<br>
stream.currentOffset = streamIndices[i];<br>
} catch(Exception e) {<br>
System.out.println(“steamIndices exception:” + e);<br>
}</p>
<pre><code>		objectDef.type = i;
		objectDef.setDefaults();
		objectDef.readValues(stream);
		if (i == 574) {
			objectDef.name = "Pk Point Statue";
			objectDef.actions = new String[5];
			objectDef.actions[0] = "Inspect";
			objectDef.description = "A mysterious looking statue.".getBytes();
		}
		if (i == 575) {
			objectDef.name = "Highscores Statue";
			objectDef.actions = new String[5];
			objectDef.actions[0] = "Inspect";
			objectDef.description = "Check out the highscores.".getBytes();
		}
		if (i == 162) {
			objectDef.name = "Lottery Machine";
			objectDef.actions = new String[5];
			objectDef.actions[0] = "Inspect";
			objectDef.description = "Take a risk!".getBytes();
		}
		if (i == 11356) {
			objectDef.name = "Mysterious Portal";
			objectDef.actions = new String[5];
			objectDef.actions[0] = "Enter";
			objectDef.description = "Take a risk!".getBytes();
		}
		if (i == 4000) {
			objectDef.name = "Help Desk";
			objectDef.description = "Alienware.".getBytes();
			objectDef.anIntArray773 = new int[1];
			objectDef.anIntArray773[0] = 12361;
			objectDef.actions = new String[5];
			objectDef.actions[0] = "Access";
			objectDef.actions[1] = "Help";
			objectDef.hasActions = true;
			objectDef.aBoolean767 = true;
			objectDef.aBoolean762 = false;
			objectDef.aBoolean769 = false;
		}
		if(i == 3515) {
			objectDef.name = "Completionist cape";
			objectDef.description = "Completionist cape is hanging here.".getBytes();
			objectDef.anInt744 = 2;
			objectDef.anInt761 = 1;
			objectDef.anIntArray773 = new int[1];
			objectDef.anIntArray773[0] = 65274;
			objectDef.actions = new String[5];
			objectDef.actions[0] = "Inspect";
			objectDef.hasActions = true;
			objectDef.aBoolean767 = true;
			objectDef.aBoolean762 = false;
			objectDef.aBoolean769 = false;
		}
		if (i == 1503) {
			objectDef.anIntArray773 = new int[1];
			objectDef.anIntArray773[0] = 28124;
			objectDef.hasActions = false;
		}
		if (i == 26392) {
			objectDef.anIntArray773 = new int[2];
			objectDef.anIntArray773[0] = 27816;
			objectDef.anIntArray773[1] = 27836;
			objectDef.hasActions = false;
		}
		if (i == 6788) {
			objectDef.anIntArray773 = new int[1];
			objectDef.anIntArray773[0] = 28124;
			objectDef.hasActions = false;
		}
		if (i == 8935) {
			objectDef.anIntArray773 = new int[1];
			objectDef.anIntArray773[0] = 28124;
			objectDef.hasActions = false;
		}
		if (i == 1460) {
			objectDef.anIntArray773 = new int[1];
			objectDef.anIntArray773[0] = 28124;
			objectDef.hasActions = false;
		}
		if (i == 9383) {
			objectDef.anIntArray773 = new int[1];
			objectDef.anIntArray773[0] = 28124;
			objectDef.hasActions = false;
		}
		if (i == 1434) {
			objectDef.anIntArray773 = new int[1];
			objectDef.anIntArray773[0] = 28124;
			objectDef.hasActions = false;
		}
		if (i == 6282) {
			objectDef.name = "Member Portal";
			objectDef.description = "This portal will bring you to the member zone.".getBytes();
			objectDef.actions = new String[] { "Enter", null, null, null, null };
		}
		if (i == 13617) {
			objectDef.name = "Skilling Portal";
			objectDef.description = "This portal will bring you to specified skilling areas.".getBytes();
			objectDef.actions = new String[] { "Enter", null, null, null, null };
		}
		if (i == 13618) {
			objectDef.name = "Training Portal";
			objectDef.description = "This portal will bring you to the specified trainning areas.".getBytes();
			objectDef.actions = new String[] { "Enter", null, null, null, null };
		}
		if (i == 13619) {
			objectDef.name = "Boss Portal";
			objectDef.description = "This portal will bring you to the specified boss areas.".getBytes();
			objectDef.actions = new String[] { "Enter", null, null, null, null };
		}
		if (i == 13620) {
			objectDef.name = "Minigame Portal";
			objectDef.description = "This portal will bring you to the specified minigame areas.".getBytes();
			objectDef.actions = new String[] { "Enter", null, null, null, null };
		}
		if (i == 13621) {
			objectDef.name = "Free For All Portal";
			objectDef.description = "Enter this portal to play".getBytes();
			objectDef.actions = new String[] { "Enter", null, null, null, null };
		}
		if (i == 13623) {
			objectDef.name = "Player killing Portal";
			objectDef.description = "Enter this portal to Pk!".getBytes();
			objectDef.actions = new String[] { "Enter", null, null, null, null };
		}
		if (i == 2182) {
			objectDef.name = "Mystery Chest";
			objectDef.description = "What's inside is the real mystery..".getBytes();
			objectDef.actions = new String[] { "Search", null, null, null, null };
		}
		if (i == 10660) {
			objectDef.name = "Christmas tree";
			objectDef.anIntArray773 = new int[1]; 
			objectDef.anIntArray773[0] = 62446;	
			objectDef.actions = new String[]{"Chop", null, null, null, null};
			objectDef.description = "Symbolizing christmas!".getBytes();
		}
	return objectDef;
}

public void setDefaults() {
	anIntArray773 = null;
	anIntArray776 = null;
	name = null;
	description = null;
	modifiedModelColors = null;
	originalModelColors = null;
	anInt744 = 1;
	anInt761 = 1;
	aBoolean767 = true;
	aBoolean757 = true;
	hasActions = false;
	aBoolean762 = false;
	aBoolean769 = false;
	aBoolean764 = false;
	anInt781 = -1;
	anInt775 = 16;
	aByte737 = 0;
	aByte742 = 0;
	actions = null;
	anInt746 = -1;
	anInt758 = -1;
	aBoolean751 = false;
	aBoolean779 = true;
	anInt748 = 128;
	anInt772 = 128;
	anInt740 = 128;
	anInt768 = 0;
	anInt738 = 0;
	anInt745 = 0;
	anInt783 = 0;
	aBoolean736 = false;
	aBoolean766 = false;
	anInt760 = -1;
	anInt774 = -1;
	anInt749 = -1;
	childrenIDs = null;
}

public void method574(OnDemandFetcher class42_sub1) {
	if (anIntArray773 == null)
		return;
	for (int j = 0; j &lt; anIntArray773.length; j++)
		class42_sub1.method560(anIntArray773[j] &amp; 0xffff, 0);
}

public static void nullLoader() {
	mruNodes1 = null;
	mruNodes2 = null;
	streamIndices = null;
	cache = null;
	stream = null;
}

public static void unpackConfig(StreamLoader streamLoader) {
	stream = new Stream(streamLoader.getDataForName("loc.dat"));
	Stream stream = new Stream(streamLoader.getDataForName("loc.idx"));
	int totalObjects = stream.readUnsignedWord();
	System.out.println("508 Object Amount: " + totalObjects);
	streamIndices = new int[totalObjects];
	int i = 2;
	for (int j = 0; j &lt; totalObjects; j++) {
		streamIndices[j] = i;
		i += stream.readUnsignedWord();
	}
	cache = new ObjectDef[20];
	for (int k = 0; k &lt; 20; k++)
		cache[k] = new ObjectDef();
	/*for (int I = 0; I &lt; totalObjects; I++) {
			ObjectDef D = ObjectDef.forID(I);
		if (D.anIntArray773 != null) {
			for (int i2 = 0; i2 &lt; D.anIntArray773.length; i2++) {
				byte[] Byte0 = FileOperations.ReadFile("525Models/" + D.anIntArray773[i2] + ".dat");
				FileOperations.WriteFile("508 Models/" + D.anIntArray773[i2] + ".dat", Byte0);
			}
		}
	}*/
}

public boolean method577(int i) {
	if (anIntArray776 == null) {
		if (anIntArray773 == null)
			return true;
		if (i != 10)
			return true;
		boolean flag1 = true;
		for (int k = 0; k &lt; anIntArray773.length; k++)
			flag1 &amp;= Model.method463(anIntArray773[k] &amp; 0xffff);

		return flag1;
	}
	for (int j = 0; j &lt; anIntArray776.length; j++)
		if (anIntArray776[j] == i)
			return Model.method463(anIntArray773[j] &amp; 0xffff);

	return true;
}

public Model method578(int i, int j, int k, int l, int i1, int j1, int k1) {
	Model model = method581(i, k1, j);
	if (model == null)
		return null;
	if (aBoolean762 || aBoolean769)
		model = new Model(aBoolean762, aBoolean769, model);
	if (aBoolean762) {
		int l1 = (k + l + i1 + j1) / 4;
		for (int i2 = 0; i2 &lt; model.anInt1626; i2++) {
			int j2 = model.anIntArray1627[i2];
			int k2 = model.anIntArray1629[i2];
			int l2 = k + ((l - k) * (j2 + 64)) / 128;
			int i3 = j1 + ((i1 - j1) * (j2 + 64)) / 128;
			int j3 = l2 + ((i3 - l2) * (k2 + 64)) / 128;
			model.anIntArray1628[i2] += j3 - l1;
		}
		model.method467();
	}
	return model;
}

public boolean method579() {
	if (anIntArray773 == null)
		return true;
	boolean flag1 = true;
	for (int i = 0; i &lt; anIntArray773.length; i++)
		flag1 &amp;= Model.method463(anIntArray773[i] &amp; 0xffff);
	return flag1;
}

public ObjectDef method580() {
	int i = -1;
	if (anInt774 != -1) {
		VarBit varBit = VarBit.cache[anInt774];
		int j = varBit.anInt648;
		int k = varBit.anInt649;
		int l = varBit.anInt650;
		int i1 = client.anIntArray1232[l - k];
		i = clientInstance.variousSettings[j] &gt;&gt; k &amp; i1;
	} else if (anInt749 != -1)
		i = clientInstance.variousSettings[anInt749];
	if (i &lt; 0 || i &gt;= childrenIDs.length || childrenIDs[i] == -1)
		return null;
	else
		return forID(childrenIDs[i]);
}

public Model method581(int j, int k, int l) {
	Model model = null;
	long l1;
	if (anIntArray776 == null) {
		if (j != 10)
			return null;
		l1 = (long) ((type &lt;&lt; 6) + l) + ((long) (k + 1) &lt;&lt; 32);
		Model model_1 = (Model) mruNodes2.insertFromCache(l1);
		if (model_1 != null)
			return model_1;
		if (anIntArray773 == null)
			return null;
		boolean flag1 = aBoolean751 ^ (l &gt; 3);
		int k1 = anIntArray773.length;
		for (int i2 = 0; i2 &lt; k1; i2++) {
			int l2 = anIntArray773[i2];
			if (flag1)
				l2 += 0x10000;
			model = (Model) mruNodes1.insertFromCache(l2);
			if (model == null) {
				model = Model.method462(l2 &amp; 0xffff);
				if (model == null)
					return null;
				if (flag1)
					model.method477();
				mruNodes1.removeFromCache(model, l2);
			}
			if (k1 &gt; 1)
				aModelArray741s[i2] = model;
		}

		if (k1 &gt; 1)
			model = new Model(k1, aModelArray741s);
	} else {
		int i1 = -1;
		for (int j1 = 0; j1 &lt; anIntArray776.length; j1++) {
			if (anIntArray776[j1] != j)
				continue;
			i1 = j1;
			break;
		}

		if (i1 == -1)
			return null;
		l1 = (long) ((type &lt;&lt; 6) + (i1 &lt;&lt; 3) + l) + ((long) (k + 1) &lt;&lt; 32);
		Model model_2 = (Model) mruNodes2.insertFromCache(l1);
		if (model_2 != null)
			return model_2;
		int j2 = anIntArray773[i1];
		boolean flag3 = aBoolean751 ^ (l &gt; 3);
		if (flag3)
			j2 += 0x10000;
		model = (Model) mruNodes1.insertFromCache(j2);
		if (model == null) {
			model = Model.method462(j2 &amp; 0xffff);
			if (model == null)
				return null;
			if (flag3)
				model.method477();
			mruNodes1.removeFromCache(model, j2);
		}
	}
	boolean flag;
	flag = anInt748 != 128 || anInt772 != 128 || anInt740 != 128;
	boolean flag2;
	flag2 = anInt738 != 0 || anInt745 != 0 || anInt783 != 0;
	Model model_3 = new Model(modifiedModelColors == null, Class36
			.method532(k), l == 0 &amp;&amp; k == -1 &amp;&amp; !flag &amp;&amp; !flag2, model);
	if (k != -1) {
		model_3.method469();
		model_3.method470(k);
		model_3.anIntArrayArray1658 = null;
		model_3.anIntArrayArray1657 = null;
	}
	while (l-- &gt; 0)
		model_3.method473();
	if (modifiedModelColors != null) {
		for (int k2 = 0; k2 &lt; modifiedModelColors.length; k2++)
			model_3.method476(modifiedModelColors[k2],
					originalModelColors[k2]);

	}
	if (flag)
		model_3.method478(anInt748, anInt740, anInt772);
	if (flag2)
		model_3.method475(anInt738, anInt745, anInt783);
	//model_3.method479(64 + aByte737, 768 + aByte742 * 5, -50, -10, -50,
	model_3.method479(74, 1000, -90, -580, -90, !aBoolean769);
	if (anInt760 == 1)
		model_3.anInt1654 = model_3.modelHeight;
	mruNodes2.removeFromCache(model_3, l1);
	return model_3;
}

private void readValues(Stream stream) {
	int i = -1;
	label0: do {
		int j;
		do {
			j = stream.readUnsignedByte();
			if (j == 0)
				break label0;
			if (j == 1) {
				int k = stream.readUnsignedByte();
				if (k &gt; 0)
					if (anIntArray773 == null || lowMem) {
						anIntArray776 = new int[k];
						anIntArray773 = new int[k];
						for (int k1 = 0; k1 &lt; k; k1++) {
							anIntArray773[k1] = stream.readUnsignedWord();
							anIntArray776[k1] = stream.readUnsignedByte();
						}
					} else {
						stream.currentOffset += k * 3;
					}
			} else if (j == 2)
				name = stream.readString();
			else if (j == 3)
				description = stream.readBytes();
			else if (j == 5) {
				int l = stream.readUnsignedByte();
				if (l &gt; 0)
					if (anIntArray773 == null || lowMem) {
						anIntArray776 = null;
						anIntArray773 = new int[l];
						for (int l1 = 0; l1 &lt; l; l1++)
							anIntArray773[l1] = stream.readUnsignedWord();
					} else {
						stream.currentOffset += l * 2;
					}
			} else if (j == 14)
				anInt744 = stream.readUnsignedByte();
			else if (j == 15)
				anInt761 = stream.readUnsignedByte();
			else if (j == 17)
				aBoolean767 = false;
			else if (j == 18)
				aBoolean757 = false;
			else if (j == 19) {
				i = stream.readUnsignedByte();
				if (i == 1)
					hasActions = true;
			} else if (j == 21)
				aBoolean762 = true;
			else if (j == 22)
				aBoolean769 = true; // change to false to fix gowwars waterfalls??
			else if (j == 23)
				aBoolean764 = true;
			else if (j == 24) {
				anInt781 = stream.readUnsignedWord();
				if (anInt781 == 65535)
					anInt781 = -1;
			} else if (j == 28)
				anInt775 = stream.readUnsignedByte();
			else if (j == 29)
				aByte737 = stream.readSignedByte();
			else if (j == 39)
				aByte742 = stream.readSignedByte();
			else if (j &gt;= 30 &amp;&amp; j &lt; 39) {
				if (actions == null)
					actions = new String[10];
				actions[j - 30] = stream.readString();
				if (actions[j - 30].equalsIgnoreCase("hidden"))
					actions[j - 30] = null;
			} else if (j == 40) {
				int i1 = stream.readUnsignedByte();
				modifiedModelColors = new int[i1];
				originalModelColors = new int[i1];
				for (int i2 = 0; i2 &lt; i1; i2++) {
					modifiedModelColors[i2] = stream.readUnsignedWord();
					originalModelColors[i2] = stream.readUnsignedWord();
				}
			} else if (j == 60)
				anInt746 = stream.readUnsignedWord();
			else if (j == 62)
				aBoolean751 = true;
			else if (j == 64)
				aBoolean779 = false;
			else if (j == 65)
				anInt748 = stream.readUnsignedWord();
			else if (j == 66)
				anInt772 = stream.readUnsignedWord();
			else if (j == 67)
				anInt740 = stream.readUnsignedWord();
			else if (j == 68)
				anInt758 = stream.readUnsignedWord();
			else if (j == 69)
				anInt768 = stream.readUnsignedByte();
			else if (j == 70)
				anInt738 = stream.readSignedWord();
			else if (j == 71)
				anInt745 = stream.readSignedWord();
			else if (j == 72)
				anInt783 = stream.readSignedWord();
			else if (j == 73)
				aBoolean736 = true;
			else if (j == 74) {
				aBoolean766 = true;
			} else {
				if (j != 75)
					continue;
				anInt760 = stream.readUnsignedByte();
			}
			continue label0;
		} while (j != 77);
		anInt774 = stream.readUnsignedWord();
		if (anInt774 == 65535)
			anInt774 = -1;
		anInt749 = stream.readUnsignedWord();
		if (anInt749 == 65535)
			anInt749 = -1;
		int j1 = stream.readUnsignedByte();
		childrenIDs = new int[j1 + 1];
		for (int j2 = 0; j2 &lt;= j1; j2++) {
			childrenIDs[j2] = stream.readUnsignedWord();
			if (childrenIDs[j2] == 65535)
				childrenIDs[j2] = -1;
		}

	} while (true);
	if (i == -1) {
		hasActions = anIntArray773 != null &amp;&amp; (anIntArray776 == null || anIntArray776[0] == 10);
		if (actions != null)
			hasActions = true;
	}
	if (aBoolean766) {
		aBoolean767 = false;
		aBoolean757 = false;
	}
	if (anInt760 == -1)
		anInt760 = aBoolean767 ? 1 : 0;
}

public ObjectDef() {
	type = -1;
}

public boolean aBoolean736;
public byte aByte737;
public int anInt738;
public String name;
public int anInt740;
public static final Model[] aModelArray741s = new Model[4];
public byte aByte742;
public int anInt744;
public int anInt745;
public int anInt746;
public int[] originalModelColors;
public int anInt748;
public int anInt749;
public boolean aBoolean751;
public static boolean lowMem;
public static Stream stream;
public int type;
public static int[] streamIndices;
public boolean aBoolean757;
public int anInt758;
public int childrenIDs[];
public int anInt760;
public int anInt761;
public boolean aBoolean762;
public boolean aBoolean764;
public static client clientInstance;
public boolean aBoolean766;
public boolean aBoolean767;
public int anInt768;
public boolean aBoolean769;
public static int cacheIndex;
public int anInt772;
public int[] anIntArray773;
public int anInt774;
public int anInt775;
public int dummy;
public int[] anIntArray776;
public byte description[];
public boolean hasActions;
public boolean aBoolean779;
public static MRUNodes mruNodes2 = new MRUNodes(30);
public int anInt781;
public static ObjectDef[] cache;
public int anInt783;
public int[] modifiedModelColors;
public static MRUNodes mruNodes1 = new MRUNodes(500);
public String actions[];
</code></pre>
<p>}[/code]</p>
<p>if someone could help me or say what is going on</p>
<p>thanks for reading &lt;3</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/objectdef-array-problem/520100/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/objectdef-array-problem/520100/1</link>
        <pubDate>Sun, 26 May 2013 09:30:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-520100-1</guid>
        <source url="https://forum.moparisthebest.com/t/objectdef-array-problem/520100.rss">Objectdef array problem</source>
      </item>
  </channel>
</rss>
