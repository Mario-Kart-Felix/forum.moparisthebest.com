<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[PI] Woodcutting bug [PI]</title>
    <link>https://forum.moparisthebest.com/t/pi-woodcutting-bug-pi/540526</link>
    <description>When i start chopping a tree it does the emote but stops after 4 seconds and no logs are obtained and it does this with every tree ingame

source i use &quot;process-PK&quot;

woodcutting.java
[code]package server.model.players.skills;

import server.model.players.*;
import server.Config;
import server.util.Misc;
import server.Server;
import java.lang.Math;
import server.model.players.Client;
import server.model.players.PacketType;
import server.model.objects.Object;
import server.model.players.PlayerHandler;

/**
* @author Sanity
* @note Heavily modified by Cres || rebellion
*/

public class Woodcutting {

Client c;

private final int VALID_AXE[] = {1351,1349,1353,1361,1355,1357,1359,6739};
private final int[] AXE_REQS = {1,1,6,6,21,31,41,61};
private int logType;
private int exp;
private int levelReq;
private int axeType;
private int treeX;
private int treeY;
private int density;
private int treeType;
public int logsCutFromTree;
public int tempTimer = 0;

public static int TREE_TIMER = 2000;

public Woodcutting(Client c) {
this.c = c;
}

public void startWoodcutting(int logType, int levelReq, int exp, int treeX, int treeY, int density, int treeType) {
if (goodAxe() &gt; 0) {
c.turnPlayerTo(treeX, treeY);
if (c.playerLevel[c.playerWoodcutting] &gt;= levelReq) {
this.logType = logType;
this.exp = exp;
this.levelReq = levelReq;
this.treeX = treeX;
this.treeY = treeY;
this.density = density;
this.treeType = treeType;
this.axeType = goodAxe();
c.wcTimer = getWcTimer(density);
c.startAnimation(getWcEmote());
} else {
c.getPA().resetVariables();
c.startAnimation(65535);
c.sendMessage(&quot;You need a woodcutting level of &quot; + levelReq + &quot; to cut this tree.&quot;);
}	
} else {
c.startAnimation(65535);
c.sendMessage(&quot;You don&#39;t have an axe for which you have the level to use.&quot;);
c.getPA().resetVariables();
}
}

public void resetWoodcut() {
this.logType = -1;
this.exp = -1;
this.levelReq = -1;
this.axeType = -1;
this.density = -1;
this.treeX = -1;
this.treeY = -1;
this.treeType = -1;
c.wcTimer = -1;	
logsCutFromTree = 0;
}

public int getWcEmote() {
if (axeType == 1351) // bronze
return 879;
if (axeType == 1349) // iron
return 877;
if (axeType == 1353) // steel
return 875;
if (axeType == 1355) // mith
return 871;
if (axeType == 1357) // addy
return 869;
if (axeType == 1359) // rune
return 867;
if (axeType == 6739) // d axe
return 2846;
if (axeType == 1361) // black
return 873;
else
return 0;
}

public void cutWood() {
int maxLogsPerTree = cutForChop(treeType);
if (logsCutFromTree &lt; maxLogsPerTree) {
if (c.getItems().addItem(logType,1)) {
c.startAnimation(getWcEmote());
logsCutFromTree += 1;
c.sendMessage(&quot;You get some logs.&quot;);
c.getPA().addSkillXP(exp * Config.WOODCUTTING_EXPERIENCE, c.playerWoodcutting);
c.getPA().refreshSkill(c.playerWoodcutting);
c.wcTimer = getWcTimer(density);
} else {
c.getPA().resetVariables();
return;
}
} else {
for (int j = 0; j &lt; Server.playerHandler.players.length; j++) {
if (Server.playerHandler.players[j] != null) {
Client c2 = (Client)Server.playerHandler.players[j]; 
new Object(1343, treeX, treeY, 0, 1, 10, treeType, getTicksForTree());	
c.getPA().resetVariables();
resetWoodcut();
}
}
return;
}
}

public int getTicksForTree() {
return (2000-PlayerHandler.getPlayerCount())/100 + additionalTicksPerTree();
}

public int additionalTicksPerTree() {
if (treeType == 1276) // reg
return 1;
if (treeType == 1278) // reg
return 1;
if (treeType == 1281) // oak
return 2;
if (treeType == 1308) // willow
return 3;
if (treeType == 1307) // maple
return 4;
if (treeType == 1309) // yew
return 6;
if (treeType == 1306) // magic
return 7;
else
return 0;
}

public int cutForChop(int tree) {
if (tree == 1276 || tree == 1278)
return 3;
if (tree == 1281)
return 5;
if (tree == 1308)
return 6;
if (tree == 1307)
return 7;
if (tree == 1309)
return 8;
if (tree == 1306)
return 10;
else
return 0;
}

public int axePower(int axe) {
if (axe == 1351) // bronze
return 1;
if (axe == 1349) // iron
return 1;
if (axe == 1353) // steel
return 2;
if (axe == 1361) // black
return 2;
if (axe == 1355) // mith
return 3;
if (axe == 1357) // addy
return 4;
if (axe == 1359) // rune
return 5;
if (axe == 6739) //daxe
return 7;
else
return 0;
}

public int goodAxe() {
for (int j = VALID_AXE.length - 1; j &gt;= 0; j--) {
if (c.playerEquipment[c.playerWeapon] == VALID_AXE[j]) {
if (c.playerLevel[c.playerWoodcutting] &gt;= AXE_REQS[j])
return VALID_AXE[j];
}	
}
for (int i = 0; i &lt; c.playerItems.length; i++) {
for (int j = VALID_AXE.length - 1; j &gt;= 0; j--) {
if (c.playerItems[i] == VALID_AXE[j] + 1) {
if (c.playerLevel[c.playerWoodcutting] &gt;= AXE_REQS[j])
return VALID_AXE[j];
}
}	
}
return - 1;
}

public int getWcTimer(int density) {
int time = Misc.random(2);
return density + time - axePower(goodAxe());
}

}[/code]

actionhandler.java
[code]/**
* @param 0 , the log you get for cutting the tree.
* @param 1 , the level required to cut the tree.
* @param 2 , the experience gained for cutting the tree.
* @param 3 , the X coordinate of the tree.
* @param 4 , the Y coordinate of the tree.
* @param 5 , the density of the tree.
* @param 6 , the id of the tree.
*/

case 1276:
case 1278://trees
c.woodcut[0] = 1511;
c.woodcut[1] = 1;
c.woodcut[2] = 25;
c.woodcut[3] = obX;
c.woodcut[4] = obY;
c.woodcut[5] = 8;
c.woodcut[6] = objectType;
c.getWoodcutting().startWoodcutting(c.woodcut[0], c.woodcut[1], c.woodcut[2], c.woodcut[3], c.woodcut[4], c.woodcut[5], c.woodcut[6]);
break;
case 1281: //oak
c.woodcut[0] = 1521;
c.woodcut[1] = 15;
c.woodcut[2] = 37;
c.woodcut[3] = obX;
c.woodcut[4] = obY;
c.woodcut[5] = 9;
c.woodcut[6] = objectType;
c.getWoodcutting().startWoodcutting(c.woodcut[0], c.woodcut[1], c.woodcut[2], c.woodcut[3], c.woodcut[4], c.woodcut[5], c.woodcut[6]);
break;

case 1308: //willow
c.woodcut[0] = 1519;
c.woodcut[1] = 30;
c.woodcut[2] = 68;
c.woodcut[3] = obX;
c.woodcut[4] = obY;
c.woodcut[5] = 10;
c.woodcut[6] = objectType;
c.getWoodcutting().startWoodcutting(c.woodcut[0], c.woodcut[1], c.woodcut[2], c.woodcut[3], c.woodcut[4], c.woodcut[5], c.woodcut[6]);
break;

case 1307: //maple
c.woodcut[0] = 1517;
c.woodcut[1] = 45;
c.woodcut[2] = 100;
c.woodcut[3] = obX;
c.woodcut[4] = obY;
c.woodcut[5] = 11;
c.woodcut[6] = objectType;
c.getWoodcutting().startWoodcutting(c.woodcut[0], c.woodcut[1], c.woodcut[2], c.woodcut[3], c.woodcut[4], c.woodcut[5], c.woodcut[6]);
break;

case 1309: //yew
c.woodcut[0] = 1515;
c.woodcut[1] = 60;
c.woodcut[2] = 175;
c.woodcut[3] = obX;
c.woodcut[4] = obY;
c.woodcut[5] = 12;
c.woodcut[6] = objectType;
c.getWoodcutting().startWoodcutting(c.woodcut[0], c.woodcut[1], c.woodcut[2], c.woodcut[3], c.woodcut[4], c.woodcut[5], c.woodcut[6]);
break;

case 1306: // magic
c.woodcut[0] = 1513;
c.woodcut[1] = 75;
c.woodcut[2] = 250;
c.woodcut[3] = obX;
c.woodcut[4] = obY;
c.woodcut[5] = 13;
c.woodcut[6] = objectType;
c.getWoodcutting().startWoodcutting(c.woodcut[0], c.woodcut[1], c.woodcut[2], c.woodcut[3], c.woodcut[4], c.woodcut[5], c.woodcut[6]);
break;[/code]

Idk if it has something todo with these cuz they look perfectly normal to me but just posting incase i overlooked something</description>
    
    <lastBuildDate>Sun, 23 Feb 2014 10:09:35 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/pi-woodcutting-bug-pi/540526.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[PI] Woodcutting bug [PI]</title>
        <dc:creator><![CDATA[@tlol tlol]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tlol">@tlol</a> wrote:</p>
          <blockquote>
              <p>When i start chopping a tree it does the emote but stops after 4 seconds and no logs are obtained and it does this with every tree ingame</p>
<p>source i use “process-PK”</p>
<p>woodcutting.java</p>
<p>[code]package server.model.players.skills;</p>
<p>import server.model.players.*;<br>
import server.Config;<br>
import server.util.Misc;<br>
import server.Server;<br>
import java.lang.Math;<br>
import server.model.players.Client;<br>
import server.model.players.PacketType;<br>
import server.model.objects.Object;<br>
import server.model.players.PlayerHandler;</p>
<p>/**</p>
<ul>
<li>
<span class="mention">@author</span> Sanity</li>
<li>
<a class="mention" href="/u/note">@note</a> Heavily modified by Cres || rebellion<br>
*/</li>
</ul>
<p>public class Woodcutting {</p>
<p>Client c;</p>
<p>private final int VALID_AXE[] = {1351,1349,1353,1361,1355,1357,1359,6739};<br>
private final int[] AXE_REQS = {1,1,6,6,21,31,41,61};<br>
private int logType;<br>
private int exp;<br>
private int levelReq;<br>
private int axeType;<br>
private int treeX;<br>
private int treeY;<br>
private int density;<br>
private int treeType;<br>
public int logsCutFromTree;<br>
public int tempTimer = 0;</p>
<p>public static int TREE_TIMER = 2000;</p>
<p>public Woodcutting(Client c) {<br>
this.c = c;<br>
}</p>
<p>public void startWoodcutting(int logType, int levelReq, int exp, int treeX, int treeY, int density, int treeType) {<br>
if (goodAxe() &gt; 0) {<br>
c.turnPlayerTo(treeX, treeY);<br>
if (c.playerLevel[c.playerWoodcutting] &gt;= levelReq) {<br>
this.logType = logType;<br>
this.exp = exp;<br>
this.levelReq = levelReq;<br>
this.treeX = treeX;<br>
this.treeY = treeY;<br>
this.density = density;<br>
this.treeType = treeType;<br>
this.axeType = goodAxe();<br>
c.wcTimer = getWcTimer(density);<br>
c.startAnimation(getWcEmote());<br>
} else {<br>
c.getPA().resetVariables();<br>
c.startAnimation(65535);<br>
c.sendMessage(“You need a woodcutting level of " + levelReq + " to cut this tree.”);<br>
}	<br>
} else {<br>
c.startAnimation(65535);<br>
c.sendMessage(“You don’t have an axe for which you have the level to use.”);<br>
c.getPA().resetVariables();<br>
}<br>
}</p>
<p>public void resetWoodcut() {<br>
this.logType = -1;<br>
this.exp = -1;<br>
this.levelReq = -1;<br>
this.axeType = -1;<br>
this.density = -1;<br>
this.treeX = -1;<br>
this.treeY = -1;<br>
this.treeType = -1;<br>
c.wcTimer = -1;	<br>
logsCutFromTree = 0;<br>
}</p>
<p>public int getWcEmote() {<br>
if (axeType == 1351) // bronze<br>
return 879;<br>
if (axeType == 1349) // iron<br>
return 877;<br>
if (axeType == 1353) // steel<br>
return 875;<br>
if (axeType == 1355) // mith<br>
return 871;<br>
if (axeType == 1357) // addy<br>
return 869;<br>
if (axeType == 1359) // rune<br>
return 867;<br>
if (axeType == 6739) // d axe<br>
return 2846;<br>
if (axeType == 1361) // black<br>
return 873;<br>
else<br>
return 0;<br>
}</p>
<p>public void cutWood() {<br>
int maxLogsPerTree = cutForChop(treeType);<br>
if (logsCutFromTree &lt; maxLogsPerTree) {<br>
if (c.getItems().addItem(logType,1)) {<br>
c.startAnimation(getWcEmote());<br>
logsCutFromTree += 1;<br>
c.sendMessage(“You get some logs.”);<br>
c.getPA().addSkillXP(exp * Config.WOODCUTTING_EXPERIENCE, c.playerWoodcutting);<br>
c.getPA().refreshSkill(c.playerWoodcutting);<br>
c.wcTimer = getWcTimer(density);<br>
} else {<br>
c.getPA().resetVariables();<br>
return;<br>
}<br>
} else {<br>
for (int j = 0; j &lt; Server.playerHandler.players.length; j++) {<br>
if (Server.playerHandler.players[j] != null) {<br>
Client c2 = (Client)Server.playerHandler.players[j];<br>
new Object(1343, treeX, treeY, 0, 1, 10, treeType, getTicksForTree());	<br>
c.getPA().resetVariables();<br>
resetWoodcut();<br>
}<br>
}<br>
return;<br>
}<br>
}</p>
<p>public int getTicksForTree() {<br>
return (2000-PlayerHandler.getPlayerCount())/100 + additionalTicksPerTree();<br>
}</p>
<p>public int additionalTicksPerTree() {<br>
if (treeType == 1276) // reg<br>
return 1;<br>
if (treeType == 1278) // reg<br>
return 1;<br>
if (treeType == 1281) // oak<br>
return 2;<br>
if (treeType == 1308) // willow<br>
return 3;<br>
if (treeType == 1307) // maple<br>
return 4;<br>
if (treeType == 1309) // yew<br>
return 6;<br>
if (treeType == 1306) // magic<br>
return 7;<br>
else<br>
return 0;<br>
}</p>
<p>public int cutForChop(int tree) {<br>
if (tree == 1276 || tree == 1278)<br>
return 3;<br>
if (tree == 1281)<br>
return 5;<br>
if (tree == 1308)<br>
return 6;<br>
if (tree == 1307)<br>
return 7;<br>
if (tree == 1309)<br>
return 8;<br>
if (tree == 1306)<br>
return 10;<br>
else<br>
return 0;<br>
}</p>
<p>public int axePower(int axe) {<br>
if (axe == 1351) // bronze<br>
return 1;<br>
if (axe == 1349) // iron<br>
return 1;<br>
if (axe == 1353) // steel<br>
return 2;<br>
if (axe == 1361) // black<br>
return 2;<br>
if (axe == 1355) // mith<br>
return 3;<br>
if (axe == 1357) // addy<br>
return 4;<br>
if (axe == 1359) // rune<br>
return 5;<br>
if (axe == 6739) //daxe<br>
return 7;<br>
else<br>
return 0;<br>
}</p>
<p>public int goodAxe() {<br>
for (int j = VALID_AXE.length - 1; j &gt;= 0; j–) {<br>
if (c.playerEquipment[c.playerWeapon] == VALID_AXE[j]) {<br>
if (c.playerLevel[c.playerWoodcutting] &gt;= AXE_REQS[j])<br>
return VALID_AXE[j];<br>
}	<br>
}<br>
for (int i = 0; i &lt; c.playerItems.length; i++) {<br>
for (int j = VALID_AXE.length - 1; j &gt;= 0; j–) {<br>
if (c.playerItems[i] == VALID_AXE[j] + 1) {<br>
if (c.playerLevel[c.playerWoodcutting] &gt;= AXE_REQS[j])<br>
return VALID_AXE[j];<br>
}<br>
}	<br>
}<br>
return - 1;<br>
}</p>
<p>public int getWcTimer(int density) {<br>
int time = Misc.random(2);<br>
return density + time - axePower(goodAxe());<br>
}</p>
<p>}[/code]</p>
<p>actionhandler.java</p>
<p>[code]/**</p>
<ul>
<li>
<a class="mention" href="/u/param">@param</a> 0 , the log you get for cutting the tree.</li>
<li>
<a class="mention" href="/u/param">@param</a> 1 , the level required to cut the tree.</li>
<li>
<a class="mention" href="/u/param">@param</a> 2 , the experience gained for cutting the tree.</li>
<li>
<a class="mention" href="/u/param">@param</a> 3 , the X coordinate of the tree.</li>
<li>
<a class="mention" href="/u/param">@param</a> 4 , the Y coordinate of the tree.</li>
<li>
<a class="mention" href="/u/param">@param</a> 5 , the density of the tree.</li>
<li>
<a class="mention" href="/u/param">@param</a> 6 , the id of the tree.<br>
*/</li>
</ul>
<p>case 1276:<br>
case 1278://trees<br>
c.woodcut[0] = 1511;<br>
c.woodcut[1] = 1;<br>
c.woodcut[2] = 25;<br>
c.woodcut[3] = obX;<br>
c.woodcut[4] = obY;<br>
c.woodcut[5] = 8;<br>
c.woodcut[6] = objectType;<br>
c.getWoodcutting().startWoodcutting(c.woodcut[0], c.woodcut[1], c.woodcut[2], c.woodcut[3], c.woodcut[4], c.woodcut[5], c.woodcut[6]);<br>
break;<br>
case 1281: //oak<br>
c.woodcut[0] = 1521;<br>
c.woodcut[1] = 15;<br>
c.woodcut[2] = 37;<br>
c.woodcut[3] = obX;<br>
c.woodcut[4] = obY;<br>
c.woodcut[5] = 9;<br>
c.woodcut[6] = objectType;<br>
c.getWoodcutting().startWoodcutting(c.woodcut[0], c.woodcut[1], c.woodcut[2], c.woodcut[3], c.woodcut[4], c.woodcut[5], c.woodcut[6]);<br>
break;</p>
<p>case 1308: //willow<br>
c.woodcut[0] = 1519;<br>
c.woodcut[1] = 30;<br>
c.woodcut[2] = 68;<br>
c.woodcut[3] = obX;<br>
c.woodcut[4] = obY;<br>
c.woodcut[5] = 10;<br>
c.woodcut[6] = objectType;<br>
c.getWoodcutting().startWoodcutting(c.woodcut[0], c.woodcut[1], c.woodcut[2], c.woodcut[3], c.woodcut[4], c.woodcut[5], c.woodcut[6]);<br>
break;</p>
<p>case 1307: //maple<br>
c.woodcut[0] = 1517;<br>
c.woodcut[1] = 45;<br>
c.woodcut[2] = 100;<br>
c.woodcut[3] = obX;<br>
c.woodcut[4] = obY;<br>
c.woodcut[5] = 11;<br>
c.woodcut[6] = objectType;<br>
c.getWoodcutting().startWoodcutting(c.woodcut[0], c.woodcut[1], c.woodcut[2], c.woodcut[3], c.woodcut[4], c.woodcut[5], c.woodcut[6]);<br>
break;</p>
<p>case 1309: //yew<br>
c.woodcut[0] = 1515;<br>
c.woodcut[1] = 60;<br>
c.woodcut[2] = 175;<br>
c.woodcut[3] = obX;<br>
c.woodcut[4] = obY;<br>
c.woodcut[5] = 12;<br>
c.woodcut[6] = objectType;<br>
c.getWoodcutting().startWoodcutting(c.woodcut[0], c.woodcut[1], c.woodcut[2], c.woodcut[3], c.woodcut[4], c.woodcut[5], c.woodcut[6]);<br>
break;</p>
<p>case 1306: // magic<br>
c.woodcut[0] = 1513;<br>
c.woodcut[1] = 75;<br>
c.woodcut[2] = 250;<br>
c.woodcut[3] = obX;<br>
c.woodcut[4] = obY;<br>
c.woodcut[5] = 13;<br>
c.woodcut[6] = objectType;<br>
c.getWoodcutting().startWoodcutting(c.woodcut[0], c.woodcut[1], c.woodcut[2], c.woodcut[3], c.woodcut[4], c.woodcut[5], c.woodcut[6]);<br>
break;[/code]</p>
<p>Idk if it has something todo with these cuz they look perfectly normal to me but just posting incase i overlooked something</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-woodcutting-bug-pi/540526/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-woodcutting-bug-pi/540526/1</link>
        <pubDate>Sun, 23 Feb 2014 10:09:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-540526-1</guid>
        <source url="https://forum.moparisthebest.com/t/pi-woodcutting-bug-pi/540526.rss">[PI] Woodcutting bug [PI]</source>
      </item>
  </channel>
</rss>
