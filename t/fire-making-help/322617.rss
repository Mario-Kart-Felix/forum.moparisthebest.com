<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>-fire making help-</title>
    <link>https://forum.moparisthebest.com/t/fire-making-help/322617</link>
    <description>how do i make a fire come out?

this is my normal log one

&lt;blockquote&gt;        case 1511:
            if (IsItemInBag(590) == true) {
                IsFiremaking = true;
                firemaking[0] = 1;
                firemaking[1] = 1;
                firemaking[2] = 40;
		CreateNewFire();
                IsMakingFire = true;
                resetFM();
		sendMessage(&quot;You light a fire.&quot;);
            } else {
                sendMessage(
                        &quot;You need a &quot; + GetItemName(590) + &quot; to light a fire.&quot;);
            }
            break;&lt;/blockquote&gt;



and these are the firemaking voids and stuff

&lt;blockquote&gt;    /* FIREMAKING*/
    public boolean firemaking() {
        if (playerLevel[playerFiremaking] &gt;= firemaking[1]) {
            if (actionTimer == 0 &amp;&amp; IsMakingFire == false) {
                actionAmount++;
                sendMessage(&quot;You attempt to light a fire...&quot;);
                OriginalWeapon = playerEquipment[playerWeapon];
                OriginalShield = playerEquipment[playerShield];
                playerEquipment[playerWeapon] = -1;
                playerEquipment[playerShield] = -1;
                actionTimer = 5;
                if (actionTimer &lt; 1) {
                    actionTimer = 1;
                }
                setAnimation(0x2DD);
                IsMakingFire = true;
            }
            if (actionTimer == 0 &amp;&amp; IsMakingFire == true) {
                addSkillXP((firemaking[2] * firemaking[3]), playerFiremaking);
                server.itemHandler.DroppedItemsSDelay[firemaking[4]] = server.itemHandler.MaxDropShowDelay
                        + 1;
                CreateNewFire();
                sendMessage(&quot;You light a fire.&quot;);
                playerEquipment[playerWeapon] = OriginalWeapon;
                OriginalWeapon = -1;
                resetAnimation();
                IsMakingFire = true;
                resetFM();
            }
        } else {
            sendMessage(
                    &quot;You need &quot; + firemaking[1] + &quot; &quot;
                    + statName[playerFiremaking] + &quot; to light these logs.&quot;);
            resetFM();
            return false;
        }
        return true;
    }

    public boolean resetFM() {
        firemaking[0] = 0;
        firemaking[1] = 0;
        firemaking[2] = 0;
        firemaking[4] = 0;
        skillX = -1;
        skillY = -1;
        IsUsingSkill = false;
        IsMakingFire = false;
        return true;
    }

    public void CreateNewFire() {
        for (int i = 0; i &lt; server.objectHandler.MaxObjects; i++) {
            if (server.objectHandler.ObjectFireID[i] == -1) {
                server.objectHandler.ObjectFireID[i] = 2732;
                server.objectHandler.ObjectFireX[i] = skillX;
                server.objectHandler.ObjectFireY[i] = skillY;
                server.objectHandler.ObjectFireH[i] = heightLevel;
                server.objectHandler.ObjectFireMaxDelay[i] = server.objectHandler.FireDelay
                        + (server.objectHandler.FireGianDelay * firemaking[0]);
                break;
            }
        }
    }

    public void AddObjectFire() {
        if (IsFireing == false) {
            IsFireing = true;
            int tmpX = 0;
            int tmpY = 0;
            int calcX = 0;
            int calcY = 0;

            for (int i = 0; i &lt; server.objectHandler.MaxObjects; i++) {
                if (server.itemHandler.DroppedItemsID[i] &gt; -1) {
                    tmpX = server.objectHandler.ObjectFireX[i];
                    tmpY = server.objectHandler.ObjectFireY[i];
                    calcX = tmpX - absX;
                    calcY = tmpY - absY;
                    if (calcX &gt;= -16 &amp;&amp; calcX &lt;= 15 &amp;&amp; calcY &gt;= -16
                            &amp;&amp; calcY &lt;= 15 &amp;&amp; FireDelete[i] == false
                            &amp;&amp; server.objectHandler.ObjectFireH[i]
                            == heightLevel) {
                        if (IsFireShowed[i] == false) {
                            IsFireShowed[i] = true;
                            ReplaceObject2(server.objectHandler.ObjectFireX[i],
                                    server.objectHandler.ObjectFireY[i],
                                    server.objectHandler.ObjectFireID[i], 0, 10);
                        }
                    } else if (IsFireShowed[i] == true || FireDelete[i] == true) {
                        ReplaceObject2(server.objectHandler.ObjectFireX[i],
                                server.objectHandler.ObjectFireY[i], -1, 0, 10);
                        int LastPlayerInList = -1;
                        int TotalPlayers = 0;

                        for (int j = 1; j &lt; PlayerHandler.maxPlayers; j++) {
                            if (PlayerHandler.players[j] != null) {
                                LastPlayerInList = j;
                                TotalPlayers++;
                            }
                        }
                        if (FireDelete[i] == true) {
                            int fireX = server.objectHandler.ObjectFireX[i];
                            int fireY = server.objectHandler.ObjectFireY[i];

                            FireDelete[i] = false;
                            server.objectHandler.ObjectFireDeletecount[i]++;
                            if ((LastPlayerInList == playerId
                                    || LastPlayerInList == -1)
                                            &amp;&amp; server.objectHandler.ObjectFireDeletecount[i]
                                                    == TotalPlayers) {
                                server.objectHandler.ResetFire(i);
                                for (int j = 1; j &lt; PlayerHandler.maxPlayers; j++) {
                                    if (PlayerHandler.players[j] != null) {
                                        PlayerHandler.players[j].IsFireShowed[i] = false;
                                    }
                                }
                                if (misc.random(2) == 1) {
                                    ItemHandler.addItem(592, fireX, fireY, 1,
                                            playerId, false);
                                }
                            }
                        } else {
                            IsFireShowed[i] = false;
                        }
                    }
                }
            }
            IsFireing = false;
        }
    }&lt;/blockquote&gt;


i use normal logs with the tinder and no fire comes out</description>
    
    <lastBuildDate>Mon, 28 Dec 2009 21:19:01 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/fire-making-help/322617.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>-fire making help-</title>
        <dc:creator><![CDATA[@recker450 recker450]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/recker450">@recker450</a> wrote:</p>
          <blockquote>
              <p>how do i make a fire come out?</p>
<p>this is my normal log one</p>
<blockquote>        case 1511:
            if (IsItemInBag(590) == true) {
                IsFiremaking = true;
                firemaking[0] = 1;
                firemaking[1] = 1;
                firemaking[2] = 40;
		CreateNewFire();
                IsMakingFire = true;
                resetFM();
		sendMessage("You light a fire.");
            } else {
                sendMessage(
                        "You need a " + GetItemName(590) + " to light a fire.");
            }
            break;</blockquote>
<p>and these are the firemaking voids and stuff</p>
<blockquote>    /* FIREMAKING*/
    public boolean firemaking() {
        if (playerLevel[playerFiremaking] &gt;= firemaking[1]) {
            if (actionTimer == 0 &amp;&amp; IsMakingFire == false) {
                actionAmount++;
                sendMessage("You attempt to light a fire...");
                OriginalWeapon = playerEquipment[playerWeapon];
                OriginalShield = playerEquipment[playerShield];
                playerEquipment[playerWeapon] = -1;
                playerEquipment[playerShield] = -1;
                actionTimer = 5;
                if (actionTimer &lt; 1) {
                    actionTimer = 1;
                }
                setAnimation(0x2DD);
                IsMakingFire = true;
            }
            if (actionTimer == 0 &amp;&amp; IsMakingFire == true) {
                addSkillXP((firemaking[2] * firemaking[3]), playerFiremaking);
                server.itemHandler.DroppedItemsSDelay[firemaking[4]] = server.itemHandler.MaxDropShowDelay
                        + 1;
                CreateNewFire();
                sendMessage("You light a fire.");
                playerEquipment[playerWeapon] = OriginalWeapon;
                OriginalWeapon = -1;
                resetAnimation();
                IsMakingFire = true;
                resetFM();
            }
        } else {
            sendMessage(
                    "You need " + firemaking[1] + " "
                    + statName[playerFiremaking] + " to light these logs.");
            resetFM();
            return false;
        }
        return true;
    }
<pre><code>public boolean resetFM() {
    firemaking[0] = 0;
    firemaking[1] = 0;
    firemaking[2] = 0;
    firemaking[4] = 0;
    skillX = -1;
    skillY = -1;
    IsUsingSkill = false;
    IsMakingFire = false;
    return true;
}

public void CreateNewFire() {
    for (int i = 0; i &lt; server.objectHandler.MaxObjects; i++) {
        if (server.objectHandler.ObjectFireID[i] == -1) {
            server.objectHandler.ObjectFireID[i] = 2732;
            server.objectHandler.ObjectFireX[i] = skillX;
            server.objectHandler.ObjectFireY[i] = skillY;
            server.objectHandler.ObjectFireH[i] = heightLevel;
            server.objectHandler.ObjectFireMaxDelay[i] = server.objectHandler.FireDelay
                    + (server.objectHandler.FireGianDelay * firemaking[0]);
            break;
        }
    }
}

public void AddObjectFire() {
    if (IsFireing == false) {
        IsFireing = true;
        int tmpX = 0;
        int tmpY = 0;
        int calcX = 0;
        int calcY = 0;

        for (int i = 0; i &lt; server.objectHandler.MaxObjects; i++) {
            if (server.itemHandler.DroppedItemsID[i] &gt; -1) {
                tmpX = server.objectHandler.ObjectFireX[i];
                tmpY = server.objectHandler.ObjectFireY[i];
                calcX = tmpX - absX;
                calcY = tmpY - absY;
                if (calcX &gt;= -16 &amp;&amp; calcX &lt;= 15 &amp;&amp; calcY &gt;= -16
                        &amp;&amp; calcY &lt;= 15 &amp;&amp; FireDelete[i] == false
                        &amp;&amp; server.objectHandler.ObjectFireH[i]
                        == heightLevel) {
                    if (IsFireShowed[i] == false) {
                        IsFireShowed[i] = true;
                        ReplaceObject2(server.objectHandler.ObjectFireX[i],
                                server.objectHandler.ObjectFireY[i],
                                server.objectHandler.ObjectFireID[i], 0, 10);
                    }
                } else if (IsFireShowed[i] == true || FireDelete[i] == true) {
                    ReplaceObject2(server.objectHandler.ObjectFireX[i],
                            server.objectHandler.ObjectFireY[i], -1, 0, 10);
                    int LastPlayerInList = -1;
                    int TotalPlayers = 0;

                    for (int j = 1; j &lt; PlayerHandler.maxPlayers; j++) {
                        if (PlayerHandler.players[j] != null) {
                            LastPlayerInList = j;
                            TotalPlayers++;
                        }
                    }
                    if (FireDelete[i] == true) {
                        int fireX = server.objectHandler.ObjectFireX[i];
                        int fireY = server.objectHandler.ObjectFireY[i];

                        FireDelete[i] = false;
                        server.objectHandler.ObjectFireDeletecount[i]++;
                        if ((LastPlayerInList == playerId
                                || LastPlayerInList == -1)
                                        &amp;&amp; server.objectHandler.ObjectFireDeletecount[i]
                                                == TotalPlayers) {
                            server.objectHandler.ResetFire(i);
                            for (int j = 1; j &lt; PlayerHandler.maxPlayers; j++) {
                                if (PlayerHandler.players[j] != null) {
                                    PlayerHandler.players[j].IsFireShowed[i] = false;
                                }
                            }
                            if (misc.random(2) == 1) {
                                ItemHandler.addItem(592, fireX, fireY, 1,
                                        playerId, false);
                            }
                        }
                    } else {
                        IsFireShowed[i] = false;
                    }
                }
            }
        }
        IsFireing = false;
    }
}&lt;/blockquote&gt;
</code></pre>
<p>i use normal logs with the tinder and no fire comes out</p>
</blockquote>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/fire-making-help/322617/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/fire-making-help/322617/1</link>
        <pubDate>Mon, 28 Dec 2009 21:19:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-322617-1</guid>
        <source url="https://forum.moparisthebest.com/t/fire-making-help/322617.rss">-fire making help-</source>
      </item>
  </channel>
</rss>
