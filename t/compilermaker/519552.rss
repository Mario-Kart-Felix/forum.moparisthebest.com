<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>CompilerMaker</title>
    <link>https://forum.moparisthebest.com/t/compilermaker/519552</link>
    <description>Although I strongly suggest the usage of IDEs, sometimes for testing purposes I want to run my Client on a batch file and seeing as a lot of people still go around asking for compilers, decided to quickly make a program that will give you the directories you need to put on the batch file, so you don&#39;t have to manually add them yourself (also some people don&#39;t add compilers as some sort of dumb anti-leech).

Outcome of usage on a client: [code]src\accounts\*.java src\constants\*.java src\interfaces\*.java src\sign\*.java src\util\*.java [/code]

[code]import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

public class CompilerMaker {

	public static void main(String[] args) throws IOException {
		StringBuilder builder = new StringBuilder();
		File directory = new File(&quot;./src/&quot;);
		for (File folder : directory.listFiles()) {
			if (folder.isDirectory()) {
				boolean hasFiles = false;
				for (@SuppressWarnings(&quot;unused&quot;) File file : folder.listFiles()) {
					hasFiles = true;
					break;
				}
				if (hasFiles) {
					builder.append(folder.getPath().substring(2) + &quot;\\*.java &quot;);
					System.out.println(&quot;appending new directory to builder...&quot;);
				}
			}
		}
		System.out.println(&quot;Compiler information has been written!&quot;);
		BufferedWriter writer = new BufferedWriter(new FileWriter(&quot;./compiler.txt&quot;));
		writer.write(builder.toString());
		writer.close();
	}
}[/code]</description>
    
    <lastBuildDate>Sat, 18 May 2013 20:09:42 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/compilermaker/519552.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>CompilerMaker</title>
        <dc:creator><![CDATA[@HcoJustin HcoJustin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hcojustin">@HcoJustin</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="3" data-topic="519552">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/relexlawl/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> relexlawl:</div>
<blockquote>
<p>On your other point, yes, but what if you don’t have something referenced from another directory? You should just do it anyway. (this precaution will help you for larger scale projects, i.e servers)</p>
</blockquote>
</aside>
<p>The only time something would not be referenced would be if it was loaded at runtime. RS2HD does this with its PacketHandlers, requiring that directory to be compiled separately.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/compilermaker/519552/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/compilermaker/519552/4</link>
        <pubDate>Sat, 18 May 2013 20:09:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-519552-4</guid>
        <source url="https://forum.moparisthebest.com/t/compilermaker/519552.rss">CompilerMaker</source>
      </item>
      <item>
        <title>CompilerMaker</title>
        <dc:creator><![CDATA[@relexlawl relexlawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/relexlawl">@relexlawl</a> wrote:</p>
          <blockquote>
              <p>[quote=“HcoJustin, post:2, topic:519552”]<code>                                boolean hasFiles = false;
                                for (@SuppressWarnings("unused") File file : folder.listFiles()) {
                                        hasFiles = true;
                                        break;
                                }
                                if (hasFiles) {</code><br>
Erm…</p>
<p><code>                                if (folder.listFiles().length &gt; 0) {
</code></p>
<p>You do realize that if a class is referenced in one of the files already being compiled it will compile it too? So if Client.java references sign.Signlink, it will inherently be compiled (As long as the sources are in the classpath).[/quote]</p>
<p>My bad on top part, like I said I just wrote it up quickly, didn’t really think it through (though it’s won’t even make a visible difference since it’s using break on the first loop anyway).</p>
<p>On your other point, yes, but what if you don’t have something referenced from another directory? You should just do it anyway. (this precaution will help you for larger scale projects, i.e servers)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/compilermaker/519552/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/compilermaker/519552/3</link>
        <pubDate>Sat, 18 May 2013 19:52:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-519552-3</guid>
        <source url="https://forum.moparisthebest.com/t/compilermaker/519552.rss">CompilerMaker</source>
      </item>
      <item>
        <title>CompilerMaker</title>
        <dc:creator><![CDATA[@HcoJustin HcoJustin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hcojustin">@HcoJustin</a> wrote:</p>
          <blockquote>
              <p><code>                                boolean hasFiles = false;
                                for (@SuppressWarnings("unused") File file : folder.listFiles()) {
                                        hasFiles = true;
                                        break;
                                }
                                if (hasFiles) {</code><br>
Erm…</p>
<p><code>                                if (folder.listFiles().length &gt; 0) {
</code></p>
<p>You do realize that if a class is referenced in one of the files already being compiled it will compile it too? So if Client.java references sign.Signlink, it will inherently be compiled (As long as the sources are in the classpath).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/compilermaker/519552/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/compilermaker/519552/2</link>
        <pubDate>Sat, 18 May 2013 19:43:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-519552-2</guid>
        <source url="https://forum.moparisthebest.com/t/compilermaker/519552.rss">CompilerMaker</source>
      </item>
      <item>
        <title>CompilerMaker</title>
        <dc:creator><![CDATA[@relexlawl relexlawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/relexlawl">@relexlawl</a> wrote:</p>
          <blockquote>
              <p>Although I strongly suggest the usage of IDEs, sometimes for testing purposes I want to run my Client on a batch file and seeing as a lot of people still go around asking for compilers, decided to quickly make a program that will give you the directories you need to put on the batch file, so you don’t have to manually add them yourself (also some people don’t add compilers as some sort of dumb anti-leech).</p>
<p>Outcome of usage on a client: <code>src\accounts\*.java src\constants\*.java src\interfaces\*.java src\sign\*.java src\util\*.java </code></p>
<p>[code]import java.io.BufferedWriter;<br>
import java.io.File;<br>
import java.io.FileWriter;<br>
import java.io.IOException;</p>
<p>public class CompilerMaker {</p>
<pre><code>public static void main(String[] args) throws IOException {
	StringBuilder builder = new StringBuilder();
	File directory = new File("./src/");
	for (File folder : directory.listFiles()) {
		if (folder.isDirectory()) {
			boolean hasFiles = false;
			for (@SuppressWarnings("unused") File file : folder.listFiles()) {
				hasFiles = true;
				break;
			}
			if (hasFiles) {
				builder.append(folder.getPath().substring(2) + "\\*.java ");
				System.out.println("appending new directory to builder...");
			}
		}
	}
	System.out.println("Compiler information has been written!");
	BufferedWriter writer = new BufferedWriter(new FileWriter("./compiler.txt"));
	writer.write(builder.toString());
	writer.close();
}
</code></pre>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/compilermaker/519552/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/compilermaker/519552/1</link>
        <pubDate>Sat, 18 May 2013 18:48:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-519552-1</guid>
        <source url="https://forum.moparisthebest.com/t/compilermaker/519552.rss">CompilerMaker</source>
      </item>
  </channel>
</rss>
