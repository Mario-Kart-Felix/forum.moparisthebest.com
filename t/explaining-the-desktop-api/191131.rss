<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Explaining the Desktop API</title>
    <link>https://forum.moparisthebest.com/t/explaining-the-desktop-api/191131</link>
    <description>tried to explain it the best i could please correct me if i am wrong on anything
thank you

the nice thing about the desktop api is that it can use 
your default browser to search the internet
edit a file using your default text writer
open/finds files to bring you to your location
it can mail messages to your firends
and it can also print using your computers current printing system

we have to start out with a single method first
in this example ill be using the method test

[code]public static void Test() {[/code]
it is static cus later on args will be declared as static

now you&#39;ll need to import the desktop api
[code]Desktop d = Desktop.getDesktop();[/code]

[code]Desktop d[/code]
imports the the desktop api and the d will be representing desktop

[code]Desktop.action[/code]
the action will return the content or browser of the current O.S.

next we&#39;ll have to through in a try to make sure it will catch any unesecary exceptions
the catch we will be using is the IOException (java.io.IOException;)

now this is where the we determine what is actuly happening
[code]d.METHOD():[/code]

some of the methods
[code]browse(URI uri)[/code]

the method browse will be used for viewing the internet
URI will need the import of java.net.URI; 
to browse the internet using your defualt broswer

uri will be the path or site for your internet browser
example:
[code]d.browse(new URI(&quot;http://runebar.org/index.php?act=post&amp;do=new_post&amp;f=48&quot;));[/code]


[code]edit(File file)[/code]
the method edit will be used for editing a file
it will find the location and open up the containing file
this is same as the method open i really see no difference

example
[code]String File = &quot;&quot;;
d.edit(new File(&quot;c:\......&quot;);[/code]

there is no difference for open except for the method name
[code]String File = &quot;&quot;;
d.open(new File(&quot;c:\......&quot;));[/code]

there is little difference for print except that it will print the location you are finding
[code]String File = &quot;&quot;;
d.print(new File(&quot;c:\......&quot;));[/code]

for mailing the main methods are
[code]mail()[/code]
this is used to launch the default mail/messanger application

[code]mail(URI mailtoURI)[/code]
is used to go right to the user the uri is directed
see the browse method for more information on URI&#39;s


when your done heres a example of what it can look like if you use a JOptionpane

[code]	   public static void test() {
	Desktop d = Desktop.getDesktop();
			try {
	File = JOptionPane.showInputDialog( &quot;Enter The File You Wish to Search For?&quot; );
	d.open( new File( File ) ); 
	} catch(IOException IOE) {}
}[/code]

now to get this all to work you&#39;ll need args to run this little program
[code]public static void main( String args[] ) {  

	test();
	}

}[/code]

you could make the method test and declare it in args or your could just put the script in args

note - youll need this packages
[code]import java.awt.*;
import java.io.*;
import javax.swing.*;[/code]

for more information on desktop go here
[url=http://&quot;http://java.sun.com/javase/6/docs/api/java/awt/Desktop.html&quot;]http://java.sun.com/javase/6/docs/api/java/awt/Desktop.html[/url]</description>
    
    <lastBuildDate>Fri, 21 Mar 2008 02:00:41 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/explaining-the-desktop-api/191131.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Explaining the Desktop API</title>
        <dc:creator><![CDATA[@openice123 openice123]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/openice123">@openice123</a> wrote:</p>
          <blockquote>
              <p>tried to explain it the best i could please correct me if i am wrong on anything<br>
thank you</p>
<p>the nice thing about the desktop api is that it can use<br>
your default browser to search the internet<br>
edit a file using your default text writer<br>
open/finds files to bring you to your location<br>
it can mail messages to your firends<br>
and it can also print using your computers current printing system</p>
<p>we have to start out with a single method first<br>
in this example ill be using the method test</p>
<pre><code class="lang-auto">public static void Test() {</code></pre>
<p>it is static cus later on args will be declared as static</p>
<p>now you’ll need to import the desktop api</p>
<pre><code class="lang-auto">Desktop d = Desktop.getDesktop();</code></pre>
<pre><code class="lang-auto">Desktop d</code></pre>
<p>imports the the desktop api and the d will be representing desktop</p>
<pre><code class="lang-auto">Desktop.action</code></pre>
<p>the action will return the content or browser of the current O.S.</p>
<p>next we’ll have to through in a try to make sure it will catch any unesecary exceptions<br>
the catch we will be using is the IOException (java.io.IOException;)</p>
<p>now this is where the we determine what is actuly happening</p>
<pre><code class="lang-auto">d.METHOD():</code></pre>
<p>some of the methods</p>
<pre><code class="lang-auto">browse(URI uri)</code></pre>
<p>the method browse will be used for viewing the internet<br>
URI will need the import of java.net.URI;<br>
to browse the internet using your defualt broswer</p>
<p>uri will be the path or site for your internet browser<br>
example:</p>
<pre><code class="lang-auto">d.browse(new URI("http://runebar.org/index.php?act=post&amp;do=new_post&amp;f=48"));</code></pre>
<pre><code class="lang-auto">edit(File file)</code></pre>
<p>the method edit will be used for editing a file<br>
it will find the location and open up the containing file<br>
this is same as the method open i really see no difference</p>
<p>example</p>
<p><code>String File = "";
d.edit(new File("c:\......");</code></p>
<p>there is no difference for open except for the method name</p>
<p><code>String File = "";
d.open(new File("c:\......"));</code></p>
<p>there is little difference for print except that it will print the location you are finding</p>
<p><code>String File = "";
d.print(new File("c:\......"));</code></p>
<p>for mailing the main methods are</p>
<pre><code class="lang-auto">mail()</code></pre>
<p>this is used to launch the default mail/messanger application</p>
<pre><code class="lang-auto">mail(URI mailtoURI)</code></pre>
<p>is used to go right to the user the uri is directed<br>
see the browse method for more information on URI’s</p>
<p>when your done heres a example of what it can look like if you use a JOptionpane</p>
<p><code>	   public static void test() {
	Desktop d = Desktop.getDesktop();
			try {
	File = JOptionPane.showInputDialog( "Enter The File You Wish to Search For?" );
	d.open( new File( File ) ); 
	} catch(IOException IOE) {}
}</code></p>
<p>now to get this all to work you’ll need args to run this little program</p>
<p>[code]public static void main( String args[] ) {</p>
<pre><code>test();
}
</code></pre>
<p>}[/code]</p>
<p>you could make the method test and declare it in args or your could just put the script in args</p>
<p>note - youll need this packages</p>
<p><code>import java.awt.*;
import java.io.*;
import javax.swing.*;</code></p>
<p>for more information on desktop go here<br>
<a data-bbcode="true">http://java.sun.com/javase/6/docs/api/java/awt/Desktop.html</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/explaining-the-desktop-api/191131/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/explaining-the-desktop-api/191131/1</link>
        <pubDate>Fri, 21 Mar 2008 02:00:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-191131-1</guid>
        <source url="https://forum.moparisthebest.com/t/explaining-the-desktop-api/191131.rss">Explaining the Desktop API</source>
      </item>
  </channel>
</rss>
