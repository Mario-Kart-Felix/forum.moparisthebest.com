<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Almost completely refactored Player Update protocol (317)</title>
    <link>https://forum.moparisthebest.com/t/almost-completely-refactored-player-update-protocol-317/545419</link>
    <description>Here&#39;s a player updating protocol that I&#39;ve refactored. Some of it has been from other sources although I&#39;m not sure of their authors. A lot of it is my work.

There are a few bits missing in the 0x100 (graphics) and 0x8 (animation) procedures which I simply can&#39;t find any meaning for. If you have any idea, please let me know.

[code=Java]    private void updatePlayerupdateType(Stream stream, int updateType, Player player, int playerId)
    {
        if((updateType &amp; 0x400) != 0)
        {
            player.startX = stream.getUnsignedByteS();
            player.startY = stream.getUnsignedByteS();
            player.endX = stream.getUnsignedByteS();
            player.endY = stream.getUnsignedByteS();
            player.speedToStart = stream.getUnsignedShortA() + loopCycle;
            player.speedToEnd = stream.getUnsignedLEShortA() + loopCycle;
            player.direction = stream.getUnsignedByteS();
            player.resetPath();
        }
        if((updateType &amp; 0x100) != 0)
        {
            player.graphicId = stream.getUnsignedShort();
            int delay = stream.getInt();
            player.graphicHeight = delay &gt;&gt; 16;
            player.graphicEndCycle = loopCycle + (delay &amp; 0xffff);
            player.currentAnimation = 0;
            player.anInt1522 = 0;
            if(player.graphicEndCycle &gt; loopCycle)
                player.currentAnimation = -1;
            if(player.graphicId == 65535)
                player.graphicId = -1;
        }
        if((updateType &amp; 8) != 0)
        {
            int animationId = stream.getUnsignedShort();
            if(animationId == 65535)
                animationId = -1;
            int animationDelay = stream.getUnsignedByteC();
            if(animationId == player.animation &amp;&amp; animationId != -1)
            {
                int i3 = Animation.anims[animationId].anInt365;
                if(i3 == 1)
                {
                    player.anInt1527 = 0;
                    player.anInt1528 = 0;
                    player.animationDelay = animationDelay;
                    player.anInt1530 = 0;
                }
                if(i3 == 2)
                    player.anInt1530 = 0;
            } else
            if(animationId == -1 || player.animation == -1 || Animation.anims[animationId].anInt359 &gt;= Animation.anims[player.animation].anInt359)
            {
                player.animation = animationId;
                player.anInt1527 = 0;
                player.anInt1528 = 0;
                player.animationDelay = animationDelay;
                player.anInt1530 = 0;
                player.anInt1542 = player.pathLength;
            }
        }
        if((updateType &amp; 4) != 0)
        {
            player.textSpoken = stream.getString();
            if(player.textSpoken.charAt(0) == &#39;~&#39;)
            {
                player.textSpoken = player.textSpoken.substring(1);
                pushMessage(player.textSpoken, 2, player.name);
            } else
            if(player == localPlayer)
                pushMessage(player.textSpoken, 2, player.name);
            player.chatColour = 0;
            player.chatEffect = 0;
            player.textCycle = 150;
        }
        if((updateType &amp; 0x80) != 0)
        {
            int colourAndEffect = stream.getUnsignedShort();
            int rights = stream.getUnsignedByte();
            int messageLength = stream.getUnsignedByteC();
            int originalOffset = stream.currentOffset;
            if(player.name != null &amp;&amp; player.visible)
            {
                long nameAsLong = TextClass.longForName(player.name);
                boolean ignored = false;
                if(rights &lt;= 1)
                {
                    for(int p = 0; p &lt; ignoreCount; p++)
                    {
                        if(ignoreListAsLongs[p] != nameAsLong)
                            continue;
                        ignored = true;
                        break;
                    }

                }
                if(!ignored &amp;&amp; inTutorial == 0)
                    try
                    {
                        textStream.currentOffset = 0;
                        stream.getBytes(messageLength, 0, textStream.buffer);
                        textStream.currentOffset = 0;
                        String text = TextInput.readFromStream(messageLength, textStream);
                        text = Censor.doCensor(text);
                        player.textSpoken = text;
                        player.chatColour = colourAndEffect &gt;&gt; 8;
	                    player.rights = rights;

                        //entityMessage(player);
	
                        player.chatEffect = colourAndEffect &amp; 0xff;
                        player.textCycle = 150;
                        if(rights == 2 || rights == 3)
                            pushMessage(text, 1, &quot;@cr2@&quot; + player.name);
                        else
                        if(rights == 1)
                            pushMessage(text, 1, &quot;@cr1@&quot; + player.name);
                        else
                            pushMessage(text, 2, player.name);
                    }
                    catch(Exception exception)
                    {
                        signlink.reporterror(&quot;cde2&quot;);
                    }
            }
            stream.currentOffset = originalOffset + messageLength;
        }
        if((updateType &amp; 1) != 0)
        {
            player.interactingEntity = stream.getUnsignedShort();
            if(player.interactingEntity == 65535)
                player.interactingEntity = -1;
        }
        if((updateType &amp; 0x10) != 0)
        {
            int appearanceBufferSize = stream.getUnsignedByteC();
            byte _appearanceBuffer[] = new byte[appearanceBufferSize];
            Stream appearanceBuffer = new Stream(_appearanceBuffer);
            stream.readBytes(appearanceBufferSize, 0, _appearanceBuffer);
            playerBuffer[playerId] = appearanceBuffer;
            player.updatePlayer(appearanceBuffer);
        }
        if((updateType &amp; 2) != 0)
        {
            player.faceTowardX = stream.getUnsignedShortA();
            player.faceTowardY = stream.getUnsignedShort();
        }
        if((updateType &amp; 0x20) != 0)
        {
            int hitDamage = stream.getUnsignedByte();
            int hitType = stream.getUnsignedByteA();
            player.updateHitData(hitType, hitDamage, loopCycle);
            player.loopCycleStatus = loopCycle + 300;
            player.currentHealth = stream.getUnsignedByteC();
            player.maxHealth = stream.getUnsignedByte();
        }
        if((updateType &amp; 0x200) != 0)
        {
            int hitDamage = stream.getUnsignedByte();
            int hitType = stream.getUnsignedByteS();
            player.updateHitData(hitType, hitDamage, loopCycle);
            player.loopCycleStatus = loopCycle + 300;
            player.currentHealth = stream.getUnsignedByte();
            player.maxHealth = stream.getUnsignedByteC();
        }
    }[/code]</description>
    
    <lastBuildDate>Mon, 28 Jul 2014 13:53:07 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/almost-completely-refactored-player-update-protocol-317/545419.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Almost completely refactored Player Update protocol (317)</title>
        <dc:creator><![CDATA[@Ambokile Ambokile]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ambokile">@Ambokile</a> wrote:</p>
          <blockquote>
              <p>Here’s a player updating protocol that I’ve refactored. Some of it has been from other sources although I’m not sure of their authors. A lot of it is my work.</p>
<p>There are a few bits missing in the 0x100 (graphics) and 0x8 (animation) procedures which I simply can’t find any meaning for. If you have any idea, please let me know.</p>
<p>[code=Java]    private void updatePlayerupdateType(Stream stream, int updateType, Player player, int playerId)<br>
{<br>
if((updateType &amp; 0x400) != 0)<br>
{<br>
player.startX = stream.getUnsignedByteS();<br>
player.startY = stream.getUnsignedByteS();<br>
player.endX = stream.getUnsignedByteS();<br>
player.endY = stream.getUnsignedByteS();<br>
player.speedToStart = stream.getUnsignedShortA() + loopCycle;<br>
player.speedToEnd = stream.getUnsignedLEShortA() + loopCycle;<br>
player.direction = stream.getUnsignedByteS();<br>
player.resetPath();<br>
}<br>
if((updateType &amp; 0x100) != 0)<br>
{<br>
player.graphicId = stream.getUnsignedShort();<br>
int delay = stream.getInt();<br>
player.graphicHeight = delay &gt;&gt; 16;<br>
player.graphicEndCycle = loopCycle + (delay &amp; 0xffff);<br>
player.currentAnimation = 0;<br>
player.anInt1522 = 0;<br>
if(player.graphicEndCycle &gt; loopCycle)<br>
player.currentAnimation = -1;<br>
if(player.graphicId == 65535)<br>
player.graphicId = -1;<br>
}<br>
if((updateType &amp; 8) != 0)<br>
{<br>
int animationId = stream.getUnsignedShort();<br>
if(animationId == 65535)<br>
animationId = -1;<br>
int animationDelay = stream.getUnsignedByteC();<br>
if(animationId == player.animation &amp;&amp; animationId != -1)<br>
{<br>
int i3 = Animation.anims[animationId].anInt365;<br>
if(i3 == 1)<br>
{<br>
player.anInt1527 = 0;<br>
player.anInt1528 = 0;<br>
player.animationDelay = animationDelay;<br>
player.anInt1530 = 0;<br>
}<br>
if(i3 == 2)<br>
player.anInt1530 = 0;<br>
} else<br>
if(animationId == -1 || player.animation == -1 || Animation.anims[animationId].anInt359 &gt;= Animation.anims[player.animation].anInt359)<br>
{<br>
player.animation = animationId;<br>
player.anInt1527 = 0;<br>
player.anInt1528 = 0;<br>
player.animationDelay = animationDelay;<br>
player.anInt1530 = 0;<br>
player.anInt1542 = player.pathLength;<br>
}<br>
}<br>
if((updateType &amp; 4) != 0)<br>
{<br>
player.textSpoken = stream.getString();<br>
if(player.textSpoken.charAt(0) == ‘~’)<br>
{<br>
player.textSpoken = player.textSpoken.substring(1);<br>
pushMessage(player.textSpoken, 2, player.name);<br>
} else<br>
if(player == localPlayer)<br>
pushMessage(player.textSpoken, 2, player.name);<br>
player.chatColour = 0;<br>
player.chatEffect = 0;<br>
player.textCycle = 150;<br>
}<br>
if((updateType &amp; 0x80) != 0)<br>
{<br>
int colourAndEffect = stream.getUnsignedShort();<br>
int rights = stream.getUnsignedByte();<br>
int messageLength = stream.getUnsignedByteC();<br>
int originalOffset = stream.currentOffset;<br>
if(player.name != null &amp;&amp; player.visible)<br>
{<br>
long nameAsLong = TextClass.longForName(player.name);<br>
boolean ignored = false;<br>
if(rights &lt;= 1)<br>
{<br>
for(int p = 0; p &lt; ignoreCount; p++)<br>
{<br>
if(ignoreListAsLongs[p] != nameAsLong)<br>
continue;<br>
ignored = true;<br>
break;<br>
}</p>
<pre><code>            }
            if(!ignored &amp;&amp; inTutorial == 0)
                try
                {
                    textStream.currentOffset = 0;
                    stream.getBytes(messageLength, 0, textStream.buffer);
                    textStream.currentOffset = 0;
                    String text = TextInput.readFromStream(messageLength, textStream);
                    text = Censor.doCensor(text);
                    player.textSpoken = text;
                    player.chatColour = colourAndEffect &gt;&gt; 8;
                    player.rights = rights;

                    //entityMessage(player);

                    player.chatEffect = colourAndEffect &amp; 0xff;
                    player.textCycle = 150;
                    if(rights == 2 || rights == 3)
                        pushMessage(text, 1, "@cr2@" + player.name);
                    else
                    if(rights == 1)
                        pushMessage(text, 1, "@cr1@" + player.name);
                    else
                        pushMessage(text, 2, player.name);
                }
                catch(Exception exception)
                {
                    signlink.reporterror("cde2");
                }
        }
        stream.currentOffset = originalOffset + messageLength;
    }
    if((updateType &amp; 1) != 0)
    {
        player.interactingEntity = stream.getUnsignedShort();
        if(player.interactingEntity == 65535)
            player.interactingEntity = -1;
    }
    if((updateType &amp; 0x10) != 0)
    {
        int appearanceBufferSize = stream.getUnsignedByteC();
        byte _appearanceBuffer[] = new byte[appearanceBufferSize];
        Stream appearanceBuffer = new Stream(_appearanceBuffer);
        stream.readBytes(appearanceBufferSize, 0, _appearanceBuffer);
        playerBuffer[playerId] = appearanceBuffer;
        player.updatePlayer(appearanceBuffer);
    }
    if((updateType &amp; 2) != 0)
    {
        player.faceTowardX = stream.getUnsignedShortA();
        player.faceTowardY = stream.getUnsignedShort();
    }
    if((updateType &amp; 0x20) != 0)
    {
        int hitDamage = stream.getUnsignedByte();
        int hitType = stream.getUnsignedByteA();
        player.updateHitData(hitType, hitDamage, loopCycle);
        player.loopCycleStatus = loopCycle + 300;
        player.currentHealth = stream.getUnsignedByteC();
        player.maxHealth = stream.getUnsignedByte();
    }
    if((updateType &amp; 0x200) != 0)
    {
        int hitDamage = stream.getUnsignedByte();
        int hitType = stream.getUnsignedByteS();
        player.updateHitData(hitType, hitDamage, loopCycle);
        player.loopCycleStatus = loopCycle + 300;
        player.currentHealth = stream.getUnsignedByte();
        player.maxHealth = stream.getUnsignedByteC();
    }
}[/code]</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/almost-completely-refactored-player-update-protocol-317/545419/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/almost-completely-refactored-player-update-protocol-317/545419/1</link>
        <pubDate>Mon, 28 Jul 2014 13:53:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-545419-1</guid>
        <source url="https://forum.moparisthebest.com/t/almost-completely-refactored-player-update-protocol-317/545419.rss">Almost completely refactored Player Update protocol (317)</source>
      </item>
  </channel>
</rss>
