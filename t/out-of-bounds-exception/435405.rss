<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Out of bounds exception</title>
    <link>https://forum.moparisthebest.com/t/out-of-bounds-exception/435405</link>
    <description>Im adding a clipmap for following and i get this error :s

[CODE][3/6/12 4:55 PM]: Launching Kandarin...
[3/6/12 4:55 PM]: java.lang.ArrayIndexOutOfBoundsException: 912
[3/6/12 4:55 PM]:       at server.world.WorldMap.loadWorldMap(WorldMap.java:165)

[3/6/12 4:55 PM]:       at server.Server.main(Server.java:117)
[3/6/12 4:55 PM]: Loaded clipmap in 54ms.
[3/6/12 4:55 PM]: Server listening on port 0.0.0.0:43594
[/code]

world map class

[CODE]
package server.world;

import java.io.RandomAccessFile;
import java.util.HashMap;
import java.util.Hashtable;
import server.util.Misc;

public final class WorldMap {

	public static Hashtable&lt;Integer, GameObject&gt; gameObjects = new Hashtable&lt;Integer, GameObject&gt;();
	public static boolean solidObjectExists(int x, int y) {
		GameObject go = gameObjects.get(y + (x &lt;&lt; 16));
		if (go != null &amp;&amp; go.type() == 2 &amp;&amp; go.x() == x &amp;&amp; go.y() == y) {
			return true;
		}
		if (go != null &amp;&amp; go.type() == 10 &amp;&amp; go.x() == x &amp;&amp; go.y() == y) {
			return true;
		}
		if (go != null &amp;&amp; go.type() == 9 &amp;&amp; go.x() == x &amp;&amp; go.y() == y) {
			return true;
		}
		if (go != null &amp;&amp; go.type() == 8 &amp;&amp; go.x() == x &amp;&amp; go.y() == y) {
			return true;
		}
		if (go != null &amp;&amp; go.type() == 7 &amp;&amp; go.x() == x &amp;&amp; go.y() == y) {
			return true;
		}
		if (go != null &amp;&amp; go.type() == 4 &amp;&amp; go.x() == x &amp;&amp; go.y() == y) {
			return true;
		}
		return false;
	}

	public static boolean canMove(int baseX, int baseY, int toX, int toY) {
		int diffX = baseX - toX;
		int diffY = baseY - toY;
		int moveX = 0;
		int moveY = 0;
		if (diffX &lt; 0) {
			moveX = 1;
		} else if (diffX &gt; 0) {
			moveX = -1;
		}
		if (diffY &lt; 0) {
			moveY = 1;
		} else if (diffY &gt; 0) {
			moveY = -1;
		}
		if (moveX &gt; 0 &amp;&amp; moveY &gt; 0) {
			if (solidObjectExists(baseX + 1, baseY + 1)
					|| solidObjectExists(baseX + 1, baseY)
					|| solidObjectExists(baseX, baseY + 1)) {
				return false;
			}
		} else if (moveX &lt; 0 &amp;&amp; moveY &lt; 0) {
			if (solidObjectExists(baseX - 1, baseY - 1)
					|| solidObjectExists(baseX - 1, baseY)
					|| solidObjectExists(baseX, baseY - 1)) {
				return false;
			}
		} else if (moveX &gt; 0 &amp;&amp; moveY &lt; 0) {
			if (solidObjectExists(baseX + 1, baseY - 1)
					|| solidObjectExists(baseX + 1, baseY)
					|| solidObjectExists(baseX, baseY - 1)) {
				return false;
			}
		} else if (moveX &lt; 0 &amp;&amp; moveY &gt; 0) {
			if (solidObjectExists(baseX - 1, baseY + 1)
					|| solidObjectExists(baseX - 1, baseY)
					|| solidObjectExists(baseX, baseY + 1)) {
				return false;
			}
		} else if (moveX &lt; 0 &amp;&amp; moveY == 0) {
			if (solidObjectExists(baseX - 1, baseY)) {
				return false;
			}
		} else if (moveX &gt; 0 &amp;&amp; moveY == 0) {
			if (solidObjectExists(baseX + 1, baseY)) {
				return false;
			}
		} else if (moveX == 0 &amp;&amp; moveY &lt; 0) {
			if (solidObjectExists(baseX, baseY - 1)) {
				return false;
			}
		} else if (moveX == 0 &amp;&amp; moveY &gt; 0) {
			if (solidObjectExists(baseX, baseY + 1)) {
				return false;
			}
		}
		return true;
	}

	public static final int maxObjects = 2000000;
	public static int[] objectId = new int [maxObjects];
   public static int[] objectX = new int [maxObjects];
   public static int[] objectY = new int [maxObjects];
   public static int[] objectHeight = new int [maxObjects];
   public static int[] objectType = new int [maxObjects];
   public static int[] objectFace = new int [maxObjects];

	public static boolean isWalkAble(int height, int absX, int absY, int toAbsX, int toAbsY) {
      if (absX == toAbsX &amp;&amp; absY == toAbsY) return true;
      int direction1 = getDirection(absX, absY, toAbsX, toAbsY);
      int direction2 = getOppositeDirection(absX, absY, toAbsX, toAbsY);
      if (direction1 == -1 || direction2 == -1) {
         Misc.println(&quot;Direction Bug from(&quot; + absX + &quot;,&quot; + absY + &quot;) to (&quot; + toAbsX + &quot;,&quot; + toAbsY + &quot;) Height(&quot; + height + &quot;) abs(&quot; + toAbsX + &quot;,&quot; + toAbsY + &quot;)&quot;);
         return false;
      }
      for (int i = 0; i &lt; maxObjects; i++) {
        if (objectId[i] == -1) continue;
         if (objectHeight[i] != height) continue;
         if (objectType[i] == 22) continue;
         if (objectX[i] == toAbsX &amp;&amp; objectY[i] == toAbsY &amp;&amp; height == objectHeight[i]) 
		return false;

	  }
	  return true;
   }

    	public static int getOppositeDirection(int absX, int absY, int toAbsX, int toAbsY) {
// we must reverse direction, walking north will require object to stand south
      if ((absX - 1) == toAbsX &amp;&amp; absY == toAbsY) return 2;
      if ((absX + 1) == toAbsX &amp;&amp; absY == toAbsY) return 0;
      if (absX == toAbsX &amp;&amp; (absY - 1) == toAbsY) return 1;
      if (absX == toAbsX &amp;&amp; (absY + 1) == toAbsY) return 3;
      if ((absX - 1) == toAbsX &amp;&amp; (absY - 1) == toAbsY) return 11;
      if ((absX + 1) == toAbsX &amp;&amp; (absY - 1) == toAbsY) return 10;
      if ((absX - 1) == toAbsX &amp;&amp; (absY + 1) == toAbsY) return 8;
      if ((absX + 1) == toAbsX &amp;&amp; (absY + 1) == toAbsY) return 9;
	  if (absY == toAbsY &amp;&amp; (absX - 1) == toAbsX) return 12;
      if (absY == toAbsY &amp;&amp; (absX + 1) == toAbsX) return 13;
      return -1;
   }

	public static int getDirection(int absX, int absY, int toAbsX, int toAbsY) {
// we must reverse direction, walking north will require object to stand south
      if ((absX - 1) == toAbsX &amp;&amp; absY == toAbsY) return 0;
      if ((absX + 1) == toAbsX &amp;&amp; absY == toAbsY) return 2;
      if (absX == toAbsX &amp;&amp; (absY - 1) == toAbsY) return 3;
      if (absX == toAbsX &amp;&amp; (absY + 1) == toAbsY) return 1;
      if ((absX - 1) == toAbsX &amp;&amp; (absY - 1) == toAbsY) return 9;
      if ((absX + 1) == toAbsX &amp;&amp; (absY - 1) == toAbsY) return 8;
      if ((absX - 1) == toAbsX &amp;&amp; (absY + 1) == toAbsY) return 10;
      if ((absX + 1) == toAbsX &amp;&amp; (absY + 1) == toAbsY) return 11;
	  if (absY == toAbsY &amp;&amp; (absX - 1) == toAbsX) return 12;
      if (absY == toAbsY &amp;&amp; (absX + 1) == toAbsX) return 13;
      return -1;
   }



	@SuppressWarnings(&quot;unused&quot;)
	public static void loadWorldMap() {
		try {
			RandomAccessFile in = null;
			byte[] cache = null;
			int ptr = 0;
			long a = System.currentTimeMillis();
			in = new RandomAccessFile(&quot;./Data/WorldMap.bin&quot;, &quot;r&quot;);
			cache = new byte[(int) in.length()];
			in.read(cache, 0, (int) in.length());
			in.close();
			for (int i = 0; i &lt; 1280618; i++/* ,j++ */) {
				int objectId = (((cache[ptr++] &amp; 0xFF) &lt;&lt; 8) | (cache[ptr++] &amp; 0xFF));
				int objectX = (((cache[ptr++] &amp; 0xFF) &lt;&lt; 8) | (cache[ptr++] &amp; 0xFF));
				int objectY = (((cache[ptr++] &amp; 0xFF) &lt;&lt; 8) | (cache[ptr++] &amp; 0xFF));
				int objectHeight = cache[ptr++] &amp; 0xFF;
				int objectType = cache[ptr++] &amp; 0xFF;
				int objectFace = cache[ptr++] &amp; 0xFF;
				GameObject go = new GameObject(objectId, objectType, objectX, objectY, objectFace);
				if (go.type() != 0) {
					gameObjects.put(go.y() + (go.x() &lt;&lt; 16), go);
				}
			}
			long took = System.currentTimeMillis() - a;
			System.out.println(&quot;Loaded &quot; + gameObjects.size() + &quot; clips.&quot;);
			System.out.println(&quot;Loaded WorldMap In (&quot; + took + &quot; ms)... &quot;);
		} catch (Exception e2) {
			e2.printStackTrace();
		}
	}
	
	public static final HashMap&lt;Integer, String&gt; map = new HashMap&lt;Integer, String&gt;();
	
}
[/CODE]</description>
    
    <lastBuildDate>Tue, 06 Mar 2012 21:58:55 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/out-of-bounds-exception/435405.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Out of bounds exception</title>
        <dc:creator><![CDATA[@ravekitty ravekitty]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ravekitty">@ravekitty</a> wrote:</p>
          <blockquote>
              <p>Im adding a clipmap for following and i get this error :s</p>
<p>[CODE][3/6/12 4:55 PM]: Launching Kandarinâ€¦<br>
[3/6/12 4:55 PM]: java.lang.ArrayIndexOutOfBoundsException: 912<br>
[3/6/12 4:55 PM]:       at server.world.WorldMap.loadWorldMap(WorldMap.java:165)</p>
<p>[3/6/12 4:55 PM]:       at server.Server.main(Server.java:117)<br>
[3/6/12 4:55 PM]: Loaded clipmap in 54ms.<br>
[3/6/12 4:55 PM]: Server listening on port 0.0.0.0:43594<br>
[/code]</p>
<p>world map class</p>
<pre><code class="lang-auto">package server.world;

import java.io.RandomAccessFile;
import java.util.HashMap;
import java.util.Hashtable;
import server.util.Misc;

public final class WorldMap {

	public static Hashtable&lt;Integer, GameObject&gt; gameObjects = new Hashtable&lt;Integer, GameObject&gt;();
	public static boolean solidObjectExists(int x, int y) {
		GameObject go = gameObjects.get(y + (x &lt;&lt; 16));
		if (go != null &amp;&amp; go.type() == 2 &amp;&amp; go.x() == x &amp;&amp; go.y() == y) {
			return true;
		}
		if (go != null &amp;&amp; go.type() == 10 &amp;&amp; go.x() == x &amp;&amp; go.y() == y) {
			return true;
		}
		if (go != null &amp;&amp; go.type() == 9 &amp;&amp; go.x() == x &amp;&amp; go.y() == y) {
			return true;
		}
		if (go != null &amp;&amp; go.type() == 8 &amp;&amp; go.x() == x &amp;&amp; go.y() == y) {
			return true;
		}
		if (go != null &amp;&amp; go.type() == 7 &amp;&amp; go.x() == x &amp;&amp; go.y() == y) {
			return true;
		}
		if (go != null &amp;&amp; go.type() == 4 &amp;&amp; go.x() == x &amp;&amp; go.y() == y) {
			return true;
		}
		return false;
	}

	public static boolean canMove(int baseX, int baseY, int toX, int toY) {
		int diffX = baseX - toX;
		int diffY = baseY - toY;
		int moveX = 0;
		int moveY = 0;
		if (diffX &lt; 0) {
			moveX = 1;
		} else if (diffX &gt; 0) {
			moveX = -1;
		}
		if (diffY &lt; 0) {
			moveY = 1;
		} else if (diffY &gt; 0) {
			moveY = -1;
		}
		if (moveX &gt; 0 &amp;&amp; moveY &gt; 0) {
			if (solidObjectExists(baseX + 1, baseY + 1)
					|| solidObjectExists(baseX + 1, baseY)
					|| solidObjectExists(baseX, baseY + 1)) {
				return false;
			}
		} else if (moveX &lt; 0 &amp;&amp; moveY &lt; 0) {
			if (solidObjectExists(baseX - 1, baseY - 1)
					|| solidObjectExists(baseX - 1, baseY)
					|| solidObjectExists(baseX, baseY - 1)) {
				return false;
			}
		} else if (moveX &gt; 0 &amp;&amp; moveY &lt; 0) {
			if (solidObjectExists(baseX + 1, baseY - 1)
					|| solidObjectExists(baseX + 1, baseY)
					|| solidObjectExists(baseX, baseY - 1)) {
				return false;
			}
		} else if (moveX &lt; 0 &amp;&amp; moveY &gt; 0) {
			if (solidObjectExists(baseX - 1, baseY + 1)
					|| solidObjectExists(baseX - 1, baseY)
					|| solidObjectExists(baseX, baseY + 1)) {
				return false;
			}
		} else if (moveX &lt; 0 &amp;&amp; moveY == 0) {
			if (solidObjectExists(baseX - 1, baseY)) {
				return false;
			}
		} else if (moveX &gt; 0 &amp;&amp; moveY == 0) {
			if (solidObjectExists(baseX + 1, baseY)) {
				return false;
			}
		} else if (moveX == 0 &amp;&amp; moveY &lt; 0) {
			if (solidObjectExists(baseX, baseY - 1)) {
				return false;
			}
		} else if (moveX == 0 &amp;&amp; moveY &gt; 0) {
			if (solidObjectExists(baseX, baseY + 1)) {
				return false;
			}
		}
		return true;
	}

	public static final int maxObjects = 2000000;
	public static int[] objectId = new int [maxObjects];
   public static int[] objectX = new int [maxObjects];
   public static int[] objectY = new int [maxObjects];
   public static int[] objectHeight = new int [maxObjects];
   public static int[] objectType = new int [maxObjects];
   public static int[] objectFace = new int [maxObjects];

	public static boolean isWalkAble(int height, int absX, int absY, int toAbsX, int toAbsY) {
      if (absX == toAbsX &amp;&amp; absY == toAbsY) return true;
      int direction1 = getDirection(absX, absY, toAbsX, toAbsY);
      int direction2 = getOppositeDirection(absX, absY, toAbsX, toAbsY);
      if (direction1 == -1 || direction2 == -1) {
         Misc.println("Direction Bug from(" + absX + "," + absY + ") to (" + toAbsX + "," + toAbsY + ") Height(" + height + ") abs(" + toAbsX + "," + toAbsY + ")");
         return false;
      }
      for (int i = 0; i &lt; maxObjects; i++) {
        if (objectId[i] == -1) continue;
         if (objectHeight[i] != height) continue;
         if (objectType[i] == 22) continue;
         if (objectX[i] == toAbsX &amp;&amp; objectY[i] == toAbsY &amp;&amp; height == objectHeight[i]) 
		return false;

	  }
	  return true;
   }

    	public static int getOppositeDirection(int absX, int absY, int toAbsX, int toAbsY) {
// we must reverse direction, walking north will require object to stand south
      if ((absX - 1) == toAbsX &amp;&amp; absY == toAbsY) return 2;
      if ((absX + 1) == toAbsX &amp;&amp; absY == toAbsY) return 0;
      if (absX == toAbsX &amp;&amp; (absY - 1) == toAbsY) return 1;
      if (absX == toAbsX &amp;&amp; (absY + 1) == toAbsY) return 3;
      if ((absX - 1) == toAbsX &amp;&amp; (absY - 1) == toAbsY) return 11;
      if ((absX + 1) == toAbsX &amp;&amp; (absY - 1) == toAbsY) return 10;
      if ((absX - 1) == toAbsX &amp;&amp; (absY + 1) == toAbsY) return 8;
      if ((absX + 1) == toAbsX &amp;&amp; (absY + 1) == toAbsY) return 9;
	  if (absY == toAbsY &amp;&amp; (absX - 1) == toAbsX) return 12;
      if (absY == toAbsY &amp;&amp; (absX + 1) == toAbsX) return 13;
      return -1;
   }

	public static int getDirection(int absX, int absY, int toAbsX, int toAbsY) {
// we must reverse direction, walking north will require object to stand south
      if ((absX - 1) == toAbsX &amp;&amp; absY == toAbsY) return 0;
      if ((absX + 1) == toAbsX &amp;&amp; absY == toAbsY) return 2;
      if (absX == toAbsX &amp;&amp; (absY - 1) == toAbsY) return 3;
      if (absX == toAbsX &amp;&amp; (absY + 1) == toAbsY) return 1;
      if ((absX - 1) == toAbsX &amp;&amp; (absY - 1) == toAbsY) return 9;
      if ((absX + 1) == toAbsX &amp;&amp; (absY - 1) == toAbsY) return 8;
      if ((absX - 1) == toAbsX &amp;&amp; (absY + 1) == toAbsY) return 10;
      if ((absX + 1) == toAbsX &amp;&amp; (absY + 1) == toAbsY) return 11;
	  if (absY == toAbsY &amp;&amp; (absX - 1) == toAbsX) return 12;
      if (absY == toAbsY &amp;&amp; (absX + 1) == toAbsX) return 13;
      return -1;
   }



	@SuppressWarnings("unused")
	public static void loadWorldMap() {
		try {
			RandomAccessFile in = null;
			byte[] cache = null;
			int ptr = 0;
			long a = System.currentTimeMillis();
			in = new RandomAccessFile("./Data/WorldMap.bin", "r");
			cache = new byte[(int) in.length()];
			in.read(cache, 0, (int) in.length());
			in.close();
			for (int i = 0; i &lt; 1280618; i++/* ,j++ */) {
				int objectId = (((cache[ptr++] &amp; 0xFF) &lt;&lt; 8) | (cache[ptr++] &amp; 0xFF));
				int objectX = (((cache[ptr++] &amp; 0xFF) &lt;&lt; 8) | (cache[ptr++] &amp; 0xFF));
				int objectY = (((cache[ptr++] &amp; 0xFF) &lt;&lt; 8) | (cache[ptr++] &amp; 0xFF));
				int objectHeight = cache[ptr++] &amp; 0xFF;
				int objectType = cache[ptr++] &amp; 0xFF;
				int objectFace = cache[ptr++] &amp; 0xFF;
				GameObject go = new GameObject(objectId, objectType, objectX, objectY, objectFace);
				if (go.type() != 0) {
					gameObjects.put(go.y() + (go.x() &lt;&lt; 16), go);
				}
			}
			long took = System.currentTimeMillis() - a;
			System.out.println("Loaded " + gameObjects.size() + " clips.");
			System.out.println("Loaded WorldMap In (" + took + " ms)... ");
		} catch (Exception e2) {
			e2.printStackTrace();
		}
	}
	
	public static final HashMap&lt;Integer, String&gt; map = new HashMap&lt;Integer, String&gt;();
	
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/out-of-bounds-exception/435405/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/out-of-bounds-exception/435405/1</link>
        <pubDate>Tue, 06 Mar 2012 21:58:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-435405-1</guid>
        <source url="https://forum.moparisthebest.com/t/out-of-bounds-exception/435405.rss">Out of bounds exception</source>
      </item>
  </channel>
</rss>
