<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Ellipse progress bar</title>
    <link>https://forum.moparisthebest.com/t/ellipse-progress-bar/554352</link>
    <description>This may be the wrong section although, it is java programming and doesn&#39;t necessarily need to be specific to RSPS, i am writing a function that i fear is very inefficient. Just needed some pointers - or maybe another approach on this.
Essentially it is a progress bar using Ellipses. How can i clean this up?

[code=java]
	/*
	 * Draw two Ellipse2Ds, an outer and an inner - [CircleToStart(Outer), CircleToAvoid(Inner)]
	 * Use Java&#39;s Documented Area class to find the area between both Ellipse2Ds
	 * Multiply the needed Width and Height by the assigned progress.
	 * Fill half the Circle using a nested loop.
	 * Multiply the needed Width and Height by half the assigned progress (Since we&#39;ve already used half the progress).
	 * Once the progress has reached 50%+, Fill the other half of the circle using another loop.
	 */
	
	public void drawOrb() {
		DrawingArea.fillCircleAlpha(xPos, yPos, RADIUS, 0x000000, OPACITY - 90);
		Ellipse2D.Double circleToAvoid = DrawingArea.drawCircle(xPos - RADIUS, yPos - RADIUS, RADIUS * 2, 0x000000,
				125);
		Ellipse2D.Double circleToStart = DrawingArea.drawCircle(xPos - (RADIUS + RADIUS_OFFSET),
				yPos - (RADIUS + RADIUS_OFFSET), (RADIUS * 2) + (2 * RADIUS_OFFSET), 0x000000, OPACITY);

		Area a = new Area(circleToStart);
		a.subtract(new Area(circleToAvoid));

		icon.drawSprite(xPos - icon.getWidth() / 2, 29 - icon.getHeight() / 2);

		int areaWidth = (int) (a.getBounds().getWidth() * skillProgress);
		int areaHeight = (int) (a.getBounds().getHeight() * skillProgress);

		for (int i = 0; i &lt; areaWidth * 2; i++) {
			for (int j = 0; j &lt; areaHeight * 2; j++) {
				if (!circleToAvoid.contains(circleToStart.getCenterX() + i, circleToStart.getY() + j)
						&amp;&amp; circleToStart.contains(circleToStart.getCenterX() + i, circleToStart.getY() + j)) {
					DrawingArea.setPixel(i + (int) circleToStart.getCenterX(), (int) circleToStart.getY() + j, 0xffffff,
							OPACITY - 50);
				}
			}
		}

		if (skillProgress &gt;= 0.5d) {
			areaWidth = (int) (a.getBounds().getWidth() * (skillProgress - 0.5));
			areaHeight = (int) (a.getBounds().getHeight() * (skillProgress - 0.5));
			for (int i = 1; i &lt; areaWidth * 2; i++) {
				for (int j = 1; j &lt; areaHeight * 2; j++) {
					if (!circleToAvoid.contains(circleToStart.getCenterX() - i, circleToStart.getMaxY() - j)
							&amp;&amp; circleToStart.contains(circleToStart.getCenterX() - i, circleToStart.getMaxY() - j)) {
						DrawingArea.setPixel((int) circleToStart.getCenterX() - i, (int) circleToStart.getMaxY() - j,
								0xffffff, OPACITY - 50);
					}
				}
			}
		}
	}
[/code]</description>
    
    <lastBuildDate>Mon, 11 Jan 2016 00:32:38 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/ellipse-progress-bar/554352.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Ellipse progress bar</title>
        <dc:creator><![CDATA[@x1_att_ftw_x x1 att ftw x]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/x1_att_ftw_x">@x1_att_ftw_x</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="554352">
<div class="title">
<div class="quote-controls"></div>
 Bowser jr:</div>
<blockquote>
<p>setPixel might be inefficient with library you’re using. If it’s a RS related lib, I don’t know. If it is an open 3rd party lib, look it up yourself.</p>
</blockquote>
</aside>
<pre><code class="lang-auto">	public static void fillCircleAlpha(int posX, int posY, int radius, int colour, int alpha) {
		int dest_intensity = 256 - alpha;
		int src_red = (colour &gt;&gt; 16 &amp; 0xff) * alpha;
		int src_green = (colour &gt;&gt; 8 &amp; 0xff) * alpha;
		int src_blue = (colour &amp; 0xff) * alpha;
		int i3 = posY - radius;
		if (i3 &lt; 0)
			i3 = 0;
		int j3 = posY + radius;
		if (j3 &gt;= height)
			j3 = height - 1;
		for (int y = i3; y &lt;= j3; y++) {
			int l3 = y - posY;
			int i4 = (int) Math.sqrt(radius * radius - l3 * l3);
			int x = posX - i4;
			if (x &lt; 0)
				x = 0;
			int k4 = posX + i4;
			if (k4 &gt;= width)
				k4 = width - 1;
			int pixel_offset = x + y * width;
			for (int i5 = x; i5 &lt;= k4; i5++) {
				int dest_red = (pixels[pixel_offset] &gt;&gt; 16 &amp; 0xff) * dest_intensity;
				int dest_green = (pixels[pixel_offset] &gt;&gt; 8 &amp; 0xff) * dest_intensity;
				int dest_blue = (pixels[pixel_offset] &amp; 0xff) * dest_intensity;
				int result_rgb = ((src_red + dest_red &gt;&gt; 8) &lt;&lt; 16) + ((src_green + dest_green &gt;&gt; 8) &lt;&lt; 8)
						+ (src_blue + dest_blue &gt;&gt; 8);
				pixels[pixel_offset++] = result_rgb;
			}
		}
	}</code></pre>
<p>Thanks for the reply! That function is native to the DrawingArea class which is in the RS client itself. Is there anything else that i could do in order to improve my code. Im trying to find a way to fill the entire circle using just 1 nested loop instead of 2.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/ellipse-progress-bar/554352/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/ellipse-progress-bar/554352/3</link>
        <pubDate>Mon, 11 Jan 2016 00:32:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554352-3</guid>
        <source url="https://forum.moparisthebest.com/t/ellipse-progress-bar/554352.rss">Ellipse progress bar</source>
      </item>
      <item>
        <title>Ellipse progress bar</title>
        <dc:creator><![CDATA[@bowserjr2 Bowser jr]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bowserjr2">@bowserjr2</a> wrote:</p>
          <blockquote>
              <p>setPixel might be inefficient with library you’re using. If it’s a RS related lib, I don’t know. If it is an open 3rd party lib, look it up yourself.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/ellipse-progress-bar/554352/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/ellipse-progress-bar/554352/2</link>
        <pubDate>Mon, 11 Jan 2016 00:04:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554352-2</guid>
        <source url="https://forum.moparisthebest.com/t/ellipse-progress-bar/554352.rss">Ellipse progress bar</source>
      </item>
      <item>
        <title>Ellipse progress bar</title>
        <dc:creator><![CDATA[@x1_att_ftw_x x1 att ftw x]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/x1_att_ftw_x">@x1_att_ftw_x</a> wrote:</p>
          <blockquote>
              <p>This may be the wrong section although, it is java programming and doesn’t necessarily need to be specific to RSPS, i am writing a function that i fear is very inefficient. Just needed some pointers - or maybe another approach on this.<br>
Essentially it is a progress bar using Ellipses. How can i clean this up?</p>
<pre><code class="lang-auto">	/*
	 * Draw two Ellipse2Ds, an outer and an inner - [CircleToStart(Outer), CircleToAvoid(Inner)]
	 * Use Java's Documented Area class to find the area between both Ellipse2Ds
	 * Multiply the needed Width and Height by the assigned progress.
	 * Fill half the Circle using a nested loop.
	 * Multiply the needed Width and Height by half the assigned progress (Since we've already used half the progress).
	 * Once the progress has reached 50%+, Fill the other half of the circle using another loop.
	 */
	
	public void drawOrb() {
		DrawingArea.fillCircleAlpha(xPos, yPos, RADIUS, 0x000000, OPACITY - 90);
		Ellipse2D.Double circleToAvoid = DrawingArea.drawCircle(xPos - RADIUS, yPos - RADIUS, RADIUS * 2, 0x000000,
				125);
		Ellipse2D.Double circleToStart = DrawingArea.drawCircle(xPos - (RADIUS + RADIUS_OFFSET),
				yPos - (RADIUS + RADIUS_OFFSET), (RADIUS * 2) + (2 * RADIUS_OFFSET), 0x000000, OPACITY);

		Area a = new Area(circleToStart);
		a.subtract(new Area(circleToAvoid));

		icon.drawSprite(xPos - icon.getWidth() / 2, 29 - icon.getHeight() / 2);

		int areaWidth = (int) (a.getBounds().getWidth() * skillProgress);
		int areaHeight = (int) (a.getBounds().getHeight() * skillProgress);

		for (int i = 0; i &lt; areaWidth * 2; i++) {
			for (int j = 0; j &lt; areaHeight * 2; j++) {
				if (!circleToAvoid.contains(circleToStart.getCenterX() + i, circleToStart.getY() + j)
						&amp;&amp; circleToStart.contains(circleToStart.getCenterX() + i, circleToStart.getY() + j)) {
					DrawingArea.setPixel(i + (int) circleToStart.getCenterX(), (int) circleToStart.getY() + j, 0xffffff,
							OPACITY - 50);
				}
			}
		}

		if (skillProgress &gt;= 0.5d) {
			areaWidth = (int) (a.getBounds().getWidth() * (skillProgress - 0.5));
			areaHeight = (int) (a.getBounds().getHeight() * (skillProgress - 0.5));
			for (int i = 1; i &lt; areaWidth * 2; i++) {
				for (int j = 1; j &lt; areaHeight * 2; j++) {
					if (!circleToAvoid.contains(circleToStart.getCenterX() - i, circleToStart.getMaxY() - j)
							&amp;&amp; circleToStart.contains(circleToStart.getCenterX() - i, circleToStart.getMaxY() - j)) {
						DrawingArea.setPixel((int) circleToStart.getCenterX() - i, (int) circleToStart.getMaxY() - j,
								0xffffff, OPACITY - 50);
					}
				}
			}
		}
	}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/ellipse-progress-bar/554352/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/ellipse-progress-bar/554352/1</link>
        <pubDate>Sun, 10 Jan 2016 23:54:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554352-1</guid>
        <source url="https://forum.moparisthebest.com/t/ellipse-progress-bar/554352.rss">Ellipse progress bar</source>
      </item>
  </channel>
</rss>
