<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Form + Procedure&#39;s with Loops freezing Scar</title>
    <link>https://forum.moparisthebest.com/t/form-procedures-with-loops-freezing-scar/87345</link>
    <description>I posted this problem on freddy&#39;s fourm and I was directed here, so I&#39;ll just copy and paste what I posted there :)

Hello all, I&#39;ve been writting script for a game called Endless Online (www.endless-online.com) for quite a long time now. And recently I&#39;ve tried using forms to make it easier for my end user.

When I try running my script and pressing the login button, the first mouse move command will work then scar will freeze.
Is it possible to have the form displayed while using MoveMouse procedures etc
Or can I hide hide the form, then after the procedures have finished display the form again?

Here&#39;s my script:
[code]//--=Start Script======================--\\
program MarketTools; {V0.1b}
//--===================================--\\
//  -=[Rena]=-  -=[30 April 2007]=-
// ____ Market Tools v0.1b ____
//
// Features:
//  - Send marketing messages periodicly.
//  - Switch Accounts/Characters with a single
//    button press.
//
// Updated Log:
//  v0.1
//   - First Version
//
//  v0.1b
//   - Login Script Completed
//   - Form/Login Script Bug Found
//
// Instructions:
// Open Endless Online.
//
// Run the script, a file will be created in
// the same location as this script called
// MT_Setup.ini.
//
// To send a perodic message type your message
// into the message box, type how long you want
// the script to wait before resending the
// message and then press Send.
// To stop sending messages, stop the script
// from running.
//
// To switch accounts, first click the setup
// button next to an empty account slot.
// Fill out the form with your Account Name
// and Password.
// Click the account of your choice to switch
// to that account.
//

var
  frmDesign : TForm;
  GroupBox2 : TGroupBox;
  Label1 : TLabel;
  Label2 : TLabel;
  auto_message : TEdit;
  auto_time : TEdit;
  auto_global : TCheckBox;
  auto_send : TButton;
  GroupBox1 : TGroupBox;
  account_1 : TButton;
  setup_account_1 : TButton;
  account_2 : TButton;
  account_3 : TButton;
  setup_account_2 : TButton;
  setup_account_3 : TButton;
  auto_stop : TButton;
  close : TButton;
  mess: String;
  time: Integer;


//--===================================--\\
Procedure Startup; {v---}
//--===================================--\\
//  -=[Rena]=-  -=[30 April 2007]=-
// Creates MT_Setup.ini if it&#39;s not in the same folder
// as the script.
// Reads MT_Setup.ini to find default values for the
// form.
begin
 if (fileExists(scriptPath + &#39;MT_Setup.ini&#39;) = false) then
  begin
  WriteLn(&#39;--== Setting Up MT_Setup.ini ==--&#39;)
  WriteINI(&#39;MESSAGE&#39;,&#39;Message&#39;,&#39;&#39;,scriptPath + &#39;MT_Setup.ini&#39;)
  WriteINI(&#39;MESSAGE&#39;,&#39;Time&#39;,&#39;30&#39;,scriptPath + &#39;MT_Setup.ini&#39;)
  WriteINI(&#39;MESSAGE&#39;,&#39;Global&#39;,&#39;False&#39;,scriptPath + &#39;MT_Setup.ini&#39;)
  WriteINI(&#39;ACCOUNT&#39;,&#39;Acc1&#39;,&#39;No_Account&#39;,scriptPath + &#39;MT_Setup.ini&#39;)
  WriteINI(&#39;ACCOUNT&#39;,&#39;Pass1&#39;,&#39;&#39;,scriptPath + &#39;MT_Setup.ini&#39;)
  WriteINI(&#39;ACCOUNT&#39;,&#39;Acc2&#39;,&#39;No_Account&#39;,scriptPath + &#39;MT_Setup.ini&#39;)
  WriteINI(&#39;ACCOUNT&#39;,&#39;Pass2&#39;,&#39;&#39;,scriptPath + &#39;MT_Setup.ini&#39;)
  WriteINI(&#39;ACCOUNT&#39;,&#39;Acc3&#39;,&#39;No_Account&#39;,scriptPath + &#39;MT_Setup.ini&#39;)
  WriteINI(&#39;ACCOUNT&#39;,&#39;Pass3&#39;,&#39;&#39;,scriptPath + &#39;MT_Setup.ini&#39;)
  end;

auto_message.Text:=ReadINI(&#39;MESSAGE&#39;,&#39;Message&#39;,scriptPath + &#39;MT_Setup.ini&#39;)
auto_time.Text:=ReadINI(&#39;MESSAGE&#39;,&#39;Time&#39;,scriptPath + &#39;MT_Setup.ini&#39;)

 if (ReadINI(&#39;MESSAGE&#39;,&#39;Global&#39;,scriptPath + &#39;MT_Setup.ini&#39;) = &#39;True&#39;) then
  begin
  auto_global.Checked:=True
  end else
  begin
  auto_global.Checked:=False
  end;

account_1.Caption := &#39;Account: &#39; + ReadINI(&#39;ACCOUNT&#39;,&#39;Acc1&#39;,scriptPath + &#39;MT_Setup.ini&#39;);
account_2.Caption := &#39;Account: &#39; + ReadINI(&#39;ACCOUNT&#39;,&#39;Acc2&#39;,scriptPath + &#39;MT_Setup.ini&#39;);
account_3.Caption := &#39;Account: &#39; + ReadINI(&#39;ACCOUNT&#39;,&#39;Acc3&#39;,scriptPath + &#39;MT_Setup.ini&#39;);
end;

//--===================================--\\
Procedure ReadString(str: String); {v1.0}
//--===================================--\\
//  -=[Rena]=-  -=[30 April 2007]=-
// Takes a string and uses KeyDown and KeyUp
// to send it to the client.
// Use forward slashes (/) to declare a
// capital letter or symbol.
var
 i,strLength :Integer;
 cap: Boolean;

begin
i:=1
strLength:=Length(str)
cap:=False

  while(i&lt;strLength+1) do
  begin

   if(GetKeyCode(StrGet(str,i))=191)then
    begin
    KeyDown(16)
    cap:=True
    i:=i+1
    end;

  KeyDown(GetKeyCode(StrGet(str,i)))
  wait(15)
  KeyUp(GetKeyCode(StrGet(str,i)))
  wait(16)
  i:=i+1

   if(cap=True)then
    begin
    KeyUp(16)
    end;

  end;

wait(300)
end;

//--===================================--\\
procedure Login(Username, Password: String); {v1.0b}
//--===================================--\\
//  -=[Rena]=-  -=[30 April 2007]=-
// Logs in using the given data.
// Traps (Could Not Find Server) and
// (Login Refused).
var
  reset: Boolean;

begin
Writeln(&#39;--=== Login; Account: &#39; + UserName + &#39; ===--&#39;)
  repeat
  reset:=False
  Writeln(&#39; - ClickMouse: Play Game&#39;)
  ClickMouse(31+random(166),346+random(29),True)
  Writeln(&#39; - Waiting for Login Box&#39;)

    repeat
     if (GetColor(213,222)=13033199) then
      begin
      writeln(&#39; - Could Not Find Server&#39;)
      ClickMouse(400,310,True)
      wait(50)
      writeln(&#39;------------------------&#39;)
      Writeln(&#39; - ClickMouse: Play Game&#39;)
      ClickMouse(31+random(166),346+random(29),True)
      Writeln(&#39; - Waiting for Login Box&#39;)
      end;
    wait(10)
    until(GetColor(317,342)=16777215) //White A

  wait(10)
  writeln(&#39; - Typing Account Name and Password&#39;)
  ReadString(Username + chr(9) + Password)
  writeln(&#39; - Connecting&#39;)
  ClickMouse(RandomRange(367,445),RandomRange(415,430),True)

    repeat
     if (GetColor(213,222)=13033199) then
      begin
      writeln(&#39; - Login refused&#39;)
      ClickMouse(400,310,True)
      wait(50)
      writeln(&#39;------------------------&#39;)
      reset:=True
      end;
    until((GetColor(494,70)=14608367) or (reset=True)) //White C

  until(reset=False)

Writeln(&#39;--=== Login Successful ===--&#39;)
end;

//--===================================--\\
Procedure AutoMessage; {v---}
//--===================================--\\
//  -=[Rena]=-  -=[30 April 2007]=-
// Types the string (mess) every (time)
// seconds.
begin
ActivateClient;
ReadString(mess);
wait(100)
ReadString(chr(13))
SetTimeout(time,&#39;AutoMessage&#39;)
end;

//--===================================--\\
Procedure SendMessage(sender: TObject); {v---}
//--===================================--\\
//  -=[Rena]=-  -=[30 April 2007]=-
// Ran when the player presses the Send
// button on the main form.
// Prepares the procedure (AutoMessage) for
// sending strings to the client.
begin
mess:=auto_message.text
writeINI(&#39;MESSAGE&#39;,&#39;Message&#39;,mess,scriptPath + &#39;MT_Setup.ini&#39;)

 if (auto_global.Checked=True) then
  begin
  mess:=(&#39;`&#39; + mess)
  writeINI(&#39;MESSAGE&#39;,&#39;Global&#39;,&#39;True&#39;,scriptPath + &#39;MT_Setup.ini&#39;)
  end else
  begin
  writeINI(&#39;MESSAGE&#39;,&#39;Global&#39;,&#39;False&#39;,scriptPath + &#39;MT_Setup.ini&#39;)
  end;

time:=strtoint(auto_time.text)
writeINI(&#39;MESSAGE&#39;,&#39;Time&#39;,inttostr(time),scriptPath + &#39;MT_Setup.ini&#39;)
frmDesign.ModalResult:= mrOk;
AutoMessage;
end;

//--===================================--\\
Procedure Setup1(sender: TObject); {v---}
//--===================================--\\
//  -=[Rena]=-  -=[30 April 2007]=-
// Gets and stores Account Name and Password
// into MT_Setup.ini
begin
WriteINI(&#39;ACCOUNT&#39;,&#39;Acc1&#39;,ReadLn(&#39;Account Name? (Current: &#39; + ReadINI(&#39;ACCOUNT&#39;,&#39;Acc1&#39;,scriptPath + &#39;MT_Setup.ini&#39;) + &#39;)&#39;),scriptPath + &#39;MT_Setup.ini&#39;)
account_1.Caption := &#39;Account: &#39; + ReadINI(&#39;ACCOUNT&#39;,&#39;Acc1&#39;,scriptPath + &#39;MT_Setup.ini&#39;);
WriteINI(&#39;ACCOUNT&#39;,&#39;Pass1&#39;,ReadLn(&#39;Password? (Current: &#39; + ReadINI(&#39;ACCOUNT&#39;,&#39;Pass1&#39;,scriptPath + &#39;MT_Setup.ini&#39;) + &#39;)&#39;),scriptPath + &#39;MT_Setup.ini&#39;)
end;

//--===================================--\\
Procedure Setup2(sender: TObject); {v---}
//--===================================--\\
//  -=[Rena]=-  -=[30 April 2007]=-
// Gets and stores Account Name and Password
// into MT_Setup.ini
begin
WriteINI(&#39;ACCOUNT&#39;,&#39;Acc2&#39;,ReadLn(&#39;Account Name? (Current: &#39; + ReadINI(&#39;ACCOUNT&#39;,&#39;Acc2&#39;,scriptPath + &#39;MT_Setup.ini&#39;) + &#39;)&#39;),scriptPath + &#39;MT_Setup.ini&#39;)
account_2.Caption := &#39;Account: &#39; + ReadINI(&#39;ACCOUNT&#39;,&#39;Acc2&#39;,scriptPath + &#39;MT_Setup.ini&#39;);
WriteINI(&#39;ACCOUNT&#39;,&#39;Pass2&#39;,ReadLn(&#39;Password? (Current: &#39; + ReadINI(&#39;ACCOUNT&#39;,&#39;Pass2&#39;,scriptPath + &#39;MT_Setup.ini&#39;) + &#39;)&#39;),scriptPath + &#39;MT_Setup.ini&#39;)
end;

//--===================================--\\
Procedure Setup3(sender: TObject); {v---}
//--===================================--\\
//  -=[Rena]=-  -=[30 April 2007]=-
// Gets and stores Account Name and Password
// into MT_Setup.ini
begin
WriteINI(&#39;ACCOUNT&#39;,&#39;Acc3&#39;,ReadLn(&#39;Account Name? (Current: &#39; + ReadINI(&#39;ACCOUNT&#39;,&#39;Acc3&#39;,scriptPath + &#39;MT_Setup.ini&#39;) + &#39;)&#39;),scriptPath + &#39;MT_Setup.ini&#39;)
account_3.Caption := &#39;Account: &#39; + ReadINI(&#39;ACCOUNT&#39;,&#39;Acc3&#39;,scriptPath + &#39;MT_Setup.ini&#39;);
WriteINI(&#39;ACCOUNT&#39;,&#39;Pass3&#39;,ReadLn(&#39;Password? (Current: &#39; + ReadINI(&#39;ACCOUNT&#39;,&#39;Pass3&#39;,scriptPath + &#39;MT_Setup.ini&#39;) + &#39;)&#39;),scriptPath + &#39;MT_Setup.ini&#39;)
end;

//--===================================--\\
Procedure Login1(sender: TObject); {v---}
//--===================================--\\
//  -=[Rena]=-  -=[30 April 2007]=-
// Ran when the player presses the top
// Account button the the main form.
// Runs the {Login} procedure with the
// Account Name and Password stored in
// MT_Setup.ini
begin
ActivateClient;
Login(readINI(&#39;ACCOUNT&#39;,&#39;Acc1&#39;,scriptPath + &#39;MT_Setup.ini&#39;),readINI(&#39;ACCOUNT&#39;,&#39;Pass1&#39;,scriptPath + &#39;MT_Setup.ini&#39;))
end;

//--===================================--\\
Procedure Login2(sender: TObject); {v---}
//--===================================--\\
//  -=[Rena]=-  -=[30 April 2007]=-
// Ran when the player presses the middle
// Account button the the main form.
// Runs the {Login} procedure with the
// Account Name and Password stored in
// MT_Setup.ini
begin
ActivateClient;
Login(readINI(&#39;ACCOUNT&#39;,&#39;Acc2&#39;,scriptPath + &#39;MT_Setup.ini&#39;),readINI(&#39;ACCOUNT&#39;,&#39;Pass2&#39;,scriptPath + &#39;MT_Setup.ini&#39;))
end;

//--===================================--\\
Procedure Login3(sender: TObject); {v---}
//--===================================--\\
//  -=[Rena]=-  -=[30 April 2007]=-
// Ran when the player presses the bottom
// Account button the the main form.
// Runs the {Login} procedure with the
// Account Name and Password stored in
// MT_Setup.ini
begin
ActivateClient;
Login(readINI(&#39;ACCOUNT&#39;,&#39;Acc3&#39;,scriptPath + &#39;MT_Setup.ini&#39;),readINI(&#39;ACCOUNT&#39;,&#39;Pass3&#39;,scriptPath + &#39;MT_Setup.ini&#39;))
account_1.Caption
end;

//--===================================--\\
Procedure Done(sender: TObject); {v---}
//--===================================--\\
//  -=[Rena]=-  -=[30 April 2007]=-
// Closes the main form.
begin
frmDesign.ModalResult:= mrOk;
end;

//--===================================--\\
Procedure InitForm; {v---}
//--===================================--\\
// -=[Rena]=-  -=[30 April 2007]=-
// Setups the form, buttons, editboxes etc
begin
frmDesign := CreateForm;
frmDesign.Left := 276;
frmDesign.Top := 138;
frmDesign.Width := 354;
frmDesign.Height := 356;
frmDesign.Caption := &#39;Market Tools v0.1&#39;;
frmDesign.Color := clBtnFace;
frmDesign.Font.Color := clWindowText;
frmDesign.Font.Height := -11;
frmDesign.Font.Name := &#39;MS Sans Serif&#39;;
frmDesign.Font.Style := [];
frmDesign.Visible := False;
frmDesign.PixelsPerInch := 96;
GroupBox2 := TGroupBox.Create(frmDesign);
GroupBox2.Parent := frmDesign;
GroupBox2.Left := 8;
GroupBox2.Top := 8;
GroupBox2.Width := 329;
GroupBox2.Height := 149;
GroupBox2.Caption := &#39;Auto Message&#39;;
GroupBox2.TabOrder := 7;
Label1 := TLabel.Create(GroupBox2);
Label1.Parent := GroupBox2;
Label1.Left := 8;
Label1.Top := 16;
Label1.Width := 46;
Label1.Height := 13;
Label1.Caption := &#39;Message:&#39;;
Label2 := TLabel.Create(GroupBox2);
Label2.Parent := GroupBox2;
Label2.Left := 8;
Label2.Top := 64;
Label2.Width := 105;
Label2.Height := 13;
Label2.Caption := &#39;Send Time (Seconds):&#39;;
auto_message := TEdit.Create(GroupBox2);
auto_message.Parent := GroupBox2;
auto_message.Left := 8;
auto_message.Top := 32;
auto_message.Width := 312;
auto_message.Height := 21;
auto_message.TabOrder := 0;
auto_time := TEdit.Create(GroupBox2);
auto_time.Parent := GroupBox2;
auto_time.Left := 8;
auto_time.Top := 80;
auto_time.Width := 104;
auto_time.Height := 21;
auto_time.TabOrder := 1;
auto_global := TCheckBox.Create(GroupBox2);
auto_global.Parent := GroupBox2;
auto_global.Left := 128;
auto_global.Top := 80;
auto_global.Width := 97;
auto_global.Height := 17;
auto_global.Caption := &#39;Send on global&#39;;
auto_global.TabOrder := 2;
auto_send := TButton.Create(GroupBox2);
auto_send.Parent := GroupBox2;
auto_send.Left := 8;
auto_send.Top := 112;
auto_send.Width := 150;
auto_send.Height := 25;
auto_send.Caption := &#39;Send&#39;;
auto_send.TabOrder := 3;
auto_send.onClick :=@SendMessage;
GroupBox1 := TGroupBox.Create(frmDesign);
GroupBox1.Parent := frmDesign;
GroupBox1.Left := 8;
GroupBox1.Top := 168;
GroupBox1.Width := 329;
GroupBox1.Height := 118;
GroupBox1.Caption := &#39;Switch Account&#39;;
GroupBox1.TabOrder := 6;
account_1 := TButton.Create(frmDesign);
account_1.Parent := frmDesign;
account_1.Left := 18;
account_1.Top := 188;
account_1.Width := 222;
account_1.Height := 25;
account_1.Caption := &#39;Account: No_Account&#39;;
account_1.TabOrder := 0;
account_1.OnClick :=@login1
setup_account_1 := TButton.Create(frmDesign);
setup_account_1.Parent := frmDesign;
setup_account_1.Left := 250;
setup_account_1.Top := 188;
setup_account_1.Width := 75;
setup_account_1.Height := 25;
setup_account_1.Caption := &#39;Setup&#39;;
setup_account_1.TabOrder := 1;
setup_account_1.OnClick :=@setup1
account_2 := TButton.Create(frmDesign);
account_2.Parent := frmDesign;
account_2.Left := 18;
account_2.Top := 220;
account_2.Width := 222;
account_2.Height := 25;
account_2.Caption := &#39;Account: No_Account&#39;;
account_2.TabOrder := 2;
account_2.OnClick :=@login2
account_3 := TButton.Create(frmDesign);
account_3.Parent := frmDesign;
account_3.Left := 18;
account_3.Top := 252;
account_3.Width := 222;
account_3.Height := 25;
account_3.Caption := &#39;Account: No_Account&#39;;
account_3.TabOrder := 3;
account_3.OnClick :=@login3
setup_account_2 := TButton.Create(frmDesign);
setup_account_2.Parent := frmDesign;
setup_account_2.Left := 250;
setup_account_2.Top := 220;
setup_account_2.Width := 75;
setup_account_2.Height := 25;
setup_account_2.Caption := &#39;Setup&#39;;
setup_account_2.TabOrder := 4;
setup_account_2.OnClick :=@setup2
setup_account_3 := TButton.Create(frmDesign);
setup_account_3.Parent := frmDesign;
setup_account_3.Left := 250;
setup_account_3.Top := 252;
setup_account_3.Width := 75;
setup_account_3.Height := 25;
setup_account_3.Caption := &#39;Setup&#39;;
setup_account_3.TabOrder := 5;
setup_account_3.OnClick :=@setup3
auto_stop := TButton.Create(frmDesign);
auto_stop.Parent := frmDesign;
auto_stop.Left := 176;
auto_stop.Top := 120;
auto_stop.Width := 150;
auto_stop.Height := 25;
auto_stop.Caption := &#39;Stop&#39;;
auto_stop.TabOrder := 8;
auto_stop.Enabled := false;
close := TButton.Create(frmDesign);
close.Parent := frmDesign;
close.Left := 8;
close.Top := 296;
close.Width := 330;
close.Height := 25;
close.Caption := &#39;Close&#39;;
close.TabOrder := 17;
close.onClick :=@Done;
end;

//--===================================--\\
Procedure SafeInitForm; {v---}
//--===================================--\\
// -=[Scar]=-  -=[30 April 2007]=-
var
  V: TVariantArray;
begin
setarraylength(V,0);
ThreadSafeCall(&#39;InitForm&#39;,v);
end;

//--===================================--\\
Procedure ShowFormModal; {v---}
//--===================================--\\
// -=[Scar]=-  -=[30 April 2007]=-
begin
frmDesign.ShowModal;
//frmDesign.Show;
end;

//--===================================--\\
Procedure SafeShowFormModal; {v---}
//--===================================--\\
// -=[Scar]=-  -=[30 April 2007]=-
var
  V: TVariantArray;
begin
setarraylength(V,0);
ThreadSafeCall(&#39;ShowFormModal&#39;,v);
end;


//--===================================--\\
begin
FindWindow(&#39;EndlessOnline&#39;)
SafeInitForm;
Startup;
SafeShowFormModal;
WriteLn(&#39;--=== Entering Loop ===--&#39;)
 repeat
  wait(1000)
 until(false)
end.
//--=End Script========================--\\[/code]</description>
    
    <lastBuildDate>Thu, 03 May 2007 03:17:53 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/form-procedures-with-loops-freezing-scar/87345.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Form + Procedure&#39;s with Loops freezing Scar</title>
        <dc:creator><![CDATA[@rena rena]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rena">@rena</a> wrote:</p>
          <blockquote>
              <p>Ok, I managed to fix it myself. If anyone cares, here’s the final product <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>[code]//–=Start Script======================–\<br>
program MarketTools; {V2.0}<br>
//–===================================–\<br>
//  -=[Rena]=-  -=[30 April 2007]=-<br>
// ____ Market Tools v2.0 ____<br>
//<br>
// Features:<br>
//  - Send marketing messages periodicly.<br>
//  - Switch Accounts/Characters with a single<br>
//    button press.<br>
//<br>
// Updated Log:<br>
//  v0.1<br>
//   - First Version<br>
//<br>
//  v0.1b<br>
//   - Login Script Completed<br>
//   - Form/Login Script Bug Found<br>
//<br>
//  v2.0<br>
//   - Works <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"><br>
//   - Listbox account switching<br>
//<br>
// Instructions:<br>
// Open Endless Online.<br>
//<br>
// Run the script, a file will be created in<br>
// the same location as this script called<br>
// MT_Setup.ini.<br>
//<br>
// To send a perodic message type your message<br>
// into the message box, type how long you want<br>
// the script to wait before resending the<br>
// message and then press Send.<br>
// To stop sending messages, stop the script<br>
// from running.<br>
//<br>
// To switch accounts, first click the setup<br>
// button next to an empty account slot.<br>
// Fill out the form with your Account Name<br>
// and Password.<br>
// Click the account of your choice to switch<br>
// to that account.<br>
//</p>
<p>var<br>
frmDesign : TForm;<br>
GroupBox2 : TGroupBox;<br>
Label1 : TLabel;<br>
Label2 : TLabel;<br>
auto_message : TEdit;<br>
auto_time : TEdit;<br>
auto_global : TCheckBox;<br>
auto_send : TButton;<br>
auto_stop : TButton;<br>
close : TButton;<br>
account : TGroupBox;<br>
account_list : TListBox;<br>
account_New : TButton;<br>
account_delete : TButton;<br>
account_use : TButton;<br>
account_checkdelete : TCheckBox;<br>
mess: String;<br>
time,i: Integer;<br>
account_load : TButton;</p>
<p>//–===================================–\<br>
Procedure Startup; {v—}<br>
//–===================================–\<br>
//  -=[Rena]=-  -=[30 April 2007]=-<br>
// Creates MT_Setup.ini if it’s not in the same folder<br>
// as the script.<br>
// Reads MT_Setup.ini to find default values for the<br>
// form.<br>
begin<br>
if (fileExists(scriptPath + ‘MT_Setup.ini’) = false) then<br>
begin<br>
WriteLn(’–== Setting Up MT_Setup.ini ==–’)<br>
WriteINI(‘MESSAGE’,‘Message’,’’,scriptPath + ‘MT_Setup.ini’)<br>
WriteINI(‘MESSAGE’,‘Time’,‘30’,scriptPath + ‘MT_Setup.ini’)<br>
WriteINI(‘MESSAGE’,‘Global’,‘False’,scriptPath + ‘MT_Setup.ini’)<br>
WriteINI(‘ACCOUNT’,‘TotalAccounts’,‘0’,scriptPath + ‘MT_Setup.ini’)<br>
end;</p>
<p>auto_message.Text:=ReadINI(‘MESSAGE’,‘Message’,scriptPath + ‘MT_Setup.ini’)<br>
auto_time.Text:=ReadINI(‘MESSAGE’,‘Time’,scriptPath + ‘MT_Setup.ini’)</p>
<p>if (ReadINI(‘MESSAGE’,‘Global’,scriptPath + ‘MT_Setup.ini’) = ‘True’) then<br>
begin<br>
auto_global.Checked:=True<br>
end else<br>
begin<br>
auto_global.Checked:=False<br>
end;</p>
<p>//account_1.Caption := 'Account: ’ + ReadINI(‘ACCOUNT’,‘Acc1’,scriptPath + ‘MT_Setup.ini’);<br>
//account_2.Caption := 'Account: ’ + ReadINI(‘ACCOUNT’,‘Acc2’,scriptPath + ‘MT_Setup.ini’);<br>
//account_3.Caption := 'Account: ’ + ReadINI(‘ACCOUNT’,‘Acc3’,scriptPath + ‘MT_Setup.ini’);<br>
end;</p>
<p>//–===================================–\<br>
Procedure ReadString(str: String); {v1.0}<br>
//–===================================–\<br>
//  -=[Rena]=-  -=[30 April 2007]=-<br>
// Takes a string and uses KeyDown and KeyUp<br>
// to send it to the client.<br>
// Use back slashes () to declare a capital<br>
// letter or symbol.<br>
var<br>
i,strLength :Integer;<br>
cap: Boolean;</p>
<p>begin<br>
i:=1<br>
strLength:=Length(str)<br>
cap:=False</p>
<p>while(i&lt;strLength+1) do<br>
begin</p>
<p>if(GetKeyCode(StrGet(str,i))=220)then<br>
begin<br>
KeyDown(16)<br>
cap:=True<br>
i:=i+1<br>
end;</p>
<p>KeyDown(GetKeyCode(StrGet(str,i)))<br>
wait(15)<br>
KeyUp(GetKeyCode(StrGet(str,i)))<br>
wait(16)<br>
i:=i+1</p>
<p>if(cap=True)then<br>
begin<br>
KeyUp(16)<br>
end;</p>
<p>end;</p>
<p>wait(300)<br>
end;</p>
<p>//–===================================–\<br>
procedure Login(Username, Password: String; User: Integer); {v1.0b}<br>
//–===================================–\<br>
//  -=[Rena]=-  -=[1 May 2007]=-<br>
// Logs in using the given data.<br>
// Traps (Could Not Find Server) and<br>
// (Login Refused).<br>
var<br>
reset: Boolean;</p>
<p>begin</p>
<p>if (GetColor(599,43) = 1585490) then<br>
begin<br>
Writeln(’–=== Logging Out ===–’)<br>
ClickMouse(RandomRange(595,604),RandomRange(39,47),True)<br>
Writeln(’ - ClickMouse: OK’)<br>
ClickMouse(RandomRange(289,364),RandomRange(213,226),True)<br>
wait(50)<br>
writeln(’–=== Logout successful ===–’)<br>
end;</p>
<p>Writeln(’–=== Login; Account: ’ + UserName + ’ ===–’)<br>
repeat<br>
reset:=False<br>
Writeln(’ - ClickMouse: Play Game’)<br>
ClickMouse(36+random(166),346+random(29),True)<br>
Writeln(’ - Waiting for Login Box’)</p>
<pre><code>repeat
 if (GetColor(213,222)=13033199) then
  begin
  writeln(' - Could Not Find Server')
  ClickMouse(400,310,True)
  wait(1)
  writeln('------------------------')
  wait(100)
  Writeln(' - ClickMouse: Play Game')
  ClickMouse(36+random(166),346+random(29),True)
  Writeln(' - Waiting for Login Box')
  end;
wait(1)
until(GetColor(317,342)=16777215) //White A
</code></pre>
<p>wait(50)<br>
writeln(’ - Typing Account Name and Password’)<br>
ReadString(Username + chr(9) + Password + chr(13))<br>
writeln(’ - Connecting’)</p>
<pre><code>repeat
 if (GetColor(213,222)=13033199) then
  begin
  writeln(' - Login refused')
  ClickMouse(400,310,True)
  writeln(' - ClickMouse: Cancel')
  ClickMouse(RandomRange(460,530),RandomRange(415,430),True)
  wait(1)
  writeln('------------------------')
  reset:=True
  end;
until((GetColor(494,70)=14608367) or (reset=True)) //White C
</code></pre>
<p>until(reset=False)</p>
<p>case user of<br>
0: begin end;<br>
1: begin<br>
ClickMouse(RandomRange(500,580),RandomRange(120,140),True)<br>
writeln(’ - Selecting Character 1’)<br>
repeat<br>
wait(100)<br>
until(GetColor(340,61)&lt;&gt;2183803)<br>
end;<br>
2: begin<br>
ClickMouse(RandomRange(500,580),RandomRange(240,260),True)<br>
writeln(’ - Selecting Character 2’)<br>
repeat<br>
wait(100)<br>
until(GetColor(340,61)&lt;&gt;2183803)<br>
end;<br>
3: begin<br>
ClickMouse(RandomRange(500,580),RandomRange(360,380),True)<br>
writeln(’ - Selecting Character 3’)<br>
repeat<br>
wait(100)<br>
until(GetColor(340,61)&lt;&gt;2183803)<br>
end;<br>
end;</p>
<p>Writeln(’–=== Login Successful ===–’)<br>
end;</p>
<p>//–===================================–\<br>
Procedure AutoMessage; {v—}<br>
//–===================================–\<br>
//  -=[Rena]=-  -=[30 April 2007]=-<br>
// Types the string (mess) every (time)<br>
// seconds.<br>
begin<br>
ActivateClient;<br>
ReadString(mess);<br>
wait(100)<br>
ReadString(chr(13))<br>
SetTimeout(time,‘AutoMessage’)<br>
end;</p>
<p>//–===================================–\<br>
Procedure SendMessage(sender: TObject); {v—}<br>
//–===================================–\<br>
//  -=[Rena]=-  -=[30 April 2007]=-<br>
// Ran when the player presses the Send<br>
// button on the main form.<br>
// Prepares the procedure (AutoMessage) for<br>
// sending strings to the client.<br>
begin<br>
mess:=auto_message.text<br>
writeINI(‘MESSAGE’,‘Message’,mess,scriptPath + ‘MT_Setup.ini’)</p>
<p>if (auto_global.Checked=True) then<br>
begin<br>
mess:=(’`’ + mess)<br>
writeINI(‘MESSAGE’,‘Global’,‘True’,scriptPath + ‘MT_Setup.ini’)<br>
end else<br>
begin<br>
writeINI(‘MESSAGE’,‘Global’,‘False’,scriptPath + ‘MT_Setup.ini’)<br>
end;</p>
<p>time:=strtoint(auto_time.text)<br>
writeINI(‘MESSAGE’,‘Time’,inttostr(time),scriptPath + ‘MT_Setup.ini’)<br>
frmDesign.ModalResult:= mrOk;<br>
AutoMessage;<br>
end;</p>
<p>//–===================================–\<br>
Procedure StopMessage(sender: TObject); {v—}<br>
//–===================================–\<br>
//  -=[Rena]=-  -=[31 April 2007]=-<br>
begin<br>
ClearTimeouts;<br>
end;</p>
<p>//–===================================–\<br>
Procedure NewChar(sender: TObject); {v—}<br>
//–===================================–\<br>
//  -=[Rena]=-  -=[30 April 2007]=-<br>
// Gets and stores Account Name and Password<br>
// into MT_Setup.ini<br>
begin<br>
i:=account_list.Items.Count<br>
WriteINI(‘ACCOUNT’,‘Acc’ + inttostr(i),ReadLn(‘Account Name?’),scriptPath + ‘MT_Setup.ini’)<br>
WriteINI(‘ACCOUNT’,‘Pass’ + inttostr(i),ReadLn(‘Password?’),scriptPath + ‘MT_Setup.ini’)<br>
WriteINI(‘ACCOUNT’,‘User’ + inttostr(i),ReadLn(‘Character Number? (1 - Top, 2 - Middle, 3 - Bottom’),scriptPath + ‘MT_Setup.ini’)<br>
WriteINI(‘ACCOUNT’,‘Char’ + inttostr(i),ReadLn(‘Character Name?’),scriptPath + ‘MT_Setup.ini’)<br>
WriteINI(‘ACCOUNT’,‘TotalAccounts’,IntToStr(StrToInt(ReadINI(‘ACCOUNT’,‘TotalAccounts’,scriptPath + ‘MT_Setup.ini’)) + 1),scriptPath + ‘MT_Setup.ini’)<br>
account_list.Items.Add(ReadINI(‘Account’,‘Char’ + inttostr(i),scriptPath + ‘MT_Setup.ini’))<br>
end;</p>
<p>//–===================================–\<br>
Procedure UseAccount(sender: TObject); {v—}<br>
//–===================================–\<br>
//  -=[Rena]=-  -=[30 April 2007]=-<br>
// Takes Account Name, Password and User<br>
// from MT_Setup.ini then runs Login procdure.<br>
begin<br>
ActivateClient;<br>
wait(100)<br>
i:=0<br>
for i:=account_list.Items.Count - 1 downto 0 do<br>
if account_list.Selected[i] then<br>
begin<br>
ActivateClient;<br>
wait(100)<br>
Login(readINI(‘ACCOUNT’,‘Acc’ + IntToStr(i),scriptPath + ‘MT_Setup.ini’),readINI(‘ACCOUNT’,‘Pass’ + IntToStr(i),scriptPath + ‘MT_Setup.ini’),StrToInt(readINI(‘ACCOUNT’,‘User’ + IntToStr(i),scriptPath + ‘MT_Setup.ini’)))<br>
end;<br>
end;</p>
<p>//–===================================–\<br>
Procedure Delete(sender: TObject); {v—}<br>
//–===================================–\<br>
//  -=[Rena]=-  -=[2 May 2007]=-<br>
// Deletes all data selected by the user.<br>
Var<br>
x: Integer;</p>
<p>begin<br>
i:=0<br>
for i:=account_list.Items.Count - 1 downto 0 do<br>
if account_list.Selected[i] then<br>
begin<br>
account_list.items.delete(i)<br>
WriteINI(‘ACCOUNT’,‘TotalAccounts’,IntToStr(StrToInt(ReadINI(‘ACCOUNT’,‘TotalAccounts’,scriptPath + ‘MT_Setup.ini’)) - 1),scriptPath + ‘MT_Setup.ini’)<br>
x:=i<br>
repeat<br>
WriteINI(‘ACCOUNT’,‘Acc’ + IntToStr(x),ReadINI(‘ACCOUNT’,‘Acc’ + IntToStr(x +1 ),scriptPath + ‘MT_Setup.ini’),scriptPath + ‘MT_Setup.ini’)<br>
WriteINI(‘ACCOUNT’,‘Pass’ + IntToStr(x),ReadINI(‘ACCOUNT’,‘Pass’ + IntToStr(x +1 ),scriptPath + ‘MT_Setup.ini’),scriptPath + ‘MT_Setup.ini’)<br>
WriteINI(‘ACCOUNT’,‘User’ + IntToStr(x),ReadINI(‘ACCOUNT’,‘User’ + IntToStr(x +1 ),scriptPath + ‘MT_Setup.ini’),scriptPath + ‘MT_Setup.ini’)<br>
WriteINI(‘ACCOUNT’,‘Char’ + IntToStr(x),ReadINI(‘ACCOUNT’,‘Char’ + IntToStr(x +1 ),scriptPath + ‘MT_Setup.ini’),scriptPath + ‘MT_Setup.ini’)<br>
x:=x+1<br>
until(x&gt;=account_list.Items.Count)<br>
end;<br>
end;</p>
<p>//–===================================–\<br>
Procedure Load(sender: TObject); {v—}<br>
//–===================================–\<br>
//  -=[Rena]=-  -=[2 May 2007]=-<br>
// Deletes all data in account_list then<br>
// reads and writes new data from MT_Setup.ini<br>
begin<br>
i:=0<br>
for i:=account_list.Items.Count - 1 downto 0 do<br>
account_list.items.delete(i)</p>
<p>i:=0<br>
if (StrToInt(ReadINI(‘ACCOUNT’,‘TotalAccounts’,scriptPath + ‘MT_Setup.ini’)) &gt; 0) then<br>
begin<br>
writeln(’–=== Setting up Listbox ===–’)<br>
repeat<br>
account_list.Items.Add(ReadINI(‘ACCOUNT’,‘Char’ + IntToStr(i),scriptPath + ‘MT_Setup.ini’))<br>
i:=i+1<br>
until(i &gt;= StrToInt(ReadINI(‘ACCOUNT’,‘TotalAccounts’,scriptPath + ‘MT_Setup.ini’)))<br>
writeln(’–=== Listbox Completed ===–’)<br>
end;<br>
end;</p>
<p>//–===================================–\<br>
Procedure Done(sender: TObject); {v—}<br>
//–===================================–\<br>
//  -=[Rena]=-  -=[30 April 2007]=-<br>
// Closes the main form.<br>
begin<br>
frmDesign.ModalResult:= mrOk;<br>
end;</p>
<p>//–===================================–\<br>
Procedure InitForm; {v—}<br>
//–===================================–\<br>
// -=[Rena]=-  -=[30 April 2007]=-<br>
// Setups the form, buttons, editboxes etc<br>
begin<br>
frmDesign := CreateForm;<br>
frmDesign.Left := 298;<br>
frmDesign.Top := 262;<br>
frmDesign.Width := 358;<br>
frmDesign.Height := 483;<br>
frmDesign.Caption := ‘Market Tools v0.1’;<br>
frmDesign.Color := clBtnFace;<br>
frmDesign.Font.Color := clWindowText;<br>
frmDesign.Font.Height := -11;<br>
frmDesign.Font.Name := ‘MS Sans Serif’;<br>
frmDesign.Font.Style := [];<br>
frmDesign.Visible := False;<br>
frmDesign.PixelsPerInch := 96;<br>
GroupBox2 := TGroupBox.Create(frmDesign);<br>
GroupBox2.Parent := frmDesign;<br>
GroupBox2.Left := 8;<br>
GroupBox2.Top := 7;<br>
GroupBox2.Width := 329;<br>
GroupBox2.Height := 149;<br>
GroupBox2.Caption := ‘Auto Message’;<br>
GroupBox2.TabOrder := 0;<br>
Label1 := TLabel.Create(GroupBox2);<br>
Label1.Parent := GroupBox2;<br>
Label1.Left := 8;<br>
Label1.Top := 16;<br>
Label1.Width := 46;<br>
Label1.Height := 13;<br>
Label1.Caption := ‘Message:’;<br>
Label2 := TLabel.Create(GroupBox2);<br>
Label2.Parent := GroupBox2;<br>
Label2.Left := 8;<br>
Label2.Top := 64;<br>
Label2.Width := 105;<br>
Label2.Height := 13;<br>
Label2.Caption := ‘Send Time (Seconds):’;<br>
auto_message := TEdit.Create(GroupBox2);<br>
auto_message.Parent := GroupBox2;<br>
auto_message.Left := 8;<br>
auto_message.Top := 32;<br>
auto_message.Width := 312;<br>
auto_message.Height := 21;<br>
auto_message.TabOrder := 0;<br>
auto_time := TEdit.Create(GroupBox2);<br>
auto_time.Parent := GroupBox2;<br>
auto_time.Left := 8;<br>
auto_time.Top := 80;<br>
auto_time.Width := 104;<br>
auto_time.Height := 21;<br>
auto_time.TabOrder := 1;<br>
auto_global := TCheckBox.Create(GroupBox2);<br>
auto_global.Parent := GroupBox2;<br>
auto_global.Left := 128;<br>
auto_global.Top := 80;<br>
auto_global.Width := 97;<br>
auto_global.Height := 17;<br>
auto_global.Caption := ‘Send on global’;<br>
auto_global.TabOrder := 2;<br>
auto_send := TButton.Create(GroupBox2);<br>
auto_send.Parent := GroupBox2;<br>
auto_send.Left := 8;<br>
auto_send.Top := 112;<br>
auto_send.Width := 150;<br>
auto_send.Height := 25;<br>
auto_send.Caption := ‘Send’;<br>
auto_send.TabOrder := 3;<br>
auto_send.onClick :=@SendMessage;<br>
auto_stop := TButton.Create(frmDesign);<br>
auto_stop.Parent := frmDesign;<br>
auto_stop.Left := 176;<br>
auto_stop.Top := 120;<br>
auto_stop.Width := 150;<br>
auto_stop.Height := 25;<br>
auto_stop.Caption := ‘Stop’;<br>
auto_stop.TabOrder := 8;<br>
auto_stop.Enabled := false;<br>
auto_stop.onClick :=@StopMessage;<br>
close := TButton.Create(frmDesign);<br>
close.Parent := frmDesign;<br>
close.Left := 8;<br>
close.Top := 416;<br>
close.Width := 330;<br>
close.Height := 25;<br>
close.Caption := ‘Close’;<br>
close.TabOrder := 2;<br>
close.onClick :=@Done;<br>
account := TGroupBox.Create(frmDesign);<br>
account.Parent := frmDesign;<br>
account.Left := 40;<br>
account.Top := 168;<br>
account.Width := 268;<br>
account.Height := 232;<br>
account.Caption := ‘Switch Account’;<br>
account.TabOrder := 3;<br>
account_list := TListBox.Create(account);<br>
account_list.Parent := account;<br>
account_list.Left := 16;<br>
account_list.Top := 24;<br>
account_list.Width := 121;<br>
account_list.Height := 193;<br>
account_list.ItemHeight := 13;<br>
account_list.TabOrder := 0;<br>
account_New := TButton.Create(account);<br>
account_New.Parent := account;<br>
account_New.Left := 144;<br>
account_New.Top := 32;<br>
account_New.Width := 111;<br>
account_New.Height := 25;<br>
account_New.Caption := ‘New Character’;<br>
account_New.TabOrder := 1;<br>
account_New.onClick :=@NewChar;<br>
account_delete := TButton.Create(account);<br>
account_delete.Parent := account;<br>
account_delete.Left := 144;<br>
account_delete.Top := 64;<br>
account_delete.Width := 111;<br>
account_delete.Height := 25;<br>
account_delete.Caption := ‘Delete Character’;<br>
account_delete.TabOrder := 2;<br>
account_delete.onClick :=@Delete;<br>
account_use := TButton.Create(account);<br>
account_use.Parent := account;<br>
account_use.Left := 144;<br>
account_use.Top := 192;<br>
account_use.Width := 111;<br>
account_use.Height := 25;<br>
account_use.Caption := ‘Use Character’;<br>
account_use.TabOrder := 3;<br>
account_use.onClick := <span class="mention">@UseAccount</span>;<br>
account_checkdelete := TCheckBox.Create(account);<br>
account_checkdelete.Parent := account;<br>
account_checkdelete.Left := 152;<br>
account_checkdelete.Top := 96;<br>
account_checkdelete.Width := 97;<br>
account_checkdelete.Height := 17;<br>
account_checkdelete.Caption := ‘Delete?’;<br>
account_checkdelete.TabOrder := 4;<br>
account_checkdelete.Enabled := False;<br>
account_load := TButton.Create(account);<br>
account_load.Parent := account;<br>
account_load.Left := 144;<br>
account_load.Top := 160;<br>
account_load.Width := 111;<br>
account_load.Height := 25;<br>
account_load.Caption := ‘Load Data’;<br>
account_load.TabOrder := 5;<br>
account_load.onClick :=@Load;<br>
end;</p>
<p>//–===================================–\<br>
Procedure SafeInitForm; {v—}<br>
//–===================================–\<br>
// -=[Scar]=-  -=[30 April 2007]=-<br>
var<br>
V: TVariantArray;<br>
begin<br>
setarraylength(V,0);<br>
ThreadSafeCall(‘InitForm’,v);<br>
end;</p>
<p>//–===================================–\<br>
Procedure ShowFormModal; {v—}<br>
//–===================================–\<br>
// -=[Scar]=-  -=[30 April 2007]=-<br>
begin<br>
frmDesign.ShowModal;<br>
<a href="//frmDesign.Show" rel="nofollow noopener">//frmDesign.Show</a>;<br>
end;</p>
<p>//–===================================–\<br>
Procedure SafeShowFormModal; {v—}<br>
//–===================================–\<br>
// -=[Scar]=-  -=[30 April 2007]=-<br>
var<br>
V: TVariantArray;<br>
begin<br>
setarraylength(V,0);<br>
ThreadSafeCall(‘ShowFormModal’,v);<br>
end;</p>
<p>//–===================================–\<br>
begin<br>
FindWindow(‘Endless Online’)<br>
SafeInitForm;<br>
Startup;<br>
SafeShowFormModal;<br>
end.<br>
//–=End Script========================–\[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/form-procedures-with-loops-freezing-scar/87345/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/form-procedures-with-loops-freezing-scar/87345/2</link>
        <pubDate>Thu, 03 May 2007 03:17:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-87345-2</guid>
        <source url="https://forum.moparisthebest.com/t/form-procedures-with-loops-freezing-scar/87345.rss">Form + Procedure&#39;s with Loops freezing Scar</source>
      </item>
      <item>
        <title>Form + Procedure&#39;s with Loops freezing Scar</title>
        <dc:creator><![CDATA[@rena rena]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rena">@rena</a> wrote:</p>
          <blockquote>
              <p>I posted this problem on freddy’s fourm and I was directed here, so I’ll just copy and paste what I posted there <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>Hello all, I’ve been writting script for a game called Endless Online (<a href="http://www.endless-online.com" rel="nofollow noopener">www.endless-online.com</a>) for quite a long time now. And recently I’ve tried using forms to make it easier for my end user.</p>
<p>When I try running my script and pressing the login button, the first mouse move command will work then scar will freeze.<br>
Is it possible to have the form displayed while using MoveMouse procedures etc<br>
Or can I hide hide the form, then after the procedures have finished display the form again?</p>
<p>Here’s my script:</p>
<p>[code]//–=Start Script======================–\<br>
program MarketTools; {V0.1b}<br>
//–===================================–\<br>
//  -=[Rena]=-  -=[30 April 2007]=-<br>
// ____ Market Tools v0.1b ____<br>
//<br>
// Features:<br>
//  - Send marketing messages periodicly.<br>
//  - Switch Accounts/Characters with a single<br>
//    button press.<br>
//<br>
// Updated Log:<br>
//  v0.1<br>
//   - First Version<br>
//<br>
//  v0.1b<br>
//   - Login Script Completed<br>
//   - Form/Login Script Bug Found<br>
//<br>
// Instructions:<br>
// Open Endless Online.<br>
//<br>
// Run the script, a file will be created in<br>
// the same location as this script called<br>
// MT_Setup.ini.<br>
//<br>
// To send a perodic message type your message<br>
// into the message box, type how long you want<br>
// the script to wait before resending the<br>
// message and then press Send.<br>
// To stop sending messages, stop the script<br>
// from running.<br>
//<br>
// To switch accounts, first click the setup<br>
// button next to an empty account slot.<br>
// Fill out the form with your Account Name<br>
// and Password.<br>
// Click the account of your choice to switch<br>
// to that account.<br>
//</p>
<p>var<br>
frmDesign : TForm;<br>
GroupBox2 : TGroupBox;<br>
Label1 : TLabel;<br>
Label2 : TLabel;<br>
auto_message : TEdit;<br>
auto_time : TEdit;<br>
auto_global : TCheckBox;<br>
auto_send : TButton;<br>
GroupBox1 : TGroupBox;<br>
account_1 : TButton;<br>
setup_account_1 : TButton;<br>
account_2 : TButton;<br>
account_3 : TButton;<br>
setup_account_2 : TButton;<br>
setup_account_3 : TButton;<br>
auto_stop : TButton;<br>
close : TButton;<br>
mess: String;<br>
time: Integer;</p>
<p>//–===================================–\<br>
Procedure Startup; {v—}<br>
//–===================================–\<br>
//  -=[Rena]=-  -=[30 April 2007]=-<br>
// Creates MT_Setup.ini if it’s not in the same folder<br>
// as the script.<br>
// Reads MT_Setup.ini to find default values for the<br>
// form.<br>
begin<br>
if (fileExists(scriptPath + ‘MT_Setup.ini’) = false) then<br>
begin<br>
WriteLn(’–== Setting Up MT_Setup.ini ==–’)<br>
WriteINI(‘MESSAGE’,‘Message’,’’,scriptPath + ‘MT_Setup.ini’)<br>
WriteINI(‘MESSAGE’,‘Time’,‘30’,scriptPath + ‘MT_Setup.ini’)<br>
WriteINI(‘MESSAGE’,‘Global’,‘False’,scriptPath + ‘MT_Setup.ini’)<br>
WriteINI(‘ACCOUNT’,‘Acc1’,‘No_Account’,scriptPath + ‘MT_Setup.ini’)<br>
WriteINI(‘ACCOUNT’,‘Pass1’,’’,scriptPath + ‘MT_Setup.ini’)<br>
WriteINI(‘ACCOUNT’,‘Acc2’,‘No_Account’,scriptPath + ‘MT_Setup.ini’)<br>
WriteINI(‘ACCOUNT’,‘Pass2’,’’,scriptPath + ‘MT_Setup.ini’)<br>
WriteINI(‘ACCOUNT’,‘Acc3’,‘No_Account’,scriptPath + ‘MT_Setup.ini’)<br>
WriteINI(‘ACCOUNT’,‘Pass3’,’’,scriptPath + ‘MT_Setup.ini’)<br>
end;</p>
<p>auto_message.Text:=ReadINI(‘MESSAGE’,‘Message’,scriptPath + ‘MT_Setup.ini’)<br>
auto_time.Text:=ReadINI(‘MESSAGE’,‘Time’,scriptPath + ‘MT_Setup.ini’)</p>
<p>if (ReadINI(‘MESSAGE’,‘Global’,scriptPath + ‘MT_Setup.ini’) = ‘True’) then<br>
begin<br>
auto_global.Checked:=True<br>
end else<br>
begin<br>
auto_global.Checked:=False<br>
end;</p>
<p>account_1.Caption := 'Account: ’ + ReadINI(‘ACCOUNT’,‘Acc1’,scriptPath + ‘MT_Setup.ini’);<br>
account_2.Caption := 'Account: ’ + ReadINI(‘ACCOUNT’,‘Acc2’,scriptPath + ‘MT_Setup.ini’);<br>
account_3.Caption := 'Account: ’ + ReadINI(‘ACCOUNT’,‘Acc3’,scriptPath + ‘MT_Setup.ini’);<br>
end;</p>
<p>//–===================================–\<br>
Procedure ReadString(str: String); {v1.0}<br>
//–===================================–\<br>
//  -=[Rena]=-  -=[30 April 2007]=-<br>
// Takes a string and uses KeyDown and KeyUp<br>
// to send it to the client.<br>
// Use forward slashes (/) to declare a<br>
// capital letter or symbol.<br>
var<br>
i,strLength :Integer;<br>
cap: Boolean;</p>
<p>begin<br>
i:=1<br>
strLength:=Length(str)<br>
cap:=False</p>
<p>while(i&lt;strLength+1) do<br>
begin</p>
<p>if(GetKeyCode(StrGet(str,i))=191)then<br>
begin<br>
KeyDown(16)<br>
cap:=True<br>
i:=i+1<br>
end;</p>
<p>KeyDown(GetKeyCode(StrGet(str,i)))<br>
wait(15)<br>
KeyUp(GetKeyCode(StrGet(str,i)))<br>
wait(16)<br>
i:=i+1</p>
<p>if(cap=True)then<br>
begin<br>
KeyUp(16)<br>
end;</p>
<p>end;</p>
<p>wait(300)<br>
end;</p>
<p>//–===================================–\<br>
procedure Login(Username, Password: String); {v1.0b}<br>
//–===================================–\<br>
//  -=[Rena]=-  -=[30 April 2007]=-<br>
// Logs in using the given data.<br>
// Traps (Could Not Find Server) and<br>
// (Login Refused).<br>
var<br>
reset: Boolean;</p>
<p>begin<br>
Writeln(’–=== Login; Account: ’ + UserName + ’ ===–’)<br>
repeat<br>
reset:=False<br>
Writeln(’ - ClickMouse: Play Game’)<br>
ClickMouse(31+random(166),346+random(29),True)<br>
Writeln(’ - Waiting for Login Box’)</p>
<pre><code>repeat
 if (GetColor(213,222)=13033199) then
  begin
  writeln(' - Could Not Find Server')
  ClickMouse(400,310,True)
  wait(50)
  writeln('------------------------')
  Writeln(' - ClickMouse: Play Game')
  ClickMouse(31+random(166),346+random(29),True)
  Writeln(' - Waiting for Login Box')
  end;
wait(10)
until(GetColor(317,342)=16777215) //White A
</code></pre>
<p>wait(10)<br>
writeln(’ - Typing Account Name and Password’)<br>
ReadString(Username + chr(9) + Password)<br>
writeln(’ - Connecting’)<br>
ClickMouse(RandomRange(367,445),RandomRange(415,430),True)</p>
<pre><code>repeat
 if (GetColor(213,222)=13033199) then
  begin
  writeln(' - Login refused')
  ClickMouse(400,310,True)
  wait(50)
  writeln('------------------------')
  reset:=True
  end;
until((GetColor(494,70)=14608367) or (reset=True)) //White C
</code></pre>
<p>until(reset=False)</p>
<p>Writeln(’–=== Login Successful ===–’)<br>
end;</p>
<p>//–===================================–\<br>
Procedure AutoMessage; {v—}<br>
//–===================================–\<br>
//  -=[Rena]=-  -=[30 April 2007]=-<br>
// Types the string (mess) every (time)<br>
// seconds.<br>
begin<br>
ActivateClient;<br>
ReadString(mess);<br>
wait(100)<br>
ReadString(chr(13))<br>
SetTimeout(time,‘AutoMessage’)<br>
end;</p>
<p>//–===================================–\<br>
Procedure SendMessage(sender: TObject); {v—}<br>
//–===================================–\<br>
//  -=[Rena]=-  -=[30 April 2007]=-<br>
// Ran when the player presses the Send<br>
// button on the main form.<br>
// Prepares the procedure (AutoMessage) for<br>
// sending strings to the client.<br>
begin<br>
mess:=auto_message.text<br>
writeINI(‘MESSAGE’,‘Message’,mess,scriptPath + ‘MT_Setup.ini’)</p>
<p>if (auto_global.Checked=True) then<br>
begin<br>
mess:=(’`’ + mess)<br>
writeINI(‘MESSAGE’,‘Global’,‘True’,scriptPath + ‘MT_Setup.ini’)<br>
end else<br>
begin<br>
writeINI(‘MESSAGE’,‘Global’,‘False’,scriptPath + ‘MT_Setup.ini’)<br>
end;</p>
<p>time:=strtoint(auto_time.text)<br>
writeINI(‘MESSAGE’,‘Time’,inttostr(time),scriptPath + ‘MT_Setup.ini’)<br>
frmDesign.ModalResult:= mrOk;<br>
AutoMessage;<br>
end;</p>
<p>//–===================================–\<br>
Procedure Setup1(sender: TObject); {v—}<br>
//–===================================–\<br>
//  -=[Rena]=-  -=[30 April 2007]=-<br>
// Gets and stores Account Name and Password<br>
// into MT_Setup.ini<br>
begin<br>
WriteINI(‘ACCOUNT’,‘Acc1’,ReadLn('Account Name? (Current: ’ + ReadINI(‘ACCOUNT’,‘Acc1’,scriptPath + ‘MT_Setup.ini’) + ‘)’),scriptPath + ‘MT_Setup.ini’)<br>
account_1.Caption := 'Account: ’ + ReadINI(‘ACCOUNT’,‘Acc1’,scriptPath + ‘MT_Setup.ini’);<br>
WriteINI(‘ACCOUNT’,‘Pass1’,ReadLn('Password? (Current: ’ + ReadINI(‘ACCOUNT’,‘Pass1’,scriptPath + ‘MT_Setup.ini’) + ‘)’),scriptPath + ‘MT_Setup.ini’)<br>
end;</p>
<p>//–===================================–\<br>
Procedure Setup2(sender: TObject); {v—}<br>
//–===================================–\<br>
//  -=[Rena]=-  -=[30 April 2007]=-<br>
// Gets and stores Account Name and Password<br>
// into MT_Setup.ini<br>
begin<br>
WriteINI(‘ACCOUNT’,‘Acc2’,ReadLn('Account Name? (Current: ’ + ReadINI(‘ACCOUNT’,‘Acc2’,scriptPath + ‘MT_Setup.ini’) + ‘)’),scriptPath + ‘MT_Setup.ini’)<br>
account_2.Caption := 'Account: ’ + ReadINI(‘ACCOUNT’,‘Acc2’,scriptPath + ‘MT_Setup.ini’);<br>
WriteINI(‘ACCOUNT’,‘Pass2’,ReadLn('Password? (Current: ’ + ReadINI(‘ACCOUNT’,‘Pass2’,scriptPath + ‘MT_Setup.ini’) + ‘)’),scriptPath + ‘MT_Setup.ini’)<br>
end;</p>
<p>//–===================================–\<br>
Procedure Setup3(sender: TObject); {v—}<br>
//–===================================–\<br>
//  -=[Rena]=-  -=[30 April 2007]=-<br>
// Gets and stores Account Name and Password<br>
// into MT_Setup.ini<br>
begin<br>
WriteINI(‘ACCOUNT’,‘Acc3’,ReadLn('Account Name? (Current: ’ + ReadINI(‘ACCOUNT’,‘Acc3’,scriptPath + ‘MT_Setup.ini’) + ‘)’),scriptPath + ‘MT_Setup.ini’)<br>
account_3.Caption := 'Account: ’ + ReadINI(‘ACCOUNT’,‘Acc3’,scriptPath + ‘MT_Setup.ini’);<br>
WriteINI(‘ACCOUNT’,‘Pass3’,ReadLn('Password? (Current: ’ + ReadINI(‘ACCOUNT’,‘Pass3’,scriptPath + ‘MT_Setup.ini’) + ‘)’),scriptPath + ‘MT_Setup.ini’)<br>
end;</p>
<p>//–===================================–\<br>
Procedure Login1(sender: TObject); {v—}<br>
//–===================================–\<br>
//  -=[Rena]=-  -=[30 April 2007]=-<br>
// Ran when the player presses the top<br>
// Account button the the main form.<br>
// Runs the {Login} procedure with the<br>
// Account Name and Password stored in<br>
// MT_Setup.ini<br>
begin<br>
ActivateClient;<br>
Login(readINI(‘ACCOUNT’,‘Acc1’,scriptPath + ‘MT_Setup.ini’),readINI(‘ACCOUNT’,‘Pass1’,scriptPath + ‘MT_Setup.ini’))<br>
end;</p>
<p>//–===================================–\<br>
Procedure Login2(sender: TObject); {v—}<br>
//–===================================–\<br>
//  -=[Rena]=-  -=[30 April 2007]=-<br>
// Ran when the player presses the middle<br>
// Account button the the main form.<br>
// Runs the {Login} procedure with the<br>
// Account Name and Password stored in<br>
// MT_Setup.ini<br>
begin<br>
ActivateClient;<br>
Login(readINI(‘ACCOUNT’,‘Acc2’,scriptPath + ‘MT_Setup.ini’),readINI(‘ACCOUNT’,‘Pass2’,scriptPath + ‘MT_Setup.ini’))<br>
end;</p>
<p>//–===================================–\<br>
Procedure Login3(sender: TObject); {v—}<br>
//–===================================–\<br>
//  -=[Rena]=-  -=[30 April 2007]=-<br>
// Ran when the player presses the bottom<br>
// Account button the the main form.<br>
// Runs the {Login} procedure with the<br>
// Account Name and Password stored in<br>
// MT_Setup.ini<br>
begin<br>
ActivateClient;<br>
Login(readINI(‘ACCOUNT’,‘Acc3’,scriptPath + ‘MT_Setup.ini’),readINI(‘ACCOUNT’,‘Pass3’,scriptPath + ‘MT_Setup.ini’))<br>
account_1.Caption<br>
end;</p>
<p>//–===================================–\<br>
Procedure Done(sender: TObject); {v—}<br>
//–===================================–\<br>
//  -=[Rena]=-  -=[30 April 2007]=-<br>
// Closes the main form.<br>
begin<br>
frmDesign.ModalResult:= mrOk;<br>
end;</p>
<p>//–===================================–\<br>
Procedure InitForm; {v—}<br>
//–===================================–\<br>
// -=[Rena]=-  -=[30 April 2007]=-<br>
// Setups the form, buttons, editboxes etc<br>
begin<br>
frmDesign := CreateForm;<br>
frmDesign.Left := 276;<br>
frmDesign.Top := 138;<br>
frmDesign.Width := 354;<br>
frmDesign.Height := 356;<br>
frmDesign.Caption := ‘Market Tools v0.1’;<br>
frmDesign.Color := clBtnFace;<br>
frmDesign.Font.Color := clWindowText;<br>
frmDesign.Font.Height := -11;<br>
frmDesign.Font.Name := ‘MS Sans Serif’;<br>
frmDesign.Font.Style := [];<br>
frmDesign.Visible := False;<br>
frmDesign.PixelsPerInch := 96;<br>
GroupBox2 := TGroupBox.Create(frmDesign);<br>
GroupBox2.Parent := frmDesign;<br>
GroupBox2.Left := 8;<br>
GroupBox2.Top := 8;<br>
GroupBox2.Width := 329;<br>
GroupBox2.Height := 149;<br>
GroupBox2.Caption := ‘Auto Message’;<br>
GroupBox2.TabOrder := 7;<br>
Label1 := TLabel.Create(GroupBox2);<br>
Label1.Parent := GroupBox2;<br>
Label1.Left := 8;<br>
Label1.Top := 16;<br>
Label1.Width := 46;<br>
Label1.Height := 13;<br>
Label1.Caption := ‘Message:’;<br>
Label2 := TLabel.Create(GroupBox2);<br>
Label2.Parent := GroupBox2;<br>
Label2.Left := 8;<br>
Label2.Top := 64;<br>
Label2.Width := 105;<br>
Label2.Height := 13;<br>
Label2.Caption := ‘Send Time (Seconds):’;<br>
auto_message := TEdit.Create(GroupBox2);<br>
auto_message.Parent := GroupBox2;<br>
auto_message.Left := 8;<br>
auto_message.Top := 32;<br>
auto_message.Width := 312;<br>
auto_message.Height := 21;<br>
auto_message.TabOrder := 0;<br>
auto_time := TEdit.Create(GroupBox2);<br>
auto_time.Parent := GroupBox2;<br>
auto_time.Left := 8;<br>
auto_time.Top := 80;<br>
auto_time.Width := 104;<br>
auto_time.Height := 21;<br>
auto_time.TabOrder := 1;<br>
auto_global := TCheckBox.Create(GroupBox2);<br>
auto_global.Parent := GroupBox2;<br>
auto_global.Left := 128;<br>
auto_global.Top := 80;<br>
auto_global.Width := 97;<br>
auto_global.Height := 17;<br>
auto_global.Caption := ‘Send on global’;<br>
auto_global.TabOrder := 2;<br>
auto_send := TButton.Create(GroupBox2);<br>
auto_send.Parent := GroupBox2;<br>
auto_send.Left := 8;<br>
auto_send.Top := 112;<br>
auto_send.Width := 150;<br>
auto_send.Height := 25;<br>
auto_send.Caption := ‘Send’;<br>
auto_send.TabOrder := 3;<br>
auto_send.onClick :=@SendMessage;<br>
GroupBox1 := TGroupBox.Create(frmDesign);<br>
GroupBox1.Parent := frmDesign;<br>
GroupBox1.Left := 8;<br>
GroupBox1.Top := 168;<br>
GroupBox1.Width := 329;<br>
GroupBox1.Height := 118;<br>
GroupBox1.Caption := ‘Switch Account’;<br>
GroupBox1.TabOrder := 6;<br>
account_1 := TButton.Create(frmDesign);<br>
account_1.Parent := frmDesign;<br>
account_1.Left := 18;<br>
account_1.Top := 188;<br>
account_1.Width := 222;<br>
account_1.Height := 25;<br>
account_1.Caption := ‘Account: No_Account’;<br>
account_1.TabOrder := 0;<br>
account_1.OnClick :=@login1<br>
setup_account_1 := TButton.Create(frmDesign);<br>
setup_account_1.Parent := frmDesign;<br>
setup_account_1.Left := 250;<br>
setup_account_1.Top := 188;<br>
setup_account_1.Width := 75;<br>
setup_account_1.Height := 25;<br>
setup_account_1.Caption := ‘Setup’;<br>
setup_account_1.TabOrder := 1;<br>
setup_account_1.OnClick :=@setup1<br>
account_2 := TButton.Create(frmDesign);<br>
account_2.Parent := frmDesign;<br>
account_2.Left := 18;<br>
account_2.Top := 220;<br>
account_2.Width := 222;<br>
account_2.Height := 25;<br>
account_2.Caption := ‘Account: No_Account’;<br>
account_2.TabOrder := 2;<br>
account_2.OnClick :=@login2<br>
account_3 := TButton.Create(frmDesign);<br>
account_3.Parent := frmDesign;<br>
account_3.Left := 18;<br>
account_3.Top := 252;<br>
account_3.Width := 222;<br>
account_3.Height := 25;<br>
account_3.Caption := ‘Account: No_Account’;<br>
account_3.TabOrder := 3;<br>
account_3.OnClick :=@login3<br>
setup_account_2 := TButton.Create(frmDesign);<br>
setup_account_2.Parent := frmDesign;<br>
setup_account_2.Left := 250;<br>
setup_account_2.Top := 220;<br>
setup_account_2.Width := 75;<br>
setup_account_2.Height := 25;<br>
setup_account_2.Caption := ‘Setup’;<br>
setup_account_2.TabOrder := 4;<br>
setup_account_2.OnClick :=@setup2<br>
setup_account_3 := TButton.Create(frmDesign);<br>
setup_account_3.Parent := frmDesign;<br>
setup_account_3.Left := 250;<br>
setup_account_3.Top := 252;<br>
setup_account_3.Width := 75;<br>
setup_account_3.Height := 25;<br>
setup_account_3.Caption := ‘Setup’;<br>
setup_account_3.TabOrder := 5;<br>
setup_account_3.OnClick :=@setup3<br>
auto_stop := TButton.Create(frmDesign);<br>
auto_stop.Parent := frmDesign;<br>
auto_stop.Left := 176;<br>
auto_stop.Top := 120;<br>
auto_stop.Width := 150;<br>
auto_stop.Height := 25;<br>
auto_stop.Caption := ‘Stop’;<br>
auto_stop.TabOrder := 8;<br>
auto_stop.Enabled := false;<br>
close := TButton.Create(frmDesign);<br>
close.Parent := frmDesign;<br>
close.Left := 8;<br>
close.Top := 296;<br>
close.Width := 330;<br>
close.Height := 25;<br>
close.Caption := ‘Close’;<br>
close.TabOrder := 17;<br>
close.onClick :=@Done;<br>
end;</p>
<p>//–===================================–\<br>
Procedure SafeInitForm; {v—}<br>
//–===================================–\<br>
// -=[Scar]=-  -=[30 April 2007]=-<br>
var<br>
V: TVariantArray;<br>
begin<br>
setarraylength(V,0);<br>
ThreadSafeCall(‘InitForm’,v);<br>
end;</p>
<p>//–===================================–\<br>
Procedure ShowFormModal; {v—}<br>
//–===================================–\<br>
// -=[Scar]=-  -=[30 April 2007]=-<br>
begin<br>
frmDesign.ShowModal;<br>
<a href="//frmDesign.Show" rel="nofollow noopener">//frmDesign.Show</a>;<br>
end;</p>
<p>//–===================================–\<br>
Procedure SafeShowFormModal; {v—}<br>
//–===================================–\<br>
// -=[Scar]=-  -=[30 April 2007]=-<br>
var<br>
V: TVariantArray;<br>
begin<br>
setarraylength(V,0);<br>
ThreadSafeCall(‘ShowFormModal’,v);<br>
end;</p>
<p>//–===================================–\<br>
begin<br>
FindWindow(‘EndlessOnline’)<br>
SafeInitForm;<br>
Startup;<br>
SafeShowFormModal;<br>
WriteLn(’–=== Entering Loop ===–’)<br>
repeat<br>
wait(1000)<br>
until(false)<br>
end.<br>
//–=End Script========================–\[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/form-procedures-with-loops-freezing-scar/87345/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/form-procedures-with-loops-freezing-scar/87345/1</link>
        <pubDate>Mon, 30 Apr 2007 12:58:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-87345-1</guid>
        <source url="https://forum.moparisthebest.com/t/form-procedures-with-loops-freezing-scar/87345.rss">Form + Procedure&#39;s with Loops freezing Scar</source>
      </item>
  </channel>
</rss>
