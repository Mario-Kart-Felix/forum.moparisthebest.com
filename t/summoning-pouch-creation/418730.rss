<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Summoning pouch creation</title>
    <link>https://forum.moparisthebest.com/t/summoning-pouch-creation/418730</link>
    <description>I want  this to work... but the pouch&#39;s wont show!
[IMG]http://screensnapr.com/e/00o9Kk.png[/img]

this is my code:

[code]
                        Frames.SendInterface(character, 672, false);
                        Object[] options = new Object[] { &quot;List&lt;col=FF9040&gt;&quot;, &quot;Infuse-X&lt;col=FF9040&gt;&quot;, &quot;Infuse-All&lt;col=FF9040&gt;&quot;, &quot;Infuse-10&lt;col=FF9040&gt;&quot;, &quot;Infuse-5&lt;col=FF9040&gt;&quot;, &quot;Infuse&lt;col=FF9040&gt;&quot;, 20, 4, 43843599 };
                        character.Session.SendData(new RunScriptPacketComposer(757, &quot;Iiissssss&quot;, options).Serialize());
                        character.Session.SendData(new AccessMaskPacketComposer(190, 15, 669, 0, 78).Serialize());
[/code]


And this is my accessmask void.

[code]
/* 
    Jolt Environment
    Copyright (C) 2010 Jolt Environment Team

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.

*/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace RuneScape.Communication.Messages.Outgoing
{
    /// &lt;summary&gt;
    /// Composes a packet that creates a access mask.
    /// &lt;/summary&gt;
    public class AccessMaskPacketComposer : PacketComposer
    {
        #region Constructors

        /// &lt;summary&gt;
        /// Framindex for the thingy majig.
        /// &lt;/summary&gt;
        private int ID;

        /// &lt;summary&gt;
        /// Constructs new access mask packet.
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;set1&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;set2&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;interfaceId1&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;childId1&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;interfaceId2&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;childId2&quot;&gt;&lt;/param&gt;
        public AccessMaskPacketComposer(int set1, int set2, int interfaceId1, int childId1, int interfaceId2, int childId2)
        {
            //character.Session.SendData(new AccessMaskPacketComposer(190, 672, 15, 0, 78, 0).Serialize());
            //  p.frames.setAccessMask(p, 190, 15, 669, 0, 78);
            SetOpcode(34);
            AppendShortA(unchecked((short)set2));
            AppendLEShort(unchecked((short)set1));
            AppendInt(interfaceId1 &lt;&lt; 16 | childId1);
            AppendIntTertiary(interfaceId2 &lt;&lt; 16 | childId2);
        }

        /// &lt;summary&gt;
        /// Constructs new access mask packet.
        /// &lt;/summary&gt;
        /// &lt;param name=&quot;set&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;Interface&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;childId&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;offset&quot;&gt;&lt;/param&gt;
        /// &lt;param name=&quot;length&quot;&gt;&lt;/param&gt;
        public AccessMaskPacketComposer(int set, int Interface,int childId,int offset,int length)
        {
            //Program.Logger.WriteInfo(&quot;Access mask not supported - &quot;);
            SetOpcode(34);
            AppendShortA((short)length);
            AppendLEShort((short)offset);
            AppendIntTertiary((short)set);
            AppendInt(Interface &lt;&lt; 16 | childId);
        }


        #endregion Constructors
    }
}

[/code]</description>
    
    <lastBuildDate>Wed, 19 Oct 2011 10:18:28 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/summoning-pouch-creation/418730.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Summoning pouch creation</title>
        <dc:creator><![CDATA[@ipwnunoobs ipwnunoobs]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ipwnunoobs">@ipwnunoobs</a> wrote:</p>
          <blockquote>
              <p>I want  this to work… but the pouch’s wont show!<br>
<img src="http://screensnapr.com/e/00o9Kk.png" alt width="" height=""></p>
<p>this is my code:</p>
<pre><code class="lang-auto">                        Frames.SendInterface(character, 672, false);
                        Object[] options = new Object[] { "List&lt;col=FF9040&gt;", "Infuse-X&lt;col=FF9040&gt;", "Infuse-All&lt;col=FF9040&gt;", "Infuse-10&lt;col=FF9040&gt;", "Infuse-5&lt;col=FF9040&gt;", "Infuse&lt;col=FF9040&gt;", 20, 4, 43843599 };
                        character.Session.SendData(new RunScriptPacketComposer(757, "Iiissssss", options).Serialize());
                        character.Session.SendData(new AccessMaskPacketComposer(190, 15, 669, 0, 78).Serialize());</code></pre>
<p>And this is my accessmask void.</p>
<pre><code class="lang-auto">/* 
    Jolt Environment
    Copyright (C) 2010 Jolt Environment Team

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.

*/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace RuneScape.Communication.Messages.Outgoing
{
    /// &lt;summary&gt;
    /// Composes a packet that creates a access mask.
    /// &lt;/summary&gt;
    public class AccessMaskPacketComposer : PacketComposer
    {
        #region Constructors

        /// &lt;summary&gt;
        /// Framindex for the thingy majig.
        /// &lt;/summary&gt;
        private int ID;

        /// &lt;summary&gt;
        /// Constructs new access mask packet.
        /// &lt;/summary&gt;
        /// &lt;param name="set1"&gt;&lt;/param&gt;
        /// &lt;param name="set2"&gt;&lt;/param&gt;
        /// &lt;param name="interfaceId1"&gt;&lt;/param&gt;
        /// &lt;param name="childId1"&gt;&lt;/param&gt;
        /// &lt;param name="interfaceId2"&gt;&lt;/param&gt;
        /// &lt;param name="childId2"&gt;&lt;/param&gt;
        public AccessMaskPacketComposer(int set1, int set2, int interfaceId1, int childId1, int interfaceId2, int childId2)
        {
            //character.Session.SendData(new AccessMaskPacketComposer(190, 672, 15, 0, 78, 0).Serialize());
            //  p.frames.setAccessMask(p, 190, 15, 669, 0, 78);
            SetOpcode(34);
            AppendShortA(unchecked((short)set2));
            AppendLEShort(unchecked((short)set1));
            AppendInt(interfaceId1 &lt;&lt; 16 | childId1);
            AppendIntTertiary(interfaceId2 &lt;&lt; 16 | childId2);
        }

        /// &lt;summary&gt;
        /// Constructs new access mask packet.
        /// &lt;/summary&gt;
        /// &lt;param name="set"&gt;&lt;/param&gt;
        /// &lt;param name="Interface"&gt;&lt;/param&gt;
        /// &lt;param name="childId"&gt;&lt;/param&gt;
        /// &lt;param name="offset"&gt;&lt;/param&gt;
        /// &lt;param name="length"&gt;&lt;/param&gt;
        public AccessMaskPacketComposer(int set, int Interface,int childId,int offset,int length)
        {
            //Program.Logger.WriteInfo("Access mask not supported - ");
            SetOpcode(34);
            AppendShortA((short)length);
            AppendLEShort((short)offset);
            AppendIntTertiary((short)set);
            AppendInt(Interface &lt;&lt; 16 | childId);
        }


        #endregion Constructors
    }
}
</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/summoning-pouch-creation/418730/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/summoning-pouch-creation/418730/1</link>
        <pubDate>Wed, 19 Oct 2011 10:18:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-418730-1</guid>
        <source url="https://forum.moparisthebest.com/t/summoning-pouch-creation/418730.rss">Summoning pouch creation</source>
      </item>
  </channel>
</rss>
