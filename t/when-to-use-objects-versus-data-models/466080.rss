<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>When to use Objects versus Data models</title>
    <link>https://forum.moparisthebest.com/t/when-to-use-objects-versus-data-models/466080</link>
    <description>I&#39;m working on a sandbox type game. I plan on having a few Npcs to start, but the community will (eventually) be able to add their own Npcs, with their own behaviors. My question is when should I stop using an Object model, and start using a Data model?

For example, let&#39;s say I have only one Npc, a shopkeeper. It wouldn&#39;t be a problem to do
[code=Java]
public class ShopKeeper extends Npc {
    // ...
}
[/code]

5, 10, or even 15 times for different Npcs. But what if that number starts going into the hundreds? It would be quite a pain to have a different Object for each Npc, when they all have the same base data (like in a private server).</description>
    
    <lastBuildDate>Tue, 06 Nov 2012 07:34:58 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/when-to-use-objects-versus-data-models/466080.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>When to use Objects versus Data models</title>
        <dc:creator><![CDATA[@_bool]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_bool">@_bool</a> wrote:</p>
          <blockquote>
              <p>it must be tough to be retarded</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/when-to-use-objects-versus-data-models/466080/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/when-to-use-objects-versus-data-models/466080/7</link>
        <pubDate>Tue, 06 Nov 2012 07:34:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-466080-7</guid>
        <source url="https://forum.moparisthebest.com/t/when-to-use-objects-versus-data-models/466080.rss">When to use Objects versus Data models</source>
      </item>
      <item>
        <title>When to use Objects versus Data models</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>You have to define it in some manner so you need to come to a conclusion that there will be thousands of defined behaviors because each behavior has to be separately defined somehow. That cannot be avoided. You’re restating a fact. Like Silab said, you will either have to do that or script it which is about the same thing. I suggest if you are worried about there being thousands of behaviors then removing the feature which dictates that there could be thousand of behaviors.</p>
<p>You’re in one of these positions where you want a feature, and you’re trying to reach higher for a solution that you cannot grasp. You have to compromise.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/when-to-use-objects-versus-data-models/466080/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/when-to-use-objects-versus-data-models/466080/6</link>
        <pubDate>Mon, 05 Nov 2012 07:02:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-466080-6</guid>
        <source url="https://forum.moparisthebest.com/t/when-to-use-objects-versus-data-models/466080.rss">When to use Objects versus Data models</source>
      </item>
      <item>
        <title>When to use Objects versus Data models</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>[quote=“sinisoul, post:4, topic:466080”][quote author=Miss Silabsoft link=topic=575598.msg4142726#msg4142726 date=1352094378]<br>
instead of having different Objects why not have a standard object that loads behaviours for example a shopkeeper can just be NPC but have a config file of sorts that contains all the dialog and actions the NPC can take. Chances are the only reason you are considering doing the Abstract class approach is because you want some aspects to be scripted, you could easily allow scripting language to override aspects of the NPC class.<br>
[/quote]</p>
<p>This. You can actually abstract out the behavior so that it doesn’t always have to be defined.</p>
<p>[code]<br>
interface NpcBehavior {<br>
}</p>
<p>class DefaultNpcBehavior implements NpcBehavior {<br>
}</p>
<p>class Npc {<br>
Npc() { this(new DefaultNpcBehavior()); }<br>
Npc(NpcBehavior behavior) {}<br>
}<br>
[/code][/quote]</p>
<p>Trust me, I thought of this. My problem though is the sheer number. If it were 10 or 20 different behaviors, I’d have no problem. But there can literally be thousands of different behaviors.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/when-to-use-objects-versus-data-models/466080/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/when-to-use-objects-versus-data-models/466080/5</link>
        <pubDate>Mon, 05 Nov 2012 06:40:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-466080-5</guid>
        <source url="https://forum.moparisthebest.com/t/when-to-use-objects-versus-data-models/466080.rss">When to use Objects versus Data models</source>
      </item>
      <item>
        <title>When to use Objects versus Data models</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="3" data-topic="466080">
<div class="title">
<div class="quote-controls"></div>
 Miss Silabsoft:</div>
<blockquote>
<p>instead of having different Objects why not have a standard object that loads behaviours for example a shopkeeper can just be NPC but have a config file of sorts that contains all the dialog and actions the NPC can take. Chances are the only reason you are considering doing the Abstract class approach is because you want some aspects to be scripted, you could easily allow scripting language to override aspects of the NPC class.</p>
</blockquote>
</aside>
<p>This. You can actually abstract out the behavior so that it doesn’t always have to be defined.</p>
<pre><code class="lang-auto">interface NpcBehavior {
}

class DefaultNpcBehavior implements NpcBehavior {
}

class Npc {
    Npc() { this(new DefaultNpcBehavior()); }
    Npc(NpcBehavior behavior) {}
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/when-to-use-objects-versus-data-models/466080/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/when-to-use-objects-versus-data-models/466080/4</link>
        <pubDate>Mon, 05 Nov 2012 06:00:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-466080-4</guid>
        <source url="https://forum.moparisthebest.com/t/when-to-use-objects-versus-data-models/466080.rss">When to use Objects versus Data models</source>
      </item>
      <item>
        <title>When to use Objects versus Data models</title>
        <dc:creator><![CDATA[@silabsoft RuneAgent]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silabsoft">@silabsoft</a> wrote:</p>
          <blockquote>
              <p>instead of having different Objects why not have a standard object that loads behaviours for example a shopkeeper can just be NPC but have a config file of sorts that contains all the dialog and actions the NPC can take. Chances are the only reason you are considering doing the Abstract class approach is because you want some aspects to be scripted, you could easily allow scripting language to override aspects of the NPC class.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/when-to-use-objects-versus-data-models/466080/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/when-to-use-objects-versus-data-models/466080/3</link>
        <pubDate>Mon, 05 Nov 2012 05:46:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-466080-3</guid>
        <source url="https://forum.moparisthebest.com/t/when-to-use-objects-versus-data-models/466080.rss">When to use Objects versus Data models</source>
      </item>
      <item>
        <title>When to use Objects versus Data models</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>How are you suggesting you represent their behavior through data then?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/when-to-use-objects-versus-data-models/466080/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/when-to-use-objects-versus-data-models/466080/2</link>
        <pubDate>Mon, 05 Nov 2012 05:40:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-466080-2</guid>
        <source url="https://forum.moparisthebest.com/t/when-to-use-objects-versus-data-models/466080.rss">When to use Objects versus Data models</source>
      </item>
      <item>
        <title>When to use Objects versus Data models</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>I’m working on a sandbox type game. I plan on having a few Npcs to start, but the community will (eventually) be able to add their own Npcs, with their own behaviors. My question is when should I stop using an Object model, and start using a Data model?</p>
<p>For example, let’s say I have only one Npc, a shopkeeper. It wouldn’t be a problem to do</p>
<pre><code class="lang-auto">public class ShopKeeper extends Npc {
    // ...
}</code></pre>
<p>5, 10, or even 15 times for different Npcs. But what if that number starts going into the hundreds? It would be quite a pain to have a different Object for each Npc, when they all have the same base data (like in a private server).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/when-to-use-objects-versus-data-models/466080/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/when-to-use-objects-versus-data-models/466080/1</link>
        <pubDate>Mon, 05 Nov 2012 05:21:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-466080-1</guid>
        <source url="https://forum.moparisthebest.com/t/when-to-use-objects-versus-data-models/466080.rss">When to use Objects versus Data models</source>
      </item>
  </channel>
</rss>
