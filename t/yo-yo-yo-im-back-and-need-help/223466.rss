<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Yo yo yo im back! and need help!</title>
    <link>https://forum.moparisthebest.com/t/yo-yo-yo-im-back-and-need-help/223466</link>
    <description>yo guys, i vitiello i here again, needing help, please contribute...
i am making a itemonitem thing but i got 3 errors when putting it in my server.java

please correct it

Errors:
[code]server.java:188: illegal start of expression
itemOnItem = new ItemOnItem();public static ItemOnItem itemOnItem = null;
                              ^
server.java:188: illegal start of expression
itemOnItem = new ItemOnItem();public static ItemOnItem itemOnItem = null;
                                     ^
server.java:188: &#39;;&#39; expected
itemOnItem = new ItemOnItem();public static ItemOnItem itemOnItem = null;
                                                      ^
3 errors
Press any key to continue . . .[/code]

Server.Java:
[code]import java.sql.*;
import java.io.*;
import java.util.StringTokenizer;
import java.util.Calendar;
import java.util.GregorianCalendar;

public class server implements Runnable {
	public server() {
	}
	
	public static final int cycleTime = 500;
	/*Highscores*/
	/*For more highscores to be recorded, change the #s in [] to the number you want kept, +1*/
	/*For example, if you want the top 20, put 21 in the [] ([21])*/
	public static int[] cwStock = {95,95,100,100,90,45,67,13,12,13,};   
	public static int[] ranks = new int[11];
	public static String[] rankPpl = new String[11];
	public static boolean updateServer = false;
	public static int updateSeconds = 180; //180 because it doesnt make the time jump at the start :P
	public static long startTime;
	public static prayerHandler prayerHandler = null;
	public static TextHandler textHandler = null;
	public static int godwarsmax = 0;
	public static int waitTime = 180; //this is equal to 1 minute and 30 seconds. 60 = 30 seconds, 120 = 1 minute...etc.
	public static int gameTime = -1;

	public static void main(java.lang.String args[]) {
	try {
		clientHandler = new server();
		(new Thread(clientHandler)).start();			// launch server listener
		
		textHandler = new TextHandler();
		prayerHandler = new prayerHandler();
		playerHandler = new PlayerHandler();
		npcHandler = new NPCHandler();
		fishing = new Fishing();
		cooking = new Cooking();
		fletching = new Fletching();
		itemHandler = new ItemHandler();
		shopHandler = new ShopHandler();
		GraphicsHandler = new GraphicsHandler();
		objectHandler = new ObjectHandler();	
	
		int cycle = 0, waitFails = 0;
		long lastTicks = System.currentTimeMillis();
		long totalTimeSpentProcessing = 0;

		while(!shutdownServer) {
		if(updateServer)
			calcTime();
			playerHandler.process();			// updates all player related stuff
			npcHandler.process();
			itemHandler.process();
			shopHandler.process();	
			fletching.process();
			fishing.process();
			cooking.process();
			objectHandler.process();
                        System.gc();
	if(waitTime &gt; -1)
		{
		waitTime -= 1;		
		}
		if(gameTime &gt; -1 )
		{
		gameTime -= 1;
		}
		if(waitTime == 0)
		{
		gameTime = 360; //starts the game time
		PlayerHandler.messageToAll = &quot;A New Godwars Game Started!&quot;;
		}
		if(gameTime == 0)
		{
		godwarsmax = 0;//resets max players to 0.
		waitTime = 60; //resets the waiting time
		PlayerHandler.messageToAll = &quot;The Godwars Game just Ended! Get to the Lobby!&quot;;
		}
			long timeSpent = System.currentTimeMillis() - lastTicks;
			totalTimeSpentProcessing += timeSpent;
			if(timeSpent &gt;= cycleTime) {
				timeSpent = cycleTime;
				if(++waitFails &gt; 100) {
					misc.println(&quot;Computer too slow to run server!&quot;);
				}
			}
			try {
				Thread.sleep(cycleTime-timeSpent);
			} catch(java.lang.Exception _ex) { }
			lastTicks = System.currentTimeMillis();
			cycle++;
			if(cycle % 100 == 0) {
				float time = ((float)totalTimeSpentProcessing)/cycle;
			}
			if (cycle % 3600 == 0) {
				System.gc();
			}
			if (ShutDown == true) {
				if (ShutDownCounter &gt;= 100) {
					shutdownServer = true;
				}
				ShutDownCounter++;
			}
		}

		// shut down the server
		playerHandler.destruct();
		clientHandler.killServer();
		clientHandler = null;
	} catch (Exception e) {
	shutdownServer = true;			
	playerHandler.destruct();
	clientHandler.killServer();
	clientHandler = null;
    main(null);// thanks for 400OakStreet
	}
	}
	public static server clientHandler = null;							// handles all the clients
	public static java.net.ServerSocket clientListener = null;
	public static boolean shutdownServer = false;						// set this to true in order to shut down and kill the server
	public static boolean shutdownClientHandler;						// signals ClientHandler to shut down
	public static int serverlistenerPort = ServerCP.Port;				//43594=default

	public static Fletching fletching = null;
	public static Fishing fishing = null;
	public static Cooking cooking = null;
	public static PlayerHandler playerHandler = null;
	public static NPCHandler npcHandler = null;
	public static ItemHandler itemHandler = null;
	public static ShopHandler shopHandler = null;
	public static GraphicsHandler GraphicsHandler = null;
	public static ObjectHandler objectHandler = null;

	public static void calcTime() {
		long curTime = System.currentTimeMillis();
		updateSeconds = 180 - ((int)(curTime - startTime) / 1000);
		if(updateSeconds == 0) {
			shutdownServer = true;
		}
	}

	public void run() {
		try {
			shutdownClientHandler = false;
			clientListener = new java.net.ServerSocket(serverlistenerPort, 1, null);
			misc.println(ServerCP.Servername+&quot; online&quot;);
			while(true) {
				java.net.Socket s = clientListener.accept();
				s.setTcpNoDelay(true);
				String connectingHost = s.getInetAddress().getHostName();
				if(true) {
					if (connectingHost.startsWith(&quot;computing&quot;) || connectingHost.startsWith(&quot;server2&quot;)) {
						misc.println(connectingHost+&quot;: Checking if server still is online...&quot;);
					} else {
						int Found = -1;
						for (int i = 0; i &lt; MaxConnections; i++) {
							if (Connections[i] == connectingHost) {
								Found = ConnectionCount[i];
								break;
							}
						}
						if (Found &lt; 3) {
							misc.println(&quot;Connection accepted from &quot;+connectingHost+&quot;: &quot;+s.getPort()+&quot;.&quot;);
							playerHandler.newPlayerClient(s, connectingHost);
				} else {
					misc.println(&quot;ClientHandler: Rejected &quot;+connectingHost+&quot;:&quot;+s.getPort());
					s.close();
				}
			}
			}
		}
		} catch(java.io.IOException ioe) {
			if(!shutdownClientHandler) {
				misc.println(&quot;Error: Unable to startup listener on &quot;+serverlistenerPort+&quot; - port already in use.&quot;);
			} else {
				misc.println(&quot;ClientHandler was shut down.&quot;);
			}
		}
	}
	public void killServer() {
		try {
			shutdownClientHandler = true;
			if(clientListener != null) clientListener.close();
			clientListener = null;
		} catch(java.lang.Exception __ex) {
			__ex.printStackTrace();
		}
[code][code]itemOnItem = new ItemOnItem();public static ItemOnItem itemOnItem = null;
	}
	public static int EnergyRegian = 0;

	public static int MaxConnections = ServerCP.MaxConnections;
	public static String[] Connections = new String[MaxConnections];
	public static int[] ConnectionCount = new int[MaxConnections];
	public static boolean ShutDown = false;
	public static int ShutDownCounter = 0;


}

Please help?[/code][/code][/code]</description>
    
    <lastBuildDate>Sat, 02 Aug 2008 22:32:02 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/yo-yo-yo-im-back-and-need-help/223466.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Yo yo yo im back! and need help!</title>
        <dc:creator><![CDATA[@1_vitiello_1 1 vitiello 1]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/1_vitiello_1">@1_vitiello_1</a> wrote:</p>
          <blockquote>
              <p>k ty</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/yo-yo-yo-im-back-and-need-help/223466/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/yo-yo-yo-im-back-and-need-help/223466/3</link>
        <pubDate>Sat, 02 Aug 2008 22:32:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-223466-3</guid>
        <source url="https://forum.moparisthebest.com/t/yo-yo-yo-im-back-and-need-help/223466.rss">Yo yo yo im back! and need help!</source>
      </item>
      <item>
        <title>Yo yo yo im back! and need help!</title>
        <dc:creator><![CDATA[@RSC_n33b RSC_n33b]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rsc_n33b">@RSC_n33b</a> wrote:</p>
          <blockquote>
              <p>replace the hole thing with this</p>
<pre><code class="lang-auto">import java.sql.*;
import java.io.*;
import java.util.StringTokenizer;
import java.util.Calendar;
import java.util.GregorianCalendar;

public class server implements Runnable {
	public server() {
	}
	
	public static final int cycleTime = 500;
	/*Highscores*/
	/*For more highscores to be recorded, change the #s in [] to the number you want kept, +1*/
	/*For example, if you want the top 20, put 21 in the [] ([21])*/
	public static int[] cwStock = {95,95,100,100,90,45,67,13,12,13,};   
	public static int[] ranks = new int[11];
	public static String[] rankPpl = new String[11];
	public static boolean updateServer = false;
	public static int updateSeconds = 180; //180 because it doesnt make the time jump at the start :P
	public static long startTime;
	public static prayerHandler prayerHandler = null;
	public static TextHandler textHandler = null;
	public static int godwarsmax = 0;
	public static int waitTime = 180; //this is equal to 1 minute and 30 seconds. 60 = 30 seconds, 120 = 1 minute...etc.
	public static int gameTime = -1;

	public static void main(java.lang.String args[]) {
	try {
		clientHandler = new server();
		(new Thread(clientHandler)).start();			// launch server listener
		
		textHandler = new TextHandler();
		prayerHandler = new prayerHandler();
		playerHandler = new PlayerHandler();
		npcHandler = new NPCHandler();
		fishing = new Fishing();
		cooking = new Cooking();
		fletching = new Fletching();
itemOnItem = new ItemOnItem();
		itemHandler = new ItemHandler();
		shopHandler = new ShopHandler();
		GraphicsHandler = new GraphicsHandler();
		objectHandler = new ObjectHandler();	
	
		int cycle = 0, waitFails = 0;
		long lastTicks = System.currentTimeMillis();
		long totalTimeSpentProcessing = 0;

		while(!shutdownServer) {
		if(updateServer)
			calcTime();
			playerHandler.process();			// updates all player related stuff
			npcHandler.process();
			itemHandler.process();
			shopHandler.process();	
			fletching.process();
			fishing.process();
			cooking.process();
			objectHandler.process();
                        System.gc();
	if(waitTime &gt; -1)
		{
		waitTime -= 1;		
		}
		if(gameTime &gt; -1 )
		{
		gameTime -= 1;
		}
		if(waitTime == 0)
		{
		gameTime = 360; //starts the game time
		PlayerHandler.messageToAll = "A New Godwars Game Started!";
		}
		if(gameTime == 0)
		{
		godwarsmax = 0;//resets max players to 0.
		waitTime = 60; //resets the waiting time
		PlayerHandler.messageToAll = "The Godwars Game just Ended! Get to the Lobby!";
		}
			long timeSpent = System.currentTimeMillis() - lastTicks;
			totalTimeSpentProcessing += timeSpent;
			if(timeSpent &gt;= cycleTime) {
				timeSpent = cycleTime;
				if(++waitFails &gt; 100) {
					misc.println("Computer too slow to run server!");
				}
			}
			try {
				Thread.sleep(cycleTime-timeSpent);
			} catch(java.lang.Exception _ex) { }
			lastTicks = System.currentTimeMillis();
			cycle++;
			if(cycle % 100 == 0) {
				float time = ((float)totalTimeSpentProcessing)/cycle;
			}
			if (cycle % 3600 == 0) {
				System.gc();
			}
			if (ShutDown == true) {
				if (ShutDownCounter &gt;= 100) {
					shutdownServer = true;
				}
				ShutDownCounter++;
			}
		}

		// shut down the server
		playerHandler.destruct();
		clientHandler.killServer();
		clientHandler = null;
	} catch (Exception e) {
	shutdownServer = true;			
	playerHandler.destruct();
	clientHandler.killServer();
	clientHandler = null;
    main(null);// thanks for 400OakStreet
	}
	}
	public static server clientHandler = null;							// handles all the clients
	public static java.net.ServerSocket clientListener = null;
	public static boolean shutdownServer = false;						// set this to true in order to shut down and kill the server

	public static boolean shutdownClientHandler;						// signals ClientHandler to shut down
	public static int serverlistenerPort = ServerCP.Port;				//43594=default

	public static Fletching fletching = null;
	public static Fishing fishing = null;
public static ItemOnItem itemOnItem = null;
	public static Cooking cooking = null;
	public static PlayerHandler playerHandler = null;
	public static NPCHandler npcHandler = null;
	public static ItemHandler itemHandler = null;
	public static ShopHandler shopHandler = null;
	public static GraphicsHandler GraphicsHandler = null;
	public static ObjectHandler objectHandler = null;

	public static void calcTime() {
		long curTime = System.currentTimeMillis();
		updateSeconds = 180 - ((int)(curTime - startTime) / 1000);
		if(updateSeconds == 0) {
			shutdownServer = true;
		}
	}

	public void run() {
		try {
			shutdownClientHandler = false;
			clientListener = new java.net.ServerSocket(serverlistenerPort, 1, null);
			misc.println(ServerCP.Servername+" online");
			while(true) {
				java.net.Socket s = clientListener.accept();
				s.setTcpNoDelay(true);
				String connectingHost = s.getInetAddress().getHostName();
				if(true) {
					if (connectingHost.startsWith("computing") || connectingHost.startsWith("server2")) {
						misc.println(connectingHost+": Checking if server still is online...");
					} else {
						int Found = -1;
						for (int i = 0; i &lt; MaxConnections; i++) {
							if (Connections[i] == connectingHost) {
								Found = ConnectionCount[i];
								break;
							}
						}
						if (Found &lt; 3) {
							misc.println("Connection accepted from "+connectingHost+": "+s.getPort()+".");
							playerHandler.newPlayerClient(s, connectingHost);
				} else {
					misc.println("ClientHandler: Rejected "+connectingHost+":"+s.getPort());
					s.close();
				}
			}
			}
		}
		} catch(java.io.IOException ioe) {
			if(!shutdownClientHandler) {
				misc.println("Error: Unable to startup listener on "+serverlistenerPort+" - port already in use.");
			} else {
				misc.println("ClientHandler was shut down.");
			}
		}
	}
	public void killServer() {
		try {
			shutdownClientHandler = true;
			if(clientListener != null) clientListener.close();
			clientListener = null;
		} catch(java.lang.Exception __ex) {
			__ex.printStackTrace();
		}

	}
	public static int EnergyRegian = 0;

	public static int MaxConnections = ServerCP.MaxConnections;
	public static String[] Connections = new String[MaxConnections];
	public static int[] ConnectionCount = new int[MaxConnections];
	public static boolean ShutDown = false;
	public static int ShutDownCounter = 0;


}
</code></pre>
<p>save then compile</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/yo-yo-yo-im-back-and-need-help/223466/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/yo-yo-yo-im-back-and-need-help/223466/2</link>
        <pubDate>Sat, 02 Aug 2008 07:45:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-223466-2</guid>
        <source url="https://forum.moparisthebest.com/t/yo-yo-yo-im-back-and-need-help/223466.rss">Yo yo yo im back! and need help!</source>
      </item>
      <item>
        <title>Yo yo yo im back! and need help!</title>
        <dc:creator><![CDATA[@1_vitiello_1 1 vitiello 1]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/1_vitiello_1">@1_vitiello_1</a> wrote:</p>
          <blockquote>
              <p>yo guys, i vitiello i here again, needing help, please contribute…<br>
i am making a itemonitem thing but i got 3 errors when putting it in my server.java</p>
<p>please correct it</p>
<p>Errors:</p>
<p><code>server.java:188: illegal start of expression
itemOnItem = new ItemOnItem();public static ItemOnItem itemOnItem = null;
                              ^
server.java:188: illegal start of expression
itemOnItem = new ItemOnItem();public static ItemOnItem itemOnItem = null;
                                     ^
server.java:188: ';' expected
itemOnItem = new ItemOnItem();public static ItemOnItem itemOnItem = null;
                                                      ^
3 errors
Press any key to continue . . .</code></p>
<p>Server.Java:</p>
<p>[code]import java.sql.<em>;<br>
import <a href="http://java.io" rel="nofollow noopener">java.io</a>.</em>;<br>
import java.util.StringTokenizer;<br>
import java.util.Calendar;<br>
import java.util.GregorianCalendar;</p>
<p>public class server implements Runnable {<br>
public server() {<br>
}</p>
<pre><code>public static final int cycleTime = 500;
/*Highscores*/
/*For more highscores to be recorded, change the #s in [] to the number you want kept, +1*/
/*For example, if you want the top 20, put 21 in the [] ([21])*/
public static int[] cwStock = {95,95,100,100,90,45,67,13,12,13,};   
public static int[] ranks = new int[11];
public static String[] rankPpl = new String[11];
public static boolean updateServer = false;
public static int updateSeconds = 180; //180 because it doesnt make the time jump at the start :P
public static long startTime;
public static prayerHandler prayerHandler = null;
public static TextHandler textHandler = null;
public static int godwarsmax = 0;
public static int waitTime = 180; //this is equal to 1 minute and 30 seconds. 60 = 30 seconds, 120 = 1 minute...etc.
public static int gameTime = -1;

public static void main(java.lang.String args[]) {
try {
	clientHandler = new server();
	(new Thread(clientHandler)).start();			// launch server listener
	
	textHandler = new TextHandler();
	prayerHandler = new prayerHandler();
	playerHandler = new PlayerHandler();
	npcHandler = new NPCHandler();
	fishing = new Fishing();
	cooking = new Cooking();
	fletching = new Fletching();
	itemHandler = new ItemHandler();
	shopHandler = new ShopHandler();
	GraphicsHandler = new GraphicsHandler();
	objectHandler = new ObjectHandler();	

	int cycle = 0, waitFails = 0;
	long lastTicks = System.currentTimeMillis();
	long totalTimeSpentProcessing = 0;

	while(!shutdownServer) {
	if(updateServer)
		calcTime();
		playerHandler.process();			// updates all player related stuff
		npcHandler.process();
		itemHandler.process();
		shopHandler.process();	
		fletching.process();
		fishing.process();
		cooking.process();
		objectHandler.process();
                    System.gc();
if(waitTime &gt; -1)
	{
	waitTime -= 1;		
	}
	if(gameTime &gt; -1 )
	{
	gameTime -= 1;
	}
	if(waitTime == 0)
	{
	gameTime = 360; //starts the game time
	PlayerHandler.messageToAll = "A New Godwars Game Started!";
	}
	if(gameTime == 0)
	{
	godwarsmax = 0;//resets max players to 0.
	waitTime = 60; //resets the waiting time
	PlayerHandler.messageToAll = "The Godwars Game just Ended! Get to the Lobby!";
	}
		long timeSpent = System.currentTimeMillis() - lastTicks;
		totalTimeSpentProcessing += timeSpent;
		if(timeSpent &gt;= cycleTime) {
			timeSpent = cycleTime;
			if(++waitFails &gt; 100) {
				misc.println("Computer too slow to run server!");
			}
		}
		try {
			Thread.sleep(cycleTime-timeSpent);
		} catch(java.lang.Exception _ex) { }
		lastTicks = System.currentTimeMillis();
		cycle++;
		if(cycle % 100 == 0) {
			float time = ((float)totalTimeSpentProcessing)/cycle;
		}
		if (cycle % 3600 == 0) {
			System.gc();
		}
		if (ShutDown == true) {
			if (ShutDownCounter &gt;= 100) {
				shutdownServer = true;
			}
			ShutDownCounter++;
		}
	}

	// shut down the server
	playerHandler.destruct();
	clientHandler.killServer();
	clientHandler = null;
} catch (Exception e) {
shutdownServer = true;			
playerHandler.destruct();
clientHandler.killServer();
clientHandler = null;
main(null);// thanks for 400OakStreet
}
}
public static server clientHandler = null;							// handles all the clients
public static java.net.ServerSocket clientListener = null;
public static boolean shutdownServer = false;						// set this to true in order to shut down and kill the server
public static boolean shutdownClientHandler;						// signals ClientHandler to shut down
public static int serverlistenerPort = ServerCP.Port;				//43594=default

public static Fletching fletching = null;
public static Fishing fishing = null;
public static Cooking cooking = null;
public static PlayerHandler playerHandler = null;
public static NPCHandler npcHandler = null;
public static ItemHandler itemHandler = null;
public static ShopHandler shopHandler = null;
public static GraphicsHandler GraphicsHandler = null;
public static ObjectHandler objectHandler = null;

public static void calcTime() {
	long curTime = System.currentTimeMillis();
	updateSeconds = 180 - ((int)(curTime - startTime) / 1000);
	if(updateSeconds == 0) {
		shutdownServer = true;
	}
}

public void run() {
	try {
		shutdownClientHandler = false;
		clientListener = new java.net.ServerSocket(serverlistenerPort, 1, null);
		misc.println(ServerCP.Servername+" online");
		while(true) {
			java.net.Socket s = clientListener.accept();
			s.setTcpNoDelay(true);
			String connectingHost = s.getInetAddress().getHostName();
			if(true) {
				if (connectingHost.startsWith("computing") || connectingHost.startsWith("server2")) {
					misc.println(connectingHost+": Checking if server still is online...");
				} else {
					int Found = -1;
					for (int i = 0; i &lt; MaxConnections; i++) {
						if (Connections[i] == connectingHost) {
							Found = ConnectionCount[i];
							break;
						}
					}
					if (Found &lt; 3) {
						misc.println("Connection accepted from "+connectingHost+": "+s.getPort()+".");
						playerHandler.newPlayerClient(s, connectingHost);
			} else {
				misc.println("ClientHandler: Rejected "+connectingHost+":"+s.getPort());
				s.close();
			}
		}
		}
	}
	} catch(java.io.IOException ioe) {
		if(!shutdownClientHandler) {
			misc.println("Error: Unable to startup listener on "+serverlistenerPort+" - port already in use.");
		} else {
			misc.println("ClientHandler was shut down.");
		}
	}
}
public void killServer() {
	try {
		shutdownClientHandler = true;
		if(clientListener != null) clientListener.close();
		clientListener = null;
	} catch(java.lang.Exception __ex) {
		__ex.printStackTrace();
	}
</code></pre>
<p>[code][code]itemOnItem = new ItemOnItem();public static ItemOnItem itemOnItem = null;<br>
}<br>
public static int EnergyRegian = 0;</p>
<pre><code>public static int MaxConnections = ServerCP.MaxConnections;
public static String[] Connections = new String[MaxConnections];
public static int[] ConnectionCount = new int[MaxConnections];
public static boolean ShutDown = false;
public static int ShutDownCounter = 0;
</code></pre>
<p>}</p>
<p>Please help?[/code][/code][/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/yo-yo-yo-im-back-and-need-help/223466/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/yo-yo-yo-im-back-and-need-help/223466/1</link>
        <pubDate>Sat, 02 Aug 2008 06:17:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-223466-1</guid>
        <source url="https://forum.moparisthebest.com/t/yo-yo-yo-im-back-and-need-help/223466.rss">Yo yo yo im back! and need help!</source>
      </item>
  </channel>
</rss>
