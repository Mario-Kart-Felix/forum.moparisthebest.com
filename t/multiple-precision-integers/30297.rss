<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Multiple precision integers?</title>
    <link>https://forum.moparisthebest.com/t/multiple-precision-integers/30297</link>
    <description>    I&#39;m trying to imitate SSH packets to gain access to another machine (don&#39;t ask how, I don&#39;t really know :P, [url=http://ps3.shimpinomori.net/index_en.html]but in case you&#39;re interested...[/url]). I was reading some docs on these packet types (found [url=http://www.massconfusion.com/ssh/ssh_sample.html]here[/url]) and one of the data types used is an &quot;mp-int&quot;. I did some research and turns out that this is short for a multiple precision integer. I did some [i]more[/i] researching on this, mostly on how to use it with Java, and I found that the java.math.BigInteger is compatible with this data type. However, I&#39;m really not sure even how it works:

&lt;blockquote&gt;   mpint

      Represents multiple precision integers in two&#39;s complement format,
      stored as a string, 8 bits per byte, MSB first.  Negative numbers
      have the value 1 as the most significant bit of the first byte of
      the data partition.  If the most significant bit would be set for
      a positive number, the number MUST be preceded by a zero byte.
      Unnecessary leading bytes with the value 0 or 255 MUST NOT be
      included.  The value zero MUST be stored as a string with zero
      bytes of data.

      By convention, a number that is used in modular computations in
      Z_n SHOULD be represented in the range 0 &lt;= x &lt; n.&lt;/blockquote&gt;

    So, any sort of explanation of how this strange data type works would be greatly appreciated. :)

    By the way, in case you&#39;re familiar at all with the SSH packet structure, I seem to be receiving packet type 7, when I should be receiving type 2. That doc is from 1995, and it&#39;s SSH-1 (current is SSH-2), so I wouldn&#39;t be surprised if I&#39;ve got everything all wrong.

    And I posted this in General Programming because it seemed like a more general question. Move it if it suits you. :)</description>
    
    <lastBuildDate>Wed, 29 Nov 2006 04:21:51 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/multiple-precision-integers/30297.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Multiple precision integers?</title>
        <dc:creator><![CDATA[@White_Castle White Castle]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/white_castle">@White_Castle</a> wrote:</p>
          <blockquote>
              <p>I did find one other, but it was obfuscated. This has source, so I’ll look at it. :)[br][size=1]Posted at: November 28, 2006, 11:22:19 AM[/size][hr]That did work out, thanks alot BobDole81. <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=6" title=":smiley:" class="emoji" alt=":smiley:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/multiple-precision-integers/30297/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/multiple-precision-integers/30297/8</link>
        <pubDate>Wed, 29 Nov 2006 04:21:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-30297-8</guid>
        <source url="https://forum.moparisthebest.com/t/multiple-precision-integers/30297.rss">Multiple precision integers?</source>
      </item>
      <item>
        <title>Multiple precision integers?</title>
        <dc:creator><![CDATA[@BobDole81 BobDole81]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bobdole81">@BobDole81</a> wrote:</p>
          <blockquote>
              <p>Just took a quick look for some java ssh libraries, and the JTA library looked pretty nice (it also has support to read mp-ints): <a href="http://javassh.org/space/start" rel="nofollow noopener">http://javassh.org/space/start</a></p>
<p>Have a better look though, there several (possibly better ones) out there <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=6" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/multiple-precision-integers/30297/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/multiple-precision-integers/30297/7</link>
        <pubDate>Tue, 28 Nov 2006 22:39:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-30297-7</guid>
        <source url="https://forum.moparisthebest.com/t/multiple-precision-integers/30297.rss">Multiple precision integers?</source>
      </item>
      <item>
        <title>Multiple precision integers?</title>
        <dc:creator><![CDATA[@White_Castle White Castle]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/white_castle">@White_Castle</a> wrote:</p>
          <blockquote>
              <p>Hmm, ok. I’ll have to think this one over, because there’s no header int to tell me where to read up to. Thanks for the help :).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/multiple-precision-integers/30297/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/multiple-precision-integers/30297/6</link>
        <pubDate>Tue, 28 Nov 2006 21:49:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-30297-6</guid>
        <source url="https://forum.moparisthebest.com/t/multiple-precision-integers/30297.rss">Multiple precision integers?</source>
      </item>
      <item>
        <title>Multiple precision integers?</title>
        <dc:creator><![CDATA[@BobDole81 BobDole81]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bobdole81">@BobDole81</a> wrote:</p>
          <blockquote>
              <p>I don’t think so…I think you’d need to read it as a string and then parse it yourself (unless you read each individual byte and parse).  I wouldn’t know the exact way to do it, as that description seems quite vague.  But if you know what integer is being sent, you can probably work backwards and figure out how its split up in the mpint packet, making it easier to reverse <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=6" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/multiple-precision-integers/30297/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/multiple-precision-integers/30297/5</link>
        <pubDate>Tue, 28 Nov 2006 21:36:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-30297-5</guid>
        <source url="https://forum.moparisthebest.com/t/multiple-precision-integers/30297.rss">Multiple precision integers?</source>
      </item>
      <item>
        <title>Multiple precision integers?</title>
        <dc:creator><![CDATA[@White_Castle White Castle]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/white_castle">@White_Castle</a> wrote:</p>
          <blockquote>
              <p>Thank you both for the explanations :). Just one more question, how would I read this integer from an InputStream? Would you just do something like DataInputStream.readInt() and then convert that to a BigInteger?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/multiple-precision-integers/30297/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/multiple-precision-integers/30297/4</link>
        <pubDate>Tue, 28 Nov 2006 21:22:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-30297-4</guid>
        <source url="https://forum.moparisthebest.com/t/multiple-precision-integers/30297.rss">Multiple precision integers?</source>
      </item>
      <item>
        <title>Multiple precision integers?</title>
        <dc:creator><![CDATA[@BobDole81 BobDole81]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bobdole81">@BobDole81</a> wrote:</p>
          <blockquote>
              <p>[quote=“k00dr, post:2, topic:30297”]This is used in e.g.  the RS client to hold an RSA key, which is a damn big prime number.[/quote]Only 154 digits…not too bad <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<p>Multiple-precision and arbitrary-precision integers are pretty much the same…they allow for handling of integers of ‘virtually’ unlimited length.  Typically, arrays are used to handle each individual ‘precise’ value…it can be in the form of each individual bit in an index, a single word value (or 2 bytes) or full multi-digit integers.  The latter is more difficult to manage, but can be far more efficient (this is what BigInteger does I believe). Some mulltiple-precision integers may also use an integer representing each individual digit of the number, each multiplied by 10^n, where n is its array index, and summed, which is one of the more basic methods…This has the limitation of the size of an integer (hence the ‘virtually’ unlimited size).  So you can only have store an integer with a bit length of less than 2^31…BigInteger can do more though <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=6" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/multiple-precision-integers/30297/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/multiple-precision-integers/30297/3</link>
        <pubDate>Tue, 28 Nov 2006 20:12:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-30297-3</guid>
        <source url="https://forum.moparisthebest.com/t/multiple-precision-integers/30297.rss">Multiple precision integers?</source>
      </item>
      <item>
        <title>Multiple precision integers?</title>
        <dc:creator><![CDATA[@k00dr k00dr]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/k00dr">@k00dr</a> wrote:</p>
          <blockquote>
              <p>As you know, a long in Java, being 64 bits, is the biggest primitive. BigInteger can hold as big value as possible.<br>
This is used in e.g.  the RS client to hold an RSA key, which is a damn big prime number.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/multiple-precision-integers/30297/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/multiple-precision-integers/30297/2</link>
        <pubDate>Tue, 28 Nov 2006 14:01:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-30297-2</guid>
        <source url="https://forum.moparisthebest.com/t/multiple-precision-integers/30297.rss">Multiple precision integers?</source>
      </item>
      <item>
        <title>Multiple precision integers?</title>
        <dc:creator><![CDATA[@White_Castle White Castle]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/white_castle">@White_Castle</a> wrote:</p>
          <blockquote>
              <pre><code>I'm trying to imitate SSH packets to gain access to another machine (don't ask how, I don't really know :P, [url=http://ps3.shimpinomori.net/index_en.html]but in case you're interested...[/url]). I was reading some docs on these packet types (found [url=http://www.massconfusion.com/ssh/ssh_sample.html]here[/url]) and one of the data types used is an "mp-int". I did some research and turns out that this is short for a multiple precision integer. I did some [i]more[/i] researching on this, mostly on how to use it with Java, and I found that the java.math.BigInteger is compatible with this data type. However, I'm really not sure even how it works:
</code></pre>
<blockquote>   mpint
<pre><code>  Represents multiple precision integers in two's complement format,
  stored as a string, 8 bits per byte, MSB first.  Negative numbers
  have the value 1 as the most significant bit of the first byte of
  the data partition.  If the most significant bit would be set for
  a positive number, the number MUST be preceded by a zero byte.
  Unnecessary leading bytes with the value 0 or 255 MUST NOT be
  included.  The value zero MUST be stored as a string with zero
  bytes of data.

  By convention, a number that is used in modular computations in
  Z_n SHOULD be represented in the range 0 &lt;= x &lt; n.&lt;/blockquote&gt;

So, any sort of explanation of how this strange data type works would be greatly appreciated. :)

By the way, in case you're familiar at all with the SSH packet structure, I seem to be receiving packet type 7, when I should be receiving type 2. That doc is from 1995, and it's SSH-1 (current is SSH-2), so I wouldn't be surprised if I've got everything all wrong.

And I posted this in General Programming because it seemed like a more general question. Move it if it suits you. :)</code></pre>
</blockquote>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/multiple-precision-integers/30297/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/multiple-precision-integers/30297/1</link>
        <pubDate>Tue, 28 Nov 2006 11:09:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-30297-1</guid>
        <source url="https://forum.moparisthebest.com/t/multiple-precision-integers/30297.rss">Multiple precision integers?</source>
      </item>
  </channel>
</rss>
