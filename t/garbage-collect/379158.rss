<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Garbage collect</title>
    <link>https://forum.moparisthebest.com/t/garbage-collect/379158</link>
    <description>Add in GameEngine class:
[code]	public synchronized void garbageCollect() {
		Logger.print(&quot;Executing Memory Cleanup&quot;, 3);
		long startTime = System.currentTimeMillis();
		int curMemory = (int) (Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()) / 1000;
		int tileObjs = 0;
		int cleaned = 0;
		for (int i = 0; i &lt; World.getWorld().tiles.length; i++) {
			for (int in = 0; in &lt; World.getWorld().tiles[i].length; in++) {
				ActiveTile tile = World.getWorld().tiles[i][in];
				if (tile != null) {
					tileObjs++;
					if (!tile.hasGameObject() &amp;&amp; !tile.hasItems() &amp;&amp; !tile.hasNpcs() &amp;&amp; !tile.hasPlayers()) {
						World.getWorld().tiles[i][in] = null;
						cleaned++;
					}
				}
			}
		}
		Runtime.getRuntime().gc();
		int newMemory = (int) (Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()) / 1000;
		Logger.print(&quot;Memory before: &quot; + curMemory + &quot;kb&quot; + &quot; Memory after: &quot; + newMemory + &quot; (Freed: &quot; + (curMemory - newMemory) + &quot;kb)&quot;, 3);
		Logger.print(&quot;Cleanup took &quot; + (System.currentTimeMillis() - startTime) + &quot;ms&quot;, 3);
	}[/code]

Then I added 
[code]		eventHandler.add(new DelayedEvent(null, 30 * 60000) {
			public void run() {
				garbageCollect();			
			}
		});[/code]
in the run method of GameEngine.
Runs every 30 minutes, credits to the team of RSCAngel.</description>
    
    <lastBuildDate>Mon, 31 Jan 2011 03:48:27 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/garbage-collect/379158.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Garbage collect</title>
        <dc:creator><![CDATA[@CodeForFame CodeForFame]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/codeforfame">@CodeForFame</a> wrote:</p>
          <blockquote>
              <p>[quote=“Peeter, post:64, topic:379158”][quote author=CodeForFame link=topic=475008.msg3484231#msg3484231 date=1296423123]</p>
<aside class="quote no-group">
<blockquote>
<aside class="quote no-group">
<blockquote>
<p>Why are you square-rooting the size? You realise, with the 2d array, it has nothing to do with the amount of players, right? The size of the 2d array depends on the number of tiles. So if there are 2048<em>4096 tiles, the size of the array would be 2048</em>4096. I’ll just compare the first HashMap test to the second array test. As you can see, the 2d array consumes 100x more memory.</p>
<p>Technically, HashMaps do not perform at constant speed. Only if there are no “collisions”, as you mentioned earlier. Worst-case is O(n).</p>
</blockquote>
</aside>
<p>You’re talking about cleaning the hashmap when its needed, while not doing the same for the array. I never said they perform at a constant speed, I’m saying they’re a constant speed slower due to the hashing function.</p>
<aside class="quote no-group">
<blockquote>
<p>What the fuck kind of test is that?</p>
<p>Invoking a gc call manually doesn’t guarantee it happens, and currentTimeMillis depends on the OS’s accuracy for time, which isn’t very accurate in most cases (for &lt;100ms anyway)…</p>
<p>Also, read the fucking JavaDocs for the freeMemory method…  “Calling the gc method may result in increasing the value returned by freeMemory.”</p>
<p>Not to mention the other obviously flaws…  (No warm-up, single thread, etc)</p>
</blockquote>
</aside>
<p>You go ahead and write a better one if you got the time for it.</p>
</blockquote>
</aside>
<p>I don’t have time for it, which is why I hardly come on this site anymore…  The point is you shouldn’t be acting as if that benchmark means anything when it is so shitty, and completely unreliable in every possible way.<br>
[/quote]</p>
<p>When it proves something that should be apparently obvious then I can live with it.[/quote]</p>
<p>That benchmark proves nothing, except your incompetence.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/garbage-collect/379158/65">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/garbage-collect/379158/65</link>
        <pubDate>Mon, 31 Jan 2011 03:48:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-379158-65</guid>
        <source url="https://forum.moparisthebest.com/t/garbage-collect/379158.rss">Garbage collect</source>
      </item>
      <item>
        <title>Garbage collect</title>
        <dc:creator><![CDATA[@Peter Peeter]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/peter">@Peter</a> wrote:</p>
          <blockquote>
              <p>[quote=“CodeForFame, post:63, topic:379158”][quote author=Peeter link=topic=475008.msg3483873#msg3483873 date=1296390073]</p>
<aside class="quote no-group">
<blockquote>
<p>Why are you square-rooting the size? You realise, with the 2d array, it has nothing to do with the amount of players, right? The size of the 2d array depends on the number of tiles. So if there are 2048<em>4096 tiles, the size of the array would be 2048</em>4096. I’ll just compare the first HashMap test to the second array test. As you can see, the 2d array consumes 100x more memory.</p>
<p>Technically, HashMaps do not perform at constant speed. Only if there are no “collisions”, as you mentioned earlier. Worst-case is O(n).</p>
</blockquote>
</aside>
<p>You’re talking about cleaning the hashmap when its needed, while not doing the same for the array. I never said they perform at a constant speed, I’m saying they’re a constant speed slower due to the hashing function.</p>
<aside class="quote no-group">
<blockquote>
<p>What the fuck kind of test is that?</p>
<p>Invoking a gc call manually doesn’t guarantee it happens, and currentTimeMillis depends on the OS’s accuracy for time, which isn’t very accurate in most cases (for &lt;100ms anyway)…</p>
<p>Also, read the fucking JavaDocs for the freeMemory method…  “Calling the gc method may result in increasing the value returned by freeMemory.”</p>
<p>Not to mention the other obviously flaws…  (No warm-up, single thread, etc)</p>
</blockquote>
</aside>
<p>You go ahead and write a better one if you got the time for it.<br>
[/quote]</p>
<p>I don’t have time for it, which is why I hardly come on this site anymore…  The point is you shouldn’t be acting as if that benchmark means anything when it is so shitty, and completely unreliable in every possible way.[/quote]</p>
<p>When it proves something that should be apparently obvious then I can live with it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/garbage-collect/379158/64">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/garbage-collect/379158/64</link>
        <pubDate>Sun, 30 Jan 2011 21:40:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-379158-64</guid>
        <source url="https://forum.moparisthebest.com/t/garbage-collect/379158.rss">Garbage collect</source>
      </item>
      <item>
        <title>Garbage collect</title>
        <dc:creator><![CDATA[@CodeForFame CodeForFame]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/codeforfame">@CodeForFame</a> wrote:</p>
          <blockquote>
              <p>[quote=“Peeter, post:61, topic:379158”][quote author=iKilem link=topic=475008.msg3482982#msg3482982 date=1296333587]<br>
Why are you square-rooting the size? You realise, with the 2d array, it has nothing to do with the amount of players, right? The size of the 2d array depends on the number of tiles. So if there are 2048<em>4096 tiles, the size of the array would be 2048</em>4096. I’ll just compare the first HashMap test to the second array test. As you can see, the 2d array consumes 100x more memory.</p>
<p>Technically, HashMaps do not perform at constant speed. Only if there are no “collisions”, as you mentioned earlier. Worst-case is O(n).<br>
[/quote]</p>
<p>You’re talking about cleaning the hashmap when its needed, while not doing the same for the array. I never said they perform at a constant speed, I’m saying they’re a constant speed slower due to the hashing function.</p>
<aside class="quote no-group">
<blockquote>
<p>What the fuck kind of test is that?</p>
<p>Invoking a gc call manually doesn’t guarantee it happens, and currentTimeMillis depends on the OS’s accuracy for time, which isn’t very accurate in most cases (for &lt;100ms anyway)…</p>
<p>Also, read the fucking JavaDocs for the freeMemory method…  “Calling the gc method may result in increasing the value returned by freeMemory.”</p>
<p>Not to mention the other obviously flaws…  (No warm-up, single thread, etc)</p>
</blockquote>
</aside>
<p>You go ahead and write a better one if you got the time for it.[/quote]</p>
<p>I don’t have time for it, which is why I hardly come on this site anymore…  The point is you shouldn’t be acting as if that benchmark means anything when it is so shitty, and completely unreliable in every possible way.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/garbage-collect/379158/63">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/garbage-collect/379158/63</link>
        <pubDate>Sun, 30 Jan 2011 21:32:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-379158-63</guid>
        <source url="https://forum.moparisthebest.com/t/garbage-collect/379158.rss">Garbage collect</source>
      </item>
      <item>
        <title>Garbage collect</title>
        <dc:creator><![CDATA[@iKilem iKilem]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ikilem">@iKilem</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="61" data-topic="379158">
<div class="title">
<div class="quote-controls"></div>
 Peeter:</div>
<blockquote>
<p>You’re talking about cleaning the hashmap when its needed, while not doing the same for the array. I never said they perform at a constant speed, I’m saying they’re a constant speed slower due to the hashing function.</p>
</blockquote>
</aside>
<p>No, I’m not. Ignore cleaning. My point is unrelated.</p>
<p>That’s what I mean. They’re not “a constant speed slower”. Like I said, worst-case time is O(n). (This is also unrelated to my point, btw.)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/garbage-collect/379158/62">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/garbage-collect/379158/62</link>
        <pubDate>Sun, 30 Jan 2011 12:38:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-379158-62</guid>
        <source url="https://forum.moparisthebest.com/t/garbage-collect/379158.rss">Garbage collect</source>
      </item>
      <item>
        <title>Garbage collect</title>
        <dc:creator><![CDATA[@Peter Peeter]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/peter">@Peter</a> wrote:</p>
          <blockquote>
              <p>[quote=“iKilem, post:56, topic:379158”]Why are you square-rooting the size? You realise, with the 2d array, it has nothing to do with the amount of players, right? The size of the 2d array depends on the number of tiles. So if there are 2048<em>4096 tiles, the size of the array would be 2048</em>4096. I’ll just compare the first HashMap test to the second array test. As you can see, the 2d array consumes 100x more memory.</p>
<p>Technically, HashMaps do not perform at constant speed. Only if there are no “collisions”, as you mentioned earlier. Worst-case is O(n).[/quote]</p>
<p>You’re talking about cleaning the hashmap when its needed, while not doing the same for the array. I never said they perform at a constant speed, I’m saying they’re a constant speed slower due to the hashing function.</p>
<p>[quote=“CodeForFame, post:59, topic:379158”]What the fuck kind of test is that?</p>
<p>Invoking a gc call manually doesn’t guarantee it happens, and currentTimeMillis depends on the OS’s accuracy for time, which isn’t very accurate in most cases (for &lt;100ms anyway)…</p>
<p>Also, read the fucking JavaDocs for the freeMemory method…  “Calling the gc method may result in increasing the value returned by freeMemory.”</p>
<p>Not to mention the other obviously flaws…  (No warm-up, single thread, etc)[/quote]</p>
<p>You go ahead and write a better one if you got the time for it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/garbage-collect/379158/61">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/garbage-collect/379158/61</link>
        <pubDate>Sun, 30 Jan 2011 12:21:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-379158-61</guid>
        <source url="https://forum.moparisthebest.com/t/garbage-collect/379158.rss">Garbage collect</source>
      </item>
      <item>
        <title>Garbage collect</title>
        <dc:creator><![CDATA[@The_Exclusive The Exclusive]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_exclusive">@The_Exclusive</a> wrote:</p>
          <blockquote>
              <p>what does garbage collect doo</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/garbage-collect/379158/60">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/garbage-collect/379158/60</link>
        <pubDate>Sun, 30 Jan 2011 04:09:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-379158-60</guid>
        <source url="https://forum.moparisthebest.com/t/garbage-collect/379158.rss">Garbage collect</source>
      </item>
      <item>
        <title>Garbage collect</title>
        <dc:creator><![CDATA[@CodeForFame CodeForFame]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/codeforfame">@CodeForFame</a> wrote:</p>
          <blockquote>
              <p>What the fuck kind of test is that?</p>
<p>Invoking a gc call manually doesn’t guarantee it happens, and currentTimeMillis depends on the OS’s accuracy for time, which isn’t very accurate in most cases (for &lt;100ms anyway)…</p>
<p>Also, read the fucking JavaDocs for the freeMemory method…  “Calling the gc method may result in increasing the value returned by freeMemory.”</p>
<p>Not to mention the other obviously flaws…  (No warm-up, single thread, etc)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/garbage-collect/379158/59">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/garbage-collect/379158/59</link>
        <pubDate>Sun, 30 Jan 2011 02:14:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-379158-59</guid>
        <source url="https://forum.moparisthebest.com/t/garbage-collect/379158.rss">Garbage collect</source>
      </item>
      <item>
        <title>Garbage collect</title>
        <dc:creator><![CDATA[@Ecko Ecko]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ecko">@Ecko</a> wrote:</p>
          <blockquote>
              <p>what is this i dont even</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/garbage-collect/379158/58">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/garbage-collect/379158/58</link>
        <pubDate>Sun, 30 Jan 2011 01:42:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-379158-58</guid>
        <source url="https://forum.moparisthebest.com/t/garbage-collect/379158.rss">Garbage collect</source>
      </item>
      <item>
        <title>Garbage collect</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>shut the fuck up retards</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/garbage-collect/379158/57">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/garbage-collect/379158/57</link>
        <pubDate>Sun, 30 Jan 2011 00:23:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-379158-57</guid>
        <source url="https://forum.moparisthebest.com/t/garbage-collect/379158.rss">Garbage collect</source>
      </item>
      <item>
        <title>Garbage collect</title>
        <dc:creator><![CDATA[@iKilem iKilem]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ikilem">@iKilem</a> wrote:</p>
          <blockquote>
              <p>Why are you square-rooting the size? You realise, with the 2d array, it has nothing to do with the amount of players, right? The size of the 2d array depends on the number of tiles. So if there are 2048<em>4096 tiles, the size of the array would be 2048</em>4096. I’ll just compare the first HashMap test to the second array test. As you can see, the 2d array consumes 100x more memory.</p>
<p>Technically, HashMaps do not perform at constant speed. Only if there are no “collisions”, as you mentioned earlier. Worst-case is O(n).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/garbage-collect/379158/56">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/garbage-collect/379158/56</link>
        <pubDate>Sat, 29 Jan 2011 20:39:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-379158-56</guid>
        <source url="https://forum.moparisthebest.com/t/garbage-collect/379158.rss">Garbage collect</source>
      </item>
      <item>
        <title>Garbage collect</title>
        <dc:creator><![CDATA[@Peter Peeter]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/peter">@Peter</a> wrote:</p>
          <blockquote>
              <p>[quote=“iKilem, post:54, topic:379158”][quote author=Peeter link=topic=475008.msg3482679#msg3482679 date=1296318011]<br>
You don’t fucking gain any memory with the Hashmap. An empty HashMap used 33% more memory on my PC then a fucking array. You do not gain any speed as a HashMap is a constant speed slower then an array at retrieving and storing information.<br>
[/quote]<br>
I told you the test you did wasn’t accurate. You set the capacity of the HashMap to half of that of the array. Set it to 2048.</p>
<p>P.S. Saying something is “a constant speed slower” does not make any sense.[/quote]</p>
<p>If you perform an action 10 milliseconds slower then me EVERY TIME then you are a constant speed slower then I am. Like I told you, a hashmap performs a hashing function EVERY TIME you store or retrieve information and regardless of how quick it is, it’s an extra step you do not have to take when using arrays. And as you can see from my results the speed is rather obviously affected.</p>
<p>Now before you argue that you can set the default size of the hashmap to something small and on initialization it’ll be loads smaller, take into consideration this: in the end when you have the same amount of objects in the hashmap the resources used on initializations don’t really matter. Also you’ve used up a lot more resources resizing the hashmap to fit all your resources. You can verify this on your own by setting the size variable to 2048x2048 in my example and setting the default Hashmap size to 2048.</p>
<p>My test: <a href="http://pastebin.com/mf66JsiB">http://pastebin.com/mf66JsiB</a><br>
My results with the size set to 2048:</p>
<pre><code class="lang-auto">
[Array-empty] Memory usage at start: 291024
[Array-empty] Memory usage in the end: 291024
[Array-empty] Total used memory: 0
[Array-empty] Total time used: 0
--------------------------------------
[Array-filled] Memory usage at start: 291024
[Array-filled] Memory usage in the end: 291024
[Array-filled] Total used memory: 0
[Array-filled] Total time used: 0
--------------------------------------
[HashMap-empty] Memory usage at start: 122488
[HashMap-empty] Memory usage in the end: 214264
[HashMap-empty] Total used memory: 91776
[HashMap-empty] Total time used: 0
--------------------------------------
[HashMap-filled] Memory usage at start: 122488
[HashMap-filled] Memory usage in the end: 214264
[HashMap-filled] Total used memory: 91776
[HashMap-filled] Total time used: 0</code></pre>
<p>My results with the size set to 2048 x 2048:</p>
<pre><code class="lang-auto">
[Array-empty] Memory usage at start: 291032
[Array-empty] Memory usage in the end: 16992944
[Array-empty] Total used memory: 16701912
[Array-empty] Total time used: 47
--------------------------------------
[Array-filled] Memory usage at start: 291032
[Array-filled] Memory usage in the end: 16992944
[Array-filled] Total used memory: 16701912
[Array-filled] Total time used: 31
--------------------------------------
[HashMap-empty] Memory usage at start: 122344
[HashMap-empty] Memory usage in the end: 16899616
[HashMap-empty] Total used memory: 16777272
[HashMap-empty] Total time used: 15
--------------------------------------
[HashMap-filled] Memory usage at start: 122344
[HashMap-filled] Memory usage in the end: 20025856
[HashMap-filled] Total used memory: 19903512
[HashMap-filled] Total time used: 219</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/garbage-collect/379158/55">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/garbage-collect/379158/55</link>
        <pubDate>Sat, 29 Jan 2011 18:48:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-379158-55</guid>
        <source url="https://forum.moparisthebest.com/t/garbage-collect/379158.rss">Garbage collect</source>
      </item>
      <item>
        <title>Garbage collect</title>
        <dc:creator><![CDATA[@iKilem iKilem]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ikilem">@iKilem</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="53" data-topic="379158">
<div class="title">
<div class="quote-controls"></div>
 Peeter:</div>
<blockquote>
<p>You don’t fucking gain any memory with the Hashmap. An empty HashMap used 33% more memory on my PC then a fucking array. You do not gain any speed as a HashMap is a constant speed slower then an array at retrieving and storing information.</p>
</blockquote>
</aside>
<p>I told you the test you did wasn’t accurate. You set the capacity of the HashMap to half of that of the array. Set it to 2048.</p>
<p>P.S. Saying something is “a constant speed slower” does not make any sense.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/garbage-collect/379158/54">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/garbage-collect/379158/54</link>
        <pubDate>Sat, 29 Jan 2011 16:44:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-379158-54</guid>
        <source url="https://forum.moparisthebest.com/t/garbage-collect/379158.rss">Garbage collect</source>
      </item>
      <item>
        <title>Garbage collect</title>
        <dc:creator><![CDATA[@Peter Peeter]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/peter">@Peter</a> wrote:</p>
          <blockquote>
              <p>[quote=“iKilem, post:50, topic:379158”][quote author=Peeter link=topic=475008.msg3482123#msg3482123 date=1296259198]<br>
Bring out the points why using a Hash map is beneficial. As for “the array is so huge when initialized”. It doesn’t fucking matter.<br>
[/quote]<br>
For those who have little memory to offer, it’s a good solution. For example, someone with a 512MB VPS that needs the majority of that memory for MySQL.[/quote]</p>
<p>You don’t fucking gain any memory with the Hashmap. An empty HashMap used 33% more memory on my PC then a fucking array. You do not gain any speed as a HashMap is a constant speed slower then an array at retrieving and storing information.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/garbage-collect/379158/53">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/garbage-collect/379158/53</link>
        <pubDate>Sat, 29 Jan 2011 16:20:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-379158-53</guid>
        <source url="https://forum.moparisthebest.com/t/garbage-collect/379158.rss">Garbage collect</source>
      </item>
      <item>
        <title>Garbage collect</title>
        <dc:creator><![CDATA[@iKilem iKilem]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ikilem">@iKilem</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="51" data-topic="379158">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/xent/40/5_1887921562df0dabfae55079ddabeb03.png" class="avatar"> xEnt:</div>
<blockquote>
<p>it was written for us only, and we knew we would never be using a shitty vps with 512mb.</p>
</blockquote>
</aside>
<p>Lol, somewhat narrow-minded, but fair enough.</p>
<p>Also, in terms of design, I’d say HashMap wins again, since all you want to do is map the tiles, and creating a 2d array seems clumsy. Not really a practical benefit, maybe, but it’s still a reason why I would use a HashMap rather than a 2d array, which only has the benefit of speed as far as I can tell.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/garbage-collect/379158/52">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/garbage-collect/379158/52</link>
        <pubDate>Sat, 29 Jan 2011 13:14:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-379158-52</guid>
        <source url="https://forum.moparisthebest.com/t/garbage-collect/379158.rss">Garbage collect</source>
      </item>
      <item>
        <title>Garbage collect</title>
        <dc:creator><![CDATA[@xEnt xEnt]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xent">@xEnt</a> wrote:</p>
          <blockquote>
              <p>it was written for us only, and we knew we would never be using a shitty vps with 512mb.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/garbage-collect/379158/51">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/garbage-collect/379158/51</link>
        <pubDate>Sat, 29 Jan 2011 11:13:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-379158-51</guid>
        <source url="https://forum.moparisthebest.com/t/garbage-collect/379158.rss">Garbage collect</source>
      </item>
      <item>
        <title>Garbage collect</title>
        <dc:creator><![CDATA[@iKilem iKilem]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ikilem">@iKilem</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="49" data-topic="379158">
<div class="title">
<div class="quote-controls"></div>
 Peeter:</div>
<blockquote>
<p>Bring out the points why using a Hash map is beneficial. As for “the array is so huge when initialized”. It doesn’t fucking matter.</p>
</blockquote>
</aside>
<p>For those who have little memory to offer, it’s a good solution. For example, someone with a 512MB VPS that needs the majority of that memory for MySQL.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/garbage-collect/379158/50">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/garbage-collect/379158/50</link>
        <pubDate>Sat, 29 Jan 2011 10:34:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-379158-50</guid>
        <source url="https://forum.moparisthebest.com/t/garbage-collect/379158.rss">Garbage collect</source>
      </item>
      <item>
        <title>Garbage collect</title>
        <dc:creator><![CDATA[@Peter Peeter]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/peter">@Peter</a> wrote:</p>
          <blockquote>
              <p>[quote=“iKilem, post:46, topic:379158”][quote author=adu link=topic=475008.msg3481843#msg3481843 date=1296233038]<br>
You are talking about using the hashmap to pool all the unused tiles arent you? If so then npc’s, items and object wiuld need to be considered.<br>
[/quote]<br>
No, I’m not. I’m suggesting a HashMap to store the active tiles. Skim through my posts in this thread to see how this is beneficial.</p>
<p>I don’t see how it would mean I’d need to consider NPCs, items etc. They’re not directly linked. (Using a HashMap would still work, none-the-less.)[/quote]</p>
<p>Bring out the points why using a Hash map is beneficial. As for “the array is so huge when initialized”. It doesn’t fucking matter.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/garbage-collect/379158/49">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/garbage-collect/379158/49</link>
        <pubDate>Fri, 28 Jan 2011 23:59:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-379158-49</guid>
        <source url="https://forum.moparisthebest.com/t/garbage-collect/379158.rss">Garbage collect</source>
      </item>
      <item>
        <title>Garbage collect</title>
        <dc:creator><![CDATA[@IlikeArrays IlikeArrays]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ilikearrays">@IlikeArrays</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="47" data-topic="379158">
<div class="title">
<div class="quote-controls"></div>
 hm wtf lol xD:</div>
<blockquote>
<p>No, All what needs to be said</p>
</blockquote>
</aside>
<p>Please, Elaborate.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/garbage-collect/379158/48">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/garbage-collect/379158/48</link>
        <pubDate>Fri, 28 Jan 2011 21:27:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-379158-48</guid>
        <source url="https://forum.moparisthebest.com/t/garbage-collect/379158.rss">Garbage collect</source>
      </item>
      <item>
        <title>Garbage collect</title>
        <dc:creator><![CDATA[@hm_wtf_lol_xD hm wtf lol xD]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hm_wtf_lol_xd">@hm_wtf_lol_xD</a> wrote:</p>
          <blockquote>
              <p>[quote=“Peeter, post:43, topic:379158”][quote author=iKilem link=topic=475008.msg3481189#msg3481189 date=1296148035]<br>
Peeter, just stop arguing. I’m right, let it go.<br>
[/quote]<br>
I don’t really see how you’re right. You didn’t respond to a single one of my comments. And regardless if you’re using a hashmap or a 2d array the amount of tile objects that will be put in there remain the same.</p>
<aside class="quote no-group">
<div class="title">
<div class="quote-controls"></div>
 hm wtf lol xD:</div>
<blockquote>
<p>So explain to me why on your “plugin” stuff of dark quest why you threaded it? each one? That is what I can not understand at all and when I glanced at it you never killed the thread afterwards… So your keep making threads upon threads upon threads…</p>
<p>Strange.</p>
<p>One person makes the action, New thread… Does not die afterwards… New player… does a action… New thread… Does not kill… So explain to me? I would honestly like you to explain. Quite a bit of people saw that even the ones who you had a little “argument” on IRC couple of months ago… Remember how that convo went down? Showed your a complete moron</p>
</blockquote>
</aside>
<p>You are completely right and I totally fucked up that plugin system is something someone who was wrong would say. I’m better then you.</p>
<p><a href="http://download.oracle.com/javase/1.5.0/docs/api/java/util/concurrent/Executors.html#newCachedThreadPool()" class="onebox" target="_blank" rel="nofollow noopener">http://download.oracle.com/javase/1.5.0/docs/api/java/util/concurrent/Executors.html#newCachedThreadPool()</a></p>
<aside class="quote no-group">
<div class="title">
<div class="quote-controls"></div>
 api:</div>
<blockquote>
<p>Creates a thread pool that creates new threads as needed, but will reuse previously constructed threads when they are available. These pools will typically improve the performance of programs that execute many short-lived asynchronous tasks. Calls to execute will reuse previously constructed threads if available. If no existing thread is available, a new thread will be created and added to the pool. Threads that have not been used for sixty seconds are terminated and removed from the cache. Thus, a pool that remains idle for long enough will not consume any resources. Note that pools with similar properties but different details (for example, timeout parameters) may be created using ThreadPoolExecutor constructors.</p>
</blockquote>
</aside>
<aside class="quote no-group">
<blockquote>
<p>Why don’t you guys utilise things such as WeakHashMap&lt;K,V&gt;?<br>
If you actually wrote your code properly so that objects fell out of scope, then WeakHashMap would solve the problems – once the Tile isn’t in use anymore (ie, an Entity doesn’t reference it as their position or whatever) then it would be removed automagically from WeakHashMap by the garbage cleaner.</p>
</blockquote>
</aside>
<p>The entire idea behind tiles is that they reference objects &amp; players &amp; items instead of the other way round. So you know how many objects are on a tile, if the tile is occupied by a player or a NPC or an item etc.[/quote]<br>
No, All what needs to be said</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/garbage-collect/379158/47">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/garbage-collect/379158/47</link>
        <pubDate>Fri, 28 Jan 2011 20:37:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-379158-47</guid>
        <source url="https://forum.moparisthebest.com/t/garbage-collect/379158.rss">Garbage collect</source>
      </item>
      <item>
        <title>Garbage collect</title>
        <dc:creator><![CDATA[@iKilem iKilem]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ikilem">@iKilem</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="45" data-topic="379158">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/adu/40/5_1887921562df0dabfae55079ddabeb03.png" class="avatar"> adu:</div>
<blockquote>
<p>You are talking about using the hashmap to pool all the unused tiles arent you? If so then npc’s, items and object wiuld need to be considered.</p>
</blockquote>
</aside>
<p>No, I’m not. I’m suggesting a HashMap to store the active tiles. Skim through my posts in this thread to see how this is beneficial.</p>
<p>I don’t see how it would mean I’d need to consider NPCs, items etc. They’re not directly linked. (Using a HashMap would still work, none-the-less.)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/garbage-collect/379158/46">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/garbage-collect/379158/46</link>
        <pubDate>Fri, 28 Jan 2011 16:50:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-379158-46</guid>
        <source url="https://forum.moparisthebest.com/t/garbage-collect/379158.rss">Garbage collect</source>
      </item>
      <item>
        <title>Garbage collect</title>
        <dc:creator><![CDATA[@adu adu]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/adu">@adu</a> wrote:</p>
          <blockquote>
              <p>[quote=“iKilem, post:44, topic:379158”][quote author=adu link=topic=475008.msg3481508#msg3481508 date=1296176780]<br>
What does the max number of players have anything todo with the max size of a hashmap for tiles? i believe you also forgot to include the npc’s, item’s and object’s which makes your point invalid.<br>
[/quote]<br>
Tiles hold players. You cannot have more than n tiles… n being the number of players. My point was about players, so it remains valid. Why should I mention NPCs, items etc. when they are irrelevant to the topic?</p>
<p><a class="mention" href="/u/abraham2119">@abraham2119</a> I suppose you’re right when you look at it from that perspective.</p>
<p><a class="mention" href="/u/lothy">@Lothy</a> I think it makes more sense to manually remove a Tile object. When you remove a player from the tile, check to see if the tile holds any other players. If not, remove the tile as well.</p>
<p><span class="mention">@Peeter</span> I know the number of Tile objects you store is the same, but you still have to consider the memory overhead from the OOPs. I’m sure you said you did a test. Create an empty array. It still consumes space. Also, I did respond to your comments! What did I miss?[/quote]</p>
<p>You are talking about using the hashmap to pool all the unused tiles arent you? If so then npc’s, items and object wiuld need to be considered.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/garbage-collect/379158/45">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/garbage-collect/379158/45</link>
        <pubDate>Fri, 28 Jan 2011 16:43:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-379158-45</guid>
        <source url="https://forum.moparisthebest.com/t/garbage-collect/379158.rss">Garbage collect</source>
      </item>
      <item>
        <title>Garbage collect</title>
        <dc:creator><![CDATA[@iKilem iKilem]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ikilem">@iKilem</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="40" data-topic="379158">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/adu/40/5_1887921562df0dabfae55079ddabeb03.png" class="avatar"> adu:</div>
<blockquote>
<p>What does the max number of players have anything todo with the max size of a hashmap for tiles? i believe you also forgot to include the npc’s, item’s and object’s which makes your point invalid.</p>
</blockquote>
</aside>
<p>Tiles hold players. You cannot have more than n tiles… n being the number of players. My point was about players, so it remains valid. Why should I mention NPCs, items etc. when they are irrelevant to the topic?</p>
<p><a class="mention" href="/u/abraham2119">@abraham2119</a> I suppose you’re right when you look at it from that perspective.</p>
<p><a class="mention" href="/u/lothy">@Lothy</a> I think it makes more sense to manually remove a Tile object. When you remove a player from the tile, check to see if the tile holds any other players. If not, remove the tile as well.</p>
<p><span class="mention">@Peeter</span> I know the number of Tile objects you store is the same, but you still have to consider the memory overhead from the OOPs. I’m sure you said you did a test. Create an empty array. It still consumes space. Also, I did respond to your comments! What did I miss?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/garbage-collect/379158/44">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/garbage-collect/379158/44</link>
        <pubDate>Fri, 28 Jan 2011 16:22:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-379158-44</guid>
        <source url="https://forum.moparisthebest.com/t/garbage-collect/379158.rss">Garbage collect</source>
      </item>
      <item>
        <title>Garbage collect</title>
        <dc:creator><![CDATA[@Peter Peeter]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/peter">@Peter</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="37" data-topic="379158">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/ikilem/40/5_1887921562df0dabfae55079ddabeb03.png" class="avatar"> iKilem:</div>
<blockquote>
<p>Peeter, just stop arguing. I’m right, let it go.</p>
</blockquote>
</aside>
<p>I don’t really see how you’re right. You didn’t respond to a single one of my comments. And regardless if you’re using a hashmap or a 2d array the amount of tile objects that will be put in there remain the same.</p>
<blockquote>So explain to me why on your "plugin" stuff of dark quest why you threaded it? each one? That is what I can not understand at all and when I glanced at it you never killed the thread afterwards... So your keep making threads upon threads upon threads.. 
<p>Strange.</p>
<p>One person makes the action, New thread… Does not die afterwards… New player… does a action… New thread… Does not kill… So explain to me? I would honestly like you to explain. Quite a bit of people saw that even the ones who you had a little “argument” on IRC couple of months ago… Remember how that convo went down? Showed your a complete moron</p>
</blockquote>
<p>You are completely right and I totally fucked up that plugin system is something someone who was wrong would say. I’m better then you.</p>
<p><a href="http://download.oracle.com/javase/1.5.0/docs/api/java/util/concurrent/Executors.html#newCachedThreadPool()" class="onebox" target="_blank">http://download.oracle.com/javase/1.5.0/docs/api/java/util/concurrent/Executors.html#newCachedThreadPool()</a></p>
<blockquote>Creates a thread pool that creates new threads as needed, but will reuse previously constructed threads when they are available. These pools will typically improve the performance of programs that execute many short-lived asynchronous tasks. Calls to execute will reuse previously constructed threads if available. If no existing thread is available, a new thread will be created and added to the pool. Threads that have not been used for sixty seconds are terminated and removed from the cache. Thus, a pool that remains idle for long enough will not consume any resources. Note that pools with similar properties but different details (for example, timeout parameters) may be created using ThreadPoolExecutor constructors.</blockquote>
<p>[quote=“Lothy, post:42, topic:379158”]Why don’t you guys utilise things such as WeakHashMap&lt;K,V&gt;?<br>
If you actually wrote your code properly so that objects fell out of scope, then WeakHashMap would solve the problems – once the Tile isn’t in use anymore (ie, an Entity doesn’t reference it as their position or whatever) then it would be removed automagically from WeakHashMap by the garbage cleaner.[/quote]</p>
<p>The entire idea behind tiles is that they reference objects &amp; players &amp; items instead of the other way round. So you know how many objects are on a tile, if the tile is occupied by a player or a NPC or an item etc.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/garbage-collect/379158/43">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/garbage-collect/379158/43</link>
        <pubDate>Fri, 28 Jan 2011 13:49:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-379158-43</guid>
        <source url="https://forum.moparisthebest.com/t/garbage-collect/379158.rss">Garbage collect</source>
      </item>
      <item>
        <title>Garbage collect</title>
        <dc:creator><![CDATA[@lothy Lothy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lothy">@lothy</a> wrote:</p>
          <blockquote>
              <p>Why don’t you guys utilise things such as WeakHashMap&lt;K,V&gt;?<br>
If you actually wrote your code properly so that objects fell out of scope, then WeakHashMap would solve the problems – once the Tile isn’t in use anymore (ie, an Entity doesn’t reference it as their position or whatever) then it would be removed automagically from WeakHashMap by the garbage cleaner.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/garbage-collect/379158/42">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/garbage-collect/379158/42</link>
        <pubDate>Fri, 28 Jan 2011 04:02:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-379158-42</guid>
        <source url="https://forum.moparisthebest.com/t/garbage-collect/379158.rss">Garbage collect</source>
      </item>
      <item>
        <title>Garbage collect</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>[quote=“iKilem, post:37, topic:379158”][quote author=Peeter link=topic=475008.msg3480533#msg3480533 date=1296079819]<br>
Where do you get that the maximum size of a hashmap is 2048?<br>
[/quote]<br>
In this case, because the maximum amount of players is 2000 (which when rounded to the next power of two, 2048).</p>
<p>Peeter, just stop arguing. I’m right, let it go.</p>
<p><a class="mention" href="/u/ilikearrays">@IlikeArrays</a> Please don’t post if you fail to comprehend the discussion at hand.[/quote]i have never taken a look at an rsc client, but in rs2 at least, the maximum amount of players is 2046. if you take a look at the player updating procedure, it sends the length of “viewable players” (players within the 4 sets of 8x8 regions your player is in) as 11 bits. ids 0 and 2047 are reserved however, so that leaves you with 2046. just because runescape caps it at 2000 doesn’t mean it’s the actual limitation imposed by the client…</p>
<p>edit: as for the actual thread, follow iKilem’s advice and use a dynamically modified map to store only active tiles</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/garbage-collect/379158/41">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/garbage-collect/379158/41</link>
        <pubDate>Fri, 28 Jan 2011 02:23:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-379158-41</guid>
        <source url="https://forum.moparisthebest.com/t/garbage-collect/379158.rss">Garbage collect</source>
      </item>
  </channel>
</rss>
