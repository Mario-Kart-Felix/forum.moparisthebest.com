<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>My SHA-1 implementation</title>
    <link>https://forum.moparisthebest.com/t/my-sha-1-implementation/37030</link>
    <description>A few months ago I was writing a bigger project, and needed a flexible SHA-1 implementation as a part of it.
The code pretty much sucked, so I rewrote it a few days ago.

It should be greatly optimized.

[code]
public final class SHA1 {

  private byte[] safeBuffer;
  private final int[] wordBuffer;

  public SHA1(int len) {
    if(len &gt; 0)
      safeBuffer = new byte[len];
    wordBuffer = new int[80];
  }

  public final int digest(byte[] src, int off, int len, byte[] dest, int destoff) {

    int[] words = wordBuffer;
    int hash0 = 0x67452301, hash1 = 0xefcdab89, hash2 = 0x98badcfe, hash3 = 0x10325476, hash4 = 0xc3d2e1f0;

    int i, j, k;
    if((i = (j = (len + 9)) % 64) != 0)
      i = j - i + 64;

    byte[] buf;
    if((buf = safeBuffer).length &lt; i)
      safeBuffer = buf = new byte[i];

    System.arraycopy(src, off, buf, 0, k = len);

    buf[len++] = -128;
    for(j = i - 4; len &lt; j; buf[len++] = 0x00);
    buf[len++] = (byte)(k &gt;&gt;&gt; 21);
    buf[len++] = (byte)(k &gt;&gt;&gt; 13);
    buf[len++] = (byte)(k &gt;&gt;&gt; 5);
    buf[len++] = (byte)(k &lt;&lt; 3);

    k = 0;
    do {

      j = 0;
      do {
        words[j++] = (buf[k++] &amp; 0xff) &lt;&lt; 24 | (buf[k++] &amp; 0xff) &lt;&lt; 16 | (buf[k++] &amp; 0xff) &lt;&lt; 8 | buf[k++] &amp; 0xff;
      } while(j &lt; 16);

      do {
        words[j] = (i = words[j - 3] ^ words[j - 8] ^ words[j - 14] ^ words[j++ - 16]) &lt;&lt; 1 | i &gt;&gt;&gt; 31;
      } while(j &lt; 80);

      int a = hash0, b = hash1, c = hash2, d = hash3, e = hash4;

      j = 0;
      do {
        i = (a &lt;&lt; 5 | a &gt;&gt;&gt; 27) + (b &amp; c | ~b &amp; d) + e + 0x5a827999 + words[j++];
        e = d;
        d = c;
        c = b &lt;&lt; 30 | b &gt;&gt;&gt; 2;
        b = a;
        a = i;
      } while(j &lt; 20);

      do {
        i = (a &lt;&lt; 5 | a &gt;&gt;&gt; 27) + (b ^ c ^ d) + e + 0x6ed9eba1 + words[j++];
        e = d;
        d = c;
        c = b &lt;&lt; 30 | b &gt;&gt;&gt; 2;
        b = a;
        a = i;
      } while(j &lt; 40);

      do {
        i = (a &lt;&lt; 5 | a &gt;&gt;&gt; 27) + (b &amp; c | b &amp; d | c &amp; d) + e + 0x8f1bbcdc + words[j++];
        e = d;
        d = c;
        c = b &lt;&lt; 30 | b &gt;&gt;&gt; 2;
        b = a;
        a = i;
      } while(j &lt; 60);

      do {
        i = (a &lt;&lt; 5 | a &gt;&gt;&gt; 27) + (b ^ c ^ d) + e + 0xca62c1d6 + words[j++];
        e = d;
        d = c;
        c = b &lt;&lt; 30 | b &gt;&gt;&gt; 2;
        b = a;
        a = i;
      } while(j &lt; 79);

      hash0 += (a &lt;&lt; 5 | a &gt;&gt;&gt; 27) + (b ^ c ^ d) + e + 0xca62c1d6 + words[79];
      hash1 += a;
      hash2 += b &lt;&lt; 30 | b &gt;&gt;&gt; 2;
      hash3 += c;
      hash4 += d;

    } while(k &lt; len);

    dest[destoff++] = (byte)(hash0 &gt;&gt;&gt; 24);
    dest[destoff++] = (byte)(hash0 &gt;&gt;&gt; 16);
    dest[destoff++] = (byte)(hash0 &gt;&gt;&gt; 8);
    dest[destoff++] = (byte)hash0;

    dest[destoff++] = (byte)(hash1 &gt;&gt;&gt; 24);
    dest[destoff++] = (byte)(hash1 &gt;&gt;&gt; 16);
    dest[destoff++] = (byte)(hash1 &gt;&gt;&gt; 8);
    dest[destoff++] = (byte)hash1;

    dest[destoff++] = (byte)(hash2 &gt;&gt;&gt; 24);
    dest[destoff++] = (byte)(hash2 &gt;&gt;&gt; 16);
    dest[destoff++] = (byte)(hash2 &gt;&gt;&gt; 8);
    dest[destoff++] = (byte)hash2;

    dest[destoff++] = (byte)(hash3 &gt;&gt;&gt; 24);
    dest[destoff++] = (byte)(hash3 &gt;&gt;&gt; 16);
    dest[destoff++] = (byte)(hash3 &gt;&gt;&gt; 8);
    dest[destoff++] = (byte)hash3;

    dest[destoff++] = (byte)(hash4 &gt;&gt;&gt; 24);
    dest[destoff++] = (byte)(hash4 &gt;&gt;&gt; 16);
    dest[destoff++] = (byte)(hash4 &gt;&gt;&gt; 8);
    dest[destoff++] = (byte)hash4;

    return destoff;

  }

  public final static int b2h(byte[] src, int off, int len, byte[] dest, int destoff) {
    byte[] b = b16;
    int i;
    for(len += off; off &lt; len; ) {
      dest[destoff++] = b[(i = src[off++]) &gt;&gt;&gt; 4 &amp; 0x0f];
      dest[destoff++] = b[i &amp; 0x0f];
    }
    return destoff;
  }

  private final static byte[] b16 = {
    &#39;0&#39;, &#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;, &#39;7&#39;, &#39;8&#39;, &#39;9&#39;, &#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;
  };

}
[/code]</description>
    
    <lastBuildDate>Tue, 26 Dec 2006 21:44:11 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/my-sha-1-implementation/37030.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>My SHA-1 implementation</title>
        <dc:creator><![CDATA[@thiefmn6092 thiefmn6092]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/thiefmn6092">@thiefmn6092</a> wrote:</p>
          <blockquote>
              <p>[quote=“gikid, post:1, topic:37235”]leeches? 34 views no posts…</p>
<p>Good job… I’ll check it out[/quote]</p>
<p>That doesn’t mean people leeched it, Good job k00dr</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-sha-1-implementation/37030/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-sha-1-implementation/37030/6</link>
        <pubDate>Tue, 26 Dec 2006 21:44:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-37030-6</guid>
        <source url="https://forum.moparisthebest.com/t/my-sha-1-implementation/37030.rss">My SHA-1 implementation</source>
      </item>
      <item>
        <title>My SHA-1 implementation</title>
        <dc:creator><![CDATA[@White_Castle White Castle]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/white_castle">@White_Castle</a> wrote:</p>
          <blockquote>
              <p>Excuse my fucking english. Jeez.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-sha-1-implementation/37030/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-sha-1-implementation/37030/5</link>
        <pubDate>Tue, 26 Dec 2006 12:17:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-37030-5</guid>
        <source url="https://forum.moparisthebest.com/t/my-sha-1-implementation/37030.rss">My SHA-1 implementation</source>
      </item>
      <item>
        <title>My SHA-1 implementation</title>
        <dc:creator><![CDATA[@ilyaostr9 io9]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ilyaostr9">@ilyaostr9</a> wrote:</p>
          <blockquote>
              <p>[quote=“White Castle, post:3, topic:37030”][quote author=gikid link=topic=52590.msg651206#msg651206 date=1166586904]<br>
leeches? 34 views no posts…</p>
<p>Good job… I’ll check it out<br>
[/quote]</p>
<p>teh maths confuses we</p>
<p>Nice job, though why didn’t you just use java.sercurity.MessageDigest?[/quote]<br>
because java.<span class="bbcode-b">sercurity</span>.MessageDigest doesn’t exist <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-sha-1-implementation/37030/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-sha-1-implementation/37030/4</link>
        <pubDate>Tue, 26 Dec 2006 01:58:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-37030-4</guid>
        <source url="https://forum.moparisthebest.com/t/my-sha-1-implementation/37030.rss">My SHA-1 implementation</source>
      </item>
      <item>
        <title>My SHA-1 implementation</title>
        <dc:creator><![CDATA[@White_Castle White Castle]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/white_castle">@White_Castle</a> wrote:</p>
          <blockquote>
              <p>[quote=“gikid, post:1, topic:37235”]leeches? 34 views no posts…</p>
<p>Good job… I’ll check it out[/quote]</p>
<p>teh maths confuses we</p>
<p>Nice job, though why didn’t you just use java.sercurity.MessageDigest?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-sha-1-implementation/37030/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-sha-1-implementation/37030/3</link>
        <pubDate>Thu, 21 Dec 2006 02:02:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-37030-3</guid>
        <source url="https://forum.moparisthebest.com/t/my-sha-1-implementation/37030.rss">My SHA-1 implementation</source>
      </item>
      <item>
        <title>My SHA-1 implementation</title>
        <dc:creator><![CDATA[@k00dr k00dr]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/k00dr">@k00dr</a> wrote:</p>
          <blockquote>
              <p>Heh, thank you. <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-sha-1-implementation/37030/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-sha-1-implementation/37030/2</link>
        <pubDate>Wed, 20 Dec 2006 04:03:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-37030-2</guid>
        <source url="https://forum.moparisthebest.com/t/my-sha-1-implementation/37030.rss">My SHA-1 implementation</source>
      </item>
      <item>
        <title>My SHA-1 implementation</title>
        <dc:creator><![CDATA[@k00dr k00dr]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/k00dr">@k00dr</a> wrote:</p>
          <blockquote>
              <p>A few months ago I was writing a bigger project, and needed a flexible SHA-1 implementation as a part of it.<br>
The code pretty much sucked, so I rewrote it a few days ago.</p>
<p>It should be greatly optimized.</p>
<pre><code class="lang-auto">public final class SHA1 {

  private byte[] safeBuffer;
  private final int[] wordBuffer;

  public SHA1(int len) {
    if(len &gt; 0)
      safeBuffer = new byte[len];
    wordBuffer = new int[80];
  }

  public final int digest(byte[] src, int off, int len, byte[] dest, int destoff) {

    int[] words = wordBuffer;
    int hash0 = 0x67452301, hash1 = 0xefcdab89, hash2 = 0x98badcfe, hash3 = 0x10325476, hash4 = 0xc3d2e1f0;

    int i, j, k;
    if((i = (j = (len + 9)) % 64) != 0)
      i = j - i + 64;

    byte[] buf;
    if((buf = safeBuffer).length &lt; i)
      safeBuffer = buf = new byte[i];

    System.arraycopy(src, off, buf, 0, k = len);

    buf[len++] = -128;
    for(j = i - 4; len &lt; j; buf[len++] = 0x00);
    buf[len++] = (byte)(k &gt;&gt;&gt; 21);
    buf[len++] = (byte)(k &gt;&gt;&gt; 13);
    buf[len++] = (byte)(k &gt;&gt;&gt; 5);
    buf[len++] = (byte)(k &lt;&lt; 3);

    k = 0;
    do {

      j = 0;
      do {
        words[j++] = (buf[k++] &amp; 0xff) &lt;&lt; 24 | (buf[k++] &amp; 0xff) &lt;&lt; 16 | (buf[k++] &amp; 0xff) &lt;&lt; 8 | buf[k++] &amp; 0xff;
      } while(j &lt; 16);

      do {
        words[j] = (i = words[j - 3] ^ words[j - 8] ^ words[j - 14] ^ words[j++ - 16]) &lt;&lt; 1 | i &gt;&gt;&gt; 31;
      } while(j &lt; 80);

      int a = hash0, b = hash1, c = hash2, d = hash3, e = hash4;

      j = 0;
      do {
        i = (a &lt;&lt; 5 | a &gt;&gt;&gt; 27) + (b &amp; c | ~b &amp; d) + e + 0x5a827999 + words[j++];
        e = d;
        d = c;
        c = b &lt;&lt; 30 | b &gt;&gt;&gt; 2;
        b = a;
        a = i;
      } while(j &lt; 20);

      do {
        i = (a &lt;&lt; 5 | a &gt;&gt;&gt; 27) + (b ^ c ^ d) + e + 0x6ed9eba1 + words[j++];
        e = d;
        d = c;
        c = b &lt;&lt; 30 | b &gt;&gt;&gt; 2;
        b = a;
        a = i;
      } while(j &lt; 40);

      do {
        i = (a &lt;&lt; 5 | a &gt;&gt;&gt; 27) + (b &amp; c | b &amp; d | c &amp; d) + e + 0x8f1bbcdc + words[j++];
        e = d;
        d = c;
        c = b &lt;&lt; 30 | b &gt;&gt;&gt; 2;
        b = a;
        a = i;
      } while(j &lt; 60);

      do {
        i = (a &lt;&lt; 5 | a &gt;&gt;&gt; 27) + (b ^ c ^ d) + e + 0xca62c1d6 + words[j++];
        e = d;
        d = c;
        c = b &lt;&lt; 30 | b &gt;&gt;&gt; 2;
        b = a;
        a = i;
      } while(j &lt; 79);

      hash0 += (a &lt;&lt; 5 | a &gt;&gt;&gt; 27) + (b ^ c ^ d) + e + 0xca62c1d6 + words[79];
      hash1 += a;
      hash2 += b &lt;&lt; 30 | b &gt;&gt;&gt; 2;
      hash3 += c;
      hash4 += d;

    } while(k &lt; len);

    dest[destoff++] = (byte)(hash0 &gt;&gt;&gt; 24);
    dest[destoff++] = (byte)(hash0 &gt;&gt;&gt; 16);
    dest[destoff++] = (byte)(hash0 &gt;&gt;&gt; 8);
    dest[destoff++] = (byte)hash0;

    dest[destoff++] = (byte)(hash1 &gt;&gt;&gt; 24);
    dest[destoff++] = (byte)(hash1 &gt;&gt;&gt; 16);
    dest[destoff++] = (byte)(hash1 &gt;&gt;&gt; 8);
    dest[destoff++] = (byte)hash1;

    dest[destoff++] = (byte)(hash2 &gt;&gt;&gt; 24);
    dest[destoff++] = (byte)(hash2 &gt;&gt;&gt; 16);
    dest[destoff++] = (byte)(hash2 &gt;&gt;&gt; 8);
    dest[destoff++] = (byte)hash2;

    dest[destoff++] = (byte)(hash3 &gt;&gt;&gt; 24);
    dest[destoff++] = (byte)(hash3 &gt;&gt;&gt; 16);
    dest[destoff++] = (byte)(hash3 &gt;&gt;&gt; 8);
    dest[destoff++] = (byte)hash3;

    dest[destoff++] = (byte)(hash4 &gt;&gt;&gt; 24);
    dest[destoff++] = (byte)(hash4 &gt;&gt;&gt; 16);
    dest[destoff++] = (byte)(hash4 &gt;&gt;&gt; 8);
    dest[destoff++] = (byte)hash4;

    return destoff;

  }

  public final static int b2h(byte[] src, int off, int len, byte[] dest, int destoff) {
    byte[] b = b16;
    int i;
    for(len += off; off &lt; len; ) {
      dest[destoff++] = b[(i = src[off++]) &gt;&gt;&gt; 4 &amp; 0x0f];
      dest[destoff++] = b[i &amp; 0x0f];
    }
    return destoff;
  }

  private final static byte[] b16 = {
    '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'
  };

}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-sha-1-implementation/37030/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-sha-1-implementation/37030/1</link>
        <pubDate>Tue, 19 Dec 2006 11:00:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-37030-1</guid>
        <source url="https://forum.moparisthebest.com/t/my-sha-1-implementation/37030.rss">My SHA-1 implementation</source>
      </item>
  </channel>
</rss>
