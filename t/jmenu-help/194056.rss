<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>JMenu Help</title>
    <link>https://forum.moparisthebest.com/t/jmenu-help/194056</link>
    <description>Alright, I&#39;ve finally tried [b]EVERYTHING[/b] in my power to fix this, even black google :(.  I have a JMenu on my client as some of you know, but when I set the server ip, even when the field is empty or not, it seems to connect to my localhost.  I know it&#39;s not a problem with my client.java, because when I added this, I was getting errors, here&#39;s my gui.java that contains the jmenu:

[code]import javax.swing.*;
import java.awt.*;
import java.lang.String;
import java.awt.event.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStreamReader;
import java.net.InetAddress;
import java.net.URL;
import java.util.ArrayList;
import java.util.Date;
import java.util.Hashtable;
import javax.swing.*;
import javax.swing.plaf.metal.MetalLookAndFeel;
import sign.signlink;
import theme.BlackTheme;
import theme.OrangeTheme;
import theme.GreenTheme;
import theme.RedTheme;
import theme.BlackWTheme;
import java.util.List;

public class Gui extends client implements ActionListener, FocusListener
{

    private static boolean isApplet = false;
	public static void main(String args[]) 
	{
		new Gui(args);
	}

	private Gui(String args[]) 
	{
		super();
		try 
		{
			sign.signlink.startpriv(InetAddress.getByName(&quot;&quot;));
			initUI();
		} 
		catch(Exception ex)
		{
			ex.printStackTrace();
		}
	}
	private void initUI() 
	{
		try 
		{
			JFrame.setDefaultLookAndFeelDecorated(true);
			MetalLookAndFeel.setCurrentTheme(new BlackTheme());
			JPopupMenu.setDefaultLightWeightPopupEnabled(false);

			sign.signlink.mainapp = this; // Dangerous reference?

			frame = new JFrame(frameTitle);
			frame.setLayout(new BorderLayout());

			frame.setResizable(false);
			frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

			JPanel gamePanel = new JPanel();
			gamePanel.setLayout(new BorderLayout());
			gamePanel.add(this);
			gamePanel.setPreferredSize(new Dimension(765, 503));

			JMenuBar menuBar = new JMenuBar();

			JMenu fileMenu = new JMenu(&quot;File&quot;);
			JMenu toolsMenu = new JMenu(&quot;Tools&quot;);
			JMenu hpMenu = new JMenu(&quot;HP Above Heads&quot;);
			JMenu chatMenu = new JMenu(&quot;Chat Filter&quot;);
			JMenu miscMenu = new JMenu(&quot;Miscellaneous&quot;);

			String[] miscButtons = new String[]
				{
					&quot;About&quot;, &quot;Website&quot;, &quot;Help&quot;
				};
			String[] mainButtons = new String[]
				{
					&quot;Change Server&quot;, &quot;Change Port&quot;, &quot;Server Status&quot;, &quot;Dump Items&quot;, &quot;-&quot;, &quot;Quit&quot;
				};
			String[] toolsButtons = new String[]
				{
					 &quot;FPS&quot;, &quot;Item IDs&quot;, &quot;NPC IDs&quot;, &quot;Object IDs&quot;
				};
			String[] hpButtons = new String[]
				{
					 &quot;On&quot;, &quot;-&quot;, &quot;Off&quot;
				};
			String[] chatButtons = new String[]
				{
					 &quot;On &quot;, &quot;-&quot;, &quot;Off &quot;
				};
			for (String name : mainButtons) 
			{
				JMenuItem menuItem = new JMenuItem(name);
				if (name.equalsIgnoreCase(&quot;-&quot;))
					fileMenu.addSeparator();
				else 
				{
					menuItem.addActionListener(this);
					fileMenu.add(menuItem);
				}
			}
			for (String name : chatButtons) 
			{
				JMenuItem menuItem = new JMenuItem(name);
				if (name.equalsIgnoreCase(&quot;-&quot;))
					chatMenu.addSeparator();
				else 
				{
					menuItem.addActionListener(this);
					chatMenu.add(menuItem);
				}
			}
						for (String name : miscButtons) 
			{
				JMenuItem menuItem = new JMenuItem(name);
				if (name.equalsIgnoreCase(&quot;-&quot;))
					miscMenu.addSeparator();
				else 
				{
					menuItem.addActionListener(this);
					miscMenu.add(menuItem);
				}
			}
			for (String name : hpButtons) 
			{
				JMenuItem menuItem = new JMenuItem(name);
				if (name.equalsIgnoreCase(&quot;-&quot;))
					hpMenu.addSeparator();
				else 
				{
					hpMenu.add(menuItem);
					menuItem.addActionListener(this);
				}
			}
			for (String name : toolsButtons) 
			{
				JMenuItem menuItem = new JMenuItem(name);
				if (name.equalsIgnoreCase(&quot;-&quot;))
					toolsMenu.addSeparator();
				else 
				{
					toolsMenu.add(menuItem);
					menuItem.addActionListener(this);
				}
			}

			menuBar.add(fileMenu);
			menuBar.add(toolsMenu);
			menuBar.add(hpMenu);
			menuBar.add(chatMenu);
			menuBar.add(miscMenu);
			frame.getContentPane().add(menuBar, BorderLayout.NORTH);
			frame.getContentPane().add(gamePanel, BorderLayout.CENTER);
			frame.pack();
			frame.setVisible(true);
			init();
		} 
		catch (Exception e) 
		{
			e.printStackTrace();
		}
	}

	public URL getCodeBase() 
	{
		try 
		{
			return new URL(&quot;http://127.0.0.1/cache&quot;);
			//return new URL(&quot;http://po4.runescape.com:&quot; + (80 + anInt870));
		} 
		catch (Exception e) 
		{
			return super.getCodeBase();
		}
	}

	public URL getDocumentBase() 
	{
		return getCodeBase();
	}

	public void loadError(String s) 
	{
		System.out.println(&quot;loadError: &quot; + s);
	}
	public String getParameter(String key) 
	{
		if (key.equals(&quot;nodeid&quot;))
			return &quot;10&quot;;
		else if (key.equals(&quot;portoff&quot;))
			return &quot;0&quot;;
		else if (key.equals(&quot;lowmem&quot;))
			return &quot;1&quot;;
		else if (key.equals(&quot;free&quot;))
			return &quot;0&quot;;
		else
			return &quot;&quot;;
	}
	
	/*	public void displayPortSelect() {     
		port = JOptionPane.showInputDialog(this, (new StringBuilder()).append(&quot;Current Port: &quot;+ port).toString(), &quot;Enter Port #&quot;, 3);
		System.out.println(&quot;Setting port to: &quot; + port + &quot;&quot;);      
            return;
			}

					public void displayWorldSelect()
        {
           server = JOptionPane.showInputDialog(this, (new StringBuilder()).append(&quot;Current IP: &quot;+ server).toString(), &quot;Enter Server IP&quot;, 3);
		   System.out.println(&quot;Setting server to: &quot; + server + &quot;&quot;);
            return;
        }		*/
		public void displayPortSelect() {
		port = JOptionPane.showInputDialog(this, &quot;New Port #:&quot;);
		System.out.println(&quot;Setting port to: &quot; + port + &quot;&quot;);
			}

	public void displayWorldSelect() {
		server = JOptionPane.showInputDialog(this, &quot;New Server IP:&quot;);
		System.out.println(&quot;Setting server to: &quot; + server + &quot;&quot;);
			}		
	public void actionPerformed(ActionEvent evt) 
	{
		String cmd = evt.getActionCommand();
		if (cmd != null) 
		{
			if (cmd.equalsIgnoreCase(&quot;Quit&quot;)) 
			{
				method68( -670);
			}
	
			if (cmd.equalsIgnoreCase(&quot;server status&quot;))
			{
String url = &quot;http://www.moparisthebest.com/serverstatus.php&quot;;
String browserPath = &quot;http://www.moparisthebest.com/serverstatus.php&quot;;
           browserPath = &quot;C:/Program Files/Internet Explorer/iexplore.exe&quot;;
           url = &quot;http://www.moparisthebest.com/serverstatus.php&quot;;
            try {
                 String[] b = {browserPath, url};
                 Runtime.getRuntime().exec(b);
             }
             catch (Exception exc) {
          exc.printStackTrace();
             }
}
			if (cmd.equalsIgnoreCase(&quot;Website&quot;))
			{
String url = &quot;www.unitedpk.co.nr&quot;;
String browserPath = &quot;www.unitedpk.co.nr&quot;;
           browserPath = &quot;C:/Program Files/Internet Explorer/iexplore.exe&quot;;
           url = &quot;www.unitedpk.co.nr&quot;;
            try {
                 String[] b = {browserPath, url};
                 Runtime.getRuntime().exec(b);
             }
             catch (Exception exc) {
          exc.printStackTrace();
             }
}
			if (cmd.equalsIgnoreCase(&quot;About&quot;))
{
				JOptionPane.showMessageDialog(frame, &quot;This client was brought to you by Call of Duty.&quot;);
}
            if(cmd.equals(&quot;Item IDs&quot;))
            {
                if(isApplet)
                {
                    checkIDs();
                    new Xml$((new StringBuilder()).append(findcachedir()).append(&quot;all_IDs/Items.xml&quot;).toString());
                } else
                {
                    new Xml$(&quot;cache/all_IDs/Items.xml&quot;);
                }
            }
            if(cmd.equals(&quot;NPC IDs&quot;))
            {
                if(isApplet)
                {
                    checkIDs();
                    new Xml$((new StringBuilder()).append(findcachedir()).append(&quot;all_IDs/NPCs.xml&quot;).toString());
                } else
                {
                    new Xml$(&quot;cache/all_IDs/NPCs.xml&quot;);
                }
            }
            if(cmd.equals(&quot;Object IDs&quot;))
            {
                if(isApplet)
                {
                    checkIDs();
                    new Xml$((new StringBuilder()).append(findcachedir()).append(&quot;all_IDs/Objects.xml&quot;).toString());
                } else
                {
                    new Xml$(&quot;cache/all_IDs/Objects.xml&quot;);
                }
            }
			if (cmd.equalsIgnoreCase(&quot;Help&quot;))
{
				JOptionPane.showMessageDialog(frame, &quot;MSCP-Call of Duty, AIM-bosoxwinws2k4, MSN-MMcGrady1@msn.com&quot;);
}
            if(cmd.equalsIgnoreCase(&quot;FPS&quot;))
            {
                fps();
            }
        }
			if (cmd.equalsIgnoreCase(&quot;On &quot;))
				censor = true;
			if (cmd.equalsIgnoreCase(&quot;Off &quot;))
				censor = false;
			if (cmd.equalsIgnoreCase(&quot;On&quot;))
				hp = true;
			if (cmd.equalsIgnoreCase(&quot;Off&quot;))
				hp = false;
			if (cmd.equalsIgnoreCase(&quot;Dump Items&quot;))
				Class8.dumpItemsList();
			if (cmd.equalsIgnoreCase(&quot;change port&quot;))
			{
				displayPortSelect();
	}
			if (cmd.equalsIgnoreCase(&quot;change server&quot;))
			{
				displayWorldSelect();
	}
	}
    private void checkIDs()
    {
        File exist = new File((new StringBuilder()).append(findcachedir()).append(&quot;all_IDs/&quot;).toString());
        if(!exist.exists())
        {
            new Update(&quot;http://www.moparisthebest.com/cache/all_IDs.zip&quot;, &quot;all_IDs.zip&quot;, findcachedir(), true, false);
        }
    }
    public static final String findcachedir()
    {
            try
            {
            	String s = &quot;&quot;;
                String s1 = &quot;Cache&quot;;
                File file = new File(s1 + s);
                if(file.exists() || file.mkdir())
                    return s1 + s + &quot;/&quot;;
            }
            catch(Exception _ex) { }

        return null;
    }
public void fps()
{
aBoolean1156 = !aBoolean1156;
}
	private String frameTitle = &quot;X-Infinity - Created by Call of Duty&quot;;
	public JFrame frame;
 }[/code]I just can&#39;t figure this out, I&#39;ve tried everything I know.</description>
    
    <lastBuildDate>Sat, 29 Mar 2008 18:47:24 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/jmenu-help/194056.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>JMenu Help</title>
        <dc:creator><![CDATA[@Call_of_Duty Call of Duty]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/call_of_duty">@Call_of_Duty</a> wrote:</p>
          <blockquote>
              <p>Alright, I’ve finally tried <span class="bbcode-b">EVERYTHING</span> in my power to fix this, even black google :(.  I have a JMenu on my client as some of you know, but when I set the server ip, even when the field is empty or not, it seems to connect to my localhost.  I know it’s not a problem with my client.java, because when I added this, I was getting errors, here’s my gui.java that contains the jmenu:</p>
<p>[code]import javax.swing.<em>;<br>
import java.awt.</em>;<br>
import java.lang.String;<br>
import java.awt.event.<em>;<br>
import java.io.BufferedReader;<br>
import java.io.File;<br>
import java.io.FileOutputStream;<br>
import java.io.InputStreamReader;<br>
import java.net.InetAddress;<br>
import java.net.URL;<br>
import java.util.ArrayList;<br>
import java.util.Date;<br>
import java.util.Hashtable;<br>
import javax.swing.</em>;<br>
import javax.swing.plaf.metal.MetalLookAndFeel;<br>
import sign.signlink;<br>
import theme.BlackTheme;<br>
import theme.OrangeTheme;<br>
import theme.GreenTheme;<br>
import theme.RedTheme;<br>
import theme.BlackWTheme;<br>
import java.util.List;</p>
<p>public class Gui extends client implements ActionListener, FocusListener<br>
{</p>
<pre><code>private static boolean isApplet = false;
public static void main(String args[]) 
{
	new Gui(args);
}

private Gui(String args[]) 
{
	super();
	try 
	{
		sign.signlink.startpriv(InetAddress.getByName(""));
		initUI();
	} 
	catch(Exception ex)
	{
		ex.printStackTrace();
	}
}
private void initUI() 
{
	try 
	{
		JFrame.setDefaultLookAndFeelDecorated(true);
		MetalLookAndFeel.setCurrentTheme(new BlackTheme());
		JPopupMenu.setDefaultLightWeightPopupEnabled(false);

		sign.signlink.mainapp = this; // Dangerous reference?

		frame = new JFrame(frameTitle);
		frame.setLayout(new BorderLayout());

		frame.setResizable(false);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

		JPanel gamePanel = new JPanel();
		gamePanel.setLayout(new BorderLayout());
		gamePanel.add(this);
		gamePanel.setPreferredSize(new Dimension(765, 503));

		JMenuBar menuBar = new JMenuBar();

		JMenu fileMenu = new JMenu("File");
		JMenu toolsMenu = new JMenu("Tools");
		JMenu hpMenu = new JMenu("HP Above Heads");
		JMenu chatMenu = new JMenu("Chat Filter");
		JMenu miscMenu = new JMenu("Miscellaneous");

		String[] miscButtons = new String[]
			{
				"About", "Website", "Help"
			};
		String[] mainButtons = new String[]
			{
				"Change Server", "Change Port", "Server Status", "Dump Items", "-", "Quit"
			};
		String[] toolsButtons = new String[]
			{
				 "FPS", "Item IDs", "NPC IDs", "Object IDs"
			};
		String[] hpButtons = new String[]
			{
				 "On", "-", "Off"
			};
		String[] chatButtons = new String[]
			{
				 "On ", "-", "Off "
			};
		for (String name : mainButtons) 
		{
			JMenuItem menuItem = new JMenuItem(name);
			if (name.equalsIgnoreCase("-"))
				fileMenu.addSeparator();
			else 
			{
				menuItem.addActionListener(this);
				fileMenu.add(menuItem);
			}
		}
		for (String name : chatButtons) 
		{
			JMenuItem menuItem = new JMenuItem(name);
			if (name.equalsIgnoreCase("-"))
				chatMenu.addSeparator();
			else 
			{
				menuItem.addActionListener(this);
				chatMenu.add(menuItem);
			}
		}
					for (String name : miscButtons) 
		{
			JMenuItem menuItem = new JMenuItem(name);
			if (name.equalsIgnoreCase("-"))
				miscMenu.addSeparator();
			else 
			{
				menuItem.addActionListener(this);
				miscMenu.add(menuItem);
			}
		}
		for (String name : hpButtons) 
		{
			JMenuItem menuItem = new JMenuItem(name);
			if (name.equalsIgnoreCase("-"))
				hpMenu.addSeparator();
			else 
			{
				hpMenu.add(menuItem);
				menuItem.addActionListener(this);
			}
		}
		for (String name : toolsButtons) 
		{
			JMenuItem menuItem = new JMenuItem(name);
			if (name.equalsIgnoreCase("-"))
				toolsMenu.addSeparator();
			else 
			{
				toolsMenu.add(menuItem);
				menuItem.addActionListener(this);
			}
		}

		menuBar.add(fileMenu);
		menuBar.add(toolsMenu);
		menuBar.add(hpMenu);
		menuBar.add(chatMenu);
		menuBar.add(miscMenu);
		frame.getContentPane().add(menuBar, BorderLayout.NORTH);
		frame.getContentPane().add(gamePanel, BorderLayout.CENTER);
		frame.pack();
		frame.setVisible(true);
		init();
	} 
	catch (Exception e) 
	{
		e.printStackTrace();
	}
}

public URL getCodeBase() 
{
	try 
	{
		return new URL("http://127.0.0.1/cache");
		//return new URL("http://po4.runescape.com:" + (80 + anInt870));
	} 
	catch (Exception e) 
	{
		return super.getCodeBase();
	}
}

public URL getDocumentBase() 
{
	return getCodeBase();
}

public void loadError(String s) 
{
	System.out.println("loadError: " + s);
}
public String getParameter(String key) 
{
	if (key.equals("nodeid"))
		return "10";
	else if (key.equals("portoff"))
		return "0";
	else if (key.equals("lowmem"))
		return "1";
	else if (key.equals("free"))
		return "0";
	else
		return "";
}

/*	public void displayPortSelect() {     
	port = JOptionPane.showInputDialog(this, (new StringBuilder()).append("Current Port: "+ port).toString(), "Enter Port #", 3);
	System.out.println("Setting port to: " + port + "");      
        return;
		}

				public void displayWorldSelect()
    {
       server = JOptionPane.showInputDialog(this, (new StringBuilder()).append("Current IP: "+ server).toString(), "Enter Server IP", 3);
	   System.out.println("Setting server to: " + server + "");
        return;
    }		*/
	public void displayPortSelect() {
	port = JOptionPane.showInputDialog(this, "New Port #:");
	System.out.println("Setting port to: " + port + "");
		}

public void displayWorldSelect() {
	server = JOptionPane.showInputDialog(this, "New Server IP:");
	System.out.println("Setting server to: " + server + "");
		}		
public void actionPerformed(ActionEvent evt) 
{
	String cmd = evt.getActionCommand();
	if (cmd != null) 
	{
		if (cmd.equalsIgnoreCase("Quit")) 
		{
			method68( -670);
		}

		if (cmd.equalsIgnoreCase("server status"))
		{
</code></pre>
<p>String url = “<a href="http://www.moparisthebest.com/serverstatus.php" rel="nofollow noopener">http://www.moparisthebest.com/serverstatus.php</a>”;<br>
String browserPath = “<a href="http://www.moparisthebest.com/serverstatus.php" rel="nofollow noopener">http://www.moparisthebest.com/serverstatus.php</a>”;<br>
browserPath = “C:/Program Files/Internet Explorer/iexplore.exe”;<br>
url = “<a href="http://www.moparisthebest.com/serverstatus.php" rel="nofollow noopener">http://www.moparisthebest.com/serverstatus.php</a>”;<br>
try {<br>
String[] b = {browserPath, url};<br>
Runtime.getRuntime().exec(b);<br>
}<br>
catch (Exception exc) {<br>
exc.printStackTrace();<br>
}<br>
}<br>
if (cmd.equalsIgnoreCase(“Website”))<br>
{<br>
String url = “www.unitedpk.co.nr”;<br>
String browserPath = “www.unitedpk.co.nr”;<br>
browserPath = “C:/Program Files/Internet Explorer/iexplore.exe”;<br>
url = “www.unitedpk.co.nr”;<br>
try {<br>
String[] b = {browserPath, url};<br>
Runtime.getRuntime().exec(b);<br>
}<br>
catch (Exception exc) {<br>
exc.printStackTrace();<br>
}<br>
}<br>
if (cmd.equalsIgnoreCase(“About”))<br>
{<br>
JOptionPane.showMessageDialog(frame, “This client was brought to you by Call of Duty.”);<br>
}<br>
if(cmd.equals(“Item IDs”))<br>
{<br>
if(isApplet)<br>
{<br>
checkIDs();<br>
new Xml$((new StringBuilder()).append(findcachedir()).append(“all_IDs/Items.xml”).toString());<br>
} else<br>
{<br>
new Xml$(“cache/all_IDs/Items.xml”);<br>
}<br>
}<br>
if(cmd.equals(“NPC IDs”))<br>
{<br>
if(isApplet)<br>
{<br>
checkIDs();<br>
new Xml$((new StringBuilder()).append(findcachedir()).append(“all_IDs/NPCs.xml”).toString());<br>
} else<br>
{<br>
new Xml$(“cache/all_IDs/NPCs.xml”);<br>
}<br>
}<br>
if(cmd.equals(“Object IDs”))<br>
{<br>
if(isApplet)<br>
{<br>
checkIDs();<br>
new Xml$((new StringBuilder()).append(findcachedir()).append(“all_IDs/Objects.xml”).toString());<br>
} else<br>
{<br>
new Xml$(“cache/all_IDs/Objects.xml”);<br>
}<br>
}<br>
if (cmd.equalsIgnoreCase(“Help”))<br>
{<br>
JOptionPane.showMessageDialog(frame, “MSCP-Call of Duty, AIM-bosoxwinws2k4, <a href="mailto:MSN-MMcGrady1@msn.com">MSN-MMcGrady1@msn.com</a>”);<br>
}<br>
if(cmd.equalsIgnoreCase(“FPS”))<br>
{<br>
fps();<br>
}<br>
}<br>
if (cmd.equalsIgnoreCase("On "))<br>
censor = true;<br>
if (cmd.equalsIgnoreCase("Off "))<br>
censor = false;<br>
if (cmd.equalsIgnoreCase(“On”))<br>
hp = true;<br>
if (cmd.equalsIgnoreCase(“Off”))<br>
hp = false;<br>
if (cmd.equalsIgnoreCase(“Dump Items”))<br>
Class8.dumpItemsList();<br>
if (cmd.equalsIgnoreCase(“change port”))<br>
{<br>
displayPortSelect();<br>
}<br>
if (cmd.equalsIgnoreCase(“change server”))<br>
{<br>
displayWorldSelect();<br>
}<br>
}<br>
private void checkIDs()<br>
{<br>
File exist = new File((new StringBuilder()).append(findcachedir()).append(“all_IDs/”).toString());<br>
if(!exist.exists())<br>
{<br>
new Update(“<a href="http://www.moparisthebest.com/cache/all_IDs.zip" rel="nofollow noopener">http://www.moparisthebest.com/cache/all_IDs.zip</a>”, “all_IDs.zip”, findcachedir(), true, false);<br>
}<br>
}<br>
public static final String findcachedir()<br>
{<br>
try<br>
{<br>
String s = “”;<br>
String s1 = “Cache”;<br>
File file = new File(s1 + s);<br>
if(file.exists() || file.mkdir())<br>
return s1 + s + “/”;<br>
}<br>
catch(Exception _ex) { }</p>
<pre><code>    return null;
}
</code></pre>
<p>public void fps()<br>
{<br>
aBoolean1156 = !aBoolean1156;<br>
}<br>
private String frameTitle = “X-Infinity - Created by Call of Duty”;<br>
public JFrame frame;<br>
}[/code]I just can’t figure this out, I’ve tried everything I know.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/jmenu-help/194056/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/jmenu-help/194056/1</link>
        <pubDate>Sat, 29 Mar 2008 18:47:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-194056-1</guid>
        <source url="https://forum.moparisthebest.com/t/jmenu-help/194056.rss">JMenu Help</source>
      </item>
  </channel>
</rss>
