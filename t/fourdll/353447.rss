<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>FourDll</title>
    <link>https://forum.moparisthebest.com/t/fourdll/353447</link>
    <description>Apparently I got bored...

[code]import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * 4Chan Image downloader
 * @author Freddy1990
 */

public class FourDll {

	/**
	 * Pattern for matching relative topic links.
	 */
	private static Pattern PATTERN_THREADS = Pattern.compile(&quot;\&quot;([^\&quot;]+)\&quot;&gt;Reply&quot;);
	/**
	 * Pattern for matching image links.
	 */
	private static Pattern PATTERN_IMAGES = Pattern.compile(&quot;http://images\\.4chan\\.org/[^/]+/src/(\\d+\\.\\w+)&quot;);
	
	/**
	 * Default board.
	 */
	private static final String DEFAULT_BOARD = &quot;s&quot;;
	/**
	 * Default folder.
	 */
	private static final String DEFAULT_FOLDER = &quot;images&quot;;
	
	/**
	 * Reads the content of a webpage.
	 * @param link the url as string
	 * @return the content of the page
	 */
	public static String readPage(String link) {
		try {
			URL url = new URL(link);
			URLConnection uc = url.openConnection();
			DataInputStream di = new DataInputStream(uc.getInputStream());
			byte[] buffer = new byte[uc.getContentLength()];
			di.readFully(buffer);
			di.close();
			return new String(buffer);
		} catch (Exception e) {	}
		return null;
	}

	/**
	 * Main class which downloads the images from 4chan.
	 * @param board the board you wish to download
	 */
	public FourDll(String board, String folder) {
		if (!folder.endsWith(File.separator))
			folder += File.separator;
		folder += board + File.separator;
		File dir = new File(folder);
		dir.mkdirs();
		if (!dir.exists())
			return;
		while (true) {
			File f = null;
			try {
				for (int page = 0; page &lt; 17; page++) {
					System.out.println(&quot;Page: &quot; + page);
					String pageSource = readPage(&quot;http://boards.4chan.org/&quot; + board + &quot;/&quot; + page);
					Matcher mThreads = PATTERN_THREADS.matcher(pageSource);
					List&lt;String&gt; threads = new ArrayList&lt;String&gt;();
					while (mThreads.find())
						threads.add(&quot;http://boards.4chan.org/&quot; + board + &quot;/&quot; + mThreads.group(1));
					Iterator&lt;String&gt; itThreads = threads.iterator();
					while (itThreads.hasNext()) {
						String link = itThreads.next();
						pageSource = readPage(link);
						System.out.println(&quot;Thread: &quot; + link);
						Matcher mImages = PATTERN_IMAGES.matcher(pageSource);
						while (mImages.find()) {
							f = new File(folder + mImages.group(1));
							if (!f.exists())
								try {
									System.out.println(&quot;Downloading &quot; + mImages.group(1));
									BufferedInputStream bis = 
										new BufferedInputStream(new URL(mImages.group(0)).openStream());
									FileOutputStream fos = new FileOutputStream(f);
									BufferedOutputStream bos = new BufferedOutputStream(fos, 1024);
									byte data[] = new byte[1024];
									int count = 0;
									while ((count = bis.read(data, 0, 1024)) != -1)
										bos.write(data, 0, count);
									bos.close();
									fos.close();
									bis.close();
								} catch (Exception e) {
									System.out.println(&quot;Failed on &quot; + mImages.group(1));
									continue;
								}
						}
					}
				}
			} catch (Exception e) {
				f.delete();
			}
		}
	}
	
	public static void main(String[] args) {
		if (args.length &gt; 1)
			new FourDll(args[0], args[1]);
		else {
			new FourDll(DEFAULT_BOARD, DEFAULT_FOLDER);
			System.out.println(&quot;Usage: java FourDll board targetfolder&quot;);
		}
	}

}[/code]

I&#39;ve set the default values so you won&#39;t have to pass any parameters ;)</description>
    
    <lastBuildDate>Sat, 07 Aug 2010 15:28:42 +0000</lastBuildDate>
    <category>Technology</category>
    <atom:link href="https://forum.moparisthebest.com/t/fourdll/353447.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>FourDll</title>
        <dc:creator><![CDATA[@Freddy1990 Freddy1990]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/freddy1990">@Freddy1990</a> wrote:</p>
          <blockquote>
              <p>Apparently I got bored…</p>
<p>[code]import java.io.BufferedInputStream;<br>
import java.io.BufferedOutputStream;<br>
import java.io.DataInputStream;<br>
import java.io.File;<br>
import java.io.FileOutputStream;<br>
import java.net.URL;<br>
import java.net.URLConnection;<br>
import java.util.ArrayList;<br>
import java.util.Iterator;<br>
import java.util.List;<br>
import java.util.regex.Matcher;<br>
import java.util.regex.Pattern;</p>
<p>/**</p>
<ul>
<li>4Chan Image downloader</li>
<li>
<span class="mention">@author</span> Freddy1990<br>
*/</li>
</ul>
<p>public class FourDll {</p>
<pre><code>/**
 * Pattern for matching relative topic links.
 */
private static Pattern PATTERN_THREADS = Pattern.compile("\"([^\"]+)\"&gt;Reply");
/**
 * Pattern for matching image links.
 */
private static Pattern PATTERN_IMAGES = Pattern.compile("http://images\\.4chan\\.org/[^/]+/src/(\\d+\\.\\w+)");

/**
 * Default board.
 */
private static final String DEFAULT_BOARD = "s";
/**
 * Default folder.
 */
private static final String DEFAULT_FOLDER = "images";

/**
 * Reads the content of a webpage.
 * @param link the url as string
 * @return the content of the page
 */
public static String readPage(String link) {
	try {
		URL url = new URL(link);
		URLConnection uc = url.openConnection();
		DataInputStream di = new DataInputStream(uc.getInputStream());
		byte[] buffer = new byte[uc.getContentLength()];
		di.readFully(buffer);
		di.close();
		return new String(buffer);
	} catch (Exception e) {	}
	return null;
}

/**
 * Main class which downloads the images from 4chan.
 * @param board the board you wish to download
 */
public FourDll(String board, String folder) {
	if (!folder.endsWith(File.separator))
		folder += File.separator;
	folder += board + File.separator;
	File dir = new File(folder);
	dir.mkdirs();
	if (!dir.exists())
		return;
	while (true) {
		File f = null;
		try {
			for (int page = 0; page &lt; 17; page++) {
				System.out.println("Page: " + page);
				String pageSource = readPage("http://boards.4chan.org/" + board + "/" + page);
				Matcher mThreads = PATTERN_THREADS.matcher(pageSource);
				List&lt;String&gt; threads = new ArrayList&lt;String&gt;();
				while (mThreads.find())
					threads.add("http://boards.4chan.org/" + board + "/" + mThreads.group(1));
				Iterator&lt;String&gt; itThreads = threads.iterator();
				while (itThreads.hasNext()) {
					String link = itThreads.next();
					pageSource = readPage(link);
					System.out.println("Thread: " + link);
					Matcher mImages = PATTERN_IMAGES.matcher(pageSource);
					while (mImages.find()) {
						f = new File(folder + mImages.group(1));
						if (!f.exists())
							try {
								System.out.println("Downloading " + mImages.group(1));
								BufferedInputStream bis = 
									new BufferedInputStream(new URL(mImages.group(0)).openStream());
								FileOutputStream fos = new FileOutputStream(f);
								BufferedOutputStream bos = new BufferedOutputStream(fos, 1024);
								byte data[] = new byte[1024];
								int count = 0;
								while ((count = bis.read(data, 0, 1024)) != -1)
									bos.write(data, 0, count);
								bos.close();
								fos.close();
								bis.close();
							} catch (Exception e) {
								System.out.println("Failed on " + mImages.group(1));
								continue;
							}
					}
				}
			}
		} catch (Exception e) {
			f.delete();
		}
	}
}

public static void main(String[] args) {
	if (args.length &gt; 1)
		new FourDll(args[0], args[1]);
	else {
		new FourDll(DEFAULT_BOARD, DEFAULT_FOLDER);
		System.out.println("Usage: java FourDll board targetfolder");
	}
}
</code></pre>
<p>}[/code]</p>
<p>I’ve set the default values so you won’t have to pass any parameters <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/fourdll/353447/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/fourdll/353447/1</link>
        <pubDate>Sat, 07 Aug 2010 15:28:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-353447-1</guid>
        <source url="https://forum.moparisthebest.com/t/fourdll/353447.rss">FourDll</source>
      </item>
  </channel>
</rss>
