<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[PI] Dwarf Multi-Cannon [BASE]</title>
    <link>https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143</link>
    <description>posting this here before someone else just leeches my release on r-s:

just a class i was working on cba finishing it thou
ps.you should also add a return statement in walking class when player is setting up cannon (c.settingUpCannon)

[code]
package server.model.players.combat.ranged;

import server.Server;
import server.util.Misc;
import server.event.Event;
import server.model.npcs.NPC;
import server.model.npcs.NPCHandler;
import server.event.EventManager;
import server.event.EventContainer;
import server.model.players.Client;
import server.model.players.Player;
import server.model.objects.Objects;
//import server.model.minigames.ClanWars;
import server.model.players.PlayerHandler;

public class DwarfMultiCannon {

	/**
	 * To-Do: Exception when trying to set up a cannon within 3 coords of another one
	 *        NPC distance checking
	 *		  Projectiles(Not sure if it works)
	 *
	 * @author relex lawl / relex
	 */

	private Client player;
	public DwarfMultiCannon(Client client) {
		this.player = client;
	}
	private static final int CANNON_BASE = 7, CANNON_STAND = 8, CANNON_BARRELS = 9, CANNON = 6;
	private static final int CANNONBALL = 2, CANNON_BASE_ID = 6, CANNON_STAND_ID = 8, CANNON_BARRELS_ID = 10, CANNON_FURNACE_ID = 12;
	
	public void setUpCannon() {
		if (!canSetUpCannon() || !inGoodArea())
			return;
		EventManager.getSingleton().addEvent(new Event() {
			int time = 4;
			public void execute(EventContainer setup) {
				if (!canSetUpCannon())
					setup.stop();		
				switch (time) {
					case 4:
						if (!player.getItems().playerHasItem(CANNON_BASE_ID))
							setup.stop();
						player.startAnimation(827);
						player.hasCannon = true;
						player.settingUpCannon = true;
						player.setUpBase = true;
						Objects base = new Objects(CANNON_BASE, player.absX, player.absY, 0, 0, 10, 0);
						Server.objectHandler.addObject(base);
						Server.objectHandler.placeObject(base);
						player.oldCannon = base;
						player.getItems().deleteItem(CANNON_BASE_ID, 1);
						base.belongsTo = player.playerName;
					break;
					
					case 3:
						if (!player.getItems().playerHasItem(CANNON_STAND_ID)) {
							player.settingUpCannon = false;
							setup.stop();
						}
						player.startAnimation(827);
						player.setUpStand = true;
						Objects stand = new Objects(CANNON_STAND, player.absX, player.absY, 0, 0, 10, 0);
						Server.objectHandler.removeObject(player.oldCannon);
						Server.objectHandler.addObject(stand);
						Server.objectHandler.placeObject(stand);
						player.oldCannon = stand;
						player.getItems().deleteItem(CANNON_STAND_ID, 1);
						stand.belongsTo = player.playerName;
					break;
					
					case 2:
						if (!player.getItems().playerHasItem(CANNON_BARRELS_ID)) {
							player.settingUpCannon = false;
							setup.stop();
						}
						player.startAnimation(827);
						player.setUpBarrels = true;
						Objects barrel = new Objects(CANNON_BARRELS, player.absX, player.absY, 0, 0, 10, 0);
						Server.objectHandler.removeObject(player.oldCannon);
						Server.objectHandler.addObject(barrel);
						Server.objectHandler.placeObject(barrel);
						player.oldCannon = barrel;
						player.getItems().deleteItem(CANNON_BARRELS_ID, 1);
						barrel.belongsTo = player.playerName;
					break;
					
					case 1:
						if (!player.getItems().playerHasItem(CANNON_FURNACE_ID)) {
							player.settingUpCannon = false;
							setup.stop();
						}
						player.startAnimation(827);
						player.setUpFurnace = true;
						Objects cannon = new Objects(CANNON, player.absX, player.absY, 0, 0, 10, 0);
						player.cannonBaseX = player.absX;
						player.cannonBaseY = player.absY;
						player.cannonBaseH = player.heightLevel;
						Server.objectHandler.removeObject(player.oldCannon);
						Server.objectHandler.addObject(cannon);
						Server.objectHandler.placeObject(cannon);
						player.oldCannon = cannon;
						player.getItems().deleteItem(CANNON_FURNACE_ID, 1);
						cannon.belongsTo = player.playerName;
					break;
					
					case 0:
						player.settingUpTrap = false;
						setup.stop();
					break;
				}
				if (time &gt; 0)
					time--;
			}
		}, 2000);
	}
	
	public void shootCannon() {
		Objects cannon = null;
		for(server.model.objects.Objects o: Server.objectHandler.globalObjects) {
			if (o.objectX == player.cannonBaseX &amp;&amp; o.objectY == player.cannonBaseY &amp;&amp; o.objectHeight == player.cannonBaseH) {
				cannon = o;
			}
		}
		if (cannon == null) {
			player.sendMessage(&quot;This is not your cannon!&quot;);
			return;
		}
		if (player.cannonIsShooting) {
			if (player.getItems().playerHasItem(CANNONBALL)) {
				int amountOfCannonBalls = player.getItems().getItemAmount(CANNONBALL) &gt; 30 ? 30 : player.getItems().getItemAmount(CANNONBALL);
				player.cannonBalls += amountOfCannonBalls;
			} else {
				player.sendMessage(&quot;Your cannon is already firing!&quot;);
				return;
			}
		}
		if (player.cannonBalls &lt; 1) {
			int amountOfCannonBalls = player.getItems().getItemAmount(CANNONBALL) &gt; 30 ? 30 : player.getItems().getItemAmount(CANNONBALL);
			if (amountOfCannonBalls &lt; 1) {
				player.sendMessage(&quot;You need ammo to shoot this cannon!&quot;);
				return;
			}
			player.cannonBalls = amountOfCannonBalls;
			player.getItems().deleteItem(CANNONBALL, player.getItems().getItemSlot(CANNONBALL), amountOfCannonBalls);
		} else
			startFiringCannon(cannon);
	}
	
	private void startFiringCannon(final Objects cannon) {
		player.cannonIsShooting = true;
		EventManager.getSingleton().addEvent(new Event() {
			public void execute(EventContainer fire) {
				if (player.cannonBalls &lt; 1) {
					player.sendMessage(&quot;Your cannon has run out of ammo!&quot;);
					player.cannonIsShooting = false;
					fire.stop();
				} else {
					player.rotation++;
					rotateCannon(cannon);
				}
			}
		}, (player.inMulti() ? 800 : 2500));
	}
	
	private void rotateCannon(Objects cannon) {
		switch (player.rotation) {
			case 1: //north
				player.getPA().objectAnim(cannon.objectX, cannon.objectY, 516, 10, -1);
			break;
			case 2: //north-east
				player.getPA().objectAnim(cannon.objectX, cannon.objectY, 517, 10, -1);
			break;
			case 3: //east
				player.getPA().objectAnim(cannon.objectX, cannon.objectY, 518, 10, -1);
			break;
			case 4: //south-east
				player.getPA().objectAnim(cannon.objectX, cannon.objectY, 519, 10, -1);
			break;
			case 5: //south
				player.getPA().objectAnim(cannon.objectX, cannon.objectY, 520, 10, -1);
			break;
			case 6: //south-west
				player.getPA().objectAnim(cannon.objectX, cannon.objectY, 521, 10, -1);
			break;
			case 7: //west
				player.getPA().objectAnim(cannon.objectX, cannon.objectY, 514, 10, -1);
			break;
			case 8: //north-west
				player.getPA().objectAnim(cannon.objectX, cannon.objectY, 515, 10, -1);
				player.rotation = 0;
			break;
		}
	}
	
	public void pickUpCannon() {
		Objects cannon = null;
		for(server.model.objects.Objects o: Server.objectHandler.globalObjects) {
			if (o.objectX == player.cannonBaseX &amp;&amp; o.objectY == player.cannonBaseY &amp;&amp; o.objectHeight == player.cannonBaseH) {
				cannon = o;
			}
		}
		if (cannon == null) {
			player.sendMessage(&quot;This is not your cannon!&quot;);
			return;
		}
		player.startAnimation(827);
		server.model.objects.Objects empty = new server.model.objects.Objects(100, cannon.objectX, cannon.objectY, 0, 0, 10, 0);
		Server.objectHandler.addObject(empty);
		Server.objectHandler.placeObject(empty);
		Server.objectHandler.removeObject(empty);
		if (player.setUpBase) {
			if (player.getItems().freeSlots() &gt; 0)
				player.getItems().addItem(CANNON_BASE_ID, 1);
			else {
				player.getItems().addItemToBank(CANNON_BASE_ID, 1);
				player.sendMessage(&quot;You did not have enough inventory space, so this cannon part was banked.&quot;);
			}
			player.setUpBase = false;
		}
		if (player.setUpStand) {
			if (player.getItems().freeSlots() &gt; 0)
				player.getItems().addItem(CANNON_STAND_ID, 1);
			else {
				player.getItems().addItemToBank(CANNON_STAND_ID, 1);
				player.sendMessage(&quot;You did not have enough inventory space, so this cannon part was banked.&quot;);
			}
			player.setUpStand = false;
		}
		if (player.setUpBarrels) {
			if (player.getItems().freeSlots() &gt; 0)
				player.getItems().addItem(CANNON_BARRELS_ID, 1);
			else {
				player.getItems().addItemToBank(CANNON_BARRELS_ID, 1);
				player.sendMessage(&quot;You did not have enough inventory space, so this cannon part was banked.&quot;);
			}
			player.setUpBarrels = false;
		}
		if (player.setUpFurnace) {
			if (player.getItems().freeSlots() &gt; 0)
				player.getItems().addItem(CANNON_FURNACE_ID, 1);
			else {
				player.getItems().addItemToBank(CANNON_FURNACE_ID, 1);
				player.sendMessage(&quot;You did not have enough inventory space, so this cannon part was banked.&quot;);
			}
			player.setUpFurnace = false;
		}
		if (player.cannonBalls &gt; 0) {
			if (player.getItems().freeSlots() &gt; 0)
				player.getItems().addItem(CANNONBALL, player.cannonBalls);
			else {
				player.getItems().addItemToBank(CANNONBALL, player.cannonBalls);
				player.sendMessage(&quot;You did not have enough inventory space, so your cannonballs have been banked.&quot;);
			}
			player.cannonBalls = 0;
		}
	}
	
	public static void checkNPCDistance() {
		for (Player p : PlayerHandler.players) {
			if (p == null)
				return;
			Client players = (Client) p;
			NPC n = getNPCWithinDistance(players, players.cannonBaseX, players.cannonBaseY, players.cannonBaseH);
			int damage = Misc.random(30);
			if (players.inMulti() &amp;&amp; n.inMulti()) {
				startCannonballProjectile(players, players.oldCannon, n);
				n.hitDiff = damage;
				n.HP -= damage;
				n.hitUpdateRequired = true;
				n.killerId = players.playerId;
				n.facePlayer(players.playerId);
				n.forceChat(&quot;im hit, multi&quot;);
			} else {
				if (n.underAttackBy &gt; 0 &amp;&amp; n.underAttackBy != players.playerId)
					return;
				startCannonballProjectile(players, players.oldCannon, n);
				n.hitDiff = damage;
				n.HP -= damage;
				n.hitUpdateRequired = true;
				n.killerId = players.playerId;
				n.facePlayer(players.playerId);
				n.forceChat(&quot;im hit, single&quot;);
			}
			players.cannonBalls--;
		}
	}
	
	private static NPC getNPCWithinDistance(Client players, int x, int y, int height) {
		NPC npc = null;
		for (int i = 0; i &lt; NPCHandler.maxNPCs; i++) {
			if (Server.npcHandler.npcs[i] == null)
				return null;
			npc = (NPC) Server.npcHandler.npcs[i];
		}
		int myX = players.cannonBaseX;
		int myY = players.cannonBaseY;
		int theirX = npc.absX;
		int theirY = npc.absY;
		if (!npc.isDead &amp;&amp; npc.heightLevel == height &amp;&amp; !npc.isDead &amp;&amp; npc.HP != 0 &amp;&amp; npc.npcType != 1266 &amp;&amp; npc.npcType != 1268 &amp;&amp; npc.petID &lt; 1) {
			switch (players.rotation) {
				case 1: //north
					if(theirY &gt; myY &amp;&amp; theirX &gt;= myX - 1 &amp;&amp; theirX &lt;= myX + 1)
						return npc;
				break;
				case 2: //north-east
					if(theirX &gt;= myX + 1 &amp;&amp; theirY &gt;= myY + 1)
						return npc;
				break;
				case 3: //east
					if(theirX &gt; myX &amp;&amp; theirY &gt;= myY - 1 &amp;&amp; theirY &lt;= myY + 1)
						return npc;
				break;
				case 4: //south-east
					if(theirY &lt;= myY - 1 &amp;&amp; theirX &gt;= myX + 1)
						return npc;
				break;
				case 5: //south
					if(theirY &lt; myY &amp;&amp; theirX &gt;= myX - 1 &amp;&amp; theirX &lt;= myX + 1)
						return npc;
				break;
				case 6: //south-west
					if(theirX &lt;= myX - 1 &amp;&amp; theirY &lt;= myY - 1)
						return npc;
				break;
				case 7: //west
					if(theirX &lt; myX &amp;&amp; theirY &gt;= myY - 1 &amp;&amp; theirY &lt;= myY + 1)
						return npc;
				break;
				case 8: //north-west
					if(theirX &lt;= myX - 1 &amp;&amp; theirY &gt;= myY + 1)
						return npc;
				break;
			}
		}
		return null;
	}
	
	private static void startCannonballProjectile(Client player, Objects cannon, NPC n) {
		int oX = cannon.objectX;
		int oY = cannon.objectY;
		int offX = ((oX - n.getX()) * -1);
		int offY = ((oY - n.getY()) * -1);
		player.getPA().createPlayersProjectile(oX, oY, offY, offX, 50, 60, 53, 20, 20, - player.oldNpcIndex + 1, 30);
	}
	
	public static int distanceToSquare(int x, int y, int tx, int ty){
		return (int) Math.sqrt((Math.abs(x - tx) + Math.abs(y - ty)));
	}
	
	private final boolean canSetUpCannon() {
		return player.playerLevel[3] &gt; 0 || !player.hasCannon || !player.settingUpCannon;
	}
	
	private final boolean inGoodArea() {
		/*if (ClanWars.inWaitingArea(player)) {
			player.sendMessage(&quot;You are not allowed to set up a cannon in clan wars!&quot;);
			return false;
		}
		if (player.inBH()) {
			player.sendMessage(&quot;You are not allowed to set up a cannon in bounty hunter!&quot;);
			return false;
		}//add your own exceptions*/
		return true;	
	}
}
[/code]

player class add:

[code]
	/* Cannon Variables */
	public boolean settingUpCannon, hasCannon, cannonIsShooting, setUpBase, setUpStand, setUpBarrels, setUpFurnace;
	public int cannonBalls, cannonBaseX, cannonBaseY, cannonBaseH, rotation, cannonID;
	public Objects oldCannon;
[/code]

objects class add: (if you dont already have)

[code]
	public static String belongsTo;
	public static int objectId;
	public static int objectX;
	public static int objectY;
	public int objectHeight;
	public int objectFace;
	public int objectType;
	public int objectTicks;
	
	public static int getObjectId() {
		return objectId;
	}
	
	public static int getObjectX() {
		return objectX;
	}
	
	public static int getObjectY() {
		return objectY;
	}
[/code]

clickitem under switch statement:

[code]
			case 6:
				c.getCannon().setUpCannon();
			break;
[/code]

clickobject under switch statment:

[CODE]			case 6:
				//add other cases for cannon
				c.getCannon().shootCannon();
			break;[/CODE]

client class:

[code]
	private DwarfMultiCannon cannon = new DwarfMultiCannon(this);
	public DwarfMultiCannon getCannon() {
		return cannon;
	}
[/code]

playerasssitant add these:

[code]
	public void createPlayersObjectAnim(int X, int Y, int animationID, int tileObjectType, int orientation) {
		try{
			c.getOutStream().createFrame(85);
			c.getOutStream().writeByteC(Y - (c.mapRegionY * 8));
			c.getOutStream().writeByteC(X - (c.mapRegionX * 8));
			int x = 0;
			int y = 0;
			c.getOutStream().createFrame(160);
			c.getOutStream().writeByteS(((x&amp;7) &lt;&lt; 4) + (y&amp;7));//tiles away - could just send 0       
			c.getOutStream().writeByteS((tileObjectType&lt;&lt;2) +(orientation&amp;3));
			c.getOutStream().writeWordA(animationID);// animation id
		} catch(Exception e){
			e.printStackTrace();
		}
	}
	
	public void objectAnim(int X, int Y, int animationID, int tileObjectType, int orientation) {
		for (Player p : PlayerHandler.players) {
			if(p != null) {
				Client players = (Client)p;
				if(players.distanceToPoint(X, Y) &lt;= 25) {
					players.getPA().createPlayersObjectAnim(X, Y, animationID, tileObjectType, orientation);	
				}
			}
		}
	}
[/code]

also in objecthandler if you dont already have these methods:

[code]
	 /**
	 * Creates objects
	 */
	public void createAnObject(Client c, int id, int x, int y) {
		Objects OBJECT = new Objects(id, x, y, 0, 0, 10, 0);
		if(id == -1) {
			removeObject(OBJECT);
		} else {
			addObject(OBJECT);
		}
		Server.objectHandler.placeObject(OBJECT);
	}

	public void createAnObject(Client c, int id, int x, int y, int face) {
		Objects OBJECT = new Objects(id, x, y, 0, face, 10, 0);
		if(id == -1) {
			removeObject(OBJECT);
		} else {
			addObject(OBJECT);
		}
		Server.objectHandler.placeObject(OBJECT);
	}
[/code]

and this in itemassistant if you dont have:

[code]
	/**
	 * Adds an item to the bank without checking if the player has it in there inventory
	 * @param itemId the id of the item were banking
	 * @param amount amount of items to bank
	 */
	public void addItemToBank(int itemId, int amount) {
		for (int i = 0; i &lt; Config.BANK_SIZE; i++) {
			if (c.bankItems[i] &lt;= 0 || c.bankItems[i] == itemId + 1
					&amp;&amp; c.bankItemsN[i] + amount &lt; Integer.MAX_VALUE) {
				c.bankItems[i] = itemId + 1;
				c.bankItemsN[i] += amount;
				resetBank();
				return;
			}
		}
	}
[/code]</description>
    
    <lastBuildDate>Wed, 21 Dec 2011 15:10:29 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[PI] Dwarf Multi-Cannon [BASE]</title>
        <dc:creator><![CDATA[@relexlawl relexlawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/relexlawl">@relexlawl</a> wrote:</p>
          <blockquote>
              <p>i made a comment on the class the</p>
<p>/**</p>
<ul>
<li>To-Do:</li>
</ul>
<p>thing is whats needed</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143/11</link>
        <pubDate>Wed, 21 Dec 2011 15:10:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-426143-11</guid>
        <source url="https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143.rss">[PI] Dwarf Multi-Cannon [BASE]</source>
      </item>
      <item>
        <title>[PI] Dwarf Multi-Cannon [BASE]</title>
        <dc:creator><![CDATA[@Rodgerwilco Rodgerwilco]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rodgerwilco">@Rodgerwilco</a> wrote:</p>
          <blockquote>
              <p>DwarfMultiCannon class needs some work and make sure your teaching people.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143/10</link>
        <pubDate>Wed, 21 Dec 2011 08:27:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-426143-10</guid>
        <source url="https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143.rss">[PI] Dwarf Multi-Cannon [BASE]</source>
      </item>
      <item>
        <title>[PI] Dwarf Multi-Cannon [BASE]</title>
        <dc:creator><![CDATA[@Loveandpower Loveandpower]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/loveandpower">@Loveandpower</a> wrote:</p>
          <blockquote>
              <p>Some nice work was put into this good job.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143/9</link>
        <pubDate>Wed, 21 Dec 2011 08:04:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-426143-9</guid>
        <source url="https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143.rss">[PI] Dwarf Multi-Cannon [BASE]</source>
      </item>
      <item>
        <title>[PI] Dwarf Multi-Cannon [BASE]</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <p>Look’s good.</p>
<p>If its just a base, what’s missing you might want to add those type(s) of thing’s to the Op.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143/8</link>
        <pubDate>Wed, 21 Dec 2011 06:09:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-426143-8</guid>
        <source url="https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143.rss">[PI] Dwarf Multi-Cannon [BASE]</source>
      </item>
      <item>
        <title>[PI] Dwarf Multi-Cannon [BASE]</title>
        <dc:creator><![CDATA[@wildskiller wildskiller]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wildskiller">@wildskiller</a> wrote:</p>
          <blockquote>
              <p>Lul I knew that would happen.</p>
<aside class="quote" data-post="5" data-topic="426143">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/asshole_rule/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> asshole_rule:</div>
<blockquote>
<p>What???</p>
</blockquote>
</aside>
<p>Anywase I couldn’t do anything after I imported everything so I quit</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143/7</link>
        <pubDate>Wed, 21 Dec 2011 06:03:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-426143-7</guid>
        <source url="https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143.rss">[PI] Dwarf Multi-Cannon [BASE]</source>
      </item>
      <item>
        <title>[PI] Dwarf Multi-Cannon [BASE]</title>
        <dc:creator><![CDATA[@relexlawl relexlawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/relexlawl">@relexlawl</a> wrote:</p>
          <blockquote>
              <p>the guy deleted his posts, forget it lol</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143/6</link>
        <pubDate>Wed, 21 Dec 2011 05:20:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-426143-6</guid>
        <source url="https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143.rss">[PI] Dwarf Multi-Cannon [BASE]</source>
      </item>
      <item>
        <title>[PI] Dwarf Multi-Cannon [BASE]</title>
        <dc:creator><![CDATA[@asshole_rule asshole_rule]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/asshole_rule">@asshole_rule</a> wrote:</p>
          <blockquote>
              <p>What???</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143/5</link>
        <pubDate>Wed, 21 Dec 2011 05:15:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-426143-5</guid>
        <source url="https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143.rss">[PI] Dwarf Multi-Cannon [BASE]</source>
      </item>
      <item>
        <title>[PI] Dwarf Multi-Cannon [BASE]</title>
        <dc:creator><![CDATA[@relexlawl relexlawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/relexlawl">@relexlawl</a> wrote:</p>
          <blockquote>
              <p>import it lol</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143/4</link>
        <pubDate>Wed, 21 Dec 2011 04:41:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-426143-4</guid>
        <source url="https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143.rss">[PI] Dwarf Multi-Cannon [BASE]</source>
      </item>
      <item>
        <title>[PI] Dwarf Multi-Cannon [BASE]</title>
        <dc:creator><![CDATA[@asshole_rule asshole_rule]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/asshole_rule">@asshole_rule</a> wrote:</p>
          <blockquote>
              <p>Nice job mate <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"> repped</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143/3</link>
        <pubDate>Wed, 21 Dec 2011 04:30:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-426143-3</guid>
        <source url="https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143.rss">[PI] Dwarf Multi-Cannon [BASE]</source>
      </item>
      <item>
        <title>[PI] Dwarf Multi-Cannon [BASE]</title>
        <dc:creator><![CDATA[@relexlawl relexlawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/relexlawl">@relexlawl</a> wrote:</p>
          <blockquote>
              <p>the code belongs int Objects class not Object lol, youre Objects class should look like</p>
<pre><code class="lang-auto">package server.model.objects;

import java.util.ArrayList;

public class Objects {

	public static String belongsTo;
	public static int objectId;
	public static int objectX;
	public static int objectY;
	public int objectHeight;
	public int objectFace;
	public int objectType;
	public int objectTicks;
	
	public static int getObjectId() {
		return objectId;
	}
	
	public static int getObjectX() {
		return objectX;
	}
	
	public static int getObjectY() {
		return objectY;
	}
	
	public Objects(int id, int x, int y, int height, int face, int type, int ticks) {
		this.objectId = id;
		this.objectX = x;
		this.objectY = y;
		this.objectHeight = height;
		this.objectFace = face;
		this.objectType = type;
		this.objectTicks = ticks;
	}
	
	public int getObjectHeight() {
		return this.objectHeight;
	}
	
	public int getObjectFace() {
		return this.objectFace;
	}
	
	public int getObjectType() {
		return this.objectType;
	}
	
	
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143/2</link>
        <pubDate>Wed, 21 Dec 2011 04:29:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-426143-2</guid>
        <source url="https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143.rss">[PI] Dwarf Multi-Cannon [BASE]</source>
      </item>
      <item>
        <title>[PI] Dwarf Multi-Cannon [BASE]</title>
        <dc:creator><![CDATA[@relexlawl relexlawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/relexlawl">@relexlawl</a> wrote:</p>
          <blockquote>
              <p>posting this here before someone else just leeches my release on r-s:</p>
<p>just a class i was working on cba finishing it thou<br>
ps.you should also add a return statement in walking class when player is setting up cannon (c.settingUpCannon)</p>
<pre><code class="lang-auto">package server.model.players.combat.ranged;

import server.Server;
import server.util.Misc;
import server.event.Event;
import server.model.npcs.NPC;
import server.model.npcs.NPCHandler;
import server.event.EventManager;
import server.event.EventContainer;
import server.model.players.Client;
import server.model.players.Player;
import server.model.objects.Objects;
//import server.model.minigames.ClanWars;
import server.model.players.PlayerHandler;

public class DwarfMultiCannon {

	/**
	 * To-Do: Exception when trying to set up a cannon within 3 coords of another one
	 *        NPC distance checking
	 *		  Projectiles(Not sure if it works)
	 *
	 * @author relex lawl / relex
	 */

	private Client player;
	public DwarfMultiCannon(Client client) {
		this.player = client;
	}
	private static final int CANNON_BASE = 7, CANNON_STAND = 8, CANNON_BARRELS = 9, CANNON = 6;
	private static final int CANNONBALL = 2, CANNON_BASE_ID = 6, CANNON_STAND_ID = 8, CANNON_BARRELS_ID = 10, CANNON_FURNACE_ID = 12;
	
	public void setUpCannon() {
		if (!canSetUpCannon() || !inGoodArea())
			return;
		EventManager.getSingleton().addEvent(new Event() {
			int time = 4;
			public void execute(EventContainer setup) {
				if (!canSetUpCannon())
					setup.stop();		
				switch (time) {
					case 4:
						if (!player.getItems().playerHasItem(CANNON_BASE_ID))
							setup.stop();
						player.startAnimation(827);
						player.hasCannon = true;
						player.settingUpCannon = true;
						player.setUpBase = true;
						Objects base = new Objects(CANNON_BASE, player.absX, player.absY, 0, 0, 10, 0);
						Server.objectHandler.addObject(base);
						Server.objectHandler.placeObject(base);
						player.oldCannon = base;
						player.getItems().deleteItem(CANNON_BASE_ID, 1);
						base.belongsTo = player.playerName;
					break;
					
					case 3:
						if (!player.getItems().playerHasItem(CANNON_STAND_ID)) {
							player.settingUpCannon = false;
							setup.stop();
						}
						player.startAnimation(827);
						player.setUpStand = true;
						Objects stand = new Objects(CANNON_STAND, player.absX, player.absY, 0, 0, 10, 0);
						Server.objectHandler.removeObject(player.oldCannon);
						Server.objectHandler.addObject(stand);
						Server.objectHandler.placeObject(stand);
						player.oldCannon = stand;
						player.getItems().deleteItem(CANNON_STAND_ID, 1);
						stand.belongsTo = player.playerName;
					break;
					
					case 2:
						if (!player.getItems().playerHasItem(CANNON_BARRELS_ID)) {
							player.settingUpCannon = false;
							setup.stop();
						}
						player.startAnimation(827);
						player.setUpBarrels = true;
						Objects barrel = new Objects(CANNON_BARRELS, player.absX, player.absY, 0, 0, 10, 0);
						Server.objectHandler.removeObject(player.oldCannon);
						Server.objectHandler.addObject(barrel);
						Server.objectHandler.placeObject(barrel);
						player.oldCannon = barrel;
						player.getItems().deleteItem(CANNON_BARRELS_ID, 1);
						barrel.belongsTo = player.playerName;
					break;
					
					case 1:
						if (!player.getItems().playerHasItem(CANNON_FURNACE_ID)) {
							player.settingUpCannon = false;
							setup.stop();
						}
						player.startAnimation(827);
						player.setUpFurnace = true;
						Objects cannon = new Objects(CANNON, player.absX, player.absY, 0, 0, 10, 0);
						player.cannonBaseX = player.absX;
						player.cannonBaseY = player.absY;
						player.cannonBaseH = player.heightLevel;
						Server.objectHandler.removeObject(player.oldCannon);
						Server.objectHandler.addObject(cannon);
						Server.objectHandler.placeObject(cannon);
						player.oldCannon = cannon;
						player.getItems().deleteItem(CANNON_FURNACE_ID, 1);
						cannon.belongsTo = player.playerName;
					break;
					
					case 0:
						player.settingUpTrap = false;
						setup.stop();
					break;
				}
				if (time &gt; 0)
					time--;
			}
		}, 2000);
	}
	
	public void shootCannon() {
		Objects cannon = null;
		for(server.model.objects.Objects o: Server.objectHandler.globalObjects) {
			if (o.objectX == player.cannonBaseX &amp;&amp; o.objectY == player.cannonBaseY &amp;&amp; o.objectHeight == player.cannonBaseH) {
				cannon = o;
			}
		}
		if (cannon == null) {
			player.sendMessage("This is not your cannon!");
			return;
		}
		if (player.cannonIsShooting) {
			if (player.getItems().playerHasItem(CANNONBALL)) {
				int amountOfCannonBalls = player.getItems().getItemAmount(CANNONBALL) &gt; 30 ? 30 : player.getItems().getItemAmount(CANNONBALL);
				player.cannonBalls += amountOfCannonBalls;
			} else {
				player.sendMessage("Your cannon is already firing!");
				return;
			}
		}
		if (player.cannonBalls &lt; 1) {
			int amountOfCannonBalls = player.getItems().getItemAmount(CANNONBALL) &gt; 30 ? 30 : player.getItems().getItemAmount(CANNONBALL);
			if (amountOfCannonBalls &lt; 1) {
				player.sendMessage("You need ammo to shoot this cannon!");
				return;
			}
			player.cannonBalls = amountOfCannonBalls;
			player.getItems().deleteItem(CANNONBALL, player.getItems().getItemSlot(CANNONBALL), amountOfCannonBalls);
		} else
			startFiringCannon(cannon);
	}
	
	private void startFiringCannon(final Objects cannon) {
		player.cannonIsShooting = true;
		EventManager.getSingleton().addEvent(new Event() {
			public void execute(EventContainer fire) {
				if (player.cannonBalls &lt; 1) {
					player.sendMessage("Your cannon has run out of ammo!");
					player.cannonIsShooting = false;
					fire.stop();
				} else {
					player.rotation++;
					rotateCannon(cannon);
				}
			}
		}, (player.inMulti() ? 800 : 2500));
	}
	
	private void rotateCannon(Objects cannon) {
		switch (player.rotation) {
			case 1: //north
				player.getPA().objectAnim(cannon.objectX, cannon.objectY, 516, 10, -1);
			break;
			case 2: //north-east
				player.getPA().objectAnim(cannon.objectX, cannon.objectY, 517, 10, -1);
			break;
			case 3: //east
				player.getPA().objectAnim(cannon.objectX, cannon.objectY, 518, 10, -1);
			break;
			case 4: //south-east
				player.getPA().objectAnim(cannon.objectX, cannon.objectY, 519, 10, -1);
			break;
			case 5: //south
				player.getPA().objectAnim(cannon.objectX, cannon.objectY, 520, 10, -1);
			break;
			case 6: //south-west
				player.getPA().objectAnim(cannon.objectX, cannon.objectY, 521, 10, -1);
			break;
			case 7: //west
				player.getPA().objectAnim(cannon.objectX, cannon.objectY, 514, 10, -1);
			break;
			case 8: //north-west
				player.getPA().objectAnim(cannon.objectX, cannon.objectY, 515, 10, -1);
				player.rotation = 0;
			break;
		}
	}
	
	public void pickUpCannon() {
		Objects cannon = null;
		for(server.model.objects.Objects o: Server.objectHandler.globalObjects) {
			if (o.objectX == player.cannonBaseX &amp;&amp; o.objectY == player.cannonBaseY &amp;&amp; o.objectHeight == player.cannonBaseH) {
				cannon = o;
			}
		}
		if (cannon == null) {
			player.sendMessage("This is not your cannon!");
			return;
		}
		player.startAnimation(827);
		server.model.objects.Objects empty = new server.model.objects.Objects(100, cannon.objectX, cannon.objectY, 0, 0, 10, 0);
		Server.objectHandler.addObject(empty);
		Server.objectHandler.placeObject(empty);
		Server.objectHandler.removeObject(empty);
		if (player.setUpBase) {
			if (player.getItems().freeSlots() &gt; 0)
				player.getItems().addItem(CANNON_BASE_ID, 1);
			else {
				player.getItems().addItemToBank(CANNON_BASE_ID, 1);
				player.sendMessage("You did not have enough inventory space, so this cannon part was banked.");
			}
			player.setUpBase = false;
		}
		if (player.setUpStand) {
			if (player.getItems().freeSlots() &gt; 0)
				player.getItems().addItem(CANNON_STAND_ID, 1);
			else {
				player.getItems().addItemToBank(CANNON_STAND_ID, 1);
				player.sendMessage("You did not have enough inventory space, so this cannon part was banked.");
			}
			player.setUpStand = false;
		}
		if (player.setUpBarrels) {
			if (player.getItems().freeSlots() &gt; 0)
				player.getItems().addItem(CANNON_BARRELS_ID, 1);
			else {
				player.getItems().addItemToBank(CANNON_BARRELS_ID, 1);
				player.sendMessage("You did not have enough inventory space, so this cannon part was banked.");
			}
			player.setUpBarrels = false;
		}
		if (player.setUpFurnace) {
			if (player.getItems().freeSlots() &gt; 0)
				player.getItems().addItem(CANNON_FURNACE_ID, 1);
			else {
				player.getItems().addItemToBank(CANNON_FURNACE_ID, 1);
				player.sendMessage("You did not have enough inventory space, so this cannon part was banked.");
			}
			player.setUpFurnace = false;
		}
		if (player.cannonBalls &gt; 0) {
			if (player.getItems().freeSlots() &gt; 0)
				player.getItems().addItem(CANNONBALL, player.cannonBalls);
			else {
				player.getItems().addItemToBank(CANNONBALL, player.cannonBalls);
				player.sendMessage("You did not have enough inventory space, so your cannonballs have been banked.");
			}
			player.cannonBalls = 0;
		}
	}
	
	public static void checkNPCDistance() {
		for (Player p : PlayerHandler.players) {
			if (p == null)
				return;
			Client players = (Client) p;
			NPC n = getNPCWithinDistance(players, players.cannonBaseX, players.cannonBaseY, players.cannonBaseH);
			int damage = Misc.random(30);
			if (players.inMulti() &amp;&amp; n.inMulti()) {
				startCannonballProjectile(players, players.oldCannon, n);
				n.hitDiff = damage;
				n.HP -= damage;
				n.hitUpdateRequired = true;
				n.killerId = players.playerId;
				n.facePlayer(players.playerId);
				n.forceChat("im hit, multi");
			} else {
				if (n.underAttackBy &gt; 0 &amp;&amp; n.underAttackBy != players.playerId)
					return;
				startCannonballProjectile(players, players.oldCannon, n);
				n.hitDiff = damage;
				n.HP -= damage;
				n.hitUpdateRequired = true;
				n.killerId = players.playerId;
				n.facePlayer(players.playerId);
				n.forceChat("im hit, single");
			}
			players.cannonBalls--;
		}
	}
	
	private static NPC getNPCWithinDistance(Client players, int x, int y, int height) {
		NPC npc = null;
		for (int i = 0; i &lt; NPCHandler.maxNPCs; i++) {
			if (Server.npcHandler.npcs[i] == null)
				return null;
			npc = (NPC) Server.npcHandler.npcs[i];
		}
		int myX = players.cannonBaseX;
		int myY = players.cannonBaseY;
		int theirX = npc.absX;
		int theirY = npc.absY;
		if (!npc.isDead &amp;&amp; npc.heightLevel == height &amp;&amp; !npc.isDead &amp;&amp; npc.HP != 0 &amp;&amp; npc.npcType != 1266 &amp;&amp; npc.npcType != 1268 &amp;&amp; npc.petID &lt; 1) {
			switch (players.rotation) {
				case 1: //north
					if(theirY &gt; myY &amp;&amp; theirX &gt;= myX - 1 &amp;&amp; theirX &lt;= myX + 1)
						return npc;
				break;
				case 2: //north-east
					if(theirX &gt;= myX + 1 &amp;&amp; theirY &gt;= myY + 1)
						return npc;
				break;
				case 3: //east
					if(theirX &gt; myX &amp;&amp; theirY &gt;= myY - 1 &amp;&amp; theirY &lt;= myY + 1)
						return npc;
				break;
				case 4: //south-east
					if(theirY &lt;= myY - 1 &amp;&amp; theirX &gt;= myX + 1)
						return npc;
				break;
				case 5: //south
					if(theirY &lt; myY &amp;&amp; theirX &gt;= myX - 1 &amp;&amp; theirX &lt;= myX + 1)
						return npc;
				break;
				case 6: //south-west
					if(theirX &lt;= myX - 1 &amp;&amp; theirY &lt;= myY - 1)
						return npc;
				break;
				case 7: //west
					if(theirX &lt; myX &amp;&amp; theirY &gt;= myY - 1 &amp;&amp; theirY &lt;= myY + 1)
						return npc;
				break;
				case 8: //north-west
					if(theirX &lt;= myX - 1 &amp;&amp; theirY &gt;= myY + 1)
						return npc;
				break;
			}
		}
		return null;
	}
	
	private static void startCannonballProjectile(Client player, Objects cannon, NPC n) {
		int oX = cannon.objectX;
		int oY = cannon.objectY;
		int offX = ((oX - n.getX()) * -1);
		int offY = ((oY - n.getY()) * -1);
		player.getPA().createPlayersProjectile(oX, oY, offY, offX, 50, 60, 53, 20, 20, - player.oldNpcIndex + 1, 30);
	}
	
	public static int distanceToSquare(int x, int y, int tx, int ty){
		return (int) Math.sqrt((Math.abs(x - tx) + Math.abs(y - ty)));
	}
	
	private final boolean canSetUpCannon() {
		return player.playerLevel[3] &gt; 0 || !player.hasCannon || !player.settingUpCannon;
	}
	
	private final boolean inGoodArea() {
		/*if (ClanWars.inWaitingArea(player)) {
			player.sendMessage("You are not allowed to set up a cannon in clan wars!");
			return false;
		}
		if (player.inBH()) {
			player.sendMessage("You are not allowed to set up a cannon in bounty hunter!");
			return false;
		}//add your own exceptions*/
		return true;	
	}
}</code></pre>
<p>player class add:</p>
<pre><code class="lang-auto">	/* Cannon Variables */
	public boolean settingUpCannon, hasCannon, cannonIsShooting, setUpBase, setUpStand, setUpBarrels, setUpFurnace;
	public int cannonBalls, cannonBaseX, cannonBaseY, cannonBaseH, rotation, cannonID;
	public Objects oldCannon;</code></pre>
<p>objects class add: (if you dont already have)</p>
<pre><code class="lang-auto">	public static String belongsTo;
	public static int objectId;
	public static int objectX;
	public static int objectY;
	public int objectHeight;
	public int objectFace;
	public int objectType;
	public int objectTicks;
	
	public static int getObjectId() {
		return objectId;
	}
	
	public static int getObjectX() {
		return objectX;
	}
	
	public static int getObjectY() {
		return objectY;
	}</code></pre>
<p>clickitem under switch statement:</p>
<pre><code class="lang-auto">			case 6:
				c.getCannon().setUpCannon();
			break;</code></pre>
<p>clickobject under switch statment:</p>
<p><code>			case 6:
				//add other cases for cannon
				c.getCannon().shootCannon();
			break;</code></p>
<p>client class:</p>
<pre><code class="lang-auto">	private DwarfMultiCannon cannon = new DwarfMultiCannon(this);
	public DwarfMultiCannon getCannon() {
		return cannon;
	}</code></pre>
<p>playerasssitant add these:</p>
<pre><code class="lang-auto">	public void createPlayersObjectAnim(int X, int Y, int animationID, int tileObjectType, int orientation) {
		try{
			c.getOutStream().createFrame(85);
			c.getOutStream().writeByteC(Y - (c.mapRegionY * 8));
			c.getOutStream().writeByteC(X - (c.mapRegionX * 8));
			int x = 0;
			int y = 0;
			c.getOutStream().createFrame(160);
			c.getOutStream().writeByteS(((x&amp;7) &lt;&lt; 4) + (y&amp;7));//tiles away - could just send 0       
			c.getOutStream().writeByteS((tileObjectType&lt;&lt;2) +(orientation&amp;3));
			c.getOutStream().writeWordA(animationID);// animation id
		} catch(Exception e){
			e.printStackTrace();
		}
	}
	
	public void objectAnim(int X, int Y, int animationID, int tileObjectType, int orientation) {
		for (Player p : PlayerHandler.players) {
			if(p != null) {
				Client players = (Client)p;
				if(players.distanceToPoint(X, Y) &lt;= 25) {
					players.getPA().createPlayersObjectAnim(X, Y, animationID, tileObjectType, orientation);	
				}
			}
		}
	}</code></pre>
<p>also in objecthandler if you dont already have these methods:</p>
<pre><code class="lang-auto">	 /**
	 * Creates objects
	 */
	public void createAnObject(Client c, int id, int x, int y) {
		Objects OBJECT = new Objects(id, x, y, 0, 0, 10, 0);
		if(id == -1) {
			removeObject(OBJECT);
		} else {
			addObject(OBJECT);
		}
		Server.objectHandler.placeObject(OBJECT);
	}

	public void createAnObject(Client c, int id, int x, int y, int face) {
		Objects OBJECT = new Objects(id, x, y, 0, face, 10, 0);
		if(id == -1) {
			removeObject(OBJECT);
		} else {
			addObject(OBJECT);
		}
		Server.objectHandler.placeObject(OBJECT);
	}</code></pre>
<p>and this in itemassistant if you dont have:</p>
<pre><code class="lang-auto">	/**
	 * Adds an item to the bank without checking if the player has it in there inventory
	 * @param itemId the id of the item were banking
	 * @param amount amount of items to bank
	 */
	public void addItemToBank(int itemId, int amount) {
		for (int i = 0; i &lt; Config.BANK_SIZE; i++) {
			if (c.bankItems[i] &lt;= 0 || c.bankItems[i] == itemId + 1
					&amp;&amp; c.bankItemsN[i] + amount &lt; Integer.MAX_VALUE) {
				c.bankItems[i] = itemId + 1;
				c.bankItemsN[i] += amount;
				resetBank();
				return;
			}
		}
	}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143/1</link>
        <pubDate>Wed, 21 Dec 2011 04:15:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-426143-1</guid>
        <source url="https://forum.moparisthebest.com/t/pi-dwarf-multi-cannon-base/426143.rss">[PI] Dwarf Multi-Cannon [BASE]</source>
      </item>
  </channel>
</rss>
