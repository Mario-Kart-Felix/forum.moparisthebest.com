<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>C++ BrainFuck interpretor</title>
    <link>https://forum.moparisthebest.com/t/c-brainfuck-interpretor/108115</link>
    <description>This is pretty ugly, I made it when I was playing with BrainFuck lol...This has all the opcodes accept the loops &quot;[]&quot; because I never got around to coding them

[code]
#include &lt;iostream&gt;

using std::cout;
using std::cin;
using std::endl;

int main(int argc, char *argv[])
{
	while(true)
	{
        char code[10000];
		char cur[10000];
		char curen = 0;
		int index = 0;
		char leftat[100000];
		leftat[0] = 0;
		int highest = 0;
		char data[1000];
		int dataind = 0;
		cout &lt;&lt; &quot;BF Code: &quot;;
		cin &gt;&gt; code;

		for(int x = 0; x &lt; strlen(code); x++)
		{
			cur[index] = curen;
			char current = code[x];

			switch(current) {
                case &#39;+&#39;: curen++; break;
                case &#39;-&#39;: curen--; break;
                case &#39;&gt;&#39;: {
                    leftat[index] = curen;
    				index++;
    				if(index &gt; highest) {
    					leftat[index] = 0;
    					highest++;
    					curen = 0;
    				} else {
    					curen = leftat[index];
    				}
    				break;
                }
                case &#39;&lt;&#39;: {
                    leftat[index] = curen;
				    index--;
				    curen = leftat[index];
				    break;
                }
                case &#39;.&#39;: cout &lt;&lt; cur[index]; break;
                case &#39;,&#39;: {
                    char theChar;
                    cin &gt;&gt; theChar;
                    curen = theChar;
                    break;
                }
                default: break;
            }
		}
		cout &lt;&lt;  endl;
	}
    system(&quot;PAUSE&quot;);
    return EXIT_SUCCESS;
}
[/code]</description>
    
    <lastBuildDate>Wed, 20 Jun 2007 02:09:18 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/c-brainfuck-interpretor/108115.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>C++ BrainFuck interpretor</title>
        <dc:creator><![CDATA[@mwiebelhaus mwiebelhaus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mwiebelhaus">@mwiebelhaus</a> wrote:</p>
          <blockquote>
              <p>[quote=“I Am Olan14, post:4, topic:108115”]Yay, now from this I can create my own coding language interpreter.<br>
Too lazy to make my own.[/quote]</p>
<p>Good luck brainfuck only uses 8 symbolys in its language lol try making another interperter for a lanugage that has 1000 symbolys…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-brainfuck-interpretor/108115/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-brainfuck-interpretor/108115/5</link>
        <pubDate>Wed, 20 Jun 2007 02:09:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-108115-5</guid>
        <source url="https://forum.moparisthebest.com/t/c-brainfuck-interpretor/108115.rss">C++ BrainFuck interpretor</source>
      </item>
      <item>
        <title>C++ BrainFuck interpretor</title>
        <dc:creator><![CDATA[@I_Am_Olan14 I Am Olan14]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/i_am_olan14">@I_Am_Olan14</a> wrote:</p>
          <blockquote>
              <p>Yay, now from this I can create my own coding language interpreter.<br>
Too lazy to make my own.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-brainfuck-interpretor/108115/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-brainfuck-interpretor/108115/4</link>
        <pubDate>Mon, 11 Jun 2007 21:39:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-108115-4</guid>
        <source url="https://forum.moparisthebest.com/t/c-brainfuck-interpretor/108115.rss">C++ BrainFuck interpretor</source>
      </item>
      <item>
        <title>C++ BrainFuck interpretor</title>
        <dc:creator><![CDATA[@Evil1 Evil_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/evil1">@Evil1</a> wrote:</p>
          <blockquote>
              <p>Thanks, just like I asked <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=6" title=":smiley:" class="emoji" alt=":smiley:"> &lt;3</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-brainfuck-interpretor/108115/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-brainfuck-interpretor/108115/3</link>
        <pubDate>Sat, 09 Jun 2007 18:38:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-108115-3</guid>
        <source url="https://forum.moparisthebest.com/t/c-brainfuck-interpretor/108115.rss">C++ BrainFuck interpretor</source>
      </item>
      <item>
        <title>C++ BrainFuck interpretor</title>
        <dc:creator><![CDATA[@Cheese_Police c|p]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cheese_police">@Cheese_Police</a> wrote:</p>
          <blockquote>
              <p>[code]<span class="hashtag">#include</span> </p>
<p>int main() {<br>
char memory[32767];<br>
char *ptr = memory;<br>
char *code = ( char * ) malloc( 10000 );<br>
// Get the code from std::cin, blah blah<br>
for ( int i = 0; i &lt; strlen( code ); i++) {<br>
switch( code[i] ) {<br>
case ‘+’:<br>
++*ptr;<br>
break;<br>
case ‘-’:<br>
–*ptr;<br>
break;<br>
case ‘&gt;’:<br>
++ptr;<br>
break;<br>
case ‘&lt;’:<br>
–ptr;<br>
break;<br>
case ‘,’:<br>
*ptr = getchar( );<br>
break;<br>
case ‘.’:<br>
putchar( *ptr );<br>
break;<br>
case ‘[’:<br>
case ‘]’:<br>
// Loops not supported<br>
break;	<br>
}<br>
}<br>
}<br>
[/code]</p>
<p>Made it better ;0</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-brainfuck-interpretor/108115/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-brainfuck-interpretor/108115/2</link>
        <pubDate>Sat, 09 Jun 2007 18:37:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-108115-2</guid>
        <source url="https://forum.moparisthebest.com/t/c-brainfuck-interpretor/108115.rss">C++ BrainFuck interpretor</source>
      </item>
      <item>
        <title>C++ BrainFuck interpretor</title>
        <dc:creator><![CDATA[@Evil1 Evil_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/evil1">@Evil1</a> wrote:</p>
          <blockquote>
              <p>This is pretty ugly, I made it when I was playing with BrainFuck lol…This has all the opcodes accept the loops “[]” because I never got around to coding them</p>
<pre><code class="lang-auto">#include &lt;iostream&gt;

using std::cout;
using std::cin;
using std::endl;

int main(int argc, char *argv[])
{
	while(true)
	{
        char code[10000];
		char cur[10000];
		char curen = 0;
		int index = 0;
		char leftat[100000];
		leftat[0] = 0;
		int highest = 0;
		char data[1000];
		int dataind = 0;
		cout &lt;&lt; "BF Code: ";
		cin &gt;&gt; code;

		for(int x = 0; x &lt; strlen(code); x++)
		{
			cur[index] = curen;
			char current = code[x];

			switch(current) {
                case '+': curen++; break;
                case '-': curen--; break;
                case '&gt;': {
                    leftat[index] = curen;
    				index++;
    				if(index &gt; highest) {
    					leftat[index] = 0;
    					highest++;
    					curen = 0;
    				} else {
    					curen = leftat[index];
    				}
    				break;
                }
                case '&lt;': {
                    leftat[index] = curen;
				    index--;
				    curen = leftat[index];
				    break;
                }
                case '.': cout &lt;&lt; cur[index]; break;
                case ',': {
                    char theChar;
                    cin &gt;&gt; theChar;
                    curen = theChar;
                    break;
                }
                default: break;
            }
		}
		cout &lt;&lt;  endl;
	}
    system("PAUSE");
    return EXIT_SUCCESS;
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-brainfuck-interpretor/108115/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-brainfuck-interpretor/108115/1</link>
        <pubDate>Sat, 09 Jun 2007 18:27:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-108115-1</guid>
        <source url="https://forum.moparisthebest.com/t/c-brainfuck-interpretor/108115.rss">C++ BrainFuck interpretor</source>
      </item>
  </channel>
</rss>
