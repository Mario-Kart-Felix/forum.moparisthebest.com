<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[PI] Cooking problem</title>
    <link>https://forum.moparisthebest.com/t/pi-cooking-problem/546494</link>
    <description>I have a 474 PI server (still in development) and when I&#39;ve finished cooking, I still Cook and messages are coming up saying &quot;You succsesfully cooked the unarmed&quot; and I gain -1 XP.

Here is the Cooking.java code

[code]package server.model.players.skills;

import server.core.World;
import server.core.tick.Tick;
import server.model.players.Client;
import server.util.Misc;

	/**
	 * Class Cooking
	 * Handles Cooking
	 * @author 2012
	 * START: 20:13 25/10/2010
	 * FINISH: 20:21 25/10/2010
	 */
 
public class Cooking extends SkillHandler {

	public static void cookThisFood(Client p, int i, int object) {
		switch(i) {
			case 317:	cookFish(p, i, 300, 1, 323, 315, object); break;
			case 321:	cookFish(p, i, 300, 1, 323, 319, object); break;
			case 327: 	cookFish(p, i, 400, 1, 367, 325, object); break;
			case 345: 	cookFish(p, i, 500, 5, 357, 347, object); break;
			case 353: 	cookFish(p, i, 600, 10, 357, 355, object); break;
			case 335: 	cookFish(p, i, 700, 15, 343, 333, object); break;
			case 341: 	cookFish(p, i, 750, 18, 343, 339, object); break;
			case 349: 	cookFish(p, i, 800, 20, 343, 351, object); break;
			case 331: 	cookFish(p, i, 900, 25, 343, 329, object); break;
			case 359: 	cookFish(p, i, 1000, 30, 367, 361, object); break;
			case 361: 	cookFish(p, i, 1000, 30, 367, 365, object); break;
			case 377: 	cookFish(p, i, 1200, 40, i + 4, i + 2, object); break;
			case 371: 	cookFish(p, i, 1400, 45, i + 4, i + 2, object); break;
			case 383: 	cookFish(p, i, 2100, 80, i + 4, i + 2, object); break;
			case 395: 	cookFish(p, i, 2120, 82, i + 4, i + 2, object); break;
			case 389: 	cookFish(p, i, 2160, 91, i + 4, i + 2, object); break;
			case 7944: 	cookFish(p, i, 1500, 62, i + 4, i + 2, object); break;
			default: 	p.sendMessage(&quot;You can&#39;t cook this!&quot;); break;
		}
	}

	private static int fishStopsBurning(int i) {
		switch (i) {
			case 317: return 34;
			case 321: return 34;
			case 327: return 38;
			case 345: return 37;
			case 353: return 45;
			case 335: return 50;
			case 341: return 39;
			case 349: return 52;
			case 331: return 58;
			case 359: return 63;
			case 377: return 74;
			case 363: return 80;
			case 371: return 86;
			case 7944: return 90;
			case 383: return 94;
			default: return 99;
		}
	}

	private static void cookFish(Client c, int itemID, int xpRecieved, int levelRequired, int burntFish, int cookedFish, int object) {
		if(!hasRequiredLevel(c, 7, levelRequired, &quot;cooking&quot;, &quot;cook this&quot;)){
			return;
		}
		int chance = c.playerLevel[7];
		if(c.playerEquipment[c.playerHands] == 775) {
			chance = c.playerLevel[7] + 8; 
		}
		if(chance &lt;= 0) {
			chance = Misc.random(5);
		}
    		c.cookingProp[0] = itemID;
		c.cookingProp[1] = xpRecieved * COOKING_XP;
		c.cookingProp[2] = levelRequired;
		c.cookingProp[3] = burntFish;
		c.cookingProp[4] = cookedFish;
		c.cookingProp[5] = object;
		c.cookingProp[6] = chance;
		c.stopPlayerSkill = false;
		int item = c.getItems().getItemAmount(c.cookingProp[0]);
		if(item == 1) {
			c.doAmount = 1;
			cookTheFish(c);
			return;
		}
		viewCookInterface(c, itemID);
	}

	public static void getAmount(Client c, int amount) {
		int item = c.getItems().getItemAmount(c.cookingProp[0]);
		if(amount &gt; item) {
			amount = item;
		}
		c.doAmount = amount;
		cookTheFish(c);
	}

	public static void resetCooking(Client c) {
		c.playerIsCooking = false;
		c.stopPlayerSkill = false;
		for(int i = 0; i &lt; 6; i++) {
			c.cookingProp[i] = -1;
		}
	}

	private static void viewCookInterface(Client c, int item) {
        	c.getPA().sendFrame164(1743);
         	c.getPA().sendFrame246(13716, view190 ? 190 : 180, item);
     		c.getPA().sendFrame126(getLine(c)+&quot;&quot;+c.getItems().getItemName(item)+&quot;&quot;, 13717);
	}

	private static void cookTheFish(final Client c) {
		if(c.playerIsCooking) {
			return;	
		}
		c.playerIsCooking = true;
		c.stopPlayerSkill = true;
		c.getPA().removeAllWindows();
		if(c.cookingProp[5] &gt; 0) {
			c.startAnimation(c.cookingProp[5] == 2732 ? 897 : 896);
		}
		World.getWorld().submit(new Tick(2) {
			public void execute() {
				c.getItems().deleteItem(c.cookingProp[0], c.getItems().getItemSlot(c.cookingProp[0]), 1);
				if(c.playerLevel[7] &gt;= fishStopsBurning(c.cookingProp[0]) || Misc.random(c.cookingProp[6]) &gt; Misc.random(c.cookingProp[2])) {
					c.sendMessage(&quot;You successfully cook the &quot;+ c.getItems().getItemName(c.cookingProp[0]).toLowerCase() +&quot;.&quot;);
					c.getPA().addSkillXP(c.cookingProp[1], 7);
					c.getItems().addItem(c.cookingProp[4], 1);
				} else {
					c.sendMessage(&quot;Oops! You accidentally burnt the &quot;+ c.getItems().getItemName(c.cookingProp[0]).toLowerCase() +&quot;!&quot;);
					c.getItems().addItem(c.cookingProp[3], 1);
				}
				deleteTime(c);
				if(!c.getItems().playerHasItem(c.cookingProp[0], 1) || c.doAmount &lt;= 0) {
					this.stop();
				}
				if(!c.stopPlayerSkill) {
					this.stop();
				}
			}
			public void stop() {
				resetCooking(c);
			}
		});
		World.getWorld().submit(new Tick(4) {
			public void execute() {
				if(c.cookingProp[5] &gt; 0) {
					c.startAnimation(c.cookingProp[5] == 2732 ? 897 : 896);
				}
				if(!c.stopPlayerSkill) {
					this.stop();
				}
			}
		});
	}
}[/code]</description>
    
    <lastBuildDate>Fri, 05 Sep 2014 05:31:33 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/pi-cooking-problem/546494.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[PI] Cooking problem</title>
        <dc:creator><![CDATA[@matzie matzie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/matzie">@matzie</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="3" data-topic="546494">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/averagescape/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Averagescape:</div>
<blockquote>
<p>How?</p>
</blockquote>
</aside>
<p><code>if(!c.stopPlayerSkill) {
					this.stop();
				}</code><br>
I liked that code.<br>
if (! stop) {stop} lol<br>
I don’t know about your tick class, but have you tried something like super.stop()? (Read the tick documentation to find out how if this is wrong)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-cooking-problem/546494/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-cooking-problem/546494/4</link>
        <pubDate>Fri, 05 Sep 2014 05:31:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546494-4</guid>
        <source url="https://forum.moparisthebest.com/t/pi-cooking-problem/546494.rss">[PI] Cooking problem</source>
      </item>
      <item>
        <title>[PI] Cooking problem</title>
        <dc:creator><![CDATA[@Averagescape Averagescape]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/averagescape">@Averagescape</a> wrote:</p>
          <blockquote>
              <p>How?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-cooking-problem/546494/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-cooking-problem/546494/3</link>
        <pubDate>Thu, 04 Sep 2014 22:50:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546494-3</guid>
        <source url="https://forum.moparisthebest.com/t/pi-cooking-problem/546494.rss">[PI] Cooking problem</source>
      </item>
      <item>
        <title>[PI] Cooking problem</title>
        <dc:creator><![CDATA[@ohokay ohokay]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ohokay">@ohokay</a> wrote:</p>
          <blockquote>
              <p>[quote=“Averagescape, post:1, topic:546494”]I have a 474 PI server (still in development) and when I’ve finished cooking, I still Cook and messages are coming up saying “You succsesfully cooked the unarmed” and I gain -1 XP.</p>
<p>Here is the Cooking.java code</p>
<p>[code]package server.model.players.skills;</p>
<p>import server.core.World;<br>
import server.core.tick.Tick;<br>
import server.model.players.Client;<br>
import server.util.Misc;</p>
<pre><code>/**
 * Class Cooking
 * Handles Cooking
 * @author 2012
 * START: 20:13 25/10/2010
 * FINISH: 20:21 25/10/2010
 */
</code></pre>
<p>public class Cooking extends SkillHandler {</p>
<pre><code>public static void cookThisFood(Client p, int i, int object) {
	switch(i) {
		case 317:	cookFish(p, i, 300, 1, 323, 315, object); break;
		case 321:	cookFish(p, i, 300, 1, 323, 319, object); break;
		case 327: 	cookFish(p, i, 400, 1, 367, 325, object); break;
		case 345: 	cookFish(p, i, 500, 5, 357, 347, object); break;
		case 353: 	cookFish(p, i, 600, 10, 357, 355, object); break;
		case 335: 	cookFish(p, i, 700, 15, 343, 333, object); break;
		case 341: 	cookFish(p, i, 750, 18, 343, 339, object); break;
		case 349: 	cookFish(p, i, 800, 20, 343, 351, object); break;
		case 331: 	cookFish(p, i, 900, 25, 343, 329, object); break;
		case 359: 	cookFish(p, i, 1000, 30, 367, 361, object); break;
		case 361: 	cookFish(p, i, 1000, 30, 367, 365, object); break;
		case 377: 	cookFish(p, i, 1200, 40, i + 4, i + 2, object); break;
		case 371: 	cookFish(p, i, 1400, 45, i + 4, i + 2, object); break;
		case 383: 	cookFish(p, i, 2100, 80, i + 4, i + 2, object); break;
		case 395: 	cookFish(p, i, 2120, 82, i + 4, i + 2, object); break;
		case 389: 	cookFish(p, i, 2160, 91, i + 4, i + 2, object); break;
		case 7944: 	cookFish(p, i, 1500, 62, i + 4, i + 2, object); break;
		default: 	p.sendMessage("You can't cook this!"); break;
	}
}

private static int fishStopsBurning(int i) {
	switch (i) {
		case 317: return 34;
		case 321: return 34;
		case 327: return 38;
		case 345: return 37;
		case 353: return 45;
		case 335: return 50;
		case 341: return 39;
		case 349: return 52;
		case 331: return 58;
		case 359: return 63;
		case 377: return 74;
		case 363: return 80;
		case 371: return 86;
		case 7944: return 90;
		case 383: return 94;
		default: return 99;
	}
}

private static void cookFish(Client c, int itemID, int xpRecieved, int levelRequired, int burntFish, int cookedFish, int object) {
	if(!hasRequiredLevel(c, 7, levelRequired, "cooking", "cook this")){
		return;
	}
	int chance = c.playerLevel[7];
	if(c.playerEquipment[c.playerHands] == 775) {
		chance = c.playerLevel[7] + 8; 
	}
	if(chance &lt;= 0) {
		chance = Misc.random(5);
	}
		c.cookingProp[0] = itemID;
	c.cookingProp[1] = xpRecieved * COOKING_XP;
	c.cookingProp[2] = levelRequired;
	c.cookingProp[3] = burntFish;
	c.cookingProp[4] = cookedFish;
	c.cookingProp[5] = object;
	c.cookingProp[6] = chance;
	c.stopPlayerSkill = false;
	int item = c.getItems().getItemAmount(c.cookingProp[0]);
	if(item == 1) {
		c.doAmount = 1;
		cookTheFish(c);
		return;
	}
	viewCookInterface(c, itemID);
}

public static void getAmount(Client c, int amount) {
	int item = c.getItems().getItemAmount(c.cookingProp[0]);
	if(amount &gt; item) {
		amount = item;
	}
	c.doAmount = amount;
	cookTheFish(c);
}

public static void resetCooking(Client c) {
	c.playerIsCooking = false;
	c.stopPlayerSkill = false;
	for(int i = 0; i &lt; 6; i++) {
		c.cookingProp[i] = -1;
	}
}

private static void viewCookInterface(Client c, int item) {
    	c.getPA().sendFrame164(1743);
     	c.getPA().sendFrame246(13716, view190 ? 190 : 180, item);
 		c.getPA().sendFrame126(getLine(c)+""+c.getItems().getItemName(item)+"", 13717);
}

private static void cookTheFish(final Client c) {
	if(c.playerIsCooking) {
		return;	
	}
	c.playerIsCooking = true;
	c.stopPlayerSkill = true;
	c.getPA().removeAllWindows();
	if(c.cookingProp[5] &gt; 0) {
		c.startAnimation(c.cookingProp[5] == 2732 ? 897 : 896);
	}
	World.getWorld().submit(new Tick(2) {
		public void execute() {
			c.getItems().deleteItem(c.cookingProp[0], c.getItems().getItemSlot(c.cookingProp[0]), 1);
			if(c.playerLevel[7] &gt;= fishStopsBurning(c.cookingProp[0]) || Misc.random(c.cookingProp[6]) &gt; Misc.random(c.cookingProp[2])) {
				c.sendMessage("You successfully cook the "+ c.getItems().getItemName(c.cookingProp[0]).toLowerCase() +".");
				c.getPA().addSkillXP(c.cookingProp[1], 7);
				c.getItems().addItem(c.cookingProp[4], 1);
			} else {
				c.sendMessage("Oops! You accidentally burnt the "+ c.getItems().getItemName(c.cookingProp[0]).toLowerCase() +"!");
				c.getItems().addItem(c.cookingProp[3], 1);
			}
			deleteTime(c);
			if(!c.getItems().playerHasItem(c.cookingProp[0], 1) || c.doAmount &lt;= 0) {
				this.stop();
			}
			if(!c.stopPlayerSkill) {
				this.stop();
			}
		}
		public void stop() {
			resetCooking(c);
		}
	});
	World.getWorld().submit(new Tick(4) {
		public void execute() {
			if(c.cookingProp[5] &gt; 0) {
				c.startAnimation(c.cookingProp[5] == 2732 ? 897 : 896);
			}
			if(!c.stopPlayerSkill) {
				this.stop();
			}
		}
	});
}
</code></pre>
<p>}[/code][/quote]</p>
<p>You’re not stopping the event when you’ve finished cooking</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-cooking-problem/546494/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-cooking-problem/546494/2</link>
        <pubDate>Thu, 04 Sep 2014 21:16:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546494-2</guid>
        <source url="https://forum.moparisthebest.com/t/pi-cooking-problem/546494.rss">[PI] Cooking problem</source>
      </item>
      <item>
        <title>[PI] Cooking problem</title>
        <dc:creator><![CDATA[@Averagescape Averagescape]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/averagescape">@Averagescape</a> wrote:</p>
          <blockquote>
              <p>I have a 474 PI server (still in development) and when I’ve finished cooking, I still Cook and messages are coming up saying “You succsesfully cooked the unarmed” and I gain -1 XP.</p>
<p>Here is the Cooking.java code</p>
<p>[code]package server.model.players.skills;</p>
<p>import server.core.World;<br>
import server.core.tick.Tick;<br>
import server.model.players.Client;<br>
import server.util.Misc;</p>
<pre><code>/**
 * Class Cooking
 * Handles Cooking
 * @author 2012
 * START: 20:13 25/10/2010
 * FINISH: 20:21 25/10/2010
 */
</code></pre>
<p>public class Cooking extends SkillHandler {</p>
<pre><code>public static void cookThisFood(Client p, int i, int object) {
	switch(i) {
		case 317:	cookFish(p, i, 300, 1, 323, 315, object); break;
		case 321:	cookFish(p, i, 300, 1, 323, 319, object); break;
		case 327: 	cookFish(p, i, 400, 1, 367, 325, object); break;
		case 345: 	cookFish(p, i, 500, 5, 357, 347, object); break;
		case 353: 	cookFish(p, i, 600, 10, 357, 355, object); break;
		case 335: 	cookFish(p, i, 700, 15, 343, 333, object); break;
		case 341: 	cookFish(p, i, 750, 18, 343, 339, object); break;
		case 349: 	cookFish(p, i, 800, 20, 343, 351, object); break;
		case 331: 	cookFish(p, i, 900, 25, 343, 329, object); break;
		case 359: 	cookFish(p, i, 1000, 30, 367, 361, object); break;
		case 361: 	cookFish(p, i, 1000, 30, 367, 365, object); break;
		case 377: 	cookFish(p, i, 1200, 40, i + 4, i + 2, object); break;
		case 371: 	cookFish(p, i, 1400, 45, i + 4, i + 2, object); break;
		case 383: 	cookFish(p, i, 2100, 80, i + 4, i + 2, object); break;
		case 395: 	cookFish(p, i, 2120, 82, i + 4, i + 2, object); break;
		case 389: 	cookFish(p, i, 2160, 91, i + 4, i + 2, object); break;
		case 7944: 	cookFish(p, i, 1500, 62, i + 4, i + 2, object); break;
		default: 	p.sendMessage("You can't cook this!"); break;
	}
}

private static int fishStopsBurning(int i) {
	switch (i) {
		case 317: return 34;
		case 321: return 34;
		case 327: return 38;
		case 345: return 37;
		case 353: return 45;
		case 335: return 50;
		case 341: return 39;
		case 349: return 52;
		case 331: return 58;
		case 359: return 63;
		case 377: return 74;
		case 363: return 80;
		case 371: return 86;
		case 7944: return 90;
		case 383: return 94;
		default: return 99;
	}
}

private static void cookFish(Client c, int itemID, int xpRecieved, int levelRequired, int burntFish, int cookedFish, int object) {
	if(!hasRequiredLevel(c, 7, levelRequired, "cooking", "cook this")){
		return;
	}
	int chance = c.playerLevel[7];
	if(c.playerEquipment[c.playerHands] == 775) {
		chance = c.playerLevel[7] + 8; 
	}
	if(chance &lt;= 0) {
		chance = Misc.random(5);
	}
		c.cookingProp[0] = itemID;
	c.cookingProp[1] = xpRecieved * COOKING_XP;
	c.cookingProp[2] = levelRequired;
	c.cookingProp[3] = burntFish;
	c.cookingProp[4] = cookedFish;
	c.cookingProp[5] = object;
	c.cookingProp[6] = chance;
	c.stopPlayerSkill = false;
	int item = c.getItems().getItemAmount(c.cookingProp[0]);
	if(item == 1) {
		c.doAmount = 1;
		cookTheFish(c);
		return;
	}
	viewCookInterface(c, itemID);
}

public static void getAmount(Client c, int amount) {
	int item = c.getItems().getItemAmount(c.cookingProp[0]);
	if(amount &gt; item) {
		amount = item;
	}
	c.doAmount = amount;
	cookTheFish(c);
}

public static void resetCooking(Client c) {
	c.playerIsCooking = false;
	c.stopPlayerSkill = false;
	for(int i = 0; i &lt; 6; i++) {
		c.cookingProp[i] = -1;
	}
}

private static void viewCookInterface(Client c, int item) {
    	c.getPA().sendFrame164(1743);
     	c.getPA().sendFrame246(13716, view190 ? 190 : 180, item);
 		c.getPA().sendFrame126(getLine(c)+""+c.getItems().getItemName(item)+"", 13717);
}

private static void cookTheFish(final Client c) {
	if(c.playerIsCooking) {
		return;	
	}
	c.playerIsCooking = true;
	c.stopPlayerSkill = true;
	c.getPA().removeAllWindows();
	if(c.cookingProp[5] &gt; 0) {
		c.startAnimation(c.cookingProp[5] == 2732 ? 897 : 896);
	}
	World.getWorld().submit(new Tick(2) {
		public void execute() {
			c.getItems().deleteItem(c.cookingProp[0], c.getItems().getItemSlot(c.cookingProp[0]), 1);
			if(c.playerLevel[7] &gt;= fishStopsBurning(c.cookingProp[0]) || Misc.random(c.cookingProp[6]) &gt; Misc.random(c.cookingProp[2])) {
				c.sendMessage("You successfully cook the "+ c.getItems().getItemName(c.cookingProp[0]).toLowerCase() +".");
				c.getPA().addSkillXP(c.cookingProp[1], 7);
				c.getItems().addItem(c.cookingProp[4], 1);
			} else {
				c.sendMessage("Oops! You accidentally burnt the "+ c.getItems().getItemName(c.cookingProp[0]).toLowerCase() +"!");
				c.getItems().addItem(c.cookingProp[3], 1);
			}
			deleteTime(c);
			if(!c.getItems().playerHasItem(c.cookingProp[0], 1) || c.doAmount &lt;= 0) {
				this.stop();
			}
			if(!c.stopPlayerSkill) {
				this.stop();
			}
		}
		public void stop() {
			resetCooking(c);
		}
	});
	World.getWorld().submit(new Tick(4) {
		public void execute() {
			if(c.cookingProp[5] &gt; 0) {
				c.startAnimation(c.cookingProp[5] == 2732 ? 897 : 896);
			}
			if(!c.stopPlayerSkill) {
				this.stop();
			}
		}
	});
}
</code></pre>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-cooking-problem/546494/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-cooking-problem/546494/1</link>
        <pubDate>Thu, 04 Sep 2014 19:00:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-546494-1</guid>
        <source url="https://forum.moparisthebest.com/t/pi-cooking-problem/546494.rss">[PI] Cooking problem</source>
      </item>
  </channel>
</rss>
