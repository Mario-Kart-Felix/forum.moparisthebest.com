<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[C] Binary Tree (pointers)</title>
    <link>https://forum.moparisthebest.com/t/c-binary-tree-pointers/385338</link>
    <description>I am fairly weak on pointers and memory management since I barely work with C. But here is the question.


[code]
struct node
{
  int parentValue;
  struct node *left;
  struct node *right;
};
[/code]

i have a method 

[code]insert(int k, struct node **someNode) {

//if node is null, allocate space, insert k.

else 
  else if k less ? insert at left node// what should this statement be?
     (k, somenode-&gt;left) // what should this statement be?
  else if k greater ? insert at right node
     (k, somenode-&gt;right) // 
}[/code]

How do I compare for k to someNode, then assign a value to somenode&#39;s left/right side?  It&#39;s the *, ** &amp; that doesnt get through my skull.


looking for something like

k &lt; *someNode-&gt;parent   //is this correct?

what about assigning a value?

&amp;(*someNode)-&gt;parent)

its a recursive function


ps. its the syntax i don&#39;t get.</description>
    
    <lastBuildDate>Tue, 08 Mar 2011 09:17:28 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/c-binary-tree-pointers/385338.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[C] Binary Tree (pointers)</title>
        <dc:creator><![CDATA[@RLN RLN]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rln">@RLN</a> wrote:</p>
          <blockquote>
              <p><a href="http://pw1.netcom.com/~tjensen/ptr/ch5x.htm" data-bbcode="true" rel="nofollow noopener">relevant</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-binary-tree-pointers/385338/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-binary-tree-pointers/385338/2</link>
        <pubDate>Tue, 08 Mar 2011 09:17:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-385338-2</guid>
        <source url="https://forum.moparisthebest.com/t/c-binary-tree-pointers/385338.rss">[C] Binary Tree (pointers)</source>
      </item>
      <item>
        <title>[C] Binary Tree (pointers)</title>
        <dc:creator><![CDATA[@quest_rs quest rs]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/quest_rs">@quest_rs</a> wrote:</p>
          <blockquote>
              <p>I am fairly weak on pointers and memory management since I barely work with C. But here is the question.</p>
<pre><code class="lang-auto">struct node
{
  int parentValue;
  struct node *left;
  struct node *right;
};</code></pre>
<p>i have a method</p>
<p>[code]insert(int k, struct node **someNode) {</p>
<p>//if node is null, allocate space, insert k.</p>
<p>else<br>
else if k less ? insert at left node// what should this statement be?<br>
(k, somenode-&gt;left) // what should this statement be?<br>
else if k greater ? insert at right node<br>
(k, somenode-&gt;right) //<br>
}[/code]</p>
<p>How do I compare for k to someNode, then assign a value to somenode’s left/right side?  It’s the *, ** &amp; that doesnt get through my skull.</p>
<p>looking for something like</p>
<p>k &lt; *someNode-&gt;parent   //is this correct?</p>
<p>what about assigning a value?</p>
<p>&amp;(*someNode)-&gt;parent)</p>
<p>its a recursive function</p>
<p>ps. its the syntax i don’t get.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-binary-tree-pointers/385338/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-binary-tree-pointers/385338/1</link>
        <pubDate>Mon, 07 Mar 2011 21:28:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-385338-1</guid>
        <source url="https://forum.moparisthebest.com/t/c-binary-tree-pointers/385338.rss">[C] Binary Tree (pointers)</source>
      </item>
  </channel>
</rss>
