<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>PI Highscores</title>
    <link>https://forum.moparisthebest.com/t/pi-highscores/439702</link>
    <description>[code=java]src\server\model\players\Client.java:1002: error: cannot find symbol
        Highscores.save(this);
        ^
  symbol:   variable Highscores
  location: class Client
src\server\Server.java:120: error: cannot find symbol
Highscores.process();
^
  symbol:   variable Highscores
  location: class Server
src\server\Server.java:121: error: cannot find symbol
if (Highscores.connected) {
    ^
  symbol:   variable Highscores
  location: class Server
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
3 errors[/code]
Any thoughts? Sql.java :


[code=java]
 package server.util;
import server.model.players.Client;
import java.sql.*;
import java.security.MessageDigest;


public class SQL {


	public static Connection con = null;
	public static Statement stmt;
	public static boolean connectionMade;
	public static void createConnection() {
		try {
			Class.forName(&quot;com.mysql.jdbc.Driver&quot;).newInstance();
			con = DriverManager.getConnection(&quot;jdbc:mysql://mysql11.000webhost.com/Highscores&quot;,&quot;a1482862_mysql&quot;,&quot;******&quot;);
			stmt = con.createStatement();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	public static ResultSet query(String s) throws SQLException {
		try {
			if (s.toLowerCase().startsWith(&quot;select&quot;)) {
				ResultSet rs = stmt.executeQuery(s);
				return rs;
			} else {
				stmt.executeUpdate(s);
			}
			return null;
		} catch (Exception e) {
			destroyConnection();
			createConnection();
			e.printStackTrace();
		}
		return null;
	}

	public static void destroyConnection() {
		try {
			stmt.close();
			con.close();
			connectionMade = false;
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static boolean saveHighScores(Client clientToSave) {
		try {
			query(&quot;DELETE FROM `skills` WHERE playerName = &#39;&quot;+clientToSave.playerName+&quot;&#39;;&quot;);
			query(&quot;DELETE FROM `skillsoverall` WHERE playerName = &#39;&quot;+clientToSave.playerName+&quot;&#39;;&quot;);
			query(&quot;INSERT INTO `skills` (`playerName`,`Attacklvl`,`Attackxp`,`Defencelvl`,`Defencexp`,`Strengthlvl`,`Strengthxp`,`Hitpointslvl`,`Hitpointsxp`,`Rangelvl`,`Rangexp`,`Prayerlvl`,`Prayerxp`,`Magiclvl`,`Magicxp`,`Cookinglvl`,`Cookingxp`,`Woodcuttinglvl`,`Woodcuttingxp`,`Fletchinglvl`,`Fletchingxp`,`Fishinglvl`,`Fishingxp`,`Firemakinglvl`,`Firemakingxp`,`Craftinglvl`,`Craftingxp`,`Smithinglvl`,`Smithingxp`,`Mininglvl`,`Miningxp`,`Herblorelvl`,`Herblorexp`,`Agilitylvl`,`Agilityxp`,`Thievinglvl`,`Thievingxp`,`Slayerlvl`,`Slayerxp`,`Farminglvl`,`Farmingxp`,`Runecraftlvl`,`Runecraftxp`) VALUES (&#39;&quot;+clientToSave.playerName+&quot;&#39;,&quot;+clientToSave.playerLevel[0]+&quot;,&quot;+clientToSave.playerXP[0]+&quot;,&quot;+clientToSave.playerLevel[1]+&quot;,&quot;+clientToSave.playerXP[1]+&quot;,&quot;+clientToSave.playerLevel[2]+&quot;,&quot;+clientToSave.playerXP[2]+&quot;,&quot;+clientToSave.playerLevel[3]+&quot;,&quot;+clientToSave.playerXP[3]+&quot;,&quot;+clientToSave.playerLevel[4]+&quot;,&quot;+clientToSave.playerXP[4]+&quot;,&quot;+clientToSave.playerLevel[5]+&quot;,&quot;+clientToSave.playerXP[5]+&quot;,&quot;+clientToSave.playerLevel[6]+&quot;,&quot;+clientToSave.playerXP[6]+&quot;,&quot;+clientToSave.playerLevel[7]+&quot;,&quot;+clientToSave.playerXP[7]+&quot;,&quot;+clientToSave.playerLevel[8]+&quot;,&quot;+clientToSave.playerXP[8]+&quot;,&quot;+clientToSave.playerLevel[9]+&quot;,&quot;+clientToSave.playerXP[9]+&quot;,&quot;+clientToSave.playerLevel[10]+&quot;,&quot;+clientToSave.playerXP[10]+&quot;,&quot;+clientToSave.playerLevel[11]+&quot;,&quot;+clientToSave.playerXP[11]+&quot;,&quot;+clientToSave.playerLevel[12]+&quot;,&quot;+clientToSave.playerXP[12]+&quot;,&quot;+clientToSave.playerLevel[13]+&quot;,&quot;+clientToSave.playerXP[13]+&quot;,&quot;+clientToSave.playerLevel[14]+&quot;,&quot;+clientToSave.playerXP[14]+&quot;,&quot;+clientToSave.playerLevel[15]+&quot;,&quot;+clientToSave.playerXP[15]+&quot;,&quot;+clientToSave.playerLevel[16]+&quot;,&quot;+clientToSave.playerXP[16]+&quot;,&quot;+clientToSave.playerLevel[17]+&quot;,&quot;+clientToSave.playerXP[17]+&quot;,&quot;+clientToSave.playerLevel[18]+&quot;,&quot;+clientToSave.playerXP[18]+&quot;,&quot;+clientToSave.playerLevel[19]+&quot;,&quot;+clientToSave.playerXP[19]+&quot;,&quot;+clientToSave.playerLevel[20]+&quot;,&quot;+clientToSave.playerXP[20]+&quot;);&quot;);
			query(&quot;INSERT INTO `skillsoverall` (`playerName`,`lvl`,`xp`) VALUES (&#39;&quot;+clientToSave.playerName+&quot;&#39;,&quot;+(clientToSave.getLevelForXP(clientToSave.playerXP[0]) + clientToSave.getLevelForXP(clientToSave.playerXP[1]) + clientToSave.getLevelForXP(clientToSave.playerXP[2]) + clientToSave.getLevelForXP(clientToSave.playerXP[3]) + clientToSave.getLevelForXP(clientToSave.playerXP[4]) + clientToSave.getLevelForXP(clientToSave.playerXP[5]) + clientToSave.getLevelForXP(clientToSave.playerXP[6]) + clientToSave.getLevelForXP(clientToSave.playerXP[7]) + clientToSave.getLevelForXP(clientToSave.playerXP[8]) + clientToSave.getLevelForXP(clientToSave.playerXP[9]) + clientToSave.getLevelForXP(clientToSave.playerXP[10]) + clientToSave.getLevelForXP(clientToSave.playerXP[11]) + clientToSave.getLevelForXP(clientToSave.playerXP[12]) + clientToSave.getLevelForXP(clientToSave.playerXP[13]) + clientToSave.getLevelForXP(clientToSave.playerXP[14]) + clientToSave.getLevelForXP(clientToSave.playerXP[15]) + clientToSave.getLevelForXP(clientToSave.playerXP[16]) + clientToSave.getLevelForXP(clientToSave.playerXP[17]) + clientToSave.getLevelForXP(clientToSave.playerXP[18]) + clientToSave.getLevelForXP(clientToSave.playerXP[19]) + clientToSave.getLevelForXP(clientToSave.playerXP[20]))+&quot;,&quot;+((clientToSave.playerXP[0]) + (clientToSave.playerXP[1]) + (clientToSave.playerXP[2]) + (clientToSave.playerXP[3]) + (clientToSave.playerXP[4]) + (clientToSave.playerXP[5]) + (clientToSave.playerXP[6]) + (clientToSave.playerXP[7]) + (clientToSave.playerXP[8]) + (clientToSave.playerXP[9]) + (clientToSave.playerXP[10]) + (clientToSave.playerXP[11]) + (clientToSave.playerXP[12]) + (clientToSave.playerXP[13]) + (clientToSave.playerXP[14]) + (clientToSave.playerXP[15]) + (clientToSave.playerXP[16]) + (clientToSave.playerXP[17]) + (clientToSave.playerXP[18]) + (clientToSave.playerXP[19]) + (clientToSave.playerXP[20]))+&quot;);&quot;);
		} catch (Exception e) {
			e.printStackTrace();
			return false;
		}
		return true;
	}
}
[/code]

here is the Highscores.java

[code=java]
package server.util;

import java.sql.*;
import server.model.players.Client;

public class Highscores {
	public static Connection con;
	public static Statement stm;
        public static boolean connected;
	
	public static String Host = &quot;jdbc:mysql://mysql11.000webhost.com/a1482862_mysql&quot;;
	public static String User = &quot;a1482862_mysql&quot;;
	public static String Pass = &quot;******&quot;;
	
    public static void process() {
        try
        {
            Class.forName(Driver).newInstance();
	    Connection con = DriverManager.getConnection(Host, User, Pass);
	    stm = con.createStatement();
            connected = true;
        }
        catch(Exception e)
        {
            connected = false;
            e.printStackTrace();
        }
    }

    public static ResultSet query(String s)
        throws SQLException
    {
        if(s.toLowerCase().startsWith(&quot;select&quot;))
        {
            ResultSet resultset = stm.executeQuery(s);
            return resultset;
        }
        try
        {
            stm.executeUpdate(s);
            return null;
        }
        catch(Exception e)
        {
            destroy();
        }
        process();
        return null;
    }

    public static void destroy() {
        try
        {
            stm.close();
            con.close();
            connected = false;
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }

    public static boolean save(Client c) {
        try
        {
            query(&quot;DELETE FROM `skills` WHERE playerName = &#39;&quot;+c.playerName+&quot;&#39;;&quot;);
	    query(&quot;DELETE FROM `skillsoverall` WHERE playerName = &#39;&quot;+c.playerName+&quot;&#39;;&quot;);
	    query(&quot;INSERT INTO `skills` (`playerName`,`Attacklvl`,`Attackxp`,`Defencelvl`,`Defencexp`,`Strengthlvl`,`Strengthxp`,`Hitpointslvl`,`Hitpointsxp`,`Rangelvl`,`Rangexp`,`Prayerlvl`,`Prayerxp`,`Magiclvl`,`Magicxp`,`Cookinglvl`,`Cookingxp`,`Woodcuttinglvl`,`Woodcuttingxp`,`Fletchinglvl`,`Fletchingxp`,`Fishinglvl`,`Fishingxp`,`Firemakinglvl`,`Firemakingxp`,`Craftinglvl`,`Craftingxp`,`Smithinglvl`,`Smithingxp`,`Mininglvl`,`Miningxp`,`Herblorelvl`,`Herblorexp`,`Agilitylvl`,`Agilityxp`,`Thievinglvl`,`Thievingxp`,`Slayerlvl`,`Slayerxp`,`Farminglvl`,`Farmingxp`,`Runecraftlvl`,`Runecraftxp`) VALUES (&#39;&quot;+c.playerName+&quot;&#39;,&quot;+c.playerLevel[0]+&quot;,&quot;+c.playerXP[0]+&quot;,&quot;+c.playerLevel[1]+&quot;,&quot;+c.playerXP[1]+&quot;,&quot;+c.playerLevel[2]+&quot;,&quot;+c.playerXP[2]+&quot;,&quot;+c.playerLevel[3]+&quot;,&quot;+c.playerXP[3]+&quot;,&quot;+c.playerLevel[4]+&quot;,&quot;+c.playerXP[4]+&quot;,&quot;+c.playerLevel[5]+&quot;,&quot;+c.playerXP[5]+&quot;,&quot;+c.playerLevel[6]+&quot;,&quot;+c.playerXP[6]+&quot;,&quot;+c.playerLevel[7]+&quot;,&quot;+c.playerXP[7]+&quot;,&quot;+c.playerLevel[8]+&quot;,&quot;+c.playerXP[8]+&quot;,&quot;+c.playerLevel[9]+&quot;,&quot;+c.playerXP[9]+&quot;,&quot;+c.playerLevel[10]+&quot;,&quot;+c.playerXP[10]+&quot;,&quot;+c.playerLevel[11]+&quot;,&quot;+c.playerXP[11]+&quot;,&quot;+c.playerLevel[12]+&quot;,&quot;+c.playerXP[12]+&quot;,&quot;+c.playerLevel[13]+&quot;,&quot;+c.playerXP[13]+&quot;,&quot;+c.playerLevel[14]+&quot;,&quot;+c.playerXP[14]+&quot;,&quot;+c.playerLevel[15]+&quot;,&quot;+c.playerXP[15]+&quot;,&quot;+c.playerLevel[16]+&quot;,&quot;+c.playerXP[16]+&quot;,&quot;+c.playerLevel[17]+&quot;,&quot;+c.playerXP[17]+&quot;,&quot;+c.playerLevel[18]+&quot;,&quot;+c.playerXP[18]+&quot;,&quot;+c.playerLevel[19]+&quot;,&quot;+c.playerXP[19]+&quot;,&quot;+c.playerLevel[20]+&quot;,&quot;+c.playerXP[20]+&quot;);&quot;);
	    query(&quot;INSERT INTO `skillsoverall` (`playerName`,`lvl`,`xp`) VALUES (&#39;&quot;+c.playerName+&quot;&#39;,&quot;+(c.getLevelForXP(c.playerXP[0]) + c.getLevelForXP(c.playerXP[1]) + c.getLevelForXP(c.playerXP[2]) + c.getLevelForXP(c.playerXP[3]) + c.getLevelForXP(c.playerXP[4]) + c.getLevelForXP(c.playerXP[5]) + c.getLevelForXP(c.playerXP[6]) + c.getLevelForXP(c.playerXP[7]) + c.getLevelForXP(c.playerXP[8]) + c.getLevelForXP(c.playerXP[9]) + c.getLevelForXP(c.playerXP[10]) + c.getLevelForXP(c.playerXP[11]) + c.getLevelForXP(c.playerXP[12]) + c.getLevelForXP(c.playerXP[13]) + c.getLevelForXP(c.playerXP[14]) + c.getLevelForXP(c.playerXP[15]) + c.getLevelForXP(c.playerXP[16]) + c.getLevelForXP(c.playerXP[17]) + c.getLevelForXP(c.playerXP[18]) + c.getLevelForXP(c.playerXP[19]) + c.getLevelForXP(c.playerXP[20]))+&quot;,&quot;+((c.playerXP[0]) + (c.playerXP[1]) + (c.playerXP[2]) + (c.playerXP[3]) + (c.playerXP[4]) + (c.playerXP[5]) + (c.playerXP[6]) + (c.playerXP[7]) + (c.playerXP[8]) + (c.playerXP[9]) + (c.playerXP[10]) + (c.playerXP[11]) + (c.playerXP[12]) + (c.playerXP[13]) + (c.playerXP[14]) + (c.playerXP[15]) + (c.playerXP[16]) + (c.playerXP[17]) + (c.playerXP[18]) + (c.playerXP[19]) + (c.playerXP[20]))+&quot;);&quot;);
		}
        catch(Exception e)
        {
            e.printStackTrace();
            return false;
        }
        return true;
    }
	public static String Driver = &quot;com.mysql.jdbc.Driver&quot;;
}
[/code]</description>
    
    <lastBuildDate>Mon, 16 Apr 2012 23:53:12 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/pi-highscores/439702.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>PI Highscores</title>
        <dc:creator><![CDATA[@heatrn11 heatrn11]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/heatrn11">@heatrn11</a> wrote:</p>
          <blockquote>
              <p>Add <code> Highscores.save(this);</code> to Client.java.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-highscores/439702/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-highscores/439702/2</link>
        <pubDate>Mon, 16 Apr 2012 23:53:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-439702-2</guid>
        <source url="https://forum.moparisthebest.com/t/pi-highscores/439702.rss">PI Highscores</source>
      </item>
      <item>
        <title>PI Highscores</title>
        <dc:creator><![CDATA[@nicke924 nicke924]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/nicke924">@nicke924</a> wrote:</p>
          <blockquote>
              <p><code>src\server\model\players\Client.java:1002: error: cannot find symbol
        Highscores.save(this);
        ^
  symbol:   variable Highscores
  location: class Client
src\server\Server.java:120: error: cannot find symbol
Highscores.process();
^
  symbol:   variable Highscores
  location: class Server
src\server\Server.java:121: error: cannot find symbol
if (Highscores.connected) {
    ^
  symbol:   variable Highscores
  location: class Server
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
3 errors</code><br>
Any thoughts? Sql.java :</p>
<pre><code class="lang-auto"> package server.util;
import server.model.players.Client;
import java.sql.*;
import java.security.MessageDigest;


public class SQL {


	public static Connection con = null;
	public static Statement stmt;
	public static boolean connectionMade;
	public static void createConnection() {
		try {
			Class.forName("com.mysql.jdbc.Driver").newInstance();
			con = DriverManager.getConnection("jdbc:mysql://mysql11.000webhost.com/Highscores","a1482862_mysql","******");
			stmt = con.createStatement();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	public static ResultSet query(String s) throws SQLException {
		try {
			if (s.toLowerCase().startsWith("select")) {
				ResultSet rs = stmt.executeQuery(s);
				return rs;
			} else {
				stmt.executeUpdate(s);
			}
			return null;
		} catch (Exception e) {
			destroyConnection();
			createConnection();
			e.printStackTrace();
		}
		return null;
	}

	public static void destroyConnection() {
		try {
			stmt.close();
			con.close();
			connectionMade = false;
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static boolean saveHighScores(Client clientToSave) {
		try {
			query("DELETE FROM `skills` WHERE playerName = '"+clientToSave.playerName+"';");
			query("DELETE FROM `skillsoverall` WHERE playerName = '"+clientToSave.playerName+"';");
			query("INSERT INTO `skills` (`playerName`,`Attacklvl`,`Attackxp`,`Defencelvl`,`Defencexp`,`Strengthlvl`,`Strengthxp`,`Hitpointslvl`,`Hitpointsxp`,`Rangelvl`,`Rangexp`,`Prayerlvl`,`Prayerxp`,`Magiclvl`,`Magicxp`,`Cookinglvl`,`Cookingxp`,`Woodcuttinglvl`,`Woodcuttingxp`,`Fletchinglvl`,`Fletchingxp`,`Fishinglvl`,`Fishingxp`,`Firemakinglvl`,`Firemakingxp`,`Craftinglvl`,`Craftingxp`,`Smithinglvl`,`Smithingxp`,`Mininglvl`,`Miningxp`,`Herblorelvl`,`Herblorexp`,`Agilitylvl`,`Agilityxp`,`Thievinglvl`,`Thievingxp`,`Slayerlvl`,`Slayerxp`,`Farminglvl`,`Farmingxp`,`Runecraftlvl`,`Runecraftxp`) VALUES ('"+clientToSave.playerName+"',"+clientToSave.playerLevel[0]+","+clientToSave.playerXP[0]+","+clientToSave.playerLevel[1]+","+clientToSave.playerXP[1]+","+clientToSave.playerLevel[2]+","+clientToSave.playerXP[2]+","+clientToSave.playerLevel[3]+","+clientToSave.playerXP[3]+","+clientToSave.playerLevel[4]+","+clientToSave.playerXP[4]+","+clientToSave.playerLevel[5]+","+clientToSave.playerXP[5]+","+clientToSave.playerLevel[6]+","+clientToSave.playerXP[6]+","+clientToSave.playerLevel[7]+","+clientToSave.playerXP[7]+","+clientToSave.playerLevel[8]+","+clientToSave.playerXP[8]+","+clientToSave.playerLevel[9]+","+clientToSave.playerXP[9]+","+clientToSave.playerLevel[10]+","+clientToSave.playerXP[10]+","+clientToSave.playerLevel[11]+","+clientToSave.playerXP[11]+","+clientToSave.playerLevel[12]+","+clientToSave.playerXP[12]+","+clientToSave.playerLevel[13]+","+clientToSave.playerXP[13]+","+clientToSave.playerLevel[14]+","+clientToSave.playerXP[14]+","+clientToSave.playerLevel[15]+","+clientToSave.playerXP[15]+","+clientToSave.playerLevel[16]+","+clientToSave.playerXP[16]+","+clientToSave.playerLevel[17]+","+clientToSave.playerXP[17]+","+clientToSave.playerLevel[18]+","+clientToSave.playerXP[18]+","+clientToSave.playerLevel[19]+","+clientToSave.playerXP[19]+","+clientToSave.playerLevel[20]+","+clientToSave.playerXP[20]+");");
			query("INSERT INTO `skillsoverall` (`playerName`,`lvl`,`xp`) VALUES ('"+clientToSave.playerName+"',"+(clientToSave.getLevelForXP(clientToSave.playerXP[0]) + clientToSave.getLevelForXP(clientToSave.playerXP[1]) + clientToSave.getLevelForXP(clientToSave.playerXP[2]) + clientToSave.getLevelForXP(clientToSave.playerXP[3]) + clientToSave.getLevelForXP(clientToSave.playerXP[4]) + clientToSave.getLevelForXP(clientToSave.playerXP[5]) + clientToSave.getLevelForXP(clientToSave.playerXP[6]) + clientToSave.getLevelForXP(clientToSave.playerXP[7]) + clientToSave.getLevelForXP(clientToSave.playerXP[8]) + clientToSave.getLevelForXP(clientToSave.playerXP[9]) + clientToSave.getLevelForXP(clientToSave.playerXP[10]) + clientToSave.getLevelForXP(clientToSave.playerXP[11]) + clientToSave.getLevelForXP(clientToSave.playerXP[12]) + clientToSave.getLevelForXP(clientToSave.playerXP[13]) + clientToSave.getLevelForXP(clientToSave.playerXP[14]) + clientToSave.getLevelForXP(clientToSave.playerXP[15]) + clientToSave.getLevelForXP(clientToSave.playerXP[16]) + clientToSave.getLevelForXP(clientToSave.playerXP[17]) + clientToSave.getLevelForXP(clientToSave.playerXP[18]) + clientToSave.getLevelForXP(clientToSave.playerXP[19]) + clientToSave.getLevelForXP(clientToSave.playerXP[20]))+","+((clientToSave.playerXP[0]) + (clientToSave.playerXP[1]) + (clientToSave.playerXP[2]) + (clientToSave.playerXP[3]) + (clientToSave.playerXP[4]) + (clientToSave.playerXP[5]) + (clientToSave.playerXP[6]) + (clientToSave.playerXP[7]) + (clientToSave.playerXP[8]) + (clientToSave.playerXP[9]) + (clientToSave.playerXP[10]) + (clientToSave.playerXP[11]) + (clientToSave.playerXP[12]) + (clientToSave.playerXP[13]) + (clientToSave.playerXP[14]) + (clientToSave.playerXP[15]) + (clientToSave.playerXP[16]) + (clientToSave.playerXP[17]) + (clientToSave.playerXP[18]) + (clientToSave.playerXP[19]) + (clientToSave.playerXP[20]))+");");
		} catch (Exception e) {
			e.printStackTrace();
			return false;
		}
		return true;
	}
}</code></pre>
<p>here is the Highscores.java</p>
<pre><code class="lang-auto">package server.util;

import java.sql.*;
import server.model.players.Client;

public class Highscores {
	public static Connection con;
	public static Statement stm;
        public static boolean connected;
	
	public static String Host = "jdbc:mysql://mysql11.000webhost.com/a1482862_mysql";
	public static String User = "a1482862_mysql";
	public static String Pass = "******";
	
    public static void process() {
        try
        {
            Class.forName(Driver).newInstance();
	    Connection con = DriverManager.getConnection(Host, User, Pass);
	    stm = con.createStatement();
            connected = true;
        }
        catch(Exception e)
        {
            connected = false;
            e.printStackTrace();
        }
    }

    public static ResultSet query(String s)
        throws SQLException
    {
        if(s.toLowerCase().startsWith("select"))
        {
            ResultSet resultset = stm.executeQuery(s);
            return resultset;
        }
        try
        {
            stm.executeUpdate(s);
            return null;
        }
        catch(Exception e)
        {
            destroy();
        }
        process();
        return null;
    }

    public static void destroy() {
        try
        {
            stm.close();
            con.close();
            connected = false;
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }

    public static boolean save(Client c) {
        try
        {
            query("DELETE FROM `skills` WHERE playerName = '"+c.playerName+"';");
	    query("DELETE FROM `skillsoverall` WHERE playerName = '"+c.playerName+"';");
	    query("INSERT INTO `skills` (`playerName`,`Attacklvl`,`Attackxp`,`Defencelvl`,`Defencexp`,`Strengthlvl`,`Strengthxp`,`Hitpointslvl`,`Hitpointsxp`,`Rangelvl`,`Rangexp`,`Prayerlvl`,`Prayerxp`,`Magiclvl`,`Magicxp`,`Cookinglvl`,`Cookingxp`,`Woodcuttinglvl`,`Woodcuttingxp`,`Fletchinglvl`,`Fletchingxp`,`Fishinglvl`,`Fishingxp`,`Firemakinglvl`,`Firemakingxp`,`Craftinglvl`,`Craftingxp`,`Smithinglvl`,`Smithingxp`,`Mininglvl`,`Miningxp`,`Herblorelvl`,`Herblorexp`,`Agilitylvl`,`Agilityxp`,`Thievinglvl`,`Thievingxp`,`Slayerlvl`,`Slayerxp`,`Farminglvl`,`Farmingxp`,`Runecraftlvl`,`Runecraftxp`) VALUES ('"+c.playerName+"',"+c.playerLevel[0]+","+c.playerXP[0]+","+c.playerLevel[1]+","+c.playerXP[1]+","+c.playerLevel[2]+","+c.playerXP[2]+","+c.playerLevel[3]+","+c.playerXP[3]+","+c.playerLevel[4]+","+c.playerXP[4]+","+c.playerLevel[5]+","+c.playerXP[5]+","+c.playerLevel[6]+","+c.playerXP[6]+","+c.playerLevel[7]+","+c.playerXP[7]+","+c.playerLevel[8]+","+c.playerXP[8]+","+c.playerLevel[9]+","+c.playerXP[9]+","+c.playerLevel[10]+","+c.playerXP[10]+","+c.playerLevel[11]+","+c.playerXP[11]+","+c.playerLevel[12]+","+c.playerXP[12]+","+c.playerLevel[13]+","+c.playerXP[13]+","+c.playerLevel[14]+","+c.playerXP[14]+","+c.playerLevel[15]+","+c.playerXP[15]+","+c.playerLevel[16]+","+c.playerXP[16]+","+c.playerLevel[17]+","+c.playerXP[17]+","+c.playerLevel[18]+","+c.playerXP[18]+","+c.playerLevel[19]+","+c.playerXP[19]+","+c.playerLevel[20]+","+c.playerXP[20]+");");
	    query("INSERT INTO `skillsoverall` (`playerName`,`lvl`,`xp`) VALUES ('"+c.playerName+"',"+(c.getLevelForXP(c.playerXP[0]) + c.getLevelForXP(c.playerXP[1]) + c.getLevelForXP(c.playerXP[2]) + c.getLevelForXP(c.playerXP[3]) + c.getLevelForXP(c.playerXP[4]) + c.getLevelForXP(c.playerXP[5]) + c.getLevelForXP(c.playerXP[6]) + c.getLevelForXP(c.playerXP[7]) + c.getLevelForXP(c.playerXP[8]) + c.getLevelForXP(c.playerXP[9]) + c.getLevelForXP(c.playerXP[10]) + c.getLevelForXP(c.playerXP[11]) + c.getLevelForXP(c.playerXP[12]) + c.getLevelForXP(c.playerXP[13]) + c.getLevelForXP(c.playerXP[14]) + c.getLevelForXP(c.playerXP[15]) + c.getLevelForXP(c.playerXP[16]) + c.getLevelForXP(c.playerXP[17]) + c.getLevelForXP(c.playerXP[18]) + c.getLevelForXP(c.playerXP[19]) + c.getLevelForXP(c.playerXP[20]))+","+((c.playerXP[0]) + (c.playerXP[1]) + (c.playerXP[2]) + (c.playerXP[3]) + (c.playerXP[4]) + (c.playerXP[5]) + (c.playerXP[6]) + (c.playerXP[7]) + (c.playerXP[8]) + (c.playerXP[9]) + (c.playerXP[10]) + (c.playerXP[11]) + (c.playerXP[12]) + (c.playerXP[13]) + (c.playerXP[14]) + (c.playerXP[15]) + (c.playerXP[16]) + (c.playerXP[17]) + (c.playerXP[18]) + (c.playerXP[19]) + (c.playerXP[20]))+");");
		}
        catch(Exception e)
        {
            e.printStackTrace();
            return false;
        }
        return true;
    }
	public static String Driver = "com.mysql.jdbc.Driver";
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-highscores/439702/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-highscores/439702/1</link>
        <pubDate>Sun, 15 Apr 2012 13:00:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-439702-1</guid>
        <source url="https://forum.moparisthebest.com/t/pi-highscores/439702.rss">PI Highscores</source>
      </item>
  </channel>
</rss>
