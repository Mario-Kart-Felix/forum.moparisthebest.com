<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Tic-Tac-Toe [HTML]</title>
    <link>https://forum.moparisthebest.com/t/tic-tac-toe-html/423138</link>
    <description>[code=HTML]&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Tic-Tac-Toe&lt;/title&gt;
&lt;meta name=&quot;description&quot; content=&quot;The game of Tic-Tac-Toe written in JavaScript to be played in the web browser, with computer challengers of varying skill.&quot;&gt;
&lt;meta name=&quot;keywords&quot; content=&quot;tic-tac-toe javascript, javascript tic-tac-toe, tic-tac-toe, tictactoe, game of tic-tac-toe&quot;&gt;
&lt;link rel=&quot;shortcut icon&quot; href=&quot;http://ostermiller.org/favicon.ico&quot; type=&quot;image/x-icon&quot;&gt;
 
&lt;script type=&quot;text/javascript&quot; language=javascript&gt;&lt;!--
var turn = -1;
var xWon = 0;
var oWon = 0;
var catsGame = 0;
var cells;
function makeCells(){
    var b = document.board;
    cells = new Array(b.c1,b.c2,b.c3,b.c4,b.c5,b.c6,b.c7,b.c8,b.c9)
}
 
function loadStats(){
    var cookie = getCookie(&#39;tictactoeStats&#39;);
    if (cookie != null &amp;&amp; cookie.length &gt; 1){
        var stats = cookie.substring(1,cookie.length);
        if (stats != null){
            var statsSplit = stats.split(&#39;:&#39;);
            var temp;
            if (statsSplit.length == 3){
                var re = new RegExp(&quot;^([0-9]*)$&quot;);
                if (re.test(statsSplit[0])) xWon = eval(statsSplit[0]);
                if (re.test(statsSplit[1])) oWon = eval(statsSplit[1]);
                if (re.test(statsSplit[2])) catsGame = eval(statsSplit[2]);
                drawStats();
            }
        }
    }
}
 
function nextTurn(){
    turn = -turn;
    if (turn == 1){
        if(document.board.p1.selectedIndex == 1) beginnerMove();
        if(document.board.p1.selectedIndex == 2) intermediateMove();
        if(document.board.p1.selectedIndex == 3) experiencedMove();
        if(document.board.p1.selectedIndex == 4) perfectMove();
    } else {
        if(document.board.p2.selectedIndex == 1) beginnerMove();
        if(document.board.p2.selectedIndex == 2) intermediateMove();
        if(document.board.p2.selectedIndex == 3) experiencedMove();
        if(document.board.p2.selectedIndex == 4) perfectMove();
    }
}
 
function getLegalMoves(state){
    var moves = 0;
    for (var i=0; i&lt;9; i++){
        if ((state &amp; (1&lt;&lt;(i*2+1))) == 0){
            moves |= 1 &lt;&lt; i;
        }
    }
    return moves;
}
 
function moveRandom(moves){
    var numMoves = 0;
    for (var i=0; i&lt;9; i++){
        if ((moves &amp; (1&lt;&lt;i)) != 0) numMoves++;
    }
    if (numMoves &gt; 0){
        var moveNum = Math.ceil(Math.random()*numMoves);
        numMoves = 0;
        for (var j=0; j&lt;9; j++){
            if ((moves &amp; (1&lt;&lt;j)) != 0) numMoves++;
            if (numMoves == moveNum){
                move(cells[j]);
                return;
            }
        }
    }
}
 
function openingBook(state){
    var mask = state &amp; 0x2AAAA;	
    if (mask == 0x00000) return 0x1FF;
	if (mask == 0x00200) return 0x145;
    if (mask == 0x00002 ||
        mask == 0x00020 ||
        mask == 0x02000 ||
        mask == 0x20000) return 0x010;
    if (mask == 0x00008) return 0x095;
    if (mask == 0x00080) return 0x071;
    if (mask == 0x00800) return 0x11C;
    if (mask == 0x08000) return 0x152;
    return 0;
}
 
function perfectMove(){
    var state = getState();
    var winner = detectWin(state);
    if (winner == 0){
        var moves = getLegalMoves(state);
        var hope = -999;
        var goodMoves = openingBook(state);
        if (goodMoves == 0){
            for (var i=0; i&lt;9; i++){
                if ((moves &amp; (1&lt;&lt;i)) != 0) {
                    var value = moveValue(state, i, turn, turn, 15, 1);
                    if (value &gt; hope){
                        hope = value;
                        goodMoves = 0;
                    }
                    if (hope == value){
                        goodMoves |= (1&lt;&lt;i);
                    }
                }
            }
        }
        moveRandom(goodMoves);
    }
}
 
function moveValue(istate, move, moveFor, nextTurn, limit, depth){
    var state = stateMove(istate, move, nextTurn);
    var winner = detectWin(state);
    if ((winner &amp; 0x300000) == 0x300000){
        return 0;
    } else if (winner != 0){
        if (moveFor == nextTurn) return 10 - depth;
        else return depth - 10;
    }
    var hope = 999;
    if (moveFor != nextTurn) hope = -999;
    if(depth == limit) return hope;
    var moves = getLegalMoves(state);
    for (var i=0; i&lt;9; i++){
        if ((moves &amp; (1&lt;&lt;i)) != 0) {
            var value = moveValue(state, i, moveFor, -nextTurn, 10-Math.abs(hope), depth+1);
            if (Math.abs(value) != 999){
                if (moveFor == nextTurn &amp;&amp; value &lt; hope){
                    hope = value;
                } else if (moveFor != nextTurn &amp;&amp; value &gt; hope){
                    hope = value;
                }
            }
        }
    }
    return hope;
}
 
function detectWinMove(state, cellNum, nextTurn){
    var value = 0x3;
    if (nextTurn == -1) value = 0x2;
    var newState = state | (value &lt;&lt; cellNum*2);
    return detectWin(newState);
}
 
function beginnerMove(){
    var state = getState();
    var winner = detectWin(state);
    if (winner == 0) moveRandom(getLegalMoves(state));
}
 
function getGoodMove(state){
	var moves = getLegalMoves(state);
    for (var i=0; i&lt;9; i++){
        if ((moves &amp; (1&lt;&lt;i)) != 0) {
            if (detectWinMove(state, i, turn)){
                move(cells[i]);
                return 0;
            }
        }
    }
    for (var j=0; j&lt;9; j++){
        if ((moves &amp; (1&lt;&lt;j)) != 0) {
            if (detectWinMove(state, j, -turn)){
                move(cells[j]);
                return 0;
            }
        }
    }
    return moves;
}
 
 
function intermediateMove(){
    var state = getState();
    var winner = detectWin(state);
    if (winner == 0) {
        moveRandom(getGoodMove(state));
    }
}
 
function experiencedMove(){
    var state = getState();
    var winner = detectWin(state);
    if (winner == 0) {
        var moves = openingBook(state);
        if (state == 0) moves = 0x145;
        if (moves == 0) moves = getGoodMove(state);
        moveRandom(moves);
    }
}
 
function getState(){
    var state = 0;
    for (var i=0; i&lt;9; i++){
        var cell = cells[i];
        var value = 0;
        if (cell.value.indexOf(&#39;X&#39;) != -1) value = 0x3;
        if (cell.value.indexOf(&#39;O&#39;) != -1) value = 0x2;
        state |= value &lt;&lt; (i*2);
    }
    return state;
}
 
function detectWin(state){
    if ((state &amp; 0x3F000) == 0x3F000) return 0x13F000;
    if ((state &amp; 0x3F000) == 0x2A000) return 0x22A000;
    if ((state &amp; 0x00FC0) == 0x00FC0) return 0x100FC0;
    if ((state &amp; 0x00FC0) == 0x00A80) return 0x200A80;
    if ((state &amp; 0x0003F) == 0x0003F) return 0x10003F;
    if ((state &amp; 0x0003F) == 0x0002A) return 0x20002A;
    if ((state &amp; 0x030C3) == 0x030C3) return 0x1030C3;
    if ((state &amp; 0x030C3) == 0x02082) return 0x202082;
    if ((state &amp; 0x0C30C) == 0x0C30C) return 0x10C30C;
    if ((state &amp; 0x0C30C) == 0x08208) return 0x208208;
    if ((state &amp; 0x30C30) == 0x30C30) return 0x130C30;
    if ((state &amp; 0x30C30) == 0x20820) return 0x220820;
    if ((state &amp; 0x03330) == 0x03330) return 0x103330;
    if ((state &amp; 0x03330) == 0x02220) return 0x202220;
    if ((state &amp; 0x30303) == 0x30303) return 0x130303;
    if ((state &amp; 0x30303) == 0x20202) return 0x220202;
    if ((state &amp; 0x2AAAA) == 0x2AAAA) return 0x300000;
    return 0;
}
 
function recordWin(winner){
    if ((winner &amp; 0x300000) == 0x100000){
        xWon++;
    } else if ((winner &amp; 0x300000) == 0x200000){
        oWon++;
    } else if ((winner &amp; 0x300000) == 0x300000){
        catsGame++;
    }
    drawStats();
}
 
function drawStats(){
    var b = document.board;
	var totalGames = xWon + oWon + catsGame;
    b.xWon.value = xWon;
    b.oWon.value = oWon;
    b.catsGame.value = catsGame;
	b.xWonPer.value = ((xWon==0)?0:(Math.round(xWon * 1000 / totalGames) / 10)) + &#39;%&#39;;
    b.oWonPer.value = ((oWon==0)?0:(Math.round(oWon * 1000 / totalGames) / 10)) + &#39;%&#39;;
    b.catsGamePer.value = ((catsGame==0)?0:(Math.round(catsGame * 1000 / totalGames) / 10)) + &#39;%&#39;;
    var cookie = &#39;:&#39; + xWon + &#39;:&#39; + oWon + &#39;:&#39; + catsGame;
    var expires = new Date();
    // cookie expires in one year
    expires.setTime(expires.getTime() + 365 * 24 * 60 * 60 * 1000);
    document.cookie = (
        &#39;tictactoeStats&#39; + &#39;=&#39; +
        escape(cookie) +
        &#39;; expires=&#39; + expires.toGMTString()
    );
}
 
function clearStats(){
	xWon = 0;
    oWon = 0;
    catsGame = 0;
    drawStats();
}
 
function drawState(state){
    var winner = detectWin(state);
    if ((winner &amp; 0x300000) != 0){
        if ((winner &amp; 0x300000) == 0x100000){
            xWon++;
        } else if ((winner &amp; 0x300000) == 0x200000){
            oWon++;
        } else {
            catsGame++;
        }
        drawStats();
    }
    for (var i=0; i&lt;9; i++){
        var value = &#39;&#39;;
        if ((state &amp; (1&lt;&lt;(i*2+1))) != 0){
            if ((state &amp; (1&lt;&lt;(i*2))) != 0){
                value = &#39;X&#39;;
            } else {
                value = &#39;O&#39;;
            }
        }
        if ((winner &amp; (1&lt;&lt;(i*2+1))) != 0){
            if (cells[i].style){
                cells[i].style.backgroundColor=&#39;red&#39;;
            } else {
                value = &#39;*&#39; + value + &#39;*&#39;;
            }
        } else {
            if (cells[i].style){
                cells[i].style.backgroundColor=&#39;green&#39;;
            }
        }
        cells[i].value = value;
    }
}
 
function stateMove(state, move, nextTurn){
    var value = 0x3;
    if (nextTurn == -1) value = 0x2;
    return (state | (value &lt;&lt; (move*2)));
}
 
function move(cell){
    if (cell.value == &#39;&#39;){
        var state = getState();
        var winner = detectWin(state);
        if (winner == 0){
            for (var i=0; i&lt;9; i++){
                if (cells[i] == cell){
                    state = stateMove(state, i, turn);
                }
            }
            drawState(state);
            nextTurn();
        }
    }
}
function countMoves(state){
    var count = 0;
    for (var i=0; i&lt;9; i++){
        if ((state &amp; (1&lt;&lt;(i*2+1))) != 0){
           count++;
        }
    }
    return count;
}
 
function newGame(){
    var state = getState();
    var winner = detectWin(state);
    if (winner == 0 &amp;&amp; countMoves(state) &gt; 1){
        if (turn == 1) oWon++;
        else xWon++;
        drawStats();
    }
    drawState(0);
    if (document.board.firstMove[0].checked==&#39;1&#39;){
        turn = -1;
    } else {
        turn = 1;
    }
    nextTurn();
}
 
function getCookie(name) {
  var prefix = name + &quot;=&quot;;
  var begin = document.cookie.indexOf(&quot;; &quot; + prefix);
  if (begin == -1) {
    begin = document.cookie.indexOf(prefix);
    if (begin != 0) return null;
  } else
    begin += 2;
  var end = document.cookie.indexOf(&quot;;&quot;, begin);
  if (end == -1)
    end = document.cookie.length;
  return unescape(document.cookie.substring(begin + prefix.length, end));
}
//--&gt;&lt;/script&gt;
&lt;style type=&quot;text/css&quot;&gt; 
body {
 color:black;
 background-color:white;
 font-family:Tahoma,Verdana,Helvetica,Arial,sans-serif;
}
.cell {
 background-color:green;
 color:white;
 font-size:2cm;
 font-family:Courier New,Courier,monospaced;
 font-weight:bold;
}
input.cell {
 border:none;
 width:2cm;
 vertical-align:bottom;
}
td.cell {
 border:thick green outset;
}
.board {
 border:thin black ridge;
 background-color:green;
 margin-right:1cm;
}
.winstat {
 color:black;
 background-color:white;
 border:none;
}
.player {
 font-family:Courier New,Courier,monospaced;
 font-weight:bold;
 font-size:150%;
}
&lt;/style&gt;
 
&lt;/head&gt;
&lt;body onload=&quot;makeCells();loadStats();newGame();&quot;&gt;
 
&lt;noscript&gt;&lt;p style=&quot;color:red;&quot;&gt;You must enable javascript to be able to play tic-tac-toe.&lt;/p&gt;&lt;/noscript&gt;
&lt;form name=board onsubmit=&quot;return false;&quot;&gt;
&lt;table border=0&gt;&lt;tr&gt;&lt;td valign=top&gt;
&lt;table align=left class=board cellspacing=6&gt;
&lt;tr&gt;
 &lt;td class=cell&gt;&lt;input class=cell name=c7 type=button accesskey=7 onclick=&quot;move(this);&quot;&gt;&lt;/td&gt;
 &lt;td class=cell&gt;&lt;input class=cell name=c8 type=button accesskey=8 onclick=&quot;move(this);&quot;&gt;&lt;/td&gt;
 &lt;td class=cell&gt;&lt;input class=cell name=c9 type=button accesskey=9 onclick=&quot;move(this);&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;
 &lt;td class=cell&gt;&lt;input class=cell name=c4 type=button accesskey=4 onclick=&quot;move(this);&quot;&gt;&lt;/td&gt;
 &lt;td class=cell&gt;&lt;input class=cell name=c5 type=button accesskey=5 onclick=&quot;move(this);&quot;&gt;&lt;/td&gt;
 &lt;td class=cell&gt;&lt;input class=cell name=c6 type=button accesskey=6 onclick=&quot;move(this);&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;
 &lt;td class=cell&gt;&lt;input class=cell name=c1 type=button accesskey=1 onclick=&quot;move(this);&quot;&gt;&lt;/td&gt;
 &lt;td class=cell&gt;&lt;input class=cell name=c2 type=button accesskey=2 onclick=&quot;move(this);&quot;&gt;&lt;/td&gt;
 &lt;td class=cell&gt;&lt;input class=cell name=c3 type=button accesskey=3 onclick=&quot;move(this);&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/td&gt;&lt;td valign=top&gt;
&lt;h1&gt;Tic-Tac-Toe&lt;/h1&gt;
&lt;table border=1 cellpadding=3&gt;
&lt;tr&gt;
&lt;th&gt;Player&lt;/th&gt;
&lt;th&gt;First&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Wins&lt;/th&gt;
&lt;th&gt;Record&lt;/th&gt;
&lt;/tr&gt;&lt;tr&gt;
&lt;th class=player&gt;X&lt;/th&gt;
&lt;td&gt;&lt;input type=radio name=firstMove value=X checked onchange=&quot;newGame();&quot;&gt;&lt;/td&gt;
&lt;td&gt;&lt;select name=p1 onchange=&quot;newGame()&quot;&gt;
&lt;option value=1 selected&gt;Human
&lt;option value=2&gt;Novice
&lt;option value=3&gt;Intermediate
&lt;option value=4&gt;Experienced
&lt;option value=5&gt;Expert
&lt;/select&gt;&lt;/td&gt;
&lt;td align=right&gt;&lt;input type=button name=xWon class=winstat value=&quot;0&quot;&gt;&lt;/td&gt;
&lt;td align=right&gt;&lt;input type=button name=xWonPer class=winstat value=&quot;0%&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;
&lt;th class=player&gt;O&lt;/th&gt;
&lt;td&gt;&lt;input type=radio name=firstMove value=O onchange=&quot;newGame();&quot;&gt;&lt;/td&gt;
&lt;td&gt;&lt;select name=p2 onchange=&quot;newGame()&quot;&gt;
&lt;option value=1&gt;Human
&lt;option value=2&gt;Novice
&lt;option value=3 selected&gt;Intermediate
&lt;option value=4&gt;Experienced
&lt;option value=5&gt;Expert
&lt;/select&gt;&lt;/td&gt;
&lt;td align=right&gt;&lt;input type=button name=oWon class=winstat value=&quot;0&quot;&gt;&lt;/td&gt;
&lt;td align=right&gt;&lt;input type=button name=oWonPer class=winstat value=&quot;0&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;tr&gt;
&lt;th&gt;Cat&lt;/th&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align=right&gt;&lt;input type=button name=catsGame class=winstat value=&quot;0&quot;&gt;&lt;/td&gt;
&lt;td align=right&gt;&lt;input type=button name=catsGamePer class=winstat value=&quot;0&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;p align=right&gt;&lt;input type=button name=newgame value=&quot;Clear Stats&quot; accesskey=c onclick=&quot;clearStats();&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;input type=button name=newgame value=&quot;New Game&quot; accesskey=n onclick=&quot;newGame();&quot;&gt;&lt;p&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/form&gt;
 
&lt;h3&gt;By Zandor&lt;/h3&gt;
 
&lt;/body&gt;
&lt;/html&gt;[/code]


Enjoy! 

If you use this for anything, give me the appropriate credit.

And as the title says, this code HTML.</description>
    
    <lastBuildDate>Sun, 27 Nov 2011 05:12:08 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/tic-tac-toe-html/423138.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Tic-Tac-Toe [HTML]</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p><a href="http://ostermiller.org/calc/tictactoe.html" class="onebox" target="_blank">http://ostermiller.org/calc/tictactoe.html</a></p>
<p>Seriously, it was the first result on google.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tic-tac-toe-html/423138/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tic-tac-toe-html/423138/2</link>
        <pubDate>Sun, 27 Nov 2011 05:12:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-423138-2</guid>
        <source url="https://forum.moparisthebest.com/t/tic-tac-toe-html/423138.rss">Tic-Tac-Toe [HTML]</source>
      </item>
      <item>
        <title>Tic-Tac-Toe [HTML]</title>
        <dc:creator><![CDATA[@Method Method_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/method">@Method</a> wrote:</p>
          <blockquote>
              <p>[code=HTML]</p>


Tic-Tac-Toe




 
body {
 color:black;
 background-color:white;
 font-family:Tahoma,Verdana,Helvetica,Arial,sans-serif;
}
.cell {
 background-color:green;
 color:white;
 font-size:2cm;
 font-family:Courier New,Courier,monospaced;
 font-weight:bold;
}
input.cell {
 border:none;
 width:2cm;
 vertical-align:bottom;
}
td.cell {
 border:thick green outset;
}
.board {
 border:thin black ridge;
 background-color:green;
 margin-right:1cm;
}
.winstat {
 color:black;
 background-color:white;
 border:none;
}
.player {
 font-family:Courier New,Courier,monospaced;
 font-weight:bold;
 font-size:150%;
}



<p></p><p>You must enable javascript to be able to play tic-tac-toe.</p>

<table><tr>
<td>
<table>
<tr>
 <td></td>
 <td></td>
 <td></td>
</tr>
<tr>
 <td></td>
 <td></td>
 <td></td>
</tr>
<tr>
 <td></td>
 <td></td>
 <td></td>
</tr>
</table>
</td>
<td>
<h1>Tic-Tac-Toe</h1>
<table>
<tr>
<th>Player</th>
<th>First</th>
<th>Type</th>
<th>Wins</th>
<th>Record</th>
</tr>
<tr>
<th>X</th>
<td></td>
<td>
Human
Novice
Intermediate
Experienced
Expert
</td>
<td></td>
<td></td>
</tr>
<tr>
<th>O</th>
<td></td>
<td>
Human
Novice
Intermediate
Experienced
Expert
</td>
<td></td>
<td></td>
</tr>
<tr>
<th>Cat</th>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</table>
<p></p>
<p></p>
<p>
</p>
</td>
</tr></table>

<h3>By Zandor</h3>

[/code]
<p>Enjoy!</p>
<p>If you use this for anything, give me the appropriate credit.</p>
<p>And as the title says, this code HTML.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tic-tac-toe-html/423138/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tic-tac-toe-html/423138/1</link>
        <pubDate>Sun, 27 Nov 2011 04:52:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-423138-1</guid>
        <source url="https://forum.moparisthebest.com/t/tic-tac-toe-html/423138.rss">Tic-Tac-Toe [HTML]</source>
      </item>
  </channel>
</rss>
