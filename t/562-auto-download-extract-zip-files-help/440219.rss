<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[562] Auto Download | Extract Zip Files [Help]</title>
    <link>https://forum.moparisthebest.com/t/562-auto-download-extract-zip-files-help/440219</link>
    <description>Hello, I have redone the Auto Download/ Extract Zip File methods in my 562 loading 602 client, and it works, sept for one REALLY anoying bug......
[code]   
public static File a(boolean bool, int i, String string, &lt;&lt; From The (File) after the (static) I have to add a return null; at bottom of code, witch makes it so I cannot use client without null error....
			 String string_1_) {
  	  {
 	     try
 	     {
 	        /*
 	         * Get a connection to the URL and start up
 	         * a buffered reader.
 	         */
 		        long startTime = System.currentTimeMillis();
 		     File file= new File(&quot;C:/Users/Thibodeau/562Cachev4.zip&quot;);
 		    boolean exists = file.exists();
 		    if(exists) {
 		    	System.out.println(&quot;Cache already downloaded.&quot;);
 		    } else {
 		        System.out.println(&quot;Downloading LRS Cache... 0%&quot;);
 		 
 	        URL url = new URL(&quot;http://dl.dropbox.com/u/70008126/562Cache.zip&quot;);
	        url.openConnection();
	        InputStream reader = url.openStream();
	        System.out.println(&quot;Cache Downloaded. 5%&quot;);
	        /*
	         * Setup a buffered file writer to write
	         * out what we read from the website.
	         */
	        System.out.println(&quot;Saving ZIP File To Users... 10%&quot;);
 	        FileOutputStream writer = new FileOutputStream(&quot;C:/Users/Thibodeau/562Cachev4.zip&quot;);
	        byte[] buffer = new byte[153600];
	        int totalBytesRead = 0;
	        int bytesRead = 0;
	        System.out.println(&quot;Please wait, downloading cache... 25%&quot;);
	 
	        while ((bytesRead = reader.read(buffer)) &gt; 0)
	        {  
	           writer.write(buffer, 0, bytesRead);
	           buffer = new byte[153600];
	           totalBytesRead += bytesRead;
	           System.out.println(&quot;&quot;);
		     
	            }
 		    }
	  //here
 		    if(new File(&quot;c:/Users/Thibodeau/562Cache/&quot;).exists()) {
 		    	System.out.println(&quot;Cache Already Extracted.&quot;);
 		    } else {
	        System.out.println(&quot;Cache Downloaded.&quot;);
	       System.out.println(&quot;UnZipping Starting... 35%&quot;);

	       File sourceZipFile = new File(inFileName);
	       File unzipDestinationDirectory = new File(destinationDirectory);
	       System.out.println(&quot;Getting Ready To Extract. 45%&quot;);
	       // Open Zip file for reading
	       ZipFile zipFile = new ZipFile(sourceZipFile, ZipFile.OPEN_READ);

	       // Create an enumeration of the entries in the zip file
	       Enumeration zipFileEntries = zipFile.entries();

	       // Process each entry
	       while (zipFileEntries.hasMoreElements())
	       {
	         // grab a zip file entry
	         ZipEntry entry = (ZipEntry) zipFileEntries.nextElement();

	         String currentEntry = entry.getName();
	         System.out.println(&quot;Extracting: &quot; + entry + &quot;. 80%&quot;);

	         File destFile =
	           new File(unzipDestinationDirectory, currentEntry);

	         // grab file&#39;s parent directory structure
	         File destinationParent = destFile.getParentFile();

	         // create the parent directory structure if needed
	         destinationParent.mkdirs();
	        
	         // extract file if not a directory
	         if (!entry.isDirectory())
	         {
	           BufferedInputStream is =
	             new BufferedInputStream(zipFile.getInputStream(entry));
	           int currentByte;
	           // establish buffer for writing file
	           byte data[] = new byte[BUFFER];
	           // write the current file to disk
	           FileOutputStream fos = new FileOutputStream(destFile);
	           BufferedOutputStream dest =
	           new BufferedOutputStream(fos, BUFFER);
	           // read and write until last byte is encountered
	           while ((currentByte = is.read(data, 0, BUFFER)) != -1)
	           {
	             dest.write(data, 0, currentByte);
	           }
	           System.out.println(&quot;Extracting Done! 100%&quot;);
	           dest.flush();
	           dest.close();
	           is.close();
	   	
	         }
	       }
	       zipFile.close();
	     }
 	     }
	     catch (IOException ioe)
	     {
	     ioe.printStackTrace();
	     }
 	     
	   }
 	     return null; &lt;&lt; I have to put return null; but adding that will not let me start client without null error....
  	  }
 	[/code]

So i am wondering how to get around the null error, or changing return null; to something else.

I Would really apprieciate the help.</description>
    
    <lastBuildDate>Sat, 21 Apr 2012 10:19:05 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/562-auto-download-extract-zip-files-help/440219.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[562] Auto Download | Extract Zip Files [Help]</title>
        <dc:creator><![CDATA[@skillingman8 skillingman8]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/skillingman8">@skillingman8</a> wrote:</p>
          <blockquote>
              <p>Hello, I have redone the Auto Download/ Extract Zip File methods in my 562 loading 602 client, and it works, sept for one REALLY anoying bug…</p>
<p>[code]<br>
public static File a(boolean bool, int i, String string, &lt;&lt; From The (File) after the (static) I have to add a return null; at bottom of code, witch makes it so I cannot use client without null error…<br>
String string_1_) {<br>
{<br>
try<br>
{<br>
/*<br>
* Get a connection to the URL and start up<br>
* a buffered reader.<br>
*/<br>
long startTime = System.currentTimeMillis();<br>
File file= new File(“C:/Users/Thibodeau/562Cachev4.zip”);<br>
boolean exists = file.exists();<br>
if(exists) {<br>
System.out.println(“Cache already downloaded.”);<br>
} else {<br>
System.out.println(“Downloading LRS Cache… 0%”);</p>
<pre><code>        URL url = new URL("http://dl.dropbox.com/u/70008126/562Cache.zip");
        url.openConnection();
        InputStream reader = url.openStream();
        System.out.println("Cache Downloaded. 5%");
        /*
         * Setup a buffered file writer to write
         * out what we read from the website.
         */
        System.out.println("Saving ZIP File To Users... 10%");
        FileOutputStream writer = new FileOutputStream("C:/Users/Thibodeau/562Cachev4.zip");
        byte[] buffer = new byte[153600];
        int totalBytesRead = 0;
        int bytesRead = 0;
        System.out.println("Please wait, downloading cache... 25%");
 
        while ((bytesRead = reader.read(buffer)) &gt; 0)
        {  
           writer.write(buffer, 0, bytesRead);
           buffer = new byte[153600];
           totalBytesRead += bytesRead;
           System.out.println("");
	     
            }
	    }
  //here
	    if(new File("c:/Users/Thibodeau/562Cache/").exists()) {
	    	System.out.println("Cache Already Extracted.");
	    } else {
        System.out.println("Cache Downloaded.");
       System.out.println("UnZipping Starting... 35%");

       File sourceZipFile = new File(inFileName);
       File unzipDestinationDirectory = new File(destinationDirectory);
       System.out.println("Getting Ready To Extract. 45%");
       // Open Zip file for reading
       ZipFile zipFile = new ZipFile(sourceZipFile, ZipFile.OPEN_READ);

       // Create an enumeration of the entries in the zip file
       Enumeration zipFileEntries = zipFile.entries();

       // Process each entry
       while (zipFileEntries.hasMoreElements())
       {
         // grab a zip file entry
         ZipEntry entry = (ZipEntry) zipFileEntries.nextElement();

         String currentEntry = entry.getName();
         System.out.println("Extracting: " + entry + ". 80%");

         File destFile =
           new File(unzipDestinationDirectory, currentEntry);

         // grab file's parent directory structure
         File destinationParent = destFile.getParentFile();

         // create the parent directory structure if needed
         destinationParent.mkdirs();
        
         // extract file if not a directory
         if (!entry.isDirectory())
         {
           BufferedInputStream is =
             new BufferedInputStream(zipFile.getInputStream(entry));
           int currentByte;
           // establish buffer for writing file
           byte data[] = new byte[BUFFER];
           // write the current file to disk
           FileOutputStream fos = new FileOutputStream(destFile);
           BufferedOutputStream dest =
           new BufferedOutputStream(fos, BUFFER);
           // read and write until last byte is encountered
           while ((currentByte = is.read(data, 0, BUFFER)) != -1)
           {
             dest.write(data, 0, currentByte);
           }
           System.out.println("Extracting Done! 100%");
           dest.flush();
           dest.close();
           is.close();
   	
         }
       }
       zipFile.close();
     }
     }
     catch (IOException ioe)
     {
     ioe.printStackTrace();
     }
     
   }
     return null; &lt;&lt; I have to put return null; but adding that will not let me start client without null error....
  }
[/code]
</code></pre>
<p>So i am wondering how to get around the null error, or changing return null; to something else.</p>
<p>I Would really apprieciate the help.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/562-auto-download-extract-zip-files-help/440219/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/562-auto-download-extract-zip-files-help/440219/1</link>
        <pubDate>Sat, 21 Apr 2012 10:19:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-440219-1</guid>
        <source url="https://forum.moparisthebest.com/t/562-auto-download-extract-zip-files-help/440219.rss">[562] Auto Download | Extract Zip Files [Help]</source>
      </item>
  </channel>
</rss>
