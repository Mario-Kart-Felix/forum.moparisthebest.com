<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[TUT] Prefix loading</title>
    <link>https://forum.moparisthebest.com/t/tut-prefix-loading/565</link>
    <description>Ok, its like this, I just started leaning java I&#39;ve been learning for about 2 hours now ... :cool:
I decided to take another look at the client with the knowledge I&#39;ve gained.
Now, most of you will prolly think this is either very basic or just unusefull...
I however think this is less detectable than adding a wold chooser to the login window. (Maybe pplsuqbawls or someone else can confirm that...)
This should work for EVERY update  ;)

(Note: this was made for deob #364, the structure of the next deob might be slightly different)

[b]Step 1:[/b]

Go to the bottom of client.java, you will see something like:
[CODE]    public static int anInt1302;
    public Class26_Sub3_Sub1_Sub1 aClass26_Sub3_Sub1_Sub1Array1303[];
    public boolean aBoolean1304;
    public int anInt1305;
    public static int anInt1306;

    static 
    {
        anIntArray918 = new int[99];
        int i = 0;
        for(int j = 0; j &lt; 99; j++)
        {[/code]

Now add the lines (variable declaration):
[code]    public static String worldPrefix;
    public static boolean prefixing = true;[/code]

You will get someything like:
[CODE]    public static int anInt1302;
    public Class26_Sub3_Sub1_Sub1 aClass26_Sub3_Sub1_Sub1Array1303[];
    public boolean aBoolean1304;
    public int anInt1305;
    public static int anInt1306;

    public static String worldPrefix;
    public static boolean prefixing = true;

    static 
    {
        anIntArray918 = new int[99];
        int i = 0;
        for(int j = 0; j &lt; 99; j++)
        {[/code]
[b]
Step 2:[/b]

Search for:
[code]public static void main(String args[])[/code]

Go to the bottom of that methos, you&#39;ll see:
[code]            {
                System.out.println(&quot;Usage: node-id, port-offset, [lowmem/highmem], [free/members], storeid&quot;);
                return;
            }
            
            signlink.storeid = Integer.parseInt(args[4]);
            signlink.startpriv(InetAddress.getLocalHost());
            client client1 = new client();
            client1.method1(503, 6, 765);[/code]

Add:
[code]            //  Getting prefix //
            //  By Freddy1990  //
            Scanner input = new Scanner(System.in);
	    do
	    {
            	System.out.print(&quot;Server prefix? &quot;);
            	worldPrefix = input.nextLine();
            	if (worldPrefix.matches(&quot;[a-zA-Z]{2,}[0-9]&quot;))
    	    	{  		
    	    		System.out.println(&quot;Loading world with prefix &quot; + worldPrefix + &quot;.&quot;);
    	    		prefixing = false;
            	}else{
    			System.out.println(&quot;Invalid prefix.&quot;);
    	    	}
    	    }
    	    while (prefixing == true);
            //-----------------//[/code]

You now see:
[code]            {
                System.out.println(&quot;Usage: node-id, port-offset, [lowmem/highmem], [free/members], storeid&quot;);
                return;
            }
            
            //  Getting prefix //
            //  By Freddy1990  //
            Scanner input = new Scanner(System.in);
	    do
	    {
            	System.out.print(&quot;Server prefix? &quot;);
            	worldPrefix = input.nextLine();
            	if (worldPrefix.matches(&quot;[a-zA-Z]{2,}[0-9]&quot;))
    	    	{  		
    	    		System.out.println(&quot;Loading world with prefix &quot; + worldPrefix + &quot;.&quot;);
    	    		prefixing = false;
            	}else{
    			System.out.println(&quot;Invalid prefix.&quot;);
    	    	}
    	    }
    	    while (prefixing == true);
            //-----------------//
    		
            signlink.storeid = Integer.parseInt(args[4]);
            signlink.startpriv(InetAddress.getLocalHost());
            client client1 = new client();
            client1.method1(503, 6, 765);[/code]

[b]Step 3[/b]

Find: 
[code]return new URL(&quot;http://127.0.0.1:&quot;[/code]

You will see something like:
[code]return new URL(&quot;http://127.0.0.1:&quot; + (80 + anInt949));[/code]

Replace:
[code]&quot;http://127.0.0.1:&quot;[/code]

By:
[code]&quot;http://&quot; + worldPrefix + &quot;.runescape.com:&quot;[/code]

Result:
[code]          return new URL(&quot;http://&quot; + worldPrefix + &quot;.runescape.com:&quot; + (80 + anInt949));[/code]

[b]Step 4[/b]

At the top where you find:
[code]java.util.Calendar;
import java.util.Date;
import java.util.zip.CRC32;
import sign.signlink;[/code]

Add:
[code]import java.util.*[/code]


Thats it  :rolleyes: Enjoy.

[img]http://img299.imageshack.us/img299/8012/prefix5dm.png[/img]

&lt;3 pplsuqbawls
&lt;3 moparisthebest</description>
    
    <lastBuildDate>Thu, 16 Mar 2006 17:53:27 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/tut-prefix-loading/565.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[TUT] Prefix loading</title>
        <dc:creator><![CDATA[@Freddy1990 Freddy1990]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/freddy1990">@Freddy1990</a> wrote:</p>
          <blockquote>
              <p>well yeah, but i’ve never worked with regex in java before  <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<p>EDIT: eh, i did it ^^ now i know regex in java as well ^^ this is fun <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"><br>
thx pplsuqbawls <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tut-prefix-loading/565/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tut-prefix-loading/565/5</link>
        <pubDate>Thu, 16 Mar 2006 17:53:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-565-5</guid>
        <source url="https://forum.moparisthebest.com/t/tut-prefix-loading/565.rss">[TUT] Prefix loading</source>
      </item>
      <item>
        <title>[TUT] Prefix loading</title>
        <dc:creator><![CDATA[@pplsuqbawlz pplsuqbawlz]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pplsuqbawlz">@pplsuqbawlz</a> wrote:</p>
          <blockquote>
              <p>sure you can :-p make a hash-list of all the prefixes :-p then compare it with the # world someone entered, if it never matches any, then it is not a valid hash… in all i imagine it’d take 5 minutes…</p>
<p>But there’s easier wayyys :-p world.matches("[a-zA-Z]{2,}[0-9]"); :-p <em>laff</em> see? can be any # of letters long no matter the case such as “po” or “planet” then it can only have 1 # <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"> from 0-9 so po4, or planet4 pass that regex thannxxxz bye</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tut-prefix-loading/565/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tut-prefix-loading/565/4</link>
        <pubDate>Thu, 16 Mar 2006 17:06:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-565-4</guid>
        <source url="https://forum.moparisthebest.com/t/tut-prefix-loading/565.rss">[TUT] Prefix loading</source>
      </item>
      <item>
        <title>[TUT] Prefix loading</title>
        <dc:creator><![CDATA[@Freddy1990 Freddy1990]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/freddy1990">@Freddy1990</a> wrote:</p>
          <blockquote>
              <p>I can’t be bother writing that code, the user just has to make sure he uses right prefix -_-"</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tut-prefix-loading/565/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tut-prefix-loading/565/3</link>
        <pubDate>Thu, 16 Mar 2006 15:04:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-565-3</guid>
        <source url="https://forum.moparisthebest.com/t/tut-prefix-loading/565.rss">[TUT] Prefix loading</source>
      </item>
      <item>
        <title>[TUT] Prefix loading</title>
        <dc:creator><![CDATA[@Terry Terry]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/terry">@Terry</a> wrote:</p>
          <blockquote>
              <p>No check to se if the prefix is valid? E.g. User input po44 instead of po4…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tut-prefix-loading/565/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tut-prefix-loading/565/2</link>
        <pubDate>Thu, 16 Mar 2006 11:57:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-565-2</guid>
        <source url="https://forum.moparisthebest.com/t/tut-prefix-loading/565.rss">[TUT] Prefix loading</source>
      </item>
      <item>
        <title>[TUT] Prefix loading</title>
        <dc:creator><![CDATA[@Freddy1990 Freddy1990]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/freddy1990">@Freddy1990</a> wrote:</p>
          <blockquote>
              <p>Ok, its like this, I just started leaning java I’ve been learning for about 2 hours now … <img src="https://forum.moparisthebest.com/images/emoji/twitter/cool.png?v=9" title=":cool:" class="emoji" alt=":cool:"><br>
I decided to take another look at the client with the knowledge I’ve gained.<br>
Now, most of you will prolly think this is either very basic or just unusefull…<br>
I however think this is less detectable than adding a wold chooser to the login window. (Maybe pplsuqbawls or someone else can confirm that…)<br>
This should work for EVERY update  <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
<p>(Note: this was made for deob <span class="hashtag">#364</span>, the structure of the next deob might be slightly different)</p>
<p><span class="bbcode-b">Step 1:</span></p>
<p>Go to the bottom of client.java, you will see something like:</p>
<p>[CODE]    public static int anInt1302;<br>
public Class26_Sub3_Sub1_Sub1 aClass26_Sub3_Sub1_Sub1Array1303[];<br>
public boolean aBoolean1304;<br>
public int anInt1305;<br>
public static int anInt1306;</p>
<pre><code>static 
{
    anIntArray918 = new int[99];
    int i = 0;
    for(int j = 0; j &lt; 99; j++)
    {[/code]
</code></pre>
<p>Now add the lines (variable declaration):</p>
<p><code>    public static String worldPrefix;
    public static boolean prefixing = true;</code></p>
<p>You will get someything like:</p>
<p>[CODE]    public static int anInt1302;<br>
public Class26_Sub3_Sub1_Sub1 aClass26_Sub3_Sub1_Sub1Array1303[];<br>
public boolean aBoolean1304;<br>
public int anInt1305;<br>
public static int anInt1306;</p>
<pre><code>public static String worldPrefix;
public static boolean prefixing = true;

static 
{
    anIntArray918 = new int[99];
    int i = 0;
    for(int j = 0; j &lt; 99; j++)
    {[/code]
</code></pre>
<p><span class="bbcode-b"><br>
Step 2:</span></p>
<p>Search for:</p>
<pre><code class="lang-auto">public static void main(String args[])</code></pre>
<p>Go to the bottom of that methos, you’ll see:</p>
<p>[code]            {<br>
System.out.println(“Usage: node-id, port-offset, [lowmem/highmem], [free/members], storeid”);<br>
return;<br>
}</p>
<pre><code>        signlink.storeid = Integer.parseInt(args[4]);
        signlink.startpriv(InetAddress.getLocalHost());
        client client1 = new client();
        client1.method1(503, 6, 765);[/code]
</code></pre>
<p>Add:</p>
<p><code>            //  Getting prefix //
            //  By Freddy1990  //
            Scanner input = new Scanner(System.in);
	    do
	    {
            	System.out.print("Server prefix? ");
            	worldPrefix = input.nextLine();
            	if (worldPrefix.matches("[a-zA-Z]{2,}[0-9]"))
    	    	{  		
    	    		System.out.println("Loading world with prefix " + worldPrefix + ".");
    	    		prefixing = false;
            	}else{
    			System.out.println("Invalid prefix.");
    	    	}
    	    }
    	    while (prefixing == true);
            //-----------------//</code></p>
<p>You now see:</p>
<p>[code]            {<br>
System.out.println(“Usage: node-id, port-offset, [lowmem/highmem], [free/members], storeid”);<br>
return;<br>
}</p>
<pre><code>        //  Getting prefix //
        //  By Freddy1990  //
        Scanner input = new Scanner(System.in);
    do
    {
        	System.out.print("Server prefix? ");
        	worldPrefix = input.nextLine();
        	if (worldPrefix.matches("[a-zA-Z]{2,}[0-9]"))
	    	{  		
	    		System.out.println("Loading world with prefix " + worldPrefix + ".");
	    		prefixing = false;
        	}else{
			System.out.println("Invalid prefix.");
	    	}
	    }
	    while (prefixing == true);
        //-----------------//
		
        signlink.storeid = Integer.parseInt(args[4]);
        signlink.startpriv(InetAddress.getLocalHost());
        client client1 = new client();
        client1.method1(503, 6, 765);[/code]
</code></pre>
<p><span class="bbcode-b">Step 3</span></p>
<p>Find:</p>
<pre><code class="lang-auto">return new URL("http://127.0.0.1:"</code></pre>
<p>You will see something like:</p>
<pre><code class="lang-auto">return new URL("http://127.0.0.1:" + (80 + anInt949));</code></pre>
<p>Replace:</p>
<pre><code class="lang-auto">"http://127.0.0.1:"</code></pre>
<p>By:</p>
<pre><code class="lang-auto">"http://" + worldPrefix + ".runescape.com:"</code></pre>
<p>Result:</p>
<pre><code class="lang-auto">          return new URL("http://" + worldPrefix + ".runescape.com:" + (80 + anInt949));</code></pre>
<p><span class="bbcode-b">Step 4</span></p>
<p>At the top where you find:</p>
<p><code>java.util.Calendar;
import java.util.Date;
import java.util.zip.CRC32;
import sign.signlink;</code></p>
<p>Add:</p>
<pre><code class="lang-auto">import java.util.*</code></pre>
<p>Thats it  :rolleyes: Enjoy.</p>
<p><img src="http://img299.imageshack.us/img299/8012/prefix5dm.png" alt width="" height=""></p>
<p>&lt;3 pplsuqbawls<br>
&lt;3 moparisthebest</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tut-prefix-loading/565/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tut-prefix-loading/565/1</link>
        <pubDate>Wed, 15 Mar 2006 17:29:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-565-1</guid>
        <source url="https://forum.moparisthebest.com/t/tut-prefix-loading/565.rss">[TUT] Prefix loading</source>
      </item>
  </channel>
</rss>
