<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[508] Help with Adding New Player and Banking [508]</title>
    <link>https://forum.moparisthebest.com/t/508-help-with-adding-new-player-and-banking-508/269039</link>
    <description>[B]Base: Palidino76
Source: ButterScape 508 [Removed Anti-Leach]
Error: Cant Add Many items to Bank and when I fix that I cant make a new Player![/B]

To add More item I Changed in FileManager.java

[U]private Stream stream = new Stream(2000, 2000);[/U]
TO,
[U]private Stream stream = new Stream(30000, 30000);[/U]

Once, I do that Banking works fine but, I cant make new Player I get error Server Crash on Client on Making new Player [Picture Here]

[IMG]http://i39.tinypic.com/1zge2b.jpg[/img]

Please Help me fix this I want both Banking and New Player Adding Working Together.

Please Help Me!
Thanks in Advance!

[B] File Manager.java [/B]

[/COLOR][CODE]/*
 * Class FileManager
 *
 * Version 1.0
 *
 * Friday, August 22, 2008
 *
 * Created by Palidino76
 */

package palidino76.rs2.io;


import java.io.*;
import palidino76.rs2.players.Player;
import palidino76.rs2.util.Stream;
import palidino76.rs2.util.Misc;


public class FileManager {

    /**
     * Byte buffer for storing bytes to be loaded or saved.
     */
    private Stream stream = new Stream(30000, 30000);

    /**
     * Saves a character file.
     * @param p The player to save.
     */
    public void saveCharacter(Player p) throws Exception {
        if (p == null) {
            return; 
        }
        stream.writeString(&quot;poisontimer:&quot; + p.poisonTimer);
        stream.writeString(&quot;poisondamage:&quot; + p.poisonDamage);
        stream.writeString(&quot;poisonfade:&quot; + p.poisonFade);
        stream.outOffset = 0;
        stream.writeString(&quot;username:&quot; + p.username);
        stream.writeString(&quot;password:&quot; + Misc.stringToLong(p.password));
        stream.writeString(&quot;rights:&quot; + p.rights);
        stream.writeString(&quot;absx:&quot; + p.absX);
        stream.writeString(&quot;absy:&quot; + p.absY);
	stream.writeString(&quot;muted:&quot; + p.muted);
        stream.writeString(&quot;height:&quot; + p.heightLevel);
        stream.writeString(&quot;runenergy:&quot; + p.runEnergy);
        stream.writeString(&quot;attackstyle:&quot; + p.AttackStyle);
	stream.writeString(&quot;points:&quot; + p.points);
        stream.writeString(&quot;autoretaliate:&quot; + p.autoRetaliate);
        stream.writeString(&quot;specialamount:&quot; + p.specialAmount);
        stream.writeString(&quot;skulltimer:&quot; + p.skulledDelay);
        stream.writeString(&quot;gender:&quot; + p.gender);
		stream.writeString(&quot;Quest One:&quot; + p.q1);
		stream.writeString(&quot;Quest Two:&quot; + p.q2);
        for (int i = 0; i &lt; p.look.length; i++) {
            stream.writeString(&quot;look&quot; + i + &quot;:&quot; + p.look[i]);
        }
        for (int i = 0; i &lt; p.color.length; i++) {
            if (p.color[i] &gt; 0) {
                stream.writeString(&quot;color&quot; + i + &quot;:&quot; + p.color[i]);
            }
        }
        for (int i = 0; i &lt; p.skillLvl.length; i++) {
            stream.writeString(
                    &quot;skill&quot; + i + &quot;:&quot; + p.skillLvl[i] + &quot;,&quot; + p.skillXP[i]);
        }
        for (int i = 0; i &lt; p.equipment.length; i++) {
            if (p.equipment[i] &gt; -1 &amp;&amp; p.equipmentN[i] &gt; 0) {
                stream.writeString(
                        &quot;equipment&quot; + i + &quot;:&quot; + p.equipment[i] + &quot;,&quot;
                        + p.equipmentN[i]);
            }
        }
        for (int i = 0; i &lt; p.items.length; i++) {
            if (p.items[i] &gt; -1 &amp;&amp; p.itemsN[i] &gt; 0) {
                stream.writeString(
                        &quot;item&quot; + i + &quot;:&quot; + p.items[i] + &quot;,&quot; + p.itemsN[i]);
            }
        }
        for (int i = 0; i &lt; p.bankItems.length; i++) {
            if (p.bankItems[i] &gt; -1 &amp;&amp; p.bankItemsN[i] &gt; 0) {
                stream.writeString(
                        &quot;bankitem&quot; + i + &quot;:&quot; + p.bankItems[i] + &quot;,&quot;
                        + p.bankItemsN[i]);
            }
        }
        stream.writeString(&quot;null&quot;);
        FileOutputStream out = new FileOutputStream(
                &quot;./data/characters/mainsave/&quot; + p.username + &quot;.dat&quot;);

        out.write(stream.outBuffer, 0, stream.outOffset);
        out.flush();
        out.close();
        out = null;
    }

    /**
     * Loads a character file.
     * @param p The player to save.
     */
    public void loadCharacter(Player p) {
        stream.inOffset = 0;
        try {
            FileInputStream in = new FileInputStream(
                    &quot;./data/characters/mainsave/&quot; + p.username + &quot;.dat&quot;);

            in.read(stream.inBuffer);
            in.close();
            in = null;
        } catch (Exception e) {
            return;
        }
        String line;

        try {
            while ((line = stream.readString()) != null &amp;&amp; line.length() &gt; 0
                    &amp;&amp; !line.equals(&quot;null&quot;)) {
                if (line.startsWith(&quot;password:&quot;)) {
                    p.password = Misc.longToString(
                            Long.parseLong(line.substring(9)));

                }
                else if (line.startsWith(&quot;poisontimer:&quot;)) {
                    p.poisonTimer = Integer.parseInt(line.substring(12)); }
                else if (line.startsWith(&quot;poisondamage:&quot;)) {
                    p.poisonDamage = Integer.parseInt(line.substring(13)); }
                else if (line.startsWith(&quot;poisonfade:&quot;)) {
                    p.poisonFade = Integer.parseInt(line.substring(11)); }
 else if (line.startsWith(&quot;rights:&quot;)) {
                    p.rights = Integer.parseInt(line.substring(7));
		} else if (line.startsWith(&quot;muted:&quot;)) {
		    p.muted = Integer.parseInt(line.substring(6));
		} else if (line.startsWith(&quot;points:&quot;)) {
                    p.points = Integer.parseInt(line.substring(7));
                } else if (line.startsWith(&quot;absx:&quot;)) {
                    p.teleportToX = Integer.parseInt(line.substring(5));
                } else if (line.startsWith(&quot;absy:&quot;)) {
                    p.teleportToY = Integer.parseInt(line.substring(5));
                } else if (line.startsWith(&quot;height:&quot;)) {
                    p.heightLevel = Integer.parseInt(line.substring(7));
                } else if (line.startsWith(&quot;runenergy:&quot;)) {
                    p.runEnergy = Integer.parseInt(line.substring(10));
                } else if (line.startsWith(&quot;attackstyle:&quot;)) {
                    p.AttackStyle = Integer.parseInt(line.substring(12));
                } else if (line.startsWith(&quot;autoretaliate:&quot;)) {
                    p.autoRetaliate = Integer.parseInt(line.substring(14));
                } else if (line.startsWith(&quot;specialamount:&quot;)) {
                    p.specialAmount = Integer.parseInt(line.substring(14));
                } else if (line.startsWith(&quot;skulltimer:&quot;)) {
                    p.skulledDelay = Integer.parseInt(line.substring(11));
                } else if (line.startsWith(&quot;gender:&quot;)) {
                    p.gender = Integer.parseInt(line.substring(7));
				} else if (line.startsWith(&quot;Quest One:&quot;)) {
                    p.q1 = Integer.parseInt(line.substring(10));
				} else if (line.startsWith(&quot;Quest Two:&quot;)) {
                    p.q1 = Integer.parseInt(line.substring(10));
                } else if (line.startsWith(&quot;look&quot;)) {
                    p.look[Integer.parseInt(line.substring(4, 5))] = Integer.parseInt(
                            line.substring(6));
                } else if (line.startsWith(&quot;color&quot;)) {
                    p.color[Integer.parseInt(line.substring(5, 6))] = Integer.parseInt(
                            line.substring(7));
                } else if (line.startsWith(&quot;skill&quot;)) {
                    p.skillLvl[Integer.parseInt(line.substring(5, line.indexOf(&quot;:&quot;)))] = Integer.parseInt(
                            line.substring(line.indexOf(&quot;:&quot;) + 1, 
                            line.indexOf(&quot;,&quot;)));
                    p.skillXP[Integer.parseInt(line.substring(5, line.indexOf(&quot;:&quot;)))] = Integer.parseInt(
                            line.substring(line.indexOf(&quot;,&quot;) + 1));
                } else if (line.startsWith(&quot;equipment&quot;)) {
                    p.equipment[Integer.parseInt(line.substring(9, line.indexOf(&quot;:&quot;)))] = Integer.parseInt(
                            line.substring(line.indexOf(&quot;:&quot;) + 1, 
                            line.indexOf(&quot;,&quot;)));
                    p.equipmentN[Integer.parseInt(line.substring(9, line.indexOf(&quot;:&quot;)))] = Integer.parseInt(
                            line.substring(line.indexOf(&quot;,&quot;) + 1));
                } else if (line.startsWith(&quot;item&quot;)) {
                    p.items[Integer.parseInt(line.substring(4, line.indexOf(&quot;:&quot;)))] = Integer.parseInt(
                            line.substring(line.indexOf(&quot;:&quot;) + 1, 
                            line.indexOf(&quot;,&quot;)));
                    p.itemsN[Integer.parseInt(line.substring(4, line.indexOf(&quot;:&quot;)))] = Integer.parseInt(
                            line.substring(line.indexOf(&quot;,&quot;) + 1));
                } else if (line.startsWith(&quot;bankitem&quot;)) {
                    p.bankItems[Integer.parseInt(line.substring(8, line.indexOf(&quot;:&quot;)))] = Integer.parseInt(
                            line.substring(line.indexOf(&quot;:&quot;) + 1, 
                            line.indexOf(&quot;,&quot;)));
                    p.bankItemsN[Integer.parseInt(line.substring(8, line.indexOf(&quot;:&quot;)))] = Integer.parseInt(
                            line.substring(line.indexOf(&quot;,&quot;) + 1));
                }
            }
        } catch (Exception e) {}
    }

    public void appendData(String file, String text) {
        BufferedWriter bw = null;

        try {
            FileWriter fileWriter = new FileWriter(&quot;./data/&quot; + file, true);

            bw = new BufferedWriter(fileWriter);
            bw.write(text);
            bw.newLine();
            bw.flush();
            bw.close();
            fileWriter = null;
            bw = null;
        } catch (Exception exception) {
            Misc.println(&quot;Critical error while writing data: &quot; + file);
        }
    }
}
[/CODE]</description>
    
    <lastBuildDate>Mon, 23 Mar 2009 09:40:01 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/508-help-with-adding-new-player-and-banking-508/269039.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[508] Help with Adding New Player and Banking [508]</title>
        <dc:creator><![CDATA[@Master_Aditya Master Aditya]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/master_aditya">@Master_Aditya</a> wrote:</p>
          <blockquote>
              <p><span class="bbcode-b">Base: Palidino76<br>
Source: ButterScape 508 [Removed Anti-Leach]<br>
Error: Cant Add Many items to Bank and when I fix that I cant make a new Player!</span></p>
<p>To add More item I Changed in FileManager.java</p>
<p><span class="bbcode-u">private Stream stream = new Stream(2000, 2000);</span><br>
TO,<br>
<span class="bbcode-u">private Stream stream = new Stream(30000, 30000);</span></p>
<p>Once, I do that Banking works fine but, I cant make new Player I get error Server Crash on Client on Making new Player [Picture Here]</p>
<p><div class="lightbox-wrapper"><a class="lightbox" href="http://i39.tinypic.com/1zge2b.jpg" title="1zge2b.jpg" rel="nofollow noopener"><img src="http://i39.tinypic.com/1zge2b.jpg" alt width="690" height="477"><div class="meta">
<svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use xlink:href="#far-image"></use></svg><span class="filename">1zge2b.jpg</span><span class="informations">771×533</span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use xlink:href="#discourse-expand"></use></svg>
</div></a></div></p>
<p>Please Help me fix this I want both Banking and New Player Adding Working Together.</p>
<p>Please Help Me!<br>
Thanks in Advance!</p>
<p><span class="bbcode-b"> File Manager.java </span></p>
<p>[/COLOR][CODE]/*</p>
<ul>
<li>Class FileManager</li>
<li>
</li>
<li>Version 1.0</li>
<li>
</li>
<li>Friday, August 22, 2008</li>
<li>
</li>
<li>Created by Palidino76<br>
*/</li>
</ul>
<p>package <a href="http://palidino76.rs2.io" rel="nofollow noopener">palidino76.rs2.io</a>;</p>
<p>import <a href="http://java.io" rel="nofollow noopener">java.io</a>.*;<br>
import palidino76.rs2.players.Player;<br>
import palidino76.rs2.util.Stream;<br>
import palidino76.rs2.util.Misc;</p>
<p>public class FileManager {</p>
<pre><code>/**
 * Byte buffer for storing bytes to be loaded or saved.
 */
private Stream stream = new Stream(30000, 30000);

/**
 * Saves a character file.
 * @param p The player to save.
 */
public void saveCharacter(Player p) throws Exception {
    if (p == null) {
        return; 
    }
    stream.writeString("poisontimer:" + p.poisonTimer);
    stream.writeString("poisondamage:" + p.poisonDamage);
    stream.writeString("poisonfade:" + p.poisonFade);
    stream.outOffset = 0;
    stream.writeString("username:" + p.username);
    stream.writeString("password:" + Misc.stringToLong(p.password));
    stream.writeString("rights:" + p.rights);
    stream.writeString("absx:" + p.absX);
    stream.writeString("absy:" + p.absY);
stream.writeString("muted:" + p.muted);
    stream.writeString("height:" + p.heightLevel);
    stream.writeString("runenergy:" + p.runEnergy);
    stream.writeString("attackstyle:" + p.AttackStyle);
stream.writeString("points:" + p.points);
    stream.writeString("autoretaliate:" + p.autoRetaliate);
    stream.writeString("specialamount:" + p.specialAmount);
    stream.writeString("skulltimer:" + p.skulledDelay);
    stream.writeString("gender:" + p.gender);
	stream.writeString("Quest One:" + p.q1);
	stream.writeString("Quest Two:" + p.q2);
    for (int i = 0; i &lt; p.look.length; i++) {
        stream.writeString("look" + i + ":" + p.look[i]);
    }
    for (int i = 0; i &lt; p.color.length; i++) {
        if (p.color[i] &gt; 0) {
            stream.writeString("color" + i + ":" + p.color[i]);
        }
    }
    for (int i = 0; i &lt; p.skillLvl.length; i++) {
        stream.writeString(
                "skill" + i + ":" + p.skillLvl[i] + "," + p.skillXP[i]);
    }
    for (int i = 0; i &lt; p.equipment.length; i++) {
        if (p.equipment[i] &gt; -1 &amp;&amp; p.equipmentN[i] &gt; 0) {
            stream.writeString(
                    "equipment" + i + ":" + p.equipment[i] + ","
                    + p.equipmentN[i]);
        }
    }
    for (int i = 0; i &lt; p.items.length; i++) {
        if (p.items[i] &gt; -1 &amp;&amp; p.itemsN[i] &gt; 0) {
            stream.writeString(
                    "item" + i + ":" + p.items[i] + "," + p.itemsN[i]);
        }
    }
    for (int i = 0; i &lt; p.bankItems.length; i++) {
        if (p.bankItems[i] &gt; -1 &amp;&amp; p.bankItemsN[i] &gt; 0) {
            stream.writeString(
                    "bankitem" + i + ":" + p.bankItems[i] + ","
                    + p.bankItemsN[i]);
        }
    }
    stream.writeString("null");
    FileOutputStream out = new FileOutputStream(
            "./data/characters/mainsave/" + p.username + ".dat");

    out.write(stream.outBuffer, 0, stream.outOffset);
    out.flush();
    out.close();
    out = null;
}

/**
 * Loads a character file.
 * @param p The player to save.
 */
public void loadCharacter(Player p) {
    stream.inOffset = 0;
    try {
        FileInputStream in = new FileInputStream(
                "./data/characters/mainsave/" + p.username + ".dat");

        in.read(stream.inBuffer);
        in.close();
        in = null;
    } catch (Exception e) {
        return;
    }
    String line;

    try {
        while ((line = stream.readString()) != null &amp;&amp; line.length() &gt; 0
                &amp;&amp; !line.equals("null")) {
            if (line.startsWith("password:")) {
                p.password = Misc.longToString(
                        Long.parseLong(line.substring(9)));

            }
            else if (line.startsWith("poisontimer:")) {
                p.poisonTimer = Integer.parseInt(line.substring(12)); }
            else if (line.startsWith("poisondamage:")) {
                p.poisonDamage = Integer.parseInt(line.substring(13)); }
            else if (line.startsWith("poisonfade:")) {
                p.poisonFade = Integer.parseInt(line.substring(11)); }
</code></pre>
<p>else if (line.startsWith(“rights:”)) {<br>
p.rights = Integer.parseInt(line.substring(7));<br>
} else if (line.startsWith(“muted:”)) {<br>
p.muted = Integer.parseInt(line.substring(6));<br>
} else if (line.startsWith(“points:”)) {<br>
p.points = Integer.parseInt(line.substring(7));<br>
} else if (line.startsWith(“absx:”)) {<br>
p.teleportToX = Integer.parseInt(line.substring(5));<br>
} else if (line.startsWith(“absy:”)) {<br>
p.teleportToY = Integer.parseInt(line.substring(5));<br>
} else if (line.startsWith(“height:”)) {<br>
p.heightLevel = Integer.parseInt(line.substring(7));<br>
} else if (line.startsWith(“runenergy:”)) {<br>
p.runEnergy = Integer.parseInt(line.substring(10));<br>
} else if (line.startsWith(“attackstyle:”)) {<br>
p.AttackStyle = Integer.parseInt(line.substring(12));<br>
} else if (line.startsWith(“autoretaliate:”)) {<br>
p.autoRetaliate = Integer.parseInt(line.substring(14));<br>
} else if (line.startsWith(“specialamount:”)) {<br>
p.specialAmount = Integer.parseInt(line.substring(14));<br>
} else if (line.startsWith(“skulltimer:”)) {<br>
p.skulledDelay = Integer.parseInt(line.substring(11));<br>
} else if (line.startsWith(“gender:”)) {<br>
p.gender = Integer.parseInt(line.substring(7));<br>
} else if (line.startsWith(“Quest One:”)) {<br>
p.q1 = Integer.parseInt(line.substring(10));<br>
} else if (line.startsWith(“Quest Two:”)) {<br>
p.q1 = Integer.parseInt(line.substring(10));<br>
} else if (line.startsWith(“look”)) {<br>
p.look[Integer.parseInt(line.substring(4, 5))] = Integer.parseInt(<br>
line.substring(6));<br>
} else if (line.startsWith(“color”)) {<br>
p.color[Integer.parseInt(line.substring(5, 6))] = Integer.parseInt(<br>
line.substring(7));<br>
} else if (line.startsWith(“skill”)) {<br>
p.skillLvl[Integer.parseInt(line.substring(5, line.indexOf(":")))] = Integer.parseInt(<br>
line.substring(line.indexOf(":") + 1,<br>
line.indexOf(",")));<br>
p.skillXP[Integer.parseInt(line.substring(5, line.indexOf(":")))] = Integer.parseInt(<br>
line.substring(line.indexOf(",") + 1));<br>
} else if (line.startsWith(“equipment”)) {<br>
p.equipment[Integer.parseInt(line.substring(9, line.indexOf(":")))] = Integer.parseInt(<br>
line.substring(line.indexOf(":") + 1,<br>
line.indexOf(",")));<br>
p.equipmentN[Integer.parseInt(line.substring(9, line.indexOf(":")))] = Integer.parseInt(<br>
line.substring(line.indexOf(",") + 1));<br>
} else if (line.startsWith(“item”)) {<br>
p.items[Integer.parseInt(line.substring(4, line.indexOf(":")))] = Integer.parseInt(<br>
line.substring(line.indexOf(":") + 1,<br>
line.indexOf(",")));<br>
p.itemsN[Integer.parseInt(line.substring(4, line.indexOf(":")))] = Integer.parseInt(<br>
line.substring(line.indexOf(",") + 1));<br>
} else if (line.startsWith(“bankitem”)) {<br>
p.bankItems[Integer.parseInt(line.substring(8, line.indexOf(":")))] = Integer.parseInt(<br>
line.substring(line.indexOf(":") + 1,<br>
line.indexOf(",")));<br>
p.bankItemsN[Integer.parseInt(line.substring(8, line.indexOf(":")))] = Integer.parseInt(<br>
line.substring(line.indexOf(",") + 1));<br>
}<br>
}<br>
} catch (Exception e) {}<br>
}</p>
<pre><code>public void appendData(String file, String text) {
    BufferedWriter bw = null;

    try {
        FileWriter fileWriter = new FileWriter("./data/" + file, true);

        bw = new BufferedWriter(fileWriter);
        bw.write(text);
        bw.newLine();
        bw.flush();
        bw.close();
        fileWriter = null;
        bw = null;
    } catch (Exception exception) {
        Misc.println("Critical error while writing data: " + file);
    }
}
</code></pre>
<p>}<br>
[/CODE]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/508-help-with-adding-new-player-and-banking-508/269039/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/508-help-with-adding-new-player-and-banking-508/269039/1</link>
        <pubDate>Mon, 23 Mar 2009 09:40:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-269039-1</guid>
        <source url="https://forum.moparisthebest.com/t/508-help-with-adding-new-player-and-banking-508/269039.rss">[508] Help with Adding New Player and Banking [508]</source>
      </item>
  </channel>
</rss>
