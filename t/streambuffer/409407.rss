<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>StreamBuffer</title>
    <link>https://forum.moparisthebest.com/t/streambuffer/409407</link>
    <description>[s]https://gist.github.com/1138787
[/s]

https://gist.github.com/1141258
Don&#39;t mind negative or positive feedback just be sure it&#39;s constructive, let me know what I did wrong and how I could improve.</description>
    
    <lastBuildDate>Mon, 15 Aug 2011 17:49:35 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/streambuffer/409407.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>StreamBuffer</title>
        <dc:creator><![CDATA[@eyeownyew Eyeownyew]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/eyeownyew">@eyeownyew</a> wrote:</p>
          <blockquote>
              <p>[quote=“sinisoul, post:17, topic:409407”][quote author=iKilem link=topic=510691.msg3712011#msg3712011 date=1313414505]</p>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<p>Have none of you had experience with a circular buffer before? ;D</p>
</blockquote>
</aside>
<p>Hardly an appropriate solution.</p>
</blockquote>
</aside>
<p>I disagree… <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"><br>
It gives you the power to have two different pointers inherently in the design (one for read, one for write); it doesn’t require you to reset your pointers whenever you want to flush or read into the buffer. I don’t know about <em>you</em>, but that sounds pretty ideal to me.</p>
</blockquote>
</aside>
<p>At the time, I was thinking of random access, but OP’s code doesn’t have that functionality, so fair enough :). If this was for a private server, for example, where this could be used for reading certain file formats, in that sense, it sounded inappropriate, since a circular buffer supporting random access is a little unorthodox :P.</p>
<p><a class="mention" href="/u/sinisoul">@sinisoul</a>: You’re still reading from the same location twice, it’s just that the location is different…</p>
<pre><code class="lang-auto">readerIndex - 0
++readerIndex - 1
readerIndex++ - 1
readerIndex++ - 2</code></pre>
<p>[/quote]</p>
<p>LOL, oh well then Jimmy listen to this man here; he knows what he is talking about.[/quote]<br>
I don’t understand, why <span class="bbcode-s">would</span> <span class="bbcode-b">did</span> he use a pre-increment operator for just one anyway? O.O</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/streambuffer/409407/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/streambuffer/409407/18</link>
        <pubDate>Mon, 15 Aug 2011 17:49:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-409407-18</guid>
        <source url="https://forum.moparisthebest.com/t/streambuffer/409407.rss">StreamBuffer</source>
      </item>
      <item>
        <title>StreamBuffer</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>[quote=“iKilem, post:16, topic:409407”][quote author=slavemaster link=topic=510691.msg3711697#msg3711697 date=1313381965]</p>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<p>Have none of you had experience with a circular buffer before? ;D</p>
</blockquote>
</aside>
<p>Hardly an appropriate solution.</p>
</blockquote>
</aside>
<p>I disagree… <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"><br>
It gives you the power to have two different pointers inherently in the design (one for read, one for write); it doesn’t require you to reset your pointers whenever you want to flush or read into the buffer. I don’t know about <em>you</em>, but that sounds pretty ideal to me.<br>
[/quote]<br>
At the time, I was thinking of random access, but OP’s code doesn’t have that functionality, so fair enough :). If this was for a private server, for example, where this could be used for reading certain file formats, in that sense, it sounded inappropriate, since a circular buffer supporting random access is a little unorthodox :P.</p>
<p><a class="mention" href="/u/sinisoul">@sinisoul</a>: You’re still reading from the same location twice, it’s just that the location is different…</p>
<p><code>
readerIndex - 0
++readerIndex - 1
readerIndex++ - 1
readerIndex++ - 2
</code>[/quote]</p>
<p>LOL, oh well then Jimmy listen to this man here; he knows what he is talking about.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/streambuffer/409407/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/streambuffer/409407/17</link>
        <pubDate>Mon, 15 Aug 2011 15:44:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-409407-17</guid>
        <source url="https://forum.moparisthebest.com/t/streambuffer/409407.rss">StreamBuffer</source>
      </item>
      <item>
        <title>StreamBuffer</title>
        <dc:creator><![CDATA[@iKilem iKilem]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ikilem">@iKilem</a> wrote:</p>
          <blockquote>
              <p>[quote=“slavemaster, post:13, topic:409407”][quote author=iKilem link=topic=510691.msg3710906#msg3710906 date=1313348345]</p>
<aside class="quote">
<blockquote>
<p>Have none of you had experience with a circular buffer before? ;D</p>
</blockquote>
</aside>
<p>Hardly an appropriate solution.<br>
[/quote]</p>
<p>I disagree… <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"><br>
It gives you the power to have two different pointers inherently in the design (one for read, one for write); it doesn’t require you to reset your pointers whenever you want to flush or read into the buffer. I don’t know about <em>you</em>, but that sounds pretty ideal to me.[/quote]<br>
At the time, I was thinking of random access, but OP’s code doesn’t have that functionality, so fair enough :). If this was for a private server, for example, where this could be used for reading certain file formats, in that sense, it sounded inappropriate, since a circular buffer supporting random access is a little unorthodox :P.</p>
<p><a class="mention" href="/u/sinisoul">@sinisoul</a>: You’re still reading from the same location twice, it’s just that the location is different…</p>
<pre><code class="lang-auto">readerIndex - 0
++readerIndex - 1
readerIndex++ - 1
readerIndex++ - 2</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/streambuffer/409407/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/streambuffer/409407/16</link>
        <pubDate>Mon, 15 Aug 2011 13:21:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-409407-16</guid>
        <source url="https://forum.moparisthebest.com/t/streambuffer/409407.rss">StreamBuffer</source>
      </item>
      <item>
        <title>StreamBuffer</title>
        <dc:creator><![CDATA[@_bool]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_bool">@_bool</a> wrote:</p>
          <blockquote>
              <p>[quote=“sinisoul, post:14, topic:409407”][quote author=Jimmyf link=topic=510691.msg3711283#msg3711283 date=1313365232]</p>
<aside class="quote">
<blockquote>
<p>Do you know how the post-increment operator works?</p>
<pre><code class="lang-auto">public int readInt() {
	int value = byteArray[readerIndex] &lt;&lt; 24;
	value |= byteArray[++readerIndex] &lt;&lt; 16;
	value |= byteArray[readerIndex++] &lt;&lt; 8;
	value |= byteArray[readerIndex++];
	readerIndex++;
	return value;
}</code></pre>
<p>You’re reading from the same location twice.</p>
<p>Expanding by little amounts the way you’re doing is going to be inefficient.</p>
<aside class="quote">
<blockquote>
<p>Have none of you had experience with a circular buffer before? ;D</p>
</blockquote>
</aside>
<p>Hardly an appropriate solution.</p>
</blockquote>
</aside>
<p>Okay I think I’ve experienced this before but was never sure and never looked into it. When I use the increment in  the brackets like that it gives me the variable + 1 correct? but it doesn’t change the value of the variable unless you call readerIndex++; by itself?<br>
[/quote]</p>
<p>Fixed your snippet for you.[/quote]<br>
why not just post-increment on each?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/streambuffer/409407/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/streambuffer/409407/15</link>
        <pubDate>Mon, 15 Aug 2011 05:04:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-409407-15</guid>
        <source url="https://forum.moparisthebest.com/t/streambuffer/409407.rss">StreamBuffer</source>
      </item>
      <item>
        <title>StreamBuffer</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>[quote=“Jimmyf, post:11, topic:409407”][quote author=iKilem link=topic=510691.msg3710906#msg3710906 date=1313348345]<br>
Do you know how the post-increment operator works?</p>
<pre><code class="lang-auto">public int readInt() {
	int value = byteArray[readerIndex] &lt;&lt; 24;
	value |= byteArray[++readerIndex] &lt;&lt; 16;
	value |= byteArray[readerIndex++] &lt;&lt; 8;
	value |= byteArray[readerIndex++];
	readerIndex++;
	return value;
}</code></pre>
<p>You’re reading from the same location twice.</p>
<p>Expanding by little amounts the way you’re doing is going to be inefficient.</p>
<aside class="quote">
<blockquote>
<p>Have none of you had experience with a circular buffer before? ;D</p>
</blockquote>
</aside>
<p>Hardly an appropriate solution.<br>
[/quote]</p>
<p>Okay I think I’ve experienced this before but was never sure and never looked into it. When I use the increment in  the brackets like that it gives me the variable + 1 correct? but it doesn’t change the value of the variable unless you call readerIndex++; by itself?[/quote]</p>
<p>Fixed your snippet for you.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/streambuffer/409407/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/streambuffer/409407/14</link>
        <pubDate>Mon, 15 Aug 2011 04:43:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-409407-14</guid>
        <source url="https://forum.moparisthebest.com/t/streambuffer/409407.rss">StreamBuffer</source>
      </item>
      <item>
        <title>StreamBuffer</title>
        <dc:creator><![CDATA[@slavemaster veer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/slavemaster">@slavemaster</a> wrote:</p>
          <blockquote>
              <p>[quote=“iKilem, post:10, topic:409407”][quote author=slavemaster link=topic=510691.msg3708214#msg3708214 date=1313180306]<br>
Have none of you had experience with a circular buffer before? ;D<br>
[/quote]<br>
Hardly an appropriate solution.[/quote]</p>
<p>I disagree… <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"><br>
It gives you the power to have two different pointers inherently in the design (one for read, one for write); it doesn’t require you to reset your pointers whenever you want to flush or read into the buffer. I don’t know about <em>you</em>, but that sounds pretty ideal to me.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/streambuffer/409407/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/streambuffer/409407/13</link>
        <pubDate>Mon, 15 Aug 2011 04:19:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-409407-13</guid>
        <source url="https://forum.moparisthebest.com/t/streambuffer/409407.rss">StreamBuffer</source>
      </item>
      <item>
        <title>StreamBuffer</title>
        <dc:creator><![CDATA[@_bool]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_bool">@_bool</a> wrote:</p>
          <blockquote>
              <p>[quote=“Jimmyf, post:11, topic:409407”][quote author=iKilem link=topic=510691.msg3710906#msg3710906 date=1313348345]<br>
Do you know how the post-increment operator works?</p>
<pre><code class="lang-auto">public int readInt() {
	int value = byteArray[readerIndex] &lt;&lt; 24;
	value |= byteArray[readerIndex++] &lt;&lt; 16;
	value |= byteArray[readerIndex++] &lt;&lt; 8;
	value |= byteArray[readerIndex++];
	readerIndex++;
	return value;
}</code></pre>
<p>You’re reading from the same location twice.</p>
<p>Expanding by little amounts the way you’re doing is going to be inefficient.</p>
<aside class="quote">
<blockquote>
<p>Have none of you had experience with a circular buffer before? ;D</p>
</blockquote>
</aside>
<p>Hardly an appropriate solution.<br>
[/quote]</p>
<p>Okay I think I’ve experienced this before but was never sure and never looked into it. When I use the increment in  the brackets like that it gives me the variable + 1 correct? but it doesn’t change the value of the variable unless you call readerIndex++; by itself?[/quote]</p>
<p>What the fuck are you talking about… when you do readerIndex++ it reads the value first then increments it by one…<br>
You do this: Read the value, read the value and increment, read the value and increment, read the value and increment, increment.<br>
The proper solution is: Read the value and increment, read the value and increment, read the value and increment, read the value and increment.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/streambuffer/409407/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/streambuffer/409407/12</link>
        <pubDate>Mon, 15 Aug 2011 03:34:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-409407-12</guid>
        <source url="https://forum.moparisthebest.com/t/streambuffer/409407.rss">StreamBuffer</source>
      </item>
      <item>
        <title>StreamBuffer</title>
        <dc:creator><![CDATA[@Jimmyf Jimmyf]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jimmyf">@Jimmyf</a> wrote:</p>
          <blockquote>
              <p>[quote=“iKilem, post:10, topic:409407”]Do you know how the post-increment operator works?</p>
<pre><code class="lang-auto">public int readInt() {
	int value = byteArray[readerIndex] &lt;&lt; 24;
	value |= byteArray[readerIndex++] &lt;&lt; 16;
	value |= byteArray[readerIndex++] &lt;&lt; 8;
	value |= byteArray[readerIndex++];
	readerIndex++;
	return value;
}</code></pre>
<p>You’re reading from the same location twice.</p>
<p>Expanding by little amounts the way you’re doing is going to be inefficient.</p>
<aside class="quote">
<blockquote>
<p>Have none of you had experience with a circular buffer before? ;D</p>
</blockquote>
</aside>
<p>Hardly an appropriate solution.[/quote]</p>
<p>Okay I think I’ve experienced this before but was never sure and never looked into it. When I use the increment in  the brackets like that it gives me the variable + 1 correct? but it doesn’t change the value of the variable unless you call readerIndex++; by itself?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/streambuffer/409407/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/streambuffer/409407/11</link>
        <pubDate>Sun, 14 Aug 2011 23:40:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-409407-11</guid>
        <source url="https://forum.moparisthebest.com/t/streambuffer/409407.rss">StreamBuffer</source>
      </item>
      <item>
        <title>StreamBuffer</title>
        <dc:creator><![CDATA[@iKilem iKilem]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ikilem">@iKilem</a> wrote:</p>
          <blockquote>
              <p>Do you know how the post-increment operator works?</p>
<pre><code class="lang-auto">public int readInt() {
	int value = byteArray[readerIndex] &lt;&lt; 24;
	value |= byteArray[readerIndex++] &lt;&lt; 16;
	value |= byteArray[readerIndex++] &lt;&lt; 8;
	value |= byteArray[readerIndex++];
	readerIndex++;
	return value;
}</code></pre>
<p>You’re reading from the same location twice.</p>
<p>Expanding by little amounts the way you’re doing is going to be inefficient.</p>
<aside class="quote" data-post="9" data-topic="409407">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/slavemaster/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> slavemaster:</div>
<blockquote>
<p>Have none of you had experience with a circular buffer before? ;D</p>
</blockquote>
</aside>
<p>Hardly an appropriate solution.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/streambuffer/409407/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/streambuffer/409407/10</link>
        <pubDate>Sun, 14 Aug 2011 18:59:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-409407-10</guid>
        <source url="https://forum.moparisthebest.com/t/streambuffer/409407.rss">StreamBuffer</source>
      </item>
      <item>
        <title>StreamBuffer</title>
        <dc:creator><![CDATA[@slavemaster veer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/slavemaster">@slavemaster</a> wrote:</p>
          <blockquote>
              <p>Have none of you had experience with a circular buffer before? ;D</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/streambuffer/409407/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/streambuffer/409407/9</link>
        <pubDate>Fri, 12 Aug 2011 20:18:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-409407-9</guid>
        <source url="https://forum.moparisthebest.com/t/streambuffer/409407.rss">StreamBuffer</source>
      </item>
      <item>
        <title>StreamBuffer</title>
        <dc:creator><![CDATA[@_bool]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_bool">@_bool</a> wrote:</p>
          <blockquote>
              <p>hi let’s reinvent the wheel five billion times but not offer any kind of improvement whatsoever.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/streambuffer/409407/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/streambuffer/409407/8</link>
        <pubDate>Fri, 12 Aug 2011 04:17:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-409407-8</guid>
        <source url="https://forum.moparisthebest.com/t/streambuffer/409407.rss">StreamBuffer</source>
      </item>
      <item>
        <title>StreamBuffer</title>
        <dc:creator><![CDATA[@_s11 s1gma]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_s11">@_s11</a> wrote:</p>
          <blockquote>
              <p>good code doesn’t require documentation, it says exactly what it does on the tin.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/streambuffer/409407/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/streambuffer/409407/7</link>
        <pubDate>Fri, 12 Aug 2011 03:54:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-409407-7</guid>
        <source url="https://forum.moparisthebest.com/t/streambuffer/409407.rss">StreamBuffer</source>
      </item>
      <item>
        <title>StreamBuffer</title>
        <dc:creator><![CDATA[@Jimmyf Jimmyf]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jimmyf">@Jimmyf</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="5" data-topic="409407">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/sinisoul/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> sinisoul:</div>
<blockquote>
<p>Better than mine lawl; I got sick of writing all the damn methods out for each revision so I said screw it and did this.</p>
</blockquote>
</aside>
<p>If you’re referring to the runescape stream obfuscation… It doesn’t change per revision. It stays the same through out.</p>
<p>EDIT: <a href="https://gist.github.com/1141258" rel="nofollow noopener">https://gist.github.com/1141258</a> This is the new buffer I wrote. I would have added more features but I got tired or writing documentation.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/streambuffer/409407/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/streambuffer/409407/6</link>
        <pubDate>Fri, 12 Aug 2011 00:11:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-409407-6</guid>
        <source url="https://forum.moparisthebest.com/t/streambuffer/409407.rss">StreamBuffer</source>
      </item>
      <item>
        <title>StreamBuffer</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>Better than mine lawl; I got sick of writing all the damn methods out for each revision so I said screw it and did this.</p>
<pre><code class="lang-auto">package org.forge.io;

import java.lang.reflect.Constructor;
import java.nio.ByteOrder;

/**
 * RuneForge | 317
 * RSBuffer.java
 * @version 1.0.0
 * @author SiniSoul (SiniSoul@live.com)
 */
public class Buffer {

    /**
     * The current read, write and marker position within the payload.
     */
    private int readposition   = -1,
                writeposition  = -1,
                markerposition = -1;
    
    /**
     * The buffers payload.
     */
    private byte[] payload = null;
    
    /**
     * Sets the marker position, note that this does not check
     * to see if the marker is within the correct bounds of this buffer.
     * @param position The position to set the marker position at.
     */
    public final synchronized void mark(int position) {
        markerposition = position;
    }

    /**
     * Sets the read position.
     * @param position The position to set the read position at.
     */
    public synchronized void setReadPosition(int position) {
        readposition = position;
    }
    
    /**
     * 
     * @return 
     */
    public int readPosition() {
        return readposition;
    }
    
    /**
     * Sets the write position.
     * @param position The position to set the write position at.
     */
    public synchronized void setWritePosition(int position) {
        writeposition = position;
    }
    
    /**
     * 
     * @return 
     */
    public int writePosition() {
        return writeposition;
    }
    
    /**
     * Rewinds the read position to the marker position.
     */
    public synchronized void rewindRead() {
        readposition = markerposition;
    }
    
    /**
     * Rewinds the write position to the marker position.
     */
    public synchronized void rewindWrite() {
        writeposition = markerposition;
    }
    
    /**
     * Rewinds the read and write position to the marker position.
     */
    public final synchronized void rewind() {
        readposition = writeposition = markerposition;
    }
    
    /**
     * Puts a byte into the payload and then increments the write position.
     * @param b The byte to put.
     */
    public void put(byte b) {
        put(b, writeposition++);
    }
    
    /**
     * Puts a byte into the payload.
     * @param b The byte to put.
     * @param position The position to put the byte.
     */
    public void put(byte b, int position) {
        payload[position] = b;
    }
    
    /**
     * 
     * @return 
     */
    public byte get() {
        return get(readposition++);
    }
    
    /**
     * 
     * @param position
     * @return 
     */
    public byte get(int position) {
        return payload[position];
    }
    
    /**
     * 
     * @return 
     */
    public byte[] getPayload() {
        return payload;
    }
    
    /**
     * 
     * @param number
     * @param order 
     */
    public void write(Number number, ByteOrder order, CustomOperation operation) {
       /* Do a quick check */
       if(operation == null)
            throw new NullPointerException("Operation cannot be null - please use CustomOperation.NONE");
       /* Record the old marker position */
       int marker = markerposition;
       /* Mark the current write position */
       mark(writeposition);
       /* Get the amount to increment per each loop */
       int increment = order.equals(ByteOrder.BIG_ENDIAN) ? -1 : order.equals(ByteOrder.LITTLE_ENDIAN) ? 1 : 0;
       /* This should not happen */
       if(increment == 0)
           throw new RuntimeException("Randomized byte order - PANIC!");
       int bytes = number instanceof Byte    ? 1 : 
                  (number instanceof Short   ? 2 : 
                  (number instanceof Integer ? 4 : 8));
       int init = increment &lt; 0 ? bytes : 0;
       int end  = increment &lt; 0 ? 0 : bytes;
       /* Keep a backup of what the previous bytes were */
       byte[] backup = new byte[bytes];
       /* The amount of bytes written */
       int written = 0;
       try {
           for(; init != end; init += increment) {
               /* Back up */
               backup[written] = payload[writeposition];
               byte value = (byte) (bytes == 1 ? number.byteValue() : 
                                   (bytes == 2 ? number.shortValue() &gt;&gt; (8 * (init - 1)) : 
                                   (bytes == 4 ? number.intValue()   &gt;&gt; (8 * (init - 1)) : 
                                    number.longValue() &gt;&gt; (8 * (init - 1)))));
               /* Pass through the operation */
               value = operation.write(value, written, bytes, order);
               /* Put the value */
               put(value);
               /* The byte was written */
               written++;
           } 
       } catch(Exception ex) {
           /* Record the out of bounds position */
           int position = writeposition;
           /* Revert what was already written */
           rewindWrite();
           for(int i = 0; i &lt; written; i++)
               payload[writeposition] = backup[i];
           throw new ArrayIndexOutOfBoundsException("Write Position: "+position+" is out of bounds.");
       } finally {
           /* Revert the old marker position */
           mark(marker);
       }
    }
    
    /**
     * 
     * @param number
     * @param order 
     */
    public void write(Number number, CustomOrder order) {
       /* Record the old marker position */
       int marker = markerposition;
       /* Mark the current write position */
       mark(writeposition);       
       int bytes = number instanceof Byte    ? 1 : 
                  (number instanceof Short   ? 2 : 
                  (number instanceof Integer ? 4 : 8));
       /* Keep a backup of what the previous bytes were */
       byte[] backup = new byte[bytes];
       /* The amount of bytes written */
       int written = 0;
       try {
           for(; written &lt; order.byteorder.length; written++) {
               /* Back up */
               backup[written] = payload[writeposition];
               /* Write */
               put((byte) (bytes == 1 ? number.byteValue() : 
                          (bytes == 2 ? number.shortValue() &gt;&gt; (8 * order.byteorder[written]) : 
                          (bytes == 4 ? number.intValue()   &gt;&gt; (8 * order.byteorder[written]) : 
                           number.longValue() &gt;&gt; (8 * order.byteorder[written])))));
           }
       } catch(Exception ex) {
           /* Record the out of bounds position */
           int position = writeposition;
           /* Revert what was already written */
           rewindWrite();
           for(int i = 0; i &lt; written; i++)
               payload[writeposition] = backup[i];
           throw new ArrayIndexOutOfBoundsException("Write Position: "+position+" is out of bounds.");
       } finally {
           /* Revert the old marker position */
           mark(marker);
       }
    }
    
    /**
     * 
     * @param type
     * @param order
     * @return 
     */
    public Number get(Class&lt;? extends Number&gt; type, ByteOrder order, CustomOperation operation, boolean unsigned) {
        /* Record the old marker position */
       int marker = markerposition;
       /* Mark the current read position */
       mark(readposition);  
       /* Get the amount of bytes within the type */
       int bytes = -1;
       /* The number value to return */
       Number number = null;
       try {
           String name = type.getSimpleName();
           bytes =  name.equals("Byte")      ? 1 :
                   (name.equals("Short"))    ? 2 :
                   (name.equals("Integer"))  ? 4 : 8;
           Constructor constructor = type.getConstructors()[0];
           number = (Number) constructor.newInstance("0");
           if(bytes == -1)
               throw new RuntimeException();
       } catch(Exception ex) {
            throw new RuntimeException(ex);
       }
       /* Get the amount to increment per each loop */
       int increment = order.equals(ByteOrder.BIG_ENDIAN) ? -1 : order.equals(ByteOrder.LITTLE_ENDIAN) ? 1 : 0;
       /* This should not happen */
       if(increment == 0)
           throw new RuntimeException("Randomized byte order - PANIC!");
       int init = increment &lt; 0 ? bytes : 0;
       int end  = increment &lt; 0 ? 0 : bytes;
       /* The amount of bytes written */
       int read = 0;
       try {
           for(; init != end; init += increment) {
               byte b = get();
               /* Pass through the operation */
               b = operation.read((byte) b, read, bytes, order);
               long value = unsigned ? b &amp; 0xFF : b;
               value &lt;&lt;= 8 * (init - 1);
               /* OR the read byte */
               value |= number instanceof Byte ? number.byteValue() : 
                       (number instanceof Short ? number.shortValue() : 
                       (number instanceof Integer ? number.intValue() : number.longValue()));
               Constructor constructor = type.getConstructors()[0];
               number = (Number) constructor.newInstance(""+value);
           } 
       } catch(Exception ex) {
            /* Record the out of bounds position */
           int position = readposition;
           /* Revert to the old read position */
           rewindRead();
           throw new ArrayIndexOutOfBoundsException("Read Position: "+position+" is out of bounds.");
       } finally {
           /* Revert the old marker position */
           mark(marker);
       }
       return number;
    }
        
    
    /**
     * 
     */
    public static class CustomOrder {
        
        /**
         * The custom byte orders.
         */
        public static final CustomOrder 
                
                            INT_B = new CustomOrder(new int[] {
                                1, 0, 3, 2
                            }),
                
                            INT_C = new CustomOrder(new int[] {
                                2, 3, 0, 1
                            });
        
        /**
         * The byte order.
         */
        final int[] byteorder;
        
        /**
         * 
         * @param order The order in which the variable will be written in.
         */
        private CustomOrder(int[] order) {
            this.byteorder = order;
        }
    }
    
    /**
     * 
     */
    public static abstract class CustomOperation {
        
        /**
         * 
         */
        public static final CustomOperation 
                                            /* No operation */
                                            NONE = new CustomOperation() {

                                                @Override
                                                byte write(byte value, int written, int bytes, ByteOrder order) {
                                                    return value;
                                                }

                                                @Override
                                                byte read(byte value, int written, int bytes, ByteOrder order) {
                                                    return value;
                                                }
                                            },
                
                                            /* Special A 
                                             *  -Only used for single bytes.
                                             */
                                            SPECIAL_A = new CustomOperation() {

                                                @Override
                                                byte write(byte value, int written, int bytes, ByteOrder order) {
                                                    if(written != 0)
                                                        return value;
                                                    else
                                                        return (byte) (-value);
                                                }

                                                @Override
                                                byte read(byte value, int read, int bytes, ByteOrder order) {
                                                    if(read != 0)
                                                        return value;
                                                    else
                                                        return (byte) (-value);
                                                }
                                            },
                
                                            /* Special B 
                                             *  -Only used for single bytes.
                                             */
                                            SPECIAL_B = new CustomOperation() {

                                                @Override
                                                byte write(byte value, int written, int bytes, ByteOrder order) {
                                                    if(written != 0)
                                                        return value;
                                                    else
                                                        return (byte) (128 - value);
                                                }

                                                @Override
                                                byte read(byte value, int read, int bytes, ByteOrder order) {
                                                    if(read != 0)
                                                        return value;
                                                    else
                                                        return (byte) (128 - value);
                                                }
                                            },
                
                                            /* 
                                             * Add 128  
                                             *  -Adds 128 to the LS byte     
                                             */
                                            ADD_128 = new CustomOperation() {

                                                @Override
                                                byte write(byte value, int written, int bytes, ByteOrder order) {
                                                    int position = order.equals(ByteOrder.LITTLE_ENDIAN) ? 0 : bytes - 1;
                                                    if(written != position)
                                                        return value;
                                                    else
                                                        return (byte) (128 + value);
                                                }

                                                @Override
                                                byte read(byte value, int written, int bytes, ByteOrder order) {
                                                    int position = order.equals(ByteOrder.LITTLE_ENDIAN) ? 0 : bytes - 1;
                                                    if(written != position)
                                                        return value;
                                                    else
                                                        return (byte) (value - 128);
                                                }
                                            };
        
        /**
         * 
         * @param value
         * @param written
         * @param bytes
         * @param order
         * @return 
         */
        abstract byte write(byte value, int written, int bytes, ByteOrder order);
        
        /**
         * 
         * @param value
         * @param written
         * @param bytes
         * @param order
         * @return 
         */
        abstract byte read(byte value, int written, int bytes, ByteOrder order);
        
        /**
         * 
         */
        private CustomOperation() {}
    }
    
    /**
     * Automatically rewind the buffer.
     */
    private Buffer() {
        mark(0);
        rewind();
    }
    
    /**
     * 
     * @param size The allocation size of the payload byte array.
     */
    public Buffer(int size) {
        this();
        payload = new byte[size];
    }
    
    /**
     * 
     * @param bytes The bytes to set the payload with.
     */
    public Buffer(byte[] bytes) {
        this();
        payload = bytes;
    }
}
</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/streambuffer/409407/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/streambuffer/409407/5</link>
        <pubDate>Thu, 11 Aug 2011 23:53:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-409407-5</guid>
        <source url="https://forum.moparisthebest.com/t/streambuffer/409407.rss">StreamBuffer</source>
      </item>
      <item>
        <title>StreamBuffer</title>
        <dc:creator><![CDATA[@Jimmyf Jimmyf]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jimmyf">@Jimmyf</a> wrote:</p>
          <blockquote>
              <p>Okay, I’m completely rewriting it. It currently supports both read and write operations at the same time. Like the ChannelBuffer in netty I use a reader index and writer index. As soon as I finish the documentation I’ll post it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/streambuffer/409407/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/streambuffer/409407/4</link>
        <pubDate>Thu, 11 Aug 2011 23:39:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-409407-4</guid>
        <source url="https://forum.moparisthebest.com/t/streambuffer/409407.rss">StreamBuffer</source>
      </item>
      <item>
        <title>StreamBuffer</title>
        <dc:creator><![CDATA[@_s11 s1gma]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_s11">@_s11</a> wrote:</p>
          <blockquote>
              <p>block allocations of 4bytes… rly</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/streambuffer/409407/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/streambuffer/409407/3</link>
        <pubDate>Thu, 11 Aug 2011 04:14:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-409407-3</guid>
        <source url="https://forum.moparisthebest.com/t/streambuffer/409407.rss">StreamBuffer</source>
      </item>
      <item>
        <title>StreamBuffer</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <pre><code>                   StreamBuffer
                   /               \
   ReadStreamBuffer     WriteStreamBuffer
</code></pre>
<p>Would make a little more sense.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/streambuffer/409407/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/streambuffer/409407/2</link>
        <pubDate>Thu, 11 Aug 2011 03:57:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-409407-2</guid>
        <source url="https://forum.moparisthebest.com/t/streambuffer/409407.rss">StreamBuffer</source>
      </item>
      <item>
        <title>StreamBuffer</title>
        <dc:creator><![CDATA[@Jimmyf Jimmyf]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jimmyf">@Jimmyf</a> wrote:</p>
          <blockquote>
              <p><span class="bbcode-s"><a href="https://gist.github.com/1138787" rel="nofollow noopener">https://gist.github.com/1138787</a><br>
</span></p>
<p><a href="https://gist.github.com/1141258" class="onebox" target="_blank" rel="nofollow noopener">https://gist.github.com/1141258</a><br>
Don’t mind negative or positive feedback just be sure it’s constructive, let me know what I did wrong and how I could improve.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/streambuffer/409407/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/streambuffer/409407/1</link>
        <pubDate>Thu, 11 Aug 2011 02:33:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-409407-1</guid>
        <source url="https://forum.moparisthebest.com/t/streambuffer/409407.rss">StreamBuffer</source>
      </item>
  </channel>
</rss>
