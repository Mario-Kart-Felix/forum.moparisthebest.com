<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Building Messages</title>
    <link>https://forum.moparisthebest.com/t/building-messages/554331</link>
    <description>Old code, different way of handling the base construction of packets. Wouldn&#39;t be hard to convert to netty or apache.

[code=java5]
package com.runescape.oceanus.net;

public enum ByteAccess {

	/*
	 * Messages are being packed into the buffer in the form of bytes.
	 */
	BYTE_ACCESS,

	/*
	 * Messages are being packed into the buffer in the form of bits.
	 */
	BIT_ACCESS
}[/code]

[code=java5]
package com.runescape.oceanus.net;

public enum ByteOrder {

	/*
	 * Stores the least significant byte in the smallest memory address.
	 */
	LITTLE_BYTE_ORDER,

	/*
	 * Stores the most significant byte in the smallest memory address.
	 */
	BIG_BYTE_ORDER,

	/*
	 * Stores the most significant part in the second to last byte.
	 */
	MIDDLE_BYTE_ORDER,

	/*
	 * Stores the most significant part in the second byte.
	 */
	INVERSE_MIDDLE_BYTE_ORDER;
}[/code]

[code=java5]
package com.runescape.oceanus.net;

public enum ByteValue {

	/*
	 * No value modifications are performed.
	 */
	STANDARD,

	/*
	 * The value of the byte is raised by 128.
	 */
	ADDITIONAL,

	/*
	 * The value of the byte is turned negative.
	 */
	NEGATED,

	/*
	 * The value of the byte is subtracted from 128.
	 */
	SUBTRAHEND;
}[/code]

[code=java5]package com.runescape.oceanus.net.channel.message;

import com.runescape.oceanus.net.ByteValue;
import com.runescape.oceanus.net.channel.ChannelBuffer;

public abstract class MessageBuilder {

	/**
	 * The internal buffer.
	 */
	protected ChannelBuffer buffer;

	/**
	 * Places a single value into the internal buffer.
	 * 
	 * @param value The value being placed into the internal buffer.
	 * 
	 * @param definition The definition of any transformations performed on the value.
	 */
	public abstract void write(long value, ByteValue definition);

	/**
	 * The overloaded class constructor used for instantiation of this
	 * class file.
	 * 
	 * @param buffer The internal buffer.
	 */
	public MessageBuilder(ChannelBuffer buffer) {

		this.buffer = buffer;
	}
}[/code]

[code=java5]package com.runescape.oceanus.net.channel;

import java.nio.ByteBuffer;

import com.runescape.oceanus.net.ByteAccess;
import com.runescape.oceanus.net.ByteOrder;
import com.runescape.oceanus.net.ByteValue;
import com.runescape.oceanus.net.channel.message.MessageBuilder;
import com.runescape.oceanus.net.channel.message.builders.BitToMessageBuilder;
import com.runescape.oceanus.net.channel.message.builders.ByteToMessageBuilder;
import com.runescape.oceanus.net.channel.message.builders.IntegerToMessageBuilder;
import com.runescape.oceanus.net.channel.message.builders.LongToMessageBuilder;
import com.runescape.oceanus.net.channel.message.builders.ShortToMessageBuilder;

public final class ChannelBuffer {

	/**
	 * The internal buffer.
	 */
	private ByteBuffer buffer;

	/**
	 * The message&#39;s length, indicated by the buffer&#39;s current position.
	 */
	private int length = 0;

	/**
	 * The current position of the bit-wise operation.
	 */
	private int position = 0;

	/**
	 * The overloaded class constructor used for instantiation of this
	 * class file.
	 * 
	 * @param buffer The internal buffer.
	 */
	public ChannelBuffer(ByteBuffer buffer) {

		this.buffer = buffer;
	}

	/**
	 * Places a single short into the internal buffer. Offers order specification.
	 * 
	 * @param value The value of the short.
	 * 
	 * @param definition The definition of any transformations performed on the short.
	 * 
	 * @param order The definition of the ordering of the value.
	 */
	public final void writeShort(int value, ByteValue definition, ByteOrder order) {

		switch (order) {

		case BIG_BYTE_ORDER:

			writeByte(value &gt;&gt; 8, ByteValue.STANDARD);

			writeByte(value, definition);
			break;

		case LITTLE_BYTE_ORDER:

			writeByte(value, definition);

			writeByte(value &gt;&gt; 8, ByteValue.STANDARD);
			break;

		default:
			throw new IllegalArgumentException(&quot;Invalid ordering definition.&quot;);
		}
	}

	/**
	 * Writes a series of bytes derived from the internal buffer.
	 * 
	 * @param source The internal buffer.
	 */
	public final void writeBytes(ByteBuffer source) {

		for (int i = 0; i &lt; source.position(); i++) {

			writeByte(source.get(i), ByteValue.STANDARD);
		}
	}

	/**
	 * Places a single long into the internal buffer.
	 * 
	 * @param value The value of the long.
	 * 
	 * @param definition The definition of any transformations performed on the long.
	 */
	public final void writeLong(long value, ByteValue definition) {

		write(new LongToMessageBuilder(this), value, definition);
	}

	/**
	 * Places a single integer into the internal buffer.
	 * 
	 * @param value The value of the integer.
	 * 
	 * @param definition The definition of any transformations performed on the integer.
	 */
	public final void writeInt(int value, ByteValue definition) {

		write(new IntegerToMessageBuilder(this), value, definition);
	}

	/**
	 * Places a single byte into the internal buffer.
	 * 
	 * @param value The value of the byte.
	 * 
	 * @param definition The definition of any transformations performed on the byte.
	 */
	public final void writeByte(int value, ByteValue definition) {

		write(new ByteToMessageBuilder(this), value, definition);
	}

	/**
	 * Places a single short into the internal buffer.
	 * 
	 * @param value The value of the short.
	 * 
	 * @param definition The definition of any transformations performed on the short.
	 */
	public final void writeShort(int value, ByteValue definition) {

		write(new ShortToMessageBuilder(this), value, definition);
	}

	/**
	 * Places a single value into the internal buffer.
	 * 
	 * @param builder Places the byte and performs any value transformation.
	 * 
	 * @param value The value.
	 * 
	 * @param definition The definition of any transformations performed on the value.
	 */
	public final void write(MessageBuilder builder, long value, ByteValue definition) {

		builder.write(value, definition);
	}

	/**
	 * Places a set of bits into the internal buffer.
	 * 
	 * @param value The bit&#39;s value.
	 * 
	 * @param amount The amount of bits.
	 */
	public final void writeBits(final int amount, int value) {

		final MessageBuilder builder = new BitToMessageBuilder(this, amount);

		builder.write(value, ByteValue.STANDARD);
	}

	/**
	 * Switches between the two different {@link ByteAccess} states.
	 * 
	 * @param access The access type modification.
	 */
	public final void setAccessType(ByteAccess access) {

		switch (access) {

		case BIT_ACCESS:

			setPosition(buffer.position() * 8);
			break;

		case BYTE_ACCESS:

			buffer.position((getPosition() + 7) / 8);
			break;
		}
	}

	/**
	 * Returns an instance of the internal buffer.
	 * 
	 * @return The returned instance.
	 */
	public final ByteBuffer getInternal() {

		return buffer;
	}

	/**
	 * Returns the message&#39;s length.
	 * 
	 * @return The returned length.
	 */
	public int getLength() {

		return length;
	}

	/**
	 * Modifies the message&#39;s length.
	 * 
	 * @param length The new modification.
	 */
	public void setLength(int length) {

		this.length = length;
	}

	/**
	 * Returns the current position of the bit-wise operation.
	 * 
	 * @return The returned position.
	 */
	public int getPosition() {

		return position;
	}

	/**
	 * Modifies the current position of the bit-wise operation.
	 * 
	 * @param position The new modification.
	 */
	public void setPosition(int position) {

		this.position = position;
	}

	/**
	 * Modifies the instance of the internal buffer.
	 * 
	 * @param buffer The new modification.
	 */
	public void setInternal(ByteBuffer buffer) {

		this.buffer = buffer;
	}
}[/code]

Implementation files, supports bits too : http://upx.nz/pfcsgB</description>
    
    <lastBuildDate>Sat, 16 Jan 2016 08:00:23 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/building-messages/554331.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Building Messages</title>
        <dc:creator><![CDATA[@Vix Vix]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/vix">@Vix</a> wrote:</p>
          <blockquote>
              <p>If anyone was interested this was the rest of the system. Not including all of the code, just enough to give an idea how i personally implemented this. Once again, this is old code I haven’t worked with in a while.</p>
<p>Two methods pulled from the ChannelContext class. Prepare is called when the outgoing packet is first created. Execute just executes an event.</p>
<p>[code=java5]	/**<br>
* Prepares the channel’s internal buffer for the writing of a message.<br>
*<br>
* <a class="mention" href="/u/param">@param</a> packet The message of interest.<br>
*<br>
* <a class="mention" href="/u/param">@param</a> buffer The internal buffer.<br>
*/<br>
public final void prepare(OutgoingPacket packet, ChannelBuffer buffer) {</p>
<pre><code>	execute(new PrepareChannelEvent(packet.getHeader(), buffer, packet.getOpcode()));
}

/**
 * Executes a single channel pertinent event.
 * 
 * @param event The event receiving the execution.
 */
public final void execute(ChannelEvent event) {

	try {

		event.execute(this);

	} catch (IOException exception) {

		close();
	}
}[/code]
</code></pre>
<p>An event pertinent to channel operation. Reading/Writing/Accepting connections.</p>
<p>[code=java5]package com.runescape.oceanus.net.channel;</p>
<p>import java.io.IOException;</p>
<p>public abstract class ChannelEvent {</p>
<pre><code>/**
 * Executes an event pertinent to channel operation.
 * 
 * @param context The context of the channel that is executing the event.
 * 
 * @throws IOException The exception thrown if an error occurs while performing
 * an input or output operation involving the channel.
 */
public abstract void execute(ChannelContext context) throws IOException;
</code></pre>
<p>}[/code]</p>
<p>An event to prepare the channel to send an outgoing packet.</p>
<p>[code=java5]<br>
package com.runescape.oceanus.net.channel.events;</p>
<p>import java.io.IOException;</p>
<p>import com.runescape.oceanus.net.ByteValue;<br>
import com.runescape.oceanus.net.channel.ChannelBuffer;<br>
import com.runescape.oceanus.net.channel.ChannelContext;<br>
import com.runescape.oceanus.net.channel.ChannelEvent;<br>
import com.runescape.oceanus.net.channel.protocol.packet.PacketHeader;</p>
<p>public final class PrepareChannelEvent extends ChannelEvent {</p>
<pre><code>/**
 * The message's heading definition.
 */
private final PacketHeader definition;

/**
 * The internal buffer.
 */
private final ChannelBuffer buffer;

/**
 * The numerical opcode.
 */
private final int opcode;

/**
 * The overloaded class constructor used for the instantiation of this
 * class file.
 * 
 * @param definition The message's heading definition.
 * 
 * @param buffer The internal buffer.
 * 
 * @param opcode The numerical opcode.
 */
public PrepareChannelEvent(PacketHeader definition, ChannelBuffer buffer, int opcode) {

	this.definition = definition;

	this.buffer = buffer;

	this.opcode = opcode;
}

@Override
public void execute(ChannelContext context) throws IOException {

	/*
	 * If a packet does not have an empty heading then the opcode must be encrypted
	 * with a cryptographic cipher. After the encryption if the packet's heading is
	 * defined as a byte or a short the length must be indicated by that primitive.
	 */
	if (!definition.equals(PacketHeader.EMPTY_PACKET_HEADER)) {

		buffer.writeByte(opcode + context.getPlayer().getCryptographyPair().getDecoder().getNextValue(), ByteValue.STANDARD);

		if (definition.equals(PacketHeader.VARIABLE_BYTE_PACKET_HEADER)) {

			buffer.setLength(buffer.getInternal().position());

			buffer.writeByte(0, ByteValue.STANDARD);

		} else if (definition.equals(PacketHeader.VARIABLE_SHORT_PACKET_HEADER)) {

			buffer.setLength(buffer.getInternal().position());

			buffer.writeShort(0, ByteValue.STANDARD);
		}
	}
}
</code></pre>
<p>}[/code]</p>
<p>An event to finish writing the packet.</p>
<p>[code=java5]package com.runescape.oceanus.net.channel.events;</p>
<p>import java.io.IOException;</p>
<p>import com.runescape.oceanus.net.channel.ChannelBuffer;<br>
import com.runescape.oceanus.net.channel.ChannelContext;<br>
import com.runescape.oceanus.net.channel.ChannelEvent;<br>
import com.runescape.oceanus.net.channel.protocol.packet.PacketHeader;</p>
<p>public final class WriteChannelEvent extends ChannelEvent {</p>
<pre><code>/**
 * The message's heading definition.
 */
private final PacketHeader definition;

/**
 * The internal buffer.
 */
private final ChannelBuffer buffer;

/**
 * The overloaded class constructor used for the instantiation of
 * this class file.
 * 
 * @param definition The message's heading definition.
 * 
 * @param buffer The internal buffer.
 */
public WriteChannelEvent(PacketHeader definition, ChannelBuffer buffer) {

	this.definition = definition;

	this.buffer = buffer;
}

@Override
public void execute(ChannelContext context) throws IOException {

	if (definition.equals(PacketHeader.VARIABLE_BYTE_PACKET_HEADER)) {

		buffer.getInternal().put(buffer.getLength(), (byte) (buffer.getInternal().position() - buffer.getLength() - 1));

	} else if (definition.equals(PacketHeader.VARIABLE_SHORT_PACKET_HEADER)) {

		buffer.getInternal().putShort(buffer.getLength(), (short) (buffer.getInternal().position() - buffer.getLength() - 2));
	}

	/*
	 * The limit is set to the current position and then the position is set to zero.
	 */
	buffer.getInternal().flip();

	/*
	 * Writes a sequence of bytes to the specified channel.
	 */
	context.getChannel().write(buffer.getInternal());

	/*
	 * Clears this buffer. The position is set to zero, the limit is set to the capacity.
	 */
	buffer.getInternal().clear();
}
</code></pre>
<p>}[/code]</p>
<p>Base class for outgoing packets. Prepare event is triggered everytime a new outgoing packet is created.</p>
<p>[code=java5]package com.runescape.oceanus.net.channel.protocol.packet;</p>
<p>import java.io.IOException;<br>
import java.nio.ByteBuffer;</p>
<p>import com.runescape.oceanus.net.channel.ChannelBuffer;<br>
import com.runescape.oceanus.net.channel.ChannelContext;</p>
<p>public abstract class OutgoingPacket {</p>
<pre><code>/**
 * The opcode of the packet.
 */
private final int opcode;

/**
 * The heading of the packet.
 */
private final PacketHeader header;

/**
 * The context of the channel that is dispatching the packet.
 */
protected ChannelContext context;

/**
 * The packet's internal buffer.
 */
protected ChannelBuffer buffer;

/**
 * Dispatches the packet to the associated channel.
 * 
 * @param player The distributor.
 * 
 * @throws IOException The exception thrown if an error occurs while
 * building or dispensing the packet.
 */
public abstract ChannelBuffer dispatch() throws IOException;

/**
 * The overloaded class constructor used for instantiation of this
 * class file.
 * 
 * @param opcode The opcode of the packet.
 * 
 * @param header The heading of the packet.
 * 
 * @param context The context of the channel that is dispatching the packet.
 * 
 * @param allocation The allocation of the packet's internal buffer.
 */
public OutgoingPacket(int opcode, PacketHeader header, ChannelContext context, int allocation) {

	this.opcode = opcode;

	this.header = header;

	this.context = context;

	this.buffer = new ChannelBuffer(ByteBuffer.allocate(allocation));

	context.prepare(this, buffer);
}

/**
 * Returns the opcode of the packet.
 * 
 * @return The returned opcode.
 */
public final int getOpcode() {

	return opcode;
}

/**
 * Returns the heading of the packet.
 * 
 * @return The returned heading.
 */
public final PacketHeader getHeader() {

	return header;
}
</code></pre>
<p>}[/code]</p>
<p>An example packet.</p>
<p>[code=java5]package com.runescape.oceanus.net.channel.protocol.packet.out;</p>
<p>import java.io.IOException;<br>
import java.util.Iterator;</p>
<p>import com.runescape.oceanus.Oceanus;<br>
import com.runescape.oceanus.model.entity.mobile.player.Player;<br>
import com.runescape.oceanus.model.entity.mobile.player.update.UpdateBlock;<br>
import com.runescape.oceanus.model.entity.mobile.player.update.impl.PlayerMovementBlock;<br>
import com.runescape.oceanus.model.entity.mobile.player.update.impl.RegionalMovementBlock;<br>
import com.runescape.oceanus.model.entity.mobile.player.update.impl.StatefulUpdateBlock;<br>
import com.runescape.oceanus.net.ByteAccess;<br>
import com.runescape.oceanus.net.channel.ChannelBuffer;<br>
import com.runescape.oceanus.net.channel.ChannelContext;<br>
import com.runescape.oceanus.net.channel.protocol.packet.OutgoingPacket;<br>
import com.runescape.oceanus.net.channel.protocol.packet.PacketHeader;</p>
<p>public final class PlayerUpdatePacket extends OutgoingPacket {</p>
<pre><code>/**
 * The internal buffer responsible for pooling the update block.
 */
private final ChannelBuffer update;

/**
 * The overloaded class constructor used for instantiation of this
 * class file.
 * 
 * @param context The context of the channel that is dispatching the packet.
 */
public PlayerUpdatePacket(ChannelContext context, ChannelBuffer update) {

	super(81, PacketHeader.VARIABLE_SHORT_PACKET_HEADER, context, 16384);

	this.update = update;
}

/**
 * Appends an individual piece of the main updating block.
 * 
 * @param block The piece of the main updating block.
 * 
 * @param buffer The internal buffer.
 * 
 * @param player The player being updated.
 */
public final void append(UpdateBlock block, ChannelBuffer buffer, Player player) {

	block.update(player, buffer);
}

@Override
public ChannelBuffer dispatch() throws IOException {

	final Player player = context.getPlayer();

	buffer.setAccessType(ByteAccess.BIT_ACCESS);

	append(new PlayerMovementBlock(), buffer, player);

	if (player.updateRequired()) {

		append(new StatefulUpdateBlock(false), update, player);
	}

	buffer.writeBits(8, player.getLocalPlayers().size());

	for(Iterator&lt;Player&gt; iterator = player.getLocalPlayers().iterator(); iterator.hasNext();) {

		final Player other = iterator.next();

		if (other.getLocation().isWithinDistance(player.getLocation(), 15)) {

			append(new RegionalMovementBlock(), buffer, other);

			if (other.updateRequired()) {

				append(new StatefulUpdateBlock(false), update, other);

			}

		} else {

			iterator.remove();

			buffer.writeBits(1, 1);

			buffer.writeBits(2, 3);
		}
	}

	for (Player other : Oceanus.getUpdateProcessor().getPlayers().values()) {

		if (other.getLocalPlayers().size() &gt;= 255) {

			break;
		}

		if (other == player || player.getLocalPlayers().contains(other)) {

			continue;

		}
		if (other.getLocation().isWithinDistance(player.getLocation(), 15)) {

			player.getLocalPlayers().add(other);

			buffer.writeBits(11, other.getIndex());

			buffer.writeBits(1, 1);

			buffer.writeBits(1, 1);

			buffer.writeBits(5, other.getLocation().getY() - player.getLocation().getY());

			buffer.writeBits(5, other.getLocation().getX() - player.getLocation().getX());

			append(new StatefulUpdateBlock(true), update, other);

		}
	}

	if (update.getInternal().position() &gt; 0) {

		buffer.writeBits(11, 2047);

		buffer.setAccessType(ByteAccess.BYTE_ACCESS);

		buffer.writeBytes(update.getInternal());

	} else {

		buffer.setAccessType(ByteAccess.BYTE_ACCESS);
	}

	return buffer;
}
</code></pre>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/building-messages/554331/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/building-messages/554331/13</link>
        <pubDate>Sat, 16 Jan 2016 08:00:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554331-13</guid>
        <source url="https://forum.moparisthebest.com/t/building-messages/554331.rss">Building Messages</source>
      </item>
      <item>
        <title>Building Messages</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>[quote=“Davidi2, post:11, topic:554331”][quote author=Davidi2 link=topic=673257.msg4502293#msg4502293 date=1452722952]</p>
<p><code>
parseName(FIVE_THOUSAND_FIFTY_FOUR.name())</code><br>
[/quote][quote author=sini link=topic=673257.msg4502297#msg4502297 date=1452732632]<br>
I cant tell if you’re joking<br>
[/quote][/quote]</p>
<p>but its you…you may do that…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/building-messages/554331/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/building-messages/554331/12</link>
        <pubDate>Thu, 14 Jan 2016 00:59:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554331-12</guid>
        <source url="https://forum.moparisthebest.com/t/building-messages/554331.rss">Building Messages</source>
      </item>
      <item>
        <title>Building Messages</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>[quote=“Davidi2, post:9, topic:554331”]<code>
parseName(FIVE_THOUSAND_FIFTY_FOUR.name())</code>[/quote][quote=“sini, post:10, topic:554331”]I cant tell if you’re joking[/quote]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/building-messages/554331/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/building-messages/554331/11</link>
        <pubDate>Thu, 14 Jan 2016 00:53:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554331-11</guid>
        <source url="https://forum.moparisthebest.com/t/building-messages/554331.rss">Building Messages</source>
      </item>
      <item>
        <title>Building Messages</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>I cant tell if you’re joking or. I don’t understand why people don’t handle the packet obfuscation as a transport codec not in the message decoder/encoder logic.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/building-messages/554331/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/building-messages/554331/10</link>
        <pubDate>Thu, 14 Jan 2016 00:50:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554331-10</guid>
        <source url="https://forum.moparisthebest.com/t/building-messages/554331.rss">Building Messages</source>
      </item>
      <item>
        <title>Building Messages</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p><code>
MessageBuilder.instance().newBuilder().getOpcodeReference().setOpcode(55).putInt(ByteValue.NEGATED, ByteOrder.LITTLE, parseName(FIVE_THOUSAND_FIFTY_FOUR.name()).wrap().toMessage().send();</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/building-messages/554331/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/building-messages/554331/9</link>
        <pubDate>Wed, 13 Jan 2016 22:09:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554331-9</guid>
        <source url="https://forum.moparisthebest.com/t/building-messages/554331.rss">Building Messages</source>
      </item>
      <item>
        <title>Building Messages</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="6" data-topic="554331">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/my-swagger/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> my-swagger:</div>
<blockquote>
<p>Good job, looks <span class="bbcode-b">similar to Apollo</span></p>
</blockquote>
</aside>
<p>*similar to how you’d abstractly determine how to do it properly</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/building-messages/554331/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/building-messages/554331/8</link>
        <pubDate>Wed, 13 Jan 2016 01:03:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554331-8</guid>
        <source url="https://forum.moparisthebest.com/t/building-messages/554331.rss">Building Messages</source>
      </item>
      <item>
        <title>Building Messages</title>
        <dc:creator><![CDATA[@Loading_please_wait1 Loading please wait]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/loading_please_wait1">@Loading_please_wait1</a> wrote:</p>
          <blockquote>
              <p>[quote=“lare69, post:5, topic:554331”][quote author=Loading please wait link=topic=673257.msg4502180#msg4502180 date=1452565082]<br>
Autistic.<br>
[/quote]<br>
you do know that im just kidding around, right? he’s been my friend for years lol[/quote]</p>
<p>Autistic.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/building-messages/554331/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/building-messages/554331/7</link>
        <pubDate>Tue, 12 Jan 2016 20:26:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554331-7</guid>
        <source url="https://forum.moparisthebest.com/t/building-messages/554331.rss">Building Messages</source>
      </item>
      <item>
        <title>Building Messages</title>
        <dc:creator><![CDATA[@my-swagger my-swagger]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/my-swagger">@my-swagger</a> wrote:</p>
          <blockquote>
              <p>Good job, looks similar to Apollo</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/building-messages/554331/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/building-messages/554331/6</link>
        <pubDate>Tue, 12 Jan 2016 16:45:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554331-6</guid>
        <source url="https://forum.moparisthebest.com/t/building-messages/554331.rss">Building Messages</source>
      </item>
      <item>
        <title>Building Messages</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="4" data-topic="554331">
<div class="title">
<div class="quote-controls"></div>
 Loading please wait:</div>
<blockquote>
<p>Autistic.</p>
</blockquote>
</aside>
<p>you do know that im just kidding around, right? he’s been my friend for years lol</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/building-messages/554331/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/building-messages/554331/5</link>
        <pubDate>Tue, 12 Jan 2016 12:34:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554331-5</guid>
        <source url="https://forum.moparisthebest.com/t/building-messages/554331.rss">Building Messages</source>
      </item>
      <item>
        <title>Building Messages</title>
        <dc:creator><![CDATA[@Loading_please_wait1 Loading please wait]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/loading_please_wait1">@Loading_please_wait1</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="554331">
<div class="title">
<div class="quote-controls"></div>
 lare69:</div>
<blockquote>
<p>rofl you aren’t even pooling buffers this is shit just kill yourself bro</p>
</blockquote>
</aside>
<p>Autistic.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/building-messages/554331/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/building-messages/554331/4</link>
        <pubDate>Tue, 12 Jan 2016 02:18:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554331-4</guid>
        <source url="https://forum.moparisthebest.com/t/building-messages/554331.rss">Building Messages</source>
      </item>
      <item>
        <title>Building Messages</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="554331">
<div class="title">
<div class="quote-controls"></div>
 lare69:</div>
<blockquote>
<p>rofl you aren’t even pooling buffers this is shit just kill yourself bro</p>
</blockquote>
</aside>
<p>smh</p>
<p>Looks good vix. Pooling is hard to implement correctly and using Netty 4.x bytebuf is so much better than probably having to test/write those systems yourself.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/building-messages/554331/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/building-messages/554331/3</link>
        <pubDate>Tue, 12 Jan 2016 00:30:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554331-3</guid>
        <source url="https://forum.moparisthebest.com/t/building-messages/554331.rss">Building Messages</source>
      </item>
      <item>
        <title>Building Messages</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>rofl you aren’t even pooling buffers this is shit just kill yourself bro</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/building-messages/554331/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/building-messages/554331/2</link>
        <pubDate>Mon, 11 Jan 2016 21:28:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554331-2</guid>
        <source url="https://forum.moparisthebest.com/t/building-messages/554331.rss">Building Messages</source>
      </item>
      <item>
        <title>Building Messages</title>
        <dc:creator><![CDATA[@Vix Vix]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/vix">@Vix</a> wrote:</p>
          <blockquote>
              <p>Old code, different way of handling the base construction of packets. Wouldn’t be hard to convert to netty or apache.</p>
<p>[code=java5]<br>
package <a href="http://com.runescape.oceanus.net" rel="nofollow noopener">com.runescape.oceanus.net</a>;</p>
<p>public enum ByteAccess {</p>
<pre><code>/*
 * Messages are being packed into the buffer in the form of bytes.
 */
BYTE_ACCESS,

/*
 * Messages are being packed into the buffer in the form of bits.
 */
BIT_ACCESS
</code></pre>
<p>}[/code]</p>
<p>[code=java5]<br>
package <a href="http://com.runescape.oceanus.net" rel="nofollow noopener">com.runescape.oceanus.net</a>;</p>
<p>public enum ByteOrder {</p>
<pre><code>/*
 * Stores the least significant byte in the smallest memory address.
 */
LITTLE_BYTE_ORDER,

/*
 * Stores the most significant byte in the smallest memory address.
 */
BIG_BYTE_ORDER,

/*
 * Stores the most significant part in the second to last byte.
 */
MIDDLE_BYTE_ORDER,

/*
 * Stores the most significant part in the second byte.
 */
INVERSE_MIDDLE_BYTE_ORDER;
</code></pre>
<p>}[/code]</p>
<p>[code=java5]<br>
package <a href="http://com.runescape.oceanus.net" rel="nofollow noopener">com.runescape.oceanus.net</a>;</p>
<p>public enum ByteValue {</p>
<pre><code>/*
 * No value modifications are performed.
 */
STANDARD,

/*
 * The value of the byte is raised by 128.
 */
ADDITIONAL,

/*
 * The value of the byte is turned negative.
 */
NEGATED,

/*
 * The value of the byte is subtracted from 128.
 */
SUBTRAHEND;
</code></pre>
<p>}[/code]</p>
<p>[code=java5]package com.runescape.oceanus.net.channel.message;</p>
<p>import com.runescape.oceanus.net.ByteValue;<br>
import com.runescape.oceanus.net.channel.ChannelBuffer;</p>
<p>public abstract class MessageBuilder {</p>
<pre><code>/**
 * The internal buffer.
 */
protected ChannelBuffer buffer;

/**
 * Places a single value into the internal buffer.
 * 
 * @param value The value being placed into the internal buffer.
 * 
 * @param definition The definition of any transformations performed on the value.
 */
public abstract void write(long value, ByteValue definition);

/**
 * The overloaded class constructor used for instantiation of this
 * class file.
 * 
 * @param buffer The internal buffer.
 */
public MessageBuilder(ChannelBuffer buffer) {

	this.buffer = buffer;
}
</code></pre>
<p>}[/code]</p>
<p>[code=java5]package com.runescape.oceanus.net.channel;</p>
<p>import java.nio.ByteBuffer;</p>
<p>import com.runescape.oceanus.net.ByteAccess;<br>
import com.runescape.oceanus.net.ByteOrder;<br>
import com.runescape.oceanus.net.ByteValue;<br>
import com.runescape.oceanus.net.channel.message.MessageBuilder;<br>
import com.runescape.oceanus.net.channel.message.builders.BitToMessageBuilder;<br>
import com.runescape.oceanus.net.channel.message.builders.ByteToMessageBuilder;<br>
import com.runescape.oceanus.net.channel.message.builders.IntegerToMessageBuilder;<br>
import com.runescape.oceanus.net.channel.message.builders.LongToMessageBuilder;<br>
import com.runescape.oceanus.net.channel.message.builders.ShortToMessageBuilder;</p>
<p>public final class ChannelBuffer {</p>
<pre><code>/**
 * The internal buffer.
 */
private ByteBuffer buffer;

/**
 * The message's length, indicated by the buffer's current position.
 */
private int length = 0;

/**
 * The current position of the bit-wise operation.
 */
private int position = 0;

/**
 * The overloaded class constructor used for instantiation of this
 * class file.
 * 
 * @param buffer The internal buffer.
 */
public ChannelBuffer(ByteBuffer buffer) {

	this.buffer = buffer;
}

/**
 * Places a single short into the internal buffer. Offers order specification.
 * 
 * @param value The value of the short.
 * 
 * @param definition The definition of any transformations performed on the short.
 * 
 * @param order The definition of the ordering of the value.
 */
public final void writeShort(int value, ByteValue definition, ByteOrder order) {

	switch (order) {

	case BIG_BYTE_ORDER:

		writeByte(value &gt;&gt; 8, ByteValue.STANDARD);

		writeByte(value, definition);
		break;

	case LITTLE_BYTE_ORDER:

		writeByte(value, definition);

		writeByte(value &gt;&gt; 8, ByteValue.STANDARD);
		break;

	default:
		throw new IllegalArgumentException("Invalid ordering definition.");
	}
}

/**
 * Writes a series of bytes derived from the internal buffer.
 * 
 * @param source The internal buffer.
 */
public final void writeBytes(ByteBuffer source) {

	for (int i = 0; i &lt; source.position(); i++) {

		writeByte(source.get(i), ByteValue.STANDARD);
	}
}

/**
 * Places a single long into the internal buffer.
 * 
 * @param value The value of the long.
 * 
 * @param definition The definition of any transformations performed on the long.
 */
public final void writeLong(long value, ByteValue definition) {

	write(new LongToMessageBuilder(this), value, definition);
}

/**
 * Places a single integer into the internal buffer.
 * 
 * @param value The value of the integer.
 * 
 * @param definition The definition of any transformations performed on the integer.
 */
public final void writeInt(int value, ByteValue definition) {

	write(new IntegerToMessageBuilder(this), value, definition);
}

/**
 * Places a single byte into the internal buffer.
 * 
 * @param value The value of the byte.
 * 
 * @param definition The definition of any transformations performed on the byte.
 */
public final void writeByte(int value, ByteValue definition) {

	write(new ByteToMessageBuilder(this), value, definition);
}

/**
 * Places a single short into the internal buffer.
 * 
 * @param value The value of the short.
 * 
 * @param definition The definition of any transformations performed on the short.
 */
public final void writeShort(int value, ByteValue definition) {

	write(new ShortToMessageBuilder(this), value, definition);
}

/**
 * Places a single value into the internal buffer.
 * 
 * @param builder Places the byte and performs any value transformation.
 * 
 * @param value The value.
 * 
 * @param definition The definition of any transformations performed on the value.
 */
public final void write(MessageBuilder builder, long value, ByteValue definition) {

	builder.write(value, definition);
}

/**
 * Places a set of bits into the internal buffer.
 * 
 * @param value The bit's value.
 * 
 * @param amount The amount of bits.
 */
public final void writeBits(final int amount, int value) {

	final MessageBuilder builder = new BitToMessageBuilder(this, amount);

	builder.write(value, ByteValue.STANDARD);
}

/**
 * Switches between the two different {@link ByteAccess} states.
 * 
 * @param access The access type modification.
 */
public final void setAccessType(ByteAccess access) {

	switch (access) {

	case BIT_ACCESS:

		setPosition(buffer.position() * 8);
		break;

	case BYTE_ACCESS:

		buffer.position((getPosition() + 7) / 8);
		break;
	}
}

/**
 * Returns an instance of the internal buffer.
 * 
 * @return The returned instance.
 */
public final ByteBuffer getInternal() {

	return buffer;
}

/**
 * Returns the message's length.
 * 
 * @return The returned length.
 */
public int getLength() {

	return length;
}

/**
 * Modifies the message's length.
 * 
 * @param length The new modification.
 */
public void setLength(int length) {

	this.length = length;
}

/**
 * Returns the current position of the bit-wise operation.
 * 
 * @return The returned position.
 */
public int getPosition() {

	return position;
}

/**
 * Modifies the current position of the bit-wise operation.
 * 
 * @param position The new modification.
 */
public void setPosition(int position) {

	this.position = position;
}

/**
 * Modifies the instance of the internal buffer.
 * 
 * @param buffer The new modification.
 */
public void setInternal(ByteBuffer buffer) {

	this.buffer = buffer;
}
</code></pre>
<p>}[/code]</p>
<p>Implementation files, supports bits too : <a href="http://upx.nz/pfcsgB" rel="nofollow noopener">http://upx.nz/pfcsgB</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/building-messages/554331/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/building-messages/554331/1</link>
        <pubDate>Fri, 08 Jan 2016 23:18:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-554331-1</guid>
        <source url="https://forum.moparisthebest.com/t/building-messages/554331.rss">Building Messages</source>
      </item>
  </channel>
</rss>
