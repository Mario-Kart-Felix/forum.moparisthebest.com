<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>State or Stateless</title>
    <link>https://forum.moparisthebest.com/t/state-or-stateless/432900</link>
    <description>I&#39;m trying to think of the best way to handle networking in my server. And I&#39;m stuck between having different Packet objects, or just processing the packet when it&#39;s read. What are your views on each of these?</description>
    
    <lastBuildDate>Tue, 14 Feb 2012 11:52:07 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/state-or-stateless/432900.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>State or Stateless</title>
        <dc:creator><![CDATA[@iKilem iKilem]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ikilem">@iKilem</a> wrote:</p>
          <blockquote>
              <p>There are instances where you require state – for example, when a player attacks another character, you need to store the information you received – but I think that should be separate, since it isn’t necessary for all packets. The idea is to process the packets when they’re read, but for those that require state, you would create an object much like the example you showed (e.g. in Hyperion, I believe they all derive from the Action class).</p>
<p>If you wanted to use a dispatch table for handing packets as opposed to having a bunch of conditional statements, you would need individual classes, but they wouldn’t need any data initialised, and you would only need a single instance, so something like this:</p>
<pre><code class="lang-auto">public class DropItemPacketHandler implements PacketHandler {
    public static final DropItemPacketHandler INSTANCE = new DropItemPacketHandler();

    private DropItemPacketHandler() {}

    @Override
    public void process(final Client source, final ByteBuffer buffer) {
        // validate, etc.
    }
}</code></pre>
<p>What sinisoul described is a situation where packet decoding isn’t the same for all packets. If you want to implement the other services as well that make up a RuneScape server (update server, http server, etc.), it’s worth looking into, because having a replaceable decoder makes your code more flexible and subsequently reusable.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/state-or-stateless/432900/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/state-or-stateless/432900/7</link>
        <pubDate>Tue, 14 Feb 2012 11:52:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-432900-7</guid>
        <source url="https://forum.moparisthebest.com/t/state-or-stateless/432900.rss">State or Stateless</source>
      </item>
      <item>
        <title>State or Stateless</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>[quote=“sinisoul, post:5, topic:432900”][quote author=zyle1992 link=topic=535607.msg3915911#msg3915911 date=1329176765]</p>
<aside class="quote">
<blockquote>
<p>This is networking for what purpose?</p>
</blockquote>
</aside>
<p>Initially for my RS2 server, but I plan on abstracting it, and including it for all other network-based programs I make in the future.</p>
<p>One example is something like this</p>
<pre><code class="lang-auto">public class DropItemPacket extends Packet {
    // fields
    public DropItemPacket(final Client source, final ByteBuffer buffer) {
        this.source = source;
        id = buffer.getShort() &amp; 0xffff;
        slot = buffer.get() &amp; 0xff;
        // others
    }

    @Override
    public void process() {
        // validate, etc.
    }
}</code></pre>
<p>As opposed to</p>
<pre><code class="lang-auto">public PacketHandler {
    public void handle(final Client source, final ByteBuffer buffer) {
        // validate and process
    }
}</code></pre>
<p>[/quote]</p>
<p>I’m sure you have seen my rants about how the structure of packets should be handled with Runescape servers. The whole basis behind how clients function is that they will only be dedicated to <span class="bbcode-b">ONE</span> pathway. That pathway is determined when the client connects and then all subsequent ‘packets’ (I call them forks) are called.</p>
<p>So if you were to have a connection be directed down a ‘Ondemand’ pathway, it’d be:</p>
<p>============= Set to the default pathway<br>
15 - byte<br>
 dword<br>
============= Switch pathway to ondemand pathway<br>
…                      Do normal handling operations.</p>
<p>Sorry that was a rant and for my personal preference I’d use the second model. Depends on your design pattern though.[/quote]</p>
<p>I have not seen your rants about the packet handling. Although, that makes more sense then what I’ve come up with.</p>
<p>How would you implement that though? The two ways that I can think of are having some static Protocols, and process it through which protocol is necessary, or have the Client class something like</p>
<pre><code class="lang-auto">public class Client {
    private PacketDecoder decoder;

    // getter and setter
}</code></pre>
<p>Although that still seems like more work than should be necessary.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/state-or-stateless/432900/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/state-or-stateless/432900/6</link>
        <pubDate>Tue, 14 Feb 2012 00:07:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-432900-6</guid>
        <source url="https://forum.moparisthebest.com/t/state-or-stateless/432900.rss">State or Stateless</source>
      </item>
      <item>
        <title>State or Stateless</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>[quote=“zyle1992, post:4, topic:432900”][quote author=sinisoul link=topic=535607.msg3915898#msg3915898 date=1329175737]<br>
This is networking for what purpose?<br>
[/quote]</p>
<p>Initially for my RS2 server, but I plan on abstracting it, and including it for all other network-based programs I make in the future.</p>
<p>One example is something like this</p>
<pre><code class="lang-auto">public class DropItemPacket extends Packet {
    // fields
    public DropItemPacket(final Client source, final ByteBuffer buffer) {
        this.source = source;
        id = buffer.getShort() &amp; 0xffff;
        slot = buffer.get() &amp; 0xff;
        // others
    }

    @Override
    public void process() {
        // validate, etc.
    }
}</code></pre>
<p>As opposed to</p>
<p><code>
public PacketHandler {
    public void handle(final Client source, final ByteBuffer buffer) {
        // validate and process
    }
}
</code>[/quote]</p>
<p>I’m sure you have seen my rants about how the structure of packets should be handled with Runescape servers. The whole basis behind how clients function is that they will only be dedicated to <span class="bbcode-b">ONE</span> pathway. That pathway is determined when the client connects and then all subsequent ‘packets’ (I call them forks) are called.</p>
<p>So if you were to have a connection be directed down a ‘Ondemand’ pathway, it’d be:</p>
<p>============= Set to the default pathway<br>
15 - byte<br>
 dword<br>
============= Switch pathway to ondemand pathway<br>
…                      Do normal handling operations.</p>
<p>Sorry that was a rant and for my personal preference I’d use the second model. Depends on your design pattern though.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/state-or-stateless/432900/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/state-or-stateless/432900/5</link>
        <pubDate>Mon, 13 Feb 2012 23:55:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-432900-5</guid>
        <source url="https://forum.moparisthebest.com/t/state-or-stateless/432900.rss">State or Stateless</source>
      </item>
      <item>
        <title>State or Stateless</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="432900">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/sinisoul/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> sinisoul:</div>
<blockquote>
<p>This is networking for what purpose?</p>
</blockquote>
</aside>
<p>Initially for my RS2 server, but I plan on abstracting it, and including it for all other network-based programs I make in the future.</p>
<p>One example is something like this</p>
<pre><code class="lang-auto">public class DropItemPacket extends Packet {
    // fields
    public DropItemPacket(final Client source, final ByteBuffer buffer) {
        this.source = source;
        id = buffer.getShort() &amp; 0xffff;
        slot = buffer.get() &amp; 0xff;
        // others
    }

    @Override
    public void process() {
        // validate, etc.
    }
}</code></pre>
<p>As opposed to</p>
<pre><code class="lang-auto">public PacketHandler {
    public void handle(final Client source, final ByteBuffer buffer) {
        // validate and process
    }
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/state-or-stateless/432900/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/state-or-stateless/432900/4</link>
        <pubDate>Mon, 13 Feb 2012 23:46:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-432900-4</guid>
        <source url="https://forum.moparisthebest.com/t/state-or-stateless/432900.rss">State or Stateless</source>
      </item>
      <item>
        <title>State or Stateless</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <p>To try weigh out the benefits/cons of dealing with the low level data types, versus using a state machine. You should also consider the method of propagation. If you are using an event-driven system, then you have an entire time frame of dispatching the packet before it’s finally handled, and then fired off again as stateful events. On the other hand, processing the pack within the IO thread can be time consuming (though, this is generally negligible for most RS2 packets, at any rate).</p>
<p>My preference is process the data right away, since I tend to lean toward an event-driven architecture. Others may disagree though. There are pros and cons to both methods, and they vary significantly with what approach you are taking to handle the entity states.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/state-or-stateless/432900/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/state-or-stateless/432900/3</link>
        <pubDate>Mon, 13 Feb 2012 23:30:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-432900-3</guid>
        <source url="https://forum.moparisthebest.com/t/state-or-stateless/432900.rss">State or Stateless</source>
      </item>
      <item>
        <title>State or Stateless</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>This is networking for what purpose?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/state-or-stateless/432900/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/state-or-stateless/432900/2</link>
        <pubDate>Mon, 13 Feb 2012 23:28:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-432900-2</guid>
        <source url="https://forum.moparisthebest.com/t/state-or-stateless/432900.rss">State or Stateless</source>
      </item>
      <item>
        <title>State or Stateless</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>I’m trying to think of the best way to handle networking in my server. And I’m stuck between having different Packet objects, or just processing the packet when it’s read. What are your views on each of these?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/state-or-stateless/432900/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/state-or-stateless/432900/1</link>
        <pubDate>Mon, 13 Feb 2012 22:58:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-432900-1</guid>
        <source url="https://forum.moparisthebest.com/t/state-or-stateless/432900.rss">State or Stateless</source>
      </item>
  </channel>
</rss>
