<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Using EnumSet as field for defining type</title>
    <link>https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450</link>
    <description>I was just wondering if there was any sort way to achieve this type of usage:

[code=Java]
public enum Type {
    BUG(EnumSet.of(NORMAL, GROUND, ROCK, BUG, WATER, ELECTRIC, ICE, DRAGON)),
    DARK(EnumSet.of(NORMAL, FLYING, POISON, GROUND, ROCK, BUG, FIRE, WATER, GRASS, ELECTRIC, ICE, DRAGON)),
    // ...

    Type(EnumSet&lt;Type&gt; effectiveAgainst) {
        // ...
    }
}
[/code]

The reason I can&#39;t do them, and reference them statically, is because they are, well, static.</description>
    
    <lastBuildDate>Sat, 04 May 2013 09:40:20 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Using EnumSet as field for defining type</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>[quote=“Whackatre, post:11, topic:518450”]rather I think something like this would be <a href="http://pastie.org/7768724" data-bbcode="true">more awesome</a>.[/quote]… ew</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450/12</link>
        <pubDate>Sat, 04 May 2013 09:40:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-518450-12</guid>
        <source url="https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450.rss">Using EnumSet as field for defining type</source>
      </item>
      <item>
        <title>Using EnumSet as field for defining type</title>
        <dc:creator><![CDATA[@whackatre Whackatre]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/whackatre">@whackatre</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="10" data-topic="518450">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/lin/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Lin:</div>
<blockquote>
<p>I’m pretty sure you made another topic regarding actually programming data and I’m pretty sure I said the same thing: don’t. Create an enum of the types, sure, then have a file containing a table of values containing values for each damage type: 00=none, 01=little, 02=normal, 03=super. It’s so much better than what you’re trying to do.</p>
</blockquote>
</aside>
<p>Or rather as actual multipliers: 0 = not effective, 0.5 = not very effective, 1 = effective, 2 = super effective, etc. It multiplies well, too.</p>
<p>I think the whole enum approach to type effectiveness is unsuitable for what you are trying to do; rather I think something like this would be <a href="http://pastie.org/7768724" data-bbcode="true" rel="nofollow noopener">more awesome</a>.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450/11</link>
        <pubDate>Sat, 04 May 2013 06:09:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-518450-11</guid>
        <source url="https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450.rss">Using EnumSet as field for defining type</source>
      </item>
      <item>
        <title>Using EnumSet as field for defining type</title>
        <dc:creator><![CDATA[@Lin Lin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lin">@Lin</a> wrote:</p>
          <blockquote>
              <p>I’m pretty sure you made another topic regarding actually programming data and I’m pretty sure I said the same thing: don’t. Create an enum of the types, sure, then have a file containing a table of values containing values for each damage type: 00=none, 01=little, 02=normal, 03=super. It’s so much better than what you’re trying to do.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450/10</link>
        <pubDate>Sat, 04 May 2013 03:40:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-518450-10</guid>
        <source url="https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450.rss">Using EnumSet as field for defining type</source>
      </item>
      <item>
        <title>Using EnumSet as field for defining type</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>It’s just like variables (instances of a class, in this case), you can’t reference it before its created. You’d just want to have a ‘setWeaknesses’ method you call after they have all been instantiated.</p>
<p>To put your example into more common code:</p>
<pre><code class="lang-auto">class PokemonType {

  PokemonType[] weaknesses; 
  PokemonType(PokemonType ... weaknesses) {
    this.weaknesses = weaknesses;
  }
}</code></pre>
<pre><code class="lang-auto">PokemonType dark = new PokemonType(grass, lightning, ground);
PokemonType grass = new PokemonType(fire, water);
PokemonType ground = ... etc</code></pre>
<p>You’d never try that, would you? <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<p>[quote=“t4, post:8, topic:518450”][quote author=zyle1992 link=topic=636716.msg4292765#msg4292765 date=1367626437]<br>
The thing with that though, is that I’d essentially have 2 enums with exactly the same information in them; I didn’t post the whole enum, only a quick example;<br>
[/quote]<br>
Didn’t really read the OP, but It’s Java, not C… you’re supposed to program inefficiently :P[/quote]I wouldn’t exactly call referencing a variable before it’s declared to be ‘efficient’</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450/9</link>
        <pubDate>Sat, 04 May 2013 01:37:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-518450-9</guid>
        <source url="https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450.rss">Using EnumSet as field for defining type</source>
      </item>
      <item>
        <title>Using EnumSet as field for defining type</title>
        <dc:creator><![CDATA[@T41 t4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/t41">@T41</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="7" data-topic="518450">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/zyle1992/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> zyle1992:</div>
<blockquote>
<p>The thing with that though, is that I’d essentially have 2 enums with exactly the same information in them; I didn’t post the whole enum, only a quick example;</p>
</blockquote>
</aside>
<p>Didn’t really read the OP, but It’s Java, not C… you’re supposed to program inefficiently <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450/8</link>
        <pubDate>Sat, 04 May 2013 00:50:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-518450-8</guid>
        <source url="https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450.rss">Using EnumSet as field for defining type</source>
      </item>
      <item>
        <title>Using EnumSet as field for defining type</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>[quote=“imthenull, post:6, topic:518450”]You’ll need to create another enum, say AttackType, seeing as the NORMAL, GROUND, etc. aren’t actually declared in the Type enum.</p>
<p>I’ve been kind enough to write it for you. You could statically import the AttackType enum, but I was working in the default package.</p>
<p>[code=java]import java.util.EnumSet;</p>
<p>public enum PokemonType {</p>
<pre><code>BUG(EnumSet.of(AttackType.NORMAL, AttackType.GROUND, AttackType.ROCK,
		AttackType.BUG, AttackType.WATER, AttackType.ELECTRIC, 
		AttackType.ICE, AttackType.DRAGON)),
DARK(EnumSet.of(AttackType.NORMAL, AttackType.GROUND, AttackType.ROCK,
		AttackType.BUG, AttackType.WATER, AttackType.ELECTRIC, 
		AttackType.ICE, AttackType.DRAGON));

private final EnumSet&lt;AttackType&gt; effectiveAgainst;

PokemonType(EnumSet&lt;AttackType&gt; effectiveAgainst) {
	this.effectiveAgainst = effectiveAgainst;
}
</code></pre>
<p>}[/code]</p>
<p>[code=java]public enum AttackType {</p>
<pre><code>NORMAL, GROUND, ROCK, BUG, WATER, ELECTRIC, ICE, DRAGON;
</code></pre>
<p>}[/code][/quote]</p>
<p>The thing with that though, is that I’d essentially have 2 enums with exactly the same information in them; I didn’t post the whole enum, only a quick example;</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450/7</link>
        <pubDate>Sat, 04 May 2013 00:13:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-518450-7</guid>
        <source url="https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450.rss">Using EnumSet as field for defining type</source>
      </item>
      <item>
        <title>Using EnumSet as field for defining type</title>
        <dc:creator><![CDATA[@imthenull imthenull]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imthenull">@imthenull</a> wrote:</p>
          <blockquote>
              <p>You’ll need to create another enum, say AttackType, seeing as the NORMAL, GROUND, etc. aren’t actually declared in the Type enum.</p>
<p>I’ve been kind enough to write it for you. You could statically import the AttackType enum, but I was working in the default package.</p>
<p>[code=java]import java.util.EnumSet;</p>
<p>public enum PokemonType {</p>
<pre><code>BUG(EnumSet.of(AttackType.NORMAL, AttackType.GROUND, AttackType.ROCK,
		AttackType.BUG, AttackType.WATER, AttackType.ELECTRIC, 
		AttackType.ICE, AttackType.DRAGON)),
DARK(EnumSet.of(AttackType.NORMAL, AttackType.GROUND, AttackType.ROCK,
		AttackType.BUG, AttackType.WATER, AttackType.ELECTRIC, 
		AttackType.ICE, AttackType.DRAGON));

private final EnumSet&lt;AttackType&gt; effectiveAgainst;

PokemonType(EnumSet&lt;AttackType&gt; effectiveAgainst) {
	this.effectiveAgainst = effectiveAgainst;
}
</code></pre>
<p>}[/code]</p>
<p>[code=java]public enum AttackType {</p>
<pre><code>NORMAL, GROUND, ROCK, BUG, WATER, ELECTRIC, ICE, DRAGON;
</code></pre>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450/6</link>
        <pubDate>Fri, 03 May 2013 20:46:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-518450-6</guid>
        <source url="https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450.rss">Using EnumSet as field for defining type</source>
      </item>
      <item>
        <title>Using EnumSet as field for defining type</title>
        <dc:creator><![CDATA[@HcoJustin HcoJustin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hcojustin">@HcoJustin</a> wrote:</p>
          <blockquote>
              <p>An alternative could be to name the values by string and build the weakness table at runtime.</p>
<p>[code]BUG(“normal”, “ground”, …)</p>
<p>Type(String[] s) {<br>
for(Type type : Type.values()) {<br>
for(String weakness : s) {<br>
if(type.getName().equalsIgnoreCase(s))<br>
weakness_table.add(type);<br>
}<br>
}<br>
}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450/5</link>
        <pubDate>Fri, 03 May 2013 20:44:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-518450-5</guid>
        <source url="https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450.rss">Using EnumSet as field for defining type</source>
      </item>
      <item>
        <title>Using EnumSet as field for defining type</title>
        <dc:creator><![CDATA[@Ashi Ashi]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ashi">@Ashi</a> wrote:</p>
          <blockquote>
              <p>You can’t do it the way you want. You’ll either have to split them apart or take a different approach.</p>
<p>^ And don’t do it how you’re thinking of doing it</p>
<p>[code=java]<br>
public enum Type {<br>
BUG,<br>
DARK,</p>
<pre><code>// ...

static {
    BUG.effectiveAgainst = EnumSet.of(BLAH);
}
</code></pre>
<p>}[/code]<br>
lmfao</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450/4</link>
        <pubDate>Fri, 03 May 2013 20:43:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-518450-4</guid>
        <source url="https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450.rss">Using EnumSet as field for defining type</source>
      </item>
      <item>
        <title>Using EnumSet as field for defining type</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="2" data-topic="518450">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/arcik/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Arcik:</div>
<blockquote>
<p>I don’t understand what you’re trying to saying?</p>
</blockquote>
</aside>
<p>What sort of workarounds could be available, to access the Types statically, but still have an EnumSet of Type passed to the contructor, indicating which Types a specific Type is effective against, before the other Types have been defined. What’s preventing me from doing so, is that to get this sort of functionality, I can’t use an enum, nor can I make them static.</p>
<p>The only thing that I could think of was either a static constructor after all Types have been defined, like</p>
<pre><code class="lang-auto">public enum Type {
    BUG,
    DARK,

    // ...

    static {
        BUG.effectiveAgainst = EnumSet.of(BLAH);
    }
}</code></pre>
<p>But I was wondering if there were any more elegant solutions</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450/3</link>
        <pubDate>Fri, 03 May 2013 20:37:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-518450-3</guid>
        <source url="https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450.rss">Using EnumSet as field for defining type</source>
      </item>
      <item>
        <title>Using EnumSet as field for defining type</title>
        <dc:creator><![CDATA[@Ashi Ashi]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ashi">@Ashi</a> wrote:</p>
          <blockquote>
              <p>I don’t understand what you’re trying to saying?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450/2</link>
        <pubDate>Fri, 03 May 2013 20:35:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-518450-2</guid>
        <source url="https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450.rss">Using EnumSet as field for defining type</source>
      </item>
      <item>
        <title>Using EnumSet as field for defining type</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>I was just wondering if there was any sort way to achieve this type of usage:</p>
<pre><code class="lang-auto">public enum Type {
    BUG(EnumSet.of(NORMAL, GROUND, ROCK, BUG, WATER, ELECTRIC, ICE, DRAGON)),
    DARK(EnumSet.of(NORMAL, FLYING, POISON, GROUND, ROCK, BUG, FIRE, WATER, GRASS, ELECTRIC, ICE, DRAGON)),
    // ...

    Type(EnumSet&lt;Type&gt; effectiveAgainst) {
        // ...
    }
}</code></pre>
<p>The reason I can’t do them, and reference them statically, is because they are, well, static.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450/1</link>
        <pubDate>Fri, 03 May 2013 20:32:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-518450-1</guid>
        <source url="https://forum.moparisthebest.com/t/using-enumset-as-field-for-defining-type/518450.rss">Using EnumSet as field for defining type</source>
      </item>
  </channel>
</rss>
