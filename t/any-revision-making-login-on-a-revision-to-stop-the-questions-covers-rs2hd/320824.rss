<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[Any revision]Making login on a revision(To stop the questions.)[Covers rs2hd +</title>
    <link>https://forum.moparisthebest.com/t/any-revision-making-login-on-a-revision-to-stop-the-questions-covers-rs2hd/320824</link>
    <description>[CENTER]Hey, well the first time i tried making login i bugged a lot of people. TRUST ME. ask mystic flow and laz and others. i finally did it, back when rs was 569, and i had posted lots of help threads trying to figure it out. This tutorial is just to tell you how to make login.

Difficulty: 4-5, 2 if you know what you are doing.

Requirements: A deobed client, a server(i will be converting z508 to 554, and rs2hd to 569.) and an intermediate to advanced knowledge of java.
Optional Requirements: A Java IDE(Such as Eclipse, which i use, or NETBEANS.)

Credits: Everyone who helped me to get login the very first time i did it. tim for showing me how pali&#39;s login works. and me for explaining it all in this tutorial. :)

Ok, so to start, i will explain that you will need to be looking at the client. now this means that you will be comparing parts of the code to other clients.

Here is a little checklist that we are going to need to do.
[code]
[COLOR=&quot;Orange&quot;][B]the sendWindowPane packet(Allows the main game screen to show.)
the sendMapRegion packet(Allows the server to send the player&#39;s area, meaning it loads the XTEA from the mapdata folder.)
disable all other packets.[/B][/COLOR]
[/code]

[SPOILER=&quot;Client Stuff&quot;][COLOR=&quot;Red&quot;]Read this:[/COLOR] [url=http://www.rune-server.org/showthread.php?t=182269&amp;highlight=stream]http://www.rune-server.org/showthread.php?t=182269&amp;highlight=stream[/url]

that tutorial will help to identify &quot;Streams&quot; that you will be using.
also this text document may help you.
[code]
k to find signlink you would search for &quot;public EventQueue&quot; using a search through all files feature

to find fileondisk you just search for &quot;fileondisk&quot; throughout the files

to find packetparser you just search for &quot;T1

to find stream you just search for &quot;modpow&quot;



//569
Class162 - SignLink
Class119 - FileOnDisk

Class70_Sub8 - PacketParser - frames
Class175 - SecondaryPacketParser (Idk thats what I call it)

Class153_Sub8 - Stream
Class153_Sub8_Sub1 - PacketStream
Class153_Sub8_Sub2 - RawStream

Class141 - Cryption

Class95 - Animation
Class92 - login

Class122_Sub5_Sub2_Sub1 - NPC
Class122_Sub5_Sub2_Sub2 - Player
Class122_Sub5_Sub2 - Entity

Class198_Sub1 - PlayerUpdateMasks
Class153_Sub36_Sub18 - NpcUpdateMasks
[/code]

[COLOR=&quot;Red&quot;]Step one:[/COLOR] [B]Finding the login class.[/B]

There is really no point in me showing you how to find the login class, as it changes between revisions, but just look at other clients to figure it out.

[COLOR=&quot;Red&quot;]Step two:[/COLOR] [B]Finding the login block.[/B]

the login block always contains += 50 because of the Isaac. thanks to serenity for posting this. so just search += 50 inside of the login method.

[COLOR=&quot;Red&quot;]Step three:[/COLOR] [B]Identifying the Stream class, and identifying streams.
[/B]

Use the file above to find the stream class, and the tutorial i linked to find the streams. once you have done this go to step 4.

[COLOR=&quot;Red&quot;]Step four:[/COLOR] [B]Reading the login block[/B]

Now that you have identified many streams, you should now go back to the login block, and read what it says
for example, readUnsignedByte in a client would be addByte((byte) 0) or addByte((byte) 1) in a server.
readString would be addString(&quot;&quot;) or addString(stringnamehere); in a server
ect. you just have to read the login block. in the server, replace what the current loginblock is with what you have found.[/SPOILER][/CENTER]
[CENTER][spoiler=Rs2hd Server]
[COLOR=&quot;Red&quot;]Step one:[/COLOR] [B]Finding the login block.[/B]

The login block in rs2hd is located in the WorkerThread. to find it search for [code]spb.addByte((byte) r.returnCode);[/code]
Now to edit the login block. Read what you found in the client, and use the streams in the server to convert them to server methods, just like i said above.
the login block for a 569 server(as an example is)
[code]
                                                          spb.addByte((byte) r.returnCode);
                        if (r.returnCode == 2) {
                            spb.addByte((byte) r.player.getRights());
                            spb.addByte((byte) 0);
                            spb.addByte((byte) 0);
                            spb.addByte((byte) 0);
                            spb.addByte((byte) 1);
                            spb.addByte((byte) 0);
                            //spb.addByte((byte) 0);
                            spb.addShort(slot);
                            spb.addByte((byte) 1);
                            spb.addByte((byte) 1); //members
                            d.getSession().setAttachment(r.player);
                        }
                        [/code]

[COLOR=&quot;Red&quot;]Step two:[/COLOR] [B]Update Keys and world list data.[/B]

To get update keys, you can either dump them from the cache(Virus X3 posted a dumper) you can dump them from runescape(there is a dumper floating around) or you can look in another server.
Once you have the keys, you must go into Constants.java, and edit [code]    public static final int[] uKeys = {[/code]
to your ukeys that you dumped.
You may also need world list data, which runescape uses to load the world server.
[COLOR=&quot;Red&quot;]Step three:[/COLOR] [B]Testing if you can get to the login screen.[/B]

By now, if you compile and get no errors(meaning you did it right) You should be able to load to the login screen.
[img]http://i49.tinypic.com/2rmy6b4.jpg[/img]
if you did, congrats! next part of the tutorial! if you didn&#39;t, try redoing what you have done so far.
[COLOR=&quot;Red&quot;]Step four:[/COLOR][B] Disabling all packets.[/B]
In order to login, you must disable all packets located in Frames/ActionSender, by commenting out the code inside of each method. You will also need to reset all packet sizes to -3.
[COLOR=&quot;Red&quot;]Step five:[/COLOR] [B]Getting the sendMapRegion and sendWindowPane packets.[/B]
To do this, you must yet again look in the client. use the text file i posted to find the packetparser class. Once you have done this, look in a different deob for the sendMap and sendWindow pacekts, and notice how they look.
windowpane packet always contains(from what i have noticed) the code [code]&gt; -101[/code]
you just have to pick which packet it is and identify the streams. then it&#39;s the same idea, edit the packet in actionsender to the streams you found.
sendMapRegion really has no pattern, so i can&#39;t really help you identify that one. sorry.
[COLOR=&quot;Red&quot;]Step six:[/COLOR] [B]Testing![/B]
Now that you have done step five, you should be able to login. like this.
[img]http://i25.tinypic.com/29zsmjq.png[/img]
if it worked, congrats! if not, try redoing the tut.[/spoiler]
[/CENTER]
[CENTER][spoiler=Pali Server]
[COLOR=&quot;Red&quot;]Step one:[/COLOR] [B]Finding the login block.[/B]

The login block in pali/espeon is located in the RS2LoginProtocol/Login class. to find it search for [code]p.stream.writeByte(returnCode);[/code]
Now to edit the login block. Read what you found in the client, and use the streams in the server to convert them to server methods, just like i said above.
the login block for a 554 server(as an example is)
[code]
                                   p.stream.writeByte(returnCode);
            p.stream.writeByte(p.rights);
            p.stream.writeByte(0);
            p.stream.writeByte(0);//Flagged, will genrate mouse packets
            p.stream.writeByte(0);
            p.stream.writeByte(0);
            p.stream.writeByte(0);
            p.stream.writeByte(0);
            p.stream.writeWord(p.playerId);//PlayerID
            p.stream.writeByte(0);
            p.stream.writeByte(1);
            directFlushStream(p);
                        [/code]
depending on what revision you are doing, you may have to edit return codes. you may also need world list data, and this code.
[code]
            if (connectionType == 23) {
        		directFlushStream(p);
        		for (int i=0; i &lt; data.length; i++) {
        		p.stream.writeByte(data[i]);		
        	        directFlushStream(p);
                   }
                 return;
                }[/code]

[COLOR=&quot;Red&quot;]Step two:[/COLOR] [B]Update Keys and world list data.[/B]

To get update keys, you can either dump them from the cache(Virus X3 posted a dumper) you can dump them from runescape(there is a dumper floating around) or you can look in another server.
Once you have the keys, you must go into Misc.java, and edit [code]    public static final int[] uKeys = {[/code]
to your ukeys that you dumped.

[COLOR=&quot;Red&quot;]Step three:[/COLOR] [B]Testing if you can get to the login screen.[/B]

By now, if you compile and get no errors(meaning you did it right) You should be able to load to the login screen.
[img]http://i49.tinypic.com/2rmy6b4.jpg[/img]
if you did, congrats! next part of the tutorial! if you didn&#39;t, try redoing what you have done so far.

[COLOR=&quot;Red&quot;]Step four:[/COLOR][B] Disabling all packets.[/B]

In order to login, you must disable all packets located in Frames/ActionSender, by commenting out the code inside of each method. You will also need to reset all packet sizes to -3.

[COLOR=&quot;Red&quot;]Step five:[/COLOR] [B]Getting the setMapRegion and setWindowPane packets.[/B]

To do this, you must yet again look in the client. use the text file i posted to find the packetparser class. Once you have done this, look in a different deob for the sendMap and sendWindow pacekts, and notice how they look.
windowpane packet always contains(from what i have noticed) the code [code]&gt; -101[/code]
you just have to pick which packet it is and identify the streams. then it&#39;s the same idea, edit the packet in actionsender to the streams you found.
sendMapRegion really has no pattern, so i can&#39;t really help you identify that one. sorry.

[COLOR=&quot;Red&quot;]Step six:[/COLOR] [B]Testing![/B]

Now that you have done step five, you should be able to login. like this.
[img]http://i25.tinypic.com/29zsmjq.png[/img]
if it worked, congrats! if not, try redoing the tut.[/spoiler][/center]
if i missed anything, could someone tell me, in a post. thanks.</description>
    
    <lastBuildDate>Mon, 21 Dec 2009 01:00:48 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/any-revision-making-login-on-a-revision-to-stop-the-questions-covers-rs2hd/320824.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[Any revision]Making login on a revision(To stop the questions.)[Covers rs2hd +</title>
        <dc:creator><![CDATA[@_Discardedx2 `Discardedx2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_discardedx2">@_Discardedx2</a> wrote:</p>
          <blockquote>
              <p>[CENTER]Hey, well the first time i tried making login i bugged a lot of people. TRUST ME. ask mystic flow and laz and others. i finally did it, back when rs was 569, and i had posted lots of help threads trying to figure it out. This tutorial is just to tell you how to make login.</p>
<p>Difficulty: 4-5, 2 if you know what you are doing.</p>
<p>Requirements: A deobed client, a server(i will be converting z508 to 554, and rs2hd to 569.) and an intermediate to advanced knowledge of java.<br>
Optional Requirements: A Java IDE(Such as Eclipse, which i use, or NETBEANS.)</p>
<p>Credits: Everyone who helped me to get login the very first time i did it. tim for showing me how pali’s login works. and me for explaining it all in this tutorial. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>Ok, so to start, i will explain that you will need to be looking at the client. now this means that you will be comparing parts of the code to other clients.</p>
<p>Here is a little checklist that we are going to need to do.</p>
<pre><code class="lang-auto">[COLOR="Orange"][B]the sendWindowPane packet(Allows the main game screen to show.)
the sendMapRegion packet(Allows the server to send the player's area, meaning it loads the XTEA from the mapdata folder.)
disable all other packets.[/B][/COLOR]</code></pre>
<p>[SPOILER=“Client Stuff”][COLOR=“Red”]Read this:[/COLOR] <a href="http://www.rune-server.org/showthread.php?t=182269&amp;highlight=stream" data-bbcode="true" rel="nofollow noopener">http://www.rune-server.org/showthread.php?t=182269&amp;highlight=stream</a></p>
<p>that tutorial will help to identify “Streams” that you will be using.<br>
also this text document may help you.</p>
<pre><code class="lang-auto">k to find signlink you would search for "public EventQueue" using a search through all files feature

to find fileondisk you just search for "fileondisk" throughout the files

to find packetparser you just search for "T1

to find stream you just search for "modpow"



//569
Class162 - SignLink
Class119 - FileOnDisk

Class70_Sub8 - PacketParser - frames
Class175 - SecondaryPacketParser (Idk thats what I call it)

Class153_Sub8 - Stream
Class153_Sub8_Sub1 - PacketStream
Class153_Sub8_Sub2 - RawStream

Class141 - Cryption

Class95 - Animation
Class92 - login

Class122_Sub5_Sub2_Sub1 - NPC
Class122_Sub5_Sub2_Sub2 - Player
Class122_Sub5_Sub2 - Entity

Class198_Sub1 - PlayerUpdateMasks
Class153_Sub36_Sub18 - NpcUpdateMasks</code></pre>
<p>[COLOR=“Red”]Step one:[/COLOR] <span class="bbcode-b">Finding the login class.</span></p>
<p>There is really no point in me showing you how to find the login class, as it changes between revisions, but just look at other clients to figure it out.</p>
<p>[COLOR=“Red”]Step two:[/COLOR] <span class="bbcode-b">Finding the login block.</span></p>
<p>the login block always contains += 50 because of the Isaac. thanks to serenity for posting this. so just search += 50 inside of the login method.</p>
<p>[COLOR=“Red”]Step three:[/COLOR] <span class="bbcode-b">Identifying the Stream class, and identifying streams.<br>
</span></p>
<p>Use the file above to find the stream class, and the tutorial i linked to find the streams. once you have done this go to step 4.</p>
<p>[COLOR=“Red”]Step four:[/COLOR] <span class="bbcode-b">Reading the login block</span></p>
<p>Now that you have identified many streams, you should now go back to the login block, and read what it says<br>
for example, readUnsignedByte in a client would be addByte((byte) 0) or addByte((byte) 1) in a server.<br>
readString would be addString("") or addString(stringnamehere); in a server<br>
ect. you just have to read the login block. in the server, replace what the current loginblock is with what you have found.[/SPOILER][/CENTER]<br>
[CENTER][spoiler=Rs2hd Server]<br>
[COLOR=“Red”]Step one:[/COLOR] <span class="bbcode-b">Finding the login block.</span></p>
<p>The login block in rs2hd is located in the WorkerThread. to find it search for <code>spb.addByte((byte) r.returnCode);</code><br>
Now to edit the login block. Read what you found in the client, and use the streams in the server to convert them to server methods, just like i said above.<br>
the login block for a 569 server(as an example is)</p>
<p><code>
                                                          spb.addByte((byte) r.returnCode);
                        if (r.returnCode == 2) {
                            spb.addByte((byte) r.player.getRights());
                            spb.addByte((byte) 0);
                            spb.addByte((byte) 0);
                            spb.addByte((byte) 0);
                            spb.addByte((byte) 1);
                            spb.addByte((byte) 0);
                            //spb.addByte((byte) 0);
                            spb.addShort(slot);
                            spb.addByte((byte) 1);
                            spb.addByte((byte) 1); //members
                            d.getSession().setAttachment(r.player);
                        }
                        </code></p>
<p>[COLOR=“Red”]Step two:[/COLOR] <span class="bbcode-b">Update Keys and world list data.</span></p>
<p>To get update keys, you can either dump them from the cache(Virus X3 posted a dumper) you can dump them from runescape(there is a dumper floating around) or you can look in another server.<br>
Once you have the keys, you must go into Constants.java, and edit <code>    public static final int[] uKeys = {</code><br>
to your ukeys that you dumped.<br>
You may also need world list data, which runescape uses to load the world server.<br>
[COLOR=“Red”]Step three:[/COLOR] <span class="bbcode-b">Testing if you can get to the login screen.</span></p>
<p>By now, if you compile and get no errors(meaning you did it right) You should be able to load to the login screen.<br>
<img src="http://i49.tinypic.com/2rmy6b4.jpg" alt width="140" height="120"><br>
if you did, congrats! next part of the tutorial! if you didn’t, try redoing what you have done so far.<br>
[COLOR=“Red”]Step four:[/COLOR]<span class="bbcode-b"> Disabling all packets.</span><br>
In order to login, you must disable all packets located in Frames/ActionSender, by commenting out the code inside of each method. You will also need to reset all packet sizes to -3.<br>
[COLOR=“Red”]Step five:[/COLOR] <span class="bbcode-b">Getting the sendMapRegion and sendWindowPane packets.</span><br>
To do this, you must yet again look in the client. use the text file i posted to find the packetparser class. Once you have done this, look in a different deob for the sendMap and sendWindow pacekts, and notice how they look.<br>
windowpane packet always contains(from what i have noticed) the code <code>&gt; -101</code><br>
you just have to pick which packet it is and identify the streams. then it’s the same idea, edit the packet in actionsender to the streams you found.<br>
sendMapRegion really has no pattern, so i can’t really help you identify that one. sorry.<br>
[COLOR=“Red”]Step six:[/COLOR] <span class="bbcode-b">Testing!</span><br>
Now that you have done step five, you should be able to login. like this.<br>
<div class="lightbox-wrapper"><a class="lightbox" href="http://i25.tinypic.com/29zsmjq.png" title="29zsmjq.png" rel="nofollow noopener"><img src="http://i25.tinypic.com/29zsmjq.png" alt width="690" height="475"><div class="meta">
<svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use xlink:href="#far-image"></use></svg><span class="filename">29zsmjq.png</span><span class="informations">781×538</span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use xlink:href="#discourse-expand"></use></svg>
</div></a></div><br>
if it worked, congrats! if not, try redoing the tut.[/spoiler]<br>
[/CENTER]<br>
[CENTER][spoiler=Pali Server]<br>
[COLOR=“Red”]Step one:[/COLOR] <span class="bbcode-b">Finding the login block.</span></p>
<p>The login block in pali/espeon is located in the RS2LoginProtocol/Login class. to find it search for <code>p.stream.writeByte(returnCode);</code><br>
Now to edit the login block. Read what you found in the client, and use the streams in the server to convert them to server methods, just like i said above.<br>
the login block for a 554 server(as an example is)</p>
<p><code>
                                   p.stream.writeByte(returnCode);
            p.stream.writeByte(p.rights);
            p.stream.writeByte(0);
            p.stream.writeByte(0);//Flagged, will genrate mouse packets
            p.stream.writeByte(0);
            p.stream.writeByte(0);
            p.stream.writeByte(0);
            p.stream.writeByte(0);
            p.stream.writeWord(p.playerId);//PlayerID
            p.stream.writeByte(0);
            p.stream.writeByte(1);
            directFlushStream(p);
                        </code><br>
depending on what revision you are doing, you may have to edit return codes. you may also need world list data, and this code.</p>
<p><code>
            if (connectionType == 23) {
        		directFlushStream(p);
        		for (int i=0; i &lt; data.length; i++) {
        		p.stream.writeByte(data[i]);		
        	        directFlushStream(p);
                   }
                 return;
                }</code></p>
<p>[COLOR=“Red”]Step two:[/COLOR] <span class="bbcode-b">Update Keys and world list data.</span></p>
<p>To get update keys, you can either dump them from the cache(Virus X3 posted a dumper) you can dump them from runescape(there is a dumper floating around) or you can look in another server.<br>
Once you have the keys, you must go into Misc.java, and edit <code>    public static final int[] uKeys = {</code><br>
to your ukeys that you dumped.</p>
<p>[COLOR=“Red”]Step three:[/COLOR] <span class="bbcode-b">Testing if you can get to the login screen.</span></p>
<p>By now, if you compile and get no errors(meaning you did it right) You should be able to load to the login screen.<br>
<img src="http://i49.tinypic.com/2rmy6b4.jpg" alt width="140" height="120"><br>
if you did, congrats! next part of the tutorial! if you didn’t, try redoing what you have done so far.</p>
<p>[COLOR=“Red”]Step four:[/COLOR]<span class="bbcode-b"> Disabling all packets.</span></p>
<p>In order to login, you must disable all packets located in Frames/ActionSender, by commenting out the code inside of each method. You will also need to reset all packet sizes to -3.</p>
<p>[COLOR=“Red”]Step five:[/COLOR] <span class="bbcode-b">Getting the setMapRegion and setWindowPane packets.</span></p>
<p>To do this, you must yet again look in the client. use the text file i posted to find the packetparser class. Once you have done this, look in a different deob for the sendMap and sendWindow pacekts, and notice how they look.<br>
windowpane packet always contains(from what i have noticed) the code <code>&gt; -101</code><br>
you just have to pick which packet it is and identify the streams. then it’s the same idea, edit the packet in actionsender to the streams you found.<br>
sendMapRegion really has no pattern, so i can’t really help you identify that one. sorry.</p>
<p>[COLOR=“Red”]Step six:[/COLOR] <span class="bbcode-b">Testing!</span></p>
<p>Now that you have done step five, you should be able to login. like this.<br>
<div class="lightbox-wrapper"><a class="lightbox" href="http://i25.tinypic.com/29zsmjq.png" title="29zsmjq.png" rel="nofollow noopener"><img src="http://i25.tinypic.com/29zsmjq.png" alt width="690" height="475"><div class="meta">
<svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use xlink:href="#far-image"></use></svg><span class="filename">29zsmjq.png</span><span class="informations">781×538</span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use xlink:href="#discourse-expand"></use></svg>
</div></a></div><br>
if it worked, congrats! if not, try redoing the tut.[/spoiler][/center]<br>
if i missed anything, could someone tell me, in a post. thanks.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/any-revision-making-login-on-a-revision-to-stop-the-questions-covers-rs2hd/320824/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/any-revision-making-login-on-a-revision-to-stop-the-questions-covers-rs2hd/320824/1</link>
        <pubDate>Mon, 21 Dec 2009 01:00:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-320824-1</guid>
        <source url="https://forum.moparisthebest.com/t/any-revision-making-login-on-a-revision-to-stop-the-questions-covers-rs2hd/320824.rss">[Any revision]Making login on a revision(To stop the questions.)[Covers rs2hd +</source>
      </item>
  </channel>
</rss>
