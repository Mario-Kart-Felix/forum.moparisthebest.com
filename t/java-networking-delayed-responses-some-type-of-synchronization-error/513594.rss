<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Java networking delayed responses(some type of synchronization error?)</title>
    <link>https://forum.moparisthebest.com/t/java-networking-delayed-responses-some-type-of-synchronization-error/513594</link>
    <description>So the program I&#39;m developing, I use just a basic TCP/IP server socket connection to communicate back and forth between the client(s)/server. The problem I&#39;m getting is that when I send a message to the server it doesn&#39;t reply, unless I send a second message, and then I never get the reply from the first message client sided. The problem with this is, when the client sends the login request, the server runs the credentials and logs in the user server-sided. So when the client sends the second message, the server tells the client that it&#39;s already logged in, so you&#39;re never able to get past the login interface. Any help would be greatly appreciated. I think I failed to synchronize some methods/variables in the client, but when I add synchronized or volatile keywords to the methods in use the client completely freezes.</description>
    
    <lastBuildDate>Fri, 05 Apr 2013 12:30:09 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/java-networking-delayed-responses-some-type-of-synchronization-error/513594.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Java networking delayed responses(some type of synchronization error?)</title>
        <dc:creator><![CDATA[@Hash1 Hash1]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hash1">@Hash1</a> wrote:</p>
          <blockquote>
              <p>Synchronized means that 2 threads CAN’T access a method/variable at the same time.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-networking-delayed-responses-some-type-of-synchronization-error/513594/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-networking-delayed-responses-some-type-of-synchronization-error/513594/8</link>
        <pubDate>Fri, 05 Apr 2013 12:30:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-513594-8</guid>
        <source url="https://forum.moparisthebest.com/t/java-networking-delayed-responses-some-type-of-synchronization-error/513594.rss">Java networking delayed responses(some type of synchronization error?)</source>
      </item>
      <item>
        <title>Java networking delayed responses(some type of synchronization error?)</title>
        <dc:creator><![CDATA[@tigerclan tigerclan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tigerclan">@tigerclan</a> wrote:</p>
          <blockquote>
              <p>You mean adding more System.out debuggin messages? I could try that. I’m not sure if it even is a synchronization error because really as far as I know, the message handling thread isn’t really accessing very many variables from the main thread</p>
<p>edit: I don’t really see where I can add more though? Cause right now every time you click the login button, it does:</p>
<pre><code class="lang-auto"></code></pre>
<p>So you see this the first time you click the login button. But nothing happens. Then when you click it a second time, you get this</p>
<p><code>Attempting to login(USERNAME_HERE, PASSWORD_HERE)
login_message(2)</code></p>
<p>So after you send the second response, the output is this:</p>
<p><code>Attempting to login(USERNAME_HERE, PASSWORD_HERE)
Attempting to login(USERNAME_HERE, PASSWORD_HERE)
login_message(2)</code></p>
<p>login_message(2) = account already logged in</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-networking-delayed-responses-some-type-of-synchronization-error/513594/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-networking-delayed-responses-some-type-of-synchronization-error/513594/7</link>
        <pubDate>Tue, 02 Apr 2013 17:02:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-513594-7</guid>
        <source url="https://forum.moparisthebest.com/t/java-networking-delayed-responses-some-type-of-synchronization-error/513594.rss">Java networking delayed responses(some type of synchronization error?)</source>
      </item>
      <item>
        <title>Java networking delayed responses(some type of synchronization error?)</title>
        <dc:creator><![CDATA[@xxxtilllyxxx xxxtilllyxxx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xxxtilllyxxx">@xxxtilllyxxx</a> wrote:</p>
          <blockquote>
              <p>You might have synchronized incorrectly and locked a thread, try inputting messages throughout most steps to see where your problem is. Like, put a message at the start of the task, then try in the middle, and keep doing that till you don’t receive anything.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-networking-delayed-responses-some-type-of-synchronization-error/513594/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-networking-delayed-responses-some-type-of-synchronization-error/513594/6</link>
        <pubDate>Tue, 02 Apr 2013 16:55:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-513594-6</guid>
        <source url="https://forum.moparisthebest.com/t/java-networking-delayed-responses-some-type-of-synchronization-error/513594.rss">Java networking delayed responses(some type of synchronization error?)</source>
      </item>
      <item>
        <title>Java networking delayed responses(some type of synchronization error?)</title>
        <dc:creator><![CDATA[@tigerclan tigerclan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tigerclan">@tigerclan</a> wrote:</p>
          <blockquote>
              <p>yeah i thought by making listenForMessage() and handleMessage() synchronized it would solve the problem, cause I thought maybe it was because they were running in a seperate thread. But that’s when the client started freezing, so I changed it back</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-networking-delayed-responses-some-type-of-synchronization-error/513594/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-networking-delayed-responses-some-type-of-synchronization-error/513594/5</link>
        <pubDate>Tue, 02 Apr 2013 16:52:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-513594-5</guid>
        <source url="https://forum.moparisthebest.com/t/java-networking-delayed-responses-some-type-of-synchronization-error/513594.rss">Java networking delayed responses(some type of synchronization error?)</source>
      </item>
      <item>
        <title>Java networking delayed responses(some type of synchronization error?)</title>
        <dc:creator><![CDATA[@xxxtilllyxxx xxxtilllyxxx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xxxtilllyxxx">@xxxtilllyxxx</a> wrote:</p>
          <blockquote>
              <p>Some of it’s incomplete, I didn’t see anything that I thought was wrong.Maybe someone else can help, it’s been awhile since I’ve programmed :/.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-networking-delayed-responses-some-type-of-synchronization-error/513594/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-networking-delayed-responses-some-type-of-synchronization-error/513594/4</link>
        <pubDate>Tue, 02 Apr 2013 16:46:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-513594-4</guid>
        <source url="https://forum.moparisthebest.com/t/java-networking-delayed-responses-some-type-of-synchronization-error/513594.rss">Java networking delayed responses(some type of synchronization error?)</source>
      </item>
      <item>
        <title>Java networking delayed responses(some type of synchronization error?)</title>
        <dc:creator><![CDATA[@tigerclan tigerclan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tigerclan">@tigerclan</a> wrote:</p>
          <blockquote>
              <p>Yeah it just makes it so multiple threads can access the methods/variables at the same time. Ill post a little bit.</p>
<pre><code class="lang-auto">package banishment_client;

import com.jme3.app.SimpleApplication;
import com.jme3.asset.plugins.FileLocator;
import com.jme3.niftygui.NiftyJmeDisplay;
import com.jme3.system.AppSettings;
import com.jme3.system.JmeContext;
import de.lessvoid.nifty.Nifty;
import de.lessvoid.nifty.builder.ImageBuilder;
import de.lessvoid.nifty.builder.LayerBuilder;
import de.lessvoid.nifty.builder.PanelBuilder;
import de.lessvoid.nifty.builder.ScreenBuilder;
import de.lessvoid.nifty.builder.TextBuilder;
import de.lessvoid.nifty.controls.TextField;
import de.lessvoid.nifty.controls.button.builder.ButtonBuilder;
import de.lessvoid.nifty.controls.textfield.builder.TextFieldBuilder;
import de.lessvoid.nifty.screen.Screen;
import de.lessvoid.nifty.screen.ScreenController;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * @author Danny Barrett
 * @version 1.0
 * 
 *      Banishment Alpha v1.0
 *      Copright 2013
 * 
 */

public class Banishment_Client extends SimpleApplication implements ScreenController {
    
    /** Nifty GUI Variables **/
    private Nifty nifty;
    private Screen screen;
    private NiftyJmeDisplay niftyJmeDisplay;
    
    /** Networking Variables **/
    private boolean connectedToServer;
    private int port = 5000;
    private String host = "localhost";
    private volatile Socket server;
    private volatile PrintWriter outputStream;
    private volatile BufferedReader inputStream;
    
    /** Character Variables **/
    private boolean loggedIn = false;

    public static void main(String[] args) {
        Logger.getLogger("").setLevel(Level.SEVERE);
        Banishment_Client banishment_v1 = new Banishment_Client();
        banishment_v1.start(JmeContext.Type.Display);
    }
    
    @Override
    public void start(JmeContext.Type contextType) {
        createAppSettings();
        super.start(contextType);
    }
    
    private void createAppSettings() {
        AppSettings appSettings = new AppSettings(true);
        appSettings.setTitle("Banishment - MMORPG");
        setSettings(appSettings);
        setDisplayStatView(false);
        setDisplayFps(false);
    }
    
    @Override
    public void simpleInitApp() {
        registerAssetManagerLocation();
        initNifty();
    }
    
    private void initNifty() {
        niftyJmeDisplay = new NiftyJmeDisplay(assetManager, inputManager, audioRenderer, guiViewPort);
        Logger.getLogger("de.lessvoid.nifty").setLevel(Level.SEVERE); 
        Logger.getLogger("NiftyInputEventHandlingLog").setLevel(Level.SEVERE); 
        nifty = niftyJmeDisplay.getNifty();
        guiViewPort.addProcessor(niftyJmeDisplay);
        flyCam.setEnabled(false);
        
        nifty.loadStyleFile("nifty-default-styles.xml");
        nifty.loadControlFile("nifty-default-controls.xml");
       
        
        /** START SCREEN **/
        nifty.addScreen("start", new ScreenBuilder("start") {{
            
            controller(new banishment_client.Banishment_Client());
            
            /* Background Layer */
            layer(new LayerBuilder("Background") {{ 
                childLayoutCenter();
                backgroundColor("#000f");
                
                image(new ImageBuilder() {{
                    filename("Interface/Logo/logo.png");
                    width("100%");
                    height("100%");
                }});
            }});
            /* End of Background Layer */
            
            /* Foreground Layer */
            layer(new LayerBuilder("Foreground") {{
                childLayoutVertical();
                backgroundColor("#0000");
                
                /* Logo Panel */
                panel(new PanelBuilder("panel_logo") {{
                    childLayoutCenter();
                    alignCenter();
                    valignCenter();
                    height("20%");
                    width("100%");                    
                }});
                /* End of Logo Panel */
                
                /* SPACER */
                panel(new PanelBuilder("panel_spacer1") {{
                    childLayoutCenter();
                    height("15%");
                    width("100%");
                }});
                /* End of SPACER */
                
                /* Login Message Field */
                panel(new PanelBuilder("panel_login_message") {{
                    childLayoutCenter();
                    alignCenter();
                    height("10%");
                    width("100%");
                    text(new TextBuilder() {{
                        text("Please enter username and password");
                        font("Interface/Fonts/Default.fnt");
                    }});
                }});
                /* End of Login Message Field */
                
                /* Username Text Field */
                panel(new PanelBuilder("panel_username1") {{ 
                    childLayoutCenter();
                    alignCenter();
                    height("8%");
                    width("100%");
                    text(new TextBuilder() {{
                        text("Username:");
                        font("Interface/Fonts/Default.fnt");
                    }});
                }});
                
                panel(new PanelBuilder("panel_username2") {{
                    childLayoutCenter();
                    alignCenter();
                    height("8%");
                    width("100%");
                    control(new TextFieldBuilder("usernameField", "") {{
                        maxLength(12);
                        width("25%");                        
                    }});
                }});
                /* End of Username Text Field */
                
                /* Password Text Field */
                panel(new PanelBuilder("panel_password1") {{
                    childLayoutCenter();
                    alignCenter();
                    height("8%");
                    width("100%");
                    text(new TextBuilder() {{
                        text("Password:");
                        font("Interface/Fonts/Default.fnt");
                    }});
                }});
                
                panel(new PanelBuilder("panel_password2") {{
                    childLayoutCenter();
                    alignCenter();
                    height("8%");
                    width("100%");
                    control(new TextFieldBuilder("passwordField", "") {{
                        passwordChar("*".charAt(0));
                        maxLength(15);
                        alignCenter();
                        width("25%");
                    }});
                }});
                /* End of Password Text Field */
                
                /* Login Button */
                panel(new PanelBuilder("panel_login") {{
                    childLayoutCenter();
                    alignCenter();
                    height("15%");
                    width("100%");
                    control(new ButtonBuilder("LoginButton", "Login") {{
                        alignCenter();
                        width("20%");
                        height("50%");
                        visibleToMouse(true);
                        interactOnClick("sendLogin()");
                    }});
                }});
                /*End of Login Button */
                
                /** Copyright **/
                panel(new PanelBuilder("panel_bottom") {{
                    childLayoutCenter();
                    alignCenter();
                    height("10%");
                    width("100%");
                    text(new TextBuilder() {{ 
                        text("Copyright 2013 Danny Barrett");
                        font("Interface/Fonts/Default.fnt");
                        height("100%");
                        width("100%");
                    }});
                }});
                /** End of Copright **/
                
            }});
            /* End of Foreground Layer */
            
        }}.build(nifty));
        /** END OF START SCREEN **/
        
        /** HUD SCREEN **/
        nifty.addScreen("hud", new ScreenBuilder("hud") {{
            
            controller(new banishment_client.Banishment_Client());
        
        }}.build(nifty));
        /** END OF HUD SCREEN **/
        
        nifty.gotoScreen("start");
    }
    
    public void sendLogin() {
        login();
    }
    
    private void login() {
        String username = screen.findNiftyControl("usernameField", TextField.class).getText();
        String password = screen.findNiftyControl("passwordField", TextField.class).getText();
        System.out.println("Attempting to login(" + username + ", " + password + ")");
        if(!connectedToServer) {
            connectToServer();
        }
        if(connectedToServer) {
            if(outputStream != null) {
                outputStream.println("login(" + username + "," + password + ")");
            }
        }
    }
    
    @Override
    public void bind(Nifty nifty, Screen screen) {
        this.nifty = nifty;
        this.screen = screen;
    }
    
    @Override
    public void onStartScreen() {}
    
    @Override
    public void onEndScreen() {}
    
    private void connectToServer() {
        try {
            server = new Socket(host,port);
            outputStream = new PrintWriter(server.getOutputStream(), true);
            connectedToServer = true;
            Thread t1 = new Thread(new Runnable() {
                @Override
                public void run() {
                    while(true) {
                        listenForMessage();
                    }
                }
            });
            t1.start();
        } catch (UnknownHostException ex) {
            Logger.getLogger(Banishment_Client.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Banishment_Client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void listenForMessage() {
        try {
            inputStream = new BufferedReader(new InputStreamReader(server.getInputStream()));
        } catch (IOException ex) {
            Logger.getLogger(Banishment_Client.class.getName()).log(Level.SEVERE, null, ex);
        }
        String message;
        try {
            while ((message = inputStream.readLine()) != null) {
                System.out.println(inputStream.readLine());
                handleMessage(message);
            }
        } catch (IOException ex) {
            Logger.getLogger(Banishment_Client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void handleMessage(String message) {
        if(message.startsWith("login_message")) {
            int a = message.indexOf("(");
            int b = message.indexOf(")");
            int id = Integer.parseInt(message.substring(a + 1, b));
            switch(id) {
                case 0: /* Invalid username and/or password */
                    break;
                case 1: /* Server is full */
                    break;
                case 2: /* Account already logged in */
                    break;
                case 3: /* Successful login */
                	loggedIn = true;
                    break;
            }
        }
    }
    
    @Override
    public void simpleUpdate(float tps) {
        updateLoop(tps);
    }
    
    private void updateLoop(float tps) {
        
    }
    
    private void registerAssetManagerLocation() {
        assetManager.registerLocator("C:/Documents and Settings/Danny/My Documents/NetBeansProjects/Banishment_v1/assets", FileLocator.class);
    }
    
}</code></pre>
<pre><code class="lang-auto">package banishment_server;

import com.jme3.app.SimpleApplication;
import com.jme3.system.JmeContext;
import java.io.BufferedReader;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * @author Danny Barrett
 */

public class Banishment_Server extends SimpleApplication {
    
    private int port = 5000;
    
    private ServerSocket server;
    private Socket client;
    private BufferedReader inputStream;
    
    public int maxOnline = 200;
    public volatile String[] loggedInAccounts = new String[maxOnline];
    public volatile int accountsOnline;

    public static void main(String[] args) {
        Logger.getLogger("").setLevel(Level.SEVERE);
        Banishment_Server banishmentServer = new Banishment_Server();
        banishmentServer.start(JmeContext.Type.Headless);
    }

    @Override
    public void simpleInitApp() {
        initializeServer();
    }
    
    
    private void initializeServer() {  
        try {
            server = new ServerSocket(port); 
        } catch (IOException ex) {
            Logger.getLogger(Banishment_Server.class.getName()).log(Level.SEVERE, null, ex);
        }      
        while(true) {
            try { 
                client = server.accept();
            } catch (IOException ex) {
                Logger.getLogger(Banishment_Server.class.getName()).log(Level.SEVERE, null, ex);
            }
            Thread t = new Thread(new ClientConnection(client, this));
            t.start();
        }
    }
    
}</code></pre>
<pre><code class="lang-auto">package banishment_server;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Danny Barrett
 */

public class ClientConnection implements Runnable {
    
    private Banishment_Server server;
    
    private Socket client;
    private BufferedReader inputStream = null;
    private PrintWriter outputStream = null;
    
    private Connection connection = null;
    private Statement statement = null;
    private PreparedStatement preparedStatement = null;
    private ResultSet resultSet = null;
    private String url = "jdbc:mysql://localhost:3306/banishmentdatabase";
    private String mySqlUsername = "*****";
    private String mySqlPassword = "*****";
    
    private boolean loggedIn = false;
    private int playerID = -1;
    private String playerUsername = null;
            
    ClientConnection(Socket client, Banishment_Server bms) {
        this.client = client;
        server = bms;
    }

    @Override
    public void run() {
        try {
            inputStream = new BufferedReader(new InputStreamReader(client.getInputStream()));
            outputStream = new PrintWriter(client.getOutputStream(), true);
        } catch (IOException ex) {
            Logger.getLogger(Banishment_Server.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }
        String message;
        try {
            while ((message = inputStream.readLine()) != null) {
                System.out.println("Client says: " + message); 
                handleMessage(message);
                }
        } catch (IOException ex) {
            Logger.getLogger(Banishment_Server.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void handleMessage(String message) {
        if(message.startsWith("login")) {
            int a = message.indexOf("(");
            int b = message.indexOf(",");
            int c = message.indexOf(")");
            String user = message.substring(a+1,b);
            String pass = message.substring(b+1,c);
            System.out.println("Attempting to login on '" + user + "' using password: " + pass + ".");
            try {
                Class.forName("com.mysql.jdbc.Driver").newInstance();
                connection = DriverManager.getConnection(url, mySqlUsername, mySqlPassword);
                preparedStatement = connection.prepareStatement("SELECT * FROM user_info WHERE username='" + user + "' and password='" + MD5(pass) + "'");
                resultSet = preparedStatement.executeQuery();
                boolean correctLogin = false;
                while (resultSet.next()) {
                    correctLogin = true;
                    System.out.print(resultSet.getInt(1));
                    System.out.print(": ");
                    System.out.println(resultSet.getString(2));
                    boolean alreadyOnline = false;
                    if(server.accountsOnline &lt; server.maxOnline) {
                        for(int i = 0; i &lt; server.loggedInAccounts.length; i++) {
                            if(server.loggedInAccounts[i] != null) {
                                if(server.loggedInAccounts[i].equalsIgnoreCase(user)) {
                                    outputStream.println("login_message(2)"); /*  Account already online */
                                    alreadyOnline = true;
                                }
                            }
                        }
                        if(!alreadyOnline) {
                            outputStream.println("login_message(3)");
                            playerID = resultSet.getInt(1);
                            playerUsername = resultSet.getString(2);
                            loggedIn = true;
                            server.loggedInAccounts[server.accountsOnline] = playerUsername;
                            server.accountsOnline++;
                            System.out.println("Users online:" + server.accountsOnline);
                        }
                    } else {
                        outputStream.println("login_message(1)");
                    }
                }
                if(!correctLogin) {
                    outputStream.println("login_message(0)");
                }
            } catch (Exception ex) {
                Logger.getLogger(ClientConnection.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    private String MD5(String input) {
        try {
            MessageDigest messageDigest = MessageDigest.getInstance("MD5");
            byte[] array = messageDigest.digest(input.getBytes());
            StringBuffer stringBuffer = new StringBuffer();
            for(int i = 0; i &lt; array.length; i++) {
                stringBuffer.append(Integer.toHexString((array[i] &amp; 0xFF) | 0x100).substring(1, 3));
            }
            return stringBuffer.toString();
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(ClientConnection.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }
    
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-networking-delayed-responses-some-type-of-synchronization-error/513594/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-networking-delayed-responses-some-type-of-synchronization-error/513594/3</link>
        <pubDate>Tue, 02 Apr 2013 16:37:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-513594-3</guid>
        <source url="https://forum.moparisthebest.com/t/java-networking-delayed-responses-some-type-of-synchronization-error/513594.rss">Java networking delayed responses(some type of synchronization error?)</source>
      </item>
      <item>
        <title>Java networking delayed responses(some type of synchronization error?)</title>
        <dc:creator><![CDATA[@xxxtilllyxxx xxxtilllyxxx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xxxtilllyxxx">@xxxtilllyxxx</a> wrote:</p>
          <blockquote>
              <p>Do you understand what synchronization and volatile keywords mean? Post some classes. Synchronization is very touchy, and you can lock things easily without knowing.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-networking-delayed-responses-some-type-of-synchronization-error/513594/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-networking-delayed-responses-some-type-of-synchronization-error/513594/2</link>
        <pubDate>Tue, 02 Apr 2013 16:32:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-513594-2</guid>
        <source url="https://forum.moparisthebest.com/t/java-networking-delayed-responses-some-type-of-synchronization-error/513594.rss">Java networking delayed responses(some type of synchronization error?)</source>
      </item>
      <item>
        <title>Java networking delayed responses(some type of synchronization error?)</title>
        <dc:creator><![CDATA[@tigerclan tigerclan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tigerclan">@tigerclan</a> wrote:</p>
          <blockquote>
              <p>So the program I’m developing, I use just a basic TCP/IP server socket connection to communicate back and forth between the client(s)/server. The problem I’m getting is that when I send a message to the server it doesn’t reply, unless I send a second message, and then I never get the reply from the first message client sided. The problem with this is, when the client sends the login request, the server runs the credentials and logs in the user server-sided. So when the client sends the second message, the server tells the client that it’s already logged in, so you’re never able to get past the login interface. Any help would be greatly appreciated. I think I failed to synchronize some methods/variables in the client, but when I add synchronized or volatile keywords to the methods in use the client completely freezes.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-networking-delayed-responses-some-type-of-synchronization-error/513594/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-networking-delayed-responses-some-type-of-synchronization-error/513594/1</link>
        <pubDate>Tue, 02 Apr 2013 16:02:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-513594-1</guid>
        <source url="https://forum.moparisthebest.com/t/java-networking-delayed-responses-some-type-of-synchronization-error/513594.rss">Java networking delayed responses(some type of synchronization error?)</source>
      </item>
  </channel>
</rss>
