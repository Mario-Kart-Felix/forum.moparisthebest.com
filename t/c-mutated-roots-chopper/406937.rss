<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[C]Mutated Roots chopper</title>
    <link>https://forum.moparisthebest.com/t/c-mutated-roots-chopper/406937</link>
    <description>[center][b]Original post at http://villavu.com/forum/showthread.php?p=818091[/b][/center]

Made this a joke, but it turned out to work pretty well.  This script was made less than 1 hour after the update was released, so it&#39;s the first script for this area. :garfield:  Has no special or notable features, it will just find and chop mutated roots which will farm mutated vines for you.  Each vine is worth 140 WC exp.

I didn&#39;t make this for endurance, like I said it was just a joke so don&#39;t expect much.  No breaks, no stats, but it does have a little bit of anti-ban.  No reflection required.

[code]program VineChopper;
  {$define SMART}
  {$i srl/srl.scar}

Var
  Tries,Time: Integer;

  Procedure DeclarePlayers;
  begin
    HowManyPlayers := 1;
    NumberOfPlayers(HowManyPlayers);
    CurrentPlayer := 0;
    with Players[0] do
    begin
      Name := &#39;&#39;;
      Pass := &#39;&#39;;
      Nick := &#39;&#39;;
      Pin  := &#39;&#39;;
      Active := True;
    end;
  end;

  Procedure ReturnValues(colors: TIntegerArray; var HueMods, SatMods: Extended; var color, Tolerance: Integer);
  Var
    h, s, t: Extended;
    I,II : integer;
    HSLColor : Array[1..3] of Extended;
    HSL : Array[0..1] of Array[1..3] of Extended;
  begin;
    For I:= 1 to 3 do
    begin;
      HSL[0][i] := 255;
    end;

    For I:= 0 to High(Colors) do
    begin;
      ColortoHSL(Colors[i],HSLColor[1],HSLColor[2],HSLColor[3]);
      For II:= 1 to 3 do
      begin;
        HSL[0][II] := MinE(HSLColor[II],HSL[0][II]);
        HSL[1][II] := MaxE(HSLColor[II],HSL[1][II]);
      end;
    end;

    H := (HSL[1][1] - HSL[0][1]);
    S := (HSL[1][2] - HSL[0][2]);
    T := (HSL[1][3] - HSL[0][3]);

    try
      HueMods := (H/T);
      SatMods := (S/T);
      Tolerance := Round(t);
    except
      HueMods := 0;
      SatMods := 0;
      Tolerance := Round(0.0);
    end;

    Color := HSLToColor((HSL[1][1] + HSL[0][1]) div 2,(HSL[1][2] + HSL[0][2]) div 2,(HSL[1][3] + HSL[0][3]) div 2);
  end;

  Function TPAFinder(Colors: TIntegerArray; TheUpText: TStringArray; var x, y: Integer; midx, midy: integer): Boolean;
  Var
    CTS, I, color, tolerance: Integer;
    TPA: TPointArray;
    ATPA: Array of TPointArray;
    Hmod, Smod: Extended;
  Begin
    ReturnValues(colors, Hmod, Smod, color, tolerance);
    CTS := GetColorToleranceSpeed;
    ColorToleranceSpeed(2);
    SetColorSpeed2Modifiers(Hmod, SMod);
    FindColorsSpiralTolerance(midx, midy, TPA, color, MSX1, MSY1, MSX2, MSY2, Tolerance);
    ColorToleranceSpeed(CTS);
    ATPA := TPAToATPAEx(TPA, 15, 15);

    For I := 0 to High(ATPA) do
    begin
      Inc(Tries);
      MiddleTPAEx(ATPA[i], x, y);
      MMouse(x, y, 2, 2);
      Wait(randomrange(150,300));
      If(IsUpTextMultiCustom(TheUpText)) then
      begin
        Result := True;
        GetMousePos(x, y);
        Tries := 0;
        Break;
      end;
    end;
  end;

  Function Chopping: Boolean;
  begin

    if FindBlackChatMessage(&#39;at you&#39;) then
    begin
      Time := 0;
      Result := False;
    end else if (FindBlackChatMessage(&#39;swing&#39;) Or FindBlackChatMessage(&#39;get&#39;)) then
      Result := True;

    Inc(Time);
    if (Time &gt; RandomRange(25,35)) then
    begin
      Result := False;
      Time := 0;
    end;
  end;

  Procedure Chop;
  Var
    X,Y: Integer;
  begin
    if (Tries &gt;= 10) then
    begin
      MakeCompass(&#39;random&#39;);
      Tries := 0;
    end else
    begin
      if TPAFinder([6969147,7495231,8612937],[&#39;mut&#39;,&#39;tat&#39;,&#39;ed&#39;,&#39;mutated&#39;],X,Y,MSCX,MSCY) then
      begin
        Mouse(X,Y,0,0,True);
        if DidRedClick then
          Wait(RandomRange(2750,3500));  //Enough time to update out chatbox
        Tries := 0;
      end;
    end;
  end;

  procedure Antiban;
  var
    i: Integer;
  begin
    if not LoggedIn then Exit;
    FindNormalRandoms;
    i := Random(50);

    case i of
      1: RandomRClick;
      2: RandomMovement;
    end;

    Wait(RandomRange(100,250));
  end;

begin
  Smart_Server := 86;
  Smart_Members := True;
  Smart_Signed := True;
  Smart_SuperDetail := False;
  SetupSRL;
  DeclarePlayers;

  Repeat

    While Chopping do
      AntiBan;
    if Not Chopping then
      Chop;

  Until(False)

end.
[/code]

Credits to [U]PoW[/U] for the TPA finding. :)  Works very accurately here.</description>
    
    <lastBuildDate>Fri, 29 Jul 2011 01:36:47 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/c-mutated-roots-chopper/406937.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[C]Mutated Roots chopper</title>
        <dc:creator><![CDATA[@Wolf Wolf]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wolf">@Wolf</a> wrote:</p>
          <blockquote>
              <p>[center]<span class="bbcode-b">Original post at <a href="http://villavu.com/forum/showthread.php?p=818091" rel="nofollow noopener">http://villavu.com/forum/showthread.php?p=818091</a></span>[/center]</p>
<p>Made this a joke, but it turned out to work pretty well.  This script was made less than 1 hour after the update was released, so it’s the first script for this area. :garfield:  Has no special or notable features, it will just find and chop mutated roots which will farm mutated vines for you.  Each vine is worth 140 WC exp.</p>
<p>I didn’t make this for endurance, like I said it was just a joke so don’t expect much.  No breaks, no stats, but it does have a little bit of anti-ban.  No reflection required.</p>
<p>[code]program VineChopper;<br>
{$define SMART}<br>
{$i srl/srl.scar}</p>
<p>Var<br>
Tries,Time: Integer;</p>
<p>Procedure DeclarePlayers;<br>
begin<br>
HowManyPlayers := 1;<br>
NumberOfPlayers(HowManyPlayers);<br>
CurrentPlayer := 0;<br>
with Players[0] do<br>
begin<br>
Name := ‘’;<br>
Pass := ‘’;<br>
Nick := ‘’;<br>
Pin  := ‘’;<br>
Active := True;<br>
end;<br>
end;</p>
<p>Procedure ReturnValues(colors: TIntegerArray; var HueMods, SatMods: Extended; var color, Tolerance: Integer);<br>
Var<br>
h, s, t: Extended;<br>
I,II : integer;<br>
HSLColor : Array[1…3] of Extended;<br>
HSL : Array[0…1] of Array[1…3] of Extended;<br>
begin;<br>
For I:= 1 to 3 do<br>
begin;<br>
HSL[0][i] := 255;<br>
end;</p>
<pre><code>For I:= 0 to High(Colors) do
begin;
  ColortoHSL(Colors[i],HSLColor[1],HSLColor[2],HSLColor[3]);
  For II:= 1 to 3 do
  begin;
    HSL[0][II] := MinE(HSLColor[II],HSL[0][II]);
    HSL[1][II] := MaxE(HSLColor[II],HSL[1][II]);
  end;
end;

H := (HSL[1][1] - HSL[0][1]);
S := (HSL[1][2] - HSL[0][2]);
T := (HSL[1][3] - HSL[0][3]);

try
  HueMods := (H/T);
  SatMods := (S/T);
  Tolerance := Round(t);
except
  HueMods := 0;
  SatMods := 0;
  Tolerance := Round(0.0);
end;

Color := HSLToColor((HSL[1][1] + HSL[0][1]) div 2,(HSL[1][2] + HSL[0][2]) div 2,(HSL[1][3] + HSL[0][3]) div 2);
</code></pre>
<p>end;</p>
<p>Function TPAFinder(Colors: TIntegerArray; TheUpText: TStringArray; var x, y: Integer; midx, midy: integer): Boolean;<br>
Var<br>
CTS, I, color, tolerance: Integer;<br>
TPA: TPointArray;<br>
ATPA: Array of TPointArray;<br>
Hmod, Smod: Extended;<br>
Begin<br>
ReturnValues(colors, Hmod, Smod, color, tolerance);<br>
CTS := GetColorToleranceSpeed;<br>
ColorToleranceSpeed(2);<br>
SetColorSpeed2Modifiers(Hmod, SMod);<br>
FindColorsSpiralTolerance(midx, midy, TPA, color, MSX1, MSY1, MSX2, MSY2, Tolerance);<br>
ColorToleranceSpeed(CTS);<br>
ATPA := TPAToATPAEx(TPA, 15, 15);</p>
<pre><code>For I := 0 to High(ATPA) do
begin
  Inc(Tries);
  MiddleTPAEx(ATPA[i], x, y);
  MMouse(x, y, 2, 2);
  Wait(randomrange(150,300));
  If(IsUpTextMultiCustom(TheUpText)) then
  begin
    Result := True;
    GetMousePos(x, y);
    Tries := 0;
    Break;
  end;
end;
</code></pre>
<p>end;</p>
<p>Function Chopping: Boolean;<br>
begin</p>
<pre><code>if FindBlackChatMessage('at you') then
begin
  Time := 0;
  Result := False;
end else if (FindBlackChatMessage('swing') Or FindBlackChatMessage('get')) then
  Result := True;

Inc(Time);
if (Time &gt; RandomRange(25,35)) then
begin
  Result := False;
  Time := 0;
end;
</code></pre>
<p>end;</p>
<p>Procedure Chop;<br>
Var<br>
X,Y: Integer;<br>
begin<br>
if (Tries &gt;= 10) then<br>
begin<br>
MakeCompass(‘random’);<br>
Tries := 0;<br>
end else<br>
begin<br>
if TPAFinder([6969147,7495231,8612937],[‘mut’,‘tat’,‘ed’,‘mutated’],X,Y,MSCX,MSCY) then<br>
begin<br>
Mouse(X,Y,0,0,True);<br>
if DidRedClick then<br>
Wait(RandomRange(2750,3500));  //Enough time to update out chatbox<br>
Tries := 0;<br>
end;<br>
end;<br>
end;</p>
<p>procedure Antiban;<br>
var<br>
i: Integer;<br>
begin<br>
if not LoggedIn then Exit;<br>
FindNormalRandoms;<br>
i := Random(50);</p>
<pre><code>case i of
  1: RandomRClick;
  2: RandomMovement;
end;

Wait(RandomRange(100,250));
</code></pre>
<p>end;</p>
<p>begin<br>
Smart_Server := 86;<br>
Smart_Members := True;<br>
Smart_Signed := True;<br>
Smart_SuperDetail := False;<br>
SetupSRL;<br>
DeclarePlayers;</p>
<p>Repeat</p>
<pre><code>While Chopping do
  AntiBan;
if Not Chopping then
  Chop;
</code></pre>
<p>Until(False)</p>
<p>end.<br>
[/code]</p>
<p>Credits to <span class="bbcode-u">PoW</span> for the TPA finding. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:">  Works very accurately here.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-mutated-roots-chopper/406937/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-mutated-roots-chopper/406937/1</link>
        <pubDate>Fri, 29 Jul 2011 01:36:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-406937-1</guid>
        <source url="https://forum.moparisthebest.com/t/c-mutated-roots-chopper/406937.rss">[C]Mutated Roots chopper</source>
      </item>
  </channel>
</rss>
