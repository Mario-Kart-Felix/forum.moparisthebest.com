<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Java.nio</title>
    <link>https://forum.moparisthebest.com/t/java-nio/348257</link>
    <description>What&#39;s the point in using this set of classes? I can&#39;t see anything useful about it apart from requiring more code to work..

[code]		Selector selector = Selector.open();
		
		ServerSocketChannel channel = ServerSocketChannel.open();
		channel.configureBlocking(false);
		
		InetSocketAddress isa = new InetSocketAddress(3333);
		channel.socket().bind(isa);
		
		channel.register(selector, SelectionKey.OP_ACCEPT);
		
		while(selector.select() &gt; 0) {
			
			Set&lt;SelectionKey&gt; readyKeys = selector.selectedKeys();
			Iterator&lt;SelectionKey&gt; readyItor = readyKeys.iterator();
			
			while(readyItor.hasNext()) {
				SelectionKey sk = (SelectionKey)readyItor.next();
				readyItor.remove();
				if(sk.isAcceptable()) {
					ServerSocketChannel keyChan = (ServerSocketChannel)sk.channel();
					ServerSocket serverSock = keyChan.socket();
					Socket s = serverSock.accept();
				}
			}
		}[/code]

As opposed to...
[code]ServerSocket sock = new ServerSocket(3333);
while(true) {
	Socket s = sock.accept();
}[/code]</description>
    
    <lastBuildDate>Mon, 12 Jul 2010 02:38:10 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/java-nio/348257.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Java.nio</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>that is a widely used tutorial although i think it is shit personally</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-nio/348257/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-nio/348257/12</link>
        <pubDate>Mon, 12 Jul 2010 02:38:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-348257-12</guid>
        <source url="https://forum.moparisthebest.com/t/java-nio/348257.rss">Java.nio</source>
      </item>
      <item>
        <title>Java.nio</title>
        <dc:creator><![CDATA[@Ollie Ollie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ollie">@Ollie</a> wrote:</p>
          <blockquote>
              <p>huuuuuuuuuuuur</p>
<p><a href="http://rox-xmlrpc.sourceforge.net/niotut/" class="onebox" target="_blank" rel="nofollow noopener">http://rox-xmlrpc.sourceforge.net/niotut/</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-nio/348257/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-nio/348257/11</link>
        <pubDate>Sun, 11 Jul 2010 22:49:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-348257-11</guid>
        <source url="https://forum.moparisthebest.com/t/java-nio/348257.rss">Java.nio</source>
      </item>
      <item>
        <title>Java.nio</title>
        <dc:creator><![CDATA[@bloodrayne bloodrayne]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bloodrayne">@bloodrayne</a> wrote:</p>
          <blockquote>
              <p>[quote=“xEnt, post:9, topic:348257”][quote author=Newty link=topic=444638.msg3265352#msg3265352 date=1278823282]</p>
<aside class="quote no-group">
<blockquote>
<aside class="quote no-group">
<blockquote>
<p>The whole point of using a selector in Java is to avoid using blocking sockets and thus avoiding horrible networking designs (such as the popular thread per client design) and instead, block the invoking thread until a socket in the queue is ready to read/write data or accept a connection, or until the optional set interval for ‘select()’ returns.</p>
<p>The NIO API is the only standard Java library that allows you to toggle the blocking mode of a socket as opposed to enforcing blocking sockets - as is done in the standard I/O API.</p>
</blockquote>
</aside>
<p>hey I’m abraham and I can repeat what everyone else has said.<br>
[/quote][quote author=abraham2119 link=topic=444638.msg3265319#msg3265319 date=1278821190]</p>
<aside class="quote no-group">
<blockquote>
<aside class="quote no-group">
<blockquote>
<p>The whole point of using a selector in Java is to avoid using blocking sockets and thus avoiding horrible networking designs (such as the popular thread per client design) and instead, block the invoking thread until a socket in the queue is ready to read/write data or accept a connection, or until the optional set interval for ‘select()’ returns.</p>
<p>The NIO API is the only standard Java library that allows you to toggle the blocking mode of a socket as opposed to enforcing blocking sockets - as is done in the standard I/O API.</p>
</blockquote>
</aside>
<p>hey I’m abraham and I can repeat what everyone else has said.<br>
[/quote]hey I’m anthony and I’m a clueless fuck who seeks to compensate his lack of awareness and lack of mentality with inapplicable posts.</p>
</blockquote>
</aside>
<p>Hey I’m newty and nobody gives a fuck about either of your arguments</p>
</blockquote>
</aside>
<p>Hi i’m xEnt and i don’t like to state the obvious.[/quote]</p>
<p>hi im 12 and what is this</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-nio/348257/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-nio/348257/10</link>
        <pubDate>Sun, 11 Jul 2010 21:48:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-348257-10</guid>
        <source url="https://forum.moparisthebest.com/t/java-nio/348257.rss">Java.nio</source>
      </item>
      <item>
        <title>Java.nio</title>
        <dc:creator><![CDATA[@xEnt xEnt]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xent">@xEnt</a> wrote:</p>
          <blockquote>
              <p>[quote=“Newty, post:8, topic:348257”][quote author=(Anthony) link=topic=444638.msg3265257#msg3265257 date=1278814130]</p>
<aside class="quote no-group">
<blockquote>
<p>The whole point of using a selector in Java is to avoid using blocking sockets and thus avoiding horrible networking designs (such as the popular thread per client design) and instead, block the invoking thread until a socket in the queue is ready to read/write data or accept a connection, or until the optional set interval for ‘select()’ returns.</p>
<p>The NIO API is the only standard Java library that allows you to toggle the blocking mode of a socket as opposed to enforcing blocking sockets - as is done in the standard I/O API.</p>
</blockquote>
</aside>
<p>hey I’m abraham and I can repeat what everyone else has said.<br>
[/quote][quote author=abraham2119 link=topic=444638.msg3265319#msg3265319 date=1278821190]</p>
<aside class="quote no-group">
<blockquote>
<aside class="quote no-group">
<blockquote>
<p>The whole point of using a selector in Java is to avoid using blocking sockets and thus avoiding horrible networking designs (such as the popular thread per client design) and instead, block the invoking thread until a socket in the queue is ready to read/write data or accept a connection, or until the optional set interval for ‘select()’ returns.</p>
<p>The NIO API is the only standard Java library that allows you to toggle the blocking mode of a socket as opposed to enforcing blocking sockets - as is done in the standard I/O API.</p>
</blockquote>
</aside>
<p>hey I’m abraham and I can repeat what everyone else has said.<br>
[/quote]hey I’m anthony and I’m a clueless fuck who seeks to compensate his lack of awareness and lack of mentality with inapplicable posts.</p>
</blockquote>
</aside>
<p>Hey I’m newty and nobody gives a fuck about either of your arguments[/quote]</p>
<p>Hi i’m xEnt and i don’t like to state the obvious.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-nio/348257/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-nio/348257/9</link>
        <pubDate>Sun, 11 Jul 2010 08:36:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-348257-9</guid>
        <source url="https://forum.moparisthebest.com/t/java-nio/348257.rss">Java.nio</source>
      </item>
      <item>
        <title>Java.nio</title>
        <dc:creator><![CDATA[@NewbieNewty Newty]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/newbienewty">@NewbieNewty</a> wrote:</p>
          <blockquote>
              <p>[quote="(Anthony), post:6, topic:348257"][quote author=abraham2119 link=topic=444638.msg3265200#msg3265200 date=1278811870]<br>
The whole point of using a selector in Java is to avoid using blocking sockets and thus avoiding horrible networking designs (such as the popular thread per client design) and instead, block the invoking thread until a socket in the queue is ready to read/write data or accept a connection, or until the optional set interval for ‘select()’ returns.</p>
<p>The NIO API is the only standard Java library that allows you to toggle the blocking mode of a socket as opposed to enforcing blocking sockets - as is done in the standard I/O API.<br>
[/quote]<br>
hey I’m abraham and I can repeat what everyone else has said.[/quote][quote=“abraham2119, post:7, topic:348257”][quote author=(Anthony) link=topic=444638.msg3265257#msg3265257 date=1278814130]</p>
<aside class="quote no-group">
<blockquote>
<p>The whole point of using a selector in Java is to avoid using blocking sockets and thus avoiding horrible networking designs (such as the popular thread per client design) and instead, block the invoking thread until a socket in the queue is ready to read/write data or accept a connection, or until the optional set interval for ‘select()’ returns.</p>
<p>The NIO API is the only standard Java library that allows you to toggle the blocking mode of a socket as opposed to enforcing blocking sockets - as is done in the standard I/O API.</p>
</blockquote>
</aside>
<p>hey I’m abraham and I can repeat what everyone else has said.<br>
[/quote]hey I’m anthony and I’m a clueless fuck who seeks to compensate his lack of awareness and lack of mentality with inapplicable posts.[/quote]</p>
<p>Hey I’m newty and nobody gives a fuck about either of your arguments</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-nio/348257/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-nio/348257/8</link>
        <pubDate>Sun, 11 Jul 2010 04:41:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-348257-8</guid>
        <source url="https://forum.moparisthebest.com/t/java-nio/348257.rss">Java.nio</source>
      </item>
      <item>
        <title>Java.nio</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>[quote="(Anthony), post:6, topic:348257"][quote author=abraham2119 link=topic=444638.msg3265200#msg3265200 date=1278811870]<br>
The whole point of using a selector in Java is to avoid using blocking sockets and thus avoiding horrible networking designs (such as the popular thread per client design) and instead, block the invoking thread until a socket in the queue is ready to read/write data or accept a connection, or until the optional set interval for ‘select()’ returns.</p>
<p>The NIO API is the only standard Java library that allows you to toggle the blocking mode of a socket as opposed to enforcing blocking sockets - as is done in the standard I/O API.<br>
[/quote]<br>
hey I’m abraham and I can repeat what everyone else has said.[/quote]hey I’m anthony and I’m a clueless fuck who seeks to compensate his lack of awareness and lack of mentality with inapplicable posts.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-nio/348257/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-nio/348257/7</link>
        <pubDate>Sun, 11 Jul 2010 04:06:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-348257-7</guid>
        <source url="https://forum.moparisthebest.com/t/java-nio/348257.rss">Java.nio</source>
      </item>
      <item>
        <title>Java.nio</title>
        <dc:creator><![CDATA[@_bool]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_bool">@_bool</a> wrote:</p>
          <blockquote>
              <p>[quote=“abraham2119, post:5, topic:348257”]The whole point of using a selector in Java is to avoid using blocking sockets and thus avoiding horrible networking designs (such as the popular thread per client design) and instead, block the invoking thread until a socket in the queue is ready to read/write data or accept a connection, or until the optional set interval for ‘select()’ returns.</p>
<p>The NIO API is the only standard Java library that allows you to toggle the blocking mode of a socket as opposed to enforcing blocking sockets - as is done in the standard I/O API.[/quote]<br>
hey I’m abraham and I can repeat what everyone else has said.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-nio/348257/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-nio/348257/6</link>
        <pubDate>Sun, 11 Jul 2010 02:08:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-348257-6</guid>
        <source url="https://forum.moparisthebest.com/t/java-nio/348257.rss">Java.nio</source>
      </item>
      <item>
        <title>Java.nio</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>The whole point of using a selector in Java is to avoid using blocking sockets and thus avoiding horrible networking designs (such as the popular thread per client design) and instead, block the invoking thread until a socket in the queue is ready to read/write data or accept a connection, or until the optional set interval for ‘select()’ returns.</p>
<p>The NIO API is the only standard Java library that allows you to toggle the blocking mode of a socket as opposed to enforcing blocking sockets - as is done in the standard I/O API.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-nio/348257/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-nio/348257/5</link>
        <pubDate>Sun, 11 Jul 2010 01:31:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-348257-5</guid>
        <source url="https://forum.moparisthebest.com/t/java-nio/348257.rss">Java.nio</source>
      </item>
      <item>
        <title>Java.nio</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>selector demultiplexes i/o events and allows you to handle them in a more straight-forward centralized manner. nio also supports nonblocking i/o. as well as that, it brings the buffer api which is powerful and now in jdk 7 comes with an asynchronous socket api (think completion ports and proactor pattern) and a much-needed new file api.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-nio/348257/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-nio/348257/4</link>
        <pubDate>Sat, 10 Jul 2010 18:01:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-348257-4</guid>
        <source url="https://forum.moparisthebest.com/t/java-nio/348257.rss">Java.nio</source>
      </item>
      <item>
        <title>Java.nio</title>
        <dc:creator><![CDATA[@Protosstribe object]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/protosstribe">@Protosstribe</a> wrote:</p>
          <blockquote>
              <p>The NIO API works closer to the OS than the IO API. And using Buffers are usually faster than using Streams, because Buffers read one chunk of data and stores it internally - hence the name. This can be done by calling the java.nio.ByteBuffer.allocate(int) (or one of the other equivalent subclasses to java.nio.Buffer). The Streams, on the other hand, reads data once requested - and usually blocks until some data can be read.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-nio/348257/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-nio/348257/3</link>
        <pubDate>Sat, 10 Jul 2010 14:28:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-348257-3</guid>
        <source url="https://forum.moparisthebest.com/t/java-nio/348257.rss">Java.nio</source>
      </item>
      <item>
        <title>Java.nio</title>
        <dc:creator><![CDATA[@xEnt xEnt]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xent">@xEnt</a> wrote:</p>
          <blockquote>
              <p>nio supports asynchronous sockets, yours does not, IIRC</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-nio/348257/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-nio/348257/2</link>
        <pubDate>Sat, 10 Jul 2010 10:11:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-348257-2</guid>
        <source url="https://forum.moparisthebest.com/t/java-nio/348257.rss">Java.nio</source>
      </item>
      <item>
        <title>Java.nio</title>
        <dc:creator><![CDATA[@eczema3 eczema3]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/eczema3">@eczema3</a> wrote:</p>
          <blockquote>
              <p>What’s the point in using this set of classes? I can’t see anything useful about it apart from requiring more code to work…</p>
<p>[code]		Selector selector = Selector.open();</p>
<pre><code>	ServerSocketChannel channel = ServerSocketChannel.open();
	channel.configureBlocking(false);
	
	InetSocketAddress isa = new InetSocketAddress(3333);
	channel.socket().bind(isa);
	
	channel.register(selector, SelectionKey.OP_ACCEPT);
	
	while(selector.select() &gt; 0) {
		
		Set&lt;SelectionKey&gt; readyKeys = selector.selectedKeys();
		Iterator&lt;SelectionKey&gt; readyItor = readyKeys.iterator();
		
		while(readyItor.hasNext()) {
			SelectionKey sk = (SelectionKey)readyItor.next();
			readyItor.remove();
			if(sk.isAcceptable()) {
				ServerSocketChannel keyChan = (ServerSocketChannel)sk.channel();
				ServerSocket serverSock = keyChan.socket();
				Socket s = serverSock.accept();
			}
		}
	}[/code]
</code></pre>
<p>As opposed to…</p>
<p><code>ServerSocket sock = new ServerSocket(3333);
while(true) {
	Socket s = sock.accept();
}</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-nio/348257/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-nio/348257/1</link>
        <pubDate>Sat, 10 Jul 2010 09:45:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-348257-1</guid>
        <source url="https://forum.moparisthebest.com/t/java-nio/348257.rss">Java.nio</source>
      </item>
  </channel>
</rss>
