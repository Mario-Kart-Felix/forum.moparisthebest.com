<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>New idea for cache size decreasing</title>
    <link>https://forum.moparisthebest.com/t/new-idea-for-cache-size-decreasing/350356</link>
    <description>Okay I looked into this today I take no credits (why would i) except for the idea.
Don&#39;t think it&#39;s been done before  ;) I am going to use this in my next client and when I do I will release it open source incase nobody knows how to edit and implement this code.
 My idea is:
&lt;blockquote&gt;If the custom sprites which cannot be packed directly inside the cache, were packed inside a .zip file, it would greatly decrease the size of the cache, and downloading would take less time.&lt;/blockquote&gt;
[code]import java.io.*;
import java.util.zip.*;

class  readZipFiles 
{
    public static void main(String[] args) 
    {
         if (args.length != 1) 
        {
            System.out.println(&quot;Usage: java testFiles [zipfile path] &quot;);
            return;
        }
        try
        {
            String filename = args[0];
            readZipFiles list = new readZipFiles( );
            list.readZipFiles(filename);
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
    }

    public void readZipFiles(String filename)
    {
        try
        {
            byte[] buf = new byte[1024];
            ZipInputStream zipinputstream = null;
            ZipEntry zipentry;
            zipinputstream = new ZipInputStream(
                 new FileInputStream(filename));

            zipentry = zipinputstream.getNextEntry();
            while (zipentry != null) 
            { 
                //for each entry to be extracted
                String entryName = zipentry.getName();
                System.out.println(&quot;File ::&quot;+entryName);
                RandomAccessFile  rf;
                File newFile = new File(entryName);
                String directory = newFile.getParent();

                if(directory == null)
                {
                    if(newFile.isDirectory())
                        break;
                }

                rf = new RandomAccessFile(entryName,&quot;r&quot;);               
                String line;

                if ((line =rf.readLine()) !=null)
                {
                    System.out.println(line);
                }

                rf.close(); 
                zipinputstream.closeEntry();
                zipentry = zipinputstream.getNextEntry();

            }//while

            zipinputstream.close();
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
    }
}[/code]</description>
    
    <lastBuildDate>Wed, 21 Jul 2010 19:09:51 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/new-idea-for-cache-size-decreasing/350356.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>New idea for cache size decreasing</title>
        <dc:creator><![CDATA[@spy_man47 spy man47]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/spy_man47">@spy_man47</a> wrote:</p>
          <blockquote>
              <p>Does this worK?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-idea-for-cache-size-decreasing/350356/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-idea-for-cache-size-decreasing/350356/2</link>
        <pubDate>Wed, 21 Jul 2010 19:09:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-350356-2</guid>
        <source url="https://forum.moparisthebest.com/t/new-idea-for-cache-size-decreasing/350356.rss">New idea for cache size decreasing</source>
      </item>
      <item>
        <title>New idea for cache size decreasing</title>
        <dc:creator><![CDATA[@tobias222 tobias222]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tobias222">@tobias222</a> wrote:</p>
          <blockquote>
              <p>Okay I looked into this today I take no credits (why would i) except for the idea.<br>
Don’t think it’s been done before  <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"> I am going to use this in my next client and when I do I will release it open source incase nobody knows how to edit and implement this code.<br>
My idea is:</p>
<blockquote>If the custom sprites which cannot be packed directly inside the cache, were packed inside a .zip file, it would greatly decrease the size of the cache, and downloading would take less time.</blockquote>
[code]import java.io.*;
import java.util.zip.*;
<p>class  readZipFiles<br>
{<br>
public static void main(String[] args)<br>
{<br>
if (args.length != 1)<br>
{<br>
System.out.println("Usage: java testFiles [zipfile path] ");<br>
return;<br>
}<br>
try<br>
{<br>
String filename = args[0];<br>
readZipFiles list = new readZipFiles( );<br>
list.readZipFiles(filename);<br>
}<br>
catch (Exception e)<br>
{<br>
e.printStackTrace();<br>
}<br>
}</p>
<pre><code>public void readZipFiles(String filename)
{
    try
    {
        byte[] buf = new byte[1024];
        ZipInputStream zipinputstream = null;
        ZipEntry zipentry;
        zipinputstream = new ZipInputStream(
             new FileInputStream(filename));

        zipentry = zipinputstream.getNextEntry();
        while (zipentry != null) 
        { 
            //for each entry to be extracted
            String entryName = zipentry.getName();
            System.out.println("File ::"+entryName);
            RandomAccessFile  rf;
            File newFile = new File(entryName);
            String directory = newFile.getParent();

            if(directory == null)
            {
                if(newFile.isDirectory())
                    break;
            }

            rf = new RandomAccessFile(entryName,"r");               
            String line;

            if ((line =rf.readLine()) !=null)
            {
                System.out.println(line);
            }

            rf.close(); 
            zipinputstream.closeEntry();
            zipentry = zipinputstream.getNextEntry();

        }//while

        zipinputstream.close();
    }
    catch (Exception e)
    {
        e.printStackTrace();
    }
}
</code></pre>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/new-idea-for-cache-size-decreasing/350356/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/new-idea-for-cache-size-decreasing/350356/1</link>
        <pubDate>Wed, 21 Jul 2010 15:46:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-350356-1</guid>
        <source url="https://forum.moparisthebest.com/t/new-idea-for-cache-size-decreasing/350356.rss">New idea for cache size decreasing</source>
      </item>
  </channel>
</rss>
