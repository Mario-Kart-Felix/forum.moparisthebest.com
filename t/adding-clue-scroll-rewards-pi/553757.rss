<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Adding Clue Scroll Rewards [PI]</title>
    <link>https://forum.moparisthebest.com/t/adding-clue-scroll-rewards-pi/553757</link>
    <description>Hey guys I was recently writing this up for Project-Rogue and decided to release it.

I&#39;m sure there are a lot better ways of doing this for the future.

Difficulty: 1/10

Base: Cleaned PI

Step one:
Open model.player, playerAssistant, or playerOther, or whatever you may have and declare these:

[code]public int[][] treasureTrailEasy = {
	//int 1 = itemID, int 2 = amount
			{2591,1}, // BLACK (G)
			{1565,1}, // BLACK (G)
			{2593,1}, // BLACK (G)
			{2595,1}, // BLACK (G)
			{12335,1}, // RUNE (T)
			{2597,1}, // BLACK (G)
			{2583,1}, // BLACK (T)
			{2585,1}, // BLACK (T)
			{2587,1}, // BLACK (T)
			{2589,1}, // BLACK (T)
			{2633,1}, // BERET (BLUE)
			{2635,1}, // BERET (BLACK)
			{2637,1}, // BERET (WHITE)
			{2631,1}, // HIGHWAYMAN MASK
			{7386,1}, // WIZARD (G)
			{7390,1}, // WIZARD (G)
			{7394,1}, // WIZARD (G)
			{7388,1}, // WIZARD (T)
			{7392,1}, // WIZARD (T)
			{7396,1}, // WIZARD (T)
			{7364,1}, // STUDDED (T)
			{7368,1}, // STUDDED (T)
			{7362,1}, // STUDDED (G)
			{7366,1}, // STUDDED (G)
			{7366,1}, // STUDDED (G)
			{10406,1}, // ELE LEGS
			{10410,1}, // ELE LEGS
			{10414,1}, // ELE LEGS
			{10752,1}, // ELE BODY
			{10754,1}, // ELE BODY
			{10750,1}, // ELE BODY
			{10394,1}, // FLARED TROUSERS
			{10392,1}, // POWDERED WIG
			{10398,1}, // SLEEPING CAP
			{10396,1}, // PANTALOONS
			{10316,1}, // BOB SHIRT
			{10318,1}, // BOB SHIRT
			{10320,1}, // BOB SHIRT
			{10322,1}, // BOB SHIRT
			{10324,1}, // BOB SHIRT
			{10366,1}, // AMULET (T)
			{10440,1}, // SARA ROBES
			{10446,1}, // SARA ROBES
			{10452,1}, // SARA ROBES
			{10458,1}, // SARA ROBES
			{10464,1}, // SARA ROBES
			{10470,1}, // SARA ROBES
			{10444,1}, // ZAM ROBES
			{10450,1}, // ZAM ROBES
			{12598,1}, // ZAM ROBES
			{10456,1}, // ZAM ROBES
			{10460,1}, // ZAM ROBES
			{10468,1}, // ZAM ROBES
			{10474,1}, // ZAM ROBES
			{10442,1}, // GUTH ROBES
			{10448,1}, // GUTH ROBES
			{10454,1}, // GUTH ROBES
			{10462,1}, // GUTH ROBES
			{10466,1}, // GUTH ROBES
			{10472,1}, // GUTH ROBES
			{12514,1} // GUTH ROBE
			};
	public int[][] treasureTrailMedium = {
			{2599,1}, // ADAM (T)
			{2601,1}, // ADAM (T)
			{2607,1}, // ADAM (T)
			{2609,1}, // ADAM (T)
			{2615,1}, // RUNE (G)
			{2617,1}, // RUNE (G)
			{2619,1}, // RUNE (G)
			{2621,1}, // RUNE (G)
			{7582,1}, // RUNE (G)
			{2577,1}, // RANGER BOOTS
			{2579,1}, // WIZARD BOOTS
			{7319,1}, // BOATER
			{7321,1}, // BOATER
			{7323,1}, // BOATER
			{7325,1}, // BOATER
			{7327,1}, // BOATER
			{7380,1}, // CHAPS (T)
			{7372,1}, // BODY (T)
			{7370,1}, // CHAPS (G)
			{7378,1}, // BODY (G)
			{10748,1}, // ELE
			{10402,1}, // ELE
			{10416,1}, // ELE
			{12337,1}, // RUNE (T)
			{12355,1}, // RUNE (T)
			{10418,1}, // ELE
			{10364,1} // AMULET (T)
			};
	public int[][] treasureTrailHard = {
			{2623,1}, // RUNE (T)
			{2625,1}, // RUNE (T)
			{2627,1}, // RUNE (T)
			{2629,1}, // RUNE (T)
			{12357,1}, // RUNE (T)
			{12437,1}, // RUNE (T)
			{12422,1}, // RUNE (T)
			{12424,1}, // RUNE (T)
			{12426,1}, // RUNE (T)
			{2615,1}, // RUNE (G)
			{2617,1}, // RUNE (G)
			{2619,1}, // RUNE (G)
			{2621,1}, // RUNE (G)
			{2653,1}, // RUNE (Z)
			{2655,1}, // RUNE (Z)
			{2657,1}, // RUNE (Z)
			{2659,1}, // RUNE (Z)
			{2661,1}, // RUNE (S)
			{2663,1}, // RUNE (S)
			{2665,1}, // RUNE (S)
			{2667,1}, // RUNE (S)
			{2669,1}, // RUNE (G)
			{7582,1}, // BLACK (G)
			{2671,1}, // RUNE (G)
			{2673,1}, // RUNE (G)
			{2675,1}, // RUNE (G)
			{3481,1}, // RUNE (GOLD)
			{3483,1}, // RUNE (GOLD)
			{3486,1}, // RUNE (GOLD)
			{3488,1}, // RUNE (GOLD)
			{7376,1}, // DHIDE (T)
			{7384,1}, // DHIDE (T)
			{7374,1}, // DHIDE (G)
			{7382,1}, // DHIDE (G)
			{2581,1}, // ROBIN
			{2639,1}, // CAV (TAN)
			{2641,1}, // CAV (DARK)
			{2643,1}, // CAV (BLACK)
			{2651,1}, // PIRATE
			{10346,1}, // 3RD AGE MELEE
			{10348,1}, // 3RD AGE MELEE
			{10350,1}, // 3RD AGE MELEE
			{10352,1}, // 3RD AGE MELEE
			{10330,1}, // 3RD AGE RANGE TOP
			{10332,1}, // 3RD AGE RANGE LEGS
			{10334,1}, // 3RD AGE RANGE COIF
			{10336,1}, // 3RD AGE VAMBRACES
			{10338,1}, // 3RD AGE ROBE TOP
			{10340,1}, // 3RD AGE ROBE BOTTOMS
			{10342,1}, // 3RD AGE MAGE HAT
			{10344,1}, // 3RD AGE AMULET
			{10346,1}, // 3RD AGE PLATELEGS
			{10348,1}, // 3RD AGE PLATEBODY
			{10350,1}, // 3RD AGE FULL HELMET
			{10352,1}, // 3RD AGE KITESHIELD
			{10354,1}, // AMULET OF GLORY(T4)
			{10376,1}, // GUTHIX BRACERS
			{10378,1}, // GUTHIX DRAGONHIDE
			{10380,1}, // GUTHIX CHAPS
			{10382,1}, // GUTHIX COIF
			{10384,1}, // SARADOMIN BRACERS
			{10386,1}, // SARADOMIN DRAGONHIDE
			{10388,1}, // SARADOMIN CHAPS
			{10390,1} // SARADOMIN COIF
			};
public int[][] treasureTrailAll = {
			{995, 1+Utilities.random(2000)}, // Coins 1-2001
			{995, 1+Utilities.random(2000)}, // Coins 1-2001
			{995, 1+Utilities.random(2000)}, // Coins 1-2001
			{995, 1+Utilities.random(2000)}, // Coins 1-2001
			{995, 1+Utilities.random(2000)}, // Coins 1-2001
			{995, 1+Utilities.random(2000)}, // Coins 1-2001
			{995, 1+Utilities.random(2000)}, // Coins 1-2001
			{995, 1+Utilities.random(2000)}, // Coins 1-2001
			{995, 1+Utilities.random(4000)}, // Coins 1-4001
			{995, 1+Utilities.random(4000)}, // Coins 1-4001
			{995, 1+Utilities.random(4000)}, // Coins 1-4001
			{995, 1+Utilities.random(4000)}, // Coins 1-4001
			{995, 1+Utilities.random(4000)}, // Coins 1-4001
			{995, 1+Utilities.random(6000)}, // Coins 1-6001
			{995, 1+Utilities.random(6000)}, // Coins 1-6001
			{995, 1+Utilities.random(6000)}, // Coins 1-6001
			{995, 1+Utilities.random(6000)}, // Coins 1-6001
			{995, 1+Utilities.random(6000)}, // Coins 1-6001
			{4561, 1+Utilities.random(50)}, // Sweets 1-51
			{4561, 1+Utilities.random(25)}, // Sweets 1-26
			{4561, 1+Utilities.random(10)}, // Sweets 1-11
			{7329, 1+Utilities.random(15)}, // Firelighter
			{7330, 1+Utilities.random(15)}, // Firelighter
			{7331, 1+Utilities.random(15)}, // Firelighter
			{10326, 1+Utilities.random(15)}, // Firelighter
			{10327, 1+Utilities.random(15)}, // Firelighter
			{1694, 1}, // Sapphire Amulet
			{1696, 1}, // Emerald Amulet
			{1698, 1}, // Ruby Amulet
			{1700, 1}, // Diamond Amulet
			{1694, 1}, // Sapphire Amulet
			{1696, 1}, // Emerald Amulet
			{1698, 1}, // Ruby Amulet
			{1700, 1}, // Diamond Amulet
			{1694, 1}, // Sapphire Amulet
			{1696, 1}, // Emerald Amulet
			{1698, 1}, // Ruby Amulet
			{1700, 1}, // Diamond Amulet
			{1694, 1}, // Sapphire Amulet
			{1696, 1}, // Emerald Amulet
			{1698, 1}, // Ruby Amulet
			{1700, 1}, // Diamond Amulet
			{1401, 1}, // Mystic Fire Staff
			{1403, 1}, // Mystic Water Staff
			{1405, 1}, // Mystic Air Staff
			{1407, 1}, // Mystic Earth Staff
			{1401, 1}, // Mystic Fire Staff
			{1403, 1}, // Mystic Water Staff
			{1405, 1}, // Mystic Air Staff
			{1407, 1}, // Mystic Earth Staff
			{1401, 1}, // Mystic Fire Staff
			{1403, 1}, // Mystic Water Staff
			{1405, 1}, // Mystic Air Staff
			{1407, 1}, // Mystic Earth Staff
			{1401, 1}, // Mystic Fire Staff
			{1403, 1}, // Mystic Water Staff
			{1405, 1}, // Mystic Air Staff
			{1407, 1}, // Mystic Earth Staff
			{3827, 1}, // Torn Page
			{3828, 1}, // Torn Page
			{3829, 1}, // Torn Page
			{3830, 1}, // Torn Page
			{3831, 1}, // Torn Page
			{3832, 1}, // Torn Page
			{3833, 1}, // Torn Page
			{3834, 1}, // Torn Page
			{3835, 1}, // Torn Page
			{3836, 1}, // Torn Page
			{3837, 1}, // Torn Page
			{3838, 1}, // Torn Page
			{554, 1+Utilities.random(20)}, // Runes
			{555, 1+Utilities.random(20)}, // Runes
			{556, 1+Utilities.random(20)}, // Runes
			{557, 1+Utilities.random(20)}, // Runes
			{558, 1+Utilities.random(20)}, // Runes
			{559, 1+Utilities.random(20)}, // Runes
			{560, 1+Utilities.random(20)}, // Runes
			{561, 1+Utilities.random(20)}, // Runes
			{562, 1+Utilities.random(20)}, // Runes
			{563, 1+Utilities.random(20)}, // Runes
			{564, 1+Utilities.random(20)}, // Runes
			{565, 1+Utilities.random(20)}, // Runes
			{554, 1+Utilities.random(30)}, // Runes
			{555, 1+Utilities.random(30)}, // Runes
			{556, 1+Utilities.random(30)}, // Runes
			{557, 1+Utilities.random(30)}, // Runes
			{558, 1+Utilities.random(30)}, // Runes
			{559, 1+Utilities.random(30)}, // Runes
			{560, 1+Utilities.random(30)}, // Runes
			{561, 1+Utilities.random(30)}, // Runes
			{562, 1+Utilities.random(30)}, // Runes
			{563, 1+Utilities.random(30)}, // Runes
			{564, 1+Utilities.random(30)}, // Runes
			{565, 1+Utilities.random(30)}, // Runes
			};
[/code]

Still while you are in your playerAssistant or playerOther add this to it:

[code]
public int reward1 = -1;
	public int reward2 = -1;
	public int reward3 = -1;
	public int reward4 = -1;
	public int reward5 = -1;
	public int reward6 = -1;
	public int reward1a = 0;
	public int reward2a = 0;
	public int reward3a = 0;
	public int reward4a = 0;
	public int reward5a = 0;
	public int reward6a = 0;
	public void clueReward(int i) {
		if (i == 0) {
			int random = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random2 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random3 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random1 = (int) (Math.random() * (treasureTrailEasy.length - 1));
			if (Utilities.random(5) == 0) {
			reward1 = treasureTrailEasy[random1][0];
			reward1a = treasureTrailEasy[random1][1];
			} else {
			reward1 = treasureTrailAll[random][0];
			reward1a = treasureTrailAll[random][1];
			}
			if (Utilities.random(7) &gt;= 5) {
			reward2 = treasureTrailAll[random2][0];
			reward2a = treasureTrailAll[random2][1];
			} else if (Utilities.random(5) == 1) {
			reward2 = treasureTrailEasy[random1][0];
			reward2a = treasureTrailEasy[random1][1];	
			}
			if (Utilities.random(10) &gt;= 7) {
			reward3 = treasureTrailAll[random3][0];
			reward3a = treasureTrailAll[random3][1];
			} else if (Utilities.random(7) == 1) {
			reward3 = treasureTrailEasy[random1][0];
			reward3a = treasureTrailEasy[random1][1];	
			}
			}
		if (i == 1) {
			int random = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random2 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random3 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random4 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random5 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random1 = (int) (Math.random() * (treasureTrailMedium.length - 1));
			if (Utilities.random(5) == 0) {
			reward1 = treasureTrailMedium[random1][0];
			reward1a = treasureTrailMedium[random1][1];
			} else {
			reward1 = treasureTrailAll[random][0];
			reward1a = treasureTrailAll[random][1];
			}
			if (Utilities.random(5) &gt;= 3) {
			reward2 = treasureTrailAll[random2][0];
			reward2a = treasureTrailAll[random2][1];
			} else if (Utilities.random(5) == 1) {
			reward2 = treasureTrailMedium[random1][0];
			reward2a = treasureTrailMedium[random1][1];	
			}
			if (Utilities.random(7) &gt;= 5) {
			reward3 = treasureTrailAll[random3][0];
			reward3a = treasureTrailAll[random3][1];
			} else if (Utilities.random(7) == 1) {
			reward3 = treasureTrailMedium[random1][0];
			reward3a = treasureTrailMedium[random1][1];	
			}
			if (Utilities.random(10) &gt;= 7) {
			reward4 = treasureTrailAll[random4][0];
			reward4a = treasureTrailAll[random4][1];
			} else if (Utilities.random(10) == 1) {
			reward4 = treasureTrailMedium[random1][0];
			reward4a = treasureTrailMedium[random1][1];	
			}
			if (Utilities.random(15) &gt;= 12) {
			reward5 = treasureTrailAll[random5][0];
			reward5a = treasureTrailAll[random5][1];
			} else if (Utilities.random(15) == 1) {
			reward5 = treasureTrailMedium[random1][0];
			reward5a = treasureTrailMedium[random1][1];	
			}
			}
		if (i == 2) {
			int random = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random2 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random3 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random4 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random5 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random6 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random1 = (int) (Math.random() * (treasureTrailHard.length - 1));
			if (Utilities.random(5) == 0) {
			reward1 = treasureTrailHard[random1][0];
			reward1a = treasureTrailHard[random1][1];
			} else {
			reward1 = treasureTrailAll[random][0];
			reward1a = treasureTrailAll[random][1];
			}
			if (Utilities.random(5) &gt;= 3) {
			reward2 = treasureTrailAll[random2][0];
			reward2a = treasureTrailAll[random2][1];
			} else if (Utilities.random(5) == 1) {
			reward2 = treasureTrailHard[random1][0];
			reward2a = treasureTrailHard[random1][1];	
			}
			if (Utilities.random(7) &gt;= 5) {
			reward3 = treasureTrailAll[random3][0];
			reward3a = treasureTrailAll[random3][1];
			} else if (Utilities.random(7) == 1) {
			reward3 = treasureTrailHard[random1][0];
			reward3a = treasureTrailHard[random1][1];	
			}
			if (Utilities.random(10) &gt;= 7) {
			reward4 = treasureTrailAll[random4][0];
			reward4a = treasureTrailAll[random4][1];
			} else if (Utilities.random(10) == 1) {
			reward4 = treasureTrailHard[random1][0];
			reward4a = treasureTrailHard[random1][1];	
			}
			if (Utilities.random(15) &gt;= 12) {
			reward5 = treasureTrailAll[random5][0];
			reward5a = treasureTrailAll[random5][1];
			} else if (Utilities.random(15) == 1) {
			reward5 = treasureTrailHard[random1][0];
			reward5a = treasureTrailHard[random1][1];	
			}
			if (Utilities.random(25) &gt;= 20) {
			reward6 = treasureTrailAll[random6][0];
			reward6a = treasureTrailAll[random6][1];
			} else if (Utilities.random(25) == 1) {
			reward6 = treasureTrailHard[random1][0];
			reward6a = treasureTrailHard[random1][1];	
			}
			}
			sendFrame34a(6963, reward1, 0, reward1a);
			sendFrame34a(6963, reward2, 1, reward2a);
			sendFrame34a(6963, reward3, 2, reward3a);
			sendFrame34a(6963, reward4, 3, reward4a);
			sendFrame34a(6963, reward5, 4, reward5a);
			sendFrame34a(6963, reward6, 5, reward6a);
			c.getPA().showInterface(6960);
			c.getItems().addItem(reward1, reward1a);
			c.getItems().addItem(reward2, reward2a);
			c.getItems().addItem(reward3, reward3a);
			c.getItems().addItem(reward4, reward4a);
			c.getItems().addItem(reward5, reward5a);
			c.getItems().addItem(reward6, reward6a);
			reward1 = -1;
			reward2 = -1;
			reward3 = -1;
			reward4 = -1;
			reward5 = -1;
			reward6 = -1;
			reward1a = 0;
			reward2a = 0;
			reward3a = 0;
			reward4a = 0;
			reward5a = 0;
			reward6a = 0;
		}[/code]

This is basically the code you will call to handle the rewards. When called it will roll on the chance of hitting the respective level&#39;s table and also to try to get more than 1 loot.

Navigate to your clickItem class and add this in:

[code]
if (itemId == 2826) {
			c.getItems().deleteItem(2826, c.getItems().getItemSlot(2826), 1);
			c.getPA().clueReward(1);
		}
		if (itemId == 3511) {
			c.getItems().deleteItem(3511, c.getItems().getItemSlot(3511), 1);
			c.getPA().clueReward(2);
		}
		if (itemId == 3603) {
			c.getItems().deleteItem(3603, c.getItems().getItemSlot(3603), 1);
			c.getPA().clueReward(3);
		}
[/code]

Done, now when and if you get any errors most can be fixed doing the following:

Changing Utilities.random(xx) to Misc.random(xx) and other code conversions since mine differs from original PI.

I will also be releasing the steps part of the Clue scrolls shortly.</description>
    
    <lastBuildDate>Sat, 26 Dec 2015 12:33:46 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/adding-clue-scroll-rewards-pi/553757.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Adding Clue Scroll Rewards [PI]</title>
        <dc:creator><![CDATA[@lukwes1 lukwes1]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lukwes1">@lukwes1</a> wrote:</p>
          <blockquote>
              <p>You should probably use a more OOP based solution, that code is pretty ugly</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/adding-clue-scroll-rewards-pi/553757/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/adding-clue-scroll-rewards-pi/553757/5</link>
        <pubDate>Sat, 26 Dec 2015 12:33:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-553757-5</guid>
        <source url="https://forum.moparisthebest.com/t/adding-clue-scroll-rewards-pi/553757.rss">Adding Clue Scroll Rewards [PI]</source>
      </item>
      <item>
        <title>Adding Clue Scroll Rewards [PI]</title>
        <dc:creator><![CDATA[@Tree Tree]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tree">@Tree</a> wrote:</p>
          <blockquote>
              <pre><code class="lang-auto">	if (i == 0) {
			int random = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random2 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random3 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random1 = (int) (Math.random() * (treasureTrailEasy.length - 1));
			if (Utilities.random(5) == 0) {
			reward1 = treasureTrailEasy[random1][0];
			reward1a = treasureTrailEasy[random1][1];
			} else {
			reward1 = treasureTrailAll[random][0];
			reward1a = treasureTrailAll[random][1];
			}
			if (Utilities.random(7) &gt;= 5) {
			reward2 = treasureTrailAll[random2][0];
			reward2a = treasureTrailAll[random2][1];
			} else if (Utilities.random(5) == 1) {
			reward2 = treasureTrailEasy[random1][0];
			reward2a = treasureTrailEasy[random1][1];	
			}
			if (Utilities.random(10) &gt;= 7) {
			reward3 = treasureTrailAll[random3][0];
			reward3a = treasureTrailAll[random3][1];
			} else if (Utilities.random(7) == 1) {
			reward3 = treasureTrailEasy[random1][0];
			reward3a = treasureTrailEasy[random1][1];	
			}
			}
		if (i == 1) {
			int random = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random2 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random3 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random4 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random5 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random1 = (int) (Math.random() * (treasureTrailMedium.length - 1));
			if (Utilities.random(5) == 0) {
			reward1 = treasureTrailMedium[random1][0];
			reward1a = treasureTrailMedium[random1][1];
			} else {
			reward1 = treasureTrailAll[random][0];
			reward1a = treasureTrailAll[random][1];
			}
			if (Utilities.random(5) &gt;= 3) {
			reward2 = treasureTrailAll[random2][0];
			reward2a = treasureTrailAll[random2][1];
			} else if (Utilities.random(5) == 1) {
			reward2 = treasureTrailMedium[random1][0];
			reward2a = treasureTrailMedium[random1][1];	
			}
			if (Utilities.random(7) &gt;= 5) {
			reward3 = treasureTrailAll[random3][0];
			reward3a = treasureTrailAll[random3][1];
			} else if (Utilities.random(7) == 1) {
			reward3 = treasureTrailMedium[random1][0];
			reward3a = treasureTrailMedium[random1][1];	
			}
			if (Utilities.random(10) &gt;= 7) {
			reward4 = treasureTrailAll[random4][0];
			reward4a = treasureTrailAll[random4][1];
			} else if (Utilities.random(10) == 1) {
			reward4 = treasureTrailMedium[random1][0];
			reward4a = treasureTrailMedium[random1][1];	
			}
			if (Utilities.random(15) &gt;= 12) {
			reward5 = treasureTrailAll[random5][0];
			reward5a = treasureTrailAll[random5][1];
			} else if (Utilities.random(15) == 1) {
			reward5 = treasureTrailMedium[random1][0];
			reward5a = treasureTrailMedium[random1][1];	
			}
			}
		if (i == 2) {
			int random = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random2 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random3 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random4 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random5 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random6 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random1 = (int) (Math.random() * (treasureTrailHard.length - 1));
			if (Utilities.random(5) == 0) {
			reward1 = treasureTrailHard[random1][0];
			reward1a = treasureTrailHard[random1][1];
			} else {
			reward1 = treasureTrailAll[random][0];
			reward1a = treasureTrailAll[random][1];
			}
			if (Utilities.random(5) &gt;= 3) {
			reward2 = treasureTrailAll[random2][0];
			reward2a = treasureTrailAll[random2][1];
			} else if (Utilities.random(5) == 1) {
			reward2 = treasureTrailHard[random1][0];
			reward2a = treasureTrailHard[random1][1];	
			}
			if (Utilities.random(7) &gt;= 5) {
			reward3 = treasureTrailAll[random3][0];
			reward3a = treasureTrailAll[random3][1];
			} else if (Utilities.random(7) == 1) {
			reward3 = treasureTrailHard[random1][0];
			reward3a = treasureTrailHard[random1][1];	
			}
			if (Utilities.random(10) &gt;= 7) {
			reward4 = treasureTrailAll[random4][0];
			reward4a = treasureTrailAll[random4][1];
			} else if (Utilities.random(10) == 1) {
			reward4 = treasureTrailHard[random1][0];
			reward4a = treasureTrailHard[random1][1];	
			}
			if (Utilities.random(15) &gt;= 12) {
			reward5 = treasureTrailAll[random5][0];
			reward5a = treasureTrailAll[random5][1];
			} else if (Utilities.random(15) == 1) {
			reward5 = treasureTrailHard[random1][0];
			reward5a = treasureTrailHard[random1][1];	
			}
			if (Utilities.random(25) &gt;= 20) {
			reward6 = treasureTrailAll[random6][0];
			reward6a = treasureTrailAll[random6][1];
			} else if (Utilities.random(25) == 1) {
			reward6 = treasureTrailHard[random1][0];
			reward6a = treasureTrailHard[random1][1];	
			}
			}
			sendFrame34a(6963, reward1, 0, reward1a);
			sendFrame34a(6963, reward2, 1, reward2a);
			sendFrame34a(6963, reward3, 2, reward3a);
			sendFrame34a(6963, reward4, 3, reward4a);
			sendFrame34a(6963, reward5, 4, reward5a);
			sendFrame34a(6963, reward6, 5, reward6a);
			c.getPA().showInterface(6960);
			c.getItems().addItem(reward1, reward1a);
			c.getItems().addItem(reward2, reward2a);
			c.getItems().addItem(reward3, reward3a);
			c.getItems().addItem(reward4, reward4a);
			c.getItems().addItem(reward5, reward5a);
			c.getItems().addItem(reward6, reward6a);
			reward1 = -1;</code></pre>
<p>What even.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/adding-clue-scroll-rewards-pi/553757/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/adding-clue-scroll-rewards-pi/553757/4</link>
        <pubDate>Wed, 16 Dec 2015 11:39:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-553757-4</guid>
        <source url="https://forum.moparisthebest.com/t/adding-clue-scroll-rewards-pi/553757.rss">Adding Clue Scroll Rewards [PI]</source>
      </item>
      <item>
        <title>Adding Clue Scroll Rewards [PI]</title>
        <dc:creator><![CDATA[@Pest Pest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pest">@Pest</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="553757">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/asshole_rule/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> asshole_rule:</div>
<blockquote>
<p>wow thats some ugly code</p>
</blockquote>
</aside>
<p>Thanks lol<br>
I didn’t want to say it</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/adding-clue-scroll-rewards-pi/553757/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/adding-clue-scroll-rewards-pi/553757/3</link>
        <pubDate>Thu, 10 Dec 2015 05:23:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-553757-3</guid>
        <source url="https://forum.moparisthebest.com/t/adding-clue-scroll-rewards-pi/553757.rss">Adding Clue Scroll Rewards [PI]</source>
      </item>
      <item>
        <title>Adding Clue Scroll Rewards [PI]</title>
        <dc:creator><![CDATA[@asshole_rule asshole_rule]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/asshole_rule">@asshole_rule</a> wrote:</p>
          <blockquote>
              <p>wow thats some ugly code</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/adding-clue-scroll-rewards-pi/553757/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/adding-clue-scroll-rewards-pi/553757/2</link>
        <pubDate>Fri, 06 Nov 2015 12:41:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-553757-2</guid>
        <source url="https://forum.moparisthebest.com/t/adding-clue-scroll-rewards-pi/553757.rss">Adding Clue Scroll Rewards [PI]</source>
      </item>
      <item>
        <title>Adding Clue Scroll Rewards [PI]</title>
        <dc:creator><![CDATA[@Rogue_Project Rogue Project]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rogue_project">@Rogue_Project</a> wrote:</p>
          <blockquote>
              <p>Hey guys I was recently writing this up for Project-Rogue and decided to release it.</p>
<p>I’m sure there are a lot better ways of doing this for the future.</p>
<p>Difficulty: 1/10</p>
<p>Base: Cleaned PI</p>
<p>Step one:<br>
Open model.player, playerAssistant, or playerOther, or whatever you may have and declare these:</p>
<p><code>public int[][] treasureTrailEasy = {
	//int 1 = itemID, int 2 = amount
			{2591,1}, // BLACK (G)
			{1565,1}, // BLACK (G)
			{2593,1}, // BLACK (G)
			{2595,1}, // BLACK (G)
			{12335,1}, // RUNE (T)
			{2597,1}, // BLACK (G)
			{2583,1}, // BLACK (T)
			{2585,1}, // BLACK (T)
			{2587,1}, // BLACK (T)
			{2589,1}, // BLACK (T)
			{2633,1}, // BERET (BLUE)
			{2635,1}, // BERET (BLACK)
			{2637,1}, // BERET (WHITE)
			{2631,1}, // HIGHWAYMAN MASK
			{7386,1}, // WIZARD (G)
			{7390,1}, // WIZARD (G)
			{7394,1}, // WIZARD (G)
			{7388,1}, // WIZARD (T)
			{7392,1}, // WIZARD (T)
			{7396,1}, // WIZARD (T)
			{7364,1}, // STUDDED (T)
			{7368,1}, // STUDDED (T)
			{7362,1}, // STUDDED (G)
			{7366,1}, // STUDDED (G)
			{7366,1}, // STUDDED (G)
			{10406,1}, // ELE LEGS
			{10410,1}, // ELE LEGS
			{10414,1}, // ELE LEGS
			{10752,1}, // ELE BODY
			{10754,1}, // ELE BODY
			{10750,1}, // ELE BODY
			{10394,1}, // FLARED TROUSERS
			{10392,1}, // POWDERED WIG
			{10398,1}, // SLEEPING CAP
			{10396,1}, // PANTALOONS
			{10316,1}, // BOB SHIRT
			{10318,1}, // BOB SHIRT
			{10320,1}, // BOB SHIRT
			{10322,1}, // BOB SHIRT
			{10324,1}, // BOB SHIRT
			{10366,1}, // AMULET (T)
			{10440,1}, // SARA ROBES
			{10446,1}, // SARA ROBES
			{10452,1}, // SARA ROBES
			{10458,1}, // SARA ROBES
			{10464,1}, // SARA ROBES
			{10470,1}, // SARA ROBES
			{10444,1}, // ZAM ROBES
			{10450,1}, // ZAM ROBES
			{12598,1}, // ZAM ROBES
			{10456,1}, // ZAM ROBES
			{10460,1}, // ZAM ROBES
			{10468,1}, // ZAM ROBES
			{10474,1}, // ZAM ROBES
			{10442,1}, // GUTH ROBES
			{10448,1}, // GUTH ROBES
			{10454,1}, // GUTH ROBES
			{10462,1}, // GUTH ROBES
			{10466,1}, // GUTH ROBES
			{10472,1}, // GUTH ROBES
			{12514,1} // GUTH ROBE
			};
	public int[][] treasureTrailMedium = {
			{2599,1}, // ADAM (T)
			{2601,1}, // ADAM (T)
			{2607,1}, // ADAM (T)
			{2609,1}, // ADAM (T)
			{2615,1}, // RUNE (G)
			{2617,1}, // RUNE (G)
			{2619,1}, // RUNE (G)
			{2621,1}, // RUNE (G)
			{7582,1}, // RUNE (G)
			{2577,1}, // RANGER BOOTS
			{2579,1}, // WIZARD BOOTS
			{7319,1}, // BOATER
			{7321,1}, // BOATER
			{7323,1}, // BOATER
			{7325,1}, // BOATER
			{7327,1}, // BOATER
			{7380,1}, // CHAPS (T)
			{7372,1}, // BODY (T)
			{7370,1}, // CHAPS (G)
			{7378,1}, // BODY (G)
			{10748,1}, // ELE
			{10402,1}, // ELE
			{10416,1}, // ELE
			{12337,1}, // RUNE (T)
			{12355,1}, // RUNE (T)
			{10418,1}, // ELE
			{10364,1} // AMULET (T)
			};
	public int[][] treasureTrailHard = {
			{2623,1}, // RUNE (T)
			{2625,1}, // RUNE (T)
			{2627,1}, // RUNE (T)
			{2629,1}, // RUNE (T)
			{12357,1}, // RUNE (T)
			{12437,1}, // RUNE (T)
			{12422,1}, // RUNE (T)
			{12424,1}, // RUNE (T)
			{12426,1}, // RUNE (T)
			{2615,1}, // RUNE (G)
			{2617,1}, // RUNE (G)
			{2619,1}, // RUNE (G)
			{2621,1}, // RUNE (G)
			{2653,1}, // RUNE (Z)
			{2655,1}, // RUNE (Z)
			{2657,1}, // RUNE (Z)
			{2659,1}, // RUNE (Z)
			{2661,1}, // RUNE (S)
			{2663,1}, // RUNE (S)
			{2665,1}, // RUNE (S)
			{2667,1}, // RUNE (S)
			{2669,1}, // RUNE (G)
			{7582,1}, // BLACK (G)
			{2671,1}, // RUNE (G)
			{2673,1}, // RUNE (G)
			{2675,1}, // RUNE (G)
			{3481,1}, // RUNE (GOLD)
			{3483,1}, // RUNE (GOLD)
			{3486,1}, // RUNE (GOLD)
			{3488,1}, // RUNE (GOLD)
			{7376,1}, // DHIDE (T)
			{7384,1}, // DHIDE (T)
			{7374,1}, // DHIDE (G)
			{7382,1}, // DHIDE (G)
			{2581,1}, // ROBIN
			{2639,1}, // CAV (TAN)
			{2641,1}, // CAV (DARK)
			{2643,1}, // CAV (BLACK)
			{2651,1}, // PIRATE
			{10346,1}, // 3RD AGE MELEE
			{10348,1}, // 3RD AGE MELEE
			{10350,1}, // 3RD AGE MELEE
			{10352,1}, // 3RD AGE MELEE
			{10330,1}, // 3RD AGE RANGE TOP
			{10332,1}, // 3RD AGE RANGE LEGS
			{10334,1}, // 3RD AGE RANGE COIF
			{10336,1}, // 3RD AGE VAMBRACES
			{10338,1}, // 3RD AGE ROBE TOP
			{10340,1}, // 3RD AGE ROBE BOTTOMS
			{10342,1}, // 3RD AGE MAGE HAT
			{10344,1}, // 3RD AGE AMULET
			{10346,1}, // 3RD AGE PLATELEGS
			{10348,1}, // 3RD AGE PLATEBODY
			{10350,1}, // 3RD AGE FULL HELMET
			{10352,1}, // 3RD AGE KITESHIELD
			{10354,1}, // AMULET OF GLORY(T4)
			{10376,1}, // GUTHIX BRACERS
			{10378,1}, // GUTHIX DRAGONHIDE
			{10380,1}, // GUTHIX CHAPS
			{10382,1}, // GUTHIX COIF
			{10384,1}, // SARADOMIN BRACERS
			{10386,1}, // SARADOMIN DRAGONHIDE
			{10388,1}, // SARADOMIN CHAPS
			{10390,1} // SARADOMIN COIF
			};
public int[][] treasureTrailAll = {
			{995, 1+Utilities.random(2000)}, // Coins 1-2001
			{995, 1+Utilities.random(2000)}, // Coins 1-2001
			{995, 1+Utilities.random(2000)}, // Coins 1-2001
			{995, 1+Utilities.random(2000)}, // Coins 1-2001
			{995, 1+Utilities.random(2000)}, // Coins 1-2001
			{995, 1+Utilities.random(2000)}, // Coins 1-2001
			{995, 1+Utilities.random(2000)}, // Coins 1-2001
			{995, 1+Utilities.random(2000)}, // Coins 1-2001
			{995, 1+Utilities.random(4000)}, // Coins 1-4001
			{995, 1+Utilities.random(4000)}, // Coins 1-4001
			{995, 1+Utilities.random(4000)}, // Coins 1-4001
			{995, 1+Utilities.random(4000)}, // Coins 1-4001
			{995, 1+Utilities.random(4000)}, // Coins 1-4001
			{995, 1+Utilities.random(6000)}, // Coins 1-6001
			{995, 1+Utilities.random(6000)}, // Coins 1-6001
			{995, 1+Utilities.random(6000)}, // Coins 1-6001
			{995, 1+Utilities.random(6000)}, // Coins 1-6001
			{995, 1+Utilities.random(6000)}, // Coins 1-6001
			{4561, 1+Utilities.random(50)}, // Sweets 1-51
			{4561, 1+Utilities.random(25)}, // Sweets 1-26
			{4561, 1+Utilities.random(10)}, // Sweets 1-11
			{7329, 1+Utilities.random(15)}, // Firelighter
			{7330, 1+Utilities.random(15)}, // Firelighter
			{7331, 1+Utilities.random(15)}, // Firelighter
			{10326, 1+Utilities.random(15)}, // Firelighter
			{10327, 1+Utilities.random(15)}, // Firelighter
			{1694, 1}, // Sapphire Amulet
			{1696, 1}, // Emerald Amulet
			{1698, 1}, // Ruby Amulet
			{1700, 1}, // Diamond Amulet
			{1694, 1}, // Sapphire Amulet
			{1696, 1}, // Emerald Amulet
			{1698, 1}, // Ruby Amulet
			{1700, 1}, // Diamond Amulet
			{1694, 1}, // Sapphire Amulet
			{1696, 1}, // Emerald Amulet
			{1698, 1}, // Ruby Amulet
			{1700, 1}, // Diamond Amulet
			{1694, 1}, // Sapphire Amulet
			{1696, 1}, // Emerald Amulet
			{1698, 1}, // Ruby Amulet
			{1700, 1}, // Diamond Amulet
			{1401, 1}, // Mystic Fire Staff
			{1403, 1}, // Mystic Water Staff
			{1405, 1}, // Mystic Air Staff
			{1407, 1}, // Mystic Earth Staff
			{1401, 1}, // Mystic Fire Staff
			{1403, 1}, // Mystic Water Staff
			{1405, 1}, // Mystic Air Staff
			{1407, 1}, // Mystic Earth Staff
			{1401, 1}, // Mystic Fire Staff
			{1403, 1}, // Mystic Water Staff
			{1405, 1}, // Mystic Air Staff
			{1407, 1}, // Mystic Earth Staff
			{1401, 1}, // Mystic Fire Staff
			{1403, 1}, // Mystic Water Staff
			{1405, 1}, // Mystic Air Staff
			{1407, 1}, // Mystic Earth Staff
			{3827, 1}, // Torn Page
			{3828, 1}, // Torn Page
			{3829, 1}, // Torn Page
			{3830, 1}, // Torn Page
			{3831, 1}, // Torn Page
			{3832, 1}, // Torn Page
			{3833, 1}, // Torn Page
			{3834, 1}, // Torn Page
			{3835, 1}, // Torn Page
			{3836, 1}, // Torn Page
			{3837, 1}, // Torn Page
			{3838, 1}, // Torn Page
			{554, 1+Utilities.random(20)}, // Runes
			{555, 1+Utilities.random(20)}, // Runes
			{556, 1+Utilities.random(20)}, // Runes
			{557, 1+Utilities.random(20)}, // Runes
			{558, 1+Utilities.random(20)}, // Runes
			{559, 1+Utilities.random(20)}, // Runes
			{560, 1+Utilities.random(20)}, // Runes
			{561, 1+Utilities.random(20)}, // Runes
			{562, 1+Utilities.random(20)}, // Runes
			{563, 1+Utilities.random(20)}, // Runes
			{564, 1+Utilities.random(20)}, // Runes
			{565, 1+Utilities.random(20)}, // Runes
			{554, 1+Utilities.random(30)}, // Runes
			{555, 1+Utilities.random(30)}, // Runes
			{556, 1+Utilities.random(30)}, // Runes
			{557, 1+Utilities.random(30)}, // Runes
			{558, 1+Utilities.random(30)}, // Runes
			{559, 1+Utilities.random(30)}, // Runes
			{560, 1+Utilities.random(30)}, // Runes
			{561, 1+Utilities.random(30)}, // Runes
			{562, 1+Utilities.random(30)}, // Runes
			{563, 1+Utilities.random(30)}, // Runes
			{564, 1+Utilities.random(30)}, // Runes
			{565, 1+Utilities.random(30)}, // Runes
			};
</code></p>
<p>Still while you are in your playerAssistant or playerOther add this to it:</p>
<p><code>
public int reward1 = -1;
	public int reward2 = -1;
	public int reward3 = -1;
	public int reward4 = -1;
	public int reward5 = -1;
	public int reward6 = -1;
	public int reward1a = 0;
	public int reward2a = 0;
	public int reward3a = 0;
	public int reward4a = 0;
	public int reward5a = 0;
	public int reward6a = 0;
	public void clueReward(int i) {
		if (i == 0) {
			int random = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random2 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random3 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random1 = (int) (Math.random() * (treasureTrailEasy.length - 1));
			if (Utilities.random(5) == 0) {
			reward1 = treasureTrailEasy[random1][0];
			reward1a = treasureTrailEasy[random1][1];
			} else {
			reward1 = treasureTrailAll[random][0];
			reward1a = treasureTrailAll[random][1];
			}
			if (Utilities.random(7) &gt;= 5) {
			reward2 = treasureTrailAll[random2][0];
			reward2a = treasureTrailAll[random2][1];
			} else if (Utilities.random(5) == 1) {
			reward2 = treasureTrailEasy[random1][0];
			reward2a = treasureTrailEasy[random1][1];	
			}
			if (Utilities.random(10) &gt;= 7) {
			reward3 = treasureTrailAll[random3][0];
			reward3a = treasureTrailAll[random3][1];
			} else if (Utilities.random(7) == 1) {
			reward3 = treasureTrailEasy[random1][0];
			reward3a = treasureTrailEasy[random1][1];	
			}
			}
		if (i == 1) {
			int random = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random2 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random3 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random4 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random5 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random1 = (int) (Math.random() * (treasureTrailMedium.length - 1));
			if (Utilities.random(5) == 0) {
			reward1 = treasureTrailMedium[random1][0];
			reward1a = treasureTrailMedium[random1][1];
			} else {
			reward1 = treasureTrailAll[random][0];
			reward1a = treasureTrailAll[random][1];
			}
			if (Utilities.random(5) &gt;= 3) {
			reward2 = treasureTrailAll[random2][0];
			reward2a = treasureTrailAll[random2][1];
			} else if (Utilities.random(5) == 1) {
			reward2 = treasureTrailMedium[random1][0];
			reward2a = treasureTrailMedium[random1][1];	
			}
			if (Utilities.random(7) &gt;= 5) {
			reward3 = treasureTrailAll[random3][0];
			reward3a = treasureTrailAll[random3][1];
			} else if (Utilities.random(7) == 1) {
			reward3 = treasureTrailMedium[random1][0];
			reward3a = treasureTrailMedium[random1][1];	
			}
			if (Utilities.random(10) &gt;= 7) {
			reward4 = treasureTrailAll[random4][0];
			reward4a = treasureTrailAll[random4][1];
			} else if (Utilities.random(10) == 1) {
			reward4 = treasureTrailMedium[random1][0];
			reward4a = treasureTrailMedium[random1][1];	
			}
			if (Utilities.random(15) &gt;= 12) {
			reward5 = treasureTrailAll[random5][0];
			reward5a = treasureTrailAll[random5][1];
			} else if (Utilities.random(15) == 1) {
			reward5 = treasureTrailMedium[random1][0];
			reward5a = treasureTrailMedium[random1][1];	
			}
			}
		if (i == 2) {
			int random = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random2 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random3 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random4 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random5 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random6 = (int) (Math.random() * (treasureTrailAll.length - 1));
			int random1 = (int) (Math.random() * (treasureTrailHard.length - 1));
			if (Utilities.random(5) == 0) {
			reward1 = treasureTrailHard[random1][0];
			reward1a = treasureTrailHard[random1][1];
			} else {
			reward1 = treasureTrailAll[random][0];
			reward1a = treasureTrailAll[random][1];
			}
			if (Utilities.random(5) &gt;= 3) {
			reward2 = treasureTrailAll[random2][0];
			reward2a = treasureTrailAll[random2][1];
			} else if (Utilities.random(5) == 1) {
			reward2 = treasureTrailHard[random1][0];
			reward2a = treasureTrailHard[random1][1];	
			}
			if (Utilities.random(7) &gt;= 5) {
			reward3 = treasureTrailAll[random3][0];
			reward3a = treasureTrailAll[random3][1];
			} else if (Utilities.random(7) == 1) {
			reward3 = treasureTrailHard[random1][0];
			reward3a = treasureTrailHard[random1][1];	
			}
			if (Utilities.random(10) &gt;= 7) {
			reward4 = treasureTrailAll[random4][0];
			reward4a = treasureTrailAll[random4][1];
			} else if (Utilities.random(10) == 1) {
			reward4 = treasureTrailHard[random1][0];
			reward4a = treasureTrailHard[random1][1];	
			}
			if (Utilities.random(15) &gt;= 12) {
			reward5 = treasureTrailAll[random5][0];
			reward5a = treasureTrailAll[random5][1];
			} else if (Utilities.random(15) == 1) {
			reward5 = treasureTrailHard[random1][0];
			reward5a = treasureTrailHard[random1][1];	
			}
			if (Utilities.random(25) &gt;= 20) {
			reward6 = treasureTrailAll[random6][0];
			reward6a = treasureTrailAll[random6][1];
			} else if (Utilities.random(25) == 1) {
			reward6 = treasureTrailHard[random1][0];
			reward6a = treasureTrailHard[random1][1];	
			}
			}
			sendFrame34a(6963, reward1, 0, reward1a);
			sendFrame34a(6963, reward2, 1, reward2a);
			sendFrame34a(6963, reward3, 2, reward3a);
			sendFrame34a(6963, reward4, 3, reward4a);
			sendFrame34a(6963, reward5, 4, reward5a);
			sendFrame34a(6963, reward6, 5, reward6a);
			c.getPA().showInterface(6960);
			c.getItems().addItem(reward1, reward1a);
			c.getItems().addItem(reward2, reward2a);
			c.getItems().addItem(reward3, reward3a);
			c.getItems().addItem(reward4, reward4a);
			c.getItems().addItem(reward5, reward5a);
			c.getItems().addItem(reward6, reward6a);
			reward1 = -1;
			reward2 = -1;
			reward3 = -1;
			reward4 = -1;
			reward5 = -1;
			reward6 = -1;
			reward1a = 0;
			reward2a = 0;
			reward3a = 0;
			reward4a = 0;
			reward5a = 0;
			reward6a = 0;
		}</code></p>
<p>This is basically the code you will call to handle the rewards. When called it will roll on the chance of hitting the respective level’s table and also to try to get more than 1 loot.</p>
<p>Navigate to your clickItem class and add this in:</p>
<pre><code class="lang-auto">if (itemId == 2826) {
			c.getItems().deleteItem(2826, c.getItems().getItemSlot(2826), 1);
			c.getPA().clueReward(1);
		}
		if (itemId == 3511) {
			c.getItems().deleteItem(3511, c.getItems().getItemSlot(3511), 1);
			c.getPA().clueReward(2);
		}
		if (itemId == 3603) {
			c.getItems().deleteItem(3603, c.getItems().getItemSlot(3603), 1);
			c.getPA().clueReward(3);
		}</code></pre>
<p>Done, now when and if you get any errors most can be fixed doing the following:</p>
<p>Changing Utilities.random(xx) to Misc.random(xx) and other code conversions since mine differs from original PI.</p>
<p>I will also be releasing the steps part of the Clue scrolls shortly.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/adding-clue-scroll-rewards-pi/553757/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/adding-clue-scroll-rewards-pi/553757/1</link>
        <pubDate>Fri, 06 Nov 2015 05:47:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-553757-1</guid>
        <source url="https://forum.moparisthebest.com/t/adding-clue-scroll-rewards-pi/553757.rss">Adding Clue Scroll Rewards [PI]</source>
      </item>
  </channel>
</rss>
