<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[Tut] A guide to making an auto-login</title>
    <link>https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916</link>
    <description>If a mod likes this, can they move it to the tutorials section?  ;D

I reccomend using [url=http://www.moparisthebest.org:82/smf/index.php/topic,24824.0.html]this[/url] tut if you are new to scripting.


This tut will probally use the following procedures: 


[scar]OpenWebPage(URL: String);
FindBitmap(bitmap : integer; var x, y : integer);
FindBitmapSpiralTolerance(bitmap: Integer; var x, y: Integer; x1, y1, x2, y2: Integer; Tolerance: Integer);
MoveMouseSmoothEx(x,y: integer; minsleeptime, maxsleeptime, maxdistance, gravity, forces: Integer);
Random(range: integer);[/scar]

We could also use arrays, case .. of, const.

Lets start with bitmaps. Bitmaps are an easy way to find object, they don&#39;t work too well on the runescape screen, but do for inventory ect. To take a bitmap, press the prnt screen button on your keyboard, this is usually next to the f12. (To the right). Open a program like paint and paste it. Now, large bitmaps tend to lag so you should only get the bits you need. Save the cropped image as a bitmap, if your not sure how to do this, in the name box enter &quot;bitmapname.bmp&quot; WITH the quotes. Once we got our bitmap, open SCAR, navigate to Script(alt + s) and scroll down to &quot;Picture to String&quot;. Find your bitmap you saved earlier and select all of it. (Hold your mouse to the upper most left hand corner and drag it to the bottom right.) You don&#39;t need to crop in paint but it&#39;s advised, you can insted press the + in the box on the SCAR Bitmap Loader and select what you want. When your finished just press ok and in the debug box you should get some data. It may be big in size, if it&#39;s too big then try a diffrent bitmap.

Generally in paint you should black-out what your not using to save space on the bitmap. You should get a bitmap of the play button on the runescape.com website, and get the string. I have got the TI in the existing on the play button on runescape, since it&#39;s unique on the web-page. Here it is: 

[scar]  play := BitmapFromString(19, 17, &#39;z78DA33301818E062E8646EEE&#39; + 
       &#39;4C0989DFB4916923F1A14D3B5DA3368EDA386AE3A88D23C1465A0&#39; + 
       &#39;0008F3D8B80&#39;);[/scar]

Right, now you need to declare your bitmap as an integer. To use bitmaps all you need to do is put them in the main line, I reccomend putting them in a procedure such as &quot;LoadBitmaps&quot; then just declaring Loadbitmaps;&quot; in the main line to save space on it. Here&#39;s what I have so far:

[scar]program AutoLogin;

var
  play : integer;

procedure LoadBitmaps;
begin
    play := BitmapFromString(19, 17, &#39;z78DA33301818E062E8646EEE&#39; +
       &#39;4C0989DFB4916923F1A14D3B5DA3368EDA386AE3A88D23C1465A0&#39; +
       &#39;0008F3D8B80&#39;);
end;

begin
  LoadBitmaps;
end.[/scar]

Right, before we can get on we need to get some more bitmaps. We need 1 of the low detail(since SCAR works best on low-detail) and one of the &quot;Choose Best Free World For Me&quot; button since most autoers will be free-to-play accounts that aren&#39;t mains. We also need a pic of the &quot;Existing User&quot; on the runescape applet and the &quot;Login&quot;. The low detail &amp; free one might be large but that&#39;s ok. Once you have all of them chuck them in the LoadBitmaps procedure and declare them as vars. We should also make a procedure to destroy all of the bitmaps to free up memory SCAR is using. I&#39;m using this as an example, and I don&#39;t think I should need to explain it.
[scar]procedure DestroyBitmaps;
begin
  FreeBitmap(play);
  FreeBitmap(lowdetail);
  FreeBitmap(free);
  FreeBitmap(exist);
  FreeBitmap(login);
end;[/scar]

That destroys all of the bitmaps used in this: 
[scar]program AutoLogin;

var
  play, lowdetail, free, exist, login : Integer;

procedure LoadBitmaps;
begin
    play := BitmapFromString(19, 17, &#39;z78DA33301818E062E8646EEE&#39; +
       &#39;4C0989DFB4916923F1A14D3B5DA3368EDA386AE3A88D23C1465A0&#39; +
       &#39;0008F3D8B80&#39;);
  lowdetail := BitmapFromString(32, 4, &#39;z78DA5552C98D45210C6B&#39; +
       &#39;09B27384F0E8BFA4E1630E8C90A228ABED205F6945CCAB96CE51A&#39; +
       &#39;8D455738CB6BEDF9B9E2BA3529945776E6745296AA092A2D452BD&#39; +
       &#39;70A5F6B5DE5B4757E6909EF0453999C9486A13A3468A2EF8A9FD6&#39; +
       &#39;B722B831BF99D70E2EC35AA616FE356C3DFF917CFC1FFE2993934&#39; +
       &#39;65D9945C1EAE9BDBC14F5CB30AB620C2B1592B7BF11D3FBCD075E&#39; +
       &#39;DAB80572E0D5C800A13B0EB5569968CBED698E3630B0D31D48799&#39; +
       &#39;9B218EC9EA1CAC501E2C2295A4AFFED98CBBFD99FFC6AFFFA0852&#39; +
       &#39;6CD7E8C2F12743D8AB96953B5E021028B5BB350EEFB1C8E1A14A4&#39; +
       &#39;E8FAC6D05130B36F13762F7BB6031B90E30FBCBAFDF3DFF7B2801&#39; +
       &#39;AC7BA4BC8BD05F043BDF72FBDAC7B77DD5BCF057177D87DE6A4B8&#39; +
       &#39;7FF8D4033FB2A6D245DE697FF5E6B08A&#39;);
  free := BitmapFromString(23, 14, &#39;z78DAA5554972C3300CFB9237&#39; +
       &#39;2D3C4256FCFF27150415B749D3A6E3FAC0F1C814048120DD0A3AB&#39; +
       &#39;656B1636A1966D60CBBEDADA0596B0BBAA1CDB8F17D65C4881BE3&#39; +
       &#39;6DFAF230F320C20A3013FE55EFC6CC2E1CC7749C3EFDF03013989&#39; +
       &#39;9693AA5596D8908994C76BEC7CAA23831266166E690E1134EC3C2&#39; +
       &#39;7CB3CE58AC30138C8E907947BF8B76E1866A9ED9AD3C20CC5C3F7&#39; +
       &#39;4968D5356463B575C19BF57D73AC6D7EC5F9F7080E9E1469F4CAA&#39; +
       &#39;D6ABB33DBF06C3D5590D0422B33AB14B4CA64B0F991CD4C4752BA&#39; +
       &#39;A5D7D939F9879C80F99BB92ADDCEFAA267268C1E72293957833F9&#39; +
       &#39;84AADDD29BFC2C671629208559B5A82F5405E3FA249EEE5573CDA&#39; +
       &#39;56478CFB40BB6BF622287E4A1C9FEEE462C9357DC31D3A96A2793&#39; +
       &#39;3AFAE5EED28D7C405F099339A69564B3FC5C5FAA1D4CECF4FCDD6&#39; +
       &#39;F7EA3BBC7A0F73A1C92792E3BEB54E906C7AFEC8BA2EE083EE131&#39; +
       &#39;F7B30D1FCAC3AC667DE525A9BD486D28868689F9C5166122AA10E&#39; +
       &#39;B5F399CDDB7D33965F4266CBBE813E2F0461B7922741BA7EBC4B1&#39; +
       &#39;F2ADE39E543DB08E2AA8B32E32B9E374CDC0FD71DA8C9C9896AAD&#39; +
       &#39;DCBEEEBBC8BE64C4CB06B4C88E2733531EED189BFF47B74C4539F&#39; +
       &#39;7A17B33AF175FD07133AF1AC0B87DCCF53FDECB53EE670FA64826&#39; +
       &#39;94CBFE5B73ABE61C29A500DF789F74EFADB8DA8007B041573F539&#39; +
       &#39;7F4312C31EFFA9AB938D8ECDFE17638DFCAF3AFF6917ABCA7C9DF&#39; +
       &#39;B01E0629E63&#39;);
  exist := BitmapFromString(31, 10, &#39;z78DA7373230C0C061498589&#39; +
       &#39;8389A9A404864F1C1E3425C00970B475D4EBC8DB470397EBBA8EB&#39; +
       &#39;77E273961B957222FD7D4ABB10234FCDC086007936522B6C8787C&#39; +
       &#39;BF1BB8A5A61425E5EC354090054C09348&#39;);
  login := BitmapFromString(35, 7, &#39;z78DA33313231317175430206&#39; +
       &#39;44006347632713132869646C6CEC04210D2806A4BA04139890E52&#39; +
       &#39;3371C80545DE4F914BF39A4FA08974A7A8A23CB628A985898389A&#39; +
       &#39;9A0C2D1FE1171FF5D150F41131B98FD492813C93C9130700BC9A4&#39; +
       &#39;B0F&#39;);
end;

procedure DestroyBitmaps;
begin
  FreeBitmap(play);
  FreeBitmap(lowdetail);
  FreeBitmap(free);
  FreeBitmap(exist);
  FreeBitmap(login);
end;

begin
  LoadBitmaps;
end.[/scar] script.

You might need to adjust it to your scripts needs but we should be fine.

So, now we have our bitmaps, our bitmap destroyer we can get on. I&#39;m going to choose to make our mouse function first. 
&quot;procedure Mouse(x, y, rx, ry : integer; click : boolean);&quot;

x, y Are the coords we will move to, rx, ry are the random coords we will use(to make the script less detectable) and click determins if it&#39;s right or left click.

For the start, I will use 
&quot;rx := rx + 1;
  ry := ry + 1;
  x := x + Random(rx) - Random(rx);
  y := y + Random(ry) - Random(ry);&quot;
this. The first 2 lines just add 1 to the random, so it dosen&#39;t return 0, the bottom 2 randomize x and y. Lets take a look at MoveMouseSmoothEx in the manual before we use it.

&quot;procedure MoveMouseSmoothEx(x,y: integer; minsleeptime, maxsleeptime, maxdistance, gravity, forces: Integer) - simulate humanlike mouse movement with more customizable parameters. By default MinSleepTime = 1; MaxSleepTime = 3; MaxDistance = 45; Gravity = 20; Forces = 10. Minsleeptime and Maxsleeptime limit pause between mouse cursor jumps, MaxDistance is maximal allowed distance between mouse jumps, Gravity is how much mouse tends to reach destination, Forces are like random winds, hand shaking simulation.&quot;

I&#39;m going to use the defaults to some extent but you should experiment for your own needs. Here is my finished Mouse procedure: 
[scar]procedure Mouse(x, y, rx, ry : integer; click : boolean);
begin
  rx := rx + 1;
  ry := ry + 1;
  x := x + Random(rx) - Random(rx);
  y := y + Random(ry) - Random(ry);
  MoveMouseSmoothEx(x, y, 10, 15, 45, 20, 10);
  if click then
  begin
    HoldMouse(rx, ry, true);
    Wait(15 + Random(30));
    ReleaseMouse(rx, ry, true);
  end else
    HoldMouse(rx, ry, false);
    Wait(15 + Random(30));
    ReleaseMouse(rx, ry, false);
end;[/scar]

&quot;if click then&quot; 
Again, my style of code. You can use &quot;if click := true then&quot; but you don&#39;t need to since scar checks if the boolean is true unless stated otherwise.

&quot;   HoldMouse(rx, ry, true);
    Wait(15 + Random(30));
    ReleaseMouse(rx, ry, true);&quot;
Basically stimulates pressing a mouse humanish. The bottom one is the same but right click.

So, to use the Mouse command now you would do somthing like Mouse(x, y, 5, 5, True) to left click, Mouse(x, y, 5, 5, False) to right click. I suggest not using too high random mouse moves since it might not click the target. 3, 3 Work perfect for most things.

We should now make a procedure to find the RuneScape window, since you need to select the window to find bitmaps.
[scar]procedure SelectWindow;
begin
  FindWindowTitlePart(&#39;the massive online adventure game&#39;, false);
end;[/scar]

Again, just an example and I&#39;m sure I don&#39;t need to explain it.

So, right now we have bitmaps, mouse commands and finding the window procedures. I think we should make a procedure to find the bitmap and click it. Here is somthing I made earlier: 
[scar]
procedure ClickBitmap(bitmap, x, y, x1, y1, x2, y2, tol : integer);
begin
  repeat
    if FindBitmapSpiralTolerance(bitmap, x, y, x1, y1, x2, y2, tol) then
    begin
      Mouse(x, y, 4, 4, true);
      Wait(100 + Random(100));
    end;
  until FindBitmapSpiralTolerance(bitmap, x, y, x1, y1, x2, y2, tol);
end;[/scar]

Lets break it down. FindBitmapSpiralTolerance is a procedure to find a bitmap. Tolerance is basically to use a similar color, I can&#39;t explain it too well but say the bitmap uses color 98942, if the tolerance is 2 it will search for 98940, 98941, 98942, 98943, 98942. If it&#39;s higher, well, you get the picture. x1, y1, x2, y2 is the box it searches in. Let me draw an example:

x1, y1
|
V
_________
|            |
|            | 
|            |
|_______ |   &lt;-- x2, y2

You can say pic the first coords at the top left, these 2 coords are x1, y1 and pick the second 2 coords at the bottom right, these would be x2, y2. 

x1, y1, x2, y2 Can also be xs, ys, xe, ye. *NOTE: The repeat is there to save ALOT of space on the main line.*

So, what else will we might need? OpenWebPage(URL: string); I don&#39;t think we need a procedure for that. So, here&#39;s my script right now: 
[scar]program AutoLogin;

var
  play, lowdetail, free, exist, login : Integer;
  x1, y1, w1, h1 : Integer; // Just temp.

procedure LoadBitmaps;
begin
    play := BitmapFromString(19, 17, &#39;z78DA33301818E062E8646EEE&#39; +
       &#39;4C0989DFB4916923F1A14D3B5DA3368EDA386AE3A88D23C1465A0&#39; +
       &#39;0008F3D8B80&#39;);
  lowdetail := BitmapFromString(32, 4, &#39;z78DA5552C98D45210C6B&#39; +
       &#39;09B27384F0E8BFA4E1630E8C90A228ABED205F6945CCAB96CE51A&#39; +
       &#39;8D455738CB6BEDF9B9E2BA3529945776E6745296AA092A2D452BD&#39; +
       &#39;70A5F6B5DE5B4757E6909EF0453999C9486A13A3468A2EF8A9FD6&#39; +
       &#39;B722B831BF99D70E2EC35AA616FE356C3DFF917CFC1FFE2993934&#39; +
       &#39;65D9945C1EAE9BDBC14F5CB30AB620C2B1592B7BF11D3FBCD075E&#39; +
       &#39;DAB80572E0D5C800A13B0EB5569968CBED698E3630B0D31D48799&#39; +
       &#39;9B218EC9EA1CAC501E2C2295A4AFFED98CBBFD99FFC6AFFFA0852&#39; +
       &#39;6CD7E8C2F12743D8AB96953B5E021028B5BB350EEFB1C8E1A14A4&#39; +
       &#39;E8FAC6D05130B36F13762F7BB6031B90E30FBCBAFDF3DFF7B2801&#39; +
       &#39;AC7BA4BC8BD05F043BDF72FBDAC7B77DD5BCF057177D87DE6A4B8&#39; +
       &#39;7FF8D4033FB2A6D245DE697FF5E6B08A&#39;);
  free := BitmapFromString(23, 14, &#39;z78DAA5554972C3300CFB9237&#39; +
       &#39;2D3C4256FCFF27150415B749D3A6E3FAC0F1C814048120DD0A3AB&#39; +
       &#39;656B1636A1966D60CBBEDADA0596B0BBAA1CDB8F17D65C4881BE3&#39; +
       &#39;6DFAF230F320C20A3013FE55EFC6CC2E1CC7749C3EFDF03013989&#39; +
       &#39;9693AA5596D8908994C76BEC7CAA23831266166E690E1134EC3C2&#39; +
       &#39;7CB3CE58AC30138C8E907947BF8B76E1866A9ED9AD3C20CC5C3F7&#39; +
       &#39;4968D5356463B575C19BF57D73AC6D7EC5F9F7080E9E1469F4CAA&#39; +
       &#39;D6ABB33DBF06C3D5590D0422B33AB14B4CA64B0F991CD4C4752BA&#39; +
       &#39;A5D7D939F9879C80F99BB92ADDCEFAA267268C1E72293957833F9&#39; +
       &#39;84AADDD29BFC2C671629208559B5A82F5405E3FA249EEE5573CDA&#39; +
       &#39;56478CFB40BB6BF622287E4A1C9FEEE462C9357DC31D3A96A2793&#39; +
       &#39;3AFAE5EED28D7C405F099339A69564B3FC5C5FAA1D4CECF4FCDD6&#39; +
       &#39;F7EA3BBC7A0F73A1C92792E3BEB54E906C7AFEC8BA2EE083EE131&#39; +
       &#39;F7B30D1FCAC3AC667DE525A9BD486D28868689F9C5166122AA10E&#39; +
       &#39;B5F399CDDB7D33965F4266CBBE813E2F0461B7922741BA7EBC4B1&#39; +
       &#39;F2ADE39E543DB08E2AA8B32E32B9E374CDC0FD71DA8C9C9896AAD&#39; +
       &#39;DCBEEEBBC8BE64C4CB06B4C88E2733531EED189BFF47B74C4539F&#39; +
       &#39;7A17B33AF175FD07133AF1AC0B87DCCF53FDECB53EE670FA64826&#39; +
       &#39;94CBFE5B73ABE61C29A500DF789F74EFADB8DA8007B041573F539&#39; +
       &#39;7F4312C31EFFA9AB938D8ECDFE17638DFCAF3AFF6917ABCA7C9DF&#39; +
       &#39;B01E0629E63&#39;);
  exist := BitmapFromString(31, 10, &#39;z78DA7373230C0C061498589&#39; +
       &#39;8389A9A404864F1C1E3425C00970B475D4EBC8DB470397EBBA8EB&#39; +
       &#39;77E273961B957222FD7D4ABB10234FCDC086007936522B6C8787C&#39; +
       &#39;BF1BB8A5A61425E5EC354090054C09348&#39;);
  login := BitmapFromString(35, 7, &#39;z78DA33313231317175430206&#39; +
       &#39;44006347632713132869646C6CEC04210D2806A4BA04139890E52&#39; +
       &#39;3371C80545DE4F914BF39A4FA08974A7A8A23CB628A985898389A&#39; +
       &#39;9A0C2D1FE1171FF5D150F41131B98FD492813C93C9130700BC9A4&#39; +
       &#39;B0F&#39;);
end;

procedure Mouse(x, y, rx, ry : integer; click : boolean);
begin
  rx := rx + 1;
  ry := ry + 1;
  x := x + Random(rx) - Random(rx);
  y := y + Random(ry) - Random(ry);
  MoveMouseSmoothEx(x, y, 10, 15, 45, 20, 10);
  if click then
  begin
    HoldMouse(rx, ry, true);
    Wait(15 + Random(30));
    ReleaseMouse(rx, ry, true);
  end else
    HoldMouse(rx, ry, false);
    Wait(15 + Random(30));
    ReleaseMouse(rx, ry, false);
end;

procedure SelectWindow;
begin
  FindWindowTitlePart(&#39;the massive online adventure game&#39;, false);
end;

procedure ClickBitmap(bitmap, x, y, x1, y1, x2, y2, tol : integer);
begin
  repeat
    if FindBitmapSpiralTolerance(bitmap, x, y, x1, y1, x2, y2, tol) then
    begin
      Mouse(x, y, 4, 4, true);
      Wait(100 + Random(100));
    end;
  until FindBitmapSpiralTolerance(bitmap, x, y, x1, y1, x2, y2, tol);
end;

procedure DestroyBitmaps;
begin
  FreeBitmap(play);
  FreeBitmap(lowdetail);
  FreeBitmap(free);
  FreeBitmap(exist);
  FreeBitmap(login);
end;

begin
  LoadBitmaps;
end.[/scar]

Yours should look somthing like this. So, lets build the main-line now. *NOTE: You should adjust this to your needs*.

[scar]begin
  LoadBitmaps;
  OpenWebPage(&#39;http://www.runescape.com&#39;);
  SelectWindow;
  GetClientDimensions(w1, h1);
  ClickBitmap(play, x1, y1, 1, 1, w1, h1, 5);
  SelectWindow;
  ClickBitmap(lowdetail, x1, y1, 1, 1, w1, h1, 5);
  SelectWindow;
  ClickBitmap(free, x1, y1, 1, 1, w1, h1, 5);
  SelectWindow;
  ClickBitmap(exist, x1, y1, 1, 1, w1, h1, 5);
end.[/scar]

You can see a slight pattern, can&#39;t you? But, before we can use this we must add a const for our username and password. I&#39;m going to use: 

const
  UserName = &#39;username&#39;;
  PassWord = &#39;password&#39;;

Just add that at the top, below program and before vars. It should look somthing like this now:
[scar]program AutoLogin;

const
  UserName = &#39;username&#39;;
  PassWord = &#39;password&#39;;

var
  play, lowdetail, free, exist, login : Integer;
  x1, y1, w1, h1 : Integer; // Just temp.[/scar]

We will now add the procedure, from [url=http://www.moparisthebest.org:82/smf/index.php/topic,24824.0.html]this[/url] tut. 
[scar]procedure SendString(text : string);
var
  TempInt, TempInt1 : Integer;
  TempChar : Char;
begin
  for TempInt := 1 to Length(text) do
  begin
    TempChar := StrGet(text, TempInt);
    TempInt1 := GetKeyCode(TempChar);
    KeyDown(TempInt1);
    Wait(25 + Random(30));
    KeyUp(TempInt1);
    Wait(40 + Random(30));
  end;
  SendKeysVB(&#39;{ENTER}&#39;, True);
end;[/scar]

Now add the following lines to the main line(at the bottom)

[scar]  SendString(UserName);
  SendString(PassWord);
  ClickBitmap(login, x1, y1, 1, 1, w1, h1, 5);
  DestroyBitmaps;[/scar]

There! Your done! My final result:[br][size=1]Posted at: October 03, 2006, 11:52:03 AM[/size][hr][scar]program AutoLogin;

const
  UserName = &#39;username&#39;;
  PassWord = &#39;password&#39;;

var
  play, lowdetail, free, exist, login : Integer;
  x1, y1, w1, h1 : Integer; // Just temp.

procedure LoadBitmaps;
begin
    play := BitmapFromString(19, 17, &#39;z78DA33301818E062E8646EEE&#39; +
       &#39;4C0989DFB4916923F1A14D3B5DA3368EDA386AE3A88D23C1465A0&#39; +
       &#39;0008F3D8B80&#39;);
  lowdetail := BitmapFromString(32, 4, &#39;z78DA5552C98D45210C6B&#39; +
       &#39;09B27384F0E8BFA4E1630E8C90A228ABED205F6945CCAB96CE51A&#39; +
       &#39;8D455738CB6BEDF9B9E2BA3529945776E6745296AA092A2D452BD&#39; +
       &#39;70A5F6B5DE5B4757E6909EF0453999C9486A13A3468A2EF8A9FD6&#39; +
       &#39;B722B831BF99D70E2EC35AA616FE356C3DFF917CFC1FFE2993934&#39; +
       &#39;65D9945C1EAE9BDBC14F5CB30AB620C2B1592B7BF11D3FBCD075E&#39; +
       &#39;DAB80572E0D5C800A13B0EB5569968CBED698E3630B0D31D48799&#39; +
       &#39;9B218EC9EA1CAC501E2C2295A4AFFED98CBBFD99FFC6AFFFA0852&#39; +
       &#39;6CD7E8C2F12743D8AB96953B5E021028B5BB350EEFB1C8E1A14A4&#39; +
       &#39;E8FAC6D05130B36F13762F7BB6031B90E30FBCBAFDF3DFF7B2801&#39; +
       &#39;AC7BA4BC8BD05F043BDF72FBDAC7B77DD5BCF057177D87DE6A4B8&#39; +
       &#39;7FF8D4033FB2A6D245DE697FF5E6B08A&#39;);
  free := BitmapFromString(23, 14, &#39;z78DAA5554972C3300CFB9237&#39; +
       &#39;2D3C4256FCFF27150415B749D3A6E3FAC0F1C814048120DD0A3AB&#39; +
       &#39;656B1636A1966D60CBBEDADA0596B0BBAA1CDB8F17D65C4881BE3&#39; +
       &#39;6DFAF230F320C20A3013FE55EFC6CC2E1CC7749C3EFDF03013989&#39; +
       &#39;9693AA5596D8908994C76BEC7CAA23831266166E690E1134EC3C2&#39; +
       &#39;7CB3CE58AC30138C8E907947BF8B76E1866A9ED9AD3C20CC5C3F7&#39; +
       &#39;4968D5356463B575C19BF57D73AC6D7EC5F9F7080E9E1469F4CAA&#39; +
       &#39;D6ABB33DBF06C3D5590D0422B33AB14B4CA64B0F991CD4C4752BA&#39; +
       &#39;A5D7D939F9879C80F99BB92ADDCEFAA267268C1E72293957833F9&#39; +
       &#39;84AADDD29BFC2C671629208559B5A82F5405E3FA249EEE5573CDA&#39; +
       &#39;56478CFB40BB6BF622287E4A1C9FEEE462C9357DC31D3A96A2793&#39; +
       &#39;3AFAE5EED28D7C405F099339A69564B3FC5C5FAA1D4CECF4FCDD6&#39; +
       &#39;F7EA3BBC7A0F73A1C92792E3BEB54E906C7AFEC8BA2EE083EE131&#39; +
       &#39;F7B30D1FCAC3AC667DE525A9BD486D28868689F9C5166122AA10E&#39; +
       &#39;B5F399CDDB7D33965F4266CBBE813E2F0461B7922741BA7EBC4B1&#39; +
       &#39;F2ADE39E543DB08E2AA8B32E32B9E374CDC0FD71DA8C9C9896AAD&#39; +
       &#39;DCBEEEBBC8BE64C4CB06B4C88E2733531EED189BFF47B74C4539F&#39; +
       &#39;7A17B33AF175FD07133AF1AC0B87DCCF53FDECB53EE670FA64826&#39; +
       &#39;94CBFE5B73ABE61C29A500DF789F74EFADB8DA8007B041573F539&#39; +
       &#39;7F4312C31EFFA9AB938D8ECDFE17638DFCAF3AFF6917ABCA7C9DF&#39; +
       &#39;B01E0629E63&#39;);
  exist := BitmapFromString(31, 10, &#39;z78DA7373230C0C061498589&#39; +
       &#39;8389A9A404864F1C1E3425C00970B475D4EBC8DB470397EBBA8EB&#39; +
       &#39;77E273961B957222FD7D4ABB10234FCDC086007936522B6C8787C&#39; +
       &#39;BF1BB8A5A61425E5EC354090054C09348&#39;);
  login := BitmapFromString(35, 7, &#39;z78DA33313231317175430206&#39; +
       &#39;44006347632713132869646C6CEC04210D2806A4BA04139890E52&#39; +
       &#39;3371C80545DE4F914BF39A4FA08974A7A8A23CB628A985898389A&#39; +
       &#39;9A0C2D1FE1171FF5D150F41131B98FD492813C93C9130700BC9A4&#39; +
       &#39;B0F&#39;);
end;

procedure Mouse(x, y, rx, ry : integer; click : boolean);
begin
  rx := rx + 1;
  ry := ry + 1;
  x := x + Random(rx) - Random(rx);
  y := y + Random(ry) - Random(ry);
  MoveMouseSmoothEx(x, y, 10, 15, 45, 20, 10);
  if click then
  begin
    HoldMouse(rx, ry, true);
    Wait(15 + Random(30));
    ReleaseMouse(rx, ry, true);
  end else
    HoldMouse(rx, ry, false);
    Wait(15 + Random(30));
    ReleaseMouse(rx, ry, false);
end;

procedure SelectWindow;
begin
  FindWindowTitlePart(&#39;the massive online adventure game&#39;, false);
end;

procedure ClickBitmap(bitmap, x, y, x1, y1, x2, y2, tol : integer);
begin
  repeat
    if FindBitmapSpiralTolerance(bitmap, x, y, x1, y1, x2, y2, tol) then
    begin
      Mouse(x, y, 4, 4, true);
      Wait(100 + Random(100));
    end;
  until FindBitmapSpiralTolerance(bitmap, x, y, x1, y1, x2, y2, tol);
end;

procedure DestroyBitmaps;
begin
  FreeBitmap(play);
  FreeBitmap(lowdetail);
  FreeBitmap(free);
  FreeBitmap(exist);
  FreeBitmap(login);
end;

procedure SendString(text : string);
var
  TempInt, TempInt1 : Integer;
  TempChar : Char;
begin
  for TempInt := 1 to Length(text) do
  begin
    TempChar := StrGet(text, TempInt);
    TempInt1 := GetKeyCode(TempChar);
    KeyDown(TempInt1);
    Wait(25 + Random(30));
    KeyUp(TempInt1);
    Wait(40 + Random(30));
  end;
  SendKeysVB(&#39;{ENTER}&#39;, True);
end;

begin
  LoadBitmaps;
  OpenWebPage(&#39;http://www.runescape.com&#39;);
  SelectWindow;
  GetClientDimensions(w1, h1);
  ClickBitmap(play, x1, y1, 1, 1, w1, h1, 5);
  SelectWindow;
  ClickBitmap(lowdetail, x1, y1, 1, 1, w1, h1, 5);
  SelectWindow;
  ClickBitmap(free, x1, y1, 1, 1, w1, h1, 5);
  SelectWindow;
  ClickBitmap(exist, x1, y1, 1, 1, w1, h1, 5);
  SendString(UserName);
  SendString(PassWord);
  ClickBitmap(login, x1, y1, 1, 1, w1, h1, 5);
  DestroyBitmaps;
end.[/scar]

Good luck, and thanks for reading! (If you need further assistance, pm me.)</description>
    
    <lastBuildDate>Fri, 06 Oct 2006 17:09:13 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[Tut] A guide to making an auto-login</title>
        <dc:creator><![CDATA[@uncfan1119 uncfan1119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/uncfan1119">@uncfan1119</a> wrote:</p>
          <blockquote>
              <p>We’ll change the bitmaps? LOL.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916/10</link>
        <pubDate>Fri, 06 Oct 2006 17:09:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-16916-10</guid>
        <source url="https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916.rss">[Tut] A guide to making an auto-login</source>
      </item>
      <item>
        <title>[Tut] A guide to making an auto-login</title>
        <dc:creator><![CDATA[@The_Un-Named The Un-Named]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_un-named">@The_Un-Named</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="7" data-topic="16916">
<div class="title">
<div class="quote-controls"></div>
 the fu superior:</div>
<blockquote>
<p>i rly dont understand, why u cant log in yourself</p>
</blockquote>
</aside>
<p>It’s a guide to help people understand how scar works.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916/9</link>
        <pubDate>Thu, 05 Oct 2006 21:27:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-16916-9</guid>
        <source url="https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916.rss">[Tut] A guide to making an auto-login</source>
      </item>
      <item>
        <title>[Tut] A guide to making an auto-login</title>
        <dc:creator><![CDATA[@bullzeye95 bullzeye]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bullzeye95">@bullzeye95</a> wrote:</p>
          <blockquote>
              <p>It’s to use in scripts.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916/8</link>
        <pubDate>Thu, 05 Oct 2006 07:17:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-16916-8</guid>
        <source url="https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916.rss">[Tut] A guide to making an auto-login</source>
      </item>
      <item>
        <title>[Tut] A guide to making an auto-login</title>
        <dc:creator><![CDATA[@whothe0 the fu superior]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/whothe0">@whothe0</a> wrote:</p>
          <blockquote>
              <p>i rly dont understand, why u cant log in yourself</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916/7</link>
        <pubDate>Thu, 05 Oct 2006 07:16:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-16916-7</guid>
        <source url="https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916.rss">[Tut] A guide to making an auto-login</source>
      </item>
      <item>
        <title>[Tut] A guide to making an auto-login</title>
        <dc:creator><![CDATA[@bullzeye95 bullzeye]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bullzeye95">@bullzeye95</a> wrote:</p>
          <blockquote>
              <p>Script not working?  Naw, that’s not a big problem <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916/6</link>
        <pubDate>Thu, 05 Oct 2006 06:39:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-16916-6</guid>
        <source url="https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916.rss">[Tut] A guide to making an auto-login</source>
      </item>
      <item>
        <title>[Tut] A guide to making an auto-login</title>
        <dc:creator><![CDATA[@The_Un-Named The Un-Named]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_un-named">@The_Un-Named</a> wrote:</p>
          <blockquote>
              <p>Ty for comments. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>The only problem with the script I posted was it dosen’t work. I’m 100% sure it’s the bitmaps since I didn’t have time to check them.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916/5</link>
        <pubDate>Thu, 05 Oct 2006 05:49:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-16916-5</guid>
        <source url="https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916.rss">[Tut] A guide to making an auto-login</source>
      </item>
      <item>
        <title>[Tut] A guide to making an auto-login</title>
        <dc:creator><![CDATA[@uncfan1119 uncfan1119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/uncfan1119">@uncfan1119</a> wrote:</p>
          <blockquote>
              <p>Nice. And what they said ^</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916/4</link>
        <pubDate>Wed, 04 Oct 2006 19:31:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-16916-4</guid>
        <source url="https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916.rss">[Tut] A guide to making an auto-login</source>
      </item>
      <item>
        <title>[Tut] A guide to making an auto-login</title>
        <dc:creator><![CDATA[@Weibs Weibs]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/weibs">@Weibs</a> wrote:</p>
          <blockquote>
              <p>Very nice, I learned something from this, too :P.</p>
<p>And Congrats on the Scar cup <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916/3</link>
        <pubDate>Wed, 04 Oct 2006 07:40:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-16916-3</guid>
        <source url="https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916.rss">[Tut] A guide to making an auto-login</source>
      </item>
      <item>
        <title>[Tut] A guide to making an auto-login</title>
        <dc:creator><![CDATA[@bullzeye95 bullzeye]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bullzeye95">@bullzeye95</a> wrote:</p>
          <blockquote>
              <p>Ohh nice tut (though I’m way beond this), and congratz on the SCAR cup <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=9" title=":smiley:" class="emoji" alt=":smiley:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916/2</link>
        <pubDate>Wed, 04 Oct 2006 07:04:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-16916-2</guid>
        <source url="https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916.rss">[Tut] A guide to making an auto-login</source>
      </item>
      <item>
        <title>[Tut] A guide to making an auto-login</title>
        <dc:creator><![CDATA[@The_Un-Named The Un-Named]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_un-named">@The_Un-Named</a> wrote:</p>
          <blockquote>
              <p>If a mod likes this, can they move it to the tutorials section?  ;D</p>
<p>I reccomend using <a href="http://www.moparisthebest.org:82/smf/index.php/topic,24824.0.html" data-bbcode="true" rel="nofollow noopener">this</a> tut if you are new to scripting.</p>
<p>This tut will probally use the following procedures:</p>
<p>[scar]OpenWebPage(URL: String);<br>
FindBitmap(bitmap : integer; var x, y : integer);<br>
FindBitmapSpiralTolerance(bitmap: Integer; var x, y: Integer; x1, y1, x2, y2: Integer; Tolerance: Integer);<br>
MoveMouseSmoothEx(x,y: integer; minsleeptime, maxsleeptime, maxdistance, gravity, forces: Integer);<br>
Random(range: integer);[/scar]</p>
<p>We could also use arrays, case … of, const.</p>
<p>Lets start with bitmaps. Bitmaps are an easy way to find object, they don’t work too well on the runescape screen, but do for inventory ect. To take a bitmap, press the prnt screen button on your keyboard, this is usually next to the f12. (To the right). Open a program like paint and paste it. Now, large bitmaps tend to lag so you should only get the bits you need. Save the cropped image as a bitmap, if your not sure how to do this, in the name box enter “bitmapname.bmp” WITH the quotes. Once we got our bitmap, open SCAR, navigate to Script(alt + s) and scroll down to “Picture to String”. Find your bitmap you saved earlier and select all of it. (Hold your mouse to the upper most left hand corner and drag it to the bottom right.) You don’t need to crop in paint but it’s advised, you can insted press the + in the box on the SCAR Bitmap Loader and select what you want. When your finished just press ok and in the debug box you should get some data. It may be big in size, if it’s too big then try a diffrent bitmap.</p>
<p>Generally in paint you should black-out what your not using to save space on the bitmap. You should get a bitmap of the play button on the <a href="http://runescape.com" rel="nofollow noopener">runescape.com</a> website, and get the string. I have got the TI in the existing on the play button on runescape, since it’s unique on the web-page. Here it is:</p>
<p>[scar]  play := BitmapFromString(19, 17, ‘z78DA33301818E062E8646EEE’ +<br>
‘4C0989DFB4916923F1A14D3B5DA3368EDA386AE3A88D23C1465A0’ +<br>
‘0008F3D8B80’);[/scar]</p>
<p>Right, now you need to declare your bitmap as an integer. To use bitmaps all you need to do is put them in the main line, I reccomend putting them in a procedure such as “LoadBitmaps” then just declaring Loadbitmaps;" in the main line to save space on it. Here’s what I have so far:</p>
<p>[scar]program AutoLogin;</p>
<p>var<br>
play : integer;</p>
<p>procedure LoadBitmaps;<br>
begin<br>
play := BitmapFromString(19, 17, ‘z78DA33301818E062E8646EEE’ +<br>
‘4C0989DFB4916923F1A14D3B5DA3368EDA386AE3A88D23C1465A0’ +<br>
‘0008F3D8B80’);<br>
end;</p>
<p>begin<br>
LoadBitmaps;<br>
end.[/scar]</p>
<p>Right, before we can get on we need to get some more bitmaps. We need 1 of the low detail(since SCAR works best on low-detail) and one of the “Choose Best Free World For Me” button since most autoers will be free-to-play accounts that aren’t mains. We also need a pic of the “Existing User” on the runescape applet and the “Login”. The low detail &amp; free one might be large but that’s ok. Once you have all of them chuck them in the LoadBitmaps procedure and declare them as vars. We should also make a procedure to destroy all of the bitmaps to free up memory SCAR is using. I’m using this as an example, and I don’t think I should need to explain it.<br>
[scar]procedure DestroyBitmaps;<br>
begin<br>
FreeBitmap(play);<br>
FreeBitmap(lowdetail);<br>
FreeBitmap(free);<br>
FreeBitmap(exist);<br>
FreeBitmap(login);<br>
end;[/scar]</p>
<p>That destroys all of the bitmaps used in this:<br>
[scar]program AutoLogin;</p>
<p>var<br>
play, lowdetail, free, exist, login : Integer;</p>
<p>procedure LoadBitmaps;<br>
begin<br>
play := BitmapFromString(19, 17, ‘z78DA33301818E062E8646EEE’ +<br>
‘4C0989DFB4916923F1A14D3B5DA3368EDA386AE3A88D23C1465A0’ +<br>
‘0008F3D8B80’);<br>
lowdetail := BitmapFromString(32, 4, ‘z78DA5552C98D45210C6B’ +<br>
‘09B27384F0E8BFA4E1630E8C90A228ABED205F6945CCAB96CE51A’ +<br>
‘8D455738CB6BEDF9B9E2BA3529945776E6745296AA092A2D452BD’ +<br>
‘70A5F6B5DE5B4757E6909EF0453999C9486A13A3468A2EF8A9FD6’ +<br>
‘B722B831BF99D70E2EC35AA616FE356C3DFF917CFC1FFE2993934’ +<br>
‘65D9945C1EAE9BDBC14F5CB30AB620C2B1592B7BF11D3FBCD075E’ +<br>
‘DAB80572E0D5C800A13B0EB5569968CBED698E3630B0D31D48799’ +<br>
‘9B218EC9EA1CAC501E2C2295A4AFFED98CBBFD99FFC6AFFFA0852’ +<br>
‘6CD7E8C2F12743D8AB96953B5E021028B5BB350EEFB1C8E1A14A4’ +<br>
‘E8FAC6D05130B36F13762F7BB6031B90E30FBCBAFDF3DFF7B2801’ +<br>
‘AC7BA4BC8BD05F043BDF72FBDAC7B77DD5BCF057177D87DE6A4B8’ +<br>
‘7FF8D4033FB2A6D245DE697FF5E6B08A’);<br>
free := BitmapFromString(23, 14, ‘z78DAA5554972C3300CFB9237’ +<br>
‘2D3C4256FCFF27150415B749D3A6E3FAC0F1C814048120DD0A3AB’ +<br>
‘656B1636A1966D60CBBEDADA0596B0BBAA1CDB8F17D65C4881BE3’ +<br>
‘6DFAF230F320C20A3013FE55EFC6CC2E1CC7749C3EFDF03013989’ +<br>
‘9693AA5596D8908994C76BEC7CAA23831266166E690E1134EC3C2’ +<br>
‘7CB3CE58AC30138C8E907947BF8B76E1866A9ED9AD3C20CC5C3F7’ +<br>
‘4968D5356463B575C19BF57D73AC6D7EC5F9F7080E9E1469F4CAA’ +<br>
‘D6ABB33DBF06C3D5590D0422B33AB14B4CA64B0F991CD4C4752BA’ +<br>
‘A5D7D939F9879C80F99BB92ADDCEFAA267268C1E72293957833F9’ +<br>
‘84AADDD29BFC2C671629208559B5A82F5405E3FA249EEE5573CDA’ +<br>
‘56478CFB40BB6BF622287E4A1C9FEEE462C9357DC31D3A96A2793’ +<br>
‘3AFAE5EED28D7C405F099339A69564B3FC5C5FAA1D4CECF4FCDD6’ +<br>
‘F7EA3BBC7A0F73A1C92792E3BEB54E906C7AFEC8BA2EE083EE131’ +<br>
‘F7B30D1FCAC3AC667DE525A9BD486D28868689F9C5166122AA10E’ +<br>
‘B5F399CDDB7D33965F4266CBBE813E2F0461B7922741BA7EBC4B1’ +<br>
‘F2ADE39E543DB08E2AA8B32E32B9E374CDC0FD71DA8C9C9896AAD’ +<br>
‘DCBEEEBBC8BE64C4CB06B4C88E2733531EED189BFF47B74C4539F’ +<br>
‘7A17B33AF175FD07133AF1AC0B87DCCF53FDECB53EE670FA64826’ +<br>
‘94CBFE5B73ABE61C29A500DF789F74EFADB8DA8007B041573F539’ +<br>
‘7F4312C31EFFA9AB938D8ECDFE17638DFCAF3AFF6917ABCA7C9DF’ +<br>
‘B01E0629E63’);<br>
exist := BitmapFromString(31, 10, ‘z78DA7373230C0C061498589’ +<br>
‘8389A9A404864F1C1E3425C00970B475D4EBC8DB470397EBBA8EB’ +<br>
‘77E273961B957222FD7D4ABB10234FCDC086007936522B6C8787C’ +<br>
‘BF1BB8A5A61425E5EC354090054C09348’);<br>
login := BitmapFromString(35, 7, ‘z78DA33313231317175430206’ +<br>
‘44006347632713132869646C6CEC04210D2806A4BA04139890E52’ +<br>
‘3371C80545DE4F914BF39A4FA08974A7A8A23CB628A985898389A’ +<br>
‘9A0C2D1FE1171FF5D150F41131B98FD492813C93C9130700BC9A4’ +<br>
‘B0F’);<br>
end;</p>
<p>procedure DestroyBitmaps;<br>
begin<br>
FreeBitmap(play);<br>
FreeBitmap(lowdetail);<br>
FreeBitmap(free);<br>
FreeBitmap(exist);<br>
FreeBitmap(login);<br>
end;</p>
<p>begin<br>
LoadBitmaps;<br>
end.[/scar] script.</p>
<p>You might need to adjust it to your scripts needs but we should be fine.</p>
<p>So, now we have our bitmaps, our bitmap destroyer we can get on. I’m going to choose to make our mouse function first.<br>
“procedure Mouse(x, y, rx, ry : integer; click : boolean);”</p>
<p>x, y Are the coords we will move to, rx, ry are the random coords we will use(to make the script less detectable) and click determins if it’s right or left click.</p>
<p>For the start, I will use<br>
“rx := rx + 1;<br>
ry := ry + 1;<br>
x := x + Random(rx) - Random(rx);<br>
y := y + Random(ry) - Random(ry);”<br>
this. The first 2 lines just add 1 to the random, so it dosen’t return 0, the bottom 2 randomize x and y. Lets take a look at MoveMouseSmoothEx in the manual before we use it.</p>
<p>“procedure MoveMouseSmoothEx(x,y: integer; minsleeptime, maxsleeptime, maxdistance, gravity, forces: Integer) - simulate humanlike mouse movement with more customizable parameters. By default MinSleepTime = 1; MaxSleepTime = 3; MaxDistance = 45; Gravity = 20; Forces = 10. Minsleeptime and Maxsleeptime limit pause between mouse cursor jumps, MaxDistance is maximal allowed distance between mouse jumps, Gravity is how much mouse tends to reach destination, Forces are like random winds, hand shaking simulation.”</p>
<p>I’m going to use the defaults to some extent but you should experiment for your own needs. Here is my finished Mouse procedure:<br>
[scar]procedure Mouse(x, y, rx, ry : integer; click : boolean);<br>
begin<br>
rx := rx + 1;<br>
ry := ry + 1;<br>
x := x + Random(rx) - Random(rx);<br>
y := y + Random(ry) - Random(ry);<br>
MoveMouseSmoothEx(x, y, 10, 15, 45, 20, 10);<br>
if click then<br>
begin<br>
HoldMouse(rx, ry, true);<br>
Wait(15 + Random(30));<br>
ReleaseMouse(rx, ry, true);<br>
end else<br>
HoldMouse(rx, ry, false);<br>
Wait(15 + Random(30));<br>
ReleaseMouse(rx, ry, false);<br>
end;[/scar]</p>
<p>“if click then”<br>
Again, my style of code. You can use “if click := true then” but you don’t need to since scar checks if the boolean is true unless stated otherwise.</p>
<p>"   HoldMouse(rx, ry, true);<br>
Wait(15 + Random(30));<br>
ReleaseMouse(rx, ry, true);"<br>
Basically stimulates pressing a mouse humanish. The bottom one is the same but right click.</p>
<p>So, to use the Mouse command now you would do somthing like Mouse(x, y, 5, 5, True) to left click, Mouse(x, y, 5, 5, False) to right click. I suggest not using too high random mouse moves since it might not click the target. 3, 3 Work perfect for most things.</p>
<p>We should now make a procedure to find the RuneScape window, since you need to select the window to find bitmaps.<br>
[scar]procedure SelectWindow;<br>
begin<br>
FindWindowTitlePart(‘the massive online adventure game’, false);<br>
end;[/scar]</p>
<p>Again, just an example and I’m sure I don’t need to explain it.</p>
<p>So, right now we have bitmaps, mouse commands and finding the window procedures. I think we should make a procedure to find the bitmap and click it. Here is somthing I made earlier:<br>
[scar]<br>
procedure ClickBitmap(bitmap, x, y, x1, y1, x2, y2, tol : integer);<br>
begin<br>
repeat<br>
if FindBitmapSpiralTolerance(bitmap, x, y, x1, y1, x2, y2, tol) then<br>
begin<br>
Mouse(x, y, 4, 4, true);<br>
Wait(100 + Random(100));<br>
end;<br>
until FindBitmapSpiralTolerance(bitmap, x, y, x1, y1, x2, y2, tol);<br>
end;[/scar]</p>
<p>Lets break it down. FindBitmapSpiralTolerance is a procedure to find a bitmap. Tolerance is basically to use a similar color, I can’t explain it too well but say the bitmap uses color 98942, if the tolerance is 2 it will search for 98940, 98941, 98942, 98943, 98942. If it’s higher, well, you get the picture. x1, y1, x2, y2 is the box it searches in. Let me draw an example:</p>
<p>x1, y1<br>
|<br>
V</p>
<hr>
<p>|            |<br>
|            |<br>
|            |<br>
|_______ |   &lt;-- x2, y2</p>
<p>You can say pic the first coords at the top left, these 2 coords are x1, y1 and pick the second 2 coords at the bottom right, these would be x2, y2.</p>
<p>x1, y1, x2, y2 Can also be xs, ys, xe, ye. <em>NOTE: The repeat is there to save ALOT of space on the main line.</em></p>
<p>So, what else will we might need? OpenWebPage(URL: string); I don’t think we need a procedure for that. So, here’s my script right now:<br>
[scar]program AutoLogin;</p>
<p>var<br>
play, lowdetail, free, exist, login : Integer;<br>
x1, y1, w1, h1 : Integer; // Just temp.</p>
<p>procedure LoadBitmaps;<br>
begin<br>
play := BitmapFromString(19, 17, ‘z78DA33301818E062E8646EEE’ +<br>
‘4C0989DFB4916923F1A14D3B5DA3368EDA386AE3A88D23C1465A0’ +<br>
‘0008F3D8B80’);<br>
lowdetail := BitmapFromString(32, 4, ‘z78DA5552C98D45210C6B’ +<br>
‘09B27384F0E8BFA4E1630E8C90A228ABED205F6945CCAB96CE51A’ +<br>
‘8D455738CB6BEDF9B9E2BA3529945776E6745296AA092A2D452BD’ +<br>
‘70A5F6B5DE5B4757E6909EF0453999C9486A13A3468A2EF8A9FD6’ +<br>
‘B722B831BF99D70E2EC35AA616FE356C3DFF917CFC1FFE2993934’ +<br>
‘65D9945C1EAE9BDBC14F5CB30AB620C2B1592B7BF11D3FBCD075E’ +<br>
‘DAB80572E0D5C800A13B0EB5569968CBED698E3630B0D31D48799’ +<br>
‘9B218EC9EA1CAC501E2C2295A4AFFED98CBBFD99FFC6AFFFA0852’ +<br>
‘6CD7E8C2F12743D8AB96953B5E021028B5BB350EEFB1C8E1A14A4’ +<br>
‘E8FAC6D05130B36F13762F7BB6031B90E30FBCBAFDF3DFF7B2801’ +<br>
‘AC7BA4BC8BD05F043BDF72FBDAC7B77DD5BCF057177D87DE6A4B8’ +<br>
‘7FF8D4033FB2A6D245DE697FF5E6B08A’);<br>
free := BitmapFromString(23, 14, ‘z78DAA5554972C3300CFB9237’ +<br>
‘2D3C4256FCFF27150415B749D3A6E3FAC0F1C814048120DD0A3AB’ +<br>
‘656B1636A1966D60CBBEDADA0596B0BBAA1CDB8F17D65C4881BE3’ +<br>
‘6DFAF230F320C20A3013FE55EFC6CC2E1CC7749C3EFDF03013989’ +<br>
‘9693AA5596D8908994C76BEC7CAA23831266166E690E1134EC3C2’ +<br>
‘7CB3CE58AC30138C8E907947BF8B76E1866A9ED9AD3C20CC5C3F7’ +<br>
‘4968D5356463B575C19BF57D73AC6D7EC5F9F7080E9E1469F4CAA’ +<br>
‘D6ABB33DBF06C3D5590D0422B33AB14B4CA64B0F991CD4C4752BA’ +<br>
‘A5D7D939F9879C80F99BB92ADDCEFAA267268C1E72293957833F9’ +<br>
‘84AADDD29BFC2C671629208559B5A82F5405E3FA249EEE5573CDA’ +<br>
‘56478CFB40BB6BF622287E4A1C9FEEE462C9357DC31D3A96A2793’ +<br>
‘3AFAE5EED28D7C405F099339A69564B3FC5C5FAA1D4CECF4FCDD6’ +<br>
‘F7EA3BBC7A0F73A1C92792E3BEB54E906C7AFEC8BA2EE083EE131’ +<br>
‘F7B30D1FCAC3AC667DE525A9BD486D28868689F9C5166122AA10E’ +<br>
‘B5F399CDDB7D33965F4266CBBE813E2F0461B7922741BA7EBC4B1’ +<br>
‘F2ADE39E543DB08E2AA8B32E32B9E374CDC0FD71DA8C9C9896AAD’ +<br>
‘DCBEEEBBC8BE64C4CB06B4C88E2733531EED189BFF47B74C4539F’ +<br>
‘7A17B33AF175FD07133AF1AC0B87DCCF53FDECB53EE670FA64826’ +<br>
‘94CBFE5B73ABE61C29A500DF789F74EFADB8DA8007B041573F539’ +<br>
‘7F4312C31EFFA9AB938D8ECDFE17638DFCAF3AFF6917ABCA7C9DF’ +<br>
‘B01E0629E63’);<br>
exist := BitmapFromString(31, 10, ‘z78DA7373230C0C061498589’ +<br>
‘8389A9A404864F1C1E3425C00970B475D4EBC8DB470397EBBA8EB’ +<br>
‘77E273961B957222FD7D4ABB10234FCDC086007936522B6C8787C’ +<br>
‘BF1BB8A5A61425E5EC354090054C09348’);<br>
login := BitmapFromString(35, 7, ‘z78DA33313231317175430206’ +<br>
‘44006347632713132869646C6CEC04210D2806A4BA04139890E52’ +<br>
‘3371C80545DE4F914BF39A4FA08974A7A8A23CB628A985898389A’ +<br>
‘9A0C2D1FE1171FF5D150F41131B98FD492813C93C9130700BC9A4’ +<br>
‘B0F’);<br>
end;</p>
<p>procedure Mouse(x, y, rx, ry : integer; click : boolean);<br>
begin<br>
rx := rx + 1;<br>
ry := ry + 1;<br>
x := x + Random(rx) - Random(rx);<br>
y := y + Random(ry) - Random(ry);<br>
MoveMouseSmoothEx(x, y, 10, 15, 45, 20, 10);<br>
if click then<br>
begin<br>
HoldMouse(rx, ry, true);<br>
Wait(15 + Random(30));<br>
ReleaseMouse(rx, ry, true);<br>
end else<br>
HoldMouse(rx, ry, false);<br>
Wait(15 + Random(30));<br>
ReleaseMouse(rx, ry, false);<br>
end;</p>
<p>procedure SelectWindow;<br>
begin<br>
FindWindowTitlePart(‘the massive online adventure game’, false);<br>
end;</p>
<p>procedure ClickBitmap(bitmap, x, y, x1, y1, x2, y2, tol : integer);<br>
begin<br>
repeat<br>
if FindBitmapSpiralTolerance(bitmap, x, y, x1, y1, x2, y2, tol) then<br>
begin<br>
Mouse(x, y, 4, 4, true);<br>
Wait(100 + Random(100));<br>
end;<br>
until FindBitmapSpiralTolerance(bitmap, x, y, x1, y1, x2, y2, tol);<br>
end;</p>
<p>procedure DestroyBitmaps;<br>
begin<br>
FreeBitmap(play);<br>
FreeBitmap(lowdetail);<br>
FreeBitmap(free);<br>
FreeBitmap(exist);<br>
FreeBitmap(login);<br>
end;</p>
<p>begin<br>
LoadBitmaps;<br>
end.[/scar]</p>
<p>Yours should look somthing like this. So, lets build the main-line now. <em>NOTE: You should adjust this to your needs</em>.</p>
<p>[scar]begin<br>
LoadBitmaps;<br>
OpenWebPage(‘<a href="http://www.runescape.com" rel="nofollow noopener">http://www.runescape.com</a>’);<br>
SelectWindow;<br>
GetClientDimensions(w1, h1);<br>
ClickBitmap(play, x1, y1, 1, 1, w1, h1, 5);<br>
SelectWindow;<br>
ClickBitmap(lowdetail, x1, y1, 1, 1, w1, h1, 5);<br>
SelectWindow;<br>
ClickBitmap(free, x1, y1, 1, 1, w1, h1, 5);<br>
SelectWindow;<br>
ClickBitmap(exist, x1, y1, 1, 1, w1, h1, 5);<br>
end.[/scar]</p>
<p>You can see a slight pattern, can’t you? But, before we can use this we must add a const for our username and password. I’m going to use:</p>
<p>const<br>
UserName = ‘username’;<br>
PassWord = ‘password’;</p>
<p>Just add that at the top, below program and before vars. It should look somthing like this now:<br>
[scar]program AutoLogin;</p>
<p>const<br>
UserName = ‘username’;<br>
PassWord = ‘password’;</p>
<p>var<br>
play, lowdetail, free, exist, login : Integer;<br>
x1, y1, w1, h1 : Integer; // Just temp.[/scar]</p>
<p>We will now add the procedure, from <a href="http://www.moparisthebest.org:82/smf/index.php/topic,24824.0.html" data-bbcode="true" rel="nofollow noopener">this</a> tut.<br>
[scar]procedure SendString(text : string);<br>
var<br>
TempInt, TempInt1 : Integer;<br>
TempChar : Char;<br>
begin<br>
for TempInt := 1 to Length(text) do<br>
begin<br>
TempChar := StrGet(text, TempInt);<br>
TempInt1 := GetKeyCode(TempChar);<br>
KeyDown(TempInt1);<br>
Wait(25 + Random(30));<br>
KeyUp(TempInt1);<br>
Wait(40 + Random(30));<br>
end;<br>
SendKeysVB(’{ENTER}’, True);<br>
end;[/scar]</p>
<p>Now add the following lines to the main line(at the bottom)</p>
<p>[scar]  SendString(UserName);<br>
SendString(PassWord);<br>
ClickBitmap(login, x1, y1, 1, 1, w1, h1, 5);<br>
DestroyBitmaps;[/scar]</p>
<p>There! Your done! My final result:[br][size=1]Posted at: October 03, 2006, 11:52:03 AM[/size][hr][scar]program AutoLogin;</p>
<p>const<br>
UserName = ‘username’;<br>
PassWord = ‘password’;</p>
<p>var<br>
play, lowdetail, free, exist, login : Integer;<br>
x1, y1, w1, h1 : Integer; // Just temp.</p>
<p>procedure LoadBitmaps;<br>
begin<br>
play := BitmapFromString(19, 17, ‘z78DA33301818E062E8646EEE’ +<br>
‘4C0989DFB4916923F1A14D3B5DA3368EDA386AE3A88D23C1465A0’ +<br>
‘0008F3D8B80’);<br>
lowdetail := BitmapFromString(32, 4, ‘z78DA5552C98D45210C6B’ +<br>
‘09B27384F0E8BFA4E1630E8C90A228ABED205F6945CCAB96CE51A’ +<br>
‘8D455738CB6BEDF9B9E2BA3529945776E6745296AA092A2D452BD’ +<br>
‘70A5F6B5DE5B4757E6909EF0453999C9486A13A3468A2EF8A9FD6’ +<br>
‘B722B831BF99D70E2EC35AA616FE356C3DFF917CFC1FFE2993934’ +<br>
‘65D9945C1EAE9BDBC14F5CB30AB620C2B1592B7BF11D3FBCD075E’ +<br>
‘DAB80572E0D5C800A13B0EB5569968CBED698E3630B0D31D48799’ +<br>
‘9B218EC9EA1CAC501E2C2295A4AFFED98CBBFD99FFC6AFFFA0852’ +<br>
‘6CD7E8C2F12743D8AB96953B5E021028B5BB350EEFB1C8E1A14A4’ +<br>
‘E8FAC6D05130B36F13762F7BB6031B90E30FBCBAFDF3DFF7B2801’ +<br>
‘AC7BA4BC8BD05F043BDF72FBDAC7B77DD5BCF057177D87DE6A4B8’ +<br>
‘7FF8D4033FB2A6D245DE697FF5E6B08A’);<br>
free := BitmapFromString(23, 14, ‘z78DAA5554972C3300CFB9237’ +<br>
‘2D3C4256FCFF27150415B749D3A6E3FAC0F1C814048120DD0A3AB’ +<br>
‘656B1636A1966D60CBBEDADA0596B0BBAA1CDB8F17D65C4881BE3’ +<br>
‘6DFAF230F320C20A3013FE55EFC6CC2E1CC7749C3EFDF03013989’ +<br>
‘9693AA5596D8908994C76BEC7CAA23831266166E690E1134EC3C2’ +<br>
‘7CB3CE58AC30138C8E907947BF8B76E1866A9ED9AD3C20CC5C3F7’ +<br>
‘4968D5356463B575C19BF57D73AC6D7EC5F9F7080E9E1469F4CAA’ +<br>
‘D6ABB33DBF06C3D5590D0422B33AB14B4CA64B0F991CD4C4752BA’ +<br>
‘A5D7D939F9879C80F99BB92ADDCEFAA267268C1E72293957833F9’ +<br>
‘84AADDD29BFC2C671629208559B5A82F5405E3FA249EEE5573CDA’ +<br>
‘56478CFB40BB6BF622287E4A1C9FEEE462C9357DC31D3A96A2793’ +<br>
‘3AFAE5EED28D7C405F099339A69564B3FC5C5FAA1D4CECF4FCDD6’ +<br>
‘F7EA3BBC7A0F73A1C92792E3BEB54E906C7AFEC8BA2EE083EE131’ +<br>
‘F7B30D1FCAC3AC667DE525A9BD486D28868689F9C5166122AA10E’ +<br>
‘B5F399CDDB7D33965F4266CBBE813E2F0461B7922741BA7EBC4B1’ +<br>
‘F2ADE39E543DB08E2AA8B32E32B9E374CDC0FD71DA8C9C9896AAD’ +<br>
‘DCBEEEBBC8BE64C4CB06B4C88E2733531EED189BFF47B74C4539F’ +<br>
‘7A17B33AF175FD07133AF1AC0B87DCCF53FDECB53EE670FA64826’ +<br>
‘94CBFE5B73ABE61C29A500DF789F74EFADB8DA8007B041573F539’ +<br>
‘7F4312C31EFFA9AB938D8ECDFE17638DFCAF3AFF6917ABCA7C9DF’ +<br>
‘B01E0629E63’);<br>
exist := BitmapFromString(31, 10, ‘z78DA7373230C0C061498589’ +<br>
‘8389A9A404864F1C1E3425C00970B475D4EBC8DB470397EBBA8EB’ +<br>
‘77E273961B957222FD7D4ABB10234FCDC086007936522B6C8787C’ +<br>
‘BF1BB8A5A61425E5EC354090054C09348’);<br>
login := BitmapFromString(35, 7, ‘z78DA33313231317175430206’ +<br>
‘44006347632713132869646C6CEC04210D2806A4BA04139890E52’ +<br>
‘3371C80545DE4F914BF39A4FA08974A7A8A23CB628A985898389A’ +<br>
‘9A0C2D1FE1171FF5D150F41131B98FD492813C93C9130700BC9A4’ +<br>
‘B0F’);<br>
end;</p>
<p>procedure Mouse(x, y, rx, ry : integer; click : boolean);<br>
begin<br>
rx := rx + 1;<br>
ry := ry + 1;<br>
x := x + Random(rx) - Random(rx);<br>
y := y + Random(ry) - Random(ry);<br>
MoveMouseSmoothEx(x, y, 10, 15, 45, 20, 10);<br>
if click then<br>
begin<br>
HoldMouse(rx, ry, true);<br>
Wait(15 + Random(30));<br>
ReleaseMouse(rx, ry, true);<br>
end else<br>
HoldMouse(rx, ry, false);<br>
Wait(15 + Random(30));<br>
ReleaseMouse(rx, ry, false);<br>
end;</p>
<p>procedure SelectWindow;<br>
begin<br>
FindWindowTitlePart(‘the massive online adventure game’, false);<br>
end;</p>
<p>procedure ClickBitmap(bitmap, x, y, x1, y1, x2, y2, tol : integer);<br>
begin<br>
repeat<br>
if FindBitmapSpiralTolerance(bitmap, x, y, x1, y1, x2, y2, tol) then<br>
begin<br>
Mouse(x, y, 4, 4, true);<br>
Wait(100 + Random(100));<br>
end;<br>
until FindBitmapSpiralTolerance(bitmap, x, y, x1, y1, x2, y2, tol);<br>
end;</p>
<p>procedure DestroyBitmaps;<br>
begin<br>
FreeBitmap(play);<br>
FreeBitmap(lowdetail);<br>
FreeBitmap(free);<br>
FreeBitmap(exist);<br>
FreeBitmap(login);<br>
end;</p>
<p>procedure SendString(text : string);<br>
var<br>
TempInt, TempInt1 : Integer;<br>
TempChar : Char;<br>
begin<br>
for TempInt := 1 to Length(text) do<br>
begin<br>
TempChar := StrGet(text, TempInt);<br>
TempInt1 := GetKeyCode(TempChar);<br>
KeyDown(TempInt1);<br>
Wait(25 + Random(30));<br>
KeyUp(TempInt1);<br>
Wait(40 + Random(30));<br>
end;<br>
SendKeysVB(’{ENTER}’, True);<br>
end;</p>
<p>begin<br>
LoadBitmaps;<br>
OpenWebPage(‘<a href="http://www.runescape.com" rel="nofollow noopener">http://www.runescape.com</a>’);<br>
SelectWindow;<br>
GetClientDimensions(w1, h1);<br>
ClickBitmap(play, x1, y1, 1, 1, w1, h1, 5);<br>
SelectWindow;<br>
ClickBitmap(lowdetail, x1, y1, 1, 1, w1, h1, 5);<br>
SelectWindow;<br>
ClickBitmap(free, x1, y1, 1, 1, w1, h1, 5);<br>
SelectWindow;<br>
ClickBitmap(exist, x1, y1, 1, 1, w1, h1, 5);<br>
SendString(UserName);<br>
SendString(PassWord);<br>
ClickBitmap(login, x1, y1, 1, 1, w1, h1, 5);<br>
DestroyBitmaps;<br>
end.[/scar]</p>
<p>Good luck, and thanks for reading! (If you need further assistance, pm me.)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916/1</link>
        <pubDate>Tue, 03 Oct 2006 22:00:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-16916-1</guid>
        <source url="https://forum.moparisthebest.com/t/tut-a-guide-to-making-an-auto-login/16916.rss">[Tut] A guide to making an auto-login</source>
      </item>
  </channel>
</rss>
