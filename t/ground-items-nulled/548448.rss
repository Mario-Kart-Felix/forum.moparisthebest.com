<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Ground items nulled</title>
    <link>https://forum.moparisthebest.com/t/ground-items-nulled/548448</link>
    <description>I am using Hyperion/Rs2-Server 474. I have been racking my brain for about a week now and after ripping the register(GroundItem) and createGroundItem(GroundItem) methods apart I have come to the conclusion I have no idea. The problem only occurs when I change regions (ground items are region loaded for each player).

I drop an item or spawn global item drops and one item appears fine. 
[img]http://puu.sh/durTs/a2d3ab8ed7.png[/img]

I then leave the region.
[img]http://puu.sh/durQ1/8435b70398.png[/img]

And return to the item dropped, and there are two, but I can only pick one item up. The other is nulled.
[img]http://puu.sh/durUF/fc0aab7212.png[/img]

When I drop an item, this is what creates the GroundItem. I used different ways to create an item and they all have the same problem:
[code=java]
World.getWorld().createGroundItem(new GroundItem(player.getName(), item, player.getLocation()), player);
World.getWorld().createGroundItem(new GroundItem(&quot;&quot;, new Item(8004, 1), Location.create(2526, 2913, 0)), null);

GroundItem newItem = new GroundItem(null, new Item(4151, 1), Location.create(3233, 3233, 0));
register(newItem, null);

GroundItem newItem = new GroundItem(player.getName(), new Item(4151, 1), Location.create(3233, 3233, 0));
register(newItem, player);
[/code]

My createGroundItem method:
[code=java]
public void createGroundItem(final GroundItem item, final Player player) {
		Tile tile = item.getRegion().getTile(item.getLocation());
		if(item.getItem().getDefinition().isStackable()) {
			if(tile.getGroundItems().size() &gt; 0) {
				for(GroundItem g : tile.getGroundItems()) {
					if(item.isOwnedBy(player.getName()) &amp;&amp; g.getItem().getId() == item.getItem().getId()) {
						long existingItemCount = (long) g.getItem().getCount();
						long newItemCount = (long) item.getItem().getCount();
						long total = existingItemCount + newItemCount;
						long remainder = 0;
						if(total &gt; Integer.MAX_VALUE) {
							total = existingItemCount + (Integer.MAX_VALUE - existingItemCount);
							remainder = (existingItemCount + newItemCount) - Integer.MAX_VALUE;
						}
						g.setItem(new Item(g.getItem().getId(), (int) total));
						if(remainder &gt; 0) {
							if(player != null) {
								player.getInventory().add(new Item(g.getItem().getId(), (int) remainder));
							}
						}
						if(g.isGlobal()) {
							for(Region r : getRegionManager().getSurroundingRegions(item.getLocation())) {
								for(Player p : r.getPlayers()) {
									p.getActionSender().removeGroundItem(g);
									p.getActionSender().sendGroundItem(g);
									logger.info(&quot;We are here if g.isGlobal()&quot;);
									
								}
							}
						} else {
							player.getActionSender().removeGroundItem(g);
							player.getActionSender().sendGroundItem(g);
							logger.info(&quot;We are here if !g.isGlobal()&quot;);
						}
						return;
					}
				}			
			}
		}
		register(item, player);
	}
[/code]

and my register(GroundItem, Player) method:
[code=java]
/**
	 * Registers a new ground item.
	 * @param item The item to register.
	 * @param player The controller.
	 */
	public void register(final GroundItem item, final Player player) {
		item.getRegion().getGroundItems().add(item);
		item.getRegion().getTile(item.getLocation()).getGroundItems().add(item);
		
		if(player != null) {
			player.getActionSender().sendGroundItem(item);			
			submit(new Tickable(100) {
				public void execute() {
					if(item.isRegistered()) {
						for(Region r : getRegionManager().getSurroundingRegions(item.getLocation())) {
							for(Player p : r.getPlayers()) {
								if(!p.getName().equalsIgnoreCase(player.getName())) {
									p.getActionSender().sendGroundItem(item);
									logger.info(&quot;We are here if player != null&quot;);
								}							
							}
						}
						item.setGlobal(true);
					}
					this.stop();
				}
			});
		} else if(player == null || item.getControllerName().length() &lt; 1) {
			for(Region r : getRegionManager().getSurroundingRegions(item.getLocation())) {
				for(Player p : r.getPlayers()) {
					if(player == null || !p.getName().equalsIgnoreCase(player.getName())) {
						p.getActionSender().sendGroundItem(item);
						logger.info(&quot;We are here if player == null&quot;);
					}							
				}
			}
			item.setGlobal(true);	
			
		}
		submit(new Tickable(200) {
			public void execute() {
				if(item.isRegistered()) {
					unregister(item);
				}
				this.stop();
			}
		});
	}
[/code]

As you can see in the register and createGroundItem methods I entered some debugging information to print, and it is telling me that when it registers, Player player is returning null.

[img]http://puu.sh/dutyo/725134560e.png[/img]

Any ideas? If you need any more information let me know. I really need a second pair of eyes on this.</description>
    
    <lastBuildDate>Sun, 14 Dec 2014 17:31:57 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/ground-items-nulled/548448.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Ground items nulled</title>
        <dc:creator><![CDATA[@Hyperon Hyperon]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hyperon">@Hyperon</a> wrote:</p>
          <blockquote>
              <p>I am using Hyperion/Rs2-Server 474. I have been racking my brain for about a week now and after ripping the register(GroundItem) and createGroundItem(GroundItem) methods apart I have come to the conclusion I have no idea. The problem only occurs when I change regions (ground items are region loaded for each player).</p>
<p>I drop an item or spawn global item drops and one item appears fine.<br>
<img src="http://puu.sh/durTs/a2d3ab8ed7.png" alt width="" height=""></p>
<p>I then leave the region.<br>
<img src="http://puu.sh/durQ1/8435b70398.png" alt width="" height=""></p>
<p>And return to the item dropped, and there are two, but I can only pick one item up. The other is nulled.<br>
<img src="http://puu.sh/durUF/fc0aab7212.png" alt width="" height=""></p>
<p>When I drop an item, this is what creates the GroundItem. I used different ways to create an item and they all have the same problem:</p>
<pre><code class="lang-auto">World.getWorld().createGroundItem(new GroundItem(player.getName(), item, player.getLocation()), player);
World.getWorld().createGroundItem(new GroundItem("", new Item(8004, 1), Location.create(2526, 2913, 0)), null);

GroundItem newItem = new GroundItem(null, new Item(4151, 1), Location.create(3233, 3233, 0));
register(newItem, null);

GroundItem newItem = new GroundItem(player.getName(), new Item(4151, 1), Location.create(3233, 3233, 0));
register(newItem, player);</code></pre>
<p>My createGroundItem method:</p>
<pre><code class="lang-auto">public void createGroundItem(final GroundItem item, final Player player) {
		Tile tile = item.getRegion().getTile(item.getLocation());
		if(item.getItem().getDefinition().isStackable()) {
			if(tile.getGroundItems().size() &gt; 0) {
				for(GroundItem g : tile.getGroundItems()) {
					if(item.isOwnedBy(player.getName()) &amp;&amp; g.getItem().getId() == item.getItem().getId()) {
						long existingItemCount = (long) g.getItem().getCount();
						long newItemCount = (long) item.getItem().getCount();
						long total = existingItemCount + newItemCount;
						long remainder = 0;
						if(total &gt; Integer.MAX_VALUE) {
							total = existingItemCount + (Integer.MAX_VALUE - existingItemCount);
							remainder = (existingItemCount + newItemCount) - Integer.MAX_VALUE;
						}
						g.setItem(new Item(g.getItem().getId(), (int) total));
						if(remainder &gt; 0) {
							if(player != null) {
								player.getInventory().add(new Item(g.getItem().getId(), (int) remainder));
							}
						}
						if(g.isGlobal()) {
							for(Region r : getRegionManager().getSurroundingRegions(item.getLocation())) {
								for(Player p : r.getPlayers()) {
									p.getActionSender().removeGroundItem(g);
									p.getActionSender().sendGroundItem(g);
									logger.info("We are here if g.isGlobal()");
									
								}
							}
						} else {
							player.getActionSender().removeGroundItem(g);
							player.getActionSender().sendGroundItem(g);
							logger.info("We are here if !g.isGlobal()");
						}
						return;
					}
				}			
			}
		}
		register(item, player);
	}</code></pre>
<p>and my register(GroundItem, Player) method:</p>
<pre><code class="lang-auto">/**
	 * Registers a new ground item.
	 * @param item The item to register.
	 * @param player The controller.
	 */
	public void register(final GroundItem item, final Player player) {
		item.getRegion().getGroundItems().add(item);
		item.getRegion().getTile(item.getLocation()).getGroundItems().add(item);
		
		if(player != null) {
			player.getActionSender().sendGroundItem(item);			
			submit(new Tickable(100) {
				public void execute() {
					if(item.isRegistered()) {
						for(Region r : getRegionManager().getSurroundingRegions(item.getLocation())) {
							for(Player p : r.getPlayers()) {
								if(!p.getName().equalsIgnoreCase(player.getName())) {
									p.getActionSender().sendGroundItem(item);
									logger.info("We are here if player != null");
								}							
							}
						}
						item.setGlobal(true);
					}
					this.stop();
				}
			});
		} else if(player == null || item.getControllerName().length() &lt; 1) {
			for(Region r : getRegionManager().getSurroundingRegions(item.getLocation())) {
				for(Player p : r.getPlayers()) {
					if(player == null || !p.getName().equalsIgnoreCase(player.getName())) {
						p.getActionSender().sendGroundItem(item);
						logger.info("We are here if player == null");
					}							
				}
			}
			item.setGlobal(true);	
			
		}
		submit(new Tickable(200) {
			public void execute() {
				if(item.isRegistered()) {
					unregister(item);
				}
				this.stop();
			}
		});
	}</code></pre>
<p>As you can see in the register and createGroundItem methods I entered some debugging information to print, and it is telling me that when it registers, Player player is returning null.</p>
<p><img src="http://puu.sh/dutyo/725134560e.png" alt width="" height=""></p>
<p>Any ideas? If you need any more information let me know. I really need a second pair of eyes on this.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/ground-items-nulled/548448/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/ground-items-nulled/548448/1</link>
        <pubDate>Sun, 14 Dec 2014 17:31:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-548448-1</guid>
        <source url="https://forum.moparisthebest.com/t/ground-items-nulled/548448.rss">Ground items nulled</source>
      </item>
  </channel>
</rss>
