<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>My Signlink.Java</title>
    <link>https://forum.moparisthebest.com/t/my-signlink-java/364370</link>
    <description>Ok im starting a webclient, I am following Ric&#39;s webclient Tut - http://www.moparisthebest.com/smf/index.php/topic,336494.0.html When i searched for [code]s = &quot;&quot;;
        s1 = &quot;./cache/&quot;;[/code] I came up with nothing, here is my whole signlink, can someone point out where to put in my client name in at? [code]package sign;

import java.applet.Applet;
import java.io.*;
import java.net.*;

public final class signlink implements Runnable {

    public static void startpriv(InetAddress inetaddress) {
        threadliveid = (int) (Math.random() * 99999999D);
        if (active) {
            try {
                Thread.sleep(500L);
            } catch (Exception _ex) {
            }
            active = false;
        }
        socketreq = 0;
        threadreq = null;
        dnsreq = null;
        savereq = null;
        urlreq = null;
        socketip = inetaddress;
        Thread thread = new Thread(new signlink());
        thread.setDaemon(true);
        thread.start();
        while (!active)
            try {
                Thread.sleep(50L);
            } catch (Exception _ex) {
            }
    }

    public void run() {
        active = true;
        String s = findcachedir();
        uid = getuid(s);
        try {
            File file = new File(s + &quot;main_file_cache.dat&quot;);
            if (file.exists() &amp;&amp; file.length() &gt; 0x3200000L)
                file.delete();
            cache_dat = new RandomAccessFile(s + &quot;main_file_cache.dat&quot;, &quot;rw&quot;);
            for (int j = 0; j &lt; 5; j++)
                cache_idx[j] = new RandomAccessFile(s + &quot;main_file_cache.idx&quot;
                        + j, &quot;rw&quot;);

        } catch (Exception exception) {
            exception.printStackTrace();
        }
        for (int i = threadliveid; threadliveid == i;) {
            if (socketreq != 0) {
                try {
                    socket = new Socket(socketip, socketreq);
                } catch (Exception _ex) {
                    socket = null;
                }
                socketreq = 0;
            } else if (threadreq != null) {
                Thread thread = new Thread(threadreq);
                thread.setDaemon(true);
                thread.start();
                thread.setPriority(threadreqpri);
                threadreq = null;
            } else if (dnsreq != null) {
                try {
                    dns = InetAddress.getByName(dnsreq).getHostName();
                } catch (Exception _ex) {
                    dns = &quot;unknown&quot;;
                }
                dnsreq = null;
            } else if (savereq != null) {
                if (savebuf != null)
                    try {
                        FileOutputStream fileoutputstream = new FileOutputStream(
                                s + savereq);
                        fileoutputstream.write(savebuf, 0, savelen);
                        fileoutputstream.close();
                    } catch (Exception _ex) {
                    }
                if (waveplay) {
                    String wave = s + savereq;
                    waveplay = false;
                }
                if (midiplay) {
                    midi = s + savereq;
                    midiplay = false;
                }
                savereq = null;
            } else if (urlreq != null) {
                try {
                    System.out.println(&quot;urlstream&quot;);
                    urlstream = new DataInputStream((new URL(mainapp
                            .getCodeBase(), urlreq)).openStream());
                } catch (Exception _ex) {
                    urlstream = null;
                }
                urlreq = null;
            }
            try {
                Thread.sleep(50L);
            } catch (Exception _ex) {
            }
        }

    }

    public static String findcachedir() {
        String as[] = { &quot;C:/&quot; };
        if (storeid &lt; 32 || storeid &gt; 34)
            storeid = 32;
        String s = &quot;OldSkool&quot;;
        for (int i = 0; i &lt; as.length; i++)
            try {
                String s1 = as[i];
                if (s1.length() &gt; 0) {
                    File file = new File(s1);
                    if (!file.exists())
                        continue;
                }
                File file1 = new File(s1 + s);
                if (file1.exists() || file1.mkdir())
                    return &quot;./Cache/&quot;;
            } catch (Exception _ex) {
            }
        return null;
    }

    private static int getuid(String s) {
        try {
            File file = new File(s + &quot;uid.dat&quot;);
            if (!file.exists() || file.length() &lt; 4L) {
                DataOutputStream dataoutputstream = new DataOutputStream(
                        new FileOutputStream(s + &quot;uid.dat&quot;));
                dataoutputstream.writeInt((int) (Math.random() * 99999999D));
                dataoutputstream.close();
            }
        } catch (Exception _ex) {
        }
        try {
            DataInputStream datainputstream = new DataInputStream(
                    new FileInputStream(s + &quot;uid.dat&quot;));
            int i = datainputstream.readInt();
            datainputstream.close();
            return i + 1;
        } catch (Exception _ex) {
            return 0;
        }
    }

    public static synchronized Socket opensocket(int i) throws IOException {
        for (socketreq = i; socketreq != 0;)
            try {
                Thread.sleep(50L);
            } catch (Exception _ex) {
            }

        if (socket == null)
            throw new IOException(&quot;could not open socket&quot;);
        else
            return socket;
    }

    public static synchronized DataInputStream openurl(String s)
            throws IOException {
        for (urlreq = s; urlreq != null;)
            try {
                Thread.sleep(50L);
            } catch (Exception _ex) {
            }

        if (urlstream == null)
            throw new IOException(&quot;could not open: &quot; + s);
        else
            return urlstream;
    }

    public static synchronized void dnslookup(String s) {
        dns = s;
        dnsreq = s;
    }

    public static synchronized void startthread(Runnable runnable, int i) {
        threadreqpri = i;
        threadreq = runnable;
    }

    public static synchronized boolean wavesave(byte abyte0[], int i) {
        if (i &gt; 0x1e8480)
            return false;
        if (savereq != null) {
            return false;
        } else {
            wavepos = (wavepos + 1) % 5;
            savelen = i;
            savebuf = abyte0;
            waveplay = true;
            savereq = &quot;sound&quot; + wavepos + &quot;.wav&quot;;
            return true;
        }
    }

    public static synchronized boolean wavereplay() {
        if (savereq != null) {
            return false;
        } else {
            savebuf = null;
            waveplay = true;
            savereq = &quot;sound&quot; + wavepos + &quot;.wav&quot;;
            return true;
        }
    }

    public static synchronized void midisave(byte abyte0[], int i) {
        if (i &gt; 0x1e8480)
            return;
        if (savereq != null) {
        } else {
            midipos = (midipos + 1) % 5;
            savelen = i;
            savebuf = abyte0;
            midiplay = true;
            savereq = &quot;jingle&quot; + midipos + &quot;.mid&quot;;
        }
    }

    public static void reporterror(String s) {
        System.out.println(&quot;Error: &quot; + s);
    }

    private signlink() {
    }

    public static final int clientversion = 317;
    public static int uid;
    public static int storeid = 32;
    public static RandomAccessFile cache_dat = null;
    public static final RandomAccessFile[] cache_idx = new RandomAccessFile[5];
    public static boolean sunjava;
    public static Applet mainapp = null;
    private static boolean active;
    private static int threadliveid;
    private static InetAddress socketip;
    private static int socketreq;
    private static Socket socket = null;
    private static int threadreqpri = 1;
    private static Runnable threadreq = null;
    private static String dnsreq = null;
    public static String dns = null;
    private static String urlreq = null;
    private static DataInputStream urlstream = null;
    private static int savelen;
    private static String savereq = null;
    private static byte[] savebuf = null;
    private static boolean midiplay;
    private static int midipos;
    public static String midi = null;
    public static int midivol;
    public static int midifade;
    private static boolean waveplay;
    private static int wavepos;
    public static int wavevol;
    public static boolean reporterror = true;
    public static String errorname = &quot;&quot;;
}[/code]</description>
    
    <lastBuildDate>Fri, 15 Oct 2010 02:44:43 +0000</lastBuildDate>
    <category>Game Development</category>
    <atom:link href="https://forum.moparisthebest.com/t/my-signlink-java/364370.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>My Signlink.Java</title>
        <dc:creator><![CDATA[@II_ZyZeX_II II ZyZeX II]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ii_zyzex_ii">@II_ZyZeX_II</a> wrote:</p>
          <blockquote>
              <p>Yea my fault, IDK why I cant seem to find shit today, just downloaded notepad++ maybe that will help me</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-signlink-java/364370/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-signlink-java/364370/3</link>
        <pubDate>Fri, 15 Oct 2010 02:44:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-364370-3</guid>
        <source url="https://forum.moparisthebest.com/t/my-signlink-java/364370.rss">My Signlink.Java</source>
      </item>
      <item>
        <title>My Signlink.Java</title>
        <dc:creator><![CDATA[@badger41 badger41]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/badger41">@badger41</a> wrote:</p>
          <blockquote>
              <p>you must be blind,</p>
<p>look for<code>
return "./Cache/";
</code></p>
<p>its not hard…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-signlink-java/364370/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-signlink-java/364370/2</link>
        <pubDate>Fri, 15 Oct 2010 02:32:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-364370-2</guid>
        <source url="https://forum.moparisthebest.com/t/my-signlink-java/364370.rss">My Signlink.Java</source>
      </item>
      <item>
        <title>My Signlink.Java</title>
        <dc:creator><![CDATA[@II_ZyZeX_II II ZyZeX II]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ii_zyzex_ii">@II_ZyZeX_II</a> wrote:</p>
          <blockquote>
              <p>Ok im starting a webclient, I am following Ric’s webclient Tut - <a href="http://www.moparisthebest.com/smf/index.php/topic,336494.0.html" rel="nofollow noopener">http://www.moparisthebest.com/smf/index.php/topic,336494.0.html</a> When i searched for <code>s = "";
        s1 = "./cache/";</code> I came up with nothing, here is my whole signlink, can someone point out where to put in my client name in at? [code]package sign;</p>
<p>import java.applet.Applet;<br>
import <a href="http://java.io" rel="nofollow noopener">java.io</a>.<em>;<br>
import <a href="http://java.net" rel="nofollow noopener">java.net</a>.</em>;</p>
<p>public final class signlink implements Runnable {</p>
<pre><code>public static void startpriv(InetAddress inetaddress) {
    threadliveid = (int) (Math.random() * 99999999D);
    if (active) {
        try {
            Thread.sleep(500L);
        } catch (Exception _ex) {
        }
        active = false;
    }
    socketreq = 0;
    threadreq = null;
    dnsreq = null;
    savereq = null;
    urlreq = null;
    socketip = inetaddress;
    Thread thread = new Thread(new signlink());
    thread.setDaemon(true);
    thread.start();
    while (!active)
        try {
            Thread.sleep(50L);
        } catch (Exception _ex) {
        }
}

public void run() {
    active = true;
    String s = findcachedir();
    uid = getuid(s);
    try {
        File file = new File(s + "main_file_cache.dat");
        if (file.exists() &amp;&amp; file.length() &gt; 0x3200000L)
            file.delete();
        cache_dat = new RandomAccessFile(s + "main_file_cache.dat", "rw");
        for (int j = 0; j &lt; 5; j++)
            cache_idx[j] = new RandomAccessFile(s + "main_file_cache.idx"
                    + j, "rw");

    } catch (Exception exception) {
        exception.printStackTrace();
    }
    for (int i = threadliveid; threadliveid == i;) {
        if (socketreq != 0) {
            try {
                socket = new Socket(socketip, socketreq);
            } catch (Exception _ex) {
                socket = null;
            }
            socketreq = 0;
        } else if (threadreq != null) {
            Thread thread = new Thread(threadreq);
            thread.setDaemon(true);
            thread.start();
            thread.setPriority(threadreqpri);
            threadreq = null;
        } else if (dnsreq != null) {
            try {
                dns = InetAddress.getByName(dnsreq).getHostName();
            } catch (Exception _ex) {
                dns = "unknown";
            }
            dnsreq = null;
        } else if (savereq != null) {
            if (savebuf != null)
                try {
                    FileOutputStream fileoutputstream = new FileOutputStream(
                            s + savereq);
                    fileoutputstream.write(savebuf, 0, savelen);
                    fileoutputstream.close();
                } catch (Exception _ex) {
                }
            if (waveplay) {
                String wave = s + savereq;
                waveplay = false;
            }
            if (midiplay) {
                midi = s + savereq;
                midiplay = false;
            }
            savereq = null;
        } else if (urlreq != null) {
            try {
                System.out.println("urlstream");
                urlstream = new DataInputStream((new URL(mainapp
                        .getCodeBase(), urlreq)).openStream());
            } catch (Exception _ex) {
                urlstream = null;
            }
            urlreq = null;
        }
        try {
            Thread.sleep(50L);
        } catch (Exception _ex) {
        }
    }

}

public static String findcachedir() {
    String as[] = { "C:/" };
    if (storeid &lt; 32 || storeid &gt; 34)
        storeid = 32;
    String s = "OldSkool";
    for (int i = 0; i &lt; as.length; i++)
        try {
            String s1 = as[i];
            if (s1.length() &gt; 0) {
                File file = new File(s1);
                if (!file.exists())
                    continue;
            }
            File file1 = new File(s1 + s);
            if (file1.exists() || file1.mkdir())
                return "./Cache/";
        } catch (Exception _ex) {
        }
    return null;
}

private static int getuid(String s) {
    try {
        File file = new File(s + "uid.dat");
        if (!file.exists() || file.length() &lt; 4L) {
            DataOutputStream dataoutputstream = new DataOutputStream(
                    new FileOutputStream(s + "uid.dat"));
            dataoutputstream.writeInt((int) (Math.random() * 99999999D));
            dataoutputstream.close();
        }
    } catch (Exception _ex) {
    }
    try {
        DataInputStream datainputstream = new DataInputStream(
                new FileInputStream(s + "uid.dat"));
        int i = datainputstream.readInt();
        datainputstream.close();
        return i + 1;
    } catch (Exception _ex) {
        return 0;
    }
}

public static synchronized Socket opensocket(int i) throws IOException {
    for (socketreq = i; socketreq != 0;)
        try {
            Thread.sleep(50L);
        } catch (Exception _ex) {
        }

    if (socket == null)
        throw new IOException("could not open socket");
    else
        return socket;
}

public static synchronized DataInputStream openurl(String s)
        throws IOException {
    for (urlreq = s; urlreq != null;)
        try {
            Thread.sleep(50L);
        } catch (Exception _ex) {
        }

    if (urlstream == null)
        throw new IOException("could not open: " + s);
    else
        return urlstream;
}

public static synchronized void dnslookup(String s) {
    dns = s;
    dnsreq = s;
}

public static synchronized void startthread(Runnable runnable, int i) {
    threadreqpri = i;
    threadreq = runnable;
}

public static synchronized boolean wavesave(byte abyte0[], int i) {
    if (i &gt; 0x1e8480)
        return false;
    if (savereq != null) {
        return false;
    } else {
        wavepos = (wavepos + 1) % 5;
        savelen = i;
        savebuf = abyte0;
        waveplay = true;
        savereq = "sound" + wavepos + ".wav";
        return true;
    }
}

public static synchronized boolean wavereplay() {
    if (savereq != null) {
        return false;
    } else {
        savebuf = null;
        waveplay = true;
        savereq = "sound" + wavepos + ".wav";
        return true;
    }
}

public static synchronized void midisave(byte abyte0[], int i) {
    if (i &gt; 0x1e8480)
        return;
    if (savereq != null) {
    } else {
        midipos = (midipos + 1) % 5;
        savelen = i;
        savebuf = abyte0;
        midiplay = true;
        savereq = "jingle" + midipos + ".mid";
    }
}

public static void reporterror(String s) {
    System.out.println("Error: " + s);
}

private signlink() {
}

public static final int clientversion = 317;
public static int uid;
public static int storeid = 32;
public static RandomAccessFile cache_dat = null;
public static final RandomAccessFile[] cache_idx = new RandomAccessFile[5];
public static boolean sunjava;
public static Applet mainapp = null;
private static boolean active;
private static int threadliveid;
private static InetAddress socketip;
private static int socketreq;
private static Socket socket = null;
private static int threadreqpri = 1;
private static Runnable threadreq = null;
private static String dnsreq = null;
public static String dns = null;
private static String urlreq = null;
private static DataInputStream urlstream = null;
private static int savelen;
private static String savereq = null;
private static byte[] savebuf = null;
private static boolean midiplay;
private static int midipos;
public static String midi = null;
public static int midivol;
public static int midifade;
private static boolean waveplay;
private static int wavepos;
public static int wavevol;
public static boolean reporterror = true;
public static String errorname = "";
</code></pre>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-signlink-java/364370/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-signlink-java/364370/1</link>
        <pubDate>Fri, 15 Oct 2010 02:26:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-364370-1</guid>
        <source url="https://forum.moparisthebest.com/t/my-signlink-java/364370.rss">My Signlink.Java</source>
      </item>
  </channel>
</rss>
