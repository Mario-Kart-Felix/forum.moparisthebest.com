<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Matrix Cut-scene explained</title>
    <link>https://forum.moparisthebest.com/t/matrix-cut-scene-explained/438415</link>
    <description>Im here to explain matrix cut scene&#39;s so you can be making perfect cut scene for your matrix server.

First off the cutscene are done by local x and y which means its on a grid

Imagine the area like this:

[img]http://1.bp.blogspot.com/_NWSHay-_Gtk/R8hsDLaG9XI/AAAAAAAAAKU/DO6Ltp8v7zY/s400/grid.gif[/img]

The side is Y and the bottom is X just like in math

The Grid is 100x100 and done by regions. 

now lets look at where we go to make cutscene&#39;s

Go to 
[CODE]src\com\rs\game\player\cutscenes[/CODE]

and you will see some cutscene&#39;s that were already made by the matrix team

Make a new .java file
Name it what ever you want

and put this in it:
[CODE]
package com.rs.game.player.cutscenes;

import java.util.ArrayList;

import com.rs.game.player.Player;
import com.rs.game.player.cutscenes.actions.CutsceneAction;
import com.rs.game.player.cutscenes.actions.LookCameraAction;
import com.rs.game.player.cutscenes.actions.PosCameraAction;

public class [name of cutscene here] extends Cutscene {

	@Override
	public CutsceneAction[] getActions(Player player) {
		ArrayList&lt;CutsceneAction&gt; actionsList = new ArrayList&lt;CutsceneAction&gt;();
               [B][I][U] (put codes here!)[/U][/I][/B]
		return actionsList.toArray(new CutsceneAction[actionsList.size()]);
	}

	@Override
	public boolean hiddenMinimap() {
		return true;
	}

}[/CODE]

In the [Name of cutscene here] put the name of you cutscene without the []
 If you dont want the map hide change the true into false
Remember this is just a basic cutscene.

now its time to add you cutscene
there are two types of camera movement

First one is the location the camera position:

The code for it:

[CODE]actionsList.add(new PosCameraAction(Local X, Local Y, Height , First Speed, Second Speed, Delay to Next Camera Movement));[/CODE]

Local X: Like i explained before with the grid that this is the where X is on the grid the X and Y meet up for the location.

Local Y: Same as Local X but this is from the side. (make sure you are facing north when getting the coords.)

Height: This one is fun this is how low or high the camera goes 1 being lowest and as it becomes more the higher it gets. You might to do this one by 100&#39;s or 1000&#39;s the normal camera high is 3000 or so and you can go as high as you want.

First Speed: Is how fast the camera moves and 1 being the slowest and 100 being instant do this one by 1&#39;s,and  normal speed is 6 or so.

Second Speed: This is just like First speed so keep it the same.

Delay to Next Camera Movement: This is how long the delay for this camera to finish for the next one to start.

Now that we have that one down time to move on to the next one

This one is where the camera looks:

[CODE]actionsList.add(new LookCameraAction(Local X, Local Y, Height , First Speed, Second Speed, Delay to Next Camera Movement));[/CODE]

The codes for it are just like above except instead of going to that area it looks towards the area instead.

Now that you know those you can make your cutscene and you can use as much of those as you want there is no limit.

Now that your done making you cutscene close and save.

Now find:
[CODE] CutscenesHandler.java[/CODE]

and you will see something like this

[CODE]	public static final void init() {
		try {
			Class&lt;Cutscene&gt; value1 = (Class&lt;Cutscene&gt;) Class
					.forName(EdgeWilderness.class.getCanonicalName());
			handledCutscenes.put(&quot;EdgeWilderness&quot;, value1);
			Class&lt;Cutscene&gt; value2 = (Class&lt;Cutscene&gt;) Class
					.forName(DTPreview.class.getCanonicalName());
			handledCutscenes.put(&quot;DTPreview&quot;, value2);
			Class&lt;Cutscene&gt; value3 = (Class&lt;Cutscene&gt;) Class
					.forName(NexCutScene.class.getCanonicalName());
			handledCutscenes.put(&quot;NexCutScene&quot;, value3);
			Class&lt;Cutscene&gt; value4 = (Class&lt;Cutscene&gt;) Class
					.forName(TowersPkCutscene.class.getCanonicalName());
			handledCutscenes.put(&quot;TowersPkCutscene&quot;, value4);
			Class&lt;Cutscene&gt; value5 = (Class&lt;Cutscene&gt;) Class
					.forName(HomeCutScene.class.getCanonicalName());
			handledCutscenes.put(&quot;HomeCutScene&quot;, value5);
                        [B][I][U](Here)[/U][/I][/B]
		} catch (Throwable e) {
			Logger.handle(e);
		}
	}[/CODE]

And where you see the [B][I][U]Here[/U][/I][/B] add a new code

[CODE]			Class&lt;Cutscene&gt; value6 = (Class&lt;Cutscene&gt;) Class
					.forName([Name of Cutscene].class.getCanonicalName());
			handledCutscenes.put(&quot;[Name of Cutscene]&quot;, value6);[/CODE]

Where it says [Name of Cutscene] put the name of the .java file cutscene you made.

the value should be 6 if this is your first cutscene your making if not then add the value + 1.

And your pretty much done all you need is somewhere to activate the cutscene.

And this is how:

[CODE]player.getCutscenesManager().play(&quot;[Name of Cutscene]&quot;);[/CODE]

so here is a very simple command for it:

[CODE]			if (cmd[0].equalsIgnoreCase(&quot;cutscene&quot;)) {
				player.getCutscenesManager().play(&quot;[Name of Cutscene]&quot;);
				return true;
			}[/CODE]

please let me know if you need any help and there are more tut&#39;s coming.</description>
    
    <lastBuildDate>Thu, 05 Apr 2012 21:00:16 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/matrix-cut-scene-explained/438415.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Matrix Cut-scene explained</title>
        <dc:creator><![CDATA[@Mowiez Mowiez]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mowiez">@Mowiez</a> wrote:</p>
          <blockquote>
              <p>Good job.<br>
Rep++</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/matrix-cut-scene-explained/438415/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/matrix-cut-scene-explained/438415/2</link>
        <pubDate>Thu, 05 Apr 2012 21:00:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-438415-2</guid>
        <source url="https://forum.moparisthebest.com/t/matrix-cut-scene-explained/438415.rss">Matrix Cut-scene explained</source>
      </item>
      <item>
        <title>Matrix Cut-scene explained</title>
        <dc:creator><![CDATA[@sportpirate sportpirate]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sportpirate">@sportpirate</a> wrote:</p>
          <blockquote>
              <p>Im here to explain matrix cut scene’s so you can be making perfect cut scene for your matrix server.</p>
<p>First off the cutscene are done by local x and y which means its on a grid</p>
<p>Imagine the area like this:</p>
<p><img src="http://1.bp.blogspot.com/_NWSHay-_Gtk/R8hsDLaG9XI/AAAAAAAAAKU/DO6Ltp8v7zY/s400/grid.gif" alt width="397" height="385"></p>
<p>The side is Y and the bottom is X just like in math</p>
<p>The Grid is 100x100 and done by regions.</p>
<p>now lets look at where we go to make cutscene’s</p>
<p>Go to</p>
<pre><code class="lang-auto"></code></pre>
<p>and you will see some cutscene’s that were already made by the matrix team</p>
<p>Make a new .java file<br>
Name it what ever you want</p>
<p>and put this in it:</p>
<p>[CODE]<br>
package com.rs.game.player.cutscenes;</p>
<p>import java.util.ArrayList;</p>
<p>import com.rs.game.player.Player;<br>
import com.rs.game.player.cutscenes.actions.CutsceneAction;<br>
import com.rs.game.player.cutscenes.actions.LookCameraAction;<br>
import com.rs.game.player.cutscenes.actions.PosCameraAction;</p>
<p>public class [name of cutscene here] extends Cutscene {</p>
<pre><code>@Override
public CutsceneAction[] getActions(Player player) {
	ArrayList&lt;CutsceneAction&gt; actionsList = new ArrayList&lt;CutsceneAction&gt;();
           [B][I][U] (put codes here!)[/U][/I][/B]
	return actionsList.toArray(new CutsceneAction[actionsList.size()]);
}

@Override
public boolean hiddenMinimap() {
	return true;
}
</code></pre>
<p>}[/CODE]</p>
<p>In the [Name of cutscene here] put the name of you cutscene without the []<br>
If you dont want the map hide change the true into false<br>
Remember this is just a basic cutscene.</p>
<p>now its time to add you cutscene<br>
there are two types of camera movement</p>
<p>First one is the location the camera position:</p>
<p>The code for it:</p>
<pre><code class="lang-auto"></code></pre>
<p>Local X: Like i explained before with the grid that this is the where X is on the grid the X and Y meet up for the location.</p>
<p>Local Y: Same as Local X but this is from the side. (make sure you are facing north when getting the coords.)</p>
<p>Height: This one is fun this is how low or high the camera goes 1 being lowest and as it becomes more the higher it gets. You might to do this one by 100’s or 1000’s the normal camera high is 3000 or so and you can go as high as you want.</p>
<p>First Speed: Is how fast the camera moves and 1 being the slowest and 100 being instant do this one by 1’s,and  normal speed is 6 or so.</p>
<p>Second Speed: This is just like First speed so keep it the same.</p>
<p>Delay to Next Camera Movement: This is how long the delay for this camera to finish for the next one to start.</p>
<p>Now that we have that one down time to move on to the next one</p>
<p>This one is where the camera looks:</p>
<pre><code class="lang-auto"></code></pre>
<p>The codes for it are just like above except instead of going to that area it looks towards the area instead.</p>
<p>Now that you know those you can make your cutscene and you can use as much of those as you want there is no limit.</p>
<p>Now that your done making you cutscene close and save.</p>
<p>Now find:</p>
<pre><code class="lang-auto"></code></pre>
<p>and you will see something like this</p>
<p><code>	public static final void init() {
		try {
			Class&lt;Cutscene&gt; value1 = (Class&lt;Cutscene&gt;) Class
					.forName(EdgeWilderness.class.getCanonicalName());
			handledCutscenes.put("EdgeWilderness", value1);
			Class&lt;Cutscene&gt; value2 = (Class&lt;Cutscene&gt;) Class
					.forName(DTPreview.class.getCanonicalName());
			handledCutscenes.put("DTPreview", value2);
			Class&lt;Cutscene&gt; value3 = (Class&lt;Cutscene&gt;) Class
					.forName(NexCutScene.class.getCanonicalName());
			handledCutscenes.put("NexCutScene", value3);
			Class&lt;Cutscene&gt; value4 = (Class&lt;Cutscene&gt;) Class
					.forName(TowersPkCutscene.class.getCanonicalName());
			handledCutscenes.put("TowersPkCutscene", value4);
			Class&lt;Cutscene&gt; value5 = (Class&lt;Cutscene&gt;) Class
					.forName(HomeCutScene.class.getCanonicalName());
			handledCutscenes.put("HomeCutScene", value5);
                        [B][I][U](Here)[/U][/I][/B]
		} catch (Throwable e) {
			Logger.handle(e);
		}
	}</code></p>
<p>And where you see the <span class="bbcode-b"><span class="bbcode-i"><span class="bbcode-u">Here</span></span></span> add a new code</p>
<p><code>			Class&lt;Cutscene&gt; value6 = (Class&lt;Cutscene&gt;) Class
					.forName([Name of Cutscene].class.getCanonicalName());
			handledCutscenes.put("[Name of Cutscene]", value6);</code></p>
<p>Where it says [Name of Cutscene] put the name of the .java file cutscene you made.</p>
<p>the value should be 6 if this is your first cutscene your making if not then add the value + 1.</p>
<p>And your pretty much done all you need is somewhere to activate the cutscene.</p>
<p>And this is how:</p>
<pre><code class="lang-auto"></code></pre>
<p>so here is a very simple command for it:</p>
<p><code>			if (cmd[0].equalsIgnoreCase("cutscene")) {
				player.getCutscenesManager().play("[Name of Cutscene]");
				return true;
			}</code></p>
<p>please let me know if you need any help and there are more tut’s coming.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/matrix-cut-scene-explained/438415/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/matrix-cut-scene-explained/438415/1</link>
        <pubDate>Wed, 04 Apr 2012 01:36:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-438415-1</guid>
        <source url="https://forum.moparisthebest.com/t/matrix-cut-scene-explained/438415.rss">Matrix Cut-scene explained</source>
      </item>
  </channel>
</rss>
