<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Tutorial to make a Browse Button (TOpenDialog)</title>
    <link>https://forum.moparisthebest.com/t/tutorial-to-make-a-browse-button-topendialog/79460</link>
    <description>[center][b][size=14pt]Tutorial to make a Browse Button (TOpenDialog)[/size][/b]
by Ron[/center]

Screenshot:
[img]http://img76.imageshack.us/img76/4448/browseformlk9.png[/img]

First start off with a new program in SCAR Divi. You should have this.
[code]
program New;
begin
end.
[/code]

Add these variables after &quot;program New;&quot;. You will be creating a form with an edit box, a browse button, a memo box, and of course, the browse window (TOpenDialog).
[code]
var
  frmDesign : TForm;
  Edit1 : TEdit;
  Button1 : TButton;
  OpenDialog1 : TOpenDialog;
  Memo1 : TMemo;
[/code]

Add the Browse procedure code right after the variable code. 
[code]
// When you click on the Browse button, this code will be executed.
procedure Browse(Sender : TObject);
begin
  // First create the OpenDialog.
  OpenDialog1 := TOpenDialog.Create(frmDesign);
  // Set its opening directory to the AppPath or the path to where
  // scar is located on your computer.
  OpenDialog1.InitialDir := AppPath;
  // Make sure in the options that the file exists and opens the file
  // as ReadOnly which means your program can&#39;t write to it.
  OpenDialog1.Options := [ofFileMustExist, ofReadOnly];
  // Set up all the different files you want the Filter to look for.
  // &quot;Text Documents (*.txt)&quot; is the name and &quot;|*.txt|&quot; is the file the
  // dialog displays. The second option is All Files which shows all
  // the files. Notice the single asterisk |*| for All Files.
  OpenDialog1.Filter := &#39;Text Documents (*.txt)|*.txt|&#39; +
                        &#39;All Files|*|&#39;;
  // If the use selected a file, then display the filename and set
  // Edit1.Text to the filename.
  if(OpenDialog1.Execute)then
  begin
    WriteLn(&#39;User selected this file: &#39; + OpenDialog1.FileName);
    Edit1.Text := OpenDialog1.FileName;
    LoadFromFile(Memo1, OpenDialog1.FileName);
  end else // Otherwise show that the User pressed cancel.
    WriteLn(&#39;User pressed cancel!&#39;)
  OpenDialog1.Free; // Finally, free the OpenDialog1 from memory so
                    // your computer will run more efficiently. :)
end;
[/code]

Now add the form procedures right after the browse button code.
[code]
// The main form&#39;s code.
procedure InitForm;
begin
  frmDesign := CreateForm; // Create the form.
  frmDesign.Caption := &#39;Browse (OpenDialog) by Ron&#39;;
  frmDesign.Position := poScreenCenter; // Center the form on your screen.
  frmDesign.Borderstyle := bsSingle; // Make the form not resizeable.
  frmDesign.Bordericons := [biMinimize, biSystemMenu]; // Remove maximize button.
  frmDesign.ClientHeight := 260;
  frmDesign.ClientWidth := 314;
  Edit1 := TEdit.Create(frmDesign); // Create the Edit box.
  Edit1.Parent := frmDesign;
  Edit1.Top := 15;
  Edit1.Left := 15;
  Edit1.Width := 200;
  Button1 := TButton.Create(frmDesign); // Create the Browse Button.
  Button1.Parent := frmDesign;
  Button1.Top := 13;
  Button1.Left := 226;
  Button1.Caption := &#39;Browse&#39;;
  Memo1 := TMemo.Create(frmDesign); // Create the big text box.
  Memo1.Parent := frmDesign;
  Memo1.Top := 50;
  Memo1.Left := 15;
  Memo1.Height := 200;
  Memo1.Width := 284;
  Memo1.Scrollbars := ssBoth; // Make sure the box has both scrollbars.
end;

// Safely call the InitForm.
procedure SafeInitForm;
var
  V : TVariantArray;
begin
  SetArrayLength(V, 0);
  ThreadSafeCall(&#39;InitForm&#39;, V);
end;

// Make the form show itself.
procedure ShowFormModal;
begin
  frmDesign.ShowModal;
end;

// Safely show the form&#39;s modal.
procedure SafeShowFormModal;
var
  V : TVariantArray;
begin
  SetArrayLength(V, 0);
  ThreadSafeCall(&#39;ShowFormModal&#39;, V);
end;

// Here is the MainInitForm used to run the procedures correctly.
procedure MainInitForm;
begin
  // Here is a try/finally/except way of checking for errors. This
  // will try to show the form. If there is an error, it will run the
  // except code. The finally code will always be executed.
  try
    // Show the form.
    SafeInitForm;
    SafeShowFormModal;
  finally
    // Free the form from memory to avoid memory leaks.
    FreeForm(frmDesign);
  except
    // Print an error message if by unfortunate chance that the form
    // experiences an error.
    WriteLn(&#39;An error seems to have occurred in: InitForm&#39;);
  end;
end;
[/code]

Add this code right after &quot;Button1.Caption := &#39;Browse&#39;;&quot; to make the Browse button run the procedure Browse;
[code]
  Button1.OnClick := @Browse; // When the button is clicked, run the procedure Browse;
[/code]

And finally make this your main begin/end. code at the bottom of your script.
[code]
begin
  ClearDebug; // Clear the debug box to make SCAR nice and clean.
  MainInitForm; // Run the MainInitForm! :)
end.
[/code]

Here is all the code with Line by line explanation with comments.
[code]
{------------------------------------------------------------------]
  Title: Browse Button (TOpenDialog) Example by Ron
  Author: Ron
  SCAR Version: SCAR Divi 3.0
  Copyright: April 13, 2007

  Instructions: Just run the script, click browse, select a file
  and see what happens! Read the comments to see how this works!

                                                          Love you,
                                                               Ron
[------------------------------------------------------------------}


program BrowseButtonExampleByRon;

var
  frmDesign : TForm;
  Edit1 : TEdit;
  Button1 : TButton;
  OpenDialog1 : TOpenDialog;
  Memo1 : TMemo;

// When you click on the Browse button, this code will be executed.
procedure Browse(Sender : TObject);
begin
  // First create the OpenDialog.
  OpenDialog1 := TOpenDialog.Create(frmDesign);
  // Set its opening directory to the AppPath or the path to where
  // scar is located on your computer.
  OpenDialog1.InitialDir := AppPath;
  // Make sure in the options that the file exists and opens the file
  // as ReadOnly which means your program can&#39;t write to it.
  OpenDialog1.Options := [ofFileMustExist, ofReadOnly];
  // Set up all the different files you want the Filter to look for.
  // &quot;Text Documents (*.txt)&quot; is the name and &quot;|*.txt|&quot; is the file the
  // dialog displays. The second option is All Files which shows all
  // the files. Notice the single asterisk |*| for All Files.
  OpenDialog1.Filter := &#39;Text Documents (*.txt)|*.txt|&#39; +
                        &#39;All Files|*|&#39;;
  // If the use selected a file, then display the filename and set
  // Edit1.Text to the filename.
  if(OpenDialog1.Execute)then
  begin
    WriteLn(&#39;User selected this file: &#39; + OpenDialog1.FileName);
    Edit1.Text := OpenDialog1.FileName;
    LoadFromFile(Memo1, OpenDialog1.FileName);
  end else // Otherwise show that the User pressed cancel.
    WriteLn(&#39;User pressed cancel!&#39;)
  OpenDialog1.Free; // Finally, free the OpenDialog1 from memory so
                    // your computer will run more efficiently. :)
end;

// The main form&#39;s code.
procedure InitForm;
begin
  frmDesign := CreateForm; // Create the form.
  frmDesign.Caption := &#39;Browse (OpenDialog) by Ron&#39;;
  frmDesign.Position := poScreenCenter; // Center the form on your screen.
  frmDesign.Borderstyle := bsSingle; // Make the form not resizeable.
  frmDesign.Bordericons := [biMinimize, biSystemMenu]; // Remove maximize button.
  frmDesign.ClientHeight := 260;
  frmDesign.ClientWidth := 314;
  Edit1 := TEdit.Create(frmDesign); // Create the Edit box.
  Edit1.Parent := frmDesign;
  Edit1.Top := 15;
  Edit1.Left := 15;
  Edit1.Width := 200;
  Button1 := TButton.Create(frmDesign); // Create the Browse Button.
  Button1.Parent := frmDesign;
  Button1.Top := 13;
  Button1.Left := 226;
  Button1.Caption := &#39;Browse&#39;;
  Button1.OnClick := @Browse; // When the button is clicked, run the procedure Browse;
  Memo1 := TMemo.Create(frmDesign); // Create the big text box.
  Memo1.Parent := frmDesign;
  Memo1.Top := 50;
  Memo1.Left := 15;
  Memo1.Height := 200;
  Memo1.Width := 284;
  Memo1.Scrollbars := ssBoth; // Make sure the box has both scrollbars.
end;

// Safely call the InitForm.
procedure SafeInitForm;
var
  V : TVariantArray;
begin
  SetArrayLength(V, 0);
  ThreadSafeCall(&#39;InitForm&#39;, V);
end;

// Make the form show itself.
procedure ShowFormModal;
begin
  frmDesign.ShowModal;
end;

// Safely show the form&#39;s modal.
procedure SafeShowFormModal;
var
  V : TVariantArray;
begin
  SetArrayLength(V, 0);
  ThreadSafeCall(&#39;ShowFormModal&#39;, V);
end;

// Here is the MainInitForm used to run the procedures correctly.
procedure MainInitForm;
begin
  // Here is a try/finally/except way of checking for errors. This
  // will try to show the form. If there is an error, it will run the
  // except code. The finally code will always be executed.
  try
    // Show the form.
    SafeInitForm;
    SafeShowFormModal;
  finally
    // Free the form from memory to avoid memory leaks.
    FreeForm(frmDesign);
  except
    // Print an error message if by unfortunate chance that the form
    // experiences an error.
    WriteLn(&#39;An error seems to have occurred in: InitForm&#39;);
  end;
end;

begin
  ClearDebug; // Clear the debug box to make SCAR nice and clean.
  MainInitForm; // Run the MainInitForm! :)
end.
[/code]

~Ron :)</description>
    
    <lastBuildDate>Tue, 01 May 2007 07:42:04 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/tutorial-to-make-a-browse-button-topendialog/79460.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Tutorial to make a Browse Button (TOpenDialog)</title>
        <dc:creator><![CDATA[@1337h4x 1337h4x]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/1337h4x">@1337h4x</a> wrote:</p>
          <blockquote>
              <p>[quote=“Bobby, post:8, topic:79460”]is it possible to make this open images? I am thinking about somethikng allong the lines of<br>
wowomg’s image if someone fails the auth check on my scripts :P[/quote]wowomg is a flash thing, not an image, altough you could load it and create your own flash viewer in scar. It would be much easier just to open a wowomg page tbh.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tutorial-to-make-a-browse-button-topendialog/79460/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tutorial-to-make-a-browse-button-topendialog/79460/9</link>
        <pubDate>Tue, 01 May 2007 07:42:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-79460-9</guid>
        <source url="https://forum.moparisthebest.com/t/tutorial-to-make-a-browse-button-topendialog/79460.rss">Tutorial to make a Browse Button (TOpenDialog)</source>
      </item>
      <item>
        <title>Tutorial to make a Browse Button (TOpenDialog)</title>
        <dc:creator><![CDATA[@bobby Bobby]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bobby">@bobby</a> wrote:</p>
          <blockquote>
              <p>is it possible to make this open images? I am thinking about somethikng allong the lines of<br>
wowomg’s image if someone fails the auth check on my scripts <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tutorial-to-make-a-browse-button-topendialog/79460/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tutorial-to-make-a-browse-button-topendialog/79460/8</link>
        <pubDate>Tue, 01 May 2007 04:39:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-79460-8</guid>
        <source url="https://forum.moparisthebest.com/t/tutorial-to-make-a-browse-button-topendialog/79460.rss">Tutorial to make a Browse Button (TOpenDialog)</source>
      </item>
      <item>
        <title>Tutorial to make a Browse Button (TOpenDialog)</title>
        <dc:creator><![CDATA[@The_Un-Named The Un-Named]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_un-named">@The_Un-Named</a> wrote:</p>
          <blockquote>
              <p>Also, you can use TOpenDialog and TSaveDialog in SCAR, example(can’t test):</p>
<p>var<br>
a : TSaveDialog;</p>
<p>begin<br>
a.               &lt;- press space after the dot, or wait a few seconds<br>
end.</p>
<p>And you should be able to see what you can do with it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tutorial-to-make-a-browse-button-topendialog/79460/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tutorial-to-make-a-browse-button-topendialog/79460/7</link>
        <pubDate>Tue, 24 Apr 2007 16:46:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-79460-7</guid>
        <source url="https://forum.moparisthebest.com/t/tutorial-to-make-a-browse-button-topendialog/79460.rss">Tutorial to make a Browse Button (TOpenDialog)</source>
      </item>
      <item>
        <title>Tutorial to make a Browse Button (TOpenDialog)</title>
        <dc:creator><![CDATA[@bobby Bobby]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bobby">@bobby</a> wrote:</p>
          <blockquote>
              <p>THis was very helpful :P. i messed around with it for a while.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tutorial-to-make-a-browse-button-topendialog/79460/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tutorial-to-make-a-browse-button-topendialog/79460/6</link>
        <pubDate>Mon, 23 Apr 2007 07:22:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-79460-6</guid>
        <source url="https://forum.moparisthebest.com/t/tutorial-to-make-a-browse-button-topendialog/79460.rss">Tutorial to make a Browse Button (TOpenDialog)</source>
      </item>
      <item>
        <title>Tutorial to make a Browse Button (TOpenDialog)</title>
        <dc:creator><![CDATA[@Ron Ron]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ron">@Ron</a> wrote:</p>
          <blockquote>
              <p>I wish I could see some comments that found this helpful. <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"> Glad you get it now Bobby. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tutorial-to-make-a-browse-button-topendialog/79460/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tutorial-to-make-a-browse-button-topendialog/79460/5</link>
        <pubDate>Tue, 17 Apr 2007 00:51:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-79460-5</guid>
        <source url="https://forum.moparisthebest.com/t/tutorial-to-make-a-browse-button-topendialog/79460.rss">Tutorial to make a Browse Button (TOpenDialog)</source>
      </item>
      <item>
        <title>Tutorial to make a Browse Button (TOpenDialog)</title>
        <dc:creator><![CDATA[@bobby Bobby]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bobby">@bobby</a> wrote:</p>
          <blockquote>
              <p>I know, I got that once the iamge loaded, lol but it didn’t load right for me the first time. it is really obvios (to me anyway) once you see the picture</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tutorial-to-make-a-browse-button-topendialog/79460/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tutorial-to-make-a-browse-button-topendialog/79460/4</link>
        <pubDate>Mon, 16 Apr 2007 02:25:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-79460-4</guid>
        <source url="https://forum.moparisthebest.com/t/tutorial-to-make-a-browse-button-topendialog/79460.rss">Tutorial to make a Browse Button (TOpenDialog)</source>
      </item>
      <item>
        <title>Tutorial to make a Browse Button (TOpenDialog)</title>
        <dc:creator><![CDATA[@cruel cruel]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cruel">@cruel</a> wrote:</p>
          <blockquote>
              <p>The point is to show how to use the dialog control…<br>
so you can give script users the ability to navigate to files for any purpose you need.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tutorial-to-make-a-browse-button-topendialog/79460/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tutorial-to-make-a-browse-button-topendialog/79460/3</link>
        <pubDate>Mon, 16 Apr 2007 02:23:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-79460-3</guid>
        <source url="https://forum.moparisthebest.com/t/tutorial-to-make-a-browse-button-topendialog/79460.rss">Tutorial to make a Browse Button (TOpenDialog)</source>
      </item>
      <item>
        <title>Tutorial to make a Browse Button (TOpenDialog)</title>
        <dc:creator><![CDATA[@bobby Bobby]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bobby">@bobby</a> wrote:</p>
          <blockquote>
              <p>sorry to be a noob lol but the point of this is?</p>
<p>lol sorry my bad, the image didn’t show up.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tutorial-to-make-a-browse-button-topendialog/79460/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tutorial-to-make-a-browse-button-topendialog/79460/2</link>
        <pubDate>Sat, 14 Apr 2007 11:03:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-79460-2</guid>
        <source url="https://forum.moparisthebest.com/t/tutorial-to-make-a-browse-button-topendialog/79460.rss">Tutorial to make a Browse Button (TOpenDialog)</source>
      </item>
      <item>
        <title>Tutorial to make a Browse Button (TOpenDialog)</title>
        <dc:creator><![CDATA[@Ron Ron]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ron">@Ron</a> wrote:</p>
          <blockquote>
              <p>[center]<span class="bbcode-b">[size=14pt]Tutorial to make a Browse Button (TOpenDialog)[/size]</span><br>
by Ron[/center]</p>
<p>Screenshot:<br>
<img src="http://img76.imageshack.us/img76/4448/browseformlk9.png" alt width="" height=""></p>
<p>First start off with a new program in SCAR Divi. You should have this.</p>
<pre><code class="lang-auto">program New;
begin
end.</code></pre>
<p>Add these variables after “program New;”. You will be creating a form with an edit box, a browse button, a memo box, and of course, the browse window (TOpenDialog).</p>
<pre><code class="lang-auto">var
  frmDesign : TForm;
  Edit1 : TEdit;
  Button1 : TButton;
  OpenDialog1 : TOpenDialog;
  Memo1 : TMemo;</code></pre>
<p>Add the Browse procedure code right after the variable code.</p>
<pre><code class="lang-auto">// When you click on the Browse button, this code will be executed.
procedure Browse(Sender : TObject);
begin
  // First create the OpenDialog.
  OpenDialog1 := TOpenDialog.Create(frmDesign);
  // Set its opening directory to the AppPath or the path to where
  // scar is located on your computer.
  OpenDialog1.InitialDir := AppPath;
  // Make sure in the options that the file exists and opens the file
  // as ReadOnly which means your program can't write to it.
  OpenDialog1.Options := [ofFileMustExist, ofReadOnly];
  // Set up all the different files you want the Filter to look for.
  // "Text Documents (*.txt)" is the name and "|*.txt|" is the file the
  // dialog displays. The second option is All Files which shows all
  // the files. Notice the single asterisk |*| for All Files.
  OpenDialog1.Filter := 'Text Documents (*.txt)|*.txt|' +
                        'All Files|*|';
  // If the use selected a file, then display the filename and set
  // Edit1.Text to the filename.
  if(OpenDialog1.Execute)then
  begin
    WriteLn('User selected this file: ' + OpenDialog1.FileName);
    Edit1.Text := OpenDialog1.FileName;
    LoadFromFile(Memo1, OpenDialog1.FileName);
  end else // Otherwise show that the User pressed cancel.
    WriteLn('User pressed cancel!')
  OpenDialog1.Free; // Finally, free the OpenDialog1 from memory so
                    // your computer will run more efficiently. :)
end;</code></pre>
<p>Now add the form procedures right after the browse button code.</p>
<pre><code class="lang-auto">// The main form's code.
procedure InitForm;
begin
  frmDesign := CreateForm; // Create the form.
  frmDesign.Caption := 'Browse (OpenDialog) by Ron';
  frmDesign.Position := poScreenCenter; // Center the form on your screen.
  frmDesign.Borderstyle := bsSingle; // Make the form not resizeable.
  frmDesign.Bordericons := [biMinimize, biSystemMenu]; // Remove maximize button.
  frmDesign.ClientHeight := 260;
  frmDesign.ClientWidth := 314;
  Edit1 := TEdit.Create(frmDesign); // Create the Edit box.
  Edit1.Parent := frmDesign;
  Edit1.Top := 15;
  Edit1.Left := 15;
  Edit1.Width := 200;
  Button1 := TButton.Create(frmDesign); // Create the Browse Button.
  Button1.Parent := frmDesign;
  Button1.Top := 13;
  Button1.Left := 226;
  Button1.Caption := 'Browse';
  Memo1 := TMemo.Create(frmDesign); // Create the big text box.
  Memo1.Parent := frmDesign;
  Memo1.Top := 50;
  Memo1.Left := 15;
  Memo1.Height := 200;
  Memo1.Width := 284;
  Memo1.Scrollbars := ssBoth; // Make sure the box has both scrollbars.
end;

// Safely call the InitForm.
procedure SafeInitForm;
var
  V : TVariantArray;
begin
  SetArrayLength(V, 0);
  ThreadSafeCall('InitForm', V);
end;

// Make the form show itself.
procedure ShowFormModal;
begin
  frmDesign.ShowModal;
end;

// Safely show the form's modal.
procedure SafeShowFormModal;
var
  V : TVariantArray;
begin
  SetArrayLength(V, 0);
  ThreadSafeCall('ShowFormModal', V);
end;

// Here is the MainInitForm used to run the procedures correctly.
procedure MainInitForm;
begin
  // Here is a try/finally/except way of checking for errors. This
  // will try to show the form. If there is an error, it will run the
  // except code. The finally code will always be executed.
  try
    // Show the form.
    SafeInitForm;
    SafeShowFormModal;
  finally
    // Free the form from memory to avoid memory leaks.
    FreeForm(frmDesign);
  except
    // Print an error message if by unfortunate chance that the form
    // experiences an error.
    WriteLn('An error seems to have occurred in: InitForm');
  end;
end;</code></pre>
<p>Add this code right after “Button1.Caption := ‘Browse’;” to make the Browse button run the procedure Browse;</p>
<pre><code class="lang-auto">  Button1.OnClick := @Browse; // When the button is clicked, run the procedure Browse;</code></pre>
<p>And finally make this your main begin/end. code at the bottom of your script.</p>
<pre><code class="lang-auto">begin
  ClearDebug; // Clear the debug box to make SCAR nice and clean.
  MainInitForm; // Run the MainInitForm! :)
end.</code></pre>
<p>Here is all the code with Line by line explanation with comments.</p>
<pre><code class="lang-auto">{------------------------------------------------------------------]
  Title: Browse Button (TOpenDialog) Example by Ron
  Author: Ron
  SCAR Version: SCAR Divi 3.0
  Copyright: April 13, 2007

  Instructions: Just run the script, click browse, select a file
  and see what happens! Read the comments to see how this works!

                                                          Love you,
                                                               Ron
[------------------------------------------------------------------}


program BrowseButtonExampleByRon;

var
  frmDesign : TForm;
  Edit1 : TEdit;
  Button1 : TButton;
  OpenDialog1 : TOpenDialog;
  Memo1 : TMemo;

// When you click on the Browse button, this code will be executed.
procedure Browse(Sender : TObject);
begin
  // First create the OpenDialog.
  OpenDialog1 := TOpenDialog.Create(frmDesign);
  // Set its opening directory to the AppPath or the path to where
  // scar is located on your computer.
  OpenDialog1.InitialDir := AppPath;
  // Make sure in the options that the file exists and opens the file
  // as ReadOnly which means your program can't write to it.
  OpenDialog1.Options := [ofFileMustExist, ofReadOnly];
  // Set up all the different files you want the Filter to look for.
  // "Text Documents (*.txt)" is the name and "|*.txt|" is the file the
  // dialog displays. The second option is All Files which shows all
  // the files. Notice the single asterisk |*| for All Files.
  OpenDialog1.Filter := 'Text Documents (*.txt)|*.txt|' +
                        'All Files|*|';
  // If the use selected a file, then display the filename and set
  // Edit1.Text to the filename.
  if(OpenDialog1.Execute)then
  begin
    WriteLn('User selected this file: ' + OpenDialog1.FileName);
    Edit1.Text := OpenDialog1.FileName;
    LoadFromFile(Memo1, OpenDialog1.FileName);
  end else // Otherwise show that the User pressed cancel.
    WriteLn('User pressed cancel!')
  OpenDialog1.Free; // Finally, free the OpenDialog1 from memory so
                    // your computer will run more efficiently. :)
end;

// The main form's code.
procedure InitForm;
begin
  frmDesign := CreateForm; // Create the form.
  frmDesign.Caption := 'Browse (OpenDialog) by Ron';
  frmDesign.Position := poScreenCenter; // Center the form on your screen.
  frmDesign.Borderstyle := bsSingle; // Make the form not resizeable.
  frmDesign.Bordericons := [biMinimize, biSystemMenu]; // Remove maximize button.
  frmDesign.ClientHeight := 260;
  frmDesign.ClientWidth := 314;
  Edit1 := TEdit.Create(frmDesign); // Create the Edit box.
  Edit1.Parent := frmDesign;
  Edit1.Top := 15;
  Edit1.Left := 15;
  Edit1.Width := 200;
  Button1 := TButton.Create(frmDesign); // Create the Browse Button.
  Button1.Parent := frmDesign;
  Button1.Top := 13;
  Button1.Left := 226;
  Button1.Caption := 'Browse';
  Button1.OnClick := @Browse; // When the button is clicked, run the procedure Browse;
  Memo1 := TMemo.Create(frmDesign); // Create the big text box.
  Memo1.Parent := frmDesign;
  Memo1.Top := 50;
  Memo1.Left := 15;
  Memo1.Height := 200;
  Memo1.Width := 284;
  Memo1.Scrollbars := ssBoth; // Make sure the box has both scrollbars.
end;

// Safely call the InitForm.
procedure SafeInitForm;
var
  V : TVariantArray;
begin
  SetArrayLength(V, 0);
  ThreadSafeCall('InitForm', V);
end;

// Make the form show itself.
procedure ShowFormModal;
begin
  frmDesign.ShowModal;
end;

// Safely show the form's modal.
procedure SafeShowFormModal;
var
  V : TVariantArray;
begin
  SetArrayLength(V, 0);
  ThreadSafeCall('ShowFormModal', V);
end;

// Here is the MainInitForm used to run the procedures correctly.
procedure MainInitForm;
begin
  // Here is a try/finally/except way of checking for errors. This
  // will try to show the form. If there is an error, it will run the
  // except code. The finally code will always be executed.
  try
    // Show the form.
    SafeInitForm;
    SafeShowFormModal;
  finally
    // Free the form from memory to avoid memory leaks.
    FreeForm(frmDesign);
  except
    // Print an error message if by unfortunate chance that the form
    // experiences an error.
    WriteLn('An error seems to have occurred in: InitForm');
  end;
end;

begin
  ClearDebug; // Clear the debug box to make SCAR nice and clean.
  MainInitForm; // Run the MainInitForm! :)
end.</code></pre>
<p>~Ron <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tutorial-to-make-a-browse-button-topendialog/79460/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tutorial-to-make-a-browse-button-topendialog/79460/1</link>
        <pubDate>Sat, 14 Apr 2007 00:54:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-79460-1</guid>
        <source url="https://forum.moparisthebest.com/t/tutorial-to-make-a-browse-button-topendialog/79460.rss">Tutorial to make a Browse Button (TOpenDialog)</source>
      </item>
  </channel>
</rss>
