<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Groovy</title>
    <link>https://forum.moparisthebest.com/t/groovy/385397</link>
    <description>Well, I&#39;ve decided that I&#39;d like to use Groovy instead of Java for numerous reasons. 

I haven&#39;t done much yet. All I have written so far is establishing a connection with the server and client.

Groovy is a scripting language that is a dynamic language that has just about all the same benefits of Java, but it also combines a lot of beneficial aspects from Python, Ruby etc. You can write Java inside of Groovy and still have it work, you can also run Groovy along side Java in Java applications with no problems as well. There is no longer a Java file + CLASS file, it is simply a .Groovy file which compiles into Java bytecode upon runtime. 

If you wish to find out more information on Groovy, visit - http://groovy.codehaus.org/.

I&#39;m not stating what I&#39;m doing/did to be hard, but it&#39;s a learning experience for me and I just want to update this. 

Keep in mind, I am trying to make this server as small as possible.

Main Class:
[code]class Main 
{
	static void main(args) 
	{
		ServerListener listener = new ServerListener()
		listener.start()
		ServerEngine engine = new ServerEngine()
		engine.start()
	}
}
[/code]

ServerEngine Class:

[code]class ServerEngine extends Thread 
{
	@Override
	void run() 
	{
		println &quot;Server engine initialized...&quot;
		while (true) 
		{
			try 
			{
				long timeAtStart = System.currentTimeMillis()
				long timeAtEnd = System.currentTimeMillis()
				long timeSpentProcessing = timeAtStart - timeAtEnd
				Thread.sleep(600 - timeSpentProcessing)
			} 
			catch (Exception ex) 
			{
				println ex.getMessage()
			}
		}
	}
}
[/code]


ServerListener Class:

[code]import java.net.ServerSocket;
import java.net.Socket;
class ServerListener extends Thread 
{	
	private ServerSocket listenerSocket

	@Override
	void run() 
	{
		println &quot;Starting server listener...&quot;
		try 
		{
			listenerSocket = new ServerSocket(43594)
			println &quot;Listener initialized.&quot;
			while (true) 
			{
				Socket clientSocket = listenerSocket.accept()
				Client client = new Client()
				client.setSocket(clientSocket)
				client.start()
			}
		} 
		catch (Exception ex) 
		{
			println ex.getMessage()
		}
	}
}[/code]


Client Class:

[code]import java.net.Socket;

class Client extends Thread 
{
	private Socket connectionSocket

	@Override
	void run() 
	{
		println &quot;Client thread started.&quot;
		println &quot;Client has successfully connected to the server.&quot;
	}

	void setSocket(Socket connectionSocket) 
	{
		this.connectionSocket = connectionSocket
	}

	Socket getSocket() 
	{
		return connectionSocket
	}
}
[/code]


Server Startup using a bat file (There is a plugin for eclipse to use groovy but I haven&#39;t downloaded yet. ;))

[img]http://imgur.com/VDy9f.png[/img]

This is the server actually accepting the connection from the client (Login isn&#39;t finished lol.)

[img]http://imgur.com/3Dhrh.png[/img]


Here is the file structure and actual size of source. (With Groovy it&#39;ll stay pretty small.

[img]http://imgur.com/p2xia.png[/img]



That&#39;s all for now, I&#39;ll be updating this thread later.

Post comments or questions.</description>
    
    <lastBuildDate>Tue, 08 Mar 2011 22:32:35 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/groovy/385397.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Groovy</title>
        <dc:creator><![CDATA[@glestrts glestrts]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/glestrts">@glestrts</a> wrote:</p>
          <blockquote>
              <p>Goodluck with this. However, I would recommend Scala personally. It seems more actively developed, and I prefer it for numerous reasons (which I will not take the time to write out here).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/groovy/385397/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/groovy/385397/7</link>
        <pubDate>Tue, 08 Mar 2011 22:32:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-385397-7</guid>
        <source url="https://forum.moparisthebest.com/t/groovy/385397.rss">Groovy</source>
      </item>
      <item>
        <title>Groovy</title>
        <dc:creator><![CDATA[@k_a_h_leader Aeolian]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/k_a_h_leader">@k_a_h_leader</a> wrote:</p>
          <blockquote>
              <p>[quote=“Wintercanon, post:5, topic:385397”][quote author=xxxxxx 13 link=topic=481152.msg3523272#msg3523272 date=1299582979]<br>
<em>wrapping my head around this</em> so what is the benefit other than compiling upon startup? I mean say you make a mistake in the programming and wish to compile THEN restart the server. There isn’t any compiling to be done so you can’t see if theres a mistake so there would be alot of offline time unless you code on a copy server and keep compiling that then transfer the update to the main server.</p>
<p>So what exactly makes Groovy better? other than a forgiving nature, I have one of those too but Java &gt; me still.<br>
[/quote]I’m sure Java IDEs still check your code for mistakes. IntelliJ IDEA has a built in Groovy plugin.[/quote]</p>
<p>This.</p>
<p>Not only that but it won’t start unless it compiles any ways. If you’re using the .bat method style of running a server you should have a backup any ways.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/groovy/385397/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/groovy/385397/6</link>
        <pubDate>Tue, 08 Mar 2011 11:48:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-385397-6</guid>
        <source url="https://forum.moparisthebest.com/t/groovy/385397.rss">Groovy</source>
      </item>
      <item>
        <title>Groovy</title>
        <dc:creator><![CDATA[@Wintercanon Wintercanon]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wintercanon">@Wintercanon</a> wrote:</p>
          <blockquote>
              <p>[quote=“xxxxxx 13, post:4, topic:385397”]<em>wrapping my head around this</em> so what is the benefit other than compiling upon startup? I mean say you make a mistake in the programming and wish to compile THEN restart the server. There isn’t any compiling to be done so you can’t see if theres a mistake so there would be alot of offline time unless you code on a copy server and keep compiling that then transfer the update to the main server.</p>
<p>So what exactly makes Groovy better? other than a forgiving nature, I have one of those too but Java &gt; me still.[/quote]I’m sure Java IDEs still check your code for mistakes. IntelliJ IDEA has a built in Groovy plugin.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/groovy/385397/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/groovy/385397/5</link>
        <pubDate>Tue, 08 Mar 2011 11:20:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-385397-5</guid>
        <source url="https://forum.moparisthebest.com/t/groovy/385397.rss">Groovy</source>
      </item>
      <item>
        <title>Groovy</title>
        <dc:creator><![CDATA[@xxxxxx_13 xxxxxx 13]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xxxxxx_13">@xxxxxx_13</a> wrote:</p>
          <blockquote>
              <p><em>wrapping my head around this</em> so what is the benefit other than compiling upon startup? I mean say you make a mistake in the programming and wish to compile THEN restart the server. There isn’t any compiling to be done so you can’t see if theres a mistake so there would be alot of offline time unless you code on a copy server and keep compiling that then transfer the update to the main server.</p>
<p>So what exactly makes Groovy better? other than a forgiving nature, I have one of those too but Java &gt; me still.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/groovy/385397/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/groovy/385397/4</link>
        <pubDate>Tue, 08 Mar 2011 11:16:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-385397-4</guid>
        <source url="https://forum.moparisthebest.com/t/groovy/385397.rss">Groovy</source>
      </item>
      <item>
        <title>Groovy</title>
        <dc:creator><![CDATA[@k_a_h_leader Aeolian]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/k_a_h_leader">@k_a_h_leader</a> wrote:</p>
          <blockquote>
              <p><a href="mailto:Jeffreh@live.com">Jeffreh@live.com</a></p>
<p>It looks a lot like Java due to the fact that I’m still used to Java conventions.</p>
<p>Groovy is so forgiving that you could still use:</p>
<pre><code class="lang-auto"></code></pre>
<p>or</p>
<pre><code class="lang-auto"></code></pre>
<p>or</p>
<pre><code class="lang-auto"></code></pre>
<p>or</p>
<p><code>println("text")
</code><br>
or</p>
<pre><code class="lang-auto"></code></pre>
<p>Here is an example directly from their site:</p>
<p>[code]package <a href="http://tests.io" rel="nofollow noopener">tests.io</a>;</p>
<p>class FileBinaryCategoryTest extends GroovyTestCase<br>
{<br>
void testDownloadBinaryFile()<br>
{<br>
def file = new File(“logo.gif”)</p>
<pre><code>use (FileBinaryCategory)
{
  file &lt;&lt; "http://www.google.com/images/logo.gif".toURL()
}

assert file.length() &gt; 0

file.delete()
</code></pre>
<p>}<br>
}</p>
<p>class FileBinaryCategory<br>
{<br>
def static leftShift(File a_file, URL a_url)<br>
{<br>
def input<br>
def output</p>
<pre><code>try
{
  input = a_url.openStream()
  output = new BufferedOutputStream(new FileOutputStream(a_file))

  output &lt;&lt; input
}
finally
{
   input?.close()
   output?.close()
}
</code></pre>
<p>}<br>
}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/groovy/385397/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/groovy/385397/3</link>
        <pubDate>Tue, 08 Mar 2011 10:10:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-385397-3</guid>
        <source url="https://forum.moparisthebest.com/t/groovy/385397.rss">Groovy</source>
      </item>
      <item>
        <title>Groovy</title>
        <dc:creator><![CDATA[@Wintercanon Wintercanon]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wintercanon">@Wintercanon</a> wrote:</p>
          <blockquote>
              <p>Looks interesting, but I imagine it to be slower than Java due to the missing compiling step…? The source code looks exactly the same as Java without line ending delimiters or brace encapsulating. Also it looks as if you’re rewriting winterLove, mind if we discuss this over Messenger?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/groovy/385397/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/groovy/385397/2</link>
        <pubDate>Tue, 08 Mar 2011 10:06:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-385397-2</guid>
        <source url="https://forum.moparisthebest.com/t/groovy/385397.rss">Groovy</source>
      </item>
      <item>
        <title>Groovy</title>
        <dc:creator><![CDATA[@k_a_h_leader Aeolian]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/k_a_h_leader">@k_a_h_leader</a> wrote:</p>
          <blockquote>
              <p>Well, I’ve decided that I’d like to use Groovy instead of Java for numerous reasons.</p>
<p>I haven’t done much yet. All I have written so far is establishing a connection with the server and client.</p>
<p>Groovy is a scripting language that is a dynamic language that has just about all the same benefits of Java, but it also combines a lot of beneficial aspects from Python, Ruby etc. You can write Java inside of Groovy and still have it work, you can also run Groovy along side Java in Java applications with no problems as well. There is no longer a Java file + CLASS file, it is simply a .Groovy file which compiles into Java bytecode upon runtime.</p>
<p>If you wish to find out more information on Groovy, visit - <a href="http://groovy.codehaus.org/" rel="nofollow noopener">http://groovy.codehaus.org/</a>.</p>
<p>I’m not stating what I’m doing/did to be hard, but it’s a learning experience for me and I just want to update this.</p>
<p>Keep in mind, I am trying to make this server as small as possible.</p>
<p>Main Class:</p>
<p><code>class Main 
{
	static void main(args) 
	{
		ServerListener listener = new ServerListener()
		listener.start()
		ServerEngine engine = new ServerEngine()
		engine.start()
	}
}
</code></p>
<p>ServerEngine Class:</p>
<p><code>class ServerEngine extends Thread 
{
	@Override
	void run() 
	{
		println "Server engine initialized..."
		while (true) 
		{
			try 
			{
				long timeAtStart = System.currentTimeMillis()
				long timeAtEnd = System.currentTimeMillis()
				long timeSpentProcessing = timeAtStart - timeAtEnd
				Thread.sleep(600 - timeSpentProcessing)
			} 
			catch (Exception ex) 
			{
				println ex.getMessage()
			}
		}
	}
}
</code></p>
<p>ServerListener Class:</p>
<p>[code]import java.net.ServerSocket;<br>
import java.net.Socket;<br>
class ServerListener extends Thread<br>
{	<br>
private ServerSocket listenerSocket</p>
<pre><code>@Override
void run() 
{
	println "Starting server listener..."
	try 
	{
		listenerSocket = new ServerSocket(43594)
		println "Listener initialized."
		while (true) 
		{
			Socket clientSocket = listenerSocket.accept()
			Client client = new Client()
			client.setSocket(clientSocket)
			client.start()
		}
	} 
	catch (Exception ex) 
	{
		println ex.getMessage()
	}
}
</code></pre>
<p>}[/code]</p>
<p>Client Class:</p>
<p>[code]import java.net.Socket;</p>
<p>class Client extends Thread<br>
{<br>
private Socket connectionSocket</p>
<pre><code>@Override
void run() 
{
	println "Client thread started."
	println "Client has successfully connected to the server."
}

void setSocket(Socket connectionSocket) 
{
	this.connectionSocket = connectionSocket
}

Socket getSocket() 
{
	return connectionSocket
}
</code></pre>
<p>}<br>
[/code]</p>
<p>Server Startup using a bat file (There is a plugin for eclipse to use groovy but I haven’t downloaded yet. ;))</p>
<p><img src="http://imgur.com/VDy9f.png" alt width="675" height="340"></p>
<p>This is the server actually accepting the connection from the client (Login isn’t finished lol.)</p>
<p><div class="lightbox-wrapper"><a class="lightbox" href="http://imgur.com/3Dhrh.png" title="3Dhrh.png" rel="nofollow noopener"><img src="http://imgur.com/3Dhrh.png" alt width="690" height="209"><div class="meta">
<svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use xlink:href="#far-image"></use></svg><span class="filename">3Dhrh.png</span><span class="informations">1172×355</span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use xlink:href="#discourse-expand"></use></svg>
</div></a></div></p>
<p>Here is the file structure and actual size of source. (With Groovy it’ll stay pretty small.</p>
<p><img src="http://imgur.com/p2xia.png" alt width="585" height="148"></p>
<p>That’s all for now, I’ll be updating this thread later.</p>
<p>Post comments or questions.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/groovy/385397/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/groovy/385397/1</link>
        <pubDate>Tue, 08 Mar 2011 10:00:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-385397-1</guid>
        <source url="https://forum.moparisthebest.com/t/groovy/385397.rss">Groovy</source>
      </item>
  </channel>
</rss>
