<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>How to implement JavaScript scripts for your server</title>
    <link>https://forum.moparisthebest.com/t/how-to-implement-javascript-scripts-for-your-server/371306</link>
    <description>I. AM. NINJASTYLZ.
[img]http://img258.imageshack.us/img258/7388/ninjab.png[/img]

[B]Purpose: To improve server efficiency
Difficulty: 6/10
Assumed Knowledge: Reading+Understanding/Comprehending
Classes Modified: Script.java, ExampleScript.java, Test.js
Tested On(if it applies): Standalone[/B]

First I&#39;ll give main Pros+Cons of loading scripts on the spot compared to cacheing them:

Loading on-queue:
 Pros: Removes need to restart server when scripts have been edited, once saved will take effect immidately, consumes less RAM/Memory.
 Cons: Will increase CPU usage of server(will vary depending on scripts+demand), actions executed within scripts will be delayed(again varying depending on scripts+demand)

Cacheing on startup:
 Pros: CPU usage of server will be minorly effected by scripts, actions executed within scripts will be faster than loading on-queue.
 Cons: Once a script is edited requires server restart to take effect(Though this can be avoided by making a command to recache scripts, or even a specific script), increases RAM/Memory consumption.


Seeing as some people may have difficulties with this tutorial here is the download link up the top of everything setup for you to use as a guideline:
[url=http://uppit.com/wh31zc5alsg8/JS_Test.rar]UppIT - Free File hosting - JS Test.rar[/url]

So first add my Script.java file I created: [COLOR=red]MAKE SURE YOU CHANGE PACKAGE ACCORDING TO SAVE LOCATION!!![/COLOR]
[code]package MAKESURETOCHANGEPACKAGE;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import javax.script.Invocable;
import javax.script.ScriptEngine;
import javax.script.ScriptEngineManager;

public class Script {
	
	/*
	 * Script.java - Created for implementation of JavaScripts
	 * Created by Ninjastylz of r-s/Stupid Ninja of Mopar
	 */
	
	private static ScriptEngine engine;
	
	public static Invocable getInvocable(String path) {
		try {
			engine = null;
			File sf = new File(path);
			if (!sf.exists()) {
				throw new FileNotFoundException(path);
			}
			engine = new ScriptEngineManager().getEngineByName(&quot;JavaScript&quot;);
			engine.eval(new FileReader(path));
			return (Invocable) engine;
		} catch (Exception e) {
			System.out.println(&quot;Failed to invoke script: &quot;+path);
			e.printStackTrace();
			return null;
		}
	}

}[/code]

That class contains my method for getting an &#39;Invocable&#39; version of a JavaScript file. For those of you who don&#39;t know that is just a type of object that can be applied to any interface class(explained next) that will overwrite methods in that interface(Explanation of how we&#39;re using it).

Now to make an interface class for a specific type of script, this file is very small and only contains names of methods, which will be overwritten in the JavaScript file in &#39;functions&#39;.
[COLOR=red]NOTE: Instead of public &#39;class&#39; xxxx at the beginning of file make sure to put public &#39;interface&#39; xxxx!!!![/COLOR]
An example of an interface script(ExampleScript.java): [COLOR=red]MAKE SURE YOU CHANGE PACKAGE ACCORDING TO SAVE LOCATION!!![/COLOR]
[code]package MAKESURETOCHANGEPACKAGE;

public interface ExampleScript {

	public void doTest();

}[/code]

And it&#39;s that simple!

Now to create a simple JavaScript file that can be applied to our ExampleScript interface. Make a new folder called &quot;ExampleScript&quot; in the same directory as the batch/etc. file that runs your server.
Once made go inside and save this file in there(Test.js, if you have trouble saving read below):
[code]function doTest () {
	for (var i = 0; i &lt; 10; i++) {
		println(&quot;JavaScript test: &quot; + i);
	}
}[/code]

[COLOR=red]DO THE FOLLOWING STEP ONLY IF YOU HAVE TROUBLE SAVING A .js FILE(Windows)[/COLOR]
Most of you probably wont have saved a .js file on your computer before with notepad/other text editor. And so you&#39;ll probably find yourself with a file called &#39;Test.js&#39; that is still a text file. To fix this first take the .js off of the file name. Secondly save this batch file with any name in the same folder as the script and run it once, then delete. Once it has been run it will have renamed your text file to a .js file:
[code]ren Test.txt Text.js[/code]

So now you&#39;ve created all the new files you need to place the following code somewhere in you&#39;re server that you can access while its running(or call it when it&#39;s starting up).
[COLOR=red]NOTE: Make sure ExampleScript/Script classes are imported!
NOTE2: Make sure &#39;javax.script.Invocable&#39;[/COLOR]
[COLOR=blue]SIDENOTE: This is implementing the &#39;load-on-queue&#39; technique[/COLOR]
[code]	ExampleScript ex;
	Invocable tmp = Script.getInvocable(&quot;ExampleScript/Test.js&quot;);
	if (tmp != null) {
		ex = tmp.getInterface(ExampleScript.class);
		ex.doTest();
	} else {
		System.out.println(&quot;Failed to load+invoke test script!&quot;);
	}[/code]

Now save+compile+run and you should get something like this:
[img]http://img17.imageshack.us/img17/4342/screenshotcq.png[/img]

Hopefully you&#39;ve learn&#39;t something from this tutorial.
Unfortunately though this is all I&#39;m going to be teaching in this tutorial</description>
    
    <lastBuildDate>Thu, 02 Dec 2010 00:57:47 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/how-to-implement-javascript-scripts-for-your-server/371306.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>How to implement JavaScript scripts for your server</title>
        <dc:creator><![CDATA[@teufel teufel]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/teufel">@teufel</a> wrote:</p>
          <blockquote>
              <p>Nice, might use on next project.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/how-to-implement-javascript-scripts-for-your-server/371306/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/how-to-implement-javascript-scripts-for-your-server/371306/4</link>
        <pubDate>Thu, 02 Dec 2010 00:57:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-371306-4</guid>
        <source url="https://forum.moparisthebest.com/t/how-to-implement-javascript-scripts-for-your-server/371306.rss">How to implement JavaScript scripts for your server</source>
      </item>
      <item>
        <title>How to implement JavaScript scripts for your server</title>
        <dc:creator><![CDATA[@doom_j doom_j]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/doom_j">@doom_j</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="2" data-topic="371306">
<div class="title">
<div class="quote-controls"></div>
 listenir:</div>
<blockquote>
<p>Point is.</p>
</blockquote>
</aside>
<p>It implements a scripting language to your server, how can you get the point?..</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/how-to-implement-javascript-scripts-for-your-server/371306/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/how-to-implement-javascript-scripts-for-your-server/371306/3</link>
        <pubDate>Wed, 01 Dec 2010 21:55:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-371306-3</guid>
        <source url="https://forum.moparisthebest.com/t/how-to-implement-javascript-scripts-for-your-server/371306.rss">How to implement JavaScript scripts for your server</source>
      </item>
      <item>
        <title>How to implement JavaScript scripts for your server</title>
        <dc:creator><![CDATA[@system system]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/system">@system</a> wrote:</p>
          <blockquote>
              <p>Point is.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/how-to-implement-javascript-scripts-for-your-server/371306/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/how-to-implement-javascript-scripts-for-your-server/371306/2</link>
        <pubDate>Wed, 01 Dec 2010 21:28:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-371306-2</guid>
        <source url="https://forum.moparisthebest.com/t/how-to-implement-javascript-scripts-for-your-server/371306.rss">How to implement JavaScript scripts for your server</source>
      </item>
      <item>
        <title>How to implement JavaScript scripts for your server</title>
        <dc:creator><![CDATA[@Stupid_Ninja Stupid Ninja]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/stupid_ninja">@Stupid_Ninja</a> wrote:</p>
          <blockquote>
              <p>I. AM. NINJASTYLZ.<br>
<img src="http://img258.imageshack.us/img258/7388/ninjab.png" alt width="" height=""></p>
<p><span class="bbcode-b">Purpose: To improve server efficiency<br>
Difficulty: 6/10<br>
Assumed Knowledge: Reading+Understanding/Comprehending<br>
Classes Modified: Script.java, ExampleScript.java, Test.js<br>
Tested On(if it applies): Standalone</span></p>
<p>First I’ll give main Pros+Cons of loading scripts on the spot compared to cacheing them:</p>
<p>Loading on-queue:<br>
Pros: Removes need to restart server when scripts have been edited, once saved will take effect immidately, consumes less RAM/Memory.<br>
Cons: Will increase CPU usage of server(will vary depending on scripts+demand), actions executed within scripts will be delayed(again varying depending on scripts+demand)</p>
<p>Cacheing on startup:<br>
Pros: CPU usage of server will be minorly effected by scripts, actions executed within scripts will be faster than loading on-queue.<br>
Cons: Once a script is edited requires server restart to take effect(Though this can be avoided by making a command to recache scripts, or even a specific script), increases RAM/Memory consumption.</p>
<p>Seeing as some people may have difficulties with this tutorial here is the download link up the top of everything setup for you to use as a guideline:<br>
<a href="http://uppit.com/wh31zc5alsg8/JS_Test.rar" data-bbcode="true" rel="nofollow noopener">UppIT - Free File hosting - JS Test.rar</a></p>
<p>So first add my Script.java file I created: [COLOR=red]MAKE SURE YOU CHANGE PACKAGE ACCORDING TO SAVE LOCATION!!![/COLOR]</p>
<p>[code]package MAKESURETOCHANGEPACKAGE;</p>
<p>import java.io.File;<br>
import java.io.FileNotFoundException;<br>
import java.io.FileReader;<br>
import javax.script.Invocable;<br>
import javax.script.ScriptEngine;<br>
import javax.script.ScriptEngineManager;</p>
<p>public class Script {</p>
<pre><code>/*
 * Script.java - Created for implementation of JavaScripts
 * Created by Ninjastylz of r-s/Stupid Ninja of Mopar
 */

private static ScriptEngine engine;

public static Invocable getInvocable(String path) {
	try {
		engine = null;
		File sf = new File(path);
		if (!sf.exists()) {
			throw new FileNotFoundException(path);
		}
		engine = new ScriptEngineManager().getEngineByName("JavaScript");
		engine.eval(new FileReader(path));
		return (Invocable) engine;
	} catch (Exception e) {
		System.out.println("Failed to invoke script: "+path);
		e.printStackTrace();
		return null;
	}
}
</code></pre>
<p>}[/code]</p>
<p>That class contains my method for getting an ‘Invocable’ version of a JavaScript file. For those of you who don’t know that is just a type of object that can be applied to any interface class(explained next) that will overwrite methods in that interface(Explanation of how we’re using it).</p>
<p>Now to make an interface class for a specific type of script, this file is very small and only contains names of methods, which will be overwritten in the JavaScript file in ‘functions’.<br>
[COLOR=red]NOTE: Instead of public ‘class’ xxxx at the beginning of file make sure to put public ‘interface’ xxxx!!![/COLOR]<br>
An example of an interface script(ExampleScript.java): [COLOR=red]MAKE SURE YOU CHANGE PACKAGE ACCORDING TO SAVE LOCATION!!![/COLOR]</p>
<p>[code]package MAKESURETOCHANGEPACKAGE;</p>
<p>public interface ExampleScript {</p>
<pre><code>public void doTest();
</code></pre>
<p>}[/code]</p>
<p>And it’s that simple!</p>
<p>Now to create a simple JavaScript file that can be applied to our ExampleScript interface. Make a new folder called “ExampleScript” in the same directory as the batch/etc. file that runs your server.<br>
Once made go inside and save this file in there(Test.js, if you have trouble saving read below):</p>
<p><code>function doTest () {
	for (var i = 0; i &lt; 10; i++) {
		println("JavaScript test: " + i);
	}
}</code></p>
<p>[COLOR=red]DO THE FOLLOWING STEP ONLY IF YOU HAVE TROUBLE SAVING A .js FILE(Windows)[/COLOR]<br>
Most of you probably wont have saved a .js file on your computer before with notepad/other text editor. And so you’ll probably find yourself with a file called ‘Test.js’ that is still a text file. To fix this first take the .js off of the file name. Secondly save this batch file with any name in the same folder as the script and run it once, then delete. Once it has been run it will have renamed your text file to a .js file:</p>
<pre><code class="lang-auto">ren Test.txt Text.js</code></pre>
<p>So now you’ve created all the new files you need to place the following code somewhere in you’re server that you can access while its running(or call it when it’s starting up).<br>
[COLOR=red]NOTE: Make sure ExampleScript/Script classes are imported!<br>
NOTE2: Make sure ‘javax.script.Invocable’[/COLOR]<br>
[COLOR=blue]SIDENOTE: This is implementing the ‘load-on-queue’ technique[/COLOR]</p>
<p><code>	ExampleScript ex;
	Invocable tmp = Script.getInvocable("ExampleScript/Test.js");
	if (tmp != null) {
		ex = tmp.getInterface(ExampleScript.class);
		ex.doTest();
	} else {
		System.out.println("Failed to load+invoke test script!");
	}</code></p>
<p>Now save+compile+run and you should get something like this:<br>
<img src="http://img17.imageshack.us/img17/4342/screenshotcq.png" alt width="" height=""></p>
<p>Hopefully you’ve learn’t something from this tutorial.<br>
Unfortunately though this is all I’m going to be teaching in this tutorial</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/how-to-implement-javascript-scripts-for-your-server/371306/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/how-to-implement-javascript-scripts-for-your-server/371306/1</link>
        <pubDate>Wed, 01 Dec 2010 21:19:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-371306-1</guid>
        <source url="https://forum.moparisthebest.com/t/how-to-implement-javascript-scripts-for-your-server/371306.rss">How to implement JavaScript scripts for your server</source>
      </item>
  </channel>
</rss>
