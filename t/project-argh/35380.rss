<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Project ARGH</title>
    <link>https://forum.moparisthebest.com/t/project-argh/35380</link>
    <description>After briefly looking at the code of ARGA, I&#39;ve come to the conclusion that Macrosoft needs coding standards and a team of editors enforcing them.

The beauty of open source software is that anyone can look at a program&#39;s code and offer whatever improvements they care to make. As an aid to this process, I have decided to wander through their code, fixing problems as I see them and releasing the code as I finish it. I hope they&#39;ll use it, or at least learn from it. I hope they don&#39;t take this as a personal attack - it&#39;s not. It&#39;s just that they don&#39;t seem to be aware of some better ways of doing things. That&#39;s what a learning experience is all about, though.

Note that, at least right now, I am not addressing any flaws in the bot - merely the code. Unless I decide to do otherwise, detectability and functionality should not be affected one way or the other.

I am currently without access to RS-R, so I&#39;m starting this here.

All others who can help are welcome to contribute a class or two (or however many you feel like doing).

[b]BotLauncher[/b]
Since this is the first class I looked at it seems appropriate to start with it.
I noticed two major problems:

1) Use of cumbersome I/O methods. Take a look:
[code]
ByteArrayOutputStream baos = new ByteArrayOutputStream();
InputStream in = uc.getInputStream();
int x;
while ((x = in.read()) != -1) baos.write(x);
System.out.println(&quot;done.&quot;);
CRC32 crc = new CRC32();
crc.update(baos.toByteArray());
int val = (int)crc.getValue();
[/code]

That&#39;s a very inelegant (not to mention inefficient) way of reading a file. A while loop comparing each byte to -1 and writing it to an unnecessary output stream? A proper application of any class implementing DataInput significantly reduces the complexity here.

[code]
DataInputStream dis = new DataInputStream(uc.getInputStream());
byte[] bytes = new byte[uc.getContentLength()];
dbg(&quot;Loader size: &quot; + bytes.length);
dis.readFully(bytes);
dis.close();
			
msg(&quot;Download complete.&quot;);
						
CRC32 crc = new CRC32();
crc.update(bytes);
int val = (int)crc.getValue();	
[/code]


2) Lack of stream closure
In all of ARGA I can only find three calls to any &quot;close()&quot; method - two of them are on sockets.
It&#39;s a general principle of clean programming to lift any resource locks you might have created when you&#39;re done with whatever is using them, and that includes explicitly closing streams.


Attached is the result of my rewrite. Take a look. I hope people find it useful. Needless to say I welcome any cogent criticisms as well :)</description>
    
    <lastBuildDate>Sat, 16 Dec 2006 05:22:40 +0000</lastBuildDate>
    <category>Community Inside Talk</category>
    <atom:link href="https://forum.moparisthebest.com/t/project-argh/35380.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Project ARGH</title>
        <dc:creator><![CDATA[@Taios Taios]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/taios">@Taios</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="4" data-topic="35380">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/semaphore/40/252_2.png" class="avatar"> semaphore:</div>
<blockquote>
<p>Not that it’s a big deal, but I would even recommend using http-client in the jakarta commons package. It encapsulates much of what anyone would want to do with the ‘pedantic beast’ aka ‘the web’.</p>
</blockquote>
</aside>
<p>Thanks, ill check it out. <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=6" title=":smiley:" class="emoji" alt=":smiley:"></p>
<p>Krichevskoy empty out your pm’s =p.</p>
<p>You pmed me asking for an account on rs-resources. Basically my reply was that you can sign up and ill activate your account for you.</p>
<p>[br][size=1]Posted at: December 15, 2006, 02:24:22 PM[/size][hr]<br>
<span class="bbcode-b">On behalf of MS : </span><br>
thanks for the info =P. And as for the coding standards we were focusing on getting it working for that bit. The open source was a last minute deal, we <span class="bbcode-b">werent intending </span>on it till a very end</p>
<p><span class="bbcode-b">Thanks again</span> for pointing that out.<br>
We shall add in some credits for you. We are all shit hot on giving credits out where due.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/project-argh/35380/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/project-argh/35380/5</link>
        <pubDate>Sat, 16 Dec 2006 05:22:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-35380-5</guid>
        <source url="https://forum.moparisthebest.com/t/project-argh/35380.rss">Project ARGH</source>
      </item>
      <item>
        <title>Project ARGH</title>
        <dc:creator><![CDATA[@semaphore semaphore]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/semaphore">@semaphore</a> wrote:</p>
          <blockquote>
              <p>Not that it’s a big deal, but I would even recommend using http-client in the jakarta commons package. It encapsulates much of what anyone would want to do with the ‘pedantic beast’ aka ‘the web’.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/project-argh/35380/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/project-argh/35380/4</link>
        <pubDate>Fri, 15 Dec 2006 19:07:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-35380-4</guid>
        <source url="https://forum.moparisthebest.com/t/project-argh/35380.rss">Project ARGH</source>
      </item>
      <item>
        <title>Project ARGH</title>
        <dc:creator><![CDATA[@Taios Taios]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/taios">@Taios</a> wrote:</p>
          <blockquote>
              <p>Um…thanks</p>
<p>Meh, nice to recieve proper constructive critism for once.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/project-argh/35380/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/project-argh/35380/3</link>
        <pubDate>Fri, 15 Dec 2006 13:22:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-35380-3</guid>
        <source url="https://forum.moparisthebest.com/t/project-argh/35380.rss">Project ARGH</source>
      </item>
      <item>
        <title>Project ARGH</title>
        <dc:creator><![CDATA[@Tree Tree]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tree">@Tree</a> wrote:</p>
          <blockquote>
              <p>Nice.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/project-argh/35380/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/project-argh/35380/2</link>
        <pubDate>Fri, 15 Dec 2006 10:17:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-35380-2</guid>
        <source url="https://forum.moparisthebest.com/t/project-argh/35380.rss">Project ARGH</source>
      </item>
      <item>
        <title>Project ARGH</title>
        <dc:creator><![CDATA[@Krichevskoy Krichevskoy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/krichevskoy">@Krichevskoy</a> wrote:</p>
          <blockquote>
              <p>After briefly looking at the code of ARGA, I’ve come to the conclusion that Macrosoft needs coding standards and a team of editors enforcing them.</p>
<p>The beauty of open source software is that anyone can look at a program’s code and offer whatever improvements they care to make. As an aid to this process, I have decided to wander through their code, fixing problems as I see them and releasing the code as I finish it. I hope they’ll use it, or at least learn from it. I hope they don’t take this as a personal attack - it’s not. It’s just that they don’t seem to be aware of some better ways of doing things. That’s what a learning experience is all about, though.</p>
<p>Note that, at least right now, I am not addressing any flaws in the bot - merely the code. Unless I decide to do otherwise, detectability and functionality should not be affected one way or the other.</p>
<p>I am currently without access to RS-R, so I’m starting this here.</p>
<p>All others who can help are welcome to contribute a class or two (or however many you feel like doing).</p>
<p><span class="bbcode-b">BotLauncher</span><br>
Since this is the first class I looked at it seems appropriate to start with it.<br>
I noticed two major problems:</p>
<ol>
<li>Use of cumbersome I/O methods. Take a look:</li>
</ol>
<pre><code class="lang-auto">ByteArrayOutputStream baos = new ByteArrayOutputStream();
InputStream in = uc.getInputStream();
int x;
while ((x = in.read()) != -1) baos.write(x);
System.out.println("done.");
CRC32 crc = new CRC32();
crc.update(baos.toByteArray());
int val = (int)crc.getValue();</code></pre>
<p>That’s a very inelegant (not to mention inefficient) way of reading a file. A while loop comparing each byte to -1 and writing it to an unnecessary output stream? A proper application of any class implementing DataInput significantly reduces the complexity here.</p>
<pre><code class="lang-auto">DataInputStream dis = new DataInputStream(uc.getInputStream());
byte[] bytes = new byte[uc.getContentLength()];
dbg("Loader size: " + bytes.length);
dis.readFully(bytes);
dis.close();
			
msg("Download complete.");
						
CRC32 crc = new CRC32();
crc.update(bytes);
int val = (int)crc.getValue();	</code></pre>
<ol start="2">
<li>Lack of stream closure<br>
In all of ARGA I can only find three calls to any “close()” method - two of them are on sockets.<br>
It’s a general principle of clean programming to lift any resource locks you might have created when you’re done with whatever is using them, and that includes explicitly closing streams.</li>
</ol>
<p>Attached is the result of my rewrite. Take a look. I hope people find it useful. Needless to say I welcome any cogent criticisms as well <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/project-argh/35380/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/project-argh/35380/1</link>
        <pubDate>Fri, 15 Dec 2006 08:08:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-35380-1</guid>
        <source url="https://forum.moparisthebest.com/t/project-argh/35380.rss">Project ARGH</source>
      </item>
  </channel>
</rss>
