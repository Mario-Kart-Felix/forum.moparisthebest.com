<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Herblore Help</title>
    <link>https://forum.moparisthebest.com/t/herblore-help/534204</link>
    <description>So, I just finished writing my herblore with enums, and I&#39;m having some trouble with it. My cleaning is fine, I&#39;m sure I could clean up some conventions or something, but it works. My unfinished and finished potions(yes, they are separated) work but with a draw back. Unfinished potions, every time I add a herb to a vial of water it creates the Guam Unfinished potion, no matter which potion. The same sort of applies to Finished Potions, but I can only make attack potions. I have tried spawning the unfinished potion and adding the ingredient, but it doesn&#39;t work. The only workable potion is guam unfinished to eye of newt. I had all of my ints set to final ints, but changed them. So please don&#39;t reply saying to change them back. I have tried with and without them. Here is the code, I&#39;m going to go ahead and add all of my herblore files simply because I&#39;m clueless as to what happened. I will also be adding the useItemonItem void from UseItem.java.

[code=java]package server.skills.Herblore;

public enum Unfinished {

	GUAMUNF(249, 1, 91), MARRENTILUNF(251, 5, 93), TARROMINUNF(253, 11, 95), HARRALANDERUNF(
			255, 20, 97), RANARRUNF(257, 25, 99), IRITUNF(259, 40, 101), AVANTOEUNF(
			261, 48, 103), KWUARMUNF(263, 54, 105), CADATINEUNF(265, 65, 107), DWARFWEEDUNF(
			267, 70, 109), TORSTALUNF(269, 75, 111);

	private int herb;
	private int level;
	private int unfpot;

	private Unfinished(int herb, int level, int unfpot) { 
		this.herb = herb;
		this.level = level;
		this.unfpot = unfpot;
	}

	public int getHerb() {
		return herb;
	}

	public int getLevel() {
		return level;
	}

	public int getUnf() {
		return unfpot;
	}

	public static Unfinished forId(int herbId) {
		for (Unfinished unf : Unfinished.values()) {
			if (unf.getHerb() == herbId) {
			}
			return unf;
		}
		return null;

	}
}
[/code]

[code=java]package server.skills.Herblore;

import server.Config;
import server.game.items.UseItem;
import server.game.players.Client;

public class Herblore {
	private static Client c;
	private static int ANIMATION = 363;
	public static int vial = 227;

	/* Cleaning Herbs Boolean */
	public static boolean clean(Client c, int herbId) {
		Cleaning clean = Cleaning.forId(herbId);
		if (clean == null) {
			return false;
		}
		if (c.getItems().playerHasItem(herbId)) {
			if (c.getLevelForXP(c.playerXP[c.playerHerblore]) &lt; clean
					.getLevel()) {
				c.sendMessage(&quot;You need a Herblore Level of &quot;
						+ clean.getLevel() + &quot; to clean this herb.&quot;);
				return false;
			}
		}
		c.getItems().deleteItem(clean.getGrimy(), 1);
		c.getItems().addItem(clean.getClean(), 1);
		c.getPA().addSkillXP(clean.getEXP() * Config.HERBLORE_EXPERIENCE,
				c.playerHerblore);
		c.sendMessage(&quot;You have cleaned a herb&quot;);
		return true;
	}

	/* Unfinished Potion Making Boolean */
	public static boolean unf(Client c, int herbId) {
		Unfinished unf = Unfinished.forId(herbId);
		if (unf == null) {
			return false;
		}
		if (c.getItems().playerHasItem(vial)
				&amp;&amp; c.getItems().playerHasItem(herbId)) {
			if (c.getLevelForXP(c.playerXP[c.playerHerblore]) &lt; unf.getLevel()) {
				c.sendMessage(&quot;You need a Herblore level of &quot; + unf.getLevel()
						+ &quot;to make this potion.&quot;);
				return false;
			}
		}
		if (c.getItems().playerHasItem(vial)
				&amp;&amp; c.getItems().playerHasItem(herbId)) {
			c.startAnimation(ANIMATION);
			c.getItems().deleteItem(herbId,
					c.getItems().getItemSlot(herbId), 1);
			c.getItems().deleteItem(vial, c.getItems().getItemSlot(vial), 1);
			c.getItems().addItem(unf.getUnf(), 1);
			c.sendMessage(&quot;You have made an unfinished potion&quot;);
			return true;
		}
		return false;
	}
	
	/* Finished Potion Making Boolean */
	public static boolean fin(Client c, int UnfId) {
		Finished fin = Finished.forId(UnfId);
		if (fin == null) {
			return false;
		}
		if (c.getItems().playerHasItem(fin.getING()) &amp;&amp; c.getItems().playerHasItem(fin.getUNF())) {
			if (c.getLevelForXP(c.playerXP[c.playerHerblore]) &lt; fin.getLevel()) {
				c.sendMessage(&quot;You need a Herblore Level of &quot; + fin.getLevel() + &quot; to make this potion.&quot;);
				return false;
			}
		}
		if (c.getItems().playerHasItem(fin.getING()) &amp;&amp; c.getItems().playerHasItem(fin.getUNF())) {
			c.startAnimation(ANIMATION);
			c.getItems().deleteItem(UnfId, c.getItems().getItemSlot(UnfId), 1);
			c.getItems().deleteItem(fin.getING(),c.getItems().getItemSlot(fin.getING()), 1);
			c.getItems().addItem(fin.getFIN(), 1);
			c.getPA().addSkillXP(fin.getEXP() * Config.HERBLORE_EXPERIENCE, c.playerHerblore);
			c.sendMessage(&quot;You have made a potion&quot;);
			return true;
		}
		return false;
	}
}
[/code]

[code=java]package server.skills.Herblore;

public enum Finished {
	
	ATTACK(221, 91, 3, 121, 25),
	STRENGTH(225, 95, 12, 115, 40),
	ANTIPOISON(235, 93, 13, 175, 37.5),
	RESTORE(223, 97, 22, 127, 62.5),
	ENERGY(1975, 97, 26, 3010, 67.5),
	PRAYER(231, 99, 38, 139, 87.5),
	SUPERATTACK(221, 101, 45, 145, 100),
	SUPERANTIPOISON(235, 101, 48, 181, 106.3),
	SUPERENGERY(2970, 103, 52, 3018, 117.5),
	SUPERSTRENGTH(225, 105, 55, 157, 125),
	SUPERDEFENCE(239, 107, 66, 163, 150),
	RANGING(245, 109, 72, 169, 162.5),
	ZAMMYBREW(247, 111, 78, 189, 175);
	
	private int ingredient;
	public int unfpot;
	private int level;
	private int finpot;
	private double exp;
	
	private Finished(int ingredient, int unfpot, int level, int finpot, double exp) {
		this.ingredient = ingredient;
		this.unfpot = unfpot;
		this.level = level;
		this.finpot = finpot;
		this.exp = exp;
	}
	
	public int getING() {
		return ingredient;
	}
	
	public int getUNF() {
		return unfpot;
	}
	
	public int getLevel() {
		return level;
	}
	
	public int getFIN() {
		return finpot;
	}
	
	public double getEXP() {
		return exp;
	}
	
	public static Finished forId(int UnfId) {
		for (Finished fin : Finished.values()) {
			if (fin.getUNF() == UnfId) {
			}
			return fin;
		}
		return null;
	}
}
[/code]

[code=java]public static void ItemonItem(Client c, int itemUsed, int useWith) {
		Finished f = Finished.forId(itemUsed);
		Finished g = Finished.forId(useWith);
		if (itemUsed == Herblore.vial || useWith == Herblore.vial) {
			if(Herblore.unf(c, itemUsed) || Herblore.unf(c, useWith))
				return;
			}
			if (itemUsed == f.getUNF() || useWith == g.getUNF()) {
				if(Herblore.fin(c, useWith) || Herblore.fin(c, useWith));
				return;
			}
	}[/code]


I know it&#39;s decent size of code, so I appreciate your time.</description>
    
    <lastBuildDate>Wed, 16 Oct 2013 20:24:51 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/herblore-help/534204.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Herblore Help</title>
        <dc:creator><![CDATA[@Xellium Xellium]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xellium">@Xellium</a> wrote:</p>
          <blockquote>
              <p>So, I just finished writing my herblore with enums, and I’m having some trouble with it. My cleaning is fine, I’m sure I could clean up some conventions or something, but it works. My unfinished and finished potions(yes, they are separated) work but with a draw back. Unfinished potions, every time I add a herb to a vial of water it creates the Guam Unfinished potion, no matter which potion. The same sort of applies to Finished Potions, but I can only make attack potions. I have tried spawning the unfinished potion and adding the ingredient, but it doesn’t work. The only workable potion is guam unfinished to eye of newt. I had all of my ints set to final ints, but changed them. So please don’t reply saying to change them back. I have tried with and without them. Here is the code, I’m going to go ahead and add all of my herblore files simply because I’m clueless as to what happened. I will also be adding the useItemonItem void from UseItem.java.</p>
<p>[code=java]package server.skills.Herblore;</p>
<p>public enum Unfinished {</p>
<pre><code>GUAMUNF(249, 1, 91), MARRENTILUNF(251, 5, 93), TARROMINUNF(253, 11, 95), HARRALANDERUNF(
		255, 20, 97), RANARRUNF(257, 25, 99), IRITUNF(259, 40, 101), AVANTOEUNF(
		261, 48, 103), KWUARMUNF(263, 54, 105), CADATINEUNF(265, 65, 107), DWARFWEEDUNF(
		267, 70, 109), TORSTALUNF(269, 75, 111);

private int herb;
private int level;
private int unfpot;

private Unfinished(int herb, int level, int unfpot) { 
	this.herb = herb;
	this.level = level;
	this.unfpot = unfpot;
}

public int getHerb() {
	return herb;
}

public int getLevel() {
	return level;
}

public int getUnf() {
	return unfpot;
}

public static Unfinished forId(int herbId) {
	for (Unfinished unf : Unfinished.values()) {
		if (unf.getHerb() == herbId) {
		}
		return unf;
	}
	return null;

}
</code></pre>
<p>}<br>
[/code]</p>
<p>[code=java]package server.skills.Herblore;</p>
<p>import server.Config;<br>
import server.game.items.UseItem;<br>
import server.game.players.Client;</p>
<p>public class Herblore {<br>
private static Client c;<br>
private static int ANIMATION = 363;<br>
public static int vial = 227;</p>
<pre><code>/* Cleaning Herbs Boolean */
public static boolean clean(Client c, int herbId) {
	Cleaning clean = Cleaning.forId(herbId);
	if (clean == null) {
		return false;
	}
	if (c.getItems().playerHasItem(herbId)) {
		if (c.getLevelForXP(c.playerXP[c.playerHerblore]) &lt; clean
				.getLevel()) {
			c.sendMessage("You need a Herblore Level of "
					+ clean.getLevel() + " to clean this herb.");
			return false;
		}
	}
	c.getItems().deleteItem(clean.getGrimy(), 1);
	c.getItems().addItem(clean.getClean(), 1);
	c.getPA().addSkillXP(clean.getEXP() * Config.HERBLORE_EXPERIENCE,
			c.playerHerblore);
	c.sendMessage("You have cleaned a herb");
	return true;
}

/* Unfinished Potion Making Boolean */
public static boolean unf(Client c, int herbId) {
	Unfinished unf = Unfinished.forId(herbId);
	if (unf == null) {
		return false;
	}
	if (c.getItems().playerHasItem(vial)
			&amp;&amp; c.getItems().playerHasItem(herbId)) {
		if (c.getLevelForXP(c.playerXP[c.playerHerblore]) &lt; unf.getLevel()) {
			c.sendMessage("You need a Herblore level of " + unf.getLevel()
					+ "to make this potion.");
			return false;
		}
	}
	if (c.getItems().playerHasItem(vial)
			&amp;&amp; c.getItems().playerHasItem(herbId)) {
		c.startAnimation(ANIMATION);
		c.getItems().deleteItem(herbId,
				c.getItems().getItemSlot(herbId), 1);
		c.getItems().deleteItem(vial, c.getItems().getItemSlot(vial), 1);
		c.getItems().addItem(unf.getUnf(), 1);
		c.sendMessage("You have made an unfinished potion");
		return true;
	}
	return false;
}

/* Finished Potion Making Boolean */
public static boolean fin(Client c, int UnfId) {
	Finished fin = Finished.forId(UnfId);
	if (fin == null) {
		return false;
	}
	if (c.getItems().playerHasItem(fin.getING()) &amp;&amp; c.getItems().playerHasItem(fin.getUNF())) {
		if (c.getLevelForXP(c.playerXP[c.playerHerblore]) &lt; fin.getLevel()) {
			c.sendMessage("You need a Herblore Level of " + fin.getLevel() + " to make this potion.");
			return false;
		}
	}
	if (c.getItems().playerHasItem(fin.getING()) &amp;&amp; c.getItems().playerHasItem(fin.getUNF())) {
		c.startAnimation(ANIMATION);
		c.getItems().deleteItem(UnfId, c.getItems().getItemSlot(UnfId), 1);
		c.getItems().deleteItem(fin.getING(),c.getItems().getItemSlot(fin.getING()), 1);
		c.getItems().addItem(fin.getFIN(), 1);
		c.getPA().addSkillXP(fin.getEXP() * Config.HERBLORE_EXPERIENCE, c.playerHerblore);
		c.sendMessage("You have made a potion");
		return true;
	}
	return false;
}
</code></pre>
<p>}<br>
[/code]</p>
<p>[code=java]package server.skills.Herblore;</p>
<p>public enum Finished {</p>
<pre><code>ATTACK(221, 91, 3, 121, 25),
STRENGTH(225, 95, 12, 115, 40),
ANTIPOISON(235, 93, 13, 175, 37.5),
RESTORE(223, 97, 22, 127, 62.5),
ENERGY(1975, 97, 26, 3010, 67.5),
PRAYER(231, 99, 38, 139, 87.5),
SUPERATTACK(221, 101, 45, 145, 100),
SUPERANTIPOISON(235, 101, 48, 181, 106.3),
SUPERENGERY(2970, 103, 52, 3018, 117.5),
SUPERSTRENGTH(225, 105, 55, 157, 125),
SUPERDEFENCE(239, 107, 66, 163, 150),
RANGING(245, 109, 72, 169, 162.5),
ZAMMYBREW(247, 111, 78, 189, 175);

private int ingredient;
public int unfpot;
private int level;
private int finpot;
private double exp;

private Finished(int ingredient, int unfpot, int level, int finpot, double exp) {
	this.ingredient = ingredient;
	this.unfpot = unfpot;
	this.level = level;
	this.finpot = finpot;
	this.exp = exp;
}

public int getING() {
	return ingredient;
}

public int getUNF() {
	return unfpot;
}

public int getLevel() {
	return level;
}

public int getFIN() {
	return finpot;
}

public double getEXP() {
	return exp;
}

public static Finished forId(int UnfId) {
	for (Finished fin : Finished.values()) {
		if (fin.getUNF() == UnfId) {
		}
		return fin;
	}
	return null;
}
</code></pre>
<p>}<br>
[/code]</p>
<p><code>public static void ItemonItem(Client c, int itemUsed, int useWith) {
		Finished f = Finished.forId(itemUsed);
		Finished g = Finished.forId(useWith);
		if (itemUsed == Herblore.vial || useWith == Herblore.vial) {
			if(Herblore.unf(c, itemUsed) || Herblore.unf(c, useWith))
				return;
			}
			if (itemUsed == f.getUNF() || useWith == g.getUNF()) {
				if(Herblore.fin(c, useWith) || Herblore.fin(c, useWith));
				return;
			}
	}</code></p>
<p>I know it’s decent size of code, so I appreciate your time.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/herblore-help/534204/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/herblore-help/534204/1</link>
        <pubDate>Wed, 16 Oct 2013 20:24:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-534204-1</guid>
        <source url="https://forum.moparisthebest.com/t/herblore-help/534204.rss">Herblore Help</source>
      </item>
  </channel>
</rss>
