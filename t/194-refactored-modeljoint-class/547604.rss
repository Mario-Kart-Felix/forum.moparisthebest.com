<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[194] Refactored ModelJoint class</title>
    <link>https://forum.moparisthebest.com/t/194-refactored-modeljoint-class/547604</link>
    <description>Here is my attempt at refactoring the ModelJoint class. I think this is often called &quot;Skins&quot; in 317 refactors, but I did some research and it seemed to refer to it as joints. This would make sense seeing as the &quot;opcodes&quot; of animations are infact the joint affected  by the transformations.

[code=Java]public class ModelJoint {
	public static ModelJoint[] joints;
	public int count;
	public int[] transformTypes;
	public int[][] jointList;

	public static void load(Archive archive) {
		Stream head = new Stream(archive.getFile(null,
				&quot;base_head.dat&quot;));
		Stream type = new Stream(archive.getFile(null,
				&quot;base_type.dat&quot;));
		Stream label = new Stream(archive.getFile(null,
				&quot;base_label.dat&quot;));
		
		int jointCount = head.getUnsignedLEShort();
		int highestJointId = head.getUnsignedLEShort();
		
		joints = new ModelJoint[highestJointId + 1];
		for (int j = 0; j &lt; jointCount; j++) {
			int jointId = head.getUnsignedLEShort();
			int count = head.getUnsignedByte();
			int[] transformTypes = new int[count];
			int[][] jointList = new int[count][];
			for (int joint = 0; joint &lt; count; joint++) {
				transformTypes[joint] = type.getUnsignedByte();
				int subJointCount = label.getUnsignedByte();
				jointList[joint] = new int[subJointCount];
				
				for (int subJoint = 0; subJoint &lt; subJointCount; subJoint++)
					jointList[joint][subJoint] = label.getUnsignedByte();
			}
			joints[jointId] = new ModelJoint();
			joints[jointId].count = count;
			joints[jointId].transformTypes = transformTypes;
			joints[jointId].jointList = jointList;
		}
	}
}[/code]</description>
    
    <lastBuildDate>Tue, 04 Nov 2014 01:57:20 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/194-refactored-modeljoint-class/547604.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[194] Refactored ModelJoint class</title>
        <dc:creator><![CDATA[@Ambokile Ambokile]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ambokile">@Ambokile</a> wrote:</p>
          <blockquote>
              <p>Here is my attempt at refactoring the ModelJoint class. I think this is often called “Skins” in 317 refactors, but I did some research and it seemed to refer to it as joints. This would make sense seeing as the “opcodes” of animations are infact the joint affected  by the transformations.</p>
<p>[code=Java]public class ModelJoint {<br>
public static ModelJoint[] joints;<br>
public int count;<br>
public int[] transformTypes;<br>
public int[][] jointList;</p>
<pre><code>public static void load(Archive archive) {
	Stream head = new Stream(archive.getFile(null,
			"base_head.dat"));
	Stream type = new Stream(archive.getFile(null,
			"base_type.dat"));
	Stream label = new Stream(archive.getFile(null,
			"base_label.dat"));
	
	int jointCount = head.getUnsignedLEShort();
	int highestJointId = head.getUnsignedLEShort();
	
	joints = new ModelJoint[highestJointId + 1];
	for (int j = 0; j &lt; jointCount; j++) {
		int jointId = head.getUnsignedLEShort();
		int count = head.getUnsignedByte();
		int[] transformTypes = new int[count];
		int[][] jointList = new int[count][];
		for (int joint = 0; joint &lt; count; joint++) {
			transformTypes[joint] = type.getUnsignedByte();
			int subJointCount = label.getUnsignedByte();
			jointList[joint] = new int[subJointCount];
			
			for (int subJoint = 0; subJoint &lt; subJointCount; subJoint++)
				jointList[joint][subJoint] = label.getUnsignedByte();
		}
		joints[jointId] = new ModelJoint();
		joints[jointId].count = count;
		joints[jointId].transformTypes = transformTypes;
		joints[jointId].jointList = jointList;
	}
}
</code></pre>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/194-refactored-modeljoint-class/547604/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/194-refactored-modeljoint-class/547604/1</link>
        <pubDate>Tue, 04 Nov 2014 01:57:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-547604-1</guid>
        <source url="https://forum.moparisthebest.com/t/194-refactored-modeljoint-class/547604.rss">[194] Refactored ModelJoint class</source>
      </item>
  </channel>
</rss>
