<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Help really bad need help asap!</title>
    <link>https://forum.moparisthebest.com/t/help-really-bad-need-help-asap/282404</link>
    <description>when im running server i get this and then it nulls the hell out of my server witch make it lagg like hell
NOTE (ip) NULLERS IP I DIDENT WANT TO SHOW THE NULLERS IP
[CODE]Disconnecting bugged player null
java.lang.NullPointerException
        at stream.createFrame(stream.java:36)
        at client.logout(client.java:9484)
        at PlayerHandler.saveGame(PlayerHandler.java:379)
        at PlayerHandler.removePlayer(PlayerHandler.java:371)
        at PlayerHandler.process(PlayerHandler.java:258)
        at process.run(process.java:23)
        at java.lang.Thread.run(Unknown Source)
ClientHandler: Client null disconnected (ip)
socket closed
java.net.SocketException: socket closed
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(Unknown Source)
        at client.fillInStream(client.java:8126)
        at client.run(client.java:16813)
        at java.lang.Thread.run(Unknown Source)
Disconnecting bugged player null
java.lang.NullPointerException
        at stream.createFrame(stream.java:36)
        at client.logout(client.java:9484)
        at PlayerHandler.saveGame(PlayerHandler.java:379)
        at PlayerHandler.removePlayer(PlayerHandler.java:371)
        at PlayerHandler.process(PlayerHandler.java:258)
        at process.run(process.java:23)
        at java.lang.Thread.run(Unknown Source)
ClientHandler: Client null disconnected (ip)
socket closed
java.net.SocketException: socket closed
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(Unknown Source)
        at client.fillInStream(client.java:8126)
        at client.run(client.java:16813)
        at java.lang.Thread.run(Unknown Source)[/CODE]

and i show u the files now
[CODE]
	static {
		for (int i = 0; i &lt; 32; i++)
			bitMaskOut[i] = (1 &lt;&lt; i) - 1;
	}

	public int bitPosition = 0;

	public byte buffer[] = null;

	public int currentOffset = 0;

	private int frameStack[] = new int[frameStackSize];

	private int frameStackPtr = -1;

	public Cryption packetEncryption = null;

	public stream() {
	}

	public stream(byte abyte0[]) {
		buffer = abyte0;
		currentOffset = 0;
	}

	public void createFrame(int id) {
		if (currentOffset + 2 &gt;= buffer.length)
			return;
		try {
buffer[currentOffset++] = (byte) (id + packetEncryption//([COLOR=&quot;Red&quot;]line 36 here[/COLOR]
					.getNextKey());
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void createFrameVarSize(int id) { // creates a variable sized frame
		if (currentOffset + 2 &gt;= buffer.length)
			return;
		buffer[currentOffset++] = (byte) (id + packetEncryption.getNextKey());
		buffer[currentOffset++] = 0; // place holder for size byte
		if (frameStackPtr &gt;= frameStackSize - 1) {
			throw new RuntimeException(&quot;Stack overflow&quot;);
		} else
			frameStack[++frameStackPtr] = currentOffset;
	}
[/CODE]
client.java
[CODE]		try {
			line = characterfile.readLine();
		} catch (IOException ioexception) {
			misc.println(playerName + &quot;: error loading file.&quot;);
			return 3;
		}
		while ((EndOfFile == false) &amp;&amp; (line != null)) {
			line = line.trim();
			int spot = line.indexOf(&quot;=&quot;);
			if (spot &gt; -1) {
				token = line.substring(0, spot);
				token = token.trim();
				token2 = line.substring(spot + 1);
				token2 = token2.trim();
				token3 = token2.split(&quot;\t&quot;);
				switch (ReadMode) {
				case 1:
					if (token.equals(&quot;character-username&quot;)) {
						if (playerName.equalsIgnoreCase(token2)) {
						} else {
							saveNeeded = false;
							validClient = false;
							return 3;
						}
					} else if (token.equals(&quot;character-password&quot;)) {
						if (playerPass.equalsIgnoreCase(token2)) {
						} else {
							saveNeeded = false;
							validClient = false;
							return 3;
						}
					}
					break;
				case 2:
					if (token.equals(&quot;character-height&quot;)) {
						heightLevel = Integer.parseInt(token2);
					} else if (token.equals(&quot;character-posx&quot;)) {
						toX = Integer.parseInt(token2) == -1 ? 3088
								: Integer.parseInt(token2);
					} else if (token.equals(&quot;character-posy&quot;)) {
						toY = Integer.parseInt(token2) == -1 ? 3500
								: Integer.parseInt(token2); [COLOR=&quot;Red&quot;]line 9484 here[/COLOR]//
					} else if (token.equals(&quot;character-rights&quot;)) {
						playerRights = Integer.parseInt(token2);
					} else if (token.equals(&quot;character-lastconnection&quot;)) {
						playerLastConnect = token2;
					} else if (token.equals(&quot;character-special&quot;)) {
						specialAmount = Integer.parseInt(token2);
					} else if (token.equals(&quot;character-tz&quot;)) {
						TzWave = Integer.parseInt(token2);
					} else if (token.equals(&quot;character-starter&quot;)) {
						starter = Integer.parseInt(token2);
					} else if (token.equals(&quot;character-pouch1&quot;)) {
						smallPouch = Integer.parseInt(token2);
					} else if (token.equals(&quot;character-pouch2&quot;)) {
						mediumPouch = Integer.parseInt(token2);
					} else if (token.equals(&quot;character-pouch3&quot;)) {
						largePouch = Integer.parseInt(token2);
					} else if (token.equals(&quot;character-pouch4&quot;)) {
						giantPouch = Integer.parseInt(token2);
					} else if (token.equals(&quot;character-energy&quot;)) {[/CODE]

playerhandler.java there 2 line in this
[CODE]			// iptables -I INPUT -s my89-104-38-48.mynow.co.uk -j DROP
			// at first, parse all the incoming data
			// this has to be seperated from the outgoing part because we have
			// to keep all the player data
			// static, so each client gets exactly the same and not the one
			// clients are ahead in time
			// than the other ones.
			for (int i = 0; i &lt; maxPlayers; i++) {
				try {
					if (players[i] == null/* || !players[i].isActive */)
						continue;
					if (!players[i].disconnected &amp;&amp; !players[i].isActive) {
						if (players[i].violations &gt; 20) {
							System.out.println(&quot;Disconnecting bugged player &quot;
									+ players[i].playerName);
							removePlayer(players[i]);//[COLOR=&quot;Red&quot;]line 258[/COLOR]
							players[i] = null;
							continue;
						} else {
							players[i].violations++;
							continue;
						}
					}
					if (players[i].disconnected)
						continue;

					players[ i ].preProcessing();
					players[ i ].process();
					while(players[ i ].packetProcess());
					players[ i ].postProcessing();

					players[i].getNextPlayerMovement();

					if (players[i].disconnected) {
						client p = (client) players[i];
						if (p.inTrade) {
							client p2 = (client) players[p.trade_reqId];
							p.declineTrade();
						}[/CODE]

line 379 and 371
[CODE]public void removePlayer(Player plr) {
		if (plr == null)
			return;
		if (plr.Privatechat != 2) { // PM System
			for (int i = 1; i &lt; maxPlayers; i++) {
				if ((players[i] == null) || (players[i].isActive == false)
						|| (players[i].playerName == null))
					continue;
				players[i].pmupdate(plr.playerId, 0);
			}
		}
		// anything can be done here like unlinking this player structure from
		// any of the other existing structures
		saveGame(plr);//[COLOR=&quot;Red&quot;]line 371 here[/COLOR]
		plr.destruct();
	}

	public boolean saveGame(Player plr) {
		client saving = (client) plr;
		if (saving == null)
			return false;
		saving.logout();//[COLOR=&quot;Red&quot;]line 379[/COLOR]
		return true;
	}

	public void updateNPC(Player plr, stream str) {
		updateBlock.currentOffset = 0;

		str.createFrameVarSizeWord(65);
		str.initBitAccess();

		str.writeBits(8, plr.npcListSize);
		int size = plr.npcListSize;
		plr.npcListSize = 0;
		for (int i = 0; i &lt; size; i++) {
			if ((plr.RebuildNPCList == false)
					&amp;&amp; (plr.withinDistance(plr.npcList[i]) == true)) {
				plr.npcList[i].updateNPCMovement(str);
				plr.npcList[i].appendNPCUpdateBlock(updateBlock);
				plr.npcList[plr.npcListSize++] = plr.npcList[i];
			} else {
				int id = plr.npcList[i].npcId;
				plr.npcInListBitmap[id &gt;&gt; 3] &amp;= ~(1 &lt;&lt; (id &amp; 7)); // clear the
				// flag
				str.writeBits(1, 1);
				str.writeBits(2, 3); // tells client to remove this npc
				// from list
			}
		}

		// iterate through all npcs to check whether there&#39;s new npcs to add
		for (int i = 0; i &lt; NPCHandler.maxNPCSpawns; i++) {
			if (server.npcHandler.npcs[i] != null) {
				int id = server.npcHandler.npcs[i].npcId;
				if ((plr.RebuildNPCList == false)
						&amp;&amp; ((plr.npcInListBitmap[id &gt;&gt; 3] &amp; (1 &lt;&lt; (id &amp; 7))) != 0)) {
					// npc already in npcList
				} else if (plr.withinDistance(server.npcHandler.npcs[i]) == false) {[/CODE]

my process.java
[CODE]public class process extends Thread {
	public static final int cycleTime = 500;

	@Override
	public void run() {
		int waitFails = 0;
		long lastTicks = System.currentTimeMillis();
		long totalTimeSpentProcessing = 0;
		int cycle = 0;
		while (!server.shutdownServer) {
			try {
				if (server.updateServer)
					server.calcTime();
				// could do game updating stuff in here...
				// maybe do all the major stuff here in a big loop and just do
				// the packet
				// sending/receiving in the client sub-threads. The actual packet
				// forming code
				// will reside within here and all created packets are then
				// relayed by the sub-threads.
				// This way we avoid all the sync&#39;in issues
				// The rough outline could look like:
				server.playerHandler.process(); // updates all player related//[COLOR=&quot;Red&quot;]line 23[/COLOR]
												// stuff
				server.npcHandler.process();
				server.itemHandler.process();
				server.shopHandler.process();
				// misc.println(&quot;objectHandler(f) process...&quot;);
				// server.objectHandler.firemaking_process();
				// doNpcs() // all npc related stuff
				// doObjects()
				// doWhatever()

				// taking into account the time spend in the processing code for
				// more accurate timing
				long timeSpent = System.currentTimeMillis() - lastTicks;
				totalTimeSpentProcessing += timeSpent;
				if (timeSpent &gt;= cycleTime) {
					timeSpent = cycleTime;
					if (++waitFails &gt; 100) {
						// shutdownServer = true;
						// misc.println(&quot;[KERNEL]: machine is too slow to run
						// this server!&quot;);
					}
				}
				try {
					Thread.sleep(cycleTime - timeSpent);
				} catch (java.lang.Exception _ex) {
				}
				lastTicks = System.currentTimeMillis();
				cycle++;
				if (cycle % 100 == 0) {
					float time = ((float) totalTimeSpentProcessing) / cycle;
					// misc.println_debug(&quot;[KERNEL]: &quot;+(time*100/cycleTime)+&quot;%
					// processing time&quot;);
				}
				if (server.ShutDown == true) {
					if (server.ShutDownCounter &gt;= 100) {
						server.shutdownServer = true;
					}
					server.ShutDownCounter++;
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
		}

		// shut down the server
		server.playerHandler.destruct();
		server.clientHandler.killServer();
		server.clientHandler = null;
	}
}
[/CODE]
and that what i get when i get nulled
[CODE]java.net.SocketException: Connection reset
        at java.net.SocketInputStream.read(Unknown Source)
        at client.fillInStream(client.java:8360)
        at client.run(client.java:17070)
        at java.lang.Thread.run(Unknown Source)
ClientHandler: Client null disconnected (ip)
Exception encountered while parsing incoming packets from Bwuk the pk.
java.lang.NullPointerException
        at misc.playerNameToInt64(misc.java:171)
        at client.parseIncomingPackets(client.java:14225)
        at client.packetProcess(client.java:16625)
        at PlayerHandler.process(PlayerHandler.java:271)
        at process.run(process.java:23)
        at java.lang.Thread.run(Unknown Source)
ClientHandler: Client Bwuk the pk disconnected (ip)
Game saved for player Naruto
ClientHandler: Client Naruto disconnected (ip)
Connection from ip:49501
[client-1-Bwuk the pk]: Loading Process Completed  [Regular player, lag: 0 ms]
null
null
null
[client-2-The 99prayer]: Fatal: couldn&#39;t find connection vertex! Dropping packet
.
ClientHandler: Client The 99prayer disconnected (ip)
null
null
null
null
Connection from ip:53946
null
[client-2-The 99prayer]: Loading Process Completed  [Regular player, lag: 1 ms]
null
null
null
null
null
null
null
Connection from ip:49502
ClientHandler: Client null disconnected (ip)
Connection from ip[/CODE]
help me plz</description>
    
    <lastBuildDate>Sat, 06 Jun 2009 04:11:37 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/help-really-bad-need-help-asap/282404.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Help really bad need help asap!</title>
        <dc:creator><![CDATA[@system system]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/system">@system</a> wrote:</p>
          <blockquote>
              <p>when im running server i get this and then it nulls the hell out of my server witch make it lagg like hell<br>
NOTE (ip) NULLERS IP I DIDENT WANT TO SHOW THE NULLERS IP</p>
<p><code>Disconnecting bugged player null
java.lang.NullPointerException
        at stream.createFrame(stream.java:36)
        at client.logout(client.java:9484)
        at PlayerHandler.saveGame(PlayerHandler.java:379)
        at PlayerHandler.removePlayer(PlayerHandler.java:371)
        at PlayerHandler.process(PlayerHandler.java:258)
        at process.run(process.java:23)
        at java.lang.Thread.run(Unknown Source)
ClientHandler: Client null disconnected (ip)
socket closed
java.net.SocketException: socket closed
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(Unknown Source)
        at client.fillInStream(client.java:8126)
        at client.run(client.java:16813)
        at java.lang.Thread.run(Unknown Source)
Disconnecting bugged player null
java.lang.NullPointerException
        at stream.createFrame(stream.java:36)
        at client.logout(client.java:9484)
        at PlayerHandler.saveGame(PlayerHandler.java:379)
        at PlayerHandler.removePlayer(PlayerHandler.java:371)
        at PlayerHandler.process(PlayerHandler.java:258)
        at process.run(process.java:23)
        at java.lang.Thread.run(Unknown Source)
ClientHandler: Client null disconnected (ip)
socket closed
java.net.SocketException: socket closed
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(Unknown Source)
        at client.fillInStream(client.java:8126)
        at client.run(client.java:16813)
        at java.lang.Thread.run(Unknown Source)</code></p>
<p>and i show u the files now</p>
<pre><code class="lang-auto">	static {
		for (int i = 0; i &lt; 32; i++)
			bitMaskOut[i] = (1 &lt;&lt; i) - 1;
	}

	public int bitPosition = 0;

	public byte buffer[] = null;

	public int currentOffset = 0;

	private int frameStack[] = new int[frameStackSize];

	private int frameStackPtr = -1;

	public Cryption packetEncryption = null;

	public stream() {
	}

	public stream(byte abyte0[]) {
		buffer = abyte0;
		currentOffset = 0;
	}

	public void createFrame(int id) {
		if (currentOffset + 2 &gt;= buffer.length)
			return;
		try {
buffer[currentOffset++] = (byte) (id + packetEncryption//([COLOR="Red"]line 36 here[/COLOR]
					.getNextKey());
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void createFrameVarSize(int id) { // creates a variable sized frame
		if (currentOffset + 2 &gt;= buffer.length)
			return;
		buffer[currentOffset++] = (byte) (id + packetEncryption.getNextKey());
		buffer[currentOffset++] = 0; // place holder for size byte
		if (frameStackPtr &gt;= frameStackSize - 1) {
			throw new RuntimeException("Stack overflow");
		} else
			frameStack[++frameStackPtr] = currentOffset;
	}</code></pre>
<p>client.java</p>
<p><code>		try {
			line = characterfile.readLine();
		} catch (IOException ioexception) {
			misc.println(playerName + ": error loading file.");
			return 3;
		}
		while ((EndOfFile == false) &amp;&amp; (line != null)) {
			line = line.trim();
			int spot = line.indexOf("=");
			if (spot &gt; -1) {
				token = line.substring(0, spot);
				token = token.trim();
				token2 = line.substring(spot + 1);
				token2 = token2.trim();
				token3 = token2.split("\t");
				switch (ReadMode) {
				case 1:
					if (token.equals("character-username")) {
						if (playerName.equalsIgnoreCase(token2)) {
						} else {
							saveNeeded = false;
							validClient = false;
							return 3;
						}
					} else if (token.equals("character-password")) {
						if (playerPass.equalsIgnoreCase(token2)) {
						} else {
							saveNeeded = false;
							validClient = false;
							return 3;
						}
					}
					break;
				case 2:
					if (token.equals("character-height")) {
						heightLevel = Integer.parseInt(token2);
					} else if (token.equals("character-posx")) {
						toX = Integer.parseInt(token2) == -1 ? 3088
								: Integer.parseInt(token2);
					} else if (token.equals("character-posy")) {
						toY = Integer.parseInt(token2) == -1 ? 3500
								: Integer.parseInt(token2); [COLOR="Red"]line 9484 here[/COLOR]//
					} else if (token.equals("character-rights")) {
						playerRights = Integer.parseInt(token2);
					} else if (token.equals("character-lastconnection")) {
						playerLastConnect = token2;
					} else if (token.equals("character-special")) {
						specialAmount = Integer.parseInt(token2);
					} else if (token.equals("character-tz")) {
						TzWave = Integer.parseInt(token2);
					} else if (token.equals("character-starter")) {
						starter = Integer.parseInt(token2);
					} else if (token.equals("character-pouch1")) {
						smallPouch = Integer.parseInt(token2);
					} else if (token.equals("character-pouch2")) {
						mediumPouch = Integer.parseInt(token2);
					} else if (token.equals("character-pouch3")) {
						largePouch = Integer.parseInt(token2);
					} else if (token.equals("character-pouch4")) {
						giantPouch = Integer.parseInt(token2);
					} else if (token.equals("character-energy")) {</code></p>
<p>playerhandler.java there 2 line in this</p>
<p>[CODE]			// iptables -I INPUT -s <a href="http://my89-104-38-48.mynow.co.uk">my89-104-38-48.mynow.co.uk</a> -j DROP<br>
// at first, parse all the incoming data<br>
// this has to be seperated from the outgoing part because we have<br>
// to keep all the player data<br>
// static, so each client gets exactly the same and not the one<br>
// clients are ahead in time<br>
// than the other ones.<br>
for (int i = 0; i &lt; maxPlayers; i++) {<br>
try {<br>
if (players[i] == null/* || !players[i].isActive */)<br>
continue;<br>
if (!players[i].disconnected &amp;&amp; !players[i].isActive) {<br>
if (players[i].violations &gt; 20) {<br>
System.out.println("Disconnecting bugged player "<br>
+ players[i].playerName);<br>
removePlayer(players[i]);//[COLOR=“Red”]line 258[/COLOR]<br>
players[i] = null;<br>
continue;<br>
} else {<br>
players[i].violations++;<br>
continue;<br>
}<br>
}<br>
if (players[i].disconnected)<br>
continue;</p>
<pre><code>				players[ i ].preProcessing();
				players[ i ].process();
				while(players[ i ].packetProcess());
				players[ i ].postProcessing();

				players[i].getNextPlayerMovement();

				if (players[i].disconnected) {
					client p = (client) players[i];
					if (p.inTrade) {
						client p2 = (client) players[p.trade_reqId];
						p.declineTrade();
					}[/CODE]
</code></pre>
<p>line 379 and 371</p>
<p>[CODE]public void removePlayer(Player plr) {<br>
if (plr == null)<br>
return;<br>
if (plr.Privatechat != 2) { // PM System<br>
for (int i = 1; i &lt; maxPlayers; i++) {<br>
if ((players[i] == null) || (players[i].isActive == false)<br>
|| (players[i].playerName == null))<br>
continue;<br>
players[i].pmupdate(plr.playerId, 0);<br>
}<br>
}<br>
// anything can be done here like unlinking this player structure from<br>
// any of the other existing structures<br>
saveGame(plr);//[COLOR=“Red”]line 371 here[/COLOR]<br>
plr.destruct();<br>
}</p>
<pre><code>public boolean saveGame(Player plr) {
	client saving = (client) plr;
	if (saving == null)
		return false;
	saving.logout();//[COLOR="Red"]line 379[/COLOR]
	return true;
}

public void updateNPC(Player plr, stream str) {
	updateBlock.currentOffset = 0;

	str.createFrameVarSizeWord(65);
	str.initBitAccess();

	str.writeBits(8, plr.npcListSize);
	int size = plr.npcListSize;
	plr.npcListSize = 0;
	for (int i = 0; i &lt; size; i++) {
		if ((plr.RebuildNPCList == false)
				&amp;&amp; (plr.withinDistance(plr.npcList[i]) == true)) {
			plr.npcList[i].updateNPCMovement(str);
			plr.npcList[i].appendNPCUpdateBlock(updateBlock);
			plr.npcList[plr.npcListSize++] = plr.npcList[i];
		} else {
			int id = plr.npcList[i].npcId;
			plr.npcInListBitmap[id &gt;&gt; 3] &amp;= ~(1 &lt;&lt; (id &amp; 7)); // clear the
			// flag
			str.writeBits(1, 1);
			str.writeBits(2, 3); // tells client to remove this npc
			// from list
		}
	}

	// iterate through all npcs to check whether there's new npcs to add
	for (int i = 0; i &lt; NPCHandler.maxNPCSpawns; i++) {
		if (server.npcHandler.npcs[i] != null) {
			int id = server.npcHandler.npcs[i].npcId;
			if ((plr.RebuildNPCList == false)
					&amp;&amp; ((plr.npcInListBitmap[id &gt;&gt; 3] &amp; (1 &lt;&lt; (id &amp; 7))) != 0)) {
				// npc already in npcList
			} else if (plr.withinDistance(server.npcHandler.npcs[i]) == false) {[/CODE]
</code></pre>
<p>my process.java</p>
<p>[CODE]public class process extends Thread {<br>
public static final int cycleTime = 500;</p>
<pre><code>@Override
public void run() {
	int waitFails = 0;
	long lastTicks = System.currentTimeMillis();
	long totalTimeSpentProcessing = 0;
	int cycle = 0;
	while (!server.shutdownServer) {
		try {
			if (server.updateServer)
				server.calcTime();
			// could do game updating stuff in here...
			// maybe do all the major stuff here in a big loop and just do
			// the packet
			// sending/receiving in the client sub-threads. The actual packet
			// forming code
			// will reside within here and all created packets are then
			// relayed by the sub-threads.
			// This way we avoid all the sync'in issues
			// The rough outline could look like:
			server.playerHandler.process(); // updates all player related//[COLOR="Red"]line 23[/COLOR]
											// stuff
			server.npcHandler.process();
			server.itemHandler.process();
			server.shopHandler.process();
			// misc.println("objectHandler(f) process...");
			// server.objectHandler.firemaking_process();
			// doNpcs() // all npc related stuff
			// doObjects()
			// doWhatever()

			// taking into account the time spend in the processing code for
			// more accurate timing
			long timeSpent = System.currentTimeMillis() - lastTicks;
			totalTimeSpentProcessing += timeSpent;
			if (timeSpent &gt;= cycleTime) {
				timeSpent = cycleTime;
				if (++waitFails &gt; 100) {
					// shutdownServer = true;
					// misc.println("[KERNEL]: machine is too slow to run
					// this server!");
				}
			}
			try {
				Thread.sleep(cycleTime - timeSpent);
			} catch (java.lang.Exception _ex) {
			}
			lastTicks = System.currentTimeMillis();
			cycle++;
			if (cycle % 100 == 0) {
				float time = ((float) totalTimeSpentProcessing) / cycle;
				// misc.println_debug("[KERNEL]: "+(time*100/cycleTime)+"%
				// processing time");
			}
			if (server.ShutDown == true) {
				if (server.ShutDownCounter &gt;= 100) {
					server.shutdownServer = true;
				}
				server.ShutDownCounter++;
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	// shut down the server
	server.playerHandler.destruct();
	server.clientHandler.killServer();
	server.clientHandler = null;
}
</code></pre>
<p>}<br>
[/CODE]<br>
and that what i get when i get nulled</p>
<p><code>java.net.SocketException: Connection reset
        at java.net.SocketInputStream.read(Unknown Source)
        at client.fillInStream(client.java:8360)
        at client.run(client.java:17070)
        at java.lang.Thread.run(Unknown Source)
ClientHandler: Client null disconnected (ip)
Exception encountered while parsing incoming packets from Bwuk the pk.
java.lang.NullPointerException
        at misc.playerNameToInt64(misc.java:171)
        at client.parseIncomingPackets(client.java:14225)
        at client.packetProcess(client.java:16625)
        at PlayerHandler.process(PlayerHandler.java:271)
        at process.run(process.java:23)
        at java.lang.Thread.run(Unknown Source)
ClientHandler: Client Bwuk the pk disconnected (ip)
Game saved for player Naruto
ClientHandler: Client Naruto disconnected (ip)
Connection from ip:49501
[client-1-Bwuk the pk]: Loading Process Completed  [Regular player, lag: 0 ms]
null
null
null
[client-2-The 99prayer]: Fatal: couldn't find connection vertex! Dropping packet
.
ClientHandler: Client The 99prayer disconnected (ip)
null
null
null
null
Connection from ip:53946
null
[client-2-The 99prayer]: Loading Process Completed  [Regular player, lag: 1 ms]
null
null
null
null
null
null
null
Connection from ip:49502
ClientHandler: Client null disconnected (ip)
Connection from ip</code><br>
help me plz</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/help-really-bad-need-help-asap/282404/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/help-really-bad-need-help-asap/282404/1</link>
        <pubDate>Sat, 06 Jun 2009 04:11:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-282404-1</guid>
        <source url="https://forum.moparisthebest.com/t/help-really-bad-need-help-asap/282404.rss">Help really bad need help asap!</source>
      </item>
  </channel>
</rss>
