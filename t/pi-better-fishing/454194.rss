<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[PI]Better Fishing</title>
    <link>https://forum.moparisthebest.com/t/pi-better-fishing/454194</link>
    <description>Hello everyone, I&#39;m releasing my Fishing class that is much better than Sanity&#39;s version; however, before you try to complete this tutorial, you should take the following into consideration:

[ul][li]This is probably not the best way to go about handling fish, because I did it the way I was most comfortable with.[/li]
	[li]Data storage - I used enums rather than arrays to store the fishing data. If you don&#39;t know they difference, they basically offer the same output; however, enums take about twice as long to be loaded, but they use up less memory. If your server has good engine performance, then there will be no noticeable performance decrease.[/li]
	[li]Fish support - Not every fish is added, so this isn&#39;t 100%, although it would be extremely easy adding more fish. If you want, I will add every single fish.[/li]
	[li]Fishing timer - There is no official formula release for Fishing timers, so my fellow colleague created a unique timer which is based off of skill level. I believe this timer is  very close to being similar to RS.[/li][/ul]
Now, let&#39;s get started on the Fishing class:
[code=java]package server.model.players.skills;


import server.util.Misc;
import server.event.Event;
import server.event.EventContainer;
import server.event.EventManager;
import server.model.items.Item;
import server.model.players.Client;
/**
 * Fishing.java
 *
 * @author Jaxus
 *
 **/
 
public class Fishing {
   
   private Client c;
   
   private enum FishData {
        SHRIMP(317, 1, 10, 303, 621),//NET
        SARDINE(335, 5, 20, 313, 622),////BAIT
        HERRING(359, 10, 30, 313, 622),//BAIT
        ANCHOVIES(319, 15, 40, 303, 621),//NET
        TROUT(333, 20, 50, 314, 623),//FEATHER
        PIKE(349, 25, 60, 313, 622),//BAIT
        SALMON(329, 30, 70, 314, 623),//FEATHER
        TUNA(359, 35, 80, 311, 618),//HARPOON
        LOBSTER(377, 40, 90, 301, 619),//CAGE
        SWORDFISH(371, 50, 100, 311, 618),//HARPOON
        SHARK(383, 76, 110, 311, 618),//HARPOON
        LAVAEEL(2148, 99, 120, 313, 622);//BAIT


      private int fish, level, exp, item, anim;
      
      private FishData(int fish, int level, int exp, int item, int anim) {
              this.fish = fish;
              this.level = level;
              this.exp = exp;
              this.item = item;
              this.anim = anim;
      }
      
      public int getFish() {
              return fish;
      }
      
      public int getLevel() {
              return level;
      }
      
      public int getExp() {
              return exp;
      }
      
      public int getItem() {
              return item;
              }
      
      public int getAnim() {
              return anim;
      }
   }
   
   public Fishing(Client c) {
      this.c = c;
   }
             
   public FishData checkFish(int fish) {
      for (FishData f : FishData.values()) {
         if (f.getFish() == fish) {
            return f;
         }
      }
      return null;
   }
      
   public void setupFishing(Client c, FishData f) {
      if (c.getItems().playerHasItem(f.getItem())) {
         if (c.playerLevel[c.playerFishing] &gt;= f.getLevel()) {
            c.fishing = true;
              c.fishTimer = (int) System.currentTimeMillis();
              startFishing(c, f);
          } else {
              c.sendMessage(&quot;You need a fishing level of at least &quot;+f.getLevel()+&quot; to fish here.&quot;);
          }
      } else {
         c.sendMessage(&quot;You do not have the proper items to fish here.&quot;);
      }
   }


   public void startFishing(final Client c, final FishData f) {
      EventManager.getSingleton().addEvent(new Event() {
         @Override
           public void execute(EventContainer container) {
            c.startAnimation(f.getAnim());
            if((int) System.currentTimeMillis() - c.fishTimer &gt; fishingTimer()){
               c.sendMessage(&quot;You catch some &quot;+Item.getItemName(f.getFish()).toLowerCase().replace(&quot;_&quot;, &quot; &quot;)+&quot;.&quot;);
                 c.getItems().addItem(f.getFish(), 1);
                 c.getPA().addSkillXP(f.getExp(), c.playerFishing);
                 c.fishTimer = (int) System.currentTimeMillis();
                 if (f.fish == 335 || f.fish == 339) {
                    if(c.getItems().playerHasItem(313, 1)){
                        c.getItems().deleteItem(313, 1);
                    } else {
                       c.sendMessage(&quot;You need bait to catch this fish.&quot;);
                    }
                 }
            }
               
               if (!c.getItems().playerHasItem(f.getItem()))
                  container.stop();


               if(!c.getItems().hasFreeSlots(1))
                  container.stop();
               
               if(!c.fishing){
                  c.startAnimation(65535);
                  container.stop();
               }
               
           }
      }, 1000);
        
    }
   
   private int fishingTimer(){
      return (int)((5000*Math.random()+1000) + (5000 - (int)Math.floor((c.playerLevel[c.playerFishing] * 1000) / 20)));
   }}[/code]

You should replace your previous Fishing class with the above. You may notice the timer is created using Event, which isn&#39;t completely terrible, but is suitable. I will most likely use a better system in the future, as I will update this thread when this is 100%.


I trust that you all are using an IDE, because there will most likely be some things you will have to remove in ActionHandler which associated with the old Fishing class. If not, you will want to look for everything that contains the below:
[code=java] c.getFishing()[/code]
You should only find the getters in a switch statement for firstClickNpc, which means they are going to be inside of cases. Do not remove the cases, because they represent the fishing spots you will need to go to in order to fish. 


As previously stated, this isn&#39;t 100%, so I will guide you on how to actually add a fish to a certain spot. Here is a list of NPC ids for fishing spots:
[code=java]
npc = 309   Fishing_spot         0   0
npc = 310   Fishing_spot         0   0
npc = 311   Fishing_spot         0   0
npc = 312   Fishing_spot         0   0
npc = 313   Fishing_spot         0   0
npc = 314   Fishing_spot         0   0
npc = 315   Fishing_spot         0   0
npc = 316   Fishing_spot         0   0
npc = 317   Fishing_spot         0   0
npc = 318   Fishing_spot         0   0
npc = 319   Fishing_spot         0   0
npc = 320   Fishing_spot         0   0
npc = 321   Fishing_spot         0   0
npc = 322   Fishing_spot         0   0
npc = 323   Fishing_spot         0   0
npc = 324   Fishing_spot         0   0
npc = 325   Fishing_spot         0   0
npc = 326   Fishing_spot         0   0
npc = 327   Fishing_spot         0   0
npc = 328   Fishing_spot         0   0
npc = 329   Fishing_spot         0   0
npc = 330   Fishing_spot         0   0
npc = 331   Fishing_spot         0   0
npc = 332   Fishing_spot         0   0
npc = 333   Fishing_spot         0   0
npc = 334   Fishing_spot         0   0
[/code]
Once you have added the Fishing class and removed any old getters in the ActionHandler class, you will want to select a few of the NPC id above and keep this number in mind. Let&#39;s say I want to associate fishing spot 309 with Shrimp. Under the firstClickNpc switch statement, you should either edit or add a new case, 309. Once you have added that, it will look something like this:
[code=java]
case 309: 
            c.getFishing().setupFishing(c, c.getFishing().checkFish(317));
            break;
[/code]
This will allow you to click NPC 309 (which is the fishing spot) and the code basically accesses the Fishing class and loads the setupFishing method. You may notice the 317, which represents the item id of your raw fish that is suppose to be caught from there. If you have added the getter correctly, you should be able to spawn npc 309 and properly fish shrimp. 

This is my first tutorial, so I&#39;m not sure if I detailed everything properly. If you have any problems/comments, feel free to give me feedback. 

Also, I will most likely finish adding the correct fishing spots and fish in the near future, which means you won&#39;t have to go through all of the trouble of adding all of those getters.</description>
    
    <lastBuildDate>Tue, 14 Aug 2012 18:53:34 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/pi-better-fishing/454194.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[PI]Better Fishing</title>
        <dc:creator><![CDATA[@Jaxus Jaxus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jaxus">@Jaxus</a> wrote:</p>
          <blockquote>
              <p>[quote=“tyb97, post:4, topic:454194”]I like the use of the timer.<br>
Only issue is how your accessing that class, you shouldn’t instance it per player, what I mean is this:</p>
<pre><code class="lang-auto">   public Fishing(Client c) {
      this.c = c;
   }</code></pre>
<p>and using getFishing() to access it, you already have the Client class as a param in all your methods, so just access it statically:</p>
<pre><code class="lang-auto"> case 309:
    Fishing.setupFishing(c, Fishing.checkFish(317));
    break;</code></pre>
<p>Also with the setupFishing method, why have that param as fish data, when you can just make it an int, and call the checkFish method inside the setupFishing method? Not really correcting you on that one, just a suggestion.[/quote]<br>
I will fix that on the next update. Thanks for letting me know.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-better-fishing/454194/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-better-fishing/454194/6</link>
        <pubDate>Tue, 14 Aug 2012 18:53:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-454194-6</guid>
        <source url="https://forum.moparisthebest.com/t/pi-better-fishing/454194.rss">[PI]Better Fishing</source>
      </item>
      <item>
        <title>[PI]Better Fishing</title>
        <dc:creator><![CDATA[@Loveandpower Loveandpower]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/loveandpower">@Loveandpower</a> wrote:</p>
          <blockquote>
              <p>enums &lt;3</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-better-fishing/454194/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-better-fishing/454194/5</link>
        <pubDate>Tue, 14 Aug 2012 14:13:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-454194-5</guid>
        <source url="https://forum.moparisthebest.com/t/pi-better-fishing/454194.rss">[PI]Better Fishing</source>
      </item>
      <item>
        <title>[PI]Better Fishing</title>
        <dc:creator><![CDATA[@tyb97 tyb97]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tyb97">@tyb97</a> wrote:</p>
          <blockquote>
              <p>I like the use of the timer.<br>
Only issue is how your accessing that class, you shouldn’t instance it per player, what I mean is this:</p>
<pre><code class="lang-auto">   public Fishing(Client c) {
      this.c = c;
   }</code></pre>
<p>and using getFishing() to access it, you already have the Client class as a param in all your methods, so just access it statically:</p>
<pre><code class="lang-auto"> case 309:
    Fishing.setupFishing(c, Fishing.checkFish(317));
    break;</code></pre>
<p>Also with the setupFishing method, why have that param as fish data, when you can just make it an int, and call the checkFish method inside the setupFishing method? Not really correcting you on that one, just a suggestion.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-better-fishing/454194/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-better-fishing/454194/4</link>
        <pubDate>Tue, 14 Aug 2012 05:16:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-454194-4</guid>
        <source url="https://forum.moparisthebest.com/t/pi-better-fishing/454194.rss">[PI]Better Fishing</source>
      </item>
      <item>
        <title>[PI]Better Fishing</title>
        <dc:creator><![CDATA[@Jaxus Jaxus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jaxus">@Jaxus</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="2" data-topic="454194">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/xxxtilllyxxx/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> xxxtilllyxxx:</div>
<blockquote>
<p>Nice tutorial, you should touch up on you’re conventions though.</p>
</blockquote>
</aside>
<p>Thanks for letting me know. When my colleague and I were working on the timer, we were doing a lot of transferring which lead to copying and pasting, so it kind of messed up the spacing and stuff.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-better-fishing/454194/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-better-fishing/454194/3</link>
        <pubDate>Tue, 14 Aug 2012 04:32:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-454194-3</guid>
        <source url="https://forum.moparisthebest.com/t/pi-better-fishing/454194.rss">[PI]Better Fishing</source>
      </item>
      <item>
        <title>[PI]Better Fishing</title>
        <dc:creator><![CDATA[@xxxtilllyxxx xxxtilllyxxx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xxxtilllyxxx">@xxxtilllyxxx</a> wrote:</p>
          <blockquote>
              <p>Nice tutorial, you should touch up on you’re conventions though.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-better-fishing/454194/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-better-fishing/454194/2</link>
        <pubDate>Tue, 14 Aug 2012 04:30:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-454194-2</guid>
        <source url="https://forum.moparisthebest.com/t/pi-better-fishing/454194.rss">[PI]Better Fishing</source>
      </item>
      <item>
        <title>[PI]Better Fishing</title>
        <dc:creator><![CDATA[@Jaxus Jaxus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jaxus">@Jaxus</a> wrote:</p>
          <blockquote>
              <p>Hello everyone, I’m releasing my Fishing class that is much better than Sanity’s version; however, before you try to complete this tutorial, you should take the following into consideration:</p>
<p>[ul][li]This is probably not the best way to go about handling fish, because I did it the way I was most comfortable with.[/li]<br>
[li]Data storage - I used enums rather than arrays to store the fishing data. If you don’t know they difference, they basically offer the same output; however, enums take about twice as long to be loaded, but they use up less memory. If your server has good engine performance, then there will be no noticeable performance decrease.[/li]<br>
[li]Fish support - Not every fish is added, so this isn’t 100%, although it would be extremely easy adding more fish. If you want, I will add every single fish.[/li]<br>
[li]Fishing timer - There is no official formula release for Fishing timers, so my fellow colleague created a unique timer which is based off of skill level. I believe this timer is  very close to being similar to RS.[/li][/ul]<br>
Now, let’s get started on the Fishing class:</p>
<p>[code=java]package server.model.players.skills;</p>
<p>import server.util.Misc;<br>
import server.event.Event;<br>
import server.event.EventContainer;<br>
import server.event.EventManager;<br>
import server.model.items.Item;<br>
import server.model.players.Client;<br>
/**</p>
<ul>
<li>Fishing.java</li>
<li>
</li>
<li>
<span class="mention">@author</span> Jaxus</li>
<li>
</li>
</ul>
<p>**/</p>
<p>public class Fishing {</p>
<p>private Client c;</p>
<p>private enum FishData {<br>
SHRIMP(317, 1, 10, 303, 621),//NET<br>
SARDINE(335, 5, 20, 313, 622),////BAIT<br>
HERRING(359, 10, 30, 313, 622),//BAIT<br>
ANCHOVIES(319, 15, 40, 303, 621),//NET<br>
TROUT(333, 20, 50, 314, 623),//FEATHER<br>
PIKE(349, 25, 60, 313, 622),//BAIT<br>
SALMON(329, 30, 70, 314, 623),//FEATHER<br>
TUNA(359, 35, 80, 311, 618),//HARPOON<br>
LOBSTER(377, 40, 90, 301, 619),//CAGE<br>
SWORDFISH(371, 50, 100, 311, 618),//HARPOON<br>
SHARK(383, 76, 110, 311, 618),//HARPOON<br>
LAVAEEL(2148, 99, 120, 313, 622);//BAIT</p>
<pre><code>  private int fish, level, exp, item, anim;
  
  private FishData(int fish, int level, int exp, int item, int anim) {
          this.fish = fish;
          this.level = level;
          this.exp = exp;
          this.item = item;
          this.anim = anim;
  }
  
  public int getFish() {
          return fish;
  }
  
  public int getLevel() {
          return level;
  }
  
  public int getExp() {
          return exp;
  }
  
  public int getItem() {
          return item;
          }
  
  public int getAnim() {
          return anim;
  }
</code></pre>
<p>}</p>
<p>public Fishing(Client c) {<br>
this.c = c;<br>
}</p>
<p>public FishData checkFish(int fish) {<br>
for (FishData f : FishData.values()) {<br>
if (f.getFish() == fish) {<br>
return f;<br>
}<br>
}<br>
return null;<br>
}</p>
<p>public void setupFishing(Client c, FishData f) {<br>
if (c.getItems().playerHasItem(f.getItem())) {<br>
if (c.playerLevel[c.playerFishing] &gt;= f.getLevel()) {<br>
c.fishing = true;<br>
c.fishTimer = (int) System.currentTimeMillis();<br>
startFishing(c, f);<br>
} else {<br>
c.sendMessage(“You need a fishing level of at least “+f.getLevel()+” to fish here.”);<br>
}<br>
} else {<br>
c.sendMessage(“You do not have the proper items to fish here.”);<br>
}<br>
}</p>
<p>public void startFishing(final Client c, final FishData f) {<br>
EventManager.getSingleton().addEvent(new Event() {<br>
<a class="mention" href="/u/override">@Override</a><br>
public void execute(EventContainer container) {<br>
c.startAnimation(f.getAnim());<br>
if((int) System.currentTimeMillis() - c.fishTimer &gt; fishingTimer()){<br>
c.sendMessage(“You catch some “+Item.getItemName(f.getFish()).toLowerCase().replace(”_”, " “)+”.");<br>
c.getItems().addItem(f.getFish(), 1);<br>
c.getPA().addSkillXP(f.getExp(), c.playerFishing);<br>
c.fishTimer = (int) System.currentTimeMillis();<br>
if (f.fish == 335 || f.fish == 339) {<br>
if(c.getItems().playerHasItem(313, 1)){<br>
c.getItems().deleteItem(313, 1);<br>
} else {<br>
c.sendMessage(“You need bait to catch this fish.”);<br>
}<br>
}<br>
}</p>
<pre><code>           if (!c.getItems().playerHasItem(f.getItem()))
              container.stop();


           if(!c.getItems().hasFreeSlots(1))
              container.stop();
           
           if(!c.fishing){
              c.startAnimation(65535);
              container.stop();
           }
           
       }
  }, 1000);
    
}
</code></pre>
<p>private int fishingTimer(){<br>
return (int)((5000*Math.random()+1000) + (5000 - (int)Math.floor((c.playerLevel[c.playerFishing] * 1000) / 20)));<br>
}}[/code]</p>
<p>You should replace your previous Fishing class with the above. You may notice the timer is created using Event, which isn’t completely terrible, but is suitable. I will most likely use a better system in the future, as I will update this thread when this is 100%.</p>
<p>I trust that you all are using an IDE, because there will most likely be some things you will have to remove in ActionHandler which associated with the old Fishing class. If not, you will want to look for everything that contains the below:</p>
<pre><code class="lang-auto"></code></pre>
<p>You should only find the getters in a switch statement for firstClickNpc, which means they are going to be inside of cases. Do not remove the cases, because they represent the fishing spots you will need to go to in order to fish.</p>
<p>As previously stated, this isn’t 100%, so I will guide you on how to actually add a fish to a certain spot. Here is a list of NPC ids for fishing spots:</p>
<pre><code class="lang-auto">npc = 309   Fishing_spot         0   0
npc = 310   Fishing_spot         0   0
npc = 311   Fishing_spot         0   0
npc = 312   Fishing_spot         0   0
npc = 313   Fishing_spot         0   0
npc = 314   Fishing_spot         0   0
npc = 315   Fishing_spot         0   0
npc = 316   Fishing_spot         0   0
npc = 317   Fishing_spot         0   0
npc = 318   Fishing_spot         0   0
npc = 319   Fishing_spot         0   0
npc = 320   Fishing_spot         0   0
npc = 321   Fishing_spot         0   0
npc = 322   Fishing_spot         0   0
npc = 323   Fishing_spot         0   0
npc = 324   Fishing_spot         0   0
npc = 325   Fishing_spot         0   0
npc = 326   Fishing_spot         0   0
npc = 327   Fishing_spot         0   0
npc = 328   Fishing_spot         0   0
npc = 329   Fishing_spot         0   0
npc = 330   Fishing_spot         0   0
npc = 331   Fishing_spot         0   0
npc = 332   Fishing_spot         0   0
npc = 333   Fishing_spot         0   0
npc = 334   Fishing_spot         0   0</code></pre>
<p>Once you have added the Fishing class and removed any old getters in the ActionHandler class, you will want to select a few of the NPC id above and keep this number in mind. Let’s say I want to associate fishing spot 309 with Shrimp. Under the firstClickNpc switch statement, you should either edit or add a new case, 309. Once you have added that, it will look something like this:</p>
<pre><code class="lang-auto">case 309: 
            c.getFishing().setupFishing(c, c.getFishing().checkFish(317));
            break;</code></pre>
<p>This will allow you to click NPC 309 (which is the fishing spot) and the code basically accesses the Fishing class and loads the setupFishing method. You may notice the 317, which represents the item id of your raw fish that is suppose to be caught from there. If you have added the getter correctly, you should be able to spawn npc 309 and properly fish shrimp.</p>
<p>This is my first tutorial, so I’m not sure if I detailed everything properly. If you have any problems/comments, feel free to give me feedback.</p>
<p>Also, I will most likely finish adding the correct fishing spots and fish in the near future, which means you won’t have to go through all of the trouble of adding all of those getters.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-better-fishing/454194/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-better-fishing/454194/1</link>
        <pubDate>Tue, 14 Aug 2012 03:59:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-454194-1</guid>
        <source url="https://forum.moparisthebest.com/t/pi-better-fishing/454194.rss">[PI]Better Fishing</source>
      </item>
  </channel>
</rss>
