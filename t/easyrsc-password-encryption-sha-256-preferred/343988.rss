<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>EasyRSC Password Encryption (SHA-256 preferred)</title>
    <link>https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988</link>
    <description>I&#39;ve been working at this for a little over two hours and can&#39;t figure this out.

My goal is to have the server check what is typed into the client for the password against the cfg player save file with the password having been previously sha-256 encrypted.

I tried just doing the more simple md5 encryption but even just trying to use the playerloader with the code below failed.
[code]if(props.getProperty(&quot;pass&quot;).toLowerCase().equals(DataConversions.md5(pass.toLowerCase())))[/code]

I&#39;ve gone through the RSCD server sources which used md5 encryption and other than the DataConversions, the only other reference which does not exist in EasyRSC is in the MiscPacketBuilder as:
[code]s.addBytes(DataConversions.md5(player.getPassword()).getBytes());[/code]


I have PHP doing sha1($password) for registration.



MD5 encryption creates a one way hash. The password the client receives from the user is in plaintext. It should send that password to the server and the server should encrypt the input into either MD5 or SHA1/SHA-256 and check the hash against what is in the player.cfg file. If it matches, it should allow login.

If you were looking for a encode/decode encryption function, then AES could be used with a private key.



Once SHA-256 encryption has been installed, I want to salt it, first with a static 8 byte string and then see about implementing a secure random generator with the salt.

I don&#39;t want a repeat of Project Elder&#39;s 700 player cfg files being leaked with plaintext passwords. Non-salted MD5 hashes are just as bad if they are simple enough to exist in a rainbow table.</description>
    
    <lastBuildDate>Thu, 17 Jun 2010 02:17:21 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>EasyRSC Password Encryption (SHA-256 preferred)</title>
        <dc:creator><![CDATA[@darscape darscape]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/darscape">@darscape</a> wrote:</p>
          <blockquote>
              <p>Now that sounds like exactly what I am looking to do.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988/10</link>
        <pubDate>Thu, 17 Jun 2010 02:17:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-343988-10</guid>
        <source url="https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988.rss">EasyRSC Password Encryption (SHA-256 preferred)</source>
      </item>
      <item>
        <title>EasyRSC Password Encryption (SHA-256 preferred)</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>[quote=“Kryptix, post:1, topic:344382”]I’m pretty sure that the server actually does the hashing (as I’ve always disagreed with it). Remember that you could make ::PASS commands on RSCD to view their password.[/quote]That means that the server has the password stored in plaintext, as well, which entirely defeats the purpose of hashing it in the first place.</p>
<p>[quote=“CodeForFame, post:4, topic:343988”][quote author=Kryptix link=topic=440368.msg3238067#msg3238067 date=1276650636]<br>
I’m pretty sure that the server actually does the hashing (as I’ve always disagreed with it). Remember that you could make ::PASS commands on RSCD to view their password.<br>
[/quote]<br>
Probably, but that’s just retarded to do it that way (how uncharacteristic…(/sarcasm)).  I was just assuming it was done how I would do it.[/quote]How is that the retarded way to do it? It’s the proper way. The point of hashing a password when storing it in a database is to prevent it from being revealed to someone who manages to get a copy of a database dump. Therefore, if someone were to get a copy of it, and only the client were to hash the passwords, that person can simply write up a script that accesses the server-sided login script and sends the hash retrieved from the database as its password.</p>
<p>The other problem arises when hashing is done only server-sided. Since the password is sent either in plaintext or in an easily reversible encryption, any packet-sniffers set to eavesdrop on incoming connections pertaining to that server will be able to retrieve the full password.</p>
<p>In other words, I think the best solution is the hashing vBulletin uses, ‘md5(md5($password).$salt)’, as the client can send the hashed password and the server then hashes the concatenation of the hashed password and the randomly generated ‘salt’ (created server-sided, obviously). Of course, it doesn’t have to use MD5 as other hashing methods will accomplish the same job.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988/9</link>
        <pubDate>Thu, 17 Jun 2010 01:23:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-343988-9</guid>
        <source url="https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988.rss">EasyRSC Password Encryption (SHA-256 preferred)</source>
      </item>
      <item>
        <title>EasyRSC Password Encryption (SHA-256 preferred)</title>
        <dc:creator><![CDATA[@darscape darscape]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/darscape">@darscape</a> wrote:</p>
          <blockquote>
              <p>Hope to find out</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988/8</link>
        <pubDate>Thu, 17 Jun 2010 00:55:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-343988-8</guid>
        <source url="https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988.rss">EasyRSC Password Encryption (SHA-256 preferred)</source>
      </item>
      <item>
        <title>EasyRSC Password Encryption (SHA-256 preferred)</title>
        <dc:creator><![CDATA[@Z_Prototype Z Prototype]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/z_prototype">@Z_Prototype</a> wrote:</p>
          <blockquote>
              <p>Yea, I didn’t know his name so I was hoping Pompano could do a 2nd referrer. Pompano seems to be good with maps, quests and drops so I wouldn’t say the others can’t to anything. Tommy just rules  ;D</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988/7</link>
        <pubDate>Wed, 16 Jun 2010 10:22:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-343988-7</guid>
        <source url="https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988.rss">EasyRSC Password Encryption (SHA-256 preferred)</source>
      </item>
      <item>
        <title>EasyRSC Password Encryption (SHA-256 preferred)</title>
        <dc:creator><![CDATA[@yong_min yong min]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/yong_min">@yong_min</a> wrote:</p>
          <blockquote>
              <p>[quote=“Z Prototype, post:5, topic:343988”]The server “RSC Shadow” makes good use of hashing for it’s passwords. I’d suggest getting in contact with one of their Admins. Pompano would be your best bet.<br>
Here’s the link <a href="http://rscshadow.com/%5B/quote%5D" rel="nofollow noopener">http://rscshadow.com/[/quote]</a></p>
<p>Or getting in contact with Tommy, as he’ll be doing everything for Shadow… The others can’t do jack.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988/6</link>
        <pubDate>Wed, 16 Jun 2010 09:02:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-343988-6</guid>
        <source url="https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988.rss">EasyRSC Password Encryption (SHA-256 preferred)</source>
      </item>
      <item>
        <title>EasyRSC Password Encryption (SHA-256 preferred)</title>
        <dc:creator><![CDATA[@Z_Prototype Z Prototype]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/z_prototype">@Z_Prototype</a> wrote:</p>
          <blockquote>
              <p>The server “RSC Shadow” makes good use of hashing for it’s passwords. I’d suggest getting in contact with one of their Admins. Pompano would be your best bet.<br>
Here’s the link <a href="http://rscshadow.com/" rel="nofollow noopener">http://rscshadow.com/</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988/5</link>
        <pubDate>Wed, 16 Jun 2010 05:16:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-343988-5</guid>
        <source url="https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988.rss">EasyRSC Password Encryption (SHA-256 preferred)</source>
      </item>
      <item>
        <title>EasyRSC Password Encryption (SHA-256 preferred)</title>
        <dc:creator><![CDATA[@CodeForFame CodeForFame]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/codeforfame">@CodeForFame</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="1" data-topic="344382">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/kryptix/40/5_513041d5f7104045db30895d3b90af16.png" class="avatar">
</div>
<blockquote>
<p>I’m pretty sure that the server actually does the hashing (as I’ve always disagreed with it). Remember that you could make ::PASS commands on RSCD to view their password.</p>
</blockquote>
</aside>
<p>Probably, but that’s just retarded to do it that way (how uncharacteristic…(/sarcasm)).  I was just assuming it was done how I would do it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988/4</link>
        <pubDate>Wed, 16 Jun 2010 04:21:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-343988-4</guid>
        <source url="https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988.rss">EasyRSC Password Encryption (SHA-256 preferred)</source>
      </item>
      <item>
        <title>EasyRSC Password Encryption (SHA-256 preferred)</title>
        <dc:creator><![CDATA[@CodeForFame CodeForFame]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/codeforfame">@CodeForFame</a> wrote:</p>
          <blockquote>
              <p>Look in the DataConversions class, and there should be a MessageDigest object.  Look where it is initialized, and change MD5 to SHA-256.</p>
<p>You might have to do some other modifications to get it to work properly with how RSCD does it.  As for porting it to EasyRSC, you’re on your own.</p>
<p>As it stands the client seems to be the one doing the hashing, and the server checks the hash vs the DB, thus doesn’t need to do any hashing.</p>
<p>If you are going to salt it, you should send the plain-text password (actually you should have it sent in an encrypted form) to the server, then hash it with the salt and compare it to the DB entry.</p>
<p>P.S.  There is no point in converting passwords to lowercase when you compare them.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988/3</link>
        <pubDate>Tue, 15 Jun 2010 22:55:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-343988-3</guid>
        <source url="https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988.rss">EasyRSC Password Encryption (SHA-256 preferred)</source>
      </item>
      <item>
        <title>EasyRSC Password Encryption (SHA-256 preferred)</title>
        <dc:creator><![CDATA[@JUMPHIM JUMPHIM]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jumphim">@JUMPHIM</a> wrote:</p>
          <blockquote>
              <p>dam no 1 wants to help ya ay:)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988/2</link>
        <pubDate>Mon, 14 Jun 2010 09:26:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-343988-2</guid>
        <source url="https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988.rss">EasyRSC Password Encryption (SHA-256 preferred)</source>
      </item>
      <item>
        <title>EasyRSC Password Encryption (SHA-256 preferred)</title>
        <dc:creator><![CDATA[@darscape darscape]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/darscape">@darscape</a> wrote:</p>
          <blockquote>
              <p>I’ve been working at this for a little over two hours and can’t figure this out.</p>
<p>My goal is to have the server check what is typed into the client for the password against the cfg player save file with the password having been previously sha-256 encrypted.</p>
<p>I tried just doing the more simple md5 encryption but even just trying to use the playerloader with the code below failed.</p>
<pre><code class="lang-auto">if(props.getProperty("pass").toLowerCase().equals(DataConversions.md5(pass.toLowerCase())))</code></pre>
<p>I’ve gone through the RSCD server sources which used md5 encryption and other than the DataConversions, the only other reference which does not exist in EasyRSC is in the MiscPacketBuilder as:</p>
<pre><code class="lang-auto">s.addBytes(DataConversions.md5(player.getPassword()).getBytes());</code></pre>
<p>I have PHP doing sha1($password) for registration.</p>
<p>MD5 encryption creates a one way hash. The password the client receives from the user is in plaintext. It should send that password to the server and the server should encrypt the input into either MD5 or SHA1/SHA-256 and check the hash against what is in the player.cfg file. If it matches, it should allow login.</p>
<p>If you were looking for a encode/decode encryption function, then AES could be used with a private key.</p>
<p>Once SHA-256 encryption has been installed, I want to salt it, first with a static 8 byte string and then see about implementing a secure random generator with the salt.</p>
<p>I don’t want a repeat of Project Elder’s 700 player cfg files being leaked with plaintext passwords. Non-salted MD5 hashes are just as bad if they are simple enough to exist in a rainbow table.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988/1</link>
        <pubDate>Sun, 13 Jun 2010 19:53:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-343988-1</guid>
        <source url="https://forum.moparisthebest.com/t/easyrsc-password-encryption-sha-256-preferred/343988.rss">EasyRSC Password Encryption (SHA-256 preferred)</source>
      </item>
  </channel>
</rss>
