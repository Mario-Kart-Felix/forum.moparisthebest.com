<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>517 client help</title>
    <link>https://forum.moparisthebest.com/t/517-client-help/366906</link>
    <description>Hey guys i&#39;ve been trying to decompile this client:
[url=http://www.mediafire.com/?zznnxv1mtjq]Client[/url]

I decompiled this with Jd-gui, and got this somebody help me will give them the source for this!, will payback!

I tried multiple z508 clients and did not work with the source yes I did change the ports and stuff can you please help me!

Will rep!
But when I compile I get these errors:

[CODE]



                    ^
BB.java:12: &#39;;&#39; expected
  public static String append = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu
vwxyz0123456789!\&quot;┬ú$%^&amp;*()-_=+[{]};:&#39;@#~,&lt;.&gt;/?\\| &quot; + String.valueOf(&#39;├ä&#39;) + St
ring.valueOf(&#39;├ï&#39;) + String.valueOf(&#39;├?&#39;) + String.valueOf(&#39;├û&#39;) + String.valueO
f(&#39;├£&#39;) + String.valueOf(&#39;├ñ&#39;) + String.valueOf(&#39;├½&#39;) + String.valueOf(&#39;├»&#39;) + S
tring.valueOf(&#39;├╢&#39;) + String.valueOf(&#39;├╝&#39;) + String.valueOf(&#39;├┐&#39;) + String.value
Of(&#39;├ƒ&#39;);




                            ^
BB.java:12: invalid method declaration; return type required
  public static String append = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu
vwxyz0123456789!\&quot;┬ú$%^&amp;*()-_=+[{]};:&#39;@#~,&lt;.&gt;/?\\| &quot; + String.valueOf(&#39;├ä&#39;) + St
ring.valueOf(&#39;├ï&#39;) + String.valueOf(&#39;├?&#39;) + String.valueOf(&#39;├û&#39;) + String.valueO
f(&#39;├£&#39;) + String.valueOf(&#39;├ñ&#39;) + String.valueOf(&#39;├½&#39;) + String.valueOf(&#39;├»&#39;) + S
tring.valueOf(&#39;├╢&#39;) + String.valueOf(&#39;├╝&#39;) + String.valueOf(&#39;├┐&#39;) + String.value
Of(&#39;├ƒ&#39;);




                             ^
BB.java:12: unclosed character literal
  public static String append = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu
vwxyz0123456789!\&quot;┬ú$%^&amp;*()-_=+[{]};:&#39;@#~,&lt;.&gt;/?\\| &quot; + String.valueOf(&#39;├ä&#39;) + St
ring.valueOf(&#39;├ï&#39;) + String.valueOf(&#39;├?&#39;) + String.valueOf(&#39;├û&#39;) + String.valueO
f(&#39;├£&#39;) + String.valueOf(&#39;├ñ&#39;) + String.valueOf(&#39;├½&#39;) + String.valueOf(&#39;├»&#39;) + S
tring.valueOf(&#39;├╢&#39;) + String.valueOf(&#39;├╝&#39;) + String.valueOf(&#39;├┐&#39;) + String.value
Of(&#39;├ƒ&#39;);




                                     ^
BB.java:12: illegal character: \188
  public static String append = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu
vwxyz0123456789!\&quot;┬ú$%^&amp;*()-_=+[{]};:&#39;@#~,&lt;.&gt;/?\\| &quot; + String.valueOf(&#39;├ä&#39;) + St
ring.valueOf(&#39;├ï&#39;) + String.valueOf(&#39;├?&#39;) + String.valueOf(&#39;├û&#39;) + String.valueO
f(&#39;├£&#39;) + String.valueOf(&#39;├ñ&#39;) + String.valueOf(&#39;├½&#39;) + String.valueOf(&#39;├»&#39;) + S
tring.valueOf(&#39;├╢&#39;) + String.valueOf(&#39;├╝&#39;) + String.valueOf(&#39;├┐&#39;) + String.value
Of(&#39;├ƒ&#39;);




                                       ^
BB.java:12: unclosed character literal
  public static String append = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu
vwxyz0123456789!\&quot;┬ú$%^&amp;*()-_=+[{]};:&#39;@#~,&lt;.&gt;/?\\| &quot; + String.valueOf(&#39;├ä&#39;) + St
ring.valueOf(&#39;├ï&#39;) + String.valueOf(&#39;├?&#39;) + String.valueOf(&#39;├û&#39;) + String.valueO
f(&#39;├£&#39;) + String.valueOf(&#39;├ñ&#39;) + String.valueOf(&#39;├½&#39;) + String.valueOf(&#39;├»&#39;) + S
tring.valueOf(&#39;├╢&#39;) + String.valueOf(&#39;├╝&#39;) + String.valueOf(&#39;├┐&#39;) + String.value
Of(&#39;├ƒ&#39;);




                                        ^
BB.java:12: illegal start of type
  public static String append = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu
vwxyz0123456789!\&quot;┬ú$%^&amp;*()-_=+[{]};:&#39;@#~,&lt;.&gt;/?\\| &quot; + String.valueOf(&#39;├ä&#39;) + St
ring.valueOf(&#39;├ï&#39;) + String.valueOf(&#39;├?&#39;) + String.valueOf(&#39;├û&#39;) + String.valueO
f(&#39;├£&#39;) + String.valueOf(&#39;├ñ&#39;) + String.valueOf(&#39;├½&#39;) + String.valueOf(&#39;├»&#39;) + S
tring.valueOf(&#39;├╢&#39;) + String.valueOf(&#39;├╝&#39;) + String.valueOf(&#39;├┐&#39;) + String.value
Of(&#39;├ƒ&#39;);




                                           ^
BB.java:12: &#39;;&#39; expected
  public static String append = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu
vwxyz0123456789!\&quot;┬ú$%^&amp;*()-_=+[{]};:&#39;@#~,&lt;.&gt;/?\\| &quot; + String.valueOf(&#39;├ä&#39;) + St
ring.valueOf(&#39;├ï&#39;) + String.valueOf(&#39;├?&#39;) + String.valueOf(&#39;├û&#39;) + String.valueO
f(&#39;├£&#39;) + String.valueOf(&#39;├ñ&#39;) + String.valueOf(&#39;├½&#39;) + String.valueOf(&#39;├»&#39;) + S
tring.valueOf(&#39;├╢&#39;) + String.valueOf(&#39;├╝&#39;) + String.valueOf(&#39;├┐&#39;) + String.value
Of(&#39;├ƒ&#39;);




                                                   ^
BB.java:12: invalid method declaration; return type required
  public static String append = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu
vwxyz0123456789!\&quot;┬ú$%^&amp;*()-_=+[{]};:&#39;@#~,&lt;.&gt;/?\\| &quot; + String.valueOf(&#39;├ä&#39;) + St
ring.valueOf(&#39;├ï&#39;) + String.valueOf(&#39;├?&#39;) + String.valueOf(&#39;├û&#39;) + String.valueO
f(&#39;├£&#39;) + String.valueOf(&#39;├ñ&#39;) + String.valueOf(&#39;├½&#39;) + String.valueOf(&#39;├»&#39;) + S
tring.valueOf(&#39;├╢&#39;) + String.valueOf(&#39;├╝&#39;) + String.valueOf(&#39;├┐&#39;) + String.value
Of(&#39;├ƒ&#39;);




                                                    ^
BB.java:12: unclosed character literal
  public static String append = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu
vwxyz0123456789!\&quot;┬ú$%^&amp;*()-_=+[{]};:&#39;@#~,&lt;.&gt;/?\\| &quot; + String.valueOf(&#39;├ä&#39;) + St
ring.valueOf(&#39;├ï&#39;) + String.valueOf(&#39;├?&#39;) + String.valueOf(&#39;├û&#39;) + String.valueO
f(&#39;├£&#39;) + String.valueOf(&#39;├ñ&#39;) + String.valueOf(&#39;├½&#39;) + String.valueOf(&#39;├»&#39;) + S
tring.valueOf(&#39;├╢&#39;) + String.valueOf(&#39;├╝&#39;) + String.valueOf(&#39;├┐&#39;) + String.value
Of(&#39;├ƒ&#39;);




                                                            ^
BB.java:12: illegal character: \191
  public static String append = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu
vwxyz0123456789!\&quot;┬ú$%^&amp;*()-_=+[{]};:&#39;@#~,&lt;.&gt;/?\\| &quot; + String.valueOf(&#39;├ä&#39;) + St
ring.valueOf(&#39;├ï&#39;) + String.valueOf(&#39;├?&#39;) + String.valueOf(&#39;├û&#39;) + String.valueO
f(&#39;├£&#39;) + String.valueOf(&#39;├ñ&#39;) + String.valueOf(&#39;├½&#39;) + String.valueOf(&#39;├»&#39;) + S
tring.valueOf(&#39;├╢&#39;) + String.valueOf(&#39;├╝&#39;) + String.valueOf(&#39;├┐&#39;) + String.value
Of(&#39;├ƒ&#39;);




                                                              ^
BB.java:12: unclosed character literal
  public static String append = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu
vwxyz0123456789!\&quot;┬ú$%^&amp;*()-_=+[{]};:&#39;@#~,&lt;.&gt;/?\\| &quot; + String.valueOf(&#39;├ä&#39;) + St
ring.valueOf(&#39;├ï&#39;) + String.valueOf(&#39;├?&#39;) + String.valueOf(&#39;├û&#39;) + String.valueO
f(&#39;├£&#39;) + String.valueOf(&#39;├ñ&#39;) + String.valueOf(&#39;├½&#39;) + String.valueOf(&#39;├»&#39;) + S
tring.valueOf(&#39;├╢&#39;) + String.valueOf(&#39;├╝&#39;) + String.valueOf(&#39;├┐&#39;) + String.value
Of(&#39;├ƒ&#39;);




                                                               ^
BB.java:12: illegal start of type
  public static String append = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu
vwxyz0123456789!\&quot;┬ú$%^&amp;*()-_=+[{]};:&#39;@#~,&lt;.&gt;/?\\| &quot; + String.valueOf(&#39;├ä&#39;) + St
ring.valueOf(&#39;├ï&#39;) + String.valueOf(&#39;├?&#39;) + String.valueOf(&#39;├û&#39;) + String.valueO
f(&#39;├£&#39;) + String.valueOf(&#39;├ñ&#39;) + String.valueOf(&#39;├½&#39;) + String.valueOf(&#39;├»&#39;) + S
tring.valueOf(&#39;├╢&#39;) + String.valueOf(&#39;├╝&#39;) + String.valueOf(&#39;├┐&#39;) + String.value
Of(&#39;├ƒ&#39;);




                                                                  ^
BB.java:12: &#39;;&#39; expected
  public static String append = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu
vwxyz0123456789!\&quot;┬ú$%^&amp;*()-_=+[{]};:&#39;@#~,&lt;.&gt;/?\\| &quot; + String.valueOf(&#39;├ä&#39;) + St
ring.valueOf(&#39;├ï&#39;) + String.valueOf(&#39;├?&#39;) + String.valueOf(&#39;├û&#39;) + String.valueO
f(&#39;├£&#39;) + String.valueOf(&#39;├ñ&#39;) + String.valueOf(&#39;├½&#39;) + String.valueOf(&#39;├»&#39;) + S
tring.valueOf(&#39;├╢&#39;) + String.valueOf(&#39;├╝&#39;) + String.valueOf(&#39;├┐&#39;) + String.value
Of(&#39;├ƒ&#39;);




                                                                          ^
BB.java:12: invalid method declaration; return type required
  public static String append = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu
vwxyz0123456789!\&quot;┬ú$%^&amp;*()-_=+[{]};:&#39;@#~,&lt;.&gt;/?\\| &quot; + String.valueOf(&#39;├ä&#39;) + St
ring.valueOf(&#39;├ï&#39;) + String.valueOf(&#39;├?&#39;) + String.valueOf(&#39;├û&#39;) + String.valueO
f(&#39;├£&#39;) + String.valueOf(&#39;├ñ&#39;) + String.valueOf(&#39;├½&#39;) + String.valueOf(&#39;├»&#39;) + S
tring.valueOf(&#39;├╢&#39;) + String.valueOf(&#39;├╝&#39;) + String.valueOf(&#39;├┐&#39;) + String.value
Of(&#39;├ƒ&#39;);




                                                                           ^
BB.java:12: unclosed character literal
  public static String append = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu
vwxyz0123456789!\&quot;┬ú$%^&amp;*()-_=+[{]};:&#39;@#~,&lt;.&gt;/?\\| &quot; + String.valueOf(&#39;├ä&#39;) + St
ring.valueOf(&#39;├ï&#39;) + String.valueOf(&#39;├?&#39;) + String.valueOf(&#39;├û&#39;) + String.valueO
f(&#39;├£&#39;) + String.valueOf(&#39;├ñ&#39;) + String.valueOf(&#39;├½&#39;) + String.valueOf(&#39;├»&#39;) + S
tring.valueOf(&#39;├╢&#39;) + String.valueOf(&#39;├╝&#39;) + String.valueOf(&#39;├┐&#39;) + String.value
Of(&#39;├ƒ&#39;);





   ^
BB.java:12: &#39;)&#39; expected
  public static String append = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu
vwxyz0123456789!\&quot;┬ú$%^&amp;*()-_=+[{]};:&#39;@#~,&lt;.&gt;/?\\| &quot; + String.valueOf(&#39;├ä&#39;) + St
ring.valueOf(&#39;├ï&#39;) + String.valueOf(&#39;├?&#39;) + String.valueOf(&#39;├û&#39;) + String.valueO
f(&#39;├£&#39;) + String.valueOf(&#39;├ñ&#39;) + String.valueOf(&#39;├½&#39;) + String.valueOf(&#39;├»&#39;) + S
tring.valueOf(&#39;├╢&#39;) + String.valueOf(&#39;├╝&#39;) + String.valueOf(&#39;├┐&#39;) + String.value
Of(&#39;├ƒ&#39;);





     ^
BB.java:12: unclosed character literal
  public static String append = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu
vwxyz0123456789!\&quot;┬ú$%^&amp;*()-_=+[{]};:&#39;@#~,&lt;.&gt;/?\\| &quot; + String.valueOf(&#39;├ä&#39;) + St
ring.valueOf(&#39;├ï&#39;) + String.valueOf(&#39;├?&#39;) + String.valueOf(&#39;├û&#39;) + String.valueO
f(&#39;├£&#39;) + String.valueOf(&#39;├ñ&#39;) + String.valueOf(&#39;├½&#39;) + String.valueOf(&#39;├»&#39;) + S
tring.valueOf(&#39;├╢&#39;) + String.valueOf(&#39;├╝&#39;) + String.valueOf(&#39;├┐&#39;) + String.value
Of(&#39;├ƒ&#39;);





      ^
Class105.java:43: warning: unmappable character for encoding Cp1252
/* 53 */       Class68_Sub13_Sub9.anIntArray3579[&#39;├?&#39;] = 43;
                                                   ^
Class105.java:40: unclosed character literal
/* 50 */       Class68_Sub13_Sub9.anIntArray3579[&#39;├ƒ&#39;] = 28;
                                                 ^
Class105.java:40: not a statement
/* 50 */       Class68_Sub13_Sub9.anIntArray3579[&#39;├ƒ&#39;] = 28;
                                                ^
Class105.java:40: &#39;;&#39; expected
/* 50 */       Class68_Sub13_Sub9.anIntArray3579[&#39;├ƒ&#39;] = 28;
                                                   ^
Class105.java:40: unclosed character literal
/* 50 */       Class68_Sub13_Sub9.anIntArray3579[&#39;├ƒ&#39;] = 28;
                                                    ^
Class105.java:41: unclosed character literal
/* 51 */       Class68_Sub13_Sub9.anIntArray3579[&#39;├£&#39;] = 74;
                                                 ^
Class105.java:41: not a statement
/* 51 */       Class68_Sub13_Sub9.anIntArray3579[&#39;├£&#39;] = 74;
                                                ^
Class105.java:41: &#39;;&#39; expected
/* 51 */       Class68_Sub13_Sub9.anIntArray3579[&#39;├£&#39;] = 74;
                                                   ^
Class105.java:41: unclosed character literal
/* 51 */       Class68_Sub13_Sub9.anIntArray3579[&#39;├£&#39;] = 74;
                                                    ^
Class105.java:42: unclosed character literal
/* 52 */       Class68_Sub13_Sub9.anIntArray3579[&#39;┬╜&#39;] = 26;
                                                 ^
Class105.java:42: illegal character: \189
/* 52 */       Class68_Sub13_Sub9.anIntArray3579[&#39;┬╜&#39;] = 26;
                                                   ^
Class105.java:42: not a statement
/* 52 */       Class68_Sub13_Sub9.anIntArray3579[&#39;┬╜&#39;] = 26;
                                                ^
Class105.java:42: unclosed character literal
/* 52 */       Class68_Sub13_Sub9.anIntArray3579[&#39;┬╜&#39;] = 26;
                                                    ^
Class105.java:43: unclosed character literal
/* 53 */       Class68_Sub13_Sub9.anIntArray3579[&#39;├?&#39;] = 43;
                                                 ^
Class105.java:43: illegal character: \65533
/* 53 */       Class68_Sub13_Sub9.anIntArray3579[&#39;├?&#39;] = 43;
                                                   ^
Class105.java:43: not a statement
/* 53 */       Class68_Sub13_Sub9.anIntArray3579[&#39;├?&#39;] = 43;
                                                ^
Class105.java:43: unclosed character literal
/* 53 */       Class68_Sub13_Sub9.anIntArray3579[&#39;├?&#39;] = 43;
                                                    ^
Class105.java:44: unclosed character literal
/* 54 */       Class68_Sub13_Sub9.anIntArray3579[&#39;┬╝&#39;] = 71;
                                                 ^
Class105.java:44: illegal character: \188
/* 54 */       Class68_Sub13_Sub9.anIntArray3579[&#39;┬╝&#39;] = 71;
                                                   ^
Class105.java:44: not a statement
/* 54 */       Class68_Sub13_Sub9.anIntArray3579[&#39;┬╝&#39;] = 71;
                                                ^
Class105.java:44: unclosed character literal
/* 54 */       Class68_Sub13_Sub9.anIntArray3579[&#39;┬╝&#39;] = 71;
                                                    ^
Class105.java:45: unclosed character literal
/* 55 */       Class68_Sub13_Sub9.anIntArray3579[&#39;┬╛&#39;] = 72;
                                                 ^
Class105.java:45: illegal character: \190
/* 55 */       Class68_Sub13_Sub9.anIntArray3579[&#39;┬╛&#39;] = 72;
                                                   ^
Class105.java:45: not a statement
/* 55 */       Class68_Sub13_Sub9.anIntArray3579[&#39;┬╛&#39;] = 72;
                                                ^
Class65.java:12: warning: unmappable character for encoding Cp1252
/*  14 */   public static String aString1194 = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdef
ghijklmnopqrstuvwxyz0123456789!\&quot;┬ú$%^&amp;*()-_=+[{]};:&#39;@#~,&lt;.&gt;/?\\| &quot; + String.val
ueOf(&#39;├ä&#39;) + String.valueOf(&#39;├ï&#39;) + String.valueOf(&#39;├?&#39;) + String.valueOf(&#39;├û&#39;)
+ String.valueOf(&#39;├£&#39;) + String.valueOf(&#39;├ñ&#39;) + String.valueOf(&#39;├½&#39;) + String.va
lueOf(&#39;├»&#39;) + String.valueOf(&#39;├╢&#39;) + String.valueOf(&#39;├╝&#39;) + String.valueOf(&#39;├┐&#39;)
 + String.valueOf(&#39;├ƒ&#39;);


                                                     ^
G.java:47: warning: unmappable character for encoding Cp1252
      IF.CI[&#39;├?&#39;] = 43;
              ^
100 errors
4 warnings
Press any key to continue . . .[/CODE]

Somebody help :/?</description>
    
    <lastBuildDate>Mon, 01 Nov 2010 03:52:02 +0000</lastBuildDate>
    <category>Game Development</category>
    <atom:link href="https://forum.moparisthebest.com/t/517-client-help/366906.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>517 client help</title>
        <dc:creator><![CDATA[@conner1 conner_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/conner1">@conner1</a> wrote:</p>
          <blockquote>
              <ol>
<li>Don’t call it a 517, please…</li>
</ol>
<p>Anyway, you’re missing a bracket or semicolon somewhere, run your source code throunh an IDE that checks syntax to see where. I.e. Eclipse.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/517-client-help/366906/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/517-client-help/366906/2</link>
        <pubDate>Mon, 01 Nov 2010 03:52:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-366906-2</guid>
        <source url="https://forum.moparisthebest.com/t/517-client-help/366906.rss">517 client help</source>
      </item>
      <item>
        <title>517 client help</title>
        <dc:creator><![CDATA[@Lol_Rs Lol Rs]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lol_rs">@Lol_Rs</a> wrote:</p>
          <blockquote>
              <p>Hey guys i’ve been trying to decompile this client:<br>
<a href="http://www.mediafire.com/?zznnxv1mtjq" data-bbcode="true" rel="nofollow noopener">Client</a></p>
<p>I decompiled this with Jd-gui, and got this somebody help me will give them the source for this!, will payback!</p>
<p>I tried multiple z508 clients and did not work with the source yes I did change the ports and stuff can you please help me!</p>
<p>Will rep!<br>
But when I compile I get these errors:</p>
<p>[CODE]</p>
<pre><code>                ^
</code></pre>
<p>BB.java:12: ‘;’ expected<br>
public static String append = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu<br>
vwxyz0123456789!"┬ú$%^&amp;*()-_=+[{]};:’@#~,&lt;.&gt;/?\| " + String.valueOf(‘├ä’) + St<br>
ring.valueOf(‘├ï’) + String.valueOf(‘├?’) + String.valueOf(‘├û’) + String.valueO<br>
f(‘├£’) + String.valueOf(‘├ñ’) + String.valueOf(‘├½’) + String.valueOf(‘├»’) + S<br>
tring.valueOf(‘├╢’) + String.valueOf(‘├╝’) + String.valueOf(‘├┐’) + String.value<br>
Of(‘├ƒ’);</p>
<pre><code>                        ^
</code></pre>
<p>BB.java:12: invalid method declaration; return type required<br>
public static String append = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu<br>
vwxyz0123456789!"┬ú$%^&amp;*()-_=+[{]};:’@#~,&lt;.&gt;/?\| " + String.valueOf(‘├ä’) + St<br>
ring.valueOf(‘├ï’) + String.valueOf(‘├?’) + String.valueOf(‘├û’) + String.valueO<br>
f(‘├£’) + String.valueOf(‘├ñ’) + String.valueOf(‘├½’) + String.valueOf(‘├»’) + S<br>
tring.valueOf(‘├╢’) + String.valueOf(‘├╝’) + String.valueOf(‘├┐’) + String.value<br>
Of(‘├ƒ’);</p>
<pre><code>                         ^
</code></pre>
<p>BB.java:12: unclosed character literal<br>
public static String append = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu<br>
vwxyz0123456789!"┬ú$%^&amp;*()-_=+[{]};:’@#~,&lt;.&gt;/?\| " + String.valueOf(‘├ä’) + St<br>
ring.valueOf(‘├ï’) + String.valueOf(‘├?’) + String.valueOf(‘├û’) + String.valueO<br>
f(‘├£’) + String.valueOf(‘├ñ’) + String.valueOf(‘├½’) + String.valueOf(‘├»’) + S<br>
tring.valueOf(‘├╢’) + String.valueOf(‘├╝’) + String.valueOf(‘├┐’) + String.value<br>
Of(‘├ƒ’);</p>
<pre><code>                                 ^
</code></pre>
<p>BB.java:12: illegal character: \188<br>
public static String append = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu<br>
vwxyz0123456789!"┬ú$%^&amp;*()-_=+[{]};:’@#~,&lt;.&gt;/?\| " + String.valueOf(‘├ä’) + St<br>
ring.valueOf(‘├ï’) + String.valueOf(‘├?’) + String.valueOf(‘├û’) + String.valueO<br>
f(‘├£’) + String.valueOf(‘├ñ’) + String.valueOf(‘├½’) + String.valueOf(‘├»’) + S<br>
tring.valueOf(‘├╢’) + String.valueOf(‘├╝’) + String.valueOf(‘├┐’) + String.value<br>
Of(‘├ƒ’);</p>
<pre><code>                                   ^
</code></pre>
<p>BB.java:12: unclosed character literal<br>
public static String append = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu<br>
vwxyz0123456789!"┬ú$%^&amp;*()-_=+[{]};:’@#~,&lt;.&gt;/?\| " + String.valueOf(‘├ä’) + St<br>
ring.valueOf(‘├ï’) + String.valueOf(‘├?’) + String.valueOf(‘├û’) + String.valueO<br>
f(‘├£’) + String.valueOf(‘├ñ’) + String.valueOf(‘├½’) + String.valueOf(‘├»’) + S<br>
tring.valueOf(‘├╢’) + String.valueOf(‘├╝’) + String.valueOf(‘├┐’) + String.value<br>
Of(‘├ƒ’);</p>
<pre><code>                                    ^
</code></pre>
<p>BB.java:12: illegal start of type<br>
public static String append = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu<br>
vwxyz0123456789!"┬ú$%^&amp;*()-_=+[{]};:’@#~,&lt;.&gt;/?\| " + String.valueOf(‘├ä’) + St<br>
ring.valueOf(‘├ï’) + String.valueOf(‘├?’) + String.valueOf(‘├û’) + String.valueO<br>
f(‘├£’) + String.valueOf(‘├ñ’) + String.valueOf(‘├½’) + String.valueOf(‘├»’) + S<br>
tring.valueOf(‘├╢’) + String.valueOf(‘├╝’) + String.valueOf(‘├┐’) + String.value<br>
Of(‘├ƒ’);</p>
<pre><code>                                       ^
</code></pre>
<p>BB.java:12: ‘;’ expected<br>
public static String append = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu<br>
vwxyz0123456789!"┬ú$%^&amp;*()-_=+[{]};:’@#~,&lt;.&gt;/?\| " + String.valueOf(‘├ä’) + St<br>
ring.valueOf(‘├ï’) + String.valueOf(‘├?’) + String.valueOf(‘├û’) + String.valueO<br>
f(‘├£’) + String.valueOf(‘├ñ’) + String.valueOf(‘├½’) + String.valueOf(‘├»’) + S<br>
tring.valueOf(‘├╢’) + String.valueOf(‘├╝’) + String.valueOf(‘├┐’) + String.value<br>
Of(‘├ƒ’);</p>
<pre><code>                                               ^
</code></pre>
<p>BB.java:12: invalid method declaration; return type required<br>
public static String append = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu<br>
vwxyz0123456789!"┬ú$%^&amp;*()-_=+[{]};:’@#~,&lt;.&gt;/?\| " + String.valueOf(‘├ä’) + St<br>
ring.valueOf(‘├ï’) + String.valueOf(‘├?’) + String.valueOf(‘├û’) + String.valueO<br>
f(‘├£’) + String.valueOf(‘├ñ’) + String.valueOf(‘├½’) + String.valueOf(‘├»’) + S<br>
tring.valueOf(‘├╢’) + String.valueOf(‘├╝’) + String.valueOf(‘├┐’) + String.value<br>
Of(‘├ƒ’);</p>
<pre><code>                                                ^
</code></pre>
<p>BB.java:12: unclosed character literal<br>
public static String append = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu<br>
vwxyz0123456789!"┬ú$%^&amp;*()-_=+[{]};:’@#~,&lt;.&gt;/?\| " + String.valueOf(‘├ä’) + St<br>
ring.valueOf(‘├ï’) + String.valueOf(‘├?’) + String.valueOf(‘├û’) + String.valueO<br>
f(‘├£’) + String.valueOf(‘├ñ’) + String.valueOf(‘├½’) + String.valueOf(‘├»’) + S<br>
tring.valueOf(‘├╢’) + String.valueOf(‘├╝’) + String.valueOf(‘├┐’) + String.value<br>
Of(‘├ƒ’);</p>
<pre><code>                                                        ^
</code></pre>
<p>BB.java:12: illegal character: \191<br>
public static String append = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu<br>
vwxyz0123456789!"┬ú$%^&amp;*()-_=+[{]};:’@#~,&lt;.&gt;/?\| " + String.valueOf(‘├ä’) + St<br>
ring.valueOf(‘├ï’) + String.valueOf(‘├?’) + String.valueOf(‘├û’) + String.valueO<br>
f(‘├£’) + String.valueOf(‘├ñ’) + String.valueOf(‘├½’) + String.valueOf(‘├»’) + S<br>
tring.valueOf(‘├╢’) + String.valueOf(‘├╝’) + String.valueOf(‘├┐’) + String.value<br>
Of(‘├ƒ’);</p>
<pre><code>                                                          ^
</code></pre>
<p>BB.java:12: unclosed character literal<br>
public static String append = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu<br>
vwxyz0123456789!"┬ú$%^&amp;*()-_=+[{]};:’@#~,&lt;.&gt;/?\| " + String.valueOf(‘├ä’) + St<br>
ring.valueOf(‘├ï’) + String.valueOf(‘├?’) + String.valueOf(‘├û’) + String.valueO<br>
f(‘├£’) + String.valueOf(‘├ñ’) + String.valueOf(‘├½’) + String.valueOf(‘├»’) + S<br>
tring.valueOf(‘├╢’) + String.valueOf(‘├╝’) + String.valueOf(‘├┐’) + String.value<br>
Of(‘├ƒ’);</p>
<pre><code>                                                           ^
</code></pre>
<p>BB.java:12: illegal start of type<br>
public static String append = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu<br>
vwxyz0123456789!"┬ú$%^&amp;*()-_=+[{]};:’@#~,&lt;.&gt;/?\| " + String.valueOf(‘├ä’) + St<br>
ring.valueOf(‘├ï’) + String.valueOf(‘├?’) + String.valueOf(‘├û’) + String.valueO<br>
f(‘├£’) + String.valueOf(‘├ñ’) + String.valueOf(‘├½’) + String.valueOf(‘├»’) + S<br>
tring.valueOf(‘├╢’) + String.valueOf(‘├╝’) + String.valueOf(‘├┐’) + String.value<br>
Of(‘├ƒ’);</p>
<pre><code>                                                              ^
</code></pre>
<p>BB.java:12: ‘;’ expected<br>
public static String append = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu<br>
vwxyz0123456789!"┬ú$%^&amp;*()-_=+[{]};:’@#~,&lt;.&gt;/?\| " + String.valueOf(‘├ä’) + St<br>
ring.valueOf(‘├ï’) + String.valueOf(‘├?’) + String.valueOf(‘├û’) + String.valueO<br>
f(‘├£’) + String.valueOf(‘├ñ’) + String.valueOf(‘├½’) + String.valueOf(‘├»’) + S<br>
tring.valueOf(‘├╢’) + String.valueOf(‘├╝’) + String.valueOf(‘├┐’) + String.value<br>
Of(‘├ƒ’);</p>
<pre><code>                                                                      ^
</code></pre>
<p>BB.java:12: invalid method declaration; return type required<br>
public static String append = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu<br>
vwxyz0123456789!"┬ú$%^&amp;*()-_=+[{]};:’@#~,&lt;.&gt;/?\| " + String.valueOf(‘├ä’) + St<br>
ring.valueOf(‘├ï’) + String.valueOf(‘├?’) + String.valueOf(‘├û’) + String.valueO<br>
f(‘├£’) + String.valueOf(‘├ñ’) + String.valueOf(‘├½’) + String.valueOf(‘├»’) + S<br>
tring.valueOf(‘├╢’) + String.valueOf(‘├╝’) + String.valueOf(‘├┐’) + String.value<br>
Of(‘├ƒ’);</p>
<pre><code>                                                                       ^
</code></pre>
<p>BB.java:12: unclosed character literal<br>
public static String append = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu<br>
vwxyz0123456789!"┬ú$%^&amp;*()-_=+[{]};:’@#~,&lt;.&gt;/?\| " + String.valueOf(‘├ä’) + St<br>
ring.valueOf(‘├ï’) + String.valueOf(‘├?’) + String.valueOf(‘├û’) + String.valueO<br>
f(‘├£’) + String.valueOf(‘├ñ’) + String.valueOf(‘├½’) + String.valueOf(‘├»’) + S<br>
tring.valueOf(‘├╢’) + String.valueOf(‘├╝’) + String.valueOf(‘├┐’) + String.value<br>
Of(‘├ƒ’);</p>
<p>^<br>
BB.java:12: ‘)’ expected<br>
public static String append = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu<br>
vwxyz0123456789!"┬ú$%^&amp;*()-_=+[{]};:’@#~,&lt;.&gt;/?\| " + String.valueOf(‘├ä’) + St<br>
ring.valueOf(‘├ï’) + String.valueOf(‘├?’) + String.valueOf(‘├û’) + String.valueO<br>
f(‘├£’) + String.valueOf(‘├ñ’) + String.valueOf(‘├½’) + String.valueOf(‘├»’) + S<br>
tring.valueOf(‘├╢’) + String.valueOf(‘├╝’) + String.valueOf(‘├┐’) + String.value<br>
Of(‘├ƒ’);</p>
<pre><code> ^
</code></pre>
<p>BB.java:12: unclosed character literal<br>
public static String append = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu<br>
vwxyz0123456789!"┬ú$%^&amp;*()-_=+[{]};:’@#~,&lt;.&gt;/?\| " + String.valueOf(‘├ä’) + St<br>
ring.valueOf(‘├ï’) + String.valueOf(‘├?’) + String.valueOf(‘├û’) + String.valueO<br>
f(‘├£’) + String.valueOf(‘├ñ’) + String.valueOf(‘├½’) + String.valueOf(‘├»’) + S<br>
tring.valueOf(‘├╢’) + String.valueOf(‘├╝’) + String.valueOf(‘├┐’) + String.value<br>
Of(‘├ƒ’);</p>
<pre><code>  ^
</code></pre>
<p>Class105.java:43: warning: unmappable character for encoding Cp1252<br>
/* 53 <em>/       Class68_Sub13_Sub9.anIntArray3579[‘├?’] = 43;<br>
^<br>
Class105.java:40: unclosed character literal<br>
/</em> 50 <em>/       Class68_Sub13_Sub9.anIntArray3579[‘├ƒ’] = 28;<br>
^<br>
Class105.java:40: not a statement<br>
/</em> 50 <em>/       Class68_Sub13_Sub9.anIntArray3579[‘├ƒ’] = 28;<br>
^<br>
Class105.java:40: ‘;’ expected<br>
/</em> 50 <em>/       Class68_Sub13_Sub9.anIntArray3579[‘├ƒ’] = 28;<br>
^<br>
Class105.java:40: unclosed character literal<br>
/</em> 50 <em>/       Class68_Sub13_Sub9.anIntArray3579[‘├ƒ’] = 28;<br>
^<br>
Class105.java:41: unclosed character literal<br>
/</em> 51 <em>/       Class68_Sub13_Sub9.anIntArray3579[‘├£’] = 74;<br>
^<br>
Class105.java:41: not a statement<br>
/</em> 51 <em>/       Class68_Sub13_Sub9.anIntArray3579[‘├£’] = 74;<br>
^<br>
Class105.java:41: ‘;’ expected<br>
/</em> 51 <em>/       Class68_Sub13_Sub9.anIntArray3579[‘├£’] = 74;<br>
^<br>
Class105.java:41: unclosed character literal<br>
/</em> 51 <em>/       Class68_Sub13_Sub9.anIntArray3579[‘├£’] = 74;<br>
^<br>
Class105.java:42: unclosed character literal<br>
/</em> 52 <em>/       Class68_Sub13_Sub9.anIntArray3579[‘┬╜’] = 26;<br>
^<br>
Class105.java:42: illegal character: \189<br>
/</em> 52 <em>/       Class68_Sub13_Sub9.anIntArray3579[‘┬╜’] = 26;<br>
^<br>
Class105.java:42: not a statement<br>
/</em> 52 <em>/       Class68_Sub13_Sub9.anIntArray3579[‘┬╜’] = 26;<br>
^<br>
Class105.java:42: unclosed character literal<br>
/</em> 52 <em>/       Class68_Sub13_Sub9.anIntArray3579[‘┬╜’] = 26;<br>
^<br>
Class105.java:43: unclosed character literal<br>
/</em> 53 <em>/       Class68_Sub13_Sub9.anIntArray3579[‘├?’] = 43;<br>
^<br>
Class105.java:43: illegal character: \65533<br>
/</em> 53 <em>/       Class68_Sub13_Sub9.anIntArray3579[‘├?’] = 43;<br>
^<br>
Class105.java:43: not a statement<br>
/</em> 53 <em>/       Class68_Sub13_Sub9.anIntArray3579[‘├?’] = 43;<br>
^<br>
Class105.java:43: unclosed character literal<br>
/</em> 53 <em>/       Class68_Sub13_Sub9.anIntArray3579[‘├?’] = 43;<br>
^<br>
Class105.java:44: unclosed character literal<br>
/</em> 54 <em>/       Class68_Sub13_Sub9.anIntArray3579[‘┬╝’] = 71;<br>
^<br>
Class105.java:44: illegal character: \188<br>
/</em> 54 <em>/       Class68_Sub13_Sub9.anIntArray3579[‘┬╝’] = 71;<br>
^<br>
Class105.java:44: not a statement<br>
/</em> 54 <em>/       Class68_Sub13_Sub9.anIntArray3579[‘┬╝’] = 71;<br>
^<br>
Class105.java:44: unclosed character literal<br>
/</em> 54 <em>/       Class68_Sub13_Sub9.anIntArray3579[‘┬╝’] = 71;<br>
^<br>
Class105.java:45: unclosed character literal<br>
/</em> 55 <em>/       Class68_Sub13_Sub9.anIntArray3579[‘┬╛’] = 72;<br>
^<br>
Class105.java:45: illegal character: \190<br>
/</em> 55 <em>/       Class68_Sub13_Sub9.anIntArray3579[‘┬╛’] = 72;<br>
^<br>
Class105.java:45: not a statement<br>
/</em> 55 <em>/       Class68_Sub13_Sub9.anIntArray3579[‘┬╛’] = 72;<br>
^<br>
Class65.java:12: warning: unmappable character for encoding Cp1252<br>
/</em>  14 <em>/   public static String aString1194 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdef<br>
ghijklmnopqrstuvwxyz0123456789!"┬ú$%^&amp;</em>()-_=+[{]};:’@#~,&lt;.&gt;/?\| " + String.val<br>
ueOf(‘├ä’) + String.valueOf(‘├ï’) + String.valueOf(‘├?’) + String.valueOf(‘├û’)</p>
<ul>
<li>
<p>String.valueOf(‘├£’) + String.valueOf(‘├ñ’) + String.valueOf(‘├½’) + String.va<br>
lueOf(‘├»’) + String.valueOf(‘├╢’) + String.valueOf(‘├╝’) + String.valueOf(‘├┐’)</p>
</li>
<li>
<p>String.valueOf(‘├ƒ’);</p>
<pre><code>                                              ^
</code></pre>
</li>
</ul>
<p>G.java:47: warning: unmappable character for encoding Cp1252<br>
IF.CI[‘├?’] = 43;<br>
^<br>
100 errors<br>
4 warnings<br>
Press any key to continue . . .[/CODE]</p>
<p>Somebody help :/?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/517-client-help/366906/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/517-client-help/366906/1</link>
        <pubDate>Mon, 01 Nov 2010 01:49:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-366906-1</guid>
        <source url="https://forum.moparisthebest.com/t/517-client-help/366906.rss">517 client help</source>
      </item>
  </channel>
</rss>
