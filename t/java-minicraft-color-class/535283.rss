<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Java: Minicraft Color Class</title>
    <link>https://forum.moparisthebest.com/t/java-minicraft-color-class/535283</link>
    <description>[code=&quot;Java&quot;]public class Color {

	public static int get(int a, int b, int c, int d) {
		return (get(d) &lt;&lt; 24) + (get(c) &lt;&lt; 16) + (get(b) &lt;&lt; 8) + (get(a));
	}

	public static int get(int d) {
		if (d &lt; 0) return 255;
		int r = d / 100 % 10;
		int g = d / 10 % 10;
		int b = d % 10;
		return r * 36 + g * 6 + b;
	}

}[/code]


I honestly have no clue what Notch was doing with this. I can&#39;t even begin to think about where to start. I&#39;ve googled many different things about the shift operator, RGB, and other color algorithms. None of the results helped me figure it out. Does anyone have any clue what&#39;s going on here?

This is the last place the color goes:

[code=&quot;Java&quot;]int col = (colors &gt;&gt; (sheet.pixels[xs + ys * sheet.width + toffs] * 8)) &amp; 255;
				if (col &lt; 255) pixels[(x + xp) + (y + yp) * w] = col;[/code]


Think I might have found something on it, It uses RGBA instead of RGB, plus it shifts the bits to conform to the format of: 0xAARRGGBB.</description>
    
    <lastBuildDate>Wed, 06 Nov 2013 04:32:38 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/java-minicraft-color-class/535283.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Java: Minicraft Color Class</title>
        <dc:creator><![CDATA[@lukenuke75 lukenuke75]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lukenuke75">@lukenuke75</a> wrote:</p>
          <blockquote>
              <p>See, I would love to learn that. I will probably try tomorrow when I’m not dead tired <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-minicraft-color-class/535283/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-minicraft-color-class/535283/5</link>
        <pubDate>Wed, 06 Nov 2013 04:32:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-535283-5</guid>
        <source url="https://forum.moparisthebest.com/t/java-minicraft-color-class/535283.rss">Java: Minicraft Color Class</source>
      </item>
      <item>
        <title>Java: Minicraft Color Class</title>
        <dc:creator><![CDATA[@imthenull imthenull]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imthenull">@imthenull</a> wrote:</p>
          <blockquote>
              <p>Binary operations are easy and fun to learn <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>
<p>I especially enjoyed writing binary arithmetic operations.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-minicraft-color-class/535283/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-minicraft-color-class/535283/4</link>
        <pubDate>Wed, 06 Nov 2013 04:25:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-535283-4</guid>
        <source url="https://forum.moparisthebest.com/t/java-minicraft-color-class/535283.rss">Java: Minicraft Color Class</source>
      </item>
      <item>
        <title>Java: Minicraft Color Class</title>
        <dc:creator><![CDATA[@lukenuke75 lukenuke75]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lukenuke75">@lukenuke75</a> wrote:</p>
          <blockquote>
              <p>That article will be of use. It’s just at this moment my brain seems to always reject binary digits, bits, and any association with binary. (OT:I think it’s because it’s usually viewed as a complex topic, and I don’t have confidence I can learn it.)</p>
<p>Thank you for the article, I’ll leave this open to discussion because I’ll probably need more explanation, or different viewpoints on the subject. Please do not be afraid to answer the question because their is one solution, thank you.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-minicraft-color-class/535283/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-minicraft-color-class/535283/3</link>
        <pubDate>Wed, 06 Nov 2013 04:15:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-535283-3</guid>
        <source url="https://forum.moparisthebest.com/t/java-minicraft-color-class/535283.rss">Java: Minicraft Color Class</source>
      </item>
      <item>
        <title>Java: Minicraft Color Class</title>
        <dc:creator><![CDATA[@imthenull imthenull]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/imthenull">@imthenull</a> wrote:</p>
          <blockquote>
              <p>I didn’t write this but I recently read this article and began writing my own implementation of Minicraft in Javascript.</p>
<p>The idea is that you create your sprite sheet using only 4 colours. At runtime, you replace the 4 colours with any colours you like - so you can quickly modify the look and feel of the game, or have varied characters that differ only by colour - just like the ol’ NES games.</p>
<p>While 95% of Notch’s code is extremely straightforward and obvious, the colour system got a bit hairy due to the fact he faffed around with the implementation a few times to get the result he wanted. The end result seems more complex than it really is. The overview of the system goes like so:</p>
<p>[ol][li]Set up a limited (256 colour) indexed palette to be used in the game. The colour channels will be divided into 5 “shades”.[/li]<br>
[li]Draw the sprites in 4 colours. When loading the image into the game, reduce the pixels to values from 0 to 3 to represent the colour.[/li]<br>
[li]When drawing a sprite to the screen, dynamically pass in the 4 colours to use.[/li]<br>
[li]For each pixel, find the index in the palette and replace the pixel with that colour.[/li]<br>
[li]Profit![/li][/ol]</p>
<p>The trickiest part is realising that Notch just made up a custom colour selecting system. Throughout the Minicraft code you’ll see lots of instances of a line like: Color.get(100, 232, -1, 555) - although it kind of looks like some kind of RGBA format, it’s really defining 4 separate colours, each made up of 3 channels. The number 100 represents r = 1, g = 0, b = 0 and would be a very dark red. 555 represents r = 5, g = 5, b = 5 and would be white (full red, full green, and full blue). So let’s see it in action…</p>
<p>In Game.java, the colour palette is set up. It uses 6 bits per channel to get our 256 colours in 5 shades.</p>
<p>Here is the entire generated palette of colors:<br>
<img src="http://www.mrspeaker.net/images/mini-palette.png" alt width="" height=""></p>
<p>Source: <a href="http://www.mrspeaker.net/2011/12/30/colorising-sprites-1/" rel="nofollow noopener">http://www.mrspeaker.net/2011/12/30/colorising-sprites-1/</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-minicraft-color-class/535283/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-minicraft-color-class/535283/2</link>
        <pubDate>Wed, 06 Nov 2013 04:05:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-535283-2</guid>
        <source url="https://forum.moparisthebest.com/t/java-minicraft-color-class/535283.rss">Java: Minicraft Color Class</source>
      </item>
      <item>
        <title>Java: Minicraft Color Class</title>
        <dc:creator><![CDATA[@lukenuke75 lukenuke75]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lukenuke75">@lukenuke75</a> wrote:</p>
          <blockquote>
              <p>[code=“Java”]public class Color {</p>
<pre><code>public static int get(int a, int b, int c, int d) {
	return (get(d) &lt;&lt; 24) + (get(c) &lt;&lt; 16) + (get(b) &lt;&lt; 8) + (get(a));
}

public static int get(int d) {
	if (d &lt; 0) return 255;
	int r = d / 100 % 10;
	int g = d / 10 % 10;
	int b = d % 10;
	return r * 36 + g * 6 + b;
}
</code></pre>
<p>}[/code]</p>
<p>I honestly have no clue what Notch was doing with this. I can’t even begin to think about where to start. I’ve googled many different things about the shift operator, RGB, and other color algorithms. None of the results helped me figure it out. Does anyone have any clue what’s going on here?</p>
<p>This is the last place the color goes:</p>
<p><code>int col = (colors &gt;&gt; (sheet.pixels[xs + ys * sheet.width + toffs] * 8)) &amp; 255;
				if (col &lt; 255) pixels[(x + xp) + (y + yp) * w] = col;</code></p>
<p>Think I might have found something on it, It uses RGBA instead of RGB, plus it shifts the bits to conform to the format of: 0xAARRGGBB.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-minicraft-color-class/535283/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-minicraft-color-class/535283/1</link>
        <pubDate>Wed, 06 Nov 2013 02:41:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-535283-1</guid>
        <source url="https://forum.moparisthebest.com/t/java-minicraft-color-class/535283.rss">Java: Minicraft Color Class</source>
      </item>
  </channel>
</rss>
