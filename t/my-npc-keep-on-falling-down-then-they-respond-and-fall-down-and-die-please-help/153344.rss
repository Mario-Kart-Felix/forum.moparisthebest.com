<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>My npc keep on falling down then they respond and fall down and die please help</title>
    <link>https://forum.moparisthebest.com/t/my-npc-keep-on-falling-down-then-they-respond-and-fall-down-and-die-please-help/153344</link>
    <description>I was looking at the npc java file and this is what i got can anybody find a error that might help me?

public class NPC {
	public int npcId;
	public int npcType;

        public int PoisonDelay = 999999;
        public int PoisonClear = 6;
	public int absX, absY;
	public int heightLevel;
	public int makeX, makeY, moverangeX1, moverangeY1, moverangeX2, moverangeY2, moveX, moveY, direction, walkingType, attacknpc, followPlayer;
	public int spawnX, spawnY;
        public int viewX, viewY;
	public int HP, MaxHP, hitDiff, MaxHit, animNumber, actionTimer, StartKilling, enemyX, enemyY;
	public boolean IsDead, DeadApply, NeedRespawn, IsUnderAttack, IsClose, Respawns, IsUnderAttackNpc, IsAttackingNPC, poisondmg, walkingToPlayer, followingPlayer;
	public int[] Killing = new int[server.playerHandler.maxPlayers];

	public boolean RandomWalk;
	public boolean dirUpdateRequired;
	public boolean animUpdateRequired;
	public boolean hitUpdateRequired;
	public boolean updateRequired;
	public boolean textUpdateRequired;
        public boolean faceToUpdateRequired;
	public String textUpdate;

	public NPC(int _npcId, int _npcType) {
		npcId = _npcId;
		npcType = _npcType;
		direction = -1;
		IsDead = true;
		DeadApply = false;
		actionTimer = 0;
		RandomWalk = true;
		StartKilling = 0;
		IsUnderAttack = false;
		IsClose = false;
		for (int i = 0; i &lt; Killing.length; i++) {
			Killing[i] = 0;
		}
	}

	public void updateNPCMovement(stream str) {
		if (direction == -1) {
			// don&#39;t have to update the npc position, because the npc is just standing
			if (updateRequired) {
				// tell client there&#39;s an update block appended at the end
				str.writeBits(1, 1);
				str.writeBits(2, 0);
			} else {
				str.writeBits(1, 0);
			}
		} else {
			// send &quot;walking packet&quot;
			str.writeBits(1, 1);
			str.writeBits(2, 1);		// updateType
			str.writeBits(3, misc.xlateDirectionToClient[direction]);
			if (updateRequired) {
				str.writeBits(1, 1);		// tell client there&#39;s an update block appended at the end
			} else {
				str.writeBits(1, 0);
			}
		}
	}

	public void appendNPCUpdateBlock(stream str) {
		if(!updateRequired) return ;		// nothing required
		int updateMask = 0;
		if(textUpdateRequired) updateMask |= 1;
		if(animUpdateRequired) updateMask |= 0x10;
                //if(hitUpdateRequired) updateMask |= 0x8;
		if(hitUpdateRequired) updateMask |= 0x40;
		if(dirUpdateRequired) updateMask |= 0x20;
		if(faceToUpdateRequired) updateMask |= 0x20;

		/*if(updateMask &gt;= 0x100) {
			// byte isn&#39;t sufficient
			updateMask |= 0x40;			// indication for the client that updateMask is stored in a word
			str.writeByte(updateMask &amp; 0xFF);
			str.writeByte(updateMask &gt;&gt; 8);
		} else {*/
			str.writeByte(updateMask);
		//}

		// now writing the various update blocks itself - note that their order crucial
		if(textUpdateRequired) {
			str.writeString(textUpdate);
		}
		if (animUpdateRequired) appendAnimUpdate(str);
		if (hitUpdateRequired) appendHitUpdate(str);
		if (dirUpdateRequired) appendDirUpdate(str);
                if (faceToUpdateRequired) appendFaceToUpdate(str);
		// TODO: add the various other update blocks
	}

	public void clearUpdateFlags() {
		updateRequired = false;
		textUpdateRequired = false;
		hitUpdateRequired = false;
		animUpdateRequired = false;
		dirUpdateRequired = false;
		textUpdate = null;
		moveX = 0;
		moveY = 0;
		direction = -1;
	}

	// returns 0-7 for next walking direction or -1, if we&#39;re not moving
	public int getNextWalkingDirection() {
		int dir;
		dir = misc.direction(absX, absY, (absX + moveX), (absY + moveY));
		if(dir == -1) return -1;
		dir &gt;&gt;= 1;
		absX += moveX;
		absY += moveY;
		return dir;
	}

	public void getNextNPCMovement() {
		direction = -1;
		direction = getNextWalkingDirection();
	}

	protected void appendHitUpdate(stream str) {
		try {
			HP -= hitDiff;
			if (HP &lt;= 0) {
				IsDead = true;
			}
			str.writeByteC(hitDiff); // What the perseon got &#39;hit&#39; for
			if (hitDiff &gt; 0 &amp;&amp; !poisondmg) {
				str.writeByteS(1); // 0: red hitting - 1: blue hitting
			} else if (hitDiff &gt; 0 &amp;&amp; poisondmg) {
				str.writeByteS(2); // 0: red hitting - 1: blue hitting
			} else {
				str.writeByteS(0); // 0: red hitting - 1: blue hitting
			}
			str.writeByteS(HP); // Their current hp, for HP bar
			str.writeByteC(MaxHP); // Their max hp, for HP bar
                        poisondmg = false;
		} catch(Exception e) {
			e.printStackTrace();
		}
	}
	protected void appendHitUpdate2(stream str) {
		try {
			HP -= hitDiff;
			if (HP &lt;= 0) {
				IsDead = true;
			}
			str.writeByteS(hitDiff); // What the perseon got &#39;hit&#39; for
			if (hitDiff &gt; 0 &amp;&amp; !poisondmg) {
				str.writeByteC(1); // 0: red hitting - 1: blue hitting
			} else if (hitDiff &gt; 0 &amp;&amp; poisondmg) {
				str.writeByteC(2); // 0: red hitting - 1: blue hitting
			} else {
				str.writeByteC(0); // 0: red hitting - 1: blue hitting
			}
			str.writeByteS(HP); // Their current hp, for HP bar
			str.writeByte(MaxHP); // Their max hp, for HP bar
                        poisondmg = false;
		} catch(Exception e) {
			e.printStackTrace();
		}
	}
	public void appendAnimUpdate(stream str) {
		str.writeWordBigEndian(animNumber);
		str.writeByte(1);
	}

	public void appendDirUpdate(stream str){
		str.writeWord(direction);
	}

        public void appendFaceToUpdate(stream str) {
                str.writeWordBigEndian(viewX);
                str.writeWordBigEndian(viewY);
        }
}</description>
    
    <lastBuildDate>Sun, 21 Oct 2007 21:15:53 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/my-npc-keep-on-falling-down-then-they-respond-and-fall-down-and-die-please-help/153344.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>My npc keep on falling down then they respond and fall down and die please help</title>
        <dc:creator><![CDATA[@itzkyle Lusfr]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/itzkyle">@itzkyle</a> wrote:</p>
          <blockquote>
              <p>Please but it in code tags, so i can read it easier to help you <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=6" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-npc-keep-on-falling-down-then-they-respond-and-fall-down-and-die-please-help/153344/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-npc-keep-on-falling-down-then-they-respond-and-fall-down-and-die-please-help/153344/2</link>
        <pubDate>Sun, 21 Oct 2007 21:15:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-153344-2</guid>
        <source url="https://forum.moparisthebest.com/t/my-npc-keep-on-falling-down-then-they-respond-and-fall-down-and-die-please-help/153344.rss">My npc keep on falling down then they respond and fall down and die please help</source>
      </item>
      <item>
        <title>My npc keep on falling down then they respond and fall down and die please help</title>
        <dc:creator><![CDATA[@Anti_Pizza Anti Pizza]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/anti_pizza">@Anti_Pizza</a> wrote:</p>
          <blockquote>
              <p>I was looking at the npc java file and this is what i got can anybody find a error that might help me?</p>
<p>public class NPC {<br>
public int npcId;<br>
public int npcType;</p>
<pre><code>    public int PoisonDelay = 999999;
    public int PoisonClear = 6;
public int absX, absY;
public int heightLevel;
public int makeX, makeY, moverangeX1, moverangeY1, moverangeX2, moverangeY2, moveX, moveY, direction, walkingType, attacknpc, followPlayer;
public int spawnX, spawnY;
    public int viewX, viewY;
public int HP, MaxHP, hitDiff, MaxHit, animNumber, actionTimer, StartKilling, enemyX, enemyY;
public boolean IsDead, DeadApply, NeedRespawn, IsUnderAttack, IsClose, Respawns, IsUnderAttackNpc, IsAttackingNPC, poisondmg, walkingToPlayer, followingPlayer;
public int[] Killing = new int[server.playerHandler.maxPlayers];

public boolean RandomWalk;
public boolean dirUpdateRequired;
public boolean animUpdateRequired;
public boolean hitUpdateRequired;
public boolean updateRequired;
public boolean textUpdateRequired;
    public boolean faceToUpdateRequired;
public String textUpdate;

public NPC(int _npcId, int _npcType) {
	npcId = _npcId;
	npcType = _npcType;
	direction = -1;
	IsDead = true;
	DeadApply = false;
	actionTimer = 0;
	RandomWalk = true;
	StartKilling = 0;
	IsUnderAttack = false;
	IsClose = false;
	for (int i = 0; i &lt; Killing.length; i++) {
		Killing[i] = 0;
	}
}

public void updateNPCMovement(stream str) {
	if (direction == -1) {
		// don't have to update the npc position, because the npc is just standing
		if (updateRequired) {
			// tell client there's an update block appended at the end
			str.writeBits(1, 1);
			str.writeBits(2, 0);
		} else {
			str.writeBits(1, 0);
		}
	} else {
		// send "walking packet"
		str.writeBits(1, 1);
		str.writeBits(2, 1);		// updateType
		str.writeBits(3, misc.xlateDirectionToClient[direction]);
		if (updateRequired) {
			str.writeBits(1, 1);		// tell client there's an update block appended at the end
		} else {
			str.writeBits(1, 0);
		}
	}
}

public void appendNPCUpdateBlock(stream str) {
	if(!updateRequired) return ;		// nothing required
	int updateMask = 0;
	if(textUpdateRequired) updateMask |= 1;
	if(animUpdateRequired) updateMask |= 0x10;
            //if(hitUpdateRequired) updateMask |= 0x8;
	if(hitUpdateRequired) updateMask |= 0x40;
	if(dirUpdateRequired) updateMask |= 0x20;
	if(faceToUpdateRequired) updateMask |= 0x20;

	/*if(updateMask &gt;= 0x100) {
		// byte isn't sufficient
		updateMask |= 0x40;			// indication for the client that updateMask is stored in a word
		str.writeByte(updateMask &amp; 0xFF);
		str.writeByte(updateMask &gt;&gt; 8);
	} else {*/
		str.writeByte(updateMask);
	//}

	// now writing the various update blocks itself - note that their order crucial
	if(textUpdateRequired) {
		str.writeString(textUpdate);
	}
	if (animUpdateRequired) appendAnimUpdate(str);
	if (hitUpdateRequired) appendHitUpdate(str);
	if (dirUpdateRequired) appendDirUpdate(str);
            if (faceToUpdateRequired) appendFaceToUpdate(str);
	// TODO: add the various other update blocks
}

public void clearUpdateFlags() {
	updateRequired = false;
	textUpdateRequired = false;
	hitUpdateRequired = false;
	animUpdateRequired = false;
	dirUpdateRequired = false;
	textUpdate = null;
	moveX = 0;
	moveY = 0;
	direction = -1;
}

// returns 0-7 for next walking direction or -1, if we're not moving
public int getNextWalkingDirection() {
	int dir;
	dir = misc.direction(absX, absY, (absX + moveX), (absY + moveY));
	if(dir == -1) return -1;
	dir &gt;&gt;= 1;
	absX += moveX;
	absY += moveY;
	return dir;
}

public void getNextNPCMovement() {
	direction = -1;
	direction = getNextWalkingDirection();
}

protected void appendHitUpdate(stream str) {
	try {
		HP -= hitDiff;
		if (HP &lt;= 0) {
			IsDead = true;
		}
		str.writeByteC(hitDiff); // What the perseon got 'hit' for
		if (hitDiff &gt; 0 &amp;&amp; !poisondmg) {
			str.writeByteS(1); // 0: red hitting - 1: blue hitting
		} else if (hitDiff &gt; 0 &amp;&amp; poisondmg) {
			str.writeByteS(2); // 0: red hitting - 1: blue hitting
		} else {
			str.writeByteS(0); // 0: red hitting - 1: blue hitting
		}
		str.writeByteS(HP); // Their current hp, for HP bar
		str.writeByteC(MaxHP); // Their max hp, for HP bar
                    poisondmg = false;
	} catch(Exception e) {
		e.printStackTrace();
	}
}
protected void appendHitUpdate2(stream str) {
	try {
		HP -= hitDiff;
		if (HP &lt;= 0) {
			IsDead = true;
		}
		str.writeByteS(hitDiff); // What the perseon got 'hit' for
		if (hitDiff &gt; 0 &amp;&amp; !poisondmg) {
			str.writeByteC(1); // 0: red hitting - 1: blue hitting
		} else if (hitDiff &gt; 0 &amp;&amp; poisondmg) {
			str.writeByteC(2); // 0: red hitting - 1: blue hitting
		} else {
			str.writeByteC(0); // 0: red hitting - 1: blue hitting
		}
		str.writeByteS(HP); // Their current hp, for HP bar
		str.writeByte(MaxHP); // Their max hp, for HP bar
                    poisondmg = false;
	} catch(Exception e) {
		e.printStackTrace();
	}
}
public void appendAnimUpdate(stream str) {
	str.writeWordBigEndian(animNumber);
	str.writeByte(1);
}

public void appendDirUpdate(stream str){
	str.writeWord(direction);
}

    public void appendFaceToUpdate(stream str) {
            str.writeWordBigEndian(viewX);
            str.writeWordBigEndian(viewY);
    }
</code></pre>
<p>}</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-npc-keep-on-falling-down-then-they-respond-and-fall-down-and-die-please-help/153344/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-npc-keep-on-falling-down-then-they-respond-and-fall-down-and-die-please-help/153344/1</link>
        <pubDate>Sun, 21 Oct 2007 21:01:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-153344-1</guid>
        <source url="https://forum.moparisthebest.com/t/my-npc-keep-on-falling-down-then-they-respond-and-fall-down-and-die-please-help/153344.rss">My npc keep on falling down then they respond and fall down and die please help</source>
      </item>
  </channel>
</rss>
