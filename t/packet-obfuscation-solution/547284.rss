<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Packet Obfuscation Solution</title>
    <link>https://forum.moparisthebest.com/t/packet-obfuscation-solution/547284</link>
    <description>read/write take 2 parameters, the type of the variable you are either reading or writing to the source/dest destination buffer and the offset of the block. Examples on translating are shown above the binding.

The pipeline for reading frames would look like, frame[not normalized] - (deobfuscate) &gt; frame[normalized] -&gt; message

works the other way too

[code=lua]
-- Translates: [ byte, short ] -&gt; [ short, byte ]

codecs.bind(&#39;deobfuscate&#39;, &#39;test&#39;, function(codec)
    codec.read(type.byte, 1)
    codec.read(type.short, 0)
end)

-- Translates [ byte, string ] -&gt; [ jstr2, bytec ]

codecs.bind(&#39;obfuscate&#39;, &#39;test2&#39;, function(codec) 
    codec.write(type.bytec, 1)
    codec.write(type.jstr2, 0)
end)
[/code]

Uses LuaJ, need to bind &#39;types&#39; and &#39;codec&#39; tables to the engine bindings.

[code=java]
package com.cobalt.lua;

import org.luaj.vm2.LuaFunction;
import org.luaj.vm2.LuaTable;
import org.luaj.vm2.Varargs;
import org.luaj.vm2.lib.VarArgFunction;

/**
 * Created by eve on 10/15/2014
 */
public class ScriptTable {

    private final LuaTable table = new LuaTable();

    public ScriptTable() {}

    public void bindClosure(String name, VarArgsClosure closure) {
        bindFunction(name, new VarArgFunction() {
            @Override
            public Varargs invoke(Varargs args) {
                return closure.invoke(args);
            }
        });
    }

    public void bindFunction(String name, LuaFunction func) {
        table.set(name, func);
    }

    public &lt;T&gt; void bindVariable(String name, T var) {
        table.set(name, LuaUtil.getValueOf(var));
    }

    public LuaTable getTable() { return table; }
}
[/code]

[code=java]
package com.cobalt.lua;

import com.google.common.collect.Sets;
import org.luaj.vm2.LuaValue;
import org.luaj.vm2.Varargs;

import java.util.Set;

/**
 * Created by eve on 10/15/2014
 */
public final class LuaUtil {

    private static final Set&lt;Class&lt;?&gt;&gt; allowedTypes = Sets.newHashSet(Double.class, String.class, Integer.class);

    private LuaUtil() {}

    public static boolean checkVarargs(Varargs args, int min, int max) {
        return args.narg() &gt;= min &amp;&amp; args.narg() &lt;= max;
    }

    public static boolean checkVarargs(Varargs args, int min) {
        return args.narg() &gt;= min;
    }

    public static &lt;T&gt; LuaValue getValueOf(T var) {
        if(!allowedTypes.contains(var.getClass())) {
            throw new IllegalArgumentException(&quot;Cannot convert &quot; + var.getClass() + &quot; to LuaValue&quot;);
        }

        if(Double.class == var.getClass()) {
            double d = (Double) var;
            return LuaValue.valueOf(d);
        }

        if(String.class == var.getClass()) {
            String s = (String) var;
            return LuaValue.valueOf(s);
        }

        // TODO: Possibly need to make sure int.class is handled
        if(Integer.class == var.getClass()) {
            Integer i = (Integer) var;
            return LuaValue.valueOf(i);
        }

        throw new RuntimeException(&quot;Unhandled type in &lt;T&gt; getValueOf(T)&quot; + var.getClass());
    }
}

[/code]

http://up.ht/ZtWD80</description>
    
    <lastBuildDate>Wed, 15 Oct 2014 20:13:10 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/packet-obfuscation-solution/547284.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Packet Obfuscation Solution</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="547284">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/ashi/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Ashi:</div>
<blockquote>
<p>Pretty weird code, neat idea though.</p>
</blockquote>
</aside>
<p>Options were use lua, or write a small scripting language. I chose option 1 and it’s not pretty but it serves its purpose.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/packet-obfuscation-solution/547284/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/packet-obfuscation-solution/547284/3</link>
        <pubDate>Wed, 15 Oct 2014 20:13:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-547284-3</guid>
        <source url="https://forum.moparisthebest.com/t/packet-obfuscation-solution/547284.rss">Packet Obfuscation Solution</source>
      </item>
      <item>
        <title>Packet Obfuscation Solution</title>
        <dc:creator><![CDATA[@Ashi Ashi]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ashi">@Ashi</a> wrote:</p>
          <blockquote>
              <p>Pretty weird code, neat idea though.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/packet-obfuscation-solution/547284/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/packet-obfuscation-solution/547284/2</link>
        <pubDate>Wed, 15 Oct 2014 20:02:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-547284-2</guid>
        <source url="https://forum.moparisthebest.com/t/packet-obfuscation-solution/547284.rss">Packet Obfuscation Solution</source>
      </item>
      <item>
        <title>Packet Obfuscation Solution</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>read/write take 2 parameters, the type of the variable you are either reading or writing to the source/dest destination buffer and the offset of the block. Examples on translating are shown above the binding.</p>
<p>The pipeline for reading frames would look like, frame[not normalized] - (deobfuscate) &gt; frame[normalized] -&gt; message</p>
<p>works the other way too</p>
<pre><code class="lang-auto">-- Translates: [ byte, short ] -&gt; [ short, byte ]

codecs.bind('deobfuscate', 'test', function(codec)
    codec.read(type.byte, 1)
    codec.read(type.short, 0)
end)

-- Translates [ byte, string ] -&gt; [ jstr2, bytec ]

codecs.bind('obfuscate', 'test2', function(codec) 
    codec.write(type.bytec, 1)
    codec.write(type.jstr2, 0)
end)</code></pre>
<p>Uses LuaJ, need to bind ‘types’ and ‘codec’ tables to the engine bindings.</p>
<pre><code class="lang-auto">package com.cobalt.lua;

import org.luaj.vm2.LuaFunction;
import org.luaj.vm2.LuaTable;
import org.luaj.vm2.Varargs;
import org.luaj.vm2.lib.VarArgFunction;

/**
 * Created by eve on 10/15/2014
 */
public class ScriptTable {

    private final LuaTable table = new LuaTable();

    public ScriptTable() {}

    public void bindClosure(String name, VarArgsClosure closure) {
        bindFunction(name, new VarArgFunction() {
            @Override
            public Varargs invoke(Varargs args) {
                return closure.invoke(args);
            }
        });
    }

    public void bindFunction(String name, LuaFunction func) {
        table.set(name, func);
    }

    public &lt;T&gt; void bindVariable(String name, T var) {
        table.set(name, LuaUtil.getValueOf(var));
    }

    public LuaTable getTable() { return table; }
}</code></pre>
<pre><code class="lang-auto">package com.cobalt.lua;

import com.google.common.collect.Sets;
import org.luaj.vm2.LuaValue;
import org.luaj.vm2.Varargs;

import java.util.Set;

/**
 * Created by eve on 10/15/2014
 */
public final class LuaUtil {

    private static final Set&lt;Class&lt;?&gt;&gt; allowedTypes = Sets.newHashSet(Double.class, String.class, Integer.class);

    private LuaUtil() {}

    public static boolean checkVarargs(Varargs args, int min, int max) {
        return args.narg() &gt;= min &amp;&amp; args.narg() &lt;= max;
    }

    public static boolean checkVarargs(Varargs args, int min) {
        return args.narg() &gt;= min;
    }

    public static &lt;T&gt; LuaValue getValueOf(T var) {
        if(!allowedTypes.contains(var.getClass())) {
            throw new IllegalArgumentException("Cannot convert " + var.getClass() + " to LuaValue");
        }

        if(Double.class == var.getClass()) {
            double d = (Double) var;
            return LuaValue.valueOf(d);
        }

        if(String.class == var.getClass()) {
            String s = (String) var;
            return LuaValue.valueOf(s);
        }

        // TODO: Possibly need to make sure int.class is handled
        if(Integer.class == var.getClass()) {
            Integer i = (Integer) var;
            return LuaValue.valueOf(i);
        }

        throw new RuntimeException("Unhandled type in &lt;T&gt; getValueOf(T)" + var.getClass());
    }
}
</code></pre>
<p><a href="http://up.ht/ZtWD80" class="onebox" target="_blank" rel="nofollow noopener">http://up.ht/ZtWD80</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/packet-obfuscation-solution/547284/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/packet-obfuscation-solution/547284/1</link>
        <pubDate>Wed, 15 Oct 2014 19:55:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-547284-1</guid>
        <source url="https://forum.moparisthebest.com/t/packet-obfuscation-solution/547284.rss">Packet Obfuscation Solution</source>
      </item>
  </channel>
</rss>
