<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[718] Pickables - Get your Onions, Cabbage, Flax, Wheat, and Potato all here!</title>
    <link>https://forum.moparisthebest.com/t/718-pickables-get-your-onions-cabbage-flax-wheat-and-potato-all-here/536222</link>
    <description>[img]http://puu.sh/5wSFp.png[/img]

Pickables are items that you can pick up. Playing a key part in many skills, this snippet will allow you to get your vegetables right away.

[U][I]Lets do this![/I][/U]

[B]Step 1:[/B] First, go into your [COLOR=RED]package[/COLOR] [I]com.rs.game.player.content[/I] and go make a new class. The class&#39;s name will be called Pickables(.java).

[img]http://puu.sh/5wSOb.png[/img]

[B]Step 2:[/B] Inside this new class, add the following:
[code=java]
package com.rs.game.player.content;

import com.rs.cores.CoresManager;
import com.rs.game.Animation;
import com.rs.game.World;
import com.rs.game.WorldObject;
import com.rs.game.item.Item;
import com.rs.game.player.Player;
import com.rs.utils.Utils;

import java.util.TimerTask;

/**
 * Picking up things that are stackable and pickable.
 *
 * @author Arham Siddiqui
 */
public class Pickables {

    /**
     * Picks up the Pickable.
     *
     * @param player   The Player picking up the Pickable.
     * @param pickable The Pickable item to pick.
     */
    private static void pick(final Player player, final WorldObject worldObject, final Pickable pickable) {
        if (player.getInventory().getFreeSlots() &gt; 0) {
            player.setNextAnimation(new Animation(827));
            if (pickable != Pickable.FLAX) {
                CoresManager.fastExecutor.schedule(new TimerTask() {
                    @Override
                    public void run() {
                        player.getInventory().addItem(pickable.getHarvestedItem());
                        World.removeObject(worldObject, false);
                        player.addWalkSteps(worldObject.getX(), worldObject.getY());
                    }
                }, 750);
                CoresManager.fastExecutor.schedule(new TimerTask() {
                    @Override
                    public void run() {
                        World.spawnObject(worldObject, false);
                    }
                }, 13000);
            } else {
                CoresManager.fastExecutor.schedule(new TimerTask() {
                    @Override
                    public void run() {
                        player.getInventory().addItem(pickable.getHarvestedItem());
                        worldObject.decrementAmount();
                        if (worldObject.getAmount() &lt; 1) {
                            World.removeObject(worldObject, false);
                            player.addWalkSteps(worldObject.getX(), worldObject.getY());
                        }
                    }
                }, 750);
                if (worldObject.getAmount() &lt;= 1) {
                    CoresManager.fastExecutor.schedule(new TimerTask() {
                        @Override
                        public void run() {
                            World.spawnObject(worldObject, false);
                            worldObject.setAmount(Utils.random(10));
                        }
                    }, 13000);
                }
            }
        }
    }

    /**
     * Handles if the object is a pickable.
     *
     * @param player      The player picking the object.
     * @param worldObject The literal pickable.
     * @return If the object is a pickable.
     */
    public static boolean handlePickable(Player player, WorldObject worldObject) {
        for (Pickable pickable : Pickable.values()) {
            for (int i = 0; i &lt; pickable.getObjectIds().length; i++) {
                if (pickable.getObjectIds()[i] == worldObject.getId()) {
                    pick(player, worldObject, pickable);
                    return true;
                }
            }
        }
        return false;
    }

    /**
     * The single pickable.
     */
    public enum Pickable {
        ONION(new int[]{3366, 5538, 8584}, new Item(1957)),
        CABBAGE(new int[]{1161, 8535, 8536, 8537, 8538, 8539, 8540, 8541, 8542, 8543, 11494, 22301}, new Item(1965)),
        WHEAT(new int[]{313, 5583, 5584, 5585, 15506, 15507, 15508, 22300}, new Item(1947)),
        POTATO(new int[]{312, 8562, 9408}, new Item(1942)),
        FLAX(new int[]{2646, 15075, 15076, 15077, 15078, 67264, 67263}, new Item(1779));
        private int[] objectIds;
        private Item harvestedItem;

        Pickable(int[] objectIds, Item harvestedItem) {
            this.objectIds = objectIds;
            this.harvestedItem = harvestedItem;
        }

        public int[] getObjectIds() {
            return objectIds;
        }

        public Item getHarvestedItem() {
            return harvestedItem;
        }
    }
}
[/code]
Looking to learn something? I commented the code just for you then!

[B]Step 3:[/B] Now we want to make the object work from the packet that handles the clicking. All we have to do is just open up ObjectHandler(.java) and find:
[code=java]
private static void handleOption2(final Player player, final WorldObject object) {
[/code]
Next, below:
[code=java]
                if (!player.getControlerManager().processObjectClick2(object))
                    return;
[/code]
Add:
[code=java]
                /**
                 * Can we pick up the pickable?
                 */
                if (Pickables.handlePickable(player, object))
                    return;
[/code]

[B]Step 4:[/B] Enjoy. :)
[I]Now go into some flax house or a farm and pick dem onions, cabbage, flax, wheat, potato, whatever! Try it![/I]

Kind regards,
Arham</description>
    
    <lastBuildDate>Sat, 28 Dec 2013 05:05:01 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/718-pickables-get-your-onions-cabbage-flax-wheat-and-potato-all-here/536222.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[718] Pickables - Get your Onions, Cabbage, Flax, Wheat, and Potato all here!</title>
        <dc:creator><![CDATA[@wildskiller wildskiller]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/wildskiller">@wildskiller</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="536222">
<div class="title">
<div class="quote-controls"></div>
 Clawz fury:</div>
<blockquote>
<p>why is timertask being used rather than scheduledexecutorservice?</p>
</blockquote>
</aside>
<p>Scheduled executor service is, I believe, full of different worker threads. There can be multiple threads running at once, but those threads could be running in the background even if the server is stopped. I would just call a tick or task for this. I wouldn’t know of any reason to use a scheduled executor service but to use it to run the server ticks and tasks.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/718-pickables-get-your-onions-cabbage-flax-wheat-and-potato-all-here/536222/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/718-pickables-get-your-onions-cabbage-flax-wheat-and-potato-all-here/536222/3</link>
        <pubDate>Sat, 28 Dec 2013 05:05:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-536222-3</guid>
        <source url="https://forum.moparisthebest.com/t/718-pickables-get-your-onions-cabbage-flax-wheat-and-potato-all-here/536222.rss">[718] Pickables - Get your Onions, Cabbage, Flax, Wheat, and Potato all here!</source>
      </item>
      <item>
        <title>[718] Pickables - Get your Onions, Cabbage, Flax, Wheat, and Potato all here!</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>why is timertask being used rather than scheduledexecutorservice?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/718-pickables-get-your-onions-cabbage-flax-wheat-and-potato-all-here/536222/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/718-pickables-get-your-onions-cabbage-flax-wheat-and-potato-all-here/536222/2</link>
        <pubDate>Sun, 01 Dec 2013 07:18:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-536222-2</guid>
        <source url="https://forum.moparisthebest.com/t/718-pickables-get-your-onions-cabbage-flax-wheat-and-potato-all-here/536222.rss">[718] Pickables - Get your Onions, Cabbage, Flax, Wheat, and Potato all here!</source>
      </item>
      <item>
        <title>[718] Pickables - Get your Onions, Cabbage, Flax, Wheat, and Potato all here!</title>
        <dc:creator><![CDATA[@arham_4 arham 4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/arham_4">@arham_4</a> wrote:</p>
          <blockquote>
              <p><img src="http://puu.sh/5wSFp.png" alt width="" height=""></p>
<p>Pickables are items that you can pick up. Playing a key part in many skills, this snippet will allow you to get your vegetables right away.</p>
<p>[U][I]Lets do this![/I][/U]</p>
<p>[B]Step 1:[/B] First, go into your [COLOR=RED]package[/COLOR] [I]com.rs.game.player.content[/I] and go make a new class. The class’s name will be called Pickables(.java).</p>
<p><img src="http://puu.sh/5wSOb.png" alt width="" height=""></p>
<p>[B]Step 2:[/B] Inside this new class, add the following:</p>
<pre><code class="lang-auto">package com.rs.game.player.content;

import com.rs.cores.CoresManager;
import com.rs.game.Animation;
import com.rs.game.World;
import com.rs.game.WorldObject;
import com.rs.game.item.Item;
import com.rs.game.player.Player;
import com.rs.utils.Utils;

import java.util.TimerTask;

/**
 * Picking up things that are stackable and pickable.
 *
 * @author Arham Siddiqui
 */
public class Pickables {

    /**
     * Picks up the Pickable.
     *
     * @param player   The Player picking up the Pickable.
     * @param pickable The Pickable item to pick.
     */
    private static void pick(final Player player, final WorldObject worldObject, final Pickable pickable) {
        if (player.getInventory().getFreeSlots() &gt; 0) {
            player.setNextAnimation(new Animation(827));
            if (pickable != Pickable.FLAX) {
                CoresManager.fastExecutor.schedule(new TimerTask() {
                    @Override
                    public void run() {
                        player.getInventory().addItem(pickable.getHarvestedItem());
                        World.removeObject(worldObject, false);
                        player.addWalkSteps(worldObject.getX(), worldObject.getY());
                    }
                }, 750);
                CoresManager.fastExecutor.schedule(new TimerTask() {
                    @Override
                    public void run() {
                        World.spawnObject(worldObject, false);
                    }
                }, 13000);
            } else {
                CoresManager.fastExecutor.schedule(new TimerTask() {
                    @Override
                    public void run() {
                        player.getInventory().addItem(pickable.getHarvestedItem());
                        worldObject.decrementAmount();
                        if (worldObject.getAmount() &lt; 1) {
                            World.removeObject(worldObject, false);
                            player.addWalkSteps(worldObject.getX(), worldObject.getY());
                        }
                    }
                }, 750);
                if (worldObject.getAmount() &lt;= 1) {
                    CoresManager.fastExecutor.schedule(new TimerTask() {
                        @Override
                        public void run() {
                            World.spawnObject(worldObject, false);
                            worldObject.setAmount(Utils.random(10));
                        }
                    }, 13000);
                }
            }
        }
    }

    /**
     * Handles if the object is a pickable.
     *
     * @param player      The player picking the object.
     * @param worldObject The literal pickable.
     * @return If the object is a pickable.
     */
    public static boolean handlePickable(Player player, WorldObject worldObject) {
        for (Pickable pickable : Pickable.values()) {
            for (int i = 0; i &lt; pickable.getObjectIds().length; i++) {
                if (pickable.getObjectIds()[i] == worldObject.getId()) {
                    pick(player, worldObject, pickable);
                    return true;
                }
            }
        }
        return false;
    }

    /**
     * The single pickable.
     */
    public enum Pickable {
        ONION(new int[]{3366, 5538, 8584}, new Item(1957)),
        CABBAGE(new int[]{1161, 8535, 8536, 8537, 8538, 8539, 8540, 8541, 8542, 8543, 11494, 22301}, new Item(1965)),
        WHEAT(new int[]{313, 5583, 5584, 5585, 15506, 15507, 15508, 22300}, new Item(1947)),
        POTATO(new int[]{312, 8562, 9408}, new Item(1942)),
        FLAX(new int[]{2646, 15075, 15076, 15077, 15078, 67264, 67263}, new Item(1779));
        private int[] objectIds;
        private Item harvestedItem;

        Pickable(int[] objectIds, Item harvestedItem) {
            this.objectIds = objectIds;
            this.harvestedItem = harvestedItem;
        }

        public int[] getObjectIds() {
            return objectIds;
        }

        public Item getHarvestedItem() {
            return harvestedItem;
        }
    }
}</code></pre>
<p>Looking to learn something? I commented the code just for you then!</p>
<p>[B]Step 3:[/B] Now we want to make the object work from the packet that handles the clicking. All we have to do is just open up ObjectHandler(.java) and find:</p>
<pre><code class="lang-auto">private static void handleOption2(final Player player, final WorldObject object) {</code></pre>
<p>Next, below:</p>
<pre><code class="lang-auto">                if (!player.getControlerManager().processObjectClick2(object))
                    return;</code></pre>
<p>Add:</p>
<pre><code class="lang-auto">                /**
                 * Can we pick up the pickable?
                 */
                if (Pickables.handlePickable(player, object))
                    return;</code></pre>
<p>[B]Step 4:[/B] Enjoy. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"><br>
[I]Now go into some flax house or a farm and pick dem onions, cabbage, flax, wheat, potato, whatever! Try it![/I]</p>
<p>Kind regards,<br>
Arham</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/718-pickables-get-your-onions-cabbage-flax-wheat-and-potato-all-here/536222/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/718-pickables-get-your-onions-cabbage-flax-wheat-and-potato-all-here/536222/1</link>
        <pubDate>Fri, 29 Nov 2013 18:31:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-536222-1</guid>
        <source url="https://forum.moparisthebest.com/t/718-pickables-get-your-onions-cabbage-flax-wheat-and-potato-all-here/536222.rss">[718] Pickables - Get your Onions, Cabbage, Flax, Wheat, and Potato all here!</source>
      </item>
  </channel>
</rss>
