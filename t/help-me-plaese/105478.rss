<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Help me Plaese!</title>
    <link>https://forum.moparisthebest.com/t/help-me-plaese/105478</link>
    <description>Some prob:
[code]
        else if (Magicka &lt; 15){
        ^
client.java:3906: &#39;else&#39; without &#39;if&#39;
        else if (Magicka &lt; 15){
        ^
client.java:3919: &#39;else&#39; without &#39;if&#39;
        else if (Magicka &lt; 15){
        ^
client.java:3932: &#39;else&#39; without &#39;if&#39;
        else if (Magicka &lt; 15){
        ^
client.java:3944: &#39;else&#39; without &#39;if&#39;
        else if (Magicka &lt; 15){
        ^
client.java:4030: illegal start of expression
public boolean HasItemAmount(int itemID, int itemAmount) {
^
client.java:4031: illegal start of expression
      public int playerItemAmountCount = 0;
      ^
client.java:4032: illegal start of type
      for (int i=0; i&lt;playerItems.length; i++)
      ^
client.java:4032: &gt; expected
      for (int i=0; i&lt;playerItems.length; i++)
                                        ^
client.java:4032: &lt;identifier&gt; expected
      for (int i=0; i&lt;playerItems.length; i++)
                                           ^
client.java:4041: illegal start of type
         return false;
         ^
client.java:4046: class, interface, or enum expected
    public boolean Has2Items(int itemID, int amount, int itemID2, int amount2){
           ^
client.java:4050: class, interface, or enum expected
      } else{ return false; }
      ^
client.java:4050: class, interface, or enum expected
      } else{ return false; }
                            ^
client.java:4051: class, interface, or enum expected
   } else{ return false; }
                         ^
client.java:4054: class, interface, or enum expected
    public boolean Has3Items(int itemID, int amount, int itemID2, int amount2, i
nt itemID3, int amount3){
           ^
client.java:4059: class, interface, or enum expected
         } else{ return false; }
         ^
client.java:4059: class, interface, or enum expected
         } else{ return false; }
                               ^
client.java:4060: class, interface, or enum expected
      } else{ return false; }
                            ^
client.java:4061: class, interface, or enum expected
   } else{ return false; }
                         ^
client.java:4067: class, interface, or enum expected
    public void teleport(int x, int y, int h, int xp, int lvl){
           ^
client.java:4069: class, interface, or enum expected
   teleportToY = y;
   ^
client.java:4070: class, interface, or enum expected
   heightLevel = h;
   ^
client.java:4071: class, interface, or enum expected
   addSkillXP(xp, lvl);
   ^
client.java:4072: class, interface, or enum expected
    }
    ^
client.java:4074: class, interface, or enum expected
public void TeleToAdvanced(String cityName, int lvl, String type) {
       ^
client.java:4077: class, interface, or enum expected
      String token = &quot;&quot;;
      ^
client.java:4078: class, interface, or enum expected
      String token2 = &quot;&quot;;
      ^
client.java:4079: class, interface, or enum expected
      String token2_2 = &quot;&quot;;
      ^
client.java:4080: class, interface, or enum expected
      String[] token3 = new String[25];
      ^
client.java:4081: class, interface, or enum expected
      boolean EndOfFile = false;
      ^
client.java:4082: class, interface, or enum expected
      int ReadMode = 0;
      ^
client.java:4083: class, interface, or enum expected
      BufferedReader characterfile = null;
      ^
client.java:4084: class, interface, or enum expected
      try {
      ^
client.java:4086: class, interface, or enum expected
      } catch(FileNotFoundException fileex) {
      ^
client.java:4089: class, interface, or enum expected
      }
      ^
client.java:4092: class, interface, or enum expected
      } catch(IOException ioexception) {
      ^
client.java:4095: class, interface, or enum expected
      }
      ^
client.java:4098: class, interface, or enum expected
         int spot = line.indexOf(&quot;=&quot;);
         ^
client.java:4099: class, interface, or enum expected
         if (spot &gt; -1) {
         ^
client.java:4101: class, interface, or enum expected
            token = token.trim();
            ^
client.java:4102: class, interface, or enum expected
            token2 = line.substring(spot + 1);
            ^
client.java:4103: class, interface, or enum expected
            token2 = token2.trim();
            ^
client.java:4104: class, interface, or enum expected
            token2_2 = token2.replaceAll(&quot;\t\t&quot;, &quot;\t&quot;);
            ^
client.java:4105: class, interface, or enum expected
            token2_2 = token2_2.replaceAll(&quot;\t\t&quot;, &quot;\t&quot;);
            ^
client.java:4106: class, interface, or enum expected
            token2_2 = token2_2.replaceAll(&quot;\t\t&quot;, &quot;\t&quot;);
            ^
client.java:4107: class, interface, or enum expected
            token2_2 = token2_2.replaceAll(&quot;\t\t&quot;, &quot;\t&quot;);
            ^
client.java:4108: class, interface, or enum expected
            token2_2 = token2_2.replaceAll(&quot;\t\t&quot;, &quot;\t&quot;);
            ^
client.java:4109: class, interface, or enum expected
            token3 = token2_2.split(&quot;\t&quot;);
            ^
client.java:4110: class, interface, or enum expected
            int RandomNum = 0;
            ^
client.java:4112: class, interface, or enum expected
   if (token.equals(&quot;Tele&quot;)) {
   ^
client.java:4114: class, interface, or enum expected
if(type.equalsIgnoreCase(&quot;cmd&quot;)){RandomNum = 1;}
^
client.java:4114: class, interface, or enum expected
if(type.equalsIgnoreCase(&quot;cmd&quot;)){RandomNum = 1;}
                                               ^
client.java:4115: class, interface, or enum expected
if(type.equalsIgnoreCase(&quot;mage&quot;)){RandomNum = misc.random(25);}
                                                              ^
client.java:4117: class, interface, or enum expected
            int MLvl = Integer.parseInt(token3[2]);
            ^
client.java:4118: class, interface, or enum expected
            int RuneTypes = Integer.parseInt(token3[3]);
            ^
client.java:4119: class, interface, or enum expected
            int Rune1 = Integer.parseInt(token3[4]);
            ^
client.java:4120: class, interface, or enum expected
            int Rune2 = Integer.parseInt(token3[5]);
            ^
client.java:4121: class, interface, or enum expected
            int Rune3 = Integer.parseInt(token3[6]);
            ^
client.java:4122: class, interface, or enum expected
            int Item = Integer.parseInt(token3[7]);
            ^
client.java:4123: class, interface, or enum expected
            int TeleX = Integer.parseInt(token3[8]);
            ^
client.java:4124: class, interface, or enum expected
            int TeleY = Integer.parseInt(token3[9]);
            ^
client.java:4125: class, interface, or enum expected
            int Height = Integer.parseInt(token3[10]);
            ^
client.java:4126: class, interface, or enum expected
            int Xp = Integer.parseInt(token3[11]);
            ^
client.java:4127: class, interface, or enum expected
            int R1Amt = Integer.parseInt(token3[12]);
            ^
client.java:4128: class, interface, or enum expected
            int R2Amt = Integer.parseInt(token3[13]);
            ^
client.java:4129: class, interface, or enum expected
            int R3Amt = Integer.parseInt(token3[14]);
            ^
client.java:4130: class, interface, or enum expected
            int ItmAmt = Integer.parseInt(token3[15]);
            ^
client.java:4132: class, interface, or enum expected
if (cityName.equalsIgnoreCase(city)){
^
client.java:4137: class, interface, or enum expected
}
^
client.java:4142: class, interface, or enum expected
               deleteItem(Rune2, GetItemSlot(Rune2), R2Amt);
               ^
client.java:4143: class, interface, or enum expected
               teleport(TeleX, TeleY, Height, Xp, playerMagic);
               ^
client.java:4144: class, interface, or enum expected
            }else{
            ^
client.java:4145: class, interface, or enum expected
sendMessage(&quot;You don&#39;t have the required runes to do that.&quot;);}
                                                             ^
client.java:4151: class, interface, or enum expected
               deleteItem(Rune2, GetItemSlot(Rune2), R2Amt);
               ^
client.java:4152: class, interface, or enum expected
               deleteItem(Rune3, GetItemSlot(Rune3), R3Amt);
               ^
client.java:4153: class, interface, or enum expected
               teleport(TeleX, TeleY, Height, Xp, playerMagic);
               ^
client.java:4155: class, interface, or enum expected
            }else{
            ^
client.java:4156: class, interface, or enum expected
sendMessage(&quot;You don&#39;t have the required runes to do that.&quot;);}
                                                             ^
client.java:4163: class, interface, or enum expected
               deleteItem(Rune1, GetItemSlot(Rune1), R1Amt);
               ^
client.java:4164: class, interface, or enum expected
               deleteItem(Rune2, GetItemSlot(Rune2), R1Amt);
               ^
client.java:4165: class, interface, or enum expected
               teleport(TeleX, TeleY, Height, Xp, playerMagic);
               ^
client.java:4167: class, interface, or enum expected
            }else{
            ^
client.java:4168: class, interface, or enum expected
sendMessage(&quot;You need a &quot;+GetItemName(Item)+&quot; to do that.&quot;);}
                                                            ^
client.java:4170: class, interface, or enum expected
sendMessage(&quot;You don&#39;t have the required runes to do that.&quot;);}
                                                             ^
client.java:4176: class, interface, or enum expected
               deleteItem(Rune1, GetItemSlot(Rune1), R1Amt);
               ^
client.java:4177: class, interface, or enum expected
               deleteItem(Rune2, GetItemSlot(Rune2), R1Amt);
               ^
client.java:4178: class, interface, or enum expected
               deleteItem(Rune3, GetItemSlot(Rune3), R3Amt);
               ^
client.java:4179: class, interface, or enum expected
               teleport(TeleX, TeleY, Height, Xp, playerMagic);
               ^
client.java:4181: class, interface, or enum expected
            }else{
            ^
client.java:4182: class, interface, or enum expected
sendMessage(&quot;You need a &quot;+GetItemName(Item)+&quot; to do that.&quot;);}
                                                            ^
client.java:4184: class, interface, or enum expected
sendMessage(&quot;You don&#39;t have the required runes to do that.&quot;);}
                                                             ^
client.java:4194: class, interface, or enum expected
               try { characterfile.close(); } catch(IOException ioexception) { }

                                            ^
client.java:4201: class, interface, or enum expected
         } catch(IOException ioexception1) { EndOfFile = true; }
         ^
client.java:4201: class, interface, or enum expected
         } catch(IOException ioexception1) { EndOfFile = true; }
                                                               ^
client.java:4203: class, interface, or enum expected
      try { characterfile.close(); } catch(IOException ioexception) { }
                                   ^
client.java:4204: class, interface, or enum expected
      }else{ sendMessage(&quot;You need level &quot;+lvl+&quot; to use this spell.&quot;);}
                                                                      ^
client.java:4207: class, interface, or enum expected
        public boolean playerHasItem(int itemID)
               ^
client.java:4209: class, interface, or enum expected
                for (int i=0; i &lt;playerItems.length; i++)
                              ^
100 errors
Press any key to continue . . .
[/code]
Any help is highly appriceated.</description>
    
    <lastBuildDate>Mon, 04 Jun 2007 00:23:13 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/help-me-plaese/105478.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Help me Plaese!</title>
        <dc:creator><![CDATA[@nicatron nicatron]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/nicatron">@nicatron</a> wrote:</p>
          <blockquote>
              <p>Some prob:</p>
<pre><code class="lang-auto">        else if (Magicka &lt; 15){
        ^
client.java:3906: 'else' without 'if'
        else if (Magicka &lt; 15){
        ^
client.java:3919: 'else' without 'if'
        else if (Magicka &lt; 15){
        ^
client.java:3932: 'else' without 'if'
        else if (Magicka &lt; 15){
        ^
client.java:3944: 'else' without 'if'
        else if (Magicka &lt; 15){
        ^
client.java:4030: illegal start of expression
public boolean HasItemAmount(int itemID, int itemAmount) {
^
client.java:4031: illegal start of expression
      public int playerItemAmountCount = 0;
      ^
client.java:4032: illegal start of type
      for (int i=0; i&lt;playerItems.length; i++)
      ^
client.java:4032: &gt; expected
      for (int i=0; i&lt;playerItems.length; i++)
                                        ^
client.java:4032: &lt;identifier&gt; expected
      for (int i=0; i&lt;playerItems.length; i++)
                                           ^
client.java:4041: illegal start of type
         return false;
         ^
client.java:4046: class, interface, or enum expected
    public boolean Has2Items(int itemID, int amount, int itemID2, int amount2){
           ^
client.java:4050: class, interface, or enum expected
      } else{ return false; }
      ^
client.java:4050: class, interface, or enum expected
      } else{ return false; }
                            ^
client.java:4051: class, interface, or enum expected
   } else{ return false; }
                         ^
client.java:4054: class, interface, or enum expected
    public boolean Has3Items(int itemID, int amount, int itemID2, int amount2, i
nt itemID3, int amount3){
           ^
client.java:4059: class, interface, or enum expected
         } else{ return false; }
         ^
client.java:4059: class, interface, or enum expected
         } else{ return false; }
                               ^
client.java:4060: class, interface, or enum expected
      } else{ return false; }
                            ^
client.java:4061: class, interface, or enum expected
   } else{ return false; }
                         ^
client.java:4067: class, interface, or enum expected
    public void teleport(int x, int y, int h, int xp, int lvl){
           ^
client.java:4069: class, interface, or enum expected
   teleportToY = y;
   ^
client.java:4070: class, interface, or enum expected
   heightLevel = h;
   ^
client.java:4071: class, interface, or enum expected
   addSkillXP(xp, lvl);
   ^
client.java:4072: class, interface, or enum expected
    }
    ^
client.java:4074: class, interface, or enum expected
public void TeleToAdvanced(String cityName, int lvl, String type) {
       ^
client.java:4077: class, interface, or enum expected
      String token = "";
      ^
client.java:4078: class, interface, or enum expected
      String token2 = "";
      ^
client.java:4079: class, interface, or enum expected
      String token2_2 = "";
      ^
client.java:4080: class, interface, or enum expected
      String[] token3 = new String[25];
      ^
client.java:4081: class, interface, or enum expected
      boolean EndOfFile = false;
      ^
client.java:4082: class, interface, or enum expected
      int ReadMode = 0;
      ^
client.java:4083: class, interface, or enum expected
      BufferedReader characterfile = null;
      ^
client.java:4084: class, interface, or enum expected
      try {
      ^
client.java:4086: class, interface, or enum expected
      } catch(FileNotFoundException fileex) {
      ^
client.java:4089: class, interface, or enum expected
      }
      ^
client.java:4092: class, interface, or enum expected
      } catch(IOException ioexception) {
      ^
client.java:4095: class, interface, or enum expected
      }
      ^
client.java:4098: class, interface, or enum expected
         int spot = line.indexOf("=");
         ^
client.java:4099: class, interface, or enum expected
         if (spot &gt; -1) {
         ^
client.java:4101: class, interface, or enum expected
            token = token.trim();
            ^
client.java:4102: class, interface, or enum expected
            token2 = line.substring(spot + 1);
            ^
client.java:4103: class, interface, or enum expected
            token2 = token2.trim();
            ^
client.java:4104: class, interface, or enum expected
            token2_2 = token2.replaceAll("\t\t", "\t");
            ^
client.java:4105: class, interface, or enum expected
            token2_2 = token2_2.replaceAll("\t\t", "\t");
            ^
client.java:4106: class, interface, or enum expected
            token2_2 = token2_2.replaceAll("\t\t", "\t");
            ^
client.java:4107: class, interface, or enum expected
            token2_2 = token2_2.replaceAll("\t\t", "\t");
            ^
client.java:4108: class, interface, or enum expected
            token2_2 = token2_2.replaceAll("\t\t", "\t");
            ^
client.java:4109: class, interface, or enum expected
            token3 = token2_2.split("\t");
            ^
client.java:4110: class, interface, or enum expected
            int RandomNum = 0;
            ^
client.java:4112: class, interface, or enum expected
   if (token.equals("Tele")) {
   ^
client.java:4114: class, interface, or enum expected
if(type.equalsIgnoreCase("cmd")){RandomNum = 1;}
^
client.java:4114: class, interface, or enum expected
if(type.equalsIgnoreCase("cmd")){RandomNum = 1;}
                                               ^
client.java:4115: class, interface, or enum expected
if(type.equalsIgnoreCase("mage")){RandomNum = misc.random(25);}
                                                              ^
client.java:4117: class, interface, or enum expected
            int MLvl = Integer.parseInt(token3[2]);
            ^
client.java:4118: class, interface, or enum expected
            int RuneTypes = Integer.parseInt(token3[3]);
            ^
client.java:4119: class, interface, or enum expected
            int Rune1 = Integer.parseInt(token3[4]);
            ^
client.java:4120: class, interface, or enum expected
            int Rune2 = Integer.parseInt(token3[5]);
            ^
client.java:4121: class, interface, or enum expected
            int Rune3 = Integer.parseInt(token3[6]);
            ^
client.java:4122: class, interface, or enum expected
            int Item = Integer.parseInt(token3[7]);
            ^
client.java:4123: class, interface, or enum expected
            int TeleX = Integer.parseInt(token3[8]);
            ^
client.java:4124: class, interface, or enum expected
            int TeleY = Integer.parseInt(token3[9]);
            ^
client.java:4125: class, interface, or enum expected
            int Height = Integer.parseInt(token3[10]);
            ^
client.java:4126: class, interface, or enum expected
            int Xp = Integer.parseInt(token3[11]);
            ^
client.java:4127: class, interface, or enum expected
            int R1Amt = Integer.parseInt(token3[12]);
            ^
client.java:4128: class, interface, or enum expected
            int R2Amt = Integer.parseInt(token3[13]);
            ^
client.java:4129: class, interface, or enum expected
            int R3Amt = Integer.parseInt(token3[14]);
            ^
client.java:4130: class, interface, or enum expected
            int ItmAmt = Integer.parseInt(token3[15]);
            ^
client.java:4132: class, interface, or enum expected
if (cityName.equalsIgnoreCase(city)){
^
client.java:4137: class, interface, or enum expected
}
^
client.java:4142: class, interface, or enum expected
               deleteItem(Rune2, GetItemSlot(Rune2), R2Amt);
               ^
client.java:4143: class, interface, or enum expected
               teleport(TeleX, TeleY, Height, Xp, playerMagic);
               ^
client.java:4144: class, interface, or enum expected
            }else{
            ^
client.java:4145: class, interface, or enum expected
sendMessage("You don't have the required runes to do that.");}
                                                             ^
client.java:4151: class, interface, or enum expected
               deleteItem(Rune2, GetItemSlot(Rune2), R2Amt);
               ^
client.java:4152: class, interface, or enum expected
               deleteItem(Rune3, GetItemSlot(Rune3), R3Amt);
               ^
client.java:4153: class, interface, or enum expected
               teleport(TeleX, TeleY, Height, Xp, playerMagic);
               ^
client.java:4155: class, interface, or enum expected
            }else{
            ^
client.java:4156: class, interface, or enum expected
sendMessage("You don't have the required runes to do that.");}
                                                             ^
client.java:4163: class, interface, or enum expected
               deleteItem(Rune1, GetItemSlot(Rune1), R1Amt);
               ^
client.java:4164: class, interface, or enum expected
               deleteItem(Rune2, GetItemSlot(Rune2), R1Amt);
               ^
client.java:4165: class, interface, or enum expected
               teleport(TeleX, TeleY, Height, Xp, playerMagic);
               ^
client.java:4167: class, interface, or enum expected
            }else{
            ^
client.java:4168: class, interface, or enum expected
sendMessage("You need a "+GetItemName(Item)+" to do that.");}
                                                            ^
client.java:4170: class, interface, or enum expected
sendMessage("You don't have the required runes to do that.");}
                                                             ^
client.java:4176: class, interface, or enum expected
               deleteItem(Rune1, GetItemSlot(Rune1), R1Amt);
               ^
client.java:4177: class, interface, or enum expected
               deleteItem(Rune2, GetItemSlot(Rune2), R1Amt);
               ^
client.java:4178: class, interface, or enum expected
               deleteItem(Rune3, GetItemSlot(Rune3), R3Amt);
               ^
client.java:4179: class, interface, or enum expected
               teleport(TeleX, TeleY, Height, Xp, playerMagic);
               ^
client.java:4181: class, interface, or enum expected
            }else{
            ^
client.java:4182: class, interface, or enum expected
sendMessage("You need a "+GetItemName(Item)+" to do that.");}
                                                            ^
client.java:4184: class, interface, or enum expected
sendMessage("You don't have the required runes to do that.");}
                                                             ^
client.java:4194: class, interface, or enum expected
               try { characterfile.close(); } catch(IOException ioexception) { }

                                            ^
client.java:4201: class, interface, or enum expected
         } catch(IOException ioexception1) { EndOfFile = true; }
         ^
client.java:4201: class, interface, or enum expected
         } catch(IOException ioexception1) { EndOfFile = true; }
                                                               ^
client.java:4203: class, interface, or enum expected
      try { characterfile.close(); } catch(IOException ioexception) { }
                                   ^
client.java:4204: class, interface, or enum expected
      }else{ sendMessage("You need level "+lvl+" to use this spell.");}
                                                                      ^
client.java:4207: class, interface, or enum expected
        public boolean playerHasItem(int itemID)
               ^
client.java:4209: class, interface, or enum expected
                for (int i=0; i &lt;playerItems.length; i++)
                              ^
100 errors
Press any key to continue . . .</code></pre>
<p>Any help is highly appriceated.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/help-me-plaese/105478/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/help-me-plaese/105478/1</link>
        <pubDate>Mon, 04 Jun 2007 00:23:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-105478-1</guid>
        <source url="https://forum.moparisthebest.com/t/help-me-plaese/105478.rss">Help me Plaese!</source>
      </item>
  </channel>
</rss>
