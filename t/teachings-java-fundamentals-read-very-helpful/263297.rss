<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[Teachings] Java Fundamentals ~ Read, Very helpful</title>
    <link>https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297</link>
    <description>Normally I wouldn&#39;t mess around and would just get to it. But I believe at least an introduction is necessary. So here goes.

Hello Moparisthebest, my name is &quot;public boolean&quot; and I&#39;m posting this tutorial to teach you how to understand and write in the Java programming language. It wont be easy, so don&#39;t expect it to be. This tutorial will not teach you how to compile or set up a private server, this tutorial will teach you the basics of Java, nothing less, nothing more. I have also done java now for 6 years and decided to move to RSPS.

So, where do we begin?

[b]Variables[/b]
In Java, there are certain things that you can create called [i]variables[/i]. Technically, a [I]variable[/I] is an object that can hold a specific type of data. In other words, a variable is something that can hold a value.
Here are the types [u]common[/u] of variables, what they stand for, and the type of value they can hold:
[code]
int - integer - whole numbers under 2.17 billion in size
long - long integer - whole numbers that are larger than 2.17 billion.
double - double - variable that can contain numbers with decimal values
boolean - boolean - holds only two values, true or false
String - String - holds more than one character, like a word or sentence.
[/code]

[U]int[/U]
This is a very common variable. It stands for integer, and can hold values of whole numbers less than 2.17 billion (this includes negatives), but cannot hold decimal values. If you try to make an integer bigger than 2.17 billion, your program will crash.

[U]long[/U]
This is the exact same as an int, except it can hold larger values than 2.17 billion (on Windows machines). It cannot hold decimal values.

[U]double[/U]
The double is the exact same as a long, except it can hold decimal values.

[U]boolean[/U]
This is a helpful little variable, although it can only hold two values. The boolean cannot hold numbers, it can only hold two values: [I]true[/I] and [I]false[/I].

[U]String[/U]
The String is a special type of variable. It can hold multiple characters to form a series of words or a sentence.

[B]So how do we use these variables?[/B]
In Java, [u]any[/u] variable [I]must[/I] be explicitly [I]declared[/I]. Because of this, Java is sometimes considered a [I]strongly typed[/I] language. Don&#39;t worry about that though. Just know that before you want to use a variable, you must tell Java that it exists. To do this, we [I]declare[/I] our variable.

Declaring a variable looks like this:
[code]
accesslevel type name;
[/code]

Access Level:
The access level is how your variable can be accessed. By default, other [i]packages[/i] cannot see or use a variable unless you set the access level properly. A package is a folder that contains related Java classes. A Java &quot;class&quot; is a Java file. Most private servers don&#39;t use packaging, so you don&#39;t need to be too worried about the access level.
Common access levels are as so:
[code]
public
private
[/code]
There are more, but you don&#39;t need to worry.

[U]public[/U]
The access level public means that other packages can see it, hence the term public.

[U]private[/U]
The direct opposite of public, other packages cannot see a variable with access type of private

You do not have to specify an access level for your variables. By default, variables are private and cannot be accessed by other packages unless you declare them as public.

Type:
The type in our variable declaration is the type of variable we are declaring: int, long, boolean, double, etc.

Name:
Name is simply the name you give to the variable you are declaring. By Java conventions, your variables should start with a lowercase letter, and any other words in your name must start with an upper case letter. The name cannot contain spaces.

An example of a variable declaration:
[code]
public int myInteger;
[/code]

[b]Statements[/b]
A [I]statement[/I] in Java is basically anything you are coding. Anything from declaring a variable to doing advanced math is either a statement or a series of statements. The variable declaration above is a statement. Statements must end with a semicolon unless you are using a code block. A code block is simply, a block of code, starting with { and ending with }. Therefore, for every {, there must be a } to end the statement.

[u]Conditional Statements[/u]
A [I]conditional statement[/I] is a statement that will execute only when a certain condition is met. These statements are also called &quot;if&quot; statements. This is the layout for an if statement:
[code]
if(arguement)
    code to execute;
[/code]
If you are using only a semi colon in any statement, you cannot perform more than one action in the statement. Here is an example explaining this concept:
[code]
int myInteger;
myInteger = 1;
if(myInteger == 1)
    System.out.println(&quot;Yay!~ Public boolean is the best java coder&quot;);
System.out.println(&quot;myInteger is equal to one!&quot;);
[/code]
How many statements are in the above code? There are actually [u]four[/u] statements in the above code.
Statement one: declaring myInteger.
Statement two: setting myInteger to 1.
Statement three: this is our conditional statement, it therefore includes the &quot;System.out.println(&quot;Yay!&quot;)&quot;, but only executes it if myInteger is 1.
Statement 4: printing &quot;myInteger is equal to one!&quot; into our console.

System.out.println(String) prints text to the console.
What do you think the output is of this program? Here is what it will say:

What happens if we change the code to this?
[code]
int myInteger;
myInteger = 2;
if(myInteger == 1)
    System.out.println(&quot;Yay!~ Public boolean owz noobs&quot;);
System.out.println(&quot;myInteger is equal to one!&quot;);
[/code]
Now what is the output?

Surprised? I expect you to be. By changing myInteger to 2, the conditional statement should not execute and it should not say anything at all. Wrong, because as I stated above, you can only execute one action if you are using just a semi colon. To change this, we will use what is called a [I]code block[/I]. A code block allows you to execute more than one action at once within one statement.
Here is an example of the above code, with a code block instead:
[code]
int myInteger;
myInteger = 2;
if(myInteger == 1)
{
    System.out.println(&quot;Yay!&quot;);
    System.out.println(&quot;myInteger is equal to one!&quot;);
}
[/code]

Now what is the output of the program?
Nothing.
We have successfully bunched two actions into our code block, and because our myInteger variable is 2, the if statement never executes because it only executes if myInteger is 1.

You might have noticed the &quot;=&quot; and &quot;==&quot; characters in the above statements. These are called [I]operators[/I], which brings me to the next section...

[B]Operators[/B]

An [I]operator[/I] is something that performs a calculation. There are many operators, all meant for specific calculations. Here is a list of the common ones, and their purpose.
[code]
+ ~ Addition
- ~ Subtraction
* ~ Multiplication
/ ~ Division
&gt; ~ Greater Than
&lt; ~ Less Than
&gt;= ~ Greater than or equal to
&lt;= ~ Less than or equal to
== ~ Equal to
!= ~ Not equal to
++ ~ Increment
-- ~ De-increment 
&amp;&amp; ~ AND
|| ~ OR
[/code]
Thats a lot of operators eh? Trust me, there are more operators, designed for performing calculations on the level of bits and bytes. For the sake of your sanity, we&#39;ll just stay with the operators I&#39;ve listed above.

I wont go into detail about these operators for the sake of time, you can figure out what they do by looking at the list above.
Now that I&#39;ve gone over basic conditional statements and variables, lets go onto methods.

[B]Methods[/B]
Simply put, a [I]method[/I] is a chunk of code that performs a calculation, and returns a value based on the calculation it makes. Its not as complicated as it seems. A method is just like a variable, it is declared in the same way. The key difference is that a method must have a code block, while a statement doesn&#39;t have to. A method is a holder for statements. Here are a few types of methods:
[code]
void
int
long
String
boolean
double
[/code]
The list goes on, however, these are the most common types of methods. You may have noticed that they are very similar to variables, well in a sense they are. I mentioned before that a method returns a value. Every method returns a value except for a void. Lets go over what they return.

[U]void[/U]
No return type.

[U]int[/U]
Returns an integer.

[U]long[/U]
Returns a large integer.

[U]String[/U]
Returns a String value.

[U]boolean[/U]
Returns a boolean value

[U]double[/U]
Returns an integer value with decimal points supported, or a double.

You may have noticed that the methods return the value that their brother variables can hold. If you made this connection, good job. If not, thats okay.

Declaring a method is just like declaring a variable, but you add a code block.
Here&#39;s the way you declare methods:
[code]
accesslevel type name(parameters)
{
    Code inside the method
    return value
}
[/code]

Parameters are slightly more advanced. Basically, a parameter is a way of giving our method variables so it can perform calculations. You can have multiple parameters in your method.

To make a method execute, we have to [I]call[/I] the method by its name and its parameters. Here is the layout of calling a method:
[code]
name(parameters);
[/code]

Separate parameters are separated by a comma. Here is an example of how to use parameters:
[code]
public static void main(String[] args)
{
    System.out.println(&quot;The value of 5.5 + 5.5 is equal to&quot; + doAddition(5.5, 5.5));
}
double doAddition(double one, double two)
{
    double solution = one + two;
    return solution;
}
[/code]

We will go over the above code line by line
Line 1: our main method which Java calls when it starts the file.
Line 2: opening brace for our main method code block
Line 3: printing to the console window by calling doAddition(int, int) method
Line 4: closing brace for our main method code block
Line 5: declaration of our doAddidion method which is the double type, so we can do addition with not only whole numbers but also decimals
Line 6: opening brace for our doAddition method code block
Line 7: creating a new integer called solution, then setting solution to one + two.
Line 8: returning solution, the value that was calculated based on the parameters given
Line 9: closing brace for our doAddition method code block

The output of the above program looks like this:

What might confuse you is the parameters. You declare variables in parameters, and use them [U]only within[/U] the code block of the method that has the new variables. We give the parameter variables their value when we call the method.

Why do this when we can just do variable = number + number? Well sometimes we want to do more advanced calculations than just addition, such as the quadratic formula or distance formula. Methods are advanced, custom calculations.

About the void. A void is a method with no return type, therefore it does not return anything. The void simply executes the statements within it and finishes whenever it is called.

[B]Classes[/B]
A [I]class[/I], technically, is an object in object-oriented programming. Simply put, a class is usually a Java file that holds methods. This is a slightly more advanced concept than we have previously talked about.
A class is declared just like a method, except you must put &#39;class&#39; as the type. All of your code must be contained within the code block of a class.

Here is what a normal Java program looks like:
[code]
public class HelloWorld
{
    public static void(String[] args)
    {
        System.out.println(&quot;Hello World!&quot;);
    }
}
[/code]

The above code will compile and run in the Java environment.
When running once compiled, it will say

Cute.
Lets move on.

Classes can be (here comes a big word) [I]instantiated[/I], or created an instance of. Creating an instance of a class from another class tells that class to run relative to the class that is creating an instance of it. Its complicated, you may have to read that sentence a few times to understand. Basically, you can call a class like you can call a method. But instead of calling the class, you must create an instance of the class. Once you create an instance of the class, you can use almost any method or variable that is inside the class.
Here is how you instance a class:
[code]
classname variablename = new classname(parameters);
[/code]
Yes, classes can also have parameters. This is done by what is called the classes [I]constructor.[/I] It is an advanced concept that you may not understand for a while until you get used to programming Java.
By default, any class you create has [U]no[/U] parameters, so you do not include any parameters in the instance of the class.
This is how to create an instance of a class using parameters.

[u]The class we are going to instantiate[/u]
[code]
public class SayHello
{
    String text;

    public SayHello(String text)
    {
        this.text = text;
    }

    public static void main(String[] args)
    {
        System.out.prinltn(text);
    }
}
[/code]
Line 1: declaring our class SayHello
Line 2: opening brace for our SayHello class
Line 3: declaring a new string, naming it &#39;text&#39;
Line 4: white space
Line 5: constructor. Notice the parameters, we are creating a new variable inside the constructor.
Line 6: opening brace of the code block for our constructor
Line 7: setting the String text in the outside of our constructor to the parameter that we received when the class was instantiated.
Line 8: closing our constructor code block
Line 9: white space
Line 10: main method called by Java when the program starts
Line 11: opening brace for our main method code block
Line 12: printing to the console the value of the &#39;text&#39; String
Line 13: closing our main method code block
Line 14: closing our SayHello class code block.

[U]Instancing the class[/U]
[code]
SayHello mySayHelloClassVariable = new SayHello(&quot;Hello, World!&quot;);
[/code]

Now, when we run the above statement that instances the SayHello class, the SayHello class will print the following text:


Congratulations, if you have made it this far, you now understand the basics of Java programming.
If you are confused or have any questions, feel free to private message me. I&#39;ll get back to you when I can.
Now start coding! and enjoy !



I hope the tutorial has helped moparisthebest, i have took a lot of time making it.

~Public boolean, - The java dude.</description>
    
    <lastBuildDate>Fri, 20 Feb 2009 20:55:05 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[Teachings] Java Fundamentals ~ Read, Very helpful</title>
        <dc:creator><![CDATA[@The_Un-Named The Un-Named]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_un-named">@The_Un-Named</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="9" data-topic="263297">
<div class="title">
<div class="quote-controls"></div>
 public boolean:</div>
<blockquote>
<p>since i put effot making this… lol…</p>
</blockquote>
</aside>
<p>Well, yeah, I can see you put a lot of effort into it.</p>
<p><a href="http://www.drgunz.net/forum/archive/index.php/t-16440.html" class="onebox" target="_blank" rel="nofollow noopener">http://www.drgunz.net/forum/archive/index.php/t-16440.html</a></p>
<p>Must have been a real strain holding ctrl + c and then ctrl + v.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/21">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/21</link>
        <pubDate>Fri, 20 Feb 2009 20:55:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-263297-21</guid>
        <source url="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297.rss">[Teachings] Java Fundamentals ~ Read, Very helpful</source>
      </item>
      <item>
        <title>[Teachings] Java Fundamentals ~ Read, Very helpful</title>
        <dc:creator><![CDATA[@R.I.P_RSC R.I.P RSC]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/r.i.p_rsc">@R.I.P_RSC</a> wrote:</p>
          <blockquote>
              <p>[quote=“PeeHPee, post:19, topic:263297”][quote author=public boolean link=topic=347779.msg2677353#msg2677353 date=1235156213]</p>
<aside class="quote no-group">
<blockquote>
<p>I have a spare rope, do you want to wear it?</p>
</blockquote>
</aside>
<p>Dude what the hell is the problem… is the post offending or something… im trying to help… why are you flaming…<br>
[/quote]<br>
they are flaming you because you have posted an idiotic thread, you may please them by removing this thread.[/quote]</p>
<p>I think that newcomers should be thrown into the lion pit to test their capabilities.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/20">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/20</link>
        <pubDate>Fri, 20 Feb 2009 19:42:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-263297-20</guid>
        <source url="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297.rss">[Teachings] Java Fundamentals ~ Read, Very helpful</source>
      </item>
      <item>
        <title>[Teachings] Java Fundamentals ~ Read, Very helpful</title>
        <dc:creator><![CDATA[@PeeHPee PeeHPee]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/peehpee">@PeeHPee</a> wrote:</p>
          <blockquote>
              <p>[quote=“public boolean, post:18, topic:263297”][quote author=R.I.P RSC link=topic=347779.msg2677350#msg2677350 date=1235156019]<br>
I have a spare rope, do you want to wear it?<br>
[/quote]</p>
<p>Dude what the hell is the problem… is the post offending or something… im trying to help… why are you flaming…[/quote]<br>
they are flaming you because you have posted an idiotic thread, you may please them by removing this thread.<br>
[center]<img src="http://www.moparisthebest.org/smf/Themes/default/images/warnwarn.gif" alt width="" height=""> [/center]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/19">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/19</link>
        <pubDate>Fri, 20 Feb 2009 19:26:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-263297-19</guid>
        <source url="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297.rss">[Teachings] Java Fundamentals ~ Read, Very helpful</source>
      </item>
      <item>
        <title>[Teachings] Java Fundamentals ~ Read, Very helpful</title>
        <dc:creator><![CDATA[@public_boolean public boolean]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/public_boolean">@public_boolean</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="17" data-topic="263297">
<div class="title">
<div class="quote-controls"></div>
 R.I.P RSC:</div>
<blockquote>
<p>I have a spare rope, do you want to wear it?</p>
</blockquote>
</aside>
<p>Dude what the hell is the problem… is the post offending or something… im trying to help… why are you flaming…<br>
[center]<img src="http://www.moparisthebest.org/smf/Themes/default/images/warnmute.gif" alt width="" height=""> See my post.[/center]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/18</link>
        <pubDate>Fri, 20 Feb 2009 18:56:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-263297-18</guid>
        <source url="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297.rss">[Teachings] Java Fundamentals ~ Read, Very helpful</source>
      </item>
      <item>
        <title>[Teachings] Java Fundamentals ~ Read, Very helpful</title>
        <dc:creator><![CDATA[@R.I.P_RSC R.I.P RSC]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/r.i.p_rsc">@R.I.P_RSC</a> wrote:</p>
          <blockquote>
              <p>I have a spare rope, do you want to wear it?<br>
[center]<img src="http://www.moparisthebest.org/smf/Themes/default/images/warnpmod.gif" alt width="" height=""> [/center]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/17</link>
        <pubDate>Fri, 20 Feb 2009 18:53:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-263297-17</guid>
        <source url="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297.rss">[Teachings] Java Fundamentals ~ Read, Very helpful</source>
      </item>
      <item>
        <title>[Teachings] Java Fundamentals ~ Read, Very helpful</title>
        <dc:creator><![CDATA[@public_boolean public boolean]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/public_boolean">@public_boolean</a> wrote:</p>
          <blockquote>
              <p>[quote=“BAsh, post:15, topic:263297”][quote author=public boolean link=topic=347779.msg2677181#msg2677181 date=1235147131]</p>
<aside class="quote no-group">
<blockquote>
<p>Hello “Public boolean” your tutorial was very helpful and i have learned many javas as a result.</p>
</blockquote>
</aside>
<p>why i am glad to here.<br>
[/quote]<br>
I am glad to here too.[/quote]</p>
<p>ok, just a tiny bit wired now…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/16</link>
        <pubDate>Fri, 20 Feb 2009 18:38:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-263297-16</guid>
        <source url="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297.rss">[Teachings] Java Fundamentals ~ Read, Very helpful</source>
      </item>
      <item>
        <title>[Teachings] Java Fundamentals ~ Read, Very helpful</title>
        <dc:creator><![CDATA[@BAsh BAsh]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bash">@BAsh</a> wrote:</p>
          <blockquote>
              <p>[quote=“public boolean, post:3, topic:263297”][quote author=BAsh link=topic=347779.msg2677176#msg2677176 date=1235146951]<br>
Hello “Public boolean” your tutorial was very helpful and i have learned many javas as a result.<br>
[/quote]</p>
<p>why i am glad to here.[/quote]<br>
I am glad to here too.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/15</link>
        <pubDate>Fri, 20 Feb 2009 18:36:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-263297-15</guid>
        <source url="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297.rss">[Teachings] Java Fundamentals ~ Read, Very helpful</source>
      </item>
      <item>
        <title>[Teachings] Java Fundamentals ~ Read, Very helpful</title>
        <dc:creator><![CDATA[@public_boolean public boolean]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/public_boolean">@public_boolean</a> wrote:</p>
          <blockquote>
              <p>[quote=“Ollie, post:13, topic:263297”]inb4ban</p>
<p>fag.[/quote]</p>
<p>me?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/14</link>
        <pubDate>Fri, 20 Feb 2009 18:23:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-263297-14</guid>
        <source url="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297.rss">[Teachings] Java Fundamentals ~ Read, Very helpful</source>
      </item>
      <item>
        <title>[Teachings] Java Fundamentals ~ Read, Very helpful</title>
        <dc:creator><![CDATA[@Ollie Ollie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ollie">@Ollie</a> wrote:</p>
          <blockquote>
              <p>inb4ban</p>
<p>fag.<br>
[center]<img src="http://www.moparisthebest.org/smf/Themes/default/images/warnpmod.gif" alt width="" height=""> [/center]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/13</link>
        <pubDate>Fri, 20 Feb 2009 18:21:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-263297-13</guid>
        <source url="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297.rss">[Teachings] Java Fundamentals ~ Read, Very helpful</source>
      </item>
      <item>
        <title>[Teachings] Java Fundamentals ~ Read, Very helpful</title>
        <dc:creator><![CDATA[@atrox atrox_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/atrox">@atrox</a> wrote:</p>
          <blockquote>
              <p>fuck off.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/12</link>
        <pubDate>Fri, 20 Feb 2009 18:12:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-263297-12</guid>
        <source url="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297.rss">[Teachings] Java Fundamentals ~ Read, Very helpful</source>
      </item>
      <item>
        <title>[Teachings] Java Fundamentals ~ Read, Very helpful</title>
        <dc:creator><![CDATA[@public_boolean public boolean]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/public_boolean">@public_boolean</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="10" data-topic="263297">
<div class="title">
<div class="quote-controls"></div>
 frank_:</div>
<blockquote>
<p><a href="http://www.moparisthebest.com/smf" rel="nofollow noopener">www.moparisthebest.com/smf</a></p>
</blockquote>
</aside>
<p>XD Funny… but, no</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/11</link>
        <pubDate>Fri, 20 Feb 2009 18:06:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-263297-11</guid>
        <source url="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297.rss">[Teachings] Java Fundamentals ~ Read, Very helpful</source>
      </item>
      <item>
        <title>[Teachings] Java Fundamentals ~ Read, Very helpful</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <aside class="onebox whitelistedgeneric">
  <header class="source">
      <img src="https://forum.moparisthebest.com/uploads/default/original/2X/1/1f0dc167bcf798bdbd70b03bf0fd1bc836e54e1a.png" class="site-icon" width="32" height="32">
      <a href="https://forum.moparisthebest.com/" target="_blank">moparisthebest.com</a>
  </header>
  <article class="onebox-body">
    <img src="https://forum.moparisthebest.com/uploads/default/original/2X/4/41fecb6185fddc2758aeba68c3f8c9c78e26e4ff.png" class="thumbnail onebox-avatar" width="500" height="500">

<h3><a href="https://forum.moparisthebest.com/" target="_blank">moparisthebest.com</a></h3>

<p>programming, irc, cars</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/10</link>
        <pubDate>Fri, 20 Feb 2009 18:02:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-263297-10</guid>
        <source url="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297.rss">[Teachings] Java Fundamentals ~ Read, Very helpful</source>
      </item>
      <item>
        <title>[Teachings] Java Fundamentals ~ Read, Very helpful</title>
        <dc:creator><![CDATA[@public_boolean public boolean]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/public_boolean">@public_boolean</a> wrote:</p>
          <blockquote>
              <p>I can see that, not quite sure why, since i put effot making this… lol…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/9</link>
        <pubDate>Fri, 20 Feb 2009 17:50:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-263297-9</guid>
        <source url="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297.rss">[Teachings] Java Fundamentals ~ Read, Very helpful</source>
      </item>
      <item>
        <title>[Teachings] Java Fundamentals ~ Read, Very helpful</title>
        <dc:creator><![CDATA[@xEnt xEnt]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xent">@xEnt</a> wrote:</p>
          <blockquote>
              <p>hahah, you do understand your getting flamed right?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/8</link>
        <pubDate>Fri, 20 Feb 2009 17:45:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-263297-8</guid>
        <source url="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297.rss">[Teachings] Java Fundamentals ~ Read, Very helpful</source>
      </item>
      <item>
        <title>[Teachings] Java Fundamentals ~ Read, Very helpful</title>
        <dc:creator><![CDATA[@public_boolean public boolean]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/public_boolean">@public_boolean</a> wrote:</p>
          <blockquote>
              <p>Whats that supposed to mean? </p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/7</link>
        <pubDate>Fri, 20 Feb 2009 17:12:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-263297-7</guid>
        <source url="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297.rss">[Teachings] Java Fundamentals ~ Read, Very helpful</source>
      </item>
      <item>
        <title>[Teachings] Java Fundamentals ~ Read, Very helpful</title>
        <dc:creator><![CDATA[@R.I.P_RSC R.I.P RSC]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/r.i.p_rsc">@R.I.P_RSC</a> wrote:</p>
          <blockquote>
              <p>We don’t like PS folks here.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/6</link>
        <pubDate>Fri, 20 Feb 2009 17:09:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-263297-6</guid>
        <source url="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297.rss">[Teachings] Java Fundamentals ~ Read, Very helpful</source>
      </item>
      <item>
        <title>[Teachings] Java Fundamentals ~ Read, Very helpful</title>
        <dc:creator><![CDATA[@public_boolean public boolean]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/public_boolean">@public_boolean</a> wrote:</p>
          <blockquote>
              <p>[quote=“Tico135, post:4, topic:263297”][quote author=public boolean link=topic=347779.msg2677181#msg2677181 date=1235147131]</p>
<aside class="quote no-group">
<blockquote>
<p>Hello “Public boolean” your tutorial was very helpful and i have learned many javas as a result.</p>
</blockquote>
</aside>
<p>why i am glad to here.<br>
[/quote]</p>
<p>If you hadn’t realized, there was a lot of sarcasm in his reply.[/quote]</p>
<p>I know, i dont know why…<br>
but same in my reply,<br>
 "why i am glad to here </p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/5</link>
        <pubDate>Fri, 20 Feb 2009 16:41:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-263297-5</guid>
        <source url="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297.rss">[Teachings] Java Fundamentals ~ Read, Very helpful</source>
      </item>
      <item>
        <title>[Teachings] Java Fundamentals ~ Read, Very helpful</title>
        <dc:creator><![CDATA[@Tico135 Tico]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tico135">@Tico135</a> wrote:</p>
          <blockquote>
              <p>[quote=“public boolean, post:3, topic:263297”][quote author=BAsh link=topic=347779.msg2677176#msg2677176 date=1235146951]<br>
Hello “Public boolean” your tutorial was very helpful and i have learned many javas as a result.<br>
[/quote]</p>
<p>why i am glad to here.[/quote]</p>
<p>If you hadn’t realized, there was a lot of sarcasm in his reply.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/4</link>
        <pubDate>Fri, 20 Feb 2009 16:34:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-263297-4</guid>
        <source url="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297.rss">[Teachings] Java Fundamentals ~ Read, Very helpful</source>
      </item>
      <item>
        <title>[Teachings] Java Fundamentals ~ Read, Very helpful</title>
        <dc:creator><![CDATA[@public_boolean public boolean]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/public_boolean">@public_boolean</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="2" data-topic="263297">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/bash/40/5_6bca9977b612b7aeef77ba1ec1cd67b3.png" class="avatar"> BAsh:</div>
<blockquote>
<p>Hello “Public boolean” your tutorial was very helpful and i have learned many javas as a result.</p>
</blockquote>
</aside>
<p>why i am glad to here.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/3</link>
        <pubDate>Fri, 20 Feb 2009 16:25:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-263297-3</guid>
        <source url="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297.rss">[Teachings] Java Fundamentals ~ Read, Very helpful</source>
      </item>
      <item>
        <title>[Teachings] Java Fundamentals ~ Read, Very helpful</title>
        <dc:creator><![CDATA[@BAsh BAsh]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bash">@BAsh</a> wrote:</p>
          <blockquote>
              <p>Hello “Public boolean” your tutorial was very helpful and i have learned many javas as a result.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/2</link>
        <pubDate>Fri, 20 Feb 2009 16:22:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-263297-2</guid>
        <source url="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297.rss">[Teachings] Java Fundamentals ~ Read, Very helpful</source>
      </item>
      <item>
        <title>[Teachings] Java Fundamentals ~ Read, Very helpful</title>
        <dc:creator><![CDATA[@public_boolean public boolean]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/public_boolean">@public_boolean</a> wrote:</p>
          <blockquote>
              <p>Normally I wouldn’t mess around and would just get to it. But I believe at least an introduction is necessary. So here goes.</p>
<p>Hello Moparisthebest, my name is “public boolean” and I’m posting this tutorial to teach you how to understand and write in the Java programming language. It wont be easy, so don’t expect it to be. This tutorial will not teach you how to compile or set up a private server, this tutorial will teach you the basics of Java, nothing less, nothing more. I have also done java now for 6 years and decided to move to RSPS.</p>
<p>So, where do we begin?</p>
<p><span class="bbcode-b">Variables</span><br>
In Java, there are certain things that you can create called <span class="bbcode-i">variables</span>. Technically, a <span class="bbcode-i">variable</span> is an object that can hold a specific type of data. In other words, a variable is something that can hold a value.<br>
Here are the types <span class="bbcode-u">common</span> of variables, what they stand for, and the type of value they can hold:</p>
<pre><code class="lang-auto">int - integer - whole numbers under 2.17 billion in size
long - long integer - whole numbers that are larger than 2.17 billion.
double - double - variable that can contain numbers with decimal values
boolean - boolean - holds only two values, true or false
String - String - holds more than one character, like a word or sentence.</code></pre>
<p><span class="bbcode-u">int</span><br>
This is a very common variable. It stands for integer, and can hold values of whole numbers less than 2.17 billion (this includes negatives), but cannot hold decimal values. If you try to make an integer bigger than 2.17 billion, your program will crash.</p>
<p><span class="bbcode-u">long</span><br>
This is the exact same as an int, except it can hold larger values than 2.17 billion (on Windows machines). It cannot hold decimal values.</p>
<p><span class="bbcode-u">double</span><br>
The double is the exact same as a long, except it can hold decimal values.</p>
<p><span class="bbcode-u">boolean</span><br>
This is a helpful little variable, although it can only hold two values. The boolean cannot hold numbers, it can only hold two values: <span class="bbcode-i">true</span> and <span class="bbcode-i">false</span>.</p>
<p><span class="bbcode-u">String</span><br>
The String is a special type of variable. It can hold multiple characters to form a series of words or a sentence.</p>
<p><span class="bbcode-b">So how do we use these variables?</span><br>
In Java, <span class="bbcode-u">any</span> variable <span class="bbcode-i">must</span> be explicitly <span class="bbcode-i">declared</span>. Because of this, Java is sometimes considered a <span class="bbcode-i">strongly typed</span> language. Don’t worry about that though. Just know that before you want to use a variable, you must tell Java that it exists. To do this, we <span class="bbcode-i">declare</span> our variable.</p>
<p>Declaring a variable looks like this:</p>
<pre><code class="lang-auto">accesslevel type name;</code></pre>
<p>Access Level:<br>
The access level is how your variable can be accessed. By default, other <span class="bbcode-i">packages</span> cannot see or use a variable unless you set the access level properly. A package is a folder that contains related Java classes. A Java “class” is a Java file. Most private servers don’t use packaging, so you don’t need to be too worried about the access level.<br>
Common access levels are as so:</p>
<pre><code class="lang-auto">public
private</code></pre>
<p>There are more, but you don’t need to worry.</p>
<p><span class="bbcode-u">public</span><br>
The access level public means that other packages can see it, hence the term public.</p>
<p><span class="bbcode-u">private</span><br>
The direct opposite of public, other packages cannot see a variable with access type of private</p>
<p>You do not have to specify an access level for your variables. By default, variables are private and cannot be accessed by other packages unless you declare them as public.</p>
<p>Type:<br>
The type in our variable declaration is the type of variable we are declaring: int, long, boolean, double, etc.</p>
<p>Name:<br>
Name is simply the name you give to the variable you are declaring. By Java conventions, your variables should start with a lowercase letter, and any other words in your name must start with an upper case letter. The name cannot contain spaces.</p>
<p>An example of a variable declaration:</p>
<pre><code class="lang-auto">public int myInteger;</code></pre>
<p><span class="bbcode-b">Statements</span><br>
A <span class="bbcode-i">statement</span> in Java is basically anything you are coding. Anything from declaring a variable to doing advanced math is either a statement or a series of statements. The variable declaration above is a statement. Statements must end with a semicolon unless you are using a code block. A code block is simply, a block of code, starting with { and ending with }. Therefore, for every {, there must be a } to end the statement.</p>
<p><span class="bbcode-u">Conditional Statements</span><br>
A <span class="bbcode-i">conditional statement</span> is a statement that will execute only when a certain condition is met. These statements are also called “if” statements. This is the layout for an if statement:</p>
<pre><code class="lang-auto">if(arguement)
    code to execute;</code></pre>
<p>If you are using only a semi colon in any statement, you cannot perform more than one action in the statement. Here is an example explaining this concept:</p>
<pre><code class="lang-auto">int myInteger;
myInteger = 1;
if(myInteger == 1)
    System.out.println("Yay!~ Public boolean is the best java coder");
System.out.println("myInteger is equal to one!");</code></pre>
<p>How many statements are in the above code? There are actually <span class="bbcode-u">four</span> statements in the above code.<br>
Statement one: declaring myInteger.<br>
Statement two: setting myInteger to 1.<br>
Statement three: this is our conditional statement, it therefore includes the “System.out.println(“Yay!”)”, but only executes it if myInteger is 1.<br>
Statement 4: printing “myInteger is equal to one!” into our console.</p>
<p>System.out.println(String) prints text to the console.<br>
What do you think the output is of this program? Here is what it will say:</p>
<p>What happens if we change the code to this?</p>
<pre><code class="lang-auto">int myInteger;
myInteger = 2;
if(myInteger == 1)
    System.out.println("Yay!~ Public boolean owz noobs");
System.out.println("myInteger is equal to one!");</code></pre>
<p>Now what is the output?</p>
<p>Surprised? I expect you to be. By changing myInteger to 2, the conditional statement should not execute and it should not say anything at all. Wrong, because as I stated above, you can only execute one action if you are using just a semi colon. To change this, we will use what is called a <span class="bbcode-i">code block</span>. A code block allows you to execute more than one action at once within one statement.<br>
Here is an example of the above code, with a code block instead:</p>
<pre><code class="lang-auto">int myInteger;
myInteger = 2;
if(myInteger == 1)
{
    System.out.println("Yay!");
    System.out.println("myInteger is equal to one!");
}</code></pre>
<p>Now what is the output of the program?<br>
Nothing.<br>
We have successfully bunched two actions into our code block, and because our myInteger variable is 2, the if statement never executes because it only executes if myInteger is 1.</p>
<p>You might have noticed the “=” and “==” characters in the above statements. These are called <span class="bbcode-i">operators</span>, which brings me to the next section…</p>
<p><span class="bbcode-b">Operators</span></p>
<p>An <span class="bbcode-i">operator</span> is something that performs a calculation. There are many operators, all meant for specific calculations. Here is a list of the common ones, and their purpose.</p>
<pre><code class="lang-auto">+ ~ Addition
- ~ Subtraction
* ~ Multiplication
/ ~ Division
&gt; ~ Greater Than
&lt; ~ Less Than
&gt;= ~ Greater than or equal to
&lt;= ~ Less than or equal to
== ~ Equal to
!= ~ Not equal to
++ ~ Increment
-- ~ De-increment 
&amp;&amp; ~ AND
|| ~ OR</code></pre>
<p>Thats a lot of operators eh? Trust me, there are more operators, designed for performing calculations on the level of bits and bytes. For the sake of your sanity, we’ll just stay with the operators I’ve listed above.</p>
<p>I wont go into detail about these operators for the sake of time, you can figure out what they do by looking at the list above.<br>
Now that I’ve gone over basic conditional statements and variables, lets go onto methods.</p>
<p><span class="bbcode-b">Methods</span><br>
Simply put, a <span class="bbcode-i">method</span> is a chunk of code that performs a calculation, and returns a value based on the calculation it makes. Its not as complicated as it seems. A method is just like a variable, it is declared in the same way. The key difference is that a method must have a code block, while a statement doesn’t have to. A method is a holder for statements. Here are a few types of methods:</p>
<pre><code class="lang-auto">void
int
long
String
boolean
double</code></pre>
<p>The list goes on, however, these are the most common types of methods. You may have noticed that they are very similar to variables, well in a sense they are. I mentioned before that a method returns a value. Every method returns a value except for a void. Lets go over what they return.</p>
<p><span class="bbcode-u">void</span><br>
No return type.</p>
<p><span class="bbcode-u">int</span><br>
Returns an integer.</p>
<p><span class="bbcode-u">long</span><br>
Returns a large integer.</p>
<p><span class="bbcode-u">String</span><br>
Returns a String value.</p>
<p><span class="bbcode-u">boolean</span><br>
Returns a boolean value</p>
<p><span class="bbcode-u">double</span><br>
Returns an integer value with decimal points supported, or a double.</p>
<p>You may have noticed that the methods return the value that their brother variables can hold. If you made this connection, good job. If not, thats okay.</p>
<p>Declaring a method is just like declaring a variable, but you add a code block.<br>
Here’s the way you declare methods:</p>
<pre><code class="lang-auto">accesslevel type name(parameters)
{
    Code inside the method
    return value
}</code></pre>
<p>Parameters are slightly more advanced. Basically, a parameter is a way of giving our method variables so it can perform calculations. You can have multiple parameters in your method.</p>
<p>To make a method execute, we have to <span class="bbcode-i">call</span> the method by its name and its parameters. Here is the layout of calling a method:</p>
<pre><code class="lang-auto">name(parameters);</code></pre>
<p>Separate parameters are separated by a comma. Here is an example of how to use parameters:</p>
<pre><code class="lang-auto">public static void main(String[] args)
{
    System.out.println("The value of 5.5 + 5.5 is equal to" + doAddition(5.5, 5.5));
}
double doAddition(double one, double two)
{
    double solution = one + two;
    return solution;
}</code></pre>
<p>We will go over the above code line by line<br>
Line 1: our main method which Java calls when it starts the file.<br>
Line 2: opening brace for our main method code block<br>
Line 3: printing to the console window by calling doAddition(int, int) method<br>
Line 4: closing brace for our main method code block<br>
Line 5: declaration of our doAddidion method which is the double type, so we can do addition with not only whole numbers but also decimals<br>
Line 6: opening brace for our doAddition method code block<br>
Line 7: creating a new integer called solution, then setting solution to one + two.<br>
Line 8: returning solution, the value that was calculated based on the parameters given<br>
Line 9: closing brace for our doAddition method code block</p>
<p>The output of the above program looks like this:</p>
<p>What might confuse you is the parameters. You declare variables in parameters, and use them <span class="bbcode-u">only within</span> the code block of the method that has the new variables. We give the parameter variables their value when we call the method.</p>
<p>Why do this when we can just do variable = number + number? Well sometimes we want to do more advanced calculations than just addition, such as the quadratic formula or distance formula. Methods are advanced, custom calculations.</p>
<p>About the void. A void is a method with no return type, therefore it does not return anything. The void simply executes the statements within it and finishes whenever it is called.</p>
<p><span class="bbcode-b">Classes</span><br>
A <span class="bbcode-i">class</span>, technically, is an object in object-oriented programming. Simply put, a class is usually a Java file that holds methods. This is a slightly more advanced concept than we have previously talked about.<br>
A class is declared just like a method, except you must put ‘class’ as the type. All of your code must be contained within the code block of a class.</p>
<p>Here is what a normal Java program looks like:</p>
<pre><code class="lang-auto">public class HelloWorld
{
    public static void(String[] args)
    {
        System.out.println("Hello World!");
    }
}</code></pre>
<p>The above code will compile and run in the Java environment.<br>
When running once compiled, it will say</p>
<p>Cute.<br>
Lets move on.</p>
<p>Classes can be (here comes a big word) <span class="bbcode-i">instantiated</span>, or created an instance of. Creating an instance of a class from another class tells that class to run relative to the class that is creating an instance of it. Its complicated, you may have to read that sentence a few times to understand. Basically, you can call a class like you can call a method. But instead of calling the class, you must create an instance of the class. Once you create an instance of the class, you can use almost any method or variable that is inside the class.<br>
Here is how you instance a class:</p>
<pre><code class="lang-auto">classname variablename = new classname(parameters);</code></pre>
<p>Yes, classes can also have parameters. This is done by what is called the classes <span class="bbcode-i">constructor.</span> It is an advanced concept that you may not understand for a while until you get used to programming Java.<br>
By default, any class you create has <span class="bbcode-u">no</span> parameters, so you do not include any parameters in the instance of the class.<br>
This is how to create an instance of a class using parameters.</p>
<p><span class="bbcode-u">The class we are going to instantiate</span></p>
<pre><code class="lang-auto">public class SayHello
{
    String text;

    public SayHello(String text)
    {
        this.text = text;
    }

    public static void main(String[] args)
    {
        System.out.prinltn(text);
    }
}</code></pre>
<p>Line 1: declaring our class SayHello<br>
Line 2: opening brace for our SayHello class<br>
Line 3: declaring a new string, naming it ‘text’<br>
Line 4: white space<br>
Line 5: constructor. Notice the parameters, we are creating a new variable inside the constructor.<br>
Line 6: opening brace of the code block for our constructor<br>
Line 7: setting the String text in the outside of our constructor to the parameter that we received when the class was instantiated.<br>
Line 8: closing our constructor code block<br>
Line 9: white space<br>
Line 10: main method called by Java when the program starts<br>
Line 11: opening brace for our main method code block<br>
Line 12: printing to the console the value of the ‘text’ String<br>
Line 13: closing our main method code block<br>
Line 14: closing our SayHello class code block.</p>
<p><span class="bbcode-u">Instancing the class</span></p>
<pre><code class="lang-auto">SayHello mySayHelloClassVariable = new SayHello("Hello, World!");</code></pre>
<p>Now, when we run the above statement that instances the SayHello class, the SayHello class will print the following text:</p>
<p>Congratulations, if you have made it this far, you now understand the basics of Java programming.<br>
If you are confused or have any questions, feel free to private message me. I’ll get back to you when I can.<br>
Now start coding! and enjoy !</p>
<p>I hope the tutorial has helped moparisthebest, i have took a lot of time making it.</p>
<p>~Public boolean, - The java dude.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297/1</link>
        <pubDate>Fri, 20 Feb 2009 15:12:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-263297-1</guid>
        <source url="https://forum.moparisthebest.com/t/teachings-java-fundamentals-read-very-helpful/263297.rss">[Teachings] Java Fundamentals ~ Read, Very helpful</source>
      </item>
  </channel>
</rss>
