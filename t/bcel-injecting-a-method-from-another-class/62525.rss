<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[BCEL] Injecting a method from another class</title>
    <link>https://forum.moparisthebest.com/t/bcel-injecting-a-method-from-another-class/62525</link>
    <description>This will inject a Method from another class, here are all 3 files I used.
I&#39;m relatively new to BCEL, so any constructive criticism is welcome :D

HelloWorld.java:
[code=HelloWorld.java]public class HelloWorld {

    public static void main(String[] args) {
        System.out.println(&quot;OHAI&quot;);
        sayHai();
    }

    public static void sayHai() {
        System.out.println(&quot;ohai der&quot;);
    }
}[/code]

Methods.java:
[code=Methods.java]public class Methods {
    public static void lol() {
    }
}[/code]

BCELplay:
[code=BCELplay.java]import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.classfile.ClassParser;
import org.apache.bcel.classfile.Method;
import org.apache.bcel.generic.*;
import org.apache.bcel.Constants;

import java.io.FileOutputStream;

public class BCELplay {
    public static void main(String[] args) {
        new BCELplay();
    }

    public BCELplay() {
        try {
            w(&quot;Parsing HelloWorld.class&quot;);
            JavaClass j = new ClassParser(&quot;HelloWorld.class&quot;).parse();
            w(&quot;Making ClassGen for HelloWorld.class&quot;);
            ClassGen cg = new ClassGen(j);
            w(&quot;Getting the ConstantPoolGen.&quot;);
            ConstantPoolGen cp = cg.getConstantPool();
            w(&quot;Creating Instruction Factory&quot;);
            InstructionFactory _if = new InstructionFactory(cg, cp);
            w(&quot;Listing the methods!&quot;);
            getMethods(cg);
            w(&quot;Injecting Method&quot;);
            inject(cp, cg);
            w(&quot;Dumping the file!&quot;);
            cg.getJavaClass().dump(new FileOutputStream(&quot;HelloWorld.class&quot;));
            w(&quot;Relisting Methods, seeing if it REALLY injected..&quot;);
            getMethods1(cg);
            w(&quot;Running HelloWorld.lol()&quot;);
            HelloWorld.lol();
        } catch(Exception e) {
            e.printStackTrace();
        }
    }

    public void getMethods(ClassGen _cg) {
        for(Method m : _cg.getMethods()) {
            if(m.getName().equalsIgnoreCase(&quot;lol&quot;)) {
              _cg.removeMethod(m);
               w(&quot;[NOTICE] REMOVED LOL()&quot;);
            } else
                System.out.println(&quot;Method in &#39;&quot;+_cg.getClassName()+&quot;&#39;: &quot;+m);
        }
    }

    public void getMethods1(ClassGen _cg) {
        for(Method m : _cg.getMethods()) {
            System.out.println(&quot;Method in &#39;&quot;+_cg.getClassName()+&quot;&#39;: &quot;+m);
        }
    }

    public void w(String l) {
        System.out.println(l);
    }

    public void inject(ConstantPoolGen cp, ClassGen cg) {
        try {
            InstructionList il = new InstructionList();
            InstructionFactory factory = new InstructionFactory(cg, cp);
            MethodGen method = null;
            JavaClass j = new ClassParser(&quot;Methods.class&quot;).parse();
            ClassGen _cg = new ClassGen(j);
            Method m = null;
            for(Method d : _cg.getMethods()) {
                if(d.getName().equalsIgnoreCase(&quot;lol&quot;)) {
                    method = new MethodGen(d, d.getClass().getName(), cp);
                }
            }
            InstructionHandle ih_0 = il.append(factory.createFieldAccess(&quot;java.lang.System&quot;, &quot;out&quot;, new ObjectType(&quot;java.io.PrintStream&quot;), Constants.GETSTATIC));
            il.append(new PUSH(cp, &quot;This is a method i&#39;m adding, oman did it work???&quot;));
            il.append(factory.createInvoke(&quot;java.io.PrintStream&quot;, &quot;println&quot;, Type.VOID, new Type[] { Type.STRING }, Constants.INVOKEVIRTUAL));
            InstructionHandle ih_8 = il.append(factory.createInvoke(&quot;HelloWorld&quot;, &quot;sayHai&quot;, Type.VOID, Type.NO_ARGS, Constants.INVOKESTATIC));
            InstructionHandle ih_11 = il.append(factory.createReturn(Type.VOID));
            il.setPositions();
            method.setInstructionList(il);
            method.setMaxStack();
            method.setMaxLocals();
            cg.replaceMethod(m, method.getMethod());
        } catch(Exception e) {
            e.printStackTrace();
        }
    }
}[/code]

Well, I was decently happy lol, just started BCEL not too long ago..</description>
    
    <lastBuildDate>Fri, 09 Mar 2007 06:54:08 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/bcel-injecting-a-method-from-another-class/62525.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[BCEL] Injecting a method from another class</title>
        <dc:creator><![CDATA[@ilyaostr9 io9]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ilyaostr9">@ilyaostr9</a> wrote:</p>
          <blockquote>
              <p>And I wuz about to post dis D’;</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bcel-injecting-a-method-from-another-class/62525/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bcel-injecting-a-method-from-another-class/62525/8</link>
        <pubDate>Fri, 09 Mar 2007 06:54:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-62525-8</guid>
        <source url="https://forum.moparisthebest.com/t/bcel-injecting-a-method-from-another-class/62525.rss">[BCEL] Injecting a method from another class</source>
      </item>
      <item>
        <title>[BCEL] Injecting a method from another class</title>
        <dc:creator><![CDATA[@Silver_Lining Silver Lining]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silver_lining">@Silver_Lining</a> wrote:</p>
          <blockquote>
              <p>[quote=“Evil_, post:6, topic:62525”]Can someone help me with calling the method I injected from the main method?[/quote]Well, you can’t really call it until you’ve injected it, unless you are smart and are injecting also into your own class.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bcel-injecting-a-method-from-another-class/62525/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bcel-injecting-a-method-from-another-class/62525/7</link>
        <pubDate>Fri, 09 Mar 2007 04:46:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-62525-7</guid>
        <source url="https://forum.moparisthebest.com/t/bcel-injecting-a-method-from-another-class/62525.rss">[BCEL] Injecting a method from another class</source>
      </item>
      <item>
        <title>[BCEL] Injecting a method from another class</title>
        <dc:creator><![CDATA[@Evil1 Evil_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/evil1">@Evil1</a> wrote:</p>
          <blockquote>
              <p>Can someone help me with calling the method I injected from the main method?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bcel-injecting-a-method-from-another-class/62525/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bcel-injecting-a-method-from-another-class/62525/6</link>
        <pubDate>Thu, 01 Mar 2007 10:05:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-62525-6</guid>
        <source url="https://forum.moparisthebest.com/t/bcel-injecting-a-method-from-another-class/62525.rss">[BCEL] Injecting a method from another class</source>
      </item>
      <item>
        <title>[BCEL] Injecting a method from another class</title>
        <dc:creator><![CDATA[@Evil1 Evil_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/evil1">@Evil1</a> wrote:</p>
          <blockquote>
              <p>[quote=“lawl, post:1, topic:62689”]if i recall correctly.[/quote]Thanks lawl :D, so many Acronyms lololol</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bcel-injecting-a-method-from-another-class/62525/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bcel-injecting-a-method-from-another-class/62525/5</link>
        <pubDate>Thu, 01 Mar 2007 09:39:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-62525-5</guid>
        <source url="https://forum.moparisthebest.com/t/bcel-injecting-a-method-from-another-class/62525.rss">[BCEL] Injecting a method from another class</source>
      </item>
      <item>
        <title>[BCEL] Injecting a method from another class</title>
        <dc:creator><![CDATA[@Evil1 Evil_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/evil1">@Evil1</a> wrote:</p>
          <blockquote>
              <p>[quote=“Pwnd, post:3, topic:62525”]There’s also a createPrintln methods, iirc.[/quote]what’s iirc?  And thanks for the construction criticism, Regecks.  This was really the first thing i’ve <em>done</em> in BCEL, excluding listing methods/interfaces/fields…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bcel-injecting-a-method-from-another-class/62525/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bcel-injecting-a-method-from-another-class/62525/4</link>
        <pubDate>Thu, 01 Mar 2007 09:02:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-62525-4</guid>
        <source url="https://forum.moparisthebest.com/t/bcel-injecting-a-method-from-another-class/62525.rss">[BCEL] Injecting a method from another class</source>
      </item>
      <item>
        <title>[BCEL] Injecting a method from another class</title>
        <dc:creator><![CDATA[@Pwnd Pwnd]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pwnd">@Pwnd</a> wrote:</p>
          <blockquote>
              <p>There’s also a createPrintln methods, iirc.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bcel-injecting-a-method-from-another-class/62525/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bcel-injecting-a-method-from-another-class/62525/3</link>
        <pubDate>Thu, 01 Mar 2007 05:55:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-62525-3</guid>
        <source url="https://forum.moparisthebest.com/t/bcel-injecting-a-method-from-another-class/62525.rss">[BCEL] Injecting a method from another class</source>
      </item>
      <item>
        <title>[BCEL] Injecting a method from another class</title>
        <dc:creator><![CDATA[@regecks1 regecks`]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/regecks1">@regecks1</a> wrote:</p>
          <blockquote>
              <p>Very nice.</p>
<p>Remember for simple stuff like:</p>
<pre><code class="lang-auto">factory.createReturn(Type.VOID)</code></pre>
<p>you can just be not bothered and use</p>
<pre><code class="lang-auto">new RETURN();</code></pre>
<p>Try creating a ClassGen and MethodGen from scratch =D, or perhaps merging classes with colliding methods (append the InstructionLists).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bcel-injecting-a-method-from-another-class/62525/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bcel-injecting-a-method-from-another-class/62525/2</link>
        <pubDate>Thu, 01 Mar 2007 02:50:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-62525-2</guid>
        <source url="https://forum.moparisthebest.com/t/bcel-injecting-a-method-from-another-class/62525.rss">[BCEL] Injecting a method from another class</source>
      </item>
      <item>
        <title>[BCEL] Injecting a method from another class</title>
        <dc:creator><![CDATA[@Evil1 Evil_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/evil1">@Evil1</a> wrote:</p>
          <blockquote>
              <p>This will inject a Method from another class, here are all 3 files I used.<br>
I’m relatively new to BCEL, so any constructive criticism is welcome <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=6" title=":smiley:" class="emoji" alt=":smiley:"></p>
<p>HelloWorld.java:</p>
<p>[code=HelloWorld.java]public class HelloWorld {</p>
<pre><code>public static void main(String[] args) {
    System.out.println("OHAI");
    sayHai();
}

public static void sayHai() {
    System.out.println("ohai der");
}
</code></pre>
<p>}[/code]</p>
<p>Methods.java:</p>
<p><code>public class Methods {
    public static void lol() {
    }
}</code></p>
<p>BCELplay:</p>
<p>[code=BCELplay.java]import org.apache.bcel.classfile.JavaClass;<br>
import org.apache.bcel.classfile.ClassParser;<br>
import org.apache.bcel.classfile.Method;<br>
import org.apache.bcel.generic.*;<br>
import org.apache.bcel.Constants;</p>
<p>import java.io.FileOutputStream;</p>
<p>public class BCELplay {<br>
public static void main(String[] args) {<br>
new BCELplay();<br>
}</p>
<pre><code>public BCELplay() {
    try {
        w("Parsing HelloWorld.class");
        JavaClass j = new ClassParser("HelloWorld.class").parse();
        w("Making ClassGen for HelloWorld.class");
        ClassGen cg = new ClassGen(j);
        w("Getting the ConstantPoolGen.");
        ConstantPoolGen cp = cg.getConstantPool();
        w("Creating Instruction Factory");
        InstructionFactory _if = new InstructionFactory(cg, cp);
        w("Listing the methods!");
        getMethods(cg);
        w("Injecting Method");
        inject(cp, cg);
        w("Dumping the file!");
        cg.getJavaClass().dump(new FileOutputStream("HelloWorld.class"));
        w("Relisting Methods, seeing if it REALLY injected..");
        getMethods1(cg);
        w("Running HelloWorld.lol()");
        HelloWorld.lol();
    } catch(Exception e) {
        e.printStackTrace();
    }
}

public void getMethods(ClassGen _cg) {
    for(Method m : _cg.getMethods()) {
        if(m.getName().equalsIgnoreCase("lol")) {
          _cg.removeMethod(m);
           w("[NOTICE] REMOVED LOL()");
        } else
            System.out.println("Method in '"+_cg.getClassName()+"': "+m);
    }
}

public void getMethods1(ClassGen _cg) {
    for(Method m : _cg.getMethods()) {
        System.out.println("Method in '"+_cg.getClassName()+"': "+m);
    }
}

public void w(String l) {
    System.out.println(l);
}

public void inject(ConstantPoolGen cp, ClassGen cg) {
    try {
        InstructionList il = new InstructionList();
        InstructionFactory factory = new InstructionFactory(cg, cp);
        MethodGen method = null;
        JavaClass j = new ClassParser("Methods.class").parse();
        ClassGen _cg = new ClassGen(j);
        Method m = null;
        for(Method d : _cg.getMethods()) {
            if(d.getName().equalsIgnoreCase("lol")) {
                method = new MethodGen(d, d.getClass().getName(), cp);
            }
        }
        InstructionHandle ih_0 = il.append(factory.createFieldAccess("java.lang.System", "out", new ObjectType("java.io.PrintStream"), Constants.GETSTATIC));
        il.append(new PUSH(cp, "This is a method i'm adding, oman did it work???"));
        il.append(factory.createInvoke("java.io.PrintStream", "println", Type.VOID, new Type[] { Type.STRING }, Constants.INVOKEVIRTUAL));
        InstructionHandle ih_8 = il.append(factory.createInvoke("HelloWorld", "sayHai", Type.VOID, Type.NO_ARGS, Constants.INVOKESTATIC));
        InstructionHandle ih_11 = il.append(factory.createReturn(Type.VOID));
        il.setPositions();
        method.setInstructionList(il);
        method.setMaxStack();
        method.setMaxLocals();
        cg.replaceMethod(m, method.getMethod());
    } catch(Exception e) {
        e.printStackTrace();
    }
}
</code></pre>
<p>}[/code]</p>
<p>Well, I was decently happy lol, just started BCEL not too long ago…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/bcel-injecting-a-method-from-another-class/62525/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/bcel-injecting-a-method-from-another-class/62525/1</link>
        <pubDate>Thu, 01 Mar 2007 02:03:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-62525-1</guid>
        <source url="https://forum.moparisthebest.com/t/bcel-injecting-a-method-from-another-class/62525.rss">[BCEL] Injecting a method from another class</source>
      </item>
  </channel>
</rss>
