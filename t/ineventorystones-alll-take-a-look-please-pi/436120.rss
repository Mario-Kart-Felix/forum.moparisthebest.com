<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[Ineventorystones] ALLL TAKE A LOOK PLEASE [PI]</title>
    <link>https://forum.moparisthebest.com/t/ineventorystones-alll-take-a-look-please-pi/436120</link>
    <description>ok ive changed Resizeable interface and it worked and all but when i dont go Resizable its the same tabs like my tabs are set to inventorystones 1 and 2 but id like my normal inventorystones to be set to 3- 4 because the old ones are 3-4 but i cant seem to find were this is were i think it is in client.java

[code]
	private void drawIventoryStones(int paddingX,int paddingY) {
		paddingX = paddingX + 2;//tabSpace
		if(toggleFullscreen) {
			inventoryStones[2].drawSprite(1 + paddingX, 261 + paddingY);
			inventoryStones[2].drawSprite(31 + paddingX, 261 + paddingY);
			inventoryStones[2].drawSprite(61 + paddingX, 261 + paddingY);
			inventoryStones[2].drawSprite(91 + paddingX, 261 + paddingY);
			inventoryStones[3].drawSprite(121 + paddingX, 261 + paddingY);
			inventoryStones[2].drawSprite(151 + paddingX, 261 + paddingY);
			inventoryStones[2].drawSprite(181 + paddingX, 261 + paddingY);
			inventoryStones[2].drawSprite(211 + paddingX, 261 + paddingY);
			
			inventoryStones[2].drawSprite(1 + paddingX, 298 + paddingY);
			inventoryStones[2].drawSprite(31 + paddingX, 298 + paddingY);
			inventoryStones[2].drawSprite(61 + paddingX, 298 + paddingY);
			inventoryStones[2].drawSprite(91 + paddingX, 298 + paddingY);
			inventoryStones[2].drawSprite(121 + paddingX, 298 + paddingY);
			inventoryStones[2].drawSprite(151 + paddingX, 298 + paddingY);
			inventoryStones[2].drawSprite(181 + paddingX,298 + paddingY);
			inventoryStones[2].drawSprite(211 + paddingX, 298 + paddingY);
		}
		//if(!contextMenuOpen) {
			if(tabInterfaceIDs[0] != -1)
				inventoryStones[tabIDHover == 0 ? 2 : 2].drawSprite(1 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
			if(tabInterfaceIDs[14] != -1)
				inventoryStones[tabIDHover == 1 ? 1 : 2].drawSprite(31 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
			if(tabInterfaceIDs[1] != -1)
				inventoryStones[tabIDHover == 2 ? 1 : 2].drawSprite(61 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
			if(tabInterfaceIDs[2] != -1)
				inventoryStones[tabIDHover == 3 ? 1 : 2].drawSprite(91 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
			if(tabInterfaceIDs[3] != -1)
				inventoryStones[tabIDHover == 4 ? 1 : 2].drawSprite(121 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
			if(tabInterfaceIDs[4] != -1)
				inventoryStones[tabIDHover == 5 ? 1 : 2].drawSprite(151 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
			if(tabInterfaceIDs[5] != -1)
				inventoryStones[tabIDHover == 6 ? 1 : 2].drawSprite(181 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
			if(tabInterfaceIDs[6] != -1)
				inventoryStones[tabIDHover == 7 ? 1 : 2].drawSprite(211 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
				
			if(tabInterfaceIDs[16] != -1)
				inventoryStones[tabIDHover == 14 ? 1 : 2].drawSprite(1 + paddingX, 298 + paddingY);
			if(tabInterfaceIDs[9] != -1)
				inventoryStones[tabIDHover == 8 ? 1 : 2].drawSprite(31 + paddingX, 298 + paddingY);
			if(tabInterfaceIDs[8] != -1)
				inventoryStones[tabIDHover == 9 ? 1 : 2].drawSprite(61 + paddingX, 298 + paddingY);
			if(tabInterfaceIDs[7] != -1)
				inventoryStones[tabIDHover == 10 ? 1 : 2].drawSprite(91 + paddingX, 298 + paddingY);
			if(tabInterfaceIDs[11] != -1)
				inventoryStones[tabIDHover == 11 ? 1 : 2].drawSprite(121 + paddingX, 298 + paddingY);
			if(tabInterfaceIDs[12] != -1)
				inventoryStones[tabIDHover == 12 ? 1 : 2].drawSprite(151 + paddingX, 298 + paddingY);
			if(tabInterfaceIDs[13] != -1)
				inventoryStones[tabIDHover == 13 ? 1 : 2].drawSprite(181 + paddingX,298 + paddingY);
			if(tabInterfaceIDs[15] != -1)
				inventoryStones[tabIDHover == 15 ? 1 : 2].drawSprite(211 + paddingX, 298 + paddingY);
		//}
		if(invOverlayInterfaceID == -1 &amp;&amp; focusTab != -1) {
			try {
			if(tabInterfaceIDs[tabID] != -1) {
				if(tabID == 0)
					inventoryStones[0].drawSprite(1 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
				if(tabID == 14)
					inventoryStones[0].drawSprite(31 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
				if(tabID == 1)
					inventoryStones[0].drawSprite(61 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
				if(tabID == 2)
					inventoryStones[0].drawSprite(91 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
				if(tabID == 3)
					inventoryStones[0].drawSprite(121 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
				if(tabID == 4)
					inventoryStones[0].drawSprite(151 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
				if(tabID == 5)
					inventoryStones[0].drawSprite(181 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
				if(tabID == 6)
					inventoryStones[0].drawSprite(211 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
				if(tabID == 16)
					inventoryStones[0].drawSprite(1 + paddingX, 298 + paddingY);
				if(tabID == 8)
					inventoryStones[0].drawSprite(31 + paddingX, 298 + paddingY);
				if(tabID == 9)
					inventoryStones[0].drawSprite(61 + paddingX, 298 + paddingY);
				if(tabID == 7)
					inventoryStones[0].drawSprite(91 + paddingX, 298 + paddingY);
				if(tabID == 11)
					inventoryStones[0].drawSprite(121 + paddingX, 298 + paddingY);
				if(tabID == 12)
					inventoryStones[0].drawSprite(151 + paddingX, 298 + paddingY);
				if(tabID == 13)
					inventoryStones[0].drawSprite(181 + paddingX, 298 + paddingY);
				if(tabID == 15)
					inventoryStones[0].drawSprite(211 + paddingX, 298 + paddingY);
			}
		} catch(Exception e) { tabID = 1; }
		}
	}
	
	private void drawSideIcons(int paddingX, int paddingY) {
		if(tabIconFlash != -1)
			tabAreaAltered = true;
		if(tabAreaAltered) {
			if(tabIconFlash != -1 &amp;&amp; tabIconFlash == tabID) {
				tabIconFlash = -1;
				stream.createFrame(120);
				stream.writeWordBigEndian(tabID);
			}
			tabAreaAltered = false;
		}
		if(invOverlayInterfaceID == -1) {
			if(tabInterfaceIDs[0] != -1 &amp;&amp; (tabIconFlash != 0 || loopCycle % 20 &lt; 10))
				sideIcons[0].drawSprite(3 + 5 + paddingX, (toggleFullscreen ? 261 : 0) + 9 + paddingY);//Combat
			if(tabInterfaceIDs[14] != -1 &amp;&amp; (tabIconFlash != 1 || loopCycle % 20 &lt; 10))
				sideIcons[3].drawSprite(33 + 4 + paddingX, (toggleFullscreen ? 261 : 0) + 9 + paddingY);//skills
			if(tabInterfaceIDs[1] != -1 &amp;&amp; (tabIconFlash != 2 || loopCycle % 20 &lt; 10))
				sideIcons[1].drawSprite(63 + 4 + paddingX, (toggleFullscreen ? 261 : 0) + 8 + paddingY);//quests
			if(tabInterfaceIDs[2] != -1 &amp;&amp; (tabIconFlash != 14 || loopCycle % 20 &lt; 10))
				sideIcons[2].drawSprite(93 + 4 + paddingX, (toggleFullscreen ? 261 : 0) + 8 + paddingY);//task system
			if(tabInterfaceIDs[3] != -1 &amp;&amp; (tabIconFlash != 3 || loopCycle % 20 &lt; 10))
				sideIcons[4].drawSprite(123 + 4 + paddingX, (toggleFullscreen ? 261 : 0) + 9 + paddingY);//inventory
			if(tabInterfaceIDs[4] != -1 &amp;&amp; (tabIconFlash != 4 || loopCycle % 20 &lt; 10))
				sideIcons[5].drawSprite(153 + 6 + paddingX, (toggleFullscreen ? 261 : 0) + 8 + paddingY);//equipment
			if(tabInterfaceIDs[5] != -1 &amp;&amp; (tabIconFlash != 5 || loopCycle % 20 &lt; 10))
				sideIcons[6].drawSprite(183 + 4 + paddingX, (toggleFullscreen ? 261 : 0) + 9 + paddingY);//prayer
			if(tabInterfaceIDs[6] != -1 &amp;&amp; (tabIconFlash != 6 || loopCycle % 20 &lt; 10))
				sideIcons[7].drawSprite(213 + 4 + paddingX, (toggleFullscreen ? 261 : 0) + 9 + paddingY);//magic
				
			if(tabInterfaceIDs[14] != -1 &amp;&amp; (tabIconFlash != 7 || loopCycle % 20 &lt; 10))
				sideIcons[8].drawSprite(3 + 4 + paddingX, 298 + 10 + paddingY);//Guide
			if(tabInterfaceIDs[9] != -1 &amp;&amp; (tabIconFlash != 9 || loopCycle % 20 &lt; 10))
				sideIcons[9].drawSprite(33 + 5 + paddingX, 298 + 9 + paddingY);//friends
			if(tabInterfaceIDs[8] != -1 &amp;&amp; (tabIconFlash != 8 || loopCycle % 20 &lt; 10))
				sideIcons[10].drawSprite(63 + 7 + paddingX, 298 + 9 + paddingY);//ignore
			if(tabInterfaceIDs[7] != -1 &amp;&amp; (tabIconFlash != 7 || loopCycle % 20 &lt; 10))
				sideIcons[11].drawSprite(93 + 4 + paddingX, 298 + 10 + paddingY);//clan
			if(tabInterfaceIDs[11] != -1 &amp;&amp; (tabIconFlash != 11 || loopCycle % 20 &lt; 10))
				sideIcons[12].drawSprite(123 + 4 + paddingX, 298 + 9 + paddingY);//option
			if(tabInterfaceIDs[12] != -1 &amp;&amp; (tabIconFlash != 12 || loopCycle % 20 &lt; 10))
				sideIcons[13].drawSprite(153 + 4 + paddingX, 298 + 9 + paddingY);//emotes
			if(tabInterfaceIDs[13] != -1 &amp;&amp; (tabIconFlash != 13 || loopCycle % 20 &lt; 10))
				sideIcons[14].drawSprite(183 + 3 + paddingX, 298 + 8 + paddingY);//music
			if(tabInterfaceIDs[15] != -1 &amp;&amp; (tabIconFlash != 15 || loopCycle % 20 &lt; 10))
				sideIcons[15].drawSprite(213 + 4 + paddingX, 298 + 11 + paddingY);//notes
		}
	}

	private void drawTabArea(RSImageProducer tabImage, int paddingX,int paddingY) {
		tabImage.initDrawingArea();
		Texture.anIntArray1472 = anIntArray1181;
		if(toggleFullscreen) {
			if(focusTab != -1)
				tabAreaSprite[1].drawSprite1(45-23 + paddingX ,55-23 + paddingY - (toggleFullscreen ? 46 : 0),192);
		} else
			tabAreaSprite[0].drawSprite(0 + paddingX,0 + paddingY);
		
		drawIventoryStones(paddingX,paddingY);
		drawSideIcons(paddingX,paddingY);
		
		if(invOverlayInterfaceID != -1)
			drawInterface(0, 28 + paddingX, RSInterface.interfaceCache[invOverlayInterfaceID], 37 - (toggleFullscreen ? 46 : 0) + paddingY);
		else if(tabInterfaceIDs[tabID] != -1 &amp;&amp; focusTab != -1)
			drawInterface(0, 28 + paddingX, RSInterface.interfaceCache[tabInterfaceIDs[tabID]], 37 - (toggleFullscreen ? 46 : 0) + paddingY);
		if(contextMenuOpen &amp;&amp; !toggleFullscreen)
			drawMenu(519, 168);//Tab area
		Texture.anIntArray1472 = anIntArray1182;
	}
	
	private void drawRightFrameArea() {
		rightFrame.initDrawingArea();
		rightFrameSprite.drawSprite(0,0);
		if(contextMenuOpen &amp;&amp; !toggleFullscreen) {
			drawMenu(516, 168);
		}
		rightFrame.drawGraphics(168, super.graphics, 516);
		main3DArea.initDrawingArea();
	}
	[/code]

 help me out plz. if u dont understand say so and il post pictures.</description>
    
    <lastBuildDate>Mon, 12 Mar 2012 20:09:22 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/ineventorystones-alll-take-a-look-please-pi/436120.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[Ineventorystones] ALLL TAKE A LOOK PLEASE [PI]</title>
        <dc:creator><![CDATA[@ultimateGodz ultimateGodz]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ultimategodz">@ultimateGodz</a> wrote:</p>
          <blockquote>
              <p>ok ive changed Resizeable interface and it worked and all but when i dont go Resizable its the same tabs like my tabs are set to inventorystones 1 and 2 but id like my normal inventorystones to be set to 3- 4 because the old ones are 3-4 but i cant seem to find were this is were i think it is in client.java</p>
<p>[code]<br>
private void drawIventoryStones(int paddingX,int paddingY) {<br>
paddingX = paddingX + 2;//tabSpace<br>
if(toggleFullscreen) {<br>
inventoryStones[2].drawSprite(1 + paddingX, 261 + paddingY);<br>
inventoryStones[2].drawSprite(31 + paddingX, 261 + paddingY);<br>
inventoryStones[2].drawSprite(61 + paddingX, 261 + paddingY);<br>
inventoryStones[2].drawSprite(91 + paddingX, 261 + paddingY);<br>
inventoryStones[3].drawSprite(121 + paddingX, 261 + paddingY);<br>
inventoryStones[2].drawSprite(151 + paddingX, 261 + paddingY);<br>
inventoryStones[2].drawSprite(181 + paddingX, 261 + paddingY);<br>
inventoryStones[2].drawSprite(211 + paddingX, 261 + paddingY);</p>
<pre><code>		inventoryStones[2].drawSprite(1 + paddingX, 298 + paddingY);
		inventoryStones[2].drawSprite(31 + paddingX, 298 + paddingY);
		inventoryStones[2].drawSprite(61 + paddingX, 298 + paddingY);
		inventoryStones[2].drawSprite(91 + paddingX, 298 + paddingY);
		inventoryStones[2].drawSprite(121 + paddingX, 298 + paddingY);
		inventoryStones[2].drawSprite(151 + paddingX, 298 + paddingY);
		inventoryStones[2].drawSprite(181 + paddingX,298 + paddingY);
		inventoryStones[2].drawSprite(211 + paddingX, 298 + paddingY);
	}
	//if(!contextMenuOpen) {
		if(tabInterfaceIDs[0] != -1)
			inventoryStones[tabIDHover == 0 ? 2 : 2].drawSprite(1 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
		if(tabInterfaceIDs[14] != -1)
			inventoryStones[tabIDHover == 1 ? 1 : 2].drawSprite(31 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
		if(tabInterfaceIDs[1] != -1)
			inventoryStones[tabIDHover == 2 ? 1 : 2].drawSprite(61 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
		if(tabInterfaceIDs[2] != -1)
			inventoryStones[tabIDHover == 3 ? 1 : 2].drawSprite(91 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
		if(tabInterfaceIDs[3] != -1)
			inventoryStones[tabIDHover == 4 ? 1 : 2].drawSprite(121 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
		if(tabInterfaceIDs[4] != -1)
			inventoryStones[tabIDHover == 5 ? 1 : 2].drawSprite(151 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
		if(tabInterfaceIDs[5] != -1)
			inventoryStones[tabIDHover == 6 ? 1 : 2].drawSprite(181 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
		if(tabInterfaceIDs[6] != -1)
			inventoryStones[tabIDHover == 7 ? 1 : 2].drawSprite(211 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
			
		if(tabInterfaceIDs[16] != -1)
			inventoryStones[tabIDHover == 14 ? 1 : 2].drawSprite(1 + paddingX, 298 + paddingY);
		if(tabInterfaceIDs[9] != -1)
			inventoryStones[tabIDHover == 8 ? 1 : 2].drawSprite(31 + paddingX, 298 + paddingY);
		if(tabInterfaceIDs[8] != -1)
			inventoryStones[tabIDHover == 9 ? 1 : 2].drawSprite(61 + paddingX, 298 + paddingY);
		if(tabInterfaceIDs[7] != -1)
			inventoryStones[tabIDHover == 10 ? 1 : 2].drawSprite(91 + paddingX, 298 + paddingY);
		if(tabInterfaceIDs[11] != -1)
			inventoryStones[tabIDHover == 11 ? 1 : 2].drawSprite(121 + paddingX, 298 + paddingY);
		if(tabInterfaceIDs[12] != -1)
			inventoryStones[tabIDHover == 12 ? 1 : 2].drawSprite(151 + paddingX, 298 + paddingY);
		if(tabInterfaceIDs[13] != -1)
			inventoryStones[tabIDHover == 13 ? 1 : 2].drawSprite(181 + paddingX,298 + paddingY);
		if(tabInterfaceIDs[15] != -1)
			inventoryStones[tabIDHover == 15 ? 1 : 2].drawSprite(211 + paddingX, 298 + paddingY);
	//}
	if(invOverlayInterfaceID == -1 &amp;&amp; focusTab != -1) {
		try {
		if(tabInterfaceIDs[tabID] != -1) {
			if(tabID == 0)
				inventoryStones[0].drawSprite(1 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
			if(tabID == 14)
				inventoryStones[0].drawSprite(31 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
			if(tabID == 1)
				inventoryStones[0].drawSprite(61 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
			if(tabID == 2)
				inventoryStones[0].drawSprite(91 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
			if(tabID == 3)
				inventoryStones[0].drawSprite(121 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
			if(tabID == 4)
				inventoryStones[0].drawSprite(151 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
			if(tabID == 5)
				inventoryStones[0].drawSprite(181 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
			if(tabID == 6)
				inventoryStones[0].drawSprite(211 + paddingX, (toggleFullscreen ? 261 : 0) + paddingY);
			if(tabID == 16)
				inventoryStones[0].drawSprite(1 + paddingX, 298 + paddingY);
			if(tabID == 8)
				inventoryStones[0].drawSprite(31 + paddingX, 298 + paddingY);
			if(tabID == 9)
				inventoryStones[0].drawSprite(61 + paddingX, 298 + paddingY);
			if(tabID == 7)
				inventoryStones[0].drawSprite(91 + paddingX, 298 + paddingY);
			if(tabID == 11)
				inventoryStones[0].drawSprite(121 + paddingX, 298 + paddingY);
			if(tabID == 12)
				inventoryStones[0].drawSprite(151 + paddingX, 298 + paddingY);
			if(tabID == 13)
				inventoryStones[0].drawSprite(181 + paddingX, 298 + paddingY);
			if(tabID == 15)
				inventoryStones[0].drawSprite(211 + paddingX, 298 + paddingY);
		}
	} catch(Exception e) { tabID = 1; }
	}
}

private void drawSideIcons(int paddingX, int paddingY) {
	if(tabIconFlash != -1)
		tabAreaAltered = true;
	if(tabAreaAltered) {
		if(tabIconFlash != -1 &amp;&amp; tabIconFlash == tabID) {
			tabIconFlash = -1;
			stream.createFrame(120);
			stream.writeWordBigEndian(tabID);
		}
		tabAreaAltered = false;
	}
	if(invOverlayInterfaceID == -1) {
		if(tabInterfaceIDs[0] != -1 &amp;&amp; (tabIconFlash != 0 || loopCycle % 20 &lt; 10))
			sideIcons[0].drawSprite(3 + 5 + paddingX, (toggleFullscreen ? 261 : 0) + 9 + paddingY);//Combat
		if(tabInterfaceIDs[14] != -1 &amp;&amp; (tabIconFlash != 1 || loopCycle % 20 &lt; 10))
			sideIcons[3].drawSprite(33 + 4 + paddingX, (toggleFullscreen ? 261 : 0) + 9 + paddingY);//skills
		if(tabInterfaceIDs[1] != -1 &amp;&amp; (tabIconFlash != 2 || loopCycle % 20 &lt; 10))
			sideIcons[1].drawSprite(63 + 4 + paddingX, (toggleFullscreen ? 261 : 0) + 8 + paddingY);//quests
		if(tabInterfaceIDs[2] != -1 &amp;&amp; (tabIconFlash != 14 || loopCycle % 20 &lt; 10))
			sideIcons[2].drawSprite(93 + 4 + paddingX, (toggleFullscreen ? 261 : 0) + 8 + paddingY);//task system
		if(tabInterfaceIDs[3] != -1 &amp;&amp; (tabIconFlash != 3 || loopCycle % 20 &lt; 10))
			sideIcons[4].drawSprite(123 + 4 + paddingX, (toggleFullscreen ? 261 : 0) + 9 + paddingY);//inventory
		if(tabInterfaceIDs[4] != -1 &amp;&amp; (tabIconFlash != 4 || loopCycle % 20 &lt; 10))
			sideIcons[5].drawSprite(153 + 6 + paddingX, (toggleFullscreen ? 261 : 0) + 8 + paddingY);//equipment
		if(tabInterfaceIDs[5] != -1 &amp;&amp; (tabIconFlash != 5 || loopCycle % 20 &lt; 10))
			sideIcons[6].drawSprite(183 + 4 + paddingX, (toggleFullscreen ? 261 : 0) + 9 + paddingY);//prayer
		if(tabInterfaceIDs[6] != -1 &amp;&amp; (tabIconFlash != 6 || loopCycle % 20 &lt; 10))
			sideIcons[7].drawSprite(213 + 4 + paddingX, (toggleFullscreen ? 261 : 0) + 9 + paddingY);//magic
			
		if(tabInterfaceIDs[14] != -1 &amp;&amp; (tabIconFlash != 7 || loopCycle % 20 &lt; 10))
			sideIcons[8].drawSprite(3 + 4 + paddingX, 298 + 10 + paddingY);//Guide
		if(tabInterfaceIDs[9] != -1 &amp;&amp; (tabIconFlash != 9 || loopCycle % 20 &lt; 10))
			sideIcons[9].drawSprite(33 + 5 + paddingX, 298 + 9 + paddingY);//friends
		if(tabInterfaceIDs[8] != -1 &amp;&amp; (tabIconFlash != 8 || loopCycle % 20 &lt; 10))
			sideIcons[10].drawSprite(63 + 7 + paddingX, 298 + 9 + paddingY);//ignore
		if(tabInterfaceIDs[7] != -1 &amp;&amp; (tabIconFlash != 7 || loopCycle % 20 &lt; 10))
			sideIcons[11].drawSprite(93 + 4 + paddingX, 298 + 10 + paddingY);//clan
		if(tabInterfaceIDs[11] != -1 &amp;&amp; (tabIconFlash != 11 || loopCycle % 20 &lt; 10))
			sideIcons[12].drawSprite(123 + 4 + paddingX, 298 + 9 + paddingY);//option
		if(tabInterfaceIDs[12] != -1 &amp;&amp; (tabIconFlash != 12 || loopCycle % 20 &lt; 10))
			sideIcons[13].drawSprite(153 + 4 + paddingX, 298 + 9 + paddingY);//emotes
		if(tabInterfaceIDs[13] != -1 &amp;&amp; (tabIconFlash != 13 || loopCycle % 20 &lt; 10))
			sideIcons[14].drawSprite(183 + 3 + paddingX, 298 + 8 + paddingY);//music
		if(tabInterfaceIDs[15] != -1 &amp;&amp; (tabIconFlash != 15 || loopCycle % 20 &lt; 10))
			sideIcons[15].drawSprite(213 + 4 + paddingX, 298 + 11 + paddingY);//notes
	}
}

private void drawTabArea(RSImageProducer tabImage, int paddingX,int paddingY) {
	tabImage.initDrawingArea();
	Texture.anIntArray1472 = anIntArray1181;
	if(toggleFullscreen) {
		if(focusTab != -1)
			tabAreaSprite[1].drawSprite1(45-23 + paddingX ,55-23 + paddingY - (toggleFullscreen ? 46 : 0),192);
	} else
		tabAreaSprite[0].drawSprite(0 + paddingX,0 + paddingY);
	
	drawIventoryStones(paddingX,paddingY);
	drawSideIcons(paddingX,paddingY);
	
	if(invOverlayInterfaceID != -1)
		drawInterface(0, 28 + paddingX, RSInterface.interfaceCache[invOverlayInterfaceID], 37 - (toggleFullscreen ? 46 : 0) + paddingY);
	else if(tabInterfaceIDs[tabID] != -1 &amp;&amp; focusTab != -1)
		drawInterface(0, 28 + paddingX, RSInterface.interfaceCache[tabInterfaceIDs[tabID]], 37 - (toggleFullscreen ? 46 : 0) + paddingY);
	if(contextMenuOpen &amp;&amp; !toggleFullscreen)
		drawMenu(519, 168);//Tab area
	Texture.anIntArray1472 = anIntArray1182;
}

private void drawRightFrameArea() {
	rightFrame.initDrawingArea();
	rightFrameSprite.drawSprite(0,0);
	if(contextMenuOpen &amp;&amp; !toggleFullscreen) {
		drawMenu(516, 168);
	}
	rightFrame.drawGraphics(168, super.graphics, 516);
	main3DArea.initDrawingArea();
}
[/code]
</code></pre>
<p>help me out plz. if u dont understand say so and il post pictures.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/ineventorystones-alll-take-a-look-please-pi/436120/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/ineventorystones-alll-take-a-look-please-pi/436120/1</link>
        <pubDate>Mon, 12 Mar 2012 20:09:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-436120-1</guid>
        <source url="https://forum.moparisthebest.com/t/ineventorystones-alll-take-a-look-please-pi/436120.rss">[Ineventorystones] ALLL TAKE A LOOK PLEASE [PI]</source>
      </item>
  </channel>
</rss>
