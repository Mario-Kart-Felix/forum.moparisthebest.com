<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>PHP array searching</title>
    <link>https://forum.moparisthebest.com/t/php-array-searching/339165</link>
    <description>I&#39;m looking for a PHP function which returns the key of a numeric value in an array, where the value is less than or equal to the parameter. The value must also be the closest (numerically) to the parameter.

For example,
[code=php]Array { 0 =&gt; 3,
        1 =&gt; 6,
        2 =&gt; 7,
        3 =&gt; 10,
        4 =&gt; 18,
        5 =&gt; 20,
        6 =&gt; 21,
        7 =&gt; 24
      }[/code]

If I searched for the number 17, the value which is the next down from this is 10. Key 3 would therefore be returned. These numbers are always in ascending order, if this makes a difference.

I doubt there&#39;s actually a function that does exactly this, but maybe there&#39;s one that almost does what I want? Could someone give me some ideas on a good way to implement this? I&#39;m doing it with a large amount of data which is why I&#39;d prefer to use an in-built method rather than some shitty inefficient thing written by me.</description>
    
    <lastBuildDate>Fri, 25 Jun 2010 11:33:11 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/php-array-searching/339165.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>PHP array searching</title>
        <dc:creator><![CDATA[@_bool]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_bool">@_bool</a> wrote:</p>
          <blockquote>
              <p><code>function bottom_key($needle, $haystack){
    $last_val = 0;
    $ret_key = 0;
    foreach($haystack as $key =&gt; $value){
        if($needle &gt;= $value){
            if($value &gt; $last_val) {
                $last_val = $value;
                $ret_key = $key;
            }
        }
    }
    return $ret_key;
}</code></p>
<p>that’s how i would do it. best way i can think of that wouldn’t fuck up if not in ascending order, etc.</p>
<p>sorry about bumb just thought id share a solution.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/php-array-searching/339165/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/php-array-searching/339165/15</link>
        <pubDate>Fri, 25 Jun 2010 11:33:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-339165-15</guid>
        <source url="https://forum.moparisthebest.com/t/php-array-searching/339165.rss">PHP array searching</source>
      </item>
      <item>
        <title>PHP array searching</title>
        <dc:creator><![CDATA[@z z]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/z">@z</a> wrote:</p>
          <blockquote>
              <p>[quote=“eczema3, post:13, topic:339165”][quote author=zachera link=topic=435547.msg3226085#msg3226085 date=1275592295]</p>
<p><code>function array_closest_key($needle,$haystack){
	foreach($haystack as $key =&gt; $value){
		if($needle &lt;= $value){
			return $key;
		}
	}
}</code></p>
<p>How about this?<br>
[/quote]<br>
What if $value is 9999999 and $needle is 1? That’s a very bad example imo.[/quote]<br>
Give me an array in which my function would disfunct for his request since array ( 0 =&gt; 9999999, 1 =&gt; 3) doesn’t fit for his situation. He has integers in ascending order. (<a href="http://www.zachera.com/~zachera/sandbox.php?src" rel="nofollow noopener">http://www.zachera.com/~zachera/sandbox.php?src</a>)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/php-array-searching/339165/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/php-array-searching/339165/14</link>
        <pubDate>Thu, 03 Jun 2010 21:34:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-339165-14</guid>
        <source url="https://forum.moparisthebest.com/t/php-array-searching/339165.rss">PHP array searching</source>
      </item>
      <item>
        <title>PHP array searching</title>
        <dc:creator><![CDATA[@eczema3 eczema3]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/eczema3">@eczema3</a> wrote:</p>
          <blockquote>
              <p>[quote=“zachera, post:12, topic:339165”]<code>function array_closest_key($needle,$haystack){
	foreach($haystack as $key =&gt; $value){
		if($needle &lt;= $value){
			return $key;
		}
	}
}</code></p>
<p>How about this?[/quote]<br>
What if $value is 9999999 and $needle is 1? That’s a very bad example imo.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/php-array-searching/339165/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/php-array-searching/339165/13</link>
        <pubDate>Thu, 03 Jun 2010 21:02:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-339165-13</guid>
        <source url="https://forum.moparisthebest.com/t/php-array-searching/339165.rss">PHP array searching</source>
      </item>
      <item>
        <title>PHP array searching</title>
        <dc:creator><![CDATA[@z z]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/z">@z</a> wrote:</p>
          <blockquote>
              <p><code>function array_closest_key($needle,$haystack){
	foreach($haystack as $key =&gt; $value){
		if($needle &lt;= $value){
			return $key;
		}
	}
}</code></p>
<p>How about this?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/php-array-searching/339165/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/php-array-searching/339165/12</link>
        <pubDate>Thu, 03 Jun 2010 19:11:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-339165-12</guid>
        <source url="https://forum.moparisthebest.com/t/php-array-searching/339165.rss">PHP array searching</source>
      </item>
      <item>
        <title>PHP array searching</title>
        <dc:creator><![CDATA[@mikehershey mikehershey]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mikehershey">@mikehershey</a> wrote:</p>
          <blockquote>
              <p>If your values are always sorted you can use something like binary search to get O(log n) like a cholo would …</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/php-array-searching/339165/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/php-array-searching/339165/11</link>
        <pubDate>Wed, 26 May 2010 12:51:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-339165-11</guid>
        <source url="https://forum.moparisthebest.com/t/php-array-searching/339165.rss">PHP array searching</source>
      </item>
      <item>
        <title>PHP array searching</title>
        <dc:creator><![CDATA[@lawl lawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lawl">@lawl</a> wrote:</p>
          <blockquote>
              <p><a href="http://technosophos.com/content/set-objects-php-arrays-vs-splobjectstorage" class="onebox" target="_blank" rel="nofollow noopener">http://technosophos.com/content/set-objects-php-arrays-vs-splobjectstorage</a></p>
<p>ps, why not just switch the keys and values around? looks like you dont even need the keys</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/php-array-searching/339165/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/php-array-searching/339165/10</link>
        <pubDate>Wed, 05 May 2010 21:53:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-339165-10</guid>
        <source url="https://forum.moparisthebest.com/t/php-array-searching/339165.rss">PHP array searching</source>
      </item>
      <item>
        <title>PHP array searching</title>
        <dc:creator><![CDATA[@xx_matty_xx Justin Bieber]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xx_matty_xx">@xx_matty_xx</a> wrote:</p>
          <blockquote>
              <p>[quote=“la­wl, post:8, topic:339165”]if you were using c++, std::set would be ideal since it stores keys in sorted order, i don’t know if php has anything similar.[/quote]yeah the keys and values will be stored in order because i’m getting them from a sorted database.</p>
<p>that function i wrote is a serious bottleneck in my code. any way to optimise it?</p>
<pre><code class="lang-auto">// Returns the key of an element in an array which has a value
// less than or equal to the parameter specified
function below($needle, $haystack) {
  $foundKey = null;
  foreach($haystack as $key =&gt; $value) {
    if($value &gt; $needle) {
      $foundKey = $key-1;
      break;
    }
  }
  if($needle &gt;= end($haystack)) $foundKey = key($haystack);
  if($needle &lt; start($haystack)) $foundKey = false;
  return $foundKey;
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/php-array-searching/339165/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/php-array-searching/339165/9</link>
        <pubDate>Wed, 05 May 2010 20:49:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-339165-9</guid>
        <source url="https://forum.moparisthebest.com/t/php-array-searching/339165.rss">PHP array searching</source>
      </item>
      <item>
        <title>PHP array searching</title>
        <dc:creator><![CDATA[@lawl lawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lawl">@lawl</a> wrote:</p>
          <blockquote>
              <p>if you were using c++, std::set would be ideal since it stores keys in sorted order, i don’t know if php has anything similar.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/php-array-searching/339165/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/php-array-searching/339165/8</link>
        <pubDate>Wed, 05 May 2010 19:09:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-339165-8</guid>
        <source url="https://forum.moparisthebest.com/t/php-array-searching/339165.rss">PHP array searching</source>
      </item>
      <item>
        <title>PHP array searching</title>
        <dc:creator><![CDATA[@xx_matty_xx Justin Bieber]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xx_matty_xx">@xx_matty_xx</a> wrote:</p>
          <blockquote>
              <p>I was writing my own while you wrote that, mine looks kinda similar(ish)</p>
<pre><code class="lang-auto">function below($needle, $haystack) {
  foreach($haystack as $key =&gt; $value) {
    if($value &gt;= $needle) {
      $foundKey = $key-1;
      break;
    }
  }
  return $foundKey;
}</code></pre>
<p>It certainly works for the values I gave in the example, but are there any problems which could arise?</p>
<p>Oh… it doesn’t work for out of range values =/</p>
<p>Woo fix’t</p>
<pre><code class="lang-auto">function below($needle, $haystack) {
  foreach($haystack as $key =&gt; $value) {
    if($value &gt; $needle) {
      $foundKey = $key-1;
      break;
    }
  }
  if($needle &gt;= end($haystack)) $foundKey = key($haystack);
  if(!isset($foundKey) || $foundKey == -1) $foundKey = false;
  return $foundKey;
}</code></pre>
<p>All good ye??<img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/php-array-searching/339165/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/php-array-searching/339165/7</link>
        <pubDate>Wed, 05 May 2010 18:09:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-339165-7</guid>
        <source url="https://forum.moparisthebest.com/t/php-array-searching/339165.rss">PHP array searching</source>
      </item>
      <item>
        <title>PHP array searching</title>
        <dc:creator><![CDATA[@davidude36 Brolapse]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidude36">@davidude36</a> wrote:</p>
          <blockquote>
              <pre><code class="lang-auto">for ( $counter = 0; $counter &lt;= Array.length; $counter += 1) {
  if (!Array[$counter] &lt; numberYouAreLookingFor) {
    echo "shit found at:  " + inttostr($counter - 1) + " with value: " + array.get($counter - 1);
    break;
  } 
}</code></pre>
<p>I don’t know php but this is a simple outline for the task you want</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/php-array-searching/339165/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/php-array-searching/339165/6</link>
        <pubDate>Wed, 05 May 2010 17:57:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-339165-6</guid>
        <source url="https://forum.moparisthebest.com/t/php-array-searching/339165.rss">PHP array searching</source>
      </item>
      <item>
        <title>PHP array searching</title>
        <dc:creator><![CDATA[@cumescape cumescape]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cumescape">@cumescape</a> wrote:</p>
          <blockquote>
              <p>Could you something like</p>
<p><a href="http://us.php.net/manual/en/function.in-array.php" class="onebox" target="_blank" rel="nofollow noopener">http://us.php.net/manual/en/function.in-array.php</a></p>
<p>I don’t really know what you are looking to do or what is this for so yea.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/php-array-searching/339165/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/php-array-searching/339165/5</link>
        <pubDate>Wed, 05 May 2010 17:49:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-339165-5</guid>
        <source url="https://forum.moparisthebest.com/t/php-array-searching/339165.rss">PHP array searching</source>
      </item>
      <item>
        <title>PHP array searching</title>
        <dc:creator><![CDATA[@davidude36 Brolapse]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidude36">@davidude36</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="3" data-topic="339165">
<div class="title">
<div class="quote-controls"></div>
 xx matty xx:</div>
<blockquote>
<p>I’m think I’m going to write a simple foreach loop, unless anyone suggests a better idea.</p>
</blockquote>
</aside>
<p>Surely that would be the easiest thing to do? It’d take less than 5 minutes to code a function to do what you wanted it to do.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/php-array-searching/339165/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/php-array-searching/339165/4</link>
        <pubDate>Wed, 05 May 2010 17:48:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-339165-4</guid>
        <source url="https://forum.moparisthebest.com/t/php-array-searching/339165.rss">PHP array searching</source>
      </item>
      <item>
        <title>PHP array searching</title>
        <dc:creator><![CDATA[@xx_matty_xx Justin Bieber]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xx_matty_xx">@xx_matty_xx</a> wrote:</p>
          <blockquote>
              <p>Data mining… I cba to explain my entire problem and it’s not really relevant, this is just the bit I’m stuck with.</p>
<p>I’m think I’m going to write a simple foreach loop, unless anyone suggests a better idea.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/php-array-searching/339165/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/php-array-searching/339165/3</link>
        <pubDate>Wed, 05 May 2010 17:40:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-339165-3</guid>
        <source url="https://forum.moparisthebest.com/t/php-array-searching/339165.rss">PHP array searching</source>
      </item>
      <item>
        <title>PHP array searching</title>
        <dc:creator><![CDATA[@chri5 chri5]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/chri5">@chri5</a> wrote:</p>
          <blockquote>
              <p>Why are you doing it?/What are you doing?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/php-array-searching/339165/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/php-array-searching/339165/2</link>
        <pubDate>Wed, 05 May 2010 17:30:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-339165-2</guid>
        <source url="https://forum.moparisthebest.com/t/php-array-searching/339165.rss">PHP array searching</source>
      </item>
      <item>
        <title>PHP array searching</title>
        <dc:creator><![CDATA[@xx_matty_xx Justin Bieber]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xx_matty_xx">@xx_matty_xx</a> wrote:</p>
          <blockquote>
              <p>I’m looking for a PHP function which returns the key of a numeric value in an array, where the value is less than or equal to the parameter. The value must also be the closest (numerically) to the parameter.</p>
<p>For example,</p>
<p><code>Array { 0 =&gt; 3,
        1 =&gt; 6,
        2 =&gt; 7,
        3 =&gt; 10,
        4 =&gt; 18,
        5 =&gt; 20,
        6 =&gt; 21,
        7 =&gt; 24
      }</code></p>
<p>If I searched for the number 17, the value which is the next down from this is 10. Key 3 would therefore be returned. These numbers are always in ascending order, if this makes a difference.</p>
<p>I doubt there’s actually a function that does exactly this, but maybe there’s one that almost does what I want? Could someone give me some ideas on a good way to implement this? I’m doing it with a large amount of data which is why I’d prefer to use an in-built method rather than some shitty inefficient thing written by me.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/php-array-searching/339165/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/php-array-searching/339165/1</link>
        <pubDate>Wed, 05 May 2010 17:20:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-339165-1</guid>
        <source url="https://forum.moparisthebest.com/t/php-array-searching/339165.rss">PHP array searching</source>
      </item>
  </channel>
</rss>
