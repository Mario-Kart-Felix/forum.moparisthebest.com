<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[Delta(++)] Herblore identifying</title>
    <link>https://forum.moparisthebest.com/t/delta-herblore-identifying/471401</link>
    <description>Herblore identifying for Delta(++)

First, create a new package:
[code]com.rs2.model.players.skills.herblore[/code]

Inside the package, create a new class called: Identify.java

Put this in it:
[code]package com.rs2.model.players.skills.herblore;

import java.util.HashMap;

import com.rs2.model.players.Client;

/**
 * Herb identifying
 * 
 * @author Enzo42
 *
 */
public class Identify {

	public enum identifyData {
		GUAM_LEAF(199, 1, 3, 249),
		MARRENTILL(201, 5, 4, 251),
		TARROMIN(203, 11, 5, 253),
		HARRALANDER(205, 20, 6, 255),
		RANARR(207, 25, 8, 257),
		IRIT(209, 40, 9, 259),
		AVANTOE(211, 48, 10, 261),
		KWUARM(213, 54, 11, 263),
		CADANTINE(215, 65, 13, 265),
		DWARF_WEED(217, 70, 14, 267),
		TORSTOL(219, 75, 15, 269);
		
		final int herb, level, xp, create;
		identifyData(final int herb, final int level, final int xp, final int create) {
			this.herb = herb;
			this.level = level;
			this.xp = xp;
			this.create = create;
		}
		
		public int getHerb() {
			return herb;
		}
		
		public int getLevel() {
			return level;
		}
		
		public int getXP() {
			return xp;
		}
		
		public int getCreate() {
			return create;
		}
		
		private static HashMap&lt;Integer, identifyData&gt; identify = new HashMap&lt;Integer, identifyData&gt;();

		static {
			for (final identifyData i : identifyData.values())
				identify.put(i.getHerb(), i);
		}
	}
	
	/**
	 * Identifies the herb
	 * @param player
	 * 			The player
	 * @param herb
	 * 			The herb to identify
	 */
	public static void identifyHerb(final Client player, final int herb) {
		final identifyData i = identifyData.identify.get(herb);
		if(System.currentTimeMillis() - player.getSkill().lastAction &lt; 600) {
			return;
		}
		if(player.playerLevel[15] &lt; i.getLevel()) {
			player.getPacketSender().sendMessage(&quot;You need a Herblore level of atleast &quot; + i.getLevel() + &quot; to do this.&quot;);
			return;
		}
		player.getSkill().lastAction = System.currentTimeMillis();
		player.getInventory().delete(herb, 1);
		player.getInventory().add(i.getCreate(), 1);
		player.getSkill().addExperience(i.getXP(), 15);
		player.getPacketSender().sendMessage(&quot;You identify the herb as a &quot; + player.getPacketSender().getItemName(i.getCreate()).toLowerCase() + &quot;.&quot;);
	}
	
	/**
	 * Item ids that can be indentified
	 * @param herb
	 * 			The herb ID
	 * @return
	 * 			If the herb can be indentified or not
	 */
	public static boolean canIdentify(final int herb) {
		return (herb &gt; 198 &amp;&amp; herb &lt; 220);
	}

}[/code]

In Skill.java (com.rs2.model.players.skills)
add:
[code]public long lastAction;[/code]

Last, in ItemFunctions.java (com.rs2.model.items)
above the switch statement add:
[code]			if(Identify.canIdentify(item)) {
				Identify.identifyHerb(c, item);
				return;
			}[/code]

Note: You will need to add skill updating for the herblore skill, or it will crash

(Skill.java, above the method SkillUpdate)</description>
    
    <lastBuildDate>Thu, 06 Dec 2012 22:26:26 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/delta-herblore-identifying/471401.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[Delta(++)] Herblore identifying</title>
        <dc:creator><![CDATA[@enzo42 enzo42]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/enzo42">@enzo42</a> wrote:</p>
          <blockquote>
              <p>Herblore identifying for Delta(++)</p>
<p>First, create a new package:</p>
<pre><code class="lang-auto"></code></pre>
<p>Inside the package, create a new class called: Identify.java</p>
<p>Put this in it:</p>
<p>[code]package com.rs2.model.players.skills.herblore;</p>
<p>import java.util.HashMap;</p>
<p>import com.rs2.model.players.Client;</p>
<p>/**</p>
<ul>
<li>Herb identifying</li>
<li>
</li>
<li>
<span class="mention">@author</span> Enzo42</li>
<li>
</li>
</ul>
<p>*/<br>
public class Identify {</p>
<pre><code>public enum identifyData {
	GUAM_LEAF(199, 1, 3, 249),
	MARRENTILL(201, 5, 4, 251),
	TARROMIN(203, 11, 5, 253),
	HARRALANDER(205, 20, 6, 255),
	RANARR(207, 25, 8, 257),
	IRIT(209, 40, 9, 259),
	AVANTOE(211, 48, 10, 261),
	KWUARM(213, 54, 11, 263),
	CADANTINE(215, 65, 13, 265),
	DWARF_WEED(217, 70, 14, 267),
	TORSTOL(219, 75, 15, 269);
	
	final int herb, level, xp, create;
	identifyData(final int herb, final int level, final int xp, final int create) {
		this.herb = herb;
		this.level = level;
		this.xp = xp;
		this.create = create;
	}
	
	public int getHerb() {
		return herb;
	}
	
	public int getLevel() {
		return level;
	}
	
	public int getXP() {
		return xp;
	}
	
	public int getCreate() {
		return create;
	}
	
	private static HashMap&lt;Integer, identifyData&gt; identify = new HashMap&lt;Integer, identifyData&gt;();

	static {
		for (final identifyData i : identifyData.values())
			identify.put(i.getHerb(), i);
	}
}

/**
 * Identifies the herb
 * @param player
 * 			The player
 * @param herb
 * 			The herb to identify
 */
public static void identifyHerb(final Client player, final int herb) {
	final identifyData i = identifyData.identify.get(herb);
	if(System.currentTimeMillis() - player.getSkill().lastAction &lt; 600) {
		return;
	}
	if(player.playerLevel[15] &lt; i.getLevel()) {
		player.getPacketSender().sendMessage("You need a Herblore level of atleast " + i.getLevel() + " to do this.");
		return;
	}
	player.getSkill().lastAction = System.currentTimeMillis();
	player.getInventory().delete(herb, 1);
	player.getInventory().add(i.getCreate(), 1);
	player.getSkill().addExperience(i.getXP(), 15);
	player.getPacketSender().sendMessage("You identify the herb as a " + player.getPacketSender().getItemName(i.getCreate()).toLowerCase() + ".");
}

/**
 * Item ids that can be indentified
 * @param herb
 * 			The herb ID
 * @return
 * 			If the herb can be indentified or not
 */
public static boolean canIdentify(final int herb) {
	return (herb &gt; 198 &amp;&amp; herb &lt; 220);
}
</code></pre>
<p>}[/code]</p>
<p>In Skill.java (com.rs2.model.players.skills)<br>
add:</p>
<pre><code class="lang-auto"></code></pre>
<p>Last, in ItemFunctions.java (com.rs2.model.items)<br>
above the switch statement add:</p>
<p><code>			if(Identify.canIdentify(item)) {
				Identify.identifyHerb(c, item);
				return;
			}</code></p>
<p>Note: You will need to add skill updating for the herblore skill, or it will crash</p>
<p>(Skill.java, above the method SkillUpdate)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delta-herblore-identifying/471401/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delta-herblore-identifying/471401/1</link>
        <pubDate>Thu, 06 Dec 2012 22:26:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-471401-1</guid>
        <source url="https://forum.moparisthebest.com/t/delta-herblore-identifying/471401.rss">[Delta(++)] Herblore identifying</source>
      </item>
  </channel>
</rss>
