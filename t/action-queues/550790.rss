<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Action Queues</title>
    <link>https://forum.moparisthebest.com/t/action-queues/550790</link>
    <description>Solution #1

[code=lua]
prayer.bury = function()

	-- Fetch the amount of experience gained from burying
	local exp = get(&#39;burying.exp&#39;)

	-- Start the animation and wait a few ticks 
	msg(&#39;You dig a hole in the ground&#39;)
	animate(burying)
	delay(2)

	-- Remove the bone from the inventory and give the experience
	msg(&#39;You bury the bones.&#39;)
	inv_remove(inv, last_slot)
	addxp(skills.prayer, exp)
end
[/code]

Solution #2

[code=lua]
app.onitemoption(option.first, item.bones, function(plr, option, itemid, slot)

	-- On interaction first we obviously message the player that we&#39;ve started the action.
	plr:message(&#39;You dig a hole in the ground.&#39;)
	plr:delay(2)

	-- After we finish the action we notify that we buried the bones.
	plr:message(&#39;You bury the bones.&#39;)

	-- Give the reward and take the bones from the players inventory.
	plr:givexp(skill.prayer, --[[ Insert amount of experience for the bone ]])
	plr:take(slot)
end)

--[[
	Player Action Queue
	===================
	Message(&#39;You dig a hole in the ground&#39;)
	Delay(2)									// Wait two ticks, then execute remaining queue
	Message(&#39;You bury the bones&#39;)
	GiveXp(Skill.PRAYER, $1)
	TakeItem(slot)
]]
[/code]

I&#39;ve always been fiddling with the content model. If you aren&#39;t aware of my previous work I had created a solution similar to Runescript using lua by embedding helper functions and data into a local function environment that could be accessible and help assist in content development. An example of this shown above. I&#39;ve come across a new idea that uses the idea of action queues to modify the state of entities. 

How does it work? At the start of a world cycle any actions are handled, and then subsequently the action queue is executed until it reaches a delay which obviously delays the execution of the current queue. Some particulars are that if you&#39;re executing a new type of action you simply clear the queue. Seems easy right? Well where else could we take this?

In the context of the world, you may have many actions running at the same time so.

[code=lua]
app.onitemoption(option.first, item.bones, function(plr, option, itemid, slot)
	local fork = world.fork()

	-- After two ticks create a new tree at the players location
	fork:delay(2)
	fork:createloc(plr:pos, loc.tree)
end)

--[[
	World Context Queue
	===================
	Delay(2)
	CreateLoc($1, Locale.TREE)
]]
[/code]

I much prefer this solution to my sticky ones. (Lua -&gt; Runescript compiler, using coroutine library)

Trade off?

Prob memory consider you have to create a block-like structure for each action. But hey, I think thats a fair trade off.</description>
    
    <lastBuildDate>Sun, 29 Mar 2015 11:06:45 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/action-queues/550790.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Action Queues</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="4" data-topic="550790">
<div class="title">
<div class="quote-controls"></div>
 lare69:</div>
<blockquote>
<p>Just a question about the co-routines: how are you planning on making it thread safe without using a ton of synchronization?</p>
</blockquote>
</aside>
<p>they arent coroutines</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/action-queues/550790/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/action-queues/550790/5</link>
        <pubDate>Sun, 29 Mar 2015 11:06:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-550790-5</guid>
        <source url="https://forum.moparisthebest.com/t/action-queues/550790.rss">Action Queues</source>
      </item>
      <item>
        <title>Action Queues</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>Just a question about the co-routines: how are you planning on making it thread safe without using a ton of synchronization?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/action-queues/550790/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/action-queues/550790/4</link>
        <pubDate>Sun, 29 Mar 2015 04:19:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-550790-4</guid>
        <source url="https://forum.moparisthebest.com/t/action-queues/550790.rss">Action Queues</source>
      </item>
      <item>
        <title>Action Queues</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>[quote=“Miss Silabsoft, post:2, topic:550790”]not that I have 100% idea how you set this up but if you are clearing the queue of other actions when a new action takes over whats to stop me from doing</p>
<p>burybones<br>
plr:message(‘You dig a hole in the ground.’)<br>
plr:delay(2)</p>
<pre><code>    -- After we finish the action we notify that we buried the bones.
    plr:message('You bury the bones.')

    -- Give the reward and take the bones from the players inventory.
    plr:givexp(skill.prayer, --[[ Insert amount of experience for the bone ]])
</code></pre>
<p>dropbones</p>
<ul>
<li>new actions received clea4w list adding new action</li>
</ul>
<p>free prayer experience for everyone[/quote]</p>
<p>Drop bones would clear the bury bones action. I have to debate how to do futures because in theory the state of this is synchronized every tick, and item transactions can take multiple ticks. So it’s safe to say you can only theoretically run a single action at one time although the fork and execute function make it so that you can run multiple actions on the context of an entity at the same time. This is for status effects though say poison and such.</p>
<p>Builds into a prayer action:</p>
<pre><code class="lang-auto">-- Buries a bone from the players inventory at the specified slot.
prayer.bury = function(plr, item)

	-- Before we complete the action wait a set time and alert the player that the actions started
	plr:message('You dig a hole.')
	plr:delay(2)

	-- Give the player the reward experience and take the item from their inventory
	plr:message('You bury the bones.')
	plr:givexp(skill.prayer, item.meta(item:id(), 'burying.exp'))			-- TODO: Is it better to use a table for 'meta'?
	plr:take(item:slot())													-- TODO: Can we think of a better name than 'take'?
end</code></pre>
<p>This is an action queue or action, if obviously you click another bone it queues the action however if you try and drop a bone it’s destructive and it can either ignore the input or stop all current actions</p>
<pre><code class="lang-auto">import java.util.ArrayDeque;
import java.util.Queue;

/**
 * @author sini
 */
public class Action&lt;T extends Entity&gt; {

    /**
     * The queue of action blocks for this queue.
     */
    private final Queue&lt;ActionBlock&lt;T&gt;&gt; blocks = new ArrayDeque&lt;&gt;();

    /**
     * Constructs a new {@link Action};
     */
    public Action() {}

    /**
     * Appends an action block to the queue.
     *
     * @param block The action block.
     */
    public void append(ActionBlock&lt;T&gt; block) {
        blocks.add(block);
    }

    /**
     * Updates the action queue. The action queue will execute every action
     * up to a delay block. When a delay block is reached the queue will
     * block until the specified amount of time has been passed.
     *
     * @param entity The entity to execute the queue with.
     */
    public void tick(T entity) {
        ActionBlock&lt;T&gt; block;
        while((block = blocks.peek()) != null) {

            // Check if there is a condition we have to await for
            // before executing the block. The queue will not
            // continue until this block has finished blocking.
            if(block.await()) {
                break;
            }

            // Execute the block
            block.execute(entity);

            // Remove the block after it finishes executing
            blocks.poll();
        }
    }

    /**
     * Clears the queue.
     */
    public void clear() {
        blocks.clear();
    }
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/action-queues/550790/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/action-queues/550790/3</link>
        <pubDate>Sat, 28 Mar 2015 23:41:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-550790-3</guid>
        <source url="https://forum.moparisthebest.com/t/action-queues/550790.rss">Action Queues</source>
      </item>
      <item>
        <title>Action Queues</title>
        <dc:creator><![CDATA[@silabsoft RuneAgent]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silabsoft">@silabsoft</a> wrote:</p>
          <blockquote>
              <p>not that I have 100% idea how you set this up but if you are clearing the queue of other actions when a new action takes over whats to stop me from doing</p>
<p>burybones<br>
plr:message(‘You dig a hole in the ground.’)<br>
plr:delay(2)</p>
<pre><code>    -- After we finish the action we notify that we buried the bones.
    plr:message('You bury the bones.')

    -- Give the reward and take the bones from the players inventory.
    plr:givexp(skill.prayer, --[[ Insert amount of experience for the bone ]])
</code></pre>
<p>dropbones</p>
<ul>
<li>new actions received clea4w list adding new action</li>
</ul>
<p>free prayer experience for everyone</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/action-queues/550790/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/action-queues/550790/2</link>
        <pubDate>Sat, 28 Mar 2015 18:11:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-550790-2</guid>
        <source url="https://forum.moparisthebest.com/t/action-queues/550790.rss">Action Queues</source>
      </item>
      <item>
        <title>Action Queues</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>Solution <span class="hashtag">#1</span></p>
<pre><code class="lang-auto">prayer.bury = function()

	-- Fetch the amount of experience gained from burying
	local exp = get('burying.exp')

	-- Start the animation and wait a few ticks 
	msg('You dig a hole in the ground')
	animate(burying)
	delay(2)

	-- Remove the bone from the inventory and give the experience
	msg('You bury the bones.')
	inv_remove(inv, last_slot)
	addxp(skills.prayer, exp)
end</code></pre>
<p>Solution <span class="hashtag">#2</span></p>
<pre><code class="lang-auto">app.onitemoption(option.first, item.bones, function(plr, option, itemid, slot)

	-- On interaction first we obviously message the player that we've started the action.
	plr:message('You dig a hole in the ground.')
	plr:delay(2)

	-- After we finish the action we notify that we buried the bones.
	plr:message('You bury the bones.')

	-- Give the reward and take the bones from the players inventory.
	plr:givexp(skill.prayer, --[[ Insert amount of experience for the bone ]])
	plr:take(slot)
end)

--[[
	Player Action Queue
	===================
	Message('You dig a hole in the ground')
	Delay(2)									// Wait two ticks, then execute remaining queue
	Message('You bury the bones')
	GiveXp(Skill.PRAYER, $1)
	TakeItem(slot)
]]</code></pre>
<p>I’ve always been fiddling with the content model. If you aren’t aware of my previous work I had created a solution similar to Runescript using lua by embedding helper functions and data into a local function environment that could be accessible and help assist in content development. An example of this shown above. I’ve come across a new idea that uses the idea of action queues to modify the state of entities.</p>
<p>How does it work? At the start of a world cycle any actions are handled, and then subsequently the action queue is executed until it reaches a delay which obviously delays the execution of the current queue. Some particulars are that if you’re executing a new type of action you simply clear the queue. Seems easy right? Well where else could we take this?</p>
<p>In the context of the world, you may have many actions running at the same time so.</p>
<pre><code class="lang-auto">app.onitemoption(option.first, item.bones, function(plr, option, itemid, slot)
	local fork = world.fork()

	-- After two ticks create a new tree at the players location
	fork:delay(2)
	fork:createloc(plr:pos, loc.tree)
end)

--[[
	World Context Queue
	===================
	Delay(2)
	CreateLoc($1, Locale.TREE)
]]</code></pre>
<p>I much prefer this solution to my sticky ones. (Lua -&gt; Runescript compiler, using coroutine library)</p>
<p>Trade off?</p>
<p>Prob memory consider you have to create a block-like structure for each action. But hey, I think thats a fair trade off.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/action-queues/550790/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/action-queues/550790/1</link>
        <pubDate>Sat, 28 Mar 2015 09:10:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-550790-1</guid>
        <source url="https://forum.moparisthebest.com/t/action-queues/550790.rss">Action Queues</source>
      </item>
  </channel>
</rss>
