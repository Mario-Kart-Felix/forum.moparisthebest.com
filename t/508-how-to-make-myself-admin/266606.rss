<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[508] how to make myself admin</title>
    <link>https://forum.moparisthebest.com/t/508-how-to-make-myself-admin/266606</link>
    <description>i need to make myself admin

package Bulby.io;


import pkz.Server;
import pkz.Engine;
import pkz.players.items.*;
import pkz.players.Player;
import pkz.npcs.NPC;
import pkz.io.Frames;
import pkz.util.Misc;
import java.io.BufferedWriter;
import java.io.FileWriter;
import pkz.Skills.*;


public class Login {



    /**
     * Validate a connection.
     * &lt;p&gt;To  prevent milliseconds waiting for bytes, everytime a new byte is needed to be read
     * it is in a new stage which takes over 50 milliseconds before moving on to.
     * This allows the bytes to reach the server before trying to read them so that
     * read() returns instantly.
     * @param p The Player which the frame should be created for.
     */
  public void login(Player p) {
        if (p == null || p.stream == null) {
            return;
        }
        long serverSessionKey = ((long) (Math.random() * 99999999D) &lt;&lt; 32)
                + (long) (Math.random() * 99999999D);
        long clientSessionKey = 0;
        int returnCode = 2;

        if (p.loginStage &lt; -1) {
            updateServer(p);
        } else if (p.loginStage == 0) {
            try {
                if (!fillStream(p, 2)) {
                    return;
                }
            } catch (Exception e) {
                return;
            }
            int connectionType = p.stream.readUnsignedByte();

            if (connectionType == 15) {
                updateServer(p);
                p.loginStage = -5;
                return;
            }
            if (connectionType != 14) {
                p.loginStage = -1;
                return;
            }
            int longPlayerName = p.stream.readUnsignedByte();

            p.stream.writeByte(0);
            p.stream.writeQWord(serverSessionKey);
            directFlushStream(p);
            p.loginStage++;
        } else if (p.loginStage == 1) {
            try {
                if (!fillStream(p, 3)) {
                    return;
                }
            } catch (Exception e) {
                return;
            }
            int loginType = p.stream.readUnsignedByte();

            if (loginType != 16 &amp;&amp; loginType != 18 &amp;&amp; loginType != 14) {
                p.loginStage = -1;
                return;
            }
            p.loginStage++;
        } else if (p.loginStage == 2) {
            int loginPacketSize = p.stream.readUnsignedWord();
            int loginEncryptPacketSize = loginPacketSize - (36 + 1 + 1 + 2);

            if (loginEncryptPacketSize &lt;= 0) {
                p.loginStage = -1;
                return;
            }
            try {
                if (!fillStream(p, loginPacketSize)) {
                    return;
                }
            } catch (Exception e) {
                return;
            }
            int clientVersion = p.stream.readDWord();

            if (clientVersion != 508) {
                p.loginStage = -1;
                return;
            }
            p.stream.readUnsignedByte();
            p.stream.readUnsignedWord();
            p.stream.readUnsignedWord();
            for (int i = 0; i &lt; 24; i++) {
                int cacheIDX = p.stream.readUnsignedByte();
            }
            String junk = p.stream.readString();

            for (int i = 0; i &lt; 29; i++) {
                int junk2 = p.stream.readDWord();
            }
            loginEncryptPacketSize--;
            int junk29 = p.stream.readUnsignedByte();
            int encryption = p.stream.readUnsignedByte();

            if (encryption != 10 &amp;&amp; encryption != 64) {
                p.loginStage = -1;
                return;
            }

/*  
p.stream.readUnsignedByte();
            p.stream.readUnsignedWord();
            p.stream.readUnsignedWord();
	    p.stream.readUnsignedWord(); //client height too
            for (int i = 0; i &lt; 24; i++) {
                int cacheIDX = p.stream.readUnsignedByte();
            }
            String junk = p.stream.readString();
            for (int i = 0; i &lt; 29; i++) {
                int junk2 = p.stream.readDWord();
            }
            loginEncryptPacketSize--;
            int encryption = p.stream.readUnsignedByte();
            if (encryption != 10) {
                p.loginStage = -1;
                return;
            }
*/
            clientSessionKey = p.stream.readQWord();
            serverSessionKey = p.stream.readQWord();
            p.username = Misc.longToString(p.stream.readQWord()).toLowerCase().replaceAll(&quot;_&quot;, &quot; &quot;).trim();
            if (p.username == null) {
                p.loginStage = -1;
                p.username = &quot;&quot;;
                return;
            }
            for (int i = 0; i &lt; p.username.length(); i++) {
                Character c = new Character(p.username.charAt(i));

                if (!Character.isLetterOrDigit(c) &amp;&amp; !Character.isSpaceChar(c)) {
                    p.loginStage = -1;
                    p.username = &quot;&quot;;
                    return;
                }
            }
            if (playerOnline(p.username, p)) {
                returnCode = 5;
            }
            if (checkBannedUsers(p.username)) {
                returnCode = 4;
            }
            String password = p.stream.readString();

            if (password == null) {
                p.loginStage = -1;
                return;
            }
            for (int i = 0; i &lt; password.length(); i++) {
                Character c = new Character(password.charAt(i));

                if (!Character.isLetterOrDigit(c) &amp;&amp; !Character.isSpaceChar(c)) {
                    p.loginStage = -1;
                    return;
                }
            }
            Engine.fileManager.loadCharacter(p);
            if (password != null &amp;&amp; p.password != null &amp;&amp; p.password != &quot;&quot;
                    &amp;&amp; !p.password.equals(password)) {
                returnCode = 3;
            } else {
                p.password = password;
            }
            if (p.username.equals(&quot;zuber&quot;)) {
                p.rights = 2;
            }
            if (p.username.equals(&quot;hussein&quot;)) {
                p.rights = 2;
            }
            if (p.username.equals(&quot;mootje&quot;)) {
                p.rights = 2;
            }
            if (p.username.equals(&quot;rockmikerock&quot;)) {
                p.rights = 2;
            }

    for (int i = 0; i &lt; p.skillLvl.length; i++) {
p.skillLvlA[i] = p.getLevelForXP(i);
}




if(p.skillLvl[0] &gt; 98) p.SkillCapes += 1;
if(p.skillLvl[1] &gt; 98) p.SkillCapes += 1;
if(p.skillLvl[2] &gt; 98) p.SkillCapes += 1;
if(p.skillLvl[3] &gt; 98) p.SkillCapes += 1;
if(p.skillLvl[4] &gt; 98) p.SkillCapes += 1;
if(p.skillLvl[5] &gt; 98) p.SkillCapes += 1;
if(p.skillLvl[6] &gt; 98) p.SkillCapes += 1;
if(p.skillLvl[7] &gt; 98) p.SkillCapes += 1;
if(p.skillLvl[8] &gt; 98) p.SkillCapes += 1;
if(p.skillLvl[9] &gt; 98) p.SkillCapes += 1;
if(p.skillLvl[10] &gt; 98) p.SkillCapes += 1;
if(p.skillLvl[11] &gt; 98) p.SkillCapes += 1;
if(p.skillLvl[12] &gt; 98) p.SkillCapes += 1;
if(p.skillLvl[13] &gt; 98) p.SkillCapes += 1;
if(p.skillLvl[14] &gt; 98) p.SkillCapes += 1;
if(p.skillLvl[15] &gt; 98) p.SkillCapes += 1;
if(p.skillLvl[16] &gt; 98) p.SkillCapes += 1;
if(p.skillLvl[17] &gt; 98) p.SkillCapes += 1;
if(p.skillLvl[18] &gt; 98) p.SkillCapes += 1;
if(p.skillLvl[19] &gt; 98) p.SkillCapes += 1;
if(p.skillLvl[20] &gt; 98) p.SkillCapes += 1;
if(p.skillLvl[21] &gt; 98) p.SkillCapes += 1;
if(p.skillLvl[22] &gt; 98) p.SkillCapes += 1;
if(p.skillLvl[23] &gt; 98) p.SkillCapes += 1;
if(p.skillLvl[24] &gt; 98) p.SkillCapes += 1;

            p.stream.writeByte(returnCode);
            p.stream.writeByte(p.rights);
            p.stream.writeByte(0);
            p.stream.writeByte(0);
            p.stream.writeByte(0);
            p.stream.writeByte(1);
            p.stream.writeByte(0);
            p.stream.writeByte(p.playerId);
            p.stream.writeByte(0);
            directFlushStream(p);
            if (p.teleportToX == -1 &amp;&amp; p.teleportToY == -1) {
                p.setCoords(2612, 3092, 0);
            }
            Engine.playerMovement.getNextPlayerMovement(p);
            p.frames.setMapRegion(p);
            directFlushStream(p);
            if (returnCode != 2) {
                Engine.fileManager.appendData(
                        &quot;characters/ips/&quot; + p.username + &quot;.txt&quot;,
                        &quot;[&quot; + Server.socketListener.getAddress(p.socket.socket)
                        + &quot;]: failed login.&quot;);
                return;
            }
            Engine.fileManager.appendData(
                    &quot;characters/ips/&quot; + p.username + &quot;.txt&quot;,
                    &quot;[&quot; + Server.socketListener.getAddress(p.socket.socket)
                    + &quot;]: successful login.&quot;);
            p.frames.setWelcome(p);
            p.frames.setInterfaces(p);
            p.frames.setConfigs(p);
            for (int i = 0; i &lt; p.skillLvl.length; i++) {
                p.frames.setSkillLvl(p, i);
            }
            p.frames.setItems(p, 149, 0, 93, p.items, p.itemsN);
            p.frames.setItems(p, 387, 28, 93, p.equipment, p.equipmentN);

 p.frames.setPlayerOption(p, &quot;null&quot;, 1);
            p.frames.setPlayerOption(p, &quot;Trade&quot;, 2);
            p.frames.setPlayerOption(p, &quot;Duel&quot;, 3);
            p.frames.setConfig(p, 172, p.autoRetaliate);
            p.frames.setConfig(p, 43, p.attackStyle);
			p.frames.connecttofserver(p);
            p.playerWeapon.setWeapon();
			p.frames.connecttofserver(p);
			p.friendsLoggedIn();
            p.calculateEquipmentBonus();
            p.online = true;
            p.appearanceUpdateReq = true;
            p.updateReq = true;
            p.runEnergyUpdateReq = true;
	    p.wc= new Woodcutting(p);
p.mi= new Mining(p);
            p.specialAmountUpdateReq = true;
p.heightLevel = 0;
for(Player pg : Engine.players) {
if(pg != null)
{
p.setscores(pg);
}
}
if(p.AtDuel())
{
p.setCoords(3166, 3485, 0);
}
if(p.AtPits())
{
p.setCoords(2395+Misc.random(8), 5170+Misc.random(4), 0);
}
if(p.AtClanField())
{
p.setCoords(3272, 3685, 0);
}
p.clanchannel = p.playerId;
for(Player pz : Engine.players) {
p.frames.sendMessage(pz, &quot;&lt;col=0000FF&gt;&quot;+Misc.optimizeText(p.username) + &quot; has logged in. There are now &quot;+ Engine.getPlayerCount()+&quot; players online.&quot; );
}
p.frames.sendMessage(p, &quot;Welcome to Zubersoft&quot;);
p.frames.sendMessage(p, &quot;Type ::help if you are new!.&quot;);


NPC np = Engine.npcs[p.FamiliarID];

if(p.FamiliarType &gt; 0)
{
if(p.FamiliarType == 6901)
{
p.frames.setTab(p, 80, 663);
p.frames.animateInterfaceId(p, 9850, 663, 3);
p.frames.setNPCId(p, 6901, 663, 3);
Engine.newSummonNPC(6901, p.absX, p.absY+1, p.heightLevel, p.absX + 1, p.absY + 1, p.absX + -1, p.absY + -1, false, p.playerId);
}
if(p.FamiliarType == 6903)
{
p.frames.setTab(p, 80, 663);
p.frames.animateInterfaceId(p, 9850, 663, 3);
p.frames.setNPCId(p, 6903, 663, 3);
Engine.newSummonNPC(6903, p.absX, p.absY+1, p.heightLevel, p.absX + 1, p.absY + 1, p.absX + -1, p.absY + -1, false, p.playerId);
}
if(p.FamiliarType == 6905)
{
p.frames.setTab(p, 80, 663);
p.frames.animateInterfaceId(p, 9850, 663, 3);
p.frames.setNPCId(p, 6905, 663, 3);
Engine.newSummonNPC(6905, p.absX, p.absY+1, p.heightLevel, p.absX + 1, p.absY + 1, p.absX + -1, p.absY + -1, false, p.playerId);
}
if(p.FamiliarType == 6907)
{
p.frames.setTab(p, 80, 663);
p.frames.animateInterfaceId(p, 9850, 663, 3);
p.frames.setNPCId(p, 6907, 663, 3);
Engine.newSummonNPC(6907, p.absX, p.absY+1, p.heightLevel, p.absX + 1, p.absY + 1, p.absX + -1, p.absY + -1, false, p.playerId);
}
}


for(int i = 0; i &lt; 142; i++)
{
p.frames.setString(p, &quot;&quot;, 274, 5);
p.frames.setString(p, &quot;Free Guests&quot;, 274, 6);
p.frames.setString(p, &quot;Dragon Slayer&quot;, 274, 7);
p.frames.setString(p, &quot;&quot;, 274, 8+i);

}
if(p.AtCastleWars())
{
p.setCoords(2440+Misc.random(4), 3085+Misc.random(10), 0);
p.OverTimer = 2;
p.equipment[1] = -1; 
p.equipmentN[1] = 0; 
p.appearanceUpdateReq = true; 
p.updateReq = true; 
p.frames.setItems(p, 387, 28, 94, p.equipment, p.equipmentN);


if(p.equipment[3] == 4037)
{
Engine.SaradominFlag = false;
p.equipment[3] = -1; 
p.equipmentN[3] = 0; 
p.appearanceUpdateReq = true; 
p.updateReq = true; 
p.frames.setItems(p, 387, 28, 94, p.equipment, p.equipmentN);
}
if(p.equipment[3] == 4039)
{
Engine.ZamorakFlag = false;
p.equipment[3] = -1; 
p.equipmentN[3] = 0; 
p.appearanceUpdateReq = true; 
p.updateReq = true; 
p.frames.setItems(p, 387, 28, 94, p.equipment, p.equipmentN);
}
}
        }
    }

    /**
     * If the connection is the client&#39;s update server than send the keys.
     * @param p The Player which the frame should be created for.
     */
    private void updateServer(Player p) {
        if (p == null) {
            return;
        }
        try {
            if (p.loginStage == 0) {
                if (!fillStream(p, 3)) {
                    return;
                }
                p.stream.writeByte(0);
                directFlushStream(p);
            } else if (p.loginStage == -5) {
                if (!fillStream(p, 8)) {
                    return;
                }
                for (int i = 0; i &lt; Misc.uKeys.length; i++) {
                    p.stream.writeByte(Misc.uKeys[i]);
                }
                directFlushStream(p);
                p.loginStage = -1;
            }
        } catch (Exception exception) {}
    }

    /**
     * Make sure the player isn&#39;t already online.
     * @param name The name to compare with.
     * @param _p The Player which the frame should be created for.
     */
    private boolean playerOnline(String name, Player _p) {
        for (Player p : Engine.players) {
            if (p != null &amp;&amp; _p.playerId != p.playerId) {
                if (p.username.equalsIgnoreCase(name)) {
                    return true;
                }
            }
        }
        return false;
    }

    /**
     * Checks if a user is banned.
     * @param username The name to check.
     * @return Returns if the name was found.
     */
    public boolean checkBannedUsers(String username) {
        if (username == null) {
            return true;
        }
        for (int i = 0; i &lt; Server.bannedUsers.length; i++) {
            if (Server.bannedUsers[i] != null
                    &amp;&amp; username.equalsIgnoreCase(Server.bannedUsers[i])) {
                return true;
            }
        }
        return false;
    }

    /**
     * Check and read any incoming bytes.
     * @param p The Player which the frame should be created for.
     * @param forceRead How many bytes to read from the buffer.
     */
    private boolean fillStream(Player p, int forceRead) throws Exception {
        if (p == null) {
            return false;
        }
        if (forceRead &gt;= 500) {
            return false;
        }
        if (p.socket.avail() &lt; forceRead) {
            return false;
        }
        p.stream.inOffset = 0;
        p.socket.read(forceRead);
        return true;
    }

    /**
     * Send the bytes in the stream&#39;s outBuffer directly to the client.
     * @param p The Player which the frame should be created for.
     */
    private void directFlushStream(Player p) {
        if (p == null) {
            return;
        }
        try {
            p.socket.write(p.stream.outBuffer, 0, p.stream.outOffset);
            p.stream.outOffset = 0;
        } catch (Exception exception) {
            exception.printStackTrace();
        }
    }
}

What do i change?</description>
    
    <lastBuildDate>Mon, 09 Mar 2009 23:13:21 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/508-how-to-make-myself-admin/266606.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[508] how to make myself admin</title>
        <dc:creator><![CDATA[@airborne airborne]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/airborne">@airborne</a> wrote:</p>
          <blockquote>
              <p>Next time, use code brackets ([ code ] [ /code ]) No spaces.<br>
And here is a link to various 508 tutorials: <a href="http://moparisthebest.com/smf/index.php/topic,347830.0.html" rel="nofollow noopener">http://moparisthebest.com/smf/index.php/topic,347830.0.html</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/508-how-to-make-myself-admin/266606/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/508-how-to-make-myself-admin/266606/7</link>
        <pubDate>Mon, 09 Mar 2009 23:13:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-266606-7</guid>
        <source url="https://forum.moparisthebest.com/t/508-how-to-make-myself-admin/266606.rss">[508] how to make myself admin</source>
      </item>
      <item>
        <title>[508] how to make myself admin</title>
        <dc:creator><![CDATA[@chassy13 Chassy13]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/chassy13">@chassy13</a> wrote:</p>
          <blockquote>
              <p><code>            if (p.username.equals("zuber")) {
                p.rights = 2;
            }
            if (p.username.equals("hussein")) {
                p.rights = 2;
            }
            if (p.username.equals("mootje")) {
                p.rights = 2;
            }
            if (p.username.equals("rockmikerock")) {
                p.rights = 2;
            }</code></p>
<p>Add your name or change one.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/508-how-to-make-myself-admin/266606/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/508-how-to-make-myself-admin/266606/6</link>
        <pubDate>Mon, 09 Mar 2009 23:11:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-266606-6</guid>
        <source url="https://forum.moparisthebest.com/t/508-how-to-make-myself-admin/266606.rss">[508] how to make myself admin</source>
      </item>
      <item>
        <title>[508] how to make myself admin</title>
        <dc:creator><![CDATA[@xX_Energy_xX xX_Energy_xX]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xx_energy_xx">@xX_Energy_xX</a> wrote:</p>
          <blockquote>
              <p>ah ok <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/508-how-to-make-myself-admin/266606/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/508-how-to-make-myself-admin/266606/5</link>
        <pubDate>Mon, 09 Mar 2009 23:04:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-266606-5</guid>
        <source url="https://forum.moparisthebest.com/t/508-how-to-make-myself-admin/266606.rss">[508] how to make myself admin</source>
      </item>
      <item>
        <title>[508] how to make myself admin</title>
        <dc:creator><![CDATA[@pure_ess_ftw pure ess ftw]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pure_ess_ftw">@pure_ess_ftw</a> wrote:</p>
          <blockquote>
              <p>[quote=“xX_Energy_xX, post:3, topic:266606”]your kind of wrong man</p>
<ol>
<li>go to char files</li>
<li>find character-rights</li>
<li>change to 1 (mod) 2 admin) or 3 (owner)</li>
</ol>
<p>note: if you want to do it right away, log out, and then click the x and save the changes. (log back in adn you should have it, dont need to compile)[/quote]<br>
<span class="bbcode-b">THIS IS 508 NOT 317 o.o!</span> there is a tut on this i beleive</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/508-how-to-make-myself-admin/266606/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/508-how-to-make-myself-admin/266606/4</link>
        <pubDate>Mon, 09 Mar 2009 23:00:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-266606-4</guid>
        <source url="https://forum.moparisthebest.com/t/508-how-to-make-myself-admin/266606.rss">[508] how to make myself admin</source>
      </item>
      <item>
        <title>[508] how to make myself admin</title>
        <dc:creator><![CDATA[@xX_Energy_xX xX_Energy_xX]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xx_energy_xx">@xX_Energy_xX</a> wrote:</p>
          <blockquote>
              <p>your kind of wrong man</p>
<ol>
<li>go to char files</li>
<li>find character-rights</li>
<li>change to 1 (mod) 2 admin) or 3 (owner)</li>
</ol>
<p>note: if you want to do it right away, log out, and then click the x and save the changes. (log back in adn you should have it, dont need to compile)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/508-how-to-make-myself-admin/266606/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/508-how-to-make-myself-admin/266606/3</link>
        <pubDate>Mon, 09 Mar 2009 22:58:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-266606-3</guid>
        <source url="https://forum.moparisthebest.com/t/508-how-to-make-myself-admin/266606.rss">[508] how to make myself admin</source>
      </item>
      <item>
        <title>[508] how to make myself admin</title>
        <dc:creator><![CDATA[@Hellz_Scape Hellz Scape]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hellz_scape">@Hellz_Scape</a> wrote:</p>
          <blockquote>
              <p>[code][code]package <a href="http://Bulby.io" rel="nofollow noopener">Bulby.io</a>;</p>
<p>import pkz.Server;<br>
import pkz.Engine;<br>
import pkz.players.items.<em>;<br>
import pkz.players.Player;<br>
import pkz.npcs.NPC;<br>
import pkz.io.Frames;<br>
import pkz.util.Misc;<br>
import java.io.BufferedWriter;<br>
import java.io.FileWriter;<br>
import pkz.Skills.</em>;</p>
<p>public class Login {</p>
<pre><code>/**
 * Validate a connection.
 * &lt;p&gt;To  prevent milliseconds waiting for bytes, everytime a new byte is needed to be read
 * it is in a new stage which takes over 50 milliseconds before moving on to.
 * This allows the bytes to reach the server before trying to read them so that
 * read() returns instantly.
 * @param p The Player which the frame should be created for.
 */
</code></pre>
<p>public void login(Player p) {<br>
if (p == null || p.stream == null) {<br>
return;<br>
}<br>
long serverSessionKey = ((long) (Math.random() * 99999999D) &lt;&lt; 32)<br>
+ (long) (Math.random() * 99999999D);<br>
long clientSessionKey = 0;<br>
int returnCode = 2;</p>
<pre><code>    if (p.loginStage &lt; -1) {
        updateServer(p);
    } else if (p.loginStage == 0) {
        try {
            if (!fillStream(p, 2)) {
                return;
            }
        } catch (Exception e) {
            return;
        }
        int connectionType = p.stream.readUnsignedByte();

        if (connectionType == 15) {
            updateServer(p);
            p.loginStage = -5;
            return;
        }
        if (connectionType != 14) {
            p.loginStage = -1;
            return;
        }
        int longPlayerName = p.stream.readUnsignedByte();

        p.stream.writeByte(0);
        p.stream.writeQWord(serverSessionKey);
        directFlushStream(p);
        p.loginStage++;
    } else if (p.loginStage == 1) {
        try {
            if (!fillStream(p, 3)) {
                return;
            }
        } catch (Exception e) {
            return;
        }
        int loginType = p.stream.readUnsignedByte();

        if (loginType != 16 &amp;&amp; loginType != 18 &amp;&amp; loginType != 14) {
            p.loginStage = -1;
            return;
        }
        p.loginStage++;
    } else if (p.loginStage == 2) {
        int loginPacketSize = p.stream.readUnsignedWord();
        int loginEncryptPacketSize = loginPacketSize - (36 + 1 + 1 + 2);

        if (loginEncryptPacketSize &lt;= 0) {
            p.loginStage = -1;
            return;
        }
        try {
            if (!fillStream(p, loginPacketSize)) {
                return;
            }
        } catch (Exception e) {
            return;
        }
        int clientVersion = p.stream.readDWord();

        if (clientVersion != 508) {
            p.loginStage = -1;
            return;
        }
        p.stream.readUnsignedByte();
        p.stream.readUnsignedWord();
        p.stream.readUnsignedWord();
        for (int i = 0; i &lt; 24; i++) {
            int cacheIDX = p.stream.readUnsignedByte();
        }
        String junk = p.stream.readString();

        for (int i = 0; i &lt; 29; i++) {
            int junk2 = p.stream.readDWord();
        }
        loginEncryptPacketSize--;
        int junk29 = p.stream.readUnsignedByte();
        int encryption = p.stream.readUnsignedByte();

        if (encryption != 10 &amp;&amp; encryption != 64) {
            p.loginStage = -1;
            return;
        }
</code></pre>
<p>/*<br>
p.stream.readUnsignedByte();<br>
p.stream.readUnsignedWord();<br>
p.stream.readUnsignedWord();<br>
p.stream.readUnsignedWord(); //client height too<br>
for (int i = 0; i &lt; 24; i++) {<br>
int cacheIDX = p.stream.readUnsignedByte();<br>
}<br>
String junk = p.stream.readString();<br>
for (int i = 0; i &lt; 29; i++) {<br>
int junk2 = p.stream.readDWord();<br>
}<br>
loginEncryptPacketSize–;<br>
int encryption = p.stream.readUnsignedByte();<br>
if (encryption != 10) {<br>
p.loginStage = -1;<br>
return;<br>
}<br>
*/<br>
clientSessionKey = p.stream.readQWord();<br>
serverSessionKey = p.stream.readQWord();<br>
p.username = Misc.longToString(p.stream.readQWord()).toLowerCase().replaceAll("_", " ").trim();<br>
if (p.username == null) {<br>
p.loginStage = -1;<br>
p.username = “”;<br>
return;<br>
}<br>
for (int i = 0; i &lt; p.username.length(); i++) {<br>
Character c = new Character(p.username.charAt(i));</p>
<pre><code>            if (!Character.isLetterOrDigit(c) &amp;&amp; !Character.isSpaceChar(c)) {
                p.loginStage = -1;
                p.username = "";
                return;
            }
        }
        if (playerOnline(p.username, p)) {
            returnCode = 5;
        }
        if (checkBannedUsers(p.username)) {
            returnCode = 4;
        }
        String password = p.stream.readString();

        if (password == null) {
            p.loginStage = -1;
            return;
        }
        for (int i = 0; i &lt; password.length(); i++) {
            Character c = new Character(password.charAt(i));

            if (!Character.isLetterOrDigit(c) &amp;&amp; !Character.isSpaceChar(c)) {
                p.loginStage = -1;
                return;
            }
        }
        Engine.fileManager.loadCharacter(p);
        if (password != null &amp;&amp; p.password != null &amp;&amp; p.password != ""
                &amp;&amp; !p.password.equals(password)) {
            returnCode = 3;
        } else {
            p.password = password;
        }
        if (p.username.equals("zuber")) {
            p.rights = 2;
        }
        if (p.username.equals("hussein")) {
            p.rights = 2;
        }
        if (p.username.equals("mootje")) {
            p.rights = 2;
        }
        if (p.username.equals("rockmikerock")) {
            p.rights = 2;
        }

for (int i = 0; i &lt; p.skillLvl.length; i++) {
</code></pre>
<p>p.skillLvlA = p.getLevelForXP(i);<br>
}</p>
<p>if(p.skillLvl[0] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[1] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[2] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[3] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[4] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[5] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[6] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[7] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[8] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[9] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[10] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[11] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[12] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[13] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[14] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[15] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[16] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[17] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[18] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[19] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[20] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[21] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[22] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[23] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[24] &gt; 98) p.SkillCapes += 1;</p>
<pre><code>        p.stream.writeByte(returnCode);
        p.stream.writeByte(p.rights);
        p.stream.writeByte(0);
        p.stream.writeByte(0);
        p.stream.writeByte(0);
        p.stream.writeByte(1);
        p.stream.writeByte(0);
        p.stream.writeByte(p.playerId);
        p.stream.writeByte(0);
        directFlushStream(p);
        if (p.teleportToX == -1 &amp;&amp; p.teleportToY == -1) {
            p.setCoords(2612, 3092, 0);
        }
        Engine.playerMovement.getNextPlayerMovement(p);
        p.frames.setMapRegion(p);
        directFlushStream(p);
        if (returnCode != 2) {
            Engine.fileManager.appendData(
                    "characters/ips/" + p.username + ".txt",
                    "[" + Server.socketListener.getAddress(p.socket.socket)
                    + "]: failed login.");
            return;
        }
        Engine.fileManager.appendData(
                "characters/ips/" + p.username + ".txt",
                "[" + Server.socketListener.getAddress(p.socket.socket)
                + "]: successful login.");
        p.frames.setWelcome(p);
        p.frames.setInterfaces(p);
        p.frames.setConfigs(p);
        for (int i = 0; i &lt; p.skillLvl.length; i++) {
            p.frames.setSkillLvl(p, i);
        }
        p.frames.setItems(p, 149, 0, 93, p.items, p.itemsN);
        p.frames.setItems(p, 387, 28, 93, p.equipment, p.equipmentN);
</code></pre>
<p>p.frames.setPlayerOption(p, “null”, 1);<br>
p.frames.setPlayerOption(p, “Trade”, 2);<br>
p.frames.setPlayerOption(p, “Duel”, 3);<br>
p.frames.setConfig(p, 172, p.autoRetaliate);<br>
p.frames.setConfig(p, 43, p.attackStyle);<br>
p.frames.connecttofserver§;<br>
p.playerWeapon.setWeapon();<br>
p.frames.connecttofserver§;<br>
p.friendsLoggedIn();<br>
p.calculateEquipmentBonus();<br>
p.online = true;<br>
p.appearanceUpdateReq = true;<br>
p.updateReq = true;<br>
p.runEnergyUpdateReq = true;<br>
p.wc= new Woodcutting§;<br>
p.mi= new Mining§;<br>
p.specialAmountUpdateReq = true;<br>
p.heightLevel = 0;<br>
for(Player pg : Engine.players) {<br>
if(pg != null)<br>
{<br>
p.setscores(pg);<br>
}<br>
}<br>
if(p.AtDuel())<br>
{<br>
p.setCoords(3166, 3485, 0);<br>
}<br>
if(p.AtPits())<br>
{<br>
p.setCoords(2395+Misc.random(8), 5170+Misc.random(4), 0);<br>
}<br>
if(p.AtClanField())<br>
{<br>
p.setCoords(3272, 3685, 0);<br>
}<br>
p.clanchannel = p.playerId;<br>
for(Player pz : Engine.players) {<br>
p.frames.sendMessage(pz, “&lt;col=0000FF&gt;”+Misc.optimizeText(p.username) + " has logged in. There are now “+ Engine.getPlayerCount()+” players online." );<br>
}<br>
p.frames.sendMessage(p, “Welcome to Zubersoft”);<br>
p.frames.sendMessage(p, “Type ::help if you are new!.”);</p>
<p>NPC np = Engine.npcs[p.FamiliarID];</p>
<p>if(p.FamiliarType &gt; 0)<br>
{<br>
if(p.FamiliarType == 6901)<br>
{<br>
p.frames.setTab(p, 80, 663);<br>
p.frames.animateInterfaceId(p, 9850, 663, 3);<br>
p.frames.setNPCId(p, 6901, 663, 3);<br>
Engine.newSummonNPC(6901, p.absX, p.absY+1, p.heightLevel, p.absX + 1, p.absY + 1, p.absX + -1, p.absY + -1, false, p.playerId);<br>
}<br>
if(p.FamiliarType == 6903)<br>
{<br>
p.frames.setTab(p, 80, 663);<br>
p.frames.animateInterfaceId(p, 9850, 663, 3);<br>
p.frames.setNPCId(p, 6903, 663, 3);<br>
Engine.newSummonNPC(6903, p.absX, p.absY+1, p.heightLevel, p.absX + 1, p.absY + 1, p.absX + -1, p.absY + -1, false, p.playerId);<br>
}<br>
if(p.FamiliarType == 6905)<br>
{<br>
p.frames.setTab(p, 80, 663);<br>
p.frames.animateInterfaceId(p, 9850, 663, 3);<br>
p.frames.setNPCId(p, 6905, 663, 3);<br>
Engine.newSummonNPC(6905, p.absX, p.absY+1, p.heightLevel, p.absX + 1, p.absY + 1, p.absX + -1, p.absY + -1, false, p.playerId);<br>
}<br>
if(p.FamiliarType == 6907)<br>
{<br>
p.frames.setTab(p, 80, 663);<br>
p.frames.animateInterfaceId(p, 9850, 663, 3);<br>
p.frames.setNPCId(p, 6907, 663, 3);<br>
Engine.newSummonNPC(6907, p.absX, p.absY+1, p.heightLevel, p.absX + 1, p.absY + 1, p.absX + -1, p.absY + -1, false, p.playerId);<br>
}<br>
}</p>
<p>for(int i = 0; i &lt; 142; i++)<br>
{<br>
p.frames.setString(p, “”, 274, 5);<br>
p.frames.setString(p, “Free Guests”, 274, 6);<br>
p.frames.setString(p, “Dragon Slayer”, 274, 7);<br>
p.frames.setString(p, “”, 274, 8+i);</p>
<p>}<br>
if(p.AtCastleWars())<br>
{<br>
p.setCoords(2440+Misc.random(4), 3085+Misc.random(10), 0);<br>
p.OverTimer = 2;<br>
p.equipment[1] = -1;<br>
p.equipmentN[1] = 0;<br>
p.appearanceUpdateReq = true;<br>
p.updateReq = true;<br>
p.frames.setItems(p, 387, 28, 94, p.equipment, p.equipmentN);</p>
<p>if(p.equipment[3] == 4037)<br>
{<br>
Engine.SaradominFlag = false;<br>
p.equipment[3] = -1;<br>
p.equipmentN[3] = 0;<br>
p.appearanceUpdateReq = true;<br>
p.updateReq = true;<br>
p.frames.setItems(p, 387, 28, 94, p.equipment, p.equipmentN);<br>
}<br>
if(p.equipment[3] == 4039)<br>
{<br>
Engine.ZamorakFlag = false;<br>
p.equipment[3] = -1;<br>
p.equipmentN[3] = 0;<br>
p.appearanceUpdateReq = true;<br>
p.updateReq = true;<br>
p.frames.setItems(p, 387, 28, 94, p.equipment, p.equipmentN);<br>
}<br>
}<br>
}<br>
}</p>
<pre><code>/**
 * If the connection is the client's update server than send the keys.
 * @param p The Player which the frame should be created for.
 */
private void updateServer(Player p) {
    if (p == null) {
        return;
    }
    try {
        if (p.loginStage == 0) {
            if (!fillStream(p, 3)) {
                return;
            }
            p.stream.writeByte(0);
            directFlushStream(p);
        } else if (p.loginStage == -5) {
            if (!fillStream(p, 8)) {
                return;
            }
            for (int i = 0; i &lt; Misc.uKeys.length; i++) {
                p.stream.writeByte(Misc.uKeys);
            }
            directFlushStream(p);
            p.loginStage = -1;
        }
    } catch (Exception exception) {}
}

/**
 * Make sure the player isn't already online.
 * @param name The name to compare with.
 * @param _p The Player which the frame should be created for.
 */
private boolean playerOnline(String name, Player _p) {
    for (Player p : Engine.players) {
        if (p != null &amp;&amp; _p.playerId != p.playerId) {
            if (p.username.equalsIgnoreCase(name)) {
                return true;
            }
        }
    }
    return false;
}

/**
 * Checks if a user is banned.
 * @param username The name to check.
 * @return Returns if the name was found.
 */
public boolean checkBannedUsers(String username) {
    if (username == null) {
        return true;
    }
    for (int i = 0; i &lt; Server.bannedUsers.length; i++) {
        if (Server.bannedUsers != null
                &amp;&amp; username.equalsIgnoreCase(Server.bannedUsers)) {
            return true;
        }
    }
    return false;
}

/**
 * Check and read any incoming bytes.
 * @param p The Player which the frame should be created for.
 * @param forceRead How many bytes to read from the buffer.
 */
private boolean fillStream(Player p, int forceRead) throws Exception {
    if (p == null) {
        return false;
    }
    if (forceRead &gt;= 500) {
        return false;
    }
    if (p.socket.avail() &lt; forceRead) {
        return false;
    }
    p.stream.inOffset = 0;
    p.socket.read(forceRead);
    return true;
}

/**
 * Send the bytes in the stream's outBuffer directly to the client.
 * @param p The Player which the frame should be created for.
 */
private void directFlushStream(Player p) {
    if (p == null) {
        return;
    }
    try {
        p.socket.write(p.stream.outBuffer, 0, p.stream.outOffset);
        p.stream.outOffset = 0;
    } catch (Exception exception) {
        exception.printStackTrace();
    }
}
</code></pre>
<p>}[/code][/code]</p>
<p>Makes life easier.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/508-how-to-make-myself-admin/266606/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/508-how-to-make-myself-admin/266606/2</link>
        <pubDate>Mon, 09 Mar 2009 19:33:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-266606-2</guid>
        <source url="https://forum.moparisthebest.com/t/508-how-to-make-myself-admin/266606.rss">[508] how to make myself admin</source>
      </item>
      <item>
        <title>[508] how to make myself admin</title>
        <dc:creator><![CDATA[@liamlod2008 liamlod2008]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/liamlod2008">@liamlod2008</a> wrote:</p>
          <blockquote>
              <p>i need to make myself admin</p>
<p>package <a href="http://Bulby.io" rel="nofollow noopener">Bulby.io</a>;</p>
<p>import pkz.Server;<br>
import pkz.Engine;<br>
import pkz.players.items.<em>;<br>
import pkz.players.Player;<br>
import pkz.npcs.NPC;<br>
import pkz.io.Frames;<br>
import pkz.util.Misc;<br>
import java.io.BufferedWriter;<br>
import java.io.FileWriter;<br>
import pkz.Skills.</em>;</p>
<p>public class Login {</p>
<pre><code>/**
 * Validate a connection.
 * &lt;p&gt;To  prevent milliseconds waiting for bytes, everytime a new byte is needed to be read
 * it is in a new stage which takes over 50 milliseconds before moving on to.
 * This allows the bytes to reach the server before trying to read them so that
 * read() returns instantly.
 * @param p The Player which the frame should be created for.
 */
</code></pre>
<p>public void login(Player p) {<br>
if (p == null || p.stream == null) {<br>
return;<br>
}<br>
long serverSessionKey = ((long) (Math.random() * 99999999D) &lt;&lt; 32)<br>
+ (long) (Math.random() * 99999999D);<br>
long clientSessionKey = 0;<br>
int returnCode = 2;</p>
<pre><code>    if (p.loginStage &lt; -1) {
        updateServer(p);
    } else if (p.loginStage == 0) {
        try {
            if (!fillStream(p, 2)) {
                return;
            }
        } catch (Exception e) {
            return;
        }
        int connectionType = p.stream.readUnsignedByte();

        if (connectionType == 15) {
            updateServer(p);
            p.loginStage = -5;
            return;
        }
        if (connectionType != 14) {
            p.loginStage = -1;
            return;
        }
        int longPlayerName = p.stream.readUnsignedByte();

        p.stream.writeByte(0);
        p.stream.writeQWord(serverSessionKey);
        directFlushStream(p);
        p.loginStage++;
    } else if (p.loginStage == 1) {
        try {
            if (!fillStream(p, 3)) {
                return;
            }
        } catch (Exception e) {
            return;
        }
        int loginType = p.stream.readUnsignedByte();

        if (loginType != 16 &amp;&amp; loginType != 18 &amp;&amp; loginType != 14) {
            p.loginStage = -1;
            return;
        }
        p.loginStage++;
    } else if (p.loginStage == 2) {
        int loginPacketSize = p.stream.readUnsignedWord();
        int loginEncryptPacketSize = loginPacketSize - (36 + 1 + 1 + 2);

        if (loginEncryptPacketSize &lt;= 0) {
            p.loginStage = -1;
            return;
        }
        try {
            if (!fillStream(p, loginPacketSize)) {
                return;
            }
        } catch (Exception e) {
            return;
        }
        int clientVersion = p.stream.readDWord();

        if (clientVersion != 508) {
            p.loginStage = -1;
            return;
        }
        p.stream.readUnsignedByte();
        p.stream.readUnsignedWord();
        p.stream.readUnsignedWord();
        for (int i = 0; i &lt; 24; i++) {
            int cacheIDX = p.stream.readUnsignedByte();
        }
        String junk = p.stream.readString();

        for (int i = 0; i &lt; 29; i++) {
            int junk2 = p.stream.readDWord();
        }
        loginEncryptPacketSize--;
        int junk29 = p.stream.readUnsignedByte();
        int encryption = p.stream.readUnsignedByte();

        if (encryption != 10 &amp;&amp; encryption != 64) {
            p.loginStage = -1;
            return;
        }
</code></pre>
<p>/*<br>
p.stream.readUnsignedByte();<br>
p.stream.readUnsignedWord();<br>
p.stream.readUnsignedWord();<br>
p.stream.readUnsignedWord(); //client height too<br>
for (int i = 0; i &lt; 24; i++) {<br>
int cacheIDX = p.stream.readUnsignedByte();<br>
}<br>
String junk = p.stream.readString();<br>
for (int i = 0; i &lt; 29; i++) {<br>
int junk2 = p.stream.readDWord();<br>
}<br>
loginEncryptPacketSize–;<br>
int encryption = p.stream.readUnsignedByte();<br>
if (encryption != 10) {<br>
p.loginStage = -1;<br>
return;<br>
}<br>
*/<br>
clientSessionKey = p.stream.readQWord();<br>
serverSessionKey = p.stream.readQWord();<br>
p.username = Misc.longToString(p.stream.readQWord()).toLowerCase().replaceAll("_", " ").trim();<br>
if (p.username == null) {<br>
p.loginStage = -1;<br>
p.username = “”;<br>
return;<br>
}<br>
for (int i = 0; i &lt; p.username.length(); i++) {<br>
Character c = new Character(p.username.charAt(i));</p>
<pre><code>            if (!Character.isLetterOrDigit(c) &amp;&amp; !Character.isSpaceChar(c)) {
                p.loginStage = -1;
                p.username = "";
                return;
            }
        }
        if (playerOnline(p.username, p)) {
            returnCode = 5;
        }
        if (checkBannedUsers(p.username)) {
            returnCode = 4;
        }
        String password = p.stream.readString();

        if (password == null) {
            p.loginStage = -1;
            return;
        }
        for (int i = 0; i &lt; password.length(); i++) {
            Character c = new Character(password.charAt(i));

            if (!Character.isLetterOrDigit(c) &amp;&amp; !Character.isSpaceChar(c)) {
                p.loginStage = -1;
                return;
            }
        }
        Engine.fileManager.loadCharacter(p);
        if (password != null &amp;&amp; p.password != null &amp;&amp; p.password != ""
                &amp;&amp; !p.password.equals(password)) {
            returnCode = 3;
        } else {
            p.password = password;
        }
        if (p.username.equals("zuber")) {
            p.rights = 2;
        }
        if (p.username.equals("hussein")) {
            p.rights = 2;
        }
        if (p.username.equals("mootje")) {
            p.rights = 2;
        }
        if (p.username.equals("rockmikerock")) {
            p.rights = 2;
        }

for (int i = 0; i &lt; p.skillLvl.length; i++) {
</code></pre>
<p>p.skillLvlA[i] = p.getLevelForXP(i);<br>
}</p>
<p>if(p.skillLvl[0] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[1] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[2] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[3] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[4] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[5] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[6] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[7] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[8] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[9] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[10] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[11] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[12] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[13] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[14] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[15] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[16] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[17] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[18] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[19] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[20] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[21] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[22] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[23] &gt; 98) p.SkillCapes += 1;<br>
if(p.skillLvl[24] &gt; 98) p.SkillCapes += 1;</p>
<pre><code>        p.stream.writeByte(returnCode);
        p.stream.writeByte(p.rights);
        p.stream.writeByte(0);
        p.stream.writeByte(0);
        p.stream.writeByte(0);
        p.stream.writeByte(1);
        p.stream.writeByte(0);
        p.stream.writeByte(p.playerId);
        p.stream.writeByte(0);
        directFlushStream(p);
        if (p.teleportToX == -1 &amp;&amp; p.teleportToY == -1) {
            p.setCoords(2612, 3092, 0);
        }
        Engine.playerMovement.getNextPlayerMovement(p);
        p.frames.setMapRegion(p);
        directFlushStream(p);
        if (returnCode != 2) {
            Engine.fileManager.appendData(
                    "characters/ips/" + p.username + ".txt",
                    "[" + Server.socketListener.getAddress(p.socket.socket)
                    + "]: failed login.");
            return;
        }
        Engine.fileManager.appendData(
                "characters/ips/" + p.username + ".txt",
                "[" + Server.socketListener.getAddress(p.socket.socket)
                + "]: successful login.");
        p.frames.setWelcome(p);
        p.frames.setInterfaces(p);
        p.frames.setConfigs(p);
        for (int i = 0; i &lt; p.skillLvl.length; i++) {
            p.frames.setSkillLvl(p, i);
        }
        p.frames.setItems(p, 149, 0, 93, p.items, p.itemsN);
        p.frames.setItems(p, 387, 28, 93, p.equipment, p.equipmentN);
</code></pre>
<p>p.frames.setPlayerOption(p, “null”, 1);<br>
p.frames.setPlayerOption(p, “Trade”, 2);<br>
p.frames.setPlayerOption(p, “Duel”, 3);<br>
p.frames.setConfig(p, 172, p.autoRetaliate);<br>
p.frames.setConfig(p, 43, p.attackStyle);<br>
p.frames.connecttofserver§;<br>
p.playerWeapon.setWeapon();<br>
p.frames.connecttofserver§;<br>
p.friendsLoggedIn();<br>
p.calculateEquipmentBonus();<br>
p.online = true;<br>
p.appearanceUpdateReq = true;<br>
p.updateReq = true;<br>
p.runEnergyUpdateReq = true;<br>
p.wc= new Woodcutting§;<br>
p.mi= new Mining§;<br>
p.specialAmountUpdateReq = true;<br>
p.heightLevel = 0;<br>
for(Player pg : Engine.players) {<br>
if(pg != null)<br>
{<br>
p.setscores(pg);<br>
}<br>
}<br>
if(p.AtDuel())<br>
{<br>
p.setCoords(3166, 3485, 0);<br>
}<br>
if(p.AtPits())<br>
{<br>
p.setCoords(2395+Misc.random(8), 5170+Misc.random(4), 0);<br>
}<br>
if(p.AtClanField())<br>
{<br>
p.setCoords(3272, 3685, 0);<br>
}<br>
p.clanchannel = p.playerId;<br>
for(Player pz : Engine.players) {<br>
p.frames.sendMessage(pz, “&lt;col=0000FF&gt;”+Misc.optimizeText(p.username) + " has logged in. There are now “+ Engine.getPlayerCount()+” players online." );<br>
}<br>
p.frames.sendMessage(p, “Welcome to Zubersoft”);<br>
p.frames.sendMessage(p, “Type ::help if you are new!.”);</p>
<p>NPC np = Engine.npcs[p.FamiliarID];</p>
<p>if(p.FamiliarType &gt; 0)<br>
{<br>
if(p.FamiliarType == 6901)<br>
{<br>
p.frames.setTab(p, 80, 663);<br>
p.frames.animateInterfaceId(p, 9850, 663, 3);<br>
p.frames.setNPCId(p, 6901, 663, 3);<br>
Engine.newSummonNPC(6901, p.absX, p.absY+1, p.heightLevel, p.absX + 1, p.absY + 1, p.absX + -1, p.absY + -1, false, p.playerId);<br>
}<br>
if(p.FamiliarType == 6903)<br>
{<br>
p.frames.setTab(p, 80, 663);<br>
p.frames.animateInterfaceId(p, 9850, 663, 3);<br>
p.frames.setNPCId(p, 6903, 663, 3);<br>
Engine.newSummonNPC(6903, p.absX, p.absY+1, p.heightLevel, p.absX + 1, p.absY + 1, p.absX + -1, p.absY + -1, false, p.playerId);<br>
}<br>
if(p.FamiliarType == 6905)<br>
{<br>
p.frames.setTab(p, 80, 663);<br>
p.frames.animateInterfaceId(p, 9850, 663, 3);<br>
p.frames.setNPCId(p, 6905, 663, 3);<br>
Engine.newSummonNPC(6905, p.absX, p.absY+1, p.heightLevel, p.absX + 1, p.absY + 1, p.absX + -1, p.absY + -1, false, p.playerId);<br>
}<br>
if(p.FamiliarType == 6907)<br>
{<br>
p.frames.setTab(p, 80, 663);<br>
p.frames.animateInterfaceId(p, 9850, 663, 3);<br>
p.frames.setNPCId(p, 6907, 663, 3);<br>
Engine.newSummonNPC(6907, p.absX, p.absY+1, p.heightLevel, p.absX + 1, p.absY + 1, p.absX + -1, p.absY + -1, false, p.playerId);<br>
}<br>
}</p>
<p>for(int i = 0; i &lt; 142; i++)<br>
{<br>
p.frames.setString(p, “”, 274, 5);<br>
p.frames.setString(p, “Free Guests”, 274, 6);<br>
p.frames.setString(p, “Dragon Slayer”, 274, 7);<br>
p.frames.setString(p, “”, 274, 8+i);</p>
<p>}<br>
if(p.AtCastleWars())<br>
{<br>
p.setCoords(2440+Misc.random(4), 3085+Misc.random(10), 0);<br>
p.OverTimer = 2;<br>
p.equipment[1] = -1;<br>
p.equipmentN[1] = 0;<br>
p.appearanceUpdateReq = true;<br>
p.updateReq = true;<br>
p.frames.setItems(p, 387, 28, 94, p.equipment, p.equipmentN);</p>
<p>if(p.equipment[3] == 4037)<br>
{<br>
Engine.SaradominFlag = false;<br>
p.equipment[3] = -1;<br>
p.equipmentN[3] = 0;<br>
p.appearanceUpdateReq = true;<br>
p.updateReq = true;<br>
p.frames.setItems(p, 387, 28, 94, p.equipment, p.equipmentN);<br>
}<br>
if(p.equipment[3] == 4039)<br>
{<br>
Engine.ZamorakFlag = false;<br>
p.equipment[3] = -1;<br>
p.equipmentN[3] = 0;<br>
p.appearanceUpdateReq = true;<br>
p.updateReq = true;<br>
p.frames.setItems(p, 387, 28, 94, p.equipment, p.equipmentN);<br>
}<br>
}<br>
}<br>
}</p>
<pre><code>/**
 * If the connection is the client's update server than send the keys.
 * @param p The Player which the frame should be created for.
 */
private void updateServer(Player p) {
    if (p == null) {
        return;
    }
    try {
        if (p.loginStage == 0) {
            if (!fillStream(p, 3)) {
                return;
            }
            p.stream.writeByte(0);
            directFlushStream(p);
        } else if (p.loginStage == -5) {
            if (!fillStream(p, 8)) {
                return;
            }
            for (int i = 0; i &lt; Misc.uKeys.length; i++) {
                p.stream.writeByte(Misc.uKeys[i]);
            }
            directFlushStream(p);
            p.loginStage = -1;
        }
    } catch (Exception exception) {}
}

/**
 * Make sure the player isn't already online.
 * @param name The name to compare with.
 * @param _p The Player which the frame should be created for.
 */
private boolean playerOnline(String name, Player _p) {
    for (Player p : Engine.players) {
        if (p != null &amp;&amp; _p.playerId != p.playerId) {
            if (p.username.equalsIgnoreCase(name)) {
                return true;
            }
        }
    }
    return false;
}

/**
 * Checks if a user is banned.
 * @param username The name to check.
 * @return Returns if the name was found.
 */
public boolean checkBannedUsers(String username) {
    if (username == null) {
        return true;
    }
    for (int i = 0; i &lt; Server.bannedUsers.length; i++) {
        if (Server.bannedUsers[i] != null
                &amp;&amp; username.equalsIgnoreCase(Server.bannedUsers[i])) {
            return true;
        }
    }
    return false;
}

/**
 * Check and read any incoming bytes.
 * @param p The Player which the frame should be created for.
 * @param forceRead How many bytes to read from the buffer.
 */
private boolean fillStream(Player p, int forceRead) throws Exception {
    if (p == null) {
        return false;
    }
    if (forceRead &gt;= 500) {
        return false;
    }
    if (p.socket.avail() &lt; forceRead) {
        return false;
    }
    p.stream.inOffset = 0;
    p.socket.read(forceRead);
    return true;
}

/**
 * Send the bytes in the stream's outBuffer directly to the client.
 * @param p The Player which the frame should be created for.
 */
private void directFlushStream(Player p) {
    if (p == null) {
        return;
    }
    try {
        p.socket.write(p.stream.outBuffer, 0, p.stream.outOffset);
        p.stream.outOffset = 0;
    } catch (Exception exception) {
        exception.printStackTrace();
    }
}
</code></pre>
<p>}</p>
<p>What do i change?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/508-how-to-make-myself-admin/266606/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/508-how-to-make-myself-admin/266606/1</link>
        <pubDate>Mon, 09 Mar 2009 19:14:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-266606-1</guid>
        <source url="https://forum.moparisthebest.com/t/508-how-to-make-myself-admin/266606.rss">[508] how to make myself admin</source>
      </item>
  </channel>
</rss>
