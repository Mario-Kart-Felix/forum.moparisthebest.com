<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[Source] New POST-Deobber</title>
    <link>https://forum.moparisthebest.com/t/source-new-post-deobber/91823</link>
    <description>I&#39;ve written a post-deobber, mainly to be able to clean part of the obfuscated code, and to practise some Regex :)
Something like this might exist already, or it might not.

In any case, currently it does:

[UPDATED*]

*** XOR syntax ***

-Simplify (a ^ 0xffffffff &gt; b ^ 0xffffffff) expressions in conditionals.
-Simplify (a ^ 0xffffffff &gt; b ^ 0xffffffff) expressions in loops.

[b]-Simplify (a ^ 0xffffffff &gt; b) expressions in coditionals.
-Simplify (a ^ 0xffffffff &gt; b) expressions in loops.[/b]

*** SHIFT syntax *** (Untested)

-Simplify ( ~a &gt; ~b ) expressions in conditionals.
-Simplify ( ~a &gt; ~b ) expressions in loops.

We could consider it to be currently experimental though, so be careful :)
I will probably add a few more transforms once I have time

The source is in Managed C++ (aka C++/CLI), compilable under .NET

To create ZPostDeobber.exe:
[code]
/* ZPostDeobber.cpp */
/* AUTHOR: Duther (aka zstars) */
/* Copyright (C) 2007 */

#include &lt;fstream&gt;
#include &lt;stdio.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;string&gt;
#include &lt;iostream&gt;

using namespace std;

#using &quot;system.dll&quot;

using namespace System;
using namespace System::Text::RegularExpressions;


int main(int argc, char *argv[])
{
	int ret; 
	struct stat stt;
	std::string filepath;

	if(!argc || argc != 2)
	{
		System::Console::WriteLine(&quot;Usage:\nZPostDeobber &lt;filepath&gt;\n-credits\n-specify\n\n&quot;);
		return 1;
	}

	if(strcmp(argv[1], &quot;-credits&quot;) == 0)
	{
		System::Console::WriteLine(&quot;ZPostDeobber v0.2 made by Duther, aka zstars.&quot;);
		return 0;
	}

	if(strcmp(argv[1], &quot;-specify&quot;) == 0)
	{
		System::Console::WriteLine(&quot;Insert the file path:\n&quot;);
		cin &gt;&gt; filepath;
	}

	else
	{
		filepath = argv[1];
	}

	ret = stat(filepath.c_str(), &amp;stt);
	if(ret || !stt.st_size )
	{
		Console::WriteLine(&quot;File does not exist&quot;);
		return 1;
	}

	ifstream fin(filepath.c_str());
	if(!fin)
	{
		Console::WriteLine(&quot;Could not open file&quot;);
		return 1;
	}

	char * filebuf = new char [ stt.st_size ];
	memset(filebuf, 0, stt.st_size);
	fin.read(filebuf, stt.st_size);
	fin.close();

	Regex^ reg;
	String^ file = gcnew String(filebuf);


	/* Conditionals and loops - XOR syntax */
	// Four items, greater than.
	String^ pattern = gcnew String( &quot;\\([\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s]*\\^[\\s]*(?:0[xX]ffffffff|0[xX]FFFFFFFF)[\\s]*\\)[\\s]*&gt;[\\s]*\\([\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s]*\^[\\s]*(?:0[xX]ffffffff|0[xX]FFFFFFFF)[\\s]*\\)[\\s]*&quot; );
	String^ rep = gcnew String(&quot;$1 &lt; $2&quot;);
	file = reg-&gt;Replace(file, pattern, rep);

	// Four items, lesser than.
	pattern = ( &quot;\\([\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s]*\\^[\\s]*(?:0[xX]ffffffff|0[xX]FFFFFFFF)[\\s]*\\)[\\s]*&lt;[\\s]*\\([\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s]*\^[\\s]*(?:0[xX]ffffffff|0[xX]FFFFFFFF)[\\s]*\\)[\\s]*&quot; );
	rep = (&quot;$1 &gt; $2&quot;);
	file = reg-&gt;Replace(file, pattern, rep);

	// Four items, equal or greater than.
	pattern = ( &quot;\\([\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s]*\\^[\\s]*(?:0[xX]ffffffff|0[xX]FFFFFFFF)[\\s]*\\)[\\s]*&gt;=[\\s]*\\([\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s]*\^[\\s]*(?:0[xX]ffffffff|0[xX]FFFFFFFF)[\\s]*\\)[\\s]*&quot; );
	rep = (&quot;$1 &lt;= $2&quot;);
	file = reg-&gt;Replace(file, pattern, rep);

	// Four items, equal or lesser than.
	pattern = ( &quot;\\([\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s]*\\^[\\s]*(?:0[xX]ffffffff|0[xX]FFFFFFFF)[\\s]*\\)[\\s]*&lt;=[\\s]*\\([\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s]*\^[\\s]*(?:0[xX]ffffffff|0[xX]FFFFFFFF)[\\s]*\\)[\\s]*&quot; );
	rep = (&quot;$1 &gt;= $2&quot;);
	file = reg-&gt;Replace(file, pattern, rep);

	/* Conditionals and loops - SHIFT syntax */ // Untested
	pattern = ( &quot;\\([\(\\s]*~[\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s\\)]*&gt;[\\s\\(]*~[\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)\\)&quot; );
	rep = (&quot;$1 &lt; $2&quot;);
	file = reg-&gt;Replace(file, pattern, rep);

	pattern = ( &quot;\\([\(\\s]*~[\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s\\)]*&lt;[\\s\\(]*~[\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)\\)&quot; );
	rep = (&quot;$1 &gt; $2&quot;);
	file = reg-&gt;Replace(file, pattern, rep);

	pattern = ( &quot;\\([\(\\s]*~[\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s\\)]*&lt;=[\\s\\(]*~[\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)\\)&quot; );
	rep = (&quot;$1 &gt;= $2&quot;);
	file = reg-&gt;Replace(file, pattern, rep);

	pattern = ( &quot;\\([\(\\s]*~[\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s\\)]*&gt;=[\\s\\(]*~[\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)\\)&quot; );
	rep = (&quot;$1 &lt;= $2&quot;);
	file = reg-&gt;Replace(file, pattern, rep);


	/* Shifted Constant - XOR syntax */

	{pattern = ( &quot;\\([\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s]*\\^[\\s]*(?:0[xX]ffffffff|0[xX]FFFFFFFF)[\\s]*\\)[\\s]*&gt;[\\s\\(]*(-?[\\s]*[0-9]*)[\\s]*\\)&quot; );
	MatchCollection^ matches = reg-&gt;Matches(file, pattern);
   
	// Could be done without copy pasting and without ugly placed curly brackets, but 
	// not like it matters...
	for each (Match^ match in matches)
	{
      String^ word1 = match-&gt;Groups[1]-&gt;Value;
	  String^ word2 = match-&gt;Groups[2]-&gt;Value;
      int index = match-&gt;Index;
	  int length = match-&gt;Length;

	  int val = System::Convert::ToInt32(word2, 10);
	  val = ~val;

	  String^ word_shifted = System::Convert::ToString(val);
	  String^ final = gcnew String(&quot; &quot;);
	  final += word1;
	  final += &quot; &lt; &quot;;
	  final += word_shifted;
	  final += &quot; ) &quot;;

	  file = file-&gt;Remove(index, length);
	  file = file-&gt;Insert(index, final);
	}}


	{pattern = ( &quot;\\([\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s]*\\^[\\s]*(?:0[xX]ffffffff|0[xX]FFFFFFFF)[\\s]*\\)[\\s]*&lt;[\\s\\(]*(-?[\\s]*[0-9]*)[\\s]*\\)&quot; );
	MatchCollection^ matches = reg-&gt;Matches(file, pattern);
   
	for each (Match^ match in matches)
	{
      String^ word1 = match-&gt;Groups[1]-&gt;Value;
	  String^ word2 = match-&gt;Groups[2]-&gt;Value;
      int index = match-&gt;Index;
	  int length = match-&gt;Length;

	  int val = System::Convert::ToInt32(word2, 10);
	  val = ~val;

	  String^ word_shifted = System::Convert::ToString(val);
	  String^ final = gcnew String(&quot; &quot;);
	  final += word1;
	  final += &quot; &gt; &quot;;
	  final += word_shifted;
	  final += &quot; ) &quot;;

	  file = file-&gt;Remove(index, length);
	  file = file-&gt;Insert(index, final);
	}}

	
	{pattern = ( &quot;\\([\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s]*\\^[\\s]*(?:0[xX]ffffffff|0[xX]FFFFFFFF)[\\s]*\\)[\\s]*&gt;=[\\s\\(]*(-?[\\s]*[0-9]*)[\\s]*\\)&quot; );
	MatchCollection^ matches = reg-&gt;Matches(file, pattern);
   
	for each (Match^ match in matches)
	{
      String^ word1 = match-&gt;Groups[1]-&gt;Value;
	  String^ word2 = match-&gt;Groups[2]-&gt;Value;
      int index = match-&gt;Index;
	  int length = match-&gt;Length;

	  int val = System::Convert::ToInt32(word2, 10);
	  val = ~val;

	  String^ word_shifted = System::Convert::ToString(val);
	  String^ final = gcnew String(&quot; &quot;);
	  final += word1;
	  final += &quot; &lt;= &quot;;
	  final += word_shifted;
	  final += &quot; ) &quot;;

	  file = file-&gt;Remove(index, length);
	  file = file-&gt;Insert(index, final);
	}}

	{pattern = ( &quot;\\([\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s]*\\^[\\s]*(?:0[xX]ffffffff|0[xX]FFFFFFFF)[\\s]*\\)[\\s]*&lt;=[\\s\\(]*(-?[\\s]*[0-9]*)[\\s]*\\)&quot; );
	MatchCollection^ matches = reg-&gt;Matches(file, pattern);
   
	for each (Match^ match in matches)
	{
      String^ word1 = match-&gt;Groups[1]-&gt;Value;
	  String^ word2 = match-&gt;Groups[2]-&gt;Value;
      int index = match-&gt;Index;
	  int length = match-&gt;Length;

	  int val = System::Convert::ToInt32(word2, 10);
	  val = ~val;

	  String^ word_shifted = System::Convert::ToString(val);
	  String^ final = gcnew String(&quot; &quot;);
	  final += word1;
	  final += &quot; &gt; &quot;;
	  final += word_shifted;
	  final += &quot; ) &quot;;

	  file = file-&gt;Remove(index, length);
	  file = file-&gt;Insert(index, final);
	}}


	file = file-&gt;Insert(0, &quot;/* File post-deobbed using Duther&#39;s (aka zstars) ZPostDeobber v0.1 */\n&quot;);


	Console::WriteLine(file);
	return 0;
}
[/code]

Those are also needed:

deob.bat
[code]
@echo off
title Duther&#39;s (aka zstars) post-deobber
echo Welcome to ZPostDeobber!
echo Current version is 0.1 BETA (Experimental).
echo.
echo A backup of each file will be created. Do not run this again if something went wrong.
echo.
echo Starting post-deobbing process...
echo.

if exist *.bck del *.bck

for %%x in (*.java) do auxb.bat %%x

echo Congratulations. Post-Deobbing done. Check that everything went well before running this again or deleting .dbk files.

pause
[/code]

auxb.bat
[code]
@echo off
echo Post-Deobbing %1
ZPostDeobber %1 &gt; temp.deo
echo Saving backup
rename %1 %1.bck
echo Replacing original with deob
rename temp.deo %1
echo Done
echo.
[/code]


Instructions:
&lt;blockquote&gt;-Build ZPostDeobber.exe
-Copy ZPostDeobber.exe, deob.bat and auxb.bat to the folder where your .java source files are.
-Run deob.bat

KNOWN BUGS:
-Deob.bat closes abruptly. Still works though.&lt;/blockquote&gt;

Please report any problems, bugs, or suggestions, thank you :)
Also note that, as I said, it hasn&#39;t been thoroughly tested, so make sure to backup before doing it.

Edit: Ops, fixed a couple of them, forgot to change them when I copy pasted.
       Note also that due to another one, for loops won&#39;t necessarily be deobbed.

*Version 0.1: Basic transforms (XOR syntax)
*Version 0.2: 
   Added SHIFT basic transforms.
   Added couple XOR syntax more complex transforms.</description>
    
    <lastBuildDate>Fri, 11 May 2007 04:40:07 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/source-new-post-deobber/91823.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[Source] New POST-Deobber</title>
        <dc:creator><![CDATA[@pplsuqbawlz pplsuqbawlz]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pplsuqbawlz">@pplsuqbawlz</a> wrote:</p>
          <blockquote>
              <p>Ohemhgee? GCC GCC!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/source-new-post-deobber/91823/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/source-new-post-deobber/91823/16</link>
        <pubDate>Fri, 11 May 2007 04:40:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-91823-16</guid>
        <source url="https://forum.moparisthebest.com/t/source-new-post-deobber/91823.rss">[Source] New POST-Deobber</source>
      </item>
      <item>
        <title>[Source] New POST-Deobber</title>
        <dc:creator><![CDATA[@Cheese_Police c|p]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cheese_police">@Cheese_Police</a> wrote:</p>
          <blockquote>
              <p>ew .net</p>
<p>/shame on you for not using ISO c</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/source-new-post-deobber/91823/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/source-new-post-deobber/91823/15</link>
        <pubDate>Fri, 11 May 2007 03:05:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-91823-15</guid>
        <source url="https://forum.moparisthebest.com/t/source-new-post-deobber/91823.rss">[Source] New POST-Deobber</source>
      </item>
      <item>
        <title>[Source] New POST-Deobber</title>
        <dc:creator><![CDATA[@zstars zstars]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zstars">@zstars</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="13" data-topic="91823">
<div class="title">
<div class="quote-controls"></div>
 frank_:</div>
<blockquote>
<p>which is what, several mB for a several line program and totally unnecessary?</p>
</blockquote>
</aside>
<p>The .exe itself is 34.5 KB actually <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>The .NET framework is used by any .NET program, is common to all of them, and it probably comes with modern versions of Windows. This could have been programmed in Perl, but that would require to download an interpreter, which would have to be downloaded and installed and would reduce efficiency, and I am more fluent with C++ anyway, especially for playing with bitwise operators or parsing things. As you said, it could have also been done in C, but C doesn’t have a built-in Regex library that I know of, so that would require using some public library. Could have chosen ISO C++, but it has the same problem. Could also have chosen Java, but I preffer .NET regex and I preffer C++ for this kind of things anyway. I am not a big .NET fan, but many of its classes are indeed very useful and with C++/CLI you can basically combine these and the efficiency and syntax of C++.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/source-new-post-deobber/91823/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/source-new-post-deobber/91823/14</link>
        <pubDate>Fri, 11 May 2007 03:04:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-91823-14</guid>
        <source url="https://forum.moparisthebest.com/t/source-new-post-deobber/91823.rss">[Source] New POST-Deobber</source>
      </item>
      <item>
        <title>[Source] New POST-Deobber</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>which is what, several mB for a several line program and totally unnecessary?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/source-new-post-deobber/91823/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/source-new-post-deobber/91823/13</link>
        <pubDate>Fri, 11 May 2007 02:41:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-91823-13</guid>
        <source url="https://forum.moparisthebest.com/t/source-new-post-deobber/91823.rss">[Source] New POST-Deobber</source>
      </item>
      <item>
        <title>[Source] New POST-Deobber</title>
        <dc:creator><![CDATA[@zstars zstars]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zstars">@zstars</a> wrote:</p>
          <blockquote>
              <p>At the moment I still gotta add a few transforms, and there is some bug which is making it insert the modifications in the wrong place. I think I know what it is, but I probably won’t be able to fix it until tomorrow. Nonetheless, when I make sure it works properly and doesn’t break anything, I will release a binary too :). Probably will still require the .NET framework though, but not the .NET compiler, just the framework itself.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/source-new-post-deobber/91823/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/source-new-post-deobber/91823/12</link>
        <pubDate>Thu, 10 May 2007 23:23:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-91823-12</guid>
        <source url="https://forum.moparisthebest.com/t/source-new-post-deobber/91823.rss">[Source] New POST-Deobber</source>
      </item>
      <item>
        <title>[Source] New POST-Deobber</title>
        <dc:creator><![CDATA[@vbcoderx vbcoderx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/vbcoderx">@vbcoderx</a> wrote:</p>
          <blockquote>
              <p>can someone post a compiled exe… im at school right now, and even tho i have haxed admin priveleges… it won’t install .net frame work cause these comps are messed up because the IT people are retarded and don’t know how to instal novell and ZENworks right =/…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/source-new-post-deobber/91823/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/source-new-post-deobber/91823/11</link>
        <pubDate>Thu, 10 May 2007 21:03:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-91823-11</guid>
        <source url="https://forum.moparisthebest.com/t/source-new-post-deobber/91823.rss">[Source] New POST-Deobber</source>
      </item>
      <item>
        <title>[Source] New POST-Deobber</title>
        <dc:creator><![CDATA[@zstars zstars]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zstars">@zstars</a> wrote:</p>
          <blockquote>
              <p>It’s managed C++, (aka C++/CLI), it can only be compiled in <a href="http://MSVC++.NET" rel="nofollow noopener">MSVC++.NET</a>. I wrote it in that language mainly because I wanted to use the .NET regex classes. It isn’t exactly C++, they have added several keywords (such as the ^ operator, the gcnew, __gc (garbage collection), “for each”, etc) to make it a full .NET language, but it is still more efficient than C# or J#, and retains pointer and low level capabilities.</p>
<p>*Edit: Actually MC++ and C++/CLI aren’t exactly the same thing but well…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/source-new-post-deobber/91823/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/source-new-post-deobber/91823/10</link>
        <pubDate>Thu, 10 May 2007 17:00:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-91823-10</guid>
        <source url="https://forum.moparisthebest.com/t/source-new-post-deobber/91823.rss">[Source] New POST-Deobber</source>
      </item>
      <item>
        <title>[Source] New POST-Deobber</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>on that note, why the hell would you write it in <a href="http://vc++.net" rel="nofollow noopener">vc++.net</a>, when it can be written in C or an even simpler language? :\</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/source-new-post-deobber/91823/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/source-new-post-deobber/91823/9</link>
        <pubDate>Thu, 10 May 2007 11:11:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-91823-9</guid>
        <source url="https://forum.moparisthebest.com/t/source-new-post-deobber/91823.rss">[Source] New POST-Deobber</source>
      </item>
      <item>
        <title>[Source] New POST-Deobber</title>
        <dc:creator><![CDATA[@vbcoderx vbcoderx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/vbcoderx">@vbcoderx</a> wrote:</p>
          <blockquote>
              <p>was just wondering the same thing… didn’t work in ms vc++ <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=6" title=":smiley:" class="emoji" alt=":smiley:"></p>
<p>am getting ready to try v <a href="http://c++.net" rel="nofollow noopener">c++.net</a></p>
<p>mopar, ur side ide looks kool dling it <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=6" title=":smiley:" class="emoji" alt=":smiley:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/source-new-post-deobber/91823/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/source-new-post-deobber/91823/8</link>
        <pubDate>Thu, 10 May 2007 09:40:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-91823-8</guid>
        <source url="https://forum.moparisthebest.com/t/source-new-post-deobber/91823.rss">[Source] New POST-Deobber</source>
      </item>
      <item>
        <title>[Source] New POST-Deobber</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>Interesting, fixing Java code with a C++ program.</p>
<p>I tried compiling this real quick, with mingw under linux, but it still failed, is this true C++ or something different?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/source-new-post-deobber/91823/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/source-new-post-deobber/91823/7</link>
        <pubDate>Thu, 10 May 2007 07:08:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-91823-7</guid>
        <source url="https://forum.moparisthebest.com/t/source-new-post-deobber/91823.rss">[Source] New POST-Deobber</source>
      </item>
      <item>
        <title>[Source] New POST-Deobber</title>
        <dc:creator><![CDATA[@zstars zstars]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zstars">@zstars</a> wrote:</p>
          <blockquote>
              <p>[quote=“frank_, post:5, topic:91823”][quote author=pplsuqbawlz link=topic=133682.msg1290874#msg1290874 date=1178759396]<br>
Eww, do it in bytecode.<br>
[/quote]^</p>
<p>also note that if you use jad instead of ^ 0xffffffff it is just ~</p>
<p>apon looking at the code, the patterns could be neatened up a fair bit, and you didnt actually remove the obfuscation correctly, ~left &gt; ~right should be left &lt; right for example[/quote]</p>
<p>Fixed, had forgotten to change that after copy paste lol.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/source-new-post-deobber/91823/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/source-new-post-deobber/91823/6</link>
        <pubDate>Thu, 10 May 2007 03:01:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-91823-6</guid>
        <source url="https://forum.moparisthebest.com/t/source-new-post-deobber/91823.rss">[Source] New POST-Deobber</source>
      </item>
      <item>
        <title>[Source] New POST-Deobber</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>[quote=“pplsuqbawlz, post:4, topic:91823”]Eww, do it in bytecode.[/quote]^</p>
<p>also note that if you use jad instead of ^ 0xffffffff it is just ~</p>
<p>apon looking at the code, the patterns could be neatened up a fair bit, and you didnt actually remove the obfuscation correctly, ~left &gt; ~right should be left &lt; right for example</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/source-new-post-deobber/91823/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/source-new-post-deobber/91823/5</link>
        <pubDate>Thu, 10 May 2007 02:53:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-91823-5</guid>
        <source url="https://forum.moparisthebest.com/t/source-new-post-deobber/91823.rss">[Source] New POST-Deobber</source>
      </item>
      <item>
        <title>[Source] New POST-Deobber</title>
        <dc:creator><![CDATA[@pplsuqbawlz pplsuqbawlz]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pplsuqbawlz">@pplsuqbawlz</a> wrote:</p>
          <blockquote>
              <p>Eww, do it in bytecode.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/source-new-post-deobber/91823/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/source-new-post-deobber/91823/4</link>
        <pubDate>Thu, 10 May 2007 01:09:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-91823-4</guid>
        <source url="https://forum.moparisthebest.com/t/source-new-post-deobber/91823.rss">[Source] New POST-Deobber</source>
      </item>
      <item>
        <title>[Source] New POST-Deobber</title>
        <dc:creator><![CDATA[@kmb Kmb]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/kmb">@kmb</a> wrote:</p>
          <blockquote>
              <p>Good job <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/source-new-post-deobber/91823/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/source-new-post-deobber/91823/3</link>
        <pubDate>Thu, 10 May 2007 00:35:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-91823-3</guid>
        <source url="https://forum.moparisthebest.com/t/source-new-post-deobber/91823.rss">[Source] New POST-Deobber</source>
      </item>
      <item>
        <title>[Source] New POST-Deobber</title>
        <dc:creator><![CDATA[@Rictoo Rictoo]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/rictoo">@Rictoo</a> wrote:</p>
          <blockquote>
              <p>Congratulations, that’s pretty neat.</p>
<p>I’m not sure if anyone has done this yet, but it sure makes the code a lot easier to read <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/source-new-post-deobber/91823/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/source-new-post-deobber/91823/2</link>
        <pubDate>Thu, 10 May 2007 00:31:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-91823-2</guid>
        <source url="https://forum.moparisthebest.com/t/source-new-post-deobber/91823.rss">[Source] New POST-Deobber</source>
      </item>
      <item>
        <title>[Source] New POST-Deobber</title>
        <dc:creator><![CDATA[@zstars zstars]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zstars">@zstars</a> wrote:</p>
          <blockquote>
              <p>I’ve written a post-deobber, mainly to be able to clean part of the obfuscated code, and to practise some Regex <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"><br>
Something like this might exist already, or it might not.</p>
<p>In any case, currently it does:</p>
<p>[UPDATED*]</p>
<p>*** XOR syntax ***</p>
<p>-Simplify (a ^ 0xffffffff &gt; b ^ 0xffffffff) expressions in conditionals.<br>
-Simplify (a ^ 0xffffffff &gt; b ^ 0xffffffff) expressions in loops.</p>
<p><span class="bbcode-b">-Simplify (a ^ 0xffffffff &gt; b) expressions in coditionals.<br>
-Simplify (a ^ 0xffffffff &gt; b) expressions in loops.</span></p>
<p>*** SHIFT syntax *** (Untested)</p>
<p>-Simplify ( ~a &gt; ~b ) expressions in conditionals.<br>
-Simplify ( ~a &gt; ~b ) expressions in loops.</p>
<p>We could consider it to be currently experimental though, so be careful <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"><br>
I will probably add a few more transforms once I have time</p>
<p>The source is in Managed C++ (aka C++/CLI), compilable under .NET</p>
<p>To create ZPostDeobber.exe:</p>
<pre><code class="lang-auto">/* ZPostDeobber.cpp */
/* AUTHOR: Duther (aka zstars) */
/* Copyright (C) 2007 */

#include &lt;fstream&gt;
#include &lt;stdio.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;string&gt;
#include &lt;iostream&gt;

using namespace std;

#using "system.dll"

using namespace System;
using namespace System::Text::RegularExpressions;


int main(int argc, char *argv[])
{
	int ret; 
	struct stat stt;
	std::string filepath;

	if(!argc || argc != 2)
	{
		System::Console::WriteLine("Usage:\nZPostDeobber &lt;filepath&gt;\n-credits\n-specify\n\n");
		return 1;
	}

	if(strcmp(argv[1], "-credits") == 0)
	{
		System::Console::WriteLine("ZPostDeobber v0.2 made by Duther, aka zstars.");
		return 0;
	}

	if(strcmp(argv[1], "-specify") == 0)
	{
		System::Console::WriteLine("Insert the file path:\n");
		cin &gt;&gt; filepath;
	}

	else
	{
		filepath = argv[1];
	}

	ret = stat(filepath.c_str(), &amp;stt);
	if(ret || !stt.st_size )
	{
		Console::WriteLine("File does not exist");
		return 1;
	}

	ifstream fin(filepath.c_str());
	if(!fin)
	{
		Console::WriteLine("Could not open file");
		return 1;
	}

	char * filebuf = new char [ stt.st_size ];
	memset(filebuf, 0, stt.st_size);
	fin.read(filebuf, stt.st_size);
	fin.close();

	Regex^ reg;
	String^ file = gcnew String(filebuf);


	/* Conditionals and loops - XOR syntax */
	// Four items, greater than.
	String^ pattern = gcnew String( "\\([\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s]*\\^[\\s]*(?:0[xX]ffffffff|0[xX]FFFFFFFF)[\\s]*\\)[\\s]*&gt;[\\s]*\\([\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s]*\^[\\s]*(?:0[xX]ffffffff|0[xX]FFFFFFFF)[\\s]*\\)[\\s]*" );
	String^ rep = gcnew String("$1 &lt; $2");
	file = reg-&gt;Replace(file, pattern, rep);

	// Four items, lesser than.
	pattern = ( "\\([\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s]*\\^[\\s]*(?:0[xX]ffffffff|0[xX]FFFFFFFF)[\\s]*\\)[\\s]*&lt;[\\s]*\\([\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s]*\^[\\s]*(?:0[xX]ffffffff|0[xX]FFFFFFFF)[\\s]*\\)[\\s]*" );
	rep = ("$1 &gt; $2");
	file = reg-&gt;Replace(file, pattern, rep);

	// Four items, equal or greater than.
	pattern = ( "\\([\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s]*\\^[\\s]*(?:0[xX]ffffffff|0[xX]FFFFFFFF)[\\s]*\\)[\\s]*&gt;=[\\s]*\\([\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s]*\^[\\s]*(?:0[xX]ffffffff|0[xX]FFFFFFFF)[\\s]*\\)[\\s]*" );
	rep = ("$1 &lt;= $2");
	file = reg-&gt;Replace(file, pattern, rep);

	// Four items, equal or lesser than.
	pattern = ( "\\([\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s]*\\^[\\s]*(?:0[xX]ffffffff|0[xX]FFFFFFFF)[\\s]*\\)[\\s]*&lt;=[\\s]*\\([\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s]*\^[\\s]*(?:0[xX]ffffffff|0[xX]FFFFFFFF)[\\s]*\\)[\\s]*" );
	rep = ("$1 &gt;= $2");
	file = reg-&gt;Replace(file, pattern, rep);

	/* Conditionals and loops - SHIFT syntax */ // Untested
	pattern = ( "\\([\(\\s]*~[\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s\\)]*&gt;[\\s\\(]*~[\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)\\)" );
	rep = ("$1 &lt; $2");
	file = reg-&gt;Replace(file, pattern, rep);

	pattern = ( "\\([\(\\s]*~[\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s\\)]*&lt;[\\s\\(]*~[\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)\\)" );
	rep = ("$1 &gt; $2");
	file = reg-&gt;Replace(file, pattern, rep);

	pattern = ( "\\([\(\\s]*~[\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s\\)]*&lt;=[\\s\\(]*~[\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)\\)" );
	rep = ("$1 &gt;= $2");
	file = reg-&gt;Replace(file, pattern, rep);

	pattern = ( "\\([\(\\s]*~[\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s\\)]*&gt;=[\\s\\(]*~[\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)\\)" );
	rep = ("$1 &lt;= $2");
	file = reg-&gt;Replace(file, pattern, rep);


	/* Shifted Constant - XOR syntax */

	{pattern = ( "\\([\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s]*\\^[\\s]*(?:0[xX]ffffffff|0[xX]FFFFFFFF)[\\s]*\\)[\\s]*&gt;[\\s\\(]*(-?[\\s]*[0-9]*)[\\s]*\\)" );
	MatchCollection^ matches = reg-&gt;Matches(file, pattern);
   
	// Could be done without copy pasting and without ugly placed curly brackets, but 
	// not like it matters...
	for each (Match^ match in matches)
	{
      String^ word1 = match-&gt;Groups[1]-&gt;Value;
	  String^ word2 = match-&gt;Groups[2]-&gt;Value;
      int index = match-&gt;Index;
	  int length = match-&gt;Length;

	  int val = System::Convert::ToInt32(word2, 10);
	  val = ~val;

	  String^ word_shifted = System::Convert::ToString(val);
	  String^ final = gcnew String(" ");
	  final += word1;
	  final += " &lt; ";
	  final += word_shifted;
	  final += " ) ";

	  file = file-&gt;Remove(index, length);
	  file = file-&gt;Insert(index, final);
	}}


	{pattern = ( "\\([\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s]*\\^[\\s]*(?:0[xX]ffffffff|0[xX]FFFFFFFF)[\\s]*\\)[\\s]*&lt;[\\s\\(]*(-?[\\s]*[0-9]*)[\\s]*\\)" );
	MatchCollection^ matches = reg-&gt;Matches(file, pattern);
   
	for each (Match^ match in matches)
	{
      String^ word1 = match-&gt;Groups[1]-&gt;Value;
	  String^ word2 = match-&gt;Groups[2]-&gt;Value;
      int index = match-&gt;Index;
	  int length = match-&gt;Length;

	  int val = System::Convert::ToInt32(word2, 10);
	  val = ~val;

	  String^ word_shifted = System::Convert::ToString(val);
	  String^ final = gcnew String(" ");
	  final += word1;
	  final += " &gt; ";
	  final += word_shifted;
	  final += " ) ";

	  file = file-&gt;Remove(index, length);
	  file = file-&gt;Insert(index, final);
	}}

	
	{pattern = ( "\\([\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s]*\\^[\\s]*(?:0[xX]ffffffff|0[xX]FFFFFFFF)[\\s]*\\)[\\s]*&gt;=[\\s\\(]*(-?[\\s]*[0-9]*)[\\s]*\\)" );
	MatchCollection^ matches = reg-&gt;Matches(file, pattern);
   
	for each (Match^ match in matches)
	{
      String^ word1 = match-&gt;Groups[1]-&gt;Value;
	  String^ word2 = match-&gt;Groups[2]-&gt;Value;
      int index = match-&gt;Index;
	  int length = match-&gt;Length;

	  int val = System::Convert::ToInt32(word2, 10);
	  val = ~val;

	  String^ word_shifted = System::Convert::ToString(val);
	  String^ final = gcnew String(" ");
	  final += word1;
	  final += " &lt;= ";
	  final += word_shifted;
	  final += " ) ";

	  file = file-&gt;Remove(index, length);
	  file = file-&gt;Insert(index, final);
	}}

	{pattern = ( "\\([\\s]*([_a-zA-Z]+[\\-\\.&gt;_a-zA-Z0-9]*)[\\s]*\\^[\\s]*(?:0[xX]ffffffff|0[xX]FFFFFFFF)[\\s]*\\)[\\s]*&lt;=[\\s\\(]*(-?[\\s]*[0-9]*)[\\s]*\\)" );
	MatchCollection^ matches = reg-&gt;Matches(file, pattern);
   
	for each (Match^ match in matches)
	{
      String^ word1 = match-&gt;Groups[1]-&gt;Value;
	  String^ word2 = match-&gt;Groups[2]-&gt;Value;
      int index = match-&gt;Index;
	  int length = match-&gt;Length;

	  int val = System::Convert::ToInt32(word2, 10);
	  val = ~val;

	  String^ word_shifted = System::Convert::ToString(val);
	  String^ final = gcnew String(" ");
	  final += word1;
	  final += " &gt; ";
	  final += word_shifted;
	  final += " ) ";

	  file = file-&gt;Remove(index, length);
	  file = file-&gt;Insert(index, final);
	}}


	file = file-&gt;Insert(0, "/* File post-deobbed using Duther's (aka zstars) ZPostDeobber v0.1 */\n");


	Console::WriteLine(file);
	return 0;
}</code></pre>
<p>Those are also needed:</p>
<p>deob.bat</p>
<pre><code class="lang-auto">@echo off
title Duther's (aka zstars) post-deobber
echo Welcome to ZPostDeobber!
echo Current version is 0.1 BETA (Experimental).
echo.
echo A backup of each file will be created. Do not run this again if something went wrong.
echo.
echo Starting post-deobbing process...
echo.

if exist *.bck del *.bck

for %%x in (*.java) do auxb.bat %%x

echo Congratulations. Post-Deobbing done. Check that everything went well before running this again or deleting .dbk files.

pause</code></pre>
<p>auxb.bat</p>
<pre><code class="lang-auto">@echo off
echo Post-Deobbing %1
ZPostDeobber %1 &gt; temp.deo
echo Saving backup
rename %1 %1.bck
echo Replacing original with deob
rename temp.deo %1
echo Done
echo.</code></pre>
<p>Instructions:</p>
<blockquote>-Build ZPostDeobber.exe
-Copy ZPostDeobber.exe, deob.bat and auxb.bat to the folder where your .java source files are.
-Run deob.bat
<p>KNOWN BUGS:<br>
-Deob.bat closes abruptly. Still works though.</p>
</blockquote>
<p>Please report any problems, bugs, or suggestions, thank you <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"><br>
Also note that, as I said, it hasn’t been thoroughly tested, so make sure to backup before doing it.</p>
<p>Edit: Ops, fixed a couple of them, forgot to change them when I copy pasted.<br>
Note also that due to another one, for loops won’t necessarily be deobbed.</p>
<p>*Version 0.1: Basic transforms (XOR syntax)<br>
*Version 0.2:<br>
Added SHIFT basic transforms.<br>
Added couple XOR syntax more complex transforms.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/source-new-post-deobber/91823/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/source-new-post-deobber/91823/1</link>
        <pubDate>Thu, 10 May 2007 00:22:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-91823-1</guid>
        <source url="https://forum.moparisthebest.com/t/source-new-post-deobber/91823.rss">[Source] New POST-Deobber</source>
      </item>
  </channel>
</rss>
