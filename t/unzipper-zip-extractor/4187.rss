<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Unzipper (Zip Extractor)</title>
    <link>https://forum.moparisthebest.com/t/unzipper-zip-extractor/4187</link>
    <description>Ho hum. I made a simple zip extractor using the java.util.zip library. This like: http://www.devx.com/getHelpOn/10MinuteSolution/20447 was a lot of help... perhaps too much help. I commented on lines... like every fucking line has commenting so if you&#39;re a newbie, look at it and you might learn some stuff. Some of my commenting may be... dumb/wrong but whatever. Note, I was attempting to get it to create a folder named after the archive but it wouldn&#39;t work :(. The method was right because when I changed &#39;ZipList[var]&#39; to &#39;Hello&#39; it made a folder called &#39;Hello&#39;.

[code]
import java.io.*;
import java.util.*;
import java.util.zip.*;

public class Unzipper
{
    public static String[] ZipList = new String[10]; // An array to hold the names of the zips. Later converted into &#39;ZipFiles&#39;.

   /*
    * Um, main void. Firstly, gets the list of archives. Then it attempts to create
    * folders... but that doesn&#39;t work. Then it prints out the list of archives.
    * Finally, it executes the constructor.
    */
    public static void main(String[] args)
    {
	GetZipList(); // Gets a list of directorys/files and if it ends in .zip, it is added to an array.
	CreateFolders(); // Attempts to create a directory named after the archive... Not working, not sure why.
	for(int x = 0; x &lt; ZipList.length; x++) // Iterates through the array.
	    if(ZipList[x] != null) // Checks if the string is null. This array has 11 null strings... I think.
		System.out.println(&quot;Archive: &quot; + ZipList[x]); // Prints out the string name.
	Unzipper Unzipper = new Unzipper(); // Executes the constructor.
    }

   /*
    * Gets a list of directorys/files and if it ends in .zip, it is added to an array.
    */
    public static void GetZipList()
    {
	File Folder = new File(System.getProperty(&quot;user.dir&quot;)); // Sets up a file object.
	String[] Directory = Folder.list(); // Uses the java.io.File list() method to get an array of files.
	for(int x = 0; x &lt; Directory.length; x++) // Iterates through the array.
	    if(Directory[x].endsWith(&quot;.zip&quot;)) // Checks if the file ends with zip.
		ZipList[Index()] = Directory[x]; // Adds the file to the ZipList array.
    }


   /*
    * An attempt to make folders named after the archive.
    * Didn&#39;t seem to make a folder when running through the array.
    */ 
    public static void CreateFolders()
    {
	for(int x = 0; x &lt; ZipList.length; x++) // Iterates through the array.
	    if(ZipList[x] != null) // Checks if the string is null.
		if(new File(ZipList[x]).mkdir()) // mkdir() is a boolean method.
		    System.out.println(&quot;Made A Directory To Extract To.&quot;); // If mkdir() returns true, this string is printed.
    }

   /*
    * A method to find the appropriate index to place the string.
    * Not sure if this is necessary, but I r teh nubl0r.
    */
    public static int Index()
    {
	int Slot = 0; // Integer declaration.
	for(int x = 0; x &lt; ZipList.length; x++) // Iterates through the array.
	    if(ZipList[x] != null) // Checks if the string is null.
		Slot = x + 1; // Adds 1 to the int because that is the last occupied slot.
	return Slot; // Returns the outcome.
    }

   /*
    * This method does the actual extracting. Note: I did not write this method.
    * This basically creates a stream to extract because java.util.zip does not
    * have an extract command.
    */
    public void CopyInputStream(InputStream In, OutputStream Out) throws IOException
    {
	byte[] Buffer = new byte[1024];
	int Len;
	while((Len = In.read(Buffer)) &gt;= 0)
	    Out.write(Buffer, 0, Len);
	In.close();
	Out.close();
    }

   /*
    * This method does the... deep zip interaction. It gets a list of the files inside
    * and checks whether it is a directory or file and does stuff accordingly.
    */
    public Unzipper()
    {
	for(int x = 0; x &lt; ZipList.length; x++) // Iterates through the array.
	{
	    if(ZipList[x] != null) // Checks if the string is null.
	    {
		try
		{
		    ZipFile ZipFile = new ZipFile(ZipList[x]); // Create a ZipFile object from the filename.
		    Enumeration Entries = ZipFile.entries(); // Gets the entries a.k.a contents as an enumeration.
		    while(Entries.hasMoreElements()) // Iterates through the contents of the archive.
		    {
			ZipEntry Entry = (ZipEntry)Entries.nextElement(); // Creates a ZipEntry object of the next unprocessed entry.
			if(Entry.isDirectory()) // Checks if the entry is a directory.
			{
			    System.out.println(&quot;Creating Directory: &quot; + Entry.getName()); // Prints out that it is creating a new directory.
			    (new File(Entry.getName())).mkdir(); // Make directory command by usingthe getName() command which converts it to a string.
			}
			else // If the entry isn&#39;t a directory, then it should be a file?
			{
			    System.out.println(&quot;Extracting File: &quot; + Entry.getName()); // Prints out that it is extracting a file.
			    CopyInputStream(ZipFile.getInputStream(Entry), new BufferedOutputStream(new FileOutputStream(Entry.getName()))); // Extracts the file.
			}
		    }
		    ZipFile.close(); // Closes the stream. finalize() method could possibly be used instead?
		}
		catch(Exception Exception) // Catches any exceptions.
		{
		    Exception.printStackTrace(); // Prints out the errors.
	        }
	    }
	}
    }
}
[/code]
Note: ^ Indenting as it should be :P.</description>
    
    <lastBuildDate>Thu, 29 Jun 2006 02:18:48 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/unzipper-zip-extractor/4187.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Unzipper (Zip Extractor)</title>
        <dc:creator><![CDATA[@Kryptizzler Kryptizzler]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/kryptizzler">@Kryptizzler</a> wrote:</p>
          <blockquote>
              <p>:o Thanks mopar, I’ll try it in a sec.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/unzipper-zip-extractor/4187/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/unzipper-zip-extractor/4187/6</link>
        <pubDate>Thu, 29 Jun 2006 02:18:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-4187-6</guid>
        <source url="https://forum.moparisthebest.com/t/unzipper-zip-extractor/4187.rss">Unzipper (Zip Extractor)</source>
      </item>
      <item>
        <title>Unzipper (Zip Extractor)</title>
        <dc:creator><![CDATA[@Pwnd Pwnd]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pwnd">@Pwnd</a> wrote:</p>
          <blockquote>
              <p>Ah, alright <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:">  I always was taught with your chkDir() example.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/unzipper-zip-extractor/4187/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/unzipper-zip-extractor/4187/5</link>
        <pubDate>Wed, 28 Jun 2006 15:58:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-4187-5</guid>
        <source url="https://forum.moparisthebest.com/t/unzipper-zip-extractor/4187.rss">Unzipper (Zip Extractor)</source>
      </item>
      <item>
        <title>Unzipper (Zip Extractor)</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>[quote=“Pwnd, post:3, topic:4187”]Mopar, why didn’t you use that function to begin with?<br>
Wait, first off, what did you start with (Without having the chkDir() method).[/quote]</p>
<p>I just did it like him, in the code where I needed it, and also just not checking at all <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/unzipper-zip-extractor/4187/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/unzipper-zip-extractor/4187/4</link>
        <pubDate>Wed, 28 Jun 2006 15:55:52 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-4187-4</guid>
        <source url="https://forum.moparisthebest.com/t/unzipper-zip-extractor/4187.rss">Unzipper (Zip Extractor)</source>
      </item>
      <item>
        <title>Unzipper (Zip Extractor)</title>
        <dc:creator><![CDATA[@Pwnd Pwnd]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pwnd">@Pwnd</a> wrote:</p>
          <blockquote>
              <p>Mopar, why didn’t you use that function to begin with?<br>
Wait, first off, what did you start with (Without having the chkDir() method).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/unzipper-zip-extractor/4187/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/unzipper-zip-extractor/4187/3</link>
        <pubDate>Wed, 28 Jun 2006 15:46:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-4187-3</guid>
        <source url="https://forum.moparisthebest.com/t/unzipper-zip-extractor/4187.rss">Unzipper (Zip Extractor)</source>
      </item>
      <item>
        <title>Unzipper (Zip Extractor)</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>Good job on the program, and Ive got one little suggestion for you, I had problems in moparscape making directories also, so I made this little function and havent had any problems since:</p>
<p><code>    
    public boolean chkDir(String fileName) {
        try {
            File f = new File(fileName);
            if (!f.exists())
                f.mkdir();
            return true;
        } catch (Exception e) {
            System.out.println("Error making file: " + e);
            return false;
        }
    }</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/unzipper-zip-extractor/4187/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/unzipper-zip-extractor/4187/2</link>
        <pubDate>Wed, 28 Jun 2006 15:39:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-4187-2</guid>
        <source url="https://forum.moparisthebest.com/t/unzipper-zip-extractor/4187.rss">Unzipper (Zip Extractor)</source>
      </item>
      <item>
        <title>Unzipper (Zip Extractor)</title>
        <dc:creator><![CDATA[@Kryptizzler Kryptizzler]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/kryptizzler">@Kryptizzler</a> wrote:</p>
          <blockquote>
              <p>Ho hum. I made a simple zip extractor using the java.util.zip library. This like: <a href="http://www.devx.com/getHelpOn/10MinuteSolution/20447" rel="nofollow noopener">http://www.devx.com/getHelpOn/10MinuteSolution/20447</a> was a lot of help… perhaps too much help. I commented on lines… like every fucking line has commenting so if you’re a newbie, look at it and you might learn some stuff. Some of my commenting may be… dumb/wrong but whatever. Note, I was attempting to get it to create a folder named after the archive but it wouldn’t work :(. The method was right because when I changed ‘ZipList[var]’ to ‘Hello’ it made a folder called ‘Hello’.</p>
<pre><code class="lang-auto">import java.io.*;
import java.util.*;
import java.util.zip.*;

public class Unzipper
{
    public static String[] ZipList = new String[10]; // An array to hold the names of the zips. Later converted into 'ZipFiles'.

   /*
    * Um, main void. Firstly, gets the list of archives. Then it attempts to create
    * folders... but that doesn't work. Then it prints out the list of archives.
    * Finally, it executes the constructor.
    */
    public static void main(String[] args)
    {
	GetZipList(); // Gets a list of directorys/files and if it ends in .zip, it is added to an array.
	CreateFolders(); // Attempts to create a directory named after the archive... Not working, not sure why.
	for(int x = 0; x &lt; ZipList.length; x++) // Iterates through the array.
	    if(ZipList[x] != null) // Checks if the string is null. This array has 11 null strings... I think.
		System.out.println("Archive: " + ZipList[x]); // Prints out the string name.
	Unzipper Unzipper = new Unzipper(); // Executes the constructor.
    }

   /*
    * Gets a list of directorys/files and if it ends in .zip, it is added to an array.
    */
    public static void GetZipList()
    {
	File Folder = new File(System.getProperty("user.dir")); // Sets up a file object.
	String[] Directory = Folder.list(); // Uses the java.io.File list() method to get an array of files.
	for(int x = 0; x &lt; Directory.length; x++) // Iterates through the array.
	    if(Directory[x].endsWith(".zip")) // Checks if the file ends with zip.
		ZipList[Index()] = Directory[x]; // Adds the file to the ZipList array.
    }


   /*
    * An attempt to make folders named after the archive.
    * Didn't seem to make a folder when running through the array.
    */ 
    public static void CreateFolders()
    {
	for(int x = 0; x &lt; ZipList.length; x++) // Iterates through the array.
	    if(ZipList[x] != null) // Checks if the string is null.
		if(new File(ZipList[x]).mkdir()) // mkdir() is a boolean method.
		    System.out.println("Made A Directory To Extract To."); // If mkdir() returns true, this string is printed.
    }

   /*
    * A method to find the appropriate index to place the string.
    * Not sure if this is necessary, but I r teh nubl0r.
    */
    public static int Index()
    {
	int Slot = 0; // Integer declaration.
	for(int x = 0; x &lt; ZipList.length; x++) // Iterates through the array.
	    if(ZipList[x] != null) // Checks if the string is null.
		Slot = x + 1; // Adds 1 to the int because that is the last occupied slot.
	return Slot; // Returns the outcome.
    }

   /*
    * This method does the actual extracting. Note: I did not write this method.
    * This basically creates a stream to extract because java.util.zip does not
    * have an extract command.
    */
    public void CopyInputStream(InputStream In, OutputStream Out) throws IOException
    {
	byte[] Buffer = new byte[1024];
	int Len;
	while((Len = In.read(Buffer)) &gt;= 0)
	    Out.write(Buffer, 0, Len);
	In.close();
	Out.close();
    }

   /*
    * This method does the... deep zip interaction. It gets a list of the files inside
    * and checks whether it is a directory or file and does stuff accordingly.
    */
    public Unzipper()
    {
	for(int x = 0; x &lt; ZipList.length; x++) // Iterates through the array.
	{
	    if(ZipList[x] != null) // Checks if the string is null.
	    {
		try
		{
		    ZipFile ZipFile = new ZipFile(ZipList[x]); // Create a ZipFile object from the filename.
		    Enumeration Entries = ZipFile.entries(); // Gets the entries a.k.a contents as an enumeration.
		    while(Entries.hasMoreElements()) // Iterates through the contents of the archive.
		    {
			ZipEntry Entry = (ZipEntry)Entries.nextElement(); // Creates a ZipEntry object of the next unprocessed entry.
			if(Entry.isDirectory()) // Checks if the entry is a directory.
			{
			    System.out.println("Creating Directory: " + Entry.getName()); // Prints out that it is creating a new directory.
			    (new File(Entry.getName())).mkdir(); // Make directory command by usingthe getName() command which converts it to a string.
			}
			else // If the entry isn't a directory, then it should be a file?
			{
			    System.out.println("Extracting File: " + Entry.getName()); // Prints out that it is extracting a file.
			    CopyInputStream(ZipFile.getInputStream(Entry), new BufferedOutputStream(new FileOutputStream(Entry.getName()))); // Extracts the file.
			}
		    }
		    ZipFile.close(); // Closes the stream. finalize() method could possibly be used instead?
		}
		catch(Exception Exception) // Catches any exceptions.
		{
		    Exception.printStackTrace(); // Prints out the errors.
	        }
	    }
	}
    }
}</code></pre>
<p>Note: ^ Indenting as it should be :P.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/unzipper-zip-extractor/4187/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/unzipper-zip-extractor/4187/1</link>
        <pubDate>Tue, 27 Jun 2006 15:26:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-4187-1</guid>
        <source url="https://forum.moparisthebest.com/t/unzipper-zip-extractor/4187.rss">Unzipper (Zip Extractor)</source>
      </item>
  </channel>
</rss>
