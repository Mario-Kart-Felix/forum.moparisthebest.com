<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Grand Exchange</title>
    <link>https://forum.moparisthebest.com/t/grand-exchange/544394</link>
    <description>Dear community,

I&#39;m willing to implement a Grand Exchange system into my server. I&#39;m using Asteria V2.

The way i thought of implenting it is the following &quot;pseudo&quot; code:
[code]public class GrandExchange{

	/* Use 2 arrayList for keeping track of the offers(sell and buy) since they have a good iteration and easy to adjust the size; */
	ArrayList&lt;GrandExchangeItem&gt; sellList;
	ArrayList&lt;GrandExchangeItem&gt; buyList;

	public void addBuyOffer(Offer newOffer){
		//Check if the item is already in the list, if so add it this player&#39;s offer to the existing Offer Queue:		
		//TODO:....
		//else, make a new one:
			buyList.add(new GrandExchangeItem( newOffer.getItemName(), new Queue(offer)) );

			//Add a check if somebody is selling this, and buy it from the first one from the selling Queue(if sellprice &lt;= buyPrice, else check the next one in the Queue etc.);
			//Do the check at every item that is added to the buy/sell list to prevent a update which contstantly loops trough to check if buy offers/selling offers matches.
			
//TODO:.....
	}

	public void addSellOffer(Offer newOffer){
		//Same logic as addBuyOffer.
	}

}

public class GrandExchangeItem{

	//declare variables

	//Constructor of GrandExchangeItem would look something like this:
	public GrandExchangeItem(itemName||itemID, Queue&lt;Offer&gt; offers){
		//Initialize the according class variables;
	}

}

public class Offer{
	
	//Declare variables..
	
	//Constructor of a Offer(sell or buy) would look something like:
	public Offer(playername||playerid, itemName, price, amount){
		//initialize the variables;
	}
}[/code]

I&#39;m not very familiar with the complete source yet. So I&#39;m unsure if I should use the playerName or the playerId, the itemName or itemIDs for these.
Besides that, what would be a good way to save the outstanding offers at a server shutdown/re-start?

My thought about this was:
- Create a GrandExhange object in the Main class;
- On server start up, read the offers from a hashed .txt file;
- On server shut down, hash the offers and save them to a .txt file.

If somebody knows a better way of implementing this, I would glady receive feedback.

Regards,


Blaze

[EDIT]
BUMP, still looking for feedback if this is a good way to implement it or if there are any better solutions. Also if my thoguhts baout saving/loading outstanding offfers is a good idea.</description>
    
    <lastBuildDate>Sat, 28 Jun 2014 10:00:49 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/grand-exchange/544394.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Grand Exchange</title>
        <dc:creator><![CDATA[@final9999 final9999]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/final9999">@final9999</a> wrote:</p>
          <blockquote>
              <p>Dear community,</p>
<p>I’m willing to implement a Grand Exchange system into my server. I’m using Asteria V2.</p>
<p>The way i thought of implenting it is the following “pseudo” code:</p>
<p>[code]public class GrandExchange{</p>
<pre><code>/* Use 2 arrayList for keeping track of the offers(sell and buy) since they have a good iteration and easy to adjust the size; */
ArrayList&lt;GrandExchangeItem&gt; sellList;
ArrayList&lt;GrandExchangeItem&gt; buyList;

public void addBuyOffer(Offer newOffer){
	//Check if the item is already in the list, if so add it this player's offer to the existing Offer Queue:		
	//TODO:....
	//else, make a new one:
		buyList.add(new GrandExchangeItem( newOffer.getItemName(), new Queue(offer)) );

		//Add a check if somebody is selling this, and buy it from the first one from the selling Queue(if sellprice &lt;= buyPrice, else check the next one in the Queue etc.);
		//Do the check at every item that is added to the buy/sell list to prevent a update which contstantly loops trough to check if buy offers/selling offers matches.
</code></pre>
<p>//TODO:…<br>
}</p>
<pre><code>public void addSellOffer(Offer newOffer){
	//Same logic as addBuyOffer.
}
</code></pre>
<p>}</p>
<p>public class GrandExchangeItem{</p>
<pre><code>//declare variables

//Constructor of GrandExchangeItem would look something like this:
public GrandExchangeItem(itemName||itemID, Queue&lt;Offer&gt; offers){
	//Initialize the according class variables;
}
</code></pre>
<p>}</p>
<p>public class Offer{</p>
<pre><code>//Declare variables..

//Constructor of a Offer(sell or buy) would look something like:
public Offer(playername||playerid, itemName, price, amount){
	//initialize the variables;
}
</code></pre>
<p>}[/code]</p>
<p>I’m not very familiar with the complete source yet. So I’m unsure if I should use the playerName or the playerId, the itemName or itemIDs for these.<br>
Besides that, what would be a good way to save the outstanding offers at a server shutdown/re-start?</p>
<p>My thought about this was:</p>
<ul>
<li>Create a GrandExhange object in the Main class;</li>
<li>On server start up, read the offers from a hashed .txt file;</li>
<li>On server shut down, hash the offers and save them to a .txt file.</li>
</ul>
<p>If somebody knows a better way of implementing this, I would glady receive feedback.</p>
<p>Regards,</p>
<p>Blaze</p>
<p>[EDIT]<br>
BUMP, still looking for feedback if this is a good way to implement it or if there are any better solutions. Also if my thoguhts baout saving/loading outstanding offfers is a good idea.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/grand-exchange/544394/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/grand-exchange/544394/1</link>
        <pubDate>Sat, 28 Jun 2014 10:00:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-544394-1</guid>
        <source url="https://forum.moparisthebest.com/t/grand-exchange/544394.rss">Grand Exchange</source>
      </item>
  </channel>
</rss>
