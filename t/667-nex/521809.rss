<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[667] Nex</title>
    <link>https://forum.moparisthebest.com/t/667-nex/521809</link>
    <description>There is a glitch with nex, where when she flys at you, if you&#39;re on the opposite pole as her, she can&#39;t hit you.

How to fix?

Heres my code:
[code]package com.rs.game.npc.godwars.zaros;

import java.util.ArrayList;

import com.rs.game.Animation;
import com.rs.game.Entity;
import com.rs.game.ForceTalk;
import com.rs.game.Graphics;
import com.rs.game.Hit;
import com.rs.game.Hit.HitLook;
import com.rs.game.World;
import com.rs.game.WorldTile;
import com.rs.game.minigames.ZarosGodwars;
import com.rs.game.npc.NPC;
import com.rs.game.npc.combat.NPCCombatDefinitions;
import com.rs.game.tasks.WorldTask;
import com.rs.game.tasks.WorldTasksManager;
import com.rs.utils.Utils;

@SuppressWarnings(&quot;serial&quot;)
public final class Nex extends NPC {

	private boolean followTarget;
	private int stage;
	private int minionStage;
	private int flyTime;
	private long lastVirus;
	private boolean embracedShadow;
	private boolean trapsSettedUp;
	private long lastSiphon;
	private boolean doingSiphon;
	private NPC[] bloodReavers;
	private int switchPrayersDelay;

	public Nex(int id, WorldTile tile, int mapAreaNameHash,
			boolean canBeAttackFromOutOfArea, boolean spawned) {
		super(id, tile, mapAreaNameHash, canBeAttackFromOutOfArea, spawned);
		setCantInteract(true);
		setCapDamage(500);
		setLureDelay(3000);
		bloodReavers = new NPC[3];
	}

	@Override
	public void processNPC() {
		if (flyTime &gt; 0)
			flyTime--;
		if (getStage() == 0 &amp;&amp; minionStage == 0 &amp;&amp; getHitpoints() &lt;= 24000) {
			setCapDamage(0);
			setNextForceTalk(new ForceTalk(&quot;Fumus, don&#39;t fail me!&quot;));
			getCombat().addCombatDelay(1);
			ZarosGodwars.breakFumusBarrier();
			playSound(3321, 2);
			minionStage = 1;
		} else if (getStage() == 1 &amp;&amp; minionStage == 1
				&amp;&amp; getHitpoints() &lt;= 18000) {
			setCapDamage(0);
			setNextForceTalk(new ForceTalk(&quot;Umbra, don&#39;t fail me!&quot;));
			getCombat().addCombatDelay(1);
			ZarosGodwars.breakUmbraBarrier();
			playSound(3307, 2);
			minionStage = 2;
		} else if (getStage() == 2 &amp;&amp; minionStage == 2
				&amp;&amp; getHitpoints() &lt;= 12000) {
			setCapDamage(0);
			setNextForceTalk(new ForceTalk(&quot;Cruor, don&#39;t fail me!&quot;));
			getCombat().addCombatDelay(1);
			ZarosGodwars.breakCruorBarrier();
			playSound(3298, 2);
			minionStage = 3;
		} else if (getStage() == 3 &amp;&amp; minionStage == 3
				&amp;&amp; getHitpoints() &lt;= 6000) {
			setCapDamage(0);
			setNextForceTalk(new ForceTalk(&quot;Glacies, don&#39;t fail me!&quot;));
			getCombat().addCombatDelay(1);
			ZarosGodwars.breakGlaciesBarrier();
			playSound(3327, 2);
			minionStage = 4;
		} else if (getStage() == 4 &amp;&amp; minionStage == 4) {
			if (switchPrayersDelay &gt; 0)
				switchPrayersDelay--;
			else {
				switchPrayers();
				resetSwitchPrayersDelay();
			}
		}
		if (isDead() || doingSiphon || isCantInteract())
			return;
		if (!getCombat().process())
			checkAgressivity();
	}

	@Override
	public void sendDeath(Entity source) {
		transformIntoNPC(13450);
		final NPCCombatDefinitions defs = getCombatDefinitions();
		WorldTasksManager.schedule(new WorldTask() {
			int loop;

			@Override
			public void run() {
				if (loop == 0) {
					setNextAnimation(new Animation(defs.getDeathEmote()));
				} else if (loop &gt;= defs.getDeathDelay()) {
					drop();
					finish();
					ZarosGodwars.endWar();
					stop();
				}
				loop++;
			}
		}, 0, 1);
		setNextForceTalk(new ForceTalk(&quot;Taste my wrath!&quot;));
		playSound(3323, 2);
		final NPC target = this;
		WorldTasksManager.schedule(new WorldTask() {
			@Override
			public void run() {
				setNextGraphics(new Graphics(2259));
				ArrayList&lt;Entity&gt; possibleTargets = getPossibleTargets();
				if (possibleTargets != null) {
					for (Entity entity : possibleTargets) {
						if (entity == null || entity.isDead()
								|| entity.hasFinished()
								|| !entity.withinDistance(target, 10))
							continue;
						World.sendProjectile(target, new WorldTile(getX() + 2,
								getY() + 2, getPlane()), 2260, 24, 0, 41, 35,
								30, 0);
						World.sendProjectile(target, new WorldTile(getX() + 2,
								getY(), getPlane()), 2260, 41, 0, 41, 35, 30, 0);
						World.sendProjectile(target, new WorldTile(getX() + 2,
								getY() - 2, getPlane()), 2260, 41, 0, 41, 35,
								30, 0);
						World.sendProjectile(target, new WorldTile(getX() - 2,
								getY() + 2, getPlane()), 2260, 41, 0, 41, 35,
								30, 0);
						World.sendProjectile(target, new WorldTile(getX() - 2,
								getY(), getPlane()), 2260, 41, 0, 41, 35, 30, 0);
						World.sendProjectile(target, new WorldTile(getX() - 2,
								getY() - 2, getPlane()), 2260, 41, 0, 41, 35,
								30, 0);
						World.sendProjectile(target, new WorldTile(getX(),
								getY() + 2, getPlane()), 2260, 41, 0, 41, 35,
								30, 0);
						World.sendProjectile(target, new WorldTile(getX(),
								getY() - 2, getPlane()), 2260, 41, 0, 41, 35,
								30, 0);
						entity.applyHit(new Hit(target, Utils.getRandom(600),
								HitLook.REGULAR_DAMAGE));
					}
				}
			}
		});
	}

	public ArrayList&lt;Entity&gt; calculatePossibleTargets(WorldTile current,
			WorldTile position, boolean northSouth) {
		ArrayList&lt;Entity&gt; list = new ArrayList&lt;Entity&gt;();
		for (Entity e : getPossibleTargets()) {
			if (e.inArea(current.getX(), current.getY(), position.getX()
					+ (northSouth ? 2 : 0), position.getY()
					+ (!northSouth ? 2 : 0))

					|| e.inArea(position.getX(), position.getY(),
							current.getX() + (northSouth ? 2 : 0),
							current.getY() + (!northSouth ? 2 : 0)))
				list.add(e);
		}
		return list;
	}

	public void moveNextStage() {
		if (getStage() == 0 &amp;&amp; minionStage == 1) {
			setCapDamage(500);
			setNextForceTalk(new ForceTalk(&quot;Darken my shadow!&quot;));
			World.sendProjectile(ZarosGodwars.umbra, this, 2244, 18, 18, 60,
					30, 0, 0);
			getCombat().addCombatDelay(1);
			setStage(1);
			playSound(3302, 2);
		} else if (getStage() == 1 &amp;&amp; minionStage == 2) {
			setCapDamage(500);
			setNextForceTalk(new ForceTalk(&quot;Flood my lungs with blood!&quot;));
			World.sendProjectile(ZarosGodwars.cruor, this, 2244, 18, 18, 60,
					30, 0, 0);
			getCombat().addCombatDelay(1);
			setStage(2);
			playSound(3306, 2);
		} else if (getStage() == 2 &amp;&amp; minionStage == 3) {
			setCapDamage(500);
			killBloodReavers();
			setNextForceTalk(new ForceTalk(&quot;Infuse me with the power of ice!&quot;));
			World.sendProjectile(ZarosGodwars.glacies, this, 2244, 18, 18, 60,
					30, 0, 0);
			getCombat().addCombatDelay(1);
			setStage(3);
			playSound(3303, 2);
		} else if (getStage() == 3 &amp;&amp; minionStage == 4) {
			setCapDamage(500);
			setNextForceTalk(new ForceTalk(&quot;NOW, THE POWER OF ZAROS!&quot;));
			setNextAnimation(new Animation(6326));
			setNextGraphics(new Graphics(1204));
			getCombat().addCombatDelay(1);
			heal(6000);
			setStage(4);
			playSound(3312, 2);
		}
	}

	public void resetSwitchPrayersDelay() {
		switchPrayersDelay = 35; // 25sec
	}

	public void switchPrayers() {
		transformIntoNPC(getId() == 13449 ? 13447 : getId() + 1);
	}

	@Override
	public void handleIngoingHit(Hit hit) {
		if (doingSiphon)
			hit.setHealHit();
		if (getId() == 13449 &amp;&amp; hit.getLook() == HitLook.MELEE_DAMAGE) {
			Entity source = hit.getSource();
			if (source != null) {
				int deflectedDamage = (int) (hit.getDamage() * 0.1);
				hit.setDamage((int) (hit.getDamage() * source
						.getMeleePrayerMultiplier()));
				if (deflectedDamage &gt; 0)
					source.applyHit(new Hit(this, deflectedDamage,
							HitLook.REFLECTED_DAMAGE));
			}
		}
		super.handleIngoingHit(hit);
	}

	@Override
	public void setNextAnimation(Animation nextAnimation) {
		if (doingSiphon)
			return;
		super.setNextAnimation(nextAnimation);
	}

	@Override
	public void setNextGraphics(Graphics nextGraphic) {
		if (doingSiphon)
			return;
		super.setNextGraphics(nextGraphic);
	}

	@Override
	public double getMagePrayerMultiplier() {
		return 0.6;
	}

	@Override
	public double getRangePrayerMultiplier() {
		return 0.6;
	}

	@Override
	public double getMeleePrayerMultiplier() {
		return 0.6;
	}

	@Override
	public ArrayList&lt;Entity&gt; getPossibleTargets() {
		return ZarosGodwars.getPossibleTargets();
	}

	public boolean isFollowTarget() {
		return followTarget;
	}

	public void setFollowTarget(boolean followTarget) {
		this.followTarget = followTarget;
	}

	public int getAttacksStage() {
		return getStage();
	}

	public void setStage(int stage) {
		this.stage = stage;
	}

	public int getFlyTime() {
		return flyTime;
	}

	public void setFlyTime(int flyTime) {
		this.flyTime = flyTime;
	}

	public long getLastVirus() {
		return lastVirus;
	}

	public void sendVirusAttack(ArrayList&lt;Entity&gt; hitedEntitys,
			ArrayList&lt;Entity&gt; possibleTargets, Entity infected) {
		for (Entity t : possibleTargets) {
			if (hitedEntitys.contains(t))
				continue;
			if (Utils.getDistance(t.getX(), t.getY(), infected.getX(),
					infected.getY()) &lt;= 1) {
				t.setNextForceTalk(new ForceTalk(&quot;*Cough*&quot;));
				t.applyHit(new Hit(this, Utils.getRandom(100),
						HitLook.REGULAR_DAMAGE));
				hitedEntitys.add(t);
				sendVirusAttack(hitedEntitys, possibleTargets, infected);
			}
		}
		playSound(3296, 2);
	}

	public void setLastVirus(long lastVirus) {
		this.lastVirus = lastVirus;
	}

	public boolean isEmbracedShadow() {
		return embracedShadow;
	}

	public void setEmbracedShadow(boolean embracedShadow) {
		this.embracedShadow = embracedShadow;
	}

	public boolean isTrapsSettedUp() {
		return trapsSettedUp;
	}

	public void setTrapsSettedUp(boolean trapsSettedUp) {
		this.trapsSettedUp = trapsSettedUp;
	}

	public long getLastSiphon() {
		return lastSiphon;
	}

	public void setLastSiphon(long lastSiphon) {
		this.lastSiphon = lastSiphon;
	}

	public NPC[] getBloodReavers() {
		return bloodReavers;
	}

	public void killBloodReavers() {
		for (int index = 0; index &lt; bloodReavers.length; index++) {
			if (bloodReavers[index] == null)
				continue;
			NPC npc = bloodReavers[index];
			bloodReavers[index] = null;
			if (npc.isDead())
				return;
			heal(npc.getHitpoints());
			npc.sendDeath(this);
		}
	}

	public boolean isDoingSiphon() {
		return doingSiphon;
	}

	public void setDoingSiphon(boolean doingSiphon) {
		this.doingSiphon = doingSiphon;
	}

	public int getStage() {
		return stage;
	}
}
[/code]</description>
    
    <lastBuildDate>Sat, 15 Jun 2013 21:26:11 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/667-nex/521809.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[667] Nex</title>
        <dc:creator><![CDATA[@masan05 masan05]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/masan05">@masan05</a> wrote:</p>
          <blockquote>
              <p>There is a glitch with nex, where when she flys at you, if you’re on the opposite pole as her, she can’t hit you.</p>
<p>How to fix?</p>
<p>Heres my code:</p>
<p>[code]package com.rs.game.npc.godwars.zaros;</p>
<p>import java.util.ArrayList;</p>
<p>import com.rs.game.Animation;<br>
import com.rs.game.Entity;<br>
import com.rs.game.ForceTalk;<br>
import com.rs.game.Graphics;<br>
import com.rs.game.Hit;<br>
import com.rs.game.Hit.HitLook;<br>
import com.rs.game.World;<br>
import com.rs.game.WorldTile;<br>
import com.rs.game.minigames.ZarosGodwars;<br>
import com.rs.game.npc.NPC;<br>
import com.rs.game.npc.combat.NPCCombatDefinitions;<br>
import com.rs.game.tasks.WorldTask;<br>
import com.rs.game.tasks.WorldTasksManager;<br>
import com.rs.utils.Utils;</p>
<p><span class="mention">@SuppressWarnings</span>(“serial”)<br>
public final class Nex extends NPC {</p>
<pre><code>private boolean followTarget;
private int stage;
private int minionStage;
private int flyTime;
private long lastVirus;
private boolean embracedShadow;
private boolean trapsSettedUp;
private long lastSiphon;
private boolean doingSiphon;
private NPC[] bloodReavers;
private int switchPrayersDelay;

public Nex(int id, WorldTile tile, int mapAreaNameHash,
		boolean canBeAttackFromOutOfArea, boolean spawned) {
	super(id, tile, mapAreaNameHash, canBeAttackFromOutOfArea, spawned);
	setCantInteract(true);
	setCapDamage(500);
	setLureDelay(3000);
	bloodReavers = new NPC[3];
}

@Override
public void processNPC() {
	if (flyTime &gt; 0)
		flyTime--;
	if (getStage() == 0 &amp;&amp; minionStage == 0 &amp;&amp; getHitpoints() &lt;= 24000) {
		setCapDamage(0);
		setNextForceTalk(new ForceTalk("Fumus, don't fail me!"));
		getCombat().addCombatDelay(1);
		ZarosGodwars.breakFumusBarrier();
		playSound(3321, 2);
		minionStage = 1;
	} else if (getStage() == 1 &amp;&amp; minionStage == 1
			&amp;&amp; getHitpoints() &lt;= 18000) {
		setCapDamage(0);
		setNextForceTalk(new ForceTalk("Umbra, don't fail me!"));
		getCombat().addCombatDelay(1);
		ZarosGodwars.breakUmbraBarrier();
		playSound(3307, 2);
		minionStage = 2;
	} else if (getStage() == 2 &amp;&amp; minionStage == 2
			&amp;&amp; getHitpoints() &lt;= 12000) {
		setCapDamage(0);
		setNextForceTalk(new ForceTalk("Cruor, don't fail me!"));
		getCombat().addCombatDelay(1);
		ZarosGodwars.breakCruorBarrier();
		playSound(3298, 2);
		minionStage = 3;
	} else if (getStage() == 3 &amp;&amp; minionStage == 3
			&amp;&amp; getHitpoints() &lt;= 6000) {
		setCapDamage(0);
		setNextForceTalk(new ForceTalk("Glacies, don't fail me!"));
		getCombat().addCombatDelay(1);
		ZarosGodwars.breakGlaciesBarrier();
		playSound(3327, 2);
		minionStage = 4;
	} else if (getStage() == 4 &amp;&amp; minionStage == 4) {
		if (switchPrayersDelay &gt; 0)
			switchPrayersDelay--;
		else {
			switchPrayers();
			resetSwitchPrayersDelay();
		}
	}
	if (isDead() || doingSiphon || isCantInteract())
		return;
	if (!getCombat().process())
		checkAgressivity();
}

@Override
public void sendDeath(Entity source) {
	transformIntoNPC(13450);
	final NPCCombatDefinitions defs = getCombatDefinitions();
	WorldTasksManager.schedule(new WorldTask() {
		int loop;

		@Override
		public void run() {
			if (loop == 0) {
				setNextAnimation(new Animation(defs.getDeathEmote()));
			} else if (loop &gt;= defs.getDeathDelay()) {
				drop();
				finish();
				ZarosGodwars.endWar();
				stop();
			}
			loop++;
		}
	}, 0, 1);
	setNextForceTalk(new ForceTalk("Taste my wrath!"));
	playSound(3323, 2);
	final NPC target = this;
	WorldTasksManager.schedule(new WorldTask() {
		@Override
		public void run() {
			setNextGraphics(new Graphics(2259));
			ArrayList&lt;Entity&gt; possibleTargets = getPossibleTargets();
			if (possibleTargets != null) {
				for (Entity entity : possibleTargets) {
					if (entity == null || entity.isDead()
							|| entity.hasFinished()
							|| !entity.withinDistance(target, 10))
						continue;
					World.sendProjectile(target, new WorldTile(getX() + 2,
							getY() + 2, getPlane()), 2260, 24, 0, 41, 35,
							30, 0);
					World.sendProjectile(target, new WorldTile(getX() + 2,
							getY(), getPlane()), 2260, 41, 0, 41, 35, 30, 0);
					World.sendProjectile(target, new WorldTile(getX() + 2,
							getY() - 2, getPlane()), 2260, 41, 0, 41, 35,
							30, 0);
					World.sendProjectile(target, new WorldTile(getX() - 2,
							getY() + 2, getPlane()), 2260, 41, 0, 41, 35,
							30, 0);
					World.sendProjectile(target, new WorldTile(getX() - 2,
							getY(), getPlane()), 2260, 41, 0, 41, 35, 30, 0);
					World.sendProjectile(target, new WorldTile(getX() - 2,
							getY() - 2, getPlane()), 2260, 41, 0, 41, 35,
							30, 0);
					World.sendProjectile(target, new WorldTile(getX(),
							getY() + 2, getPlane()), 2260, 41, 0, 41, 35,
							30, 0);
					World.sendProjectile(target, new WorldTile(getX(),
							getY() - 2, getPlane()), 2260, 41, 0, 41, 35,
							30, 0);
					entity.applyHit(new Hit(target, Utils.getRandom(600),
							HitLook.REGULAR_DAMAGE));
				}
			}
		}
	});
}

public ArrayList&lt;Entity&gt; calculatePossibleTargets(WorldTile current,
		WorldTile position, boolean northSouth) {
	ArrayList&lt;Entity&gt; list = new ArrayList&lt;Entity&gt;();
	for (Entity e : getPossibleTargets()) {
		if (e.inArea(current.getX(), current.getY(), position.getX()
				+ (northSouth ? 2 : 0), position.getY()
				+ (!northSouth ? 2 : 0))

				|| e.inArea(position.getX(), position.getY(),
						current.getX() + (northSouth ? 2 : 0),
						current.getY() + (!northSouth ? 2 : 0)))
			list.add(e);
	}
	return list;
}

public void moveNextStage() {
	if (getStage() == 0 &amp;&amp; minionStage == 1) {
		setCapDamage(500);
		setNextForceTalk(new ForceTalk("Darken my shadow!"));
		World.sendProjectile(ZarosGodwars.umbra, this, 2244, 18, 18, 60,
				30, 0, 0);
		getCombat().addCombatDelay(1);
		setStage(1);
		playSound(3302, 2);
	} else if (getStage() == 1 &amp;&amp; minionStage == 2) {
		setCapDamage(500);
		setNextForceTalk(new ForceTalk("Flood my lungs with blood!"));
		World.sendProjectile(ZarosGodwars.cruor, this, 2244, 18, 18, 60,
				30, 0, 0);
		getCombat().addCombatDelay(1);
		setStage(2);
		playSound(3306, 2);
	} else if (getStage() == 2 &amp;&amp; minionStage == 3) {
		setCapDamage(500);
		killBloodReavers();
		setNextForceTalk(new ForceTalk("Infuse me with the power of ice!"));
		World.sendProjectile(ZarosGodwars.glacies, this, 2244, 18, 18, 60,
				30, 0, 0);
		getCombat().addCombatDelay(1);
		setStage(3);
		playSound(3303, 2);
	} else if (getStage() == 3 &amp;&amp; minionStage == 4) {
		setCapDamage(500);
		setNextForceTalk(new ForceTalk("NOW, THE POWER OF ZAROS!"));
		setNextAnimation(new Animation(6326));
		setNextGraphics(new Graphics(1204));
		getCombat().addCombatDelay(1);
		heal(6000);
		setStage(4);
		playSound(3312, 2);
	}
}

public void resetSwitchPrayersDelay() {
	switchPrayersDelay = 35; // 25sec
}

public void switchPrayers() {
	transformIntoNPC(getId() == 13449 ? 13447 : getId() + 1);
}

@Override
public void handleIngoingHit(Hit hit) {
	if (doingSiphon)
		hit.setHealHit();
	if (getId() == 13449 &amp;&amp; hit.getLook() == HitLook.MELEE_DAMAGE) {
		Entity source = hit.getSource();
		if (source != null) {
			int deflectedDamage = (int) (hit.getDamage() * 0.1);
			hit.setDamage((int) (hit.getDamage() * source
					.getMeleePrayerMultiplier()));
			if (deflectedDamage &gt; 0)
				source.applyHit(new Hit(this, deflectedDamage,
						HitLook.REFLECTED_DAMAGE));
		}
	}
	super.handleIngoingHit(hit);
}

@Override
public void setNextAnimation(Animation nextAnimation) {
	if (doingSiphon)
		return;
	super.setNextAnimation(nextAnimation);
}

@Override
public void setNextGraphics(Graphics nextGraphic) {
	if (doingSiphon)
		return;
	super.setNextGraphics(nextGraphic);
}

@Override
public double getMagePrayerMultiplier() {
	return 0.6;
}

@Override
public double getRangePrayerMultiplier() {
	return 0.6;
}

@Override
public double getMeleePrayerMultiplier() {
	return 0.6;
}

@Override
public ArrayList&lt;Entity&gt; getPossibleTargets() {
	return ZarosGodwars.getPossibleTargets();
}

public boolean isFollowTarget() {
	return followTarget;
}

public void setFollowTarget(boolean followTarget) {
	this.followTarget = followTarget;
}

public int getAttacksStage() {
	return getStage();
}

public void setStage(int stage) {
	this.stage = stage;
}

public int getFlyTime() {
	return flyTime;
}

public void setFlyTime(int flyTime) {
	this.flyTime = flyTime;
}

public long getLastVirus() {
	return lastVirus;
}

public void sendVirusAttack(ArrayList&lt;Entity&gt; hitedEntitys,
		ArrayList&lt;Entity&gt; possibleTargets, Entity infected) {
	for (Entity t : possibleTargets) {
		if (hitedEntitys.contains(t))
			continue;
		if (Utils.getDistance(t.getX(), t.getY(), infected.getX(),
				infected.getY()) &lt;= 1) {
			t.setNextForceTalk(new ForceTalk("*Cough*"));
			t.applyHit(new Hit(this, Utils.getRandom(100),
					HitLook.REGULAR_DAMAGE));
			hitedEntitys.add(t);
			sendVirusAttack(hitedEntitys, possibleTargets, infected);
		}
	}
	playSound(3296, 2);
}

public void setLastVirus(long lastVirus) {
	this.lastVirus = lastVirus;
}

public boolean isEmbracedShadow() {
	return embracedShadow;
}

public void setEmbracedShadow(boolean embracedShadow) {
	this.embracedShadow = embracedShadow;
}

public boolean isTrapsSettedUp() {
	return trapsSettedUp;
}

public void setTrapsSettedUp(boolean trapsSettedUp) {
	this.trapsSettedUp = trapsSettedUp;
}

public long getLastSiphon() {
	return lastSiphon;
}

public void setLastSiphon(long lastSiphon) {
	this.lastSiphon = lastSiphon;
}

public NPC[] getBloodReavers() {
	return bloodReavers;
}

public void killBloodReavers() {
	for (int index = 0; index &lt; bloodReavers.length; index++) {
		if (bloodReavers[index] == null)
			continue;
		NPC npc = bloodReavers[index];
		bloodReavers[index] = null;
		if (npc.isDead())
			return;
		heal(npc.getHitpoints());
		npc.sendDeath(this);
	}
}

public boolean isDoingSiphon() {
	return doingSiphon;
}

public void setDoingSiphon(boolean doingSiphon) {
	this.doingSiphon = doingSiphon;
}

public int getStage() {
	return stage;
}
</code></pre>
<p>}<br>
[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/667-nex/521809/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/667-nex/521809/1</link>
        <pubDate>Sat, 15 Jun 2013 21:26:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-521809-1</guid>
        <source url="https://forum.moparisthebest.com/t/667-nex/521809.rss">[667] Nex</source>
      </item>
  </channel>
</rss>
