<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Extremely choppy movement</title>
    <link>https://forum.moparisthebest.com/t/extremely-choppy-movement/428564</link>
    <description>I&#39;m getting some pretty choppy movement, and I cant really figure out why. When I decided to use enums to represent the direction, and have the game update the players location based on the state of the enum, performance increased, but it&#39;s still extremely awful. How can I fix this?

GameMain class:
[code=java]

package gamemain;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

public class GameMain extends JFrame
{

    static final int CANVAS_WIDTH = 800;
    static final int CANVAS_HEIGHT = 600;
    static final int UPDATE_RATE = 60; // number of game updates per second
    static final long UPDATE_PERIOD = 1000000000L / UPDATE_RATE; //nanosecs

    //Enumeration for the states of the game.
    static enum State
    {
        INITIALIZED, PLAYING, PAUSED, GAMEOVER, DESTROYED
    }
    static State state; // Current state of the game.


    // Handle for the custom drawing panel
    private GameCanvas canvas;

    private Player player;

    // Constructor to initialize the UI components and game objects.
    public GameMain()
    {
        // Initialize the game objects.
        gameInit();

        //UI components
        canvas = new GameCanvas();
        canvas.setPreferredSize(new Dimension(CANVAS_WIDTH, CANVAS_HEIGHT));
        this.setContentPane(canvas);

        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        this.pack();
        this.setTitle(&quot;Game&quot;);
        this.setVisible(true);

        gameStart();
    }


    public void gameInit()
    {
        state = State.INITIALIZED;
        player = new Player(CANVAS_WIDTH / 2, CANVAS_HEIGHT / 2, 12, 12, 5);
    }

    public void gameShutDown()
    {
        state = State.DESTROYED;
    }

    // Starts and re-starts the game.
    public void gameStart()
    {
        // Create a new thread.
        Thread gameThread = new Thread() {

            @Override
            public void run()
            {
                gameLoop();
            }
        };
        // Start the thread. start() calls run(), which ultimately calls gameLoop().
        gameThread.start();
    }

    public void gameLoop()
    {
        state = State.PLAYING;


        // Game loop
        long beginTime, timeTaken, timeLeft;
        while(true)
        {
            beginTime = System.nanoTime();
            if (state == State.GAMEOVER) break;
            if (state == State.PLAYING)
            {
                //Update the state and positions of all game objects
                //Detect collisions etc.
                gameUpdate();
            }

            //Refresh the display
            repaint();
            //Delay timer to keep stedy game rate
            timeTaken = System.nanoTime() - beginTime;
            timeLeft = (UPDATE_PERIOD - timeTaken) / 1000000L; // in milliseconds
            if (timeLeft &lt; 10) timeLeft = 10;
            try
            {
                Thread.sleep(timeLeft);
            }
            catch (InterruptedException ex) {}
        }
    }

    public void gameUpdate()
    {
        player.move();
    }

    public void gameDraw(Graphics2D g2d)
    {
        switch(state)
        {
            case INITIALIZED:

                break;
            case PLAYING:
                g2d.setColor(Color.red);
                player.draw(g2d);
                break;
            case PAUSED:
                break;
            case GAMEOVER:
                break;
        }
        //...
    }


    public void gameKeyPressed(int keyCode)
    {
        switch(keyCode)
        {
            case KeyEvent.VK_UP:
                player.setDirection(Player.Direction.UP);
                break;
            case KeyEvent.VK_DOWN:
                player.setDirection(Player.Direction.DOWN);
                break;
            case KeyEvent.VK_LEFT:
                player.setDirection(Player.Direction.LEFT);
                break;
            case KeyEvent.VK_RIGHT:
                player.setDirection(Player.Direction.RIGHT);
                break;
        }
    }

    public void gameKeyReleased(int keyCode) {
        switch(keyCode)
        {
            case KeyEvent.VK_UP:
            case KeyEvent.VK_DOWN:
            case KeyEvent.VK_LEFT:
            case KeyEvent.VK_RIGHT:
                player.setDirection(Player.Direction.NULL);
                break;
        }
    }
    public void gameKeyTyped(char keyChar) {}

class GameCanvas extends JPanel implements KeyListener
{
    public GameCanvas()
    {
        setFocusable(true);
        requestFocus();
        addKeyListener(this);
    }

    @Override
    public void paintComponent(Graphics g)
    {
        Graphics2D g2d = (Graphics2D) g;
        super.paintComponent(g2d);
        setBackground(Color.BLACK);

        //Draw game objects
        gameDraw(g2d);
    }

    public void keyTyped(KeyEvent e) {
        gameKeyTyped(e.getKeyChar());
    }

    public void keyPressed(KeyEvent e) {
        gameKeyPressed(e.getKeyCode());
    }

    public void keyReleased(KeyEvent e) {
        gameKeyReleased(e.getKeyCode());
    }


}


    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run()
            {
                new GameMain();
            }
        });
    }

}
[/code]

Entity class:
[code=java]

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package gamemain;

import java.awt.Graphics;
import java.awt.Rectangle;

/**
 *
 * @author Wesley
 */
public class Entity
{
    public Rectangle entity;
    
    double speed;
    boolean isAlive;

    Graphics graphics;

    public boolean intersects(Rectangle rect)
    {
        if(entity.intersects(rect))
            return true;
        else
            return false;
    }
    public boolean contains(Rectangle rect)
    {
        if(entity.contains(rect))
            return true;
        else
            return false;
    }

    public void draw(Graphics g)
    {
        this.graphics = g;
        graphics.fillRoundRect(entity.x, entity.y, entity.width, entity.height, 2, 2);
    }

    private void destroy() {
        graphics.clearRect(entity.x, entity.y, entity.width, entity.height);

    }

    public void setSpeed(double speed)
    {
        this.speed = speed;
    }

    public double getX()
    {
        return entity.getX();
    }
    
    public double getY()
    {
        return entity.getY();
    }

    public Entity(int posX, int posY , int width, int height, double speed)
    {
        this.speed = speed;
        entity = new Rectangle(posX, posY, width, height);
    }

    public Entity()
    {}
}
[/code]

Player class:
[code=java]
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gamemain;

import java.awt.Rectangle;
import java.awt.event.KeyEvent;

/**
 *
 * @author wesley
 */
public class Player extends Entity {

    public enum Direction
    {
        UP,DOWN,LEFT,RIGHT,NULL
    }
    private Direction direction;

    public void move()
    {
        if (direction != null)
        {
            switch(direction)
            {
                case UP:
                    entity.setLocation(entity.x, entity.y - (int) speed);
                    break;
                case DOWN:
                    entity.setLocation(entity.x, entity.y + (int) speed);
                    break;
                case LEFT:
                    entity.setLocation(entity.x - (int) speed, entity.y);
                    break;
                case RIGHT:
                    entity.setLocation(entity.x + (int) speed, entity.y);
                    break;
                default:
                    break;
            }
        }
    }

    public void setDirection(Direction dir)
    {
        this.direction = dir;
    }

    public Player(int posX, int posY , int width, int height, double speed) {
        this.speed = speed;
        entity = new Rectangle(posX, posY, width, height);
    }

}
[/code]</description>
    
    <lastBuildDate>Wed, 11 Jan 2012 02:09:44 +0000</lastBuildDate>
    <category>Game Development</category>
    <atom:link href="https://forum.moparisthebest.com/t/extremely-choppy-movement/428564.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Extremely choppy movement</title>
        <dc:creator><![CDATA[@ziplock ziplock]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ziplock">@ziplock</a> wrote:</p>
          <blockquote>
              <p>[quote=“sppt, post:10, topic:428564”]In the constructor of Main you can drop the this. in front of everything, it is not needed, but if you like it this way, keep it.</p>
<p>In gameLoop() you might want to remove state = State.PLAYING; otherwise you might get funny effects later on <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>No other suggestions, but then again, I might be ramble due to being high :P[/quote]</p>
<p>Haha thanks. <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"> I wouldn’t think it would as it’s only being called once the gameLoop is first called.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/extremely-choppy-movement/428564/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/extremely-choppy-movement/428564/11</link>
        <pubDate>Wed, 11 Jan 2012 02:09:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-428564-11</guid>
        <source url="https://forum.moparisthebest.com/t/extremely-choppy-movement/428564.rss">Extremely choppy movement</source>
      </item>
      <item>
        <title>Extremely choppy movement</title>
        <dc:creator><![CDATA[@sppt sppt]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sppt">@sppt</a> wrote:</p>
          <blockquote>
              <p>In the constructor of Main you can drop the this. in front of everything, it is not needed, but if you like it this way, keep it.</p>
<p>In gameLoop() you might want to remove state = State.PLAYING; otherwise you might get funny effects later on <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>No other suggestions, but then again, I might be ramble due to being high <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/extremely-choppy-movement/428564/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/extremely-choppy-movement/428564/10</link>
        <pubDate>Wed, 11 Jan 2012 01:38:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-428564-10</guid>
        <source url="https://forum.moparisthebest.com/t/extremely-choppy-movement/428564.rss">Extremely choppy movement</source>
      </item>
      <item>
        <title>Extremely choppy movement</title>
        <dc:creator><![CDATA[@ziplock ziplock]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ziplock">@ziplock</a> wrote:</p>
          <blockquote>
              <p>Ohh alright, thanks guys for helping me figure it out.</p>
<pre><code class="lang-auto">package test;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

public class Main extends JFrame {


    public enum State
    {
        INITIALIZED, PLAYING, PAUSED, GAMEOVER, DESTROYED
    }
    
    static State state;
    
    final int  GAME_HEIGHT = 500;
    final int GAME_WIDTH = 800;
    final int  UPDATE_RATE = 60;
    final long UPDATE_PERIOD = 1000000000L / UPDATE_RATE;

    Graphics2D bufferGraphics;
    
    Image offScreen;
    private Canvas canvas;
    Screen screen = new Screen();

    public Main()
    {
        // UI components  
        canvas = new Canvas();
        canvas.setPreferredSize(new Dimension(GAME_WIDTH, GAME_HEIGHT));
        this.setContentPane(canvas);
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        this.pack();
        this.setTitle("Some fucking game.");
        this.createBufferStrategy(2);
        this.setVisible(true);
        initialize();
        gameStart();
    }

    private void initialize()
    {
        state = State.INITIALIZED;
        offScreen = createImage(GAME_WIDTH, GAME_HEIGHT);
        bufferGraphics = (Graphics2D) offScreen.getGraphics();
    }

    private void gameStart()
    {
        Thread gameThread = new Thread()
        {
            @Override
            public void run()
            {
                gameLoop();
            }
        };
        gameThread.start();
    }

    public void gameLoop()
    {
        state = State.PLAYING;
        // Ultimately updates positions, repaints, and sleeps
        // until the desired amount of cycles per second
        // is met.
        long beginTime, timeTaken, timeLeft;
        while(true)
        {
            beginTime = System.nanoTime();
            if (state == State.GAMEOVER) break;
            if (state == State.PLAYING)
            {
                gameUpdate();
            }

            repaint();

            timeTaken = System.nanoTime() - beginTime;
            timeLeft = (UPDATE_PERIOD - timeTaken) / 1000000L;
            if (timeLeft &lt; 10) timeLeft = 10;
            try
            {
                Thread.sleep(timeLeft);
            } catch (Exception ex) {}
        }
    }

    private void gameUpdate()
    {
        
    }

    public void gameDraw(Graphics g)
    {
        switch(state)
        {
            case INITIALIZED:
                break;
            case PLAYING:
                g.fillRect(200, 200, 80, 50);
                break;
            case PAUSED:
                break;
            case GAMEOVER:
                break;
            case DESTROYED:
                break;
        }
    }
    
    public void gameKeyPressed(int Keycode)
    {
        
    }

    public void gameKeyReleased(int Keycode)
    {
        
    }

    public void gameKeyTyped(char keyChar) { }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable()
        {
            public void run()
            {
                new Main();
            }
        });
    }


    public class Canvas extends JPanel implements KeyListener {

        @Override
        public void paintComponent(Graphics g)
        {
            Graphics2D g2d = (Graphics2D) g;
            bufferGraphics.clearRect(0, 0, GAME_WIDTH, GAME_HEIGHT);
            bufferGraphics.setColor(Color.red);
            bufferGraphics.drawString("String here!", 20, 20);
            gameDraw(bufferGraphics);
            
            g2d.drawImage(offScreen, 0, 0, this);

        }

        public void keyTyped(KeyEvent e)
        {
            gameKeyTyped(e.getKeyChar());
        }

        public void keyPressed(KeyEvent e) 
        {
            gameKeyPressed(e.getKeyCode());
        }

        public void keyReleased(KeyEvent e)
        {
            gameKeyReleased(e.getKeyCode());
        }

    }
}</code></pre>
<p>Any more suggestions for improvement?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/extremely-choppy-movement/428564/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/extremely-choppy-movement/428564/9</link>
        <pubDate>Wed, 11 Jan 2012 00:41:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-428564-9</guid>
        <source url="https://forum.moparisthebest.com/t/extremely-choppy-movement/428564.rss">Extremely choppy movement</source>
      </item>
      <item>
        <title>Extremely choppy movement</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>You cast the components graphics context to Graphics2D using the name g2d.</p>
<p>So now your ways of drawing to the component are using ‘g’ (the original context) or ‘g2d’ (the casted context). However, you then create a new graphics context using the image getGraphics method, and call it ‘g2d’ as well. So now, ‘g’ is your way of drawing to the component, and ‘g2d’ is your way of drawing onto the image.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/extremely-choppy-movement/428564/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/extremely-choppy-movement/428564/8</link>
        <pubDate>Tue, 10 Jan 2012 05:28:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-428564-8</guid>
        <source url="https://forum.moparisthebest.com/t/extremely-choppy-movement/428564.rss">Extremely choppy movement</source>
      </item>
      <item>
        <title>Extremely choppy movement</title>
        <dc:creator><![CDATA[@ziplock ziplock]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ziplock">@ziplock</a> wrote:</p>
          <blockquote>
              <p>Gah! The whole thing is shit, let me redo it.</p>
<p>Also can explain this a bit more please?</p>
<p>[quote=“Davidi2, post:5, topic:428564”]Your own implementation can grant you more flexibility.</p>
<p><a class="mention" href="/u/ziplock">@ziplock</a>, it’s pretty simple what your mistake was:</p>
<h2>[code=java]<br>
offscreen = createImage(CANVAS_WIDTH, CANVAS_HEIGHT);<br>
g2d = (Graphics2D) offscreen.getGraphics();</h2>
<p>gameDraw(g2d);<br>
[/code] should be</p>
<pre><code class="lang-auto">offscreen = createImage(CANVAS_WIDTH, CANVAS_HEIGHT);
g2d2 = (Graphics2D) offscreen.getGraphics();
--
gameDraw(g2d2);</code></pre>
<p>or something. Or you could change “g2d.drawImage(offscreen, 0,0, this);” to “g.drawImage(offscreen, 0,0, this);”</p>
<p>You should also not be recreating the graphic context/image each time you paint, that’s going to slow you down.[/quote]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/extremely-choppy-movement/428564/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/extremely-choppy-movement/428564/7</link>
        <pubDate>Tue, 10 Jan 2012 01:57:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-428564-7</guid>
        <source url="https://forum.moparisthebest.com/t/extremely-choppy-movement/428564.rss">Extremely choppy movement</source>
      </item>
      <item>
        <title>Extremely choppy movement</title>
        <dc:creator><![CDATA[@_s11 s1gma]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_s11">@_s11</a> wrote:</p>
          <blockquote>
              <p>[quote=“Davidi2, post:5, topic:428564”]Your own implementation can grant you more flexibility.</p>
<p><a class="mention" href="/u/ziplock">@ziplock</a>, it’s pretty simple what your mistake was:</p>
<h2>[code=java]<br>
offscreen = createImage(CANVAS_WIDTH, CANVAS_HEIGHT);<br>
g2d = (Graphics2D) offscreen.getGraphics();</h2>
<p>gameDraw(g2d);<br>
[/code] should be</p>
<pre><code class="lang-auto">offscreen = createImage(CANVAS_WIDTH, CANVAS_HEIGHT);
g2d2 = (Graphics2D) offscreen.getGraphics();
--
gameDraw(g2d2);</code></pre>
<p>or something. Or you could change “g2d.drawImage(offscreen, 0,0, this);” to “g.drawImage(offscreen, 0,0, this);”</p>
<p>You should also not be recreating the graphic context/image each time you paint, that’s going to slow you down.[/quote]i highly doubt he needs the flexibility for something this simple</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/extremely-choppy-movement/428564/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/extremely-choppy-movement/428564/6</link>
        <pubDate>Mon, 09 Jan 2012 20:16:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-428564-6</guid>
        <source url="https://forum.moparisthebest.com/t/extremely-choppy-movement/428564.rss">Extremely choppy movement</source>
      </item>
      <item>
        <title>Extremely choppy movement</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>Your own implementation can grant you more flexibility.</p>
<p><a class="mention" href="/u/ziplock">@ziplock</a>, it’s pretty simple what your mistake was:</p>
<h2>[code=java]<br>
offscreen = createImage(CANVAS_WIDTH, CANVAS_HEIGHT);<br>
g2d = (Graphics2D) offscreen.getGraphics();</h2>
<p>gameDraw(g2d);<br>
[/code] should be</p>
<pre><code class="lang-auto">offscreen = createImage(CANVAS_WIDTH, CANVAS_HEIGHT);
g2d2 = (Graphics2D) offscreen.getGraphics();
--
gameDraw(g2d2);</code></pre>
<p>or something. Or you could change “g2d.drawImage(offscreen, 0,0, this);” to “g.drawImage(offscreen, 0,0, this);”</p>
<p>You should also not be recreating the graphic context/image each time you paint, that’s going to slow you down.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/extremely-choppy-movement/428564/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/extremely-choppy-movement/428564/5</link>
        <pubDate>Mon, 09 Jan 2012 16:08:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-428564-5</guid>
        <source url="https://forum.moparisthebest.com/t/extremely-choppy-movement/428564.rss">Extremely choppy movement</source>
      </item>
      <item>
        <title>Extremely choppy movement</title>
        <dc:creator><![CDATA[@_s11 s1gma]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_s11">@_s11</a> wrote:</p>
          <blockquote>
              <p>don’t implement double buffering yourself, look at <a href="http://docs.oracle.com/javase/7/docs/api/java/awt/image/BufferStrategy.html" data-bbcode="true" rel="nofollow noopener">BufferStrategy</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/extremely-choppy-movement/428564/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/extremely-choppy-movement/428564/4</link>
        <pubDate>Sun, 08 Jan 2012 21:24:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-428564-4</guid>
        <source url="https://forum.moparisthebest.com/t/extremely-choppy-movement/428564.rss">Extremely choppy movement</source>
      </item>
      <item>
        <title>Extremely choppy movement</title>
        <dc:creator><![CDATA[@ziplock ziplock]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ziplock">@ziplock</a> wrote:</p>
          <blockquote>
              <p>Well, I attempted it, but I can’t figure out why it doesn’t draw anything to the screen now.</p>
<pre><code class="lang-auto">    @Override
    public void paintComponent(Graphics g)
    {
        Graphics2D g2d = (Graphics2D) g;
        super.paintComponent(g2d);
        setBackground(Color.BLACK);

        offscreen = createImage(CANVAS_WIDTH, CANVAS_HEIGHT);
        g2d = (Graphics2D) offscreen.getGraphics();
        g2d.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);
        
        //Draw game objects
        gameDraw(g2d);
        g2d.drawImage(offscreen, 0,0, this);
    }

    public void gameDraw(Graphics2D g2d)
    {
        switch(state)
        {
            case INITIALIZED:
                break;
            case PLAYING:
                g2d.setColor(Color.red);
                player.draw(g2d);
                break;
            case PAUSED:
                break;
            case GAMEOVER:
                break;
        }
        //...
    }</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/extremely-choppy-movement/428564/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/extremely-choppy-movement/428564/3</link>
        <pubDate>Sun, 08 Jan 2012 17:28:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-428564-3</guid>
        <source url="https://forum.moparisthebest.com/t/extremely-choppy-movement/428564.rss">Extremely choppy movement</source>
      </item>
      <item>
        <title>Extremely choppy movement</title>
        <dc:creator><![CDATA[@sppt sppt]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sppt">@sppt</a> wrote:</p>
          <blockquote>
              <p>I’d recommend you to implement double buffering to start with.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/extremely-choppy-movement/428564/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/extremely-choppy-movement/428564/2</link>
        <pubDate>Sun, 08 Jan 2012 17:07:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-428564-2</guid>
        <source url="https://forum.moparisthebest.com/t/extremely-choppy-movement/428564.rss">Extremely choppy movement</source>
      </item>
      <item>
        <title>Extremely choppy movement</title>
        <dc:creator><![CDATA[@ziplock ziplock]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ziplock">@ziplock</a> wrote:</p>
          <blockquote>
              <p>I’m getting some pretty choppy movement, and I cant really figure out why. When I decided to use enums to represent the direction, and have the game update the players location based on the state of the enum, performance increased, but it’s still extremely awful. How can I fix this?</p>
<p>GameMain class:</p>
<pre><code class="lang-auto">
package gamemain;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

public class GameMain extends JFrame
{

    static final int CANVAS_WIDTH = 800;
    static final int CANVAS_HEIGHT = 600;
    static final int UPDATE_RATE = 60; // number of game updates per second
    static final long UPDATE_PERIOD = 1000000000L / UPDATE_RATE; //nanosecs

    //Enumeration for the states of the game.
    static enum State
    {
        INITIALIZED, PLAYING, PAUSED, GAMEOVER, DESTROYED
    }
    static State state; // Current state of the game.


    // Handle for the custom drawing panel
    private GameCanvas canvas;

    private Player player;

    // Constructor to initialize the UI components and game objects.
    public GameMain()
    {
        // Initialize the game objects.
        gameInit();

        //UI components
        canvas = new GameCanvas();
        canvas.setPreferredSize(new Dimension(CANVAS_WIDTH, CANVAS_HEIGHT));
        this.setContentPane(canvas);

        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        this.pack();
        this.setTitle("Game");
        this.setVisible(true);

        gameStart();
    }


    public void gameInit()
    {
        state = State.INITIALIZED;
        player = new Player(CANVAS_WIDTH / 2, CANVAS_HEIGHT / 2, 12, 12, 5);
    }

    public void gameShutDown()
    {
        state = State.DESTROYED;
    }

    // Starts and re-starts the game.
    public void gameStart()
    {
        // Create a new thread.
        Thread gameThread = new Thread() {

            @Override
            public void run()
            {
                gameLoop();
            }
        };
        // Start the thread. start() calls run(), which ultimately calls gameLoop().
        gameThread.start();
    }

    public void gameLoop()
    {
        state = State.PLAYING;


        // Game loop
        long beginTime, timeTaken, timeLeft;
        while(true)
        {
            beginTime = System.nanoTime();
            if (state == State.GAMEOVER) break;
            if (state == State.PLAYING)
            {
                //Update the state and positions of all game objects
                //Detect collisions etc.
                gameUpdate();
            }

            //Refresh the display
            repaint();
            //Delay timer to keep stedy game rate
            timeTaken = System.nanoTime() - beginTime;
            timeLeft = (UPDATE_PERIOD - timeTaken) / 1000000L; // in milliseconds
            if (timeLeft &lt; 10) timeLeft = 10;
            try
            {
                Thread.sleep(timeLeft);
            }
            catch (InterruptedException ex) {}
        }
    }

    public void gameUpdate()
    {
        player.move();
    }

    public void gameDraw(Graphics2D g2d)
    {
        switch(state)
        {
            case INITIALIZED:

                break;
            case PLAYING:
                g2d.setColor(Color.red);
                player.draw(g2d);
                break;
            case PAUSED:
                break;
            case GAMEOVER:
                break;
        }
        //...
    }


    public void gameKeyPressed(int keyCode)
    {
        switch(keyCode)
        {
            case KeyEvent.VK_UP:
                player.setDirection(Player.Direction.UP);
                break;
            case KeyEvent.VK_DOWN:
                player.setDirection(Player.Direction.DOWN);
                break;
            case KeyEvent.VK_LEFT:
                player.setDirection(Player.Direction.LEFT);
                break;
            case KeyEvent.VK_RIGHT:
                player.setDirection(Player.Direction.RIGHT);
                break;
        }
    }

    public void gameKeyReleased(int keyCode) {
        switch(keyCode)
        {
            case KeyEvent.VK_UP:
            case KeyEvent.VK_DOWN:
            case KeyEvent.VK_LEFT:
            case KeyEvent.VK_RIGHT:
                player.setDirection(Player.Direction.NULL);
                break;
        }
    }
    public void gameKeyTyped(char keyChar) {}

class GameCanvas extends JPanel implements KeyListener
{
    public GameCanvas()
    {
        setFocusable(true);
        requestFocus();
        addKeyListener(this);
    }

    @Override
    public void paintComponent(Graphics g)
    {
        Graphics2D g2d = (Graphics2D) g;
        super.paintComponent(g2d);
        setBackground(Color.BLACK);

        //Draw game objects
        gameDraw(g2d);
    }

    public void keyTyped(KeyEvent e) {
        gameKeyTyped(e.getKeyChar());
    }

    public void keyPressed(KeyEvent e) {
        gameKeyPressed(e.getKeyCode());
    }

    public void keyReleased(KeyEvent e) {
        gameKeyReleased(e.getKeyCode());
    }


}


    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run()
            {
                new GameMain();
            }
        });
    }

}</code></pre>
<p>Entity class:</p>
<pre><code class="lang-auto">
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package gamemain;

import java.awt.Graphics;
import java.awt.Rectangle;

/**
 *
 * @author Wesley
 */
public class Entity
{
    public Rectangle entity;
    
    double speed;
    boolean isAlive;

    Graphics graphics;

    public boolean intersects(Rectangle rect)
    {
        if(entity.intersects(rect))
            return true;
        else
            return false;
    }
    public boolean contains(Rectangle rect)
    {
        if(entity.contains(rect))
            return true;
        else
            return false;
    }

    public void draw(Graphics g)
    {
        this.graphics = g;
        graphics.fillRoundRect(entity.x, entity.y, entity.width, entity.height, 2, 2);
    }

    private void destroy() {
        graphics.clearRect(entity.x, entity.y, entity.width, entity.height);

    }

    public void setSpeed(double speed)
    {
        this.speed = speed;
    }

    public double getX()
    {
        return entity.getX();
    }
    
    public double getY()
    {
        return entity.getY();
    }

    public Entity(int posX, int posY , int width, int height, double speed)
    {
        this.speed = speed;
        entity = new Rectangle(posX, posY, width, height);
    }

    public Entity()
    {}
}</code></pre>
<p>Player class:</p>
<pre><code class="lang-auto">/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gamemain;

import java.awt.Rectangle;
import java.awt.event.KeyEvent;

/**
 *
 * @author wesley
 */
public class Player extends Entity {

    public enum Direction
    {
        UP,DOWN,LEFT,RIGHT,NULL
    }
    private Direction direction;

    public void move()
    {
        if (direction != null)
        {
            switch(direction)
            {
                case UP:
                    entity.setLocation(entity.x, entity.y - (int) speed);
                    break;
                case DOWN:
                    entity.setLocation(entity.x, entity.y + (int) speed);
                    break;
                case LEFT:
                    entity.setLocation(entity.x - (int) speed, entity.y);
                    break;
                case RIGHT:
                    entity.setLocation(entity.x + (int) speed, entity.y);
                    break;
                default:
                    break;
            }
        }
    }

    public void setDirection(Direction dir)
    {
        this.direction = dir;
    }

    public Player(int posX, int posY , int width, int height, double speed) {
        this.speed = speed;
        entity = new Rectangle(posX, posY, width, height);
    }

}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/extremely-choppy-movement/428564/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/extremely-choppy-movement/428564/1</link>
        <pubDate>Sun, 08 Jan 2012 16:56:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-428564-1</guid>
        <source url="https://forum.moparisthebest.com/t/extremely-choppy-movement/428564.rss">Extremely choppy movement</source>
      </item>
  </channel>
</rss>
