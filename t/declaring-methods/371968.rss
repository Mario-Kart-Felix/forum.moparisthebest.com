<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Declaring methods</title>
    <link>https://forum.moparisthebest.com/t/declaring-methods/371968</link>
    <description>Well, i been lookin for a 317 webclient tut, found one did everything

except declaring methods, im not sure how to declare, and it doesnt SHOW me how to 

Gotta declare all this in my client , client.java

      [code]  private String homeDir;
        private String saveAs;
        private String urlLoc;
        private boolean checkProgress;
        
        private void log(int dontBother, String loggedInfo)
        {
                method13(dontBother, (byte)4, loggedInfo);
        }
        
        public void updateCache(String downloadURL, String downloadedFileName, String downloadDirectory, 
                        boolean connection, boolean errorExists)
        {
                homeDir = downloadDirectory;
                saveAs = downloadDirectory + downloadedFileName;
                urlLoc = downloadURL;
                checkProgress = connection;
                if (downloadFile())
                {
                        unZipFile();
                        deleteFile();
                }
                else
                {
                        deleteFile();
                        if (connection)
                        {
                                System.err.println(&quot;You lost connection while downloading a needed file.\n&quot; +
                                                &quot;Please download it manually from:\n&quot; + downloadURL + 
                                                &quot;\nand extract the file to your &quot; + downloadDirectory +
                                                &quot;\nfolder. Then restart your client.&quot;);
                        }
                        if (errorExists)
                        {
                                System.err.println(&quot;Fatal error, exiting.&quot;);
                        }
                }
        }
        
        private void writeStream(InputStream input, OutputStream output) throws IOException
        {
                byte[] bytes;
                int ints;
                bytes = new byte[1024];
                while ((ints = input.read(bytes)) &gt;= 0)
                {
                        output.write(bytes, 0, ints);
                }
                input.close();
                output.close();
        }

        private void unZipFile()
        {
                ZipFile zipFile;
                Enumeration enumer;
                ZipEntry zipEnter;
                try {
                        zipFile = new ZipFile(saveAs);
                        enumer = zipFile.entries();
                        while (enumer.hasMoreElements())
                        {
                                zipEnter = (ZipEntry) enumer.nextElement();
                                if (zipEnter.isDirectory())
                                {
                                        if (checkProgress)
                                        {
                                                log(35, &quot;Creating Directory: &quot; + zipEnter.getName());
                                        }
                                        new File(homeDir + zipEnter.getName()).mkdir();
                                }
                                else {
                                        if (checkProgress)
                                        {
                                                log(35, &quot;Extracting File: &quot; + zipEnter.getName());
                                        }
                                        writeStream(zipFile.getInputStream(zipEnter), new BufferedOutputStream(
                                                        new FileOutputStream(homeDir + zipEnter.getName())));
                                }
                        }
                        zipFile.close();
                }
                catch (Exception e3) {
                        e3.printStackTrace();
                }
        }

        private void deleteFile() {
                File f1;
                try {
                        f1 = new File(saveAs);
                        f1.delete();
                }
                catch (Exception e1) {
                        e1.printStackTrace();
                }
        }

        private boolean downloadFile()
        {
                URLConnection connectionOne;
                long connectionLength;
                FileOutputStream fileOut;
                BufferedOutputStream bufferedOut;
                File files;
                if (checkProgress)
                {                        
                        log(35, &quot;Getting cache - Speed depends on connection&quot;);
                }
                try
                {
                        connectionOne = new URL(urlLoc).openConnection();
                        connectionLength = (long) connectionOne.getContentLength();
                        fileOut = new FileOutputStream(saveAs);
                        bufferedOut = new BufferedOutputStream(fileOut);
                        writeStream(connectionOne.getInputStream(), bufferedOut);
                        fileOut.close();
                        bufferedOut.close();
                        files = new File(saveAs);
                        if ((connectionLength - files.length()) != 0)
                        {
                                return false;
                        }
                }
                catch (IOException iox1)
                {
                        iox1.printStackTrace();
                }
                try
                {
                        if (checkProgress)
                        {
                                method13(35, (byte)4, &quot;Cache was downloaded!&quot;);
                        }
                        return true;
                }
                catch (Exception e5)
                {
                        e5.printStackTrace();
                }
                return false;
        }
        
        private void getCache()
        {
                File cacheLocation = new File(sign.signlink.findcachedir());
                File mainDatFile = new File(sign.signlink.findcachedir() + &quot;cacheDownloaded_v1.dat&quot;);
                if (!cacheLocation.exists())
                {
                        cacheLocation.mkdir();
                        updateCache(&quot;http://www.hotlinkfiles.com/files/2589182_czyhg/.file_store_32.zip&quot;, 
                                                &quot;.file_store_32.zip&quot;, sign.signlink.findcachedir(), true, true);
                }
                if (cacheLocation.exists())
                {
                        if(!mainDatFile.exists())
                        {
                                updateCache(&quot;http://www.hotlinkfiles.com/files/2589182_czyhg/.file_store_32.zip&quot;, 
                                                &quot;.file_store_32.zip&quot;, sign.signlink.findcachedir(), true, true);
                        }
                        else if(mainDatFile.exists())
                                return;
                }
        }[/code]


help appreciated</description>
    
    <lastBuildDate>Mon, 06 Dec 2010 18:58:11 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/declaring-methods/371968.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Declaring methods</title>
        <dc:creator><![CDATA[@xXx_gl0wi_xXx xXx gl0wi xXx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xxx_gl0wi_xxx">@xXx_gl0wi_xXx</a> wrote:</p>
          <blockquote>
              <p>thanks guys, trying the tut now</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/declaring-methods/371968/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/declaring-methods/371968/4</link>
        <pubDate>Mon, 06 Dec 2010 18:58:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-371968-4</guid>
        <source url="https://forum.moparisthebest.com/t/declaring-methods/371968.rss">Declaring methods</source>
      </item>
      <item>
        <title>Declaring methods</title>
        <dc:creator><![CDATA[@Sanskrit Sanskrit]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sanskrit">@Sanskrit</a> wrote:</p>
          <blockquote>
              <p>Here you go.</p>
<p><a href="http://download.oracle.com/javase/tutorial/java/javaOO/methods.html" class="onebox" target="_blank" rel="nofollow noopener">http://download.oracle.com/javase/tutorial/java/javaOO/methods.html</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/declaring-methods/371968/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/declaring-methods/371968/3</link>
        <pubDate>Sun, 05 Dec 2010 22:27:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-371968-3</guid>
        <source url="https://forum.moparisthebest.com/t/declaring-methods/371968.rss">Declaring methods</source>
      </item>
      <item>
        <title>Declaring methods</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>With the rest of your methodsâ€¦</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/declaring-methods/371968/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/declaring-methods/371968/2</link>
        <pubDate>Sun, 05 Dec 2010 22:20:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-371968-2</guid>
        <source url="https://forum.moparisthebest.com/t/declaring-methods/371968.rss">Declaring methods</source>
      </item>
      <item>
        <title>Declaring methods</title>
        <dc:creator><![CDATA[@xXx_gl0wi_xXx xXx gl0wi xXx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xxx_gl0wi_xxx">@xXx_gl0wi_xXx</a> wrote:</p>
          <blockquote>
              <p>Well, i been lookin for a 317 webclient tut, found one did everything</p>
<p>except declaring methods, im not sure how to declare, and it doesnt SHOW me how to</p>
<p>Gotta declare all this in my client , client.java</p>
<pre><code>  [code]  private String homeDir;
    private String saveAs;
    private String urlLoc;
    private boolean checkProgress;
    
    private void log(int dontBother, String loggedInfo)
    {
            method13(dontBother, (byte)4, loggedInfo);
    }
    
    public void updateCache(String downloadURL, String downloadedFileName, String downloadDirectory, 
                    boolean connection, boolean errorExists)
    {
            homeDir = downloadDirectory;
            saveAs = downloadDirectory + downloadedFileName;
            urlLoc = downloadURL;
            checkProgress = connection;
            if (downloadFile())
            {
                    unZipFile();
                    deleteFile();
            }
            else
            {
                    deleteFile();
                    if (connection)
                    {
                            System.err.println("You lost connection while downloading a needed file.\n" +
                                            "Please download it manually from:\n" + downloadURL + 
                                            "\nand extract the file to your " + downloadDirectory +
                                            "\nfolder. Then restart your client.");
                    }
                    if (errorExists)
                    {
                            System.err.println("Fatal error, exiting.");
                    }
            }
    }
    
    private void writeStream(InputStream input, OutputStream output) throws IOException
    {
            byte[] bytes;
            int ints;
            bytes = new byte[1024];
            while ((ints = input.read(bytes)) &gt;= 0)
            {
                    output.write(bytes, 0, ints);
            }
            input.close();
            output.close();
    }

    private void unZipFile()
    {
            ZipFile zipFile;
            Enumeration enumer;
            ZipEntry zipEnter;
            try {
                    zipFile = new ZipFile(saveAs);
                    enumer = zipFile.entries();
                    while (enumer.hasMoreElements())
                    {
                            zipEnter = (ZipEntry) enumer.nextElement();
                            if (zipEnter.isDirectory())
                            {
                                    if (checkProgress)
                                    {
                                            log(35, "Creating Directory: " + zipEnter.getName());
                                    }
                                    new File(homeDir + zipEnter.getName()).mkdir();
                            }
                            else {
                                    if (checkProgress)
                                    {
                                            log(35, "Extracting File: " + zipEnter.getName());
                                    }
                                    writeStream(zipFile.getInputStream(zipEnter), new BufferedOutputStream(
                                                    new FileOutputStream(homeDir + zipEnter.getName())));
                            }
                    }
                    zipFile.close();
            }
            catch (Exception e3) {
                    e3.printStackTrace();
            }
    }

    private void deleteFile() {
            File f1;
            try {
                    f1 = new File(saveAs);
                    f1.delete();
            }
            catch (Exception e1) {
                    e1.printStackTrace();
            }
    }

    private boolean downloadFile()
    {
            URLConnection connectionOne;
            long connectionLength;
            FileOutputStream fileOut;
            BufferedOutputStream bufferedOut;
            File files;
            if (checkProgress)
            {                        
                    log(35, "Getting cache - Speed depends on connection");
            }
            try
            {
                    connectionOne = new URL(urlLoc).openConnection();
                    connectionLength = (long) connectionOne.getContentLength();
                    fileOut = new FileOutputStream(saveAs);
                    bufferedOut = new BufferedOutputStream(fileOut);
                    writeStream(connectionOne.getInputStream(), bufferedOut);
                    fileOut.close();
                    bufferedOut.close();
                    files = new File(saveAs);
                    if ((connectionLength - files.length()) != 0)
                    {
                            return false;
                    }
            }
            catch (IOException iox1)
            {
                    iox1.printStackTrace();
            }
            try
            {
                    if (checkProgress)
                    {
                            method13(35, (byte)4, "Cache was downloaded!");
                    }
                    return true;
            }
            catch (Exception e5)
            {
                    e5.printStackTrace();
            }
            return false;
    }
    
    private void getCache()
    {
            File cacheLocation = new File(sign.signlink.findcachedir());
            File mainDatFile = new File(sign.signlink.findcachedir() + "cacheDownloaded_v1.dat");
            if (!cacheLocation.exists())
            {
                    cacheLocation.mkdir();
                    updateCache("http://www.hotlinkfiles.com/files/2589182_czyhg/.file_store_32.zip", 
                                            ".file_store_32.zip", sign.signlink.findcachedir(), true, true);
            }
            if (cacheLocation.exists())
            {
                    if(!mainDatFile.exists())
                    {
                            updateCache("http://www.hotlinkfiles.com/files/2589182_czyhg/.file_store_32.zip", 
                                            ".file_store_32.zip", sign.signlink.findcachedir(), true, true);
                    }
                    else if(mainDatFile.exists())
                            return;
            }
    }[/code]
</code></pre>
<p>help appreciated</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/declaring-methods/371968/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/declaring-methods/371968/1</link>
        <pubDate>Sun, 05 Dec 2010 17:33:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-371968-1</guid>
        <source url="https://forum.moparisthebest.com/t/declaring-methods/371968.rss">Declaring methods</source>
      </item>
  </channel>
</rss>
