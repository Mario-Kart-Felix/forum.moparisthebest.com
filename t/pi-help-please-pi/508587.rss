<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[Pi] Help please [Pi]</title>
    <link>https://forum.moparisthebest.com/t/pi-help-please-pi/508587</link>
    <description>Hey guys, I&#39;m adding Region Clipping to my firemaking but it&#39;s not working. Everything else with my Firemaking is near perfect but all I need is this, here&#39;s my Firemaking.java.

[code]package server.model.players.skills;
 
import server.Config;
import server.world.ItemHandler;
import server.model.players.Client;
import server.model.objects.Objects;
import server.Server;
import server.world.map.VirtualWorld;
import server.world.ObjectHandler;
import server.event.CycleEvent;
import server.model.players.Region;
import server.event.CycleEventContainer;
import server.world.map.VirtualWorld;
import server.event.CycleEventHandler;
import server.util.Misc;
/**
 * Firemaking.java
 *
 * @author Faris
 *
 **/
public class Firemaking {
     
    private Client c;
     
    private int[] logs = {1511,1521,1519,1517,1515,1513};
    private int[] exp = {1,3,4,5,7,8};
    private int[] level = {1,15,30,45,60,75};
    public long lastLight;
    private int DELAY = 1250;
    private int fireId = 2732;
    public int timer;
	public int walkTo;
    public int timer2;
    public int multiplyFailChance;
    public int chanceToLight;
    public int chancetoFail;
     
    public boolean resetAnim = true;
     
    public Firemaking(Client c) {
        this.c = c;
    }
     
    public void checkLogType(int logType, int otherItem) {
        for (int j = 0; j &lt; logs.length;j++) {
            if (logs[j] == logType || logs[j] == otherItem) {
                attemptLighting();
                return;
            }
        }   
    }
     
    public void lightFire(int slot) {
     
    final int x = c.getX();
    final int y = c.getY();
     
             
        if (c.playerLevel[c.playerFiremaking] &gt;= level[slot]) {
            if (c.getItems().playerHasItem(590) &amp;&amp; c.getItems().playerHasItem(logs[slot])) {
                if (System.currentTimeMillis() - lastLight &gt; DELAY) {
                    c.getItems().deleteItem(logs[slot], c.getItems().getItemSlot(logs[slot]), 1);
                    c.getPA().addSkillXP(logs[slot] * Config.FIREMAKING_EXPERIENCE, c.playerFiremaking);
                    c.getPA().checkObjectSpawn(fireId, x, y, 1, 10);
                     					if (Region.getClipping(c.getX() - 1, c.getY(), c.heightLevel, -1, 0)) {
							c.getPA().walkTo(-1, 0);
						} else if (Region.getClipping(c.getX() + 1, c.getY(), c.heightLevel, 1, 0)) {
							c.getPA().walkTo(1, 0);
						} else if (Region.getClipping(c.getX(), c.getY() - 1, c.heightLevel, 0, -1)) {
							c.getPA().walkTo(0, -1);
						} else if (Region.getClipping(c.getX(), c.getY() + 1, c.heightLevel, 0, 1)) {
							c.getPA().walkTo(0, 1);
						}
            CycleEventHandler.getSingleton().addEvent(c, new CycleEvent() {
            int timer = 1;
            @Override
            public void execute(CycleEventContainer container) {
             
             
            if (timer == 0) {
            container.stop();
            }
            timer--;
             
             
            }
            @Override
            public void stop() {
                c.getPA().checkObjectSpawn(-1, x, y, 1, 10);
                //c.sendMessage(&quot;Your fire has been extinguished.&quot;);
                Server.itemHandler.createGroundItem(c, 592, x, y, 1, c.playerId);
            }
        }, 45);
                    c.sendMessage(&quot;You light the fire.&quot;);
                    final int walk = Misc.random(3);
                    this.lastLight = System.currentTimeMillis();
                    resetAnim = true;
                }
            }
        }   
    }
     
    public void attemptLighting() {
    if (c.duelStatus &gt;= 5) {
            c.sendMessage(&quot;I can&#39;t do that here.&quot;);
            return;
        }
         
    final int x = c.getX();
    final int y = c.getY();
    final int levelChance = c.playerLevel[11];
        c.sendMessage(&quot;You attempt to light a fire...&quot;);
        c.inTrade = true;
        Server.itemHandler.createGroundItem(c, 1511, x, y, 1, c.playerId);
        c.startAnimation(733,0);
        CycleEventHandler.getSingleton().addEvent(c, new CycleEvent() {
            int timer2 = 10;
            @Override
            public void execute(CycleEventContainer container) {
            double multiplyFailChance = Misc.random(levelChance)/10;
            int chanceToLight = Misc.random(levelChance)+1;
            double chanceToFail = Misc.random(9)+(multiplyFailChance);
             
            if (chanceToLight &gt;= chanceToFail &amp;&amp; timer2 != 0) {
            for (int j = 0; j &lt; logs.length;j++) {
            lightFire(j);
            }
            container.stop();
            }
             
            if (timer2 == 0) {
                //c.sendMessage(&quot;You have failed to start a fire&quot;);
                container.stop();
                }
                 
            timer2--;
            }
            @Override
            public void stop() {
                c.startAnimation(65535);
                Server.itemHandler.removeGroundItem(c, 1511, x, y, false);
                c.inTrade = false;
            }
        }, 3);
    }
     
}[/code]


I tried to make it work by adding,

[code]                     					if (Region.getClipping(c.getX() - 1, c.getY(), c.heightLevel, -1, 0)) {
							c.getPA().walkTo(-1, 0);
						} else if (Region.getClipping(c.getX() + 1, c.getY(), c.heightLevel, 1, 0)) {
							c.getPA().walkTo(1, 0);
						} else if (Region.getClipping(c.getX(), c.getY() - 1, c.heightLevel, 0, -1)) {
							c.getPA().walkTo(0, -1);
						} else if (Region.getClipping(c.getX(), c.getY() + 1, c.heightLevel, 0, 1)) {
							c.getPA().walkTo(0, 1);
						}[/code]

But all the player does is stand over the fire, any ideas?</description>
    
    <lastBuildDate>Sun, 17 Mar 2013 02:39:35 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/pi-help-please-pi/508587.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[Pi] Help please [Pi]</title>
        <dc:creator><![CDATA[@b00mz1029 b00mz1029]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/b00mz1029">@b00mz1029</a> wrote:</p>
          <blockquote>
              <p>Hey guys, I’m adding Region Clipping to my firemaking but it’s not working. Everything else with my Firemaking is near perfect but all I need is this, here’s my Firemaking.java.</p>
<p>[code]package server.model.players.skills;</p>
<p>import server.Config;<br>
import server.world.ItemHandler;<br>
import server.model.players.Client;<br>
import server.model.objects.Objects;<br>
import server.Server;<br>
import server.world.map.VirtualWorld;<br>
import server.world.ObjectHandler;<br>
import server.event.CycleEvent;<br>
import server.model.players.Region;<br>
import server.event.CycleEventContainer;<br>
import server.world.map.VirtualWorld;<br>
import server.event.CycleEventHandler;<br>
import server.util.Misc;<br>
/**</p>
<ul>
<li>Firemaking.java</li>
<li>
</li>
<li>
<span class="mention">@author</span> Faris</li>
<li>
</li>
</ul>
<p>**/<br>
public class Firemaking {</p>
<pre><code>private Client c;
 
private int[] logs = {1511,1521,1519,1517,1515,1513};
private int[] exp = {1,3,4,5,7,8};
private int[] level = {1,15,30,45,60,75};
public long lastLight;
private int DELAY = 1250;
private int fireId = 2732;
public int timer;
public int walkTo;
public int timer2;
public int multiplyFailChance;
public int chanceToLight;
public int chancetoFail;
 
public boolean resetAnim = true;
 
public Firemaking(Client c) {
    this.c = c;
}
 
public void checkLogType(int logType, int otherItem) {
    for (int j = 0; j &lt; logs.length;j++) {
        if (logs[j] == logType || logs[j] == otherItem) {
            attemptLighting();
            return;
        }
    }   
}
 
public void lightFire(int slot) {
 
final int x = c.getX();
final int y = c.getY();
 
         
    if (c.playerLevel[c.playerFiremaking] &gt;= level[slot]) {
        if (c.getItems().playerHasItem(590) &amp;&amp; c.getItems().playerHasItem(logs[slot])) {
            if (System.currentTimeMillis() - lastLight &gt; DELAY) {
                c.getItems().deleteItem(logs[slot], c.getItems().getItemSlot(logs[slot]), 1);
                c.getPA().addSkillXP(logs[slot] * Config.FIREMAKING_EXPERIENCE, c.playerFiremaking);
                c.getPA().checkObjectSpawn(fireId, x, y, 1, 10);
                 					if (Region.getClipping(c.getX() - 1, c.getY(), c.heightLevel, -1, 0)) {
						c.getPA().walkTo(-1, 0);
					} else if (Region.getClipping(c.getX() + 1, c.getY(), c.heightLevel, 1, 0)) {
						c.getPA().walkTo(1, 0);
					} else if (Region.getClipping(c.getX(), c.getY() - 1, c.heightLevel, 0, -1)) {
						c.getPA().walkTo(0, -1);
					} else if (Region.getClipping(c.getX(), c.getY() + 1, c.heightLevel, 0, 1)) {
						c.getPA().walkTo(0, 1);
					}
        CycleEventHandler.getSingleton().addEvent(c, new CycleEvent() {
        int timer = 1;
        @Override
        public void execute(CycleEventContainer container) {
         
         
        if (timer == 0) {
        container.stop();
        }
        timer--;
         
         
        }
        @Override
        public void stop() {
            c.getPA().checkObjectSpawn(-1, x, y, 1, 10);
            //c.sendMessage("Your fire has been extinguished.");
            Server.itemHandler.createGroundItem(c, 592, x, y, 1, c.playerId);
        }
    }, 45);
                c.sendMessage("You light the fire.");
                final int walk = Misc.random(3);
                this.lastLight = System.currentTimeMillis();
                resetAnim = true;
            }
        }
    }   
}
 
public void attemptLighting() {
if (c.duelStatus &gt;= 5) {
        c.sendMessage("I can't do that here.");
        return;
    }
     
final int x = c.getX();
final int y = c.getY();
final int levelChance = c.playerLevel[11];
    c.sendMessage("You attempt to light a fire...");
    c.inTrade = true;
    Server.itemHandler.createGroundItem(c, 1511, x, y, 1, c.playerId);
    c.startAnimation(733,0);
    CycleEventHandler.getSingleton().addEvent(c, new CycleEvent() {
        int timer2 = 10;
        @Override
        public void execute(CycleEventContainer container) {
        double multiplyFailChance = Misc.random(levelChance)/10;
        int chanceToLight = Misc.random(levelChance)+1;
        double chanceToFail = Misc.random(9)+(multiplyFailChance);
         
        if (chanceToLight &gt;= chanceToFail &amp;&amp; timer2 != 0) {
        for (int j = 0; j &lt; logs.length;j++) {
        lightFire(j);
        }
        container.stop();
        }
         
        if (timer2 == 0) {
            //c.sendMessage("You have failed to start a fire");
            container.stop();
            }
             
        timer2--;
        }
        @Override
        public void stop() {
            c.startAnimation(65535);
            Server.itemHandler.removeGroundItem(c, 1511, x, y, false);
            c.inTrade = false;
        }
    }, 3);
}
</code></pre>
<p>}[/code]</p>
<p>I tried to make it work by adding,</p>
<p><code>                     					if (Region.getClipping(c.getX() - 1, c.getY(), c.heightLevel, -1, 0)) {
							c.getPA().walkTo(-1, 0);
						} else if (Region.getClipping(c.getX() + 1, c.getY(), c.heightLevel, 1, 0)) {
							c.getPA().walkTo(1, 0);
						} else if (Region.getClipping(c.getX(), c.getY() - 1, c.heightLevel, 0, -1)) {
							c.getPA().walkTo(0, -1);
						} else if (Region.getClipping(c.getX(), c.getY() + 1, c.heightLevel, 0, 1)) {
							c.getPA().walkTo(0, 1);
						}</code></p>
<p>But all the player does is stand over the fire, any ideas?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-help-please-pi/508587/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-help-please-pi/508587/1</link>
        <pubDate>Sun, 17 Mar 2013 02:39:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-508587-1</guid>
        <source url="https://forum.moparisthebest.com/t/pi-help-please-pi/508587.rss">[Pi] Help please [Pi]</source>
      </item>
  </channel>
</rss>
