<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>PHP Tutorial</title>
    <link>https://forum.moparisthebest.com/t/php-tutorial/35057</link>
    <description>Taken from http://us2.php.net
[glow=red,2,300][size=10pt][b]What do I need?[/b][/size][/glow]

In this tutorial we assume that your server has activated support for PHP and that all files ending in .php are handled by PHP. On most servers, this is the default extension for PHP files, but ask your server administrator to be sure. If your server supports PHP, then you do not need to do anything. Just create your .php files, put them in your web directory and the server will automatically parse them for you. There is no need to compile anything nor do you need to install any extra tools. Think of these PHP-enabled files as simple HTML files with a whole new family of magical tags that let you do all sorts of things. Most web hosts offer PHP support, but if your host does not, consider reading the PHP Links section for resources on finding PHP enabled web hosts. 

Let us say you want to save precious bandwidth and develop locally. In this case, you will want to install a web server, such as Apache, and of course PHP. You will most likely want to install a database as well, such as MySQL. 

You can either install these individually or choose a simpler way. Our manual has installation instructions for PHP (assuming you already have some webserver set up). In case you have problems with installing PHP yourself, we would suggest you ask your questions on our installation mailing list. If you choose to go on the simpler route, then locate a pre-configured package for your operating system, which automatically installs all of these with just a few mouse clicks. It is easy to setup a web server with PHP support on any operating system, including MacOSX, Linux and Windows. On Linux, you may find rpmfind and PBone helpful for locating RPMs. You may also want to visit apt-get to find packages for Debian.

[glow=red,2,300][size=10pt][b]Your first PHP-enabled page[/b][/size][/glow]

Create a file named hello.php and put it in your web server&#39;s root directory (DOCUMENT_ROOT) with the following content: 

Example 2-1. Our first PHP script: hello.php [php]&lt;html&gt;
&lt;head&gt;
  &lt;title&gt;PHP Test&lt;/title&gt;
 &lt;/head&gt;
 &lt;body&gt;
 &lt;?php echo &#39;&lt;p&gt;Hello World&lt;/p&gt;&#39;; ?&gt; 
 &lt;/body&gt;
&lt;/html&gt; 
[/php]

Use your browser to access the file with your web server&#39;s URL, ending with the &quot;/hello.php&quot; file reference. When developing locally this URL will be something like http://localhost/hello.php or http://127.0.0.1/hello.php but this depends on the web server&#39;s configuration. If everything is configured correctly, this file will be parsed by PHP and the following output will be sent to your browser: &lt;html&gt;
 [php]&lt;head&gt;
  &lt;title&gt;PHP Test&lt;/title&gt;
 &lt;/head&gt;
 &lt;body&gt;
 &lt;p&gt;Hello World&lt;/p&gt;
 &lt;/body&gt;
&lt;/html&gt;
[/php]


This program is extremely simple and you really did not need to use PHP to create a page like this. All it does is display: Hello World using the PHP echo() statement. Note that the file does not need to be executable or special in any way. The server finds out that this file needs to be interpreted by PHP because you used the &quot;.php&quot; extension, which the server is configured to pass on to PHP. Think of this as a normal HTML file which happens to have a set of special tags available to you that do a lot of interesting things. 

If you tried this example and it did not output anything, it prompted for download, or you see the whole file as text, chances are that the server you are on does not have PHP enabled, or is not configured properly. Ask your administrator to enable it for you using the Installation chapter of the manual. If you are developing locally, also read the installation chapter to make sure everything is configured properly. Make sure that you access the file via http with the server providing you the output. If you just call up the file from your file system, then it will not be parsed by PHP. If the problems persist anyway, do not hesitate to use one of the many PHP support options. 

The point of the example is to show the special PHP tag format. In this example we used &lt;?php to indicate the start of a PHP tag. Then we put the PHP statement and left PHP mode by adding the closing tag, ?&gt;. You may jump in and out of PHP mode in an HTML file like this anywhere you want. For more details, read the manual section on the basic PHP syntax. 

A Note on Line Feeds: Line feeds have little meaning in HTML, however it is still a good idea to make your HTML look nice and clean by putting line feeds in. A linefeed that follows immediately after a closing ?&gt; will be removed by PHP. This can be extremely useful when you are putting in many blocks of PHP or include files containing PHP that aren&#39;t supposed to output anything. At the same time it can be a bit confusing. You can put a space after the closing ?&gt; to force a space and a line feed to be output, or you can put an explicit line feed in the last echo/print from within your PHP block. 

A Note on Text Editors: There are many text editors and Integrated Development Environments (IDEs) that you can use to create, edit and manage PHP files. A partial list of these tools is maintained at PHP Editors List. If you wish to recommend an editor, please visit the above page and ask the page maintainer to add the editor to the list. Having an editor with syntax highlighting can be helpful. 

A Note on Word Processors: Word processors such as StarOffice Writer, Microsoft Word and Abiword are not optimal for editing PHP files. If you wish to use one for this test script, you must ensure that you save the file as plain text or PHP will not be able to read and execute the script. 

A Note on Windows Notepad: If you are writing your PHP scripts using Windows Notepad, you will need to ensure that your files are saved with the .php extension. (Notepad adds a .txt extension to files automatically unless you take one of the following steps to prevent it.) When you save the file and are prompted to provide a name for the file, place the filename in quotes (i.e. &quot;hello.php&quot;). Alternatively, you can click on the &#39;Text Documents&#39; drop-down menu in the &#39;Save&#39; dialog box and change the setting to &quot;All Files&quot;. You can then enter your filename without quotes. 

Now that you have successfully created a working PHP script, it is time to create the most famous PHP script! Make a call to the phpinfo() function and you will see a lot of useful information about your system and setup such as available predefined variables, loaded PHP modules, and configuration settings. Take some time and review this important information. 

Example 2-2. Get system information from PHP&lt;?php phpinfo(); ?&gt;

[glow=red,2,300][size=10pt][b]Something Useful[/b][/size][/glow]

Let us do something more useful now. We are going to check what sort of browser the visitor is using. For that, we check the user agent string the browser sends as part of the HTTP request. This information is stored in a variable. Variables always start with a dollar-sign in PHP. The variable we are interested in right now is $_SERVER[&#39;HTTP_USER_AGENT&#39;]. 

Note: $_SERVER is a special reserved PHP variable that contains all web server information. It is known as an autoglobal (or superglobal). See the related manual page on superglobals for more information. These special variables were introduced in PHP 4.1.0. Before this time, we used the older $HTTP_*_VARS arrays instead, such as $HTTP_SERVER_VARS. Although deprecated, these older variables still exist. (See also the note on old code.) 

To display this variable, you can simply do: 

Example 2-3. Printing a variable (Array element)&lt;?php echo $_SERVER[&#39;HTTP_USER_AGENT&#39;]; ?&gt; 


A sample output of this script may be: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)



There are many types of variables available in PHP. In the above example we printed an Array element. Arrays can be very useful. 

$_SERVER is just one variable that PHP automatically makes available to you. A list can be seen in the Reserved Variables section of the manual or you can get a complete list of them by looking at the output of the phpinfo() function used in the example in the previous section. 

You can put multiple PHP statements inside a PHP tag and create little blocks of code that do more than just a single echo. For example, if you want to check for Internet Explorer you can do this: 

Example 2-4. Example using control structures and functions&lt;?php
if (strpos($_SERVER[&#39;HTTP_USER_AGENT&#39;], &#39;MSIE&#39;) !== FALSE) {
   echo &#39;You are using Internet Explorer.&lt;br /&gt;&#39;;
}
?&gt; 


A sample output of this script may be: You are using Internet Explorer.&lt;br /&gt;



Here we introduce a couple of new concepts. We have an if statement. If you are familiar with the basic syntax used by the C language, this should look logical to you. Otherwise, you should probably pick up an introductory PHP book and read the first couple of chapters, or read the Language Reference part of the manual. You can find a list of PHP books at /books.php. 

The second concept we introduced was the strpos() function call. strpos() is a function built into PHP which searches a string for another string. In this case we are looking for &#39;MSIE&#39; (so-called needle) inside $_SERVER[&#39;HTTP_USER_AGENT&#39;] (so-called haystack). If the needle is found inside the haystack, the function returns the position of the needle relative to the start of the haystack. Otherwise, it returns FALSE. If it does not return FALSE, the if expression evaluates to TRUE and the code within its {braces} is executed. Otherwise, the code is not run. Feel free to create similar examples, with if, else, and other functions such as strtoupper() and strlen(). Each related manual page contains examples too. If you are unsure how to use functions, you will want to read both the manual page on how to read a function definition and the section about PHP functions. 

We can take this a step further and show how you can jump in and out of PHP mode even in the middle of a PHP block: 

Example 2-5. Mixing both HTML and PHP modes[php]&lt;?php
if (strpos($_SERVER[&#39;HTTP_USER_AGENT&#39;], &#39;MSIE&#39;) !== FALSE) {
?&gt;
&lt;h3&gt;strpos() must have returned non-false&lt;/h3&gt;
&lt;p&gt;You are using Internet Explorer&lt;/p&gt;
&lt;?php
} else {
?&gt;
&lt;h3&gt;strpos() must have returned false&lt;/h3&gt;
&lt;p&gt;You are not using Internet Explorer&lt;/p&gt;
&lt;?php
}
?&gt; 
[/php]

A sample output of this script may be: &lt;h3&gt;strpos() must have returned non-false&lt;/h3&gt;
&lt;p&gt;You are using Internet Explorer&lt;/p&gt;



Instead of using a PHP echo statement to output something, we jumped out of PHP mode and just sent straight HTML. The important and powerful point to note here is that the logical flow of the script remains intact. Only one of the HTML blocks will end up getting sent to the viewer depending on the result of strpos(). In other words, it depends on whether the string MSIE was found or not.</description>
    
    <lastBuildDate>Sat, 16 Dec 2006 10:41:53 +0000</lastBuildDate>
    <category>General Discussion</category>
    <atom:link href="https://forum.moparisthebest.com/t/php-tutorial/35057.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>PHP Tutorial</title>
        <dc:creator><![CDATA[@cow821 cow821]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cow821">@cow821</a> wrote:</p>
          <blockquote>
              <p>Ok editing</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/php-tutorial/35057/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/php-tutorial/35057/8</link>
        <pubDate>Sat, 16 Dec 2006 10:41:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-35057-8</guid>
        <source url="https://forum.moparisthebest.com/t/php-tutorial/35057.rss">PHP Tutorial</source>
      </item>
      <item>
        <title>PHP Tutorial</title>
        <dc:creator><![CDATA[@Ron Ron]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ron">@Ron</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="5" data-topic="35057">
<div class="title">
<div class="quote-controls"></div>
 The Un-Named:</div>
<blockquote>
<p>This belongs in Web Design. <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
</blockquote>
</aside>
<p>There is another PHP tutorial in this section by sppt. It’s fine. It can go either here or in Web Design.</p>
<p>and hey cow821, try to use the PHP tags around your code to highlight the different parts of the code with color. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/php-tutorial/35057/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/php-tutorial/35057/7</link>
        <pubDate>Sat, 16 Dec 2006 10:06:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-35057-7</guid>
        <source url="https://forum.moparisthebest.com/t/php-tutorial/35057.rss">PHP Tutorial</source>
      </item>
      <item>
        <title>PHP Tutorial</title>
        <dc:creator><![CDATA[@cow821 cow821]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cow821">@cow821</a> wrote:</p>
          <blockquote>
              <p>It’s kinda cross sectioned. It’s a tut but web type <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/php-tutorial/35057/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/php-tutorial/35057/6</link>
        <pubDate>Fri, 15 Dec 2006 07:49:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-35057-6</guid>
        <source url="https://forum.moparisthebest.com/t/php-tutorial/35057.rss">PHP Tutorial</source>
      </item>
      <item>
        <title>PHP Tutorial</title>
        <dc:creator><![CDATA[@The_Un-Named The Un-Named]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_un-named">@The_Un-Named</a> wrote:</p>
          <blockquote>
              <p>This belongs in Web Design. <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/php-tutorial/35057/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/php-tutorial/35057/5</link>
        <pubDate>Fri, 15 Dec 2006 02:47:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-35057-5</guid>
        <source url="https://forum.moparisthebest.com/t/php-tutorial/35057.rss">PHP Tutorial</source>
      </item>
      <item>
        <title>PHP Tutorial</title>
        <dc:creator><![CDATA[@parad0x parad0x_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/parad0x">@parad0x</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="3" data-topic="35057">
<div class="title">
<div class="quote-controls"></div>
 own yo ass:</div>
<blockquote>
<p>how do i make or/and design my own server if you know please email me at hobmatheson@xtra.co.nz . thanks</p>
</blockquote>
</aside>
<p>Go die.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/php-tutorial/35057/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/php-tutorial/35057/4</link>
        <pubDate>Fri, 15 Dec 2006 01:42:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-35057-4</guid>
        <source url="https://forum.moparisthebest.com/t/php-tutorial/35057.rss">PHP Tutorial</source>
      </item>
      <item>
        <title>PHP Tutorial</title>
        <dc:creator><![CDATA[@own_yo_ass own yo ass]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/own_yo_ass">@own_yo_ass</a> wrote:</p>
          <blockquote>
              <p>how do i make or/and design my own server if you know please email me at hobmatheson@xtra.co.nz . thanks</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/php-tutorial/35057/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/php-tutorial/35057/3</link>
        <pubDate>Fri, 15 Dec 2006 00:20:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-35057-3</guid>
        <source url="https://forum.moparisthebest.com/t/php-tutorial/35057.rss">PHP Tutorial</source>
      </item>
      <item>
        <title>PHP Tutorial</title>
        <dc:creator><![CDATA[@bloodrayne bloodrayne]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bloodrayne">@bloodrayne</a> wrote:</p>
          <blockquote>
              <p>Thank ya… I already know PHP, but it will help the beginners.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/php-tutorial/35057/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/php-tutorial/35057/2</link>
        <pubDate>Thu, 14 Dec 2006 05:51:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-35057-2</guid>
        <source url="https://forum.moparisthebest.com/t/php-tutorial/35057.rss">PHP Tutorial</source>
      </item>
      <item>
        <title>PHP Tutorial</title>
        <dc:creator><![CDATA[@cow821 cow821]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cow821">@cow821</a> wrote:</p>
          <blockquote>
              <p>Taken from <a href="http://us2.php.net" rel="nofollow noopener">http://us2.php.net</a><br>
[glow=red,2,300][size=10pt]<span class="bbcode-b">What do I need?</span>[/size][/glow]</p>
<p>In this tutorial we assume that your server has activated support for PHP and that all files ending in .php are handled by PHP. On most servers, this is the default extension for PHP files, but ask your server administrator to be sure. If your server supports PHP, then you do not need to do anything. Just create your .php files, put them in your web directory and the server will automatically parse them for you. There is no need to compile anything nor do you need to install any extra tools. Think of these PHP-enabled files as simple HTML files with a whole new family of magical tags that let you do all sorts of things. Most web hosts offer PHP support, but if your host does not, consider reading the PHP Links section for resources on finding PHP enabled web hosts.</p>
<p>Let us say you want to save precious bandwidth and develop locally. In this case, you will want to install a web server, such as Apache, and of course PHP. You will most likely want to install a database as well, such as MySQL.</p>
<p>You can either install these individually or choose a simpler way. Our manual has installation instructions for PHP (assuming you already have some webserver set up). In case you have problems with installing PHP yourself, we would suggest you ask your questions on our installation mailing list. If you choose to go on the simpler route, then locate a pre-configured package for your operating system, which automatically installs all of these with just a few mouse clicks. It is easy to setup a web server with PHP support on any operating system, including MacOSX, Linux and Windows. On Linux, you may find rpmfind and PBone helpful for locating RPMs. You may also want to visit apt-get to find packages for Debian.</p>
<p>[glow=red,2,300][size=10pt]<span class="bbcode-b">Your first PHP-enabled page</span>[/size][/glow]</p>
<p>Create a file named hello.php and put it in your web server’s root directory (DOCUMENT_ROOT) with the following content:</p>
<p>Example 2-1. Our first PHP script: hello.php [php]</p>

  PHP Test
 
 
 &lt;?php echo '<p>Hello World</p>'; ?&gt; 
 
 
[/php]
<p>Use your browser to access the file with your web server’s URL, ending with the “/hello.php” file reference. When developing locally this URL will be something like <a href="http://localhost/hello.php" rel="nofollow noopener">http://localhost/hello.php</a> or <a href="http://127.0.0.1/hello.php" rel="nofollow noopener">http://127.0.0.1/hello.php</a> but this depends on the web server’s configuration. If everything is configured correctly, this file will be parsed by PHP and the following output will be sent to your browser: <br>
[php]</p>
  PHP Test
 
 
 <p>Hello World</p>
 

[/php]
<p>This program is extremely simple and you really did not need to use PHP to create a page like this. All it does is display: Hello World using the PHP echo() statement. Note that the file does not need to be executable or special in any way. The server finds out that this file needs to be interpreted by PHP because you used the “.php” extension, which the server is configured to pass on to PHP. Think of this as a normal HTML file which happens to have a set of special tags available to you that do a lot of interesting things.</p>
<p>If you tried this example and it did not output anything, it prompted for download, or you see the whole file as text, chances are that the server you are on does not have PHP enabled, or is not configured properly. Ask your administrator to enable it for you using the Installation chapter of the manual. If you are developing locally, also read the installation chapter to make sure everything is configured properly. Make sure that you access the file via http with the server providing you the output. If you just call up the file from your file system, then it will not be parsed by PHP. If the problems persist anyway, do not hesitate to use one of the many PHP support options.</p>
<p>The point of the example is to show the special PHP tag format. In this example we used &lt;?php to indicate the start of a PHP tag. Then we put the PHP statement and left PHP mode by adding the closing tag, ?&gt;. You may jump in and out of PHP mode in an HTML file like this anywhere you want. For more details, read the manual section on the basic PHP syntax.</p>
<p>A Note on Line Feeds: Line feeds have little meaning in HTML, however it is still a good idea to make your HTML look nice and clean by putting line feeds in. A linefeed that follows immediately after a closing ?&gt; will be removed by PHP. This can be extremely useful when you are putting in many blocks of PHP or include files containing PHP that aren’t supposed to output anything. At the same time it can be a bit confusing. You can put a space after the closing ?&gt; to force a space and a line feed to be output, or you can put an explicit line feed in the last echo/print from within your PHP block.</p>
<p>A Note on Text Editors: There are many text editors and Integrated Development Environments (IDEs) that you can use to create, edit and manage PHP files. A partial list of these tools is maintained at PHP Editors List. If you wish to recommend an editor, please visit the above page and ask the page maintainer to add the editor to the list. Having an editor with syntax highlighting can be helpful.</p>
<p>A Note on Word Processors: Word processors such as StarOffice Writer, Microsoft Word and Abiword are not optimal for editing PHP files. If you wish to use one for this test script, you must ensure that you save the file as plain text or PHP will not be able to read and execute the script.</p>
<p>A Note on Windows Notepad: If you are writing your PHP scripts using Windows Notepad, you will need to ensure that your files are saved with the .php extension. (Notepad adds a .txt extension to files automatically unless you take one of the following steps to prevent it.) When you save the file and are prompted to provide a name for the file, place the filename in quotes (i.e. “hello.php”). Alternatively, you can click on the ‘Text Documents’ drop-down menu in the ‘Save’ dialog box and change the setting to “All Files”. You can then enter your filename without quotes.</p>
<p>Now that you have successfully created a working PHP script, it is time to create the most famous PHP script! Make a call to the phpinfo() function and you will see a lot of useful information about your system and setup such as available predefined variables, loaded PHP modules, and configuration settings. Take some time and review this important information.</p>
<p>Example 2-2. Get system information from PHP&lt;?php phpinfo(); ?&gt;</p>
<p>[glow=red,2,300][size=10pt]<span class="bbcode-b">Something Useful</span>[/size][/glow]</p>
<p>Let us do something more useful now. We are going to check what sort of browser the visitor is using. For that, we check the user agent string the browser sends as part of the HTTP request. This information is stored in a variable. Variables always start with a dollar-sign in PHP. The variable we are interested in right now is $_SERVER[‘HTTP_USER_AGENT’].</p>
<p>Note: $<em>SERVER is a special reserved PHP variable that contains all web server information. It is known as an autoglobal (or superglobal). See the related manual page on superglobals for more information. These special variables were introduced in PHP 4.1.0. Before this time, we used the older $HTTP</em>*_VARS arrays instead, such as $HTTP_SERVER_VARS. Although deprecated, these older variables still exist. (See also the note on old code.)</p>
<p>To display this variable, you can simply do:</p>
<p>Example 2-3. Printing a variable (Array element)&lt;?php echo $_SERVER['HTTP_USER_AGENT']; ?&gt;</p>
<p>A sample output of this script may be: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)</p>
<p>There are many types of variables available in PHP. In the above example we printed an Array element. Arrays can be very useful.</p>
<p>$_SERVER is just one variable that PHP automatically makes available to you. A list can be seen in the Reserved Variables section of the manual or you can get a complete list of them by looking at the output of the phpinfo() function used in the example in the previous section.</p>
<p>You can put multiple PHP statements inside a PHP tag and create little blocks of code that do more than just a single echo. For example, if you want to check for Internet Explorer you can do this:</p>
<p>Example 2-4. Example using control structures and functions&lt;?php<br>
if (strpos($_SERVER[‘HTTP_USER_AGENT’], ‘MSIE’) !== FALSE) {<br>
echo ‘You are using Internet Explorer.<br>’;<br>
}<br>
?&gt;</p>
<p>A sample output of this script may be: You are using Internet Explorer.<br></p>
<p>Here we introduce a couple of new concepts. We have an if statement. If you are familiar with the basic syntax used by the C language, this should look logical to you. Otherwise, you should probably pick up an introductory PHP book and read the first couple of chapters, or read the Language Reference part of the manual. You can find a list of PHP books at /books.php.</p>
<p>The second concept we introduced was the strpos() function call. strpos() is a function built into PHP which searches a string for another string. In this case we are looking for ‘MSIE’ (so-called needle) inside $_SERVER[‘HTTP_USER_AGENT’] (so-called haystack). If the needle is found inside the haystack, the function returns the position of the needle relative to the start of the haystack. Otherwise, it returns FALSE. If it does not return FALSE, the if expression evaluates to TRUE and the code within its {braces} is executed. Otherwise, the code is not run. Feel free to create similar examples, with if, else, and other functions such as strtoupper() and strlen(). Each related manual page contains examples too. If you are unsure how to use functions, you will want to read both the manual page on how to read a function definition and the section about PHP functions.</p>
<p>We can take this a step further and show how you can jump in and out of PHP mode even in the middle of a PHP block:</p>
<p>Example 2-5. Mixing both HTML and PHP modes[php]&lt;?php<br>
if (strpos($_SERVER[‘HTTP_USER_AGENT’], ‘MSIE’) !== FALSE) {<br>
?&gt;</p>
<h3>strpos() must have returned non-false</h3>
<p>You are using Internet Explorer</p>
&lt;?php
} else {
?&gt;
<h3>strpos() must have returned false</h3>
<p>You are not using Internet Explorer</p>
&lt;?php
}
?&gt; 
[/php]
<p>A sample output of this script may be: </p><h3>strpos() must have returned non-false</h3>
<p>You are using Internet Explorer</p>
<p>Instead of using a PHP echo statement to output something, we jumped out of PHP mode and just sent straight HTML. The important and powerful point to note here is that the logical flow of the script remains intact. Only one of the HTML blocks will end up getting sent to the viewer depending on the result of strpos(). In other words, it depends on whether the string MSIE was found or not.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/php-tutorial/35057/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/php-tutorial/35057/1</link>
        <pubDate>Thu, 14 Dec 2006 05:39:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-35057-1</guid>
        <source url="https://forum.moparisthebest.com/t/php-tutorial/35057.rss">PHP Tutorial</source>
      </item>
  </channel>
</rss>
