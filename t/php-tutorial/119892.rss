<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>PHP-Tutorial!</title>
    <link>https://forum.moparisthebest.com/t/php-tutorial/119892</link>
    <description>
[b]Part 1[/b]

Introduction

For many people, the main reson for learning a scripting language like PHP is because of the interaction with databases it can offer. In this tutorial I will show you how to use PHP and the MySQL database to store information on the web and include it into your website. Before you read this tutorial you should have at least a basic knowledge of how to use PHP. 
Why Would I Want A Database?

It is actually surprising how useful a database can be when used with a website. There are a huge variety of things you can do when you interact the two, from displaying simple lists to running a complete website from a database. Some examples of PHP and MySQL being used together are:

    * Banner Rotation. On this site, where each banner is, a PHP script is called. This opens a database and picks a random banner from it to show the visitor. It also counts the number of times the banner has been viewed and could, with a few changes, track clicks too. To add, change or edit the banners all I have to do is change the database and the script will pick the correct banners for all the pages on the site.
    * Forums. Hundreds of forums (message boards) on the internet are run using PHP and MySQL. These are much more efficent than other systems that create a page for each message and offer a wide variety of options. All the pages in the forum can be updated by changing one script.
    * Databases. One quite obvious example is sites which get all there information from a database. For example Script Avenue is run by a few scripts, which gain all their information from a large database. All the different script categories can be accessed in one script by just changing the URL to access a different part of the database.
    * Websites. If you have a large website and you want to change the design it can take a very long time to update and upload all the pages. With PHP and MySQL your whole website could be just one or two PHP scripts. These would access a MySQL database to get the information for the pages. To update the website&#39;s design you would just have to change one page.


What Do I Need?

You only really need three things to run PHP scripts which access MySQL databases. Firstly, you will, of course, need a webserver. This can either be on a computer of your own or on a web host. Any web server software should work with PHP and MySQL but the best to use is Apache, which is free.

PHP also needs to be installed on the server. If it is not already installed you can install it (or ask your web host to install it). It can be downloaded from PHP.net and is also free. If you are not sure if you have PHP installed I will show you a way to check it later.

Finally, you will also require MySQL. This is the actual database software. You can also use most other types of database (SQL, Oracle etc.) but as this is a PHP/MySQL tutorial I will deal just now with the MySQL database (although the commands used here will also work with SQL databases). As with the other software you need, MySQL is free and can be downloaded from the MySQL homepage. If you are not sure if you have MySQL installed, I will show you how to check later.

If you cannot install (or your web host won&#39;t allow) PHP and MySQL you can still use another web host. Freedom2Surf are a free (banner supported) web host and support PHP and have MySQL installed. HostRocket are an excellent web host and can offer you 300MB of space with PHP, MySQL and loads of other extras for under $10 a month.

Testing For PHP and MySQL

There is a simple test for both PHP and MySQL. Open a text editor and type in the following:

[code]&lt;?
phpinfo();
?&gt;
[/code]

and save it as phpinfo.php

Now upload this to your webspace and go to i
t in your browser. If you have PHP installed you will see a huge page with all the details of your PHP installation on it. Next, scroll down through all this information. If you find a section about MySQL then you will know that MySQL is installed.

Managing Databases

Although all the database administrative options can be done through PHP scripts, I strongly suggest installing a copy of PHPMyAdmin on your server. It is an excellent free set of scripts that will provide you with an administrative interface for your MySQL database(s). You can add, remove, edit, backup and view your databases using this and it is especially useful when troubleshooting your databases.

This Tutorial

Throughout this tutorial I will be showing you some of the basics of using PHP and MySQL together. To do this I will be using an example all the way through. As you use this tutorial, you will learn how to create a web based contact management program. It will allow you to store names with their addresses, e-mail and phone numbers. You will be able to update records and search the database. There will even be an option which allows you to send an e-mail out to all the people in the database (please note: this system should not be used for spam or unsolicited e-mail).

After creating this system you should have enough knowledge to go on and create nearly any type of database enabled site you want to.

[b]Part 2[/b]

Introduction

Before you actually start building your database scripts, you must have a database to place information into and read it from. In this section I will show you how to create a database in MySQL and prepare it for the data. I will also begin to show you how to create the contacts management database.

Database Construction

MySQL databases have a standard setup. They are made up of a database, in which is contained tables. Each of these tables is quite separate and can have different fields etc. even though it is part of one database. Each table contains records which are made up of fields.

Databases And Logins

The process of setting up a MySQL database varies from host to host, you will however end up with a database name, a user name and a password. This information will be required to log in to the database.

If you have PHPMyAdmin (or a similar program) installed you can just go to it to log in with your user name and password. If not you must do all your database administration using PHP scripts.

Creating A Table

Before you can do anything with your database, you must create a table. A table is a section of the database for storing related information. In a table you will set up the different fields which will be used in that table. Because of this construction, nearly all of a site&#39;s database needs can be satisfied using just one database.

Creating a table in PHPMyAdmin is simple, just type the name, select the number of fields and click the button. You will then be taken to a setup screen where you must create the fields for the database. If you are using a PHP script to create your database, the whole creation and setup will be done in one command.

Fields

There are a wide variety of fields and attributes available in MySQL and I will cover a few of these here:
[code]Field Type	     Description
TINYINT	         Small Integer Number
SMALLINT	Small Integer Number
MEDIUMINT      Integer Number
INT	            Integer Number
VARCHAR	        Text (maximum 256 characters)
TEXT	          Text
[/code]


These are just a few of the fields which are available. A search on the internet will provide lists of all the field types allowed.

Creating A Table With PHP

To create a table in PHP is slightly more difficult than with MySQL. It takes the following format:

CREATE TABLE tablename {

Fields

}

The fields are defined as follows:

fieldname type(length) extra info,

The final field entered should not have a comma after it.

I will give full an example of using these later in the section.

The Contacts Database

The contacts database will contain all the conact information for the people you enter and the information will be able to be edited and viewed on the internet. The following fields will be used in the database:
[code]
Name
	
Type
	
Length
	
Description
id	INT	6	A unique identifier for each record
first	VARCHAR	15	The person&#39;s first name
last	VARCHAR	15	The person&#39;s last name
phone	VARCHAR	20	The person&#39;s phone number
mobile	VARCHAR	20	The person&#39;s mobile number
fax	VARCHAR	20	The person&#39;s fax number
email	VARCHAR	30	The person&#39;s e-mail address
web	VARCHAR	30	The person&#39;s web address
[/code]

You may be wondering why I have used VARCHAR fields for the phone/fax numbers even though they are made up of digits. You could use INT fields but I prefer to use VARCHAR as it will allow dashes and spaces in the number, as well as textual numbers (like 1800-COMPANY) and as we will not be initiating phone calls from the web it is not a problem.

There is one other thing you should be aware of in this database. The id field will also be set as PRIMARY, INDEX, UNIQUE and will be set to auto_increment (found under Extra in PH
PMyAdmin). The reason for this is that this will be the field identifier (primary and index) and so must be unique. The auto increment setting means that whenever you add a record, as long as you don&#39;t specify an id, it will be given the next number.

If you are using PHPMyAdmin or a management program you can now create this in a table called contacts.

Creating The Table In PHP

The following code should be used to create this table in PHP. Some of the code has not been covered yet but I will explain it fully in the next part.

[code]&lt;?
$user=&quot;username&quot;;
$password=&quot;password&quot;;
$database=&quot;database&quot;;
mysql_connect(localhost,$user,$password);
@mysql_select_db($database) or die( &quot;Unable to select database&quot;);
$query=&quot;CREATE TABLE contacts (id int(6) NOT NULL auto_increment,first varchar(15) NOT NULL,last varchar(15) NOT NULL,phone varchar(20) NOT NULL,mobile varchar(20) NOT NULL,fax varchar(20) NOT NULL,email varchar(30) NOT NULL,web varchar(30) NOT NULL,PRIMARY KEY (id),UNIQUE id (id),KEY id_2 (id))&quot;;
mysql_query($query);
mysql_close();
?&gt;
[/code]

Enter your database, MySQL username and MySQL password in the appropriate positions on the first three lines above.

[b]Part 3[/b]

Introduction

Over the past two parts I have explained what I am planning to do in this tutorial and have shown you how to create a database to use with the tutorial. In this part I will be showing you how to insert some information into your database so that it is more useful.

Connecting To The Database

The first thing you must do before you can do any work at all is to connect to the MySQL database. This is an extremely important step as, if you are not connected, your commands to the database will fail.

Good practice for using databases is to specify the username, password and database name first so that if you change any of them at a later date you will only have to change one line:

$username=&quot;username&quot;;
$password=&quot;password&quot;;
$database=&quot;your_database&quot;;

At this point you may be wondering if it is a security risk, keeping your password in the file. You don&#39;t need to worry, though, because the PHP scource code is processed aby the server before being sent to the browser so it is impossible for the user to see the script&#39;s source.

Next, you will need to issue the command to start a database connection:

mysql_connect(localhost,$username,$password);

This line tells PHP to connect to the MySQL database server at &#39;localhost&#39; (localhost means the server that the site is running one. Unless you web host tells you otherwise you should use localhost. If you are given a server address (such as sql.myserver.com you should replace localhost with &quot;sql.myserver.com&quot; (including the quotes)) using the username stored in $username and the password in $password.

Before I show you how to work with the database, I will show you one more command:

mysql_close();

This is a very important command as it closes the connection to the database server. Your script will still run if you do not include this command but too many open MySQL connections can cause problems for a web host. It is good practice to always include this line once you have issued all your commands to the database, to keep the server running well.

Selecting The Database

After you have connected to the database server you must then select the database you wish to use. This must be a database to which your username has access. The following command:

@mysql_select_db($database) or die( &quot;Unable to select database&quot;);

is used to do this. This tells PHP to select the database stored in the variable $database (which you set earlier). If it cannot connect it will stop executing the script and output the text:

Unable to select database

This extra &#39;or die&#39; part is good to leave in as it provides a little error control but it is not essential.

Executing Commands

Now you have connected to the server and selected the database you want to work with you can begin executing commands on the server.

There are two ways of executing a command. One is to just enter the command in PHP. This way is used if there will be no results from the operation.

The other way is to define the command as a variable. This will set the variable with the results of the operation.

In this part of the tutorial we will use the first way as we are not expecting a response from the database. The command will look like this:

[code]mysql_query($query);[/code]

The useful thing about using this form of the command is that you can just repeat the same command over and over again without learning new ones. All you need to do is to change the variable.

Inserting Data

For this part of the tutorial I will return to the contacts database which we created in the last part. We will now add our first information to the database:

[code]First: John
Last: Smith
Phone: 01234 567890
Mobile: 00112 334455
Fax: 01234 567891
E-mail: johnsmith@gowansnet.com
Web: http://www.gowansnet.com
[/code]

This will all be put in with one command:

[code]$query = &quot;INSERT INTO contacts VALUES (&#39;&#39;,&#39;John&#39;,&#39;Smith&#39;,&#39;01234 567890&#39;,&#39;00112 334455&#39;,&#39;01234 567891&#39;,&#39;johnsmith@gowansnet.com&#39;,&#39;http://www.gowansnet.com&#39;)&quot;;
[/code]

This may look a little confusing at first so I will explain what it all means.

Firstly $query= is there because we are assigning this to the variable $query (see the section above). The next part:

INSERT INTO contacts VALUES

is quite easy to understand. It tells the PHP to insert into the table called contacts the values in the brackets which follow.

The part in the brackets contains all the information to add. It uses all the fields in order and inserts the information from between the quotes. For example:

John

will be inserted into the 2nd field which, in this table, is the &#39;first&#39; field.

You may have noticed that you are not inserting any value into the first field in the database (id). This is because this field is going to act as an index field. No two records in the database will have the same ID. Because of this, when we set up the database we set ID to &#39;Auto Increment&#39;. This means that if you assign it no value it will take the next number in the series. This means that this first record will have the ID 1.

More to come....



[b]Credits[/b]:  Freewebmasters and 1% me!</description>
    
    <lastBuildDate>Fri, 06 Jul 2007 02:34:09 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/php-tutorial/119892.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>PHP-Tutorial!</title>
        <dc:creator><![CDATA[@OnlyOneRule OnlyOneRule]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/onlyonerule">@OnlyOneRule</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="4" data-topic="119892">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/n00b1/40/518_2.png" class="avatar"> N00b1:</div>
<blockquote>
<p>leeched i seen this before and why did you go on to sql if you say its a php tut? 0.o didnt read it justlooked at the code</p>
</blockquote>
</aside>
<p>yea i totaly agree with the sql thing, sql can also be used in asp, VB and the C languages (not sure about java)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/php-tutorial/119892/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/php-tutorial/119892/5</link>
        <pubDate>Fri, 06 Jul 2007 02:34:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-119892-5</guid>
        <source url="https://forum.moparisthebest.com/t/php-tutorial/119892.rss">PHP-Tutorial!</source>
      </item>
      <item>
        <title>PHP-Tutorial!</title>
        <dc:creator><![CDATA[@N00b1 N00b1]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/n00b1">@N00b1</a> wrote:</p>
          <blockquote>
              <p>leeched i seen this before and why did you go on to sql if you say its a php tut? 0.o didnt read it justlooked at the code</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/php-tutorial/119892/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/php-tutorial/119892/4</link>
        <pubDate>Fri, 06 Jul 2007 02:30:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-119892-4</guid>
        <source url="https://forum.moparisthebest.com/t/php-tutorial/119892.rss">PHP-Tutorial!</source>
      </item>
      <item>
        <title>PHP-Tutorial!</title>
        <dc:creator><![CDATA[@Lin Lin]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lin">@Lin</a> wrote:</p>
          <blockquote>
              <p>Hehe first you post the leeched one here and then on Codex o.o</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/php-tutorial/119892/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/php-tutorial/119892/3</link>
        <pubDate>Thu, 05 Jul 2007 11:52:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-119892-3</guid>
        <source url="https://forum.moparisthebest.com/t/php-tutorial/119892.rss">PHP-Tutorial!</source>
      </item>
      <item>
        <title>PHP-Tutorial!</title>
        <dc:creator><![CDATA[@usernamelol .Fusion]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/usernamelol">@usernamelol</a> wrote:</p>
          <blockquote>
              <p>leecher i don’t care if you put credits, if you didn’t make it, dont post it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/php-tutorial/119892/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/php-tutorial/119892/2</link>
        <pubDate>Thu, 05 Jul 2007 09:02:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-119892-2</guid>
        <source url="https://forum.moparisthebest.com/t/php-tutorial/119892.rss">PHP-Tutorial!</source>
      </item>
      <item>
        <title>PHP-Tutorial!</title>
        <dc:creator><![CDATA[@moparsc4p3 moparsc4p3]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparsc4p3">@moparsc4p3</a> wrote:</p>
          <blockquote>
              <p><span class="bbcode-b">Part 1</span></p>
<p>Introduction</p>
<p>For many people, the main reson for learning a scripting language like PHP is because of the interaction with databases it can offer. In this tutorial I will show you how to use PHP and the MySQL database to store information on the web and include it into your website. Before you read this tutorial you should have at least a basic knowledge of how to use PHP.<br>
Why Would I Want A Database?</p>
<p>It is actually surprising how useful a database can be when used with a website. There are a huge variety of things you can do when you interact the two, from displaying simple lists to running a complete website from a database. Some examples of PHP and MySQL being used together are:</p>
<pre><code>* Banner Rotation. On this site, where each banner is, a PHP script is called. This opens a database and picks a random banner from it to show the visitor. It also counts the number of times the banner has been viewed and could, with a few changes, track clicks too. To add, change or edit the banners all I have to do is change the database and the script will pick the correct banners for all the pages on the site.
* Forums. Hundreds of forums (message boards) on the internet are run using PHP and MySQL. These are much more efficent than other systems that create a page for each message and offer a wide variety of options. All the pages in the forum can be updated by changing one script.
* Databases. One quite obvious example is sites which get all there information from a database. For example Script Avenue is run by a few scripts, which gain all their information from a large database. All the different script categories can be accessed in one script by just changing the URL to access a different part of the database.
* Websites. If you have a large website and you want to change the design it can take a very long time to update and upload all the pages. With PHP and MySQL your whole website could be just one or two PHP scripts. These would access a MySQL database to get the information for the pages. To update the website's design you would just have to change one page.
</code></pre>
<p>What Do I Need?</p>
<p>You only really need three things to run PHP scripts which access MySQL databases. Firstly, you will, of course, need a webserver. This can either be on a computer of your own or on a web host. Any web server software should work with PHP and MySQL but the best to use is Apache, which is free.</p>
<p>PHP also needs to be installed on the server. If it is not already installed you can install it (or ask your web host to install it). It can be downloaded from <a href="http://PHP.net" rel="nofollow noopener">PHP.net</a> and is also free. If you are not sure if you have PHP installed I will show you a way to check it later.</p>
<p>Finally, you will also require MySQL. This is the actual database software. You can also use most other types of database (SQL, Oracle etc.) but as this is a PHP/MySQL tutorial I will deal just now with the MySQL database (although the commands used here will also work with SQL databases). As with the other software you need, MySQL is free and can be downloaded from the MySQL homepage. If you are not sure if you have MySQL installed, I will show you how to check later.</p>
<p>If you cannot install (or your web host won’t allow) PHP and MySQL you can still use another web host. Freedom2Surf are a free (banner supported) web host and support PHP and have MySQL installed. HostRocket are an excellent web host and can offer you 300MB of space with PHP, MySQL and loads of other extras for under $10 a month.</p>
<p>Testing For PHP and MySQL</p>
<p>There is a simple test for both PHP and MySQL. Open a text editor and type in the following:</p>
<p><code>&lt;?
phpinfo();
?&gt;
</code></p>
<p>and save it as phpinfo.php</p>
<p>Now upload this to your webspace and go to i<br>
t in your browser. If you have PHP installed you will see a huge page with all the details of your PHP installation on it. Next, scroll down through all this information. If you find a section about MySQL then you will know that MySQL is installed.</p>
<p>Managing Databases</p>
<p>Although all the database administrative options can be done through PHP scripts, I strongly suggest installing a copy of PHPMyAdmin on your server. It is an excellent free set of scripts that will provide you with an administrative interface for your MySQL database(s). You can add, remove, edit, backup and view your databases using this and it is especially useful when troubleshooting your databases.</p>
<p>This Tutorial</p>
<p>Throughout this tutorial I will be showing you some of the basics of using PHP and MySQL together. To do this I will be using an example all the way through. As you use this tutorial, you will learn how to create a web based contact management program. It will allow you to store names with their addresses, e-mail and phone numbers. You will be able to update records and search the database. There will even be an option which allows you to send an e-mail out to all the people in the database (please note: this system should not be used for spam or unsolicited e-mail).</p>
<p>After creating this system you should have enough knowledge to go on and create nearly any type of database enabled site you want to.</p>
<p><span class="bbcode-b">Part 2</span></p>
<p>Introduction</p>
<p>Before you actually start building your database scripts, you must have a database to place information into and read it from. In this section I will show you how to create a database in MySQL and prepare it for the data. I will also begin to show you how to create the contacts management database.</p>
<p>Database Construction</p>
<p>MySQL databases have a standard setup. They are made up of a database, in which is contained tables. Each of these tables is quite separate and can have different fields etc. even though it is part of one database. Each table contains records which are made up of fields.</p>
<p>Databases And Logins</p>
<p>The process of setting up a MySQL database varies from host to host, you will however end up with a database name, a user name and a password. This information will be required to log in to the database.</p>
<p>If you have PHPMyAdmin (or a similar program) installed you can just go to it to log in with your user name and password. If not you must do all your database administration using PHP scripts.</p>
<p>Creating A Table</p>
<p>Before you can do anything with your database, you must create a table. A table is a section of the database for storing related information. In a table you will set up the different fields which will be used in that table. Because of this construction, nearly all of a site’s database needs can be satisfied using just one database.</p>
<p>Creating a table in PHPMyAdmin is simple, just type the name, select the number of fields and click the button. You will then be taken to a setup screen where you must create the fields for the database. If you are using a PHP script to create your database, the whole creation and setup will be done in one command.</p>
<p>Fields</p>
<p>There are a wide variety of fields and attributes available in MySQL and I will cover a few of these here:</p>
<p><code>Field Type	     Description
TINYINT	         Small Integer Number
SMALLINT	Small Integer Number
MEDIUMINT      Integer Number
INT	            Integer Number
VARCHAR	        Text (maximum 256 characters)
TEXT	          Text
</code></p>
<p>These are just a few of the fields which are available. A search on the internet will provide lists of all the field types allowed.</p>
<p>Creating A Table With PHP</p>
<p>To create a table in PHP is slightly more difficult than with MySQL. It takes the following format:</p>
<p>CREATE TABLE tablename {</p>
<p>Fields</p>
<p>}</p>
<p>The fields are defined as follows:</p>
<p>fieldname type(length) extra info,</p>
<p>The final field entered should not have a comma after it.</p>
<p>I will give full an example of using these later in the section.</p>
<p>The Contacts Database</p>
<p>The contacts database will contain all the conact information for the people you enter and the information will be able to be edited and viewed on the internet. The following fields will be used in the database:</p>
<pre><code class="lang-auto">Name
	
Type
	
Length
	
Description
id	INT	6	A unique identifier for each record
first	VARCHAR	15	The person's first name
last	VARCHAR	15	The person's last name
phone	VARCHAR	20	The person's phone number
mobile	VARCHAR	20	The person's mobile number
fax	VARCHAR	20	The person's fax number
email	VARCHAR	30	The person's e-mail address
web	VARCHAR	30	The person's web address</code></pre>
<p>You may be wondering why I have used VARCHAR fields for the phone/fax numbers even though they are made up of digits. You could use INT fields but I prefer to use VARCHAR as it will allow dashes and spaces in the number, as well as textual numbers (like 1800-COMPANY) and as we will not be initiating phone calls from the web it is not a problem.</p>
<p>There is one other thing you should be aware of in this database. The id field will also be set as PRIMARY, INDEX, UNIQUE and will be set to auto_increment (found under Extra in PH<br>
PMyAdmin). The reason for this is that this will be the field identifier (primary and index) and so must be unique. The auto increment setting means that whenever you add a record, as long as you don’t specify an id, it will be given the next number.</p>
<p>If you are using PHPMyAdmin or a management program you can now create this in a table called contacts.</p>
<p>Creating The Table In PHP</p>
<p>The following code should be used to create this table in PHP. Some of the code has not been covered yet but I will explain it fully in the next part.</p>
<p><code>&lt;?
$user="username";
$password="password";
$database="database";
mysql_connect(localhost,$user,$password);
@mysql_select_db($database) or die( "Unable to select database");
$query="CREATE TABLE contacts (id int(6) NOT NULL auto_increment,first varchar(15) NOT NULL,last varchar(15) NOT NULL,phone varchar(20) NOT NULL,mobile varchar(20) NOT NULL,fax varchar(20) NOT NULL,email varchar(30) NOT NULL,web varchar(30) NOT NULL,PRIMARY KEY (id),UNIQUE id (id),KEY id_2 (id))";
mysql_query($query);
mysql_close();
?&gt;
</code></p>
<p>Enter your database, MySQL username and MySQL password in the appropriate positions on the first three lines above.</p>
<p><span class="bbcode-b">Part 3</span></p>
<p>Introduction</p>
<p>Over the past two parts I have explained what I am planning to do in this tutorial and have shown you how to create a database to use with the tutorial. In this part I will be showing you how to insert some information into your database so that it is more useful.</p>
<p>Connecting To The Database</p>
<p>The first thing you must do before you can do any work at all is to connect to the MySQL database. This is an extremely important step as, if you are not connected, your commands to the database will fail.</p>
<p>Good practice for using databases is to specify the username, password and database name first so that if you change any of them at a later date you will only have to change one line:</p>
<p>$username=“username”;<br>
$password=“password”;<br>
$database=“your_database”;</p>
<p>At this point you may be wondering if it is a security risk, keeping your password in the file. You don’t need to worry, though, because the PHP scource code is processed aby the server before being sent to the browser so it is impossible for the user to see the script’s source.</p>
<p>Next, you will need to issue the command to start a database connection:</p>
<p>mysql_connect(localhost,$username,$password);</p>
<p>This line tells PHP to connect to the MySQL database server at ‘localhost’ (localhost means the server that the site is running one. Unless you web host tells you otherwise you should use localhost. If you are given a server address (such as <a href="http://sql.myserver.com" rel="nofollow noopener">sql.myserver.com</a> you should replace localhost with “<a href="http://sql.myserver.com" rel="nofollow noopener">sql.myserver.com</a>” (including the quotes)) using the username stored in $username and the password in $password.</p>
<p>Before I show you how to work with the database, I will show you one more command:</p>
<p>mysql_close();</p>
<p>This is a very important command as it closes the connection to the database server. Your script will still run if you do not include this command but too many open MySQL connections can cause problems for a web host. It is good practice to always include this line once you have issued all your commands to the database, to keep the server running well.</p>
<p>Selecting The Database</p>
<p>After you have connected to the database server you must then select the database you wish to use. This must be a database to which your username has access. The following command:</p>
<p><span class="mention">@mysql_select_db</span>($database) or die( “Unable to select database”);</p>
<p>is used to do this. This tells PHP to select the database stored in the variable $database (which you set earlier). If it cannot connect it will stop executing the script and output the text:</p>
<p>Unable to select database</p>
<p>This extra ‘or die’ part is good to leave in as it provides a little error control but it is not essential.</p>
<p>Executing Commands</p>
<p>Now you have connected to the server and selected the database you want to work with you can begin executing commands on the server.</p>
<p>There are two ways of executing a command. One is to just enter the command in PHP. This way is used if there will be no results from the operation.</p>
<p>The other way is to define the command as a variable. This will set the variable with the results of the operation.</p>
<p>In this part of the tutorial we will use the first way as we are not expecting a response from the database. The command will look like this:</p>
<pre><code class="lang-auto">mysql_query($query);</code></pre>
<p>The useful thing about using this form of the command is that you can just repeat the same command over and over again without learning new ones. All you need to do is to change the variable.</p>
<p>Inserting Data</p>
<p>For this part of the tutorial I will return to the contacts database which we created in the last part. We will now add our first information to the database:</p>
<p><code>First: John
Last: Smith
Phone: 01234 567890
Mobile: 00112 334455
Fax: 01234 567891
E-mail: johnsmith@gowansnet.com
Web: http://www.gowansnet.com
</code></p>
<p>This will all be put in with one command:</p>
<p><code>$query = "INSERT INTO contacts VALUES ('','John','Smith','01234 567890','00112 334455','01234 567891','johnsmith@gowansnet.com','http://www.gowansnet.com')";
</code></p>
<p>This may look a little confusing at first so I will explain what it all means.</p>
<p>Firstly $query= is there because we are assigning this to the variable $query (see the section above). The next part:</p>
<p>INSERT INTO contacts VALUES</p>
<p>is quite easy to understand. It tells the PHP to insert into the table called contacts the values in the brackets which follow.</p>
<p>The part in the brackets contains all the information to add. It uses all the fields in order and inserts the information from between the quotes. For example:</p>
<p>John</p>
<p>will be inserted into the 2nd field which, in this table, is the ‘first’ field.</p>
<p>You may have noticed that you are not inserting any value into the first field in the database (id). This is because this field is going to act as an index field. No two records in the database will have the same ID. Because of this, when we set up the database we set ID to ‘Auto Increment’. This means that if you assign it no value it will take the next number in the series. This means that this first record will have the ID 1.</p>
<p>More to come…</p>
<p><span class="bbcode-b">Credits</span>:  Freewebmasters and 1% me!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/php-tutorial/119892/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/php-tutorial/119892/1</link>
        <pubDate>Thu, 05 Jul 2007 07:40:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-119892-1</guid>
        <source url="https://forum.moparisthebest.com/t/php-tutorial/119892.rss">PHP-Tutorial!</source>
      </item>
  </channel>
</rss>
