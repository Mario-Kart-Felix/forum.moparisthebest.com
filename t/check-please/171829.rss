<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Check please</title>
    <link>https://forum.moparisthebest.com/t/check-please/171829</link>
    <description>This IS homework, if you guys don&#39;t allow posting like this just tell me, I&#39;ll delete it.

Anyway, I just want to know (for my own gain), if i could optimize this anywhere.


(I am turning in the one i have posted below)

The main place i think could use optimization are the add() and sub() methods.

[code]import javax.swing.JOptionPane;


public class Lab08B100p
{
	public static void main (String args[])
	{   
		String strNum1 = JOptionPane.showInputDialog(&quot;Enter Numerator 1&quot;); 
		String strDen1 = JOptionPane.showInputDialog(&quot;Enter Denominator 1&quot;);
		String strNum2 = JOptionPane.showInputDialog(&quot;Enter Numerator 2&quot;); 
		String strDen2 = JOptionPane.showInputDialog(&quot;Enter Denominator 2&quot;);

		int num = Integer.parseInt(strNum1);
		int den = Integer.parseInt(strDen1);
		int num2 = Integer.parseInt(strNum2);
		int den2 = Integer.parseInt(strDen2);

		Rational r = new Rational(num,den);
		Rational r2 = new Rational(num2,den2);
		
		JOptionPane.showMessageDialog(null,r.getOriginal() + &quot; * &quot; + r2.getOriginal() + &quot; = &quot; + r.mult(r2).getRational() +&quot;\n&quot;+
										   r.getOriginal() + &quot; / &quot; + r2.getOriginal() + &quot; = &quot; + r.div(r2).getRational() +&quot; \n&quot;+
										   r.getOriginal() + &quot; + &quot; + r2.getOriginal() + &quot; = &quot; + r.add(r2).getOriginal() +&quot; \n&quot;+
										   r.getOriginal() + &quot; - &quot; + r2.getOriginal() + &quot; = &quot; + r.sub(r2).getOriginal()); // using getOriginal because of dividing by zero when getting rational
		
		System.exit(0);
	}
}

				

class Rational
{
	
	private int num;
	private int den;
	
	public Rational(int n, int d)
	{
		num = n;
		den = d;
	}
	
	public void setNum(int x)
	{
		num = x;
	}
	
	public void setDen(int x)
	{
		den = x;
	}
	
	public int getNum()
	{
		return num;
	}
	
	public int getDen()
	{
		return den;
	}

	private int getGCF() // damn... i had to think
	{
		int max = 1;
		int current = 0;
		while(max &lt;= Math.min(num,den))
		{
			if(Math.min(num,den)%max == 0 &amp;&amp; Math.max(num,den)%max == 0)
				current = max;
			max++;
		}
		return current;
	}

	private String reduce()  // easy!
	{
		int d = den;
		int n = num;
		d = den / getGCF();
		n = num / getGCF();
		return n+&quot;/&quot;+d;
	}
	
	public double getDecimal()  //eazy peezy lemon sqeezy
	{
		double numz = (double) getNum();
		double denz = (double) getDen();
		double decimal = numz/denz;
		return decimal;
	}

	public String getRational()
	{
		return reduce();
	} 
	

	public String getOriginal()
	{
		return getNum() +&quot;/&quot;+ getDen();
	}
 
 	public Rational mult(Rational mul)
 	{
 		int rNum = 0;
 		int rDen;
 		Rational toReturn = new Rational(0,0);
		rDen = den*mul.getDen();
		rNum = num*mul.getNum();
 		toReturn.setNum(rNum);
 		toReturn.setDen(rDen);
 		return toReturn;
 	}
 
  	public Rational div(Rational div)
 	{
 		int rNum = 0;
 		int rDen;
 		Rational toReturn = new Rational(0,0);
		rDen = den*div.getNum();  // multiply by the recipricle!! HAHA!
		rNum = num*div.getDen();
 		toReturn.setNum(rNum);
 		toReturn.setDen(rDen);
 		return toReturn;
 	}
 
 	public Rational add(Rational add)  // OMG, Adding is hard!!! lolz
  	{
 		int rNum = 0;
 		int rDen;
 		Rational toReturn = new Rational(0,0);
 		
 	 	if(den &gt; add.getDen())
 		{
 			rDen = den;
 			rNum = (int)((double)den/(double)add.getDen() * (double)add.getNum() + (double)num); //add.getNum() * den + num;
 				// im pretty sure i DON&#39;T have to cast that much, but im not taking the risk.
 		}			
 		else if(den &lt; add.getDen())
 		{
 			rDen = add.getDen();
 			rNum = (int)((double)add.getDen()/(double)den * (double)num + (double)add.getNum()); //num * add.getDen() + add.getNum();
 		}
 		else //if the denominators are = 
 		{
 			rDen = den;
 			rNum = num + add.getNum();
 		}
 		toReturn.setNum(rNum);
 		toReturn.setDen(rDen);
 		return toReturn;
 	}
 	
 	public Rational sub(Rational sub)  // subtracting is harder than adding!!! fucking negative numbers
 	{
 		int rNum = 0;
 		int rDen;
 		Rational toReturn = new Rational(0,0);
 		
 	 	if(den &gt; sub.getDen())
 		{
 			rDen = den;
 			rNum = (int)((double)num - (double)den/(double)sub.getDen() * (double)sub.getNum());
 		}
 		else if(den &lt; sub.getDen())
 		{
 			rDen = sub.getDen();
 			rNum = (int)((double)sub.getDen()/(double)den * (double)num - (double)sub.getNum());
 		}
 		else //if the denominators are = 
 		{
 			rDen = den;
 			rNum = num - sub.getNum();
 		}
 		toReturn.setNum(rNum);
 		toReturn.setDen(rDen);
 		return toReturn;
 	}

}[/code]

Once again, if you don&#39;t allow these types of posts, just politely tell me, and I will delete. And yes, i coded this whole thing by myself. I just had such a great time making it, i thought it deserved to be seen.

Thanks</description>
    
    <lastBuildDate>Tue, 08 Jan 2008 15:09:14 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/check-please/171829.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Check please</title>
        <dc:creator><![CDATA[@Yz85Racer Yz85Racer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/yz85racer">@Yz85Racer</a> wrote:</p>
          <blockquote>
              <p>[quote=“Iamadam, post:6, topic:171829”]Nah, that’s just plain ugly <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<p>I was thinking more along the lines of dealing with non-numeric input.[/quote]<br>
Looks &lt; Performance… In some ways.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/check-please/171829/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/check-please/171829/7</link>
        <pubDate>Tue, 08 Jan 2008 15:09:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-171829-7</guid>
        <source url="https://forum.moparisthebest.com/t/check-please/171829.rss">Check please</source>
      </item>
      <item>
        <title>Check please</title>
        <dc:creator><![CDATA[@Iamadam Iamadam]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/iamadam">@Iamadam</a> wrote:</p>
          <blockquote>
              <p>Nah, that’s just plain ugly <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<p>I was thinking more along the lines of dealing with non-numeric input.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/check-please/171829/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/check-please/171829/6</link>
        <pubDate>Tue, 08 Jan 2008 14:06:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-171829-6</guid>
        <source url="https://forum.moparisthebest.com/t/check-please/171829.rss">Check please</source>
      </item>
      <item>
        <title>Check please</title>
        <dc:creator><![CDATA[@Yz85Racer Yz85Racer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/yz85racer">@Yz85Racer</a> wrote:</p>
          <blockquote>
              <pre><code>	Rational r = new Rational(Integer.parseInt(JOptionPane.showInputDialog("Enter Numerator 1")), Integer.parseInt(JOptionPane.showInputDialog("Enter Denominator 1")));
	Rational r2 = new Rational(Integer.parseInt(JOptionPane.showInputDialog("Enter Numerator 2")), Integer.parseInt(JOptionPane.showInputDialog("Enter Denominator 2")));
</code></pre>
<p>??</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/check-please/171829/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/check-please/171829/5</link>
        <pubDate>Tue, 08 Jan 2008 14:02:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-171829-5</guid>
        <source url="https://forum.moparisthebest.com/t/check-please/171829.rss">Check please</source>
      </item>
      <item>
        <title>Check please</title>
        <dc:creator><![CDATA[@Iamadam Iamadam]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/iamadam">@Iamadam</a> wrote:</p>
          <blockquote>
              <p>Okay, I got really bored so I fixed it some more.</p>
<p>[code]import javax.swing.JOptionPane;</p>
<p>public class someclass {</p>
<pre><code>public static void main (String args[])	{   
	int num = Integer.parseInt(JOptionPane.showInputDialog("Enter Numerator 1")); 
	int den = Integer.parseInt(JOptionPane.showInputDialog("Enter Denominator 1"));
	int num2 = Integer.parseInt(JOptionPane.showInputDialog("Enter Numerator 2")); 
	int den2 = Integer.parseInt(JOptionPane.showInputDialog("Enter Denominator 2"));

	Rational r = new Rational(num, den);
	Rational r2 = new Rational(num2, den2);
	
	JOptionPane.showMessageDialog(null, r.toString() + " * " + r2.toString() + " = " + r.mult(r2).getRational() +"\n"+
									   r.toString() + " / " + r2.toString() + " = " + r.div(r2).getRational() +" \n"+
									   r.toString() + " + " + r2.toString() + " = " + r.add(r2).getRational() +" \n"+
									   r.toString() + " - " + r2.toString() + " = " + r.sub(r2).getRational()); 
}
</code></pre>
<p>}</p>
<p>class Rational {</p>
<pre><code>private int num;
private int den;

public Rational(int num, int den) {
	this.num = num;
	this.den = den;
}

public Rational mult(Rational mul) {
	int rDen = den * mul.getDen();
	int rNum = num * mul.getNum();
	return new Rational(rNum, rDen);
}

public Rational div(Rational div) {
	int rDen = den * div.getNum();
	int rNum = num * div.getDen();
	return new Rational(rNum, rDen);
}

public Rational add(Rational add) {
 	if(den != add.getDen()) {
 		int aDen = add.getDen();
 		int rDen = den * aDen; 	 	
 		int rNum = (num * aDen) + (add.getNum() * den);
 		return new Rational(rNum, rDen);
 	} else {
 		return new Rational(num + add.getNum(), den);
 	}		
}

public Rational sub(Rational sub) {
 	if(den != sub.getDen()) { 
 		int sDen = sub.getDen();
 		int rDen = den * sDen; 	 	
 		int rNum = (num * sDen) - (sub.getNum() * den);
 		return new Rational(rNum, rDen);
 	} else {
 		return new Rational(num - sub.getNum(), den);
 	}		
}

private int getGCF() { //Wouldn't you think counting DOWN would be faster? =]
	int currentTest = Math.min(Math.abs(num), Math.abs(den)); //Deals with negative fractions
	while(currentTest &gt; 0) {
		if(num % currentTest == 0 &amp;&amp; den % currentTest == 0)
			return currentTest;
		currentTest--;
	}
	return 1; //Won't ever get here, but hey.
}

private String reduce()	{
	int gcf = getGCF();
	int	d = den / gcf;
	int	n = num / gcf;
	return n + "/" + d;
}

public double getDecimal() {
	return ((double)num / (double)den);
}

public String getRational() {
	return reduce();
}	
	
public String toString() {
	return num + "/" + den;
}

public void setNum(int num) {
	this.num = num;
}

public void setDen(int den) {
	this.den = den;
}

public int getNum()	{
	return num;
}

public int getDen()	{
	return den;
}
</code></pre>
<p>}[/code]</p>
<p>There is more you can do to fix the main method, but I’m guessing that’s just for test purposes, so I didn’t bother with it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/check-please/171829/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/check-please/171829/4</link>
        <pubDate>Tue, 08 Jan 2008 13:29:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-171829-4</guid>
        <source url="https://forum.moparisthebest.com/t/check-please/171829.rss">Check please</source>
      </item>
      <item>
        <title>Check please</title>
        <dc:creator><![CDATA[@meiscooldude meiscooldude]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/meiscooldude">@meiscooldude</a> wrote:</p>
          <blockquote>
              <p>lol, thanks, but most of that i already knew, (initializing varaibles at the same place you declare them)… i was just too lazy to put them in one line of code.</p>
<p>Anyway, thanks for the idea of passing the variables through the constructor</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/check-please/171829/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/check-please/171829/3</link>
        <pubDate>Tue, 08 Jan 2008 06:35:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-171829-3</guid>
        <source url="https://forum.moparisthebest.com/t/check-please/171829.rss">Check please</source>
      </item>
      <item>
        <title>Check please</title>
        <dc:creator><![CDATA[@Iamadam Iamadam]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/iamadam">@Iamadam</a> wrote:</p>
          <blockquote>
              <ol>
<li>Get rid of the <span class="bbcode-i">System.exit(0)</span> at the end of the main method. It is redundant.</li>
<li>This section:</li>
</ol>
<p>[code]		String strNum1 = JOptionPane.showInputDialog(“Enter Numerator 1”);<br>
String strDen1 = JOptionPane.showInputDialog(“Enter Denominator 1”);<br>
String strNum2 = JOptionPane.showInputDialog(“Enter Numerator 2”);<br>
String strDen2 = JOptionPane.showInputDialog(“Enter Denominator 2”);</p>
<pre><code>	int num = Integer.parseInt(strNum1);
	int den = Integer.parseInt(strDen1);
	int num2 = Integer.parseInt(strNum2);
	int den2 = Integer.parseInt(strDen2);[/code]
</code></pre>
<p>Could be simplified:</p>
<p><code>		int num = Integer.parseInt(JOptionPane.showInputDialog("Enter Numerator 1")); 
		int den = Integer.parseInt(JOptionPane.showInputDialog("Enter Denominator 1"));
		int num2 = Integer.parseInt(JOptionPane.showInputDialog("Enter Numerator 2")); 
		int den2 = Integer.parseInt(JOptionPane.showInputDialog("Enter Denominator 2"));</code><br>
3. Redundant code here:</p>
<p><code>int d = den;
int n = num;
d = den / getGCF();
n = num / getGCF();
return n+"/"+d;</code><br>
Easily simplifies to:</p>
<p><code>int gcf = getGCF();
int d = den / gcf;
int n = num / gcf;
return n+"/"+d;</code><br>
The saves a call to getGCF, and also a few wasted assignments.</p>
<ol start="4">
<li>Try to avoid using getters/setters within a field’s own class:</li>
</ol>
<p><code>	public double getDecimal()  //eazy peezy lemon sqeezy
	{
		double numz = (double) getNum();
		double denz = (double) getDen();
		double decimal = numz / denz;
		return decimal;
	}</code><br>
Would be better as:</p>
<p><code>	public double getDecimal() {
		return ((double)num / (double)den);
	}</code><br>
5.</p>
<p><code> 	public Rational mult(Rational mul) 	{
 		int rNum = 0;
 		int rDen;
 		Rational toReturn = new Rational(0, 0);
		rDen = den*mul.getDen();
		rNum = num*mul.getNum();
 		toReturn.setNum(rNum);
 		toReturn.setDen(rDen);
 		return toReturn;
 	}</code><br>
Why would you create an object, and then assign values to its fields, when you can just pass them through the constructor?</p>
<p><code> 	public Rational mult(Rational mul) 	{
 		int rNum = num * mul.getNum();
		int rDen = den * mul.getDen();		
 		return new Rational(rNum, rDen);
 	}</code> is better.</p>
<ol start="6">
<li>
<code>  	public Rational div(Rational div)
 {
 	int rNum = 0;
 	int rDen;
 	Rational toReturn = new Rational(0,0);
 	rDen = den*div.getNum();  // multiply by the recipricle!! HAHA!
 	rNum = num*div.getDen();
 	toReturn.setNum(rNum);
 	toReturn.setDen(rDen);
 	return toReturn;
 }</code> Same story.<br>
Actually, the same goes for add and subtract.</li>
</ol>
<p>These are all just things I noticed at first glance.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/check-please/171829/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/check-please/171829/2</link>
        <pubDate>Tue, 08 Jan 2008 05:51:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-171829-2</guid>
        <source url="https://forum.moparisthebest.com/t/check-please/171829.rss">Check please</source>
      </item>
      <item>
        <title>Check please</title>
        <dc:creator><![CDATA[@meiscooldude meiscooldude]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/meiscooldude">@meiscooldude</a> wrote:</p>
          <blockquote>
              <p>This IS homework, if you guys don’t allow posting like this just tell me, I’ll delete it.</p>
<p>Anyway, I just want to know (for my own gain), if i could optimize this anywhere.</p>
<p>(I am turning in the one i have posted below)</p>
<p>The main place i think could use optimization are the add() and sub() methods.</p>
<p>[code]import javax.swing.JOptionPane;</p>
<p>public class Lab08B100p<br>
{<br>
public static void main (String args[])<br>
{<br>
String strNum1 = JOptionPane.showInputDialog(“Enter Numerator 1”);<br>
String strDen1 = JOptionPane.showInputDialog(“Enter Denominator 1”);<br>
String strNum2 = JOptionPane.showInputDialog(“Enter Numerator 2”);<br>
String strDen2 = JOptionPane.showInputDialog(“Enter Denominator 2”);</p>
<pre><code>	int num = Integer.parseInt(strNum1);
	int den = Integer.parseInt(strDen1);
	int num2 = Integer.parseInt(strNum2);
	int den2 = Integer.parseInt(strDen2);

	Rational r = new Rational(num,den);
	Rational r2 = new Rational(num2,den2);
	
	JOptionPane.showMessageDialog(null,r.getOriginal() + " * " + r2.getOriginal() + " = " + r.mult(r2).getRational() +"\n"+
									   r.getOriginal() + " / " + r2.getOriginal() + " = " + r.div(r2).getRational() +" \n"+
									   r.getOriginal() + " + " + r2.getOriginal() + " = " + r.add(r2).getOriginal() +" \n"+
									   r.getOriginal() + " - " + r2.getOriginal() + " = " + r.sub(r2).getOriginal()); // using getOriginal because of dividing by zero when getting rational
	
	System.exit(0);
}
</code></pre>
<p>}</p>
<p>class Rational<br>
{</p>
<pre><code>private int num;
private int den;

public Rational(int n, int d)
{
	num = n;
	den = d;
}

public void setNum(int x)
{
	num = x;
}

public void setDen(int x)
{
	den = x;
}

public int getNum()
{
	return num;
}

public int getDen()
{
	return den;
}

private int getGCF() // damn... i had to think
{
	int max = 1;
	int current = 0;
	while(max &lt;= Math.min(num,den))
	{
		if(Math.min(num,den)%max == 0 &amp;&amp; Math.max(num,den)%max == 0)
			current = max;
		max++;
	}
	return current;
}

private String reduce()  // easy!
{
	int d = den;
	int n = num;
	d = den / getGCF();
	n = num / getGCF();
	return n+"/"+d;
}

public double getDecimal()  //eazy peezy lemon sqeezy
{
	double numz = (double) getNum();
	double denz = (double) getDen();
	double decimal = numz/denz;
	return decimal;
}

public String getRational()
{
	return reduce();
} 


public String getOriginal()
{
	return getNum() +"/"+ getDen();
}

public Rational mult(Rational mul)
{
	int rNum = 0;
	int rDen;
	Rational toReturn = new Rational(0,0);
	rDen = den*mul.getDen();
	rNum = num*mul.getNum();
	toReturn.setNum(rNum);
	toReturn.setDen(rDen);
	return toReturn;
}

public Rational div(Rational div)
{
	int rNum = 0;
	int rDen;
	Rational toReturn = new Rational(0,0);
	rDen = den*div.getNum();  // multiply by the recipricle!! HAHA!
	rNum = num*div.getDen();
	toReturn.setNum(rNum);
	toReturn.setDen(rDen);
	return toReturn;
}

public Rational add(Rational add)  // OMG, Adding is hard!!! lolz
{
	int rNum = 0;
	int rDen;
	Rational toReturn = new Rational(0,0);
	
 	if(den &gt; add.getDen())
	{
		rDen = den;
		rNum = (int)((double)den/(double)add.getDen() * (double)add.getNum() + (double)num); //add.getNum() * den + num;
			// im pretty sure i DON'T have to cast that much, but im not taking the risk.
	}			
	else if(den &lt; add.getDen())
	{
		rDen = add.getDen();
		rNum = (int)((double)add.getDen()/(double)den * (double)num + (double)add.getNum()); //num * add.getDen() + add.getNum();
	}
	else //if the denominators are = 
	{
		rDen = den;
		rNum = num + add.getNum();
	}
	toReturn.setNum(rNum);
	toReturn.setDen(rDen);
	return toReturn;
}

public Rational sub(Rational sub)  // subtracting is harder than adding!!! fucking negative numbers
{
	int rNum = 0;
	int rDen;
	Rational toReturn = new Rational(0,0);
	
 	if(den &gt; sub.getDen())
	{
		rDen = den;
		rNum = (int)((double)num - (double)den/(double)sub.getDen() * (double)sub.getNum());
	}
	else if(den &lt; sub.getDen())
	{
		rDen = sub.getDen();
		rNum = (int)((double)sub.getDen()/(double)den * (double)num - (double)sub.getNum());
	}
	else //if the denominators are = 
	{
		rDen = den;
		rNum = num - sub.getNum();
	}
	toReturn.setNum(rNum);
	toReturn.setDen(rDen);
	return toReturn;
}
</code></pre>
<p>}[/code]</p>
<p>Once again, if you don’t allow these types of posts, just politely tell me, and I will delete. And yes, i coded this whole thing by myself. I just had such a great time making it, i thought it deserved to be seen.</p>
<p>Thanks</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/check-please/171829/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/check-please/171829/1</link>
        <pubDate>Tue, 08 Jan 2008 04:52:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-171829-1</guid>
        <source url="https://forum.moparisthebest.com/t/check-please/171829.rss">Check please</source>
      </item>
  </channel>
</rss>
