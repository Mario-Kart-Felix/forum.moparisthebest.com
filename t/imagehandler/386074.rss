<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>ImageHandler</title>
    <link>https://forum.moparisthebest.com/t/imagehandler/386074</link>
    <description>I used what I have learned from hacking the minecraft launcher and have been applying it to my own games. I decided this might be quite useful to others that (for example) are writing a webclient, and want it to need to download less with the cache, as this can load an image directly from the jar (or a path, DUH, helping out the speed at which people can make webclients as well), and even others who want to do a basic GUI with every image being hard-coded (this narrows down on that). If there is anything you think belongs in this class that I don&#39;t have (and would like credits for), simply PM it to me, with the subject &quot;SUG - ImageHandler&quot;, so that I will know what it is about. If I feel something needs to be changes (or optimized) I will make changes accordingly, PM you back with my form, and make sure you approve as well.

[code=java]
/*
 * @Author CoonHunter aka Soharuda
 * @Copyright 2011
 * @Date 3/10/2011    (mm/dd/yyyy);
 */

import java.awt.*;
import javax.swing.*;

class ImageHandler {
	
	public Image loadImageFromPath(String path) {
	    try {
	       ImageIcon image = new ImageIcon(path);
	       return image.getImage();
	    } catch (Exception e) {
	    	e.printStackTrace();
			System.out.println(&quot;Image &quot; + path + &quot;was not found!&quot;);
	    	return null;
	    }
	}
	
	public Image loadImageFromJar(String path) {
		try {
			ImageIcon image = (new ImageIcon(getClass().getResource(path)));
			return image.getImage();
		} catch (Exception e) {
			e.printStackTrace();
			System.out.println(&quot;Image &quot; + path + &quot;was not found!&quot;);
			return null;
		}
	}
}
[/code]

For loading from a jar, the getClass() is needed, so do NOT remove that, or you will get some errors. Example usage would be like:
[code=java]
loadImageFromJar(&quot;pic.png&quot;);
[/code]

This would get the &quot;pic.png&quot; image from where the Class of located. It is suggested to use this in an un-packaged example, so you can better sort out your project. Please, do [b]NOT[/b] remove the tags I have set.</description>
    
    <lastBuildDate>Sun, 13 Mar 2011 13:03:32 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/imagehandler/386074.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>ImageHandler</title>
        <dc:creator><![CDATA[@CoonHunter CoonHunter]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/coonhunter">@CoonHunter</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="386074">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/kaex/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Kaex:</div>
<blockquote>
<p>Nice but kind of basics lol.</p>
</blockquote>
</aside>
<p>Yed, but I always see tuts on uploading your images and directly linking to them, or downloading them with the cache. Figured this would help them, along with others that dont know. Main reason for this is loading an image from the jar, as loading from a path is normal for any program.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/imagehandler/386074/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/imagehandler/386074/3</link>
        <pubDate>Sun, 13 Mar 2011 13:03:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-386074-3</guid>
        <source url="https://forum.moparisthebest.com/t/imagehandler/386074.rss">ImageHandler</source>
      </item>
      <item>
        <title>ImageHandler</title>
        <dc:creator><![CDATA[@Kaex Kaex]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/kaex">@Kaex</a> wrote:</p>
          <blockquote>
              <p>Nice but kind of basics lol.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/imagehandler/386074/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/imagehandler/386074/2</link>
        <pubDate>Sun, 13 Mar 2011 12:12:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-386074-2</guid>
        <source url="https://forum.moparisthebest.com/t/imagehandler/386074.rss">ImageHandler</source>
      </item>
      <item>
        <title>ImageHandler</title>
        <dc:creator><![CDATA[@CoonHunter CoonHunter]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/coonhunter">@CoonHunter</a> wrote:</p>
          <blockquote>
              <p>I used what I have learned from hacking the minecraft launcher and have been applying it to my own games. I decided this might be quite useful to others that (for example) are writing a webclient, and want it to need to download less with the cache, as this can load an image directly from the jar (or a path, DUH, helping out the speed at which people can make webclients as well), and even others who want to do a basic GUI with every image being hard-coded (this narrows down on that). If there is anything you think belongs in this class that I don’t have (and would like credits for), simply PM it to me, with the subject “SUG - ImageHandler”, so that I will know what it is about. If I feel something needs to be changes (or optimized) I will make changes accordingly, PM you back with my form, and make sure you approve as well.</p>
<pre><code class="lang-auto">/*
 * @Author CoonHunter aka Soharuda
 * @Copyright 2011
 * @Date 3/10/2011    (mm/dd/yyyy);
 */

import java.awt.*;
import javax.swing.*;

class ImageHandler {
	
	public Image loadImageFromPath(String path) {
	    try {
	       ImageIcon image = new ImageIcon(path);
	       return image.getImage();
	    } catch (Exception e) {
	    	e.printStackTrace();
			System.out.println("Image " + path + "was not found!");
	    	return null;
	    }
	}
	
	public Image loadImageFromJar(String path) {
		try {
			ImageIcon image = (new ImageIcon(getClass().getResource(path)));
			return image.getImage();
		} catch (Exception e) {
			e.printStackTrace();
			System.out.println("Image " + path + "was not found!");
			return null;
		}
	}
}</code></pre>
<p>For loading from a jar, the getClass() is needed, so do NOT remove that, or you will get some errors. Example usage would be like:</p>
<pre><code class="lang-auto">loadImageFromJar("pic.png");</code></pre>
<p>This would get the “pic.png” image from where the Class of located. It is suggested to use this in an un-packaged example, so you can better sort out your project. Please, do <span class="bbcode-b">NOT</span> remove the tags I have set.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/imagehandler/386074/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/imagehandler/386074/1</link>
        <pubDate>Sun, 13 Mar 2011 04:36:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-386074-1</guid>
        <source url="https://forum.moparisthebest.com/t/imagehandler/386074.rss">ImageHandler</source>
      </item>
  </channel>
</rss>
