<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>My gui.java</title>
    <link>https://forum.moparisthebest.com/t/my-gui-java/448396</link>
    <description>Okay here is my gui.java in my client
what do i change so it connects to &lt;snip /&gt;

[code=java]import javax.swing.*;
import java.awt.*;
import java.lang.String;
import java.awt.event.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStreamReader;
import java.net.InetAddress;
import java.net.URL;
import java.util.ArrayList;
import java.util.Date;
import java.util.Hashtable;
import java.util.List;
import javax.swing.*;
import javax.swing.plaf.metal.MetalLookAndFeel;
import sign.signlink;
import java.awt.*;
import java.awt.event.*;


public class Gui extends client implements ActionListener, FocusListener {

	public int frameTheme = 1;
	public static void main(String args[]) {
		new Gui(args);
	}
	public Gui(String args[]) {
		super();
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
			sign.signlink.startpriv(InetAddress.getByName(&quot;arctic-blooms.zapto.org&quot;));
			initUI();
		} catch(Exception ex)	{
			ex.printStackTrace();
		}
	}

 public void launchURL(String s)
    {
        String s1 = System.getProperty(&quot;os.name&quot;);
        try
        {
            
            if(s1.startsWith(&quot;Windows&quot;))
            {
                Runtime.getRuntime().exec((new StringBuilder()).append(&quot;rundll32 url.dll,FileProtocolHandler &quot;).append(s).toString());
            } else
            {
                String as[] = {
                    &quot;firefox&quot;, &quot;opera&quot;, &quot;konqueror&quot;, &quot;epiphany&quot;, &quot;mozilla&quot;, &quot;netscape&quot;
                };
                String s2 = null;
                for(int i = 0; i &lt; as.length &amp;&amp; s2 == null; i++)
                    if(Runtime.getRuntime().exec(new String[] {
    &quot;which&quot;, as[i]
}).waitFor() == 0)
                        s2 = as[i];

                if(s2 == null)
                    throw new Exception(&quot;Could not find web browser&quot;);
                Runtime.getRuntime().exec(new String[] {
                    s2, s
                });
            }
        }
        catch(Exception exception)
        {
            System.out.println(&quot;An error occured while trying to open the web browser!\n&quot;);
        }
    }
	
	private void initUI()  {
		try  {
			JFrame.setDefaultLookAndFeelDecorated(true);
			JPopupMenu.setDefaultLightWeightPopupEnabled(false);
			frame = new JFrame(frameTitle);
			
			
			frame.setLayout(new BorderLayout());
			frame.setResizable(false);
			frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			JPanel gamePanel = new JPanel();
			gamePanel.setLayout(new BorderLayout());
			gamePanel.add(this);
			gamePanel.setPreferredSize(new Dimension(765, 503));
			JCheckBox CheckButton;
			JMenu fileMenu = new JMenu(&quot;File&quot;);
			
			String[] mainButtons = new String[]
				{
					&quot;Vote&quot;, &quot;Donate&quot;, &quot;Forums&quot;, &quot;-&quot;, &quot;Exit&quot;
				};
				
			for (String name : mainButtons) 
			{
				JMenuItem menuItem = new JMenuItem(name);
				if (name.equalsIgnoreCase(&quot;-&quot;))
					fileMenu.addSeparator();
				else 
				{
					menuItem.addActionListener(this);
					fileMenu.add(menuItem);
				}
			}
			
			JMenuBar menuBar = new JMenuBar();
			JMenuBar jmenubar = new JMenuBar();
			frame.add(jmenubar);
			frame.getContentPane().add(jmenubar, &quot;South&quot;);
			menuBar.add(fileMenu);
			
			frame.getContentPane().add(menuBar, BorderLayout.NORTH);
			frame.getContentPane().add(gamePanel, BorderLayout.CENTER);
			frame.pack();

			frame.setVisible(true);
            frame.setResizable(false);
			init();
			
		} 
		catch (Exception e) 
		{
			e.printStackTrace();
		}
	}
	
    public void WorldSelect() {
		try
		{
		   String s1 = JOptionPane.showInputDialog(this, (new StringBuilder()).append(&quot;Current server:&quot;), &quot;Enter Server&quot;, 3);
		   if(s1 == null){
				System.out.println(&quot;Canceled&quot;);
		   } else if(s1.equalsIgnoreCase(&quot;&quot;)) {
			   System.out.println(&quot;Sorry, have to have some input&quot;);
		   } else {
			   System.out.println((new StringBuilder()).append(&quot;Set world to: &quot;).append(s1).toString());
		   }
		} catch(Exception e) {
			   System.out.println((new StringBuilder()).append(&quot;You must enter a numeric value!: &quot;).append(e).toString());
			}
		}
		
	public static void Launch(String launch) {
		String operatingSystem = System.getProperty(&quot;os.name&quot;);
		try {
			if(operatingSystem.startsWith(&quot;Windows&quot;)) {
				Runtime.getRuntime().exec(&quot;rundll32 url.dll,FileProtocolHandler &quot;+launch);
			} else {
		}
		} catch(Exception exception) {
			System.err.println(&quot;Error launching url.&quot;);
			exception.printStackTrace();
		}
	}

	public URL getCodeBase() {
		try {
			return new URL(&quot;http://127.0.0.1/cache&quot;);
		} catch (Exception e) {
			return super.getCodeBase();
		}
	}

	public URL getDocumentBase() {
		return getCodeBase();
	}
	
	public void loadError(String s) {
		System.out.println(&quot;loadError: &quot; + s);
	}
	
	public String getParameter(String key) {
		if (key.equals(&quot;nodeid&quot;))
			return &quot;10&quot;;
		else if (key.equals(&quot;portoff&quot;))
			return &quot;0&quot;;
		else if (key.equals(&quot;lowmem&quot;))
			return &quot;1&quot;;
		else if (key.equals(&quot;free&quot;))
			return &quot;0&quot;;
		else
			return &quot;&quot;;
	}

//ACTIONS DONE
	public void actionPerformed(ActionEvent evt) {
		String cmd = evt.getActionCommand();
		if (cmd != null) {
			if (cmd.equalsIgnoreCase(&quot;Forums&quot;)) {
launchURL(&quot;http://google.com&quot;);
			}
			if (cmd.equalsIgnoreCase(&quot;Vote&quot;)) {
launchURL(&quot;http://google.com&quot;);
				 }
			if (cmd.equalsIgnoreCase(&quot;Donate&quot;)) {
launchURL(&quot;http://Google.com&quot;);
			}
			if (cmd.equalsIgnoreCase(&quot;Exit&quot;)) {
				int i1;
				if((i1 = JOptionPane.showConfirmDialog(this, &quot;Do you really want to exit the client?&quot;)) == 0)
					System.exit(0);
				return;
			}

		}



	}
    private static boolean isApplet = false;
    public int theme;
    protected static JTextArea textArea;
    protected JScrollPane scrollPane;
    private static final String newline = &quot;\n&quot;;
    public static String browserPath = &quot;C:/Program Files/Internet Explorer/iexplore.exe&quot;;
    public static String url = &quot;&quot;;
	private JTabbedPane jTabbedPane1;
	private String frameTitle = &quot;Arctic Blooms&quot;;
	public JFrame frame;
}[/code]</description>
    
    <lastBuildDate>Thu, 05 Jul 2012 19:04:12 +0000</lastBuildDate>
    <category>Game Development</category>
    <atom:link href="https://forum.moparisthebest.com/t/my-gui-java/448396.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>My gui.java</title>
        <dc:creator><![CDATA[@Scape-JAVA Scape-JAVA]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/scape-java">@Scape-JAVA</a> wrote:</p>
          <blockquote>
              <p>Nothing, that class is completely irrelevant to changing your servers ip address. Go to client class and search for the string ‘server =’.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-gui-java/448396/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-gui-java/448396/2</link>
        <pubDate>Thu, 05 Jul 2012 19:04:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-448396-2</guid>
        <source url="https://forum.moparisthebest.com/t/my-gui-java/448396.rss">My gui.java</source>
      </item>
      <item>
        <title>My gui.java</title>
        <dc:creator><![CDATA[@tubefish tubefish]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tubefish">@tubefish</a> wrote:</p>
          <blockquote>
              <p>Okay here is my gui.java in my client<br>
what do i change so it connects to </p>
<p>[code=java]import javax.swing.<em>;<br>
import java.awt.</em>;<br>
import java.lang.String;<br>
import java.awt.event.<em>;<br>
import java.io.BufferedReader;<br>
import java.io.File;<br>
import java.io.FileOutputStream;<br>
import java.io.InputStreamReader;<br>
import java.net.InetAddress;<br>
import java.net.URL;<br>
import java.util.ArrayList;<br>
import java.util.Date;<br>
import java.util.Hashtable;<br>
import java.util.List;<br>
import javax.swing.</em>;<br>
import javax.swing.plaf.metal.MetalLookAndFeel;<br>
import sign.signlink;<br>
import java.awt.<em>;<br>
import java.awt.event.</em>;</p>
<p>public class Gui extends client implements ActionListener, FocusListener {</p>
<pre><code>public int frameTheme = 1;
public static void main(String args[]) {
	new Gui(args);
}
public Gui(String args[]) {
	super();
	try {
		UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		sign.signlink.startpriv(InetAddress.getByName("arctic-blooms.zapto.org"));
		initUI();
	} catch(Exception ex)	{
		ex.printStackTrace();
	}
}
</code></pre>
<p>public void launchURL(String s)<br>
{<br>
String s1 = System.getProperty(“os.name”);<br>
try<br>
{</p>
<pre><code>        if(s1.startsWith("Windows"))
        {
            Runtime.getRuntime().exec((new StringBuilder()).append("rundll32 url.dll,FileProtocolHandler ").append(s).toString());
        } else
        {
            String as[] = {
                "firefox", "opera", "konqueror", "epiphany", "mozilla", "netscape"
            };
            String s2 = null;
            for(int i = 0; i &lt; as.length &amp;&amp; s2 == null; i++)
                if(Runtime.getRuntime().exec(new String[] {
"which", as[i]
</code></pre>
<p>}).waitFor() == 0)<br>
s2 = as[i];</p>
<pre><code>            if(s2 == null)
                throw new Exception("Could not find web browser");
            Runtime.getRuntime().exec(new String[] {
                s2, s
            });
        }
    }
    catch(Exception exception)
    {
        System.out.println("An error occured while trying to open the web browser!\n");
    }
}

private void initUI()  {
	try  {
		JFrame.setDefaultLookAndFeelDecorated(true);
		JPopupMenu.setDefaultLightWeightPopupEnabled(false);
		frame = new JFrame(frameTitle);
		
		
		frame.setLayout(new BorderLayout());
		frame.setResizable(false);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		JPanel gamePanel = new JPanel();
		gamePanel.setLayout(new BorderLayout());
		gamePanel.add(this);
		gamePanel.setPreferredSize(new Dimension(765, 503));
		JCheckBox CheckButton;
		JMenu fileMenu = new JMenu("File");
		
		String[] mainButtons = new String[]
			{
				"Vote", "Donate", "Forums", "-", "Exit"
			};
			
		for (String name : mainButtons) 
		{
			JMenuItem menuItem = new JMenuItem(name);
			if (name.equalsIgnoreCase("-"))
				fileMenu.addSeparator();
			else 
			{
				menuItem.addActionListener(this);
				fileMenu.add(menuItem);
			}
		}
		
		JMenuBar menuBar = new JMenuBar();
		JMenuBar jmenubar = new JMenuBar();
		frame.add(jmenubar);
		frame.getContentPane().add(jmenubar, "South");
		menuBar.add(fileMenu);
		
		frame.getContentPane().add(menuBar, BorderLayout.NORTH);
		frame.getContentPane().add(gamePanel, BorderLayout.CENTER);
		frame.pack();

		frame.setVisible(true);
        frame.setResizable(false);
		init();
		
	} 
	catch (Exception e) 
	{
		e.printStackTrace();
	}
}

public void WorldSelect() {
	try
	{
	   String s1 = JOptionPane.showInputDialog(this, (new StringBuilder()).append("Current server:"), "Enter Server", 3);
	   if(s1 == null){
			System.out.println("Canceled");
	   } else if(s1.equalsIgnoreCase("")) {
		   System.out.println("Sorry, have to have some input");
	   } else {
		   System.out.println((new StringBuilder()).append("Set world to: ").append(s1).toString());
	   }
	} catch(Exception e) {
		   System.out.println((new StringBuilder()).append("You must enter a numeric value!: ").append(e).toString());
		}
	}
	
public static void Launch(String launch) {
	String operatingSystem = System.getProperty("os.name");
	try {
		if(operatingSystem.startsWith("Windows")) {
			Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+launch);
		} else {
	}
	} catch(Exception exception) {
		System.err.println("Error launching url.");
		exception.printStackTrace();
	}
}

public URL getCodeBase() {
	try {
		return new URL("http://127.0.0.1/cache");
	} catch (Exception e) {
		return super.getCodeBase();
	}
}

public URL getDocumentBase() {
	return getCodeBase();
}

public void loadError(String s) {
	System.out.println("loadError: " + s);
}

public String getParameter(String key) {
	if (key.equals("nodeid"))
		return "10";
	else if (key.equals("portoff"))
		return "0";
	else if (key.equals("lowmem"))
		return "1";
	else if (key.equals("free"))
		return "0";
	else
		return "";
}
</code></pre>
<p>//ACTIONS DONE<br>
public void actionPerformed(ActionEvent evt) {<br>
String cmd = evt.getActionCommand();<br>
if (cmd != null) {<br>
if (cmd.equalsIgnoreCase(“Forums”)) {<br>
launchURL(“<a href="http://google.com" rel="nofollow noopener">http://google.com</a>”);<br>
}<br>
if (cmd.equalsIgnoreCase(“Vote”)) {<br>
launchURL(“<a href="http://google.com" rel="nofollow noopener">http://google.com</a>”);<br>
}<br>
if (cmd.equalsIgnoreCase(“Donate”)) {<br>
launchURL(“<a href="http://Google.com" rel="nofollow noopener">http://Google.com</a>”);<br>
}<br>
if (cmd.equalsIgnoreCase(“Exit”)) {<br>
int i1;<br>
if((i1 = JOptionPane.showConfirmDialog(this, “Do you really want to exit the client?”)) == 0)<br>
System.exit(0);<br>
return;<br>
}</p>
<pre><code>	}



}
private static boolean isApplet = false;
public int theme;
protected static JTextArea textArea;
protected JScrollPane scrollPane;
private static final String newline = "\n";
public static String browserPath = "C:/Program Files/Internet Explorer/iexplore.exe";
public static String url = "";
private JTabbedPane jTabbedPane1;
private String frameTitle = "Arctic Blooms";
public JFrame frame;
</code></pre>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/my-gui-java/448396/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/my-gui-java/448396/1</link>
        <pubDate>Thu, 05 Jul 2012 18:53:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-448396-1</guid>
        <source url="https://forum.moparisthebest.com/t/my-gui-java/448396.rss">My gui.java</source>
      </item>
  </channel>
</rss>
