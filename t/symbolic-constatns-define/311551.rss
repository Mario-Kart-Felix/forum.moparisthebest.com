<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Symbolic constatns (#define)</title>
    <link>https://forum.moparisthebest.com/t/symbolic-constatns-define/311551</link>
    <description>I also post this on Google with the name javedman0208,


A symbolic constant is a symbol, often similar to a variable name, which represents one and only one value. You can think of them as variables that never change (not while the program is running anyway). Often times in a program you might want to use a single value for something over and over. Well, that&#39;s what symbolic constants are for. Before I go on, let&#39;s see how to make a symbolic constant. [code]
#include &lt;stdio.h&gt;

#define PI 3.14

int main()
.
.
[/code]
 First you type #define then a symbol, then the value it represents. Although it is not required, C programmers usually make the symbol all uppercase. Never end #define statements with a semicolon.  Symbolic constants should always be defined [U]above[/U] the main function. That&#39;s why I included that other stuff, so you could see where they go. I usually try to put them right after the #include things. Basically, this tells the compiler to use the value 3.14 every time it sees the symbol PI. Now, you can use PI all through your program instead of 3.14. Why bother? Well, let&#39;s say you wrote a big math program, and you use PI a dozen times. Then you decided that you needed more precision; instead of 3.14 you want 3.14159. If you used #define to make a constant, then all you have to do is change the value once. If you actually typed in 3.14 all the time, you will need to change it a dozen times. 
  In our guessing game in the section on  functions we probably should have used a constant for our range.  Although we only needed it once anyway, #defines are usually easier to find than hunting through a program. As a rule of thumb, if a value is not going to change throughout your program, it should be a symbolic constant.
   Here is the guessing game program revised with a constant.  
 [code]
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;time.h&gt;

#define RANGE 10

//function prototypes//
void seedrnd();
int  rnd( int );

int main()
{
	int guess, num;

	/* function call to rnd which will return a random number between 1 and 10*/

	num = rnd( RANGE );

	printf(&quot;I have chosen a number between 1 and 10!\n&quot;);
	printf(&quot;Enter guess: &quot;);

	scanf(&quot;%d&quot;, &amp;guess);

	if( guess == num )
		printf(&quot;You guessed it! Bully for you!\n&quot;);
	else
		printf(&quot;I&#39;m sorry, the answer is %d\n&quot;, num);

	printf(&quot;Please play again\n&quot;);

	return 0;
}

// function definitions //

void seedrnd()
{
	// Used to set up the random number generator //
	srand( time(NULL) );
}

int  rnd( int range)
{
	int num;

	/* call to seedrnd */
	seedrnd();

	/* The % thing divides the numbers, but gives us the remainder
	   of the division, instead of the answer */

	num = rand() % range;	//rand() gets a random number
	num++;			//Add one to get rind of zeros

	return num;
}
[/code]
  Fairly simple.  When rnd is called, the value ten will be passed to it.  If we change the #define line to this:  
#define RANGE 100
Then when rnd is called the value 100 will be passed. Actually, we don&#39;t need to pass any parameters at all in this program. Symbolic constants are usable by all functions, not just main. So, in the rnd function we could have used the constant RANGE after the modulus operator.  Constants are not limited to numeric values.  If you want a constant string you can do that too.  It would look like this:  

#define ADVICE &quot;Stop, drop, and roll&quot;
 You might use it like this: puts(ADVICE); or any other place you would use a string.  
[B]TECHNICAL NOTES[/B]

 [COLOR=RED]*[/COLOR]Remember, anything with a # in front of it is called a preprocessor directive.
[COLOR=RED]*[/COLOR]Before a program is actually compiled, this thing called a preprocessor finds all the symbols you defined and replaces the text in your file with the values they represent.

[b]javedman0208[/b]</description>
    
    <lastBuildDate>Tue, 17 Nov 2009 22:59:00 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/symbolic-constatns-define/311551.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Symbolic constatns (#define)</title>
        <dc:creator><![CDATA[@ownagesbot ownagesbot]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ownagesbot">@ownagesbot</a> wrote:</p>
          <blockquote>
              <p>i like how he posts this and then asks how to use ‘cin’</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/symbolic-constatns-define/311551/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/symbolic-constatns-define/311551/14</link>
        <pubDate>Tue, 17 Nov 2009 22:59:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-311551-14</guid>
        <source url="https://forum.moparisthebest.com/t/symbolic-constatns-define/311551.rss">Symbolic constatns (#define)</source>
      </item>
      <item>
        <title>Symbolic constatns (#define)</title>
        <dc:creator><![CDATA[@pplsuqbawlz pplsuqbawlz]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pplsuqbawlz">@pplsuqbawlz</a> wrote:</p>
          <blockquote>
              <p>The question is: What the heck is a “constatns”?</p>
<p>And more importantly: How do I get one?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/symbolic-constatns-define/311551/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/symbolic-constatns-define/311551/13</link>
        <pubDate>Tue, 10 Nov 2009 11:45:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-311551-13</guid>
        <source url="https://forum.moparisthebest.com/t/symbolic-constatns-define/311551.rss">Symbolic constatns (#define)</source>
      </item>
      <item>
        <title>Symbolic constatns (#define)</title>
        <dc:creator><![CDATA[@Speljohan Speljohan]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/speljohan">@Speljohan</a> wrote:</p>
          <blockquote>
              <p>[quote=“Lothy, post:11, topic:311551”]Nice, another stolen ‘tutorial’ (originally posted here in 2008: <a href="http://m.ubdisk.org/viewtopic.php?f=158&amp;t=4339&amp;start=0" rel="nofollow noopener">http://m.ubdisk.org/viewtopic.php?f=158&amp;t=4339&amp;start=0</a>).</p>
<p>I also saw this post by you:</p>
<aside class="quote no-group">
<blockquote>
<p>Very nice Super_<br>
Writing the JNI can be a big headache, although smaller than writing everything in Java again. There are some code generators available which can generate the JNI layer for you. The most popular code generator is SWIG(Simplified Wrapper Interface Generator). SWIG is a software development tool that connects programs written in C and C++ with a variety of high-level programming languages. SWIG is used with different types of languages including common scripting languages such as Perl, PHP, Python, Tcl and Ruby. SWIG is driven via scripts which are read by SWIG and then converted into particular language interface.</p>
<p>Through JNI one can call C and C++ code from Java. JNI is the glue layer between (C,C++) and Java. JNI is not easy thing to do as it is hard to map (C, C++) and Java code. All Java data types does not have one to one mapping with their (C,C++)counterparts. Object orientation is bit different as well as Java does not support multi-inheritance. With Java you have GC(Garbage Collector), which does not exists on (C,C++), may be smarts pointers are there to achieve GC. Exceptions exists on both programming languages but they are handled differently. In C++, exceptions are not part of the language, where as exceptions are central to Java.<br>
Basically to use C and C++ from Java you have write the shim JNI layer.</p>
</blockquote>
</aside>
<p>Upon taking a look around on the interwebs (it wasn’t hard), I found that it was stolen too. The original can be found here: <a href="http://www.pakgamers.com/forums/software-game-development-programming/35460-jni-java-native-interface.html" rel="nofollow noopener">http://www.pakgamers.com/forums/software-game-development-programming/35460-jni-java-native-interface.html</a></p>
<p>Needless to say, we don’t want your kind here. I’m just going to go ahead and ban you.[/quote]rep++ for good work</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/symbolic-constatns-define/311551/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/symbolic-constatns-define/311551/12</link>
        <pubDate>Mon, 09 Nov 2009 10:31:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-311551-12</guid>
        <source url="https://forum.moparisthebest.com/t/symbolic-constatns-define/311551.rss">Symbolic constatns (#define)</source>
      </item>
      <item>
        <title>Symbolic constatns (#define)</title>
        <dc:creator><![CDATA[@lothy Lothy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lothy">@lothy</a> wrote:</p>
          <blockquote>
              <p>Nice, another stolen ‘tutorial’ (originally posted here in 2008: <a href="http://m.ubdisk.org/viewtopic.php?f=158&amp;t=4339&amp;start=0" rel="nofollow noopener">http://m.ubdisk.org/viewtopic.php?f=158&amp;t=4339&amp;start=0</a>).</p>
<p>I also saw this post by you:</p>
<p>[quote=“javedman0208, post:29, topic:300914”]Very nice Super_<br>
Writing the JNI can be a big headache, although smaller than writing everything in Java again. There are some code generators available which can generate the JNI layer for you. The most popular code generator is SWIG(Simplified Wrapper Interface Generator). SWIG is a software development tool that connects programs written in C and C++ with a variety of high-level programming languages. SWIG is used with different types of languages including common scripting languages such as Perl, PHP, Python, Tcl and Ruby. SWIG is driven via scripts which are read by SWIG and then converted into particular language interface.</p>
<p>Through JNI one can call C and C++ code from Java. JNI is the glue layer between (C,C++) and Java. JNI is not easy thing to do as it is hard to map (C, C++) and Java code. All Java data types does not have one to one mapping with their (C,C++)counterparts. Object orientation is bit different as well as Java does not support multi-inheritance. With Java you have GC(Garbage Collector), which does not exists on (C,C++), may be smarts pointers are there to achieve GC. Exceptions exists on both programming languages but they are handled differently. In C++, exceptions are not part of the language, where as exceptions are central to Java.<br>
Basically to use C and C++ from Java you have write the shim JNI layer.[/quote]</p>
<p>Upon taking a look around on the interwebs (it wasn’t hard), I found that it was stolen too. The original can be found here: <a href="http://www.pakgamers.com/forums/software-game-development-programming/35460-jni-java-native-interface.html" rel="nofollow noopener">http://www.pakgamers.com/forums/software-game-development-programming/35460-jni-java-native-interface.html</a></p>
<p>Needless to say, we don’t want your kind here. I’m just going to go ahead and ban you.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/symbolic-constatns-define/311551/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/symbolic-constatns-define/311551/11</link>
        <pubDate>Sun, 08 Nov 2009 05:16:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-311551-11</guid>
        <source url="https://forum.moparisthebest.com/t/symbolic-constatns-define/311551.rss">Symbolic constatns (#define)</source>
      </item>
      <item>
        <title>Symbolic constatns (#define)</title>
        <dc:creator><![CDATA[@lawl lawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lawl">@lawl</a> wrote:</p>
          <blockquote>
              <p>for constant integer values, always use a const int !</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/symbolic-constatns-define/311551/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/symbolic-constatns-define/311551/10</link>
        <pubDate>Sat, 31 Oct 2009 18:40:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-311551-10</guid>
        <source url="https://forum.moparisthebest.com/t/symbolic-constatns-define/311551.rss">Symbolic constatns (#define)</source>
      </item>
      <item>
        <title>Symbolic constatns (#define)</title>
        <dc:creator><![CDATA[@Mopman Mopman]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mopman">@Mopman</a> wrote:</p>
          <blockquote>
              <p>and this is when</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/symbolic-constatns-define/311551/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/symbolic-constatns-define/311551/9</link>
        <pubDate>Sat, 31 Oct 2009 16:06:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-311551-9</guid>
        <source url="https://forum.moparisthebest.com/t/symbolic-constatns-define/311551.rss">Symbolic constatns (#define)</source>
      </item>
      <item>
        <title>Symbolic constatns (#define)</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>[quote=“Mopman, post:6, topic:311551”]i seem to remember a thread about this before, and i said use const and all the c-fags jumped on me all like NAH THE PREPROCESSOR IS AWESOME FUCK TYPE SAFETY[/quote]the proprocessor is awesome but for some things you should use const, the idea is to learn when</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/symbolic-constatns-define/311551/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/symbolic-constatns-define/311551/8</link>
        <pubDate>Sat, 31 Oct 2009 15:01:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-311551-8</guid>
        <source url="https://forum.moparisthebest.com/t/symbolic-constatns-define/311551.rss">Symbolic constatns (#define)</source>
      </item>
      <item>
        <title>Symbolic constatns (#define)</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>itt avg iq &lt; 0</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/symbolic-constatns-define/311551/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/symbolic-constatns-define/311551/7</link>
        <pubDate>Sat, 31 Oct 2009 14:57:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-311551-7</guid>
        <source url="https://forum.moparisthebest.com/t/symbolic-constatns-define/311551.rss">Symbolic constatns (#define)</source>
      </item>
      <item>
        <title>Symbolic constatns (#define)</title>
        <dc:creator><![CDATA[@Mopman Mopman]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mopman">@Mopman</a> wrote:</p>
          <blockquote>
              <p>i seem to remember a thread about this before, and i said use const and all the c-fags jumped on me all like NAH THE PREPROCESSOR IS AWESOME FUCK TYPE SAFETY</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/symbolic-constatns-define/311551/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/symbolic-constatns-define/311551/6</link>
        <pubDate>Sat, 31 Oct 2009 04:22:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-311551-6</guid>
        <source url="https://forum.moparisthebest.com/t/symbolic-constatns-define/311551.rss">Symbolic constatns (#define)</source>
      </item>
      <item>
        <title>Symbolic constatns (#define)</title>
        <dc:creator><![CDATA[@Zeldas Zeldas*]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zeldas">@Zeldas</a> wrote:</p>
          <blockquote>
              <p>Yea use ‘const’ &lt;3</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/symbolic-constatns-define/311551/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/symbolic-constatns-define/311551/5</link>
        <pubDate>Sat, 31 Oct 2009 00:16:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-311551-5</guid>
        <source url="https://forum.moparisthebest.com/t/symbolic-constatns-define/311551.rss">Symbolic constatns (#define)</source>
      </item>
      <item>
        <title>Symbolic constatns (#define)</title>
        <dc:creator><![CDATA[@system system]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/system">@system</a> wrote:</p>
          <blockquote>
              <p><img src="http://icanhascheezburger.files.wordpress.com/2007/10/lolcat-funny-picture-moderator1.jpg" alt width="" height=""></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/symbolic-constatns-define/311551/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/symbolic-constatns-define/311551/4</link>
        <pubDate>Fri, 30 Oct 2009 21:18:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-311551-4</guid>
        <source url="https://forum.moparisthebest.com/t/symbolic-constatns-define/311551.rss">Symbolic constatns (#define)</source>
      </item>
      <item>
        <title>Symbolic constatns (#define)</title>
        <dc:creator><![CDATA[@Unhandled Unhandled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unhandled">@Unhandled</a> wrote:</p>
          <blockquote>
              <p>Do you have a question? Or are you just posting useless shit we could easily find by googling, albeit better written.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/symbolic-constatns-define/311551/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/symbolic-constatns-define/311551/3</link>
        <pubDate>Fri, 30 Oct 2009 19:52:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-311551-3</guid>
        <source url="https://forum.moparisthebest.com/t/symbolic-constatns-define/311551.rss">Symbolic constatns (#define)</source>
      </item>
      <item>
        <title>Symbolic constatns (#define)</title>
        <dc:creator><![CDATA[@lawl lawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lawl">@lawl</a> wrote:</p>
          <blockquote>
              <p>this is called a precompiler definition, and it should be used to a minimum, only where required. in your case, it is much better to use a const int</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/symbolic-constatns-define/311551/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/symbolic-constatns-define/311551/2</link>
        <pubDate>Fri, 30 Oct 2009 19:46:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-311551-2</guid>
        <source url="https://forum.moparisthebest.com/t/symbolic-constatns-define/311551.rss">Symbolic constatns (#define)</source>
      </item>
      <item>
        <title>Symbolic constatns (#define)</title>
        <dc:creator><![CDATA[@javedman0208 javedman0208]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/javedman0208">@javedman0208</a> wrote:</p>
          <blockquote>
              <p>I also post this on Google with the name javedman0208,</p>
<p>A symbolic constant is a symbol, often similar to a variable name, which represents one and only one value. You can think of them as variables that never change (not while the program is running anyway). Often times in a program you might want to use a single value for something over and over. Well, that’s what symbolic constants are for. Before I go on, let’s see how to make a symbolic constant. [code]<br>
<span class="hashtag">#include</span> &lt;stdio.h&gt;</p>
<p><span class="hashtag">#define</span> PI 3.14</p>
<p>int main()<br>
.<br>
.<br>
[/code]<br>
First you type <span class="hashtag">#define</span> then a symbol, then the value it represents. Although it is not required, C programmers usually make the symbol all uppercase. Never end <span class="hashtag">#define</span> statements with a semicolon.  Symbolic constants should always be defined <span class="bbcode-u">above</span> the main function. That’s why I included that other stuff, so you could see where they go. I usually try to put them right after the <span class="hashtag">#include</span> things. Basically, this tells the compiler to use the value 3.14 every time it sees the symbol PI. Now, you can use PI all through your program instead of 3.14. Why bother? Well, let’s say you wrote a big math program, and you use PI a dozen times. Then you decided that you needed more precision; instead of 3.14 you want 3.14159. If you used <span class="hashtag">#define</span> to make a constant, then all you have to do is change the value once. If you actually typed in 3.14 all the time, you will need to change it a dozen times.<br>
In our guessing game in the section on  functions we probably should have used a constant for our range.  Although we only needed it once anyway, <span class="hashtag">#defines</span> are usually easier to find than hunting through a program. As a rule of thumb, if a value is not going to change throughout your program, it should be a symbolic constant.<br>
Here is the guessing game program revised with a constant.</p>
<pre><code class="lang-auto">#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;time.h&gt;

#define RANGE 10

//function prototypes//
void seedrnd();
int  rnd( int );

int main()
{
	int guess, num;

	/* function call to rnd which will return a random number between 1 and 10*/

	num = rnd( RANGE );

	printf("I have chosen a number between 1 and 10!\n");
	printf("Enter guess: ");

	scanf("%d", &amp;guess);

	if( guess == num )
		printf("You guessed it! Bully for you!\n");
	else
		printf("I'm sorry, the answer is %d\n", num);

	printf("Please play again\n");

	return 0;
}

// function definitions //

void seedrnd()
{
	// Used to set up the random number generator //
	srand( time(NULL) );
}

int  rnd( int range)
{
	int num;

	/* call to seedrnd */
	seedrnd();

	/* The % thing divides the numbers, but gives us the remainder
	   of the division, instead of the answer */

	num = rand() % range;	//rand() gets a random number
	num++;			//Add one to get rind of zeros

	return num;
}</code></pre>
<p>Fairly simple.  When rnd is called, the value ten will be passed to it.  If we change the <span class="hashtag">#define</span> line to this:<br>
<span class="hashtag">#define</span> RANGE 100<br>
Then when rnd is called the value 100 will be passed. Actually, we don’t need to pass any parameters at all in this program. Symbolic constants are usable by all functions, not just main. So, in the rnd function we could have used the constant RANGE after the modulus operator.  Constants are not limited to numeric values.  If you want a constant string you can do that too.  It would look like this:</p>
<p><span class="hashtag">#define</span> ADVICE “Stop, drop, and roll”<br>
You might use it like this: puts(ADVICE); or any other place you would use a string.<br>
<span class="bbcode-b">TECHNICAL NOTES</span></p>
<p>[COLOR=RED]<em>[/COLOR]Remember, anything with a # in front of it is called a preprocessor directive.<br>
[COLOR=RED]</em>[/COLOR]Before a program is actually compiled, this thing called a preprocessor finds all the symbols you defined and replaces the text in your file with the values they represent.</p>
<p><span class="bbcode-b">javedman0208</span></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/symbolic-constatns-define/311551/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/symbolic-constatns-define/311551/1</link>
        <pubDate>Fri, 30 Oct 2009 15:22:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-311551-1</guid>
        <source url="https://forum.moparisthebest.com/t/symbolic-constatns-define/311551.rss">Symbolic constatns (#define)</source>
      </item>
  </channel>
</rss>
