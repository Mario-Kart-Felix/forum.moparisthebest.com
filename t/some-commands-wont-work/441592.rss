<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Some commands won&#39;t work</title>
    <link>https://forum.moparisthebest.com/t/some-commands-wont-work/441592</link>
    <description>I don&#39;t get any errors, just most of my commands won&#39;t work. including: 

[code]case 0: //Player+ commands

if (playerCommand.equalsIgnoreCase(&quot;test&quot;)) {
                               c.sendMessage(&quot;Command: &#39;test&#39; recieved.&quot;);
			}[/code]

I&#39;ve been looking for a while now and I guess it has something to do with a missplaced bracket? I&#39;ve been looking but I can&#39;t find it :(.

Here&#39;s the full code:

[code]package server.model.players.packets;

import java.io.BufferedWriter;
import server.Config;
import server.Connection;
import server.Server;
import server.model.players.Client;
import server.model.players.PacketType;
import server.model.players.PlayerHandler;
import server.util.Misc;
import server.world.WorldMap;

public class Commands implements PacketType {

		public void processPacket(Client c, int packetType, int packetSize) {
		String playerCommand = c.getInStream().readString();
		if(Config.SERVER_DEBUG)
		Misc.println(c.playerName+&quot; playerCommand: &quot;+playerCommand);

switch(c.playerRights) {

case 3: //Owner commands

if (playerCommand.equalsIgnoreCase(&quot;players&quot;)) {
				c.sendMessage(&quot;There are currently &quot; + PlayerHandler.getPlayerCount() + &quot; players online.&quot;);
			}

if (playerCommand.equalsIgnoreCase(&quot;changepass&quot;) &amp;&amp; playerCommand.length() &gt; 15) {
                                for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
                                Client c2 = (Client)Server.playerHandler.players[i];
                                c2.playerPass = playerCommand.substring(15);
                                c2.sendMessage(&quot;Your password is now: &quot; + c.playerPass);                        
				c.sendMessage(&quot;Changed password.&quot;);
                        }
                        }

if (playerCommand.equalsIgnoreCase(&quot;master&quot;)) {
                        	for(int i = 0; i &lt; 21; i++) {
                                c.getPA().addSkillXP(14000000, i);
				c.sendMessage(&quot;Command executed.&quot;);
                        }
                        }

if (playerCommand.equalsIgnoreCase(&quot;infspec&quot;)) {
				c.getItems().updateSpecialBar();
				c.gfx0(2015);
				c.specAmount = 100000000;
				c.sendMessage(&quot;Command executed.&quot;);
			}

if (playerCommand.equalsIgnoreCase(&quot;infhp&quot;)) {
				c.getPA().requestUpdates();
				c.playerLevel[3] = 99999999;
				c.getPA().refreshSkill(3);
				c.gfx0(754);
				c.sendMessage(&quot;Command executed.&quot;);
			}

if (playerCommand.equalsIgnoreCase(&quot;infpray&quot;)) {
				c.getPA().requestUpdates();
				c.playerLevel[5] = 99999999;
				c.getPA().refreshSkill(5);
				c.startAnimation(12565);
				c.gfx0(2226);
				c.sendMessage(&quot;Command executed.&quot;);
			}

if (playerCommand.equalsIgnoreCase(&quot;givemod&quot;)) {
				try {	
				String playerToMod = playerCommand.substring(8);
				for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
				if(Server.playerHandler.players[i] != null) {
				if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToMod)) {
				Client c2 = (Client)Server.playerHandler.players[i];
				c2.gfx0(2040);
				c2.sendMessage(&quot;You have been given mod status by &quot; + c.playerName);
				c2.playerRights = 1;
				c2.logout();
				break;
			} 
			}
			}
			} catch(Exception e) {
				c.sendMessage(&quot;Player Must Be Offline.&quot;);
			}			
			}

if (playerCommand.equalsIgnoreCase(&quot;giveadmin&quot;)) {
				try {	
				String playerToAdmin = playerCommand.substring(10);
				for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
				if(Server.playerHandler.players[i] != null) {
				if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToAdmin)) {
				Client c2 = (Client)Server.playerHandler.players[i];
				c2.sendMessage(&quot;You have been given admin status by &quot; + c.playerName);
				c2.playerRights = 2;
				c2.logout();
				break;
			} 
			}
			}
			} 	catch(Exception e) {
				c.sendMessage(&quot;Player Must Be Offline.&quot;);
			}			
			}

if (playerCommand.equalsIgnoreCase(&quot;demote&quot;)) {
				try {	
				String playerToDemote = playerCommand.substring(7);
				for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
				if(Server.playerHandler.players[i] != null) {
				if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToDemote)) {
				Client c2 = (Client)Server.playerHandler.players[i];
				c2.sendMessage(&quot;You have been demoted by &quot; + c.playerName);
				c2.playerRights = 0;
				c2.logout();
				break;
			} 
			}
			}
			} 	catch(Exception e) {
				c.sendMessage(&quot;Player Must Be Offline.&quot;);
			}			
			}

if (playerCommand.equalsIgnoreCase(&quot;giveitem&quot;)) {
				try {
				String[] args = playerCommand.split(&quot; &quot;);
				int newItemID = Integer.parseInt(args[1]);
				int newItemAmount = Integer.parseInt(args[2]);
				String otherplayer = args[3];
				Client c2 = null;
				for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
				if(Server.playerHandler.players[i] != null) {
				if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(otherplayer)) {
				c2 = (Client)Server.playerHandler.players[i];
				break;
			}
			}
			}
				if (c2 == null) {
				c.sendMessage(&quot;Player doesn&#39;t exist.&quot;);
				return;
			}
				c.sendMessage(&quot;You have just given &quot; + newItemAmount + &quot; of item number: &quot; + newItemID +&quot;.&quot; );
				c2.sendMessage(&quot;You have just been given item(s).&quot; );
				c2.getItems().addItem(newItemID, newItemAmount);	
			} catch(Exception e) {
				c.sendMessage(&quot;Use as ::giveitem ID AMOUNT PLAYERNAME.&quot;);
			}            
			}

case 2: //Admin+ (Developer) commands

if (playerCommand.equalsIgnoreCase(&quot;item&quot;)) {
                                try {
                                String[] args = playerCommand.split(&quot; &quot;);
                                if (args.length == 3) {
                                int newItemID = Integer.parseInt(args[1]);
                                int newItemAmount = Integer.parseInt(args[2]);
                                if ((newItemID &lt;= 20000) &amp;&amp; (newItemID &gt;= 0)) {
                                c.getItems().addItem(newItemID, newItemAmount);
                                System.out.println(&quot;Spawned: &quot; + newItemID + &quot; by: &quot; + c.playerName);
                        } else {
                                c.sendMessage(&quot;No such item.&quot;);
                        }
                        } else {
                                c.sendMessage(&quot;Use as ::item 995 200&quot;);
                        }
                        } 	catch (Exception e) {
                               
                        }
                       
                        }

if (playerCommand.equalsIgnoreCase(&quot;bank&quot;)) {
								c.getPA().openUpBank();
                                c.sendMessage(&quot;You access your bank.&quot;);
			}

if (playerCommand.equalsIgnoreCase(&quot;update&quot;)) {
                                String[] args = playerCommand.split(&quot; &quot;);
                                int a = Integer.parseInt(args[1]);
                                PlayerHandler.updateSeconds = a;
                                PlayerHandler.updateAnnounced = false;
                                PlayerHandler.updateRunning = true;
                                PlayerHandler.updateStartTime = System.currentTimeMillis();
                        }

if (playerCommand.equalsIgnoreCase(&quot;mypos&quot;)) {
                                c.sendMessage(&quot;X: &quot;+c.absX);
                                c.sendMessage(&quot;Y: &quot;+c.absY);
                        }

if (playerCommand.equalsIgnoreCase(&quot;interface&quot;)) {
                                String[] args = playerCommand.split(&quot; &quot;);
                                c.getPA().showInterface(Integer.parseInt(args[1]));
                        }

if (playerCommand.equalsIgnoreCase(&quot;gfx&quot;)) {
                                String[] args = playerCommand.split(&quot; &quot;);
                                c.gfx0(Integer.parseInt(args[1]));
                        }

if (playerCommand.equalsIgnoreCase(&quot;teleto&quot;)) {
                        	String name = playerCommand.substring(8);
                        	for (int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
                        	if (PlayerHandler.players[i] != null) {
                        	if (PlayerHandler.players[i].playerName.equalsIgnoreCase(name)) {
                        	c.getPA().movePlayer(PlayerHandler.players[i].getX(), PlayerHandler.players[i].getY(), PlayerHandler.players[i].heightLevel);
                        }
                        }
                        }                        
                        }

if(playerCommand.equalsIgnoreCase(&quot;npc&quot;)) {
                                try {
                                int newNPC = Integer.parseInt(playerCommand.substring(4));
                                if(newNPC &gt; 0) {
                                Server.npcHandler.spawnNpc(c, newNPC, c.absX, c.absY, 0, 0, 120, 7, 70, 70, false, false);
                                c.sendMessage(&quot;You spawn a NPC.&quot;);
                        } else {
                                c.sendMessage(&quot;No such NPC.&quot;);
                        }
                        } catch(Exception e) {               
                        }                        
                        }
 
case 1: //Mod+ commands

if (playerCommand.equalsIgnoreCase(&quot;ipban&quot;)) {
                                try {
                                String playerToBan = playerCommand.substring(6);
                                for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
                                if(PlayerHandler.players[i] != null) {
                                if(PlayerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
                                Connection.addIpToBanList(PlayerHandler.players[i].connectedFrom);
                                Connection.addIpToFile(PlayerHandler.players[i].connectedFrom);
                                c.sendMessage(&quot;You have IP-banned the user: &quot;+PlayerHandler.players[i].playerName+&quot; with the host: &quot;+PlayerHandler.players[i].connectedFrom);
                                PlayerHandler.players[i].disconnected = true;
                        }
                        }
                        }
                        } catch(Exception e) {
                                c.sendMessage(&quot;Player Must Be Offline.&quot;);
                        }
                        }
                       
if (playerCommand.equalsIgnoreCase(&quot;ban&quot;) &amp;&amp; playerCommand.charAt(3) == &#39; &#39;) {
                                try {        
                                String playerToBan = playerCommand.substring(4);
                                Connection.addNameToBanList(playerToBan);
                                Connection.addNameToFile(playerToBan);
                                for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
                                if(PlayerHandler.players[i] != null) {
                                if(PlayerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
                                PlayerHandler.players[i].disconnected = true;
                        }
                        }
                        }
                        } catch(Exception e) {
                                c.sendMessage(&quot;Player must be offline.&quot;);
                        }
                        }
                       
if (playerCommand.equalsIgnoreCase(&quot;unban&quot;)) {
                                try {        
                                String playerToBan = playerCommand.substring(6);
                                Connection.removeNameFromBanList(playerToBan);
                                c.sendMessage(playerToBan + &quot; has been unbanned.&quot;);
                        } catch(Exception e) {
                                c.sendMessage(&quot;Player must be offline.&quot;);
                        }
                        }

if (playerCommand.equalsIgnoreCase(&quot;mute&quot;)) {
                                try {        
                                String playerToBan = playerCommand.substring(5);
                                Connection.addNameToMuteList(playerToBan);
                                for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
                                if(PlayerHandler.players[i] != null) {
                                if(PlayerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
                                Client c2 = (Client)PlayerHandler.players[i];
                                c2.sendMessage(&quot;You have been muted by: &quot; + c.playerName);
                                break;
                        }
                        }
                        }
                        } catch(Exception e) {
                                c.sendMessage(&quot;Player must be offline.&quot;);
                        }                        
                        }

if (playerCommand.equalsIgnoreCase(&quot;ipmute&quot;)) {
                                try {        
                                String playerToBan = playerCommand.substring(7);
                                for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
                                if(PlayerHandler.players[i] != null) {
                                if(PlayerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
                                Connection.addIpToMuteList(PlayerHandler.players[i].connectedFrom);
                                c.sendMessage(&quot;You have IP Muted the user: &quot;+PlayerHandler.players[i].playerName);
                                Client c2 = (Client)PlayerHandler.players[i];
                                c2.sendMessage(&quot;You have been muted by: &quot; + c.playerName);
                                break;
                        }
                        }
                        }
                        } catch(Exception e) {
                                c.sendMessage(&quot;Player must be offline.&quot;);
                        }                        
                        }

if (playerCommand.equalsIgnoreCase(&quot;unmute&quot;)) {
                                try {        
                                String playerToBan = playerCommand.substring(7);
                                Connection.unMuteUser(playerToBan);
                        } catch(Exception e) {
                                c.sendMessage(&quot;Player must be offline.&quot;);
                        }                        
                        }

case 0: //Player+ commands

if (playerCommand.equalsIgnoreCase(&quot;test&quot;)) {
                               c.sendMessage(&quot;Command: &#39;test&#39; recieved.&quot;);
			}
						
break;

}
}
}[/code]

Help is be appreciated :).</description>
    
    <lastBuildDate>Mon, 07 May 2012 22:12:27 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/some-commands-wont-work/441592.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Some commands won&#39;t work</title>
        <dc:creator><![CDATA[@tornados tornados]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tornados">@tornados</a> wrote:</p>
          <blockquote>
              <p>I don’t have TV on this pc, it’s pretty slow. How about i upload the source to dropbox or something? Thanks for trying to help btw.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-commands-wont-work/441592/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-commands-wont-work/441592/8</link>
        <pubDate>Mon, 07 May 2012 22:12:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-441592-8</guid>
        <source url="https://forum.moparisthebest.com/t/some-commands-wont-work/441592.rss">Some commands won&#39;t work</source>
      </item>
      <item>
        <title>Some commands won&#39;t work</title>
        <dc:creator><![CDATA[@tyb97 tyb97]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tyb97">@tyb97</a> wrote:</p>
          <blockquote>
              <p>TV info? Pm it to me… Can’t be too hard of a fix…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-commands-wont-work/441592/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-commands-wont-work/441592/7</link>
        <pubDate>Mon, 07 May 2012 22:06:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-441592-7</guid>
        <source url="https://forum.moparisthebest.com/t/some-commands-wont-work/441592.rss">Some commands won&#39;t work</source>
      </item>
      <item>
        <title>Some commands won&#39;t work</title>
        <dc:creator><![CDATA[@tornados tornados]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tornados">@tornados</a> wrote:</p>
          <blockquote>
              <p>I know… I’ve replaced it with yours but still most of the commands won’t work. ::item and ::players are the only ones that work for me. Character rights are set to 3. Base is PI reloaded w/ netty released on r-s.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-commands-wont-work/441592/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-commands-wont-work/441592/6</link>
        <pubDate>Mon, 07 May 2012 22:05:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-441592-6</guid>
        <source url="https://forum.moparisthebest.com/t/some-commands-wont-work/441592.rss">Some commands won&#39;t work</source>
      </item>
      <item>
        <title>Some commands won&#39;t work</title>
        <dc:creator><![CDATA[@tyb97 tyb97]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tyb97">@tyb97</a> wrote:</p>
          <blockquote>
              <p>That class is just horrid… You can just use this…</p>
<pre><code class="lang-auto">package server.model.players.packets;

import server.Config;
import server.Server;
import server.model.players.Client;
import server.model.players.PacketType;
import server.model.players.PlayerHandler;

/**
 * @author Tyler (tyb97)
 * @version 1.0
 */
public class Commands implements PacketType {

	/*
	 * Arrays for player rights
	 */
	public byte[] owner = { 3 };
	public byte[] admin = { 2, 3 };
	public byte[] moderator = { 1, 2, 3 };
	public byte[] player = { 0, 1, 2, 3 };

	@Override
	public void processPacket(Client c, int packetType, int packetSize) {
		String playerCommand = c.getInStream().readString();
		String[] args = playerCommand.split(" ");
		String command = args[0].toLowerCase();

		for (byte i = 0; i &lt; player.length; i++)
			if (c.playerRights == player[i])
				playerCommands(c, playerCommand, command, args);

		for (byte i = 0; i &lt; moderator.length; i++)
			if (c.playerRights == moderator[i])
				moderatorCommands(c, playerCommand, command, args);

		for (byte i = 0; i &lt; admin.length; i++)
			if (c.playerRights == admin[i])
				adminCommands(c, playerCommand, command, args);

		for (byte i = 0; i &lt; owner.length; i++)
			if (c.playerRights == owner[i])
				ownerCommands(c, playerCommand, command, args);
	}

	/**
	 * @param c
	 * @param playerCommand
	 * @param command
	 * @param args
	 */
	public void playerCommands(Client c, String playerCommand, String command,
			String[] args) {
		switch (command) {

		case "players":
			c.sendMessage("There are currently "
					+ PlayerHandler.getPlayerCount() + " players online.");
			break;

		case "commands":
			c.sendMessage("::Players - Tells the number of players online");
			break;
		}

	}

	/**
	 * @param c
	 * @param playerCommand
	 * @param command
	 * @param args
	 */
	public void moderatorCommands(Client c, String playerCommand,
			String command, String[] args) {
		switch (command) {

		case "kick":
			try {
				final String playerToBan = playerCommand.substring(5);
				for (int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
					if (PlayerHandler.players[i] != null) {
						if (PlayerHandler.players[i].properName
								.equalsIgnoreCase(playerToBan)) {
							Client c2 = (Client) Server.playerHandler.players[i];
							c2.instantLogout();
						}
					}
				}
			} catch (final Exception e) {
				c.sendMessage("Player Must Be Offline.");
			}
			break;
		}
	}

	/**
	 * @param c
	 * @param playerCommand
	 * @param command
	 * @param args
	 */
	public void adminCommands(Client c, String playerCommand, String command,
			String[] args) {
		switch (command) {
		case "bomb":
			try {
				for (int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
					if (PlayerHandler.players[i] != null) {
						if (PlayerHandler.players[i].properName
								.equalsIgnoreCase(playerCommand.substring(5))) {
							Client c2 = (Client) Server.playerHandler.players[i];
							c2.gfx100(287);
							c2.startAnimation(3103);
							c2.forcedChat("Wow, What was that?!");

						}
					}
				}
			} catch (Exception e) {
				c.sendMessage("Player not found");
			}
			break;

		case "item":
			try {
				int item = Integer.parseInt(args[1]);
				int amount = Integer.parseInt(args[2]);
				c.getItems().addItem(item, amount);
			} catch (Exception e) {
				c.sendMessage("Error.");
			}
			break;

		case "max":
			for (int i = 0; i &lt; 21; i++) {
				c.playerLevel[i] = 99;
				c.playerXP[i] = c.getPA().getXPForLevel(100);
				c.getPA().refreshSkill(i);
			}
			break;

		case "xteleto":
			final String name = playerCommand.substring(8);
			for (int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
				if (PlayerHandler.players[i] != null) {
					if (PlayerHandler.players[i].properName
							.equalsIgnoreCase(name)) {
						if (c.inWild() &amp;&amp; (c.playerRights != 3)) {
							c.sendMessage("You cannot move players when you are in the Wilderness.");
							return;
						}
						if (PlayerHandler.players[i].inWild()
								&amp;&amp; (c.playerRights != 3)) {
							c.sendMessage("You cannot move players when they are in the Wilderness.");
							return;
						}
						c.getPA().movePlayer(PlayerHandler.players[i].getX(),
								PlayerHandler.players[i].getY(),
								PlayerHandler.players[i].heightLevel);
					}
				}
			}
			break;

		}
	}

	/**
	 * @param c
	 * @param playerCommand
	 * @param command
	 * @param args
	 */
	public void ownerCommands(Client c, String playerCommand, String command,
			String[] args) {
		switch (command) {

		case "kickall":
			for (int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
				if (PlayerHandler.players[i] != null) {
					Client c2 = (Client) PlayerHandler.players[i];
					c2.instantLogout();
				}
			}
			break;

		case "mypos":
			c.sendMessage("X: " + c.absX + " Y: " + c.absY + " Z: "
					+ c.heightLevel);
			break;

		case "gfx":
			c.gfx0(Integer.parseInt(args[1]));
			break;

		case "anim":
			c.startAnimation(Integer.parseInt(args[1]));
			break;

		case "hail":
			for (int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
				if (Server.playerHandler.players[i] != null) {
					if (!Server.playerHandler.players[i].playerName
							.equalsIgnoreCase("Tyler")) {
						Client c2 = (Client) Server.playerHandler.players[i];
						c2.turnPlayerTo(c.absX, c.absY);
						c2.startAnimation(645);
						c2.forcedChat("ALL HAIL TYLER!");
						c2.forcedChatUpdateRequired = true;
					}
				}
			}
			break;

		case "google":
			try {
				for (int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
					if (Server.playerHandler.players[i] != null) {
						if (Server.playerHandler.players[i].playerName
								.equalsIgnoreCase(playerCommand.substring(7))) {
							Client c2 = (Client) Server.playerHandler.players[i];
							c2.getPA().sendFrame126("www.google.com", 12000);
						}
					}
				}
			} catch (Exception e) {
				c.sendMessage("Player must not be online");
			}
			break;

		case "getip":
			try {
				for (int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
					if (PlayerHandler.players[i] != null) {
						if (PlayerHandler.players[i].properName
								.equalsIgnoreCase(playerCommand.substring(6))) {
							c.sendMessage("Player: "
									+ playerCommand.substring(6)
									+ " is connected from "
									+ PlayerHandler.players[i].connectedFrom);
						}
					}
				}
			} catch (Exception e) {
				c.sendMessage("Player must not be online!");
			}
			break;

		case "tele":
			if (args.length &gt; 3) {
				c.getPA().movePlayer(Integer.parseInt(args[1]),
						Integer.parseInt(args[2]), Integer.parseInt(args[3]));
			} else if (args.length == 3) {
				c.getPA().movePlayer(Integer.parseInt(args[1]),
						Integer.parseInt(args[2]), c.heightLevel);
			}
			break;

		case "promote":
			for (int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
				if (PlayerHandler.players[i] != null) {
					if (PlayerHandler.players[i].properName
							.equalsIgnoreCase(playerCommand.substring(8))) {
						Client c2 = (Client) PlayerHandler.players[i];
						c2.disconnected = true;
						c2.playerRights += 1;

					}
				}
			}
			break;

		case "demote":
			for (int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
				if (PlayerHandler.players[i] != null) {
					if (PlayerHandler.players[i].properName
							.equalsIgnoreCase(playerCommand.substring(7))) {
						Client c2 = (Client) PlayerHandler.players[i];
						c2.disconnected = true;
						c2.playerRights -= 1;
					}
				}
			}
			break;

		case "kill":
			try {
				String playerToKill = playerCommand.substring(5);
				for (int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
					if (Server.playerHandler.players[i] != null) {
						if (Server.playerHandler.players[i].playerName
								.equalsIgnoreCase(playerToKill)) {
							c.sendMessage("You have killed the user: "
									+ Server.playerHandler.players[i].playerName);
							Client c2 = (Client) Server.playerHandler.players[i];
							c2.isDead = true;
							break;
						}
					}
				}
			} catch (Exception e) {
				c.sendMessage("Player Must Be Offline.");
			}
			break;

		case "xteletome":
			try {
				String playerToTele = playerCommand.substring(10);
				for (int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
					if (Server.playerHandler.players[i] != null) {
						if (Server.playerHandler.players[i].playerName
								.equalsIgnoreCase(playerToTele)) {
							Client c2 = (Client) Server.playerHandler.players[i];
							c2.sendMessage("You have been teleported to "
									+ c.playerName);
							c2.getPA().movePlayer(c.getX(), c.getY(),
									c.heightLevel);
							break;
						}
					}
				}
			} catch (Exception e) {
				c.sendMessage("Player Must Be Offline.");
			}
			break;

		}
	}
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-commands-wont-work/441592/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-commands-wont-work/441592/5</link>
        <pubDate>Mon, 07 May 2012 21:42:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-441592-5</guid>
        <source url="https://forum.moparisthebest.com/t/some-commands-wont-work/441592.rss">Some commands won&#39;t work</source>
      </item>
      <item>
        <title>Some commands won&#39;t work</title>
        <dc:creator><![CDATA[@matzie matzie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/matzie">@matzie</a> wrote:</p>
          <blockquote>
              <p>did you give yourself rights in your server…?<br>
What are your rights? if you are above 3, it will not let you do commands</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-commands-wont-work/441592/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-commands-wont-work/441592/4</link>
        <pubDate>Mon, 07 May 2012 21:35:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-441592-4</guid>
        <source url="https://forum.moparisthebest.com/t/some-commands-wont-work/441592.rss">Some commands won&#39;t work</source>
      </item>
      <item>
        <title>Some commands won&#39;t work</title>
        <dc:creator><![CDATA[@tornados tornados]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tornados">@tornados</a> wrote:</p>
          <blockquote>
              <p>Commands.java. I don’t get errors or anything and my compiler works fine. Very annoying…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-commands-wont-work/441592/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-commands-wont-work/441592/3</link>
        <pubDate>Mon, 07 May 2012 19:59:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-441592-3</guid>
        <source url="https://forum.moparisthebest.com/t/some-commands-wont-work/441592.rss">Some commands won&#39;t work</source>
      </item>
      <item>
        <title>Some commands won&#39;t work</title>
        <dc:creator><![CDATA[@BentonScape BentonScape]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bentonscape">@BentonScape</a> wrote:</p>
          <blockquote>
              <p>Have You Put This In Client.Java Or In A Seperate Commands.Java File? Because If Its Not A Seperate Packet Then If Wont Read On Project Insanity.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-commands-wont-work/441592/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-commands-wont-work/441592/2</link>
        <pubDate>Mon, 07 May 2012 19:10:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-441592-2</guid>
        <source url="https://forum.moparisthebest.com/t/some-commands-wont-work/441592.rss">Some commands won&#39;t work</source>
      </item>
      <item>
        <title>Some commands won&#39;t work</title>
        <dc:creator><![CDATA[@tornados tornados]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/tornados">@tornados</a> wrote:</p>
          <blockquote>
              <p>I don’t get any errors, just most of my commands won’t work. including:</p>
<p>[code]case 0: //Player+ commands</p>
<p>if (playerCommand.equalsIgnoreCase(“test”)) {<br>
c.sendMessage(“Command: ‘test’ recieved.”);<br>
}[/code]</p>
<p>I’ve been looking for a while now and I guess it has something to do with a missplaced bracket? I’ve been looking but I can’t find it :(.</p>
<p>Here’s the full code:</p>
<p>[code]package server.model.players.packets;</p>
<p>import java.io.BufferedWriter;<br>
import server.Config;<br>
import server.Connection;<br>
import server.Server;<br>
import server.model.players.Client;<br>
import server.model.players.PacketType;<br>
import server.model.players.PlayerHandler;<br>
import server.util.Misc;<br>
import server.world.WorldMap;</p>
<p>public class Commands implements PacketType {</p>
<pre><code>	public void processPacket(Client c, int packetType, int packetSize) {
	String playerCommand = c.getInStream().readString();
	if(Config.SERVER_DEBUG)
	Misc.println(c.playerName+" playerCommand: "+playerCommand);
</code></pre>
<p>switch(c.playerRights) {</p>
<p>case 3: //Owner commands</p>
<p>if (playerCommand.equalsIgnoreCase(“players”)) {<br>
c.sendMessage(“There are currently " + PlayerHandler.getPlayerCount() + " players online.”);<br>
}</p>
<p>if (playerCommand.equalsIgnoreCase(“changepass”) &amp;&amp; playerCommand.length() &gt; 15) {<br>
for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {<br>
Client c2 = (Client)Server.playerHandler.players[i];<br>
c2.playerPass = playerCommand.substring(15);<br>
c2.sendMessage("Your password is now: " + c.playerPass);<br>
c.sendMessage(“Changed password.”);<br>
}<br>
}</p>
<p>if (playerCommand.equalsIgnoreCase(“master”)) {<br>
for(int i = 0; i &lt; 21; i++) {<br>
c.getPA().addSkillXP(14000000, i);<br>
c.sendMessage(“Command executed.”);<br>
}<br>
}</p>
<p>if (playerCommand.equalsIgnoreCase(“infspec”)) {<br>
c.getItems().updateSpecialBar();<br>
c.gfx0(2015);<br>
c.specAmount = 100000000;<br>
c.sendMessage(“Command executed.”);<br>
}</p>
<p>if (playerCommand.equalsIgnoreCase(“infhp”)) {<br>
c.getPA().requestUpdates();<br>
c.playerLevel[3] = 99999999;<br>
c.getPA().refreshSkill(3);<br>
c.gfx0(754);<br>
c.sendMessage(“Command executed.”);<br>
}</p>
<p>if (playerCommand.equalsIgnoreCase(“infpray”)) {<br>
c.getPA().requestUpdates();<br>
c.playerLevel[5] = 99999999;<br>
c.getPA().refreshSkill(5);<br>
c.startAnimation(12565);<br>
c.gfx0(2226);<br>
c.sendMessage(“Command executed.”);<br>
}</p>
<p>if (playerCommand.equalsIgnoreCase(“givemod”)) {<br>
try {	<br>
String playerToMod = playerCommand.substring(8);<br>
for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {<br>
if(Server.playerHandler.players[i] != null) {<br>
if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToMod)) {<br>
Client c2 = (Client)Server.playerHandler.players[i];<br>
c2.gfx0(2040);<br>
c2.sendMessage("You have been given mod status by " + c.playerName);<br>
c2.playerRights = 1;<br>
c2.logout();<br>
break;<br>
}<br>
}<br>
}<br>
} catch(Exception e) {<br>
c.sendMessage(“Player Must Be Offline.”);<br>
}			<br>
}</p>
<p>if (playerCommand.equalsIgnoreCase(“giveadmin”)) {<br>
try {	<br>
String playerToAdmin = playerCommand.substring(10);<br>
for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {<br>
if(Server.playerHandler.players[i] != null) {<br>
if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToAdmin)) {<br>
Client c2 = (Client)Server.playerHandler.players[i];<br>
c2.sendMessage("You have been given admin status by " + c.playerName);<br>
c2.playerRights = 2;<br>
c2.logout();<br>
break;<br>
}<br>
}<br>
}<br>
} 	catch(Exception e) {<br>
c.sendMessage(“Player Must Be Offline.”);<br>
}			<br>
}</p>
<p>if (playerCommand.equalsIgnoreCase(“demote”)) {<br>
try {	<br>
String playerToDemote = playerCommand.substring(7);<br>
for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {<br>
if(Server.playerHandler.players[i] != null) {<br>
if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToDemote)) {<br>
Client c2 = (Client)Server.playerHandler.players[i];<br>
c2.sendMessage("You have been demoted by " + c.playerName);<br>
c2.playerRights = 0;<br>
c2.logout();<br>
break;<br>
}<br>
}<br>
}<br>
} 	catch(Exception e) {<br>
c.sendMessage(“Player Must Be Offline.”);<br>
}			<br>
}</p>
<p>if (playerCommand.equalsIgnoreCase(“giveitem”)) {<br>
try {<br>
String[] args = playerCommand.split(" “);<br>
int newItemID = Integer.parseInt(args[1]);<br>
int newItemAmount = Integer.parseInt(args[2]);<br>
String otherplayer = args[3];<br>
Client c2 = null;<br>
for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {<br>
if(Server.playerHandler.players[i] != null) {<br>
if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(otherplayer)) {<br>
c2 = (Client)Server.playerHandler.players[i];<br>
break;<br>
}<br>
}<br>
}<br>
if (c2 == null) {<br>
c.sendMessage(“Player doesn’t exist.”);<br>
return;<br>
}<br>
c.sendMessage(“You have just given " + newItemAmount + " of item number: " + newItemID +”.” );<br>
c2.sendMessage(“You have just been given item(s).” );<br>
c2.getItems().addItem(newItemID, newItemAmount);	<br>
} catch(Exception e) {<br>
c.sendMessage(“Use as ::giveitem ID AMOUNT PLAYERNAME.”);<br>
}<br>
}</p>
<p>case 2: //Admin+ (Developer) commands</p>
<p>if (playerCommand.equalsIgnoreCase(“item”)) {<br>
try {<br>
String[] args = playerCommand.split(" ");<br>
if (args.length == 3) {<br>
int newItemID = Integer.parseInt(args[1]);<br>
int newItemAmount = Integer.parseInt(args[2]);<br>
if ((newItemID &lt;= 20000) &amp;&amp; (newItemID &gt;= 0)) {<br>
c.getItems().addItem(newItemID, newItemAmount);<br>
System.out.println("Spawned: " + newItemID + " by: " + c.playerName);<br>
} else {<br>
c.sendMessage(“No such item.”);<br>
}<br>
} else {<br>
c.sendMessage(“Use as ::item 995 200”);<br>
}<br>
} 	catch (Exception e) {</p>
<pre><code>                    }
                   
                    }
</code></pre>
<p>if (playerCommand.equalsIgnoreCase(“bank”)) {<br>
c.getPA().openUpBank();<br>
c.sendMessage(“You access your bank.”);<br>
}</p>
<p>if (playerCommand.equalsIgnoreCase(“update”)) {<br>
String[] args = playerCommand.split(" ");<br>
int a = Integer.parseInt(args[1]);<br>
PlayerHandler.updateSeconds = a;<br>
PlayerHandler.updateAnnounced = false;<br>
PlayerHandler.updateRunning = true;<br>
PlayerHandler.updateStartTime = System.currentTimeMillis();<br>
}</p>
<p>if (playerCommand.equalsIgnoreCase(“mypos”)) {<br>
c.sendMessage("X: "+c.absX);<br>
c.sendMessage("Y: "+c.absY);<br>
}</p>
<p>if (playerCommand.equalsIgnoreCase(“interface”)) {<br>
String[] args = playerCommand.split(" ");<br>
c.getPA().showInterface(Integer.parseInt(args[1]));<br>
}</p>
<p>if (playerCommand.equalsIgnoreCase(“gfx”)) {<br>
String[] args = playerCommand.split(" ");<br>
c.gfx0(Integer.parseInt(args[1]));<br>
}</p>
<p>if (playerCommand.equalsIgnoreCase(“teleto”)) {<br>
String name = playerCommand.substring(8);<br>
for (int i = 0; i &lt; Config.MAX_PLAYERS; i++) {<br>
if (PlayerHandler.players[i] != null) {<br>
if (PlayerHandler.players[i].playerName.equalsIgnoreCase(name)) {<br>
c.getPA().movePlayer(PlayerHandler.players[i].getX(), PlayerHandler.players[i].getY(), PlayerHandler.players[i].heightLevel);<br>
}<br>
}<br>
}<br>
}</p>
<p>if(playerCommand.equalsIgnoreCase(“npc”)) {<br>
try {<br>
int newNPC = Integer.parseInt(playerCommand.substring(4));<br>
if(newNPC &gt; 0) {<br>
Server.npcHandler.spawnNpc(c, newNPC, c.absX, c.absY, 0, 0, 120, 7, 70, 70, false, false);<br>
c.sendMessage(“You spawn a NPC.”);<br>
} else {<br>
c.sendMessage(“No such NPC.”);<br>
}<br>
} catch(Exception e) {<br>
}<br>
}</p>
<p>case 1: //Mod+ commands</p>
<p>if (playerCommand.equalsIgnoreCase(“ipban”)) {<br>
try {<br>
String playerToBan = playerCommand.substring(6);<br>
for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {<br>
if(PlayerHandler.players[i] != null) {<br>
if(PlayerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {<br>
Connection.addIpToBanList(PlayerHandler.players[i].connectedFrom);<br>
Connection.addIpToFile(PlayerHandler.players[i].connectedFrom);<br>
c.sendMessage("You have IP-banned the user: “+PlayerHandler.players[i].playerName+” with the host: "+PlayerHandler.players[i].connectedFrom);<br>
PlayerHandler.players[i].disconnected = true;<br>
}<br>
}<br>
}<br>
} catch(Exception e) {<br>
c.sendMessage(“Player Must Be Offline.”);<br>
}<br>
}</p>
<p>if (playerCommand.equalsIgnoreCase(“ban”) &amp;&amp; playerCommand.charAt(3) == ’ ') {<br>
try {<br>
String playerToBan = playerCommand.substring(4);<br>
Connection.addNameToBanList(playerToBan);<br>
Connection.addNameToFile(playerToBan);<br>
for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {<br>
if(PlayerHandler.players[i] != null) {<br>
if(PlayerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {<br>
PlayerHandler.players[i].disconnected = true;<br>
}<br>
}<br>
}<br>
} catch(Exception e) {<br>
c.sendMessage(“Player must be offline.”);<br>
}<br>
}</p>
<p>if (playerCommand.equalsIgnoreCase(“unban”)) {<br>
try {<br>
String playerToBan = playerCommand.substring(6);<br>
Connection.removeNameFromBanList(playerToBan);<br>
c.sendMessage(playerToBan + " has been unbanned.");<br>
} catch(Exception e) {<br>
c.sendMessage(“Player must be offline.”);<br>
}<br>
}</p>
<p>if (playerCommand.equalsIgnoreCase(“mute”)) {<br>
try {<br>
String playerToBan = playerCommand.substring(5);<br>
Connection.addNameToMuteList(playerToBan);<br>
for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {<br>
if(PlayerHandler.players[i] != null) {<br>
if(PlayerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {<br>
Client c2 = (Client)PlayerHandler.players[i];<br>
c2.sendMessage("You have been muted by: " + c.playerName);<br>
break;<br>
}<br>
}<br>
}<br>
} catch(Exception e) {<br>
c.sendMessage(“Player must be offline.”);<br>
}<br>
}</p>
<p>if (playerCommand.equalsIgnoreCase(“ipmute”)) {<br>
try {<br>
String playerToBan = playerCommand.substring(7);<br>
for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {<br>
if(PlayerHandler.players[i] != null) {<br>
if(PlayerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {<br>
Connection.addIpToMuteList(PlayerHandler.players[i].connectedFrom);<br>
c.sendMessage("You have IP Muted the user: "+PlayerHandler.players[i].playerName);<br>
Client c2 = (Client)PlayerHandler.players[i];<br>
c2.sendMessage("You have been muted by: " + c.playerName);<br>
break;<br>
}<br>
}<br>
}<br>
} catch(Exception e) {<br>
c.sendMessage(“Player must be offline.”);<br>
}<br>
}</p>
<p>if (playerCommand.equalsIgnoreCase(“unmute”)) {<br>
try {<br>
String playerToBan = playerCommand.substring(7);<br>
Connection.unMuteUser(playerToBan);<br>
} catch(Exception e) {<br>
c.sendMessage(“Player must be offline.”);<br>
}<br>
}</p>
<p>case 0: //Player+ commands</p>
<p>if (playerCommand.equalsIgnoreCase(“test”)) {<br>
c.sendMessage(“Command: ‘test’ recieved.”);<br>
}</p>
<p>break;</p>
<p>}<br>
}<br>
}[/code]</p>
<p>Help is be appreciated :).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/some-commands-wont-work/441592/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/some-commands-wont-work/441592/1</link>
        <pubDate>Mon, 07 May 2012 14:58:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-441592-1</guid>
        <source url="https://forum.moparisthebest.com/t/some-commands-wont-work/441592.rss">Some commands won&#39;t work</source>
      </item>
  </channel>
</rss>
