<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[C++] stuck with a class</title>
    <link>https://forum.moparisthebest.com/t/c-stuck-with-a-class/258417</link>
    <description>Hello

I thought to make a privRS2 server in c++.. But I&#39;m stuck with the decryption part. Since there on the private servers forum are only a few people who can write programs in c++ so I thought to post that thread here(because after an hour my thread would die there under other noob question threads). I made a new project to test if my decryption works. Okay.. Now to the problem: 
I compared the results with an other server cryption results. They don&#39;t match and I think I&#39;ve made a mistake.. I can&#39;t find it  :confused:
The algorithms of the functions should be correct(at first time I didn&#39;t use classes, just plain functions but I discovered that I couldn&#39;t handle more then 1 player because the code would get really difficult..)
Log file of an other working java server(I&#39;ve compared the results with it..):
[code]
[00:00:04]: sessionKey[0] 819266
[00:00:04]: sessionKey[1] 6464219
[00:00:04]: sessionKey[2] 19197475
[00:00:04]: sessionKey[3] 78752738
[00:00:04]: getkey: 1587232268
[00:00:04]: getkey: -723709172
[00:00:04]: getkey: -1051315262
[00:00:04]: getkey: 797963004
[00:00:04]: getkey: 375462203
[00:00:04]: getkey: 1427372917
[00:00:04]: getkey: 267878182
[00:00:04]: getkey: -441770852
[00:00:04]: getkey: -836756990
[/code]

And my testing project:

[code]
#include &lt;iostream&gt;
using namespace std;

class Cryption{
	int cryptVar1, cryptVar2, cryptVar3, keyArrayIdx;
	int cryptArray[256];
	int keySetArray[256];
public:
	void put(int, int, int, int);
	void generateNextKeySet();
	int getNextKey();
	void initializeKeySet();
};

void Cryption::put(int a, int b, int c, int d)
{
  keySetArray[0] = a;
  keySetArray[1] = b;
  keySetArray[2] = c;
  keySetArray[3] = d;
  initializeKeySet();
}


void Cryption::generateNextKeySet()
    {
		cryptVar2 += ++cryptVar3;
		for(int i = 0; i &lt; 256; i++)
		{
			int j = cryptArray[i];
			if((i &amp; 3) == 0)
				cryptVar1 ^= cryptVar1 &lt;&lt; 13;
			else
			if((i &amp; 3) == 1)
				cryptVar1 ^= static_cast&lt;unsigned int&gt;(cryptVar1) &gt;&gt; 6;
			else
			if((i &amp; 3) == 2)
				cryptVar1 ^= cryptVar1 &lt;&lt; 2;
			else
			if((i &amp; 3) == 3)
				cryptVar1 ^= static_cast&lt;unsigned int&gt;(cryptVar1) &gt;&gt; 16;
			cryptVar1 += cryptArray[i + 128 &amp; 0xff];
			int k;
			cryptArray[i] = k = cryptArray[(j &amp; 0x3fc) &gt;&gt; 2] + cryptVar1 + cryptVar2;
			keySetArray[i] = cryptVar2 = cryptArray[(k &gt;&gt; 8 &amp; 0x3fc) &gt;&gt; 2] + j;
		}

    }

void Cryption::initializeKeySet()
    {
        int i1;
        int j1;
        int k1;
        int l1;
        int i2;
        int j2;
        int k2;
        int l = i1 = j1 = k1 = l1 = i2 = j2 = k2 = 0x9e3779b9;
        for(int i = 0; i &lt; 4; i++)
        {
            l ^= i1 &lt;&lt; 11;
            k1 += l;
            i1 += j1;
            i1 ^= static_cast&lt;unsigned int&gt;(j1) &gt;&gt; 2;
            l1 += i1;
            j1 += k1;
            j1 ^= k1 &lt;&lt; 8;
            i2 += j1;
            k1 += l1;
            k1 ^= static_cast&lt;unsigned int&gt;(l1) &gt;&gt; 16;
            j2 += k1;
            l1 += i2;
            l1 ^= i2 &lt;&lt; 10;
            k2 += l1;
            i2 += j2;
            i2 ^= static_cast&lt;unsigned int&gt;(j2) &gt;&gt; 4;
            l += i2;
            j2 += k2;
            j2 ^= k2 &lt;&lt; 8;
            i1 += j2;
            k2 += l;
            k2 ^= static_cast&lt;unsigned int&gt;(l) &gt;&gt; 9;
            j1 += k2;
            l += i1;
        }
        for(int j = 0; j &lt; 256; j += 8)
        {
            l += keySetArray[j];
            i1 += keySetArray[j + 1];
            j1 += keySetArray[j + 2];
            k1 += keySetArray[j + 3];
            l1 += keySetArray[j + 4];
            i2 += keySetArray[j + 5];
            j2 += keySetArray[j + 6];
            k2 += keySetArray[j + 7];
           
            l ^= i1 &lt;&lt; 11;
            k1 += l;
            i1 += j1;
            i1 ^= static_cast&lt;unsigned int&gt;(j1) &gt;&gt; 2;
            l1 += i1;
            j1 += k1;
            j1 ^= k1 &lt;&lt; 8;
            i2 += j1;
            k1 += l1;
            k1 ^= static_cast&lt;unsigned int&gt;(l1) &gt;&gt; 16;
            j2 += k1;
            l1 += i2;
            l1 ^= i2 &lt;&lt; 10;
            k2 += l1;
            i2 += j2;
            i2 ^= static_cast&lt;unsigned int&gt;(j2) &gt;&gt; 4;
            l += i2;
            j2 += k2;
            j2 ^= k2 &lt;&lt; 8;
            i1 += j2;
            k2 += l;
            k2 ^= static_cast&lt;unsigned int&gt;(l) &gt;&gt; 9;
            j1 += k2;
            l += i1;
            cryptArray[j] = l;
            cryptArray[j + 1] = i1;
            cryptArray[j + 2] = j1;
            cryptArray[j + 3] = k1;
            cryptArray[j + 4] = l1;
            cryptArray[j + 5] = i2;
            cryptArray[j + 6] = j2;
            cryptArray[j + 7] = k2;
        }

        for(int k = 0; k &lt; 256; k += 8)
        {
            l += cryptArray[k];
            i1 += cryptArray[k + 1];
            j1 += cryptArray[k + 2];
            k1 += cryptArray[k + 3];
            l1 += cryptArray[k + 4];
            i2 += cryptArray[k + 5];
            j2 += cryptArray[k + 6];
            k2 += cryptArray[k + 7];
            l ^= i1 &lt;&lt; 11;
            k1 += l;
            i1 += j1;
            i1 ^= static_cast&lt;unsigned int&gt;(j1) &gt;&gt; 2;
            l1 += i1;
            j1 += k1;
            j1 ^= k1 &lt;&lt; 8;
            i2 += j1;
            k1 += l1;
            k1 ^= static_cast&lt;unsigned int&gt;(l1) &gt;&gt; 16;
            j2 += k1;
            l1 += i2;
            l1 ^= i2 &lt;&lt; 10;
            k2 += l1;
            i2 += j2;
            i2 ^= static_cast&lt;unsigned int&gt;(j2) &gt;&gt; 4;
            l += i2;
            j2 += k2;
            j2 ^= k2 &lt;&lt; 8;
            i1 += j2;
            k2 += l;
            k2 ^= static_cast&lt;unsigned int&gt;(l) &gt;&gt; 9;
            j1 += k2;
            l += i1;
            cryptArray[k] = l;
            cryptArray[k + 1] = i1;
            cryptArray[k + 2] = j1;
            cryptArray[k + 3] = k1;
            cryptArray[k + 4] = l1;
            cryptArray[k + 5] = i2;
            cryptArray[k + 6] = j2;
            cryptArray[k + 7] = k2;
        }

        generateNextKeySet();
        keyArrayIdx = 256;
    }

int Cryption::getNextKey(){
        if(keyArrayIdx-- == 0){
            generateNextKeySet();
            keyArrayIdx = 255;
        }
        return keySetArray[keyArrayIdx];
}

int main(){
	Cryption outStreamCryption, inStreamCryption;
	outStreamCryption.put(819266+50, 6464219+50, 19197475+50, 78752738+50);
	inStreamCryption.put (819266,    6464219,    19197475,    78752738);

	cout &lt;&lt; &quot;OUT: &quot; &lt;&lt; outStreamCryption.getNextKey() &lt;&lt; endl;
	cout &lt;&lt; &quot;OUT: &quot; &lt;&lt; outStreamCryption.getNextKey() &lt;&lt; endl;
	cout &lt;&lt; &quot;OUT: &quot; &lt;&lt; outStreamCryption.getNextKey() &lt;&lt; endl;

	cout &lt;&lt; &quot;OUT: &quot; &lt;&lt; outStreamCryption.getNextKey() &lt;&lt; endl;
	cout &lt;&lt; &quot;OUT: &quot; &lt;&lt; outStreamCryption.getNextKey() &lt;&lt; endl;
	cout &lt;&lt; &quot;OUT: &quot; &lt;&lt; outStreamCryption.getNextKey() &lt;&lt; endl;

	cout &lt;&lt; &quot;IN: &quot; &lt;&lt; inStreamCryption.getNextKey() &lt;&lt; endl;
	cout &lt;&lt; &quot;IN: &quot; &lt;&lt; inStreamCryption.getNextKey() &lt;&lt; endl;
	cout &lt;&lt; &quot;IN: &quot; &lt;&lt; inStreamCryption.getNextKey() &lt;&lt; endl;

	cout &lt;&lt; &quot;IN: &quot; &lt;&lt; inStreamCryption.getNextKey() &lt;&lt; endl;
	cout &lt;&lt; &quot;IN: &quot; &lt;&lt; inStreamCryption.getNextKey() &lt;&lt; endl;
	cout &lt;&lt; &quot;IN: &quot; &lt;&lt; inStreamCryption.getNextKey() &lt;&lt; endl;
	system(&quot;PAUSE&quot;);
	return(0);
}
[/code]</description>
    
    <lastBuildDate>Sun, 25 Jan 2009 16:44:57 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/c-stuck-with-a-class/258417.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[C++] stuck with a class</title>
        <dc:creator><![CDATA[@Mopman Mopman]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mopman">@Mopman</a> wrote:</p>
          <blockquote>
              <p>Sorry, but this dosenâ€™t belong here, regardless of reason.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-stuck-with-a-class/258417/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-stuck-with-a-class/258417/4</link>
        <pubDate>Sun, 25 Jan 2009 16:44:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-258417-4</guid>
        <source url="https://forum.moparisthebest.com/t/c-stuck-with-a-class/258417.rss">[C++] stuck with a class</source>
      </item>
      <item>
        <title>[C++] stuck with a class</title>
        <dc:creator><![CDATA[@West7man West7man]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/west7man">@West7man</a> wrote:</p>
          <blockquote>
              <p>Thanks!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-stuck-with-a-class/258417/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-stuck-with-a-class/258417/3</link>
        <pubDate>Sun, 25 Jan 2009 16:24:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-258417-3</guid>
        <source url="https://forum.moparisthebest.com/t/c-stuck-with-a-class/258417.rss">[C++] stuck with a class</source>
      </item>
      <item>
        <title>[C++] stuck with a class</title>
        <dc:creator><![CDATA[@zstars zstars]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zstars">@zstars</a> wrote:</p>
          <blockquote>
              <p>Unless previously, with stand-alone functions, it did work as expected, chances are your problem is either related to variable initialization, or to signed / unsigned issues, and not to classes. On any case, feel free to have a look at my ISAAC class. RuneEmu is now Open Source, so you can find it at its repository, a link to which can be found either through googling or through the post in my signature.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-stuck-with-a-class/258417/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-stuck-with-a-class/258417/2</link>
        <pubDate>Sun, 25 Jan 2009 16:06:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-258417-2</guid>
        <source url="https://forum.moparisthebest.com/t/c-stuck-with-a-class/258417.rss">[C++] stuck with a class</source>
      </item>
      <item>
        <title>[C++] stuck with a class</title>
        <dc:creator><![CDATA[@West7man West7man]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/west7man">@West7man</a> wrote:</p>
          <blockquote>
              <p>Hello</p>
<p>I thought to make a privRS2 server in c++â€¦ But Iâ€™m stuck with the decryption part. Since there on the private servers forum are only a few people who can write programs in c++ so I thought to post that thread here(because after an hour my thread would die there under other noob question threads). I made a new project to test if my decryption works. Okayâ€¦ Now to the problem:<br>
I compared the results with an other server cryption results. They donâ€™t match and I think Iâ€™ve made a mistakeâ€¦ I canâ€™t find it  <img src="https://forum.moparisthebest.com/images/emoji/twitter/confused.png?v=6" title=":confused:" class="emoji" alt=":confused:"><br>
The algorithms of the functions should be correct(at first time I didnâ€™t use classes, just plain functions but I discovered that I couldnâ€™t handle more then 1 player because the code would get really difficultâ€¦)<br>
Log file of an other working java server(Iâ€™ve compared the results with itâ€¦):</p>
<pre><code class="lang-auto">[00:00:04]: sessionKey[0] 819266
[00:00:04]: sessionKey[1] 6464219
[00:00:04]: sessionKey[2] 19197475
[00:00:04]: sessionKey[3] 78752738
[00:00:04]: getkey: 1587232268
[00:00:04]: getkey: -723709172
[00:00:04]: getkey: -1051315262
[00:00:04]: getkey: 797963004
[00:00:04]: getkey: 375462203
[00:00:04]: getkey: 1427372917
[00:00:04]: getkey: 267878182
[00:00:04]: getkey: -441770852
[00:00:04]: getkey: -836756990</code></pre>
<p>And my testing project:</p>
<pre><code class="lang-auto">#include &lt;iostream&gt;
using namespace std;

class Cryption{
	int cryptVar1, cryptVar2, cryptVar3, keyArrayIdx;
	int cryptArray[256];
	int keySetArray[256];
public:
	void put(int, int, int, int);
	void generateNextKeySet();
	int getNextKey();
	void initializeKeySet();
};

void Cryption::put(int a, int b, int c, int d)
{
  keySetArray[0] = a;
  keySetArray[1] = b;
  keySetArray[2] = c;
  keySetArray[3] = d;
  initializeKeySet();
}


void Cryption::generateNextKeySet()
    {
		cryptVar2 += ++cryptVar3;
		for(int i = 0; i &lt; 256; i++)
		{
			int j = cryptArray[i];
			if((i &amp; 3) == 0)
				cryptVar1 ^= cryptVar1 &lt;&lt; 13;
			else
			if((i &amp; 3) == 1)
				cryptVar1 ^= static_cast&lt;unsigned int&gt;(cryptVar1) &gt;&gt; 6;
			else
			if((i &amp; 3) == 2)
				cryptVar1 ^= cryptVar1 &lt;&lt; 2;
			else
			if((i &amp; 3) == 3)
				cryptVar1 ^= static_cast&lt;unsigned int&gt;(cryptVar1) &gt;&gt; 16;
			cryptVar1 += cryptArray[i + 128 &amp; 0xff];
			int k;
			cryptArray[i] = k = cryptArray[(j &amp; 0x3fc) &gt;&gt; 2] + cryptVar1 + cryptVar2;
			keySetArray[i] = cryptVar2 = cryptArray[(k &gt;&gt; 8 &amp; 0x3fc) &gt;&gt; 2] + j;
		}

    }

void Cryption::initializeKeySet()
    {
        int i1;
        int j1;
        int k1;
        int l1;
        int i2;
        int j2;
        int k2;
        int l = i1 = j1 = k1 = l1 = i2 = j2 = k2 = 0x9e3779b9;
        for(int i = 0; i &lt; 4; i++)
        {
            l ^= i1 &lt;&lt; 11;
            k1 += l;
            i1 += j1;
            i1 ^= static_cast&lt;unsigned int&gt;(j1) &gt;&gt; 2;
            l1 += i1;
            j1 += k1;
            j1 ^= k1 &lt;&lt; 8;
            i2 += j1;
            k1 += l1;
            k1 ^= static_cast&lt;unsigned int&gt;(l1) &gt;&gt; 16;
            j2 += k1;
            l1 += i2;
            l1 ^= i2 &lt;&lt; 10;
            k2 += l1;
            i2 += j2;
            i2 ^= static_cast&lt;unsigned int&gt;(j2) &gt;&gt; 4;
            l += i2;
            j2 += k2;
            j2 ^= k2 &lt;&lt; 8;
            i1 += j2;
            k2 += l;
            k2 ^= static_cast&lt;unsigned int&gt;(l) &gt;&gt; 9;
            j1 += k2;
            l += i1;
        }
        for(int j = 0; j &lt; 256; j += 8)
        {
            l += keySetArray[j];
            i1 += keySetArray[j + 1];
            j1 += keySetArray[j + 2];
            k1 += keySetArray[j + 3];
            l1 += keySetArray[j + 4];
            i2 += keySetArray[j + 5];
            j2 += keySetArray[j + 6];
            k2 += keySetArray[j + 7];
           
            l ^= i1 &lt;&lt; 11;
            k1 += l;
            i1 += j1;
            i1 ^= static_cast&lt;unsigned int&gt;(j1) &gt;&gt; 2;
            l1 += i1;
            j1 += k1;
            j1 ^= k1 &lt;&lt; 8;
            i2 += j1;
            k1 += l1;
            k1 ^= static_cast&lt;unsigned int&gt;(l1) &gt;&gt; 16;
            j2 += k1;
            l1 += i2;
            l1 ^= i2 &lt;&lt; 10;
            k2 += l1;
            i2 += j2;
            i2 ^= static_cast&lt;unsigned int&gt;(j2) &gt;&gt; 4;
            l += i2;
            j2 += k2;
            j2 ^= k2 &lt;&lt; 8;
            i1 += j2;
            k2 += l;
            k2 ^= static_cast&lt;unsigned int&gt;(l) &gt;&gt; 9;
            j1 += k2;
            l += i1;
            cryptArray[j] = l;
            cryptArray[j + 1] = i1;
            cryptArray[j + 2] = j1;
            cryptArray[j + 3] = k1;
            cryptArray[j + 4] = l1;
            cryptArray[j + 5] = i2;
            cryptArray[j + 6] = j2;
            cryptArray[j + 7] = k2;
        }

        for(int k = 0; k &lt; 256; k += 8)
        {
            l += cryptArray[k];
            i1 += cryptArray[k + 1];
            j1 += cryptArray[k + 2];
            k1 += cryptArray[k + 3];
            l1 += cryptArray[k + 4];
            i2 += cryptArray[k + 5];
            j2 += cryptArray[k + 6];
            k2 += cryptArray[k + 7];
            l ^= i1 &lt;&lt; 11;
            k1 += l;
            i1 += j1;
            i1 ^= static_cast&lt;unsigned int&gt;(j1) &gt;&gt; 2;
            l1 += i1;
            j1 += k1;
            j1 ^= k1 &lt;&lt; 8;
            i2 += j1;
            k1 += l1;
            k1 ^= static_cast&lt;unsigned int&gt;(l1) &gt;&gt; 16;
            j2 += k1;
            l1 += i2;
            l1 ^= i2 &lt;&lt; 10;
            k2 += l1;
            i2 += j2;
            i2 ^= static_cast&lt;unsigned int&gt;(j2) &gt;&gt; 4;
            l += i2;
            j2 += k2;
            j2 ^= k2 &lt;&lt; 8;
            i1 += j2;
            k2 += l;
            k2 ^= static_cast&lt;unsigned int&gt;(l) &gt;&gt; 9;
            j1 += k2;
            l += i1;
            cryptArray[k] = l;
            cryptArray[k + 1] = i1;
            cryptArray[k + 2] = j1;
            cryptArray[k + 3] = k1;
            cryptArray[k + 4] = l1;
            cryptArray[k + 5] = i2;
            cryptArray[k + 6] = j2;
            cryptArray[k + 7] = k2;
        }

        generateNextKeySet();
        keyArrayIdx = 256;
    }

int Cryption::getNextKey(){
        if(keyArrayIdx-- == 0){
            generateNextKeySet();
            keyArrayIdx = 255;
        }
        return keySetArray[keyArrayIdx];
}

int main(){
	Cryption outStreamCryption, inStreamCryption;
	outStreamCryption.put(819266+50, 6464219+50, 19197475+50, 78752738+50);
	inStreamCryption.put (819266,    6464219,    19197475,    78752738);

	cout &lt;&lt; "OUT: " &lt;&lt; outStreamCryption.getNextKey() &lt;&lt; endl;
	cout &lt;&lt; "OUT: " &lt;&lt; outStreamCryption.getNextKey() &lt;&lt; endl;
	cout &lt;&lt; "OUT: " &lt;&lt; outStreamCryption.getNextKey() &lt;&lt; endl;

	cout &lt;&lt; "OUT: " &lt;&lt; outStreamCryption.getNextKey() &lt;&lt; endl;
	cout &lt;&lt; "OUT: " &lt;&lt; outStreamCryption.getNextKey() &lt;&lt; endl;
	cout &lt;&lt; "OUT: " &lt;&lt; outStreamCryption.getNextKey() &lt;&lt; endl;

	cout &lt;&lt; "IN: " &lt;&lt; inStreamCryption.getNextKey() &lt;&lt; endl;
	cout &lt;&lt; "IN: " &lt;&lt; inStreamCryption.getNextKey() &lt;&lt; endl;
	cout &lt;&lt; "IN: " &lt;&lt; inStreamCryption.getNextKey() &lt;&lt; endl;

	cout &lt;&lt; "IN: " &lt;&lt; inStreamCryption.getNextKey() &lt;&lt; endl;
	cout &lt;&lt; "IN: " &lt;&lt; inStreamCryption.getNextKey() &lt;&lt; endl;
	cout &lt;&lt; "IN: " &lt;&lt; inStreamCryption.getNextKey() &lt;&lt; endl;
	system("PAUSE");
	return(0);
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/c-stuck-with-a-class/258417/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/c-stuck-with-a-class/258417/1</link>
        <pubDate>Sun, 25 Jan 2009 15:27:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-258417-1</guid>
        <source url="https://forum.moparisthebest.com/t/c-stuck-with-a-class/258417.rss">[C++] stuck with a class</source>
      </item>
  </channel>
</rss>
