<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>TScrollBox Form Component In Scar by Ron</title>
    <link>https://forum.moparisthebest.com/t/tscrollbox-form-component-in-scar-by-ron/55102</link>
    <description>[center][size=15pt][b]TScrollBox Form Component In Scar[/b][/size]
by Ron[/center]

Another hidden component within scar. The TScrollBox will let you scroll information in a small form which is useful if the information you&#39;re scrolling is too wide or tall to fit. Here is a picture of the form you will be creating!

[b]Screenshot:[/b]
[img]http://img245.imageshack.us/img245/7108/tscrollboxtutorialbyronhz9.png[/img]

[b]1. Start out with a regular form like this one:[/b]
[code]
{ Program created by Ron to explain the TScrollBox component. }

program TScrollBoxTutorialByRon;

var
  // InitForm variables.
  frmDesign : TForm;

procedure InitForm;
begin
  // Create frmDesign - Main Form.
  frmDesign := CreateForm;
  frmDesign.Position := poDesktopCenter; // Centers the form to middle of screen.
  frmDesign.Caption := &#39;Testing TScrollBox - Tutorial by Ron&#39;; // Form title.
  frmDesign.Width := 350;
  frmDesign.Height := 300;
  frmDesign.BorderStyle := bsSingle; // Makes form not resizable.
  frmDesign.BorderIcons := [biMinimize,biSystemMenu]; // Disables maximize.
end;

// Safe call to the InitForm procedure.
procedure SafeInitForm;
var
  v: TVariantArray;
begin
  setarraylength(v, 0);
  ThreadSafeCall(&#39;InitForm&#39;, v);
end;

procedure ShowFormModal;
begin
  frmDesign.ShowModal;
end;

// Safe call to the ShowFormModal procedure.
procedure SafeShowFormModal;
var
  v: TVariantArray;
begin
  setarraylength(v, 0);
  ThreadSafeCall(&#39;ShowFormModal&#39;, v);
end;

// Call all the safe procedures and then free the form from memory.
procedure MainInitForm;
begin
  SafeInitForm;
  SafeShowFormModal;
  FreeForm(frmDesign);
end;

begin
  ClearDebug;
  MainInitForm;
end.
[/code]

[b]2. Now to add a TScrollBox and something to put in the box. [/b]

Under the variables, insert this code. This will declare a ScrollBox, 5 CheckBoxes, and a Label.
[code]
  ScrollBox1 : TScrollBox;
  CheckBox1,CheckBox2,CheckBox3,CheckBox4,CheckBox5 : TCheckBox;
  Label1 : TLabel;
[/code]

[b]3. In the InitForm under the frmDesign code, place this code in to setup the ScrollBox1.[/b]
This creates the TScrollBox, sets it to the main form, and sets its width/height.
[code]
  // Create ScrollBox1.
  ScrollBox1 := TScrollBox.Create(frmDesign);
  ScrollBox1.Parent := frmDesign;
  ScrollBox1.Height := 150;
  ScrollBox1.Width := 300;
  ScrollBox1.BorderStyle := bsNone; // Gets rid of ugly border.
  ScrollBox1.Color := 14258279;     // Changes color.
[/code]

[b]4. Now you&#39;re ready to put something in the ScrollBox1. [/b]

Let&#39;s add the components we declared before and let&#39;s put them INSIDE the ScrollBox1. Woo, feeling crazy today. To put anything inside the ScrollBox1, just set whatever components you have as parents to it. Example, normally you would do something like Label1.Parent := frmDesign. Instead, do Label1.Parent := ScrollBox1. Simple as that! 

Put this code right under the ScrollBox1 code.
[code]
  // Create Label1.
  Label1 := TLabel.Create(frmDesign);
  Label1.Parent := ScrollBox1; // Place ScrollBox1 as the parent
  Label1.Top := 20;
  Label1.Left := 20;
  Label1.Caption := &#39;Testing ScrollBox1!&#39;;
  Label1.Font.Style := [fsBold];    // Bolds the text.
  // Create CheckBox1.
  CheckBox1 := TCheckBox.Create(frmDesign);
  CheckBox1.Parent := ScrollBox1; // Place ScrollBox1 as the parent.
  CheckBox1.Top := 40;
  CheckBox1.Left := 20;
  CheckBox1.Caption := &#39;Do you find this component useful?&#39;;
  CheckBox1.Width := 200;
  // Create CheckBox2.
  CheckBox2 := TCheckBox.Create(frmDesign);
  CheckBox2.Parent := ScrollBox1; // Place ScrollBox1 as the parent.
  CheckBox2.Top := 80;
  CheckBox2.Left := 20;
  CheckBox2.Caption := &#39;Will you be putting this in your future programs?&#39;;
  CheckBox2.Width := 250;
  // Create CheckBox3.
  CheckBox3 := TCheckBox.Create(frmDesign);
  CheckBox3.Parent := ScrollBox1; // Place ScrollBox1 as the parent.
  CheckBox3.Top := 120;
  CheckBox3.Left := 20;
  CheckBox3.Caption := &#39;Did you know you can change the background color&#39; +
                       &#39; of your scrollbox?&#39;;
  CheckBox3.Width := 360;
  // Create CheckBox4.
  CheckBox4 := TCheckBox.Create(frmDesign);
  CheckBox4.Parent := ScrollBox1; // Place ScrollBox1 as the parent.
  CheckBox4.Top := 160;
  CheckBox4.Left := 20;
  CheckBox4.Caption := &#39;Did you like this tutorial?&#39;;
  CheckBox4.Width := 200;
  // Create CheckBox5.
  CheckBox5 := TCheckBox.Create(frmDesign);
  CheckBox5.Parent := ScrollBox1; // Place ScrollBox1 as the parent.
  CheckBox5.Top := 200;
  CheckBox5.Left := 20;
  CheckBox5.Caption := &#39;Was this tutorial informative enough?&#39;;
  CheckBox5.Width := 200;
[/code]

[b]5. Your code should now look exactly like this:[/b]
[code]
{ Program created by Ron to explain the TScrollBox component. }

program TScrollBoxTutorialByRon;

var
  // InitForm variables.
  frmDesign : TForm;
  ScrollBox1 : TScrollBox;
  CheckBox1,CheckBox2,CheckBox3,CheckBox4,CheckBox5 : TCheckBox;
  Label1 : TLabel;

procedure InitForm;
begin
  // Create frmDesign - Main Form.
  frmDesign := CreateForm;
  frmDesign.Position := poDesktopCenter; // Centers the form to middle of screen.
  frmDesign.Caption := &#39;Testing TScrollBox - Tutorial by Ron&#39;; // Form title.
  frmDesign.Width := 350;
  frmDesign.Height := 300;
  frmDesign.BorderStyle := bsSingle; // Makes form not resizable.
  frmDesign.BorderIcons := [biMinimize,biSystemMenu]; // Disables maximize.
  // Create ScrollBox1.
  ScrollBox1 := TScrollBox.Create(frmDesign);
  ScrollBox1.Parent := frmDesign;
  ScrollBox1.Height := 150;
  ScrollBox1.Width := 300;
  ScrollBox1.BorderStyle := bsNone; // Gets rid of ugly border.
  ScrollBox1.Color := 14258279;     // Changes color.
  // Create Label1.
  Label1 := TLabel.Create(frmDesign);
  Label1.Parent := ScrollBox1; // Place ScrollBox1 as the parent
  Label1.Top := 20;
  Label1.Left := 20;
  Label1.Caption := &#39;Testing ScrollBox1!&#39;;
  Label1.Font.Style := [fsBold];    // Bolds the text.
  // Create CheckBox1.
  CheckBox1 := TCheckBox.Create(frmDesign);
  CheckBox1.Parent := ScrollBox1; // Place ScrollBox1 as the parent.
  CheckBox1.Top := 40;
  CheckBox1.Left := 20;
  CheckBox1.Caption := &#39;Do you find this component useful?&#39;;
  CheckBox1.Width := 200;
  // Create CheckBox2.
  CheckBox2 := TCheckBox.Create(frmDesign);
  CheckBox2.Parent := ScrollBox1; // Place ScrollBox1 as the parent.
  CheckBox2.Top := 80;
  CheckBox2.Left := 20;
  CheckBox2.Caption := &#39;Will you be putting this in your future programs?&#39;;
  CheckBox2.Width := 250;
  // Create CheckBox3.
  CheckBox3 := TCheckBox.Create(frmDesign);
  CheckBox3.Parent := ScrollBox1; // Place ScrollBox1 as the parent.
  CheckBox3.Top := 120;
  CheckBox3.Left := 20;
  CheckBox3.Caption := &#39;Did you know you can change the background color&#39; +
                       &#39; of your scrollbox?&#39;;
  CheckBox3.Width := 360;
  // Create CheckBox4.
  CheckBox4 := TCheckBox.Create(frmDesign);
  CheckBox4.Parent := ScrollBox1; // Place ScrollBox1 as the parent.
  CheckBox4.Top := 160;
  CheckBox4.Left := 20;
  CheckBox4.Caption := &#39;Did you like this tutorial?&#39;;
  CheckBox4.Width := 200;
  // Create CheckBox5.
  CheckBox5 := TCheckBox.Create(frmDesign);
  CheckBox5.Parent := ScrollBox1; // Place ScrollBox1 as the parent.
  CheckBox5.Top := 200;
  CheckBox5.Left := 20;
  CheckBox5.Caption := &#39;Was this tutorial informative enough?&#39;;
  CheckBox5.Width := 200;
end;

// Safe call to the InitForm procedure.
procedure SafeInitForm;
var
  v: TVariantArray;
begin
  setarraylength(v, 0);
  ThreadSafeCall(&#39;InitForm&#39;, v);
end;

procedure ShowFormModal;
begin
  frmDesign.ShowModal;
end;

// Safe call to the ShowFormModal procedure.
procedure SafeShowFormModal;
var
  v: TVariantArray;
begin
  setarraylength(v, 0);
  ThreadSafeCall(&#39;ShowFormModal&#39;, v);
end;

// Call all the safe procedures and then free the form from memory.
procedure MainInitForm;
begin
  SafeInitForm;
  SafeShowFormModal;
  FreeForm(frmDesign);
end;

begin
  ClearDebug;
  MainInitForm;
end.
[/code]

[b]6. Explaining some of its properties.[/b]

BorderStyle - To set a borderstyle for it. Ex: bsNone, bsSingle, etc.
Color - To set the background color. Ex: 255 will make the background red.
CTL3D - If false, it won&#39;t look cool 3D like. 
Cursor - To change the cursor when the mouse is over it. Ex. crHandPoint
Font - To change to the font, font-color, font-style, font-size, etc.
HorzScrollBar - To set its increment, position, scrollpos, and to set its visibility.
VertScrollBar - Same as HorzScrollBar except that it&#39;s vertical. :P

More common properties also exist such as visible,top,left,width,height,taborder,tabstop,hint,showhint, etc. 

~Ron :)</description>
    
    <lastBuildDate>Mon, 05 Feb 2007 05:02:15 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/tscrollbox-form-component-in-scar-by-ron/55102.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>TScrollBox Form Component In Scar by Ron</title>
        <dc:creator><![CDATA[@usernamelol .Fusion]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/usernamelol">@usernamelol</a> wrote:</p>
          <blockquote>
              <p>Woah thats amazing, awesome! <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tscrollbox-form-component-in-scar-by-ron/55102/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tscrollbox-form-component-in-scar-by-ron/55102/3</link>
        <pubDate>Mon, 05 Feb 2007 05:02:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-55102-3</guid>
        <source url="https://forum.moparisthebest.com/t/tscrollbox-form-component-in-scar-by-ron/55102.rss">TScrollBox Form Component In Scar by Ron</source>
      </item>
      <item>
        <title>TScrollBox Form Component In Scar by Ron</title>
        <dc:creator><![CDATA[@Janilabo Janilabo]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/janilabo">@Janilabo</a> wrote:</p>
          <blockquote>
              <p>Awesome Ron! <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"> I wonder how the hell do you find these things…</p>
<p>Very neat Tutorial, thanks. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tscrollbox-form-component-in-scar-by-ron/55102/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tscrollbox-form-component-in-scar-by-ron/55102/2</link>
        <pubDate>Mon, 05 Feb 2007 04:54:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-55102-2</guid>
        <source url="https://forum.moparisthebest.com/t/tscrollbox-form-component-in-scar-by-ron/55102.rss">TScrollBox Form Component In Scar by Ron</source>
      </item>
      <item>
        <title>TScrollBox Form Component In Scar by Ron</title>
        <dc:creator><![CDATA[@Ron Ron]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ron">@Ron</a> wrote:</p>
          <blockquote>
              <p>[center][size=15pt]<span class="bbcode-b">TScrollBox Form Component In Scar</span>[/size]<br>
by Ron[/center]</p>
<p>Another hidden component within scar. The TScrollBox will let you scroll information in a small form which is useful if the information you’re scrolling is too wide or tall to fit. Here is a picture of the form you will be creating!</p>
<p><span class="bbcode-b">Screenshot:</span><br>
<img src="http://img245.imageshack.us/img245/7108/tscrollboxtutorialbyronhz9.png" alt width="" height=""></p>
<p><span class="bbcode-b">1. Start out with a regular form like this one:</span></p>
<pre><code class="lang-auto">{ Program created by Ron to explain the TScrollBox component. }

program TScrollBoxTutorialByRon;

var
  // InitForm variables.
  frmDesign : TForm;

procedure InitForm;
begin
  // Create frmDesign - Main Form.
  frmDesign := CreateForm;
  frmDesign.Position := poDesktopCenter; // Centers the form to middle of screen.
  frmDesign.Caption := 'Testing TScrollBox - Tutorial by Ron'; // Form title.
  frmDesign.Width := 350;
  frmDesign.Height := 300;
  frmDesign.BorderStyle := bsSingle; // Makes form not resizable.
  frmDesign.BorderIcons := [biMinimize,biSystemMenu]; // Disables maximize.
end;

// Safe call to the InitForm procedure.
procedure SafeInitForm;
var
  v: TVariantArray;
begin
  setarraylength(v, 0);
  ThreadSafeCall('InitForm', v);
end;

procedure ShowFormModal;
begin
  frmDesign.ShowModal;
end;

// Safe call to the ShowFormModal procedure.
procedure SafeShowFormModal;
var
  v: TVariantArray;
begin
  setarraylength(v, 0);
  ThreadSafeCall('ShowFormModal', v);
end;

// Call all the safe procedures and then free the form from memory.
procedure MainInitForm;
begin
  SafeInitForm;
  SafeShowFormModal;
  FreeForm(frmDesign);
end;

begin
  ClearDebug;
  MainInitForm;
end.</code></pre>
<p><span class="bbcode-b">2. Now to add a TScrollBox and something to put in the box. </span></p>
<p>Under the variables, insert this code. This will declare a ScrollBox, 5 CheckBoxes, and a Label.</p>
<pre><code class="lang-auto">  ScrollBox1 : TScrollBox;
  CheckBox1,CheckBox2,CheckBox3,CheckBox4,CheckBox5 : TCheckBox;
  Label1 : TLabel;</code></pre>
<p><span class="bbcode-b">3. In the InitForm under the frmDesign code, place this code in to setup the ScrollBox1.</span><br>
This creates the TScrollBox, sets it to the main form, and sets its width/height.</p>
<pre><code class="lang-auto">  // Create ScrollBox1.
  ScrollBox1 := TScrollBox.Create(frmDesign);
  ScrollBox1.Parent := frmDesign;
  ScrollBox1.Height := 150;
  ScrollBox1.Width := 300;
  ScrollBox1.BorderStyle := bsNone; // Gets rid of ugly border.
  ScrollBox1.Color := 14258279;     // Changes color.</code></pre>
<p><span class="bbcode-b">4. Now you’re ready to put something in the ScrollBox1. </span></p>
<p>Let’s add the components we declared before and let’s put them INSIDE the ScrollBox1. Woo, feeling crazy today. To put anything inside the ScrollBox1, just set whatever components you have as parents to it. Example, normally you would do something like Label1.Parent := frmDesign. Instead, do Label1.Parent := ScrollBox1. Simple as that!</p>
<p>Put this code right under the ScrollBox1 code.</p>
<pre><code class="lang-auto">  // Create Label1.
  Label1 := TLabel.Create(frmDesign);
  Label1.Parent := ScrollBox1; // Place ScrollBox1 as the parent
  Label1.Top := 20;
  Label1.Left := 20;
  Label1.Caption := 'Testing ScrollBox1!';
  Label1.Font.Style := [fsBold];    // Bolds the text.
  // Create CheckBox1.
  CheckBox1 := TCheckBox.Create(frmDesign);
  CheckBox1.Parent := ScrollBox1; // Place ScrollBox1 as the parent.
  CheckBox1.Top := 40;
  CheckBox1.Left := 20;
  CheckBox1.Caption := 'Do you find this component useful?';
  CheckBox1.Width := 200;
  // Create CheckBox2.
  CheckBox2 := TCheckBox.Create(frmDesign);
  CheckBox2.Parent := ScrollBox1; // Place ScrollBox1 as the parent.
  CheckBox2.Top := 80;
  CheckBox2.Left := 20;
  CheckBox2.Caption := 'Will you be putting this in your future programs?';
  CheckBox2.Width := 250;
  // Create CheckBox3.
  CheckBox3 := TCheckBox.Create(frmDesign);
  CheckBox3.Parent := ScrollBox1; // Place ScrollBox1 as the parent.
  CheckBox3.Top := 120;
  CheckBox3.Left := 20;
  CheckBox3.Caption := 'Did you know you can change the background color' +
                       ' of your scrollbox?';
  CheckBox3.Width := 360;
  // Create CheckBox4.
  CheckBox4 := TCheckBox.Create(frmDesign);
  CheckBox4.Parent := ScrollBox1; // Place ScrollBox1 as the parent.
  CheckBox4.Top := 160;
  CheckBox4.Left := 20;
  CheckBox4.Caption := 'Did you like this tutorial?';
  CheckBox4.Width := 200;
  // Create CheckBox5.
  CheckBox5 := TCheckBox.Create(frmDesign);
  CheckBox5.Parent := ScrollBox1; // Place ScrollBox1 as the parent.
  CheckBox5.Top := 200;
  CheckBox5.Left := 20;
  CheckBox5.Caption := 'Was this tutorial informative enough?';
  CheckBox5.Width := 200;</code></pre>
<p><span class="bbcode-b">5. Your code should now look exactly like this:</span></p>
<pre><code class="lang-auto">{ Program created by Ron to explain the TScrollBox component. }

program TScrollBoxTutorialByRon;

var
  // InitForm variables.
  frmDesign : TForm;
  ScrollBox1 : TScrollBox;
  CheckBox1,CheckBox2,CheckBox3,CheckBox4,CheckBox5 : TCheckBox;
  Label1 : TLabel;

procedure InitForm;
begin
  // Create frmDesign - Main Form.
  frmDesign := CreateForm;
  frmDesign.Position := poDesktopCenter; // Centers the form to middle of screen.
  frmDesign.Caption := 'Testing TScrollBox - Tutorial by Ron'; // Form title.
  frmDesign.Width := 350;
  frmDesign.Height := 300;
  frmDesign.BorderStyle := bsSingle; // Makes form not resizable.
  frmDesign.BorderIcons := [biMinimize,biSystemMenu]; // Disables maximize.
  // Create ScrollBox1.
  ScrollBox1 := TScrollBox.Create(frmDesign);
  ScrollBox1.Parent := frmDesign;
  ScrollBox1.Height := 150;
  ScrollBox1.Width := 300;
  ScrollBox1.BorderStyle := bsNone; // Gets rid of ugly border.
  ScrollBox1.Color := 14258279;     // Changes color.
  // Create Label1.
  Label1 := TLabel.Create(frmDesign);
  Label1.Parent := ScrollBox1; // Place ScrollBox1 as the parent
  Label1.Top := 20;
  Label1.Left := 20;
  Label1.Caption := 'Testing ScrollBox1!';
  Label1.Font.Style := [fsBold];    // Bolds the text.
  // Create CheckBox1.
  CheckBox1 := TCheckBox.Create(frmDesign);
  CheckBox1.Parent := ScrollBox1; // Place ScrollBox1 as the parent.
  CheckBox1.Top := 40;
  CheckBox1.Left := 20;
  CheckBox1.Caption := 'Do you find this component useful?';
  CheckBox1.Width := 200;
  // Create CheckBox2.
  CheckBox2 := TCheckBox.Create(frmDesign);
  CheckBox2.Parent := ScrollBox1; // Place ScrollBox1 as the parent.
  CheckBox2.Top := 80;
  CheckBox2.Left := 20;
  CheckBox2.Caption := 'Will you be putting this in your future programs?';
  CheckBox2.Width := 250;
  // Create CheckBox3.
  CheckBox3 := TCheckBox.Create(frmDesign);
  CheckBox3.Parent := ScrollBox1; // Place ScrollBox1 as the parent.
  CheckBox3.Top := 120;
  CheckBox3.Left := 20;
  CheckBox3.Caption := 'Did you know you can change the background color' +
                       ' of your scrollbox?';
  CheckBox3.Width := 360;
  // Create CheckBox4.
  CheckBox4 := TCheckBox.Create(frmDesign);
  CheckBox4.Parent := ScrollBox1; // Place ScrollBox1 as the parent.
  CheckBox4.Top := 160;
  CheckBox4.Left := 20;
  CheckBox4.Caption := 'Did you like this tutorial?';
  CheckBox4.Width := 200;
  // Create CheckBox5.
  CheckBox5 := TCheckBox.Create(frmDesign);
  CheckBox5.Parent := ScrollBox1; // Place ScrollBox1 as the parent.
  CheckBox5.Top := 200;
  CheckBox5.Left := 20;
  CheckBox5.Caption := 'Was this tutorial informative enough?';
  CheckBox5.Width := 200;
end;

// Safe call to the InitForm procedure.
procedure SafeInitForm;
var
  v: TVariantArray;
begin
  setarraylength(v, 0);
  ThreadSafeCall('InitForm', v);
end;

procedure ShowFormModal;
begin
  frmDesign.ShowModal;
end;

// Safe call to the ShowFormModal procedure.
procedure SafeShowFormModal;
var
  v: TVariantArray;
begin
  setarraylength(v, 0);
  ThreadSafeCall('ShowFormModal', v);
end;

// Call all the safe procedures and then free the form from memory.
procedure MainInitForm;
begin
  SafeInitForm;
  SafeShowFormModal;
  FreeForm(frmDesign);
end;

begin
  ClearDebug;
  MainInitForm;
end.</code></pre>
<p><span class="bbcode-b">6. Explaining some of its properties.</span></p>
<p>BorderStyle - To set a borderstyle for it. Ex: bsNone, bsSingle, etc.<br>
Color - To set the background color. Ex: 255 will make the background red.<br>
CTL3D - If false, it won’t look cool 3D like.<br>
Cursor - To change the cursor when the mouse is over it. Ex. crHandPoint<br>
Font - To change to the font, font-color, font-style, font-size, etc.<br>
HorzScrollBar - To set its increment, position, scrollpos, and to set its visibility.<br>
VertScrollBar - Same as HorzScrollBar except that it’s vertical. <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<p>More common properties also exist such as visible,top,left,width,height,taborder,tabstop,hint,showhint, etc.</p>
<p>~Ron <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/tscrollbox-form-component-in-scar-by-ron/55102/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/tscrollbox-form-component-in-scar-by-ron/55102/1</link>
        <pubDate>Mon, 05 Feb 2007 04:44:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-55102-1</guid>
        <source url="https://forum.moparisthebest.com/t/tscrollbox-form-component-in-scar-by-ron/55102.rss">TScrollBox Form Component In Scar by Ron</source>
      </item>
  </channel>
</rss>
