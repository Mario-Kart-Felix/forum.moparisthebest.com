<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[Hyperion] Dialogue System [Hyperion]</title>
    <link>https://forum.moparisthebest.com/t/hyperion-dialogue-system-hyperion/538136</link>
    <description>To begin with every single dialogue system I&#39;ve used I just haven&#39;t really liked or find them very messy I decided to re-write it and I think mine is pretty good.

Credits:
Me = 85%
Atomic Int = 10%(Used your DialogueEmote class Thanks)
Arham 4 = 5%(Looked at your base gave me some ideas)

Okay now make a new class and name it Dialogue

[code=java]/**
 * Dialogue
 * 
 * Date @ January 5, 2014
 * 
 * Copyright of Dan0194
 */
package org.hyperion.rs2.model.dialogue;

import org.hyperion.rs2.model.NPC;
import org.hyperion.rs2.model.Player;

public class Dialogue {
	
	/**
	 * checks if they need to continue dialogue
	 */
	private boolean continueDialogue;

	/**
	 * Actually sends the interface, puts text on screen, gets title
	 * and sends the media to the npc
	 */
	public Dialogue sendDialogue(Player player, NPC npc, int expression, boolean continueDialogue, String... text) {
        player.getActionSender().sendChatInterface(getNpcDialogueFormula(text.length));
        player.getActionSender().sendString(getNpcDialogueFormula(text.length)+2, npc.getDefinition().getName());
        player.getActionSender().sendDialogueAnimation(expression, getNpcDialogueFormula(text.length) + 1);
        player.getActionSender().sendNPCDialogueHead(npc.getDefinition().getId(), getNpcDialogueFormula(text.length)+1);
        this.continueDialogue = continueDialogue;
        for(int i = 0; i &lt; text.length; i++) {
        	player.getActionSender().sendString(getNpcDialogueFormula(text.length) + 3 + i, text[i]);
        }
		return this;
	}

	/**
	 * Sends the interface, puts text on screen, gets title
	 * and sends the media to the player
	 */	
	public Dialogue sendPlayerDialogue(Player player, int expression, boolean continueDialogue, String... text) {
		player.getActionSender().sendString(getPlayerDialogueFormula(text.length) + 2, player.getName());
		player.getActionSender().sendDialogueAnimation(expression, getPlayerDialogueFormula(text.length) + 1);
		player.getActionSender().sendPlayerDialogueHead(getPlayerDialogueFormula(text.length) + 1);
		player.getActionSender().sendChatInterface(getPlayerDialogueFormula(text.length));
		this.continueDialogue = continueDialogue;
		for (int i = 0; i &lt; text.length; i++) {
			player.getActionSender().sendString(getPlayerDialogueFormula(text.length) + 3 + i, text[i]);
	}
		return this;
}
	
	/**
	 * Writes out the Option interface, Strings and title
	 */
	public Dialogue SendOption(Player player, String... options) {
		player.getActionSender().sendString(getOptionDialogueFormula(options.length-1) + 1, &quot;Choose An Option&quot;);
		player.getActionSender().sendChatInterface(getOptionDialogueFormula(options.length-1));
		for(int i = 0; i &lt; options.length; i++) {
			player.getActionSender().sendString(getOptionDialogueFormula(options.length-1) + 2 + i, options[i]);
		}
		return this;
	}
	
	/**
	 * Formula for the npc dialogue lines
	 */
	private static final int getNpcDialogueFormula(int i) {
		return 4882 + (i - 1)+(i * i) + i / 2 - 1 - i / 4 - i / 4;
	}
	
	/**
	 * Formula for the player dialogue lines
	 */
	private static final int getPlayerDialogueFormula(int i) {
		return 968 + (i - 1)+(i * i) + i / 2 - 1 - i / 4 - i / 4;
	}
	
	/**
	 * Formula for the option lines
	 */
	private static final int getOptionDialogueFormula(int i) {
		return 2459 + (i - 1)+(i * i) + i / 2 - 1 - i / 4 - i / 4 + 5 * (i - 1);
	}
	
	/**
	 * @return continueDialogue
	 */
	public boolean isContinuingDialogue() {
		return continueDialogue;
	}
	
}
[/code]

This file is for actually creating the interface, putting the strings on etc. Even made a nifty formula to shorten the code length.

Another new class and name it DialogueEmotion

[code=java]package org.hyperion.rs2.model.dialogue;

/**
 * @author AtomicInt_
 *
 *         Dialogue emotes.
 */
public final class DialogueEmotion {

	public static final int ANGRY_1 = 614;
    public static final int ANGRY_2 = 615;
    public static final int ANGRY_3 = 616;
    public static final int ANGRY_4 = 617;
    public static final int ANNOYED = 595;
    public static final int CALM = 589;
    public static final int CALM_CONTINUED = 590;
    public static final int DEFAULT = 591;
    public static final int DELIGHTED_EVIL = 594;
    public static final int DISORIENTED_LEFT = 600;
    public static final int DISORIENTED_RIGHT = 601;
    public static final int DISTRESSED = 596;
    public static final int DISTRESSED_CONTINUED = 597;
    public static final int EVIL = 592;
    public static final int EVIL_CONTINUED = 593;
    public static final int EVIL_LAUGH_SHORT = 609;
    public static final int HAPPY = 588;
    public static final int LAUGHING = 605;
    public static final int LAUGHING_2 = 608;
    public static final int LONGER_LAUGHING = 606;
    public static final int LONGER_LAUGHING_2 = 607;
    public static final int NEAR_TEARS = 598;
    public static final int NEAR_TEARS_2 = 613;
    public static final int OTHER = 612;
    public static final int PLAIN_EVIL = 604;
    public static final int SAD = 599;
    public static final int SLEEPY = 603;
    public static final int SLIGHTLY_SAD = 610;
    public static final int UNINTERESTED = 602;
    public static final int VERY_SAD = 611;
}[/code]

This file is just all difference constants containing different ids for what ever emote you want the npc to do in the chatbox.

Now make another new class and name it DialogueHandler 

[code=java]/**
 * DialogueHandler
 * 
 * Date @ January 5, 2014
 * 
 * Copyright of Dan0194
 */
package org.hyperion.rs2.model.dialogue;


import java.util.HashMap;

import org.hyperion.rs2.model.NPC;
import org.hyperion.rs2.model.Player;

public class DialogueHandler {
	

	/**
	 * The Amount of Dialogues 
	 */
	private HashMap&lt;Integer, DialogueType&gt; dialogueType = new HashMap&lt;Integer, DialogueType&gt;();
	
	/**
	 * The Current Dialogue the player is on
	 */
	private NPC currentDialogue;
	
	/**
	 * Setter @for DialogueHandler
	 */
	private static DialogueHandler dialogueHandler = new DialogueHandler();

	/**
	 * Sends the npcDialogue and checks if it needs a reset
	 */
	public DialogueHandler sendDialogue(Player player, NPC npc) {
		needReset(player, npc);
		this.currentDialogue = npc;
		this.dialogueType.get(getCurrentDialogue().getDefinition().getId()).getDialogue(player, npc);
		return this;
	}
	
	public DialogueHandler sendOptionDialogue(Player player, int button) {
		this.dialogueType.get(getCurrentDialogue().getDefinition().getId()).getOptions(player, button);
		return this;
	}
	
	/**
	 * Checks if the dialogue needs to be continued
	 */
	public void continueDialogue(Player player) {
		if (player.getDialogue().isContinuingDialogue()) {
			player.setNpcDialogue(player.getNpcDialogue() + 1);
			dialogueType.get(getCurrentDialogue().getDefinition().getId()).getDialogue(player, getCurrentDialogue());
		} else {
			player.setNpcDialogue(0);
			dialogueType.get(getCurrentDialogue().getDefinition().getId()).closeDialogue(player);
		}
	}
	
	/**
	 * Sets a empty DialogueType to a new Dialogue Type
	 */
	public void bind(int id, DialogueType dialogueType) {
		this.dialogueType.put(id, dialogueType);
	}
	
	/**
	 * Checks if the npc they click is the same as the current
	 */
	private void needReset(Player player, NPC npc) {
		player.setNpcDialogue(currentDialogue == npc ? player.getNpcDialogue() : 0);
	}
	
	/**
	 * @return currentDialogue
	 */
	public NPC getCurrentDialogue() {
		return currentDialogue;
	}
	
	/**
	 * @return dialogueHandler
	 */
	public static DialogueHandler getDialogueHandler() {
		return dialogueHandler;
	}
}
[/code]

And finally last class you need is

[code=java]/**
 * DialogueType
 * 
 * Date @ January 5, 2014
 * 
 * Copyright of Dan0194
 */
package org.hyperion.rs2.model.dialogue;

import org.hyperion.rs2.model.NPC;
import org.hyperion.rs2.model.Player;

public interface DialogueType {
	
	/**
	 * Every mob that has dialogue gets this void
	 */
	void getDialogue(Player player, NPC npc);
	
	/**
	 * All Options are handled here
	 */
	void getOptions(Player player, int button);

	/**
	 * Every mob that has dialogue gets this void
	 */
	void closeDialogue(Player player);


}[/code]

Now that you&#39;re done that Go into your world.java and add this method

[code=java]private void loadDialogue() throws IOException, ClassNotFoundException, InstantiationException, IllegalAccessException {
		FileInputStream fis = new FileInputStream(&quot;data/dialogue.cfg&quot;);
		try {
			ConfigurationParser p = new ConfigurationParser(fis);
			Map&lt;String, Map&lt;String, String&gt;&gt; complexMappings = p.getComplexMappings();
			if(complexMappings.containsKey(&quot;npc&quot;)) {
				Map&lt;Class&lt;?&gt;, Object&gt; loadedHandlers = new HashMap&lt;Class&lt;?&gt;, Object&gt;();
				for(Map.Entry&lt;String, String&gt; handler : complexMappings.get(&quot;npc&quot;).entrySet()) {
					int id = Integer.parseInt(handler.getKey());
					Class&lt;?&gt; handlerClass = Class.forName(handler.getValue());
					Object handlerInstance;
					if(loadedHandlers.containsKey(handlerClass)) {
						handlerInstance = loadedHandlers.get(loadedHandlers.get(handlerClass));
					} else {
						handlerInstance = handlerClass.newInstance();
					}
					DialogueHandler.getDialogueHandler().bind(id, (DialogueType) handlerInstance);
					logger.fine(&quot;Bound &quot; + handler.getValue() + &quot; to opcode : &quot; + id);
				}
			}
		} finally {
			fis.close();
		}
	}[/code]

And load this method up at the start

Now in your data folder make a new configuration file and name it dialogue and put this in

[code=xml]
#[id] inside is the npcId
#Hans
npc[0]: org.hyperion.rs2.model.dialogue.dialogues.Hans[/code]

Now make a new package in your rs2.model.dialogue

and name it dialogues

And whenever you want to make an npc have a dialogue, make a new class and name it whatever there name is so for example Hans and also add it to the config as

[code=xml]npc[id] org.hyperion.rs2.model.dialogue.dialogues.FILE_NAME[/code]

[code=java]
	package org.hyperion.rs2.model.dialogue.dialogues;

import org.hyperion.rs2.model.NPC;
import org.hyperion.rs2.model.Player;
import org.hyperion.rs2.model.dialogue.DialogueEmotion;
import org.hyperion.rs2.model.dialogue.DialogueHandler;
import org.hyperion.rs2.model.dialogue.DialogueType;

public class Daquarius implements DialogueType {

	@Override
	public void getDialogue(Player player, NPC npc) {
		switch(player.getNpcDialogue()) {
		case 0:
			player.getDialogue().sendDialogue(player, npc, DialogueEmotion.EVIL_LAUGH_SHORT, true, 
			&quot;This World Will be Mine!!!&quot;);
			break;
		case 1:
			player.getDialogue().SendOption(player, &quot;I Will Stop You!&quot;, &quot;Fine take it. idc&quot;);
			break;
		case 2:
			player.getDialogue().sendPlayerDialogue(player, DialogueEmotion.LAUGHING, false,
			&quot;Meet me at falador at 2 O-clock&quot;);
			break;
		}
		
	}
	
	@Override
	public void getOptions(Player player, int button) {
		switch(player.getNpcDialogue()) {
		case 1:
			switch(button) {
			case 2461:
				player.setNpcDialogue(player.getNpcDialogue() + 1);
					DialogueHandler.getDialogueHandler().sendDialogue(player, 
													DialogueHandler.getDialogueHandler().getCurrentDialogue());
				break;
			case 2462:
				closeDialogue(player);
				break;
			}
			break;
		}
	}

	@Override
	public void closeDialogue(Player player) {
		player.getActionSender().sendRemoveAllInterfaces();
		
	}


}package org.hyperion.rs2.model.dialogue.dialogues;

import org.hyperion.rs2.model.NPC;
import org.hyperion.rs2.model.Player;
import org.hyperion.rs2.model.dialogue.DialogueEmotion;
import org.hyperion.rs2.model.dialogue.DialogueHandler;
import org.hyperion.rs2.model.dialogue.DialogueType;

public class Hans implements DialogueType {

	@Override
	public void getDialogue(Player player, NPC npc) {
		switch(player.getNpcDialogue()) {
		case 0:
			player.getDialogue().sendDialogue(player, npc, DialogueEmotion.EVIL_LAUGH_SHORT, true, 
			&quot;This World Will be Mine!!!&quot;);
			break;
		case 1:
			player.getDialogue().SendOption(player, &quot;I Will Stop You!&quot;, &quot;Fine take it. idc&quot;);
			break;
		case 2:
			player.getDialogue().sendPlayerDialogue(player, DialogueEmotion.LAUGHING, false,
			&quot;Meet me at falador at 2 O-clock&quot;);
			break;
		}
		
	}
	
	@Override
	public void getOptions(Player player, int button) {
		switch(player.getNpcDialogue()) {
		case 1:
			switch(button) {
			case 2461:
				player.setNpcDialogue(player.getNpcDialogue() + 1);
					DialogueHandler.getDialogueHandler().sendDialogue(player, 
						DialogueHandler.getDialogueHandler().getCurrentDialogue());
				break;
			case 2462:
				closeDialogue(player);
				break;
			}
			break;
		}
	}

	@Override
	public void closeDialogue(Player player) {
		player.getActionSender().sendRemoveAllInterfaces();
		
	}
}
[/code]

This file implements our dialogueType interface and sends all of the data to our sendDialogue method to actually put on the screen

That&#39;s it the reason why I&#39;m making new classes for each new npc is because if you put it all in one file it starts getting very messy.</description>
    
    <lastBuildDate>Mon, 06 Jan 2014 18:00:40 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/hyperion-dialogue-system-hyperion/538136.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[Hyperion] Dialogue System [Hyperion]</title>
        <dc:creator><![CDATA[@Ambokile Ambokile]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ambokile">@Ambokile</a> wrote:</p>
          <blockquote>
              <p>Here is a better image:<br>
<img src="http://i.imgur.com/1tmtLeU.png" alt width="" height=""></p>
<p>Strucker, it tells you which collection object is the best to use.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/hyperion-dialogue-system-hyperion/538136/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/hyperion-dialogue-system-hyperion/538136/8</link>
        <pubDate>Mon, 06 Jan 2014 18:00:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-538136-8</guid>
        <source url="https://forum.moparisthebest.com/t/hyperion-dialogue-system-hyperion/538136.rss">[Hyperion] Dialogue System [Hyperion]</source>
      </item>
      <item>
        <title>[Hyperion] Dialogue System [Hyperion]</title>
        <dc:creator><![CDATA[@strucker Strucker]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/strucker">@strucker</a> wrote:</p>
          <blockquote>
              <p>[quote=“Clawz fury, post:6, topic:538136”][quote author=Ambokile link=topic=656955.msg4395303#msg4395303 date=1388941024]<br>
<img src="http://www.sergiy.ca/img/doc/java-map-collection-cheat-sheet.gif" alt width="" height=""><br>
[/quote]<br>
this helps a lot, thanks[/quote]i want to know what that is? anybody  minds explaining or making a tut? please!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/hyperion-dialogue-system-hyperion/538136/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/hyperion-dialogue-system-hyperion/538136/7</link>
        <pubDate>Mon, 06 Jan 2014 17:18:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-538136-7</guid>
        <source url="https://forum.moparisthebest.com/t/hyperion-dialogue-system-hyperion/538136.rss">[Hyperion] Dialogue System [Hyperion]</source>
      </item>
      <item>
        <title>[Hyperion] Dialogue System [Hyperion]</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="4" data-topic="538136">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/ambokile/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Ambokile:</div>
<blockquote>
<p><img src="http://www.sergiy.ca/img/doc/java-map-collection-cheat-sheet.gif" alt></p>
</blockquote>
</aside>
<p>this helps a lot, thanks</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/hyperion-dialogue-system-hyperion/538136/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/hyperion-dialogue-system-hyperion/538136/6</link>
        <pubDate>Sun, 05 Jan 2014 21:48:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-538136-6</guid>
        <source url="https://forum.moparisthebest.com/t/hyperion-dialogue-system-hyperion/538136.rss">[Hyperion] Dialogue System [Hyperion]</source>
      </item>
      <item>
        <title>[Hyperion] Dialogue System [Hyperion]</title>
        <dc:creator><![CDATA[@Dan0194 Dan0194]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/dan0194">@Dan0194</a> wrote:</p>
          <blockquote>
              <p>[quote=“Ambokile, post:4, topic:538136”]It looks really clean, good job. If you really want to challenge yourself, try implementing it into PI or DeltaScape (it will probably benefit a lot more people, although those people are likely not the ones you are aiming to benefit.)</p>
<p>I always use this when confused about which map type to use:<br>
<img src="http://www.sergiy.ca/img/doc/java-map-collection-cheat-sheet.gif" alt width="" height="">[/quote]</p>
<p>Wow thanks for the diagram that will really help me with picking the correct map.</p>
<p>-Added System for Option Dialogues<br>
-Added System for Player Dialogues</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/hyperion-dialogue-system-hyperion/538136/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/hyperion-dialogue-system-hyperion/538136/5</link>
        <pubDate>Sun, 05 Jan 2014 17:10:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-538136-5</guid>
        <source url="https://forum.moparisthebest.com/t/hyperion-dialogue-system-hyperion/538136.rss">[Hyperion] Dialogue System [Hyperion]</source>
      </item>
      <item>
        <title>[Hyperion] Dialogue System [Hyperion]</title>
        <dc:creator><![CDATA[@Ambokile Ambokile]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ambokile">@Ambokile</a> wrote:</p>
          <blockquote>
              <p>It looks really clean, good job. If you really want to challenge yourself, try implementing it into PI or DeltaScape (it will probably benefit a lot more people, although those people are likely not the ones you are aiming to benefit.)</p>
<p>I always use this when confused about which map type to use:<br>
<img src="http://www.sergiy.ca/img/doc/java-map-collection-cheat-sheet.gif" alt width="" height=""></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/hyperion-dialogue-system-hyperion/538136/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/hyperion-dialogue-system-hyperion/538136/4</link>
        <pubDate>Sun, 05 Jan 2014 16:57:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-538136-4</guid>
        <source url="https://forum.moparisthebest.com/t/hyperion-dialogue-system-hyperion/538136.rss">[Hyperion] Dialogue System [Hyperion]</source>
      </item>
      <item>
        <title>[Hyperion] Dialogue System [Hyperion]</title>
        <dc:creator><![CDATA[@Dan0194 Dan0194]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/dan0194">@Dan0194</a> wrote:</p>
          <blockquote>
              <p>[quote=“Clawz fury, post:2, topic:538136”]great job but a few concerns</p>
<p>[ul][li]why are you using a LinkedHashMap instead of the normal HashMap?[/li]<br>
[li]your DialogueHandler instance should be private, learning to use access modifiers appropriately will make your code better for other users who aren’t familiar with your code[/li]<br>
[li]design is a bit awkward (between the Dialogue/DialogueHandler classes)[/li][/ul]</p>
<p>seems like you’ve learned a lot dude this is really great :)[/quote]</p>
<p>Thanks <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"> And also thanks for the help.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/hyperion-dialogue-system-hyperion/538136/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/hyperion-dialogue-system-hyperion/538136/3</link>
        <pubDate>Sun, 05 Jan 2014 16:07:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-538136-3</guid>
        <source url="https://forum.moparisthebest.com/t/hyperion-dialogue-system-hyperion/538136.rss">[Hyperion] Dialogue System [Hyperion]</source>
      </item>
      <item>
        <title>[Hyperion] Dialogue System [Hyperion]</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>great job but a few concerns</p>
<p>[ul][li]why are you using a LinkedHashMap instead of the normal HashMap?[/li]<br>
[li]your DialogueHandler instance should be private, learning to use access modifiers appropriately will make your code better for other users who aren’t familiar with your code[/li]<br>
[li]design is a bit awkward (between the Dialogue/DialogueHandler classes)[/li][/ul]</p>
<p>seems like you’ve learned a lot dude this is really great <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/hyperion-dialogue-system-hyperion/538136/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/hyperion-dialogue-system-hyperion/538136/2</link>
        <pubDate>Sun, 05 Jan 2014 09:26:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-538136-2</guid>
        <source url="https://forum.moparisthebest.com/t/hyperion-dialogue-system-hyperion/538136.rss">[Hyperion] Dialogue System [Hyperion]</source>
      </item>
      <item>
        <title>[Hyperion] Dialogue System [Hyperion]</title>
        <dc:creator><![CDATA[@Dan0194 Dan0194]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/dan0194">@Dan0194</a> wrote:</p>
          <blockquote>
              <p>To begin with every single dialogue system I’ve used I just haven’t really liked or find them very messy I decided to re-write it and I think mine is pretty good.</p>
<p>Credits:<br>
Me = 85%<br>
Atomic Int = 10%(Used your DialogueEmote class Thanks)<br>
Arham 4 = 5%(Looked at your base gave me some ideas)</p>
<p>Okay now make a new class and name it Dialogue</p>
<p>[code=java]/**</p>
<ul>
<li>Dialogue</li>
<li>
</li>
<li>Date @ January 5, 2014</li>
<li>
</li>
<li>Copyright of Dan0194<br>
*/<br>
package org.hyperion.rs2.model.dialogue;</li>
</ul>
<p>import org.hyperion.rs2.model.NPC;<br>
import org.hyperion.rs2.model.Player;</p>
<p>public class Dialogue {</p>
<pre><code>/**
 * checks if they need to continue dialogue
 */
private boolean continueDialogue;

/**
 * Actually sends the interface, puts text on screen, gets title
 * and sends the media to the npc
 */
public Dialogue sendDialogue(Player player, NPC npc, int expression, boolean continueDialogue, String... text) {
    player.getActionSender().sendChatInterface(getNpcDialogueFormula(text.length));
    player.getActionSender().sendString(getNpcDialogueFormula(text.length)+2, npc.getDefinition().getName());
    player.getActionSender().sendDialogueAnimation(expression, getNpcDialogueFormula(text.length) + 1);
    player.getActionSender().sendNPCDialogueHead(npc.getDefinition().getId(), getNpcDialogueFormula(text.length)+1);
    this.continueDialogue = continueDialogue;
    for(int i = 0; i &lt; text.length; i++) {
    	player.getActionSender().sendString(getNpcDialogueFormula(text.length) + 3 + i, text[i]);
    }
	return this;
}

/**
 * Sends the interface, puts text on screen, gets title
 * and sends the media to the player
 */	
public Dialogue sendPlayerDialogue(Player player, int expression, boolean continueDialogue, String... text) {
	player.getActionSender().sendString(getPlayerDialogueFormula(text.length) + 2, player.getName());
	player.getActionSender().sendDialogueAnimation(expression, getPlayerDialogueFormula(text.length) + 1);
	player.getActionSender().sendPlayerDialogueHead(getPlayerDialogueFormula(text.length) + 1);
	player.getActionSender().sendChatInterface(getPlayerDialogueFormula(text.length));
	this.continueDialogue = continueDialogue;
	for (int i = 0; i &lt; text.length; i++) {
		player.getActionSender().sendString(getPlayerDialogueFormula(text.length) + 3 + i, text[i]);
}
	return this;
</code></pre>
<p>}</p>
<pre><code>/**
 * Writes out the Option interface, Strings and title
 */
public Dialogue SendOption(Player player, String... options) {
	player.getActionSender().sendString(getOptionDialogueFormula(options.length-1) + 1, "Choose An Option");
	player.getActionSender().sendChatInterface(getOptionDialogueFormula(options.length-1));
	for(int i = 0; i &lt; options.length; i++) {
		player.getActionSender().sendString(getOptionDialogueFormula(options.length-1) + 2 + i, options[i]);
	}
	return this;
}

/**
 * Formula for the npc dialogue lines
 */
private static final int getNpcDialogueFormula(int i) {
	return 4882 + (i - 1)+(i * i) + i / 2 - 1 - i / 4 - i / 4;
}

/**
 * Formula for the player dialogue lines
 */
private static final int getPlayerDialogueFormula(int i) {
	return 968 + (i - 1)+(i * i) + i / 2 - 1 - i / 4 - i / 4;
}

/**
 * Formula for the option lines
 */
private static final int getOptionDialogueFormula(int i) {
	return 2459 + (i - 1)+(i * i) + i / 2 - 1 - i / 4 - i / 4 + 5 * (i - 1);
}

/**
 * @return continueDialogue
 */
public boolean isContinuingDialogue() {
	return continueDialogue;
}
</code></pre>
<p>}<br>
[/code]</p>
<p>This file is for actually creating the interface, putting the strings on etc. Even made a nifty formula to shorten the code length.</p>
<p>Another new class and name it DialogueEmotion</p>
<p>[code=java]package org.hyperion.rs2.model.dialogue;</p>
<p>/**</p>
<ul>
<li>
<span class="mention">@author</span> AtomicInt_</li>
<li>
</li>
<li>
<pre><code>    Dialogue emotes.
</code></pre>
</li>
</ul>
<p>*/<br>
public final class DialogueEmotion {</p>
<pre><code>public static final int ANGRY_1 = 614;
public static final int ANGRY_2 = 615;
public static final int ANGRY_3 = 616;
public static final int ANGRY_4 = 617;
public static final int ANNOYED = 595;
public static final int CALM = 589;
public static final int CALM_CONTINUED = 590;
public static final int DEFAULT = 591;
public static final int DELIGHTED_EVIL = 594;
public static final int DISORIENTED_LEFT = 600;
public static final int DISORIENTED_RIGHT = 601;
public static final int DISTRESSED = 596;
public static final int DISTRESSED_CONTINUED = 597;
public static final int EVIL = 592;
public static final int EVIL_CONTINUED = 593;
public static final int EVIL_LAUGH_SHORT = 609;
public static final int HAPPY = 588;
public static final int LAUGHING = 605;
public static final int LAUGHING_2 = 608;
public static final int LONGER_LAUGHING = 606;
public static final int LONGER_LAUGHING_2 = 607;
public static final int NEAR_TEARS = 598;
public static final int NEAR_TEARS_2 = 613;
public static final int OTHER = 612;
public static final int PLAIN_EVIL = 604;
public static final int SAD = 599;
public static final int SLEEPY = 603;
public static final int SLIGHTLY_SAD = 610;
public static final int UNINTERESTED = 602;
public static final int VERY_SAD = 611;
</code></pre>
<p>}[/code]</p>
<p>This file is just all difference constants containing different ids for what ever emote you want the npc to do in the chatbox.</p>
<p>Now make another new class and name it DialogueHandler</p>
<p>[code=java]/**</p>
<ul>
<li>DialogueHandler</li>
<li>
</li>
<li>Date @ January 5, 2014</li>
<li>
</li>
<li>Copyright of Dan0194<br>
*/<br>
package org.hyperion.rs2.model.dialogue;</li>
</ul>
<p>import java.util.HashMap;</p>
<p>import org.hyperion.rs2.model.NPC;<br>
import org.hyperion.rs2.model.Player;</p>
<p>public class DialogueHandler {</p>
<pre><code>/**
 * The Amount of Dialogues 
 */
private HashMap&lt;Integer, DialogueType&gt; dialogueType = new HashMap&lt;Integer, DialogueType&gt;();

/**
 * The Current Dialogue the player is on
 */
private NPC currentDialogue;

/**
 * Setter @for DialogueHandler
 */
private static DialogueHandler dialogueHandler = new DialogueHandler();

/**
 * Sends the npcDialogue and checks if it needs a reset
 */
public DialogueHandler sendDialogue(Player player, NPC npc) {
	needReset(player, npc);
	this.currentDialogue = npc;
	this.dialogueType.get(getCurrentDialogue().getDefinition().getId()).getDialogue(player, npc);
	return this;
}

public DialogueHandler sendOptionDialogue(Player player, int button) {
	this.dialogueType.get(getCurrentDialogue().getDefinition().getId()).getOptions(player, button);
	return this;
}

/**
 * Checks if the dialogue needs to be continued
 */
public void continueDialogue(Player player) {
	if (player.getDialogue().isContinuingDialogue()) {
		player.setNpcDialogue(player.getNpcDialogue() + 1);
		dialogueType.get(getCurrentDialogue().getDefinition().getId()).getDialogue(player, getCurrentDialogue());
	} else {
		player.setNpcDialogue(0);
		dialogueType.get(getCurrentDialogue().getDefinition().getId()).closeDialogue(player);
	}
}

/**
 * Sets a empty DialogueType to a new Dialogue Type
 */
public void bind(int id, DialogueType dialogueType) {
	this.dialogueType.put(id, dialogueType);
}

/**
 * Checks if the npc they click is the same as the current
 */
private void needReset(Player player, NPC npc) {
	player.setNpcDialogue(currentDialogue == npc ? player.getNpcDialogue() : 0);
}

/**
 * @return currentDialogue
 */
public NPC getCurrentDialogue() {
	return currentDialogue;
}

/**
 * @return dialogueHandler
 */
public static DialogueHandler getDialogueHandler() {
	return dialogueHandler;
}
</code></pre>
<p>}<br>
[/code]</p>
<p>And finally last class you need is</p>
<p>[code=java]/**</p>
<ul>
<li>DialogueType</li>
<li>
</li>
<li>Date @ January 5, 2014</li>
<li>
</li>
<li>Copyright of Dan0194<br>
*/<br>
package org.hyperion.rs2.model.dialogue;</li>
</ul>
<p>import org.hyperion.rs2.model.NPC;<br>
import org.hyperion.rs2.model.Player;</p>
<p>public interface DialogueType {</p>
<pre><code>/**
 * Every mob that has dialogue gets this void
 */
void getDialogue(Player player, NPC npc);

/**
 * All Options are handled here
 */
void getOptions(Player player, int button);

/**
 * Every mob that has dialogue gets this void
 */
void closeDialogue(Player player);
</code></pre>
<p>}[/code]</p>
<p>Now that you’re done that Go into your world.java and add this method</p>
<p><code>private void loadDialogue() throws IOException, ClassNotFoundException, InstantiationException, IllegalAccessException {
		FileInputStream fis = new FileInputStream("data/dialogue.cfg");
		try {
			ConfigurationParser p = new ConfigurationParser(fis);
			Map&lt;String, Map&lt;String, String&gt;&gt; complexMappings = p.getComplexMappings();
			if(complexMappings.containsKey("npc")) {
				Map&lt;Class&lt;?&gt;, Object&gt; loadedHandlers = new HashMap&lt;Class&lt;?&gt;, Object&gt;();
				for(Map.Entry&lt;String, String&gt; handler : complexMappings.get("npc").entrySet()) {
					int id = Integer.parseInt(handler.getKey());
					Class&lt;?&gt; handlerClass = Class.forName(handler.getValue());
					Object handlerInstance;
					if(loadedHandlers.containsKey(handlerClass)) {
						handlerInstance = loadedHandlers.get(loadedHandlers.get(handlerClass));
					} else {
						handlerInstance = handlerClass.newInstance();
					}
					DialogueHandler.getDialogueHandler().bind(id, (DialogueType) handlerInstance);
					logger.fine("Bound " + handler.getValue() + " to opcode : " + id);
				}
			}
		} finally {
			fis.close();
		}
	}</code></p>
<p>And load this method up at the start</p>
<p>Now in your data folder make a new configuration file and name it dialogue and put this in</p>
<p><code>
#[id] inside is the npcId
#Hans
npc[0]: org.hyperion.rs2.model.dialogue.dialogues.Hans</code></p>
<p>Now make a new package in your rs2.model.dialogue</p>
<p>and name it dialogues</p>
<p>And whenever you want to make an npc have a dialogue, make a new class and name it whatever there name is so for example Hans and also add it to the config as</p>
<pre><code class="lang-auto"></code></pre>
<pre><code class="lang-auto">	package org.hyperion.rs2.model.dialogue.dialogues;

import org.hyperion.rs2.model.NPC;
import org.hyperion.rs2.model.Player;
import org.hyperion.rs2.model.dialogue.DialogueEmotion;
import org.hyperion.rs2.model.dialogue.DialogueHandler;
import org.hyperion.rs2.model.dialogue.DialogueType;

public class Daquarius implements DialogueType {

	@Override
	public void getDialogue(Player player, NPC npc) {
		switch(player.getNpcDialogue()) {
		case 0:
			player.getDialogue().sendDialogue(player, npc, DialogueEmotion.EVIL_LAUGH_SHORT, true, 
			"This World Will be Mine!!!");
			break;
		case 1:
			player.getDialogue().SendOption(player, "I Will Stop You!", "Fine take it. idc");
			break;
		case 2:
			player.getDialogue().sendPlayerDialogue(player, DialogueEmotion.LAUGHING, false,
			"Meet me at falador at 2 O-clock");
			break;
		}
		
	}
	
	@Override
	public void getOptions(Player player, int button) {
		switch(player.getNpcDialogue()) {
		case 1:
			switch(button) {
			case 2461:
				player.setNpcDialogue(player.getNpcDialogue() + 1);
					DialogueHandler.getDialogueHandler().sendDialogue(player, 
													DialogueHandler.getDialogueHandler().getCurrentDialogue());
				break;
			case 2462:
				closeDialogue(player);
				break;
			}
			break;
		}
	}

	@Override
	public void closeDialogue(Player player) {
		player.getActionSender().sendRemoveAllInterfaces();
		
	}


}package org.hyperion.rs2.model.dialogue.dialogues;

import org.hyperion.rs2.model.NPC;
import org.hyperion.rs2.model.Player;
import org.hyperion.rs2.model.dialogue.DialogueEmotion;
import org.hyperion.rs2.model.dialogue.DialogueHandler;
import org.hyperion.rs2.model.dialogue.DialogueType;

public class Hans implements DialogueType {

	@Override
	public void getDialogue(Player player, NPC npc) {
		switch(player.getNpcDialogue()) {
		case 0:
			player.getDialogue().sendDialogue(player, npc, DialogueEmotion.EVIL_LAUGH_SHORT, true, 
			"This World Will be Mine!!!");
			break;
		case 1:
			player.getDialogue().SendOption(player, "I Will Stop You!", "Fine take it. idc");
			break;
		case 2:
			player.getDialogue().sendPlayerDialogue(player, DialogueEmotion.LAUGHING, false,
			"Meet me at falador at 2 O-clock");
			break;
		}
		
	}
	
	@Override
	public void getOptions(Player player, int button) {
		switch(player.getNpcDialogue()) {
		case 1:
			switch(button) {
			case 2461:
				player.setNpcDialogue(player.getNpcDialogue() + 1);
					DialogueHandler.getDialogueHandler().sendDialogue(player, 
						DialogueHandler.getDialogueHandler().getCurrentDialogue());
				break;
			case 2462:
				closeDialogue(player);
				break;
			}
			break;
		}
	}

	@Override
	public void closeDialogue(Player player) {
		player.getActionSender().sendRemoveAllInterfaces();
		
	}
}</code></pre>
<p>This file implements our dialogueType interface and sends all of the data to our sendDialogue method to actually put on the screen</p>
<p>That’s it the reason why I’m making new classes for each new npc is because if you put it all in one file it starts getting very messy.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/hyperion-dialogue-system-hyperion/538136/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/hyperion-dialogue-system-hyperion/538136/1</link>
        <pubDate>Sun, 05 Jan 2014 07:29:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-538136-1</guid>
        <source url="https://forum.moparisthebest.com/t/hyperion-dialogue-system-hyperion/538136.rss">[Hyperion] Dialogue System [Hyperion]</source>
      </item>
  </channel>
</rss>
