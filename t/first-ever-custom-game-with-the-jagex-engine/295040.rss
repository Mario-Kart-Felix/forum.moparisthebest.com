<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>&quot;First ever&quot; custom game with the Jagex engine</title>
    <link>https://forum.moparisthebest.com/t/first-ever-custom-game-with-the-jagex-engine/295040</link>
    <description>As far as I know anyway. After searching online for a few minutes for a simple Java game, I stumbled across [url=http://game-programming.freeservers.com/frog.htm]Neil Bergman&#39;s Frog Walking[/url]. I loved Frogger on the Atari and on Playstation 1, so this game won. I decided to recreate Frog Walking to use the Jagex game engine, as built in client revision 194.

Me playing the game:
[img]http://jaghax.org/rsclient/games/frogwalking.png[/img]

Where you can play the game too:
http://jaghax.org/rsclient/games/frog.html

Where you can download the game:
http://jaghax.org/rsclient/games/frog.jar

Source is included in the downloaded Jar file.

Some notes: I changed the controls from using i-k-j-l to using the arrow keys. Arrow keys are more commonly used in arcade games from what I&#39;ve known. I also had to remake the background because, once converted, its palette exceeded the maximum size the Jagex image format supports (255 colors, where it had around 270). The new background was mostly freehanded in paint, hence why some of the lines are off a little.

Beyond that, I slightly improved collision detection on the cars (since before it was just horrible). The behavior should be basically the same in both versions of the game, so let me know if anything seems off to you.

If you wish to compare Neil&#39;s work to mine, and you can&#39;t be arsed to download his game and decompile it, here is his bball.java:
[code]
// Decompiled by Jad v1.5.8f. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   C:\Msdev\projects\BBall\bball.java

import java.applet.Applet;
import java.awt.*;
import java.io.PrintStream;

public class bball extends Applet
    implements Runnable
{

    public void start()
    {
        if(go == null)
        {
            go = new Thread(this);
            go.start();
        }
        go = null;
        repaint();
    }

    public void stop()
    {
        if(go != null)
        {
            go.stop();
            go = null;
        }
    }

    public void die()
    {
        if(dead)
            if(Dtimer &lt;= 0)
            {
                if(lives == 0)
                    playing = false;
                state = 0;
                locx = 170;
                locy = 330;
                lives--;
                Dtimer = 35;
                dead = false;
            } else
            {
                Dtimer--;
            }
    }

    public void checkCollisions()
    {
        int k = 0;
        do
            if((locx &gt;= carX[k] &amp;&amp; locx &lt;= carX[k] + 60 || locx + 26 &gt;= carX[k] &amp;&amp; locx + 26 &lt;= carX[k] + 60) &amp;&amp; locy == carY[k])
                dead = true;
        while(++k &lt; 4);
        if(locx &gt;= CX &amp;&amp; locx &lt;= CX + 60 &amp;&amp; locy == CY)
            dead = true;
        if((locx &gt;= truckX[0] &amp;&amp; locx &lt;= truckX[0] + 110 || locx + 26 &gt;= truckX[0] &amp;&amp; locx + 26 &lt;= truckX[0] + 110) &amp;&amp; locy == truckY[0])
            dead = true;
    }

    public void updateLogs()
    {
        int k = 0;
        do
        {
            offscreen.drawImage(Log, logX[k], logY[k], this);
            logX[k] += logS[k];
            if(logX[k] &gt; 400)
                logX[k] = -100;
            if(logX[k] &lt; -101)
                logX[k] = 399;
        } while(++k &lt; 6);
        if(locy &lt; 210)
        {
            k = 0;
            do
            {
                if(locx &gt;= logX[k] - 10 &amp;&amp; locx &lt;= logX[k] + 100 &amp;&amp; locy == logY[k])
                {
                    n = 1;
                    locx += logS[k];
                }
                if(locy &lt; 30)
                    if(locx &gt;= 0 &amp;&amp; locx &lt;= 10)
                    {
                        n = 1;
                        End[0] = true;
                        locx = 170;
                        locy = 330;
                        score += 100;
                    } else
                    if(locx &gt;= 80 &amp;&amp; locx &lt;= 90)
                    {
                        n = 1;
                        End[1] = true;
                        locx = 170;
                        locy = 330;
                        score += 100;
                    } else
                    if(locx &gt;= 160 &amp;&amp; locx &lt;= 170)
                    {
                        n = 1;
                        End[2] = true;
                        locx = 170;
                        locy = 330;
                        score += 100;
                    } else
                    if(locx &gt;= 240 &amp;&amp; locx &lt;= 250)
                    {
                        n = 1;
                        End[3] = true;
                        locx = 170;
                        locy = 330;
                        score += 100;
                    } else
                    if(locx &gt;= 320 &amp;&amp; locx &lt;= 330)
                    {
                        n = 1;
                        End[4] = true;
                        locx = 170;
                        locy = 330;
                        score += 100;
                    }
            } while(++k &lt; 6);
            if(n != 1)
                dead = true;
            n = 0;
        }
    }

    public boolean mouseDown(Event e, int x, int y)
    {
        if(!playing)
        {
            locx = 170;
            locy = 330;
            playing = true;
            lives = 3;
            n = 0;
            state = 0;
            level = 1;
            if(highscore &lt; score)
                highscore = score;
            score = 0;
            timer = 35;
            int k = 0;
            do
                End[k] = false;
            while(++k &lt; 5);
            cSpeed[0] = -3;
            cSpeed[1] = -4;
            dead = false;
            Dtimer = 35;
        }
        return true;
    }

    public boolean keyDown(Event e, int a)
    {
        if(!dead)
        {
            if(a == 105 &amp;&amp; locy &gt; 0)
            {
                locy -= 30;
                state = 0;
            }
            if(a == 107 &amp;&amp; locy &lt; 330)
            {
                locy += 30;
                state = 2;
            }
            if(a == 106 &amp;&amp; locx &gt; 0)
            {
                locx -= 30;
                state = 3;
            }
            if(a == 108 &amp;&amp; locx &lt; 380)
            {
                locx += 30;
                state = 1;
            }
        }
        return true;
    }

    public void updateFrog()
    {
        if(timer == 35)
            switch(state)
            {
            case 0: // &#39;\0&#39;
                offscreen.drawImage(FrogUp, locx, locy, this);
                break;

            case 1: // &#39;\001&#39;
                offscreen.drawImage(FrogRight, locx, locy, this);
                break;

            case 2: // &#39;\002&#39;
                offscreen.drawImage(FrogDown, locx, locy, this);
                break;

            case 3: // &#39;\003&#39;
                offscreen.drawImage(FrogLeft, locx, locy, this);
                break;
            }
        if(dead)
            offscreen.drawImage(FrogDead, locx, locy, this);
    }

    public void life()
    {
        for(int i = 0; i &lt; lives; i++)
        {
            offscreen.drawImage(FrogUp, LX, 370, this);
            LX += 30;
        }

        LX = 5;
        offscreen.setColor(Color.white);
        offscreen.drawString(&quot;LIVES LEFT&quot;, 5, 365);
        offscreen.drawString(&quot;LEVEL = &quot; + level, 100, 365);
        offscreen.drawString(&quot;SCORE = &quot; + score, 100, 380);
        offscreen.drawString(&quot;HIGH SCORE = &quot; + highscore, 100, 395);
        offscreen.drawString(&quot;Programmed By : Neil Bergman&quot;, 220, 395);
    }

    public bball()
    {
        locx = 170;
        locy = 330;
        CX = 200;
        CY = 300;
        level = 1;
        lives = 3;
        LX = 5;
        timer = 35;
        Dtimer = 35;
    }

    public void levelCheck()
    {
        int p = 0;
        if(End[0])
        {
            offscreen.drawImage(FrogUp, 5, 0, this);
            p++;
        }
        if(End[1])
        {
            offscreen.drawImage(FrogUp, 85, 0, this);
            p++;
        }
        if(End[2])
        {
            offscreen.drawImage(FrogUp, 165, 0, this);
            p++;
        }
        if(End[3])
        {
            offscreen.drawImage(FrogUp, 245, 0, this);
            p++;
        }
        if(End[4])
        {
            offscreen.drawImage(FrogUp, 325, 0, this);
            p++;
        }
        if(p == 5)
        {
            timer--;
            if(timer &lt;= 0)
            {
                int z = 0;
                do
                    End[z] = false;
                while(++z &lt; 5);
                z = 0;
                do
                    cSpeed[z]--;
                while(++z &lt; 2);
                level++;
                timer = 35;
            }
        }
        p = 0;
    }

    public void updateCarsL()
    {
        int p = 0;
        do
        {
            offscreen.drawImage(Car1, carX[p], carY[p], this);
            carX[p] += cSpeed[p];
            if(carX[p] &lt; -120)
                carX[p] = 400;
        } while(++p &lt; 2);
        offscreen.drawImage(Truck2, truckX[0], truckY[0], this);
        truckX[0] -= level + 2;
        if(truckX[0] &lt; -120)
            truckX[0] = 400;
    }

    public void run()
    {
        do
        {
            repaint();
            try
            {
                Thread.sleep(30L);
            }
            catch(Exception exception) { }
        } while(true);
    }

    public void init()
    {
        resize(400, 400);
        image = createImage(400, 400);
        offscreen = image.getGraphics();
        MediaTracker t = new MediaTracker(this);
        Title = getImage(getCodeBase(), &quot;FrogWalking.gif&quot;);
        t.addImage(Title, 0);
        Back = getImage(getCodeBase(), &quot;Back.jpg&quot;);
        t.addImage(Back, 0);
        FrogUp = getImage(getCodeBase(), &quot;frog.gif&quot;);
        t.addImage(FrogUp, 0);
        FrogRight = getImage(getCodeBase(), &quot;frog2.gif&quot;);
        t.addImage(FrogRight, 0);
        FrogDown = getImage(getCodeBase(), &quot;frog3.gif&quot;);
        t.addImage(FrogDown, 0);
        FrogLeft = getImage(getCodeBase(), &quot;frog4.gif&quot;);
        t.addImage(FrogLeft, 0);
        FrogDead = getImage(getCodeBase(), &quot;frogDead.gif&quot;);
        t.addImage(FrogDead, 0);
        Log = getImage(getCodeBase(), &quot;log.gif&quot;);
        t.addImage(Log, 0);
        Car1 = getImage(getCodeBase(), &quot;car1.gif&quot;);
        t.addImage(Car1, 0);
        Car2 = getImage(getCodeBase(), &quot;car.gif&quot;);
        t.addImage(Car2, 0);
        Truck2 = getImage(getCodeBase(), &quot;truck2.gif&quot;);
        t.addImage(Truck2, 0);
        Cop = getImage(getCodeBase(), &quot;cop.gif&quot;);
        t.addImage(Cop, 0);
        System.out.println(&quot;load images&quot;);
        try
        {
            t.waitForAll();
        }
        catch(InterruptedException e)
        {
            return;
        }
    }

    public void update(Graphics g)
    {
        paint(g);
    }

    public void paint(Graphics g)
    {
        offscreen.setColor(Color.black);
        offscreen.fillRect(0, 0, 400, 400);
        if(playing)
        {
            offscreen.drawImage(Back, 0, 0, this);
            updateLogs();
            updateFrog();
            updateCarsL();
            updateCarsR();
            checkCollisions();
            life();
            levelCheck();
            die();
        } else
        {
            offscreen.drawImage(Title, 0, 0, this);
        }
        g.drawImage(image, 0, 0, this);
    }

    public void updateCarsR()
    {
        int p = 2;
        do
        {
            offscreen.drawImage(Car2, carX[p], carY[p], this);
            carX[p] += level + 2;
            if(carX[p] &gt; 400)
                carX[p] = -100;
        } while(++p &lt; 4);
        offscreen.drawImage(Cop, CX, CY, this);
        CX += level;
        if(CX &gt; 400)
            CX = -100;
    }

    Thread go;
    Graphics offscreen;
    Image image;
    Image Title;
    Image Back;
    Image FrogUp;
    Image FrogRight;
    Image FrogDown;
    Image FrogLeft;
    Image FrogDead;
    Image Log;
    Image Car1;
    Image Car2;
    Image Truck2;
    Image Cop;
    boolean playing;
    boolean End[] = {
        false, false, false, false, false
    };
    boolean dead;
    int locx;
    int locy;
    int state;
    int logX[] = {
        120, 0, 200, 5, 300, 250, 180, 150
    };
    int logY[] = {
        60, 90, 30, 120, 150, 180
    };
    int logS[] = {
        2, -1, -3, 3, 1, -2
    };
    int carX[] = {
        5, 200, 300, 100
    };
    int carY[] = {
        210, 240, 270, 270
    };
    int truckX[] = {
        180, 0
    };
    int truckY[] = {
        210, 300
    };
    int cSpeed[] = {
        -3, -4
    };
    int CX;
    int CY;
    int level;
    int n;
    int lives;
    int LX;
    int timer;
    int Dtimer;
    int score;
    int highscore;
}
[/code]

Edit: I attached the Jar file to this post.</description>
    
    <lastBuildDate>Fri, 14 Aug 2009 01:04:20 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/first-ever-custom-game-with-the-jagex-engine/295040.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>&quot;First ever&quot; custom game with the Jagex engine</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>Uploaded files to use in cherokee in other post ^</p>
<p>(moparisthebest will be happy)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/first-ever-custom-game-with-the-jagex-engine/295040/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/first-ever-custom-game-with-the-jagex-engine/295040/6</link>
        <pubDate>Fri, 14 Aug 2009 01:04:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-295040-6</guid>
        <source url="https://forum.moparisthebest.com/t/first-ever-custom-game-with-the-jagex-engine/295040.rss">&quot;First ever&quot; custom game with the Jagex engine</source>
      </item>
      <item>
        <title>&quot;First ever&quot; custom game with the Jagex engine</title>
        <dc:creator><![CDATA[@lawl lawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lawl">@lawl</a> wrote:</p>
          <blockquote>
              <p>i thought id find the first game that jagex ever made. nice title…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/first-ever-custom-game-with-the-jagex-engine/295040/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/first-ever-custom-game-with-the-jagex-engine/295040/5</link>
        <pubDate>Thu, 13 Aug 2009 23:29:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-295040-5</guid>
        <source url="https://forum.moparisthebest.com/t/first-ever-custom-game-with-the-jagex-engine/295040.rss">&quot;First ever&quot; custom game with the Jagex engine</source>
      </item>
      <item>
        <title>&quot;First ever&quot; custom game with the Jagex engine</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>rep–</p>
<p>Uploaded cherokee ‘plugin’ for Frog.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/first-ever-custom-game-with-the-jagex-engine/295040/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/first-ever-custom-game-with-the-jagex-engine/295040/4</link>
        <pubDate>Thu, 13 Aug 2009 23:03:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-295040-4</guid>
        <source url="https://forum.moparisthebest.com/t/first-ever-custom-game-with-the-jagex-engine/295040.rss">&quot;First ever&quot; custom game with the Jagex engine</source>
      </item>
      <item>
        <title>&quot;First ever&quot; custom game with the Jagex engine</title>
        <dc:creator><![CDATA[@lawl lawl]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/lawl">@lawl</a> wrote:</p>
          <blockquote>
              <p>i cant win help</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/first-ever-custom-game-with-the-jagex-engine/295040/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/first-ever-custom-game-with-the-jagex-engine/295040/3</link>
        <pubDate>Thu, 13 Aug 2009 22:55:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-295040-3</guid>
        <source url="https://forum.moparisthebest.com/t/first-ever-custom-game-with-the-jagex-engine/295040.rss">&quot;First ever&quot; custom game with the Jagex engine</source>
      </item>
      <item>
        <title>&quot;First ever&quot; custom game with the Jagex engine</title>
        <dc:creator><![CDATA[@samuraiblood2 samuraiblood2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/samuraiblood2">@samuraiblood2</a> wrote:</p>
          <blockquote>
              <p>That’s so damn sexy lol.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/first-ever-custom-game-with-the-jagex-engine/295040/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/first-ever-custom-game-with-the-jagex-engine/295040/2</link>
        <pubDate>Thu, 13 Aug 2009 22:53:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-295040-2</guid>
        <source url="https://forum.moparisthebest.com/t/first-ever-custom-game-with-the-jagex-engine/295040.rss">&quot;First ever&quot; custom game with the Jagex engine</source>
      </item>
      <item>
        <title>&quot;First ever&quot; custom game with the Jagex engine</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <p>As far as I know anyway. After searching online for a few minutes for a simple Java game, I stumbled across <a href="http://game-programming.freeservers.com/frog.htm" data-bbcode="true" rel="nofollow noopener">Neil Bergman’s Frog Walking</a>. I loved Frogger on the Atari and on Playstation 1, so this game won. I decided to recreate Frog Walking to use the Jagex game engine, as built in client revision 194.</p>
<p>Me playing the game:<br>
<img src="http://jaghax.org/rsclient/games/frogwalking.png" alt width="" height=""></p>
<p>Where you can play the game too:<br>
<a href="http://jaghax.org/rsclient/games/frog.html" class="onebox" target="_blank" rel="nofollow noopener">http://jaghax.org/rsclient/games/frog.html</a></p>
<p>Where you can download the game:<br>
<a href="http://jaghax.org/rsclient/games/frog.jar" class="onebox" target="_blank" rel="nofollow noopener">http://jaghax.org/rsclient/games/frog.jar</a></p>
<p>Source is included in the downloaded Jar file.</p>
<p>Some notes: I changed the controls from using i-k-j-l to using the arrow keys. Arrow keys are more commonly used in arcade games from what I’ve known. I also had to remake the background because, once converted, its palette exceeded the maximum size the Jagex image format supports (255 colors, where it had around 270). The new background was mostly freehanded in paint, hence why some of the lines are off a little.</p>
<p>Beyond that, I slightly improved collision detection on the cars (since before it was just horrible). The behavior should be basically the same in both versions of the game, so let me know if anything seems off to you.</p>
<p>If you wish to compare Neil’s work to mine, and you can’t be arsed to download his game and decompile it, here is his bball.java:</p>
<pre><code class="lang-auto">// Decompiled by Jad v1.5.8f. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   C:\Msdev\projects\BBall\bball.java

import java.applet.Applet;
import java.awt.*;
import java.io.PrintStream;

public class bball extends Applet
    implements Runnable
{

    public void start()
    {
        if(go == null)
        {
            go = new Thread(this);
            go.start();
        }
        go = null;
        repaint();
    }

    public void stop()
    {
        if(go != null)
        {
            go.stop();
            go = null;
        }
    }

    public void die()
    {
        if(dead)
            if(Dtimer &lt;= 0)
            {
                if(lives == 0)
                    playing = false;
                state = 0;
                locx = 170;
                locy = 330;
                lives--;
                Dtimer = 35;
                dead = false;
            } else
            {
                Dtimer--;
            }
    }

    public void checkCollisions()
    {
        int k = 0;
        do
            if((locx &gt;= carX[k] &amp;&amp; locx &lt;= carX[k] + 60 || locx + 26 &gt;= carX[k] &amp;&amp; locx + 26 &lt;= carX[k] + 60) &amp;&amp; locy == carY[k])
                dead = true;
        while(++k &lt; 4);
        if(locx &gt;= CX &amp;&amp; locx &lt;= CX + 60 &amp;&amp; locy == CY)
            dead = true;
        if((locx &gt;= truckX[0] &amp;&amp; locx &lt;= truckX[0] + 110 || locx + 26 &gt;= truckX[0] &amp;&amp; locx + 26 &lt;= truckX[0] + 110) &amp;&amp; locy == truckY[0])
            dead = true;
    }

    public void updateLogs()
    {
        int k = 0;
        do
        {
            offscreen.drawImage(Log, logX[k], logY[k], this);
            logX[k] += logS[k];
            if(logX[k] &gt; 400)
                logX[k] = -100;
            if(logX[k] &lt; -101)
                logX[k] = 399;
        } while(++k &lt; 6);
        if(locy &lt; 210)
        {
            k = 0;
            do
            {
                if(locx &gt;= logX[k] - 10 &amp;&amp; locx &lt;= logX[k] + 100 &amp;&amp; locy == logY[k])
                {
                    n = 1;
                    locx += logS[k];
                }
                if(locy &lt; 30)
                    if(locx &gt;= 0 &amp;&amp; locx &lt;= 10)
                    {
                        n = 1;
                        End[0] = true;
                        locx = 170;
                        locy = 330;
                        score += 100;
                    } else
                    if(locx &gt;= 80 &amp;&amp; locx &lt;= 90)
                    {
                        n = 1;
                        End[1] = true;
                        locx = 170;
                        locy = 330;
                        score += 100;
                    } else
                    if(locx &gt;= 160 &amp;&amp; locx &lt;= 170)
                    {
                        n = 1;
                        End[2] = true;
                        locx = 170;
                        locy = 330;
                        score += 100;
                    } else
                    if(locx &gt;= 240 &amp;&amp; locx &lt;= 250)
                    {
                        n = 1;
                        End[3] = true;
                        locx = 170;
                        locy = 330;
                        score += 100;
                    } else
                    if(locx &gt;= 320 &amp;&amp; locx &lt;= 330)
                    {
                        n = 1;
                        End[4] = true;
                        locx = 170;
                        locy = 330;
                        score += 100;
                    }
            } while(++k &lt; 6);
            if(n != 1)
                dead = true;
            n = 0;
        }
    }

    public boolean mouseDown(Event e, int x, int y)
    {
        if(!playing)
        {
            locx = 170;
            locy = 330;
            playing = true;
            lives = 3;
            n = 0;
            state = 0;
            level = 1;
            if(highscore &lt; score)
                highscore = score;
            score = 0;
            timer = 35;
            int k = 0;
            do
                End[k] = false;
            while(++k &lt; 5);
            cSpeed[0] = -3;
            cSpeed[1] = -4;
            dead = false;
            Dtimer = 35;
        }
        return true;
    }

    public boolean keyDown(Event e, int a)
    {
        if(!dead)
        {
            if(a == 105 &amp;&amp; locy &gt; 0)
            {
                locy -= 30;
                state = 0;
            }
            if(a == 107 &amp;&amp; locy &lt; 330)
            {
                locy += 30;
                state = 2;
            }
            if(a == 106 &amp;&amp; locx &gt; 0)
            {
                locx -= 30;
                state = 3;
            }
            if(a == 108 &amp;&amp; locx &lt; 380)
            {
                locx += 30;
                state = 1;
            }
        }
        return true;
    }

    public void updateFrog()
    {
        if(timer == 35)
            switch(state)
            {
            case 0: // '\0'
                offscreen.drawImage(FrogUp, locx, locy, this);
                break;

            case 1: // '\001'
                offscreen.drawImage(FrogRight, locx, locy, this);
                break;

            case 2: // '\002'
                offscreen.drawImage(FrogDown, locx, locy, this);
                break;

            case 3: // '\003'
                offscreen.drawImage(FrogLeft, locx, locy, this);
                break;
            }
        if(dead)
            offscreen.drawImage(FrogDead, locx, locy, this);
    }

    public void life()
    {
        for(int i = 0; i &lt; lives; i++)
        {
            offscreen.drawImage(FrogUp, LX, 370, this);
            LX += 30;
        }

        LX = 5;
        offscreen.setColor(Color.white);
        offscreen.drawString("LIVES LEFT", 5, 365);
        offscreen.drawString("LEVEL = " + level, 100, 365);
        offscreen.drawString("SCORE = " + score, 100, 380);
        offscreen.drawString("HIGH SCORE = " + highscore, 100, 395);
        offscreen.drawString("Programmed By : Neil Bergman", 220, 395);
    }

    public bball()
    {
        locx = 170;
        locy = 330;
        CX = 200;
        CY = 300;
        level = 1;
        lives = 3;
        LX = 5;
        timer = 35;
        Dtimer = 35;
    }

    public void levelCheck()
    {
        int p = 0;
        if(End[0])
        {
            offscreen.drawImage(FrogUp, 5, 0, this);
            p++;
        }
        if(End[1])
        {
            offscreen.drawImage(FrogUp, 85, 0, this);
            p++;
        }
        if(End[2])
        {
            offscreen.drawImage(FrogUp, 165, 0, this);
            p++;
        }
        if(End[3])
        {
            offscreen.drawImage(FrogUp, 245, 0, this);
            p++;
        }
        if(End[4])
        {
            offscreen.drawImage(FrogUp, 325, 0, this);
            p++;
        }
        if(p == 5)
        {
            timer--;
            if(timer &lt;= 0)
            {
                int z = 0;
                do
                    End[z] = false;
                while(++z &lt; 5);
                z = 0;
                do
                    cSpeed[z]--;
                while(++z &lt; 2);
                level++;
                timer = 35;
            }
        }
        p = 0;
    }

    public void updateCarsL()
    {
        int p = 0;
        do
        {
            offscreen.drawImage(Car1, carX[p], carY[p], this);
            carX[p] += cSpeed[p];
            if(carX[p] &lt; -120)
                carX[p] = 400;
        } while(++p &lt; 2);
        offscreen.drawImage(Truck2, truckX[0], truckY[0], this);
        truckX[0] -= level + 2;
        if(truckX[0] &lt; -120)
            truckX[0] = 400;
    }

    public void run()
    {
        do
        {
            repaint();
            try
            {
                Thread.sleep(30L);
            }
            catch(Exception exception) { }
        } while(true);
    }

    public void init()
    {
        resize(400, 400);
        image = createImage(400, 400);
        offscreen = image.getGraphics();
        MediaTracker t = new MediaTracker(this);
        Title = getImage(getCodeBase(), "FrogWalking.gif");
        t.addImage(Title, 0);
        Back = getImage(getCodeBase(), "Back.jpg");
        t.addImage(Back, 0);
        FrogUp = getImage(getCodeBase(), "frog.gif");
        t.addImage(FrogUp, 0);
        FrogRight = getImage(getCodeBase(), "frog2.gif");
        t.addImage(FrogRight, 0);
        FrogDown = getImage(getCodeBase(), "frog3.gif");
        t.addImage(FrogDown, 0);
        FrogLeft = getImage(getCodeBase(), "frog4.gif");
        t.addImage(FrogLeft, 0);
        FrogDead = getImage(getCodeBase(), "frogDead.gif");
        t.addImage(FrogDead, 0);
        Log = getImage(getCodeBase(), "log.gif");
        t.addImage(Log, 0);
        Car1 = getImage(getCodeBase(), "car1.gif");
        t.addImage(Car1, 0);
        Car2 = getImage(getCodeBase(), "car.gif");
        t.addImage(Car2, 0);
        Truck2 = getImage(getCodeBase(), "truck2.gif");
        t.addImage(Truck2, 0);
        Cop = getImage(getCodeBase(), "cop.gif");
        t.addImage(Cop, 0);
        System.out.println("load images");
        try
        {
            t.waitForAll();
        }
        catch(InterruptedException e)
        {
            return;
        }
    }

    public void update(Graphics g)
    {
        paint(g);
    }

    public void paint(Graphics g)
    {
        offscreen.setColor(Color.black);
        offscreen.fillRect(0, 0, 400, 400);
        if(playing)
        {
            offscreen.drawImage(Back, 0, 0, this);
            updateLogs();
            updateFrog();
            updateCarsL();
            updateCarsR();
            checkCollisions();
            life();
            levelCheck();
            die();
        } else
        {
            offscreen.drawImage(Title, 0, 0, this);
        }
        g.drawImage(image, 0, 0, this);
    }

    public void updateCarsR()
    {
        int p = 2;
        do
        {
            offscreen.drawImage(Car2, carX[p], carY[p], this);
            carX[p] += level + 2;
            if(carX[p] &gt; 400)
                carX[p] = -100;
        } while(++p &lt; 4);
        offscreen.drawImage(Cop, CX, CY, this);
        CX += level;
        if(CX &gt; 400)
            CX = -100;
    }

    Thread go;
    Graphics offscreen;
    Image image;
    Image Title;
    Image Back;
    Image FrogUp;
    Image FrogRight;
    Image FrogDown;
    Image FrogLeft;
    Image FrogDead;
    Image Log;
    Image Car1;
    Image Car2;
    Image Truck2;
    Image Cop;
    boolean playing;
    boolean End[] = {
        false, false, false, false, false
    };
    boolean dead;
    int locx;
    int locy;
    int state;
    int logX[] = {
        120, 0, 200, 5, 300, 250, 180, 150
    };
    int logY[] = {
        60, 90, 30, 120, 150, 180
    };
    int logS[] = {
        2, -1, -3, 3, 1, -2
    };
    int carX[] = {
        5, 200, 300, 100
    };
    int carY[] = {
        210, 240, 270, 270
    };
    int truckX[] = {
        180, 0
    };
    int truckY[] = {
        210, 300
    };
    int cSpeed[] = {
        -3, -4
    };
    int CX;
    int CY;
    int level;
    int n;
    int lives;
    int LX;
    int timer;
    int Dtimer;
    int score;
    int highscore;
}</code></pre>
<p>Edit: I attached the Jar file to this post.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/first-ever-custom-game-with-the-jagex-engine/295040/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/first-ever-custom-game-with-the-jagex-engine/295040/1</link>
        <pubDate>Thu, 13 Aug 2009 22:50:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-295040-1</guid>
        <source url="https://forum.moparisthebest.com/t/first-ever-custom-game-with-the-jagex-engine/295040.rss">&quot;First ever&quot; custom game with the Jagex engine</source>
      </item>
  </channel>
</rss>
