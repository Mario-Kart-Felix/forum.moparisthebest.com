<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Loader isnt working</title>
    <link>https://forum.moparisthebest.com/t/loader-isnt-working/433767</link>
    <description>Hey! I&#39;m quite new to these forums, but I&#39;ve run into a possible logic error while making a loader for an rsps (Near Reality). The following code basically loads the jar from the specified directory, and then puts it on to the JPanel and runs it. I used JFormDesigner for a layout. The problem is that it doesn&#39;t load the client, rather that it just shows the default black screen that i set up. I then tried it on a blank JPanel on a blank JFrame (used the_bank&#39;s tutorial) and loaded the jar via the file and it worked perfectly. Can someone tell me what I&#39;m doing wrong?

[code]package com.bot.loader;

import java.applet.Applet;
import java.applet.AppletContext;
import java.applet.AppletStub;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Container;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLClassLoader;
import java.util.HashMap;

import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import javax.swing.JScrollPane;
import javax.swing.LayoutStyle;
import javax.swing.border.Border;
/*
 * Created by JFormDesigner on Sun Aug 14 20:56:39 EDT 2011
 */

import com.bot.data.hooks.LogonHooks;
import com.bot.utilities.FolderUtilities;



/**
 * @author Ice332
 */
public class NewLoader extends JFrame implements AppletStub{
	private static final HashMap&lt;String, String&gt; parameters = new HashMap&lt;String, String&gt;();
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	public NewLoader() throws MalformedURLException, InstantiationException, IllegalAccessException, ClassNotFoundException {
		initComponents();
        setVisible(true);
        parameters.put(&quot;height&quot;, &quot;762&quot;);
        parameters.put(&quot;width&quot;, &quot;503&quot;);
        parameters.put(&quot;worldid&quot;, &quot;37&quot;);
        parameters.put(&quot;members&quot;, &quot;0&quot;);
        parameters.put(&quot;modewhat&quot;, &quot;0&quot;);
        parameters.put(&quot;modewhere&quot;, &quot;0&quot;);
        parameters.put(&quot;safemode&quot;, &quot;1&quot;);
        parameters.put(&quot;lang&quot;, &quot;0&quot;);
        
        panel1.setBorder(new javax.swing.border.CompoundBorder(
				new javax.swing.border.TitledBorder(new javax.swing.border.EmptyBorder(0, 0, 0, 0),
					&quot;Loading Near Reality JAR ...&quot;, javax.swing.border.TitledBorder.LEFT, //$NON-NLS-1$
					javax.swing.border.TitledBorder.LEFT, new java.awt.Font(&quot;Dialog&quot;, java.awt.Font.BOLD, 12), //$NON-NLS-1$
					java.awt.Color.MAGENTA), panel1.getBorder())); 
        panel1.addPropertyChangeListener(new java.beans.PropertyChangeListener(){
        	
        public void propertyChange(java.beans.PropertyChangeEvent e){
        	if(&quot;border&quot;.equals(e.getPropertyName()))throw new RuntimeException();}}); //$NON-NLS-1$
        
        
    	FolderUtilities.CreateBotDirectoriesForWindows();
    	 URLClassLoader classLoader = new URLClassLoader(new URL[] { new URL(&quot;file:C:/NRBot/Data/&quot; )});
		
       	System.out.println(&quot;Reached!&quot;);
        Applet loader = (Applet) classLoader.loadClass(&quot;client&quot;).newInstance();
        System.out.println(&quot;loaded instance&quot;);
       loader.setStub(this);
       System.out.println(&quot;Set stub&quot;);
       LogonHooks.InitiateLogonHook();
      
       System.out.println(&quot;start&quot;);
       JPopupMenu.setDefaultLightWeightPopupEnabled(false);
       panel1.setPreferredSize(new Dimension(768, 560));
       setPreferredSize(new Dimension(768, 658));
       panel1.add(loader);
       if(loader.isVisible() ){
    	  System.out.println(&quot;visable&quot;);
       }
       System.out.println(&quot;added loader&quot;);
       getContentPane().add(loader);
       loader.init();
       System.out.println(&quot;init&quot;);
       loader.start();
       setDefaultCloseOperation(EXIT_ON_CLOSE);
		
		
	}

	private void menu1ActionPerformed(ActionEvent e) {
		// TODO add your code here
	}

	private void menuItem1ActionPerformed(ActionEvent e) {
		// TODO add your code here
	}

	private void menuItem2ActionPerformed(ActionEvent e) {
		// TODO add your code here
	}

	private void menuItem3ActionPerformed(ActionEvent e) {
		// TODO add your code here
	}

	private void menuItem4ActionPerformed(ActionEvent e) {
		// TODO add your code here
	}

	private void menuItem5ActionPerformed(ActionEvent e) {
		// TODO add your code here
	}

	private void checkBoxMenuItem1ActionPerformed(ActionEvent e) {
		// TODO add your code here
	}

	private void checkBoxMenuItem2ActionPerformed(ActionEvent e) {
		// TODO add your code here
	}

	private void checkBoxMenuItem3ActionPerformed(ActionEvent e) {
		// TODO add your code here
	}

	private void menuItem6ActionPerformed(ActionEvent e) {
		// TODO add your code here
	}

	private void checkBoxMenuItem4ActionPerformed(ActionEvent e) {
		// TODO add your code here
	}

	private void menuItem8ActionPerformed(ActionEvent e) {
		// TODO add your code here
	}

	private void menuItem7ActionPerformed(ActionEvent e) {
		// TODO add your code here
	}

	private void menuItem9ActionPerformed(ActionEvent e) {
		// TODO add your code here
	}

	private void menuItem10ActionPerformed(ActionEvent e) {
		// TODO add your code here
	}

	private void menuItem11ActionPerformed(ActionEvent e) {
		// TODO add your code here
	}

	private void initComponents() {
		// JFormDesigner - Component initialization - DO NOT MODIFY  //GEN-BEGIN:initComponents
		// Generated using JFormDesigner Evaluation license - Nand Thas
		menuBar1 = new JMenuBar();
		menu1 = new JMenu();
		menuItem1 = new JMenuItem();
		menuItem2 = new JMenuItem();
		menuItem3 = new JMenuItem();
		menuItem4 = new JMenuItem();
		menuItem5 = new JMenuItem();
		menu2 = new JMenu();
		checkBoxMenuItem1 = new JCheckBoxMenuItem();
		checkBoxMenuItem2 = new JCheckBoxMenuItem();
		checkBoxMenuItem3 = new JCheckBoxMenuItem();
		menu3 = new JMenu();
		menuItem6 = new JMenuItem();
		menu4 = new JMenu();
		checkBoxMenuItem4 = new JCheckBoxMenuItem();
		menu5 = new JMenu();
		menuItem8 = new JMenuItem();
		menuItem7 = new JMenuItem();
		menuItem9 = new JMenuItem();
		menu6 = new JMenu();
		menuItem10 = new JMenuItem();
		menuItem11 = new JMenuItem();
		scrollPane1 = new JScrollPane();
		panel1 = new JPanel();

		//======== this ========
		setTitle(&quot;gBot ~ Near Reality Bot  ~ v0.1 ALPHA&quot;); //$NON-NLS-1$
		setIconImage(new ImageIcon(getClass().getResource(&quot;/com/bot/data/images/gIcon.png&quot;)).getImage()); //$NON-NLS-1$
		setName(&quot;this&quot;); //$NON-NLS-1$
		Container contentPane = getContentPane();

		//======== menuBar1 ========
		{
			menuBar1.setName(&quot;menuBar1&quot;); //$NON-NLS-1$

			//======== menu1 ========
			{
				menu1.setText(&quot;File&quot;); //$NON-NLS-1$
				menu1.setName(&quot;menu1&quot;); //$NON-NLS-1$
				menu1.addActionListener(new ActionListener() {
					@Override
					public void actionPerformed(ActionEvent e) {
						menu1ActionPerformed(e);
					}
				});

				//---- menuItem1 ----
				menuItem1.setText(&quot;Check For Updates&quot;); //$NON-NLS-1$
				menuItem1.setIcon(new ImageIcon(getClass().getResource(&quot;/com/bot/data/images/quest.png&quot;))); //$NON-NLS-1$
				menuItem1.setName(&quot;menuItem1&quot;); //$NON-NLS-1$
				menuItem1.addActionListener(new ActionListener() {
					@Override
					public void actionPerformed(ActionEvent e) {
						menuItem1ActionPerformed(e);
					}
				});
				menu1.add(menuItem1);

				//---- menuItem2 ----
				menuItem2.setText(&quot;Run Script...&quot;); //$NON-NLS-1$
				menuItem2.setIcon(new ImageIcon(getClass().getResource(&quot;/com/bot/data/images/playButton.PNG&quot;))); //$NON-NLS-1$
				menuItem2.setName(&quot;menuItem2&quot;); //$NON-NLS-1$
				menuItem2.addActionListener(new ActionListener() {
					@Override
					public void actionPerformed(ActionEvent e) {
						menuItem2ActionPerformed(e);
					}
				});
				menu1.add(menuItem2);

				//---- menuItem3 ----
				menuItem3.setText(&quot;Pause Script..&quot;); //$NON-NLS-1$
				menuItem3.setIcon(new ImageIcon(getClass().getResource(&quot;/com/bot/data/images/pauseButton.PNG&quot;))); //$NON-NLS-1$
				menuItem3.setName(&quot;menuItem3&quot;); //$NON-NLS-1$
				menuItem3.addActionListener(new ActionListener() {
					@Override
					public void actionPerformed(ActionEvent e) {
						menuItem3ActionPerformed(e);
					}
				});
				menu1.add(menuItem3);

				//---- menuItem4 ----
				menuItem4.setText(&quot;Stop Script&quot;); //$NON-NLS-1$
				menuItem4.setIcon(new ImageIcon(getClass().getResource(&quot;/com/bot/data/images/stopButton.PNG&quot;))); //$NON-NLS-1$
				menuItem4.setName(&quot;menuItem4&quot;); //$NON-NLS-1$
				menuItem4.addActionListener(new ActionListener() {
					@Override
					public void actionPerformed(ActionEvent e) {
						menuItem4ActionPerformed(e);
					}
				});
				menu1.add(menuItem4);

				//---- menuItem5 ----
				menuItem5.setText(&quot;Exit&quot;); //$NON-NLS-1$
				menuItem5.setName(&quot;menuItem5&quot;); //$NON-NLS-1$
				menuItem5.addActionListener(new ActionListener() {
					@Override
					public void actionPerformed(ActionEvent e) {
						menuItem5ActionPerformed(e);
					}
				});
				menu1.add(menuItem5);
			}
			menuBar1.add(menu1);

			//======== menu2 ========
			{
				menu2.setText(&quot;View&quot;); //$NON-NLS-1$
				menu2.setName(&quot;menu2&quot;); //$NON-NLS-1$

				//---- checkBoxMenuItem1 ----
				checkBoxMenuItem1.setText(&quot;Player Position&quot;); //$NON-NLS-1$
				checkBoxMenuItem1.setName(&quot;checkBoxMenuItem1&quot;); //$NON-NLS-1$
				checkBoxMenuItem1.addActionListener(new ActionListener() {
					@Override
					public void actionPerformed(ActionEvent e) {
						checkBoxMenuItem1ActionPerformed(e);
					}
				});
				menu2.add(checkBoxMenuItem1);

				//---- checkBoxMenuItem2 ----
				checkBoxMenuItem2.setText(&quot;Camera Angle&quot;); //$NON-NLS-1$
				checkBoxMenuItem2.setName(&quot;checkBoxMenuItem2&quot;); //$NON-NLS-1$
				checkBoxMenuItem2.addActionListener(new ActionListener() {
					@Override
					public void actionPerformed(ActionEvent e) {
						checkBoxMenuItem2ActionPerformed(e);
					}
				});
				menu2.add(checkBoxMenuItem2);

				//---- checkBoxMenuItem3 ----
				checkBoxMenuItem3.setText(&quot;Animation&quot;); //$NON-NLS-1$
				checkBoxMenuItem3.setName(&quot;checkBoxMenuItem3&quot;); //$NON-NLS-1$
				checkBoxMenuItem3.addActionListener(new ActionListener() {
					@Override
					public void actionPerformed(ActionEvent e) {
						checkBoxMenuItem3ActionPerformed(e);
					}
				});
				menu2.add(checkBoxMenuItem3);
			}
			menuBar1.add(menu2);

			//======== menu3 ========
			{
				menu3.setText(&quot;Help&quot;); //$NON-NLS-1$
				menu3.setName(&quot;menu3&quot;); //$NON-NLS-1$

				//---- menuItem6 ----
				menuItem6.setText(&quot;How to Script..&quot;); //$NON-NLS-1$
				menuItem6.setIcon(new ImageIcon(getClass().getResource(&quot;/com/bot/data/images/book.png&quot;))); //$NON-NLS-1$
				menuItem6.setName(&quot;menuItem6&quot;); //$NON-NLS-1$
				menuItem6.addActionListener(new ActionListener() {
					@Override
					public void actionPerformed(ActionEvent e) {
						menuItem6ActionPerformed(e);
					}
				});
				menu3.add(menuItem6);
			}
			menuBar1.add(menu3);

			//======== menu4 ========
			{
				menu4.setText(&quot;Modes&quot;); //$NON-NLS-1$
				menu4.setName(&quot;menu4&quot;); //$NON-NLS-1$

				//---- checkBoxMenuItem4 ----
				checkBoxMenuItem4.setText(&quot;Enter Idle Mode..&quot;); //$NON-NLS-1$
				checkBoxMenuItem4.setName(&quot;checkBoxMenuItem4&quot;); //$NON-NLS-1$
				checkBoxMenuItem4.addActionListener(new ActionListener() {
					@Override
					public void actionPerformed(ActionEvent e) {
						checkBoxMenuItem4ActionPerformed(e);
					}
				});
				menu4.add(checkBoxMenuItem4);
			}
			menuBar1.add(menu4);

			//======== menu5 ========
			{
				menu5.setText(&quot;Help&quot;); //$NON-NLS-1$
				menu5.setName(&quot;menu5&quot;); //$NON-NLS-1$

				//---- menuItem8 ----
				menuItem8.setText(&quot;How to Script..&quot;); //$NON-NLS-1$
				menuItem8.setIcon(new ImageIcon(getClass().getResource(&quot;/com/bot/data/images/paper.png&quot;))); //$NON-NLS-1$
				menuItem8.setName(&quot;menuItem8&quot;); //$NON-NLS-1$
				menuItem8.addActionListener(new ActionListener() {
					@Override
					public void actionPerformed(ActionEvent e) {
						menuItem8ActionPerformed(e);
					}
				});
				menu5.add(menuItem8);

				//---- menuItem7 ----
				menuItem7.setText(&quot;How to Use this Bot&quot;); //$NON-NLS-1$
				menuItem7.setIcon(new ImageIcon(getClass().getResource(&quot;/com/bot/data/images/people_wave.png&quot;))); //$NON-NLS-1$
				menuItem7.setName(&quot;menuItem7&quot;); //$NON-NLS-1$
				menuItem7.addActionListener(new ActionListener() {
					@Override
					public void actionPerformed(ActionEvent e) {
						menuItem7ActionPerformed(e);
					}
				});
				menu5.add(menuItem7);

				//---- menuItem9 ----
				menuItem9.setText(&quot;Report a Bug!&quot;); //$NON-NLS-1$
				menuItem9.setIcon(new ImageIcon(getClass().getResource(&quot;/com/bot/data/images/repair.png&quot;))); //$NON-NLS-1$
				menuItem9.setName(&quot;menuItem9&quot;); //$NON-NLS-1$
				menuItem9.addActionListener(new ActionListener() {
					@Override
					public void actionPerformed(ActionEvent e) {
						menuItem9ActionPerformed(e);
					}
				});
				menu5.add(menuItem9);
			}
			menuBar1.add(menu5);

			//======== menu6 ========
			{
				menu6.setText(&quot;About&quot;); //$NON-NLS-1$
				menu6.setName(&quot;menu6&quot;); //$NON-NLS-1$

				//---- menuItem10 ----
				menuItem10.setText(&quot;Version Specifics..&quot;); //$NON-NLS-1$
				menuItem10.setIcon(new ImageIcon(getClass().getResource(&quot;/com/bot/data/images/graph.png&quot;))); //$NON-NLS-1$
				menuItem10.setName(&quot;menuItem10&quot;); //$NON-NLS-1$
				menuItem10.addActionListener(new ActionListener() {
					@Override
					public void actionPerformed(ActionEvent e) {
						menuItem10ActionPerformed(e);
					}
				});
				menu6.add(menuItem10);

				//---- menuItem11 ----
				menuItem11.setText(&quot;Credits&quot;); //$NON-NLS-1$
				menuItem11.setIcon(new ImageIcon(getClass().getResource(&quot;/com/bot/data/images/people_yellow.png&quot;))); //$NON-NLS-1$
				menuItem11.setName(&quot;menuItem11&quot;); //$NON-NLS-1$
				menuItem11.addActionListener(new ActionListener() {
					@Override
					public void actionPerformed(ActionEvent e) {
						menuItem11ActionPerformed(e);
					}
				});
				menu6.add(menuItem11);
			}
			menuBar1.add(menu6);
		}
		setJMenuBar(menuBar1);

		//======== scrollPane1 ========
		{
			scrollPane1.setBackground(Color.white);
			scrollPane1.setName(&quot;scrollPane1&quot;); //$NON-NLS-1$
		}

		//======== panel1 ========
		{
			panel1.setBackground(Color.black);
			panel1.setCursor(Cursor.getPredefinedCursor(Cursor.CROSSHAIR_CURSOR));
			panel1.setName(&quot;panel1&quot;); //$NON-NLS-1$

			// JFormDesigner evaluation mark
			


			GroupLayout panel1Layout = new GroupLayout(panel1);
			panel1.setLayout(panel1Layout);
			panel1Layout.setHorizontalGroup(
				panel1Layout.createParallelGroup()
					.addGap(0, 867, Short.MAX_VALUE)
			);
			panel1Layout.setVerticalGroup(
				panel1Layout.createParallelGroup()
					.addGap(0, 496, Short.MAX_VALUE)
			);
		}

		GroupLayout contentPaneLayout = new GroupLayout(contentPane);
		contentPane.setLayout(contentPaneLayout);
		contentPaneLayout.setHorizontalGroup(
			contentPaneLayout.createParallelGroup()
				.addComponent(scrollPane1, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 867, Short.MAX_VALUE)
				.addComponent(panel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		);
		contentPaneLayout.setVerticalGroup(
			contentPaneLayout.createParallelGroup()
				.addGroup(GroupLayout.Alignment.TRAILING, contentPaneLayout.createSequentialGroup()
					.addComponent(panel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
					.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
					.addComponent(scrollPane1, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE))
		);
		pack();
		setLocationRelativeTo(getOwner());
		// JFormDesigner - End of component initialization  //GEN-END:initComponents
	}

	// JFormDesigner - Variables declaration - DO NOT MODIFY  //GEN-BEGIN:variables
	// Generated using JFormDesigner Evaluation license - Nand Thas
	private JMenuBar menuBar1;
	private JMenu menu1;
	private JMenuItem menuItem1;
	private JMenuItem menuItem2;
	private JMenuItem menuItem3;
	private JMenuItem menuItem4;
	private JMenuItem menuItem5;
	private JMenu menu2;
	private JCheckBoxMenuItem checkBoxMenuItem1;
	private JCheckBoxMenuItem checkBoxMenuItem2;
	private JCheckBoxMenuItem checkBoxMenuItem3;
	private JMenu menu3;
	private JMenuItem menuItem6;
	private JMenu menu4;
	private JCheckBoxMenuItem checkBoxMenuItem4;
	private JMenu menu5;
	private JMenuItem menuItem8;
	private JMenuItem menuItem7;
	private JMenuItem menuItem9;
	private JMenu menu6;
	private JMenuItem menuItem10;
	private JMenuItem menuItem11;
	private JScrollPane scrollPane1;
	private JPanel panel1;
	// JFormDesigner - End of variables declaration  //GEN-END:variables
	@Override
	public void appletResize(int arg0, int arg1) {
		// TODO Auto-generated method stub
		
	}
	@Override
	   public final URL getCodeBase() {
           try {
                   return new URL(&quot;http://www.nrclient.com/webclient/&quot;);
           } catch (Exception e) {
                   return null;
           }
   }
	@Override
   public final URL getDocumentBase() {
           try {
                   return new URL(&quot;http://www.nrclient.com/webclient/&quot;);
           } catch (Exception e) {
                   return null;
           }
   }
	@Override
   public final String getParameter(String name) {
           return parameters.get(name);
   }
	@Override
   public final AppletContext getAppletContext() {
           return null;
   }
	  public static void main(String[] args) {
       
				try {
					new NewLoader().setVisible(true);
				} catch (MalformedURLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (InstantiationException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IllegalAccessException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (ClassNotFoundException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
		
	  }
}

[/code]

Thanks :)</description>
    
    <lastBuildDate>Wed, 22 Feb 2012 12:26:06 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/loader-isnt-working/433767.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Loader isnt working</title>
        <dc:creator><![CDATA[@ice3323 ice3323]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ice3323">@ice3323</a> wrote:</p>
          <blockquote>
              <p>[quote=“the bank, post:2, topic:433767”]I don’t know what that is, but it isn’t proper.  Build the form yourself through code, it is quite easy once you get the hang of it, and that way you know everything thats being done and how it is being done.  I guarantee you don’t know what half the code you just posted even does.</p>
<p>Do one component at a time, and run the form to make sure its how you like.  Java offers a whole set of online SWING tutorials to help you out, just google what you’re trying to do and they will probably be one of the first results :)[/quote]</p>
<p>Okay, I’ll try it from the beginning. Thanks for the reply <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/loader-isnt-working/433767/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/loader-isnt-working/433767/3</link>
        <pubDate>Wed, 22 Feb 2012 12:26:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-433767-3</guid>
        <source url="https://forum.moparisthebest.com/t/loader-isnt-working/433767.rss">Loader isnt working</source>
      </item>
      <item>
        <title>Loader isnt working</title>
        <dc:creator><![CDATA[@the_bank the bank]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_bank">@the_bank</a> wrote:</p>
          <blockquote>
              <p>I don’t know what that is, but it isn’t proper.  Build the form yourself through code, it is quite easy once you get the hang of it, and that way you know everything thats being done and how it is being done.  I guarantee you don’t know what half the code you just posted even does.</p>
<p>Do one component at a time, and run the form to make sure its how you like.  Java offers a whole set of online SWING tutorials to help you out, just google what you’re trying to do and they will probably be one of the first results <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/loader-isnt-working/433767/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/loader-isnt-working/433767/2</link>
        <pubDate>Wed, 22 Feb 2012 02:21:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-433767-2</guid>
        <source url="https://forum.moparisthebest.com/t/loader-isnt-working/433767.rss">Loader isnt working</source>
      </item>
      <item>
        <title>Loader isnt working</title>
        <dc:creator><![CDATA[@ice3323 ice3323]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ice3323">@ice3323</a> wrote:</p>
          <blockquote>
              <p>Hey! I’m quite new to these forums, but I’ve run into a possible logic error while making a loader for an rsps (Near Reality). The following code basically loads the jar from the specified directory, and then puts it on to the JPanel and runs it. I used JFormDesigner for a layout. The problem is that it doesn’t load the client, rather that it just shows the default black screen that i set up. I then tried it on a blank JPanel on a blank JFrame (used the_bank’s tutorial) and loaded the jar via the file and it worked perfectly. Can someone tell me what I’m doing wrong?</p>
<p>[code]package com.bot.loader;</p>
<p>import java.applet.Applet;<br>
import java.applet.AppletContext;<br>
import java.applet.AppletStub;<br>
import java.awt.BorderLayout;<br>
import java.awt.Color;<br>
import java.awt.Container;<br>
import java.awt.Cursor;<br>
import java.awt.Dimension;<br>
import java.awt.event.ActionEvent;<br>
import java.awt.event.ActionListener;<br>
import java.net.MalformedURLException;<br>
import java.net.URL;<br>
import java.net.URLClassLoader;<br>
import java.util.HashMap;</p>
<p>import javax.swing.GroupLayout;<br>
import javax.swing.ImageIcon;<br>
import javax.swing.JCheckBox;<br>
import javax.swing.JCheckBoxMenuItem;<br>
import javax.swing.JFrame;<br>
import javax.swing.JMenu;<br>
import javax.swing.JMenuBar;<br>
import javax.swing.JMenuItem;<br>
import javax.swing.JPanel;<br>
import javax.swing.JPopupMenu;<br>
import javax.swing.JScrollPane;<br>
import javax.swing.LayoutStyle;<br>
import javax.swing.border.Border;<br>
/*</p>
<ul>
<li>Created by JFormDesigner on Sun Aug 14 20:56:39 EDT 2011<br>
*/</li>
</ul>
<p>import com.bot.data.hooks.LogonHooks;<br>
import com.bot.utilities.FolderUtilities;</p>
<p>/**</p>
<ul>
<li>
<p><span class="mention">@author</span> Ice332<br>
<em>/<br>
public class NewLoader extends JFrame implements AppletStub{<br>
private static final HashMap&lt;String, String&gt; parameters = new HashMap&lt;String, String&gt;();<br>
/</em>*</p>
<ul>
<li>
</li>
</ul>
<p>*/<br>
private static final long serialVersionUID = 1L;<br>
public NewLoader() throws MalformedURLException, InstantiationException, IllegalAccessException, ClassNotFoundException {<br>
initComponents();<br>
setVisible(true);<br>
parameters.put(“height”, “762”);<br>
parameters.put(“width”, “503”);<br>
parameters.put(“worldid”, “37”);<br>
parameters.put(“members”, “0”);<br>
parameters.put(“modewhat”, “0”);<br>
parameters.put(“modewhere”, “0”);<br>
parameters.put(“safemode”, “1”);<br>
parameters.put(“lang”, “0”);</p>
<pre><code> panel1.setBorder(new javax.swing.border.CompoundBorder(
 		new javax.swing.border.TitledBorder(new javax.swing.border.EmptyBorder(0, 0, 0, 0),
 			"Loading Near Reality JAR ...", javax.swing.border.TitledBorder.LEFT, //$NON-NLS-1$
 			javax.swing.border.TitledBorder.LEFT, new java.awt.Font("Dialog", java.awt.Font.BOLD, 12), //$NON-NLS-1$
 			java.awt.Color.MAGENTA), panel1.getBorder())); 
 panel1.addPropertyChangeListener(new java.beans.PropertyChangeListener(){
 	
 public void propertyChange(java.beans.PropertyChangeEvent e){
 	if("border".equals(e.getPropertyName()))throw new RuntimeException();}}); //$NON-NLS-1$
 
 
 FolderUtilities.CreateBotDirectoriesForWindows();
  URLClassLoader classLoader = new URLClassLoader(new URL[] { new URL("file:C:/NRBot/Data/" )});
 
	System.out.println("Reached!");
 Applet loader = (Applet) classLoader.loadClass("client").newInstance();
 System.out.println("loaded instance");
loader.setStub(this);
System.out.println("Set stub");
LogonHooks.InitiateLogonHook();

System.out.println("start");
JPopupMenu.setDefaultLightWeightPopupEnabled(false);
panel1.setPreferredSize(new Dimension(768, 560));
setPreferredSize(new Dimension(768, 658));
panel1.add(loader);
if(loader.isVisible() ){
   System.out.println("visable");
}
System.out.println("added loader");
getContentPane().add(loader);
loader.init();
System.out.println("init");
loader.start();
setDefaultCloseOperation(EXIT_ON_CLOSE);
</code></pre>
<p>}</p>
<p>private void menu1ActionPerformed(ActionEvent e) {<br>
// TODO add your code here<br>
}</p>
<p>private void menuItem1ActionPerformed(ActionEvent e) {<br>
// TODO add your code here<br>
}</p>
<p>private void menuItem2ActionPerformed(ActionEvent e) {<br>
// TODO add your code here<br>
}</p>
<p>private void menuItem3ActionPerformed(ActionEvent e) {<br>
// TODO add your code here<br>
}</p>
<p>private void menuItem4ActionPerformed(ActionEvent e) {<br>
// TODO add your code here<br>
}</p>
<p>private void menuItem5ActionPerformed(ActionEvent e) {<br>
// TODO add your code here<br>
}</p>
<p>private void checkBoxMenuItem1ActionPerformed(ActionEvent e) {<br>
// TODO add your code here<br>
}</p>
<p>private void checkBoxMenuItem2ActionPerformed(ActionEvent e) {<br>
// TODO add your code here<br>
}</p>
<p>private void checkBoxMenuItem3ActionPerformed(ActionEvent e) {<br>
// TODO add your code here<br>
}</p>
<p>private void menuItem6ActionPerformed(ActionEvent e) {<br>
// TODO add your code here<br>
}</p>
<p>private void checkBoxMenuItem4ActionPerformed(ActionEvent e) {<br>
// TODO add your code here<br>
}</p>
<p>private void menuItem8ActionPerformed(ActionEvent e) {<br>
// TODO add your code here<br>
}</p>
<p>private void menuItem7ActionPerformed(ActionEvent e) {<br>
// TODO add your code here<br>
}</p>
<p>private void menuItem9ActionPerformed(ActionEvent e) {<br>
// TODO add your code here<br>
}</p>
<p>private void menuItem10ActionPerformed(ActionEvent e) {<br>
// TODO add your code here<br>
}</p>
<p>private void menuItem11ActionPerformed(ActionEvent e) {<br>
// TODO add your code here<br>
}</p>
<p>private void initComponents() {<br>
// JFormDesigner - Component initialization - DO NOT MODIFY  //GEN-BEGIN:initComponents<br>
// Generated using JFormDesigner Evaluation license - Nand Thas<br>
menuBar1 = new JMenuBar();<br>
menu1 = new JMenu();<br>
menuItem1 = new JMenuItem();<br>
menuItem2 = new JMenuItem();<br>
menuItem3 = new JMenuItem();<br>
menuItem4 = new JMenuItem();<br>
menuItem5 = new JMenuItem();<br>
menu2 = new JMenu();<br>
checkBoxMenuItem1 = new JCheckBoxMenuItem();<br>
checkBoxMenuItem2 = new JCheckBoxMenuItem();<br>
checkBoxMenuItem3 = new JCheckBoxMenuItem();<br>
menu3 = new JMenu();<br>
menuItem6 = new JMenuItem();<br>
menu4 = new JMenu();<br>
checkBoxMenuItem4 = new JCheckBoxMenuItem();<br>
menu5 = new JMenu();<br>
menuItem8 = new JMenuItem();<br>
menuItem7 = new JMenuItem();<br>
menuItem9 = new JMenuItem();<br>
menu6 = new JMenu();<br>
menuItem10 = new JMenuItem();<br>
menuItem11 = new JMenuItem();<br>
scrollPane1 = new JScrollPane();<br>
panel1 = new JPanel();</p>
<pre><code> //======== this ========
 setTitle("gBot ~ Near Reality Bot  ~ v0.1 ALPHA"); //$NON-NLS-1$
 setIconImage(new ImageIcon(getClass().getResource("/com/bot/data/images/gIcon.png")).getImage()); //$NON-NLS-1$
 setName("this"); //$NON-NLS-1$
 Container contentPane = getContentPane();

 //======== menuBar1 ========
 {
 	menuBar1.setName("menuBar1"); //$NON-NLS-1$

 	//======== menu1 ========
 	{
 		menu1.setText("File"); //$NON-NLS-1$
 		menu1.setName("menu1"); //$NON-NLS-1$
 		menu1.addActionListener(new ActionListener() {
 			@Override
 			public void actionPerformed(ActionEvent e) {
 				menu1ActionPerformed(e);
 			}
 		});

 		//---- menuItem1 ----
 		menuItem1.setText("Check For Updates"); //$NON-NLS-1$
 		menuItem1.setIcon(new ImageIcon(getClass().getResource("/com/bot/data/images/quest.png"))); //$NON-NLS-1$
 		menuItem1.setName("menuItem1"); //$NON-NLS-1$
 		menuItem1.addActionListener(new ActionListener() {
 			@Override
 			public void actionPerformed(ActionEvent e) {
 				menuItem1ActionPerformed(e);
 			}
 		});
 		menu1.add(menuItem1);

 		//---- menuItem2 ----
 		menuItem2.setText("Run Script..."); //$NON-NLS-1$
 		menuItem2.setIcon(new ImageIcon(getClass().getResource("/com/bot/data/images/playButton.PNG"))); //$NON-NLS-1$
 		menuItem2.setName("menuItem2"); //$NON-NLS-1$
 		menuItem2.addActionListener(new ActionListener() {
 			@Override
 			public void actionPerformed(ActionEvent e) {
 				menuItem2ActionPerformed(e);
 			}
 		});
 		menu1.add(menuItem2);

 		//---- menuItem3 ----
 		menuItem3.setText("Pause Script.."); //$NON-NLS-1$
 		menuItem3.setIcon(new ImageIcon(getClass().getResource("/com/bot/data/images/pauseButton.PNG"))); //$NON-NLS-1$
 		menuItem3.setName("menuItem3"); //$NON-NLS-1$
 		menuItem3.addActionListener(new ActionListener() {
 			@Override
 			public void actionPerformed(ActionEvent e) {
 				menuItem3ActionPerformed(e);
 			}
 		});
 		menu1.add(menuItem3);

 		//---- menuItem4 ----
 		menuItem4.setText("Stop Script"); //$NON-NLS-1$
 		menuItem4.setIcon(new ImageIcon(getClass().getResource("/com/bot/data/images/stopButton.PNG"))); //$NON-NLS-1$
 		menuItem4.setName("menuItem4"); //$NON-NLS-1$
 		menuItem4.addActionListener(new ActionListener() {
 			@Override
 			public void actionPerformed(ActionEvent e) {
 				menuItem4ActionPerformed(e);
 			}
 		});
 		menu1.add(menuItem4);

 		//---- menuItem5 ----
 		menuItem5.setText("Exit"); //$NON-NLS-1$
 		menuItem5.setName("menuItem5"); //$NON-NLS-1$
 		menuItem5.addActionListener(new ActionListener() {
 			@Override
 			public void actionPerformed(ActionEvent e) {
 				menuItem5ActionPerformed(e);
 			}
 		});
 		menu1.add(menuItem5);
 	}
 	menuBar1.add(menu1);

 	//======== menu2 ========
 	{
 		menu2.setText("View"); //$NON-NLS-1$
 		menu2.setName("menu2"); //$NON-NLS-1$

 		//---- checkBoxMenuItem1 ----
 		checkBoxMenuItem1.setText("Player Position"); //$NON-NLS-1$
 		checkBoxMenuItem1.setName("checkBoxMenuItem1"); //$NON-NLS-1$
 		checkBoxMenuItem1.addActionListener(new ActionListener() {
 			@Override
 			public void actionPerformed(ActionEvent e) {
 				checkBoxMenuItem1ActionPerformed(e);
 			}
 		});
 		menu2.add(checkBoxMenuItem1);

 		//---- checkBoxMenuItem2 ----
 		checkBoxMenuItem2.setText("Camera Angle"); //$NON-NLS-1$
 		checkBoxMenuItem2.setName("checkBoxMenuItem2"); //$NON-NLS-1$
 		checkBoxMenuItem2.addActionListener(new ActionListener() {
 			@Override
 			public void actionPerformed(ActionEvent e) {
 				checkBoxMenuItem2ActionPerformed(e);
 			}
 		});
 		menu2.add(checkBoxMenuItem2);

 		//---- checkBoxMenuItem3 ----
 		checkBoxMenuItem3.setText("Animation"); //$NON-NLS-1$
 		checkBoxMenuItem3.setName("checkBoxMenuItem3"); //$NON-NLS-1$
 		checkBoxMenuItem3.addActionListener(new ActionListener() {
 			@Override
 			public void actionPerformed(ActionEvent e) {
 				checkBoxMenuItem3ActionPerformed(e);
 			}
 		});
 		menu2.add(checkBoxMenuItem3);
 	}
 	menuBar1.add(menu2);

 	//======== menu3 ========
 	{
 		menu3.setText("Help"); //$NON-NLS-1$
 		menu3.setName("menu3"); //$NON-NLS-1$

 		//---- menuItem6 ----
 		menuItem6.setText("How to Script.."); //$NON-NLS-1$
 		menuItem6.setIcon(new ImageIcon(getClass().getResource("/com/bot/data/images/book.png"))); //$NON-NLS-1$
 		menuItem6.setName("menuItem6"); //$NON-NLS-1$
 		menuItem6.addActionListener(new ActionListener() {
 			@Override
 			public void actionPerformed(ActionEvent e) {
 				menuItem6ActionPerformed(e);
 			}
 		});
 		menu3.add(menuItem6);
 	}
 	menuBar1.add(menu3);

 	//======== menu4 ========
 	{
 		menu4.setText("Modes"); //$NON-NLS-1$
 		menu4.setName("menu4"); //$NON-NLS-1$

 		//---- checkBoxMenuItem4 ----
 		checkBoxMenuItem4.setText("Enter Idle Mode.."); //$NON-NLS-1$
 		checkBoxMenuItem4.setName("checkBoxMenuItem4"); //$NON-NLS-1$
 		checkBoxMenuItem4.addActionListener(new ActionListener() {
 			@Override
 			public void actionPerformed(ActionEvent e) {
 				checkBoxMenuItem4ActionPerformed(e);
 			}
 		});
 		menu4.add(checkBoxMenuItem4);
 	}
 	menuBar1.add(menu4);

 	//======== menu5 ========
 	{
 		menu5.setText("Help"); //$NON-NLS-1$
 		menu5.setName("menu5"); //$NON-NLS-1$

 		//---- menuItem8 ----
 		menuItem8.setText("How to Script.."); //$NON-NLS-1$
 		menuItem8.setIcon(new ImageIcon(getClass().getResource("/com/bot/data/images/paper.png"))); //$NON-NLS-1$
 		menuItem8.setName("menuItem8"); //$NON-NLS-1$
 		menuItem8.addActionListener(new ActionListener() {
 			@Override
 			public void actionPerformed(ActionEvent e) {
 				menuItem8ActionPerformed(e);
 			}
 		});
 		menu5.add(menuItem8);

 		//---- menuItem7 ----
 		menuItem7.setText("How to Use this Bot"); //$NON-NLS-1$
 		menuItem7.setIcon(new ImageIcon(getClass().getResource("/com/bot/data/images/people_wave.png"))); //$NON-NLS-1$
 		menuItem7.setName("menuItem7"); //$NON-NLS-1$
 		menuItem7.addActionListener(new ActionListener() {
 			@Override
 			public void actionPerformed(ActionEvent e) {
 				menuItem7ActionPerformed(e);
 			}
 		});
 		menu5.add(menuItem7);

 		//---- menuItem9 ----
 		menuItem9.setText("Report a Bug!"); //$NON-NLS-1$
 		menuItem9.setIcon(new ImageIcon(getClass().getResource("/com/bot/data/images/repair.png"))); //$NON-NLS-1$
 		menuItem9.setName("menuItem9"); //$NON-NLS-1$
 		menuItem9.addActionListener(new ActionListener() {
 			@Override
 			public void actionPerformed(ActionEvent e) {
 				menuItem9ActionPerformed(e);
 			}
 		});
 		menu5.add(menuItem9);
 	}
 	menuBar1.add(menu5);

 	//======== menu6 ========
 	{
 		menu6.setText("About"); //$NON-NLS-1$
 		menu6.setName("menu6"); //$NON-NLS-1$

 		//---- menuItem10 ----
 		menuItem10.setText("Version Specifics.."); //$NON-NLS-1$
 		menuItem10.setIcon(new ImageIcon(getClass().getResource("/com/bot/data/images/graph.png"))); //$NON-NLS-1$
 		menuItem10.setName("menuItem10"); //$NON-NLS-1$
 		menuItem10.addActionListener(new ActionListener() {
 			@Override
 			public void actionPerformed(ActionEvent e) {
 				menuItem10ActionPerformed(e);
 			}
 		});
 		menu6.add(menuItem10);

 		//---- menuItem11 ----
 		menuItem11.setText("Credits"); //$NON-NLS-1$
 		menuItem11.setIcon(new ImageIcon(getClass().getResource("/com/bot/data/images/people_yellow.png"))); //$NON-NLS-1$
 		menuItem11.setName("menuItem11"); //$NON-NLS-1$
 		menuItem11.addActionListener(new ActionListener() {
 			@Override
 			public void actionPerformed(ActionEvent e) {
 				menuItem11ActionPerformed(e);
 			}
 		});
 		menu6.add(menuItem11);
 	}
 	menuBar1.add(menu6);
 }
 setJMenuBar(menuBar1);

 //======== scrollPane1 ========
 {
 	scrollPane1.setBackground(Color.white);
 	scrollPane1.setName("scrollPane1"); //$NON-NLS-1$
 }

 //======== panel1 ========
 {
 	panel1.setBackground(Color.black);
 	panel1.setCursor(Cursor.getPredefinedCursor(Cursor.CROSSHAIR_CURSOR));
 	panel1.setName("panel1"); //$NON-NLS-1$

 	// JFormDesigner evaluation mark
 	


 	GroupLayout panel1Layout = new GroupLayout(panel1);
 	panel1.setLayout(panel1Layout);
 	panel1Layout.setHorizontalGroup(
 		panel1Layout.createParallelGroup()
 			.addGap(0, 867, Short.MAX_VALUE)
 	);
 	panel1Layout.setVerticalGroup(
 		panel1Layout.createParallelGroup()
 			.addGap(0, 496, Short.MAX_VALUE)
 	);
 }

 GroupLayout contentPaneLayout = new GroupLayout(contentPane);
 contentPane.setLayout(contentPaneLayout);
 contentPaneLayout.setHorizontalGroup(
 	contentPaneLayout.createParallelGroup()
 		.addComponent(scrollPane1, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 867, Short.MAX_VALUE)
 		.addComponent(panel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
 );
 contentPaneLayout.setVerticalGroup(
 	contentPaneLayout.createParallelGroup()
 		.addGroup(GroupLayout.Alignment.TRAILING, contentPaneLayout.createSequentialGroup()
 			.addComponent(panel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
 			.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
 			.addComponent(scrollPane1, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE))
 );
 pack();
 setLocationRelativeTo(getOwner());
 // JFormDesigner - End of component initialization  //GEN-END:initComponents
</code></pre>
<p>}</p>
<p>// JFormDesigner - Variables declaration - DO NOT MODIFY  //GEN-BEGIN:variables<br>
// Generated using JFormDesigner Evaluation license - Nand Thas<br>
private JMenuBar menuBar1;<br>
private JMenu menu1;<br>
private JMenuItem menuItem1;<br>
private JMenuItem menuItem2;<br>
private JMenuItem menuItem3;<br>
private JMenuItem menuItem4;<br>
private JMenuItem menuItem5;<br>
private JMenu menu2;<br>
private JCheckBoxMenuItem checkBoxMenuItem1;<br>
private JCheckBoxMenuItem checkBoxMenuItem2;<br>
private JCheckBoxMenuItem checkBoxMenuItem3;<br>
private JMenu menu3;<br>
private JMenuItem menuItem6;<br>
private JMenu menu4;<br>
private JCheckBoxMenuItem checkBoxMenuItem4;<br>
private JMenu menu5;<br>
private JMenuItem menuItem8;<br>
private JMenuItem menuItem7;<br>
private JMenuItem menuItem9;<br>
private JMenu menu6;<br>
private JMenuItem menuItem10;<br>
private JMenuItem menuItem11;<br>
private JScrollPane scrollPane1;<br>
private JPanel panel1;<br>
// JFormDesigner - End of variables declaration  //GEN-END:variables<br>
<a class="mention" href="/u/override">@Override</a><br>
public void appletResize(int arg0, int arg1) {<br>
// TODO Auto-generated method stub</p>
<p>}<br>
<a class="mention" href="/u/override">@Override</a><br>
public final URL getCodeBase() {<br>
try {<br>
return new URL(“<a href="http://www.nrclient.com/webclient/" rel="nofollow noopener">http://www.nrclient.com/webclient/</a>”);<br>
} catch (Exception e) {<br>
return null;<br>
}<br>
}<br>
<a class="mention" href="/u/override">@Override</a><br>
public final URL getDocumentBase() {<br>
try {<br>
return new URL(“<a href="http://www.nrclient.com/webclient/" rel="nofollow noopener">http://www.nrclient.com/webclient/</a>”);<br>
} catch (Exception e) {<br>
return null;<br>
}<br>
}<br>
<a class="mention" href="/u/override">@Override</a><br>
public final String getParameter(String name) {<br>
return parameters.get(name);<br>
}<br>
<a class="mention" href="/u/override">@Override</a><br>
public final AppletContext getAppletContext() {<br>
return null;<br>
}<br>
public static void main(String[] args) {</p>
<pre><code> 		try {
 			new NewLoader().setVisible(true);
 		} catch (MalformedURLException e) {
 			// TODO Auto-generated catch block
 			e.printStackTrace();
 		} catch (InstantiationException e) {
 			// TODO Auto-generated catch block
 			e.printStackTrace();
 		} catch (IllegalAccessException e) {
 			// TODO Auto-generated catch block
 			e.printStackTrace();
 		} catch (ClassNotFoundException e) {
 			// TODO Auto-generated catch block
 			e.printStackTrace();
 		}
</code></pre>
<p>}<br>
}</p>
</li>
</ul>
<p>[/code]</p>
<p>Thanks <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/loader-isnt-working/433767/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/loader-isnt-working/433767/1</link>
        <pubDate>Tue, 21 Feb 2012 21:25:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-433767-1</guid>
        <source url="https://forum.moparisthebest.com/t/loader-isnt-working/433767.rss">Loader isnt working</source>
      </item>
  </channel>
</rss>
