<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Whats the god damn problem</title>
    <link>https://forum.moparisthebest.com/t/whats-the-god-damn-problem/252829</link>
    <description>[code]317Original Is online on port - 43594
Exception in thread &quot;main&quot; java.lang.ArrayIndexOutOfBoundsException: 17
        at ItemHandler.loadItemList(ItemHandler.java:283)
        at ItemHandler.&lt;init&gt;(ItemHandler.java:173)
        at server.main(server.java:96)[/code]

okay i looked at line 96 in serevr.java and 173 in itemhandler etc, but i dont know whats the god damn problem omg,..</description>
    
    <lastBuildDate>Thu, 25 Dec 2008 23:41:51 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/whats-the-god-damn-problem/252829.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Whats the god damn problem</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>make sure none of the items in items.cfg has 17 arguements</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/whats-the-god-damn-problem/252829/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/whats-the-god-damn-problem/252829/4</link>
        <pubDate>Thu, 25 Dec 2008 23:41:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-252829-4</guid>
        <source url="https://forum.moparisthebest.com/t/whats-the-god-damn-problem/252829.rss">Whats the god damn problem</source>
      </item>
      <item>
        <title>Whats the god damn problem</title>
        <dc:creator><![CDATA[@I_Uk_0wn4g3_I I Uk 0wn4g3 I]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/i_uk_0wn4g3_i">@I_Uk_0wn4g3_I</a> wrote:</p>
          <blockquote>
              <p>[code]// Scape - The Scape Developers Team<br>
// Phate, AridTag, Dan, DrBone420, Hero</p>
<p>import java.io.BufferedReader;<br>
import java.io.FileNotFoundException;<br>
import java.io.FileReader;<br>
import java.io.IOException;</p>
<p>public class ItemHandler {<br>
public static int DropItemCount = 0;<br>
public static int MaxDropShowDelay = 120;<br>
public static int MaxListedItems = 10000;<br>
public static int hideItemTimer = 60;<br>
public static int MaxDropItems = 100000;<br>
public static int SDID = 90;<br>
public static int showItemTimer = 60;</p>
<pre><code>public static boolean[] DroppedItemsAlwaysDrop = new boolean[MaxDropItems];
public static int[] DroppedItemsDDelay = new int[MaxDropItems];
public static int[] DroppedItemsDeletecount = new int[MaxDropItems];
public static int[] DroppedItemsDropper = new int[MaxDropItems];
public static int[] DroppedItemsH = new int[MaxDropItems];
public static int[] DroppedItemsID = new int[MaxDropItems];
public static int[] DroppedItemsN = new int[MaxDropItems];
public static int[] DroppedItemsSDelay = new int[MaxDropItems];
public static int[] DroppedItemsX = new int[MaxDropItems];
public static int[] DroppedItemsY = new int[MaxDropItems];

public static int[] globalItemAmount = new int[5001];
public static int[] globalItemController = new int[5001];
public static int[] globalItemID = new int[5001];
public static boolean[] globalItemStatic = new boolean[5001];
public static int[] globalItemTicks = new int[5001];
public static int[] globalItemX = new int[5001];
public static int[] globalItemY = new int[5001];
public static ItemList ItemList[] = new ItemList[MaxListedItems];

public static void addItem(int itemID, int itemX, int itemY,
		int itemAmount, int itemController, boolean itemStatic) {
	for (int i = 0; i &lt;= 5000; i++) {
		if (globalItemID[i] == 0) {
			globalItemController[i] = itemController;
			globalItemID[i] = itemID;
			globalItemX[i] = itemX;
			globalItemY[i] = itemY;
			globalItemAmount[i] = itemAmount;
			globalItemStatic[i] = itemStatic;
			globalItemTicks[i] = 0;
			if ((globalItemController[i] != -1)
					&amp;&amp; (globalItemController[i] != 0))
				spawnItem(globalItemID[i], globalItemX[i], globalItemY[i],
						globalItemAmount[i], globalItemController[i]);
			break;
		}
	}
}

public static void resetItemDrop() {
	for(int i = 0; i &lt;= 5000; i++) {
		globalItemID[i] = 0;
	}
}

public static void createItemAll(int itemID, int itemX, int itemY,
		int itemAmount, int itemController) {
	for (Player p : PlayerHandler.players) {
		if (p != null) {
			Client person = (Client) p;
			if ((person.playerName != null)
					&amp;&amp; !(person.playerId == itemController)) {
				if (person.distanceToPoint(itemX, itemY) &lt;= 60) {
					person.createGroundItem(itemID, itemX, itemY,
							itemAmount);
				}
			}
		}
	}
}

public static int itemAmount(int itemID, int itemX, int itemY) {
	for (int i = 0; i &lt;= 5000; i++) {
		if ((globalItemID[i] == itemID) &amp;&amp; (globalItemX[i] == itemX)
				&amp;&amp; (globalItemY[i] == itemY))
			return globalItemAmount[i];
	}
	return 0;
}

public static boolean itemExists(int itemID, int itemX, int itemY) {
	for (int i = 0; i &lt;= 5000; i++) {
		if ((globalItemID[i] == itemID) &amp;&amp; (globalItemX[i] == itemX)
				&amp;&amp; (globalItemY[i] == itemY))
			return true;
	}
	return false;
}

public static void removeItem(int itemID, int itemX, int itemY,
		int itemAmount) {
	for (int i = 0; i &lt;= 5000; i++) {
		if ((globalItemID[i] == itemID) &amp;&amp; (globalItemX[i] == itemX)
				&amp;&amp; (globalItemY[i] == itemY)
				&amp;&amp; (globalItemAmount[i] == itemAmount)) {
			removeItemAll(globalItemID[i], globalItemX[i], globalItemY[i]);
			globalItemController[i] = 0;
			globalItemID[i] = 0;
			globalItemX[i] = 0;
			globalItemY[i] = 0;
			globalItemAmount[i] = 0;
			globalItemTicks[i] = 0;
			globalItemStatic[i] = false;
			break;
		}
	}
}

public static void removeItemAll(int itemID, int itemX, int itemY) {
	// for (Player p : server.playerHandler.players) {
	for (Player p : PlayerHandler.players) {
		if (p != null) {
			Client person = (Client) p;
			if (person.playerName != null) {
				// misc.println("distance to remove
				// "+person.distanceToPoint(itemX, itemY));
				if (person.distanceToPoint(itemX, itemY) &lt;= 60) {
					person.removeGroundItem(itemX, itemY, itemID);
				}
			}
		}
	}
}

public static void spawnItem(int itemID, int itemX, int itemY,
		int itemAmount, int playerFor) {
	Client person = (Client) PlayerHandler.players[playerFor];
	person.createGroundItem(itemID, itemX, itemY, itemAmount);
}

public ItemHandler() {
	for (int i = 0; i &lt;= 5000; i++) {
		globalItemController[i] = 0;
		globalItemID[i] = 0;
		globalItemX[i] = 0;
		globalItemY[i] = 0;
		globalItemAmount[i] = 0;
		globalItemTicks[i] = 0;
		globalItemStatic[i] = false;
	}
	for (int i = 0; i &lt; MaxDropItems; i++) {
		ResetItem(i);
	}
	for (int i = 0; i &lt; MaxListedItems; i++) {
		ItemList[i] = null;
	}
	loadItemList("item.cfg");
	loadDrops("globaldrops.cfg");
}

public boolean loadDrops(String FileName) {
	String line = "";
	String token = "";
	String token2 = "";
	String token2_2 = "";
	String[] token3 = new String[10];
	boolean EndOfFile = false;
	int ReadMode = 0;
	BufferedReader characterfile = null;
	try {
		characterfile = new BufferedReader(new FileReader("config\\"
				+ FileName));
	} catch (FileNotFoundException fileex) {
		misc.println(FileName + ": file not found.");
		return false;
	}
	try {
		line = characterfile.readLine();
	} catch (IOException ioexception) {
		misc.println(FileName + ": error loading file.");
		return false;
	}
	while ((EndOfFile == false) &amp;&amp; (line != null)) {
		line = line.trim();
		int spot = line.indexOf("=");
		if (spot &gt; -1) {
			token = line.substring(0, spot);
			token = token.trim();
			token2 = line.substring(spot + 1);
			token2 = token2.trim();
			token2_2 = token2.replaceAll("\t\t", "\t");
			token2_2 = token2_2.replaceAll("\t\t", "\t");
			token2_2 = token2_2.replaceAll("\t\t", "\t");
			token2_2 = token2_2.replaceAll("\t\t", "\t");
			token2_2 = token2_2.replaceAll("\t\t", "\t");
			token3 = token2_2.split("\t");
			if (token.equals("drop")) {
				int id = Integer.parseInt(token3[0]);
				int x = Integer.parseInt(token3[1]);
				int y = Integer.parseInt(token3[2]);
				int amount = Integer.parseInt(token3[3]);
				int height = Integer.parseInt(token3[4]);
				for (int i = 0; i &lt; 5000; i++) {
					createItemAll(id, x, y, amount, globalItemController[i]);
				}
			}
		} else {
			if (line.equals("[ENDOFDROPLIST]")) {
				try {
					characterfile.close();
				} catch (IOException ioexception) {
				}
				return true;
			}
		}
		try {
			line = characterfile.readLine();
		} catch (IOException ioexception1) {
			EndOfFile = true;
		}
	}
	try {
		characterfile.close();
	} catch (IOException ioexception) {
	}
	return false;
}

public boolean loadItemList(String FileName) {
	String line = "";
	String token = "";
	String token2 = "";
	String token2_2 = "";
	String[] token3 = new String[10];
	boolean EndOfFile = false;
	BufferedReader characterfile = null;
	try {
		characterfile = new BufferedReader(new FileReader("config\\"
				+ FileName));
	} catch (FileNotFoundException fileex) {
		misc.println(FileName + ": file not found.");
		return false;
	}
	try {
		line = characterfile.readLine();
	} catch (IOException ioexception) {
		misc.println(FileName + ": error loading file.");
		return false;
	}
	while ((EndOfFile == false) &amp;&amp; (line != null)) {
		line = line.trim();
		int spot = line.indexOf("=");
		if (spot &gt; -1) {
			token = line.substring(0, spot);
			token = token.trim();
			token2 = line.substring(spot + 1);
			token2 = token2.trim();
			token2_2 = token2.replaceAll("\t\t", "\t");
			token2_2 = token2_2.replaceAll("\t\t", "\t");
			token2_2 = token2_2.replaceAll("\t\t", "\t");
			token2_2 = token2_2.replaceAll("\t\t", "\t");
			token2_2 = token2_2.replaceAll("\t\t", "\t");
			token3 = token2_2.split("\t");
			if (token.equals("item")) {
				int[] Bonuses = new int[12];
				for (int i = 0; i &lt; 12; i++) {
					if (token3[(6 + i)] != null) {
						Bonuses[i] = Integer.parseInt(token3[(6 + i)]);
					} else {
						break;
					}
				}
				newItemList(Integer.parseInt(token3[0]), token3[1]
						.replaceAll("_", " "), token3[2].replaceAll("_",
						" "), Double.parseDouble(token3[4]), Double
						.parseDouble(token3[4]), Double
						.parseDouble(token3[6]), Bonuses);
			}
		} else {
			if (line.equals("[ENDOFITEMLIST]")) {
				try {
					characterfile.close();
				} catch (IOException ioexception) {
				}
				return true;
			}
		}
		try {
			line = characterfile.readLine();
		} catch (IOException ioexception1) {
			EndOfFile = true;
		}
	}
	try {
		characterfile.close();
	} catch (IOException ioexception) {
	}
	return false;
}

public void newItemList(int ItemId, String ItemName,
		String ItemDescription, double ShopValue, double LowAlch,
		double HighAlch, int Bonuses[]) {
	int slot = -1;
	for (int i = 0; i &lt; 9999; i++) {
		if (ItemList[i] == null) {
			slot = i;
			break;
		}
	}

	if (slot == -1)
		return; // no free slot found
	ItemName = ItemName.replace("'", "");
	ItemDescription = ItemDescription.replace("'", "");
	ItemList newItemList = new ItemList(ItemId);
	newItemList.itemName = ItemName;
	newItemList.itemDescription = ItemDescription;
	newItemList.ShopValue = ShopValue;
	newItemList.LowAlch = LowAlch;
	newItemList.HighAlch = HighAlch;
	newItemList.Bonuses = Bonuses;
	ItemList[slot] = newItemList;
}

public void process() {
	for (int i = 0; i &lt;= 5000; i++) {
		if (globalItemID[i] != 0)
			globalItemTicks[i]++;

		if ((hideItemTimer + showItemTimer) == globalItemTicks[i]) {
			if (!globalItemStatic[i]) {
				removeItemAll(globalItemID[i], globalItemX[i],
						globalItemY[i]);
			} else {
				misc.println("Item is static");
			}
		}

		if (showItemTimer == globalItemTicks[i]) {
			if (!globalItemStatic[i]) {
				createItemAll(globalItemID[i], globalItemX[i],
						globalItemY[i], globalItemAmount[i],
						globalItemController[i]);
			} else
				misc.println("Item is static");
		}

	}
}

public void ResetItem(int ArrayID) {
	DroppedItemsID[ArrayID] = -1;
	DroppedItemsX[ArrayID] = -1;
	DroppedItemsY[ArrayID] = -1;
	DroppedItemsN[ArrayID] = -1;
	DroppedItemsH[ArrayID] = -1;
	DroppedItemsDDelay[ArrayID] = -1;
	DroppedItemsSDelay[ArrayID] = 0;
	DroppedItemsDropper[ArrayID] = -1;
	DroppedItemsDeletecount[ArrayID] = 0;
	DroppedItemsAlwaysDrop[ArrayID] = false;
}
</code></pre>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/whats-the-god-damn-problem/252829/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/whats-the-god-damn-problem/252829/3</link>
        <pubDate>Thu, 25 Dec 2008 23:33:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-252829-3</guid>
        <source url="https://forum.moparisthebest.com/t/whats-the-god-damn-problem/252829.rss">Whats the god damn problem</source>
      </item>
      <item>
        <title>Whats the god damn problem</title>
        <dc:creator><![CDATA[@zyle1992 Zymus]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zyle1992">@zyle1992</a> wrote:</p>
          <blockquote>
              <p>post your entire “loadItemList” method.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/whats-the-god-damn-problem/252829/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/whats-the-god-damn-problem/252829/2</link>
        <pubDate>Thu, 25 Dec 2008 23:29:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-252829-2</guid>
        <source url="https://forum.moparisthebest.com/t/whats-the-god-damn-problem/252829.rss">Whats the god damn problem</source>
      </item>
      <item>
        <title>Whats the god damn problem</title>
        <dc:creator><![CDATA[@I_Uk_0wn4g3_I I Uk 0wn4g3 I]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/i_uk_0wn4g3_i">@I_Uk_0wn4g3_I</a> wrote:</p>
          <blockquote>
              <p><code>317Original Is online on port - 43594
Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: 17
        at ItemHandler.loadItemList(ItemHandler.java:283)
        at ItemHandler.&lt;init&gt;(ItemHandler.java:173)
        at server.main(server.java:96)</code></p>
<p>okay i looked at line 96 in serevr.java and 173 in itemhandler etc, but i dont know whats the god damn problem omg,…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/whats-the-god-damn-problem/252829/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/whats-the-god-damn-problem/252829/1</link>
        <pubDate>Thu, 25 Dec 2008 23:28:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-252829-1</guid>
        <source url="https://forum.moparisthebest.com/t/whats-the-god-damn-problem/252829.rss">Whats the god damn problem</source>
      </item>
  </channel>
</rss>
