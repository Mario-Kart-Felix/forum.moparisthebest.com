<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Protocol documentation</title>
    <link>https://forum.moparisthebest.com/t/protocol-documentation/290546</link>
    <description>[size=99pt]I AM SUPER_[/size]

the runescape protocol is split up into raw data (bare) or what many call [b]frames[/b] (header).

Every change of the RuneScape 2 protocol comes with 2 new arrays holding lengths for every frame used. One is used on the server, the other on the client.
Examples:

RS2 #317:
[code]    public static final int[] packetSizes = {
            0, 0, 0, 0, 6, 0, 0, 0, 4, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
            0, 0, 0, 0, -2, 4, 3, 0, 0, 0,
            0, 0, 0, 0, 5, 0, 0, 6, 0, 0,
            9, 0, 0, -2, 0, 0, 0, 0, 0, 0,
            -2, 1, 0, 0, 2, -2, 0, 0, 0, 0,
            6, 3, 2, 4, 2, 4, 0, 0, 0, 4,
            0, -2, 0, 0, 7, 2, 0, 6, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 2, 0, 1,
            0, 2, 0, 0, -1, 4, 1, 0, 0, 0,
            1, 0, 0, 0, 2, 0, 0, 15, 0, 0,
            0, 4, 4, 0, 0, 0, -2, 0, 0, 0,
            0, 0, 0, 0, 6, 0, 0, 0, 0, 0,
            0, 0, 2, 0, 0, 0, 0, 14, 0, 0,
            0, 4, 0, 0, 0, 0, 3, 0, 0, 0,
            4, 0, 0, 0, 2, 0, 6, 0, 0, 0,
            0, 3, 0, 0, 5, 0, 10, 6, 0, 0,
            0, 0, 0, 0, 0, 2, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, -1, 0, 0, 0,
            4, 0, 0, 0, 0, 0, 3, 0, 2, 0,
            0, 0, 0, 0, -2, 7, 0, 0, 2, 0,
            0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
            8, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            2, -2, 0, 0, 0, 0, 6, 0, 4, 3,
            0, 0, 0, -1, 6, 0, 0
    };[/code]

RS2 #508:
[code]    static int[] packetSizes = { 0, 3, 0, 0, 0, 0, 6, 0, 2, 0, 5, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 5, 0, 0, 0, 15, 4, 0, 0, 0, 0, 10, 0, 2, 0, 0, 4, 6, 4, 0, 0, 0, 0, -1, 0, 10, 7, 0, 0, 0, 0, 24, 0, 3, 0, 5, 0, 0, 0, 0, 6, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, -2, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 7, 0, 0, 0, 0, 0, 1, 3, 4, 0, 0, 0, 0, 0, 0, 0, 6, 4, 0, 15, 0, 0, 1, 0, -2, 8, 5, 8, -1, 0, 0, -2, 0, 0, 0, 0, 0, 8, 0, -1, 0, 0, -2, 0, 20, 0, -2, 10, 0, -2, 0, -1, 0, 2, 0,
            0, -1, 0, 0, -2, 4, -1, 0, 8, 0, 0, 1, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, -2, 1, 4, -2, 8, 0, -1, 2, -1, -2, 0, 0, 0, 0, 6, 0, 3, 0, 0, 0, 2, -1, 0, 6, 0, 7, 2, 0, 0, 0, 0, 3, 0, 0, 0, -1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, -2, 6, -1, 4, 0, 0, -2, 12, 0, 0, 1, 9, 0, -1, 0, 0, 5, 0, -1, 0, 0, 0, 0, 3, -2, 0, 0, 0, 0, 6, 4, 5, 6, 2, 0, 5, -1, 0, 0, -2 };
[/code]

The table of lengths is indexed by a frame&#39;s [b]opcode[/b], [b]type[/b], or [b]id[/b]. These tell the client what type of frame the current is. The opcode of a frame is the first field in a frame&#39;s header, and is an unsigned 1-byte integer. 

As you see, some of the frame sizes in these lists are negative, and it&#39;s impossible for a frame to be negatively sized.. these frames are [B]variable-sized[/B]. With variable sized frames, an extra field is put into the frame&#39;s header which denotes the frame&#39;s payload&#39;s size. 
There are two types of variable-sized frames: [b]short[/b] and [b]byte[/b]. Each are depicted in the packet lengths lists by a [b]-2[/b] and [b]-1[/b], respectively.
Their names come from the type of datatype and size they are written as in the header; a short variable-sized frame has the payload size written as an unsigned 2-byte short integer, while the  byte variable-sized frame has the payload size written as an unsigned 1-byte integer.

Code:
[code]        if (Class49.packetOpcode == -1)
        {
            avail--;
            PlayerDefinition.connection.read(1, 0, Class68_Sub13_Sub8.incomingVector.data);
            Class68_Sub13_Sub8.incomingVector.position = 0;
            Class49.packetOpcode = Class68_Sub13_Sub8.incomingVector.getPacketOpcode();
            Class106.packetSize = Class9.packetSizes[Class49.packetOpcode];
        }
        if (Class106.packetSize == -1)
        {
            if (avail &lt;= 0)
                return false;
            PlayerDefinition.connection.read(1, 0, Class68_Sub13_Sub8.incomingVector.data);
            Class106.packetSize = 0xff &amp; Class68_Sub13_Sub8.incomingVector.data[0];
            avail--;
        }
        if (Class106.packetSize == -2)
        {
            if (avail &gt; 1)
            {
                avail -= 2;
                PlayerDefinition.connection.read(2, 0, Class68_Sub13_Sub8.incomingVector.data);
                Class68_Sub13_Sub8.incomingVector.position = 0;
                Class106.packetSize = Class68_Sub13_Sub8.incomingVector.readUShort();
            } else
                return false;
        }[/code]

Frame structures:

A statically sized frame has the structure:
[code]{
    ubyte opcode;
    byte payload[size];
}[/code]
where size is equivalent to the packet&#39;s size in the packet lengths list.

A short variable-sized frame:
[code]{
    ubyte opcode;
    ushort size;
    byte payload[size];
}[/code]

And lastly, a byte variable-sized frame:
[code]{
    ubyte opcode;
    ubyte size;
    byte payload[size];
}[/code]

After the client has successfully read a frame, it then checks against it&#39;s opcode to discover what type of data lies in the payload, and then begins to read.

JaGeX employs several different types of datatypes in their Buffer, Stream, Packet, etc. class. 

They also employ several types of encryption. Among them include two methods: [B]RSA[/B] and [B]ISAAC ciphering[/B].

RSA:

JaGeX only uses RSA upon the login block, which contains the ISAAC cipher seed, username, and password, among other things. This helps stop people from packet sniffing to steal passwords, as well as to kill proxy bots (like AutoRune).
Code:
RS2 #508:
[code]                    int[] seed = new int[4];
                    seed[1] = (int) (9.9999999E7 * Math.random());
                    seed[0] = (int) (9.9999999E7 * Math.random());
                    seed[2] = (int) (Class68_Sub13_Sub11.serverSessionKey &gt;&gt; 32);
                    ((ByteVector) CRCFileReader.outputVector).position = 0;
                    seed[3] = (int) Class68_Sub13_Sub11.serverSessionKey;
                    CRCFileReader.outputVector.writeByte(10);
                    CRCFileReader.outputVector.writeInteger(seed[0]);
                    CRCFileReader.outputVector.writeInteger(seed[1]);
                    CRCFileReader.outputVector.writeInteger(seed[2]);
                    CRCFileReader.outputVector.writeInteger(seed[3]);
                    CRCFileReader.outputVector.writeLong(Class68_Sub28_Sub2.username.toLong(10908));
                    CRCFileReader.outputVector.writeString(Class68_Sub28_Sub2.password);
                    CRCFileReader.outputVector.encodeRSABlock(Class68_Sub4.RSA_PUBLIC_KEY, Class68_Sub22.RSA_MODULUS);[/code]
RSC #204:
[code]            int seed[] = new int[4];
            seed[0] = (int) (Math.random() * 99999999D);
            seed[1] = (int) (Math.random() * 99999999D);
            seed[2] = (int) (serverSessionKey &gt;&gt; 32);
            seed[3] = (int) serverSessionKey;
            EncodedBlock loginBlock = new EncodedBlock(new byte[500]);
            loginBlock.offset = 0;
            loginBlock.writeByte(10);
            loginBlock.writeInt(seed[0]);
            loginBlock.writeInt(seed[1]);
            loginBlock.writeInt(seed[2]);
            loginBlock.writeInt(seed[3]);
            loginBlock.writeInt(getUserId());
            loginBlock.writeString(username);
            loginBlock.writeString(password);
            loginBlock.encodeRSA(d, m);[/code]
RS2 #317:
[code]                int isaacRandomGenSeed[] = new int[4];
                isaacRandomGenSeed[0] = (int) (Math.random() * 99999999D);
                isaacRandomGenSeed[1] = (int) (Math.random() * 99999999D);
                isaacRandomGenSeed[2] = (int) (serverSessionKey &gt;&gt; 32);
                isaacRandomGenSeed[3] = (int) serverSessionKey;
                outputStream.currentOffset = 0;
                outputStream.addByte(10);
                outputStream.addInt(isaacRandomGenSeed[0]);
                outputStream.addInt(isaacRandomGenSeed[1]);
                outputStream.addInt(isaacRandomGenSeed[2]);
                outputStream.addInt(isaacRandomGenSeed[3]);
                outputStream.addInt(signlink.uid);
                outputStream.addString(username);
                outputStream.addString(password);
                outputStream.rsaEncodeBuffer();[/code]

ISAAC ciphering:

Once the login procedure occurs, the RuneScape client and server use the 4 integer seed from the login block to seed two ISAAC ciphers on both sides: one for ciphering, and one for deciphering. The ISAAC ciphers are used to mask and demask each frame&#39;s opcode. This was most likely created to stop AutoRune-like bots that worked by injecting data into the intercepted stream.
Code:

RS2 #317:
[code]            if (packetOpcode == -1) {
                socketStream.flushInputStream(inStream.buffer, 1);
                packetOpcode = inStream.buffer[0] &amp; 0xff;
                if (encryption != null)
                    packetOpcode = packetOpcode - encryption.nextInt() &amp; 0xff;
                packetSize = SizeConstants.packetSizes[packetOpcode];
                dataAvailable--;
            }[/code]
[code]    public void addPacketId(int i) {
        buffer[currentOffset++] = (byte) (i + encryption.nextInt());
    }[/code]
RS2 #508:
[code]        if (Class49.packetOpcode == -1)
        {
            avail--;
            PlayerDefinition.connection.read(1, 0, Class68_Sub13_Sub8.incomingVector.data);
            Class68_Sub13_Sub8.incomingVector.position = 0;
            Class49.packetOpcode = Class68_Sub13_Sub8.incomingVector.getPacketOpcode();
            Class106.packetSize = Class9.packetSizes[Class49.packetOpcode];
        }[/code]
[code]    final int getPacketOpcode()
    {
        return (data[position++] - randomNumberGenerator.next()) &amp; 0xff;
    }
[/code]
[code]    final void writeOpcode(int opcode)
    {
        data[position++] = (byte) (opcode + randomNumberGenerator.next());
    }
[/code]
RSC #204:
[code]        opcode = connection.decodeOpcodeISAAC(opcode);[/code]
[code]        if (outgoingISAACGen != null) {
            int packetId = buffer[packetStartOffset + 2] &amp; 0xff;
            buffer[packetStartOffset + 2] = (byte) (packetId + outgoingISAACGen.next());
        }[/code]

This is by far not that in depth or anything of that sort, just a small introduction to show how the RuneScape protocol worked.

If you have anything to add that is valid, feel free to ask</description>
    
    <lastBuildDate>Sat, 23 Jan 2010 15:02:08 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/protocol-documentation/290546.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Protocol documentation</title>
        <dc:creator><![CDATA[@Yz85Racer Yz85Racer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/yz85racer">@Yz85Racer</a> wrote:</p>
          <blockquote>
              <p>rep++ nice tut will use in future thx 4 sharing</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/protocol-documentation/290546/19">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/protocol-documentation/290546/19</link>
        <pubDate>Sat, 23 Jan 2010 15:02:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290546-19</guid>
        <source url="https://forum.moparisthebest.com/t/protocol-documentation/290546.rss">Protocol documentation</source>
      </item>
      <item>
        <title>Protocol documentation</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>This deserves a bump.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/protocol-documentation/290546/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/protocol-documentation/290546/18</link>
        <pubDate>Fri, 22 Jan 2010 17:40:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290546-18</guid>
        <source url="https://forum.moparisthebest.com/t/protocol-documentation/290546.rss">Protocol documentation</source>
      </item>
      <item>
        <title>Protocol documentation</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>[quote=“davidi2, post:16, topic:290546”]Who gave you Java guru?</p>
<p>And how do you get IRC legend? Ive never been on it…[/quote]</p>
<ol>
<li>Lothy</li>
<li>By visiting IRC frequently for at least 2 years.</li>
</ol>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/protocol-documentation/290546/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/protocol-documentation/290546/17</link>
        <pubDate>Tue, 04 Aug 2009 20:00:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290546-17</guid>
        <source url="https://forum.moparisthebest.com/t/protocol-documentation/290546.rss">Protocol documentation</source>
      </item>
      <item>
        <title>Protocol documentation</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>Who gave you Java guru?</p>
<p>And how do you get IRC legend? Ive never been on it…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/protocol-documentation/290546/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/protocol-documentation/290546/16</link>
        <pubDate>Tue, 04 Aug 2009 17:25:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290546-16</guid>
        <source url="https://forum.moparisthebest.com/t/protocol-documentation/290546.rss">Protocol documentation</source>
      </item>
      <item>
        <title>Protocol documentation</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>blimp</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/protocol-documentation/290546/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/protocol-documentation/290546/15</link>
        <pubDate>Tue, 04 Aug 2009 17:11:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290546-15</guid>
        <source url="https://forum.moparisthebest.com/t/protocol-documentation/290546.rss">Protocol documentation</source>
      </item>
      <item>
        <title>Protocol documentation</title>
        <dc:creator><![CDATA[@juliepacker juliepacker]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/juliepacker">@juliepacker</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="13" data-topic="290546">
<div class="title">
<div class="quote-controls"></div>
 `Lewk_:</div>
<blockquote>
<p>Hmm. Good job Super_.</p>
</blockquote>
</aside>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/protocol-documentation/290546/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/protocol-documentation/290546/14</link>
        <pubDate>Mon, 03 Aug 2009 09:34:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290546-14</guid>
        <source url="https://forum.moparisthebest.com/t/protocol-documentation/290546.rss">Protocol documentation</source>
      </item>
      <item>
        <title>Protocol documentation</title>
        <dc:creator><![CDATA[@P_I_M_P_3_D_Tut `Lewk_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/p_i_m_p_3_d_tut">@P_I_M_P_3_D_Tut</a> wrote:</p>
          <blockquote>
              <p>Hmm. Good job Super_.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/protocol-documentation/290546/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/protocol-documentation/290546/13</link>
        <pubDate>Sun, 02 Aug 2009 21:32:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290546-13</guid>
        <source url="https://forum.moparisthebest.com/t/protocol-documentation/290546.rss">Protocol documentation</source>
      </item>
      <item>
        <title>Protocol documentation</title>
        <dc:creator><![CDATA[@Shiver Shiver]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/shiver">@Shiver</a> wrote:</p>
          <blockquote>
              <p>bump</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/protocol-documentation/290546/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/protocol-documentation/290546/12</link>
        <pubDate>Sun, 02 Aug 2009 21:27:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290546-12</guid>
        <source url="https://forum.moparisthebest.com/t/protocol-documentation/290546.rss">Protocol documentation</source>
      </item>
      <item>
        <title>Protocol documentation</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="10" data-topic="290546">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/_ikram/40/5_513041d5f7104045db30895d3b90af16.png" class="avatar"> _ikram:</div>
<blockquote>
<p>I think we got the point your super, no need to make the “I AM SUPER_” super big, nother the less good job.</p>
</blockquote>
</aside>
<p>This was posted when this account was named Jython_ and it wasn’t obvious to people that it was me so I put the I AM SUPER_ so people don’t get confused and claim I stole these etc.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/protocol-documentation/290546/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/protocol-documentation/290546/11</link>
        <pubDate>Tue, 28 Jul 2009 12:33:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290546-11</guid>
        <source url="https://forum.moparisthebest.com/t/protocol-documentation/290546.rss">Protocol documentation</source>
      </item>
      <item>
        <title>Protocol documentation</title>
        <dc:creator><![CDATA[@_ikram _ikram]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/_ikram">@_ikram</a> wrote:</p>
          <blockquote>
              <p>I think we got the point your super, no need to make the “I AM SUPER_” super big, nother the less good job.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/protocol-documentation/290546/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/protocol-documentation/290546/10</link>
        <pubDate>Tue, 28 Jul 2009 11:34:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290546-10</guid>
        <source url="https://forum.moparisthebest.com/t/protocol-documentation/290546.rss">Protocol documentation</source>
      </item>
      <item>
        <title>Protocol documentation</title>
        <dc:creator><![CDATA[@Unlimitedfello Unlimitedfello]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unlimitedfello">@Unlimitedfello</a> wrote:</p>
          <blockquote>
              <p>He is supah</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/protocol-documentation/290546/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/protocol-documentation/290546/9</link>
        <pubDate>Tue, 28 Jul 2009 06:09:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290546-9</guid>
        <source url="https://forum.moparisthebest.com/t/protocol-documentation/290546.rss">Protocol documentation</source>
      </item>
      <item>
        <title>Protocol documentation</title>
        <dc:creator><![CDATA[@jc22493 Jc22493]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jc22493">@jc22493</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="4" data-topic="290546">
<div class="title">
<div class="quote-controls"></div>
 Gnarly...:</div>
<blockquote>
<p>I don’t believe you’re super.</p>
</blockquote>
</aside>
<p>o he is</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/protocol-documentation/290546/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/protocol-documentation/290546/8</link>
        <pubDate>Tue, 28 Jul 2009 02:48:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290546-8</guid>
        <source url="https://forum.moparisthebest.com/t/protocol-documentation/290546.rss">Protocol documentation</source>
      </item>
      <item>
        <title>Protocol documentation</title>
        <dc:creator><![CDATA[@atrox atrox_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/atrox">@atrox</a> wrote:</p>
          <blockquote>
              <p>rep++4u</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/protocol-documentation/290546/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/protocol-documentation/290546/7</link>
        <pubDate>Mon, 27 Jul 2009 20:16:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290546-7</guid>
        <source url="https://forum.moparisthebest.com/t/protocol-documentation/290546.rss">Protocol documentation</source>
      </item>
      <item>
        <title>Protocol documentation</title>
        <dc:creator><![CDATA[@system system]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/system">@system</a> wrote:</p>
          <blockquote>
              <p>This is fuckin’ super_b.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/protocol-documentation/290546/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/protocol-documentation/290546/6</link>
        <pubDate>Fri, 24 Jul 2009 02:53:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290546-6</guid>
        <source url="https://forum.moparisthebest.com/t/protocol-documentation/290546.rss">Protocol documentation</source>
      </item>
      <item>
        <title>Protocol documentation</title>
        <dc:creator><![CDATA[@Solar Solar]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/solar">@Solar</a> wrote:</p>
          <blockquote>
              <p>Nice work legendary_ oops, I mean super_ <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/protocol-documentation/290546/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/protocol-documentation/290546/5</link>
        <pubDate>Fri, 24 Jul 2009 02:01:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290546-5</guid>
        <source url="https://forum.moparisthebest.com/t/protocol-documentation/290546.rss">Protocol documentation</source>
      </item>
      <item>
        <title>Protocol documentation</title>
        <dc:creator><![CDATA[@Gnarly3 Gnarly...]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/gnarly3">@Gnarly3</a> wrote:</p>
          <blockquote>
              <p>I don’t believe you’re super.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/protocol-documentation/290546/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/protocol-documentation/290546/4</link>
        <pubDate>Fri, 24 Jul 2009 01:53:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290546-4</guid>
        <source url="https://forum.moparisthebest.com/t/protocol-documentation/290546.rss">Protocol documentation</source>
      </item>
      <item>
        <title>Protocol documentation</title>
        <dc:creator><![CDATA[@xpatx xpatx]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xpatx">@xpatx</a> wrote:</p>
          <blockquote>
              <p>ily super_</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/protocol-documentation/290546/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/protocol-documentation/290546/3</link>
        <pubDate>Fri, 24 Jul 2009 01:29:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290546-3</guid>
        <source url="https://forum.moparisthebest.com/t/protocol-documentation/290546.rss">Protocol documentation</source>
      </item>
      <item>
        <title>Protocol documentation</title>
        <dc:creator><![CDATA[@NewbieNewty Newty]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/newbienewty">@NewbieNewty</a> wrote:</p>
          <blockquote>
              <p>Good job super_, interesting to see how thing’s have changed in the different protocols.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/protocol-documentation/290546/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/protocol-documentation/290546/2</link>
        <pubDate>Fri, 24 Jul 2009 01:24:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290546-2</guid>
        <source url="https://forum.moparisthebest.com/t/protocol-documentation/290546.rss">Protocol documentation</source>
      </item>
      <item>
        <title>Protocol documentation</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>[size=99pt]I AM SUPER_[/size]</p>
<p>the runescape protocol is split up into raw data (bare) or what many call <span class="bbcode-b">frames</span> (header).</p>
<p>Every change of the RuneScape 2 protocol comes with 2 new arrays holding lengths for every frame used. One is used on the server, the other on the client.<br>
Examples:</p>
<p>RS2 <span class="hashtag">#317:</span></p>
<p><code>    public static final int[] packetSizes = {
            0, 0, 0, 0, 6, 0, 0, 0, 4, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
            0, 0, 0, 0, -2, 4, 3, 0, 0, 0,
            0, 0, 0, 0, 5, 0, 0, 6, 0, 0,
            9, 0, 0, -2, 0, 0, 0, 0, 0, 0,
            -2, 1, 0, 0, 2, -2, 0, 0, 0, 0,
            6, 3, 2, 4, 2, 4, 0, 0, 0, 4,
            0, -2, 0, 0, 7, 2, 0, 6, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 2, 0, 1,
            0, 2, 0, 0, -1, 4, 1, 0, 0, 0,
            1, 0, 0, 0, 2, 0, 0, 15, 0, 0,
            0, 4, 4, 0, 0, 0, -2, 0, 0, 0,
            0, 0, 0, 0, 6, 0, 0, 0, 0, 0,
            0, 0, 2, 0, 0, 0, 0, 14, 0, 0,
            0, 4, 0, 0, 0, 0, 3, 0, 0, 0,
            4, 0, 0, 0, 2, 0, 6, 0, 0, 0,
            0, 3, 0, 0, 5, 0, 10, 6, 0, 0,
            0, 0, 0, 0, 0, 2, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, -1, 0, 0, 0,
            4, 0, 0, 0, 0, 0, 3, 0, 2, 0,
            0, 0, 0, 0, -2, 7, 0, 0, 2, 0,
            0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
            8, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            2, -2, 0, 0, 0, 0, 6, 0, 4, 3,
            0, 0, 0, -1, 6, 0, 0
    };</code></p>
<p>RS2 <span class="hashtag">#508:</span></p>
<p><code>    static int[] packetSizes = { 0, 3, 0, 0, 0, 0, 6, 0, 2, 0, 5, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 5, 0, 0, 0, 15, 4, 0, 0, 0, 0, 10, 0, 2, 0, 0, 4, 6, 4, 0, 0, 0, 0, -1, 0, 10, 7, 0, 0, 0, 0, 24, 0, 3, 0, 5, 0, 0, 0, 0, 6, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, -2, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 7, 0, 0, 0, 0, 0, 1, 3, 4, 0, 0, 0, 0, 0, 0, 0, 6, 4, 0, 15, 0, 0, 1, 0, -2, 8, 5, 8, -1, 0, 0, -2, 0, 0, 0, 0, 0, 8, 0, -1, 0, 0, -2, 0, 20, 0, -2, 10, 0, -2, 0, -1, 0, 2, 0,
            0, -1, 0, 0, -2, 4, -1, 0, 8, 0, 0, 1, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, -2, 1, 4, -2, 8, 0, -1, 2, -1, -2, 0, 0, 0, 0, 6, 0, 3, 0, 0, 0, 2, -1, 0, 6, 0, 7, 2, 0, 0, 0, 0, 3, 0, 0, 0, -1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, -2, 6, -1, 4, 0, 0, -2, 12, 0, 0, 1, 9, 0, -1, 0, 0, 5, 0, -1, 0, 0, 0, 0, 3, -2, 0, 0, 0, 0, 6, 4, 5, 6, 2, 0, 5, -1, 0, 0, -2 };
</code></p>
<p>The table of lengths is indexed by a frame’s <span class="bbcode-b">opcode</span>, <span class="bbcode-b">type</span>, or <span class="bbcode-b">id</span>. These tell the client what type of frame the current is. The opcode of a frame is the first field in a frame’s header, and is an unsigned 1-byte integer.</p>
<p>As you see, some of the frame sizes in these lists are negative, and it’s impossible for a frame to be negatively sized… these frames are <span class="bbcode-b">variable-sized</span>. With variable sized frames, an extra field is put into the frame’s header which denotes the frame’s payload’s size.<br>
There are two types of variable-sized frames: <span class="bbcode-b">short</span> and <span class="bbcode-b">byte</span>. Each are depicted in the packet lengths lists by a <span class="bbcode-b">-2</span> and <span class="bbcode-b">-1</span>, respectively.<br>
Their names come from the type of datatype and size they are written as in the header; a short variable-sized frame has the payload size written as an unsigned 2-byte short integer, while the  byte variable-sized frame has the payload size written as an unsigned 1-byte integer.</p>
<p>Code:</p>
<p><code>        if (Class49.packetOpcode == -1)
        {
            avail--;
            PlayerDefinition.connection.read(1, 0, Class68_Sub13_Sub8.incomingVector.data);
            Class68_Sub13_Sub8.incomingVector.position = 0;
            Class49.packetOpcode = Class68_Sub13_Sub8.incomingVector.getPacketOpcode();
            Class106.packetSize = Class9.packetSizes[Class49.packetOpcode];
        }
        if (Class106.packetSize == -1)
        {
            if (avail &lt;= 0)
                return false;
            PlayerDefinition.connection.read(1, 0, Class68_Sub13_Sub8.incomingVector.data);
            Class106.packetSize = 0xff &amp; Class68_Sub13_Sub8.incomingVector.data[0];
            avail--;
        }
        if (Class106.packetSize == -2)
        {
            if (avail &gt; 1)
            {
                avail -= 2;
                PlayerDefinition.connection.read(2, 0, Class68_Sub13_Sub8.incomingVector.data);
                Class68_Sub13_Sub8.incomingVector.position = 0;
                Class106.packetSize = Class68_Sub13_Sub8.incomingVector.readUShort();
            } else
                return false;
        }</code></p>
<p>Frame structures:</p>
<p>A statically sized frame has the structure:</p>
<p><code>{
    ubyte opcode;
    byte payload[size];
}</code><br>
where size is equivalent to the packet’s size in the packet lengths list.</p>
<p>A short variable-sized frame:</p>
<p><code>{
    ubyte opcode;
    ushort size;
    byte payload[size];
}</code></p>
<p>And lastly, a byte variable-sized frame:</p>
<p><code>{
    ubyte opcode;
    ubyte size;
    byte payload[size];
}</code></p>
<p>After the client has successfully read a frame, it then checks against it’s opcode to discover what type of data lies in the payload, and then begins to read.</p>
<p>JaGeX employs several different types of datatypes in their Buffer, Stream, Packet, etc. class.</p>
<p>They also employ several types of encryption. Among them include two methods: <span class="bbcode-b">RSA</span> and <span class="bbcode-b">ISAAC ciphering</span>.</p>
<p>RSA:</p>
<p>JaGeX only uses RSA upon the login block, which contains the ISAAC cipher seed, username, and password, among other things. This helps stop people from packet sniffing to steal passwords, as well as to kill proxy bots (like AutoRune).<br>
Code:<br>
RS2 <span class="hashtag">#508:</span></p>
<p><code>                    int[] seed = new int[4];
                    seed[1] = (int) (9.9999999E7 * Math.random());
                    seed[0] = (int) (9.9999999E7 * Math.random());
                    seed[2] = (int) (Class68_Sub13_Sub11.serverSessionKey &gt;&gt; 32);
                    ((ByteVector) CRCFileReader.outputVector).position = 0;
                    seed[3] = (int) Class68_Sub13_Sub11.serverSessionKey;
                    CRCFileReader.outputVector.writeByte(10);
                    CRCFileReader.outputVector.writeInteger(seed[0]);
                    CRCFileReader.outputVector.writeInteger(seed[1]);
                    CRCFileReader.outputVector.writeInteger(seed[2]);
                    CRCFileReader.outputVector.writeInteger(seed[3]);
                    CRCFileReader.outputVector.writeLong(Class68_Sub28_Sub2.username.toLong(10908));
                    CRCFileReader.outputVector.writeString(Class68_Sub28_Sub2.password);
                    CRCFileReader.outputVector.encodeRSABlock(Class68_Sub4.RSA_PUBLIC_KEY, Class68_Sub22.RSA_MODULUS);</code><br>
RSC <span class="hashtag">#204:</span></p>
<p><code>            int seed[] = new int[4];
            seed[0] = (int) (Math.random() * 99999999D);
            seed[1] = (int) (Math.random() * 99999999D);
            seed[2] = (int) (serverSessionKey &gt;&gt; 32);
            seed[3] = (int) serverSessionKey;
            EncodedBlock loginBlock = new EncodedBlock(new byte[500]);
            loginBlock.offset = 0;
            loginBlock.writeByte(10);
            loginBlock.writeInt(seed[0]);
            loginBlock.writeInt(seed[1]);
            loginBlock.writeInt(seed[2]);
            loginBlock.writeInt(seed[3]);
            loginBlock.writeInt(getUserId());
            loginBlock.writeString(username);
            loginBlock.writeString(password);
            loginBlock.encodeRSA(d, m);</code><br>
RS2 <span class="hashtag">#317:</span></p>
<p><code>                int isaacRandomGenSeed[] = new int[4];
                isaacRandomGenSeed[0] = (int) (Math.random() * 99999999D);
                isaacRandomGenSeed[1] = (int) (Math.random() * 99999999D);
                isaacRandomGenSeed[2] = (int) (serverSessionKey &gt;&gt; 32);
                isaacRandomGenSeed[3] = (int) serverSessionKey;
                outputStream.currentOffset = 0;
                outputStream.addByte(10);
                outputStream.addInt(isaacRandomGenSeed[0]);
                outputStream.addInt(isaacRandomGenSeed[1]);
                outputStream.addInt(isaacRandomGenSeed[2]);
                outputStream.addInt(isaacRandomGenSeed[3]);
                outputStream.addInt(signlink.uid);
                outputStream.addString(username);
                outputStream.addString(password);
                outputStream.rsaEncodeBuffer();</code></p>
<p>ISAAC ciphering:</p>
<p>Once the login procedure occurs, the RuneScape client and server use the 4 integer seed from the login block to seed two ISAAC ciphers on both sides: one for ciphering, and one for deciphering. The ISAAC ciphers are used to mask and demask each frame’s opcode. This was most likely created to stop AutoRune-like bots that worked by injecting data into the intercepted stream.<br>
Code:</p>
<p>RS2 <span class="hashtag">#317:</span></p>
<p><code>            if (packetOpcode == -1) {
                socketStream.flushInputStream(inStream.buffer, 1);
                packetOpcode = inStream.buffer[0] &amp; 0xff;
                if (encryption != null)
                    packetOpcode = packetOpcode - encryption.nextInt() &amp; 0xff;
                packetSize = SizeConstants.packetSizes[packetOpcode];
                dataAvailable--;
            }</code></p>
<p><code>    public void addPacketId(int i) {
        buffer[currentOffset++] = (byte) (i + encryption.nextInt());
    }</code><br>
RS2 <span class="hashtag">#508:</span></p>
<p><code>        if (Class49.packetOpcode == -1)
        {
            avail--;
            PlayerDefinition.connection.read(1, 0, Class68_Sub13_Sub8.incomingVector.data);
            Class68_Sub13_Sub8.incomingVector.position = 0;
            Class49.packetOpcode = Class68_Sub13_Sub8.incomingVector.getPacketOpcode();
            Class106.packetSize = Class9.packetSizes[Class49.packetOpcode];
        }</code></p>
<p><code>    final int getPacketOpcode()
    {
        return (data[position++] - randomNumberGenerator.next()) &amp; 0xff;
    }
</code></p>
<p><code>    final void writeOpcode(int opcode)
    {
        data[position++] = (byte) (opcode + randomNumberGenerator.next());
    }
</code><br>
RSC <span class="hashtag">#204:</span></p>
<pre><code class="lang-auto">        opcode = connection.decodeOpcodeISAAC(opcode);</code></pre>
<p><code>        if (outgoingISAACGen != null) {
            int packetId = buffer[packetStartOffset + 2] &amp; 0xff;
            buffer[packetStartOffset + 2] = (byte) (packetId + outgoingISAACGen.next());
        }</code></p>
<p>This is by far not that in depth or anything of that sort, just a small introduction to show how the RuneScape protocol worked.</p>
<p>If you have anything to add that is valid, feel free to ask</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/protocol-documentation/290546/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/protocol-documentation/290546/1</link>
        <pubDate>Fri, 24 Jul 2009 01:21:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-290546-1</guid>
        <source url="https://forum.moparisthebest.com/t/protocol-documentation/290546.rss">Protocol documentation</source>
      </item>
  </channel>
</rss>
