<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Patching java classes</title>
    <link>https://forum.moparisthebest.com/t/patching-java-classes/14042</link>
    <description>Hopefully this simple tutorial will give you an idea about how to patch classes ;)

Usually the only time you would ever need to patch a class is if you are using a package and one of its classes produces undesired results. Rather than extract it and have a messy structure, or repackage it and possibly incur copyright issues, you can simple patch it (though this may also be a breach of copyright if you have to decompile the code ;D)

Firstly I will show you the file structure...[code]+---bin
+---patch
|       Patchee.java
|
\---src
        Patchee.java
        PatchExample.java[/code]
...and source code that I used
[code]// src\PatchExample.java
class PatchExample {
   public static void main(String[] arg) {
       Patchee.output();
   }
}[/code][code]// src\Patchee.java
class Patchee {
    public static void output() {
        System.out.println(&quot;I am unpatched!&quot;);
    }
}[/code][code]// patch\Patchee.java
class Patchee {
    public static void output() {
        System.out.println(&quot;I am patched!&quot;);
    }
}[/code]

firstly lets compile the default classes (those in the src directory)
[code]&gt;javac -d bin src/*.java[/code]

now lets run it, just to make sure it works :)
[code]&gt;java -cp bin PatchExample
I am unpatched![/code]
As you can see, yes, it did work, now lets patch it! Since i have already made the changes I wanted, it is simply a matter of compiling the patched class. 

[code]&gt;javac -cp bin patch/*.java[/code] Next is the part that pulls it all together, it is fairly obvious once you see and understand it, though you may not have realised ;)

[code]&gt;java -cp patch;bin PatchExample
I am patched![/code]Notice this time the [i]patch[/i] directory has been added to the [u]start[/u] of the classpath, thus allowing the patched classes to be loaded first.

Often any patching you may do wont be on such small a scale, but this still gets the point across.


[right][size=7pt]First ever tut zomg![/size][/right]</description>
    
    <lastBuildDate>Tue, 12 Sep 2006 22:44:29 +0000</lastBuildDate>
    <category>General Discussion</category>
    <atom:link href="https://forum.moparisthebest.com/t/patching-java-classes/14042.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Patching java classes</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>I cant see of any (or remember) if there are any unless of course the application has a tight security mechanism and rejects it</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/patching-java-classes/14042/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/patching-java-classes/14042/3</link>
        <pubDate>Tue, 12 Sep 2006 22:44:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-14042-3</guid>
        <source url="https://forum.moparisthebest.com/t/patching-java-classes/14042.rss">Patching java classes</source>
      </item>
      <item>
        <title>Patching java classes</title>
        <dc:creator><![CDATA[@silabsoft RuneAgent]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silabsoft">@silabsoft</a> wrote:</p>
          <blockquote>
              <p>whats the limitations with patching?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/patching-java-classes/14042/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/patching-java-classes/14042/2</link>
        <pubDate>Tue, 12 Sep 2006 22:38:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-14042-2</guid>
        <source url="https://forum.moparisthebest.com/t/patching-java-classes/14042.rss">Patching java classes</source>
      </item>
      <item>
        <title>Patching java classes</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>Hopefully this simple tutorial will give you an idea about how to patch classes <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
<p>Usually the only time you would ever need to patch a class is if you are using a package and one of its classes produces undesired results. Rather than extract it and have a messy structure, or repackage it and possibly incur copyright issues, you can simple patch it (though this may also be a breach of copyright if you have to decompile the code ;D)</p>
<p>Firstly I will show you the file structure…<code>+---bin
+---patch
|       Patchee.java
|
\---src
        Patchee.java
        PatchExample.java</code><br>
…and source code that I used</p>
<p><code>// src\PatchExample.java
class PatchExample {
   public static void main(String[] arg) {
       Patchee.output();
   }
}</code><code>// src\Patchee.java
class Patchee {
    public static void output() {
        System.out.println("I am unpatched!");
    }
}</code><code>// patch\Patchee.java
class Patchee {
    public static void output() {
        System.out.println("I am patched!");
    }
}</code></p>
<p>firstly lets compile the default classes (those in the src directory)</p>
<pre><code class="lang-auto">&gt;javac -d bin src/*.java</code></pre>
<p>now lets run it, just to make sure it works <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p><code>&gt;java -cp bin PatchExample
I am unpatched!</code><br>
As you can see, yes, it did work, now lets patch it! Since i have already made the changes I wanted, it is simply a matter of compiling the patched class.</p>
<p><code>&gt;javac -cp bin patch/*.java</code> Next is the part that pulls it all together, it is fairly obvious once you see and understand it, though you may not have realised <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=9" title=":wink:" class="emoji" alt=":wink:"></p>
<p><code>&gt;java -cp patch;bin PatchExample
I am patched!</code>Notice this time the <span class="bbcode-i">patch</span> directory has been added to the <span class="bbcode-u">start</span> of the classpath, thus allowing the patched classes to be loaded first.</p>
<p>Often any patching you may do wont be on such small a scale, but this still gets the point across.</p>
<p>[right][size=7pt]First ever tut zomg![/size][/right]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/patching-java-classes/14042/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/patching-java-classes/14042/1</link>
        <pubDate>Tue, 12 Sep 2006 21:55:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-14042-1</guid>
        <source url="https://forum.moparisthebest.com/t/patching-java-classes/14042.rss">Patching java classes</source>
      </item>
  </channel>
</rss>
