<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Using TCP in Java &amp; TCP vs. UDP in Java</title>
    <link>https://forum.moparisthebest.com/t/using-tcp-in-java-tcp-vs-udp-in-java/172227</link>
    <description>I am having a load of problems with all my server-client based applications, and I can&#39;t seem to figure out why.

On one side, I can have a perfectly working system (or so it seems), but then when I add in the need for many packets in a shorter time frame, I get huge lag issues and slow receiving. I know that TCP packets are quite a load larger than UDP mainly because they have large headers that make sure the packets stay in order and do not become truncated or malformed in some way. But is the large header actually work the long wait, or am I just using TCP wrong? If either or, could someone please provide a way to use UDP and/or TCP (I have used DatagramPackets and DatagramSockets in the past, but I personally do not like them as much. =\) Thanks.</description>
    
    <lastBuildDate>Thu, 10 Jan 2008 21:42:44 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/using-tcp-in-java-tcp-vs-udp-in-java/172227.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Using TCP in Java &amp; TCP vs. UDP in Java</title>
        <dc:creator><![CDATA[@yakman yakman]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/yakman">@yakman</a> wrote:</p>
          <blockquote>
              <p>ah well data input stream is just a useful shortcut for some things,<br>
i like it cause all its methods throw EOFException if needed, so you don’t have to constants check the return value.<br>
if you’re going to use it, look through the source <span class="bbcode-i">and understand it</span></p>
<p>like readUnsignedShort() is something like this</p>
<pre><code class="lang-auto">public int readUnsignedShort() {
     int i1 = in.read();
     int i2 = in.read();
     if(i1 | i2 &lt; 0)
          throw new EOFException();
     return (i1 &lt;&lt; 8) | (i2);
}</code></pre>
<p>^^ probably got that a big wrong, but its the general idea</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/using-tcp-in-java-tcp-vs-udp-in-java/172227/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/using-tcp-in-java-tcp-vs-udp-in-java/172227/6</link>
        <pubDate>Thu, 10 Jan 2008 21:42:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-172227-6</guid>
        <source url="https://forum.moparisthebest.com/t/using-tcp-in-java-tcp-vs-udp-in-java/172227.rss">Using TCP in Java &amp; TCP vs. UDP in Java</source>
      </item>
      <item>
        <title>Using TCP in Java &amp; TCP vs. UDP in Java</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <p>[quote=“yakman, post:4, topic:172227”]well i assume you’re making a server, we haven’t really seen any sourcecode from it, but this is how i would handle the incoming data, but for all i know, you already do this.</p>
<pre><code class="lang-auto">//inputList is an instance of List&lt;DataInputStream&gt;
for(DataInputStream in : inputList) {
     if(in.avaliable() &gt; 0) {
          //the protocol says the first two bytes are the length of rest of the buffer
          int len = in.readUnsignedShort();
          byte[] buffer = new byte[len];
          in.readFully(buffer, 0, len);

          //incomingQueue is an instance of Queue&lt;byte[]&gt;
          synchronized(incomingQueue) {
               incomingQueue.offer(buffer);
               incomingQueue.notify();
          }
          //there is another thread which handles the parsing of the packets
          //it gets the lock of incomingQueue and takes out a byte[], when there is no more, it wait()
          //until woken up again
     }
}</code></pre>
<p>tbh, iv never made a program which only behaves as a server like this, but i think this would work out alright, maybe you could optimise some parts.<br>
beware that this setup gives a lot of trust to the client, a malicious client could try to crash your server by sending a small length and large amounts of data.<br>
but you could do some bounds checking or something, and disconnect the badly behaving client if you need to[/quote]</p>
<p>Okay thanks a lot for that. To be fully honest, I never used a DataInputStream before, but I have known of its existence. I mainly just used my own methods which probably is not the best idea. =S</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/using-tcp-in-java-tcp-vs-udp-in-java/172227/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/using-tcp-in-java-tcp-vs-udp-in-java/172227/5</link>
        <pubDate>Thu, 10 Jan 2008 17:32:32 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-172227-5</guid>
        <source url="https://forum.moparisthebest.com/t/using-tcp-in-java-tcp-vs-udp-in-java/172227.rss">Using TCP in Java &amp; TCP vs. UDP in Java</source>
      </item>
      <item>
        <title>Using TCP in Java &amp; TCP vs. UDP in Java</title>
        <dc:creator><![CDATA[@yakman yakman]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/yakman">@yakman</a> wrote:</p>
          <blockquote>
              <p>well i assume you’re making a server, we haven’t really seen any sourcecode from it, but this is how i would handle the incoming data, but for all i know, you already do this.</p>
<pre><code class="lang-auto">//inputList is an instance of List&lt;DataInputStream&gt;
for(DataInputStream in : inputList) {
     if(in.avaliable() &gt; 0) {
          //the protocol says the first two bytes are the length of rest of the buffer
          int len = in.readUnsignedShort();
          byte[] buffer = new byte[len];
          in.readFully(buffer, 0, len);

          //incomingQueue is an instance of Queue&lt;byte[]&gt;
          synchronized(incomingQueue) {
               incomingQueue.offer(buffer);
               incomingQueue.notify();
          }
          //there is another thread which handles the parsing of the packets
          //it gets the lock of incomingQueue and takes out a byte[], when there is no more, it wait()
          //until woken up again
     }
}</code></pre>
<p>tbh, iv never made a program which only behaves as a server like this, but i think this would work out alright, maybe you could optimise some parts.<br>
beware that this setup gives a lot of trust to the client, a malicious client could try to crash your server by sending a small length and large amounts of data.<br>
but you could do some bounds checking or something, and disconnect the badly behaving client if you need to</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/using-tcp-in-java-tcp-vs-udp-in-java/172227/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/using-tcp-in-java-tcp-vs-udp-in-java/172227/4</link>
        <pubDate>Thu, 10 Jan 2008 16:06:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-172227-4</guid>
        <source url="https://forum.moparisthebest.com/t/using-tcp-in-java-tcp-vs-udp-in-java/172227.rss">Using TCP in Java &amp; TCP vs. UDP in Java</source>
      </item>
      <item>
        <title>Using TCP in Java &amp; TCP vs. UDP in Java</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="2" data-topic="172227">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/pwnd/40/5_6bca9977b612b7aeef77ba1ec1cd67b3.png" class="avatar"> Pwnd:</div>
<blockquote>
<p>There’s a reason why they have a header.</p>
</blockquote>
</aside>
<p>I know there is. But you can also make your own headers in a udp packet that is probably a lot smaller than the default one in the tcp packet. I just want to know a good way for tcp transfer in Java.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/using-tcp-in-java-tcp-vs-udp-in-java/172227/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/using-tcp-in-java-tcp-vs-udp-in-java/172227/3</link>
        <pubDate>Thu, 10 Jan 2008 07:47:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-172227-3</guid>
        <source url="https://forum.moparisthebest.com/t/using-tcp-in-java-tcp-vs-udp-in-java/172227.rss">Using TCP in Java &amp; TCP vs. UDP in Java</source>
      </item>
      <item>
        <title>Using TCP in Java &amp; TCP vs. UDP in Java</title>
        <dc:creator><![CDATA[@Pwnd Pwnd]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pwnd">@Pwnd</a> wrote:</p>
          <blockquote>
              <p>There’s a reason why they have a header.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/using-tcp-in-java-tcp-vs-udp-in-java/172227/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/using-tcp-in-java-tcp-vs-udp-in-java/172227/2</link>
        <pubDate>Thu, 10 Jan 2008 06:18:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-172227-2</guid>
        <source url="https://forum.moparisthebest.com/t/using-tcp-in-java-tcp-vs-udp-in-java/172227.rss">Using TCP in Java &amp; TCP vs. UDP in Java</source>
      </item>
      <item>
        <title>Using TCP in Java &amp; TCP vs. UDP in Java</title>
        <dc:creator><![CDATA[@mod_taharok Taharok]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mod_taharok">@mod_taharok</a> wrote:</p>
          <blockquote>
              <p>I am having a load of problems with all my server-client based applications, and I can’t seem to figure out why.</p>
<p>On one side, I can have a perfectly working system (or so it seems), but then when I add in the need for many packets in a shorter time frame, I get huge lag issues and slow receiving. I know that TCP packets are quite a load larger than UDP mainly because they have large headers that make sure the packets stay in order and do not become truncated or malformed in some way. But is the large header actually work the long wait, or am I just using TCP wrong? If either or, could someone please provide a way to use UDP and/or TCP (I have used DatagramPackets and DatagramSockets in the past, but I personally do not like them as much. =) Thanks.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/using-tcp-in-java-tcp-vs-udp-in-java/172227/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/using-tcp-in-java-tcp-vs-udp-in-java/172227/1</link>
        <pubDate>Thu, 10 Jan 2008 05:28:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-172227-1</guid>
        <source url="https://forum.moparisthebest.com/t/using-tcp-in-java-tcp-vs-udp-in-java/172227.rss">Using TCP in Java &amp; TCP vs. UDP in Java</source>
      </item>
  </channel>
</rss>
