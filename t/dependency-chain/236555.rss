<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Dependency Chain</title>
    <link>https://forum.moparisthebest.com/t/dependency-chain/236555</link>
    <description>There were no good implementations of a dependency calculator/chain that I could find (in fact, I couldn&#39;t find any at all), so I wrote my own.

Of course, this could be optimized a bit (pretty sure..), but it&#39;s fairly simple.  Quite useful if you are writing an updater and need to manage the order in which your transforms (or &quot;hooks&quot;) need to execute.  A lot can be improved upon.

Dependent.java:
[code]package cp.dependency;

public interface Dependent
{
    public Class&lt;?&gt;[] getDependencies();
}

[/code]

DependencyChain.java:
[code]package cp.dependency;

import java.util.*;

public class DependencyChain&lt;T extends Dependent&gt;
{
    private LinkedList&lt;T&gt; ordered;
    private List&lt;T&gt; unordered;

    public DependencyChain()
    {
        ordered = new LinkedList&lt;T&gt;();
        unordered = new ArrayList&lt;T&gt;();
    }

    public DependencyChain(Collection&lt;? extends T&gt; initial)
    {
        this();
        unordered.addAll(initial);
    }

    public void addDependent(T d)
    {
        if (!unordered.contains(d))
            unordered.add(d);
    }

    public void removeDependent(Dependent d)
    {
        unordered.remove(d);
    }

    public LinkedList&lt;T&gt; getOrderedChain()
    {
        return ordered;
    }

    public List&lt;T&gt; getDependent()
    {
        return unordered;
    }

    public boolean calculate()
    {
        return calculate(500);
    }

    public boolean calculate(int max_cycles)
    {
        ordered.clear();
        List&lt;T&gt; temp = new ArrayList&lt;T&gt;(unordered);

        for (int i = 0; i &lt; temp.size(); i++)
        {
            T d = temp.get(i);
            if (d.getDependencies() == null)
            {
                temp.remove(i);
                ordered.addLast(d);
            }
        }

        int c = 0;
        while (!temp.isEmpty() &amp;&amp; c++ &lt;= max_cycles)
        {
            for (int i = 0; i &lt; temp.size(); i++)
            {
                T d = temp.get(i);
                boolean met = true;
                for (Class&lt;?&gt; clazz : d.getDependencies())
                {
                    if (!linkedListContainsClass(ordered, clazz))
                    {
                        met = false;
                        break;
                    }
                }

                if (met)
                {
                    temp.remove(i);
                    ordered.addLast(d);
                }
            }
        }

        return c &lt;= max_cycles;
    }

    private boolean linkedListContainsClass(LinkedList&lt;? extends T&gt; list, Class&lt;?&gt; clazz)
    {
        for (T d : list)
        {
            if (d.getClass().isAssignableFrom(clazz))
                return true;
        }
        return false;
    }
}

[/code]

and a test case:
[code]package cp.dependency.test;

import cp.dependency.DependencyChain;
import cp.dependency.Dependent;
import java.util.Arrays;

public class TestDependencies
{
    static class A implements Dependent
    {
        public Class&lt;?&gt;[] getDependencies()
        {
            return null;
        }
    }
    static class B implements Dependent
    {
        public Class&lt;?&gt;[] getDependencies()
        {
            return new Class&lt;?&gt;[] {A.class};
        }
    }
    static class C implements Dependent
    {
        public Class&lt;?&gt;[] getDependencies()
        {
            return new Class&lt;?&gt;[] {A.class, D.class};
        }
    }
    static class D implements Dependent
    {
        public Class&lt;?&gt;[] getDependencies()
        {
            return new Class&lt;?&gt;[] {A.class, B.class};
        }
    }

    public static void main(String[] args)
    {
        DependencyChain&lt;Dependent&gt; dep = new DependencyChain&lt;Dependent&gt;(Arrays.asList(new D(), new B(), new A(), new C()));
        dep.calculate();

        System.out.println(Arrays.toString(dep.getOrderedChain().toArray(new Dependent[4])));
    }
}

[/code]


Documentation is nil, but it&#39;s fairly straightforward how to use it.



Feel free to out-do me, idiotic discussion not welcome (Frell...).</description>
    
    <lastBuildDate>Sat, 25 Oct 2008 13:53:55 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/dependency-chain/236555.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Dependency Chain</title>
        <dc:creator><![CDATA[@k00dr k00dr]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/k00dr">@k00dr</a> wrote:</p>
          <blockquote>
              <p>Something I put together (no circularity protection)</p>
<p>[code]import java.util.LinkedList;<br>
import java.util.List;</p>
<p>public final class DependencyChain {</p>
<p>private final LinkedList dependents;</p>
<p>public DependencyChain() {<br>
dependents = new LinkedList();<br>
}</p>
<p>public final void add(Dependent dependent) {<br>
dependents.add(dependent);<br>
}</p>
<p>public final List getChain() {<br>
List chain = new LinkedList();<br>
for(Dependent dependent : dependents) {<br>
addToChain(dependent, chain);<br>
}<br>
return chain;<br>
}</p>
<p>private final void addToChain(Dependent dependent, List chain) {<br>
if(chain.contains(dependent)) {<br>
return;<br>
}<br>
Class[] dependencies = dependent.getDependents();<br>
if(dependencies != null) {<br>
for(int i = 0; i &lt; dependencies.length; i++) {<br>
Dependent d = seek(dependencies[i]);<br>
if(d != null) {<br>
addToChain(d, chain);<br>
}<br>
else {<br>
throw new IllegalStateException(“cannot satisfy dependencies”);<br>
}<br>
}<br>
}<br>
chain.add(dependent);<br>
}</p>
<p>private final Dependent seek(Class type) {<br>
for(Dependent dependent : dependents) {<br>
if(dependent.getClass() == type) {<br>
return dependent;<br>
}<br>
}<br>
return null;<br>
}</p>
<p>//cbf to split this stuff in two files<br>
public static interface Dependent {</p>
<pre><code>public abstract Class[] getDependents();
</code></pre>
<p>}</p>
<p>}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dependency-chain/236555/32">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dependency-chain/236555/32</link>
        <pubDate>Sat, 25 Oct 2008 13:53:55 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-236555-32</guid>
        <source url="https://forum.moparisthebest.com/t/dependency-chain/236555.rss">Dependency Chain</source>
      </item>
      <item>
        <title>Dependency Chain</title>
        <dc:creator><![CDATA[@qauters qauters]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/qauters">@qauters</a> wrote:</p>
          <blockquote>
              <p>[quote=“frank_, post:30, topic:236555”][quote author=qauters link=topic=312214.msg2504484#msg2504484 date=1224864108]<br>
Can’t believe you think your solution is perfect.<br>
[/quote]i dont have a solution, but im not retarded either[/quote]<br>
Your updater did it the same, only using Annotations and sorted it using some 3rd party classes. (saev’s if I’m correct)<br>
Never said you where retarded, just for some reason which I can’t figure out you keep defending a factory dependency system.<br>
Putting it into a real life context, would make you understand quickly enough why a product dependency system works better.<br>
If I build a table, I need oak planks. I don’t care where the planks are made as long as they’re made.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dependency-chain/236555/31">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dependency-chain/236555/31</link>
        <pubDate>Sat, 25 Oct 2008 09:02:10 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-236555-31</guid>
        <source url="https://forum.moparisthebest.com/t/dependency-chain/236555.rss">Dependency Chain</source>
      </item>
      <item>
        <title>Dependency Chain</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>[quote=“qauters, post:27, topic:236555”]Can’t believe you think your solution is perfect.[/quote]i dont have a solution, but im not retarded either</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dependency-chain/236555/30">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dependency-chain/236555/30</link>
        <pubDate>Sat, 25 Oct 2008 00:25:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-236555-30</guid>
        <source url="https://forum.moparisthebest.com/t/dependency-chain/236555.rss">Dependency Chain</source>
      </item>
      <item>
        <title>Dependency Chain</title>
        <dc:creator><![CDATA[@qauters qauters]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/qauters">@qauters</a> wrote:</p>
          <blockquote>
              <p>[quote=“Yz85Racer, post:28, topic:236555”][quote author=qauters link=topic=312214.msg2504484#msg2504484 date=1224864108]</p>
<aside class="quote no-group">
<blockquote>
<p>you are obviously dumb, it is abstracting that shitty boolean expression you are using</p>
</blockquote>
</aside>
<p>I depend on a product while you depend on the factory of the product.<br>
[/quote]<br>
I don’t see how that is a bad thing?[/quote]<br>
Well, when a different/new factory creates the product you would have to update your transforms to depend on the new factory.<br>
In my case the product would remain the same, so no problems at all.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dependency-chain/236555/29">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dependency-chain/236555/29</link>
        <pubDate>Fri, 24 Oct 2008 21:34:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-236555-29</guid>
        <source url="https://forum.moparisthebest.com/t/dependency-chain/236555.rss">Dependency Chain</source>
      </item>
      <item>
        <title>Dependency Chain</title>
        <dc:creator><![CDATA[@Yz85Racer Yz85Racer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/yz85racer">@Yz85Racer</a> wrote:</p>
          <blockquote>
              <p>[quote=“qauters, post:27, topic:236555”][quote author=frank_ link=topic=312214.msg2504433#msg2504433 date=1224862206]<br>
you are obviously dumb, it is abstracting that shitty boolean expression you are using<br>
[/quote]<br>
I depend on a product while you depend on the factory of the product.[/quote]<br>
I don’t see how that is a bad thing?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dependency-chain/236555/28">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dependency-chain/236555/28</link>
        <pubDate>Fri, 24 Oct 2008 21:08:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-236555-28</guid>
        <source url="https://forum.moparisthebest.com/t/dependency-chain/236555.rss">Dependency Chain</source>
      </item>
      <item>
        <title>Dependency Chain</title>
        <dc:creator><![CDATA[@qauters qauters]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/qauters">@qauters</a> wrote:</p>
          <blockquote>
              <p>What is wrong with that expression, it simple calls getHook(type, name) != null;<br>
Since I have a reflection bot, hooks are stored in a hash map instead of injected right away.</p>
<p>Can’t believe you think your solution is perfect.<br>
I depend on a product while you depend on the factory of the product.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dependency-chain/236555/27">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dependency-chain/236555/27</link>
        <pubDate>Fri, 24 Oct 2008 16:01:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-236555-27</guid>
        <source url="https://forum.moparisthebest.com/t/dependency-chain/236555.rss">Dependency Chain</source>
      </item>
      <item>
        <title>Dependency Chain</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>you are obviously dumb, it is abstracting that shitty boolean expression you are using</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dependency-chain/236555/26">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dependency-chain/236555/26</link>
        <pubDate>Fri, 24 Oct 2008 15:30:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-236555-26</guid>
        <source url="https://forum.moparisthebest.com/t/dependency-chain/236555.rss">Dependency Chain</source>
      </item>
      <item>
        <title>Dependency Chain</title>
        <dc:creator><![CDATA[@qauters qauters]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/qauters">@qauters</a> wrote:</p>
          <blockquote>
              <p>[quote=“frank_, post:24, topic:236555”]a transform is usually just the name given to the task that is identifying <em>stuff</em></p>
<ol>
<li>modularity, there is none</li>
<li>you dont remove it, you mark it as being complete? i really dont see what you are trying to say[/quote]</li>
</ol>
<ol>
<li>Of course there are: this would give me 3 fields and a class. It will never change as well.</li>
</ol>
<pre><code class="lang-auto">if (op == 3326) {
   ClientScript.intStack[intStackOff++] = Client.myPlayer.level;
   break;
}</code></pre>
<ol start="2">
<li>I meant removing a field from a transform. e.g. they change a method, which means a field you hooked in it previous can’t be hooked anymore. You now hook it in a different class and therefor have to update previous transforms’ dependencies to the new one.</li>
</ol>
<p>I just consider:</p>
<pre><code class="lang-auto">boolean canHook(){
   return hasHook("Field", "STATIC.Plane") &amp;&amp; hasHook("Field", "Player.Level") &amp;&amp; hasHook("Class", "RSString");
}</code></pre>
<p>as a better way then writing:</p>
<pre><code class="lang-auto">public Class&lt;?&gt;[] getDependencies()
{
   return new Class&lt;?&gt;[] 
   {
      Camera.class /*plane field*/, 
      Player.class /*Player.level field*/,
      RSString.class /*RSString class*/
   };
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dependency-chain/236555/25">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dependency-chain/236555/25</link>
        <pubDate>Fri, 24 Oct 2008 14:10:37 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-236555-25</guid>
        <source url="https://forum.moparisthebest.com/t/dependency-chain/236555.rss">Dependency Chain</source>
      </item>
      <item>
        <title>Dependency Chain</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>a transform is usually just the name given to the task that is identifying <em>stuff</em></p>
<ol>
<li>modularity, there is none</li>
<li>you dont remove it, you mark it as being complete? i really dont see what you are trying to say</li>
</ol>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dependency-chain/236555/24">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dependency-chain/236555/24</link>
        <pubDate>Thu, 23 Oct 2008 23:47:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-236555-24</guid>
        <source url="https://forum.moparisthebest.com/t/dependency-chain/236555.rss">Dependency Chain</source>
      </item>
      <item>
        <title>Dependency Chain</title>
        <dc:creator><![CDATA[@qauters qauters]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/qauters">@qauters</a> wrote:</p>
          <blockquote>
              <p>[quote=“frank_, post:22, topic:236555”]why would you have multiple hooks in one file (you prolly have only static methods, too)</p>
<p>how the hell does it make having multiple hooks for the same element fail[/quote]</p>
<ol>
<li>Why would you locate the same method multiple times, some fields always come in the same order so you hook them in the same order. There’s nothing weird about that… (their vm code interpreter for example)</li>
<li>It wouldn’t really fail but you would have to include all different classes hooking that field. But as soon as you remove a certain thing you will have to check every transform again.</li>
</ol>
<p>I mean, why is a dependency of a transform better then a dependency of a field. Your supposed to know that field before you start the transform. So why do it the hard way?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dependency-chain/236555/23">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dependency-chain/236555/23</link>
        <pubDate>Thu, 23 Oct 2008 16:02:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-236555-23</guid>
        <source url="https://forum.moparisthebest.com/t/dependency-chain/236555.rss">Dependency Chain</source>
      </item>
      <item>
        <title>Dependency Chain</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>why would you have multiple hooks in one file (you prolly have only static methods, too)</p>
<p>how the hell does it make having multiple hooks for the same element fail</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dependency-chain/236555/22">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dependency-chain/236555/22</link>
        <pubDate>Thu, 23 Oct 2008 15:53:08 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-236555-22</guid>
        <source url="https://forum.moparisthebest.com/t/dependency-chain/236555.rss">Dependency Chain</source>
      </item>
      <item>
        <title>Dependency Chain</title>
        <dc:creator><![CDATA[@qauters qauters]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/qauters">@qauters</a> wrote:</p>
          <blockquote>
              <p>[quote=“frank_, post:20, topic:236555”][quote author=qauters link=topic=312214.msg2502637#msg2502637 date=1224773649]</p>
<aside class="quote no-group">
<blockquote>
<aside class="quote no-group">
<blockquote>
<p>i dont think you grasp the concept of this system</p>
</blockquote>
</aside>
</blockquote>
</aside>
<p>Quoting without an explanation is just stupid.</p>
<p>I have my arguments, which are still valid in my point of view.<br>
Saying I don’t understand the system, without telling why is something what 10 year olds do.<br>
[/quote]criticising something when you dont have a clue how it works is something a retard of any age does[/quote]<br>
OMG.<br>
A class tells what classes it needs, it then gets sorted so that all the classes are hooked in the right order.</p>
<p>I never said it was bad, but I just had some points where it might be less usable.<br>
I had 2 valid arguments:<br>
multi hooking would fail: because the same field might be hooked by different classes (unless you add them all…) (but not every updater does it).<br>
moving a hook from one class to another would give you some extra work, because you need to look trough your previous transforms to check if it needed it and update it’s dependency.</p>
<p>It’s funny you still didn’t say what I said wrong…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dependency-chain/236555/21">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dependency-chain/236555/21</link>
        <pubDate>Thu, 23 Oct 2008 15:11:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-236555-21</guid>
        <source url="https://forum.moparisthebest.com/t/dependency-chain/236555.rss">Dependency Chain</source>
      </item>
      <item>
        <title>Dependency Chain</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>[quote=“qauters, post:19, topic:236555”][quote author=Ollie link=topic=312214.msg2502034#msg2502034 date=1224722959]</p>
<aside class="quote no-group">
<blockquote>
<p>i dont think you grasp the concept of this system</p>
</blockquote>
</aside>
<p>[/quote]<br>
Quoting without an explanation is just stupid.</p>
<p>I have my arguments, which are still valid in my point of view.<br>
Saying I don’t understand the system, without telling why is something what 10 year olds do.[/quote]criticising something when you dont have a clue how it works is something a retard of any age does</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dependency-chain/236555/20">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dependency-chain/236555/20</link>
        <pubDate>Thu, 23 Oct 2008 14:59:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-236555-20</guid>
        <source url="https://forum.moparisthebest.com/t/dependency-chain/236555.rss">Dependency Chain</source>
      </item>
      <item>
        <title>Dependency Chain</title>
        <dc:creator><![CDATA[@qauters qauters]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/qauters">@qauters</a> wrote:</p>
          <blockquote>
              <p>[quote=“Ollie, post:17, topic:236555”][quote author=frank_ link=topic=312214.msg2499824#msg2499824 date=1224601131]<br>
i dont think you grasp the concept of this system<br>
[/quote][/quote]<br>
Quoting without an explanation is just stupid.</p>
<p>I have my arguments, which are still valid in my point of view.<br>
Saying I don’t understand the system, without telling why is something what 10 year olds do.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dependency-chain/236555/19">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dependency-chain/236555/19</link>
        <pubDate>Thu, 23 Oct 2008 14:54:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-236555-19</guid>
        <source url="https://forum.moparisthebest.com/t/dependency-chain/236555.rss">Dependency Chain</source>
      </item>
      <item>
        <title>Dependency Chain</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>thanks ollie</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dependency-chain/236555/18">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dependency-chain/236555/18</link>
        <pubDate>Thu, 23 Oct 2008 01:02:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-236555-18</guid>
        <source url="https://forum.moparisthebest.com/t/dependency-chain/236555.rss">Dependency Chain</source>
      </item>
      <item>
        <title>Dependency Chain</title>
        <dc:creator><![CDATA[@Ollie Ollie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ollie">@Ollie</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="15" data-topic="236555">
<div class="title">
<div class="quote-controls"></div>
 frank_:</div>
<blockquote>
<p>i dont think you grasp the concept of this system</p>
</blockquote>
</aside>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dependency-chain/236555/17">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dependency-chain/236555/17</link>
        <pubDate>Thu, 23 Oct 2008 00:49:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-236555-17</guid>
        <source url="https://forum.moparisthebest.com/t/dependency-chain/236555.rss">Dependency Chain</source>
      </item>
      <item>
        <title>Dependency Chain</title>
        <dc:creator><![CDATA[@qauters qauters]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/qauters">@qauters</a> wrote:</p>
          <blockquote>
              <p>I do understand the concept, it’s very simple, you let every class tell which class it requires, after that you just sort your transforms so it will be hooked in the right order.</p>
<p>I just meant:<br>
You have a transformer class “Camera” which hooks Camx/y/z and it hooks Plane (or floor if you like).<br>
Now jagex changes something which means you can’t hook Plane in that class anymore but you now hook it somewhere else.</p>
<p>In my system you would press run and it works, in this system you will have to look trough your other transforms to see which ones need Plane and then select the new class. Doesn’t make it terrible, but it feels more complicated in my eyes.</p>
<p>I know this doesn’t count if you create a single transformer class for every field, but that would just be stupid.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dependency-chain/236555/16">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dependency-chain/236555/16</link>
        <pubDate>Tue, 21 Oct 2008 15:33:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-236555-16</guid>
        <source url="https://forum.moparisthebest.com/t/dependency-chain/236555.rss">Dependency Chain</source>
      </item>
      <item>
        <title>Dependency Chain</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>i dont think you grasp the concept of this system</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dependency-chain/236555/15">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dependency-chain/236555/15</link>
        <pubDate>Tue, 21 Oct 2008 14:58:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-236555-15</guid>
        <source url="https://forum.moparisthebest.com/t/dependency-chain/236555.rss">Dependency Chain</source>
      </item>
      <item>
        <title>Dependency Chain</title>
        <dc:creator><![CDATA[@qauters qauters]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/qauters">@qauters</a> wrote:</p>
          <blockquote>
              <p>[quote=“frank_, post:11, topic:236555”][quote author=qauters link=topic=312214.msg2496526#msg2496526 date=1224431801]<br>
Nicely made, but it might not be always as usable. If your updater hooks the same field multiple time (to be sure it’s right), you would have a slight problem with it.<br>
[/quote]you shouldnt… if you have a little think about it and design your transform selection properly[/quote]<br>
Jagex sometimes removes certain methods, or creates them in a complete different way. Which means some parts of hooks might be broken and therefor require a new hook. If you create dependencies that way, you will need to check all your hook classes to check if it required the hook. While mine pattern most likely wouldn’t break, since the actual hooked field is still hooked (but somewhere else).</p>
<p>So there are some reasons why a class dependency system wouldn’t work, but that doesn’t mean it can’t work for your updater <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=6" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dependency-chain/236555/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dependency-chain/236555/14</link>
        <pubDate>Tue, 21 Oct 2008 13:28:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-236555-14</guid>
        <source url="https://forum.moparisthebest.com/t/dependency-chain/236555.rss">Dependency Chain</source>
      </item>
      <item>
        <title>Dependency Chain</title>
        <dc:creator><![CDATA[@BAsh BAsh]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bash">@BAsh</a> wrote:</p>
          <blockquote>
              <p>[quote=“frank_, post:11, topic:236555”][quote author=qauters link=topic=312214.msg2496526#msg2496526 date=1224431801]<br>
Nicely made, but it might not be always as usable. If your updater hooks the same field multiple time (to be sure it’s right), you would have a slight problem with it.<br>
[/quote]you shouldnt… if you have a little think about it and design your transform selection properly[/quote]<br>
isn’t the best way is to have seperate the hook from the implementation? The hook holds data on what it actually hooks, what it depends upon and a list of different implemenations of the hook.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dependency-chain/236555/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dependency-chain/236555/13</link>
        <pubDate>Mon, 20 Oct 2008 03:18:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-236555-13</guid>
        <source url="https://forum.moparisthebest.com/t/dependency-chain/236555.rss">Dependency Chain</source>
      </item>
      <item>
        <title>Dependency Chain</title>
        <dc:creator><![CDATA[@Unhandled Unhandled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unhandled">@Unhandled</a> wrote:</p>
          <blockquote>
              <p>[quote=“qauters, post:10, topic:236555”][quote author=Unhandled link=topic=312214.msg2496569#msg2496569 date=1224433346]<br>
Next time I get a hooker I’ll be sure to ask her to apply my transforms.<br>
[/quote]<br>
Could you try to act like a more grown up person. I have no interests in knowing, that  you need a hooker to get laid.[/quote]<br>
Humour attempt failed <img src="https://forum.moparisthebest.com/images/emoji/twitter/frowning.png?v=6" title=":frowning:" class="emoji" alt=":frowning:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dependency-chain/236555/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dependency-chain/236555/12</link>
        <pubDate>Sun, 19 Oct 2008 22:15:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-236555-12</guid>
        <source url="https://forum.moparisthebest.com/t/dependency-chain/236555.rss">Dependency Chain</source>
      </item>
      <item>
        <title>Dependency Chain</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>[quote=“qauters, post:8, topic:236555”]Nicely made, but it might not be always as usable. If your updater hooks the same field multiple time (to be sure it’s right), you would have a slight problem with it.[/quote]you shouldnt… if you have a little think about it and design your transform selection properly</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dependency-chain/236555/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dependency-chain/236555/11</link>
        <pubDate>Sun, 19 Oct 2008 21:29:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-236555-11</guid>
        <source url="https://forum.moparisthebest.com/t/dependency-chain/236555.rss">Dependency Chain</source>
      </item>
      <item>
        <title>Dependency Chain</title>
        <dc:creator><![CDATA[@qauters qauters]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/qauters">@qauters</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="9" data-topic="236555">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/unhandled/40/5_6bca9977b612b7aeef77ba1ec1cd67b3.png" class="avatar"> Unhandled:</div>
<blockquote>
<p>Next time I get a hooker I’ll be sure to ask her to apply my transforms.</p>
</blockquote>
</aside>
<p>Could you try to act like a more grown up person. I have no interests in knowing, that  you need a hooker to get laid.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dependency-chain/236555/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dependency-chain/236555/10</link>
        <pubDate>Sun, 19 Oct 2008 21:17:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-236555-10</guid>
        <source url="https://forum.moparisthebest.com/t/dependency-chain/236555.rss">Dependency Chain</source>
      </item>
      <item>
        <title>Dependency Chain</title>
        <dc:creator><![CDATA[@Unhandled Unhandled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unhandled">@Unhandled</a> wrote:</p>
          <blockquote>
              <p>Next time I get a hooker I’ll be sure to ask her to apply my transforms.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dependency-chain/236555/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dependency-chain/236555/9</link>
        <pubDate>Sun, 19 Oct 2008 16:22:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-236555-9</guid>
        <source url="https://forum.moparisthebest.com/t/dependency-chain/236555.rss">Dependency Chain</source>
      </item>
      <item>
        <title>Dependency Chain</title>
        <dc:creator><![CDATA[@qauters qauters]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/qauters">@qauters</a> wrote:</p>
          <blockquote>
              <p>Nicely made, but it might not be always as usable. If your updater hooks the same field multiple time (to be sure it’s right), you would have a slight problem with it.<br>
If you don’t have that, then it’s relatively good, although using annotations looks cleaner. (frank_'s way)</p>
<p>Otherwise you have to use something like this: (or if you want to safe a few nanoseconds)</p>
<pre><code class="lang-auto">public void hookAll(boolean doLoaderHooks)
	{
		Transformer[] hooks = this.hooks.toArray(new Transformer[0]);

		for(int tCount = 0; tCount &lt; hooks.length; tCount++)
		{
			int pCount = 0;

			for(int hookIndex = 0; hookIndex &lt; hooks.length; hookIndex++)
			{
				try{
					Transformer hook = hooks[hookIndex];
					if(hook == null) continue;
					if(doLoaderHooks != hook.isLoaderHook()) hooks[hookIndex] = null;
					else if(!hook.canHook()) pCount++;
					else
					{
						hook.startHooking();
						hooks[hookIndex] = null;
					}
				}catch(Exception e){ e.printStackTrace(); }
			}

			if(pCount == 0) break; //Everything hooked!
		}
	}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dependency-chain/236555/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dependency-chain/236555/8</link>
        <pubDate>Sun, 19 Oct 2008 15:56:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-236555-8</guid>
        <source url="https://forum.moparisthebest.com/t/dependency-chain/236555.rss">Dependency Chain</source>
      </item>
  </channel>
</rss>
