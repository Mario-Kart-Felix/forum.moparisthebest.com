<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Runescape server probing</title>
    <link>https://forum.moparisthebest.com/t/runescape-server-probing/551515</link>
    <description>Here are some probe reports. 

[u]Existing Packets[/u]

[code]
---
Probing existing packets
Query on packet finished; id=0, exists=true, avail=0
Query on packet finished; id=1, exists=true, avail=0
Query on packet finished; id=2, exists=false, avail=0
Query on packet finished; id=3, exists=true, avail=0
Query on packet finished; id=4, exists=false, avail=0
Query on packet finished; id=5, exists=true, avail=0
Query on packet finished; id=6, exists=false, avail=0
Query on packet finished; id=7, exists=true, avail=0
Query on packet finished; id=8, exists=false, avail=0
Query on packet finished; id=9, exists=false, avail=0
Query on packet finished; id=10, exists=false, avail=0
Query on packet finished; id=11, exists=false, avail=0
Query on packet finished; id=12, exists=false, avail=0
Query on packet finished; id=13, exists=false, avail=0
Query on packet finished; id=14, exists=true, avail=1
Query on packet finished; id=15, exists=true, avail=0
Query on packet finished; id=16, exists=true, avail=0
Assuming packet exists, just variable length; id=17
Query on packet finished; id=18, exists=true, avail=0
Query on packet finished; id=19, exists=false, avail=0
Query on packet finished; id=20, exists=true, avail=0
Query on packet finished; id=21, exists=true, avail=0
Query on packet finished; id=22, exists=false, avail=0
Query on packet finished; id=23, exists=true, avail=0
Query on packet finished; id=24, exists=true, avail=0
Query on packet finished; id=25, exists=false, avail=0
Query on packet finished; id=26, exists=false, avail=0
Query on packet finished; id=27, exists=false, avail=0
Query on packet finished; id=28, exists=true, avail=0
Query on packet finished; id=29, exists=true, avail=0
Query on packet finished; id=30, exists=true, avail=0
Query on packet finished; id=31, exists=true, avail=0
Query on packet finished; id=32, exists=true, avail=0
Query on packet finished; id=33, exists=false, avail=0
Query on packet finished; id=34, exists=false, avail=0
Query on packet finished; id=35, exists=false, avail=0
Query on packet finished; id=36, exists=false, avail=0
Query on packet finished; id=37, exists=false, avail=0
Query on packet finished; id=38, exists=false, avail=0
Query on packet finished; id=39, exists=false, avail=0
Query on packet finished; id=40, exists=false, avail=0
Query on packet finished; id=41, exists=true, avail=0
Query on packet finished; id=42, exists=true, avail=0
Query on packet finished; id=43, exists=false, avail=0
Query on packet finished; id=44, exists=false, avail=0
Query on packet finished; id=45, exists=true, avail=0
Query on packet finished; id=46, exists=false, avail=0
Query on packet finished; id=47, exists=false, avail=0
Query on packet finished; id=48, exists=false, avail=0
Query on packet finished; id=49, exists=false, avail=0
Query on packet finished; id=50, exists=false, avail=0
Query on packet finished; id=51, exists=true, avail=0
Query on packet finished; id=52, exists=false, avail=0
Query on packet finished; id=53, exists=true, avail=0
Query on packet finished; id=54, exists=true, avail=0
Query on packet finished; id=55, exists=true, avail=0
Query on packet finished; id=56, exists=false, avail=0
Query on packet finished; id=57, exists=false, avail=0
Query on packet finished; id=58, exists=false, avail=0
Query on packet finished; id=59, exists=false, avail=0
Query on packet finished; id=60, exists=true, avail=0
Query on packet finished; id=61, exists=true, avail=0
Query on packet finished; id=62, exists=false, avail=0
Query on packet finished; id=63, exists=false, avail=0
Query on packet finished; id=64, exists=true, avail=0
Query on packet finished; id=65, exists=false, avail=0
Query on packet finished; id=66, exists=false, avail=0
Query on packet finished; id=67, exists=false, avail=0
Query on packet finished; id=68, exists=true, avail=0
Query on packet finished; id=69, exists=false, avail=0
Query on packet finished; id=70, exists=false, avail=0
Query on packet finished; id=71, exists=true, avail=0
Query on packet finished; id=72, exists=false, avail=0
Query on packet finished; id=73, exists=false, avail=0
Query on packet finished; id=74, exists=false, avail=0
Query on packet finished; id=75, exists=true, avail=0
Query on packet finished; id=76, exists=true, avail=0
...
[/code]

[u]Packet lengths[/u]

All Runescape servers are vulnerable to determine the length of upstream packets. Here is the report for build oldscape 78. It isn&#39;t possible to determine if a packet exists or does not exist since the server will respond to all packets written to it. However it&#39;s important to note there isn&#39;t a heuristic for determining variable byte packets currently. Some single length packets MAY be variable byte length.

[code]
Starting probe; oldschool1.runescape.com:443
Probing packet lengths
Determined possible packet length; id=0, res=6, len=1
Determined possible packet length; id=1, res=6, len=3
Determined possible packet length; id=2, res=6, len=0
Determined possible packet length; id=3, res=6, len=4
Determined possible packet length; id=4, res=6, len=0
Determined possible packet length; id=5, res=6, len=3
Determined possible packet length; id=6, res=6, len=0
Determined possible packet length; id=7, res=6, len=7
Determined possible packet length; id=8, res=6, len=0
Determined possible packet length; id=9, res=6, len=0
Determined possible packet length; id=10, res=6, len=0
Determined possible packet length; id=11, res=6, len=0
Determined possible packet length; id=12, res=6, len=0
Determined possible packet length; id=13, res=6, len=0
Determined possible packet length; id=14, res=0, len=0
Determined possible packet length; id=15, res=6, len=4
Reached end of stream, reattempting probing; id=16, len=61
Determined possible packet length; id=16, res=6, len=-2
Reached data limit, assumed unspecified length; id=17
Reached end of stream, reattempting probing; id=18, len=60
Determined possible packet length; id=18, res=6, len=-2
Determined possible packet length; id=19, res=6, len=0
Determined possible packet length; id=20, res=6, len=4
Determined possible packet length; id=21, res=6, len=13
Determined possible packet length; id=22, res=6, len=0
Determined possible packet length; id=23, res=6, len=8
Determined possible packet length; id=24, res=6, len=14
Determined possible packet length; id=25, res=6, len=0
Determined possible packet length; id=26, res=6, len=0
Determined possible packet length; id=27, res=6, len=0
Reached end of stream, reattempting probing; id=28, len=60
Determined possible packet length; id=28, res=6, len=-2
Determined possible packet length; id=29, res=6, len=3
Determined possible packet length; id=30, res=6, len=1
Determined possible packet length; id=31, res=6, len=9
Determined possible packet length; id=32, res=6, len=7
Determined possible packet length; id=33, res=6, len=0
Determined possible packet length; id=34, res=6, len=0
Determined possible packet length; id=35, res=6, len=0
Determined possible packet length; id=36, res=6, len=0
Determined possible packet length; id=37, res=6, len=0
Determined possible packet length; id=38, res=6, len=0
Determined possible packet length; id=39, res=6, len=0
Determined possible packet length; id=40, res=6, len=0
Determined possible packet length; id=41, res=6, len=3
Determined possible packet length; id=42, res=6, len=8
Determined possible packet length; id=43, res=6, len=0
Determined possible packet length; id=44, res=6, len=0
Determined possible packet length; id=45, res=6, len=8
Determined possible packet length; id=46, res=6, len=0
Determined possible packet length; id=47, res=6, len=0
Determined possible packet length; id=48, res=6, len=0
Determined possible packet length; id=49, res=6, len=0
Determined possible packet length; id=50, res=6, len=0
Reached end of stream, reattempting probing; id=51, len=60
Determined possible packet length; id=51, res=6, len=-2
Determined possible packet length; id=52, res=6, len=0
Determined possible packet length; id=53, res=6, len=1
Determined possible packet length; id=54, res=6, len=9
Determined possible packet length; id=55, res=6, len=7
Determined possible packet length; id=56, res=6, len=0
Determined possible packet length; id=57, res=6, len=0
Determined possible packet length; id=58, res=6, len=0
Determined possible packet length; id=59, res=6, len=0
Determined possible packet length; id=60, res=6, len=3
Determined possible packet length; id=61, res=6, len=8
Determined possible packet length; id=62, res=6, len=0
Determined possible packet length; id=63, res=6, len=0
Determined possible packet length; id=64, res=6, len=8
Determined possible packet length; id=65, res=6, len=0
Determined possible packet length; id=66, res=6, len=0
Determined possible packet length; id=67, res=6, len=0
Determined possible packet length; id=68, res=6, len=2
Determined possible packet length; id=69, res=6, len=0
Determined possible packet length; id=70, res=6, len=0
Determined possible packet length; id=71, res=6, len=15
Determined possible packet length; id=72, res=6, len=0
Determined possible packet length; id=73, res=6, len=0
Determined possible packet length; id=74, res=6, len=0
Determined possible packet length; id=75, res=6, len=8
Determined possible packet length; id=76, res=6, len=1
Determined possible packet length; id=77, res=6, len=1
Determined possible packet length; id=78, res=6, len=1
Determined possible packet length; id=79, res=6, len=0
Determined possible packet length; id=80, res=6, len=3
Determined possible packet length; id=81, res=6, len=0
Determined possible packet length; id=82, res=6, len=1
Determined possible packet length; id=83, res=6, len=8
Determined possible packet length; id=84, res=6, len=1
Determined possible packet length; id=85, res=6, len=0
Determined possible packet length; id=86, res=6, len=13
Determined possible packet length; id=87, res=6, len=8
Determined possible packet length; id=88, res=6, len=0
Determined possible packet length; id=89, res=6, len=16
Determined possible packet length; id=90, res=6, len=8
Determined possible packet length; id=91, res=6, len=0
Determined possible packet length; id=92, res=6, len=2
Determined possible packet length; id=93, res=6, len=3
Determined possible packet length; id=94, res=6, len=0
Determined possible packet length; id=95, res=6, len=0
Determined possible packet length; id=96, res=6, len=1
Determined possible packet length; id=97, res=6, len=0
Determined possible packet length; id=98, res=6, len=3
Determined possible packet length; id=99, res=6, len=0
Determined possible packet length; id=100, res=6, len=7
Determined possible packet length; id=101, res=6, len=0
Determined possible packet length; id=102, res=6, len=0
Determined possible packet length; id=103, res=6, len=0
Determined possible packet length; id=104, res=6, len=16
Determined possible packet length; id=105, res=6, len=8
Determined possible packet length; id=106, res=6, len=8
Determined possible packet length; id=107, res=6, len=8
Determined possible packet length; id=108, res=6, len=1
Determined possible packet length; id=109, res=6, len=0
Determined possible packet length; id=110, res=6, len=0
Determined possible packet length; id=111, res=6, len=0
Determined possible packet length; id=112, res=6, len=0
Determined possible packet length; id=113, res=6, len=3
Determined possible packet length; id=114, res=6, len=0
Determined possible packet length; id=115, res=6, len=0
Determined possible packet length; id=116, res=6, len=0
Determined possible packet length; id=117, res=6, len=0
Determined possible packet length; id=118, res=6, len=7
Determined possible packet length; id=119, res=6, len=1
Determined possible packet length; id=120, res=6, len=0
Determined possible packet length; id=121, res=6, len=0
Determined possible packet length; id=122, res=6, len=1
Determined possible packet length; id=123, res=6, len=0
Determined possible packet length; id=124, res=6, len=0
Determined possible packet length; id=125, res=6, len=0
Determined possible packet length; id=126, res=6, len=0
Determined possible packet length; id=127, res=6, len=0
Determined possible packet length; id=128, res=6, len=9
Determined possible packet length; id=129, res=6, len=3
Determined possible packet length; id=130, res=6, len=0
Determined possible packet length; id=131, res=6, len=0
Determined possible packet length; id=132, res=6, len=8
Determined possible packet length; id=133, res=6, len=0
Determined possible packet length; id=134, res=6, len=0
Determined possible packet length; id=135, res=6, len=0
Determined possible packet length; id=136, res=6, len=0
Determined possible packet length; id=137, res=6, len=0
Determined possible packet length; id=138, res=6, len=0
Determined possible packet length; id=139, res=6, len=0
Determined possible packet length; id=140, res=6, len=7
Determined possible packet length; id=141, res=6, len=0
Determined possible packet length; id=142, res=6, len=0
Determined possible packet length; id=143, res=6, len=0
Determined possible packet length; id=144, res=6, len=0
Determined possible packet length; id=145, res=6, len=0
Determined possible packet length; id=146, res=6, len=0
Determined possible packet length; id=147, res=6, len=0
Determined possible packet length; id=148, res=6, len=0
Determined possible packet length; id=149, res=6, len=0
Determined possible packet length; id=150, res=6, len=7
Determined possible packet length; id=151, res=6, len=0
Determined possible packet length; id=152, res=6, len=0
Determined possible packet length; id=153, res=6, len=0
Determined possible packet length; id=154, res=6, len=0
Determined possible packet length; id=155, res=6, len=0
Determined possible packet length; id=156, res=6, len=8
Determined possible packet length; id=157, res=6, len=0
Determined possible packet length; id=158, res=6, len=0
Determined possible packet length; id=159, res=6, len=0
Determined possible packet length; id=160, res=6, len=0
Determined possible packet length; id=161, res=6, len=0
Determined possible packet length; id=162, res=6, len=0
Determined possible packet length; id=163, res=6, len=0
Determined possible packet length; id=164, res=6, len=4
Determined possible packet length; id=165, res=6, len=3
Determined possible packet length; id=166, res=6, len=6
Determined possible packet length; id=167, res=6, len=0
Determined possible packet length; id=168, res=6, len=1
Determined possible packet length; id=169, res=6, len=15
Determined possible packet length; id=170, res=6, len=0
Determined possible packet length; id=171, res=6, len=0
Determined possible packet length; id=172, res=6, len=0
Determined possible packet length; id=173, res=6, len=0
Determined possible packet length; id=174, res=6, len=0
Determined possible packet length; id=175, res=6, len=16
Determined possible packet length; id=176, res=6, len=0
Determined possible packet length; id=177, res=6, len=0
Determined possible packet length; id=178, res=6, len=1
Determined possible packet length; id=179, res=6, len=0
Determined possible packet length; id=180, res=6, len=8
Determined possible packet length; id=181, res=6, len=0
Determined possible packet length; id=182, res=6, len=8
Determined possible packet length; id=183, res=6, len=0
Determined possible packet length; id=184, res=6, len=0
Determined possible packet length; id=185, res=6, len=0
Determined possible packet length; id=186, res=6, len=0
Determined possible packet length; id=187, res=6, len=0
Determined possible packet length; id=188, res=6, len=0
Determined possible packet length; id=189, res=6, len=8
Determined possible packet length; id=190, res=6, len=0
Determined possible packet length; id=191, res=6, len=7
Determined possible packet length; id=192, res=6, len=0
Determined possible packet length; id=193, res=6, len=4
Determined possible packet length; id=194, res=6, len=8
Determined possible packet length; id=195, res=6, len=8
Determined possible packet length; id=196, res=6, len=0
Determined possible packet length; id=197, res=6, len=0
Determined possible packet length; id=198, res=6, len=0
Determined possible packet length; id=199, res=6, len=0
Determined possible packet length; id=200, res=6, len=0
Determined possible packet length; id=201, res=6, len=0
Determined possible packet length; id=202, res=6, len=0
Determined possible packet length; id=203, res=6, len=0
Determined possible packet length; id=204, res=6, len=1
Determined possible packet length; id=205, res=6, len=1
Determined possible packet length; id=206, res=6, len=0
Determined possible packet length; id=207, res=6, len=1
Determined possible packet length; id=208, res=6, len=0
Determined possible packet length; id=209, res=6, len=8
Determined possible packet length; id=210, res=6, len=13
Determined possible packet length; id=211, res=6, len=0
Determined possible packet length; id=212, res=6, len=0
Determined possible packet length; id=213, res=6, len=0
Determined possible packet length; id=214, res=6, len=11
Determined possible packet length; id=215, res=6, len=0
Determined possible packet length; id=216, res=6, len=0
Determined possible packet length; id=217, res=6, len=0
Determined possible packet length; id=218, res=6, len=0
Determined possible packet length; id=219, res=6, len=3
Determined possible packet length; id=220, res=6, len=0
Determined possible packet length; id=221, res=6, len=0
Determined possible packet length; id=222, res=6, len=0
Determined possible packet length; id=223, res=6, len=4
Determined possible packet length; id=224, res=6, len=2
Determined possible packet length; id=225, res=6, len=0
Determined possible packet length; id=226, res=6, len=0
Determined possible packet length; id=227, res=6, len=7
Determined possible packet length; id=228, res=6, len=11
Determined possible packet length; id=229, res=6, len=0
Determined possible packet length; id=230, res=6, len=7
Determined possible packet length; id=231, res=6, len=3
Determined possible packet length; id=232, res=6, len=1
Determined possible packet length; id=233, res=6, len=0
Determined possible packet length; id=234, res=6, len=2
Determined possible packet length; id=235, res=6, len=0
Determined possible packet length; id=236, res=6, len=0
Determined possible packet length; id=237, res=6, len=0
Determined possible packet length; id=238, res=6, len=0
Determined possible packet length; id=239, res=6, len=0
Determined possible packet length; id=240, res=6, len=0
Determined possible packet length; id=241, res=6, len=0
Determined possible packet length; id=242, res=6, len=0
Determined possible packet length; id=243, res=6, len=0
Determined possible packet length; id=244, res=6, len=0
Determined possible packet length; id=245, res=6, len=0
Determined possible packet length; id=246, res=6, len=1
Determined possible packet length; id=247, res=6, len=0
Determined possible packet length; id=248, res=6, len=3
Determined possible packet length; id=249, res=6, len=0
Determined possible packet length; id=250, res=6, len=0
Determined possible packet length; id=251, res=6, len=0
Determined possible packet length; id=252, res=6, len=0
Determined possible packet length; id=253, res=6, len=0
Determined possible packet length; id=254, res=6, len=0
Determined possible packet length; id=255, res=6, len=0
Probed packet lengths, took 1149 seconds
[/code]</description>
    
    <lastBuildDate>Mon, 08 Jun 2015 22:03:42 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/runescape-server-probing/551515.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Runescape server probing</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <pre><code class="lang-auto">package io.eve.busboy;

import java.io.IOException;
import java.math.BigInteger;
import java.net.Socket;
import java.net.SocketTimeoutException;
import java.util.Arrays;

/**
 * @author Sini
 *
 * This is meant to probe the Runescape servers for information about handshakes and various packets. Because
 * of the way the servers are designed we can determine possible packet sizes. This is done through timeouts since
 * the socket will timeout before the server closes the connection since it is waiting for the rest of the incoming
 * data.
 *
 * By default the server will send response 6 or {@code INVALID_BUILD_OP} for most responses.
 *
 * Both ports 443 and 43594 are used for the server. I do not understand if there is a distinction between the two.
 *
 * For variable length packets the server expects the length of the packet to be completely written.
 *
 * Jagex servers have a SO timeout of 60 seconds.
 *
 * Jagex servers will drop the connection if you write a packet larger than 1600 bytes.
 */
public class Probe {

    static final BigInteger e = new BigInteger("10001", 16);
    static final BigInteger a = new BigInteger("8bbe037d9e274d70420576a65348f4b488335593e6aeb867e2bd99989f9b2fca90d8347cf70949ac54b3b42bbd6b9068a47d474668c5467bad09101c4f92c280936f1db59cc3f5334a8225a430c0cebc562ea499ef65fbc30131a5a4d598fb27c5515e5980bde3a2f850feda732fe9fb102a085115beaac4dce51040d58164bb", 16);

    static final BigInteger u = new BigInteger("80782894952180643741752986186714059433953886149239752893425047584684715842049");
    static final BigInteger w = new BigInteger("7237300117305667488707183861728052766358166655052137727439795191253340127955075499635575104901523446809299097934591732635674173519120047404024393881551683");

    private static final int INVALID_BUILD_OP = 6;
    private static final int OK_OP = 0;

    private static final int LOGIN_SERVER_OP = 14;
    private static final int UPDATE_SERVER_OP = 15;
    private static final int HTTP_SERVICE_OP = 17;

    private static final int VAR_BYTE_LEN = -1;
    private static final int VAR_SHORT_LEN = -2;
    private static final int UNSPECIFIED_LEN = -3;

    private SocketStream stream;
    private String address;
    private int port;

    private byte[] filler = new byte[256];
    private int[] lengths = new int[256];
    private int[] packetStates = new int[256];

    private Probe() {
        for(int i = 0; i &lt; 256; i++) {
            packetStates[i] = -1;
        }
    }

    public static void main(String... args) {
        new Probe().start("oldschool1.runescape.com", 443);
    }

    public void start(String address, int port) {
        this.address = address;
        this.port = port;

        System.out.printf("Starting probe; %s:%d\n", address, port);
        System.out.printf("---\n");

        probeExistingPackets();
        probePacketLengths();
    }

    private void probePacketLengths() {
        System.out.printf("Probing packet lengths\n");
        long start = System.currentTimeMillis();
        for(int id = 0; id &lt; 256; id++) {
            if(packetStates[id] == -1 || packetStates[id] == 1) {
                int fillLen = 1;
                int attempts = 0;
                int len = 0;
                for (; ; ) {
                    try {

                        // In certain cases the server will just continue consuming data for packets will no
                        // specified length until a match for a resource is made. Example of this is JAGGRAB.
                        if (len &gt; 128) {
                            System.out.printf("Reached data limit, assumed unspecified length; id=%d\n", id);
                            lengths[id] = UNSPECIFIED_LEN;
                            break;
                        }

                        // If the stream is still open write the filler byte to attempt to reach the expected
                        // packet length for the server
                        if (stream != null) {
                            stream.write(filler, 0, fillLen);
                            len += fillLen;
                        } else {

                            Socket socket = new Socket(address, port);
                            stream = new SocketStream(socket, 1000, 8);

                            Buffer buffer = new Buffer(1);
                            buffer.putInt8(id);

                            stream.write(buffer.array(), 0, buffer.position());
                        }

                        int response = stream.read();

                        // If the response is the end of stream, reattempt to restart the probe
                        if (response == -1) {
                            if (attempts &gt; 2) {
                                System.out.printf("Could not determine size of packet, reached maximum attempts; id=%d, len=%d\n", id, len);
                                break;
                            }
                            System.out.printf("Reached end of stream, reattempting probing; id=%d, len=%d\n", id, len);
                            stream.close();
                            stream = null;
                            fillLen++;
                            attempts++;
                            len = 0;
                            continue;
                        }

                        boolean variable = attempts &gt; 0;
                        int avail = stream.available();
                        if(len == 1) {
                            variable = determineVariableByteLength(id);
                        }
                        lengths[id] = variable ? -len : len;

                        System.out.printf("Determined possible packet length; id=%d, res=%d, len=%d, avail=%d\n", id, response, variable ? -len : len, avail);
                        break;
                    } catch (IOException ex) {

                        // Timeout because server was expecting more data to write to the server
                        if (ex instanceof SocketTimeoutException) {
                            continue;
                        }

                        throw new RuntimeException("Unexpected I/O exception caught", ex);
                    }
                }

                if (stream != null) {
                    stream.close();
                    stream = null;
                }
            }
        }

        // Close the stream if its open
        if(stream != null) {
            stream.close();
            stream = null;
        }

        long diff = System.currentTimeMillis() - start;
        System.out.printf("Probed packet lengths, took %d seconds\n", diff / 1000L);
        System.out.printf("---\n");
    }

    private boolean determineVariableByteLength(int id) {
        if (stream != null) {
            stream.close();
            stream = null;
        }

        try {
            Socket socket = new Socket(address, port);
            stream = new SocketStream(socket, 1000, 1000);

            Buffer buffer = new Buffer(2);
            buffer.putInt8(id);
            buffer.putInt8(1);

            stream.write(buffer.array(), 0, buffer.position());

            stream.read();
        } catch(IOException ex) {
            if(ex instanceof SocketTimeoutException) {
                return true;
            }
        }
        return false;
    }

    /**
     * This vulnerability works by exploiting the fact that the server will wait for data beforehand, however for zero
     * length packets this does not work!
     */
    private void probeExistingPackets() {
        System.out.printf("Probing existing packets\n");
        long start = System.currentTimeMillis();
        for(int id = 0; id &lt; 256; id++) {
            int attempts = 0;
            for(;;) {

                // Special case for the HTTP service
                if(attempts &gt; 2) {
                    System.out.printf("Assuming packet exists, just variable length; id=%d\n", id);
                    lengths[id] = UNSPECIFIED_LEN;
                    packetStates[id] = 2;
                    break;
                }
                try {
                    Socket socket = new Socket(address, port);
                    stream = new SocketStream(socket, 5000, 1000);

                    Buffer buffer = new Buffer(2);
                    buffer.putInt8(LOGIN_SERVER_OP);
                    buffer.putInt8(id);

                    stream.write(buffer.array(), 0, buffer.position());

                    int response = stream.read();
                    if (response == -1) {
                        System.out.printf("End of stream, retrying; id=%d\n", id);
                        continue;
                    }

                    boolean exists = response == OK_OP;
                    int avail = stream.available();
                    System.out.printf("Query on packet finished; id=%d, exists=%b, avail=%d\n", id, exists, avail);
                    packetStates[id] = exists ? 1 : 0;
                    break;
                } catch (IOException ex) {
                    attempts++;
                } finally {
                    if (stream != null) {
                        stream.close();
                        stream = null;
                    }
                }
            }
        }

        int total = 0;
        for(int i = 0; i &lt; 256; i++) {
            if(packetStates[i] &gt; 0) {
                total++;
            }
        }

        long diff = System.currentTimeMillis() - start;
        System.out.printf("Probed packet states, took %d seconds; total=%d\n", diff / 1000L, total);
        System.out.printf("---\n");
    }
}
</code></pre>
<p>It’s accurate with any packet with a length greater than zero and can determine variable sized byte and short packets. Not really anything special, I was just testing to see if there were any services I could potentially access but sadly there was not. However there were some interesting nuances with all of this. You can login before sending packet 14, the server will write the most recent response code to the most recent packet, maximum accepted packet length is 1600 no matter any other other precondition. They pretty much mount various services on this single point of entry (HTTP, Login, Updating) and that is determined by a single byte, obviously we knew this.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/runescape-server-probing/551515/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/runescape-server-probing/551515/10</link>
        <pubDate>Mon, 08 Jun 2015 22:03:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551515-10</guid>
        <source url="https://forum.moparisthebest.com/t/runescape-server-probing/551515.rss">Runescape server probing</source>
      </item>
      <item>
        <title>Runescape server probing</title>
        <dc:creator><![CDATA[@slavemaster veer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/slavemaster">@slavemaster</a> wrote:</p>
          <blockquote>
              <p>[quote=“Bowser jr, post:8, topic:551515”][quote author=veer link=topic=670430.msg4485567#msg4485567 date=1433791694]</p>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<p>? why does the server respond to everything? are you just sending bytes until it responds to ‘estimate’ the lengths?</p>
</blockquote>
</aside>
<p>To make it harder to gather information from it.</p>
</blockquote>
</aside>
<p>please clarify what you mean here<br>
[/quote]<br>
The server responds equally to all packets so people like sini can’t extract too much information from it.[/quote]</p>
<p>okay, so then how does this work?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/runescape-server-probing/551515/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/runescape-server-probing/551515/9</link>
        <pubDate>Mon, 08 Jun 2015 21:16:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551515-9</guid>
        <source url="https://forum.moparisthebest.com/t/runescape-server-probing/551515.rss">Runescape server probing</source>
      </item>
      <item>
        <title>Runescape server probing</title>
        <dc:creator><![CDATA[@bowserjr2 Bowser jr]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bowserjr2">@bowserjr2</a> wrote:</p>
          <blockquote>
              <p>[quote=“veer, post:6, topic:551515”][quote author=Bowser jr link=topic=670430.msg4485555#msg4485555 date=1433787720]</p>
<aside class="quote">
<blockquote>
<p>? why does the server respond to everything? are you just sending bytes until it responds to ‘estimate’ the lengths?</p>
</blockquote>
</aside>
<p>To make it harder to gather information from it.<br>
[/quote]</p>
<p>please clarify what you mean here[/quote]<br>
The server responds equally to all packets so people like sini can’t extract too much information from it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/runescape-server-probing/551515/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/runescape-server-probing/551515/8</link>
        <pubDate>Mon, 08 Jun 2015 20:44:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551515-8</guid>
        <source url="https://forum.moparisthebest.com/t/runescape-server-probing/551515.rss">Runescape server probing</source>
      </item>
      <item>
        <title>Runescape server probing</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>[quote=“Miss Silabsoft, post:3, topic:551515”][quote author=lare69 link=topic=670430.msg4485510#msg4485510 date=1433776300]<br>
so what does this mean nerd<br>
[/quote]</p>
<p>nothing really.[/quote]</p>
<p>Pretty much, except you can properly determine packet lengths without having to inspect the client.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/runescape-server-probing/551515/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/runescape-server-probing/551515/7</link>
        <pubDate>Mon, 08 Jun 2015 20:41:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551515-7</guid>
        <source url="https://forum.moparisthebest.com/t/runescape-server-probing/551515.rss">Runescape server probing</source>
      </item>
      <item>
        <title>Runescape server probing</title>
        <dc:creator><![CDATA[@slavemaster veer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/slavemaster">@slavemaster</a> wrote:</p>
          <blockquote>
              <p>[quote=“Bowser jr, post:5, topic:551515”][quote author=veer link=topic=670430.msg4485552#msg4485552 date=1433787555]<br>
? why does the server respond to everything? are you just sending bytes until it responds to ‘estimate’ the lengths?<br>
[/quote]<br>
To make it harder to gather information from it.[/quote]</p>
<p>please clarify what you mean here</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/runescape-server-probing/551515/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/runescape-server-probing/551515/6</link>
        <pubDate>Mon, 08 Jun 2015 19:28:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551515-6</guid>
        <source url="https://forum.moparisthebest.com/t/runescape-server-probing/551515.rss">Runescape server probing</source>
      </item>
      <item>
        <title>Runescape server probing</title>
        <dc:creator><![CDATA[@bowserjr2 Bowser jr]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bowserjr2">@bowserjr2</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="4" data-topic="551515">
<div class="title">
<div class="quote-controls"></div>
 veer:</div>
<blockquote>
<p>? why does the server respond to everything? are you just sending bytes until it responds to ‘estimate’ the lengths?</p>
</blockquote>
</aside>
<p>To make it harder to gather information from it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/runescape-server-probing/551515/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/runescape-server-probing/551515/5</link>
        <pubDate>Mon, 08 Jun 2015 18:22:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551515-5</guid>
        <source url="https://forum.moparisthebest.com/t/runescape-server-probing/551515.rss">Runescape server probing</source>
      </item>
      <item>
        <title>Runescape server probing</title>
        <dc:creator><![CDATA[@slavemaster veer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/slavemaster">@slavemaster</a> wrote:</p>
          <blockquote>
              <p>? why does the server respond to everything? are you just sending bytes until it responds to ‘estimate’ the lengths?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/runescape-server-probing/551515/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/runescape-server-probing/551515/4</link>
        <pubDate>Mon, 08 Jun 2015 18:19:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551515-4</guid>
        <source url="https://forum.moparisthebest.com/t/runescape-server-probing/551515.rss">Runescape server probing</source>
      </item>
      <item>
        <title>Runescape server probing</title>
        <dc:creator><![CDATA[@silabsoft RuneAgent]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silabsoft">@silabsoft</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="551515">
<div class="title">
<div class="quote-controls"></div>
 lare69:</div>
<blockquote>
<p>so what does this mean nerd</p>
</blockquote>
</aside>
<p>nothing really.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/runescape-server-probing/551515/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/runescape-server-probing/551515/3</link>
        <pubDate>Mon, 08 Jun 2015 17:35:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551515-3</guid>
        <source url="https://forum.moparisthebest.com/t/runescape-server-probing/551515.rss">Runescape server probing</source>
      </item>
      <item>
        <title>Runescape server probing</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>so what does this mean nerd</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/runescape-server-probing/551515/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/runescape-server-probing/551515/2</link>
        <pubDate>Mon, 08 Jun 2015 15:11:40 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551515-2</guid>
        <source url="https://forum.moparisthebest.com/t/runescape-server-probing/551515.rss">Runescape server probing</source>
      </item>
      <item>
        <title>Runescape server probing</title>
        <dc:creator><![CDATA[@sinisoul sini]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sinisoul">@sinisoul</a> wrote:</p>
          <blockquote>
              <p>Here are some probe reports.</p>
<p><span class="bbcode-u">Existing Packets</span></p>
<pre><code class="lang-auto">---
Probing existing packets
Query on packet finished; id=0, exists=true, avail=0
Query on packet finished; id=1, exists=true, avail=0
Query on packet finished; id=2, exists=false, avail=0
Query on packet finished; id=3, exists=true, avail=0
Query on packet finished; id=4, exists=false, avail=0
Query on packet finished; id=5, exists=true, avail=0
Query on packet finished; id=6, exists=false, avail=0
Query on packet finished; id=7, exists=true, avail=0
Query on packet finished; id=8, exists=false, avail=0
Query on packet finished; id=9, exists=false, avail=0
Query on packet finished; id=10, exists=false, avail=0
Query on packet finished; id=11, exists=false, avail=0
Query on packet finished; id=12, exists=false, avail=0
Query on packet finished; id=13, exists=false, avail=0
Query on packet finished; id=14, exists=true, avail=1
Query on packet finished; id=15, exists=true, avail=0
Query on packet finished; id=16, exists=true, avail=0
Assuming packet exists, just variable length; id=17
Query on packet finished; id=18, exists=true, avail=0
Query on packet finished; id=19, exists=false, avail=0
Query on packet finished; id=20, exists=true, avail=0
Query on packet finished; id=21, exists=true, avail=0
Query on packet finished; id=22, exists=false, avail=0
Query on packet finished; id=23, exists=true, avail=0
Query on packet finished; id=24, exists=true, avail=0
Query on packet finished; id=25, exists=false, avail=0
Query on packet finished; id=26, exists=false, avail=0
Query on packet finished; id=27, exists=false, avail=0
Query on packet finished; id=28, exists=true, avail=0
Query on packet finished; id=29, exists=true, avail=0
Query on packet finished; id=30, exists=true, avail=0
Query on packet finished; id=31, exists=true, avail=0
Query on packet finished; id=32, exists=true, avail=0
Query on packet finished; id=33, exists=false, avail=0
Query on packet finished; id=34, exists=false, avail=0
Query on packet finished; id=35, exists=false, avail=0
Query on packet finished; id=36, exists=false, avail=0
Query on packet finished; id=37, exists=false, avail=0
Query on packet finished; id=38, exists=false, avail=0
Query on packet finished; id=39, exists=false, avail=0
Query on packet finished; id=40, exists=false, avail=0
Query on packet finished; id=41, exists=true, avail=0
Query on packet finished; id=42, exists=true, avail=0
Query on packet finished; id=43, exists=false, avail=0
Query on packet finished; id=44, exists=false, avail=0
Query on packet finished; id=45, exists=true, avail=0
Query on packet finished; id=46, exists=false, avail=0
Query on packet finished; id=47, exists=false, avail=0
Query on packet finished; id=48, exists=false, avail=0
Query on packet finished; id=49, exists=false, avail=0
Query on packet finished; id=50, exists=false, avail=0
Query on packet finished; id=51, exists=true, avail=0
Query on packet finished; id=52, exists=false, avail=0
Query on packet finished; id=53, exists=true, avail=0
Query on packet finished; id=54, exists=true, avail=0
Query on packet finished; id=55, exists=true, avail=0
Query on packet finished; id=56, exists=false, avail=0
Query on packet finished; id=57, exists=false, avail=0
Query on packet finished; id=58, exists=false, avail=0
Query on packet finished; id=59, exists=false, avail=0
Query on packet finished; id=60, exists=true, avail=0
Query on packet finished; id=61, exists=true, avail=0
Query on packet finished; id=62, exists=false, avail=0
Query on packet finished; id=63, exists=false, avail=0
Query on packet finished; id=64, exists=true, avail=0
Query on packet finished; id=65, exists=false, avail=0
Query on packet finished; id=66, exists=false, avail=0
Query on packet finished; id=67, exists=false, avail=0
Query on packet finished; id=68, exists=true, avail=0
Query on packet finished; id=69, exists=false, avail=0
Query on packet finished; id=70, exists=false, avail=0
Query on packet finished; id=71, exists=true, avail=0
Query on packet finished; id=72, exists=false, avail=0
Query on packet finished; id=73, exists=false, avail=0
Query on packet finished; id=74, exists=false, avail=0
Query on packet finished; id=75, exists=true, avail=0
Query on packet finished; id=76, exists=true, avail=0
...</code></pre>
<p><span class="bbcode-u">Packet lengths</span></p>
<p>All Runescape servers are vulnerable to determine the length of upstream packets. Here is the report for build oldscape 78. It isn’t possible to determine if a packet exists or does not exist since the server will respond to all packets written to it. However it’s important to note there isn’t a heuristic for determining variable byte packets currently. Some single length packets MAY be variable byte length.</p>
<pre><code class="lang-auto">Starting probe; oldschool1.runescape.com:443
Probing packet lengths
Determined possible packet length; id=0, res=6, len=1
Determined possible packet length; id=1, res=6, len=3
Determined possible packet length; id=2, res=6, len=0
Determined possible packet length; id=3, res=6, len=4
Determined possible packet length; id=4, res=6, len=0
Determined possible packet length; id=5, res=6, len=3
Determined possible packet length; id=6, res=6, len=0
Determined possible packet length; id=7, res=6, len=7
Determined possible packet length; id=8, res=6, len=0
Determined possible packet length; id=9, res=6, len=0
Determined possible packet length; id=10, res=6, len=0
Determined possible packet length; id=11, res=6, len=0
Determined possible packet length; id=12, res=6, len=0
Determined possible packet length; id=13, res=6, len=0
Determined possible packet length; id=14, res=0, len=0
Determined possible packet length; id=15, res=6, len=4
Reached end of stream, reattempting probing; id=16, len=61
Determined possible packet length; id=16, res=6, len=-2
Reached data limit, assumed unspecified length; id=17
Reached end of stream, reattempting probing; id=18, len=60
Determined possible packet length; id=18, res=6, len=-2
Determined possible packet length; id=19, res=6, len=0
Determined possible packet length; id=20, res=6, len=4
Determined possible packet length; id=21, res=6, len=13
Determined possible packet length; id=22, res=6, len=0
Determined possible packet length; id=23, res=6, len=8
Determined possible packet length; id=24, res=6, len=14
Determined possible packet length; id=25, res=6, len=0
Determined possible packet length; id=26, res=6, len=0
Determined possible packet length; id=27, res=6, len=0
Reached end of stream, reattempting probing; id=28, len=60
Determined possible packet length; id=28, res=6, len=-2
Determined possible packet length; id=29, res=6, len=3
Determined possible packet length; id=30, res=6, len=1
Determined possible packet length; id=31, res=6, len=9
Determined possible packet length; id=32, res=6, len=7
Determined possible packet length; id=33, res=6, len=0
Determined possible packet length; id=34, res=6, len=0
Determined possible packet length; id=35, res=6, len=0
Determined possible packet length; id=36, res=6, len=0
Determined possible packet length; id=37, res=6, len=0
Determined possible packet length; id=38, res=6, len=0
Determined possible packet length; id=39, res=6, len=0
Determined possible packet length; id=40, res=6, len=0
Determined possible packet length; id=41, res=6, len=3
Determined possible packet length; id=42, res=6, len=8
Determined possible packet length; id=43, res=6, len=0
Determined possible packet length; id=44, res=6, len=0
Determined possible packet length; id=45, res=6, len=8
Determined possible packet length; id=46, res=6, len=0
Determined possible packet length; id=47, res=6, len=0
Determined possible packet length; id=48, res=6, len=0
Determined possible packet length; id=49, res=6, len=0
Determined possible packet length; id=50, res=6, len=0
Reached end of stream, reattempting probing; id=51, len=60
Determined possible packet length; id=51, res=6, len=-2
Determined possible packet length; id=52, res=6, len=0
Determined possible packet length; id=53, res=6, len=1
Determined possible packet length; id=54, res=6, len=9
Determined possible packet length; id=55, res=6, len=7
Determined possible packet length; id=56, res=6, len=0
Determined possible packet length; id=57, res=6, len=0
Determined possible packet length; id=58, res=6, len=0
Determined possible packet length; id=59, res=6, len=0
Determined possible packet length; id=60, res=6, len=3
Determined possible packet length; id=61, res=6, len=8
Determined possible packet length; id=62, res=6, len=0
Determined possible packet length; id=63, res=6, len=0
Determined possible packet length; id=64, res=6, len=8
Determined possible packet length; id=65, res=6, len=0
Determined possible packet length; id=66, res=6, len=0
Determined possible packet length; id=67, res=6, len=0
Determined possible packet length; id=68, res=6, len=2
Determined possible packet length; id=69, res=6, len=0
Determined possible packet length; id=70, res=6, len=0
Determined possible packet length; id=71, res=6, len=15
Determined possible packet length; id=72, res=6, len=0
Determined possible packet length; id=73, res=6, len=0
Determined possible packet length; id=74, res=6, len=0
Determined possible packet length; id=75, res=6, len=8
Determined possible packet length; id=76, res=6, len=1
Determined possible packet length; id=77, res=6, len=1
Determined possible packet length; id=78, res=6, len=1
Determined possible packet length; id=79, res=6, len=0
Determined possible packet length; id=80, res=6, len=3
Determined possible packet length; id=81, res=6, len=0
Determined possible packet length; id=82, res=6, len=1
Determined possible packet length; id=83, res=6, len=8
Determined possible packet length; id=84, res=6, len=1
Determined possible packet length; id=85, res=6, len=0
Determined possible packet length; id=86, res=6, len=13
Determined possible packet length; id=87, res=6, len=8
Determined possible packet length; id=88, res=6, len=0
Determined possible packet length; id=89, res=6, len=16
Determined possible packet length; id=90, res=6, len=8
Determined possible packet length; id=91, res=6, len=0
Determined possible packet length; id=92, res=6, len=2
Determined possible packet length; id=93, res=6, len=3
Determined possible packet length; id=94, res=6, len=0
Determined possible packet length; id=95, res=6, len=0
Determined possible packet length; id=96, res=6, len=1
Determined possible packet length; id=97, res=6, len=0
Determined possible packet length; id=98, res=6, len=3
Determined possible packet length; id=99, res=6, len=0
Determined possible packet length; id=100, res=6, len=7
Determined possible packet length; id=101, res=6, len=0
Determined possible packet length; id=102, res=6, len=0
Determined possible packet length; id=103, res=6, len=0
Determined possible packet length; id=104, res=6, len=16
Determined possible packet length; id=105, res=6, len=8
Determined possible packet length; id=106, res=6, len=8
Determined possible packet length; id=107, res=6, len=8
Determined possible packet length; id=108, res=6, len=1
Determined possible packet length; id=109, res=6, len=0
Determined possible packet length; id=110, res=6, len=0
Determined possible packet length; id=111, res=6, len=0
Determined possible packet length; id=112, res=6, len=0
Determined possible packet length; id=113, res=6, len=3
Determined possible packet length; id=114, res=6, len=0
Determined possible packet length; id=115, res=6, len=0
Determined possible packet length; id=116, res=6, len=0
Determined possible packet length; id=117, res=6, len=0
Determined possible packet length; id=118, res=6, len=7
Determined possible packet length; id=119, res=6, len=1
Determined possible packet length; id=120, res=6, len=0
Determined possible packet length; id=121, res=6, len=0
Determined possible packet length; id=122, res=6, len=1
Determined possible packet length; id=123, res=6, len=0
Determined possible packet length; id=124, res=6, len=0
Determined possible packet length; id=125, res=6, len=0
Determined possible packet length; id=126, res=6, len=0
Determined possible packet length; id=127, res=6, len=0
Determined possible packet length; id=128, res=6, len=9
Determined possible packet length; id=129, res=6, len=3
Determined possible packet length; id=130, res=6, len=0
Determined possible packet length; id=131, res=6, len=0
Determined possible packet length; id=132, res=6, len=8
Determined possible packet length; id=133, res=6, len=0
Determined possible packet length; id=134, res=6, len=0
Determined possible packet length; id=135, res=6, len=0
Determined possible packet length; id=136, res=6, len=0
Determined possible packet length; id=137, res=6, len=0
Determined possible packet length; id=138, res=6, len=0
Determined possible packet length; id=139, res=6, len=0
Determined possible packet length; id=140, res=6, len=7
Determined possible packet length; id=141, res=6, len=0
Determined possible packet length; id=142, res=6, len=0
Determined possible packet length; id=143, res=6, len=0
Determined possible packet length; id=144, res=6, len=0
Determined possible packet length; id=145, res=6, len=0
Determined possible packet length; id=146, res=6, len=0
Determined possible packet length; id=147, res=6, len=0
Determined possible packet length; id=148, res=6, len=0
Determined possible packet length; id=149, res=6, len=0
Determined possible packet length; id=150, res=6, len=7
Determined possible packet length; id=151, res=6, len=0
Determined possible packet length; id=152, res=6, len=0
Determined possible packet length; id=153, res=6, len=0
Determined possible packet length; id=154, res=6, len=0
Determined possible packet length; id=155, res=6, len=0
Determined possible packet length; id=156, res=6, len=8
Determined possible packet length; id=157, res=6, len=0
Determined possible packet length; id=158, res=6, len=0
Determined possible packet length; id=159, res=6, len=0
Determined possible packet length; id=160, res=6, len=0
Determined possible packet length; id=161, res=6, len=0
Determined possible packet length; id=162, res=6, len=0
Determined possible packet length; id=163, res=6, len=0
Determined possible packet length; id=164, res=6, len=4
Determined possible packet length; id=165, res=6, len=3
Determined possible packet length; id=166, res=6, len=6
Determined possible packet length; id=167, res=6, len=0
Determined possible packet length; id=168, res=6, len=1
Determined possible packet length; id=169, res=6, len=15
Determined possible packet length; id=170, res=6, len=0
Determined possible packet length; id=171, res=6, len=0
Determined possible packet length; id=172, res=6, len=0
Determined possible packet length; id=173, res=6, len=0
Determined possible packet length; id=174, res=6, len=0
Determined possible packet length; id=175, res=6, len=16
Determined possible packet length; id=176, res=6, len=0
Determined possible packet length; id=177, res=6, len=0
Determined possible packet length; id=178, res=6, len=1
Determined possible packet length; id=179, res=6, len=0
Determined possible packet length; id=180, res=6, len=8
Determined possible packet length; id=181, res=6, len=0
Determined possible packet length; id=182, res=6, len=8
Determined possible packet length; id=183, res=6, len=0
Determined possible packet length; id=184, res=6, len=0
Determined possible packet length; id=185, res=6, len=0
Determined possible packet length; id=186, res=6, len=0
Determined possible packet length; id=187, res=6, len=0
Determined possible packet length; id=188, res=6, len=0
Determined possible packet length; id=189, res=6, len=8
Determined possible packet length; id=190, res=6, len=0
Determined possible packet length; id=191, res=6, len=7
Determined possible packet length; id=192, res=6, len=0
Determined possible packet length; id=193, res=6, len=4
Determined possible packet length; id=194, res=6, len=8
Determined possible packet length; id=195, res=6, len=8
Determined possible packet length; id=196, res=6, len=0
Determined possible packet length; id=197, res=6, len=0
Determined possible packet length; id=198, res=6, len=0
Determined possible packet length; id=199, res=6, len=0
Determined possible packet length; id=200, res=6, len=0
Determined possible packet length; id=201, res=6, len=0
Determined possible packet length; id=202, res=6, len=0
Determined possible packet length; id=203, res=6, len=0
Determined possible packet length; id=204, res=6, len=1
Determined possible packet length; id=205, res=6, len=1
Determined possible packet length; id=206, res=6, len=0
Determined possible packet length; id=207, res=6, len=1
Determined possible packet length; id=208, res=6, len=0
Determined possible packet length; id=209, res=6, len=8
Determined possible packet length; id=210, res=6, len=13
Determined possible packet length; id=211, res=6, len=0
Determined possible packet length; id=212, res=6, len=0
Determined possible packet length; id=213, res=6, len=0
Determined possible packet length; id=214, res=6, len=11
Determined possible packet length; id=215, res=6, len=0
Determined possible packet length; id=216, res=6, len=0
Determined possible packet length; id=217, res=6, len=0
Determined possible packet length; id=218, res=6, len=0
Determined possible packet length; id=219, res=6, len=3
Determined possible packet length; id=220, res=6, len=0
Determined possible packet length; id=221, res=6, len=0
Determined possible packet length; id=222, res=6, len=0
Determined possible packet length; id=223, res=6, len=4
Determined possible packet length; id=224, res=6, len=2
Determined possible packet length; id=225, res=6, len=0
Determined possible packet length; id=226, res=6, len=0
Determined possible packet length; id=227, res=6, len=7
Determined possible packet length; id=228, res=6, len=11
Determined possible packet length; id=229, res=6, len=0
Determined possible packet length; id=230, res=6, len=7
Determined possible packet length; id=231, res=6, len=3
Determined possible packet length; id=232, res=6, len=1
Determined possible packet length; id=233, res=6, len=0
Determined possible packet length; id=234, res=6, len=2
Determined possible packet length; id=235, res=6, len=0
Determined possible packet length; id=236, res=6, len=0
Determined possible packet length; id=237, res=6, len=0
Determined possible packet length; id=238, res=6, len=0
Determined possible packet length; id=239, res=6, len=0
Determined possible packet length; id=240, res=6, len=0
Determined possible packet length; id=241, res=6, len=0
Determined possible packet length; id=242, res=6, len=0
Determined possible packet length; id=243, res=6, len=0
Determined possible packet length; id=244, res=6, len=0
Determined possible packet length; id=245, res=6, len=0
Determined possible packet length; id=246, res=6, len=1
Determined possible packet length; id=247, res=6, len=0
Determined possible packet length; id=248, res=6, len=3
Determined possible packet length; id=249, res=6, len=0
Determined possible packet length; id=250, res=6, len=0
Determined possible packet length; id=251, res=6, len=0
Determined possible packet length; id=252, res=6, len=0
Determined possible packet length; id=253, res=6, len=0
Determined possible packet length; id=254, res=6, len=0
Determined possible packet length; id=255, res=6, len=0
Probed packet lengths, took 1149 seconds</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/runescape-server-probing/551515/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/runescape-server-probing/551515/1</link>
        <pubDate>Thu, 14 May 2015 12:48:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-551515-1</guid>
        <source url="https://forum.moparisthebest.com/t/runescape-server-probing/551515.rss">Runescape server probing</source>
      </item>
  </channel>
</rss>
