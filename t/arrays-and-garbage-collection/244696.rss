<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Arrays and Garbage Collection</title>
    <link>https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696</link>
    <description>So I have a large array...Which is better
#1
[code]
for(int i = 0; i &lt; myArray.Length; i++)
{
String s = myArray[i];
if(s.Length &lt; 20 &amp;&amp; s.Length &gt; 10 &amp;&amp; s.Length != 15)
// etc
}
[/code]
#2
[code]
for(int i = 0; i &lt; myArray.Length; i++)
{
if(myArray[i].Length &lt; 20 &amp;&amp; myArray[i].Length &gt; 10 &amp;&amp; myArray[i].Length != 15)
// etc
}
[/code]
In number one, I&#39;m allocating a new object for every iteration of the array, which means the GC will have to clean it up.
In number two, I&#39;m looking up the item in the array by index. Does this mean it has to look up the index every iteration?

So what&#39;s the best way to do this?</description>
    
    <lastBuildDate>Tue, 18 Nov 2008 20:19:01 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Arrays and Garbage Collection</title>
        <dc:creator><![CDATA[@Unhandled Unhandled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unhandled">@Unhandled</a> wrote:</p>
          <blockquote>
              <p>C# has reference types (i.e classes are reference, structs are value).<br>
I think I’ll try using a hash table, that way I shouldn’t even need to loop through it, just pull out items by key.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696/10</link>
        <pubDate>Tue, 18 Nov 2008 20:19:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-244696-10</guid>
        <source url="https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696.rss">Arrays and Garbage Collection</source>
      </item>
      <item>
        <title>Arrays and Garbage Collection</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>@ qauters sure, but thats not what he was asking about</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696/9</link>
        <pubDate>Tue, 18 Nov 2008 16:46:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-244696-9</guid>
        <source url="https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696.rss">Arrays and Garbage Collection</source>
      </item>
      <item>
        <title>Arrays and Garbage Collection</title>
        <dc:creator><![CDATA[@qauters qauters]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/qauters">@qauters</a> wrote:</p>
          <blockquote>
              <p>[quote=“Pwnd, post:6, topic:244696”][quote author=zstars link=topic=321092.msg2540519#msg2540519 date=1226971230]<br>
If I had to guess I’d say that first should be faster. Probably the compiler optimizes that kind of thing a lot though, so the only way to know would be to profile. On any case, the String is just a reference, so, the GC probably won’t be involved, and if it is, the compiler should optimize it anyway.<br>
[/quote]Given that MS develops C#…[/quote]<br>
Given that XBox360 is the best console…</p>
<p>Anyway, neither is good in this case:</p>
<pre><code class="lang-auto">foreach(String s in myArray)
{
   int l = s.Length;
   if(l &lt; 20 &amp;&amp; l &gt; 10 &amp;&amp; l != 15)
      // etc
}</code></pre>
<p>This will save you a few cycles. Since it doesn’t have to reload Length everytime.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696/8</link>
        <pubDate>Tue, 18 Nov 2008 14:27:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-244696-8</guid>
        <source url="https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696.rss">Arrays and Garbage Collection</source>
      </item>
      <item>
        <title>Arrays and Garbage Collection</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <p>[quote=“Unhandled, post:4, topic:244696”][quote author=frank_ link=topic=321092.msg2540051#msg2540051 date=1226957606]</p>
<aside class="quote no-group">
<blockquote>
<p>In number one, I’m allocating a new object for every iteration of the array, which means the GC will have to clean it up.</p>
</blockquote>
</aside>
<p>use a language that doesnt suck, failing that, if c# has pointers…<br>
[/quote]<br>
Pretend I’m using Java, what would your answer be?<br>
C# has pointers, but you can’t use them for reference types, otherwise I would have done that by now.</p>
<p>foreach loops also allocate a new object for every iteration.[/quote]i wasnt sure if c# had reference types or they were copied, but the first should be better, cus a reference, for arguments sake, is a pointer</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696/7</link>
        <pubDate>Tue, 18 Nov 2008 08:18:43 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-244696-7</guid>
        <source url="https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696.rss">Arrays and Garbage Collection</source>
      </item>
      <item>
        <title>Arrays and Garbage Collection</title>
        <dc:creator><![CDATA[@Pwnd Pwnd]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pwnd">@Pwnd</a> wrote:</p>
          <blockquote>
              <p>[quote=“zstars, post:5, topic:244696”]If I had to guess I’d say that first should be faster. Probably the compiler optimizes that kind of thing a lot though, so the only way to know would be to profile. On any case, the String is just a reference, so, the GC probably won’t be involved, and if it is, the compiler should optimize it anyway.[/quote]Given that MS develops C#…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696/6</link>
        <pubDate>Tue, 18 Nov 2008 01:55:42 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-244696-6</guid>
        <source url="https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696.rss">Arrays and Garbage Collection</source>
      </item>
      <item>
        <title>Arrays and Garbage Collection</title>
        <dc:creator><![CDATA[@zstars zstars]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zstars">@zstars</a> wrote:</p>
          <blockquote>
              <p>If I had to guess I’d say that first should be faster. Probably the compiler optimizes that kind of thing a lot though, so the only way to know would be to profile. On any case, the String is just a reference, so, the GC probably won’t be involved, and if it is, the compiler should optimize it anyway.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696/5</link>
        <pubDate>Tue, 18 Nov 2008 01:20:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-244696-5</guid>
        <source url="https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696.rss">Arrays and Garbage Collection</source>
      </item>
      <item>
        <title>Arrays and Garbage Collection</title>
        <dc:creator><![CDATA[@Unhandled Unhandled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unhandled">@Unhandled</a> wrote:</p>
          <blockquote>
              <p>[quote=“frank_, post:3, topic:244696”][quote author=Unhandled link=topic=321092.msg2539997#msg2539997 date=1226955542]<br>
In number one, I’m allocating a new object for every iteration of the array, which means the GC will have to clean it up.<br>
[/quote]</p>
<p>use a language that doesnt suck, failing that, if c# has pointers…[/quote]<br>
Pretend I’m using Java, what would your answer be?<br>
C# has pointers, but you can’t use them for reference types, otherwise I would have done that by now.</p>
<p>foreach loops also allocate a new object for every iteration.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696/4</link>
        <pubDate>Tue, 18 Nov 2008 00:22:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-244696-4</guid>
        <source url="https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696.rss">Arrays and Garbage Collection</source>
      </item>
      <item>
        <title>Arrays and Garbage Collection</title>
        <dc:creator><![CDATA[@frank frank_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/frank">@frank</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="1" data-topic="244696">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/unhandled/40/5_6bca9977b612b7aeef77ba1ec1cd67b3.png" class="avatar"> Unhandled:</div>
<blockquote>
<p>In number one, I’m allocating a new object for every iteration of the array, which means the GC will have to clean it up.</p>
</blockquote>
</aside>
<p>use a language that doesnt suck, failing that, if c# has pointers…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696/3</link>
        <pubDate>Mon, 17 Nov 2008 21:33:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-244696-3</guid>
        <source url="https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696.rss">Arrays and Garbage Collection</source>
      </item>
      <item>
        <title>Arrays and Garbage Collection</title>
        <dc:creator><![CDATA[@chrisn2323 chrisn2323]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/chrisn2323">@chrisn2323</a> wrote:</p>
          <blockquote>
              <p>i dont know the fastest way but i prefer foreach loop over both of those</p>
<p>my guess would be the second one</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696/2</link>
        <pubDate>Mon, 17 Nov 2008 21:15:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-244696-2</guid>
        <source url="https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696.rss">Arrays and Garbage Collection</source>
      </item>
      <item>
        <title>Arrays and Garbage Collection</title>
        <dc:creator><![CDATA[@Unhandled Unhandled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unhandled">@Unhandled</a> wrote:</p>
          <blockquote>
              <p>So I have a large array…Which is better<br>
<span class="hashtag">#1</span></p>
<pre><code class="lang-auto">for(int i = 0; i &lt; myArray.Length; i++)
{
String s = myArray[i];
if(s.Length &lt; 20 &amp;&amp; s.Length &gt; 10 &amp;&amp; s.Length != 15)
// etc
}</code></pre>
<p><span class="hashtag">#2</span></p>
<pre><code class="lang-auto">for(int i = 0; i &lt; myArray.Length; i++)
{
if(myArray[i].Length &lt; 20 &amp;&amp; myArray[i].Length &gt; 10 &amp;&amp; myArray[i].Length != 15)
// etc
}</code></pre>
<p>In number one, I’m allocating a new object for every iteration of the array, which means the GC will have to clean it up.<br>
In number two, I’m looking up the item in the array by index. Does this mean it has to look up the index every iteration?</p>
<p>So what’s the best way to do this?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696/1</link>
        <pubDate>Mon, 17 Nov 2008 20:59:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-244696-1</guid>
        <source url="https://forum.moparisthebest.com/t/arrays-and-garbage-collection/244696.rss">Arrays and Garbage Collection</source>
      </item>
  </channel>
</rss>
