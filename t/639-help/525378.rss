<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>639 help!</title>
    <link>https://forum.moparisthebest.com/t/639-help/525378</link>
    <description>hey well my doors inside dementhium 639 base arent working correctly and i need a fix for it also how to code in double door close and open? please someone help, heres my doormanager.java
 

package org.dementhium.content.misc;
 
import org.dementhium.cache.format.CacheObjectDefinition;
 import org.dementhium.model.map.GameObject;
 import org.dementhium.model.map.ObjectManager;
 import org.dementhium.model.player.Player;
 
/**
 * Handles the opening and closing of doors.
 *
 * @author Emperor
 * @author Mystic Flow&#39;
 * @author Steve
 */
 public class DoorManager {
 
/**
 * Handles a door.
 *
 * @param player The player.
 * @param object The door gameobject.
 * @return {@code True} if the object was a door and got handled, {@code false} if not.
 */
 public static boolean handleDoor(Player player, final GameObject object) {
 String name = object.getDefinition().getName().toLowerCase();
 if (!name.contains(&quot;door&quot;) &amp;&amp; !name.contains(&quot;gate&quot;)) {
 return false;
 }
 GameObject secondDoor = getSecondDoor(object);
 boolean doubleGate = secondDoor != null;
 boolean open = object.getDefinition().options[0].equalsIgnoreCase(&quot;open&quot;) || object.getDefinition().options[0].equalsIgnoreCase(&quot;search&quot;);
 if (doubleGate &amp;&amp; open) {
 return openDoubleDoor(player, object, secondDoor);
 } else if (open) {
 return openDoor(player, object);
 } else if (!open &amp;&amp; !doubleGate) {
 closeDoor(player, object);
 }
 return false;
 }
 
public static boolean closeDoubleDoor(Player player, GameObject object, GameObject secondDoor) {
 closeDoubleDoor(player, object);
 closeDoubleDoor(player, secondDoor);
 return true;
 }
 
private static boolean closeDoubleDoor(Player player, GameObject object) {
 int direction = object.getRotation();
 if (direction &lt; 0) {
 direction *= -1;
 }
 switch (object.getRotation() % 4) {
 case 2:
 direction--;
 break;
 case 1:
 direction--;
 break;
 case 3:
 direction++;
 break;
 case 4:
 direction++;
 break;
 }
 int transformX = 0, transformY = 0;
 switch (object.getRotation() % 4) {
 case 0:
 transformY++;
 break;
 case 1:
 transformX++;
 break;
 case 2:
 transformY--;
 break;
 case 3:
 transformX--;
 break;
 }
 ObjectManager.removeCustomObject(object.getLocatio n().getX(), object.getLocation().getY(), object.getLocation().getZ(), object.getType());
 object.setLocation(object.getLocation().transform( transformX, transformY, 0));
 GameObject toReplace = new GameObject(findNextDoor(object.getId()), object.getLocation(), object.getType(), direction);
 ObjectManager.addCustomObject(toReplace);
 return true;
 }
 
public static boolean closeDoor(Player player, final GameObject object) {
 int direction = object.getRotation() - 1;
 if (direction &lt; 0) {
 direction *= -1;
 }
 int transformX = 0, transformY = 0;
 switch (object.getRotation() % 4) {
 case 0:
 transformY++;
 break;
 case 1:
 transformX++;
 break;
 case 2:
 transformY--;
 break;
 case 3:
 transformX--;
 break;
 }
 ObjectManager.removeCustomObject(object.getLocatio n().getX(), object.getLocation().getY(), object.getLocation().getZ(), object.getType());
 object.setLocation(object.getLocation().transform( transformX, transformY, 0));
 GameObject toReplace = new GameObject(findNextDoor(object.getId()), object.getLocation(), object.getType(), direction);
 ObjectManager.addCustomObject(toReplace);
 return true;
 }
 
private static boolean openDoor(Player player, final GameObject object) {
 int direction = object.getRotation() + 1;
 int transformX = 0, transformY = 0;
 switch (object.getRotation() % 4) {
 case 0:
 transformX--;
 break;
 case 1:
 transformY++;
 break;
 case 2:
 transformX++;
 break;
 case 3:
 transformY--;
 break;
 }
 ObjectManager.removeCustomObject(object.getLocatio n().getX(), object.getLocation().getY(), object.getLocation().getZ(), object.getType());
 object.setLocation(object.getLocation().transform( transformX, transformY, 0));
 GameObject toReplace = new GameObject(findNextDoor(object.getId()), object.getLocation(), object.getType(), direction);
 ObjectManager.addCustomObject(toReplace);
 return true;
 }
 
private static boolean openDoubleDoor(Player player, final GameObject door, final GameObject secondDoor) {
 openDoubleDoor(player, door);
 openDoubleDoor(player, secondDoor);
 return true;
 }
 
private static void openDoubleDoor(Player player, GameObject object) {
 int direction = object.getRotation();
 int transformX = 0, transformY = 0;
 switch (object.getId() % 4) {
 case 2:
 direction += 1;
 break;
 case 1:
 direction -= 1;
 break;
 case 3:
 direction += 4;
 case 4:
 direction += 1;
 break;
 }
 switch (object.getRotation() % 4) {
 case 0:
 transformX--;
 break;
 case 1:
 transformY++;
 break;
 case 2:
 transformX++;
 break;
 case 3:
 transformY--;
 break;
 }
 ObjectManager.removeCustomObject(object.getLocatio n().getX(), object.getLocation().getY(), object.getLocation().getZ(), object.getType());
 object.setLocation(object.getLocation().transform( transformX, transformY, 0));
 GameObject toReplace = new GameObject(findNextDoor(object.getId()), object.getLocation(), object.getType(), direction);
 ObjectManager.addCustomObject(toReplace);
 
}
 
private static GameObject getSecondDoor(GameObject object) {
 GameObject o = null;
 for (int i = -2; i &lt; 3; i++) {
 for (int j = -2; j &lt; 3; j++) {
 //o = object.getLocation().transform(i, j, 0).getGameObject();
 if (o != null &amp;&amp; !object.equals(o) &amp;&amp; (o.getDefinition().getName().toLowerCase().contain s(&quot;door&quot;) || o.getDefinition().getName().toLowerCase().contains (&quot;gate&quot;))) {
 return o;
 }
 }
 }
 //return object.getLocation().transform(x, y, 0).getGameObject();
 return null;
 }
 
private static int findNextDoor(int id) {
 CacheObjectDefinition doorDef = CacheObjectDefinition.forId(id);
 String option = doorDef.options[0];
 if (option.equalsIgnoreCase(&quot;open&quot;)) {
 for (int i = 0; i &lt; 4; i++) {
 CacheObjectDefinition def = CacheObjectDefinition.forId(id + i);
 if (def.options != null &amp;&amp; def.options[0] != null &amp;&amp; def.options[0].equalsIgnoreCase(&quot;close&quot;) &amp;&amp; def.name.equalsIgnoreCase(doorDef.name)) {
 return id + i;
 }
 }
 for (int i = 0; i &gt; -4; i--) {
 CacheObjectDefinition def = CacheObjectDefinition.forId(id + i);
 if (def.options != null &amp;&amp; def.options[0] != null &amp;&amp; def.options[0].equalsIgnoreCase(&quot;close&quot;) &amp;&amp; def.name.equalsIgnoreCase(doorDef.name)) {
 return id + i;
 }
 }
 } else if (option.equalsIgnoreCase(&quot;close&quot;)) {
 for (int i = 0; i &gt; -4; i--) {
 CacheObjectDefinition def = CacheObjectDefinition.forId(id + i);
 if (def.options != null &amp;&amp; def.options[0] != null &amp;&amp; def.options[0].equalsIgnoreCase(&quot;open&quot;) &amp;&amp; def.name.equalsIgnoreCase(doorDef.name)) {
 return id + i;
 }
 }
 for (int i = 0; i &lt; 4; i++) {
 CacheObjectDefinition def = CacheObjectDefinition.forId(id + i);
 if (def.options != null &amp;&amp; def.options[0] != null &amp;&amp; def.options[0].equalsIgnoreCase(&quot;open&quot;) &amp;&amp; def.name.equalsIgnoreCase(doorDef.name)) {
 return id + i;
 }
 }
 }
 return 0;
 }
 
}</description>
    
    <lastBuildDate>Fri, 19 Jul 2013 17:43:23 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/639-help/525378.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>639 help!</title>
        <dc:creator><![CDATA[@hund2 hund2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hund2">@hund2</a> wrote:</p>
          <blockquote>
              <p>ermm what it is that the doors open the wrong way /opposite way its ment to open and then it glicthed up and when u click it it move on forever as well as the doubledoors dont open as a double they open as a single so u open door only half door opens then uneed to open other please somebody helpme</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/639-help/525378/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/639-help/525378/3</link>
        <pubDate>Fri, 19 Jul 2013 17:43:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-525378-3</guid>
        <source url="https://forum.moparisthebest.com/t/639-help/525378.rss">639 help!</source>
      </item>
      <item>
        <title>639 help!</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <p>Use code tags and what do you need? Your post wasn’t very clear.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/639-help/525378/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/639-help/525378/2</link>
        <pubDate>Fri, 19 Jul 2013 11:06:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-525378-2</guid>
        <source url="https://forum.moparisthebest.com/t/639-help/525378.rss">639 help!</source>
      </item>
      <item>
        <title>639 help!</title>
        <dc:creator><![CDATA[@hund2 hund2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/hund2">@hund2</a> wrote:</p>
          <blockquote>
              <p>hey well my doors inside dementhium 639 base arent working correctly and i need a fix for it also how to code in double door close and open? please someone help, heres my doormanager.java</p>
<p>package org.dementhium.content.misc;</p>
<p>import org.dementhium.cache.format.CacheObjectDefinition;<br>
import org.dementhium.model.map.GameObject;<br>
import org.dementhium.model.map.ObjectManager;<br>
import org.dementhium.model.player.Player;</p>
<p>/**</p>
<ul>
<li>Handles the opening and closing of doors.</li>
<li>
</li>
<li>
<span class="mention">@author</span> Emperor</li>
<li>
<span class="mention">@author</span> Mystic Flow’</li>
<li>
<span class="mention">@author</span> Steve<br>
*/<br>
public class DoorManager {</li>
</ul>
<p>/**</p>
<ul>
<li>Handles a door.</li>
<li>
</li>
<li>
<a class="mention" href="/u/param">@param</a> player The player.</li>
<li>
<a class="mention" href="/u/param">@param</a> object The door gameobject.</li>
<li>
<a class="mention" href="/u/return">@return</a> {<a class="mention" href="/u/code">@code</a> True} if the object was a door and got handled, {<a class="mention" href="/u/code">@code</a> false} if not.<br>
*/<br>
public static boolean handleDoor(Player player, final GameObject object) {<br>
String name = object.getDefinition().getName().toLowerCase();<br>
if (!name.contains(“door”) &amp;&amp; !name.contains(“gate”)) {<br>
return false;<br>
}<br>
GameObject secondDoor = getSecondDoor(object);<br>
boolean doubleGate = secondDoor != null;<br>
boolean open = object.getDefinition().options[0].equalsIgnoreCase(“open”) || object.getDefinition().options[0].equalsIgnoreCase(“search”);<br>
if (doubleGate &amp;&amp; open) {<br>
return openDoubleDoor(player, object, secondDoor);<br>
} else if (open) {<br>
return openDoor(player, object);<br>
} else if (!open &amp;&amp; !doubleGate) {<br>
closeDoor(player, object);<br>
}<br>
return false;<br>
}</li>
</ul>
<p>public static boolean closeDoubleDoor(Player player, GameObject object, GameObject secondDoor) {<br>
closeDoubleDoor(player, object);<br>
closeDoubleDoor(player, secondDoor);<br>
return true;<br>
}</p>
<p>private static boolean closeDoubleDoor(Player player, GameObject object) {<br>
int direction = object.getRotation();<br>
if (direction &lt; 0) {<br>
direction *= -1;<br>
}<br>
switch (object.getRotation() % 4) {<br>
case 2:<br>
direction–;<br>
break;<br>
case 1:<br>
direction–;<br>
break;<br>
case 3:<br>
direction++;<br>
break;<br>
case 4:<br>
direction++;<br>
break;<br>
}<br>
int transformX = 0, transformY = 0;<br>
switch (object.getRotation() % 4) {<br>
case 0:<br>
transformY++;<br>
break;<br>
case 1:<br>
transformX++;<br>
break;<br>
case 2:<br>
transformY–;<br>
break;<br>
case 3:<br>
transformX–;<br>
break;<br>
}<br>
ObjectManager.removeCustomObject(object.getLocatio n().getX(), object.getLocation().getY(), object.getLocation().getZ(), object.getType());<br>
object.setLocation(object.getLocation().transform( transformX, transformY, 0));<br>
GameObject toReplace = new GameObject(findNextDoor(object.getId()), object.getLocation(), object.getType(), direction);<br>
ObjectManager.addCustomObject(toReplace);<br>
return true;<br>
}</p>
<p>public static boolean closeDoor(Player player, final GameObject object) {<br>
int direction = object.getRotation() - 1;<br>
if (direction &lt; 0) {<br>
direction *= -1;<br>
}<br>
int transformX = 0, transformY = 0;<br>
switch (object.getRotation() % 4) {<br>
case 0:<br>
transformY++;<br>
break;<br>
case 1:<br>
transformX++;<br>
break;<br>
case 2:<br>
transformY–;<br>
break;<br>
case 3:<br>
transformX–;<br>
break;<br>
}<br>
ObjectManager.removeCustomObject(object.getLocatio n().getX(), object.getLocation().getY(), object.getLocation().getZ(), object.getType());<br>
object.setLocation(object.getLocation().transform( transformX, transformY, 0));<br>
GameObject toReplace = new GameObject(findNextDoor(object.getId()), object.getLocation(), object.getType(), direction);<br>
ObjectManager.addCustomObject(toReplace);<br>
return true;<br>
}</p>
<p>private static boolean openDoor(Player player, final GameObject object) {<br>
int direction = object.getRotation() + 1;<br>
int transformX = 0, transformY = 0;<br>
switch (object.getRotation() % 4) {<br>
case 0:<br>
transformX–;<br>
break;<br>
case 1:<br>
transformY++;<br>
break;<br>
case 2:<br>
transformX++;<br>
break;<br>
case 3:<br>
transformY–;<br>
break;<br>
}<br>
ObjectManager.removeCustomObject(object.getLocatio n().getX(), object.getLocation().getY(), object.getLocation().getZ(), object.getType());<br>
object.setLocation(object.getLocation().transform( transformX, transformY, 0));<br>
GameObject toReplace = new GameObject(findNextDoor(object.getId()), object.getLocation(), object.getType(), direction);<br>
ObjectManager.addCustomObject(toReplace);<br>
return true;<br>
}</p>
<p>private static boolean openDoubleDoor(Player player, final GameObject door, final GameObject secondDoor) {<br>
openDoubleDoor(player, door);<br>
openDoubleDoor(player, secondDoor);<br>
return true;<br>
}</p>
<p>private static void openDoubleDoor(Player player, GameObject object) {<br>
int direction = object.getRotation();<br>
int transformX = 0, transformY = 0;<br>
switch (object.getId() % 4) {<br>
case 2:<br>
direction += 1;<br>
break;<br>
case 1:<br>
direction -= 1;<br>
break;<br>
case 3:<br>
direction += 4;<br>
case 4:<br>
direction += 1;<br>
break;<br>
}<br>
switch (object.getRotation() % 4) {<br>
case 0:<br>
transformX–;<br>
break;<br>
case 1:<br>
transformY++;<br>
break;<br>
case 2:<br>
transformX++;<br>
break;<br>
case 3:<br>
transformY–;<br>
break;<br>
}<br>
ObjectManager.removeCustomObject(object.getLocatio n().getX(), object.getLocation().getY(), object.getLocation().getZ(), object.getType());<br>
object.setLocation(object.getLocation().transform( transformX, transformY, 0));<br>
GameObject toReplace = new GameObject(findNextDoor(object.getId()), object.getLocation(), object.getType(), direction);<br>
ObjectManager.addCustomObject(toReplace);</p>
<p>}</p>
<p>private static GameObject getSecondDoor(GameObject object) {<br>
GameObject o = null;<br>
for (int i = -2; i &lt; 3; i++) {<br>
for (int j = -2; j &lt; 3; j++) {<br>
//o = object.getLocation().transform(i, j, 0).getGameObject();<br>
if (o != null &amp;&amp; !object.equals(o) &amp;&amp; (o.getDefinition().getName().toLowerCase().contain s(“door”) || o.getDefinition().getName().toLowerCase().contains (“gate”))) {<br>
return o;<br>
}<br>
}<br>
}<br>
//return object.getLocation().transform(x, y, 0).getGameObject();<br>
return null;<br>
}</p>
<p>private static int findNextDoor(int id) {<br>
CacheObjectDefinition doorDef = CacheObjectDefinition.forId(id);<br>
String option = doorDef.options[0];<br>
if (option.equalsIgnoreCase(“open”)) {<br>
for (int i = 0; i &lt; 4; i++) {<br>
CacheObjectDefinition def = CacheObjectDefinition.forId(id + i);<br>
if (def.options != null &amp;&amp; def.options[0] != null &amp;&amp; def.options[0].equalsIgnoreCase(“close”) &amp;&amp; def.name.equalsIgnoreCase(doorDef.name)) {<br>
return id + i;<br>
}<br>
}<br>
for (int i = 0; i &gt; -4; i–) {<br>
CacheObjectDefinition def = CacheObjectDefinition.forId(id + i);<br>
if (def.options != null &amp;&amp; def.options[0] != null &amp;&amp; def.options[0].equalsIgnoreCase(“close”) &amp;&amp; def.name.equalsIgnoreCase(doorDef.name)) {<br>
return id + i;<br>
}<br>
}<br>
} else if (option.equalsIgnoreCase(“close”)) {<br>
for (int i = 0; i &gt; -4; i–) {<br>
CacheObjectDefinition def = CacheObjectDefinition.forId(id + i);<br>
if (def.options != null &amp;&amp; def.options[0] != null &amp;&amp; def.options[0].equalsIgnoreCase(“open”) &amp;&amp; def.name.equalsIgnoreCase(doorDef.name)) {<br>
return id + i;<br>
}<br>
}<br>
for (int i = 0; i &lt; 4; i++) {<br>
CacheObjectDefinition def = CacheObjectDefinition.forId(id + i);<br>
if (def.options != null &amp;&amp; def.options[0] != null &amp;&amp; def.options[0].equalsIgnoreCase(“open”) &amp;&amp; def.name.equalsIgnoreCase(doorDef.name)) {<br>
return id + i;<br>
}<br>
}<br>
}<br>
return 0;<br>
}</p>
<p>}</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/639-help/525378/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/639-help/525378/1</link>
        <pubDate>Thu, 18 Jul 2013 23:07:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-525378-1</guid>
        <source url="https://forum.moparisthebest.com/t/639-help/525378.rss">639 help!</source>
      </item>
  </channel>
</rss>
