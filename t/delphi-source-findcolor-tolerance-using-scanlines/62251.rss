<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[Delphi][Source] FindColor(Tolerance) using ScanLines</title>
    <link>https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251</link>
    <description>Well, I notice many people do (no offence) a very newbish thing...
They use GetPixel for colorfinding functions...
Of course it works and it&#39;s good to learn it, but at a certain point you should move on to better techniques because GetPixel is incredibly slow.
It has to make an api call for every pixel.

I&#39;ve quickly put together a function which uses scanlines.
A small explanation...
Colorfunctions that use scanlines get a complete bitmap of the client canvas and then get line by line rows of pixels to find a color in.

I&#39;ve tried to comment it so it&#39;s clear how everything works and easier to use to make your own functions.
This is not the best technique, but it&#39;s good, fast and reliable.

[code]function FindColor(var x, y: Integer; Color, xs, ys, xe, ye, Tolerance: Integer; Window: Hwnd): Boolean; stdcall;
var
  Bmp: TBitmap; // Bitmap of the client
  tmpDC: HDC; // Device context of the client&#39;s window handle
  Size: TRect; // Rect(angle) of the client&#39;s window
  cx, cy: Integer; // For-loop vars
  Line: PRGB32Array; // The scanline
begin
  Result := False; // In case the color isn&#39;t found =&gt; Result = False
  x := -1; // In case the color isn&#39;t found =&gt; x = -1
  y := -1; // In case the color isn&#39;t found =&gt; y = -1
  Bmp := TBitmap.Create; // We create our bitmap instance
  tmpDC := GetWindowDC(Window); // We get the device context of the client&#39;s window handle
  GetWindowRect(Window, Size); // We get the rect(angle) of the client&#39;s window
  Bmp.Width := Size.Right - Size.Left; // We set the width of our bitmap
  Bmp.Height := Size.Bottom - Size.Top; // We set the height of our bitmap
  BitBlt(Bmp.Canvas.Handle, 0, 0, Bmp.Width, Bmp.Height, tmpDC, 0, 0, SRCCOPY);
  // ^^^ We copy the client&#39;s canvas onto the bitmap
  Bmp.PixelFormat := pf32bit; // We set the bitmap to 32bits
  DeleteDC(tmpDC); // We delete the device context to avoid memory leakage
  for cy := ys to ye do // Loop for the rows of pixels (y)
  begin          
    if cy &gt;= Bmp.Height then Break; // Break the loop if you reach the end of the bitmap
    Line := Bmp.ScanLine[cy]; // We retrieve the scanline (line of pixels) from the bitmap for the current y
    for cx := xs to xe do // Loop for the colums of pixels (x)
    begin
      if cx &gt;= Bmp.Width then Break; // Break the loop if you reach the end of the bitmap
      if (SimilarColors(RGB(Line[cx].R, Line[cx].G, Line[cx].B), Color, Tolerance)) then
      // ^^^ We convert the RGB values of the current pixel to a color and compare it with the tolerance to the entered color
      begin // If the color is similar (or for tol 0 the same) then...
        Result := True; // Result of the function
        x := cx; // Returned x-value
        y := cy;  // Returned y-value
        Line := nil; // Free the scanline to avoid memory leaks
        Bmp.Free; // Free the bitmap to avoid memory leaks
        Exit; // Exit the function
      end;
    end;
  end;
  Line := nil; // Free the scanline to avoid memory leaks
  Bmp.Free; // Free the bitmap to avoid memory leaks
end;[/code]

For this function to work you will need 2 things, the following type declarations:
[code]type
  TRGB32 = packed record
    B, G, R, A: Byte;
  end;
  TRGB32Array = packed array[0..MaxInt div SizeOf(TRGB32) - 1] of TRGB32;
  PRGB32Array = ^TRGB32Array;[/code]

And this function:
[code]function SimilarColors(Color1, Color2, Tolerance: Integer): Boolean;
begin
  Result := ((Abs((Color1 and $ff) - (Color2 and $ff)) &lt;= Tolerance) and
    (Abs(((Color1 and $ff00) shr 8) - ((Color2 and $ff00) shr 8)) &lt;= Tolerance) and
    (Abs(((Color1 and $ff0000) shr 16) - ((Color2 and $ff0000) shr 16)) &lt;= Tolerance));
end;[/code]

I hope you can learn something from this, have fun ;)</description>
    
    <lastBuildDate>Fri, 02 Mar 2007 03:48:35 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[Delphi][Source] FindColor(Tolerance) using ScanLines</title>
        <dc:creator><![CDATA[@Freddy1990 Freddy1990]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/freddy1990">@Freddy1990</a> wrote:</p>
          <blockquote>
              <p>[quote=“cruel, post:9, topic:62251”]o rly?<br>
Then it’s too bad that the functions are sooooo slow when being run from the scripting engine. :P[/quote]<br>
Hmm, that propably slows them down a bit, but even so, if this is being ran from the script engine it’s also slower</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251/10</link>
        <pubDate>Fri, 02 Mar 2007 03:48:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-62251-10</guid>
        <source url="https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251.rss">[Delphi][Source] FindColor(Tolerance) using ScanLines</source>
      </item>
      <item>
        <title>[Delphi][Source] FindColor(Tolerance) using ScanLines</title>
        <dc:creator><![CDATA[@cruel cruel]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cruel">@cruel</a> wrote:</p>
          <blockquote>
              <p>o rly?<br>
Then it’s too bad that the functions are sooooo slow when being run from the scripting engine. <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251/9</link>
        <pubDate>Fri, 02 Mar 2007 01:49:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-62251-9</guid>
        <source url="https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251.rss">[Delphi][Source] FindColor(Tolerance) using ScanLines</source>
      </item>
      <item>
        <title>[Delphi][Source] FindColor(Tolerance) using ScanLines</title>
        <dc:creator><![CDATA[@Freddy1990 Freddy1990]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/freddy1990">@Freddy1990</a> wrote:</p>
          <blockquote>
              <p>[quote=“cruel, post:7, topic:62251”][quote author=pplsuqbawlz link=topic=89779.msg946593#msg946593 date=1172554086]<br>
Then again “Get_Value” is kinda bad too… try bitshifting for them.</p>
<p>Bitshifting is bloody fast.<br>
[/quote]<br>
Basically what the functions do, but you’re essentially right since he might as well replace the function calls with the one line of code those functions use. Not sure if it’d be much faster, but might as well try. lol</p>
<aside class="quote no-group">
<blockquote>
<p>SCAR’s functions are better…</p>
</blockquote>
</aside>
<p>Faster?! :o<br>
Or just overall better?[/quote]<br>
Both faster and better <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=6" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251/8</link>
        <pubDate>Thu, 01 Mar 2007 20:48:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-62251-8</guid>
        <source url="https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251.rss">[Delphi][Source] FindColor(Tolerance) using ScanLines</source>
      </item>
      <item>
        <title>[Delphi][Source] FindColor(Tolerance) using ScanLines</title>
        <dc:creator><![CDATA[@cruel cruel]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cruel">@cruel</a> wrote:</p>
          <blockquote>
              <p>[quote=“pplsuqbawlz, post:3, topic:62251”]Then again “Get_Value” is kinda bad too… try bitshifting for them.</p>
<p>Bitshifting is bloody fast.[/quote]<br>
Basically what the functions do, but you’re essentially right since he might as well replace the function calls with the one line of code those functions use. Not sure if it’d be much faster, but might as well try. lol</p>
<aside class="quote no-group quote-modified" data-post="6" data-topic="62251">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/freddy1990/40/85_2.png" class="avatar"> Freddy1990:</div>
<blockquote>
<p>SCAR’s functions are better…</p>
</blockquote>
</aside>
<p>Faster?! :o<br>
Or just overall better?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251/7</link>
        <pubDate>Thu, 01 Mar 2007 00:18:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-62251-7</guid>
        <source url="https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251.rss">[Delphi][Source] FindColor(Tolerance) using ScanLines</source>
      </item>
      <item>
        <title>[Delphi][Source] FindColor(Tolerance) using ScanLines</title>
        <dc:creator><![CDATA[@Freddy1990 Freddy1990]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/freddy1990">@Freddy1990</a> wrote:</p>
          <blockquote>
              <p>[quote=“The Un-Named, post:5, topic:62251”]Very nice Freddy. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>This could be useful, being able to rewrite a lot of SCAR functions and time them to see what one is best for performance.[/quote]<br>
SCAR’s functions are better…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251/6</link>
        <pubDate>Thu, 01 Mar 2007 00:00:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-62251-6</guid>
        <source url="https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251.rss">[Delphi][Source] FindColor(Tolerance) using ScanLines</source>
      </item>
      <item>
        <title>[Delphi][Source] FindColor(Tolerance) using ScanLines</title>
        <dc:creator><![CDATA[@The_Un-Named The Un-Named]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_un-named">@The_Un-Named</a> wrote:</p>
          <blockquote>
              <p>Very nice Freddy. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>This could be useful, being able to rewrite a lot of SCAR functions and time them to see what one is best for performance.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251/5</link>
        <pubDate>Tue, 27 Feb 2007 06:19:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-62251-5</guid>
        <source url="https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251.rss">[Delphi][Source] FindColor(Tolerance) using ScanLines</source>
      </item>
      <item>
        <title>[Delphi][Source] FindColor(Tolerance) using ScanLines</title>
        <dc:creator><![CDATA[@Freddy1990 Freddy1990]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/freddy1990">@Freddy1990</a> wrote:</p>
          <blockquote>
              <p>[quote=“Bebemycat2, post:2, topic:62251”]Very nice freddy.</p>
<p>I looked at the last page of the programing section and it is all posts by you posting sources. Your like a machine <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<p>I’ll use these for sure. :)[/quote]</p>
<p>The difference rly is that this is a good function <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"> The others i posted at the start is just basic crap rly <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>[quote=“pplsuqbawlz, post:3, topic:62251”]Then again “Get_Value” is kinda bad too… try bitshifting for them.</p>
<p>Bitshifting is bloody fast.[/quote]<br>
I didn’t write that comparison and rgb function <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=6" title=":wink:" class="emoji" alt=":wink:"><br>
I found them ages ago when i started delphi on some pastebin<br>
I’ll rewrite em properly tomorrow… erm today <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"> cuz it’s 1:15am =P</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251/4</link>
        <pubDate>Tue, 27 Feb 2007 05:34:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-62251-4</guid>
        <source url="https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251.rss">[Delphi][Source] FindColor(Tolerance) using ScanLines</source>
      </item>
      <item>
        <title>[Delphi][Source] FindColor(Tolerance) using ScanLines</title>
        <dc:creator><![CDATA[@pplsuqbawlz pplsuqbawlz]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pplsuqbawlz">@pplsuqbawlz</a> wrote:</p>
          <blockquote>
              <p>Then again “Get_Value” is kinda bad too… try bitshifting for them.</p>
<p>Bitshifting is bloody fast.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251/3</link>
        <pubDate>Tue, 27 Feb 2007 05:28:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-62251-3</guid>
        <source url="https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251.rss">[Delphi][Source] FindColor(Tolerance) using ScanLines</source>
      </item>
      <item>
        <title>[Delphi][Source] FindColor(Tolerance) using ScanLines</title>
        <dc:creator><![CDATA[@Bebemycat2 Bebe]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bebemycat2">@Bebemycat2</a> wrote:</p>
          <blockquote>
              <p>Very nice freddy.</p>
<p>I looked at the last page of the programing section and it is all posts by you posting sources. Your like a machine <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=6" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
<p>I’ll use these for sure. <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251/2</link>
        <pubDate>Tue, 27 Feb 2007 05:01:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-62251-2</guid>
        <source url="https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251.rss">[Delphi][Source] FindColor(Tolerance) using ScanLines</source>
      </item>
      <item>
        <title>[Delphi][Source] FindColor(Tolerance) using ScanLines</title>
        <dc:creator><![CDATA[@Freddy1990 Freddy1990]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/freddy1990">@Freddy1990</a> wrote:</p>
          <blockquote>
              <p>Well, I notice many people do (no offence) a very newbish thing…<br>
They use GetPixel for colorfinding functions…<br>
Of course it works and it’s good to learn it, but at a certain point you should move on to better techniques because GetPixel is incredibly slow.<br>
It has to make an api call for every pixel.</p>
<p>I’ve quickly put together a function which uses scanlines.<br>
A small explanation…<br>
Colorfunctions that use scanlines get a complete bitmap of the client canvas and then get line by line rows of pixels to find a color in.</p>
<p>I’ve tried to comment it so it’s clear how everything works and easier to use to make your own functions.<br>
This is not the best technique, but it’s good, fast and reliable.</p>
<p><code>function FindColor(var x, y: Integer; Color, xs, ys, xe, ye, Tolerance: Integer; Window: Hwnd): Boolean; stdcall;
var
  Bmp: TBitmap; // Bitmap of the client
  tmpDC: HDC; // Device context of the client's window handle
  Size: TRect; // Rect(angle) of the client's window
  cx, cy: Integer; // For-loop vars
  Line: PRGB32Array; // The scanline
begin
  Result := False; // In case the color isn't found =&gt; Result = False
  x := -1; // In case the color isn't found =&gt; x = -1
  y := -1; // In case the color isn't found =&gt; y = -1
  Bmp := TBitmap.Create; // We create our bitmap instance
  tmpDC := GetWindowDC(Window); // We get the device context of the client's window handle
  GetWindowRect(Window, Size); // We get the rect(angle) of the client's window
  Bmp.Width := Size.Right - Size.Left; // We set the width of our bitmap
  Bmp.Height := Size.Bottom - Size.Top; // We set the height of our bitmap
  BitBlt(Bmp.Canvas.Handle, 0, 0, Bmp.Width, Bmp.Height, tmpDC, 0, 0, SRCCOPY);
  // ^^^ We copy the client's canvas onto the bitmap
  Bmp.PixelFormat := pf32bit; // We set the bitmap to 32bits
  DeleteDC(tmpDC); // We delete the device context to avoid memory leakage
  for cy := ys to ye do // Loop for the rows of pixels (y)
  begin          
    if cy &gt;= Bmp.Height then Break; // Break the loop if you reach the end of the bitmap
    Line := Bmp.ScanLine[cy]; // We retrieve the scanline (line of pixels) from the bitmap for the current y
    for cx := xs to xe do // Loop for the colums of pixels (x)
    begin
      if cx &gt;= Bmp.Width then Break; // Break the loop if you reach the end of the bitmap
      if (SimilarColors(RGB(Line[cx].R, Line[cx].G, Line[cx].B), Color, Tolerance)) then
      // ^^^ We convert the RGB values of the current pixel to a color and compare it with the tolerance to the entered color
      begin // If the color is similar (or for tol 0 the same) then...
        Result := True; // Result of the function
        x := cx; // Returned x-value
        y := cy;  // Returned y-value
        Line := nil; // Free the scanline to avoid memory leaks
        Bmp.Free; // Free the bitmap to avoid memory leaks
        Exit; // Exit the function
      end;
    end;
  end;
  Line := nil; // Free the scanline to avoid memory leaks
  Bmp.Free; // Free the bitmap to avoid memory leaks
end;</code></p>
<p>For this function to work you will need 2 things, the following type declarations:</p>
<p><code>type
  TRGB32 = packed record
    B, G, R, A: Byte;
  end;
  TRGB32Array = packed array[0..MaxInt div SizeOf(TRGB32) - 1] of TRGB32;
  PRGB32Array = ^TRGB32Array;</code></p>
<p>And this function:</p>
<p><code>function SimilarColors(Color1, Color2, Tolerance: Integer): Boolean;
begin
  Result := ((Abs((Color1 and $ff) - (Color2 and $ff)) &lt;= Tolerance) and
    (Abs(((Color1 and $ff00) shr 8) - ((Color2 and $ff00) shr 8)) &lt;= Tolerance) and
    (Abs(((Color1 and $ff0000) shr 16) - ((Color2 and $ff0000) shr 16)) &lt;= Tolerance));
end;</code></p>
<p>I hope you can learn something from this, have fun <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=6" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251/1</link>
        <pubDate>Tue, 27 Feb 2007 04:14:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-62251-1</guid>
        <source url="https://forum.moparisthebest.com/t/delphi-source-findcolor-tolerance-using-scanlines/62251.rss">[Delphi][Source] FindColor(Tolerance) using ScanLines</source>
      </item>
  </channel>
</rss>
