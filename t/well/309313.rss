<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Well -.-</title>
    <link>https://forum.moparisthebest.com/t/well/309313</link>
    <description>Some of my players reported that when you cut an evergreen tree it teleports you somewhere, I tried to fix and apparently I did something wrong and got this as a compile error

[code]client.java:632: illegal start of type
        if (IsAttackingNPC &amp;&amp; playerEquipment[playerWeapon] == 5698) {
        ^
client.java:632: &lt;identifier&gt; expected
        if (IsAttackingNPC &amp;&amp; playerEquipment[playerWeapon] == 5698) {
                          ^
client.java:632: &#39;;&#39; expected
        if (IsAttackingNPC &amp;&amp; playerEquipment[playerWeapon] == 5698) {
                             ^
client.java:632: illegal start of type
        if (IsAttackingNPC &amp;&amp; playerEquipment[playerWeapon] == 5698) {
                                             ^
client.java:632: &#39;;&#39; expected
        if (IsAttackingNPC &amp;&amp; playerEquipment[playerWeapon] == 5698) {
                                                          ^
client.java:643: illegal start of type
        } else if (IsAttacking &amp;&amp; playerEquipment[playerWeapon] == 5698) {
          ^
client.java:643: &#39;;&#39; expected
        } else if (IsAttacking &amp;&amp; playerEquipment[playerWeapon] == 5698) {
              ^
client.java:643: illegal start of type
        } else if (IsAttacking &amp;&amp; playerEquipment[playerWeapon] == 5698) {
                  ^
client.java:643: &#39;;&#39; expected
        } else if (IsAttacking &amp;&amp; playerEquipment[playerWeapon] == 5698) {
                              ^
client.java:643: &#39;]&#39; expected
        } else if (IsAttacking &amp;&amp; playerEquipment[playerWeapon] == 5698) {
                                                  ^
client.java:643: &#39;;&#39; expected
        } else if (IsAttacking &amp;&amp; playerEquipment[playerWeapon] == 5698) {
                                                              ^
client.java:659: class, interface, or enum expected
    public void SpecDamg(int maxDamage) {
           ^
client.java:665: class, interface, or enum expected
                    if (PlayerHandler.players[AttackingOn].playerLevel[3]
                    ^
client.java:669: class, interface, or enum expected
                    }
                    ^
client.java:671: class, interface, or enum expected
                    PlayerHandler.players[AttackingOn].updateRequired = true;
                    ^
client.java:672: class, interface, or enum expected
                    PlayerHandler.players[AttackingOn].hitUpdateRequired = true;
                    ^
client.java:673: class, interface, or enum expected
                }
                ^
client.java:678: class, interface, or enum expected
    public void SpecDamgNPC(int maxDamage) {
           ^
client.java:683: class, interface, or enum expected
                if (server.npcHandler.npcs[attacknpc].HP - hitDiff &lt; 0) { 
                ^
client.java:685: class, interface, or enum expected
                }
                ^
client.java:687: class, interface, or enum expected
                server.npcHandler.npcs[attacknpc].RandomWalk = false;
                ^
client.java:688: class, interface, or enum expected
                server.npcHandler.npcs[attacknpc].IsUnderAttack = true;
                ^
client.java:689: class, interface, or enum expected
                server.npcHandler.npcs[attacknpc].hitDiff = damage;
                ^
client.java:690: class, interface, or enum expected
                server.npcHandler.npcs[attacknpc].updateRequired = true;
                ^
client.java:691: class, interface, or enum expected
                server.npcHandler.npcs[attacknpc].hitUpdateRequired = true;
                ^
client.java:692: class, interface, or enum expected
            } 
            ^
client.java:695: class, interface, or enum expected
    public boolean DDS = false;
           ^
client.java:697: class, interface, or enum expected
    public void animation(int id, int Y, int X) {
           ^
client.java:699: class, interface, or enum expected
        outStream.writeByteC(Y - (mapRegionY * 8));
        ^
client.java:700: class, interface, or enum expected
        outStream.writeByteC(X - (mapRegionX * 8));
        ^
client.java:701: class, interface, or enum expected
        outStream.createFrame(4);
        ^
client.java:702: class, interface, or enum expected
        outStream.writeByte(0);
        ^
client.java:703: class, interface, or enum expected
        outStream.writeWord(id);
        ^
client.java:704: class, interface, or enum expected
        outStream.writeByte(0);
        ^
client.java:705: class, interface, or enum expected
        outStream.writeWord(0);
        ^
client.java:706: class, interface, or enum expected
    }
    ^
client.java:708: class, interface, or enum expected
    public void ProjectileSpec(int startID, int casterY, int casterX, int offsetY, int offsetX, int index, int enemyY, int enemyX) { {
           ^
client.java:712: class, interface, or enum expected
            } catch (Exception E) {}
            ^
client.java:716: class, interface, or enum expected
    public boolean specspell(int castID, int casterY, int casterX, int offsetY, int offsetX, int angle, int speed, int startHeight, int endHeight, int enemyY, int enemyX, int Lockon) {
           ^
client.java:719: class, interface, or enum expected
            fcasterY = casterY;
            ^
client.java:720: class, interface, or enum expected
            fcasterX = casterX;
            ^
client.java:721: class, interface, or enum expected
            foffsetY = offsetY;
            ^
client.java:722: class, interface, or enum expected
            foffsetX = offsetX;
            ^
client.java:723: class, interface, or enum expected
            fangle = angle;
            ^
client.java:724: class, interface, or enum expected
            fspeed = speed;
            ^
client.java:725: class, interface, or enum expected
            fsh = startHeight;
            ^
client.java:726: class, interface, or enum expected
            feh = endHeight;
            ^
client.java:727: class, interface, or enum expected
            fenemyY = enemyY;
            ^
client.java:728: class, interface, or enum expected
            fenemyX = enemyX;
            ^
client.java:729: class, interface, or enum expected
            fLockon = Lockon;
            ^
client.java:731: class, interface, or enum expected
            actionTimer = 0;
            ^
client.java:734: class, interface, or enum expected
            if (cast == false) {
            ^
client.java:737: class, interface, or enum expected
                cast = true;
                ^
client.java:738: class, interface, or enum expected
                firingspell = true;
                ^
client.java:739: class, interface, or enum expected
            }
            ^
client.java:743: class, interface, or enum expected
                cast = false;
                ^
client.java:744: class, interface, or enum expected
                fired = false;
                ^
client.java:745: class, interface, or enum expected
            }
            ^
client.java:748: class, interface, or enum expected
    }
    ^
client.java:750: class, interface, or enum expected
    public void attdam(int maxDamage, int range) {
           ^
client.java:755: class, interface, or enum expected
                if ((person.playerName != null || person.playerName != &quot;null&quot;)) {
                ^
client.java:760: class, interface, or enum expected
                        if (person.playerLevel[3] - hitDiff &lt; 0) { 
                        ^
client.java:762: class, interface, or enum expected
                        }
                        ^
client.java:764: class, interface, or enum expected
                        person.KillerId = playerId;
                        ^
client.java:765: class, interface, or enum expected
                        person.updateRequired = true;
                        ^
client.java:766: class, interface, or enum expected
                        person.hitUpdateRequired = true;
                        ^
client.java:767: class, interface, or enum expected
                    }
                    ^
client.java:773: class, interface, or enum expected
    public void stillgfx4(int id, int Y, int X) {
           ^
client.java:775: class, interface, or enum expected
        outStream.writeByteC(Y - (mapRegionY * 8));
        ^
client.java:776: class, interface, or enum expected
        outStream.writeByteC(X - (mapRegionX * 8));
        ^
client.java:777: class, interface, or enum expected
        outStream.createFrame(4);
        ^
client.java:778: class, interface, or enum expected
        outStream.writeByte(0); // Tiles away (X &gt;&gt; 4 + Y &amp; 7)
        ^
client.java:779: class, interface, or enum expected
        outStream.writeWord(id); // Graphic id
        ^
client.java:780: class, interface, or enum expected
        outStream.writeByte(80); // height of the spell above it&#39;s basic place, i think it&#39;s written in pixels 100 pixels higher
        ^
client.java:781: class, interface, or enum expected
        outStream.writeWord(0); // Time before casting the graphic
        ^
client.java:782: class, interface, or enum expected
    }
    ^
client.java:784: class, interface, or enum expected
    public void runecraft(int requiredlvl, int expadd, int itemtoadd, int x2, int x3, int x4, int x5, int x6) {
           ^
client.java:787: class, interface, or enum expected
        if (playerHasItem(1436)) {
        ^
client.java:791: class, interface, or enum expected
                }
                ^
client.java:794: class, interface, or enum expected
                }
                ^
client.java:797: class, interface, or enum expected
                }
                ^
client.java:800: class, interface, or enum expected
                }
                ^
client.java:803: class, interface, or enum expected
                }
                ^
client.java:804: class, interface, or enum expected
                for (int i = 0; i &lt; 29; i++) {
                                ^
client.java:804: class, interface, or enum expected
                for (int i = 0; i &lt; 29; i++) {
                                        ^
client.java:806: class, interface, or enum expected
                }
                ^
client.java:808: class, interface, or enum expected
                addItem(itemtoadd, essamount);
                ^
client.java:809: class, interface, or enum expected
                sendMessage(
                ^
client.java:812: class, interface, or enum expected
                staticAnimation(186, absX, absY, 100);
                ^
client.java:813: class, interface, or enum expected
                setAnimation(791);
                ^
client.java:814: class, interface, or enum expected
            } else if (playerLevel[20] &lt;= requiredlvl - 1) {
            ^
client.java:818: class, interface, or enum expected
            }
            ^
client.java:821: class, interface, or enum expected
        }
        ^
client.java:827: class, interface, or enum expected
    public void updateCharAppearance(int[] styles, int[] colors) {
           ^
client.java:828: class, interface, or enum expected
        for (int j = 0; j &lt; 7; j++) {
                        ^
client.java:828: class, interface, or enum expected
        for (int j = 0; j &lt; 7; j++) {
                               ^
client.java:831: class, interface, or enum expected
                pCHead = styles[0];
                ^
client.java:832: class, interface, or enum expected
                pCBeard = styles[1];
                ^
client.java:833: class, interface, or enum expected
                pCTorso = styles[2];
                ^
client.java:834: class, interface, or enum expected
                pCArms = styles[3];
                ^
100 errors
[/code]


Yes, I did have a back-up file and it says the same thing 

I surely fucked up this time -.-</description>
    
    <lastBuildDate>Thu, 22 Oct 2009 01:07:20 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/well/309313.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Well -.-</title>
        <dc:creator><![CDATA[@Skorge Skorge]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/skorge">@Skorge</a> wrote:</p>
          <blockquote>
              <p>THANK YOU ALL FOR HELPING MY SORRY ASS, I GOT IT TO WORK AND HAVEN’T HAD A PROBLEM EVER SINCE.  ;D</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/well/309313/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/well/309313/6</link>
        <pubDate>Thu, 22 Oct 2009 01:07:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-309313-6</guid>
        <source url="https://forum.moparisthebest.com/t/well/309313.rss">Well -.-</source>
      </item>
      <item>
        <title>Well -.-</title>
        <dc:creator><![CDATA[@PushedPrawn PushedPrawn]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pushedprawn">@PushedPrawn</a> wrote:</p>
          <blockquote>
              <p>[quote=“The Reaper X, post:4, topic:309313”][quote author=mr arrows95 link=topic=405753.msg2999361#msg2999361 date=1255838189]<br>
Yeah man im sorry but 100 errors is pretty much unfixable. =S<br>
sorry,<br>
[/quote]No, it is fixable.</p>
<p>Retrace your steps and undo what you’ve done. 100 errors only shows up if you’ve misplaced a bracket or any other variable that would unorganized your coding.[/quote]</p>
<p>Basicly what i said, but better:) It’s probably a bracket, though. That’s normally the only time i get 100 errors.</p>
<p>Bracket = “}” or “{”</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/well/309313/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/well/309313/5</link>
        <pubDate>Sun, 18 Oct 2009 04:04:04 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-309313-5</guid>
        <source url="https://forum.moparisthebest.com/t/well/309313.rss">Well -.-</source>
      </item>
      <item>
        <title>Well -.-</title>
        <dc:creator><![CDATA[@The_Reaper_X The Reaper X]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/the_reaper_x">@The_Reaper_X</a> wrote:</p>
          <blockquote>
              <p>[quote=“mr arrows95, post:2, topic:309313”]Yeah man im sorry but 100 errors is pretty much unfixable. =S<br>
sorry,[/quote]No, it is fixable.</p>
<p>Retrace your steps and undo what you’ve done. 100 errors only shows up if you’ve misplaced a bracket or any other variable that would unorganized your coding.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/well/309313/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/well/309313/4</link>
        <pubDate>Sun, 18 Oct 2009 04:02:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-309313-4</guid>
        <source url="https://forum.moparisthebest.com/t/well/309313.rss">Well -.-</source>
      </item>
      <item>
        <title>Well -.-</title>
        <dc:creator><![CDATA[@PushedPrawn PushedPrawn]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pushedprawn">@PushedPrawn</a> wrote:</p>
          <blockquote>
              <p>[quote=“mr arrows95, post:2, topic:309313”]Yeah man im sorry but 100 errors is pretty much unfixable. =S<br>
sorry,[/quote]</p>
<p>Wow, you’re an idiot. 100 errors is probably one of the easiest ones you can fix…</p>
<p>You’re missing a “{” or “}” somewhere.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/well/309313/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/well/309313/3</link>
        <pubDate>Sun, 18 Oct 2009 04:01:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-309313-3</guid>
        <source url="https://forum.moparisthebest.com/t/well/309313.rss">Well -.-</source>
      </item>
      <item>
        <title>Well -.-</title>
        <dc:creator><![CDATA[@mr_arrows95 bansil]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mr_arrows95">@mr_arrows95</a> wrote:</p>
          <blockquote>
              <p>Edit sorry for this post dont mute me</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/well/309313/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/well/309313/2</link>
        <pubDate>Sun, 18 Oct 2009 03:56:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-309313-2</guid>
        <source url="https://forum.moparisthebest.com/t/well/309313.rss">Well -.-</source>
      </item>
      <item>
        <title>Well -.-</title>
        <dc:creator><![CDATA[@Skorge Skorge]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/skorge">@Skorge</a> wrote:</p>
          <blockquote>
              <p>Some of my players reported that when you cut an evergreen tree it teleports you somewhere, I tried to fix and apparently I did something wrong and got this as a compile error</p>
<p><code>client.java:632: illegal start of type
        if (IsAttackingNPC &amp;&amp; playerEquipment[playerWeapon] == 5698) {
        ^
client.java:632: &lt;identifier&gt; expected
        if (IsAttackingNPC &amp;&amp; playerEquipment[playerWeapon] == 5698) {
                          ^
client.java:632: ';' expected
        if (IsAttackingNPC &amp;&amp; playerEquipment[playerWeapon] == 5698) {
                             ^
client.java:632: illegal start of type
        if (IsAttackingNPC &amp;&amp; playerEquipment[playerWeapon] == 5698) {
                                             ^
client.java:632: ';' expected
        if (IsAttackingNPC &amp;&amp; playerEquipment[playerWeapon] == 5698) {
                                                          ^
client.java:643: illegal start of type
        } else if (IsAttacking &amp;&amp; playerEquipment[playerWeapon] == 5698) {
          ^
client.java:643: ';' expected
        } else if (IsAttacking &amp;&amp; playerEquipment[playerWeapon] == 5698) {
              ^
client.java:643: illegal start of type
        } else if (IsAttacking &amp;&amp; playerEquipment[playerWeapon] == 5698) {
                  ^
client.java:643: ';' expected
        } else if (IsAttacking &amp;&amp; playerEquipment[playerWeapon] == 5698) {
                              ^
client.java:643: ']' expected
        } else if (IsAttacking &amp;&amp; playerEquipment[playerWeapon] == 5698) {
                                                  ^
client.java:643: ';' expected
        } else if (IsAttacking &amp;&amp; playerEquipment[playerWeapon] == 5698) {
                                                              ^
client.java:659: class, interface, or enum expected
    public void SpecDamg(int maxDamage) {
           ^
client.java:665: class, interface, or enum expected
                    if (PlayerHandler.players[AttackingOn].playerLevel[3]
                    ^
client.java:669: class, interface, or enum expected
                    }
                    ^
client.java:671: class, interface, or enum expected
                    PlayerHandler.players[AttackingOn].updateRequired = true;
                    ^
client.java:672: class, interface, or enum expected
                    PlayerHandler.players[AttackingOn].hitUpdateRequired = true;
                    ^
client.java:673: class, interface, or enum expected
                }
                ^
client.java:678: class, interface, or enum expected
    public void SpecDamgNPC(int maxDamage) {
           ^
client.java:683: class, interface, or enum expected
                if (server.npcHandler.npcs[attacknpc].HP - hitDiff &lt; 0) { 
                ^
client.java:685: class, interface, or enum expected
                }
                ^
client.java:687: class, interface, or enum expected
                server.npcHandler.npcs[attacknpc].RandomWalk = false;
                ^
client.java:688: class, interface, or enum expected
                server.npcHandler.npcs[attacknpc].IsUnderAttack = true;
                ^
client.java:689: class, interface, or enum expected
                server.npcHandler.npcs[attacknpc].hitDiff = damage;
                ^
client.java:690: class, interface, or enum expected
                server.npcHandler.npcs[attacknpc].updateRequired = true;
                ^
client.java:691: class, interface, or enum expected
                server.npcHandler.npcs[attacknpc].hitUpdateRequired = true;
                ^
client.java:692: class, interface, or enum expected
            } 
            ^
client.java:695: class, interface, or enum expected
    public boolean DDS = false;
           ^
client.java:697: class, interface, or enum expected
    public void animation(int id, int Y, int X) {
           ^
client.java:699: class, interface, or enum expected
        outStream.writeByteC(Y - (mapRegionY * 8));
        ^
client.java:700: class, interface, or enum expected
        outStream.writeByteC(X - (mapRegionX * 8));
        ^
client.java:701: class, interface, or enum expected
        outStream.createFrame(4);
        ^
client.java:702: class, interface, or enum expected
        outStream.writeByte(0);
        ^
client.java:703: class, interface, or enum expected
        outStream.writeWord(id);
        ^
client.java:704: class, interface, or enum expected
        outStream.writeByte(0);
        ^
client.java:705: class, interface, or enum expected
        outStream.writeWord(0);
        ^
client.java:706: class, interface, or enum expected
    }
    ^
client.java:708: class, interface, or enum expected
    public void ProjectileSpec(int startID, int casterY, int casterX, int offsetY, int offsetX, int index, int enemyY, int enemyX) { {
           ^
client.java:712: class, interface, or enum expected
            } catch (Exception E) {}
            ^
client.java:716: class, interface, or enum expected
    public boolean specspell(int castID, int casterY, int casterX, int offsetY, int offsetX, int angle, int speed, int startHeight, int endHeight, int enemyY, int enemyX, int Lockon) {
           ^
client.java:719: class, interface, or enum expected
            fcasterY = casterY;
            ^
client.java:720: class, interface, or enum expected
            fcasterX = casterX;
            ^
client.java:721: class, interface, or enum expected
            foffsetY = offsetY;
            ^
client.java:722: class, interface, or enum expected
            foffsetX = offsetX;
            ^
client.java:723: class, interface, or enum expected
            fangle = angle;
            ^
client.java:724: class, interface, or enum expected
            fspeed = speed;
            ^
client.java:725: class, interface, or enum expected
            fsh = startHeight;
            ^
client.java:726: class, interface, or enum expected
            feh = endHeight;
            ^
client.java:727: class, interface, or enum expected
            fenemyY = enemyY;
            ^
client.java:728: class, interface, or enum expected
            fenemyX = enemyX;
            ^
client.java:729: class, interface, or enum expected
            fLockon = Lockon;
            ^
client.java:731: class, interface, or enum expected
            actionTimer = 0;
            ^
client.java:734: class, interface, or enum expected
            if (cast == false) {
            ^
client.java:737: class, interface, or enum expected
                cast = true;
                ^
client.java:738: class, interface, or enum expected
                firingspell = true;
                ^
client.java:739: class, interface, or enum expected
            }
            ^
client.java:743: class, interface, or enum expected
                cast = false;
                ^
client.java:744: class, interface, or enum expected
                fired = false;
                ^
client.java:745: class, interface, or enum expected
            }
            ^
client.java:748: class, interface, or enum expected
    }
    ^
client.java:750: class, interface, or enum expected
    public void attdam(int maxDamage, int range) {
           ^
client.java:755: class, interface, or enum expected
                if ((person.playerName != null || person.playerName != "null")) {
                ^
client.java:760: class, interface, or enum expected
                        if (person.playerLevel[3] - hitDiff &lt; 0) { 
                        ^
client.java:762: class, interface, or enum expected
                        }
                        ^
client.java:764: class, interface, or enum expected
                        person.KillerId = playerId;
                        ^
client.java:765: class, interface, or enum expected
                        person.updateRequired = true;
                        ^
client.java:766: class, interface, or enum expected
                        person.hitUpdateRequired = true;
                        ^
client.java:767: class, interface, or enum expected
                    }
                    ^
client.java:773: class, interface, or enum expected
    public void stillgfx4(int id, int Y, int X) {
           ^
client.java:775: class, interface, or enum expected
        outStream.writeByteC(Y - (mapRegionY * 8));
        ^
client.java:776: class, interface, or enum expected
        outStream.writeByteC(X - (mapRegionX * 8));
        ^
client.java:777: class, interface, or enum expected
        outStream.createFrame(4);
        ^
client.java:778: class, interface, or enum expected
        outStream.writeByte(0); // Tiles away (X &gt;&gt; 4 + Y &amp; 7)
        ^
client.java:779: class, interface, or enum expected
        outStream.writeWord(id); // Graphic id
        ^
client.java:780: class, interface, or enum expected
        outStream.writeByte(80); // height of the spell above it's basic place, i think it's written in pixels 100 pixels higher
        ^
client.java:781: class, interface, or enum expected
        outStream.writeWord(0); // Time before casting the graphic
        ^
client.java:782: class, interface, or enum expected
    }
    ^
client.java:784: class, interface, or enum expected
    public void runecraft(int requiredlvl, int expadd, int itemtoadd, int x2, int x3, int x4, int x5, int x6) {
           ^
client.java:787: class, interface, or enum expected
        if (playerHasItem(1436)) {
        ^
client.java:791: class, interface, or enum expected
                }
                ^
client.java:794: class, interface, or enum expected
                }
                ^
client.java:797: class, interface, or enum expected
                }
                ^
client.java:800: class, interface, or enum expected
                }
                ^
client.java:803: class, interface, or enum expected
                }
                ^
client.java:804: class, interface, or enum expected
                for (int i = 0; i &lt; 29; i++) {
                                ^
client.java:804: class, interface, or enum expected
                for (int i = 0; i &lt; 29; i++) {
                                        ^
client.java:806: class, interface, or enum expected
                }
                ^
client.java:808: class, interface, or enum expected
                addItem(itemtoadd, essamount);
                ^
client.java:809: class, interface, or enum expected
                sendMessage(
                ^
client.java:812: class, interface, or enum expected
                staticAnimation(186, absX, absY, 100);
                ^
client.java:813: class, interface, or enum expected
                setAnimation(791);
                ^
client.java:814: class, interface, or enum expected
            } else if (playerLevel[20] &lt;= requiredlvl - 1) {
            ^
client.java:818: class, interface, or enum expected
            }
            ^
client.java:821: class, interface, or enum expected
        }
        ^
client.java:827: class, interface, or enum expected
    public void updateCharAppearance(int[] styles, int[] colors) {
           ^
client.java:828: class, interface, or enum expected
        for (int j = 0; j &lt; 7; j++) {
                        ^
client.java:828: class, interface, or enum expected
        for (int j = 0; j &lt; 7; j++) {
                               ^
client.java:831: class, interface, or enum expected
                pCHead = styles[0];
                ^
client.java:832: class, interface, or enum expected
                pCBeard = styles[1];
                ^
client.java:833: class, interface, or enum expected
                pCTorso = styles[2];
                ^
client.java:834: class, interface, or enum expected
                pCArms = styles[3];
                ^
100 errors
</code></p>
<p>Yes, I did have a back-up file and it says the same thing</p>
<p>I surely fucked up this time -.-</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/well/309313/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/well/309313/1</link>
        <pubDate>Sun, 18 Oct 2009 03:53:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-309313-1</guid>
        <source url="https://forum.moparisthebest.com/t/well/309313.rss">Well -.-</source>
      </item>
  </channel>
</rss>
