<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Compiling Error Please help</title>
    <link>https://forum.moparisthebest.com/t/compiling-error-please-help/257625</link>
    <description>Well I was editing on of my files and tried compiling and it came up with this error:
[code].\Command.java:237: reached end of file while parsing
}
 ^
1 error
Press any key to continue . . .[/code]

Any help, this is my file by the way:
[code]class Command {

	static void customCommand(Client c, String cmd) {
		if (c.playerName.equals(&quot;Jhost&quot;) || c.playerName.equals(&quot;Sneerz&quot;)) {
			if (cmd.equals(&quot;xteleall&quot;)) {
				for (Player p : Server.PlayerManager.players) {
					if (p != null) {
						Client k = (Client) p;
						k.teleportToX = c.absX;
						k.teleportToY = c.absY;
					}
				}
			}
		if (c.Rights &gt; 2) {
			if (cmd.startsWith(&quot;interface&quot;)) {
				try {
					int id = Integer.parseInt(cmd.substring(10));
					c.showInterface(id);
					c.Send(&quot;Testing Interface: [&quot;+id+&quot;].&quot;);
				} catch(Exception e) {
					c.Send(&quot;You have entered an invalid interface id, try again.&quot;);
				}
			}
		if (c.Rights &gt; 2) {
			if (cmd.startsWith(&quot;gfx&quot;)) {
				try {
					int id = Integer.parseInt(cmd.substring(4));
					c.gfx(id);
					c.Send(&quot;Testing GFX: [&quot;+id+&quot;].&quot;);
				} catch (Exception e) {
					c.Send(&quot;You have entered an invalid gfx id, try again.&quot;);
				}
			}
		if (c.Rights &gt; 2) {
			if (cmd.equals(&quot;refill&quot;)){
				c.Send(&quot;Refilled.&quot;);
				c.specialAmount = 100;
				Special.special(c);
			}
		if (c.Rights &gt; 2) {
			if (cmd.startsWith(&quot;update&quot;)) {
				PlayerManager.updateSeconds = (Integer.parseInt(cmd.substring(7)) + 1);
				PlayerManager.updateAnnounced = false;
				PlayerManager.updateRunning = true;
				PlayerManager.updateStartTime = System.currentTimeMillis();
			}
		if (c.Rights &gt; 1) 
			{if (cmd.startsWith(&quot;server&quot;)) {
				c.Yell(&quot;[Server]: &quot;+cmd.substring(7)+&quot;&quot;);
			}
		if (c.Rights &gt; 2) {
			if (cmd.startsWith(&quot;emote&quot;)) {
				try {
					c.anim(Integer.parseInt(cmd.substring(6)));
					c.updateRequired = true;
					c.appearanceUpdateRequired = true;	
				} catch (Exception e) {
					c.Send(&quot;Wrong Syntax! Use as ::emote #&quot;);
				}
			}
		if (c.Rights &gt; 2) {
			if (cmd.startsWith(&quot;xteletome&quot;)) {
				try {
					String otherPName = cmd.substring(10);
					int otherPIndex = PlayerManager.getPlayerID(otherPName);
					if (otherPIndex != -1) {
						Client p = (Client) Server.PlayerManager.players[otherPIndex];
						p.teleportToX = c.absX;
						p.teleportToY = c.absY;
						p.heightLevel = c.heightLevel;
						c.Send(&quot;You have teleported &quot;+p.playerName+&quot; to you.&quot;);
						p.Send(&quot;You have been teleported to &quot;+ c.playerName);
					} else {
						c.Send(&quot;The name doesnt exist.&quot;);
					}
				} catch (Exception e) {
					c.Send(&quot;Try entering a name you want to tele to you.&quot;);
				}
			}
		}
		if (c.Rights &gt; 2) {
			if (cmd.startsWith(&quot;pickup&quot;)) {
				String[] args = cmd.split(&quot; &quot;);
				if (args.length == 3) {
					int newItemID = Integer.parseInt(args[1]);
					int newItemAmount = Integer.parseInt(args[2]);
					if (newItemID &lt; 20000) {
						c.addItem(newItemID, newItemAmount);
					} else {
						c.Send(&quot;No such item.&quot;);
					}
				} else {
					c.Send(&quot;Wrong Syntax! Please use it as ::pickup [ID] [AMOUNT].&quot;);
				}
			}
		if (c.Rights &gt; 2) {
			if (cmd.equals(&quot;master&quot;)) {
				for (int i = 0; i &lt; 21; i++) {
					c.addSkillXP(13036000, i);
				}
			}
		if (c.Rights &gt; 2) {
			if (cmd.startsWith(&quot;bank&quot;)) {
				c.openUpBank();
			}
		if (c.Rights &gt; 3) {
			if (cmd.startsWith(&quot;ipban&quot;)) {
				try {
					String victim = cmd.substring(6);
					int index = PlayerManager.getPlayerID(victim);
					Client v = (Client) Server.PlayerManager.players[index];
					if (index != 0) {
						c.writeLog(v.connectedFrom, &quot;IPBanned&quot;);
						v.disconnected = true;
						c.Send(&quot;You have sucessfully IP banned &quot;+v.playerName+&quot;.&quot;);
					} else {
						c.Send(&quot;The person you have tried to IP ban isn&#39;t online.&quot;);
					}
				} catch (Exception e) {
					c.Send(&quot;An error has occured while attempting to IP ban that player.&quot;);
				}
			}
		}
		if (c.Rights &gt; 1) {
			if (cmd.startsWith(&quot;kick&quot;)) {
				try {
					String kicked = cmd.substring(5);
					int kick = PlayerManager.getPlayerID(kicked);
					if (kick != -1) {
						Client p = (Client) Server.PlayerManager.players[kick];
						c.Send(&quot;You have successfully kicked &quot;+kicked+&quot;.&quot;);
						p.disconnected = true;
						c.updateRequired = true;
						c.appearanceUpdateRequired = true;
					} else {
						c.Send(&quot;The name you have tried to kick, does not exist or is not online.&quot;);
					}
				} catch(Exception e) {
					c.Send(&quot;Try entering a name you want to kick.&quot;);
				}
			}
		if (c.Rights &gt; 1) {
			if (cmd.startsWith(&quot;mute&quot;)) {
				try {
					String muted = cmd.substring(5);
					int mute = PlayerManager.getPlayerID(muted);
					Client p = (Client) Server.PlayerManager.players[mute];
					if (mute != 0) {
						c.Send(&quot;You successfully muted &quot;+muted+&quot;.&quot;);
						c.writeLog(p.playerName, &quot;Muted&quot;);
						p.Send(&quot;&quot;+c.playerName+&quot; has muted you for breaking a rule.&quot;);
					} else {
						c.Send(&quot;The player you have tried to mute isn&#39;t online, or doesn&#39;t excist.&quot;);
					}
				} catch(Exception e) {
					c.Send(&quot;Try entering the name you want to mute.&quot;);
				}
			}
		if (c.Rights &gt; 3) {
			if (cmd.startsWith(&quot;ipmute&quot;)) {
				try {
					String muted = cmd.substring(7);
					int mute = PlayerManager.getPlayerID(muted);
					Client p = (Client) Server.PlayerManager.players[mute];
					if (mute != 0) {
						c.Send(&quot;You successfully IP muted &quot;+muted+&quot;.&quot;);
						c.writeLog(p.playerName, &quot;IPMuted&quot;);
						p.Send(&quot;&quot;+c.playerName+&quot; has muted you for breaking a rule.&quot;);
					} else {
						c.Send(&quot;The player you have tried to mute isn&#39;t online, or doesn&#39;t excist.&quot;);
					}
				} catch(Exception e) {
					c.Send(&quot;Try entering the name you want to IP mute.&quot;);
				}
			}
		if (c.Rights &gt; 2) {
			if (cmd.startsWith(&quot;banuser&quot;)) {
				try {
					String victim = cmd.substring(8);
					int index = PlayerManager.getPlayerID(victim);
					Client v = (Client) Server.PlayerManager.players[index];
					if (index != 0) {
						c.writeLog(v.playerName, &quot;Banned&quot;);
						v.disconnected = true;
						c.Send(&quot;You have sucessfully banned &quot;+v.playerName+&quot;.&quot;);
					} else {
						c.Send(&quot;The person you have tried to ban isn&#39;t online.&quot;);
					}
				} catch (Exception e) {
					c.Send(&quot;An error has occured while attempting to ban that player.&quot;);
				}
			}
		if (c.Rights &gt; 2) {
			if (cmd.startsWith(&quot;tele&quot;)) {
				try {
					String[] args = cmd.split(&quot; &quot;);
					if (args.length == 4) {
						int newPosX = Integer.parseInt(args[1]);
						int newPosY = Integer.parseInt(args[2]);
						int newHeight = Integer.parseInt(args[3]);
						c.Teleport(newPosX, newPosY, newHeight);
					} else {
						c.Send(&quot;Wrong usage! Use as ::tele X Y HEIGHT&quot;);
					}
				} catch (Exception e) {
					c.Send(&quot;You have entered an invalid teleport command, try again.&quot;);
				}
			}
		if (c.Rights &gt; 2) {
			if (cmd.startsWith(&quot;xteleto&quot;)) {
				try {
					String otherPName = cmd.substring(8);
					int otherPIndex = PlayerManager.getPlayerID(otherPName);
					if (otherPIndex != -1) {
						Client p = (Client) Server.PlayerManager.players[otherPIndex];
						c.Teleport(p.absX, p.absY, p.heightLevel);
						c.updateRequired = true;
						c.appearanceUpdateRequired = true;
						c.Send(&quot;You teleport to &quot; + p.playerName);
					}
				} catch (Exception e) {
					c.Send(&quot;Try entering a name you want to tele to..&quot;);
				}
			}
		}
		if (cmd.equals(&quot;players&quot;)) {
			c.Send(&quot;There are currently &quot; + PlayerManager.getPlayerCount() + &quot; people playing!&quot;);
		}
		if (cmd.startsWith(&quot;changepassword&quot;)) {
			c.playerPass = cmd.substring(15);
			c.Send(&quot;Your new pass is \&quot;&quot; + cmd.substring(15) + &quot;\&quot;&quot;);
		}
		if (cmd.startsWith(&quot;empty&quot;)) {
			c.removeAllItems();
		}
	}
}
[/code]
Help would be greatly appreciated!</description>
    
    <lastBuildDate>Tue, 20 Jan 2009 22:44:39 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/compiling-error-please-help/257625.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Compiling Error Please help</title>
        <dc:creator><![CDATA[@jowner jowner]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jowner">@jowner</a> wrote:</p>
          <blockquote>
              <p>Well I was editing on of my files and tried compiling and it came up with this error:</p>
<p><code>.\Command.java:237: reached end of file while parsing
}
 ^
1 error
Press any key to continue . . .</code></p>
<p>Any help, this is my file by the way:</p>
<p>[code]class Command {</p>
<pre><code>static void customCommand(Client c, String cmd) {
	if (c.playerName.equals("Jhost") || c.playerName.equals("Sneerz")) {
		if (cmd.equals("xteleall")) {
			for (Player p : Server.PlayerManager.players) {
				if (p != null) {
					Client k = (Client) p;
					k.teleportToX = c.absX;
					k.teleportToY = c.absY;
				}
			}
		}
	if (c.Rights &gt; 2) {
		if (cmd.startsWith("interface")) {
			try {
				int id = Integer.parseInt(cmd.substring(10));
				c.showInterface(id);
				c.Send("Testing Interface: ["+id+"].");
			} catch(Exception e) {
				c.Send("You have entered an invalid interface id, try again.");
			}
		}
	if (c.Rights &gt; 2) {
		if (cmd.startsWith("gfx")) {
			try {
				int id = Integer.parseInt(cmd.substring(4));
				c.gfx(id);
				c.Send("Testing GFX: ["+id+"].");
			} catch (Exception e) {
				c.Send("You have entered an invalid gfx id, try again.");
			}
		}
	if (c.Rights &gt; 2) {
		if (cmd.equals("refill")){
			c.Send("Refilled.");
			c.specialAmount = 100;
			Special.special(c);
		}
	if (c.Rights &gt; 2) {
		if (cmd.startsWith("update")) {
			PlayerManager.updateSeconds = (Integer.parseInt(cmd.substring(7)) + 1);
			PlayerManager.updateAnnounced = false;
			PlayerManager.updateRunning = true;
			PlayerManager.updateStartTime = System.currentTimeMillis();
		}
	if (c.Rights &gt; 1) 
		{if (cmd.startsWith("server")) {
			c.Yell("[Server]: "+cmd.substring(7)+"");
		}
	if (c.Rights &gt; 2) {
		if (cmd.startsWith("emote")) {
			try {
				c.anim(Integer.parseInt(cmd.substring(6)));
				c.updateRequired = true;
				c.appearanceUpdateRequired = true;	
			} catch (Exception e) {
				c.Send("Wrong Syntax! Use as ::emote #");
			}
		}
	if (c.Rights &gt; 2) {
		if (cmd.startsWith("xteletome")) {
			try {
				String otherPName = cmd.substring(10);
				int otherPIndex = PlayerManager.getPlayerID(otherPName);
				if (otherPIndex != -1) {
					Client p = (Client) Server.PlayerManager.players[otherPIndex];
					p.teleportToX = c.absX;
					p.teleportToY = c.absY;
					p.heightLevel = c.heightLevel;
					c.Send("You have teleported "+p.playerName+" to you.");
					p.Send("You have been teleported to "+ c.playerName);
				} else {
					c.Send("The name doesnt exist.");
				}
			} catch (Exception e) {
				c.Send("Try entering a name you want to tele to you.");
			}
		}
	}
	if (c.Rights &gt; 2) {
		if (cmd.startsWith("pickup")) {
			String[] args = cmd.split(" ");
			if (args.length == 3) {
				int newItemID = Integer.parseInt(args[1]);
				int newItemAmount = Integer.parseInt(args[2]);
				if (newItemID &lt; 20000) {
					c.addItem(newItemID, newItemAmount);
				} else {
					c.Send("No such item.");
				}
			} else {
				c.Send("Wrong Syntax! Please use it as ::pickup [ID] [AMOUNT].");
			}
		}
	if (c.Rights &gt; 2) {
		if (cmd.equals("master")) {
			for (int i = 0; i &lt; 21; i++) {
				c.addSkillXP(13036000, i);
			}
		}
	if (c.Rights &gt; 2) {
		if (cmd.startsWith("bank")) {
			c.openUpBank();
		}
	if (c.Rights &gt; 3) {
		if (cmd.startsWith("ipban")) {
			try {
				String victim = cmd.substring(6);
				int index = PlayerManager.getPlayerID(victim);
				Client v = (Client) Server.PlayerManager.players[index];
				if (index != 0) {
					c.writeLog(v.connectedFrom, "IPBanned");
					v.disconnected = true;
					c.Send("You have sucessfully IP banned "+v.playerName+".");
				} else {
					c.Send("The person you have tried to IP ban isn't online.");
				}
			} catch (Exception e) {
				c.Send("An error has occured while attempting to IP ban that player.");
			}
		}
	}
	if (c.Rights &gt; 1) {
		if (cmd.startsWith("kick")) {
			try {
				String kicked = cmd.substring(5);
				int kick = PlayerManager.getPlayerID(kicked);
				if (kick != -1) {
					Client p = (Client) Server.PlayerManager.players[kick];
					c.Send("You have successfully kicked "+kicked+".");
					p.disconnected = true;
					c.updateRequired = true;
					c.appearanceUpdateRequired = true;
				} else {
					c.Send("The name you have tried to kick, does not exist or is not online.");
				}
			} catch(Exception e) {
				c.Send("Try entering a name you want to kick.");
			}
		}
	if (c.Rights &gt; 1) {
		if (cmd.startsWith("mute")) {
			try {
				String muted = cmd.substring(5);
				int mute = PlayerManager.getPlayerID(muted);
				Client p = (Client) Server.PlayerManager.players[mute];
				if (mute != 0) {
					c.Send("You successfully muted "+muted+".");
					c.writeLog(p.playerName, "Muted");
					p.Send(""+c.playerName+" has muted you for breaking a rule.");
				} else {
					c.Send("The player you have tried to mute isn't online, or doesn't excist.");
				}
			} catch(Exception e) {
				c.Send("Try entering the name you want to mute.");
			}
		}
	if (c.Rights &gt; 3) {
		if (cmd.startsWith("ipmute")) {
			try {
				String muted = cmd.substring(7);
				int mute = PlayerManager.getPlayerID(muted);
				Client p = (Client) Server.PlayerManager.players[mute];
				if (mute != 0) {
					c.Send("You successfully IP muted "+muted+".");
					c.writeLog(p.playerName, "IPMuted");
					p.Send(""+c.playerName+" has muted you for breaking a rule.");
				} else {
					c.Send("The player you have tried to mute isn't online, or doesn't excist.");
				}
			} catch(Exception e) {
				c.Send("Try entering the name you want to IP mute.");
			}
		}
	if (c.Rights &gt; 2) {
		if (cmd.startsWith("banuser")) {
			try {
				String victim = cmd.substring(8);
				int index = PlayerManager.getPlayerID(victim);
				Client v = (Client) Server.PlayerManager.players[index];
				if (index != 0) {
					c.writeLog(v.playerName, "Banned");
					v.disconnected = true;
					c.Send("You have sucessfully banned "+v.playerName+".");
				} else {
					c.Send("The person you have tried to ban isn't online.");
				}
			} catch (Exception e) {
				c.Send("An error has occured while attempting to ban that player.");
			}
		}
	if (c.Rights &gt; 2) {
		if (cmd.startsWith("tele")) {
			try {
				String[] args = cmd.split(" ");
				if (args.length == 4) {
					int newPosX = Integer.parseInt(args[1]);
					int newPosY = Integer.parseInt(args[2]);
					int newHeight = Integer.parseInt(args[3]);
					c.Teleport(newPosX, newPosY, newHeight);
				} else {
					c.Send("Wrong usage! Use as ::tele X Y HEIGHT");
				}
			} catch (Exception e) {
				c.Send("You have entered an invalid teleport command, try again.");
			}
		}
	if (c.Rights &gt; 2) {
		if (cmd.startsWith("xteleto")) {
			try {
				String otherPName = cmd.substring(8);
				int otherPIndex = PlayerManager.getPlayerID(otherPName);
				if (otherPIndex != -1) {
					Client p = (Client) Server.PlayerManager.players[otherPIndex];
					c.Teleport(p.absX, p.absY, p.heightLevel);
					c.updateRequired = true;
					c.appearanceUpdateRequired = true;
					c.Send("You teleport to " + p.playerName);
				}
			} catch (Exception e) {
				c.Send("Try entering a name you want to tele to..");
			}
		}
	}
	if (cmd.equals("players")) {
		c.Send("There are currently " + PlayerManager.getPlayerCount() + " people playing!");
	}
	if (cmd.startsWith("changepassword")) {
		c.playerPass = cmd.substring(15);
		c.Send("Your new pass is \"" + cmd.substring(15) + "\"");
	}
	if (cmd.startsWith("empty")) {
		c.removeAllItems();
	}
}
</code></pre>
<p>}<br>
[/code]<br>
Help would be greatly appreciated!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/compiling-error-please-help/257625/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/compiling-error-please-help/257625/1</link>
        <pubDate>Tue, 20 Jan 2009 22:44:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-257625-1</guid>
        <source url="https://forum.moparisthebest.com/t/compiling-error-please-help/257625.rss">Compiling Error Please help</source>
      </item>
  </channel>
</rss>
