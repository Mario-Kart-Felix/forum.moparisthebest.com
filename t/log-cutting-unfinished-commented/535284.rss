<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Log cutting - unfinished - commented</title>
    <link>https://forum.moparisthebest.com/t/log-cutting-unfinished-commented/535284</link>
    <description>Well i just saw that there were woodcuttings that were too ugly, and i decided to write my own, too bad im just too lazy to finish the last part, but its about 80% complete.
[code=java]package server.euthymia.entity.player.skill;

import server.euthymia.entity.player.Config;
import server.euthymia.entity.player.Player;

/**
 * 
 * @author Strucker 
 *
 * i hate messing with timers, but its mostly done....
 */
public class LogCutting {

	/*
	 * The axes, their required level to use, and the speed they provide
	 * 
	 * @param Delayer
	 * 		to be changed to your liking, it means that the numbers stored in there will be used to
	 * 		make the cutting faster, it removes those ticks to the counter, depending on the axe level
	 * 		the faster it should help to cut the players tree.
	 */
	private final static int AXES[][] = {
			{ 1351, 1349, 1353, 1361, 1355, 1357, 1359, 6739 }, // axe
			{ 1, 1, 6, 6, 21, 31, 41, 61 },						//Req level
			{ 2, 2, 3, 3, 3, 4, 4, 5}							//Delayer
	};

	/*
	 * Gets the cutting speed depending on level and axe.
	 *
	 * @param player	
	 *		the player that will cut 
	 *
	 * @param axe
	 * 		the spot of the axe so we can swap the speed of the axe that we are using
	 */
	private static int getCuttingSpeed(Player player, int axe) {
		if(player.playerLevel[WOOD_CUTTING_SKILL] &lt;= 20) {
			return 1 + AXES[2][axe];
		}
		return 0/0;
	}
	
	/*
	 * a flag to check if our player has an axe, and has the required level to use it
	 * 
	 * @param player
	 * 		the player that should have the axe
	 */
	private static boolean playerHasAxe(Player player) {
		
		/*
		 * The code below will repeat the code inside its brackets as long
		 * as the i variable is less than the axes length, i is increased by one
		 * every time that the code is repeated (it is an iterator)
		 */
		for(int i = 0; i &lt; AXES.length; i++) {
			
			/*
			 * If the player has an axe on his inventory or has an axe equipped continue;
			 */
			if(player.playerHasItem(AXES[0][i]) || player.playerEquipment[player.playerWeapon] == AXES[0][i]) {
				
				/*
				 * And if the player has the level required or is higher, continue
				 */
				if(player.playerLevel[WOOD_CUTTING_SKILL] &gt;= AXES[1][i]) {
					return true;
				}
			}
		}
		
		/*
		 * If any of the requirements before wasn&#39;t completed, the player doesn&#39;t have an axe
		 */
		return false;
	}
	
	/*
	 * The normal trees
	 */
	public static final int[] NORMAL_TREES = { 1276, 1278 };

	/*
	 * The oak trees
	 */
	public static final int[] OAK_TREES = { 1281, -1 };

	/*
	 * The willow trees
	 */
	public static final int[] WILLOW_TREES = { 1308, -1 };

	/*
	 * The woodcutting skill id.
	 */
	public static final int WOOD_CUTTING_SKILL = Player.playerWoodcutting;

	/*
	 * An enum containing the data to cut the log
	 */
	private enum CutData {

		NORMAL(NORMAL_TREES, 1511, 1, 25, 10),

		OAK(OAK_TREES, 1521, 15, 38, 15),

		WILLOW(WILLOW_TREES, 1519, 30, 68, 20);

		private int tree[], log, requiredLevel, experience, speed;

		/*
		 * Constructs our enum
		 */
		CutData(int tree[], int log, int requiredLevel, int experience, int speed) {
			this.tree = tree;
			this.log = log;
			this.requiredLevel = requiredLevel;
			this.experience = experience;
			this.speed = speed;
		}

		/*
		 * gets the tree
		 */
		private int getTree(int i) {
			return tree[i];
		}

		/*
		 * Gets the log
		 */
		private int getLog() {
			return log;
		}

		/*
		 * Gets the required level to cut the tree
		 */
		private int getRequiredLevel() {
			return requiredLevel;
		}

		/*
		 * Gets the experience from cutting a tree
		 */
		private int getExperience() {
			return experience * Config.xpRate;
		}

		/*
		 * gets the time that is needed to wait to cut the tree in ticks
		 */
		private int getSpeed() {
			return speed;
		}
	}
	
	/*
	 * Starts cutting the tree
	 * 
	 * @param player
	 * 		the player that will cut the log
	 * 
	 * @param tree
	 * 		the tree that we have clicked and we want to cut
	 */
	public static void cutLog(Player player, int tree) {
		
		/*
		 * For the data in the enum 
		 */
		for(CutData e: CutData.values()) {
			
			/*
			 * For any tree, its just looping through any of the trees length
			 * but be careful, all the trees arrays should have the same length
			 */
			for(int i : NORMAL_TREES) {
				
				/*
				 * If the tree we clicked equals to any tree on the enum continue
				 */
				if(tree == e.getTree(i)) {
					
				}
			}
		}
	}
}
[/code]</description>
    
    <lastBuildDate>Wed, 06 Nov 2013 22:12:16 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/log-cutting-unfinished-commented/535284.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Log cutting - unfinished - commented</title>
        <dc:creator><![CDATA[@strucker Strucker]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/strucker">@strucker</a> wrote:</p>
          <blockquote>
              <p>[quote=“Clawz fury, post:5, topic:535284”]im sorry this is kinda bad[/quote]kk thx</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/log-cutting-unfinished-commented/535284/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/log-cutting-unfinished-commented/535284/6</link>
        <pubDate>Wed, 06 Nov 2013 22:12:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-535284-6</guid>
        <source url="https://forum.moparisthebest.com/t/log-cutting-unfinished-commented/535284.rss">Log cutting - unfinished - commented</source>
      </item>
      <item>
        <title>Log cutting - unfinished - commented</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>im sorry this is kinda bad</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/log-cutting-unfinished-commented/535284/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/log-cutting-unfinished-commented/535284/5</link>
        <pubDate>Wed, 06 Nov 2013 12:39:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-535284-5</guid>
        <source url="https://forum.moparisthebest.com/t/log-cutting-unfinished-commented/535284.rss">Log cutting - unfinished - commented</source>
      </item>
      <item>
        <title>Log cutting - unfinished - commented</title>
        <dc:creator><![CDATA[@jummppy jummppy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jummppy">@jummppy</a> wrote:</p>
          <blockquote>
              <p>I was looking through and isn’t <code>return 0/0;</code> a antileech or was it a brain fart?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/log-cutting-unfinished-commented/535284/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/log-cutting-unfinished-commented/535284/4</link>
        <pubDate>Wed, 06 Nov 2013 03:43:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-535284-4</guid>
        <source url="https://forum.moparisthebest.com/t/log-cutting-unfinished-commented/535284.rss">Log cutting - unfinished - commented</source>
      </item>
      <item>
        <title>Log cutting - unfinished - commented</title>
        <dc:creator><![CDATA[@ExtremeX-Scape Ryley]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/extremex-scape">@ExtremeX-Scape</a> wrote:</p>
          <blockquote>
              <pre><code class="lang-auto">               return 0/0;</code></pre>
<p>wat</p>
<p>Also why are you releasing unfinished stuff? It’s more or less some data and a few conditions… pretty pointless.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/log-cutting-unfinished-commented/535284/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/log-cutting-unfinished-commented/535284/3</link>
        <pubDate>Wed, 06 Nov 2013 03:26:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-535284-3</guid>
        <source url="https://forum.moparisthebest.com/t/log-cutting-unfinished-commented/535284.rss">Log cutting - unfinished - commented</source>
      </item>
      <item>
        <title>Log cutting - unfinished - commented</title>
        <dc:creator><![CDATA[@arham_4 arham 4]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/arham_4">@arham_4</a> wrote:</p>
          <blockquote>
              <p>Might wanna amke those comments look tidy.</p>
<p>Havent looked in-depth tho</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/log-cutting-unfinished-commented/535284/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/log-cutting-unfinished-commented/535284/2</link>
        <pubDate>Wed, 06 Nov 2013 03:17:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-535284-2</guid>
        <source url="https://forum.moparisthebest.com/t/log-cutting-unfinished-commented/535284.rss">Log cutting - unfinished - commented</source>
      </item>
      <item>
        <title>Log cutting - unfinished - commented</title>
        <dc:creator><![CDATA[@strucker Strucker]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/strucker">@strucker</a> wrote:</p>
          <blockquote>
              <p>Well i just saw that there were woodcuttings that were too ugly, and i decided to write my own, too bad im just too lazy to finish the last part, but its about 80% complete.</p>
<p>[code=java]package server.euthymia.entity.player.skill;</p>
<p>import server.euthymia.entity.player.Config;<br>
import server.euthymia.entity.player.Player;</p>
<p>/**<br>
*</p>
<ul>
<li>
<p><span class="mention">@author</span> Strucker</p>
</li>
<li>
</li>
<li>
<p>i hate messing with timers, but its mostly done…<br>
*/<br>
public class LogCutting {</p>
<p>/*</p>
<ul>
<li>The axes, their required level to use, and the speed they provide</li>
<li>
</li>
<li>
<a class="mention" href="/u/param">@param</a> Delayer</li>
<li>
<pre><code> to be changed to your liking, it means that the numbers stored in there will be used to
</code></pre>
</li>
<li>
<pre><code> make the cutting faster, it removes those ticks to the counter, depending on the axe level
</code></pre>
</li>
<li>
<pre><code> the faster it should help to cut the players tree.
</code></pre>
</li>
</ul>
<p>*/<br>
private final static int AXES[][] = {<br>
{ 1351, 1349, 1353, 1361, 1355, 1357, 1359, 6739 }, // axe<br>
{ 1, 1, 6, 6, 21, 31, 41, 61 },						//Req level<br>
{ 2, 2, 3, 3, 3, 4, 4, 5}							//Delayer<br>
};</p>
<p>/*</p>
<ul>
<li>Gets the cutting speed depending on level and axe.</li>
<li>
</li>
<li>
<a class="mention" href="/u/param">@param</a> player</li>
<li>
<pre><code> the player that will cut 
</code></pre>
</li>
<li>
</li>
<li>
<a class="mention" href="/u/param">@param</a> axe</li>
<li>
<pre><code> the spot of the axe so we can swap the speed of the axe that we are using
</code></pre>
</li>
</ul>
<p>*/<br>
private static int getCuttingSpeed(Player player, int axe) {<br>
if(player.playerLevel[WOOD_CUTTING_SKILL] &lt;= 20) {<br>
return 1 + AXES[2][axe];<br>
}<br>
return 0/0;<br>
}</p>
<p>/*</p>
<ul>
<li>a flag to check if our player has an axe, and has the required level to use it</li>
<li>
</li>
<li>
<a class="mention" href="/u/param">@param</a> player</li>
<li>
<pre><code> the player that should have the axe
</code></pre>
</li>
</ul>
<p>*/<br>
private static boolean playerHasAxe(Player player) {</p>
<pre><code> /*
  * The code below will repeat the code inside its brackets as long
  * as the i variable is less than the axes length, i is increased by one
  * every time that the code is repeated (it is an iterator)
  */
 for(int i = 0; i &lt; AXES.length; i++) {
 	
 	/*
 	 * If the player has an axe on his inventory or has an axe equipped continue;
 	 */
 	if(player.playerHasItem(AXES[0][i]) || player.playerEquipment[player.playerWeapon] == AXES[0][i]) {
 		
 		/*
 		 * And if the player has the level required or is higher, continue
 		 */
 		if(player.playerLevel[WOOD_CUTTING_SKILL] &gt;= AXES[1][i]) {
 			return true;
 		}
 	}
 }
 
 /*
  * If any of the requirements before wasn't completed, the player doesn't have an axe
  */
 return false;
</code></pre>
<p>}</p>
<p>/*</p>
<ul>
<li>The normal trees<br>
*/<br>
public static final int[] NORMAL_TREES = { 1276, 1278 };</li>
</ul>
<p>/*</p>
<ul>
<li>The oak trees<br>
*/<br>
public static final int[] OAK_TREES = { 1281, -1 };</li>
</ul>
<p>/*</p>
<ul>
<li>The willow trees<br>
*/<br>
public static final int[] WILLOW_TREES = { 1308, -1 };</li>
</ul>
<p>/*</p>
<ul>
<li>The woodcutting skill id.<br>
*/<br>
public static final int WOOD_CUTTING_SKILL = Player.playerWoodcutting;</li>
</ul>
<p>/*</p>
<ul>
<li>
<p>An enum containing the data to cut the log<br>
*/<br>
private enum CutData {</p>
<p>NORMAL(NORMAL_TREES, 1511, 1, 25, 10),</p>
<p>OAK(OAK_TREES, 1521, 15, 38, 15),</p>
<p>WILLOW(WILLOW_TREES, 1519, 30, 68, 20);</p>
<p>private int tree[], log, requiredLevel, experience, speed;</p>
<p>/*</p>
<ul>
<li>Constructs our enum<br>
*/<br>
CutData(int tree[], int log, int requiredLevel, int experience, int speed) {<br>
this.tree = tree;<br>
this.log = log;<br>
this.requiredLevel = requiredLevel;<br>
this.experience = experience;<br>
this.speed = speed;<br>
}</li>
</ul>
<p>/*</p>
<ul>
<li>gets the tree<br>
*/<br>
private int getTree(int i) {<br>
return tree[i];<br>
}</li>
</ul>
<p>/*</p>
<ul>
<li>Gets the log<br>
*/<br>
private int getLog() {<br>
return log;<br>
}</li>
</ul>
<p>/*</p>
<ul>
<li>Gets the required level to cut the tree<br>
*/<br>
private int getRequiredLevel() {<br>
return requiredLevel;<br>
}</li>
</ul>
<p>/*</p>
<ul>
<li>Gets the experience from cutting a tree<br>
*/<br>
private int getExperience() {<br>
return experience * Config.xpRate;<br>
}</li>
</ul>
<p>/*</p>
<ul>
<li>gets the time that is needed to wait to cut the tree in ticks<br>
*/<br>
private int getSpeed() {<br>
return speed;<br>
}<br>
}</li>
</ul>
</li>
</ul>
<p>/*</p>
<ul>
<li>Starts cutting the tree</li>
<li>
</li>
<li>
<a class="mention" href="/u/param">@param</a> player</li>
<li>
<pre><code> the player that will cut the log
</code></pre>
</li>
<li>
</li>
<li>
<a class="mention" href="/u/param">@param</a> tree</li>
<li>
<pre><code> the tree that we have clicked and we want to cut
</code></pre>
</li>
</ul>
<p>*/<br>
public static void cutLog(Player player, int tree) {</p>
<pre><code> /*
  * For the data in the enum 
  */
 for(CutData e: CutData.values()) {
 	
 	/*
 	 * For any tree, its just looping through any of the trees length
 	 * but be careful, all the trees arrays should have the same length
 	 */
 	for(int i : NORMAL_TREES) {
 		
 		/*
 		 * If the tree we clicked equals to any tree on the enum continue
 		 */
 		if(tree == e.getTree(i)) {
 			
 		}
 	}
 }
</code></pre>
<p>}<br>
}<br>
[/code]</p>
</li>
</ul>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/log-cutting-unfinished-commented/535284/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/log-cutting-unfinished-commented/535284/1</link>
        <pubDate>Wed, 06 Nov 2013 02:48:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-535284-1</guid>
        <source url="https://forum.moparisthebest.com/t/log-cutting-unfinished-commented/535284.rss">Log cutting - unfinished - commented</source>
      </item>
  </channel>
</rss>
