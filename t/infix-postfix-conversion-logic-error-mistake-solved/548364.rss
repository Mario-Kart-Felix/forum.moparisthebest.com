<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Infix -&gt; Postfix conversion, logic error/mistake [solved]</title>
    <link>https://forum.moparisthebest.com/t/infix-postfix-conversion-logic-error-mistake-solved/548364</link>
    <description>Can anyone provide a little feedback as to why this isn&#39;t working as expected? Perhaps I&#39;m missing something or forgetting to do something really minor, if someone could look it over briefly and try to spot the mistake it&#39;d be greatly appreciated.

[code=java]
public class ReversePolishNotation
{

    LinkedList&lt;String&gt; stack = new LinkedList&lt;&gt;();
    StringBuilder builder = new StringBuilder();

    char[] operators = &quot;+-*/()&quot;.toCharArray();
    char firstOperator = 0;

    public static void main(String[] args)
    {
        ReversePolishNotation rpn = new ReversePolishNotation();
        String calculation = &quot;a+((b+c)*d)-e&quot;; // abc*d/+
        
        rpn.parse(calculation);
        System.out.println(&quot;Reverse Polish Notation for (&quot;+ calculation + &quot;) is: &quot;+ rpn.format(rpn.builder));

    }

    private void parse(String calculation)
    {
        for (char c : calculation.toCharArray())
        {
            if (value(c)) {
                System.out.println(&quot;value&quot;);
                builder.append(c);
                continue;
            }
            
            for (char c1 : operators)
            {
                if (c == c1) {
                    evaluate(c1);
                }
            }
        }
        
        while (!empty()) {
            builder.append(stack.pop());
        }
    }
    
    private boolean value(char c) {
        return Character.toString(c).matches(&quot;[0-9a-zA-Z]+&quot;);
    }

    private void evaluate(char token)
    {
      
        if (token == &#39;(&#39; || (!empty() &amp;&amp; getPrecedence(stack.peek().charAt(0)) &lt; getPrecedence(token)) || firstOperator == 0 ) {
            stack.push(Character.toString(token));//+
            firstOperator = token;
        } else if (token == &#39;)&#39;) {
           while (!empty() &amp;&amp; stack.peek().charAt(0) != &#39;(&#39;) {
               builder.append(stack.pop());
           }
        } else if (!empty() &amp;&amp; getPrecedence(stack.peek().charAt(0)) &gt; getPrecedence(token)) {
            builder.append(stack.pop());
        } else if (!empty() &amp;&amp; getPrecedence(stack.peek().charAt(0)) == getPrecedence(token)) {
            builder.append(stack.pop());
            stack.push(Character.toString(token));
        } else {
            stack.push(Character.toString(token));
        }
    }

    private int getPrecedence(char c)
    {
        switch (c)
        {
            case &#39;+&#39;:
            case &#39;-&#39;:
                return 0;

            case &#39;*&#39;:
            case &#39;/&#39;:
                return 1;
            default:
                return 0;
        }
    }

    private boolean empty()
    {
        return stack.size() &lt;= 0;
    }
    
    private String format(StringBuilder sb) {
        return sb.toString().replaceAll(&quot;[()]+&quot;, &quot;&quot;);
        
    }

}
[/code]

Input:
[code]
a+((b+c)*d)-e
[/code]

Output:
&lt;blockquote&gt;Reverse Polish Notation for (a+((b+c)*d)-e) is: [b]abc+d*e-+[/b]&lt;/blockquote&gt;

Expected output:
&lt;blockquote&gt;Reverse Polish Notation for (a+((b+c)*d)-e) is: [b]abc+d*+e-[/b]&lt;/blockquote&gt;

Wasn&#39;t popping the opening braces from the stack after the loop
[code=java]
            if (!empty() &amp;&amp; stack.peek().charAt(0) == &#39;(&#39;) {
                stack.pop();
            }
[/code]

Lock/delete if needed</description>
    
    <lastBuildDate>Tue, 09 Dec 2014 23:17:02 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/infix-postfix-conversion-logic-error-mistake-solved/548364.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Infix -&gt; Postfix conversion, logic error/mistake [solved]</title>
        <dc:creator><![CDATA[@ohokay ohokay]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ohokay">@ohokay</a> wrote:</p>
          <blockquote>
              <p>Can anyone provide a little feedback as to why this isn’t working as expected? Perhaps I’m missing something or forgetting to do something really minor, if someone could look it over briefly and try to spot the mistake it’d be greatly appreciated.</p>
<pre><code class="lang-auto">public class ReversePolishNotation
{

    LinkedList&lt;String&gt; stack = new LinkedList&lt;&gt;();
    StringBuilder builder = new StringBuilder();

    char[] operators = "+-*/()".toCharArray();
    char firstOperator = 0;

    public static void main(String[] args)
    {
        ReversePolishNotation rpn = new ReversePolishNotation();
        String calculation = "a+((b+c)*d)-e"; // abc*d/+
        
        rpn.parse(calculation);
        System.out.println("Reverse Polish Notation for ("+ calculation + ") is: "+ rpn.format(rpn.builder));

    }

    private void parse(String calculation)
    {
        for (char c : calculation.toCharArray())
        {
            if (value(c)) {
                System.out.println("value");
                builder.append(c);
                continue;
            }
            
            for (char c1 : operators)
            {
                if (c == c1) {
                    evaluate(c1);
                }
            }
        }
        
        while (!empty()) {
            builder.append(stack.pop());
        }
    }
    
    private boolean value(char c) {
        return Character.toString(c).matches("[0-9a-zA-Z]+");
    }

    private void evaluate(char token)
    {
      
        if (token == '(' || (!empty() &amp;&amp; getPrecedence(stack.peek().charAt(0)) &lt; getPrecedence(token)) || firstOperator == 0 ) {
            stack.push(Character.toString(token));//+
            firstOperator = token;
        } else if (token == ')') {
           while (!empty() &amp;&amp; stack.peek().charAt(0) != '(') {
               builder.append(stack.pop());
           }
        } else if (!empty() &amp;&amp; getPrecedence(stack.peek().charAt(0)) &gt; getPrecedence(token)) {
            builder.append(stack.pop());
        } else if (!empty() &amp;&amp; getPrecedence(stack.peek().charAt(0)) == getPrecedence(token)) {
            builder.append(stack.pop());
            stack.push(Character.toString(token));
        } else {
            stack.push(Character.toString(token));
        }
    }

    private int getPrecedence(char c)
    {
        switch (c)
        {
            case '+':
            case '-':
                return 0;

            case '*':
            case '/':
                return 1;
            default:
                return 0;
        }
    }

    private boolean empty()
    {
        return stack.size() &lt;= 0;
    }
    
    private String format(StringBuilder sb) {
        return sb.toString().replaceAll("[()]+", "");
        
    }

}</code></pre>
<p>Input:</p>
<pre><code class="lang-auto">a+((b+c)*d)-e</code></pre>
<p>Output:</p>
<blockquote>Reverse Polish Notation for (a+((b+c)*d)-e) is: [b]abc+d*e-+[/b]</blockquote>
<p>Expected output:</p>
<blockquote>Reverse Polish Notation for (a+((b+c)*d)-e) is: [b]abc+d*+e-[/b]</blockquote>
<p>Wasn’t popping the opening braces from the stack after the loop</p>
<pre><code class="lang-auto">            if (!empty() &amp;&amp; stack.peek().charAt(0) == '(') {
                stack.pop();
            }</code></pre>
<p>Lock/delete if needed</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/infix-postfix-conversion-logic-error-mistake-solved/548364/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/infix-postfix-conversion-logic-error-mistake-solved/548364/1</link>
        <pubDate>Tue, 09 Dec 2014 23:17:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-548364-1</guid>
        <source url="https://forum.moparisthebest.com/t/infix-postfix-conversion-logic-error-mistake-solved/548364.rss">Infix -&gt; Postfix conversion, logic error/mistake [solved]</source>
      </item>
  </channel>
</rss>
