<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Dynamic Sprite Collision</title>
    <link>https://forum.moparisthebest.com/t/dynamic-sprite-collision/378461</link>
    <description>I got bored about 2 days ago and started coding a method to detect sprite collision without having to make a new X, Y for each object or w/e it is people use to do rectangle based collision, this excludes sprite1.collideswith(sprite2) or w/e it is. It works pretty good as of now, the only thing i that really needs attention is when your walking to the objects top/bottom corner youll stop walking because part of the square still hits it, so you have to walk a little above the object (not much, like 1 pixel). Im working on fixing this, just havnt gotten around to it.

It simple to add a new object all you have to do is, define what object it is, and add its size to the ObjectSize method. Once you do this it auto detects the coords and size of the object and makes it non walkable. 

-------------------------------------------------------------------

This draws the object on the screen to the predetermined coordinates specified by the user
[CODE]       for (int i = 0; i &lt; 100; i++) {
            g.drawImage(Obj[0], ObjX[i][1] * square, ObjY[i][1] * square, null);
            g.drawImage(Obj[1], ObjX[i][2] * square, ObjY[i][2] * square, null);
        }[/CODE]

This determines the X and Y values of the object and what object its going to draw. ObjX[what picture it gives the x and y value to][What object it loads]
[code]
    public static void Map() {
       ObjX[0][1] = 30;
        ObjY[0][1] = 90;
        ObjX[1][1] = 50;
        ObjY[1][1] = 25;
        ObjX[2][1] = 30;
        ObjY[2][1] = 60;
        ObjX[3][2] = 45;
        ObjY[3][2] = 50;
        ObjX[4][2] = 60;
        ObjY[4][2] = 10;
    }
[/code]

This determines the size of the object your drawing.
[code]
    public static void ObjectSize() {
        ObjSizeX[1] = 5;
        ObjSizeY[1] = 5;
        ObjSizeX[2] = 10;
        ObjSizeY[2] = 5;
    }
[/code]

The actual clipping void
[code]
    public static void clipping() {
        for (int i = 0; i &lt; 100; i++) {
            for (int k = 0; k &lt; 10; k++) {
                for (int j = 0; j &lt; 6; j++) {
                    for (int h = 0; h &lt; 3; h++) {
                        Shape object = new Rectangle2D.Double(ObjX[i][h], ObjY[i][h], ObjSizeX[h], ObjSizeY[h]);
                        if (object.contains(X + j, Y + k)) {
                            collision = true;
                            msg = &quot;In object&quot;;
                            switch(face){
                                case 1:
                                    if(hit[2] == 0 &amp;&amp; hit[3] == 0 &amp;&amp; hit[4] == 0){
                                        hit[1] = 1;
                                    }
                                    break;
                                case 2:
                                    if(hit[1] == 0 &amp;&amp; hit[3] == 0 &amp;&amp; hit[4] == 0){
                                        hit[2] = 1;
                                    }
                                    break;
                                case 3:
                                    if(hit[1] == 0 &amp;&amp; hit[2] == 0 &amp;&amp; hit[4] == 0){
                                        hit[3] = 1;
                                    }
                                    break;
                                case 4:
                                    if(hit[1] == 0 &amp;&amp; hit[3] == 0 &amp;&amp; hit[2] == 0){
                                        hit[4] = 1;
                                    }
                                    break;

                            }
                           /* for (int s = 0; s &lt; 5; s++) {
                                if (face == s) {
                                    hit[s] = 1;
                                }
                            }*/
                            return;
                        } else {
                            msg = &quot;not in object&quot;;
                            collision = false;
                        }
                    }
                }
            }
        }
    }
[/code]


I dont know why you would want the previous releases, but ill post all teh releases anyways.


[url=http://up.ht/h6TNOr]Version 0.5[/url]

[url=http://up.ht/eXnTMJ]Version 0.8[/url]

[url=http://up.ht/fc8Fgd]Version 0.9[/url]

[url=http://up.ht/gxivSu]Version 0.95[/url]</description>
    
    <lastBuildDate>Sat, 15 Jan 2011 22:02:39 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/dynamic-sprite-collision/378461.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Dynamic Sprite Collision</title>
        <dc:creator><![CDATA[@sniffle6 sniffle6]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sniffle6">@sniffle6</a> wrote:</p>
          <blockquote>
              <p>the persons not in a rectangle :x</p>
<p>but ya, i guess i could do that, idk we will see</p>
<p>and i didnt say it was a way to not use squares, i said it was a way to use one square to work with all objects instead of having to make a different square for each object</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dynamic-sprite-collision/378461/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dynamic-sprite-collision/378461/3</link>
        <pubDate>Sat, 15 Jan 2011 22:02:39 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-378461-3</guid>
        <source url="https://forum.moparisthebest.com/t/dynamic-sprite-collision/378461.rss">Dynamic Sprite Collision</source>
      </item>
      <item>
        <title>Dynamic Sprite Collision</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>You said the point was that you wouldn’t have to make a new rectangle so as not to use the intersects method it provides, but you made one anyway?</p>
<p><code>if(new Rectangle(sprite1X, sprite1Y, sprite1W, sprite1H).intersects(new Rectangle(sprite2X, sprite2Y, sprite2W, sprite2H))) {
 //collide
}</code></p>
<p>Using that type of thing is much cleaner, and then you don’t need to loop 18,000 times every time you want to check collision.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dynamic-sprite-collision/378461/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dynamic-sprite-collision/378461/2</link>
        <pubDate>Sat, 15 Jan 2011 20:42:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-378461-2</guid>
        <source url="https://forum.moparisthebest.com/t/dynamic-sprite-collision/378461.rss">Dynamic Sprite Collision</source>
      </item>
      <item>
        <title>Dynamic Sprite Collision</title>
        <dc:creator><![CDATA[@sniffle6 sniffle6]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/sniffle6">@sniffle6</a> wrote:</p>
          <blockquote>
              <p>I got bored about 2 days ago and started coding a method to detect sprite collision without having to make a new X, Y for each object or w/e it is people use to do rectangle based collision, this excludes sprite1.collideswith(sprite2) or w/e it is. It works pretty good as of now, the only thing i that really needs attention is when your walking to the objects top/bottom corner youll stop walking because part of the square still hits it, so you have to walk a little above the object (not much, like 1 pixel). Im working on fixing this, just havnt gotten around to it.</p>
<p>It simple to add a new object all you have to do is, define what object it is, and add its size to the ObjectSize method. Once you do this it auto detects the coords and size of the object and makes it non walkable.</p>
<hr>
<p>This draws the object on the screen to the predetermined coordinates specified by the user</p>
<p><code>       for (int i = 0; i &lt; 100; i++) {
            g.drawImage(Obj[0], ObjX[i][1] * square, ObjY[i][1] * square, null);
            g.drawImage(Obj[1], ObjX[i][2] * square, ObjY[i][2] * square, null);
        }</code></p>
<p>This determines the X and Y values of the object and what object its going to draw. ObjX[what picture it gives the x and y value to][What object it loads]</p>
<pre><code class="lang-auto">    public static void Map() {
       ObjX[0][1] = 30;
        ObjY[0][1] = 90;
        ObjX[1][1] = 50;
        ObjY[1][1] = 25;
        ObjX[2][1] = 30;
        ObjY[2][1] = 60;
        ObjX[3][2] = 45;
        ObjY[3][2] = 50;
        ObjX[4][2] = 60;
        ObjY[4][2] = 10;
    }</code></pre>
<p>This determines the size of the object your drawing.</p>
<pre><code class="lang-auto">    public static void ObjectSize() {
        ObjSizeX[1] = 5;
        ObjSizeY[1] = 5;
        ObjSizeX[2] = 10;
        ObjSizeY[2] = 5;
    }</code></pre>
<p>The actual clipping void</p>
<pre><code class="lang-auto">    public static void clipping() {
        for (int i = 0; i &lt; 100; i++) {
            for (int k = 0; k &lt; 10; k++) {
                for (int j = 0; j &lt; 6; j++) {
                    for (int h = 0; h &lt; 3; h++) {
                        Shape object = new Rectangle2D.Double(ObjX[i][h], ObjY[i][h], ObjSizeX[h], ObjSizeY[h]);
                        if (object.contains(X + j, Y + k)) {
                            collision = true;
                            msg = "In object";
                            switch(face){
                                case 1:
                                    if(hit[2] == 0 &amp;&amp; hit[3] == 0 &amp;&amp; hit[4] == 0){
                                        hit[1] = 1;
                                    }
                                    break;
                                case 2:
                                    if(hit[1] == 0 &amp;&amp; hit[3] == 0 &amp;&amp; hit[4] == 0){
                                        hit[2] = 1;
                                    }
                                    break;
                                case 3:
                                    if(hit[1] == 0 &amp;&amp; hit[2] == 0 &amp;&amp; hit[4] == 0){
                                        hit[3] = 1;
                                    }
                                    break;
                                case 4:
                                    if(hit[1] == 0 &amp;&amp; hit[3] == 0 &amp;&amp; hit[2] == 0){
                                        hit[4] = 1;
                                    }
                                    break;

                            }
                           /* for (int s = 0; s &lt; 5; s++) {
                                if (face == s) {
                                    hit[s] = 1;
                                }
                            }*/
                            return;
                        } else {
                            msg = "not in object";
                            collision = false;
                        }
                    }
                }
            }
        }
    }</code></pre>
<p>I dont know why you would want the previous releases, but ill post all teh releases anyways.</p>
<p><a href="http://up.ht/h6TNOr" data-bbcode="true" rel="nofollow noopener">Version 0.5</a></p>
<p><a href="http://up.ht/eXnTMJ" data-bbcode="true" rel="nofollow noopener">Version 0.8</a></p>
<p><a href="http://up.ht/fc8Fgd" data-bbcode="true" rel="nofollow noopener">Version 0.9</a></p>
<p><a href="http://up.ht/gxivSu" data-bbcode="true" rel="nofollow noopener">Version 0.95</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dynamic-sprite-collision/378461/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dynamic-sprite-collision/378461/1</link>
        <pubDate>Sat, 15 Jan 2011 18:06:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-378461-1</guid>
        <source url="https://forum.moparisthebest.com/t/dynamic-sprite-collision/378461.rss">Dynamic Sprite Collision</source>
      </item>
  </channel>
</rss>
