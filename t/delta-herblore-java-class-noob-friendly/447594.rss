<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[delta] Herblore.java class - noob friendly</title>
    <link>https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594</link>
    <description>Hello there. 

Since delta doesn&#39;t have working herblore and herblore is definitely one of the easiest skills to add, I thought I would make my own class for it. This class is much cleaner since you don&#39;t have to deal with hundreds of messy if statements. Instead it has methods that make and decant the potions. I&#39;ll be explaining all of my code and the class is full of comments.

Here is the class:
[CODE]public class Herblore {
	client c;
	
	//unidHerb ID, identifiedHerbId, level req, exp
	int[][] unidHerbInfo = {
			//Guam
			{199,249,1,3},
			//Marrentill
			{201,251,5,4},
			//Tarromin
			{203,253,11,5},
			//Harralander
			{205,255,20,6},
			//Ranarr
			{207,257,25,8},
			//Toadflax
			{3049,2998,30,8},
			//Irit leaf
			{209,259,40,9},
			//Avantoe
			{211,261,48,10},
			//Kwuarm
			{213,263,54,11},
			//Snapdragon
			{3051,3000,59,12},
			//Cadantine
			{215,265,65,13},
			//Lantadyme
			{2485,2481,67,13},
			//Dwarf weed
			{217,267,70,14},
			//Torstol
			{219,269,75,15}};
	
	//identifiedHerbID, 1dosepotID, 2dosepotID, 3dosepotID, 4dosepotID, secondary ingredient, level req, exp
	int[][] herbInfo = {
			//Guam - attack pot
			{249,125,123,121,2428,1,25},
			//Marrentill - antipoision
			{251,179,177,175,2446,5,38},
			//Tarromin - str pot
			{253,119,117,115,113,12,50},
			//Harralander - restore pot
			{255,131,129,127,2430,22,63},
			//Ranarr - prayer pot
			{257,143,141,139,2434,38,88},
			//Avantoe - super energy
			{261,3022,3020,3018,3016,40,100},
			//Irit leaf - super attack
			{259,149,147,145,2436,45,100},
			//Kwuarm - super str
			{263,161,159,157,2440,55,125},
			//Snapdragon - super restore
			{3000,3030,3028,3026,3024,63,143},
			//Cadantine - super def
			{265,167,165,163,2442,66,155},
			//Lantadyme - antifire
			{2481,2458,2456,2454,2452,69,158},
			//Dwarf weed - range pot
			{267,173,171,169,2444,72,163},
			//Torstol - zamorak brew
			{269,193,191,189,2450,78,175},
			//Toadflax - saradomin brew
			{2998,6691,6689,6687,6685,81,180}
			};
	
	public Herblore(client c){
		this.c = c;
	}
	
	//making the actual potion
	public void makePot(int itemUsed, int itemUsedOn){
		boolean item1IsHerb = isHerb(itemUsed);
		boolean item2IsHerb = isHerb(itemUsedOn);
		
		//finding the herb index so you know which array in &#39;herbInfo&#39; to use
		int herbIndex = -1;
		if(item1IsHerb){
			herbIndex = getHerbIndex(itemUsed);
		}
		if(item2IsHerb){
			herbIndex = getHerbIndex(itemUsedOn);
		}
		
		//if the first item is a herb and the second is water, or vice versa
		if((isHerb(itemUsed) &amp;&amp; itemUsedOn == 227) || (itemUsed == 227 &amp;&amp; isHerb(itemUsedOn))){
			//make sure the player has the required level to make the pot
			if(c.playerLevel[15]&gt;=herbInfo[herbIndex][5]){
				c.setAnimation(1652);
				c.deleteItem(itemUsed,c.getItemSlot(itemUsed), 1);
				c.deleteItem(itemUsedOn, c.getItemSlot(itemUsedOn), 1);
				c.addItem(herbInfo[herbIndex][3], 1);
				c.addSkillXP(herbInfo[herbIndex][6], 15);
				c.sM(&quot;You make the potion.&quot;);
			}else{
				c.sM(&quot;You must have a Herblore level of &quot;+herbInfo[herbIndex][5]+&quot; to make this potion.&quot;);
			}
		//if the items being used are pots
		}else if(getDose(itemUsed)&gt;0 &amp;&amp; getDose(itemUsedOn)&gt;0){
			int dose1 = getDose(itemUsed), index = -1, dose2 = getDose(itemUsedOn);
			for(int i = 0; i &lt; herbInfo.length; i++){
				if(itemUsed==herbInfo[i][dose1]){
					index = i;
				}
			}
			if(itemUsedOn==herbInfo[index][dose2]){
				decant(dose1, dose2, index);
			}
		}
	}
	//decants the potions used. Parameters are the dose of the first pot, 
	//the dose of the second potion, and the index
	//of the herbInfo array where the potion is
	public void decant(int dose1, int dose2, int index){
		int pot = dose1+dose2, itemUsed = herbInfo[index][dose1],
				itemUsedOn = herbInfo[index][dose2];
		if(pot &gt; 4){
			//if the player tries to use a 3 dose pot on another 3 dose pot
			if(dose1==dose2){
				c.deleteItem(itemUsed, c.getItemSlot(itemUsed), 1);
				c.deleteItem(itemUsedOn, c.getItemSlot(itemUsedOn), 1);
				c.addItem(herbInfo[index][dose1+1], 1);
				c.addItem(herbInfo[index][dose2-1], 1);
				c.sM(&quot;You mix the two potions.&quot;);
			}else{
				//if the player uses a 3 dose pot on a 2 dose
				c.deleteItem(itemUsed, c.getItemSlot(itemUsed), 1);
				c.deleteItem(itemUsedOn, c.getItemSlot(itemUsedOn), 1);
				//if the first pot is 3 and the second is 2
				if(dose1 &gt; dose2){
					c.addItem(herbInfo[index][dose1+1], 1);
					c.addItem(herbInfo[index][dose2-1], 1);
				}else{
					//if the first is 2 and the second is 3
					c.addItem(herbInfo[index][dose2+1], 1);
					c.addItem(herbInfo[index][dose1-1], 1);
				}
			}
		}
		if(pot &lt;= 4 &amp;&amp; pot &gt; 0){
			c.deleteItem(itemUsed, c.getItemSlot(itemUsed), 1);
			c.deleteItem(itemUsedOn, c.getItemSlot(itemUsedOn), 1);
			c.addItem(herbInfo[index][pot], 1);
			c.addItem(229, 1);
			c.sM(&quot;You mix the potions into &quot;+pot+&quot; doses.&quot;);
		}
	}
	
	public void identify(int item){
		//checking whether the herb is unidentified
		if(isUnid(item)){
			int index = 0;
			//finding which herb to use
			for(int i = 0; i &lt; unidHerbInfo.length; i++){
				if(item == unidHerbInfo[i][0])
					index = i;
			}
			//checking whether the player has the req level to identify the herb
			//if so, delete the unid, add the identified herb, give the player herblore xp,
			//and send the message &quot;you identify the herb&quot;
			if(c.playerLevel[15]&gt;=unidHerbInfo[index][2]){
				c.deleteItem(item, 1);
				c.addItem(unidHerbInfo[index][1], 1);
				c.addSkillXP(unidHerbInfo[index][3], 15);
				c.sM(&quot;You identify the herb.&quot;);
			}else{
				c.sM(&quot;You must have a Herblore level of &quot; + unidHerbInfo[index][2] + &quot;to identify this herb.&quot;);
			}
		}
	}
	
	//determines whether the item is a potion. If it is, return the dose
	public int getDose(int item){
		String itemName = c.getItemName(item);
		if(itemName.contains(&quot;(3)&quot;))
			return 3;
		else if(itemName.contains(&quot;(2)&quot;))
			return 2;
		else if(itemName.contains(&quot;(1)&quot;))
			return 1;
		else return -1;
	}
	
	//checking if the item is an identified herb
	public boolean isHerb(int item){
		for(int i = 0; i &lt; herbInfo.length; i++){
			if(item == herbInfo[i][0])
				return true;
		}
		return false;
	}
	
	//checking if the item is an UNidentified herb
	public boolean isUnid(int item){
		for(int i = 0; i &lt; unidHerbInfo.length; i++){
			if(item == unidHerbInfo[i][0]){
				return true;
			}
		}
		return false;
	}
	
	//gets the herb-array so we know which index to use to get the exp, level req, etc
	public int getHerbIndex(int herb){
		for(int i = 0; i &lt; herbInfo.length; i++){
			if(herb == herbInfo[i][0]){
				return i;
			}
		}
		return -1;
	}
	
}[/CODE]

You want to make a new document, paste the above code in there, and save it as Herblore.java. Next thing you want to do is go to your client.java class and anywhere you see variables being declared, copy and paste this under it (make sure it&#39;s at the top of the class and not inside a method):
[CODE]Herblore herblore = new Herblore(this);[/CODE].

The herblore class takes an instance of the client class as its parameter so that&#39;s what the this is for ([B]this[/B] class, which is client). Next what you want to do is press ctrl+f and type &quot;case 53&quot; inside. Look for this:
[CODE]// Use item on item
			int usedWithSlot = inStream.readUnsignedWord();
			int itemUsedSlot = inStream.readUnsignedWordA();
			// int useWith = inStream.readUnsignedWordBigEndianA();
			int interface1284 = inStream.readUnsignedWord();
			// int itemUsed = inStream.readSignedWordBigEndian();
			int interfacek = inStream.readUnsignedWord();
			// usedWithSlot += 1;
			// itemUsedSlot += 1;
			int useWith = playerItems[usedWithSlot] - 1;
			int itemUsed = playerItems[itemUsedSlot] - 1;
			if (!playerHasItem(itemUsed) || !playerHasItem(useWith)) {
				break;
			}
			int otherItem = playerItems[usedWithSlot] - 1;
			// println(&quot;itemUsed=&quot; + itemUsed + &quot;, usedWithSlot=&quot; + usedWithSlot
			// + &quot;, otherItem=&quot; + otherItem);[/CODE]

it should be the very first text under case 53. Right under that last line, paste this:
[CODE]Herblore.makePot(itemUsed, useWith);[/CODE]
This will take every item used and check to see if it&#39;s a herb and/or vial of water. If it is, makePot will be put to use.

Now, the last thing you want to do is go to potions.java and right under this:
[CODE]if (c.playerHasItem(item)) {
			switch (item) {[/CODE]

paste this:
[CODE]case 199: case 201: case 203: case 205: case 207: case 209: case 211: case 213: case 215:
			case 217: case 219: case 2485: case 3049: case 3051:
				c.herblore.identify(item);
				break;[/CODE]
This tells it if the item being left clicked is an unidentified herb, call herblore.identify().

[CENTER][B]EXPLANATION[/B][/CENTER]

Ok, so first thing is the two multi-dimensional arrays 

[CODE]unidHerbInfo[][]
herbInfo[][][/CODE]

The first one, as you can probably guess, stores multiple arrays with information in this order:
{unidentified herb ID, identified herb ID, level required, exp gained}

The second stores information in this order:
{identified herb ID, 1 dose potion ID, 2 dose potion ID, 3 dose potion ID, 4 dose potion ID, level required, exp gained}

the potion ID&#39;s are for decanting later, and also so we know what herb makes what potion.

We then have the constructor:
[CODE]public Herblore(client c){
		this.c = c;
	}[/CODE]

and it takes an instance of the client class as it&#39;s parameter, so it&#39;s basically just getting a copy of the player passed to it.

Now we come to our first instance method:
[CODE]public void makePot(int itemUsed, int itemUsedOn)[/CODE]

This method makes a potion if one item is a herb and the other is a vial of water, or it decants potions if the two items used are potions.

it declares two local variables, item1IsHerb and item2IsHerb.
This just calls the method isHerb to determine if the itemUsed is an herb, then it checks if the itemUsedOn is an herb. 

Note: if they are both herbs, the method does nothing.

It then gets the herbIndex for the herb so it knows which array to get the value of the potion from when it makes the potion.

[CODE]boolean item1IsHerb = isHerb(itemUsed);
		boolean item2IsHerb = isHerb(itemUsedOn);
		
		//finding the herb index so you know which array in &#39;herbInfo&#39; to use
		int herbIndex = -1;
		if(item1IsHerb){
			herbIndex = getHerbIndex(itemUsed);
		}
		if(item2IsHerb){
			herbIndex = getHerbIndex(itemUsedOn);
		}[/CODE]

now it makes the potion if one item is a herb and the other is a vial of water. The first thing it does it check to make the players herblore (stat 15) level is at least the level required for the herb (index 5 in every array of herbInfo). If the level is greater than or equal to the level required, set the potion making animation, delete the first item and the second item, replace it with the finished (3 dose) potion, que the text and exit the method. If the player doesn&#39;t have the required level, it prints the error message &quot;You must have a Herblore level of x to make this potion&quot;.

[CODE]//if the first item is a herb and the second is water, or vice versa
		if((isHerb(itemUsed) &amp;&amp; itemUsedOn == 227) || (itemUsed == 227 &amp;&amp; isHerb(itemUsedOn))){
			//make sure the player has the required level to make the pot
			if(c.playerLevel[15]&gt;=herbInfo[herbIndex][5]){
				c.setAnimation(1652);
				c.deleteItem(itemUsed,c.getItemSlot(itemUsed), 1);
				c.deleteItem(itemUsedOn, c.getItemSlot(itemUsedOn), 1);
				c.addItem(herbInfo[herbIndex][3], 1);
				c.addSkillXP(herbInfo[herbIndex][5], 15);
				c.sM(&quot;You make the potion.&quot;);
			}else{
				c.sM(&quot;You must have a Herblore level of &quot;+herbInfo[herbIndex][5]+&quot; to make this potion.&quot;);
			}[/CODE]

now if the items used weren&#39;t herbs, it checks to see if the items were potions. If they are (the getDose method returns an integer, which is the dose of the potion), get their doses and find out which array to get information from. This part is to make sure that if they use two different potions on each other they won&#39;t decant. It then checks to see if both potions are the of the same type (two attack pots for example, as opposed to a str pot used on an att pot), if they are, call the decant method.
[CODE]//if the items being used are pots
		}else if(getDose(itemUsed)&gt;0 &amp;&amp; getDose(itemUsedOn)&gt;0){
			int dose1 = getDose(itemUsed), index = -1, dose2 =     getDose(itemUsedOn);
			for(int i = 0; i &lt; herbInfo.length; i++){
				if(itemUsed==herbInfo[i][dose1]){
					index = i;
				}
			}
			if(itemUsedOn==herbInfo[index][dose2]){
				decant(dose1, dose2, index);
			}
		}
	}[/CODE]

now we have the decant() method. The first thing it does it find out the combined dosage of the two potions (a 2 dose used on a 2 dose would be a 4 dose potion), and then it gets the exact ID for both potions. If the pot variable is greater than 4 (if the combined dosage is greater than 4, for example a 3 dose used on a 2 dose), then it checks the doses. If the doses are equal (the only case where two doses will be equal and greater than 4 two 3 dose potions), then it makes one 4 dose and one 2 dose. If they aren&#39;t equal, (one is a 3 dose, one is a 2 dose), then it checks to see which one is greater and increases that one to 4 and reduces the other to 1. If the pot variable 4 or less and greater than 0, then it just adds to two doses.

[CODE]public void decant(int dose1, int dose2, int index){
		int pot = dose1+dose2, itemUsed = herbInfo[index][dose1],
				itemUsedOn = herbInfo[index][dose2];
		if(pot &gt; 4){
			//if the player tries to use a 3 dose pot on another 3 dose pot
			if(dose1==dose2){
				c.deleteItem(itemUsed, c.getItemSlot(itemUsed), 1);
				c.deleteItem(itemUsedOn, c.getItemSlot(itemUsedOn), 1);
				c.addItem(herbInfo[index][dose1+1], 1);
				c.addItem(herbInfo[index][dose2-1], 1);
				c.sM(&quot;You mix the two potions.&quot;);
			}else{
				//if the player uses a 3 dose pot on a 2 dose
				c.deleteItem(itemUsed, c.getItemSlot(itemUsed), 1);
				c.deleteItem(itemUsedOn, c.getItemSlot(itemUsedOn), 1);
				//if the first pot is 3 and the second is 2
				if(dose1 &gt; dose2){
					c.addItem(herbInfo[index][dose1+1], 1);
					c.addItem(herbInfo[index][dose2-1], 1);
				}else{
					//if the first is 2 and the second is 3
					c.addItem(herbInfo[index][dose2+1], 1);
					c.addItem(herbInfo[index][dose1-1], 1);
				}
			}
		}
		if(pot &lt;= 4 &amp;&amp; pot &gt; 0){
			c.deleteItem(itemUsed, c.getItemSlot(itemUsed), 1);
			c.deleteItem(itemUsedOn, c.getItemSlot(itemUsedOn), 1);
			c.addItem(herbInfo[index][pot], 1);
			c.addItem(229, 1);
			c.sM(&quot;You mix the potions into &quot;+pot+&quot; doses.&quot;);
		}
	}[/CODE]

the last important method we have (the rest are just accessors) is identify(). This just replaces a unid herb with an ID&#39;d herb. First, it checks to see if the herb is a unid or not. If it does, it gets the index of the unidHerbInfo array so it knows which array to use. It then makes sure the player has the required level, and then deletes the unid and replaces it with the ID&#39;d herb.
[CODE]public void identify(int item){
		//checking whether the herb is unidentified
		if(isUnid(item)){
			int index = 0;
			//finding which herb to use
			for(int i = 0; i &lt; unidHerbInfo.length; i++){
				if(item == unidHerbInfo[i][0])
					index = i;
			}
			//checking whether the player has the req level to identify the herb
			//if so, delete the unid, add the identified herb, give the player herblore xp,
			//and send the message &quot;you identify the herb&quot;
			if(c.playerLevel[15]&gt;=unidHerbInfo[index][2]){
				c.deleteItem(item, 1);
				c.addItem(unidHerbInfo[index][1], 1);
				c.addSkillXP(unidHerbInfo[index][3], 15);
				c.sM(&quot;You identify the herb.&quot;);
			}else{
				c.sM(&quot;You must have a Herblore level of &quot; + unidHerbInfo[index][2] + &quot;to identify this herb.&quot;);
			}
		}
	}[/CODE]


I hope this helped! The ID&#39;s were taken from PI, although I added the 1 and 2 dose ID&#39;s in and corrected some mistakes that were in the original arrays. All other methods were written entirely from scratch by me. If there&#39;s anything I did wrong or could have done easier, let me know because I&#39;m new to rsps coding (but not new to java).

Thank you!</description>
    
    <lastBuildDate>Wed, 18 Jul 2012 01:47:07 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[delta] Herblore.java class - noob friendly</title>
        <dc:creator><![CDATA[@whackatre Whackatre]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/whackatre">@whackatre</a> wrote:</p>
          <blockquote>
              <p>[quote=“PIEBAR2FAR, post:12, topic:447594”]<code>client.java:12586: non-static method makePot(int,int) cannot be referenced from
a static context
                        Herblore.makePot(itemUsed, useWith);
                                ^
1 error
You have compiled the Server.
Press any key to continue . . .</code></p>
<p>i get his error, how to i fix it?[/quote]<br>
look at a tutorial of java and look up these topics:<br>
a) the keyword ‘static’<br>
b) class instantiation</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594/13</link>
        <pubDate>Wed, 18 Jul 2012 01:47:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-447594-13</guid>
        <source url="https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594.rss">[delta] Herblore.java class - noob friendly</source>
      </item>
      <item>
        <title>[delta] Herblore.java class - noob friendly</title>
        <dc:creator><![CDATA[@PIEBAR2FAR PIEBAR2FAR]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/piebar2far">@PIEBAR2FAR</a> wrote:</p>
          <blockquote>
              <p><code>client.java:12586: non-static method makePot(int,int) cannot be referenced from
a static context
                        Herblore.makePot(itemUsed, useWith);
                                ^
1 error
You have compiled the Server.
Press any key to continue . . .</code></p>
<p>i get his error, how to i fix it?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594/12</link>
        <pubDate>Wed, 18 Jul 2012 01:34:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-447594-12</guid>
        <source url="https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594.rss">[delta] Herblore.java class - noob friendly</source>
      </item>
      <item>
        <title>[delta] Herblore.java class - noob friendly</title>
        <dc:creator><![CDATA[@Mee0345 Mee0345]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mee0345">@Mee0345</a> wrote:</p>
          <blockquote>
              <p>Looks great, you should apply for my development team, we could use someone like you…<br>
Read my signature for the link</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594/11</link>
        <pubDate>Mon, 02 Jul 2012 08:35:19 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-447594-11</guid>
        <source url="https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594.rss">[delta] Herblore.java class - noob friendly</source>
      </item>
      <item>
        <title>[delta] Herblore.java class - noob friendly</title>
        <dc:creator><![CDATA[@RandQm RandQm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/randqm">@RandQm</a> wrote:</p>
          <blockquote>
              <p>[quote=“Cruel Hand, post:9, topic:447594”][quote author=RandQm link=topic=550493.msg4034951#msg4034951 date=1341110053]</p>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<p>its ok</p>
</blockquote>
</aside>
<p>what could I do better?</p>
</blockquote>
</aside>
<p>Your code is <span class="bbcode-s">huge</span> a bit big, gj though</p>
</blockquote>
</aside>
<p>thanks! A portion of that size is largely due to comments, there are probably 50 lines of comments total lol</p>
</blockquote>
</aside>
<p>I didn’t notice you are doing everything of herblore in one class.<br>
[/quote]</p>
<p>you mean including decanting and identifying?[/quote]<br>
yes</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594/10</link>
        <pubDate>Sun, 01 Jul 2012 16:07:15 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-447594-10</guid>
        <source url="https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594.rss">[delta] Herblore.java class - noob friendly</source>
      </item>
      <item>
        <title>[delta] Herblore.java class - noob friendly</title>
        <dc:creator><![CDATA[@Cruel_Hand Cruel Hand]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cruel_hand">@Cruel_Hand</a> wrote:</p>
          <blockquote>
              <p>[quote=“RandQm, post:8, topic:447594”][quote author=Cruel Hand link=topic=550493.msg4034945#msg4034945 date=1341109286]</p>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<p>its ok</p>
</blockquote>
</aside>
<p>what could I do better?</p>
</blockquote>
</aside>
<p>Your code is <span class="bbcode-s">huge</span> a bit big, gj though</p>
</blockquote>
</aside>
<p>thanks! A portion of that size is largely due to comments, there are probably 50 lines of comments total lol<br>
[/quote]<br>
I didn’t notice you are doing everything of herblore in one class.[/quote]</p>
<p>you mean including decanting and identifying?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594/9</link>
        <pubDate>Sun, 01 Jul 2012 02:37:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-447594-9</guid>
        <source url="https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594.rss">[delta] Herblore.java class - noob friendly</source>
      </item>
      <item>
        <title>[delta] Herblore.java class - noob friendly</title>
        <dc:creator><![CDATA[@RandQm RandQm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/randqm">@RandQm</a> wrote:</p>
          <blockquote>
              <p>[quote=“Cruel Hand, post:7, topic:447594”][quote author=RandQm link=topic=550493.msg4034913#msg4034913 date=1341106041]</p>
<aside class="quote">
<blockquote>
<aside class="quote">
<blockquote>
<p>its ok</p>
</blockquote>
</aside>
<p>what could I do better?</p>
</blockquote>
</aside>
<p>Your code is <span class="bbcode-s">huge</span> a bit big, gj though<br>
[/quote]</p>
<p>thanks! A portion of that size is largely due to comments, there are probably 50 lines of comments total lol[/quote]<br>
I didn’t notice you are doing everything of herblore in one class.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594/8</link>
        <pubDate>Sun, 01 Jul 2012 02:34:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-447594-8</guid>
        <source url="https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594.rss">[delta] Herblore.java class - noob friendly</source>
      </item>
      <item>
        <title>[delta] Herblore.java class - noob friendly</title>
        <dc:creator><![CDATA[@Cruel_Hand Cruel Hand]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cruel_hand">@Cruel_Hand</a> wrote:</p>
          <blockquote>
              <p>[quote=“RandQm, post:6, topic:447594”][quote author=Cruel Hand link=topic=550493.msg4034815#msg4034815 date=1341098598]</p>
<aside class="quote">
<blockquote>
<p>its ok</p>
</blockquote>
</aside>
<p>what could I do better?<br>
[/quote]<br>
Your code is huge, gj though[/quote]</p>
<p>thanks! A portion of that size is largely due to comments, there are probably 50 lines of comments total lol</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594/7</link>
        <pubDate>Sun, 01 Jul 2012 02:21:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-447594-7</guid>
        <source url="https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594.rss">[delta] Herblore.java class - noob friendly</source>
      </item>
      <item>
        <title>[delta] Herblore.java class - noob friendly</title>
        <dc:creator><![CDATA[@RandQm RandQm]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/randqm">@RandQm</a> wrote:</p>
          <blockquote>
              <p>[quote=“Cruel Hand, post:5, topic:447594”][quote author=Clawz fury link=topic=550493.msg4034795#msg4034795 date=1341097775]<br>
its ok<br>
[/quote]</p>
<p>what could I do better?[/quote]<br>
Your code is huge, gj though</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594/6</link>
        <pubDate>Sun, 01 Jul 2012 01:27:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-447594-6</guid>
        <source url="https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594.rss">[delta] Herblore.java class - noob friendly</source>
      </item>
      <item>
        <title>[delta] Herblore.java class - noob friendly</title>
        <dc:creator><![CDATA[@Cruel_Hand Cruel Hand]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cruel_hand">@Cruel_Hand</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="4" data-topic="447594">
<div class="title">
<div class="quote-controls"></div>
 Clawz fury:</div>
<blockquote>
<p>its ok</p>
</blockquote>
</aside>
<p>what could I do better?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594/5</link>
        <pubDate>Sat, 30 Jun 2012 23:23:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-447594-5</guid>
        <source url="https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594.rss">[delta] Herblore.java class - noob friendly</source>
      </item>
      <item>
        <title>[delta] Herblore.java class - noob friendly</title>
        <dc:creator><![CDATA[@Clawz_fury lare69]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clawz_fury">@Clawz_fury</a> wrote:</p>
          <blockquote>
              <p>its ok</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594/4</link>
        <pubDate>Sat, 30 Jun 2012 23:09:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-447594-4</guid>
        <source url="https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594.rss">[delta] Herblore.java class - noob friendly</source>
      </item>
      <item>
        <title>[delta] Herblore.java class - noob friendly</title>
        <dc:creator><![CDATA[@Cruel_Hand Cruel Hand]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cruel_hand">@Cruel_Hand</a> wrote:</p>
          <blockquote>
              <aside class="quote quote-modified" data-post="2" data-topic="447594">
<div class="title">
<div class="quote-controls"></div>
 mista pnut:</div>
<blockquote>
<p>I like how far into the explanation you went. Nice job, if I didn’t already have one of these I’d add it.</p>
</blockquote>
</aside>
<p>thank you!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594/3</link>
        <pubDate>Sat, 30 Jun 2012 22:34:17 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-447594-3</guid>
        <source url="https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594.rss">[delta] Herblore.java class - noob friendly</source>
      </item>
      <item>
        <title>[delta] Herblore.java class - noob friendly</title>
        <dc:creator><![CDATA[@mista_pnut mista pnut]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mista_pnut">@mista_pnut</a> wrote:</p>
          <blockquote>
              <p>I like how far into the explanation you went. Nice job, if I didn’t already have one of these I’d add it.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594/2</link>
        <pubDate>Sat, 30 Jun 2012 22:23:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-447594-2</guid>
        <source url="https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594.rss">[delta] Herblore.java class - noob friendly</source>
      </item>
      <item>
        <title>[delta] Herblore.java class - noob friendly</title>
        <dc:creator><![CDATA[@Cruel_Hand Cruel Hand]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/cruel_hand">@Cruel_Hand</a> wrote:</p>
          <blockquote>
              <p>Hello there.</p>
<p>Since delta doesn’t have working herblore and herblore is definitely one of the easiest skills to add, I thought I would make my own class for it. This class is much cleaner since you don’t have to deal with hundreds of messy if statements. Instead it has methods that make and decant the potions. I’ll be explaining all of my code and the class is full of comments.</p>
<p>Here is the class:</p>
<p>[CODE]public class Herblore {<br>
client c;</p>
<pre><code>//unidHerb ID, identifiedHerbId, level req, exp
int[][] unidHerbInfo = {
		//Guam
		{199,249,1,3},
		//Marrentill
		{201,251,5,4},
		//Tarromin
		{203,253,11,5},
		//Harralander
		{205,255,20,6},
		//Ranarr
		{207,257,25,8},
		//Toadflax
		{3049,2998,30,8},
		//Irit leaf
		{209,259,40,9},
		//Avantoe
		{211,261,48,10},
		//Kwuarm
		{213,263,54,11},
		//Snapdragon
		{3051,3000,59,12},
		//Cadantine
		{215,265,65,13},
		//Lantadyme
		{2485,2481,67,13},
		//Dwarf weed
		{217,267,70,14},
		//Torstol
		{219,269,75,15}};

//identifiedHerbID, 1dosepotID, 2dosepotID, 3dosepotID, 4dosepotID, secondary ingredient, level req, exp
int[][] herbInfo = {
		//Guam - attack pot
		{249,125,123,121,2428,1,25},
		//Marrentill - antipoision
		{251,179,177,175,2446,5,38},
		//Tarromin - str pot
		{253,119,117,115,113,12,50},
		//Harralander - restore pot
		{255,131,129,127,2430,22,63},
		//Ranarr - prayer pot
		{257,143,141,139,2434,38,88},
		//Avantoe - super energy
		{261,3022,3020,3018,3016,40,100},
		//Irit leaf - super attack
		{259,149,147,145,2436,45,100},
		//Kwuarm - super str
		{263,161,159,157,2440,55,125},
		//Snapdragon - super restore
		{3000,3030,3028,3026,3024,63,143},
		//Cadantine - super def
		{265,167,165,163,2442,66,155},
		//Lantadyme - antifire
		{2481,2458,2456,2454,2452,69,158},
		//Dwarf weed - range pot
		{267,173,171,169,2444,72,163},
		//Torstol - zamorak brew
		{269,193,191,189,2450,78,175},
		//Toadflax - saradomin brew
		{2998,6691,6689,6687,6685,81,180}
		};

public Herblore(client c){
	this.c = c;
}

//making the actual potion
public void makePot(int itemUsed, int itemUsedOn){
	boolean item1IsHerb = isHerb(itemUsed);
	boolean item2IsHerb = isHerb(itemUsedOn);
	
	//finding the herb index so you know which array in 'herbInfo' to use
	int herbIndex = -1;
	if(item1IsHerb){
		herbIndex = getHerbIndex(itemUsed);
	}
	if(item2IsHerb){
		herbIndex = getHerbIndex(itemUsedOn);
	}
	
	//if the first item is a herb and the second is water, or vice versa
	if((isHerb(itemUsed) &amp;&amp; itemUsedOn == 227) || (itemUsed == 227 &amp;&amp; isHerb(itemUsedOn))){
		//make sure the player has the required level to make the pot
		if(c.playerLevel[15]&gt;=herbInfo[herbIndex][5]){
			c.setAnimation(1652);
			c.deleteItem(itemUsed,c.getItemSlot(itemUsed), 1);
			c.deleteItem(itemUsedOn, c.getItemSlot(itemUsedOn), 1);
			c.addItem(herbInfo[herbIndex][3], 1);
			c.addSkillXP(herbInfo[herbIndex][6], 15);
			c.sM("You make the potion.");
		}else{
			c.sM("You must have a Herblore level of "+herbInfo[herbIndex][5]+" to make this potion.");
		}
	//if the items being used are pots
	}else if(getDose(itemUsed)&gt;0 &amp;&amp; getDose(itemUsedOn)&gt;0){
		int dose1 = getDose(itemUsed), index = -1, dose2 = getDose(itemUsedOn);
		for(int i = 0; i &lt; herbInfo.length; i++){
			if(itemUsed==herbInfo[i][dose1]){
				index = i;
			}
		}
		if(itemUsedOn==herbInfo[index][dose2]){
			decant(dose1, dose2, index);
		}
	}
}
//decants the potions used. Parameters are the dose of the first pot, 
//the dose of the second potion, and the index
//of the herbInfo array where the potion is
public void decant(int dose1, int dose2, int index){
	int pot = dose1+dose2, itemUsed = herbInfo[index][dose1],
			itemUsedOn = herbInfo[index][dose2];
	if(pot &gt; 4){
		//if the player tries to use a 3 dose pot on another 3 dose pot
		if(dose1==dose2){
			c.deleteItem(itemUsed, c.getItemSlot(itemUsed), 1);
			c.deleteItem(itemUsedOn, c.getItemSlot(itemUsedOn), 1);
			c.addItem(herbInfo[index][dose1+1], 1);
			c.addItem(herbInfo[index][dose2-1], 1);
			c.sM("You mix the two potions.");
		}else{
			//if the player uses a 3 dose pot on a 2 dose
			c.deleteItem(itemUsed, c.getItemSlot(itemUsed), 1);
			c.deleteItem(itemUsedOn, c.getItemSlot(itemUsedOn), 1);
			//if the first pot is 3 and the second is 2
			if(dose1 &gt; dose2){
				c.addItem(herbInfo[index][dose1+1], 1);
				c.addItem(herbInfo[index][dose2-1], 1);
			}else{
				//if the first is 2 and the second is 3
				c.addItem(herbInfo[index][dose2+1], 1);
				c.addItem(herbInfo[index][dose1-1], 1);
			}
		}
	}
	if(pot &lt;= 4 &amp;&amp; pot &gt; 0){
		c.deleteItem(itemUsed, c.getItemSlot(itemUsed), 1);
		c.deleteItem(itemUsedOn, c.getItemSlot(itemUsedOn), 1);
		c.addItem(herbInfo[index][pot], 1);
		c.addItem(229, 1);
		c.sM("You mix the potions into "+pot+" doses.");
	}
}

public void identify(int item){
	//checking whether the herb is unidentified
	if(isUnid(item)){
		int index = 0;
		//finding which herb to use
		for(int i = 0; i &lt; unidHerbInfo.length; i++){
			if(item == unidHerbInfo[i][0])
				index = i;
		}
		//checking whether the player has the req level to identify the herb
		//if so, delete the unid, add the identified herb, give the player herblore xp,
		//and send the message "you identify the herb"
		if(c.playerLevel[15]&gt;=unidHerbInfo[index][2]){
			c.deleteItem(item, 1);
			c.addItem(unidHerbInfo[index][1], 1);
			c.addSkillXP(unidHerbInfo[index][3], 15);
			c.sM("You identify the herb.");
		}else{
			c.sM("You must have a Herblore level of " + unidHerbInfo[index][2] + "to identify this herb.");
		}
	}
}

//determines whether the item is a potion. If it is, return the dose
public int getDose(int item){
	String itemName = c.getItemName(item);
	if(itemName.contains("(3)"))
		return 3;
	else if(itemName.contains("(2)"))
		return 2;
	else if(itemName.contains("(1)"))
		return 1;
	else return -1;
}

//checking if the item is an identified herb
public boolean isHerb(int item){
	for(int i = 0; i &lt; herbInfo.length; i++){
		if(item == herbInfo[i][0])
			return true;
	}
	return false;
}

//checking if the item is an UNidentified herb
public boolean isUnid(int item){
	for(int i = 0; i &lt; unidHerbInfo.length; i++){
		if(item == unidHerbInfo[i][0]){
			return true;
		}
	}
	return false;
}

//gets the herb-array so we know which index to use to get the exp, level req, etc
public int getHerbIndex(int herb){
	for(int i = 0; i &lt; herbInfo.length; i++){
		if(herb == herbInfo[i][0]){
			return i;
		}
	}
	return -1;
}
</code></pre>
<p>}[/CODE]</p>
<p>You want to make a new document, paste the above code in there, and save it as Herblore.java. Next thing you want to do is go to your client.java class and anywhere you see variables being declared, copy and paste this under it (make sure it’s at the top of the class and not inside a method):</p>
<p><code>Herblore herblore = new Herblore(this);</code>.</p>
<p>The herblore class takes an instance of the client class as its parameter so that’s what the this is for (<span class="bbcode-b">this</span> class, which is client). Next what you want to do is press ctrl+f and type “case 53” inside. Look for this:</p>
<p><code>// Use item on item
			int usedWithSlot = inStream.readUnsignedWord();
			int itemUsedSlot = inStream.readUnsignedWordA();
			// int useWith = inStream.readUnsignedWordBigEndianA();
			int interface1284 = inStream.readUnsignedWord();
			// int itemUsed = inStream.readSignedWordBigEndian();
			int interfacek = inStream.readUnsignedWord();
			// usedWithSlot += 1;
			// itemUsedSlot += 1;
			int useWith = playerItems[usedWithSlot] - 1;
			int itemUsed = playerItems[itemUsedSlot] - 1;
			if (!playerHasItem(itemUsed) || !playerHasItem(useWith)) {
				break;
			}
			int otherItem = playerItems[usedWithSlot] - 1;
			// println("itemUsed=" + itemUsed + ", usedWithSlot=" + usedWithSlot
			// + ", otherItem=" + otherItem);</code></p>
<p>it should be the very first text under case 53. Right under that last line, paste this:</p>
<pre><code class="lang-auto"></code></pre>
<p>This will take every item used and check to see if it’s a herb and/or vial of water. If it is, makePot will be put to use.</p>
<p>Now, the last thing you want to do is go to potions.java and right under this:</p>
<p><code>if (c.playerHasItem(item)) {
			switch (item) {</code></p>
<p>paste this:</p>
<p><code>case 199: case 201: case 203: case 205: case 207: case 209: case 211: case 213: case 215:
			case 217: case 219: case 2485: case 3049: case 3051:
				c.herblore.identify(item);
				break;</code><br>
This tells it if the item being left clicked is an unidentified herb, call herblore.identify().</p>
<p>[CENTER]<span class="bbcode-b">EXPLANATION</span>[/CENTER]</p>
<p>Ok, so first thing is the two multi-dimensional arrays</p>
<p><code>unidHerbInfo[][]
herbInfo[][]</code></p>
<p>The first one, as you can probably guess, stores multiple arrays with information in this order:<br>
{unidentified herb ID, identified herb ID, level required, exp gained}</p>
<p>The second stores information in this order:<br>
{identified herb ID, 1 dose potion ID, 2 dose potion ID, 3 dose potion ID, 4 dose potion ID, level required, exp gained}</p>
<p>the potion ID’s are for decanting later, and also so we know what herb makes what potion.</p>
<p>We then have the constructor:</p>
<p><code>public Herblore(client c){
		this.c = c;
	}</code></p>
<p>and it takes an instance of the client class as it’s parameter, so it’s basically just getting a copy of the player passed to it.</p>
<p>Now we come to our first instance method:</p>
<pre><code class="lang-auto"></code></pre>
<p>This method makes a potion if one item is a herb and the other is a vial of water, or it decants potions if the two items used are potions.</p>
<p>it declares two local variables, item1IsHerb and item2IsHerb.<br>
This just calls the method isHerb to determine if the itemUsed is an herb, then it checks if the itemUsedOn is an herb.</p>
<p>Note: if they are both herbs, the method does nothing.</p>
<p>It then gets the herbIndex for the herb so it knows which array to get the value of the potion from when it makes the potion.</p>
<p>[CODE]boolean item1IsHerb = isHerb(itemUsed);<br>
boolean item2IsHerb = isHerb(itemUsedOn);</p>
<pre><code>	//finding the herb index so you know which array in 'herbInfo' to use
	int herbIndex = -1;
	if(item1IsHerb){
		herbIndex = getHerbIndex(itemUsed);
	}
	if(item2IsHerb){
		herbIndex = getHerbIndex(itemUsedOn);
	}[/CODE]
</code></pre>
<p>now it makes the potion if one item is a herb and the other is a vial of water. The first thing it does it check to make the players herblore (stat 15) level is at least the level required for the herb (index 5 in every array of herbInfo). If the level is greater than or equal to the level required, set the potion making animation, delete the first item and the second item, replace it with the finished (3 dose) potion, que the text and exit the method. If the player doesn’t have the required level, it prints the error message “You must have a Herblore level of x to make this potion”.</p>
<p><code>//if the first item is a herb and the second is water, or vice versa
		if((isHerb(itemUsed) &amp;&amp; itemUsedOn == 227) || (itemUsed == 227 &amp;&amp; isHerb(itemUsedOn))){
			//make sure the player has the required level to make the pot
			if(c.playerLevel[15]&gt;=herbInfo[herbIndex][5]){
				c.setAnimation(1652);
				c.deleteItem(itemUsed,c.getItemSlot(itemUsed), 1);
				c.deleteItem(itemUsedOn, c.getItemSlot(itemUsedOn), 1);
				c.addItem(herbInfo[herbIndex][3], 1);
				c.addSkillXP(herbInfo[herbIndex][5], 15);
				c.sM("You make the potion.");
			}else{
				c.sM("You must have a Herblore level of "+herbInfo[herbIndex][5]+" to make this potion.");
			}</code></p>
<p>now if the items used weren’t herbs, it checks to see if the items were potions. If they are (the getDose method returns an integer, which is the dose of the potion), get their doses and find out which array to get information from. This part is to make sure that if they use two different potions on each other they won’t decant. It then checks to see if both potions are the of the same type (two attack pots for example, as opposed to a str pot used on an att pot), if they are, call the decant method.</p>
<p><code>//if the items being used are pots
		}else if(getDose(itemUsed)&gt;0 &amp;&amp; getDose(itemUsedOn)&gt;0){
			int dose1 = getDose(itemUsed), index = -1, dose2 =     getDose(itemUsedOn);
			for(int i = 0; i &lt; herbInfo.length; i++){
				if(itemUsed==herbInfo[i][dose1]){
					index = i;
				}
			}
			if(itemUsedOn==herbInfo[index][dose2]){
				decant(dose1, dose2, index);
			}
		}
	}</code></p>
<p>now we have the decant() method. The first thing it does it find out the combined dosage of the two potions (a 2 dose used on a 2 dose would be a 4 dose potion), and then it gets the exact ID for both potions. If the pot variable is greater than 4 (if the combined dosage is greater than 4, for example a 3 dose used on a 2 dose), then it checks the doses. If the doses are equal (the only case where two doses will be equal and greater than 4 two 3 dose potions), then it makes one 4 dose and one 2 dose. If they aren’t equal, (one is a 3 dose, one is a 2 dose), then it checks to see which one is greater and increases that one to 4 and reduces the other to 1. If the pot variable 4 or less and greater than 0, then it just adds to two doses.</p>
<p><code>public void decant(int dose1, int dose2, int index){
		int pot = dose1+dose2, itemUsed = herbInfo[index][dose1],
				itemUsedOn = herbInfo[index][dose2];
		if(pot &gt; 4){
			//if the player tries to use a 3 dose pot on another 3 dose pot
			if(dose1==dose2){
				c.deleteItem(itemUsed, c.getItemSlot(itemUsed), 1);
				c.deleteItem(itemUsedOn, c.getItemSlot(itemUsedOn), 1);
				c.addItem(herbInfo[index][dose1+1], 1);
				c.addItem(herbInfo[index][dose2-1], 1);
				c.sM("You mix the two potions.");
			}else{
				//if the player uses a 3 dose pot on a 2 dose
				c.deleteItem(itemUsed, c.getItemSlot(itemUsed), 1);
				c.deleteItem(itemUsedOn, c.getItemSlot(itemUsedOn), 1);
				//if the first pot is 3 and the second is 2
				if(dose1 &gt; dose2){
					c.addItem(herbInfo[index][dose1+1], 1);
					c.addItem(herbInfo[index][dose2-1], 1);
				}else{
					//if the first is 2 and the second is 3
					c.addItem(herbInfo[index][dose2+1], 1);
					c.addItem(herbInfo[index][dose1-1], 1);
				}
			}
		}
		if(pot &lt;= 4 &amp;&amp; pot &gt; 0){
			c.deleteItem(itemUsed, c.getItemSlot(itemUsed), 1);
			c.deleteItem(itemUsedOn, c.getItemSlot(itemUsedOn), 1);
			c.addItem(herbInfo[index][pot], 1);
			c.addItem(229, 1);
			c.sM("You mix the potions into "+pot+" doses.");
		}
	}</code></p>
<p>the last important method we have (the rest are just accessors) is identify(). This just replaces a unid herb with an ID’d herb. First, it checks to see if the herb is a unid or not. If it does, it gets the index of the unidHerbInfo array so it knows which array to use. It then makes sure the player has the required level, and then deletes the unid and replaces it with the ID’d herb.</p>
<p><code>public void identify(int item){
		//checking whether the herb is unidentified
		if(isUnid(item)){
			int index = 0;
			//finding which herb to use
			for(int i = 0; i &lt; unidHerbInfo.length; i++){
				if(item == unidHerbInfo[i][0])
					index = i;
			}
			//checking whether the player has the req level to identify the herb
			//if so, delete the unid, add the identified herb, give the player herblore xp,
			//and send the message "you identify the herb"
			if(c.playerLevel[15]&gt;=unidHerbInfo[index][2]){
				c.deleteItem(item, 1);
				c.addItem(unidHerbInfo[index][1], 1);
				c.addSkillXP(unidHerbInfo[index][3], 15);
				c.sM("You identify the herb.");
			}else{
				c.sM("You must have a Herblore level of " + unidHerbInfo[index][2] + "to identify this herb.");
			}
		}
	}</code></p>
<p>I hope this helped! The ID’s were taken from PI, although I added the 1 and 2 dose ID’s in and corrected some mistakes that were in the original arrays. All other methods were written entirely from scratch by me. If there’s anything I did wrong or could have done easier, let me know because I’m new to rsps coding (but not new to java).</p>
<p>Thank you!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594/1</link>
        <pubDate>Sat, 30 Jun 2012 21:36:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-447594-1</guid>
        <source url="https://forum.moparisthebest.com/t/delta-herblore-java-class-noob-friendly/447594.rss">[delta] Herblore.java class - noob friendly</source>
      </item>
  </channel>
</rss>
