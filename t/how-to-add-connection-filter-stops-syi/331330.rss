<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>How to add connection Filter *stops SYI*</title>
    <link>https://forum.moparisthebest.com/t/how-to-add-connection-filter-stops-syi/331330</link>
    <description>[b]What does this do for my server?[/b]
This will block out fake client connections
[b]REMEMBER TO BACKUP YOUR FILES BEFORE STARTING[/b]
Files to backup:
server.java
playerhandler.java


[b]Difficulty[/b] 2/10  (just copying and pasting basicly)

[b]Step 1[/b]

Make a new java file called ConnectionFilter.java

and add this in

[code] import java.util.ArrayList;
        
         /**
         * Filters out fast and normal client connection speeds.
         * SYI/DoS Flooding Protection.
         * @author Gnarly
         * 
         */
        public class ConnectionFilter
        {
        
            private static ArrayList&lt;String&gt; HOST_LIST = new ArrayList&lt;String&gt;();
            private static ArrayList&lt;String&gt; CONNECTIONS = new ArrayList&lt;String&gt;();
        
            private int cycle;
            private boolean isFlooder;
            private boolean wasFlooder;
            private boolean wasConnected;
        
            public ConnectionFilter()
            {
                System.out.println(&quot;[ConnectionFilter] - Initialized&quot;);
            }
        
            /**
             * Setter for isFlooder boolean
             * @param isFlooder
             */
            private void setFlooder(boolean isFlooder)
            {
                this.isFlooder = isFlooder;
            }
        
            /**
             * Setter for wasFlooder boolean
             * @param wasFlooder
             */
            private void setWasFlooder(boolean wasFlooder)
            {
                this.wasFlooder = wasFlooder;
            }
            
            /**
             * Setter for wasConnected boolean
             * @param wasConnected
             */
            private void setWasConnected(boolean wasConnected)
            {
                this.wasConnected = wasConnected;
            }
            
            /**
             * @return isFlooder
             */
            private boolean isFlooder()
            {
                return isFlooder;
            }
        
            /**
             * @return isWasFlooder
             */
            private boolean isWasFlooder()
            {
                return wasFlooder;
            }
            
            /**
             * @return wasConnected
             */
            @SuppressWarnings(&quot;unused&quot;)
            private boolean isWasConnected()
            {
                return wasConnected;
            }
            
            /**
             * Setter for HOST_LIST array
             * @param hOST_LIST ArrayList
             */
            public static void setHOST_LIST(ArrayList&lt;String&gt; hOST_LIST)
            {
                HOST_LIST = hOST_LIST;
            }
        
            /**
             * @return ArrayList HOST_LIST
             * @param getHOST_LIST ArrayList
             */
            public static ArrayList&lt;String&gt; getHOST_LIST()
            {
                return HOST_LIST;
            }
        
            /**
             * Setter for CONNECTIONS array
             * @param cONNECTIONS ArrayList
             */
            public static void setCONNECTIONS(ArrayList&lt;String&gt; cONNECTIONS)
            {
                CONNECTIONS = cONNECTIONS;
            }
        
            /**
             * @return ArrayList CONNECTIONS
             * @param getConnections ArrayList
             */
            public static ArrayList&lt;String&gt; getCONNECTIONS()
            {
                return CONNECTIONS;
            }
        
            /**
             * Adds a hostname to the HOST_LIST array list
             * @param host String
             */
            public void add(String host)
            {
                System.out.println((new StringBuilder(&quot;[ConnectionFilter] Temporarily banning &quot;)).append(host).append(&quot; (Massive Connecting Flooding)&quot;).toString());
                getHOST_LIST().add(host);
            }
        
            /**
             * Checks for any blocked hostnames
             * @param host String
             */
            public boolean blocked(String host)
            {
                for (String h : HOST_LIST)
                {
                    if (h.equals(host))
                        return true;
                }
                
                int n = 0;
                for (String h : CONNECTIONS)
                {
                    if (host.equals(h))
                    {
                        n++;
                    }
                }
                
                if (n &gt; 2)
                {
                    add(host);
                    setFlooder(true);
                    return true;
                }
                
                if(isFlooder())
                    return true;
                
                if(isWasFlooder())
                {
                    /* Handle anything you want to do to a person that tryed flooding the server in the past. */
                }
                return false;
            }
        
            /**
             * 500ms Process, used for clearing out the array&#39;s after a given time in the cycle
             */
            public void process()
            {
                if(cycle % 10 == 0)
                {
                    getCONNECTIONS().clear();
                    setWasConnected(true);
                }
                if(cycle % 500 == 0)
                {
                    getHOST_LIST().clear();
                    setFlooder(false);
                    setWasFlooder(true);
                }
                if(cycle &gt; 10000)
                {
                    cycle = 0;
                }
                cycle++;
            }
        
        }[/code]
[b]Step 2[/b]

Open server.java
declare the code below
[code]public static ConnectionFilter ConnectionFilter = null;[/code]
[b]step 3[/b]

And then under
[code]public static void main(String args[]) {[/code]

add

[code]ConnectionFilter = new ConnectionFilter();[/code]

That will start the connection filter when the server starts

[b]step 4[/b]

While still in server.java find
[code]while(!shutdownServer) {[/code]

under it add

[code]ConnectionFilter.process();[/code]


[b]step 5[/b]

Find
[code]playerHandler.newPlayerClient(s, connectingHost);[/code]
Above it add
[code]if(!ConnectionFilter.blocked(connectingHost)) {[/code]
and under it add
[code]} else 
{
    System.out.println(&quot;[ConnectionFilter] Rejected &quot;+connectingHost+&quot; [Massive flooding]&quot;);
    s.close();
    System.gc();
}[/code]

[b]Step 6[/b]

Now open playerhandler.java
Find

[code](new Thread(newClient)).start();[/code]
under that add
[code]ConnectionFilter.getCONNECTIONS().add(connectedFrom);[/code]

Then save and close compile and you are good to go


CREDITS TO GNARLY FOR THE CODES!!!
SOME CREDS TO ME FOR WRITING THE TUTORIAL

hope this helped</description>
    
    <lastBuildDate>Thu, 04 Mar 2010 13:52:35 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/how-to-add-connection-filter-stops-syi/331330.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>How to add connection Filter *stops SYI*</title>
        <dc:creator><![CDATA[@jc22493 Jc22493]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jc22493">@jc22493</a> wrote:</p>
          <blockquote>
              <p>&amp; post your own work.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/how-to-add-connection-filter-stops-syi/331330/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/how-to-add-connection-filter-stops-syi/331330/4</link>
        <pubDate>Thu, 04 Mar 2010 13:52:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-331330-4</guid>
        <source url="https://forum.moparisthebest.com/t/how-to-add-connection-filter-stops-syi/331330.rss">How to add connection Filter *stops SYI*</source>
      </item>
      <item>
        <title>How to add connection Filter *stops SYI*</title>
        <dc:creator><![CDATA[@QuestMaster_2K10 QuestMaster 2K10]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/questmaster_2k10">@QuestMaster_2K10</a> wrote:</p>
          <blockquote>
              <p>This has been released so many times, that there is really no use for this tutorial.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/how-to-add-connection-filter-stops-syi/331330/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/how-to-add-connection-filter-stops-syi/331330/3</link>
        <pubDate>Thu, 04 Mar 2010 04:04:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-331330-3</guid>
        <source url="https://forum.moparisthebest.com/t/how-to-add-connection-filter-stops-syi/331330.rss">How to add connection Filter *stops SYI*</source>
      </item>
      <item>
        <title>How to add connection Filter *stops SYI*</title>
        <dc:creator><![CDATA[@Darthax Darthax]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/darthax">@Darthax</a> wrote:</p>
          <blockquote>
              <p>um RL server checker is a fake client connection why block it â€¦</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/how-to-add-connection-filter-stops-syi/331330/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/how-to-add-connection-filter-stops-syi/331330/2</link>
        <pubDate>Thu, 04 Mar 2010 03:02:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-331330-2</guid>
        <source url="https://forum.moparisthebest.com/t/how-to-add-connection-filter-stops-syi/331330.rss">How to add connection Filter *stops SYI*</source>
      </item>
      <item>
        <title>How to add connection Filter *stops SYI*</title>
        <dc:creator><![CDATA[@pyroshell pyroshell]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pyroshell">@pyroshell</a> wrote:</p>
          <blockquote>
              <p><span class="bbcode-b">What does this do for my server?</span><br>
This will block out fake client connections<br>
<span class="bbcode-b">REMEMBER TO BACKUP YOUR FILES BEFORE STARTING</span><br>
Files to backup:<br>
server.java<br>
playerhandler.java</p>
<p><span class="bbcode-b">Difficulty</span> 2/10  (just copying and pasting basicly)</p>
<p><span class="bbcode-b">Step 1</span></p>
<p>Make a new java file called ConnectionFilter.java</p>
<p>and add this in</p>
<p>[code] import java.util.ArrayList;</p>
<pre><code>     /**
     * Filters out fast and normal client connection speeds.
     * SYI/DoS Flooding Protection.
     * @author Gnarly
     * 
     */
    public class ConnectionFilter
    {
    
        private static ArrayList&lt;String&gt; HOST_LIST = new ArrayList&lt;String&gt;();
        private static ArrayList&lt;String&gt; CONNECTIONS = new ArrayList&lt;String&gt;();
    
        private int cycle;
        private boolean isFlooder;
        private boolean wasFlooder;
        private boolean wasConnected;
    
        public ConnectionFilter()
        {
            System.out.println("[ConnectionFilter] - Initialized");
        }
    
        /**
         * Setter for isFlooder boolean
         * @param isFlooder
         */
        private void setFlooder(boolean isFlooder)
        {
            this.isFlooder = isFlooder;
        }
    
        /**
         * Setter for wasFlooder boolean
         * @param wasFlooder
         */
        private void setWasFlooder(boolean wasFlooder)
        {
            this.wasFlooder = wasFlooder;
        }
        
        /**
         * Setter for wasConnected boolean
         * @param wasConnected
         */
        private void setWasConnected(boolean wasConnected)
        {
            this.wasConnected = wasConnected;
        }
        
        /**
         * @return isFlooder
         */
        private boolean isFlooder()
        {
            return isFlooder;
        }
    
        /**
         * @return isWasFlooder
         */
        private boolean isWasFlooder()
        {
            return wasFlooder;
        }
        
        /**
         * @return wasConnected
         */
        @SuppressWarnings("unused")
        private boolean isWasConnected()
        {
            return wasConnected;
        }
        
        /**
         * Setter for HOST_LIST array
         * @param hOST_LIST ArrayList
         */
        public static void setHOST_LIST(ArrayList&lt;String&gt; hOST_LIST)
        {
            HOST_LIST = hOST_LIST;
        }
    
        /**
         * @return ArrayList HOST_LIST
         * @param getHOST_LIST ArrayList
         */
        public static ArrayList&lt;String&gt; getHOST_LIST()
        {
            return HOST_LIST;
        }
    
        /**
         * Setter for CONNECTIONS array
         * @param cONNECTIONS ArrayList
         */
        public static void setCONNECTIONS(ArrayList&lt;String&gt; cONNECTIONS)
        {
            CONNECTIONS = cONNECTIONS;
        }
    
        /**
         * @return ArrayList CONNECTIONS
         * @param getConnections ArrayList
         */
        public static ArrayList&lt;String&gt; getCONNECTIONS()
        {
            return CONNECTIONS;
        }
    
        /**
         * Adds a hostname to the HOST_LIST array list
         * @param host String
         */
        public void add(String host)
        {
            System.out.println((new StringBuilder("[ConnectionFilter] Temporarily banning ")).append(host).append(" (Massive Connecting Flooding)").toString());
            getHOST_LIST().add(host);
        }
    
        /**
         * Checks for any blocked hostnames
         * @param host String
         */
        public boolean blocked(String host)
        {
            for (String h : HOST_LIST)
            {
                if (h.equals(host))
                    return true;
            }
            
            int n = 0;
            for (String h : CONNECTIONS)
            {
                if (host.equals(h))
                {
                    n++;
                }
            }
            
            if (n &gt; 2)
            {
                add(host);
                setFlooder(true);
                return true;
            }
            
            if(isFlooder())
                return true;
            
            if(isWasFlooder())
            {
                /* Handle anything you want to do to a person that tryed flooding the server in the past. */
            }
            return false;
        }
    
        /**
         * 500ms Process, used for clearing out the array's after a given time in the cycle
         */
        public void process()
        {
            if(cycle % 10 == 0)
            {
                getCONNECTIONS().clear();
                setWasConnected(true);
            }
            if(cycle % 500 == 0)
            {
                getHOST_LIST().clear();
                setFlooder(false);
                setWasFlooder(true);
            }
            if(cycle &gt; 10000)
            {
                cycle = 0;
            }
            cycle++;
        }
    
    }[/code]
</code></pre>
<p><span class="bbcode-b">Step 2</span></p>
<p>Open server.java<br>
declare the code below</p>
<pre><code class="lang-auto">public static ConnectionFilter ConnectionFilter = null;</code></pre>
<p><span class="bbcode-b">step 3</span></p>
<p>And then under</p>
<pre><code class="lang-auto">public static void main(String args[]) {</code></pre>
<p>add</p>
<pre><code class="lang-auto">ConnectionFilter = new ConnectionFilter();</code></pre>
<p>That will start the connection filter when the server starts</p>
<p><span class="bbcode-b">step 4</span></p>
<p>While still in server.java find</p>
<pre><code class="lang-auto">while(!shutdownServer) {</code></pre>
<p>under it add</p>
<pre><code class="lang-auto">ConnectionFilter.process();</code></pre>
<p><span class="bbcode-b">step 5</span></p>
<p>Find</p>
<pre><code class="lang-auto">playerHandler.newPlayerClient(s, connectingHost);</code></pre>
<p>Above it add</p>
<pre><code class="lang-auto">if(!ConnectionFilter.blocked(connectingHost)) {</code></pre>
<p>and under it add</p>
<p><code>} else 
{
    System.out.println("[ConnectionFilter] Rejected "+connectingHost+" [Massive flooding]");
    s.close();
    System.gc();
}</code></p>
<p><span class="bbcode-b">Step 6</span></p>
<p>Now open playerhandler.java<br>
Find</p>
<pre><code class="lang-auto">(new Thread(newClient)).start();</code></pre>
<p>under that add</p>
<pre><code class="lang-auto">ConnectionFilter.getCONNECTIONS().add(connectedFrom);</code></pre>
<p>Then save and close compile and you are good to go</p>
<p>CREDITS TO GNARLY FOR THE CODES!!!<br>
SOME CREDS TO ME FOR WRITING THE TUTORIAL</p>
<p>hope this helped</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/how-to-add-connection-filter-stops-syi/331330/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/how-to-add-connection-filter-stops-syi/331330/1</link>
        <pubDate>Mon, 01 Mar 2010 22:24:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-331330-1</guid>
        <source url="https://forum.moparisthebest.com/t/how-to-add-connection-filter-stops-syi/331330.rss">How to add connection Filter *stops SYI*</source>
      </item>
  </channel>
</rss>
