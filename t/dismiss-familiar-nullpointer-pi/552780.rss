<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Dismiss Familiar Nullpointer [PI]</title>
    <link>https://forum.moparisthebest.com/t/dismiss-familiar-nullpointer-pi/552780</link>
    <description>Well, I have a button to dismiss my familiar, and the code is: [code=java]if(c.lastsummon &gt; 0) {
c.firstslot();
for(int i = 0; i &lt; 29; i += 1)
{
Server.itemHandler.createGroundItem(c, c.storeditems[i], Server.npcHandler.npcs[c.summoningnpcid].absX, Server.npcHandler.npcs[c.summoningnpcid].absY, 1, c.playerId);
c.storeditems[i] = -1;
c.occupied[i] = false;
}
c.lastsummon = -1;
c.totalstored = 0;
c.summoningnpcid = 0;
c.summoningslot = 0;
c.storing = false;
c.sendMessage(&quot;Your BoB items have drop on the floor&quot;);[/code]

okay, so when I click the dismiss familiar button, I get a nullpointer error:
[spoiler][8/3/15 4:23 PM]: java.lang.NullPointerException
[8/3/15 4:23 PM]: 	at server.model.npcs.NPCHandler.process(NPCHandler.java:2225)
[8/3/15 4:23 PM]: 	at server.Server.main(Server.java:183)[/spoiler]

So the error is in NPCHandler in the process method, but I don&#39;t see anything wrong with it. Here is my process method within NPCHandler, if anyone could help me as to fixing this error, help would be much appreciated.

[code=java]public void process() {
		for (int i = 0; i &lt; maxNPCs; i++) {
			if (npcs[i] == null) continue;
			
			npcs[i].clearUpdateFlags();
			
		}
		
		for (int i = 0; i &lt; maxNPCs; i++) {
			if (npcs[i] != null) {

				
if(npcs[i].summon == true) {
							Client c = (Client)Server.playerHandler.players[npcs[i].spawnedBy];	
						

if(c != null &amp;&amp; c.npcIndex &gt; 0) {

follownpc(i, c.npcIndex);
}
if(c != null &amp;&amp; c.playerIndex &lt; 1 &amp;&amp; npcs[i].summon == true) {
if(!npcs[i].underAttack) {
if(!Server.playerHandler.players[npcs[i].spawnedBy].goodDistance(npcs[i].getX(), npcs[i].getY(), Server.playerHandler.players[npcs[i].spawnedBy].getX(), Server.playerHandler.players[npcs[i].spawnedBy].getY(), 2) &amp;&amp; c.npcIndex &lt; 1)
followPlayer(i, c.playerId);
}
} else {
if(c != null &amp;&amp; npcs[i].summon == true) {
if(!Server.playerHandler.players[npcs[i].spawnedBy].goodDistance(npcs[i].getX(), npcs[i].getY(), Server.playerHandler.players[npcs[i].spawnedBy].getX(), Server.playerHandler.players[npcs[i].spawnedBy].getY(), 5) &amp;&amp; c.playerIndex &lt; 1 || c.npcIndex &lt; 1)
{
followPlayer(i, c.playerId);
}
}
	
}			
				if(c != null &amp;&amp; c.lastsummon &gt; 0 &amp;&amp; !Server.playerHandler.players[npcs[i].spawnedBy].goodDistance(npcs[i].getX(), npcs[i].getY(), Server.playerHandler.players[npcs[i].spawnedBy].getX(), Server.playerHandler.players[npcs[i].spawnedBy].getY(), 10) &amp;&amp; npcs[i].summon == true &amp;&amp; !npcs[i].isDead)
				{

npcs[i].isDead = true;
npcs[i].applyDead = true;
c.Summoning.SummonNewNPC(c.lastsummon);
npcs[i].gfx0(1315);
npcs[i].underAttackBy2 = -1;
npcs[i].updateRequired = true;
npcs[i].dirUpdateRequired = true;
npcs[i].getNextWalkingDirection();
				}


if(c != null &amp;&amp; c.lastsummon &lt; 0 || c == null)
{
npcs[i].isDead = true;
npcs[i].applyDead = true;
npcs[i].summon = false;
npcs[i].underAttackBy2 = -1;
}


if(c != null &amp;&amp; npcs[i].actionTimer &lt; 1 &amp;&amp; npcs[i].summon == true)
{
if(c.playerIndex &gt; 0)
{
	Client o = (Client)Server.playerHandler.players[c.playerIndex];
if(o != null) {
if(npcs[i].IsAttackingPerson = true &amp;&amp; o.inMulti())
{
followPlayer(i, o.playerId);
attackPlayer(o, i);
npcs[i].index = o.playerId;
npcs[i].actionTimer = 7;
}
}
}
}
		                }

if (npcs[i].npcType == 3782){
	if (Misc.random(10) == 4)
	npcs[i].forceChat(voidKnightTalk[Misc.random3(voidKnightTalk.length)]);
	}
if (npcs[i].npcType == 1813){
	if (Misc.random(10) == 4)
	npcs[i].forceChat(WarriorChat[Misc.random3(WarriorChat.length)]);
	}
                                if (npcs[i].npcType == 692) { 
                                        if (Misc.random2(2) &lt;= 3) {
                                                npcs[i].updateRequired = true;
                                                npcs[i].forceChat(&quot;Get ya Fresh &#39;ome grown Weed &#39;ere, 1 Dollar a Gram!&quot;);
                                        }
                                } 
                                
                                if (npcs[i].npcType == 162) { 
                                        if (Misc.random2(2) &lt;= 3) {
                                                npcs[i].updateRequired = true;
                                                npcs[i].forceChat(&quot;C&#39;mon Maggot! Work! Work! Work! I wanna see sweat!&quot;);
                                        }
                                } 

                                if (npcs[i].npcType == 2832) { 
                                        if (Misc.random2(2) &lt;= 3) {
                                                npcs[i].updateRequired = true;
                                                npcs[i].forceChat(&quot;Register on the forums at http://legacy-ps.com&quot;);
                                        }
                                } 
             
                                           

				if (npcs[i].actionTimer &gt; 0) {
					npcs[i].actionTimer--;
                                }
				if (npcs[i].freezeTimer &gt; 0) {
					npcs[i].freezeTimer--;
				}
				if (npcs[i].hitDelayTimer &gt; 0) {
					npcs[i].hitDelayTimer--;
				}
				
				if (npcs[i].hitDelayTimer == 1) {
					npcs[i].hitDelayTimer = 0;
					applyDamage(i);
				}
				
				if(npcs[i].attackTimer &gt; 0) {
					npcs[i].attackTimer--;
				}
			
				if(npcs[i].spawnedBy &gt; 0) { // delete summons npc
					if(Server.playerHandler.players[npcs[i].spawnedBy] == null
					|| Server.playerHandler.players[npcs[i].spawnedBy].heightLevel != npcs[i].heightLevel	
					|| Server.playerHandler.players[npcs[i].spawnedBy].respawnTimer &gt; 0 
					|| !Server.playerHandler.players[npcs[i].spawnedBy].goodDistance(npcs[i].getX(), npcs[i].getY(), Server.playerHandler.players[npcs[i].spawnedBy].getX(), Server.playerHandler.players[npcs[i].spawnedBy].getY(), 10)) {
							
						if(Server.playerHandler.players[npcs[i].spawnedBy] != null) {
							for(int o = 0; o &lt; Server.playerHandler.players[npcs[i].spawnedBy].barrowsNpcs.length; o++){
								if(npcs[i].npcType == Server.playerHandler.players[npcs[i].spawnedBy].barrowsNpcs[o][0]) {
									if (Server.playerHandler.players[npcs[i].spawnedBy].barrowsNpcs[o][1] == 1)
										Server.playerHandler.players[npcs[i].spawnedBy].barrowsNpcs[o][1] = 0;
								}
							}
						}
						npcs[i] = null;
					}
				}
				if (npcs[i] == null) continue;
				
				/**
				* Attacking player
				**/
				if (isAggressive(i) &amp;&amp; !npcs[i].underAttack &amp;&amp; !npcs[i].isDead &amp;&amp; !switchesAttackers(i)) {
					npcs[i].killerId = getCloseRandomPlayer(i);
				} else if (isAggressive(i) &amp;&amp; !npcs[i].underAttack &amp;&amp; !npcs[i].isDead &amp;&amp; switchesAttackers(i)) {
					npcs[i].killerId = getCloseRandomPlayer(i);
				}
				
				if (System.currentTimeMillis() - npcs[i].lastDamageTaken &gt; 5000)
					npcs[i].underAttackBy = 0;
				
				if((npcs[i].killerId &gt; 0 || npcs[i].underAttack) &amp;&amp; !npcs[i].walkingHome &amp;&amp; retaliates(npcs[i].npcType)) {
					if(!npcs[i].isDead) {
						int p = npcs[i].killerId;
						if(Server.playerHandler.players[p] != null) {
							Client c = (Client) Server.playerHandler.players[p];					
							followPlayer(i, c.playerId);
							if (npcs[i] == null) continue;
							if(npcs[i].attackTimer == 0) {
								if(c != null) {
									attackPlayer(c, i);
								} else {
									npcs[i].killerId = 0;
									npcs[i].underAttack = false;
									npcs[i].facePlayer(0);
								}
							}
						} else {
							npcs[i].killerId = 0;
							npcs[i].underAttack = false;
							npcs[i].facePlayer(0);
						}
					}
				}

			/**
			* Random walking and walking home
			**/
			if (npcs[i] == null) continue;
			if((!npcs[i].underAttack || npcs[i].walkingHome) &amp;&amp; npcs[i].randomWalk &amp;&amp; !npcs[i].isDead) {
				npcs[i].facePlayer(0);
				npcs[i].killerId = 0;	
				if(npcs[i].spawnedBy == 0) {
				if((npcs[i].absX &gt; npcs[i].makeX + Config.NPC_RANDOM_WALK_DISTANCE) || (npcs[i].absX &lt; npcs[i].makeX - Config.NPC_RANDOM_WALK_DISTANCE) || (npcs[i].absY &gt; npcs[i].makeY + Config.NPC_RANDOM_WALK_DISTANCE) || (npcs[i].absY &lt; npcs[i].makeY - Config.NPC_RANDOM_WALK_DISTANCE)) {
					npcs[i].walkingHome = true;
				}
				}

				if (npcs[i].walkingHome &amp;&amp; npcs[i].absX == npcs[i].makeX &amp;&amp; npcs[i].absY == npcs[i].makeY) {
				npcs[i].walkingHome = false;
				} else if(npcs[i].walkingHome) {
				npcs[i].moveX = GetMove(npcs[i].absX, npcs[i].makeX);
		      		npcs[i].moveY = GetMove(npcs[i].absY, npcs[i].makeY);
				npcs[i].getNextNPCMovement(i); 
				npcs[i].updateRequired = true;
				}
				if (npcs[i].walkingType &gt;= 0) {
				switch(npcs[i].walkingType) {

				case 5:
					npcs[i].turnNpc(npcs[i].absX-1, npcs[i].absY);
					break;

				case 4:
					npcs[i].turnNpc(npcs[i].absX+1, npcs[i].absY);
					break;

				case 3:
					npcs[i].turnNpc(npcs[i].absX, npcs[i].absY-1);
					break;
				case 2:
					npcs[i].turnNpc(npcs[i].absX, npcs[i].absY+1);
					break;

				default:
					if (npcs[i].walkingType &gt;= 0) {
						npcs[i].turnNpc(npcs[i].absX, npcs[i].absY); //makes it when npcs move they dont turn back to one direction
					}
					break;
				}
				}
				if(npcs[i].walkingType == 1) {
				if(Misc.random(3)== 1 &amp;&amp; !npcs[i].walkingHome) {
					int MoveX = 0;
					int MoveY = 0;		
					int Rnd = Misc.random(9);
					if (Rnd == 1) {
						MoveX = 1;
						MoveY = 1;
					} else if (Rnd == 2) {
						MoveX = -1;
					} else if (Rnd == 3) {
						MoveY = -1;
					} else if (Rnd == 4) {
						MoveX = 1;
					} else if (Rnd == 5) {
						MoveY = 1;
					} else if (Rnd == 6) {
						MoveX = -1;
						MoveY = -1;
					} else if (Rnd == 7) {
						MoveX = -1;
						MoveY = 1;
					} else if (Rnd == 8) {
						MoveX = 1;
						MoveY = -1;
					}
							
					if (MoveX == 1) {
						if (npcs[i].absX + MoveX &lt; npcs[i].makeX + 1) {
						npcs[i].moveX = MoveX;
						} else {
						npcs[i].moveX = -1;
						}
					}
					
					if (MoveX == -1) {
						if (npcs[i].absX - MoveX &gt; npcs[i].makeX - 1)  {
						npcs[i].moveX = MoveX;
						} else {
						npcs[i].moveX = -1;
						}
					}
					
					if(MoveY == 1) {
						if(npcs[i].absY + MoveY &lt; npcs[i].makeY + 1) {
						npcs[i].moveY = MoveY;
						} else {
						npcs[i].moveY = -1;
						}
					}
					
					if(MoveY == -1) {
						if(npcs[i].absY - MoveY &gt; npcs[i].makeY - 1)  {
						npcs[i].moveY = MoveY;
						} else {
						npcs[i].moveY = -1;
						}
					}
						

					int x = (npcs[i].absX + npcs[i].moveX);
					int y = (npcs[i].absY + npcs[i].moveY);
					handleClipping(i);
					npcs[i].getNextNPCMovement(i); 
					npcs[i].updateRequired = true;
				}
				}
			}
		
				
							
				if (npcs[i].isDead == true) {
					if (npcs[i].actionTimer == 0 &amp;&amp; npcs[i].applyDead == false &amp;&amp; npcs[i].needRespawn == false) {
						npcs[i].updateRequired = true;
						npcs[i].facePlayer(0);
						npcs[i].killedBy = getNpcKillerId(i);
						npcs[i].animNumber = getDeadEmote(i); // dead emote
						npcs[i].animUpdateRequired = true;
						npcs[i].freezeTimer = 0;
						npcs[i].applyDead = true;
						killedBarrow(i);
						if (isFightCaveNpc(i))
							killedTzhaar(i);
					if(npcs[i].summon == true)
						npcs[i].summon = false;
						npcs[i].actionTimer = 4; // delete time
						resetPlayersInCombat(i);
						/*if (npcs[i].npcType == 1158){
							handleKalpite(i);
						}*/
						
						
					} else if (npcs[i] != null &amp;&amp; npcs[i].actionTimer == 0 &amp;&amp; npcs[i].applyDead == true &amp;&amp;  npcs[i].needRespawn == false) {
						//if (npcs[i] != null) {
						npcs[i].needRespawn = true;
						npcs[i].actionTimer = getRespawnTime(i); // respawn time
						dropItems(i); // npc drops items!
						Client c = (Client)PlayerHandler.players[NPCHandler.npcs[i].killedBy];
						c.getSlayer().appendSlayerExperience(i);
						//appendKillCount(i);
						npcs[i].absX = npcs[i].makeX;
						npcs[i].absY = npcs[i].makeY;				
						npcs[i].HP = npcs[i].MaxHP;
						npcs[i].animNumber = 0x328;
						npcs[i].updateRequired = true;
						npcs[i].animUpdateRequired = true;
						if (npcs[i].npcType &gt;= 2440 &amp;&amp; npcs[i].npcType &lt;= 2446) {
							Server.objectManager.removeObject(npcs[i].absX, npcs[i].absY);
						}
						if (npcs[i].npcType == 2745) {
							handleJadDeath(i);
						}
						if (npcs[i].npcType == 3491) {
							handleRFDDeath(i);
						}
						
						if (npcs[i] != null &amp;&amp; npcs[i].npcType != 1158){
							if (!npcs[i].needRespawn){
								npcs[i] = null;
								for (int j = 1; j &lt; Config.MAX_PLAYERS; j++) {
									if (Server.playerHandler.players[j] != null) {
										Server.playerHandler.players[j].RebuildNPCList = true;
									}
								}
								continue;
							}
							npcs[i].needRespawn = true;
							npcs[i].actionTimer = 30;
							npcs[i].absX = npcs[i].makeX;
							npcs[i].absY = npcs[i].makeY - 1;
						} else if (npcs[i] != null &amp;&amp; npcs[i].npcType == 1158) {
							npcs[i] = null;
							for (int j = 1; j &lt; Config.MAX_PLAYERS; j++) {
								if (Server.playerHandler.players[j] != null){
									Server.playerHandler.players[j].RebuildNPCList = true;
								}
							}
						}
						
					} else if (npcs[i].actionTimer == 0 &amp;&amp; npcs[i].needRespawn == true &amp;&amp; npcs[i].npcType != 6142 &amp;&amp; npcs[i].npcType != 6143 &amp;&amp; npcs[i].npcType != 6144 &amp;&amp; npcs[i].npcType != 6145) {					
						if(npcs[i].spawnedBy &gt; 0) {
							npcs[i] = null;
						} else {
							/*if (npcs[i].actionTimer &lt;= 0 &amp;&amp; npcs[i].needRespawn &amp;&amp; npcs[i].NeedsRespawn) {
							for (int j = 1; j &lt; Config.MAX_PLAYERS; j++) {
								if (Server.playerHandler.players[j] != null) {
									Server.playerHandler.players[j].RebuildNPCList = true;
								}
							}*/
								int type = npcs[i].npcType;
								if (type == 1160)
									type = 1158;
								int x = npcs[i].makeX;
								int y = npcs[i].makeY;
								int height = npcs[i].heightLevel;
								int walk = npcs[i].walkingType;
								int mHp = npcs[i].MaxHP;
								int mHit = npcs[i].maxHit;
								int attack = npcs[i].attack;	
								int defence = npcs[i].defence;
								
								npcs[i] = null;
								newNPC(type, x, y, height, walk, mHp, mHit, attack, defence);
						}
					}
				}
			}
		}
	}[/code]

Thanks in advance :D</description>
    
    <lastBuildDate>Mon, 03 Aug 2015 21:52:14 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/dismiss-familiar-nullpointer-pi/552780.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Dismiss Familiar Nullpointer [PI]</title>
        <dc:creator><![CDATA[@beale beale]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/beale">@beale</a> wrote:</p>
          <blockquote>
              <p>ohh, that’s right I did fix up slayer… <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"> thanks man i feel stupid  :palm:</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dismiss-familiar-nullpointer-pi/552780/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dismiss-familiar-nullpointer-pi/552780/5</link>
        <pubDate>Mon, 03 Aug 2015 21:52:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-552780-5</guid>
        <source url="https://forum.moparisthebest.com/t/dismiss-familiar-nullpointer-pi/552780.rss">Dismiss Familiar Nullpointer [PI]</source>
      </item>
      <item>
        <title>Dismiss Familiar Nullpointer [PI]</title>
        <dc:creator><![CDATA[@Giselle Giselle]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/giselle">@Giselle</a> wrote:</p>
          <blockquote>
              <p>[quote=“beale, post:3, topic:552780”][quote author=Giselle link=topic=671696.msg4491917#msg4491917 date=1438633850]<br>
What is line <span class="bbcode-b">2225 </span>in <span class="bbcode-b">NPCHandler </span>?<br>
[/quote]</p>
<p>c.getSlayer().appendSlayerExperience(i);[/quote]</p>
<p>I’d say that getSlayer() is most likely returning <span class="bbcode-b">null</span>, in that case.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dismiss-familiar-nullpointer-pi/552780/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dismiss-familiar-nullpointer-pi/552780/4</link>
        <pubDate>Mon, 03 Aug 2015 21:13:36 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-552780-4</guid>
        <source url="https://forum.moparisthebest.com/t/dismiss-familiar-nullpointer-pi/552780.rss">Dismiss Familiar Nullpointer [PI]</source>
      </item>
      <item>
        <title>Dismiss Familiar Nullpointer [PI]</title>
        <dc:creator><![CDATA[@beale beale]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/beale">@beale</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="552780">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/giselle/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Giselle:</div>
<blockquote>
<p>What is line <span class="bbcode-b">2225 </span>in <span class="bbcode-b">NPCHandler </span>?</p>
</blockquote>
</aside>
<p>c.getSlayer().appendSlayerExperience(i);</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dismiss-familiar-nullpointer-pi/552780/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dismiss-familiar-nullpointer-pi/552780/3</link>
        <pubDate>Mon, 03 Aug 2015 20:36:21 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-552780-3</guid>
        <source url="https://forum.moparisthebest.com/t/dismiss-familiar-nullpointer-pi/552780.rss">Dismiss Familiar Nullpointer [PI]</source>
      </item>
      <item>
        <title>Dismiss Familiar Nullpointer [PI]</title>
        <dc:creator><![CDATA[@Giselle Giselle]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/giselle">@Giselle</a> wrote:</p>
          <blockquote>
              <p>What is line <span class="bbcode-b">2225 </span>in <span class="bbcode-b">NPCHandler </span>?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dismiss-familiar-nullpointer-pi/552780/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dismiss-familiar-nullpointer-pi/552780/2</link>
        <pubDate>Mon, 03 Aug 2015 20:30:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-552780-2</guid>
        <source url="https://forum.moparisthebest.com/t/dismiss-familiar-nullpointer-pi/552780.rss">Dismiss Familiar Nullpointer [PI]</source>
      </item>
      <item>
        <title>Dismiss Familiar Nullpointer [PI]</title>
        <dc:creator><![CDATA[@beale beale]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/beale">@beale</a> wrote:</p>
          <blockquote>
              <p>Well, I have a button to dismiss my familiar, and the code is: <code>if(c.lastsummon &gt; 0) {
c.firstslot();
for(int i = 0; i &lt; 29; i += 1)
{
Server.itemHandler.createGroundItem(c, c.storeditems[i], Server.npcHandler.npcs[c.summoningnpcid].absX, Server.npcHandler.npcs[c.summoningnpcid].absY, 1, c.playerId);
c.storeditems[i] = -1;
c.occupied[i] = false;
}
c.lastsummon = -1;
c.totalstored = 0;
c.summoningnpcid = 0;
c.summoningslot = 0;
c.storing = false;
c.sendMessage("Your BoB items have drop on the floor");</code></p>
<p>okay, so when I click the dismiss familiar button, I get a nullpointer error:<br>
[spoiler][8/3/15 4:23 PM]: java.lang.NullPointerException<br>
[8/3/15 4:23 PM]: 	at server.model.npcs.NPCHandler.process(NPCHandler.java:2225)<br>
[8/3/15 4:23 PM]: 	at server.Server.main(Server.java:183)[/spoiler]</p>
<p>So the error is in NPCHandler in the process method, but I don’t see anything wrong with it. Here is my process method within NPCHandler, if anyone could help me as to fixing this error, help would be much appreciated.</p>
<p>[code=java]public void process() {<br>
for (int i = 0; i &lt; maxNPCs; i++) {<br>
if (npcs[i] == null) continue;</p>
<pre><code>		npcs[i].clearUpdateFlags();
		
	}
	
	for (int i = 0; i &lt; maxNPCs; i++) {
		if (npcs[i] != null) {
</code></pre>
<p>if(npcs[i].summon == true) {<br>
Client c = (Client)Server.playerHandler.players[npcs[i].spawnedBy];</p>
<p>if(c != null &amp;&amp; c.npcIndex &gt; 0) {</p>
<p>follownpc(i, c.npcIndex);<br>
}<br>
if(c != null &amp;&amp; c.playerIndex &lt; 1 &amp;&amp; npcs[i].summon == true) {<br>
if(!npcs[i].underAttack) {<br>
if(!Server.playerHandler.players[npcs[i].spawnedBy].goodDistance(npcs[i].getX(), npcs[i].getY(), Server.playerHandler.players[npcs[i].spawnedBy].getX(), Server.playerHandler.players[npcs[i].spawnedBy].getY(), 2) &amp;&amp; c.npcIndex &lt; 1)<br>
followPlayer(i, c.playerId);<br>
}<br>
} else {<br>
if(c != null &amp;&amp; npcs[i].summon == true) {<br>
if(!Server.playerHandler.players[npcs[i].spawnedBy].goodDistance(npcs[i].getX(), npcs[i].getY(), Server.playerHandler.players[npcs[i].spawnedBy].getX(), Server.playerHandler.players[npcs[i].spawnedBy].getY(), 5) &amp;&amp; c.playerIndex &lt; 1 || c.npcIndex &lt; 1)<br>
{<br>
followPlayer(i, c.playerId);<br>
}<br>
}</p>
<p>}			<br>
if(c != null &amp;&amp; c.lastsummon &gt; 0 &amp;&amp; !Server.playerHandler.players[npcs[i].spawnedBy].goodDistance(npcs[i].getX(), npcs[i].getY(), Server.playerHandler.players[npcs[i].spawnedBy].getX(), Server.playerHandler.players[npcs[i].spawnedBy].getY(), 10) &amp;&amp; npcs[i].summon == true &amp;&amp; !npcs[i].isDead)<br>
{</p>
<p>npcs[i].isDead = true;<br>
npcs[i].applyDead = true;<br>
c.Summoning.SummonNewNPC(c.lastsummon);<br>
npcs[i].gfx0(1315);<br>
npcs[i].underAttackBy2 = -1;<br>
npcs[i].updateRequired = true;<br>
npcs[i].dirUpdateRequired = true;<br>
npcs[i].getNextWalkingDirection();<br>
}</p>
<p>if(c != null &amp;&amp; c.lastsummon &lt; 0 || c == null)<br>
{<br>
npcs[i].isDead = true;<br>
npcs[i].applyDead = true;<br>
npcs[i].summon = false;<br>
npcs[i].underAttackBy2 = -1;<br>
}</p>
<p>if(c != null &amp;&amp; npcs[i].actionTimer &lt; 1 &amp;&amp; npcs[i].summon == true)<br>
{<br>
if(c.playerIndex &gt; 0)<br>
{<br>
Client o = (Client)Server.playerHandler.players[c.playerIndex];<br>
if(o != null) {<br>
if(npcs[i].IsAttackingPerson = true &amp;&amp; o.inMulti())<br>
{<br>
followPlayer(i, o.playerId);<br>
attackPlayer(o, i);<br>
npcs[i].index = o.playerId;<br>
npcs[i].actionTimer = 7;<br>
}<br>
}<br>
}<br>
}<br>
}</p>
<p>if (npcs[i].npcType == 3782){<br>
if (Misc.random(10) == 4)<br>
npcs[i].forceChat(voidKnightTalk[Misc.random3(voidKnightTalk.length)]);<br>
}<br>
if (npcs[i].npcType == 1813){<br>
if (Misc.random(10) == 4)<br>
npcs[i].forceChat(WarriorChat[Misc.random3(WarriorChat.length)]);<br>
}<br>
if (npcs[i].npcType == 692) {<br>
if (Misc.random2(2) &lt;= 3) {<br>
npcs[i].updateRequired = true;<br>
npcs[i].forceChat(“Get ya Fresh 'ome grown Weed 'ere, 1 Dollar a Gram!”);<br>
}<br>
}</p>
<pre><code>                            if (npcs[i].npcType == 162) { 
                                    if (Misc.random2(2) &lt;= 3) {
                                            npcs[i].updateRequired = true;
                                            npcs[i].forceChat("C'mon Maggot! Work! Work! Work! I wanna see sweat!");
                                    }
                            } 

                            if (npcs[i].npcType == 2832) { 
                                    if (Misc.random2(2) &lt;= 3) {
                                            npcs[i].updateRequired = true;
                                            npcs[i].forceChat("Register on the forums at http://legacy-ps.com");
                                    }
                            } 
         
                                       

			if (npcs[i].actionTimer &gt; 0) {
				npcs[i].actionTimer--;
                            }
			if (npcs[i].freezeTimer &gt; 0) {
				npcs[i].freezeTimer--;
			}
			if (npcs[i].hitDelayTimer &gt; 0) {
				npcs[i].hitDelayTimer--;
			}
			
			if (npcs[i].hitDelayTimer == 1) {
				npcs[i].hitDelayTimer = 0;
				applyDamage(i);
			}
			
			if(npcs[i].attackTimer &gt; 0) {
				npcs[i].attackTimer--;
			}
		
			if(npcs[i].spawnedBy &gt; 0) { // delete summons npc
				if(Server.playerHandler.players[npcs[i].spawnedBy] == null
				|| Server.playerHandler.players[npcs[i].spawnedBy].heightLevel != npcs[i].heightLevel	
				|| Server.playerHandler.players[npcs[i].spawnedBy].respawnTimer &gt; 0 
				|| !Server.playerHandler.players[npcs[i].spawnedBy].goodDistance(npcs[i].getX(), npcs[i].getY(), Server.playerHandler.players[npcs[i].spawnedBy].getX(), Server.playerHandler.players[npcs[i].spawnedBy].getY(), 10)) {
						
					if(Server.playerHandler.players[npcs[i].spawnedBy] != null) {
						for(int o = 0; o &lt; Server.playerHandler.players[npcs[i].spawnedBy].barrowsNpcs.length; o++){
							if(npcs[i].npcType == Server.playerHandler.players[npcs[i].spawnedBy].barrowsNpcs[o][0]) {
								if (Server.playerHandler.players[npcs[i].spawnedBy].barrowsNpcs[o][1] == 1)
									Server.playerHandler.players[npcs[i].spawnedBy].barrowsNpcs[o][1] = 0;
							}
						}
					}
					npcs[i] = null;
				}
			}
			if (npcs[i] == null) continue;
			
			/**
			* Attacking player
			**/
			if (isAggressive(i) &amp;&amp; !npcs[i].underAttack &amp;&amp; !npcs[i].isDead &amp;&amp; !switchesAttackers(i)) {
				npcs[i].killerId = getCloseRandomPlayer(i);
			} else if (isAggressive(i) &amp;&amp; !npcs[i].underAttack &amp;&amp; !npcs[i].isDead &amp;&amp; switchesAttackers(i)) {
				npcs[i].killerId = getCloseRandomPlayer(i);
			}
			
			if (System.currentTimeMillis() - npcs[i].lastDamageTaken &gt; 5000)
				npcs[i].underAttackBy = 0;
			
			if((npcs[i].killerId &gt; 0 || npcs[i].underAttack) &amp;&amp; !npcs[i].walkingHome &amp;&amp; retaliates(npcs[i].npcType)) {
				if(!npcs[i].isDead) {
					int p = npcs[i].killerId;
					if(Server.playerHandler.players[p] != null) {
						Client c = (Client) Server.playerHandler.players[p];					
						followPlayer(i, c.playerId);
						if (npcs[i] == null) continue;
						if(npcs[i].attackTimer == 0) {
							if(c != null) {
								attackPlayer(c, i);
							} else {
								npcs[i].killerId = 0;
								npcs[i].underAttack = false;
								npcs[i].facePlayer(0);
							}
						}
					} else {
						npcs[i].killerId = 0;
						npcs[i].underAttack = false;
						npcs[i].facePlayer(0);
					}
				}
			}

		/**
		* Random walking and walking home
		**/
		if (npcs[i] == null) continue;
		if((!npcs[i].underAttack || npcs[i].walkingHome) &amp;&amp; npcs[i].randomWalk &amp;&amp; !npcs[i].isDead) {
			npcs[i].facePlayer(0);
			npcs[i].killerId = 0;	
			if(npcs[i].spawnedBy == 0) {
			if((npcs[i].absX &gt; npcs[i].makeX + Config.NPC_RANDOM_WALK_DISTANCE) || (npcs[i].absX &lt; npcs[i].makeX - Config.NPC_RANDOM_WALK_DISTANCE) || (npcs[i].absY &gt; npcs[i].makeY + Config.NPC_RANDOM_WALK_DISTANCE) || (npcs[i].absY &lt; npcs[i].makeY - Config.NPC_RANDOM_WALK_DISTANCE)) {
				npcs[i].walkingHome = true;
			}
			}

			if (npcs[i].walkingHome &amp;&amp; npcs[i].absX == npcs[i].makeX &amp;&amp; npcs[i].absY == npcs[i].makeY) {
			npcs[i].walkingHome = false;
			} else if(npcs[i].walkingHome) {
			npcs[i].moveX = GetMove(npcs[i].absX, npcs[i].makeX);
	      		npcs[i].moveY = GetMove(npcs[i].absY, npcs[i].makeY);
			npcs[i].getNextNPCMovement(i); 
			npcs[i].updateRequired = true;
			}
			if (npcs[i].walkingType &gt;= 0) {
			switch(npcs[i].walkingType) {

			case 5:
				npcs[i].turnNpc(npcs[i].absX-1, npcs[i].absY);
				break;

			case 4:
				npcs[i].turnNpc(npcs[i].absX+1, npcs[i].absY);
				break;

			case 3:
				npcs[i].turnNpc(npcs[i].absX, npcs[i].absY-1);
				break;
			case 2:
				npcs[i].turnNpc(npcs[i].absX, npcs[i].absY+1);
				break;

			default:
				if (npcs[i].walkingType &gt;= 0) {
					npcs[i].turnNpc(npcs[i].absX, npcs[i].absY); //makes it when npcs move they dont turn back to one direction
				}
				break;
			}
			}
			if(npcs[i].walkingType == 1) {
			if(Misc.random(3)== 1 &amp;&amp; !npcs[i].walkingHome) {
				int MoveX = 0;
				int MoveY = 0;		
				int Rnd = Misc.random(9);
				if (Rnd == 1) {
					MoveX = 1;
					MoveY = 1;
				} else if (Rnd == 2) {
					MoveX = -1;
				} else if (Rnd == 3) {
					MoveY = -1;
				} else if (Rnd == 4) {
					MoveX = 1;
				} else if (Rnd == 5) {
					MoveY = 1;
				} else if (Rnd == 6) {
					MoveX = -1;
					MoveY = -1;
				} else if (Rnd == 7) {
					MoveX = -1;
					MoveY = 1;
				} else if (Rnd == 8) {
					MoveX = 1;
					MoveY = -1;
				}
						
				if (MoveX == 1) {
					if (npcs[i].absX + MoveX &lt; npcs[i].makeX + 1) {
					npcs[i].moveX = MoveX;
					} else {
					npcs[i].moveX = -1;
					}
				}
				
				if (MoveX == -1) {
					if (npcs[i].absX - MoveX &gt; npcs[i].makeX - 1)  {
					npcs[i].moveX = MoveX;
					} else {
					npcs[i].moveX = -1;
					}
				}
				
				if(MoveY == 1) {
					if(npcs[i].absY + MoveY &lt; npcs[i].makeY + 1) {
					npcs[i].moveY = MoveY;
					} else {
					npcs[i].moveY = -1;
					}
				}
				
				if(MoveY == -1) {
					if(npcs[i].absY - MoveY &gt; npcs[i].makeY - 1)  {
					npcs[i].moveY = MoveY;
					} else {
					npcs[i].moveY = -1;
					}
				}
					

				int x = (npcs[i].absX + npcs[i].moveX);
				int y = (npcs[i].absY + npcs[i].moveY);
				handleClipping(i);
				npcs[i].getNextNPCMovement(i); 
				npcs[i].updateRequired = true;
			}
			}
		}
	
			
						
			if (npcs[i].isDead == true) {
				if (npcs[i].actionTimer == 0 &amp;&amp; npcs[i].applyDead == false &amp;&amp; npcs[i].needRespawn == false) {
					npcs[i].updateRequired = true;
					npcs[i].facePlayer(0);
					npcs[i].killedBy = getNpcKillerId(i);
					npcs[i].animNumber = getDeadEmote(i); // dead emote
					npcs[i].animUpdateRequired = true;
					npcs[i].freezeTimer = 0;
					npcs[i].applyDead = true;
					killedBarrow(i);
					if (isFightCaveNpc(i))
						killedTzhaar(i);
				if(npcs[i].summon == true)
					npcs[i].summon = false;
					npcs[i].actionTimer = 4; // delete time
					resetPlayersInCombat(i);
					/*if (npcs[i].npcType == 1158){
						handleKalpite(i);
					}*/
					
					
				} else if (npcs[i] != null &amp;&amp; npcs[i].actionTimer == 0 &amp;&amp; npcs[i].applyDead == true &amp;&amp;  npcs[i].needRespawn == false) {
					//if (npcs[i] != null) {
					npcs[i].needRespawn = true;
					npcs[i].actionTimer = getRespawnTime(i); // respawn time
					dropItems(i); // npc drops items!
					Client c = (Client)PlayerHandler.players[NPCHandler.npcs[i].killedBy];
					c.getSlayer().appendSlayerExperience(i);
					//appendKillCount(i);
					npcs[i].absX = npcs[i].makeX;
					npcs[i].absY = npcs[i].makeY;				
					npcs[i].HP = npcs[i].MaxHP;
					npcs[i].animNumber = 0x328;
					npcs[i].updateRequired = true;
					npcs[i].animUpdateRequired = true;
					if (npcs[i].npcType &gt;= 2440 &amp;&amp; npcs[i].npcType &lt;= 2446) {
						Server.objectManager.removeObject(npcs[i].absX, npcs[i].absY);
					}
					if (npcs[i].npcType == 2745) {
						handleJadDeath(i);
					}
					if (npcs[i].npcType == 3491) {
						handleRFDDeath(i);
					}
					
					if (npcs[i] != null &amp;&amp; npcs[i].npcType != 1158){
						if (!npcs[i].needRespawn){
							npcs[i] = null;
							for (int j = 1; j &lt; Config.MAX_PLAYERS; j++) {
								if (Server.playerHandler.players[j] != null) {
									Server.playerHandler.players[j].RebuildNPCList = true;
								}
							}
							continue;
						}
						npcs[i].needRespawn = true;
						npcs[i].actionTimer = 30;
						npcs[i].absX = npcs[i].makeX;
						npcs[i].absY = npcs[i].makeY - 1;
					} else if (npcs[i] != null &amp;&amp; npcs[i].npcType == 1158) {
						npcs[i] = null;
						for (int j = 1; j &lt; Config.MAX_PLAYERS; j++) {
							if (Server.playerHandler.players[j] != null){
								Server.playerHandler.players[j].RebuildNPCList = true;
							}
						}
					}
					
				} else if (npcs[i].actionTimer == 0 &amp;&amp; npcs[i].needRespawn == true &amp;&amp; npcs[i].npcType != 6142 &amp;&amp; npcs[i].npcType != 6143 &amp;&amp; npcs[i].npcType != 6144 &amp;&amp; npcs[i].npcType != 6145) {					
					if(npcs[i].spawnedBy &gt; 0) {
						npcs[i] = null;
					} else {
						/*if (npcs[i].actionTimer &lt;= 0 &amp;&amp; npcs[i].needRespawn &amp;&amp; npcs[i].NeedsRespawn) {
						for (int j = 1; j &lt; Config.MAX_PLAYERS; j++) {
							if (Server.playerHandler.players[j] != null) {
								Server.playerHandler.players[j].RebuildNPCList = true;
							}
						}*/
							int type = npcs[i].npcType;
							if (type == 1160)
								type = 1158;
							int x = npcs[i].makeX;
							int y = npcs[i].makeY;
							int height = npcs[i].heightLevel;
							int walk = npcs[i].walkingType;
							int mHp = npcs[i].MaxHP;
							int mHit = npcs[i].maxHit;
							int attack = npcs[i].attack;	
							int defence = npcs[i].defence;
							
							npcs[i] = null;
							newNPC(type, x, y, height, walk, mHp, mHit, attack, defence);
					}
				}
			}
		}
	}
}[/code]
</code></pre>
<p>Thanks in advance <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/dismiss-familiar-nullpointer-pi/552780/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/dismiss-familiar-nullpointer-pi/552780/1</link>
        <pubDate>Mon, 03 Aug 2015 20:26:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-552780-1</guid>
        <source url="https://forum.moparisthebest.com/t/dismiss-familiar-nullpointer-pi/552780.rss">Dismiss Familiar Nullpointer [PI]</source>
      </item>
  </channel>
</rss>
