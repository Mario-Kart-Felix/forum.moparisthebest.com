<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[Project Insanity] 100% Bird Nests remake</title>
    <link>https://forum.moparisthebest.com/t/project-insanity-100-bird-nests-remake/545565</link>
    <description>So a little while ago i made this: [url=http://www.rune-server.org/runescape-development/google/snippets/509023-pi-100-bird-nests-runescape-wiki-copy-pi.html]http://www.rune-server.org/runescape-development/google/snippets/509023-pi-100-bird-nests-runescape-wiki-copy-pi.html[/url]

This is what you&#39;re adding: 
[IMG]http://i.imgur.com/pRHeihH.png[/img]

Now that i have started my woodcutting base on my server i have made a better birds nests class. than my other class - First make a new class called BirdsNests.java and add all this in it [COLOR=red]You will need to change the impot of your client and the package location
[/COLOR]
[code]
package org.rs2server.entity.players.skills.woodcutting;

import java.util.Random;

import org.rs2server.Server;
import org.rs2server.entity.players.Client;

/**
 * @author Zack/optimum
 *
 */
public class BirdsNests {
	
	/**
	 * This will randomly generate a percentage
	 */
	Random rnd = new Random();
	
	/**
	 * This contains all of the nest item ids.
	 */
	static final int[] NESTS = {
			5070, 5071, 5072, 5073, 5074, 5075
	};
	
	/**
	 * This holds all the ring data: ItemId, Percentage
	 */
	static final int[][] RINGS = {
			{1635, 35}, {1637, 75}, {1639, 90}, {1641, 99}, {1643, 100}
	};
	
	/**
	 * This holds all the seeds data: ItemId, Percentage
	 */
	static final int[][] SEEDS = {
			{5317, 1}, {5290, 3}, {5289, 5}, {5288, 9}, {5287, 13},
			{5286, 19}, {5285, 28}, {5284, 38}, {5283, 54}, {5316, 55},
			{5315, 58}, {5314, 64}, {5313, 79}, {5312, 100}, 
	};
	
	/**
	 * This method will check if the item being clicked is
	 * a nest.
	 * @param itemId - Is the item being clicked
	 * @return if the itemIf is a nest
	 */
	public boolean isNest(int itemId) {
		for(int i : NESTS) {
			if(i == itemId) {
				return true;
			}
		}
		return false;
	}
	
	/**
	 * This handles the opening of a birds nest
	 * @param player
	 * @param itemId - this is the item id thats being clicked
	 */
	public void handleOpen(Client player, int itemId) {
		if(player.getItems().freeSlots() &lt; 1){
			player.sendMessage(&quot;You need atleast 1 free inventory space to open this!&quot;);
			return;
		}
		switch(itemId) {
			case 5073:
				openSeedNest(player);
				player.getItems().deleteItem(itemId, 1);
				player.getItems().addItem(5075, 1);
				return;
			case 5074:
				openRingNest(player);
				player.getItems().deleteItem(itemId, 1);
				player.getItems().addItem(5075, 1);
				return;
			case 5070:
			case 5071:
			case 5072:
				player.getItems().addItem(itemId + 6, 1);
				player.getItems().deleteItem(itemId, 1);
				player.getItems().addItem(5075, 1);
				return;
		}
	}
	
	/**
	 * This opens the Seed Nests and gives the player
	 * a random seed item based on the seed percentage.
	 * @param player
	 */
	void openSeedNest(Client player) {
		int random = 1 + rnd.nextInt(100);
		for(int i = 0; i &lt; SEEDS.length; i++) {
			if(random &lt;= SEEDS[i][1]) {
				player.getItems().addItem(SEEDS[i][0], 1);
				return;
			}
		}
	}
	
	/**
	 * This opens the Ring Nests and gives the player
	 * a random ring item based on the ring percentage.
	 * @param player
	 */
	void openRingNest(Client player) {
		int random = 1 + rnd.nextInt(100);
		for(int i = 0; i &lt; RINGS.length; i++) {
			if(random &lt;= RINGS[i][1]) {
				player.getItems().addItem(RINGS[i][0], 1);
				return;
			}
		}
	}
	
	/**
	 * This method drops a birds nest right at a players feet
	 * at a chance of 500
	 */
	public void dropNest(Client player) {
		if(rnd.nextInt(500) == 0) {
			Server.itemHandler.createGroundItem(
					player, NESTS[rnd.nextInt(NESTS.length)],
					player.getX(), player.getY(), 1, player.playerId);
			return;
		}
	}
}
[/code]

now in clickItem.java add this at the top : 
[code]
BirdsNests nest = new BirdsNests();
[/code]

now in this method - processPacket add this:

[code]
		if(nest.isNest(itemId)){
			nest.handleOpen(c, itemId);
			return;
		}
[/code]

Thats you done. Constructive critisism is welcome. Feel free to use the rep button

Also if i have missed anything please tell me</description>
    
    <lastBuildDate>Fri, 01 Aug 2014 12:51:41 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/project-insanity-100-bird-nests-remake/545565.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[Project Insanity] 100% Bird Nests remake</title>
        <dc:creator><![CDATA[@Special_Air_Service Special Air Service]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/special_air_service">@Special_Air_Service</a> wrote:</p>
          <blockquote>
              <p>So a little while ago i made this: <a href="http://www.rune-server.org/runescape-development/google/snippets/509023-pi-100-bird-nests-runescape-wiki-copy-pi.html" data-bbcode="true" rel="nofollow noopener">http://www.rune-server.org/runescape-development/google/snippets/509023-pi-100-bird-nests-runescape-wiki-copy-pi.html</a></p>
<p>This is what youâ€™re adding:<br>
<img src="http://i.imgur.com/pRHeihH.png" alt width="" height=""></p>
<p>Now that i have started my woodcutting base on my server i have made a better birds nests class. than my other class - First make a new class called BirdsNests.java and add all this in it [COLOR=red]You will need to change the impot of your client and the package location<br>
[/COLOR]</p>
<pre><code class="lang-auto">package org.rs2server.entity.players.skills.woodcutting;

import java.util.Random;

import org.rs2server.Server;
import org.rs2server.entity.players.Client;

/**
 * @author Zack/optimum
 *
 */
public class BirdsNests {
	
	/**
	 * This will randomly generate a percentage
	 */
	Random rnd = new Random();
	
	/**
	 * This contains all of the nest item ids.
	 */
	static final int[] NESTS = {
			5070, 5071, 5072, 5073, 5074, 5075
	};
	
	/**
	 * This holds all the ring data: ItemId, Percentage
	 */
	static final int[][] RINGS = {
			{1635, 35}, {1637, 75}, {1639, 90}, {1641, 99}, {1643, 100}
	};
	
	/**
	 * This holds all the seeds data: ItemId, Percentage
	 */
	static final int[][] SEEDS = {
			{5317, 1}, {5290, 3}, {5289, 5}, {5288, 9}, {5287, 13},
			{5286, 19}, {5285, 28}, {5284, 38}, {5283, 54}, {5316, 55},
			{5315, 58}, {5314, 64}, {5313, 79}, {5312, 100}, 
	};
	
	/**
	 * This method will check if the item being clicked is
	 * a nest.
	 * @param itemId - Is the item being clicked
	 * @return if the itemIf is a nest
	 */
	public boolean isNest(int itemId) {
		for(int i : NESTS) {
			if(i == itemId) {
				return true;
			}
		}
		return false;
	}
	
	/**
	 * This handles the opening of a birds nest
	 * @param player
	 * @param itemId - this is the item id thats being clicked
	 */
	public void handleOpen(Client player, int itemId) {
		if(player.getItems().freeSlots() &lt; 1){
			player.sendMessage("You need atleast 1 free inventory space to open this!");
			return;
		}
		switch(itemId) {
			case 5073:
				openSeedNest(player);
				player.getItems().deleteItem(itemId, 1);
				player.getItems().addItem(5075, 1);
				return;
			case 5074:
				openRingNest(player);
				player.getItems().deleteItem(itemId, 1);
				player.getItems().addItem(5075, 1);
				return;
			case 5070:
			case 5071:
			case 5072:
				player.getItems().addItem(itemId + 6, 1);
				player.getItems().deleteItem(itemId, 1);
				player.getItems().addItem(5075, 1);
				return;
		}
	}
	
	/**
	 * This opens the Seed Nests and gives the player
	 * a random seed item based on the seed percentage.
	 * @param player
	 */
	void openSeedNest(Client player) {
		int random = 1 + rnd.nextInt(100);
		for(int i = 0; i &lt; SEEDS.length; i++) {
			if(random &lt;= SEEDS[i][1]) {
				player.getItems().addItem(SEEDS[i][0], 1);
				return;
			}
		}
	}
	
	/**
	 * This opens the Ring Nests and gives the player
	 * a random ring item based on the ring percentage.
	 * @param player
	 */
	void openRingNest(Client player) {
		int random = 1 + rnd.nextInt(100);
		for(int i = 0; i &lt; RINGS.length; i++) {
			if(random &lt;= RINGS[i][1]) {
				player.getItems().addItem(RINGS[i][0], 1);
				return;
			}
		}
	}
	
	/**
	 * This method drops a birds nest right at a players feet
	 * at a chance of 500
	 */
	public void dropNest(Client player) {
		if(rnd.nextInt(500) == 0) {
			Server.itemHandler.createGroundItem(
					player, NESTS[rnd.nextInt(NESTS.length)],
					player.getX(), player.getY(), 1, player.playerId);
			return;
		}
	}
}</code></pre>
<p>now in clickItem.java add this at the top :</p>
<pre><code class="lang-auto">BirdsNests nest = new BirdsNests();</code></pre>
<p>now in this method - processPacket add this:</p>
<pre><code class="lang-auto">		if(nest.isNest(itemId)){
			nest.handleOpen(c, itemId);
			return;
		}</code></pre>
<p>Thats you done. Constructive critisism is welcome. Feel free to use the rep button</p>
<p>Also if i have missed anything please tell me</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/project-insanity-100-bird-nests-remake/545565/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/project-insanity-100-bird-nests-remake/545565/1</link>
        <pubDate>Fri, 01 Aug 2014 12:51:41 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-545565-1</guid>
        <source url="https://forum.moparisthebest.com/t/project-insanity-100-bird-nests-remake/545565.rss">[Project Insanity] 100% Bird Nests remake</source>
      </item>
  </channel>
</rss>
