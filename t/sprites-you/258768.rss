<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Sprites &amp; you</title>
    <link>https://forum.moparisthebest.com/t/sprites-you/258768</link>
    <description>Although I know most of you that work with private servers cannot be bothered to actually look into how the client works and just find quick fixes that get the job done here is some of my notes on sprites.


Sprite Data contains: the index offset and pixel data
Index Data contains: sprite dimensions, pixel offset, color palette, x offset, y offset
The RsSprite Color Palette can hold a maximum of 255 colors.
The color palette[0] is always 0 for transparency;
All the sprites in one data file share the same color palette

I have made an example applet that will both display the sprite as well as display each palette color in a 25 by 25 box here is an example: http://silabsoft.org/?viewsprite=default&amp;name=BACKBASE1.DAT (I know the applet does not fit on page)

Other Examples:
http://silabsoft.org/?list=defsprites
http://silabsoft.org/?viewsprite=default&amp;name=PRAYERON.DAT&amp;snumber=4


And here the source:

[code]
import com.jagex.Sprite;
import com.jagex.Stream;

import java.applet.Applet;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.InputStream;
import java.io.ByteArrayOutputStream;
import java.net.URL;

/**
 * Class:SpriteReader
 * User: Silabsoft
 * Date: Jan 26, 2009
 * Time: 11:33:58 AM
 */

public class SpriteReader extends Applet {
    private Sprite sprite;
    private Color palette[];
    private int perRow;
    private int plength;
    private String dataName;
    private String indexName;
    private boolean error;

    public void init() {
        int spriteNumber = 0;
        String dataName = this.getParameter(&quot;dataName&quot;);
        String indexName = this.getParameter(&quot;indexName&quot;);
        if (this.getParameter(&quot;number&quot;) != null) {
            spriteNumber = Integer.parseInt(this.getParameter(&quot;number&quot;));
        }
        try {
            sprite = new Sprite(fileByUrl(dataName), fileByUrl(indexName), spriteNumber);
            int p[] = sprite.palette;
            plength = p.length;
            palette = new Color[plength];
            for (int i = 0; i &lt; plength; i++)
                palette[i] = new Color(p[i]);

            perRow = 765 / 25;
            int rows = 0;
            if(plength != 0)
            rows = 1 + (plength / perRow);
            this.setBackground(Color.BLACK);
        } catch (Exception e) {
            e.printStackTrace();
            error = true;
            return;
        }

    }

    public void paint(Graphics g) {
        if (error) {
            g.drawString(&quot;Error loading sprite&quot;, 30, 30);
        }
        BufferedImage bufferedimage = new BufferedImage(sprite.myWidth, sprite.myHeight, 1);
        bufferedimage.setRGB(0, 0, sprite.myWidth, sprite.myHeight, sprite.myPixels, 0, sprite.myWidth);
        g.drawImage(bufferedimage, 0, 0, this);
        int rowId = 0;
        int columnId = 0;
        for (int i = 0; i &lt; plength; i++) {
            g.setColor(palette[i]);
            g.fillRect(columnId++ * 25, sprite.myHeight + (rowId * 25), 25, 25);

            if (columnId == perRow) {
                columnId = 0;
                rowId++;
            }
        }

    }

    public Stream fileByUrl(String s) throws Exception {
        URL url = new URL(&quot;http://silabsoft.org/cache/sprite/rs2/default/&quot; + s);
        InputStream in = url.openStream();
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        int c;
        while ((c = in.read()) != -1) {
            out.write(c);
        }
        return new Stream(out.toByteArray());
    }
}
[/code]

[code]
/**
 * Class:Sprite
 * User: Silabsoft 
 * Date: Jan 26, 2009
 * Time: 11:25:37 AM
 */
package com.jagex;

import java.io.File;
import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.FileInputStream;

public class Sprite {
    public int palette[];
    public Sprite(Stream data, Stream index, int i)
    {
        index.currentOffset = data.readUnsignedWord();
        indexWidth = index.readUnsignedWord();
        indexHeight = index.readUnsignedWord();
        int paletteLength = index.readUnsignedByte();
        palette = new int[paletteLength];
        for(int k = 0; k &lt; paletteLength - 1; k++)
        {
           
            palette[k + 1] = index.read3Bytes();
            if(palette[k + 1] == 0)
                palette[k + 1] = 1;
        }
        for(int l = 0; l &lt; i; l++)
        {
            index.currentOffset += 2;
            data.currentOffset += index.readUnsignedWord() * index.readUnsignedWord();
            index.currentOffset++;
        }

        anInt1442 = index.readUnsignedByte();
        anInt1443 = index.readUnsignedByte();

        myWidth = index.readUnsignedWord();
        myHeight = index.readUnsignedWord();
        int i1 = index.readUnsignedByte();
        int j1 = myWidth * myHeight;
        myPixels = new int[j1];
        if(i1 == 0)
        {
            for(int k1 = 0; k1 &lt; j1; k1++)
                myPixels[k1] = palette[data.readUnsignedByte()];

            return;
        }
        if(i1 == 1)
        {
            for(int l1 = 0; l1 &lt; myWidth; l1++)
            {
                for(int i2 = 0; i2 &lt; myHeight; i2++)
                    myPixels[l1 + i2 * myWidth] = palette[data.readUnsignedByte()];

            }

        }
    }

    public int myPixels[];
    public int myWidth;
    public int myHeight;
    private int anInt1442;
    private int anInt1443;
    public int indexWidth;
    public int indexHeight;
}

[/code]</description>
    
    <lastBuildDate>Mon, 02 Feb 2009 19:22:26 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/sprites-you/258768.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Sprites &amp; you</title>
        <dc:creator><![CDATA[@atrox atrox_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/atrox">@atrox</a> wrote:</p>
          <blockquote>
              <p>b&amp;</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/sprites-you/258768/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/sprites-you/258768/3</link>
        <pubDate>Mon, 02 Feb 2009 19:22:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-258768-3</guid>
        <source url="https://forum.moparisthebest.com/t/sprites-you/258768.rss">Sprites &amp; you</source>
      </item>
      <item>
        <title>Sprites &amp; you</title>
        <dc:creator><![CDATA[@bandosmanpk bandosmanpk]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bandosmanpk">@bandosmanpk</a> wrote:</p>
          <blockquote>
              <p>whta do you save it as im kinda useless at this stuff :\</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/sprites-you/258768/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/sprites-you/258768/2</link>
        <pubDate>Mon, 02 Feb 2009 15:06:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-258768-2</guid>
        <source url="https://forum.moparisthebest.com/t/sprites-you/258768.rss">Sprites &amp; you</source>
      </item>
      <item>
        <title>Sprites &amp; you</title>
        <dc:creator><![CDATA[@silabsoft RuneAgent]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/silabsoft">@silabsoft</a> wrote:</p>
          <blockquote>
              <p>Although I know most of you that work with private servers cannot be bothered to actually look into how the client works and just find quick fixes that get the job done here is some of my notes on sprites.</p>
<p>Sprite Data contains: the index offset and pixel data<br>
Index Data contains: sprite dimensions, pixel offset, color palette, x offset, y offset<br>
The RsSprite Color Palette can hold a maximum of 255 colors.<br>
The color palette[0] is always 0 for transparency;<br>
All the sprites in one data file share the same color palette</p>
<p>I have made an example applet that will both display the sprite as well as display each palette color in a 25 by 25 box here is an example: <a href="http://silabsoft.org/?viewsprite=default&amp;name=BACKBASE1.DAT" rel="nofollow noopener">http://silabsoft.org/?viewsprite=default&amp;name=BACKBASE1.DAT</a> (I know the applet does not fit on page)</p>
<p>Other Examples:<br>
<a href="http://silabsoft.org/?list=defsprites" class="onebox" target="_blank" rel="nofollow noopener">http://silabsoft.org/?list=defsprites</a><br>
<a href="http://silabsoft.org/?viewsprite=default&amp;name=PRAYERON.DAT&amp;snumber=4" class="onebox" target="_blank" rel="nofollow noopener">http://silabsoft.org/?viewsprite=default&amp;name=PRAYERON.DAT&amp;snumber=4</a></p>
<p>And here the source:</p>
<pre><code class="lang-auto">import com.jagex.Sprite;
import com.jagex.Stream;

import java.applet.Applet;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.InputStream;
import java.io.ByteArrayOutputStream;
import java.net.URL;

/**
 * Class:SpriteReader
 * User: Silabsoft
 * Date: Jan 26, 2009
 * Time: 11:33:58 AM
 */

public class SpriteReader extends Applet {
    private Sprite sprite;
    private Color palette[];
    private int perRow;
    private int plength;
    private String dataName;
    private String indexName;
    private boolean error;

    public void init() {
        int spriteNumber = 0;
        String dataName = this.getParameter("dataName");
        String indexName = this.getParameter("indexName");
        if (this.getParameter("number") != null) {
            spriteNumber = Integer.parseInt(this.getParameter("number"));
        }
        try {
            sprite = new Sprite(fileByUrl(dataName), fileByUrl(indexName), spriteNumber);
            int p[] = sprite.palette;
            plength = p.length;
            palette = new Color[plength];
            for (int i = 0; i &lt; plength; i++)
                palette[i] = new Color(p[i]);

            perRow = 765 / 25;
            int rows = 0;
            if(plength != 0)
            rows = 1 + (plength / perRow);
            this.setBackground(Color.BLACK);
        } catch (Exception e) {
            e.printStackTrace();
            error = true;
            return;
        }

    }

    public void paint(Graphics g) {
        if (error) {
            g.drawString("Error loading sprite", 30, 30);
        }
        BufferedImage bufferedimage = new BufferedImage(sprite.myWidth, sprite.myHeight, 1);
        bufferedimage.setRGB(0, 0, sprite.myWidth, sprite.myHeight, sprite.myPixels, 0, sprite.myWidth);
        g.drawImage(bufferedimage, 0, 0, this);
        int rowId = 0;
        int columnId = 0;
        for (int i = 0; i &lt; plength; i++) {
            g.setColor(palette[i]);
            g.fillRect(columnId++ * 25, sprite.myHeight + (rowId * 25), 25, 25);

            if (columnId == perRow) {
                columnId = 0;
                rowId++;
            }
        }

    }

    public Stream fileByUrl(String s) throws Exception {
        URL url = new URL("http://silabsoft.org/cache/sprite/rs2/default/" + s);
        InputStream in = url.openStream();
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        int c;
        while ((c = in.read()) != -1) {
            out.write(c);
        }
        return new Stream(out.toByteArray());
    }
}</code></pre>
<pre><code class="lang-auto">/**
 * Class:Sprite
 * User: Silabsoft 
 * Date: Jan 26, 2009
 * Time: 11:25:37 AM
 */
package com.jagex;

import java.io.File;
import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.FileInputStream;

public class Sprite {
    public int palette[];
    public Sprite(Stream data, Stream index, int i)
    {
        index.currentOffset = data.readUnsignedWord();
        indexWidth = index.readUnsignedWord();
        indexHeight = index.readUnsignedWord();
        int paletteLength = index.readUnsignedByte();
        palette = new int[paletteLength];
        for(int k = 0; k &lt; paletteLength - 1; k++)
        {
           
            palette[k + 1] = index.read3Bytes();
            if(palette[k + 1] == 0)
                palette[k + 1] = 1;
        }
        for(int l = 0; l &lt; i; l++)
        {
            index.currentOffset += 2;
            data.currentOffset += index.readUnsignedWord() * index.readUnsignedWord();
            index.currentOffset++;
        }

        anInt1442 = index.readUnsignedByte();
        anInt1443 = index.readUnsignedByte();

        myWidth = index.readUnsignedWord();
        myHeight = index.readUnsignedWord();
        int i1 = index.readUnsignedByte();
        int j1 = myWidth * myHeight;
        myPixels = new int[j1];
        if(i1 == 0)
        {
            for(int k1 = 0; k1 &lt; j1; k1++)
                myPixels[k1] = palette[data.readUnsignedByte()];

            return;
        }
        if(i1 == 1)
        {
            for(int l1 = 0; l1 &lt; myWidth; l1++)
            {
                for(int i2 = 0; i2 &lt; myHeight; i2++)
                    myPixels[l1 + i2 * myWidth] = palette[data.readUnsignedByte()];

            }

        }
    }

    public int myPixels[];
    public int myWidth;
    public int myHeight;
    private int anInt1442;
    private int anInt1443;
    public int indexWidth;
    public int indexHeight;
}
</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/sprites-you/258768/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/sprites-you/258768/1</link>
        <pubDate>Tue, 27 Jan 2009 14:18:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-258768-1</guid>
        <source url="https://forum.moparisthebest.com/t/sprites-you/258768.rss">Sprites &amp; you</source>
      </item>
  </channel>
</rss>
