<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Customizable Shutdown App [VB]</title>
    <link>https://forum.moparisthebest.com/t/customizable-shutdown-app-vb/417940</link>
    <description>Just something I came up with when I was bored during class. Took it home and started working on it and came up with this. It pretty much let&#39;s you enter whether you want to shutdown, restart, log off, or hibernate your computer, then has you choose how long until it happens (in seconds, minutes, or hours), then gives you the option to display a message before the action is carried out. What&#39;s the big problem here? Open up Command Prompt, and type in &quot;shutdown -i&quot;. Makes my program pretty useless, eh? Code&#39;s a bit sloppy too, but oh well, it&#39;s just a learning experience.
[code=vb]&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;
&#39;By Jake | Last updated 10/11/2011                                     &#39;
&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;
&#39;Customizable Shutdown App                                             &#39;
&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;
&#39;Lets the user select how and when they want to shutdown their computer&#39;
&#39;and gives them the option of displaying a message before shutting down&#39;
&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;
Public Class ShutdownApp
    Dim shutting_down As Boolean = False
    Dim shutdown_type As String = &quot;&quot;
    Sub abort()
        &#39;To make the spelling in the balloon tip seem less weird for the hibernation process
        If shutdown_type = &quot;hibernate&quot; Then
            shutdown_type = &quot;hibernation&quot;
        End If
        &#39;Aborting shutdown
        Shell(&quot;shutdown -a&quot;)
        shutting_down = False
        Me.AbortToolStripMenuItem.Enabled = False
        Me.AbortToolStripMenuItem.Visible = False
        Me.NI.Text = &quot;Customizable Shutdown App&quot;
        Me.NI.BalloonTipTitle = &quot;The &quot; + shutdown_type + &quot; process has been aborted&quot;
        Me.NI.BalloonTipText = &quot;You have aborted the &quot; + shutdown_type + &quot; process.&quot;
        Me.NI.ShowBalloonTip(5)
        &#39;Enabling/disabling/unchecking objects, and clearing text
        Me.radShutdown.Enabled = True
        Me.radRestart.Enabled = True
        Me.radLogOff.Enabled = True
        Me.radHibernate.Enabled = True
        Me.chkMessage.Enabled = True
        Me.chkMessage.Checked = False
        Me.txtMessage.Enabled = False
        Me.txtMessage.Text = &quot;&quot;
        Me.txtTime.Enabled = True
        Me.txtTime.Text = &quot;&quot;
        Me.lstType.Enabled = True
        Me.btnOK.Enabled = True
        &#39;Giving lstType it&#39;s default selected item value
        Me.lstType.SelectedItem = Me.lstType.Items(0)
    End Sub
    Private Sub btnOK_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnOK.Click
        &#39;Dimensioning and assigning values to variables
        Dim shutdown_arg As String = &quot;&quot;
        Dim message As String = Me.txtMessage.Text
        Dim time_type As String = &quot;&quot;
        Dim time As Integer = Val(Me.txtTime.Text)
        Dim msg_time_value As Integer
        shutting_down = True
        &#39;Assigning new value to shutdown_type
        If Me.radShutdown.Checked = True Then
            shutdown_arg = &quot;-s&quot;
            shutdown_type = &quot;shutdown&quot;
        ElseIf Me.radRestart.Checked = True Then
            shutdown_arg = &quot;-r&quot;
            shutdown_type = &quot;restart&quot;
        ElseIf Me.radLogOff.Checked = True Then
            shutdown_arg = &quot;-l&quot;
            shutdown_type = &quot;log off&quot;
        ElseIf Me.radHibernate.Checked = True Then
            shutdown_arg = &quot;-h&quot;
            shutdown_type = &quot;hibernate&quot;
        End If
        &#39;Converting the time into seconds, then giving time_type a new value
        If Me.lstType.SelectedItem.Equals(Me.lstType.Items(0)) Then
            time_type = &quot;seconds&quot;
            msg_time_value = Val(Me.txtTime.Text)
        ElseIf Me.lstType.SelectedItem.Equals(Me.lstType.Items(1)) Then
            time = time * 60
            msg_time_value = Val(Me.txtTime.Text)
            time_type = &quot;minutes&quot;
        ElseIf Me.lstType.SelectedItem.Equals(Me.lstType.Items(2)) Then
            time = time * 60 * 60
            msg_time_value = Val(Me.txtTime.Text)
            time_type = &quot;hours&quot;
        End If
        &#39;Checking if user wanted to display a message, then doing the shutdown procedure
        If Me.chkMessage.Checked = True Then
            Shell(&quot;shutdown &quot; + shutdown_arg + &quot; -t &quot; &amp; time &amp; &quot; -c &quot; + message)
        ElseIf Me.chkMessage.Checked = False Then
            Shell(&quot;shutdown &quot; + shutdown_arg + &quot; -t &quot; &amp; time)
        End If
        &#39;Disabling/unchecking most objects to prevent user from messing something up
        Me.radShutdown.Enabled = False
        Me.radRestart.Enabled = False
        Me.radLogOff.Enabled = False
        Me.radHibernate.Enabled = False
        Me.chkMessage.Enabled = False
        Me.txtMessage.Enabled = False
        Me.txtTime.Enabled = False
        Me.lstType.Enabled = False
        Me.btnOK.Enabled = False
        Me.AbortToolStripMenuItem.Enabled = True
        Me.AbortToolStripMenuItem.Visible = True
        &#39;Hiding the form and displaying a balloon tip
        Me.Hide()
        Me.NI.Text = &quot;Waiting to &quot; + shutdown_type + &quot;...&quot;
        Me.NI.BalloonTipTitle = &quot;Waiting to &quot; + shutdown_type + &quot;...&quot;
        Me.NI.BalloonTipText = &quot;Your computer will &quot; + shutdown_type + &quot; in less than &quot; &amp; msg_time_value &amp; &quot; &quot; + time_type + &quot;. To open this program back up, double-click on the icon in your notification area.&quot;
        Me.NI.ShowBalloonTip(5)
    End Sub

    Private Sub chkMessage_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkMessage.CheckedChanged
        &#39;This part is self-explanatory
        If Me.chkMessage.Checked = True Then
            Me.chkMessage.Text = &quot;Disable Message&quot;
            Me.txtMessage.Enabled = True
        ElseIf Me.chkMessage.Checked = False Then
            Me.chkMessage.Text = &quot;Enable Message&quot;
            Me.txtMessage.Text = &quot;&quot;
            Me.txtMessage.Enabled = False
        End If
    End Sub

    Private Sub btnAbort_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnAbort.Click
        Dim input As Long
        &#39;Aborting if shutdown is occurring
        If shutting_down = True Then
            abort()
        End If
        &#39;Asking user if they&#39;d like to close the program
        input = MsgBox(&quot;Close program?&quot;, vbYesNo, Title:=&quot;Close?&quot;)
        If input = vbYes Then
            &#39;Closing
            Application.Exit()
        ElseIf input = vbNo Then
            &#39;Do nothing
        End If
    End Sub

    Private Sub NI_MouseDoubleClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles NI.MouseDoubleClick
        &#39;Opening the program back up
        Me.Show()
        Me.WindowState = FormWindowState.Normal
    End Sub

    Private Sub ShutdownApp_Resize(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Resize
        &#39;If the program is being minimized, it will be hidden and removed from the taskbar
        If Me.WindowState = FormWindowState.Minimized Then
            Me.Hide()
        End If
    End Sub

    Private Sub AbortToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles AbortToolStripMenuItem.Click
        abort()
        &#39;Opening program back up
        Me.Show()
    End Sub

    Private Sub CloseToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CloseToolStripMenuItem.Click
        &#39;Closing
        Application.Exit()
    End Sub

    Private Sub ShutdownApp_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        &#39;Giving lstType a default selected item value
        Me.lstType.SelectedItem = Me.lstType.Items(0)
    End Sub
End Class
[/code]
Here&#39;s a picture of what the program looks like once it&#39;s opened:
[img]http://oi53.tinypic.com/iviuck.jpg[/img]
List of all of the objects:
[code]
AbortToolStripMenuItem
btnAbort
btnOK
chkMessage
CloseToolStripMenuItem
ContextMenuStrip1
grpMessage
grpTime
grpType
lblAmount
lblType
lstType
NI
radHibernate
radLogOff
radRestart
radShutdown
txtMessage
txtTime[/code]</description>
    
    <lastBuildDate>Thu, 13 Oct 2011 02:37:00 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/customizable-shutdown-app-vb/417940.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Customizable Shutdown App [VB]</title>
        <dc:creator><![CDATA[@r0ckstar96 r0ckstar96]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/r0ckstar96">@r0ckstar96</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="2" data-topic="417940">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/user_avatar/forum.moparisthebest.com/davidi2/40/2579_1.png" class="avatar"> Davidi2:</div>
<blockquote>
<p>I stopped reading at [tt]Code (Visual Basic):[/tt]</p>
</blockquote>
</aside>
<p>That’s actually extremely understandable</p>
<aside class="quote" data-post="3" data-topic="417940">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/mikeyzzz/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Mikeyzzz:</div>
<blockquote>
<p>Good Job atleast you put effort into is  ;D</p>
</blockquote>
</aside>
<p>Thank ya <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"></p>
<p>[quote=“whackatre, post:4, topic:417940”]Nice job, but is there any special use for this? (is it any different from just typing in regular commads on prompt)</p>
<p>Whac[/quote]<br>
Thanks, and no there’s really no special use for the program. You can easily type in “shutdown -s -t 60 -c Shutting down soon…”, but I just made the program because I was bored and there’s a few (technologically inept) people that would actually be interested in using it</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/customizable-shutdown-app-vb/417940/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/customizable-shutdown-app-vb/417940/5</link>
        <pubDate>Thu, 13 Oct 2011 02:37:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-417940-5</guid>
        <source url="https://forum.moparisthebest.com/t/customizable-shutdown-app-vb/417940.rss">Customizable Shutdown App [VB]</source>
      </item>
      <item>
        <title>Customizable Shutdown App [VB]</title>
        <dc:creator><![CDATA[@whackatre Whackatre]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/whackatre">@whackatre</a> wrote:</p>
          <blockquote>
              <p>Nice job, but is there any special use for this? (is it any different from just typing in regular commads on prompt)</p>
<p>Whac</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/customizable-shutdown-app-vb/417940/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/customizable-shutdown-app-vb/417940/4</link>
        <pubDate>Wed, 12 Oct 2011 10:58:53 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-417940-4</guid>
        <source url="https://forum.moparisthebest.com/t/customizable-shutdown-app-vb/417940.rss">Customizable Shutdown App [VB]</source>
      </item>
      <item>
        <title>Customizable Shutdown App [VB]</title>
        <dc:creator><![CDATA[@Mikeyzzz Mikeyzzz]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/mikeyzzz">@Mikeyzzz</a> wrote:</p>
          <blockquote>
              <p>Good Job atleast you put effort into is  ;D</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/customizable-shutdown-app-vb/417940/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/customizable-shutdown-app-vb/417940/3</link>
        <pubDate>Wed, 12 Oct 2011 05:32:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-417940-3</guid>
        <source url="https://forum.moparisthebest.com/t/customizable-shutdown-app-vb/417940.rss">Customizable Shutdown App [VB]</source>
      </item>
      <item>
        <title>Customizable Shutdown App [VB]</title>
        <dc:creator><![CDATA[@davidi2 Davidi2]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/davidi2">@davidi2</a> wrote:</p>
          <blockquote>
              <p>I stopped reading at [tt]Code (Visual Basic):[/tt]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/customizable-shutdown-app-vb/417940/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/customizable-shutdown-app-vb/417940/2</link>
        <pubDate>Wed, 12 Oct 2011 05:29:31 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-417940-2</guid>
        <source url="https://forum.moparisthebest.com/t/customizable-shutdown-app-vb/417940.rss">Customizable Shutdown App [VB]</source>
      </item>
      <item>
        <title>Customizable Shutdown App [VB]</title>
        <dc:creator><![CDATA[@r0ckstar96 r0ckstar96]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/r0ckstar96">@r0ckstar96</a> wrote:</p>
          <blockquote>
              <p>Just something I came up with when I was bored during class. Took it home and started working on it and came up with this. It pretty much let’s you enter whether you want to shutdown, restart, log off, or hibernate your computer, then has you choose how long until it happens (in seconds, minutes, or hours), then gives you the option to display a message before the action is carried out. What’s the big problem here? Open up Command Prompt, and type in “shutdown -i”. Makes my program pretty useless, eh? Code’s a bit sloppy too, but oh well, it’s just a learning experience.</p>
<p>[code=vb]’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’<br>
‘By Jake | Last updated 10/11/2011                                     ’<br>
‘’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’<br>
‘Customizable Shutdown App                                             ’<br>
‘’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’<br>
‘Lets the user select how and when they want to shutdown their computer’<br>
‘and gives them the option of displaying a message before shutting down’<br>
‘’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’’<br>
Public Class ShutdownApp<br>
Dim shutting_down As Boolean = False<br>
Dim shutdown_type As String = “”<br>
Sub abort()<br>
'To make the spelling in the balloon tip seem less weird for the hibernation process<br>
If shutdown_type = “hibernate” Then<br>
shutdown_type = “hibernation”<br>
End If<br>
'Aborting shutdown<br>
Shell(“shutdown -a”)<br>
shutting_down = False<br>
Me.AbortToolStripMenuItem.Enabled = False<br>
Me.AbortToolStripMenuItem.Visible = False<br>
Me.NI.Text = “Customizable Shutdown App”<br>
Me.NI.BalloonTipTitle = “The " + shutdown_type + " process has been aborted”<br>
Me.NI.BalloonTipText = “You have aborted the " + shutdown_type + " process.”<br>
Me.NI.ShowBalloonTip(5)<br>
'Enabling/disabling/unchecking objects, and clearing text<br>
Me.radShutdown.Enabled = True<br>
Me.radRestart.Enabled = True<br>
Me.radLogOff.Enabled = True<br>
Me.radHibernate.Enabled = True<br>
Me.chkMessage.Enabled = True<br>
Me.chkMessage.Checked = False<br>
Me.txtMessage.Enabled = False<br>
Me.txtMessage.Text = “”<br>
Me.txtTime.Enabled = True<br>
Me.txtTime.Text = “”<br>
Me.lstType.Enabled = True<br>
Me.btnOK.Enabled = True<br>
'Giving lstType it’s default selected item value<br>
Me.lstType.SelectedItem = Me.lstType.Items(0)<br>
End Sub<br>
Private Sub btnOK_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnOK.Click<br>
'Dimensioning and assigning values to variables<br>
Dim shutdown_arg As String = “”<br>
Dim message As String = Me.txtMessage.Text<br>
Dim time_type As String = “”<br>
Dim time As Integer = Val(Me.txtTime.Text)<br>
Dim msg_time_value As Integer<br>
shutting_down = True<br>
'Assigning new value to shutdown_type<br>
If Me.radShutdown.Checked = True Then<br>
shutdown_arg = “-s”<br>
shutdown_type = “shutdown”<br>
ElseIf Me.radRestart.Checked = True Then<br>
shutdown_arg = “-r”<br>
shutdown_type = “restart”<br>
ElseIf Me.radLogOff.Checked = True Then<br>
shutdown_arg = “-l”<br>
shutdown_type = “log off”<br>
ElseIf Me.radHibernate.Checked = True Then<br>
shutdown_arg = “-h”<br>
shutdown_type = “hibernate”<br>
End If<br>
'Converting the time into seconds, then giving time_type a new value<br>
If Me.lstType.SelectedItem.Equals(Me.lstType.Items(0)) Then<br>
time_type = “seconds”<br>
msg_time_value = Val(Me.txtTime.Text)<br>
ElseIf Me.lstType.SelectedItem.Equals(Me.lstType.Items(1)) Then<br>
time = time * 60<br>
msg_time_value = Val(Me.txtTime.Text)<br>
time_type = “minutes”<br>
ElseIf Me.lstType.SelectedItem.Equals(Me.lstType.Items(2)) Then<br>
time = time * 60 * 60<br>
msg_time_value = Val(Me.txtTime.Text)<br>
time_type = “hours”<br>
End If<br>
'Checking if user wanted to display a message, then doing the shutdown procedure<br>
If Me.chkMessage.Checked = True Then<br>
Shell("shutdown " + shutdown_arg + " -t " &amp; time &amp; " -c " + message)<br>
ElseIf Me.chkMessage.Checked = False Then<br>
Shell("shutdown " + shutdown_arg + " -t " &amp; time)<br>
End If<br>
'Disabling/unchecking most objects to prevent user from messing something up<br>
Me.radShutdown.Enabled = False<br>
Me.radRestart.Enabled = False<br>
Me.radLogOff.Enabled = False<br>
Me.radHibernate.Enabled = False<br>
Me.chkMessage.Enabled = False<br>
Me.txtMessage.Enabled = False<br>
Me.txtTime.Enabled = False<br>
Me.lstType.Enabled = False<br>
Me.btnOK.Enabled = False<br>
Me.AbortToolStripMenuItem.Enabled = True<br>
Me.AbortToolStripMenuItem.Visible = True<br>
'Hiding the form and displaying a balloon tip<br>
Me.Hide()<br>
Me.NI.Text = "Waiting to " + shutdown_type + “…”<br>
Me.NI.BalloonTipTitle = "Waiting to " + shutdown_type + “…”<br>
Me.NI.BalloonTipText = "Your computer will " + shutdown_type + " in less than " &amp; msg_time_value &amp; " " + time_type + “. To open this program back up, double-click on the icon in your notification area.”<br>
Me.NI.ShowBalloonTip(5)<br>
End Sub</p>
<pre><code>Private Sub chkMessage_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkMessage.CheckedChanged
    'This part is self-explanatory
    If Me.chkMessage.Checked = True Then
        Me.chkMessage.Text = "Disable Message"
        Me.txtMessage.Enabled = True
    ElseIf Me.chkMessage.Checked = False Then
        Me.chkMessage.Text = "Enable Message"
        Me.txtMessage.Text = ""
        Me.txtMessage.Enabled = False
    End If
End Sub

Private Sub btnAbort_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnAbort.Click
    Dim input As Long
    'Aborting if shutdown is occurring
    If shutting_down = True Then
        abort()
    End If
    'Asking user if they'd like to close the program
    input = MsgBox("Close program?", vbYesNo, Title:="Close?")
    If input = vbYes Then
        'Closing
        Application.Exit()
    ElseIf input = vbNo Then
        'Do nothing
    End If
End Sub

Private Sub NI_MouseDoubleClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles NI.MouseDoubleClick
    'Opening the program back up
    Me.Show()
    Me.WindowState = FormWindowState.Normal
End Sub

Private Sub ShutdownApp_Resize(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Resize
    'If the program is being minimized, it will be hidden and removed from the taskbar
    If Me.WindowState = FormWindowState.Minimized Then
        Me.Hide()
    End If
End Sub

Private Sub AbortToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles AbortToolStripMenuItem.Click
    abort()
    'Opening program back up
    Me.Show()
End Sub

Private Sub CloseToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CloseToolStripMenuItem.Click
    'Closing
    Application.Exit()
End Sub

Private Sub ShutdownApp_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
    'Giving lstType a default selected item value
    Me.lstType.SelectedItem = Me.lstType.Items(0)
End Sub
</code></pre>
<p>End Class<br>
[/code]<br>
Here’s a picture of what the program looks like once it’s opened:<br>
<img src="http://oi53.tinypic.com/iviuck.jpg" alt width="492" height="188"><br>
List of all of the objects:</p>
<p><code>
AbortToolStripMenuItem
btnAbort
btnOK
chkMessage
CloseToolStripMenuItem
ContextMenuStrip1
grpMessage
grpTime
grpType
lblAmount
lblType
lstType
NI
radHibernate
radLogOff
radRestart
radShutdown
txtMessage
txtTime</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/customizable-shutdown-app-vb/417940/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/customizable-shutdown-app-vb/417940/1</link>
        <pubDate>Wed, 12 Oct 2011 04:22:51 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-417940-1</guid>
        <source url="https://forum.moparisthebest.com/t/customizable-shutdown-app-vb/417940.rss">Customizable Shutdown App [VB]</source>
      </item>
  </channel>
</rss>
