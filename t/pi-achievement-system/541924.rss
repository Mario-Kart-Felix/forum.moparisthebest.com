<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[PI] Achievement System</title>
    <link>https://forum.moparisthebest.com/t/pi-achievement-system/541924</link>
    <description>First of all i want to say  that i barely know about achievements, so mess with me.

Second thing is, that this is just a base, and I&#39;m missing some things, I&#39;ll update them as soon as i finish it.

If you&#39;re going to flame, please don&#39;t get your fingers tired, because, i wont get mine tired.

Any constructive criticsm is appreciated.

The task
[code=java]package server.model.players.misc;

import server.model.players.Client;

public class Tasks {

	public static enum PVMtasks {
		
		CONSTANT(1, 1, 1, 0);
		
		public int numberOfTargets, achievementPoints, npcId, miscNumber;

		PVMtasks(int numberOfTargets, int achievementPoints, int npcId, int miscNumber) {
			this.numberOfTargets = numberOfTargets;
			this.achievementPoints = achievementPoints;
			this.npcId = npcId;
		}

		public int getTargets() {
			return numberOfTargets;
		}

		public int getPoints() {
			return achievementPoints;
		}

		public int getNpcId() {
			return npcId;
		}
		
		public int getMiscNumber() {
			return miscNumber;
		}
	}
	
}
[/code]

The achievement handler:

[code=java]package server.model.players.misc;

import server.model.players.Client;
import server.util.Misc;

public class Achievement extends Tasks {

	/**
	 * Instances the Client
	 */
	private Client player;

	/**
	 * Makes the instance we created of the player the same that is put as a
	 * variable
	 */
	public Achievement(Client player) {
		this.player = player;
	}

	/**
	 * The type of achievements that exists
	 */
	private enum Type {
		Combat, Clicks, Quests, Walking;
	};

	/**
	 * The achievement points the player has
	 */
	public int points;

	/**
	 * Adds points to the points variable
	 * 
	 * @param points
	 *            the points that will be added
	 */
	public void addPoints(int points) {
		this.points = this.points + points;
	}

	/**
	 * A flag to check if the player has a task
	 * 
	 */
	public boolean hasTaskType() {

		/**
		 * If the task type is not a null (Not been initialized) continue
		 */
		if (taskType != null) {

			/**
			 * The player has a task because the task has been initialized
			 */
			return true;
		}

		/**
		 * If the type is a null, or well, wasn&#39;t handled in the upper clause, 
		 * We&#39;ll pretend that the player doesn&#39;t have a task yet.
		 */
		return false;
	};

	/**
	 * The type of the tasks is stored in this variable
	 */
	public Type taskType;

	/**
	 * 
	 * @return the task type
	 */
	public Type getTaskType() {
		return taskType;
	}

	/**
	 * Gets the task type
	 * 
	 * @param finished
	 *            if a player has already finished that parameter is set to true
	 *            so, the player tasks is set to null
	 */
	public void setTaskType(boolean finished) {

		/**
		 * If the player has already finished, put the task type as a null So
		 * the player can get another task
		 */
		if (finished) {
			taskType = null;
		}

		/**
		 * If the player already has a task type return
		 */
		if (hasTaskType()) {
			return;
		}

		switch (Misc.random(3)) {
		case 0:
			taskType = Type.Combat;
			break;
		case 1:
			taskType = Type.Clicks;
			break;
		case 2:
			taskType = Type.Quests;
			break;
		case 3:
			taskType = Type.Walking;
			break;
		}
	}

	public int numberOfActions, targetId, pointsRewarded;

	public void getTask() {
		if (getTaskType() == Type.Combat) {
			for (PVMtasks e : PVMtasks.values()) {
				if (Misc.random(4) == e.getMiscNumber()) {
					this.numberOfActions = e.getTargets();
					this.targetId = e.getNpcId();
					this.pointsRewarded = e.getPoints();
				}
			}
		}
	}
}
[/code]
Question, should i have an instance per client in the Achievement class? or rather use static methods?
Or what..</description>
    
    <lastBuildDate>Fri, 11 Apr 2014 14:19:33 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/pi-achievement-system/541924.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[PI] Achievement System</title>
        <dc:creator><![CDATA[@strucker Strucker]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/strucker">@strucker</a> wrote:</p>
          <blockquote>
              <p>[quote=“DAn0194, post:6, topic:541924”][quote author=Strucker link=topic=660795.msg4418301#msg4418301 date=1397077257]<br>
And how do i instance the achievement class for example in the clinet or anywhere.<br>
[/quote]<br>
Do you mean make an instance of the class in your client, if you do you would do.</p>
<pre><code class="lang-auto"></code></pre>
<p>For example the achievement class</p>
<p><code>Achievement achievement = new Achievement();</code>[/quote]Oh, okay thanks</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-achievement-system/541924/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-achievement-system/541924/7</link>
        <pubDate>Fri, 11 Apr 2014 14:19:33 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-541924-7</guid>
        <source url="https://forum.moparisthebest.com/t/pi-achievement-system/541924.rss">[PI] Achievement System</source>
      </item>
      <item>
        <title>[PI] Achievement System</title>
        <dc:creator><![CDATA[@Dan0194 Dan0194]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/dan0194">@Dan0194</a> wrote:</p>
          <blockquote>
              <aside class="quote" data-post="5" data-topic="541924">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/strucker/40/5_e05bb34c421432ee4d40de30c10af3e5.png" class="avatar"> Strucker:</div>
<blockquote>
<p>And how do i instance the achievement class for example in the clinet or anywhere.</p>
</blockquote>
</aside>
<p>Do you mean make an instance of the class in your client, if you do you would do.</p>
<pre><code class="lang-auto"></code></pre>
<p>For example the achievement class</p>
<pre><code class="lang-auto"></code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-achievement-system/541924/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-achievement-system/541924/6</link>
        <pubDate>Wed, 09 Apr 2014 23:21:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-541924-6</guid>
        <source url="https://forum.moparisthebest.com/t/pi-achievement-system/541924.rss">[PI] Achievement System</source>
      </item>
      <item>
        <title>[PI] Achievement System</title>
        <dc:creator><![CDATA[@strucker Strucker]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/strucker">@strucker</a> wrote:</p>
          <blockquote>
              <p>And how do i instance the achievement class for example in the clinet or anywhere.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-achievement-system/541924/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-achievement-system/541924/5</link>
        <pubDate>Wed, 09 Apr 2014 21:00:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-541924-5</guid>
        <source url="https://forum.moparisthebest.com/t/pi-achievement-system/541924.rss">[PI] Achievement System</source>
      </item>
      <item>
        <title>[PI] Achievement System</title>
        <dc:creator><![CDATA[@Dan0194 Dan0194]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/dan0194">@Dan0194</a> wrote:</p>
          <blockquote>
              <p>It keeps only one object of the class. Instead of it you would have to use static methods and anything in static methods has to be static also. I can’t explain it well so maybe try looking at</p>
<p><a href="http://www.javaworld.com/article/2073352/core-java/simply-singleton.html" class="onebox" target="_blank" rel="nofollow noopener">http://www.javaworld.com/article/2073352/core-java/simply-singleton.html</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-achievement-system/541924/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-achievement-system/541924/4</link>
        <pubDate>Tue, 08 Apr 2014 23:07:24 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-541924-4</guid>
        <source url="https://forum.moparisthebest.com/t/pi-achievement-system/541924.rss">[PI] Achievement System</source>
      </item>
      <item>
        <title>[PI] Achievement System</title>
        <dc:creator><![CDATA[@strucker Strucker]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/strucker">@strucker</a> wrote:</p>
          <blockquote>
              <p>[quote=“DAn0194, post:2, topic:541924”]Few things to say I would scrap the enum here and just use an 2d array. Also your hasTask boolean can be shortened by just doing</p>
<p><code>	public boolean hasTask(Player player) {
		return player.getAchievement().getTaskType() != null;
	}</code></p>
<p>In your enum Type constants should all be Caps.</p>
<p>Where you did that switch to get a random type of task you can change it too.</p>
<pre><code class="lang-auto"></code></pre>
<p>I wouldn’t instance the whole class I would probably just put some of those variables in my player class.</p>
<p>I wrote up something just to show you maybe how this can work(It doesn’t make much sense).</p>
<p>Achievement class.</p>
<p>[code=java]package org.hyperion.rs2.content;</p>
<p>import org.hyperion.rs2.content.AchievementHandler.TaskType;</p>
<p>public class Achievement {</p>
<pre><code>/**
 * The task type the player has
 */
private TaskType taskType;

/** 
 * The number of targets
 */
private int targets;

/**
 * The number of points
 */
private int points;

/**
 * The npcId the player has
 */
private int npcId;

/**
 * @param taskType
 * @param targets
 * @param points
 * @param npcId
 */
public Achievement(TaskType taskType, int targets, int points, int npcId) {
	this.taskType = taskType;
	this.targets = targets;
	this.points = points;
	this.npcId = npcId;
}

/**
 * @return taskType
 */
public TaskType getTaskType() {
	return taskType;
}

/**
 * @return targets
 */
public int getTargets() {
	return targets;
}

/**
 * @return points
 */
public int getPoints() {
	return points;
}

/**
 * @return npcId
 */
public int getNpcId() {
	return npcId;
}
</code></pre>
<p>}[/code]</p>
<p>And the achievement handler class</p>
<p>[code=java]package org.hyperion.rs2.content;</p>
<p>import org.hyperion.rs2.model.Player;</p>
<p>public class AchievementHandler {</p>
<pre><code>/**
 * The singleton
 */
private static final AchievementHandler singleton = new AchievementHandler();

/**
 * All of the tasks
 * (targets, npcId, points)
 */
private static final int[][] TASKS = {
									{50, 2, 10}
									};

/**
 * The type of task
 */
protected enum TaskType {
	COMBAT, QUEST, CLICKING, WALKING;
}

/**
 * If the player has a task
 */
public boolean hasTask(Player player) {
	return player.getAchievement().getTaskType() != null;
}

/**
 * Gets a new task for the player
 */
public void getTask(Player player) {
	if(hasTask(player)) {
		player.getActionSender().sendMessage("You can only have one task!");
		return;
	}
	int randomArray = player.getRandom().nextInt(TASKS.length);
	TaskType randomTask = TaskType.values()[player.getRandom().nextInt(TaskType.values().length)];
	Achievement achievement = new Achievement(randomTask, TASKS[randomArray][0], TASKS[randomArray][1], TASKS[randomArray][2]);
	player.setAchievement(achievement);
}

/**
 * @return singleton
 */
public static AchievementHandler getSingleton() {
	return singleton;
}
</code></pre>
<p>}[/code]</p>
<p>I wrote these up pretty fast just to give you an idea on how you can make it a bit cleaner. Other than that the idea is cool hopefully you can finish it 100%[/quote]</p>
<p>Thanks i might use some of it, and mind explaining about the singleton, i dont really get how it workssssssssss</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-achievement-system/541924/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-achievement-system/541924/3</link>
        <pubDate>Tue, 08 Apr 2014 22:49:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-541924-3</guid>
        <source url="https://forum.moparisthebest.com/t/pi-achievement-system/541924.rss">[PI] Achievement System</source>
      </item>
      <item>
        <title>[PI] Achievement System</title>
        <dc:creator><![CDATA[@Dan0194 Dan0194]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/dan0194">@Dan0194</a> wrote:</p>
          <blockquote>
              <p>Few things to say I would scrap the enum here and just use an 2d array. Also your hasTask boolean can be shortened by just doing</p>
<p><code>	public boolean hasTask(Player player) {
		return player.getAchievement().getTaskType() != null;
	}</code></p>
<p>In your enum Type constants should all be Caps.</p>
<p>Where you did that switch to get a random type of task you can change it too.</p>
<pre><code class="lang-auto"></code></pre>
<p>I wouldn’t instance the whole class I would probably just put some of those variables in my player class.</p>
<p>I wrote up something just to show you maybe how this can work(It doesn’t make much sense).</p>
<p>Achievement class.</p>
<p>[code=java]package org.hyperion.rs2.content;</p>
<p>import org.hyperion.rs2.content.AchievementHandler.TaskType;</p>
<p>public class Achievement {</p>
<pre><code>/**
 * The task type the player has
 */
private TaskType taskType;

/** 
 * The number of targets
 */
private int targets;

/**
 * The number of points
 */
private int points;

/**
 * The npcId the player has
 */
private int npcId;

/**
 * @param taskType
 * @param targets
 * @param points
 * @param npcId
 */
public Achievement(TaskType taskType, int targets, int points, int npcId) {
	this.taskType = taskType;
	this.targets = targets;
	this.points = points;
	this.npcId = npcId;
}

/**
 * @return taskType
 */
public TaskType getTaskType() {
	return taskType;
}

/**
 * @return targets
 */
public int getTargets() {
	return targets;
}

/**
 * @return points
 */
public int getPoints() {
	return points;
}

/**
 * @return npcId
 */
public int getNpcId() {
	return npcId;
}
</code></pre>
<p>}[/code]</p>
<p>And the achievement handler class</p>
<p>[code=java]package org.hyperion.rs2.content;</p>
<p>import org.hyperion.rs2.model.Player;</p>
<p>public class AchievementHandler {</p>
<pre><code>/**
 * The singleton
 */
private static final AchievementHandler singleton = new AchievementHandler();

/**
 * All of the tasks
 * (targets, npcId, points)
 */
private static final int[][] TASKS = {
									{50, 2, 10}
									};

/**
 * The type of task
 */
protected enum TaskType {
	COMBAT, QUEST, CLICKING, WALKING;
}

/**
 * If the player has a task
 */
public boolean hasTask(Player player) {
	return player.getAchievement().getTaskType() != null;
}

/**
 * Gets a new task for the player
 */
public void getTask(Player player) {
	if(hasTask(player)) {
		player.getActionSender().sendMessage("You can only have one task!");
		return;
	}
	int randomArray = player.getRandom().nextInt(TASKS.length);
	TaskType randomTask = TaskType.values()[player.getRandom().nextInt(TaskType.values().length)];
	Achievement achievement = new Achievement(randomTask, TASKS[randomArray][0], TASKS[randomArray][1], TASKS[randomArray][2]);
	player.setAchievement(achievement);
}

/**
 * @return singleton
 */
public static AchievementHandler getSingleton() {
	return singleton;
}
</code></pre>
<p>}[/code]</p>
<p>I wrote these up pretty fast just to give you an idea on how you can make it a bit cleaner. Other than that the idea is cool hopefully you can finish it 100%</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-achievement-system/541924/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-achievement-system/541924/2</link>
        <pubDate>Tue, 08 Apr 2014 13:58:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-541924-2</guid>
        <source url="https://forum.moparisthebest.com/t/pi-achievement-system/541924.rss">[PI] Achievement System</source>
      </item>
      <item>
        <title>[PI] Achievement System</title>
        <dc:creator><![CDATA[@strucker Strucker]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/strucker">@strucker</a> wrote:</p>
          <blockquote>
              <p>First of all i want to say  that i barely know about achievements, so mess with me.</p>
<p>Second thing is, that this is just a base, and I’m missing some things, I’ll update them as soon as i finish it.</p>
<p>If you’re going to flame, please don’t get your fingers tired, because, i wont get mine tired.</p>
<p>Any constructive criticsm is appreciated.</p>
<p>The task</p>
<p>[code=java]package server.model.players.misc;</p>
<p>import server.model.players.Client;</p>
<p>public class Tasks {</p>
<pre><code>public static enum PVMtasks {
	
	CONSTANT(1, 1, 1, 0);
	
	public int numberOfTargets, achievementPoints, npcId, miscNumber;

	PVMtasks(int numberOfTargets, int achievementPoints, int npcId, int miscNumber) {
		this.numberOfTargets = numberOfTargets;
		this.achievementPoints = achievementPoints;
		this.npcId = npcId;
	}

	public int getTargets() {
		return numberOfTargets;
	}

	public int getPoints() {
		return achievementPoints;
	}

	public int getNpcId() {
		return npcId;
	}
	
	public int getMiscNumber() {
		return miscNumber;
	}
}
</code></pre>
<p>}<br>
[/code]</p>
<p>The achievement handler:</p>
<p>[code=java]package server.model.players.misc;</p>
<p>import server.model.players.Client;<br>
import server.util.Misc;</p>
<p>public class Achievement extends Tasks {</p>
<pre><code>/**
 * Instances the Client
 */
private Client player;

/**
 * Makes the instance we created of the player the same that is put as a
 * variable
 */
public Achievement(Client player) {
	this.player = player;
}

/**
 * The type of achievements that exists
 */
private enum Type {
	Combat, Clicks, Quests, Walking;
};

/**
 * The achievement points the player has
 */
public int points;

/**
 * Adds points to the points variable
 * 
 * @param points
 *            the points that will be added
 */
public void addPoints(int points) {
	this.points = this.points + points;
}

/**
 * A flag to check if the player has a task
 * 
 */
public boolean hasTaskType() {

	/**
	 * If the task type is not a null (Not been initialized) continue
	 */
	if (taskType != null) {

		/**
		 * The player has a task because the task has been initialized
		 */
		return true;
	}

	/**
	 * If the type is a null, or well, wasn't handled in the upper clause, 
	 * We'll pretend that the player doesn't have a task yet.
	 */
	return false;
};

/**
 * The type of the tasks is stored in this variable
 */
public Type taskType;

/**
 * 
 * @return the task type
 */
public Type getTaskType() {
	return taskType;
}

/**
 * Gets the task type
 * 
 * @param finished
 *            if a player has already finished that parameter is set to true
 *            so, the player tasks is set to null
 */
public void setTaskType(boolean finished) {

	/**
	 * If the player has already finished, put the task type as a null So
	 * the player can get another task
	 */
	if (finished) {
		taskType = null;
	}

	/**
	 * If the player already has a task type return
	 */
	if (hasTaskType()) {
		return;
	}

	switch (Misc.random(3)) {
	case 0:
		taskType = Type.Combat;
		break;
	case 1:
		taskType = Type.Clicks;
		break;
	case 2:
		taskType = Type.Quests;
		break;
	case 3:
		taskType = Type.Walking;
		break;
	}
}

public int numberOfActions, targetId, pointsRewarded;

public void getTask() {
	if (getTaskType() == Type.Combat) {
		for (PVMtasks e : PVMtasks.values()) {
			if (Misc.random(4) == e.getMiscNumber()) {
				this.numberOfActions = e.getTargets();
				this.targetId = e.getNpcId();
				this.pointsRewarded = e.getPoints();
			}
		}
	}
}
</code></pre>
<p>}<br>
[/code]<br>
Question, should i have an instance per client in the Achievement class? or rather use static methods?<br>
Or what…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-achievement-system/541924/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-achievement-system/541924/1</link>
        <pubDate>Sun, 06 Apr 2014 07:51:26 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-541924-1</guid>
        <source url="https://forum.moparisthebest.com/t/pi-achievement-system/541924.rss">[PI] Achievement System</source>
      </item>
  </channel>
</rss>
