<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>614 Fight Pits</title>
    <link>https://forum.moparisthebest.com/t/614-fight-pits/519119</link>
    <description>Well hello moparscape! :D lol
Well for the past couple of days I&#39;ve been making FightPits :D lol
There is a reward system but I&#39;ve not added many item Id&#39;s to the array lol You can just do that your self :p
It seems to work perfectly but I&#39;ve not gave it a good testing tbh lol :p
Well anyway this is Fightpits(90% Due to the fact you don&#39;t get a skull when u win(easy add) Also the in-game Viewing orbs(Which I cbf with)) 

The only reason I am giving this out is because I want to know how to improve my programming. 
So please don&#39;t post stuff like &quot;This sucks&quot; Please give a reason for your post this will help me write better code in the future.
I will be making most RS minigames for the 614 revision, so actual things that will help me improve will be appreciated.

Anyway here you go:

Make a new class called:

[ul][*]FightPits.java[/ul]

Add this into it
[CODE]
package dragonkk.rs2rsps.model.minigames;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import dragonkk.rs2rsps.model.World;
import dragonkk.rs2rsps.model.player.Player;
import org.world.event.*;
import dragonkk.rs2rsps.util.Misc;

/*
 * @Author : Crezzy 
 * 
 */

public class FightPits {
	private String winnerName = &quot;None&quot;;
	private final String winnerString = &quot;Current Champion is: &quot; + winnerName;

	private static int timeUntillGame = 60;

	private boolean gameInProcess = false;

	public static List&lt;Player&gt; playersLobby = new ArrayList&lt;Player&gt;();
	public static List&lt;Player&gt; playersInPits = new ArrayList&lt;Player&gt;();

	private final ExecutorService taskExecutor = Executors
			.newFixedThreadPool(Runtime.getRuntime().availableProcessors());

	public void addPlayerLobbyList(Player p) {
		synchronized (playersLobby) {
			playersLobby.add(p);
		}
	}

	public void removePlayerLobbyList(Player p) {
		synchronized (playersLobby) {
			playersLobby.remove(p);
		}
	}

	public void removePlayerPitsList(Player p) {
		synchronized (playersInPits) {
			playersInPits.remove(p);
		}
	}

	/*
	 * the pits process which checks everything todo with fightpits every 1
	 * second || 1000ms
	 */
	private final void pitsProcess() {
		EventManager.submit(new Event(1000) {
			@Override
			public void execute() {
				taskExecutor.submit(new Runnable() {
					@Override
					public void run() {
						processLobbyTimer();
						for (Player pLobby : playersLobby) {
							handleOverlay(pLobby);
							checkIfCanStartGame(pLobby);
							continue;
						}
					}
				});
			}
		});
	}

	private void processLobbyTimer() {
		if (timeUntillGame &gt;= 1 &amp;&amp; playersLobby.size() &gt;= 2) {
			timeUntillGame--;
		}
	}

	/*
	 * Handles the overlay strings
	 */
	private void handleOverlay(Player p) {
		for (Player pl : playersLobby) {
			if (playersLobby.size() == 1) {
				p.getFrames().sendString(&quot;Need 2 Players to Begin The Game&quot;,
						373, 0);
				p.getFrames().sendString(winnerString, 373, 1);
				continue;
			}
			if (playersLobby.size() &gt;= 2 &amp;&amp; playersLobby.contains(p)
					&amp;&amp; !playersInPits.contains(p)) {
				pl.getFrames().sendString(
						&quot;Time until nextgame : &quot; + timeUntillGame, 373, 0);
				pl.getFrames().sendString(winnerString, 373, 1);
				continue;

			}
			if (playersLobby.contains(p) &amp;&amp; gameInProcess == true
					&amp;&amp; !playersInPits.contains(p)) {
				pl.getFrames().sendString(
						&quot;Currently a game being Played. Players Remaining: &quot;
								+ playersInPits.size(), 373, 0);
				pl.getFrames().sendString(winnerString, 373, 1);
				continue;
			}
		}
	}

	/*
	 * @note:Handles the in pitsgame overlay strings
	 */
	private void sendInGameOverlayStrings(Player p) {
		for (Player pl : playersInPits) {
			pl.getFrames().sendString(
					&quot;There are currently &quot; + ((int) playersInPits.size() - 1)
							+ &quot; Foes Remaining&quot;, 373, 0);
			pl.getFrames().sendString(winnerString, 373, 1);
			continue;
		}
	}

	/*
	 * @note:Checks if game can be started
	 */
	private void checkIfCanStartGame(Player p) {
		for (Player pl : playersLobby)
			if (timeUntillGame == 0 &amp;&amp; !playersInPits.contains(pl)
					&amp;&amp; gameInProcess == false &amp;&amp; playersLobby.contains(pl)
					&amp;&amp; playersLobby.size() &gt;= 2) {
				startPitsGame(pl);
				gameInProcess = true;
			} else {
				handleOverlay(pl);
				if (playersLobby.size() == 1) {
					taskExecutor.shutdownNow();
				}
			}
	}

	/*
	 * @note: once the game process reaches the req the game is started
	 */
	private void startPitsGame(Player p) {
		for (Player pl : playersLobby) {
			while (!playersInPits.contains(pl)) {
				getRandomTeleports(pl);
				playersInPits.add(pl);
			}
			sendInGameOverlayStrings(pl);
		}
		playersLobby.clear();
	}

	/*
	 * @note: checks if pits game can end during a Kill || Logout || Leaves area via exit door
	 */
	private void checkIfCanEndPitsGame(Player p) {
		for (Player pl : playersInPits) {
			if (playersInPits.size() &lt;= 1 &amp;&amp; playersInPits.contains(pl)
					&amp;&amp; gameInProcess == true) {
				gameInProcess = false;
				winnerName = pl.getUsername();
				giveReward(pl);
				taskExecutor.shutdownNow();
				playersInPits.clear();
				waitLobby(pl);
			}
		}
	}

	/*
	 * @note: checks if the player is in fight pits lobby
	 */
	private boolean inFightPitsLobby(Player p) {
		int absX = p.getLocation().getX();
		int absY = p.getLocation().getY();
		return (absX &gt;= 2394 &amp;&amp; absX &lt;= 2405 &amp;&amp; absY &gt;= 5169 &amp;&amp; absY &lt;= 5176);
	}

	/*
	 * @note:checks if the player is in fight pits game area
	 */
	private boolean inFightPitsGame(Player p) {
		int absX = p.getLocation().getX();
		int absY = p.getLocation().getY();
		return (absX &gt;= 2368 &amp;&amp; absX &lt;= 2425 &amp;&amp; absY &gt;= 5130 &amp;&amp; absY &lt;= 5167);
	}

	/*
	 * @note:Handles when a player logs into pits area
	 */
	public void handleLogInPits(Player p) {
		if (needsReward(p) == true) {
			giveReward(p);
		}
		if (inFightPitsLobby(p) || inFightPitsGame(p)) {
			p.getMask().getRegion().teleport(2399, 5177, 0, 0);
		}
	}

	/*
	 * @note:Handles when a player logs out while in the pits area
	 */
	public void handleLogOutPits(Player p) {
		if (playersLobby.contains(p)) {
			removePlayerLobbyList(p);
			handleOverlay(p);
		} else if (playersInPits.contains(p)) {
			removePlayerPitsList(p);
			for (Player pl : playersInPits) {
				handleOverlay(pl);
				checkIfCanEndPitsGame(pl);
			}
		}
	}

	/*
	 * @note:Called once a player dies in fight pits
	 */
	public void playerPitsDeath(Player p) {
		if (playersInPits.contains(p)) {
			p.getMask().getRegion().teleport(2399, 5175, 0, 0);
			removePlayerPitsList(p);
			addPlayerLobbyList(p);
			p.getFrames().sendOverlay(373);
			handleOverlay(p);
			for (Player pl : playersInPits) {
				sendInGameOverlayStrings(pl);
				checkIfCanEndPitsGame(pl);
				continue;
			}
		}
	}

	/*
	 * 
	 * @note:the random teleports which occurs once called in the start game
	 * metod
	 */
	private void getRandomTeleports(Player p) {
		switch (Misc.random(4)) {
		case 0:
			p.getMask().getRegion().teleport(2384 + Misc.random(29),
					5133 + Misc.random(4), 0, 0);
			break;
		case 1:
			p.getMask().getRegion().teleport(2410 + Misc.random(4),
					5140 + Misc.random(18), 0, 0);
			break;
		case 2:
			p.getMask().getRegion().teleport(2392 + Misc.random(11),
					5141 + Misc.random(26), 0, 0);
			break;
		case 3:
			p.getMask().getRegion().teleport(2383 + Misc.random(3),
					5141 + Misc.random(15), 0, 0);
			break;
		case 4:
			p.getMask().getRegion().teleport(2392 + Misc.random(12),
					5145 + Misc.random(20), 0, 0);
			break;
		}
	}

	/*
	 * @note:Resets pits varribles when called Via command what I&#39;m using for.
	 */
	public void resetPitsVars() {
		winnerName = &quot;None&quot;;
		timeUntillGame = 0;
		playersLobby.clear();
		playersInPits.clear();
		gameInProcess = false;
		for (Player pl : World.getPlayers()) {
			checkIfCanEndPitsGame(pl);
		}
	}

	/*
	 * the lobby
	 */
	private void waitLobby(Player p) {
		p.getFrames().sendOverlay(373);
		addPlayerLobbyList(p);
		handleOverlay(p);
		if (p.getLocation().getX() == 2399 &amp;&amp; p.getLocation().getY() == 5167) {
			p.getMask().getRegion().teleport(2399, 5169, 0, 0);
		} else if (p.getLocation().getX() == 2399
				&amp;&amp; p.getLocation().getY() == 5177) {
			p.getMask().getRegion().teleport(2399, 5175, 0, 0);
		} else {
			p.getMask().getRegion().teleport(2399, 5175, 0, 0);
		}
		if (playersLobby.size() &gt;= 2 &amp;&amp; gameInProcess == false) {
			timeUntillGame = 60;
			pitsProcess();
		}
	}

	/*
	 * Handles the pits objects.
	 */
	public void pitsObject(Player p, int object) {
		switch (object) {
		case 9369:
			if (p.getLocation().getX() == 2399
					&amp;&amp; p.getLocation().getY() == 5177) {
				waitLobby(p);
			} else if (p.getLocation().getX() == 2399
					&amp;&amp; p.getLocation().getY() == 5175) {
				p.getMask().getRegion().teleport(2399, 5177, 0, 0);
				removePlayerLobbyList(p);
				p.getFrames().sendCloseOverlay();
				for (Player pl : playersLobby) {
					handleOverlay(pl);
				}
			}
			break;
		case 9368:
			if (p.getLocation().getX() == 2399
					&amp;&amp; p.getLocation().getY() == 5169) {
				p.getFrames().sendChatMessage(0,
						&quot;Magical heat prevents you from passing.&quot;);
			} else if (p.getLocation().getX() == 2399
					&amp;&amp; p.getLocation().getY() == 5167) {
				removePlayerPitsList(p);
				waitLobby(p);
				p.getFrames().sendChatMessage(0, &quot;You forfit the game.&quot;);
				for (Player pl : playersInPits) {
					sendInGameOverlayStrings(pl);
				}
			}
		}
	}

	// /////////////////////////////////////rewards
	// Start////////////////////////////////////////////////

	/*
	 * this section of the class will handle the rewards/winner system. Rewards
	 * will be generated randomly depending on which system you choose
	 * Explanation: If you have won a FightPitgame between 1-9 times the rewards
	 * will be generated using the low system. If you have won a FightPits game
	 * more than between 10-49 times then will be generated using the med system
	 * If you have won a fightpits game 50+ times rewards will then will be
	 * generated using the high system.
	 */
	/*
	 * Rewards id&#39;s:
	 */
	private int rewardsLow[] = { 6570, 1127, };
	private int rewardsMed[] = { 6570 };
	private int rewardsHigh[] = { 6570 };

	/*
	 * Randomly generates a low reward. Items are in an array displayed at the
	 * top of the class
	 */
	private int rewardsLow() {
		return rewardsLow[(int) (Math.random() * rewardsLow.length)];
	}

	/*
	 * Randomly generates a medium reward. Items are in an array displayed at
	 * the top of the class
	 */
	private int rewardsMed() {
		return rewardsMed[(int) (Math.random() * rewardsMed.length)];
	}

	/*
	 * Randomly generates a High reward. Items are in an array displayed at the
	 * top of the class
	 */
	private int rewardsHigh() {
		return rewardsHigh[(int) (Math.random() * rewardsHigh.length)];
	}

	/*
	 * Checks if the player needs reward or not.
	 */
	private boolean needsReward(Player p) {
		return p.needPitsReward ? true : false;
	}

	/*
	 * Sends the a message to people on the low rewards system.
	 */
	private void lowMessage(Player p) {
		p.getFrames().sendChatMessage(
				0,
				&quot;You have currently won : &quot; + p.fightPitsWins
						+ &quot; FightPits Games!&quot;);
		p.getFrames().sendChatMessage(0,
				&quot;You are currently on the Low Reward System.&quot;);
		p.getFrames().sendChatMessage(
				0,
				&quot;Win another&quot; + (10 - p.fightPitsWins)
						+ &quot;To progress onto Medium rewards!&quot;);
	}

	/*
	 * Sends the a message to people on the medium rewards system.
	 */
	private void medMessage(Player p) {
		if (p.fightPitsWins == 10) {
			p.getFrames().sendChatMessage(0,
					&quot;Congratulations you have now won 10 games!&quot;);
			p.getFrames().sendChatMessage(0,
					&quot;You have now progressed onto the Medium rewards System!&quot;);
		} else {
			p.getFrames().sendChatMessage(
					0,
					&quot;You have currently won : &quot; + p.fightPitsWins
							+ &quot; FightPits Games!&quot;);
			p.getFrames().sendChatMessage(0,
					&quot;You are currently on the Medium Reward System.&quot;);
			p.getFrames().sendChatMessage(
					0,
					&quot;Win another&quot; + (50 - p.fightPitsWins)
							+ &quot;To progress onto Medium rewards!&quot;);
		}
	}

	/*
	 * Sends the a message to people on the High rewards system.
	 */
	private void HighMessage(Player p) {
		if (p.fightPitsWins == 50) {
			p.getFrames().sendChatMessage(0,
					&quot;Congratulations you have now won 50 games!&quot;);
			p.getFrames().sendChatMessage(0,
					&quot; You have now progressed onto the High Rewards System!&quot;);
		} else {
			p.getFrames().sendChatMessage(
					0,
					&quot;You have currently won : &quot; + p.fightPitsWins
							+ &quot; FightPits Games!&quot;);
			p.getFrames().sendChatMessage(0,
					&quot;You are currently on the High Reward System.&quot;);
		}
	}

	private void invoSpace(Player p) {
		p.needPitsReward = true;
		p
				.getFrames()
				.sendChatMessage(0,
						&quot;Sorry! You currently do not have enough Inventory space to be Rewarded.&quot;);
		p.getFrames().sendChatMessage(0,
				&quot;Please make sure you have Atleast 3 Slots available.&quot;);
		p
				.getFrames()
				.sendChatMessage(0,
						&quot;Then please Relog with atleast 3 Inventory spaces to be Rewarded!&quot;);
	}

	/*
	 * checks which reward player will receive I.e Low,Med or High depending on
	 * how many FightPit Games they have won. checks which message to be sent
	 */
	private void giveReward(Player p) {
		p.fightPitsWins++;
		p.getFrames().sendChatMessage(0,
				&quot;Congratulations! You have won the game of Fight Pits!&quot;);
		if (p.getInventory().getFreeSlots() &lt;= 3) {
			invoSpace(p);
			return;
		}
		p.needPitsReward = false;
		if (p.fightPitsWins &gt;= 1 &amp;&amp; p.fightPitsWins &lt;= 9) {
			p.getInventory().addItem(rewardsLow(), 1);
			p.getInventory().addItem(6529, 100);
			p.getInventory().addItem(995, 100000);
			lowMessage(p);
		} else if (p.fightPitsWins &gt;= 10 &amp;&amp; p.fightPitsWins &lt;= 49) {
			p.getInventory().addItem(rewardsMed(), 1);
			p.getInventory().addItem(6529, 500);
			p.getInventory().addItem(995, 500000);
			medMessage(p);
		} else if (p.fightPitsWins &gt;= 50) {
			p.getInventory().addItem(rewardsHigh(), 1);
			p.getInventory().addItem(6529, 1000);
			p.getInventory().addItem(995, 1000000);
			HighMessage(p);
		}
	}
}
[/CODE]

Add this into Player.java
[CODE]
    /*
     * fight pits
     */
    public int fightPitsWins;
    public boolean needPitsReward;
[/CODE]

Frames.java
[CODE]
import dragonkk.rs2rsps.model.minigames.FightPits;
[/CODE]
Make the start of this method look like this:
[CODE]
public void sendOtherLoginPackets() {
		FightPits pits = new FightPits();
		pits.handleLogInPits(player);
[/CODE]

World.java 
[CODE]
import dragonkk.rs2rsps.model.minigames.FightPits;
[/CODE]
Make the start of this method look like this:
[CODE]
    public static void unRegisterConnection(final ConnectionHandler p) {
		final Player player = p.getPlayer();
		FightPits pits = new FightPits();
		pits.handleLogOutPits(player);
[/CODE]
In Skills.java
[CODE]
import dragonkk.rs2rsps.model.minigames.FightPits;
[/CODE]
Look for your death method and where it teleports the player. 
Highlight that line and replace with:
[CODE]
                                                FightPits pits = new FightPits();
						if(pits.playersInPits.contains(player)){
								pits.playerPitsDeath(player);
							} else {
							player.getMask().getRegion().teleport(World.homeX, World.homeY, 0, 0);
						}	
[/CODE]

Finally create two new object scripts:
o9369.java
[CODE]
package dragonkk.rs2rsps.scripts.objects;

import dragonkk.rs2rsps.model.player.Player;
import dragonkk.rs2rsps.scripts.objectScript;
import dragonkk.rs2rsps.model.minigames.FightPits;

public class o9369 extends objectScript {

	@Override
	public void examine(Player p) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void option1(Player p, int coordX, int coordY, int height) {
		FightPits pits = new FightPits();
		pits.pitsObject(p, 9369);	
		}
	

	@Override
	public void option2(Player p, int coordX, int coordY, int height) {
		// TODO Auto-generated method stub
		
	}

}
[/CODE]
[CODE]
o9368.java
package dragonkk.rs2rsps.scripts.objects;

import dragonkk.rs2rsps.model.player.Player;
import dragonkk.rs2rsps.scripts.objectScript;
import dragonkk.rs2rsps.model.minigames.FightPits;

public class o9368 extends objectScript {

	@Override
	public void examine(Player p) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void option1(Player p, int coordX, int coordY, int height) {
		FightPits pits = new FightPits();
		pits.pitsObject(p, 9368);	
		}
	

	@Override
	public void option2(Player p, int coordX, int coordY, int height) {
		// TODO Auto-generated method stub
		
	}

}
[/CODE]

That should be it all I think lol :p
Anyway please post comments of what you think.</description>
    
    <lastBuildDate>Mon, 13 May 2013 23:45:23 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/614-fight-pits/519119.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>614 Fight Pits</title>
        <dc:creator><![CDATA[@crezzy crezzy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/crezzy">@crezzy</a> wrote:</p>
          <blockquote>
              <p>Umm move it idc lol <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/614-fight-pits/519119/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/614-fight-pits/519119/4</link>
        <pubDate>Mon, 13 May 2013 23:45:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-519119-4</guid>
        <source url="https://forum.moparisthebest.com/t/614-fight-pits/519119.rss">614 Fight Pits</source>
      </item>
      <item>
        <title>614 Fight Pits</title>
        <dc:creator><![CDATA[@Flame3 John]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/flame3">@Flame3</a> wrote:</p>
          <blockquote>
              <p>Please explain your code, otherwise this will be moved to the Snippets section.<br>
Thanks for the contribution.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/614-fight-pits/519119/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/614-fight-pits/519119/3</link>
        <pubDate>Mon, 13 May 2013 21:00:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-519119-3</guid>
        <source url="https://forum.moparisthebest.com/t/614-fight-pits/519119.rss">614 Fight Pits</source>
      </item>
      <item>
        <title>614 Fight Pits</title>
        <dc:creator><![CDATA[@killerjens9 killerjens9]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/killerjens9">@killerjens9</a> wrote:</p>
          <blockquote>
              <p>nice but where can i get a 614 source,client and cache ive looked for a long time but never find one.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/614-fight-pits/519119/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/614-fight-pits/519119/2</link>
        <pubDate>Mon, 13 May 2013 20:59:45 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-519119-2</guid>
        <source url="https://forum.moparisthebest.com/t/614-fight-pits/519119.rss">614 Fight Pits</source>
      </item>
      <item>
        <title>614 Fight Pits</title>
        <dc:creator><![CDATA[@crezzy crezzy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/crezzy">@crezzy</a> wrote:</p>
          <blockquote>
              <p>Well hello moparscape! <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"> lol<br>
Well for the past couple of days I’ve been making FightPits <img src="https://forum.moparisthebest.com/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"> lol<br>
There is a reward system but I’ve not added many item Id’s to the array lol You can just do that your self <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"><br>
It seems to work perfectly but I’ve not gave it a good testing tbh lol <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"><br>
Well anyway this is Fightpits(90% Due to the fact you don’t get a skull when u win(easy add) Also the in-game Viewing orbs(Which I cbf with))</p>
<p>The only reason I am giving this out is because I want to know how to improve my programming.<br>
So please don’t post stuff like “This sucks” Please give a reason for your post this will help me write better code in the future.<br>
I will be making most RS minigames for the 614 revision, so actual things that will help me improve will be appreciated.</p>
<p>Anyway here you go:</p>
<p>Make a new class called:</p>
<p>[ul][*]FightPits.java[/ul]</p>
<p>Add this into it</p>
<pre><code class="lang-auto">package dragonkk.rs2rsps.model.minigames;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import dragonkk.rs2rsps.model.World;
import dragonkk.rs2rsps.model.player.Player;
import org.world.event.*;
import dragonkk.rs2rsps.util.Misc;

/*
 * @Author : Crezzy 
 * 
 */

public class FightPits {
	private String winnerName = "None";
	private final String winnerString = "Current Champion is: " + winnerName;

	private static int timeUntillGame = 60;

	private boolean gameInProcess = false;

	public static List&lt;Player&gt; playersLobby = new ArrayList&lt;Player&gt;();
	public static List&lt;Player&gt; playersInPits = new ArrayList&lt;Player&gt;();

	private final ExecutorService taskExecutor = Executors
			.newFixedThreadPool(Runtime.getRuntime().availableProcessors());

	public void addPlayerLobbyList(Player p) {
		synchronized (playersLobby) {
			playersLobby.add(p);
		}
	}

	public void removePlayerLobbyList(Player p) {
		synchronized (playersLobby) {
			playersLobby.remove(p);
		}
	}

	public void removePlayerPitsList(Player p) {
		synchronized (playersInPits) {
			playersInPits.remove(p);
		}
	}

	/*
	 * the pits process which checks everything todo with fightpits every 1
	 * second || 1000ms
	 */
	private final void pitsProcess() {
		EventManager.submit(new Event(1000) {
			@Override
			public void execute() {
				taskExecutor.submit(new Runnable() {
					@Override
					public void run() {
						processLobbyTimer();
						for (Player pLobby : playersLobby) {
							handleOverlay(pLobby);
							checkIfCanStartGame(pLobby);
							continue;
						}
					}
				});
			}
		});
	}

	private void processLobbyTimer() {
		if (timeUntillGame &gt;= 1 &amp;&amp; playersLobby.size() &gt;= 2) {
			timeUntillGame--;
		}
	}

	/*
	 * Handles the overlay strings
	 */
	private void handleOverlay(Player p) {
		for (Player pl : playersLobby) {
			if (playersLobby.size() == 1) {
				p.getFrames().sendString("Need 2 Players to Begin The Game",
						373, 0);
				p.getFrames().sendString(winnerString, 373, 1);
				continue;
			}
			if (playersLobby.size() &gt;= 2 &amp;&amp; playersLobby.contains(p)
					&amp;&amp; !playersInPits.contains(p)) {
				pl.getFrames().sendString(
						"Time until nextgame : " + timeUntillGame, 373, 0);
				pl.getFrames().sendString(winnerString, 373, 1);
				continue;

			}
			if (playersLobby.contains(p) &amp;&amp; gameInProcess == true
					&amp;&amp; !playersInPits.contains(p)) {
				pl.getFrames().sendString(
						"Currently a game being Played. Players Remaining: "
								+ playersInPits.size(), 373, 0);
				pl.getFrames().sendString(winnerString, 373, 1);
				continue;
			}
		}
	}

	/*
	 * @note:Handles the in pitsgame overlay strings
	 */
	private void sendInGameOverlayStrings(Player p) {
		for (Player pl : playersInPits) {
			pl.getFrames().sendString(
					"There are currently " + ((int) playersInPits.size() - 1)
							+ " Foes Remaining", 373, 0);
			pl.getFrames().sendString(winnerString, 373, 1);
			continue;
		}
	}

	/*
	 * @note:Checks if game can be started
	 */
	private void checkIfCanStartGame(Player p) {
		for (Player pl : playersLobby)
			if (timeUntillGame == 0 &amp;&amp; !playersInPits.contains(pl)
					&amp;&amp; gameInProcess == false &amp;&amp; playersLobby.contains(pl)
					&amp;&amp; playersLobby.size() &gt;= 2) {
				startPitsGame(pl);
				gameInProcess = true;
			} else {
				handleOverlay(pl);
				if (playersLobby.size() == 1) {
					taskExecutor.shutdownNow();
				}
			}
	}

	/*
	 * @note: once the game process reaches the req the game is started
	 */
	private void startPitsGame(Player p) {
		for (Player pl : playersLobby) {
			while (!playersInPits.contains(pl)) {
				getRandomTeleports(pl);
				playersInPits.add(pl);
			}
			sendInGameOverlayStrings(pl);
		}
		playersLobby.clear();
	}

	/*
	 * @note: checks if pits game can end during a Kill || Logout || Leaves area via exit door
	 */
	private void checkIfCanEndPitsGame(Player p) {
		for (Player pl : playersInPits) {
			if (playersInPits.size() &lt;= 1 &amp;&amp; playersInPits.contains(pl)
					&amp;&amp; gameInProcess == true) {
				gameInProcess = false;
				winnerName = pl.getUsername();
				giveReward(pl);
				taskExecutor.shutdownNow();
				playersInPits.clear();
				waitLobby(pl);
			}
		}
	}

	/*
	 * @note: checks if the player is in fight pits lobby
	 */
	private boolean inFightPitsLobby(Player p) {
		int absX = p.getLocation().getX();
		int absY = p.getLocation().getY();
		return (absX &gt;= 2394 &amp;&amp; absX &lt;= 2405 &amp;&amp; absY &gt;= 5169 &amp;&amp; absY &lt;= 5176);
	}

	/*
	 * @note:checks if the player is in fight pits game area
	 */
	private boolean inFightPitsGame(Player p) {
		int absX = p.getLocation().getX();
		int absY = p.getLocation().getY();
		return (absX &gt;= 2368 &amp;&amp; absX &lt;= 2425 &amp;&amp; absY &gt;= 5130 &amp;&amp; absY &lt;= 5167);
	}

	/*
	 * @note:Handles when a player logs into pits area
	 */
	public void handleLogInPits(Player p) {
		if (needsReward(p) == true) {
			giveReward(p);
		}
		if (inFightPitsLobby(p) || inFightPitsGame(p)) {
			p.getMask().getRegion().teleport(2399, 5177, 0, 0);
		}
	}

	/*
	 * @note:Handles when a player logs out while in the pits area
	 */
	public void handleLogOutPits(Player p) {
		if (playersLobby.contains(p)) {
			removePlayerLobbyList(p);
			handleOverlay(p);
		} else if (playersInPits.contains(p)) {
			removePlayerPitsList(p);
			for (Player pl : playersInPits) {
				handleOverlay(pl);
				checkIfCanEndPitsGame(pl);
			}
		}
	}

	/*
	 * @note:Called once a player dies in fight pits
	 */
	public void playerPitsDeath(Player p) {
		if (playersInPits.contains(p)) {
			p.getMask().getRegion().teleport(2399, 5175, 0, 0);
			removePlayerPitsList(p);
			addPlayerLobbyList(p);
			p.getFrames().sendOverlay(373);
			handleOverlay(p);
			for (Player pl : playersInPits) {
				sendInGameOverlayStrings(pl);
				checkIfCanEndPitsGame(pl);
				continue;
			}
		}
	}

	/*
	 * 
	 * @note:the random teleports which occurs once called in the start game
	 * metod
	 */
	private void getRandomTeleports(Player p) {
		switch (Misc.random(4)) {
		case 0:
			p.getMask().getRegion().teleport(2384 + Misc.random(29),
					5133 + Misc.random(4), 0, 0);
			break;
		case 1:
			p.getMask().getRegion().teleport(2410 + Misc.random(4),
					5140 + Misc.random(18), 0, 0);
			break;
		case 2:
			p.getMask().getRegion().teleport(2392 + Misc.random(11),
					5141 + Misc.random(26), 0, 0);
			break;
		case 3:
			p.getMask().getRegion().teleport(2383 + Misc.random(3),
					5141 + Misc.random(15), 0, 0);
			break;
		case 4:
			p.getMask().getRegion().teleport(2392 + Misc.random(12),
					5145 + Misc.random(20), 0, 0);
			break;
		}
	}

	/*
	 * @note:Resets pits varribles when called Via command what I'm using for.
	 */
	public void resetPitsVars() {
		winnerName = "None";
		timeUntillGame = 0;
		playersLobby.clear();
		playersInPits.clear();
		gameInProcess = false;
		for (Player pl : World.getPlayers()) {
			checkIfCanEndPitsGame(pl);
		}
	}

	/*
	 * the lobby
	 */
	private void waitLobby(Player p) {
		p.getFrames().sendOverlay(373);
		addPlayerLobbyList(p);
		handleOverlay(p);
		if (p.getLocation().getX() == 2399 &amp;&amp; p.getLocation().getY() == 5167) {
			p.getMask().getRegion().teleport(2399, 5169, 0, 0);
		} else if (p.getLocation().getX() == 2399
				&amp;&amp; p.getLocation().getY() == 5177) {
			p.getMask().getRegion().teleport(2399, 5175, 0, 0);
		} else {
			p.getMask().getRegion().teleport(2399, 5175, 0, 0);
		}
		if (playersLobby.size() &gt;= 2 &amp;&amp; gameInProcess == false) {
			timeUntillGame = 60;
			pitsProcess();
		}
	}

	/*
	 * Handles the pits objects.
	 */
	public void pitsObject(Player p, int object) {
		switch (object) {
		case 9369:
			if (p.getLocation().getX() == 2399
					&amp;&amp; p.getLocation().getY() == 5177) {
				waitLobby(p);
			} else if (p.getLocation().getX() == 2399
					&amp;&amp; p.getLocation().getY() == 5175) {
				p.getMask().getRegion().teleport(2399, 5177, 0, 0);
				removePlayerLobbyList(p);
				p.getFrames().sendCloseOverlay();
				for (Player pl : playersLobby) {
					handleOverlay(pl);
				}
			}
			break;
		case 9368:
			if (p.getLocation().getX() == 2399
					&amp;&amp; p.getLocation().getY() == 5169) {
				p.getFrames().sendChatMessage(0,
						"Magical heat prevents you from passing.");
			} else if (p.getLocation().getX() == 2399
					&amp;&amp; p.getLocation().getY() == 5167) {
				removePlayerPitsList(p);
				waitLobby(p);
				p.getFrames().sendChatMessage(0, "You forfit the game.");
				for (Player pl : playersInPits) {
					sendInGameOverlayStrings(pl);
				}
			}
		}
	}

	// /////////////////////////////////////rewards
	// Start////////////////////////////////////////////////

	/*
	 * this section of the class will handle the rewards/winner system. Rewards
	 * will be generated randomly depending on which system you choose
	 * Explanation: If you have won a FightPitgame between 1-9 times the rewards
	 * will be generated using the low system. If you have won a FightPits game
	 * more than between 10-49 times then will be generated using the med system
	 * If you have won a fightpits game 50+ times rewards will then will be
	 * generated using the high system.
	 */
	/*
	 * Rewards id's:
	 */
	private int rewardsLow[] = { 6570, 1127, };
	private int rewardsMed[] = { 6570 };
	private int rewardsHigh[] = { 6570 };

	/*
	 * Randomly generates a low reward. Items are in an array displayed at the
	 * top of the class
	 */
	private int rewardsLow() {
		return rewardsLow[(int) (Math.random() * rewardsLow.length)];
	}

	/*
	 * Randomly generates a medium reward. Items are in an array displayed at
	 * the top of the class
	 */
	private int rewardsMed() {
		return rewardsMed[(int) (Math.random() * rewardsMed.length)];
	}

	/*
	 * Randomly generates a High reward. Items are in an array displayed at the
	 * top of the class
	 */
	private int rewardsHigh() {
		return rewardsHigh[(int) (Math.random() * rewardsHigh.length)];
	}

	/*
	 * Checks if the player needs reward or not.
	 */
	private boolean needsReward(Player p) {
		return p.needPitsReward ? true : false;
	}

	/*
	 * Sends the a message to people on the low rewards system.
	 */
	private void lowMessage(Player p) {
		p.getFrames().sendChatMessage(
				0,
				"You have currently won : " + p.fightPitsWins
						+ " FightPits Games!");
		p.getFrames().sendChatMessage(0,
				"You are currently on the Low Reward System.");
		p.getFrames().sendChatMessage(
				0,
				"Win another" + (10 - p.fightPitsWins)
						+ "To progress onto Medium rewards!");
	}

	/*
	 * Sends the a message to people on the medium rewards system.
	 */
	private void medMessage(Player p) {
		if (p.fightPitsWins == 10) {
			p.getFrames().sendChatMessage(0,
					"Congratulations you have now won 10 games!");
			p.getFrames().sendChatMessage(0,
					"You have now progressed onto the Medium rewards System!");
		} else {
			p.getFrames().sendChatMessage(
					0,
					"You have currently won : " + p.fightPitsWins
							+ " FightPits Games!");
			p.getFrames().sendChatMessage(0,
					"You are currently on the Medium Reward System.");
			p.getFrames().sendChatMessage(
					0,
					"Win another" + (50 - p.fightPitsWins)
							+ "To progress onto Medium rewards!");
		}
	}

	/*
	 * Sends the a message to people on the High rewards system.
	 */
	private void HighMessage(Player p) {
		if (p.fightPitsWins == 50) {
			p.getFrames().sendChatMessage(0,
					"Congratulations you have now won 50 games!");
			p.getFrames().sendChatMessage(0,
					" You have now progressed onto the High Rewards System!");
		} else {
			p.getFrames().sendChatMessage(
					0,
					"You have currently won : " + p.fightPitsWins
							+ " FightPits Games!");
			p.getFrames().sendChatMessage(0,
					"You are currently on the High Reward System.");
		}
	}

	private void invoSpace(Player p) {
		p.needPitsReward = true;
		p
				.getFrames()
				.sendChatMessage(0,
						"Sorry! You currently do not have enough Inventory space to be Rewarded.");
		p.getFrames().sendChatMessage(0,
				"Please make sure you have Atleast 3 Slots available.");
		p
				.getFrames()
				.sendChatMessage(0,
						"Then please Relog with atleast 3 Inventory spaces to be Rewarded!");
	}

	/*
	 * checks which reward player will receive I.e Low,Med or High depending on
	 * how many FightPit Games they have won. checks which message to be sent
	 */
	private void giveReward(Player p) {
		p.fightPitsWins++;
		p.getFrames().sendChatMessage(0,
				"Congratulations! You have won the game of Fight Pits!");
		if (p.getInventory().getFreeSlots() &lt;= 3) {
			invoSpace(p);
			return;
		}
		p.needPitsReward = false;
		if (p.fightPitsWins &gt;= 1 &amp;&amp; p.fightPitsWins &lt;= 9) {
			p.getInventory().addItem(rewardsLow(), 1);
			p.getInventory().addItem(6529, 100);
			p.getInventory().addItem(995, 100000);
			lowMessage(p);
		} else if (p.fightPitsWins &gt;= 10 &amp;&amp; p.fightPitsWins &lt;= 49) {
			p.getInventory().addItem(rewardsMed(), 1);
			p.getInventory().addItem(6529, 500);
			p.getInventory().addItem(995, 500000);
			medMessage(p);
		} else if (p.fightPitsWins &gt;= 50) {
			p.getInventory().addItem(rewardsHigh(), 1);
			p.getInventory().addItem(6529, 1000);
			p.getInventory().addItem(995, 1000000);
			HighMessage(p);
		}
	}
}</code></pre>
<p>Add this into Player.java</p>
<pre><code class="lang-auto">    /*
     * fight pits
     */
    public int fightPitsWins;
    public boolean needPitsReward;</code></pre>
<p>Frames.java</p>
<pre><code class="lang-auto">import dragonkk.rs2rsps.model.minigames.FightPits;</code></pre>
<p>Make the start of this method look like this:</p>
<pre><code class="lang-auto">public void sendOtherLoginPackets() {
		FightPits pits = new FightPits();
		pits.handleLogInPits(player);</code></pre>
<p>World.java</p>
<pre><code class="lang-auto">import dragonkk.rs2rsps.model.minigames.FightPits;</code></pre>
<p>Make the start of this method look like this:</p>
<pre><code class="lang-auto">    public static void unRegisterConnection(final ConnectionHandler p) {
		final Player player = p.getPlayer();
		FightPits pits = new FightPits();
		pits.handleLogOutPits(player);</code></pre>
<p>In Skills.java</p>
<pre><code class="lang-auto">import dragonkk.rs2rsps.model.minigames.FightPits;</code></pre>
<p>Look for your death method and where it teleports the player.<br>
Highlight that line and replace with:</p>
<pre><code class="lang-auto">                                                FightPits pits = new FightPits();
						if(pits.playersInPits.contains(player)){
								pits.playerPitsDeath(player);
							} else {
							player.getMask().getRegion().teleport(World.homeX, World.homeY, 0, 0);
						}	</code></pre>
<p>Finally create two new object scripts:<br>
o9369.java</p>
<pre><code class="lang-auto">package dragonkk.rs2rsps.scripts.objects;

import dragonkk.rs2rsps.model.player.Player;
import dragonkk.rs2rsps.scripts.objectScript;
import dragonkk.rs2rsps.model.minigames.FightPits;

public class o9369 extends objectScript {

	@Override
	public void examine(Player p) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void option1(Player p, int coordX, int coordY, int height) {
		FightPits pits = new FightPits();
		pits.pitsObject(p, 9369);	
		}
	

	@Override
	public void option2(Player p, int coordX, int coordY, int height) {
		// TODO Auto-generated method stub
		
	}

}</code></pre>
<pre><code class="lang-auto">o9368.java
package dragonkk.rs2rsps.scripts.objects;

import dragonkk.rs2rsps.model.player.Player;
import dragonkk.rs2rsps.scripts.objectScript;
import dragonkk.rs2rsps.model.minigames.FightPits;

public class o9368 extends objectScript {

	@Override
	public void examine(Player p) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void option1(Player p, int coordX, int coordY, int height) {
		FightPits pits = new FightPits();
		pits.pitsObject(p, 9368);	
		}
	

	@Override
	public void option2(Player p, int coordX, int coordY, int height) {
		// TODO Auto-generated method stub
		
	}

}</code></pre>
<p>That should be it all I think lol <img src="https://forum.moparisthebest.com/images/emoji/twitter/stuck_out_tongue.png?v=5" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"><br>
Anyway please post comments of what you think.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/614-fight-pits/519119/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/614-fight-pits/519119/1</link>
        <pubDate>Mon, 13 May 2013 15:38:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-519119-1</guid>
        <source url="https://forum.moparisthebest.com/t/614-fight-pits/519119.rss">614 Fight Pits</source>
      </item>
  </channel>
</rss>
