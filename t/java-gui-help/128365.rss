<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Java GUI help</title>
    <link>https://forum.moparisthebest.com/t/java-gui-help/128365</link>
    <description>Hey, I&#39;ve been fooling around with GUI making in Java. I&#39;ve just made a little thing with a progress bar.

[code=java]/*
 * GUI1.java
 *
 * Created on July 30, 2007, 3:56 AM
 */

/**
 *
 * @author  Kevin
 */
public class GUI1 extends javax.swing.JFrame {
    
    /** Creates new form GUI1 */
    public GUI1() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {
        progressBar = new javax.swing.JProgressBar();
        exitButton = new javax.swing.JToggleButton();
        clearButton = new javax.swing.JToggleButton();
        addTenButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        exitButton.setText(&quot;Exit&quot;);
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        clearButton.setText(&quot;Clear&quot;);
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        addTenButton.setText(&quot;Add ten&quot;);
        addTenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTenButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(progressBar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(addTenButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exitButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addTenButton)
                    .addComponent(clearButton)
                    .addComponent(exitButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pack();
    }

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {
        System.exit(1);
    }

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {
        progressBar.setValue(0);
    }

    private void addTenButtonActionPerformed(java.awt.event.ActionEvent evt) {
        progressBar.setValue(progressBar.getValue() + 10);
    }

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI1().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addTenButton;
    private javax.swing.JToggleButton clearButton;
    private javax.swing.JToggleButton exitButton;
    private javax.swing.JProgressBar progressBar;
    // End of variables declaration//GEN-END:variables
    
}[/code]

It just has a progress bar and three buttons, it adds 10 to the bar... blah blah. It works fine because I used NetBeans  :rolleyes:

But, I want to have a separate JFrame, that is up at the same time as the first frame, that displays the progress bar&#39;s current value. That little code snippet would be...

[code=java]jLabel.text(Integer.toString(progressBar.getValue);[/code]

I&#39;m just having trouble figuring out how to have two frames up at once displaying each other&#39;s information.

Thanks!

Incase I screwed the java up through posting (which always seems to happen) the source is attached.</description>
    
    <lastBuildDate>Mon, 30 Jul 2007 21:16:54 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/java-gui-help/128365.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Java GUI help</title>
        <dc:creator><![CDATA[@pizza_pie pizza pie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/pizza_pie">@pizza_pie</a> wrote:</p>
          <blockquote>
              <p>how about this:</p>
<pre><code class="lang-auto">/*
 * GUI1.java
 *
 * Created on July 30, 2007, 3:56 AM
 */
 
/**
 *
 * @author  Kevin
 */
public class GUI1 extends javax.swing.JFrame {
    
    /** Creates new form GUI1 */
    public GUI1() {
        super("GUI2");
         //all of the stuff for the new JFrame goes here... dont forget that when the value of the progressBar is changed, you need to update both windows :)
        setVisible(true);
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {
        progressBar = new javax.swing.JProgressBar();
        exitButton = new javax.swing.JToggleButton();
        clearButton = new javax.swing.JToggleButton();
        addTenButton = new javax.swing.JButton();
 
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
 
        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
 
        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
 
        addTenButton.setText("Add ten");
        addTenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTenButtonActionPerformed(evt);
            }
        });
 
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(progressBar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(addTenButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exitButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addTenButton)
                    .addComponent(clearButton)
                    .addComponent(exitButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pack();
    }
 
    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {
        System.exit(1);
    }
 
    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {
        progressBar.setValue(0);
    }
 
    private void addTenButtonActionPerformed(java.awt.event.ActionEvent evt) {
        progressBar.setValue(progressBar.getValue() + 10);
    }
 
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI1().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addTenButton;
    private javax.swing.JToggleButton clearButton;
    private javax.swing.JToggleButton exitButton;
    private javax.swing.JProgressBar progressBar;
    // End of variables declaration//GEN-END:variables
    
}</code></pre>
<p>Look at teh constructor</p>
<p>if you dont know what that is, find “public GUI1”</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-gui-help/128365/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-gui-help/128365/3</link>
        <pubDate>Mon, 30 Jul 2007 21:16:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-128365-3</guid>
        <source url="https://forum.moparisthebest.com/t/java-gui-help/128365.rss">Java GUI help</source>
      </item>
      <item>
        <title>Java GUI help</title>
        <dc:creator><![CDATA[@Iamadam Iamadam]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/iamadam">@Iamadam</a> wrote:</p>
          <blockquote>
              <p>[code]    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {<br>
progressBar.setValue(0);<br>
}</p>
<pre><code>private void addTenButtonActionPerformed(java.awt.event.ActionEvent evt) {
    progressBar.setValue(progressBar.getValue() + 10);
}[/code]
</code></pre>
<p>Just edit those methods. Just make sure that anything that modifies the JProgressBar’s value, also modifies the value shown in the JLabel.<br>
There are other ways of doing it, but that’s the best I can think of in my sleep deprived state.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-gui-help/128365/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-gui-help/128365/2</link>
        <pubDate>Mon, 30 Jul 2007 16:59:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-128365-2</guid>
        <source url="https://forum.moparisthebest.com/t/java-gui-help/128365.rss">Java GUI help</source>
      </item>
      <item>
        <title>Java GUI help</title>
        <dc:creator><![CDATA[@Penguins Penguins]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/penguins">@Penguins</a> wrote:</p>
          <blockquote>
              <p>Hey, I’ve been fooling around with GUI making in Java. I’ve just made a little thing with a progress bar.</p>
<p>[code=java]/*</p>
<ul>
<li>GUI1.java</li>
<li>
</li>
<li>Created on July 30, 2007, 3:56 AM<br>
*/</li>
</ul>
<p>/**<br>
*</p>
<ul>
<li>
<p><span class="mention">@author</span>  Kevin<br>
*/<br>
public class GUI1 extends javax.swing.JFrame {</p>
<p>/** Creates new form GUI1 */<br>
public GUI1() {<br>
initComponents();<br>
}</p>
<p>/** This method is called from within the constructor to</p>
<ul>
<li>
<p>initialize the form.</p>
</li>
<li>
<p>WARNING: Do NOT modify this code. The content of this method is</p>
</li>
<li>
<p>always regenerated by the Form Editor.<br>
*/<br>
private void initComponents() {<br>
progressBar = new javax.swing.JProgressBar();<br>
exitButton = new javax.swing.JToggleButton();<br>
clearButton = new javax.swing.JToggleButton();<br>
addTenButton = new javax.swing.JButton();</p>
<p>setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);</p>
<p>exitButton.setText(“Exit”);<br>
exitButton.addActionListener(new java.awt.event.ActionListener() {<br>
public void actionPerformed(java.awt.event.ActionEvent evt) {<br>
exitButtonActionPerformed(evt);<br>
}<br>
});</p>
<p>clearButton.setText(“Clear”);<br>
clearButton.addActionListener(new java.awt.event.ActionListener() {<br>
public void actionPerformed(java.awt.event.ActionEvent evt) {<br>
clearButtonActionPerformed(evt);<br>
}<br>
});</p>
<p>addTenButton.setText(“Add ten”);<br>
addTenButton.addActionListener(new java.awt.event.ActionListener() {<br>
public void actionPerformed(java.awt.event.ActionEvent evt) {<br>
addTenButtonActionPerformed(evt);<br>
}<br>
});</p>
<p>javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());<br>
getContentPane().setLayout(layout);<br>
layout.setHorizontalGroup(<br>
layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)<br>
.addGroup(layout.createSequentialGroup()<br>
.addContainerGap()<br>
.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)<br>
.addComponent(progressBar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)<br>
.addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()<br>
.addComponent(addTenButton)<br>
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)<br>
.addComponent(clearButton)<br>
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)<br>
.addComponent(exitButton)))<br>
.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))<br>
);<br>
layout.setVerticalGroup(<br>
layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)<br>
.addGroup(layout.createSequentialGroup()<br>
.addContainerGap()<br>
.addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)<br>
.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)<br>
.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)<br>
.addComponent(addTenButton)<br>
.addComponent(clearButton)<br>
.addComponent(exitButton))<br>
.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))<br>
);<br>
pack();<br>
}</p>
</li>
</ul>
<p>private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {<br>
System.exit(1);<br>
}</p>
<p>private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {<br>
progressBar.setValue(0);<br>
}</p>
<p>private void addTenButtonActionPerformed(java.awt.event.ActionEvent evt) {<br>
progressBar.setValue(progressBar.getValue() + 10);<br>
}</p>
<p>public static void main(String args[]) {<br>
java.awt.EventQueue.invokeLater(new Runnable() {<br>
public void run() {<br>
new GUI1().setVisible(true);<br>
}<br>
});<br>
}</p>
<p>// Variables declaration - do not modify//GEN-BEGIN:variables<br>
private javax.swing.JButton addTenButton;<br>
private javax.swing.JToggleButton clearButton;<br>
private javax.swing.JToggleButton exitButton;<br>
private javax.swing.JProgressBar progressBar;<br>
// End of variables declaration//GEN-END:variables</p>
</li>
</ul>
<p>}[/code]</p>
<p>It just has a progress bar and three buttons, it adds 10 to the bar… blah blah. It works fine because I used NetBeans  :rolleyes:</p>
<p>But, I want to have a separate JFrame, that is up at the same time as the first frame, that displays the progress bar’s current value. That little code snippet would be…</p>
<pre><code class="lang-auto">jLabel.text(Integer.toString(progressBar.getValue);</code></pre>
<p>I’m just having trouble figuring out how to have two frames up at once displaying each other’s information.</p>
<p>Thanks!</p>
<p>Incase I screwed the java up through posting (which always seems to happen) the source is attached.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/java-gui-help/128365/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/java-gui-help/128365/1</link>
        <pubDate>Mon, 30 Jul 2007 13:37:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-128365-1</guid>
        <source url="https://forum.moparisthebest.com/t/java-gui-help/128365.rss">Java GUI help</source>
      </item>
  </channel>
</rss>
