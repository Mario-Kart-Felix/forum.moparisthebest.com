<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Memory utilization</title>
    <link>https://forum.moparisthebest.com/t/memory-utilization/177956</link>
    <description>	I was trying to profile the following piece of code using NetBeans:

[code]public static void main(String[] args)
{
Map&lt;String, String&gt; map = new HashMap&lt;String, String&gt;();
for( int i = 0; i &lt; Integer.MAX_VALUE; ++i )
{
map.put(Integer.val­ueOf(i).toString(), Integer.valueOf(i).­toString());
}
}
[/code]

I set my max and min heap size to be 1GB. I find that the program dies after having created 4M entries (at which point the heap used is at 1GB) although the memory used by the objects as indicated by the Netbeans memory profiler is the following:

String -- 48MB
char[] -- 48 MB
HeapCharBuffer -- 45MB
Integer -- 19MB
HashMap$Entry -- 19MB


This totals to less than 200 MB and the rest of the objects are at 0% of the total used memory. How come the heap usage is at 1GB at this point of time? I am extremely confused. Could someone please explain what might be going on?

Thanks</description>
    
    <lastBuildDate>Wed, 06 Feb 2008 23:10:20 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/memory-utilization/177956.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Memory utilization</title>
        <dc:creator><![CDATA[@Exception Exception]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/exception">@Exception</a> wrote:</p>
          <blockquote>
              <p>I got to 7 million entries and was using only 500mb of heap, in C#.net 3.5, following the original code posted by zilchuary.<br>
Of course, if you actually wanted to maintain a million+ entry hashmap, a language like Haskell would be perfect, due to it’s lazy evaluation techniques.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/memory-utilization/177956/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/memory-utilization/177956/14</link>
        <pubDate>Wed, 06 Feb 2008 23:10:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-177956-14</guid>
        <source url="https://forum.moparisthebest.com/t/memory-utilization/177956.rss">Memory utilization</source>
      </item>
      <item>
        <title>Memory utilization</title>
        <dc:creator><![CDATA[@zstars zstars]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zstars">@zstars</a> wrote:</p>
          <blockquote>
              <p>Of course we are <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=6" title=":slight_smile:" class="emoji" alt=":slight_smile:"><br>
I am just following the line of the thread by posting yet another version of the same test program, in this case, as close to the original as possible, in a different language so as to compare with the original Java test.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/memory-utilization/177956/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/memory-utilization/177956/13</link>
        <pubDate>Wed, 06 Feb 2008 22:17:09 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-177956-13</guid>
        <source url="https://forum.moparisthebest.com/t/memory-utilization/177956.rss">Memory utilization</source>
      </item>
      <item>
        <title>Memory utilization</title>
        <dc:creator><![CDATA[@newbiehacker newbiehacker]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/newbiehacker">@newbiehacker</a> wrote:</p>
          <blockquote>
              <p>Well, there are 2 ways to dramatically increase the performance of the java benchmark.<br>
Firstly, if you set the size of the hashmap before running the tests then it would not have to increase dynamically, thus the performance would be dramatically increased.  Secondly, if you created a string wrapper that only contains the things you actually need in a string (e.g. a char[]), then memory space would be decreased dramatically (and probably also string initialisation time).</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/memory-utilization/177956/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/memory-utilization/177956/12</link>
        <pubDate>Wed, 06 Feb 2008 21:25:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-177956-12</guid>
        <source url="https://forum.moparisthebest.com/t/memory-utilization/177956.rss">Memory utilization</source>
      </item>
      <item>
        <title>Memory utilization</title>
        <dc:creator><![CDATA[@zstars zstars]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zstars">@zstars</a> wrote:</p>
          <blockquote>
              <p>[NOT OPTIMIZED VERSION]<br>
In 60 seconds:<br>
14,727,313 elements</p>
<p>Memory Usage: Around 1.1 gb</p>
<pre><code class="lang-auto">#include &lt;iostream&gt;
#include &lt;map&gt;
#include &lt;string&gt;
#include &lt;boost/thread.hpp&gt;

using namespace std;

volatile bool exittest = false;

void timecontrol()
{
	Sleep(60000);
	exittest = true;
};

void test()
{

	unsigned i;
	try
	{
		char cbuf[15];
		map&lt;string, string&gt; mp;
		for(i = 0; !exittest; ++i)
		{
			itoa(i, cbuf, 10);
			mp[cbuf] = cbuf;
		}

		cout &lt;&lt; "We have completed " &lt;&lt; i &lt;&lt; " iterations." &lt;&lt; endl;
		system("pause");
	}
	catch(std::exception &amp; ex)
	{
		cout &lt;&lt; "Exception caught after " &lt;&lt; i &lt;&lt; " iterations: " &lt;&lt; ex.what() &lt;&lt; endl;
	}
}


int main()
{
	boost::thread th(&amp;timecontrol);
	test();
}</code></pre>
<p>[OPTIMIZED VERSION]<br>
(Note that it could be further optimized by making our own optimized shortstring class)</p>
<p>OWNAGE</p>
<p>In 30 seconds:<br>
12,882,867 elements</p>
<p>Memory Usage: Around 1.1 gb</p>
<p>(It gets out of memory before getting to 60 so I lowered it down lol)</p>
<pre><code class="lang-auto">#include &lt;iostream&gt;
#include &lt;boost/pool/pool.hpp&gt;
#include &lt;boost/pool/object_pool.hpp&gt;
#include &lt;boost/pool/pool_alloc.hpp&gt;
#include &lt;map&gt;
#include &lt;string&gt;
#include &lt;boost/thread.hpp&gt;

using namespace std;

volatile bool exittest = false;

void timecontrol()
{
	Sleep(30000);
	exittest = true;
};

void test()
{

	typedef basic_string&lt;char, char_traits&lt;char&gt;, boost::fast_pool_allocator&lt;char&gt; &gt; astring;
	unsigned i;
	try
	{
		char cbuf[15];
		map&lt;astring, astring, std::less&lt;astring&gt;, boost::fast_pool_allocator&lt;astring&gt; &gt; mp;
		for(i = 0; !exittest; ++i)
		{
			itoa(i, cbuf, 10);
			mp[cbuf] = cbuf;
		}

		cout &lt;&lt; "We have completed " &lt;&lt; i &lt;&lt; " iterations." &lt;&lt; endl;
		system("pause");
	}
	catch(std::exception &amp; ex)
	{
		cout &lt;&lt; "Exception caught after " &lt;&lt; i &lt;&lt; " iterations: " &lt;&lt; ex.what() &lt;&lt; endl;
	}
}


int main()
{
	boost::thread th(&amp;timecontrol);
	test();
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/memory-utilization/177956/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/memory-utilization/177956/11</link>
        <pubDate>Wed, 06 Feb 2008 19:47:44 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-177956-11</guid>
        <source url="https://forum.moparisthebest.com/t/memory-utilization/177956.rss">Memory utilization</source>
      </item>
      <item>
        <title>Memory utilization</title>
        <dc:creator><![CDATA[@zilchuary zilchuary]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zilchuary">@zilchuary</a> wrote:</p>
          <blockquote>
              <p>[quote=“BAsh(CntLgn), post:9, topic:177956”]Try storing them as strings rather than integers. I think the idea is to test the limits of a language’s storage of strings rather than simple 32bit values.</p>
<p>As for java the test is a little unfair. One of the essential features is that you can point multiple times to the same object.<br>
map.put(Integer.val­ueOf(i).toString(), Integer.valueOf(i).­toString());<br>
Should be:<br>
String s = Integer.val­ueOf(i).toString();<br>
map.put(s,s);<br>
Half the space.[/quote]</p>
<p>Okay Thanks</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/memory-utilization/177956/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/memory-utilization/177956/10</link>
        <pubDate>Sun, 03 Feb 2008 16:44:07 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-177956-10</guid>
        <source url="https://forum.moparisthebest.com/t/memory-utilization/177956.rss">Memory utilization</source>
      </item>
      <item>
        <title>Memory utilization</title>
        <dc:creator><![CDATA[@BAsh_CntLgn BAsh(CntLgn)]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bash_cntlgn">@BAsh_CntLgn</a> wrote:</p>
          <blockquote>
              <p>Try storing them as strings rather than integers. I think the idea is to test the limits of a language’s storage of strings rather than simple 32bit values.</p>
<p>As for java the test is a little unfair. One of the essential features is that you can point multiple times to the same object.<br>
map.put(Integer.val­ueOf(i).toString(), Integer.valueOf(i).­toString());<br>
Should be:<br>
String s = Integer.val­ueOf(i).toString();<br>
map.put(s,s);<br>
Half the space.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/memory-utilization/177956/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/memory-utilization/177956/9</link>
        <pubDate>Sun, 03 Feb 2008 12:29:03 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-177956-9</guid>
        <source url="https://forum.moparisthebest.com/t/memory-utilization/177956.rss">Memory utilization</source>
      </item>
      <item>
        <title>Memory utilization</title>
        <dc:creator><![CDATA[@Interdit Interdit]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/interdit">@Interdit</a> wrote:</p>
          <blockquote>
              <p>Well, since everybody (ruler) is flaunting memory efficiencies in languages, C++ is da king plz:</p>
<p>In 60 seconds (we create 54576054 entries, nowhere near the “maximum”, it is already eating a lot of RAM :o), we have 0.023kb per entry average for our little “map”, not much relative usage at all! (over 1.2gb total though).</p>
<p>[code]<span class="hashtag">#include</span> <br>
<span class="hashtag">#include</span> “windows.h”</p>
<p><span class="hashtag">#define</span> RUN_FOR_TICKS 60 * 1000</p>
<p>class Node<br>
{<br>
public:<br>
Node(unsigned int a, unsigned int b);<br>
Node* prev;<br>
Node* next;<br>
unsigned int i;<br>
unsigned int i2;<br>
};</p>
<p>Node::Node(unsigned int a, unsigned int b)<br>
{<br>
i = a;<br>
i2 = b;<br>
}</p>
<p>int main(char* argv)<br>
{<br>
int startTick = GetTickCount();<br>
Node *n = new Node(0, 0);<br>
for (unsigned int i = 1; ; i++)<br>
{<br>
n-&gt;next = new Node(i, i);<br>
n-&gt;next-&gt;prev = n;<br>
n = n-&gt;next;<br>
if (GetTickCount() - startTick &gt; RUN_FOR_TICKS)<br>
{<br>
printf(“Created %d entries in %d ticks\n”, i, GetTickCount() - startTick);<br>
system(“pause”);<br>
// Om, where did my ram go?<br>
while (n &amp;&amp; n-&gt;prev)<br>
{<br>
n = n-&gt;prev;<br>
delete n-&gt;next;<br>
}<br>
system(“pause”);<br>
break;<br>
}</p>
<p>}<br>
return 0;<br>
}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/memory-utilization/177956/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/memory-utilization/177956/8</link>
        <pubDate>Sun, 03 Feb 2008 09:11:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-177956-8</guid>
        <source url="https://forum.moparisthebest.com/t/memory-utilization/177956.rss">Memory utilization</source>
      </item>
      <item>
        <title>Memory utilization</title>
        <dc:creator><![CDATA[@Yz85Racer Yz85Racer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/yz85racer">@Yz85Racer</a> wrote:</p>
          <blockquote>
              <p>[quote=“ruler, post:5, topic:177956”]About 70% is used it by String Objects.</p>
<p>You could get twice that if you used int wrappers known as Interger.</p>
<p>You could probably get x10 that if you used C# which supports int’s in generics.[/quote]<br>
Poor ruler, always trying to justify his view on .net… Even though that may be true.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/memory-utilization/177956/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/memory-utilization/177956/7</link>
        <pubDate>Sun, 03 Feb 2008 08:21:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-177956-7</guid>
        <source url="https://forum.moparisthebest.com/t/memory-utilization/177956.rss">Memory utilization</source>
      </item>
      <item>
        <title>Memory utilization</title>
        <dc:creator><![CDATA[@Exception Exception]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/exception">@Exception</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="5" data-topic="177956">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/ruler/40/5_6bca9977b612b7aeef77ba1ec1cd67b3.png" class="avatar"> ruler:</div>
<blockquote>
<p>You could probably get x10 that if you used C# which supports int’s in generics</p>
</blockquote>
</aside>
<p>He’s not lying, I swear it’s true <img src="https://forum.moparisthebest.com/images/emoji/twitter/wink.png?v=6" title=":wink:" class="emoji" alt=":wink:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/memory-utilization/177956/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/memory-utilization/177956/6</link>
        <pubDate>Sun, 03 Feb 2008 08:18:23 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-177956-6</guid>
        <source url="https://forum.moparisthebest.com/t/memory-utilization/177956.rss">Memory utilization</source>
      </item>
      <item>
        <title>Memory utilization</title>
        <dc:creator><![CDATA[@ruler ruler]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ruler">@ruler</a> wrote:</p>
          <blockquote>
              <p>About 70% is used it by String Objects.</p>
<p>You could get twice that if you used int wrappers known as Interger.</p>
<p>You could probably get x10 that if you used C# which supports int’s in generics.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/memory-utilization/177956/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/memory-utilization/177956/5</link>
        <pubDate>Sun, 03 Feb 2008 08:04:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-177956-5</guid>
        <source url="https://forum.moparisthebest.com/t/memory-utilization/177956.rss">Memory utilization</source>
      </item>
      <item>
        <title>Memory utilization</title>
        <dc:creator><![CDATA[@Yz85Racer Yz85Racer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/yz85racer">@Yz85Racer</a> wrote:</p>
          <blockquote>
              <p>[quote=“Interdit, post:3, topic:177956”]Firstly, he is benchmarking, so sleeping would not do anything. The heap is not dependant on “time”.</p>
<p>I suggest you explore this for yourself. The Java Heap can be complex to understand, but luckily there are tools to both dump and analyze the heap. You can dump the Java heap with:</p>
<p><code>E:\&gt;java -Xrunhprof:format=b,file=snapshot1.hprof Bmark
Dumping Java heap ... allocation sites ... done.</code><br>
and then use HeapAnalyzer from IBM to explore the memory state.</p>
<p>I suggest you create a HashMap sizeof 500 and then see exactly how much memory it takes.<br>
<img src="http://img82.imageshack.us/img82/8991/heapng7.png" alt width="" height=""><br>
as you can see those results make absolutely 0 sense given I added 500 objects to the hashmap. yay.[/quote]<br>
Oh, should of thought he was benchmarking <img src="https://forum.moparisthebest.com/images/emoji/twitter/frowning.png?v=6" title=":frowning:" class="emoji" alt=":frowning:"></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/memory-utilization/177956/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/memory-utilization/177956/4</link>
        <pubDate>Sun, 03 Feb 2008 06:49:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-177956-4</guid>
        <source url="https://forum.moparisthebest.com/t/memory-utilization/177956.rss">Memory utilization</source>
      </item>
      <item>
        <title>Memory utilization</title>
        <dc:creator><![CDATA[@Interdit Interdit]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/interdit">@Interdit</a> wrote:</p>
          <blockquote>
              <p>Firstly, he is benchmarking, so sleeping would not do anything. The heap is not dependant on “time”.</p>
<p>I suggest you explore this for yourself. The Java Heap can be complex to understand, but luckily there are tools to both dump and analyze the heap. You can dump the Java heap with:</p>
<p><code>E:\&gt;java -Xrunhprof:format=b,file=snapshot1.hprof Bmark
Dumping Java heap ... allocation sites ... done.</code><br>
and then use HeapAnalyzer from IBM to explore the memory state.</p>
<p>I suggest you create a HashMap sizeof 500 and then see exactly how much memory it takes.<br>
<img src="http://img82.imageshack.us/img82/8991/heapng7.png" alt width="" height=""><br>
as you can see those results make absolutely 0 sense given I added 500 objects to the hashmap. yay.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/memory-utilization/177956/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/memory-utilization/177956/3</link>
        <pubDate>Sun, 03 Feb 2008 06:31:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-177956-3</guid>
        <source url="https://forum.moparisthebest.com/t/memory-utilization/177956.rss">Memory utilization</source>
      </item>
      <item>
        <title>Memory utilization</title>
        <dc:creator><![CDATA[@Yz85Racer Yz85Racer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/yz85racer">@Yz85Racer</a> wrote:</p>
          <blockquote>
              <p>First, please indent your code.<br>
Second, to do these types of things in masses of the sort, pause the thread for 1 millisecond.<br>
I tried iterating through an array of size around 5000… It would constantly cause heap out of space, as it would.<br>
In the loop try something like;<br>
for(int i = 0; i &lt; Integer.MAX_VALUE; i++) {<br>
// Do the stuff<br>
Thread.sleep(1);<br>
}</p>
<p>It made a massive differance when I tried it, it was at 98-94 cpu usage, with that call of java.lang.Thread.sleep it was down to about 1…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/memory-utilization/177956/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/memory-utilization/177956/2</link>
        <pubDate>Sun, 03 Feb 2008 03:28:58 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-177956-2</guid>
        <source url="https://forum.moparisthebest.com/t/memory-utilization/177956.rss">Memory utilization</source>
      </item>
      <item>
        <title>Memory utilization</title>
        <dc:creator><![CDATA[@zilchuary zilchuary]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/zilchuary">@zilchuary</a> wrote:</p>
          <blockquote>
              <pre><code>I was trying to profile the following piece of code using NetBeans:
</code></pre>
<p><code>public static void main(String[] args)
{
Map&lt;String, String&gt; map = new HashMap&lt;String, String&gt;();
for( int i = 0; i &lt; Integer.MAX_VALUE; ++i )
{
map.put(Integer.val­ueOf(i).toString(), Integer.valueOf(i).­toString());
}
}
</code></p>
<p>I set my max and min heap size to be 1GB. I find that the program dies after having created 4M entries (at which point the heap used is at 1GB) although the memory used by the objects as indicated by the Netbeans memory profiler is the following:</p>
<p>String – 48MB<br>
char[] – 48 MB<br>
HeapCharBuffer – 45MB<br>
Integer – 19MB<br>
HashMap$Entry – 19MB</p>
<p>This totals to less than 200 MB and the rest of the objects are at 0% of the total used memory. How come the heap usage is at 1GB at this point of time? I am extremely confused. Could someone please explain what might be going on?</p>
<p>Thanks</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/memory-utilization/177956/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/memory-utilization/177956/1</link>
        <pubDate>Sun, 03 Feb 2008 00:34:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-177956-1</guid>
        <source url="https://forum.moparisthebest.com/t/memory-utilization/177956.rss">Memory utilization</source>
      </item>
  </channel>
</rss>
