<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>&quot;Silent Mouse&quot;</title>
    <link>https://forum.moparisthebest.com/t/silent-mouse/344672</link>
    <description>Okay, So I&#39;ve set up a few Hooks. But one thing I&#39;ve been interested in but never figured out how to do it was the &quot;silent mouse&quot; as in moving the mouse on the client without affecting the users mouse, allowing it to be minimized. Can anyone share/lead me in the right Direction?

Justin186</description>
    
    <lastBuildDate>Sat, 19 Jun 2010 14:22:01 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/silent-mouse/344672.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>&quot;Silent Mouse&quot;</title>
        <dc:creator><![CDATA[@Justin186 Justin186]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/justin186">@Justin186</a> wrote:</p>
          <blockquote>
              <p>Thankyou guys <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>You’s have been so patient with me and not raged/flamed at all (which I did expect, But I’m happy it didn’t happen)</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/silent-mouse/344672/14">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/silent-mouse/344672/14</link>
        <pubDate>Sat, 19 Jun 2010 14:22:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-344672-14</guid>
        <source url="https://forum.moparisthebest.com/t/silent-mouse/344672.rss">&quot;Silent Mouse&quot;</source>
      </item>
      <item>
        <title>&quot;Silent Mouse&quot;</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>[quote=“Justin186, post:8, topic:344672”]Mopar where is this “test applet” in that RAR file? I can’t seem to find it.<br>
I’m new to this “scene”[/quote]</p>
<p>Sorry for not being more clear, you want to check out the latest source from SVN and not download the zip/rar file.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/silent-mouse/344672/13">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/silent-mouse/344672/13</link>
        <pubDate>Sat, 19 Jun 2010 04:21:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-344672-13</guid>
        <source url="https://forum.moparisthebest.com/t/silent-mouse/344672.rss">&quot;Silent Mouse&quot;</source>
      </item>
      <item>
        <title>&quot;Silent Mouse&quot;</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>[quote=“Justin186, post:10, topic:344672”]Wow thanks <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>And to actually get the instance of the mouse you HAVE to use reflection? or is there a possible way with bcel?[/quote]I don’t think you understand the difference between both. Reflection is a standard Java library used to interact with a running instance of the JVM and with all loaded classes, while BCEL is a bytecode modification library used to modify the content of a class file <span class="bbcode-i">before</span> it’s ran. Therefore, yes. The only way to get a <span class="bbcode-i">running</span> instance of the mouse class is via reflection; you load the client through the classloader, call the static ‘getMouse’ function (located in whichever class you want – preferably an easily identifiable one) and cast to the ‘Mouse’ interface.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/silent-mouse/344672/12">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/silent-mouse/344672/12</link>
        <pubDate>Fri, 18 Jun 2010 15:28:49 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-344672-12</guid>
        <source url="https://forum.moparisthebest.com/t/silent-mouse/344672.rss">&quot;Silent Mouse&quot;</source>
      </item>
      <item>
        <title>&quot;Silent Mouse&quot;</title>
        <dc:creator><![CDATA[@chri5 chri5]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/chri5">@chri5</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group" data-post="10" data-topic="344672">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/justin186/40/5_513041d5f7104045db30895d3b90af16.png" class="avatar"> Justin186:</div>
<blockquote>
<p>And to actually get the instance of the mouse you HAVE to use reflection? or is there a possible way with bcel?</p>
</blockquote>
</aside>
<p>[quote=“abraham2119, post:9, topic:344672”]So basically, once you have that, you have a few static functions in your ‘Client’ interface (that will be injected into ‘client’) since ‘client’ is never renamed and is thus easily identified and upon loading it in your bot, you cast to that interface, call the static function (like “getMouse”) and retrieve an instance of the ‘Mouse’. As so:</p>
<p><code>    Class&lt;?&gt; client = &lt;your_custom_classloader&gt;.loadClass("client");
    Client castedClient = (Client) client;
    Mouse mouse = (Mouse) castedClient.getMouse();
    /* You are now free to call whatever function defined in your 'mouse' interface */
</code>[/quote]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/silent-mouse/344672/11">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/silent-mouse/344672/11</link>
        <pubDate>Fri, 18 Jun 2010 15:22:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-344672-11</guid>
        <source url="https://forum.moparisthebest.com/t/silent-mouse/344672.rss">&quot;Silent Mouse&quot;</source>
      </item>
      <item>
        <title>&quot;Silent Mouse&quot;</title>
        <dc:creator><![CDATA[@Justin186 Justin186]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/justin186">@Justin186</a> wrote:</p>
          <blockquote>
              <p>Wow thanks <img src="https://forum.moparisthebest.com/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>And to actually get the instance of the mouse you HAVE to use reflection? or is there a possible way with bcel?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/silent-mouse/344672/10">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/silent-mouse/344672/10</link>
        <pubDate>Fri, 18 Jun 2010 15:07:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-344672-10</guid>
        <source url="https://forum.moparisthebest.com/t/silent-mouse/344672.rss">&quot;Silent Mouse&quot;</source>
      </item>
      <item>
        <title>&quot;Silent Mouse&quot;</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>[quote=“Justin186, post:6, topic:344672”]Mmmm yeah thanks guys =)<br>
I’ve had a look at an old updater.</p>
<p>Im not quite sure on some of the methods used for the hookMouse thingo</p>
<pre><code class="lang-auto"> public void hackMouse() {
        for (ClassGen cg : classes) {
            String interfaces[] = cg.getInterfaceNames();
            for (String iface : interfaces) {
                if (iface.indexOf("Mouse") != -1) {
                    classnames.put("Mouse", cg.getClassName());
                    ConstantPoolGen cpg = cg.getConstantPool();
                    cpg.setConstant(cpg.lookupUtf8("mouseClicked"), new ConstantUtf8("_mouseClicked"));
                    cpg.setConstant(cpg.lookupUtf8("mousePressed"), new ConstantUtf8("_mousePressed"));
                    cpg.setConstant(cpg.lookupUtf8("mouseReleased"), new ConstantUtf8("_mouseReleased"));
                    cpg.setConstant(cpg.lookupUtf8("mouseEntered"), new ConstantUtf8("_mouseEntered"));
                    cpg.setConstant(cpg.lookupUtf8("mouseExited"), new ConstantUtf8("_mouseExited"));
                    cpg.setConstant(cpg.lookupUtf8("mouseDragged"), new ConstantUtf8("_mouseDragged"));
                    cpg.setConstant(cpg.lookupUtf8("mouseMoved"), new ConstantUtf8("_mouseMoved"));
                    cpg.setConstant(cpg.lookupUtf8("focusGained"), new ConstantUtf8("_focusGained"));
                    cpg.setConstant(cpg.lookupUtf8("focusLost"), new ConstantUtf8("_focusLost"));
                    ((ConstantClass) cpg.getConstant(cg.getSuperclassNameIndex())).setNameIndex(cpg.addUtf8("com/bawt/hook/Mouse"));

                    return;
                }
            }
        }
    }</code></pre>
<p>The only thing I understand whats going on in this is it loops through the classes until it finds one with an interface that is a type of mouse listener (since it contains “mouse” in its name) I don’t really understand any more of it…[/quote]If I recall correctly, that code is straight from RSBot. It basically “detoured” (at the Java level :P) the mouse listener functions to their custom ones (ie “mouseListener” -&gt; “_mouseListener”) which then called the normal ones (ie “mouseListener”) by replacing all invocations of normal ones with its regular one. As to why it looks for the class implementing the ‘Mouse’ interface, it’s because this is the standard way to write a bytecode bot. Basically, one injects an interface and implements the methods defined by that interface, and can then cast the loaded class via reflection to that interface and perform calls to those functions.</p>
<p>Just some pseudocode to get you an idea of how it works:</p>
<pre><code class="lang-auto">class ClientMouseImplementation implements MouseListener, MouseMotionLister..... { //different listeners here
    //....
}[/code] after the updater is ran, it looks something like:
[code]class ClientMouseImplementation implements MouseListener, MouseMotionListener, Mouse.... {

    public int getMouseX() {
        //return last clicked mouse X coordinate
    }

    public int getMouseY() {
        //return last clicked Y coordinate
    }

    public int getMouseMovedX() {
        //return last moved mouse X coordinate
    }

    public int getMouseMovedY() {
        //return last moved mouse Y coordiante
    }
}[/code]Assuming the 'Mouse' interface is as follows:
[code]public interface Mouse {
    public int getMouseX();
    public int getMouseY();
    public int getMouseMovedX();
    public int getMouseMovedY();
}[/code]That interface should just be within your bot's classpath, it doesn't necessarily have to be injected in the client (it's better that it's not as it affects class count and such).

So basically, once you have that, you have a few static functions in your 'Client' interface (that will be injected into 'client') since 'client' is never renamed and is thus easily identified and upon loading it in your bot, you cast to that interface, call the static function (like "getMouse") and retrieve an instance of the 'Mouse'. As so:
[code]    Class&lt;?&gt; client = &lt;your_custom_classloader&gt;.loadClass("client");
    Client castedClient = (Client) client;
    Mouse mouse = (Mouse) castedClient.getMouse();
    /* You are now free to call whatever function defined in your 'mouse' interface */</code></pre>
<p>edit: Didn’t see this above post:</p>
<p>[quote=“Justin186, post:8, topic:344672”]I’ve done Java for quite awhile. I was just unsure on the Bcel method “setConstant(ConstantUtf8, ConstantUtf8)”[/quote]I suggest you learn the basics of the class file internals and get a more in-depth view on bytecode before proceeding with this bot of yours. Basically, each method-invocation instruction (INVOKEVIRTUAL, INVOKESTATIC, INVOKESPECIAL, INVOKEINTERFACE) takes a word (two bytes) as an argument, used as in index into the constant pool. This index points to a ‘method_ref’ constant, which then contains an index into the constant pool corresponding to its ‘name_and_type’ constant. This constant holds 2 indices pointing to two different ‘utf8’ constants, one pointing to the name of the method/field and another pointing to the signature.</p>
<p>In a more visual aspect, it would be like this:</p>
<pre><code class="lang-auto">INVOKE(VIRTUAL/STATIC/SPECIAL/INTERFACE) -&gt; method_ref -&gt; name_and_type -&gt; two utf8 constants (name and signature)</code></pre>
<p>Knowing this, you can now see exactly what the function is doing when replacing the ‘utf8’ constants. It’s replacing the ‘name utf8’ pointed to by the ‘name_and_type’ pointed by an index in the ‘method_ref’ constant pointed by the argument of either of the invoke instructions. The application doesn’t exactly verify it’s pointed to by all these constants, but since the constant pool only stores one of each constant, it’s known that if there’s a reference to the mouse listener functions, there will be a corresponding ‘utf8’ constant in the constant pool for the name of this function.</p>
<p>This may be a bit confusing at first, but once you get the hang of it, it comes naturally. I do suggest you read proper documentation on this, however.</p>
<p><a href="http://java.sun.com/docs/books/jvms/second_edition/html/ClassFile.doc.html" class="onebox" target="_blank" rel="nofollow noopener">http://java.sun.com/docs/books/jvms/second_edition/html/ClassFile.doc.html</a><br>
<a href="http://java.sun.com/docs/books/jvms/second_edition/html/VMSpecIX.fm.html" class="onebox" target="_blank" rel="nofollow noopener">http://java.sun.com/docs/books/jvms/second_edition/html/VMSpecIX.fm.html</a></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/silent-mouse/344672/9">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/silent-mouse/344672/9</link>
        <pubDate>Fri, 18 Jun 2010 10:56:25 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-344672-9</guid>
        <source url="https://forum.moparisthebest.com/t/silent-mouse/344672.rss">&quot;Silent Mouse&quot;</source>
      </item>
      <item>
        <title>&quot;Silent Mouse&quot;</title>
        <dc:creator><![CDATA[@Justin186 Justin186]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/justin186">@Justin186</a> wrote:</p>
          <blockquote>
              <p>I’ve done Java for quite awhile. I was just unsure on the Bcel method “setConstant(ConstantUtf8, ConstantUtf8)”<br>
And Mopar where is this “test applet” in that RAR file? I can’t seem to find it.<br>
I’m new to this “scene”</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/silent-mouse/344672/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/silent-mouse/344672/8</link>
        <pubDate>Fri, 18 Jun 2010 08:35:29 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-344672-8</guid>
        <source url="https://forum.moparisthebest.com/t/silent-mouse/344672.rss">&quot;Silent Mouse&quot;</source>
      </item>
      <item>
        <title>&quot;Silent Mouse&quot;</title>
        <dc:creator><![CDATA[@Ollie Ollie]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/ollie">@Ollie</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="4" data-topic="344672">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/abraham2119/40/5_513041d5f7104045db30895d3b90af16.png" class="avatar"> abraham2119:</div>
<blockquote>
<p>Instead of using Java’s Robot class to move the mouse, you can either directly send fake events to the client via AWT’s event management system or you can write different implementations of sending fake events at the native level, which is <span class="bbcode-b">much less undetectable</span>, especially since the client doesn’t fiddle too much around with native calls.</p>
</blockquote>
</aside>
<p>[me=Ollie]giggles![/me]</p>
<p>Good explaination though, I actually expected this topic to turn into a flame fest! Evidently I was mistaken of the maturity of these forums.</p>
<aside class="quote no-group quote-modified" data-post="6" data-topic="344672">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/justin186/40/5_513041d5f7104045db30895d3b90af16.png" class="avatar"> Justin186:</div>
<blockquote>
<p>The only thing I understand whats going on in this is it loops through the classes until it finds one with an interface that is a type of mouse listener (since it contains “mouse” in its name) I don’t really understand any more of it…</p>
</blockquote>
</aside>
<p>The code you pasted basically replaces the names of the game events, mouse, keyboard and focus with custom ones so that you can intercept as they pass through the client! I don’t actually think you should use this way to emulate mouse movement, White Castle and abraham2119 both posted great information. I suggest learning the fundementals of java abit more then re-reading their posts and having a shot at it.</p>
<p>Good luck.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/silent-mouse/344672/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/silent-mouse/344672/7</link>
        <pubDate>Fri, 18 Jun 2010 08:15:57 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-344672-7</guid>
        <source url="https://forum.moparisthebest.com/t/silent-mouse/344672.rss">&quot;Silent Mouse&quot;</source>
      </item>
      <item>
        <title>&quot;Silent Mouse&quot;</title>
        <dc:creator><![CDATA[@Justin186 Justin186]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/justin186">@Justin186</a> wrote:</p>
          <blockquote>
              <p>Mmmm yeah thanks guys =)<br>
I’ve had a look at an old updater.</p>
<p>Im not quite sure on some of the methods used for the hookMouse thingo</p>
<pre><code class="lang-auto"> public void hackMouse() {
        for (ClassGen cg : classes) {
            String interfaces[] = cg.getInterfaceNames();
            for (String iface : interfaces) {
                if (iface.indexOf("Mouse") != -1) {
                    classnames.put("Mouse", cg.getClassName());
                    ConstantPoolGen cpg = cg.getConstantPool();
                    cpg.setConstant(cpg.lookupUtf8("mouseClicked"), new ConstantUtf8("_mouseClicked"));
                    cpg.setConstant(cpg.lookupUtf8("mousePressed"), new ConstantUtf8("_mousePressed"));
                    cpg.setConstant(cpg.lookupUtf8("mouseReleased"), new ConstantUtf8("_mouseReleased"));
                    cpg.setConstant(cpg.lookupUtf8("mouseEntered"), new ConstantUtf8("_mouseEntered"));
                    cpg.setConstant(cpg.lookupUtf8("mouseExited"), new ConstantUtf8("_mouseExited"));
                    cpg.setConstant(cpg.lookupUtf8("mouseDragged"), new ConstantUtf8("_mouseDragged"));
                    cpg.setConstant(cpg.lookupUtf8("mouseMoved"), new ConstantUtf8("_mouseMoved"));
                    cpg.setConstant(cpg.lookupUtf8("focusGained"), new ConstantUtf8("_focusGained"));
                    cpg.setConstant(cpg.lookupUtf8("focusLost"), new ConstantUtf8("_focusLost"));
                    ((ConstantClass) cpg.getConstant(cg.getSuperclassNameIndex())).setNameIndex(cpg.addUtf8("com/bawt/hook/Mouse"));

                    return;
                }
            }
        }
    }</code></pre>
<p>The only thing I understand whats going on in this is it loops through the classes until it finds one with an interface that is a type of mouse listener (since it contains “mouse” in its name) I don’t really understand any more of it…</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/silent-mouse/344672/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/silent-mouse/344672/6</link>
        <pubDate>Fri, 18 Jun 2010 07:05:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-344672-6</guid>
        <source url="https://forum.moparisthebest.com/t/silent-mouse/344672.rss">&quot;Silent Mouse&quot;</source>
      </item>
      <item>
        <title>&quot;Silent Mouse&quot;</title>
        <dc:creator><![CDATA[@moparisthebest Moparisthebest]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/moparisthebest">@moparisthebest</a> wrote:</p>
          <blockquote>
              <p>This is one thing I feel I really got right in <a href="http://sourceforge.net/projects/cherokeeengine/" data-bbcode="true">cherokee</a>, there is even a test applet so you can test out how real you think your mouse movements look.  You are of course free to use that code however you see fit, in compliance with the license.  You want to look in the com.cherokee.input package.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/silent-mouse/344672/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/silent-mouse/344672/5</link>
        <pubDate>Fri, 18 Jun 2010 04:07:22 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-344672-5</guid>
        <source url="https://forum.moparisthebest.com/t/silent-mouse/344672.rss">&quot;Silent Mouse&quot;</source>
      </item>
      <item>
        <title>&quot;Silent Mouse&quot;</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>Instead of using Java’s Robot class to move the mouse, you can either directly send fake events to the client via AWT’s event management system or you can write different implementations of sending fake events at the native level, which is much less detectable, especially since the client doesn’t fiddle too much around with native calls.</p>
<p>As for the AWT option, you can either invoke ‘Component.dispatchEvent’, as White Castle stated, or you can get an instance of the client’s ‘Mouse’ class via reflection and explicitly call its respective mouse listener function. Both are seemingly easily detectable although the latter is much more detectable seeing how it doesn’t pass through the entire AWT event processing system.</p>
<p>As for the native alternative, this is much less detectable but much more annoying. Firstly, you have to be acquainted with a language that compiles to native, so if you lack this skill you should discard this idea. You also have to be acquainted with the basic use of the JNI API, which isn’t really a hard task to carry out. Secondly, you have to have a basic understanding of how the window-event management works on each underlying operating system you plan on supporting and write a different implementation on each. To be completely honest, the implementation for each OS shouldn’t be more than a couple of calls to its native API.</p>
<p>To sum it all up, the portable Java approach is much, much easier to write but also easily detectable, while the native approach lacks the simplicity the former approach carries, but to the advantage that it will only come to be as detectable as you make it be (for how well you simulate user mouse movement).</p>
<p>As for my personal opinion, just implement the AWT approach as the game’s base of bot-detectability isn’t how these events are sent, but the pattern they are sent in. Speed, accuracy and randomness are all factors that will be taken into account by the server.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/silent-mouse/344672/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/silent-mouse/344672/4</link>
        <pubDate>Fri, 18 Jun 2010 02:56:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-344672-4</guid>
        <source url="https://forum.moparisthebest.com/t/silent-mouse/344672.rss">&quot;Silent Mouse&quot;</source>
      </item>
      <item>
        <title>&quot;Silent Mouse&quot;</title>
        <dc:creator><![CDATA[@White_Castle White Castle]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/white_castle">@White_Castle</a> wrote:</p>
          <blockquote>
              <p>I’ve done some tinkering with this in the past, but I don’t feel like I’ve got a really solid understanding of the precautions you should take. I can try to lead you in the right direction, though.</p>
<p>You’re going to be mostly interested in hijacking Runescape’s implementations of java.awt.Component and sending fake Events (look <a href="http://java.sun.com/j2se/1.5.0/docs/api/java/awt/event/package-summary.html" data-bbcode="true" rel="nofollow noopener">here</a>). Now, I’m not sure how “high detail” Runescape factors into this, but you probably don’t need to worry. AWT is Java’s basic toolkit for writing GUIs (it stands for Abstract Window Toolkit). Every Runescape graphic that you see is “painted” onto a subclass of java.awt.Component (Jagex implements their own… have fun dealing with their magic). Components have associated EventListeners that, well, listen for events, in this case pertaining to user input. Now, as far as I know, all you have to do is hook the appropriate component, construct a legitimate “event” (MouseEvent, KeyEvent, whatever… this is harder than it sounds. Good luck coming up with a real-looking mouse path algorithm), and pass it to Component.dispatchEvent.</p>
<p>This is the part of bot-making that’s likely to get you banned. It’s quite difficult to mimic a real player.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/silent-mouse/344672/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/silent-mouse/344672/3</link>
        <pubDate>Fri, 18 Jun 2010 02:04:11 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-344672-3</guid>
        <source url="https://forum.moparisthebest.com/t/silent-mouse/344672.rss">&quot;Silent Mouse&quot;</source>
      </item>
      <item>
        <title>&quot;Silent Mouse&quot;</title>
        <dc:creator><![CDATA[@Unhandled Unhandled]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/unhandled">@Unhandled</a> wrote:</p>
          <blockquote>
              <p>Just inject mouse events lol!!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/silent-mouse/344672/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/silent-mouse/344672/2</link>
        <pubDate>Fri, 18 Jun 2010 01:48:38 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-344672-2</guid>
        <source url="https://forum.moparisthebest.com/t/silent-mouse/344672.rss">&quot;Silent Mouse&quot;</source>
      </item>
      <item>
        <title>&quot;Silent Mouse&quot;</title>
        <dc:creator><![CDATA[@Justin186 Justin186]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/justin186">@Justin186</a> wrote:</p>
          <blockquote>
              <p>Okay, So I’ve set up a few Hooks. But one thing I’ve been interested in but never figured out how to do it was the “silent mouse” as in moving the mouse on the client without affecting the users mouse, allowing it to be minimized. Can anyone share/lead me in the right Direction?</p>
<p>Justin186</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/silent-mouse/344672/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/silent-mouse/344672/1</link>
        <pubDate>Fri, 18 Jun 2010 01:43:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-344672-1</guid>
        <source url="https://forum.moparisthebest.com/t/silent-mouse/344672.rss">&quot;Silent Mouse&quot;</source>
      </item>
  </channel>
</rss>
