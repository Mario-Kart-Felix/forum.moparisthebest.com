<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Need help with woodcutting</title>
    <link>https://forum.moparisthebest.com/t/need-help-with-woodcutting/292594</link>
    <description>Hello,

I just need to know like on my server there&#39;s sometimes like when you right click on a tree that&#39;s like 10 feets from you, like it still woodcuts. Is there anyway to fix it so like when you right click on a tree that&#39;s like 10 feets away from you, that the character walks to the tree first, and then woodcut. Instead of just woodcutting the tree when it&#39;s like 10 feets away from you? 

Any help as soon as possible would be appreciated.

Also, this is my woodcutting file.

&lt;blockquote&gt;package server.players.Skills;

import server.*;
import server.util.misc;
import server.players.*;


public class Woodcutting implements Skill
{
	public static int skillX = 0;
	public static int skillY = 0;
	public static int toadd = -1;
	public int replace = 1342;
	public final static int VALIDAXE[] = { 1351, 1349, 1353, 1361, 1355, 

1357, 1359, 6739 };
	public static int xp = 0;
	public static int item = -1;
	private client c;

	public Woodcutting(client c, int object, String type, int x, int y)
	{
		this.c = c;
		readInput(this.c.playerLevel[8], type, this.c, x, y, object);
	}
	
	public Woodcutting(client c) 
	{
	this.c = c;
	}
	
	public void readInput(int level, String type, client c, int objectx, int 

objecty, int objectid)
	{
		if (c.getStatus().isBusy()) {
			return;
		}
		synchronized(this)
		{
		if (type.equals(&quot;NM&quot;) &amp;&amp; level &gt;= 1)
		{
			xp = 25;
			item = 1511;
			this.c.cancut = true;
		}
		
		else if (type.equals(&quot;OAK&quot;) &amp;&amp; level &gt;= 15)
		{
			xp = 37;
			item = 1521;
			this.c.cancut = true;
		}
		
		else if (type.equals(&quot;WILL&quot;) &amp;&amp; level &gt;= 30)
		{
			xp = 67;
			item = 1519;
			this.c.cancut = true;
		}
		
		else if (type.equals(&quot;MAP&quot;) &amp;&amp; level &gt;= 45)
		{
			xp = 100;
			item = 1517;
			this.c.cancut = true;
		}
		
		else if (type.equals(&quot;YEW&quot;) &amp;&amp; level &gt;= 60)
		{
			xp = 175;
			item = 1515;
			this.c.cancut = true;
		}
		
		else if (type.equals(&quot;MAGE&quot;) &amp;&amp; level &gt;= 75)
		{
			xp = 250;
			item = 1513;
			this.c.cancut = true;
		}
		
		else
		{
			c.getStatus().setNotBusy();
			this.c.CAM().sendMessage(&quot;You need a higher 

woodcutting level to cut this tree&quot;);
			xp = 0;
			item = -1;
			this.c.cancut = false;
		}
		}
			for (int id : VALIDAXE) {
			if(id == c.playerEquipment[c.playerWeapon] &amp;&amp; 

c.cancut &amp;&amp; canwithaxe(c.playerEquipment[c.playerWeapon], c) || 

c.playerHasItem(id, 1) &amp;&amp; c.cancut &amp;&amp; canwithaxe(id, c)) {
				//System.out.println(&quot;Called&quot;);
				switch (id) {
		case 1351:
					c.wcanim = 879;
					c.intervaldeduction = 0;
					break;
		case 1349:
					c.wcanim = 877;
					c.intervaldeduction = 1;
					break;
		case 1353:
					c.wcanim = 875;
					c.intervaldeduction = 2;
					break;
		case 1361:
					c.wcanim = 873;
					c.intervaldeduction = 3;
					break;
		case 1355:
					c.wcanim = 871;
					c.intervaldeduction = 4;
					break;
		case 1357:
					c.wcanim = 869;
					c.intervaldeduction = 5;
					break;
		case 1359:
					c.wcanim = 867;
					c.intervaldeduction = 6;
					break;
		case 6739:
					c.wcanim = 2846;
					c.intervaldeduction = 7;
					break;
				} try {
				c.getStatus().setBusy();
				this.c.CAM().sendMessage(&quot;You swing 

your axe at the tree&quot;);
				c.TurnPlayerTo(objectx, objecty);
				this.c.wctime = misc.random(20 - 

c.intervaldeduction);
if (type.equals(&quot;NM&quot;) &amp;&amp; !type.equals(&quot;OAK&quot;) &amp;&amp; !type.equals(&quot;WILL&quot;) &amp;&amp; !

type.equals(&quot;MAP&quot;) &amp;&amp; !type.equals(&quot;YEW&quot;) &amp;&amp; !type.equals(&quot;MAGE&quot;)) {
				server.worldObject.registerObject(1, 

objectx, objecty, objectid, replace, 5, 10, 0, objectid);
}
if (type.equals(&quot;OAK&quot;) &amp;&amp; !type.equals(&quot;NM&quot;) &amp;&amp; !type.equals(&quot;WILL&quot;) &amp;&amp; !

type.equals(&quot;MAP&quot;) &amp;&amp; !type.equals(&quot;YEW&quot;) &amp;&amp; !type.equals(&quot;MAGE&quot;)) {
				server.worldObject.registerObject

(1+misc.random(10), objectx, objecty, objectid, replace, 10, 10, 0, objectid);
}
if (type.equals(&quot;WILL&quot;) &amp;&amp; !type.equals(&quot;OAK&quot;) &amp;&amp; !type.equals(&quot;NM&quot;) &amp;&amp; !

type.equals(&quot;MAP&quot;) &amp;&amp; !type.equals(&quot;YEW&quot;) &amp;&amp; !type.equals(&quot;MAGE&quot;)) {
				server.worldObject.registerObject

(1+misc.random(10), objectx, objecty, objectid, replace, 20, 10, 0, objectid);
}
if (type.equals(&quot;MAP&quot;) &amp;&amp; !type.equals(&quot;OAK&quot;) &amp;&amp; !type.equals(&quot;NM&quot;) &amp;&amp; !

type.equals(&quot;WILL&quot;) &amp;&amp; !type.equals(&quot;YEW&quot;) &amp;&amp; !type.equals(&quot;MAGE&quot;)) {
				server.worldObject.registerObject

(1+misc.random(10), objectx, objecty, objectid, replace, 30, 10, 0, objectid);
}
if (type.equals(&quot;YEW&quot;) &amp;&amp; !type.equals(&quot;OAK&quot;) &amp;&amp; !type.equals(&quot;NM&quot;) &amp;&amp; !

type.equals(&quot;WILL&quot;) &amp;&amp; !type.equals(&quot;MAP&quot;) &amp;&amp; !type.equals(&quot;MAGE&quot;)) {
				server.worldObject.registerObject

(1+misc.random(10), objectx, objecty, objectid, replace, 70, 10, 0, objectid);
}
if (type.equals(&quot;MAGE&quot;) &amp;&amp; !type.equals(&quot;OAK&quot;) &amp;&amp; !type.equals(&quot;NM&quot;) &amp;&amp; !

type.equals(&quot;WILL&quot;) &amp;&amp; !type.equals(&quot;MAP&quot;) &amp;&amp; !type.equals(&quot;YEW&quot;)) {
				server.worldObject.registerObject

(1+misc.random(10), objectx, objecty, objectid, replace, 120, 10, 0, objectid);
}
				this.c.wc.doaction(c, item, -1, -1, 

objectx, objecty, objectid, xp);
				}
				catch(Exception e)
				{
					e.printStackTrace();
				}
				break;
				}
			else if (id == c.playerEquipment[c.playerWeapon] 

&amp;&amp; c.cancut &amp;&amp; !canwithaxe(c.playerEquipment[c.playerWeapon], c) || 

c.playerHasItem(id, 1) &amp;&amp; c.cancut &amp;&amp; !canwithaxe(id, c))
			{
				c.getStatus().setNotBusy();
				c.CAM().sendMessage(&quot;You need a 

higher woodcutting level to use this woodcutting axe!&quot;);
				c.cancut = false;
				c.iscutting = false;
			}
			}
			}

	private boolean canwithaxe(int i, client c) {
		switch (i) {
		case 1351:
		case 1349:
			if (c.playerLevel[8] &gt;= 1)
				return true;
			break;
		case 1353:
			if (c.playerLevel[8] &gt;= 6)
				return true;
			break;
		case 1361:
			if (c.playerLevel[8] &gt;= 10)
				return true;
			break;
		case 1355:
			if (c.playerLevel[8] &gt;= 21)
				return true;
			break;
		case 1357:
			if (c.playerLevel[8] &gt;= 31)
				return true;
			break;
		case 1359:
			if (c.playerLevel[8] &gt;= 41)
				return true;
		case 6739:
			if (c.playerLevel[8] &gt;= 61)
				return true;
		break;
		default:
			return false;
			
		}
		return false;
	}

	public void out(String s, client c) {	}

	public boolean doaction(client c, int toadd, int toremove, int 

toremove2, int x, int y, int objectid, int xp) {
	if (true) {
		if (c.freeSlots() &gt; 0) {
		this.toadd = toadd;
		this.c.iscutting = true;
		this.xp = xp;
	if (c.wctime &lt;= 0) {
		server.worldObject.reduceHealth(x, y);
		this.c.CAM().sendMessage(&quot;You get some logs&quot;);
		this.c.wctime = misc.random(20 - c.intervaldeduction);
		this.c.addItem(toadd, 1);
		this.c.addSkillXP(xp * server.SERVER_EXPERIENCE, 8);
		}
	} else {
		this.c.getStatus().setNotBusy();
		this.c.CAM().sendMessage(&quot;You do not have enough room in 

your inventory.&quot;);
		this.c.cancut = false;
		this.c.iscutting = false;
		this.c.wctime = 0;
		}
	}
	return true;
	}
	
	

}&lt;/blockquote&gt;</description>
    
    <lastBuildDate>Mon, 03 Aug 2009 00:55:01 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/need-help-with-woodcutting/292594.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Need help with woodcutting</title>
        <dc:creator><![CDATA[@Macoronizer Macoronizer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/macoronizer">@Macoronizer</a> wrote:</p>
          <blockquote>
              <p>Hello,</p>
<p>I just need to know like on my server there’s sometimes like when you right click on a tree that’s like 10 feets from you, like it still woodcuts. Is there anyway to fix it so like when you right click on a tree that’s like 10 feets away from you, that the character walks to the tree first, and then woodcut. Instead of just woodcutting the tree when it’s like 10 feets away from you?</p>
<p>Any help as soon as possible would be appreciated.</p>
<p>Also, this is my woodcutting file.</p>
<blockquote>package server.players.Skills;
<p>import server.<em>;<br>
import server.util.misc;<br>
import server.players.</em>;</p>
<p>public class Woodcutting implements Skill<br>
{<br>
public static int skillX = 0;<br>
public static int skillY = 0;<br>
public static int toadd = -1;<br>
public int replace = 1342;<br>
public final static int VALIDAXE[] = { 1351, 1349, 1353, 1361, 1355,</p>
<p>1357, 1359, 6739 };<br>
public static int xp = 0;<br>
public static int item = -1;<br>
private client c;</p>
<pre><code>public Woodcutting(client c, int object, String type, int x, int y)
{
	this.c = c;
	readInput(this.c.playerLevel[8], type, this.c, x, y, object);
}

public Woodcutting(client c) 
{
this.c = c;
}

public void readInput(int level, String type, client c, int objectx, int 
</code></pre>
<p>objecty, int objectid)<br>
{<br>
if (c.getStatus().isBusy()) {<br>
return;<br>
}<br>
synchronized(this)<br>
{<br>
if (type.equals(“NM”) &amp;&amp; level &gt;= 1)<br>
{<br>
xp = 25;<br>
item = 1511;<br>
this.c.cancut = true;<br>
}</p>
<pre><code>	else if (type.equals("OAK") &amp;&amp; level &gt;= 15)
	{
		xp = 37;
		item = 1521;
		this.c.cancut = true;
	}
	
	else if (type.equals("WILL") &amp;&amp; level &gt;= 30)
	{
		xp = 67;
		item = 1519;
		this.c.cancut = true;
	}
	
	else if (type.equals("MAP") &amp;&amp; level &gt;= 45)
	{
		xp = 100;
		item = 1517;
		this.c.cancut = true;
	}
	
	else if (type.equals("YEW") &amp;&amp; level &gt;= 60)
	{
		xp = 175;
		item = 1515;
		this.c.cancut = true;
	}
	
	else if (type.equals("MAGE") &amp;&amp; level &gt;= 75)
	{
		xp = 250;
		item = 1513;
		this.c.cancut = true;
	}
	
	else
	{
		c.getStatus().setNotBusy();
		this.c.CAM().sendMessage("You need a higher 
</code></pre>
<p>woodcutting level to cut this tree");<br>
xp = 0;<br>
item = -1;<br>
this.c.cancut = false;<br>
}<br>
}<br>
for (int id : VALIDAXE) {<br>
if(id == c.playerEquipment[c.playerWeapon] &amp;&amp;</p>
<p>c.cancut &amp;&amp; canwithaxe(c.playerEquipment[c.playerWeapon], c) ||</p>
<p>c.playerHasItem(id, 1) &amp;&amp; c.cancut &amp;&amp; canwithaxe(id, c)) {<br>
<a href="//System.out.println" rel="nofollow noopener">//System.out.println</a>(“Called”);<br>
switch (id) {<br>
case 1351:<br>
c.wcanim = 879;<br>
c.intervaldeduction = 0;<br>
break;<br>
case 1349:<br>
c.wcanim = 877;<br>
c.intervaldeduction = 1;<br>
break;<br>
case 1353:<br>
c.wcanim = 875;<br>
c.intervaldeduction = 2;<br>
break;<br>
case 1361:<br>
c.wcanim = 873;<br>
c.intervaldeduction = 3;<br>
break;<br>
case 1355:<br>
c.wcanim = 871;<br>
c.intervaldeduction = 4;<br>
break;<br>
case 1357:<br>
c.wcanim = 869;<br>
c.intervaldeduction = 5;<br>
break;<br>
case 1359:<br>
c.wcanim = 867;<br>
c.intervaldeduction = 6;<br>
break;<br>
case 6739:<br>
c.wcanim = 2846;<br>
c.intervaldeduction = 7;<br>
break;<br>
} try {<br>
c.getStatus().setBusy();<br>
this.c.CAM().sendMessage("You swing</p>
<p>your axe at the tree");<br>
c.TurnPlayerTo(objectx, objecty);<br>
this.c.wctime = misc.random(20 -</p>
<p>c.intervaldeduction);<br>
if (type.equals(“NM”) &amp;&amp; !type.equals(“OAK”) &amp;&amp; !type.equals(“WILL”) &amp;&amp; !</p>
<p>type.equals(“MAP”) &amp;&amp; !type.equals(“YEW”) &amp;&amp; !type.equals(“MAGE”)) {<br>
server.worldObject.registerObject(1,</p>
<p>objectx, objecty, objectid, replace, 5, 10, 0, objectid);<br>
}<br>
if (type.equals(“OAK”) &amp;&amp; !type.equals(“NM”) &amp;&amp; !type.equals(“WILL”) &amp;&amp; !</p>
<p>type.equals(“MAP”) &amp;&amp; !type.equals(“YEW”) &amp;&amp; !type.equals(“MAGE”)) {<br>
server.worldObject.registerObject</p>
<p>(1+misc.random(10), objectx, objecty, objectid, replace, 10, 10, 0, objectid);<br>
}<br>
if (type.equals(“WILL”) &amp;&amp; !type.equals(“OAK”) &amp;&amp; !type.equals(“NM”) &amp;&amp; !</p>
<p>type.equals(“MAP”) &amp;&amp; !type.equals(“YEW”) &amp;&amp; !type.equals(“MAGE”)) {<br>
server.worldObject.registerObject</p>
<p>(1+misc.random(10), objectx, objecty, objectid, replace, 20, 10, 0, objectid);<br>
}<br>
if (type.equals(“MAP”) &amp;&amp; !type.equals(“OAK”) &amp;&amp; !type.equals(“NM”) &amp;&amp; !</p>
<p>type.equals(“WILL”) &amp;&amp; !type.equals(“YEW”) &amp;&amp; !type.equals(“MAGE”)) {<br>
server.worldObject.registerObject</p>
<p>(1+misc.random(10), objectx, objecty, objectid, replace, 30, 10, 0, objectid);<br>
}<br>
if (type.equals(“YEW”) &amp;&amp; !type.equals(“OAK”) &amp;&amp; !type.equals(“NM”) &amp;&amp; !</p>
<p>type.equals(“WILL”) &amp;&amp; !type.equals(“MAP”) &amp;&amp; !type.equals(“MAGE”)) {<br>
server.worldObject.registerObject</p>
<p>(1+misc.random(10), objectx, objecty, objectid, replace, 70, 10, 0, objectid);<br>
}<br>
if (type.equals(“MAGE”) &amp;&amp; !type.equals(“OAK”) &amp;&amp; !type.equals(“NM”) &amp;&amp; !</p>
<p>type.equals(“WILL”) &amp;&amp; !type.equals(“MAP”) &amp;&amp; !type.equals(“YEW”)) {<br>
server.worldObject.registerObject</p>
<p>(1+misc.random(10), objectx, objecty, objectid, replace, 120, 10, 0, objectid);<br>
}<br>
this.c.wc.doaction(c, item, -1, -1,</p>
<p>objectx, objecty, objectid, xp);<br>
}<br>
catch(Exception e)<br>
{<br>
e.printStackTrace();<br>
}<br>
break;<br>
}<br>
else if (id == c.playerEquipment[c.playerWeapon]</p>
<p>&amp;&amp; c.cancut &amp;&amp; !canwithaxe(c.playerEquipment[c.playerWeapon], c) ||</p>
<p>c.playerHasItem(id, 1) &amp;&amp; c.cancut &amp;&amp; !canwithaxe(id, c))<br>
{<br>
c.getStatus().setNotBusy();<br>
c.CAM().sendMessage("You need a</p>
<p>higher woodcutting level to use this woodcutting axe!");<br>
c.cancut = false;<br>
c.iscutting = false;<br>
}<br>
}<br>
}</p>
<pre><code>private boolean canwithaxe(int i, client c) {
	switch (i) {
	case 1351:
	case 1349:
		if (c.playerLevel[8] &gt;= 1)
			return true;
		break;
	case 1353:
		if (c.playerLevel[8] &gt;= 6)
			return true;
		break;
	case 1361:
		if (c.playerLevel[8] &gt;= 10)
			return true;
		break;
	case 1355:
		if (c.playerLevel[8] &gt;= 21)
			return true;
		break;
	case 1357:
		if (c.playerLevel[8] &gt;= 31)
			return true;
		break;
	case 1359:
		if (c.playerLevel[8] &gt;= 41)
			return true;
	case 6739:
		if (c.playerLevel[8] &gt;= 61)
			return true;
	break;
	default:
		return false;
		
	}
	return false;
}

public void out(String s, client c) {	}

public boolean doaction(client c, int toadd, int toremove, int 
</code></pre>
<p>toremove2, int x, int y, int objectid, int xp) {<br>
if (true) {<br>
if (c.freeSlots() &gt; 0) {<br>
this.toadd = toadd;<br>
this.c.iscutting = true;<br>
this.xp = xp;<br>
if (c.wctime &lt;= 0) {<br>
server.worldObject.reduceHealth(x, y);<br>
this.c.CAM().sendMessage(“You get some logs”);<br>
this.c.wctime = misc.random(20 - c.intervaldeduction);<br>
this.c.addItem(toadd, 1);<br>
this.c.addSkillXP(xp * server.SERVER_EXPERIENCE, 8);<br>
}<br>
} else {<br>
this.c.getStatus().setNotBusy();<br>
this.c.CAM().sendMessage("You do not have enough room in</p>
<p>your inventory.");<br>
this.c.cancut = false;<br>
this.c.iscutting = false;<br>
this.c.wctime = 0;<br>
}<br>
}<br>
return true;<br>
}</p>
<p>}</p>
</blockquote>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/need-help-with-woodcutting/292594/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/need-help-with-woodcutting/292594/1</link>
        <pubDate>Mon, 03 Aug 2009 00:55:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-292594-1</guid>
        <source url="https://forum.moparisthebest.com/t/need-help-with-woodcutting/292594.rss">Need help with woodcutting</source>
      </item>
  </channel>
</rss>
