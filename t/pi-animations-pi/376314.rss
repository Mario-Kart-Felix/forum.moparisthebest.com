<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>[PI] Animations [PI]</title>
    <link>https://forum.moparisthebest.com/t/pi-animations-pi/376314</link>
    <description>Ok, I&#39;m using Project Insanity 317 like most people these days, and when I do a skill that requires an animation(EG when you&#39;re fishing and you&#39;re bending down to put the net in the water), if i walk away while doing the skill, I&#39;m still doing the animation. This is hard to explain, if you have a question about it please ask.
My walking.java
[code]
package server.model.players.packets;

import server.Server;
import server.model.players.Client;
import server.model.players.PacketType;

/**
 * Walking packet
 **/
public class Walking implements PacketType {

	@Override
	public void processPacket(Client c, int packetType, int packetSize) {		
		if (packetType == 248 || packetType == 164) {
			c.faceUpdate(0);
			if(c.SSPLIT == false) {
			c.npcIndex = 0;
			c.playerIndex = 0;
			} else {
			}
			if (c.followId &gt; 0 || c.followId2 &gt; 0)
				c.getPA().resetFollow();
		}	
		c.fishing = false;
		if(!c.isBanking &amp;&amp; !c.inTrade) {
		c.getPA().removeAllWindows();
		}
		if(c.duelRule[1] &amp;&amp; c.duelStatus == 5) {
			if(Server.playerHandler.players[c.duelingWith] != null) { 
				if(!c.goodDistance(c.getX(), c.getY(), Server.playerHandler.players[c.duelingWith].getX(), Server.playerHandler.players[c.duelingWith].getY(), 1) || c.attackTimer == 0) {
					c.sendMessage(&quot;Walking has been disabled in this duel!&quot;);
				}
			}
			c.playerIndex = 0;	
			return;		
		}
		
		if(c.freezeTimer &gt; 0) {
			if(Server.playerHandler.players[c.playerIndex] != null) {
				if(c.goodDistance(c.getX(), c.getY(), Server.playerHandler.players[c.playerIndex].getX(), Server.playerHandler.players[c.playerIndex].getY(), 1) &amp;&amp; packetType != 98) {
					c.playerIndex = 0;	
					return;
				}
			}
			if (packetType != 98) {
				c.sendMessage(&quot;A magical force stops you from moving.&quot;);
				c.playerIndex = 0;
			}	
			return;
		}
		
		if (System.currentTimeMillis() - c.lastSpear &lt; 4000) {
			c.sendMessage(&quot;You have been stunned.&quot;);
			c.playerIndex = 0;
			return;
		}
		
		if (packetType == 98) {
			c.mageAllowed = true;
			c.fishing = false;
		}

		if (c.sit == true) {
			c.sendMessage(&quot;::unsit before you can start walking again!&quot;);
			return;
		}
		
		if((c.duelStatus &gt;= 1 &amp;&amp; c.duelStatus &lt;= 4) || c.duelStatus == 6) {
			if(c.duelStatus == 6) {
				c.getTradeAndDuel().claimStakedItems();		
			}
			return;
		}
		
		
		if(c.respawnTimer &gt; 3) {
			return;
		}
		if(System.currentTimeMillis() - c.lastEmote &lt;= 7000) {
			return;
		}
		if(c.inTrade) {
			c.sendMessage(&quot;Please use the Decline option.&quot;);
			return;
		}
		if (c.isBanking) {
			c.getPA().closeAllWindows();
		}
		if(c.isShopping == true) {
		c.isShopping = false;
		}
		if(packetType == 248) {
			packetSize -= 14;
		}
		c.newWalkCmdSteps = (packetSize - 5)/2;
		if(++c.newWalkCmdSteps &gt; c.walkingQueueSize) {
			c.newWalkCmdSteps = 0;
			return;
		}
		
		c.getNewWalkCmdX()[0] = c.getNewWalkCmdY()[0] = 0;
		
		int firstStepX = c.getInStream().readSignedWordBigEndianA()-c.getMapRegionX()*8;
		for(int i = 1; i &lt; c.newWalkCmdSteps; i++) {
			c.getNewWalkCmdX()[i] = c.getInStream().readSignedByte();
			c.getNewWalkCmdY()[i] = c.getInStream().readSignedByte();
		}
		
		int firstStepY = c.getInStream().readSignedWordBigEndian()-c.getMapRegionY()*8;
		c.setNewWalkCmdIsRunning(c.getInStream().readSignedByteC() == 1);
		for(int i1 = 0; i1 &lt; c.newWalkCmdSteps; i1++) {
			c.getNewWalkCmdX()[i1] += firstStepX;
			c.getNewWalkCmdY()[i1] += firstStepY;
		}
	}

}
[/code]</description>
    
    <lastBuildDate>Sat, 01 Jan 2011 21:49:27 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/pi-animations-pi/376314.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>[PI] Animations [PI]</title>
        <dc:creator><![CDATA[@i0wn3v3ry i0wn3v3ry]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/i0wn3v3ry">@i0wn3v3ry</a> wrote:</p>
          <blockquote>
              <p>c.stopmovement(); or something like that.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-animations-pi/376314/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-animations-pi/376314/2</link>
        <pubDate>Sat, 01 Jan 2011 21:49:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-376314-2</guid>
        <source url="https://forum.moparisthebest.com/t/pi-animations-pi/376314.rss">[PI] Animations [PI]</source>
      </item>
      <item>
        <title>[PI] Animations [PI]</title>
        <dc:creator><![CDATA[@David_The_Drummer David The Drummer]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/david_the_drummer">@David_The_Drummer</a> wrote:</p>
          <blockquote>
              <p>Ok, I’m using Project Insanity 317 like most people these days, and when I do a skill that requires an animation(EG when you’re fishing and you’re bending down to put the net in the water), if i walk away while doing the skill, I’m still doing the animation. This is hard to explain, if you have a question about it please ask.<br>
My walking.java</p>
<pre><code class="lang-auto">package server.model.players.packets;

import server.Server;
import server.model.players.Client;
import server.model.players.PacketType;

/**
 * Walking packet
 **/
public class Walking implements PacketType {

	@Override
	public void processPacket(Client c, int packetType, int packetSize) {		
		if (packetType == 248 || packetType == 164) {
			c.faceUpdate(0);
			if(c.SSPLIT == false) {
			c.npcIndex = 0;
			c.playerIndex = 0;
			} else {
			}
			if (c.followId &gt; 0 || c.followId2 &gt; 0)
				c.getPA().resetFollow();
		}	
		c.fishing = false;
		if(!c.isBanking &amp;&amp; !c.inTrade) {
		c.getPA().removeAllWindows();
		}
		if(c.duelRule[1] &amp;&amp; c.duelStatus == 5) {
			if(Server.playerHandler.players[c.duelingWith] != null) { 
				if(!c.goodDistance(c.getX(), c.getY(), Server.playerHandler.players[c.duelingWith].getX(), Server.playerHandler.players[c.duelingWith].getY(), 1) || c.attackTimer == 0) {
					c.sendMessage("Walking has been disabled in this duel!");
				}
			}
			c.playerIndex = 0;	
			return;		
		}
		
		if(c.freezeTimer &gt; 0) {
			if(Server.playerHandler.players[c.playerIndex] != null) {
				if(c.goodDistance(c.getX(), c.getY(), Server.playerHandler.players[c.playerIndex].getX(), Server.playerHandler.players[c.playerIndex].getY(), 1) &amp;&amp; packetType != 98) {
					c.playerIndex = 0;	
					return;
				}
			}
			if (packetType != 98) {
				c.sendMessage("A magical force stops you from moving.");
				c.playerIndex = 0;
			}	
			return;
		}
		
		if (System.currentTimeMillis() - c.lastSpear &lt; 4000) {
			c.sendMessage("You have been stunned.");
			c.playerIndex = 0;
			return;
		}
		
		if (packetType == 98) {
			c.mageAllowed = true;
			c.fishing = false;
		}

		if (c.sit == true) {
			c.sendMessage("::unsit before you can start walking again!");
			return;
		}
		
		if((c.duelStatus &gt;= 1 &amp;&amp; c.duelStatus &lt;= 4) || c.duelStatus == 6) {
			if(c.duelStatus == 6) {
				c.getTradeAndDuel().claimStakedItems();		
			}
			return;
		}
		
		
		if(c.respawnTimer &gt; 3) {
			return;
		}
		if(System.currentTimeMillis() - c.lastEmote &lt;= 7000) {
			return;
		}
		if(c.inTrade) {
			c.sendMessage("Please use the Decline option.");
			return;
		}
		if (c.isBanking) {
			c.getPA().closeAllWindows();
		}
		if(c.isShopping == true) {
		c.isShopping = false;
		}
		if(packetType == 248) {
			packetSize -= 14;
		}
		c.newWalkCmdSteps = (packetSize - 5)/2;
		if(++c.newWalkCmdSteps &gt; c.walkingQueueSize) {
			c.newWalkCmdSteps = 0;
			return;
		}
		
		c.getNewWalkCmdX()[0] = c.getNewWalkCmdY()[0] = 0;
		
		int firstStepX = c.getInStream().readSignedWordBigEndianA()-c.getMapRegionX()*8;
		for(int i = 1; i &lt; c.newWalkCmdSteps; i++) {
			c.getNewWalkCmdX()[i] = c.getInStream().readSignedByte();
			c.getNewWalkCmdY()[i] = c.getInStream().readSignedByte();
		}
		
		int firstStepY = c.getInStream().readSignedWordBigEndian()-c.getMapRegionY()*8;
		c.setNewWalkCmdIsRunning(c.getInStream().readSignedByteC() == 1);
		for(int i1 = 0; i1 &lt; c.newWalkCmdSteps; i1++) {
			c.getNewWalkCmdX()[i1] += firstStepX;
			c.getNewWalkCmdY()[i1] += firstStepY;
		}
	}

}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-animations-pi/376314/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-animations-pi/376314/1</link>
        <pubDate>Sat, 01 Jan 2011 21:47:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-376314-1</guid>
        <source url="https://forum.moparisthebest.com/t/pi-animations-pi/376314.rss">[PI] Animations [PI]</source>
      </item>
  </channel>
</rss>
