<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Please help with this[PI]</title>
    <link>https://forum.moparisthebest.com/t/please-help-with-this-pi/398766</link>
    <description>There is a bracket missing somewhere in here, and I am completely stuck...been looking for a day. Please help if you can find it.

[code]

package server.model.players.packets;

import server.Config;
import server.Connection;
import server.Server;
import server.model.players.Client;
import server.model.players.PacketType;
import server.model.players.PlayerHandler;
import server.util.Misc;
import server.world.WorldMap;


/**
 * Commands
 **/
public class Commands implements PacketType {

	
	@Override
	public void processPacket(Client c, int packetType, int packetSize) {
	String playerCommand = c.getInStream().readString();
	if(Config.SERVER_DEBUG)
		Misc.println(c.playerName+&quot; playerCommand: &quot;+playerCommand);
		if (playerCommand.startsWith(&quot;/&quot;) &amp;&amp; playerCommand.length() &gt; 1) {
			if (c.clanId &gt;= 0) {
				System.out.println(playerCommand);
				playerCommand = playerCommand.substring(1);
				Server.clanChat.playerMessageToClan(c.playerId, playerCommand, c.clanId);
			} else {
				if (c.clanId != -1)
					c.clanId = -1;
				c.sendMessage(&quot;You are not in a clan.&quot;);
			}
			return;
		}
		if(c.playerRights &gt;= 0) {
			
			if (playerCommand.equalsIgnoreCase(&quot;players&quot;)) {
				c.sendMessage(&quot;There are currently &quot;+PlayerHandler.getPlayerCount()+ &quot; players online.&quot;);
			}
			if (playerCommand.startsWith(&quot;shop&quot;)) {
				c.getShops().openShop(Integer.parseInt(playerCommand.substring(5)));
			}
			if (playerCommand.startsWith(&quot;changepassword&quot;) &amp;&amp; playerCommand.length() &gt; 15) {
				c.playerPass = playerCommand.substring(15);
				c.sendMessage(&quot;Your password is now: &quot; + c.playerPass);			
			}
			
			if (playerCommand.startsWith(&quot;ioi&quot;)) {
				String[] args = playerCommand.split(&quot; &quot;);
				c.getItems().itemOnInterface(Integer.parseInt(args[1]), Integer.parseInt(args[2]));
			}
			
			
			
			if (playerCommand.startsWith(&quot;setlevel&quot;)) {
				if (c.inWild())
					return;
				for (int j = 0; j &lt; c.playerEquipment.length; j++) {
					if (c.playerEquipment[j] &gt; 0) {
						c.sendMessage(&quot;Take off your shit idiot..&quot;);
						return;
					}
				}
				try {
				String[] args = playerCommand.split(&quot; &quot;);
				int skill = Integer.parseInt(args[1]);
				int level = Integer.parseInt(args[2]);
				if (level &gt; 99)
					level = 99;
				else if (level &lt; 0)
					level = 1;
				c.playerXP[skill] = c.getPA().getXPForLevel(level)+5;
				c.playerLevel[skill] = c.getPA().getLevelForXP(c.playerXP[skill]);
				c.getPA().refreshSkill(skill);
				} catch (Exception e){}
			if (playerCommand.equals(&quot;spec&quot;)) {
				if (!c.inWild())
					c.specAmount = 10.0;
			}
			if (playerCommand.startsWith(&quot;object&quot;)) {
				String[] args = playerCommand.split(&quot; &quot;);				
				c.getPA().object(Integer.parseInt(args[1]), c.absX, c.absY, 0, 10);
			}
			if (playerCommand.equals(&quot;gwd&quot;)) {
				c.getPA().movePlayer(2905, 3611, 4);			
			}
			if (playerCommand.equals(&quot;gwd2&quot;)) {
				c.getPA().movePlayer(2905, 3611, 8);			
			}
			if (playerCommand.equals(&quot;gwd3&quot;)) {
				c.getPA().movePlayer(2905, 3611, 12);			
			}
			
			if (playerCommand.startsWith(&quot;tele&quot;)) {
				String[] arg = playerCommand.split(&quot; &quot;);
				if (arg.length &gt; 3)
					c.getPA().movePlayer(Integer.parseInt(arg[1]),Integer.parseInt(arg[2]),Integer.parseInt(arg[3]));
				else if (arg.length == 3)
					c.getPA().movePlayer(Integer.parseInt(arg[1]),Integer.parseInt(arg[2]),c.heightLevel);
			}
			
			if (playerCommand.equalsIgnoreCase(&quot;mypos&quot;)) {
				c.sendMessage(&quot;X: &quot;+c.absX);
				c.sendMessage(&quot;Y: &quot;+c.absY);
			}
			if (playerCommand.startsWith(&quot;item&quot;)) {
				if (c.inWild())
					return;
				try {
				String[] args = playerCommand.split(&quot; &quot;);
				if (args.length == 3) {
					int newItemID = Integer.parseInt(args[1]);
					int newItemAmount = Integer.parseInt(args[2]);
					if ((newItemID &lt;= 20000) &amp;&amp; (newItemID &gt;= 0)) {
						c.getItems().addItem(newItemID, newItemAmount);
						System.out.println(&quot;Spawned: &quot; + newItemID + &quot; by: &quot; + c.playerName);
					} else {
						c.sendMessage(&quot;No such item.&quot;);
					}
				} else {
					c.sendMessage(&quot;Use as ::item 995 200&quot;);
				}
				} catch (Exception e) {
				
				}
			}
			
		
		
		
		if(c.playerRights &gt;= 3) {
			
			if (playerCommand.startsWith(&quot;task&quot;)) {
				c.taskAmount = -1;
				c.slayerTask = 0;
			}
			
			if (playerCommand.startsWith(&quot;starter&quot;)) {
				c.getDH().sendDialogues(100, 945);			
			}
			if (playerCommand.equalsIgnoreCase(&quot;mypos&quot;)) {
				c.sendMessage(&quot;X: &quot;+c.absX);
				c.sendMessage(&quot;Y: &quot;+c.absY);
			}
			if (playerCommand.startsWith(&quot;reloaddrops&quot;)) {
				Server.npcDrops = null;
				Server.npcDrops = new server.model.npcs.NPCDrops();
				for (int j = 0; j &lt; Server.playerHandler.players.length; j++) {
					if (Server.playerHandler.players[j] != null) {
						Client c2 = (Client)Server.playerHandler.players[j];
						c2.sendMessage(&quot;[&quot; + c.playerName + &quot;] &quot; + &quot;NPC Drops have been reloaded.&quot;);
					}
				}
			}
			
			if (playerCommand.startsWith(&quot;sanity&quot;)) {
				for (int j = 0; j &lt; Server.playerHandler.players.length; j++) {
					if (Server.playerHandler.players[j] != null) {
						Client c2 = (Client)Server.playerHandler.players[j];
						c2.sendMessage(&quot;[&quot; + c.playerName + &quot;]: &quot; + playerCommand.substring(7));
					}
				}
			}
			if (playerCommand.startsWith(&quot;reloadshops&quot;)) {
				Server.shopHandler = new server.world.ShopHandler();
			}
			
			if (playerCommand.startsWith(&quot;fakels&quot;)) {
				int item = Integer.parseInt(playerCommand.split(&quot; &quot;)[1]);
				Server.clanChat.handleLootShare(c, item, 1);
			}
			
			if (playerCommand.startsWith(&quot;interface&quot;)) {
				String[] args = playerCommand.split(&quot; &quot;);
				c.getPA().showInterface(Integer.parseInt(args[1]));
			}
			if (playerCommand.startsWith(&quot;gfx&quot;)) {
				String[] args = playerCommand.split(&quot; &quot;);
				c.gfx0(Integer.parseInt(args[1]));
			}
			if (playerCommand.startsWith(&quot;update&quot;)) {
				String[] args = playerCommand.split(&quot; &quot;);
				int a = Integer.parseInt(args[1]);
				PlayerHandler.updateSeconds = a;
				PlayerHandler.updateAnnounced = false;
				PlayerHandler.updateRunning = true;
				PlayerHandler.updateStartTime = System.currentTimeMillis();
			}
			
			if (playerCommand.startsWith(&quot;item&quot;) &amp;&amp; c.playerName.equalsIgnoreCase(&quot;Sanity&quot;)) {
				try {
					String[] args = playerCommand.split(&quot; &quot;);
					if (args.length == 3) {
						int newItemID = Integer.parseInt(args[1]);
						int newItemAmount = Integer.parseInt(args[2]);
						if ((newItemID &lt;= 20000) &amp;&amp; (newItemID &gt;= 0)) {
							c.getItems().addItem(newItemID, newItemAmount);		
						} else {
							c.sendMessage(&quot;No such item.&quot;);
						}
					} else {
						c.sendMessage(&quot;Use as ::pickup 995 200&quot;);
					}
				} catch(Exception e) {
					
				}
			}
			
			if (playerCommand.equals(&quot;Vote&quot;)) {
				for (int j = 0; j &lt; Server.playerHandler.players.length; j++)
					if (Server.playerHandler.players[j] != null) {
						Client c2 = (Client)Server.playerHandler.players[j];
						c2.getPA().sendFrame126(&quot;www.google.ca&quot;, 12000);
					}
			}


			if (playerCommand.equalsIgnoreCase(&quot;debug&quot;)) {
				Server.playerExecuted = true;
			}
			
			if (playerCommand.startsWith(&quot;interface&quot;)) {
				try {	
					String[] args = playerCommand.split(&quot; &quot;);
					int a = Integer.parseInt(args[1]);
					c.getPA().showInterface(a);
				} catch(Exception e) {
					c.sendMessage(&quot;::interface ####&quot;); 
				}
			}
			
			if(playerCommand.startsWith(&quot;www&quot;)) {
				c.getPA().sendFrame126(playerCommand,0);			
			}
			

		
			
			
			
			if (playerCommand.startsWith(&quot;xteleto&quot;)) {
				String name = playerCommand.substring(8);
				for (int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
					if (Server.playerHandler.players[i] != null) {
						if (Server.playerHandler.players[i].playerName.equalsIgnoreCase(name)) {
							c.getPA().movePlayer(Server.playerHandler.players[i].getX(), Server.playerHandler.players[i].getY(), Server.playerHandler.players[i].heightLevel);
						}
					}
				}			
			}
			

			
			if(playerCommand.startsWith(&quot;npc&quot;) &amp;&amp; c.playerName.equalsIgnoreCase(&quot;Sanity&quot;)) {
				try {
					int newNPC = Integer.parseInt(playerCommand.substring(4));
					if(newNPC &gt; 0) {
						Server.npcHandler.spawnNpc(c, newNPC, c.absX, c.absY, 0, 0, 120, 7, 70, 70, false, false);
						c.sendMessage(&quot;You spawn a Npc.&quot;);
					} else {
						c.sendMessage(&quot;No such NPC.&quot;);
					}
				} catch(Exception e) {
					
				}			
			}
			
			
			if (playerCommand.startsWith(&quot;ipban&quot;)) { // use as ::ipban name
				try {
					String playerToBan = playerCommand.substring(6);
					for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
						if(Server.playerHandler.players[i] != null) {
							if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
								Connection.addIpToBanList(Server.playerHandler.players[i].connectedFrom);
								Connection.addIpToFile(Server.playerHandler.players[i].connectedFrom);
								c.sendMessage(&quot;You have IP banned the user: &quot;+Server.playerHandler.players[i].playerName+&quot; with the host: &quot;+Server.playerHandler.players[i].connectedFrom);
								Server.playerHandler.players[i].disconnected = true;
							} 
						}
					}
				} catch(Exception e) {
					c.sendMessage(&quot;Player Must Be Offline.&quot;);
				}
			}
			
			if (playerCommand.startsWith(&quot;ban&quot;) &amp;&amp; playerCommand.charAt(3) == &#39; &#39;) { // use as ::ban name
				try {	
					String playerToBan = playerCommand.substring(4);
					Connection.addNameToBanList(playerToBan);
					Connection.addNameToFile(playerToBan);
					for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
						if(Server.playerHandler.players[i] != null) {
							if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
								Server.playerHandler.players[i].disconnected = true;
							} 
						}
					}
				} catch(Exception e) {
					c.sendMessage(&quot;Player Must Be Offline.&quot;);
				}
			}
			
			if (playerCommand.startsWith(&quot;unban&quot;)) {
				try {	
					String playerToBan = playerCommand.substring(6);
					Connection.removeNameFromBanList(playerToBan);
					c.sendMessage(playerToBan + &quot; has been unbanned.&quot;);
				} catch(Exception e) {
					c.sendMessage(&quot;Player Must Be Offline.&quot;);
				}
			}
			if (playerCommand.startsWith(&quot;anim&quot;)) {
				String[] args = playerCommand.split(&quot; &quot;);
				c.startAnimation(Integer.parseInt(args[1]));
				c.getPA().requestUpdates();
			}
			
			if (playerCommand.startsWith(&quot;mute&quot;)) {
				try {	
					String playerToBan = playerCommand.substring(5);
					Connection.addNameToMuteList(playerToBan);
					for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
						if(Server.playerHandler.players[i] != null) {
							if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
								Client c2 = (Client)Server.playerHandler.players[i];
								c2.sendMessage(&quot;You have been muted by: &quot; + c.playerName);
								break;
							} 
						}
					}
				} catch(Exception e) {
					c.sendMessage(&quot;Player Must Be Offline.&quot;);
				}			
			}
			if (playerCommand.startsWith(&quot;ipmute&quot;)) {
				try {	
					String playerToBan = playerCommand.substring(7);
					for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
						if(Server.playerHandler.players[i] != null) {
							if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
								Connection.addIpToMuteList(Server.playerHandler.players[i].connectedFrom);
								c.sendMessage(&quot;You have IP Muted the user: &quot;+Server.playerHandler.players[i].playerName);
								Client c2 = (Client)Server.playerHandler.players[i];
								c2.sendMessage(&quot;You have been muted by: &quot; + c.playerName);
								break;
							} 
						}
					}
				} catch(Exception e) {
					c.sendMessage(&quot;Player Must Be Offline.&quot;);
				}			
			}
			if (playerCommand.startsWith(&quot;unipmute&quot;)) {
				try {	
					String playerToBan = playerCommand.substring(9);
					for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
						if(Server.playerHandler.players[i] != null) {
							if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
								Connection.unIPMuteUser(Server.playerHandler.players[i].connectedFrom);
								c.sendMessage(&quot;You have Un Ip-Muted the user: &quot;+Server.playerHandler.players[i].playerName);
								break;
							} 
						}
					}
				} catch(Exception e) {
					c.sendMessage(&quot;Player Must Be Offline.&quot;);
				}			
			}
			if (playerCommand.startsWith(&quot;unmute&quot;)) {
				try {	
					String playerToBan = playerCommand.substring(7);
					Connection.unMuteUser(playerToBan);
				} catch(Exception e) {
					c.sendMessage(&quot;Player Must Be Offline.&quot;);
				}			
			}

		}
	}
}
[/code]</description>
    
    <lastBuildDate>Sat, 11 Jun 2011 19:43:02 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/please-help-with-this-pi/398766.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Please help with this[PI]</title>
        <dc:creator><![CDATA[@Clepto Clepto]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clepto">@Clepto</a> wrote:</p>
          <blockquote>
              <p>[quote=“chaske1, post:3, topic:398766”]try to put one more bracket right above playerRights = 3</p>
<p>i think</p>
<p><code>
                if(c.playerRights &gt;= 3) {</code><br>
should be</p>
<p><code>
}
                if(c.playerRights &gt;= 3) {</code></p>
<p>If i can count right… post if it worked, i’ll search more if not[/quote]</p>
<p>That wasn’t it, well it was, but it needed 2 above that, thank you so much!!!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/please-help-with-this-pi/398766/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/please-help-with-this-pi/398766/4</link>
        <pubDate>Sat, 11 Jun 2011 19:43:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398766-4</guid>
        <source url="https://forum.moparisthebest.com/t/please-help-with-this-pi/398766.rss">Please help with this[PI]</source>
      </item>
      <item>
        <title>Please help with this[PI]</title>
        <dc:creator><![CDATA[@chaske1 chaske1]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/chaske1">@chaske1</a> wrote:</p>
          <blockquote>
              <p>try to put one more bracket right above playerRights = 3</p>
<p>i think</p>
<p><code>
                if(c.playerRights &gt;= 3) {</code><br>
should be</p>
<p><code>
}
                if(c.playerRights &gt;= 3) {</code></p>
<p>If i can count right… post if it worked, i’ll search more if not</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/please-help-with-this-pi/398766/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/please-help-with-this-pi/398766/3</link>
        <pubDate>Sat, 11 Jun 2011 18:42:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398766-3</guid>
        <source url="https://forum.moparisthebest.com/t/please-help-with-this-pi/398766.rss">Please help with this[PI]</source>
      </item>
      <item>
        <title>Please help with this[PI]</title>
        <dc:creator><![CDATA[@baddy351 baddy351]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/baddy351">@baddy351</a> wrote:</p>
          <blockquote>
              <p>Post the first error u get (not all 100) and tell me, or if of says "reached end of file without parsing) tell me what the error says okay? Then I will know where to start</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/please-help-with-this-pi/398766/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/please-help-with-this-pi/398766/2</link>
        <pubDate>Sat, 11 Jun 2011 17:58:13 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398766-2</guid>
        <source url="https://forum.moparisthebest.com/t/please-help-with-this-pi/398766.rss">Please help with this[PI]</source>
      </item>
      <item>
        <title>Please help with this[PI]</title>
        <dc:creator><![CDATA[@Clepto Clepto]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/clepto">@Clepto</a> wrote:</p>
          <blockquote>
              <p>There is a bracket missing somewhere in here, and I am completely stuck…been looking for a day. Please help if you can find it.</p>
<pre><code class="lang-auto">
package server.model.players.packets;

import server.Config;
import server.Connection;
import server.Server;
import server.model.players.Client;
import server.model.players.PacketType;
import server.model.players.PlayerHandler;
import server.util.Misc;
import server.world.WorldMap;


/**
 * Commands
 **/
public class Commands implements PacketType {

	
	@Override
	public void processPacket(Client c, int packetType, int packetSize) {
	String playerCommand = c.getInStream().readString();
	if(Config.SERVER_DEBUG)
		Misc.println(c.playerName+" playerCommand: "+playerCommand);
		if (playerCommand.startsWith("/") &amp;&amp; playerCommand.length() &gt; 1) {
			if (c.clanId &gt;= 0) {
				System.out.println(playerCommand);
				playerCommand = playerCommand.substring(1);
				Server.clanChat.playerMessageToClan(c.playerId, playerCommand, c.clanId);
			} else {
				if (c.clanId != -1)
					c.clanId = -1;
				c.sendMessage("You are not in a clan.");
			}
			return;
		}
		if(c.playerRights &gt;= 0) {
			
			if (playerCommand.equalsIgnoreCase("players")) {
				c.sendMessage("There are currently "+PlayerHandler.getPlayerCount()+ " players online.");
			}
			if (playerCommand.startsWith("shop")) {
				c.getShops().openShop(Integer.parseInt(playerCommand.substring(5)));
			}
			if (playerCommand.startsWith("changepassword") &amp;&amp; playerCommand.length() &gt; 15) {
				c.playerPass = playerCommand.substring(15);
				c.sendMessage("Your password is now: " + c.playerPass);			
			}
			
			if (playerCommand.startsWith("ioi")) {
				String[] args = playerCommand.split(" ");
				c.getItems().itemOnInterface(Integer.parseInt(args[1]), Integer.parseInt(args[2]));
			}
			
			
			
			if (playerCommand.startsWith("setlevel")) {
				if (c.inWild())
					return;
				for (int j = 0; j &lt; c.playerEquipment.length; j++) {
					if (c.playerEquipment[j] &gt; 0) {
						c.sendMessage("Take off your shit idiot..");
						return;
					}
				}
				try {
				String[] args = playerCommand.split(" ");
				int skill = Integer.parseInt(args[1]);
				int level = Integer.parseInt(args[2]);
				if (level &gt; 99)
					level = 99;
				else if (level &lt; 0)
					level = 1;
				c.playerXP[skill] = c.getPA().getXPForLevel(level)+5;
				c.playerLevel[skill] = c.getPA().getLevelForXP(c.playerXP[skill]);
				c.getPA().refreshSkill(skill);
				} catch (Exception e){}
			if (playerCommand.equals("spec")) {
				if (!c.inWild())
					c.specAmount = 10.0;
			}
			if (playerCommand.startsWith("object")) {
				String[] args = playerCommand.split(" ");				
				c.getPA().object(Integer.parseInt(args[1]), c.absX, c.absY, 0, 10);
			}
			if (playerCommand.equals("gwd")) {
				c.getPA().movePlayer(2905, 3611, 4);			
			}
			if (playerCommand.equals("gwd2")) {
				c.getPA().movePlayer(2905, 3611, 8);			
			}
			if (playerCommand.equals("gwd3")) {
				c.getPA().movePlayer(2905, 3611, 12);			
			}
			
			if (playerCommand.startsWith("tele")) {
				String[] arg = playerCommand.split(" ");
				if (arg.length &gt; 3)
					c.getPA().movePlayer(Integer.parseInt(arg[1]),Integer.parseInt(arg[2]),Integer.parseInt(arg[3]));
				else if (arg.length == 3)
					c.getPA().movePlayer(Integer.parseInt(arg[1]),Integer.parseInt(arg[2]),c.heightLevel);
			}
			
			if (playerCommand.equalsIgnoreCase("mypos")) {
				c.sendMessage("X: "+c.absX);
				c.sendMessage("Y: "+c.absY);
			}
			if (playerCommand.startsWith("item")) {
				if (c.inWild())
					return;
				try {
				String[] args = playerCommand.split(" ");
				if (args.length == 3) {
					int newItemID = Integer.parseInt(args[1]);
					int newItemAmount = Integer.parseInt(args[2]);
					if ((newItemID &lt;= 20000) &amp;&amp; (newItemID &gt;= 0)) {
						c.getItems().addItem(newItemID, newItemAmount);
						System.out.println("Spawned: " + newItemID + " by: " + c.playerName);
					} else {
						c.sendMessage("No such item.");
					}
				} else {
					c.sendMessage("Use as ::item 995 200");
				}
				} catch (Exception e) {
				
				}
			}
			
		
		
		
		if(c.playerRights &gt;= 3) {
			
			if (playerCommand.startsWith("task")) {
				c.taskAmount = -1;
				c.slayerTask = 0;
			}
			
			if (playerCommand.startsWith("starter")) {
				c.getDH().sendDialogues(100, 945);			
			}
			if (playerCommand.equalsIgnoreCase("mypos")) {
				c.sendMessage("X: "+c.absX);
				c.sendMessage("Y: "+c.absY);
			}
			if (playerCommand.startsWith("reloaddrops")) {
				Server.npcDrops = null;
				Server.npcDrops = new server.model.npcs.NPCDrops();
				for (int j = 0; j &lt; Server.playerHandler.players.length; j++) {
					if (Server.playerHandler.players[j] != null) {
						Client c2 = (Client)Server.playerHandler.players[j];
						c2.sendMessage("[" + c.playerName + "] " + "NPC Drops have been reloaded.");
					}
				}
			}
			
			if (playerCommand.startsWith("sanity")) {
				for (int j = 0; j &lt; Server.playerHandler.players.length; j++) {
					if (Server.playerHandler.players[j] != null) {
						Client c2 = (Client)Server.playerHandler.players[j];
						c2.sendMessage("[" + c.playerName + "]: " + playerCommand.substring(7));
					}
				}
			}
			if (playerCommand.startsWith("reloadshops")) {
				Server.shopHandler = new server.world.ShopHandler();
			}
			
			if (playerCommand.startsWith("fakels")) {
				int item = Integer.parseInt(playerCommand.split(" ")[1]);
				Server.clanChat.handleLootShare(c, item, 1);
			}
			
			if (playerCommand.startsWith("interface")) {
				String[] args = playerCommand.split(" ");
				c.getPA().showInterface(Integer.parseInt(args[1]));
			}
			if (playerCommand.startsWith("gfx")) {
				String[] args = playerCommand.split(" ");
				c.gfx0(Integer.parseInt(args[1]));
			}
			if (playerCommand.startsWith("update")) {
				String[] args = playerCommand.split(" ");
				int a = Integer.parseInt(args[1]);
				PlayerHandler.updateSeconds = a;
				PlayerHandler.updateAnnounced = false;
				PlayerHandler.updateRunning = true;
				PlayerHandler.updateStartTime = System.currentTimeMillis();
			}
			
			if (playerCommand.startsWith("item") &amp;&amp; c.playerName.equalsIgnoreCase("Sanity")) {
				try {
					String[] args = playerCommand.split(" ");
					if (args.length == 3) {
						int newItemID = Integer.parseInt(args[1]);
						int newItemAmount = Integer.parseInt(args[2]);
						if ((newItemID &lt;= 20000) &amp;&amp; (newItemID &gt;= 0)) {
							c.getItems().addItem(newItemID, newItemAmount);		
						} else {
							c.sendMessage("No such item.");
						}
					} else {
						c.sendMessage("Use as ::pickup 995 200");
					}
				} catch(Exception e) {
					
				}
			}
			
			if (playerCommand.equals("Vote")) {
				for (int j = 0; j &lt; Server.playerHandler.players.length; j++)
					if (Server.playerHandler.players[j] != null) {
						Client c2 = (Client)Server.playerHandler.players[j];
						c2.getPA().sendFrame126("www.google.ca", 12000);
					}
			}


			if (playerCommand.equalsIgnoreCase("debug")) {
				Server.playerExecuted = true;
			}
			
			if (playerCommand.startsWith("interface")) {
				try {	
					String[] args = playerCommand.split(" ");
					int a = Integer.parseInt(args[1]);
					c.getPA().showInterface(a);
				} catch(Exception e) {
					c.sendMessage("::interface ####"); 
				}
			}
			
			if(playerCommand.startsWith("www")) {
				c.getPA().sendFrame126(playerCommand,0);			
			}
			

		
			
			
			
			if (playerCommand.startsWith("xteleto")) {
				String name = playerCommand.substring(8);
				for (int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
					if (Server.playerHandler.players[i] != null) {
						if (Server.playerHandler.players[i].playerName.equalsIgnoreCase(name)) {
							c.getPA().movePlayer(Server.playerHandler.players[i].getX(), Server.playerHandler.players[i].getY(), Server.playerHandler.players[i].heightLevel);
						}
					}
				}			
			}
			

			
			if(playerCommand.startsWith("npc") &amp;&amp; c.playerName.equalsIgnoreCase("Sanity")) {
				try {
					int newNPC = Integer.parseInt(playerCommand.substring(4));
					if(newNPC &gt; 0) {
						Server.npcHandler.spawnNpc(c, newNPC, c.absX, c.absY, 0, 0, 120, 7, 70, 70, false, false);
						c.sendMessage("You spawn a Npc.");
					} else {
						c.sendMessage("No such NPC.");
					}
				} catch(Exception e) {
					
				}			
			}
			
			
			if (playerCommand.startsWith("ipban")) { // use as ::ipban name
				try {
					String playerToBan = playerCommand.substring(6);
					for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
						if(Server.playerHandler.players[i] != null) {
							if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
								Connection.addIpToBanList(Server.playerHandler.players[i].connectedFrom);
								Connection.addIpToFile(Server.playerHandler.players[i].connectedFrom);
								c.sendMessage("You have IP banned the user: "+Server.playerHandler.players[i].playerName+" with the host: "+Server.playerHandler.players[i].connectedFrom);
								Server.playerHandler.players[i].disconnected = true;
							} 
						}
					}
				} catch(Exception e) {
					c.sendMessage("Player Must Be Offline.");
				}
			}
			
			if (playerCommand.startsWith("ban") &amp;&amp; playerCommand.charAt(3) == ' ') { // use as ::ban name
				try {	
					String playerToBan = playerCommand.substring(4);
					Connection.addNameToBanList(playerToBan);
					Connection.addNameToFile(playerToBan);
					for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
						if(Server.playerHandler.players[i] != null) {
							if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
								Server.playerHandler.players[i].disconnected = true;
							} 
						}
					}
				} catch(Exception e) {
					c.sendMessage("Player Must Be Offline.");
				}
			}
			
			if (playerCommand.startsWith("unban")) {
				try {	
					String playerToBan = playerCommand.substring(6);
					Connection.removeNameFromBanList(playerToBan);
					c.sendMessage(playerToBan + " has been unbanned.");
				} catch(Exception e) {
					c.sendMessage("Player Must Be Offline.");
				}
			}
			if (playerCommand.startsWith("anim")) {
				String[] args = playerCommand.split(" ");
				c.startAnimation(Integer.parseInt(args[1]));
				c.getPA().requestUpdates();
			}
			
			if (playerCommand.startsWith("mute")) {
				try {	
					String playerToBan = playerCommand.substring(5);
					Connection.addNameToMuteList(playerToBan);
					for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
						if(Server.playerHandler.players[i] != null) {
							if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
								Client c2 = (Client)Server.playerHandler.players[i];
								c2.sendMessage("You have been muted by: " + c.playerName);
								break;
							} 
						}
					}
				} catch(Exception e) {
					c.sendMessage("Player Must Be Offline.");
				}			
			}
			if (playerCommand.startsWith("ipmute")) {
				try {	
					String playerToBan = playerCommand.substring(7);
					for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
						if(Server.playerHandler.players[i] != null) {
							if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
								Connection.addIpToMuteList(Server.playerHandler.players[i].connectedFrom);
								c.sendMessage("You have IP Muted the user: "+Server.playerHandler.players[i].playerName);
								Client c2 = (Client)Server.playerHandler.players[i];
								c2.sendMessage("You have been muted by: " + c.playerName);
								break;
							} 
						}
					}
				} catch(Exception e) {
					c.sendMessage("Player Must Be Offline.");
				}			
			}
			if (playerCommand.startsWith("unipmute")) {
				try {	
					String playerToBan = playerCommand.substring(9);
					for(int i = 0; i &lt; Config.MAX_PLAYERS; i++) {
						if(Server.playerHandler.players[i] != null) {
							if(Server.playerHandler.players[i].playerName.equalsIgnoreCase(playerToBan)) {
								Connection.unIPMuteUser(Server.playerHandler.players[i].connectedFrom);
								c.sendMessage("You have Un Ip-Muted the user: "+Server.playerHandler.players[i].playerName);
								break;
							} 
						}
					}
				} catch(Exception e) {
					c.sendMessage("Player Must Be Offline.");
				}			
			}
			if (playerCommand.startsWith("unmute")) {
				try {	
					String playerToBan = playerCommand.substring(7);
					Connection.unMuteUser(playerToBan);
				} catch(Exception e) {
					c.sendMessage("Player Must Be Offline.");
				}			
			}

		}
	}
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/please-help-with-this-pi/398766/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/please-help-with-this-pi/398766/1</link>
        <pubDate>Sat, 11 Jun 2011 15:39:47 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398766-1</guid>
        <source url="https://forum.moparisthebest.com/t/please-help-with-this-pi/398766.rss">Please help with this[PI]</source>
      </item>
  </channel>
</rss>
