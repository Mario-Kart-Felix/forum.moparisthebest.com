<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>More Efficent, Quicker Way?</title>
    <link>https://forum.moparisthebest.com/t/more-efficent-quicker-way/453514</link>
    <description>Okay, what I am asking is simple...


I have this,

[code]if (itemUsed == 1623 &amp;&amp; useWith == 18338) {
		if (c.GemBag == -1) {
		c.GemBag = 1623;
		c.getItems().deleteItem(1623, c.getItems().getItemSlot(1623),1);
		} else [/code]


Let me explain this code to you, Basically what it is, is you are using a gem on a gem bag, if the current slot (up to 100) is empty it will assign it the gem number, if not it will check the next slot for emptiness, and so on.

My question is what would be a quick and more efficient way for making it search through all 100 slots to check if they are open, and then to assign them an ID.</description>
    
    <lastBuildDate>Thu, 09 Aug 2012 15:57:02 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/more-efficent-quicker-way/453514.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>More Efficent, Quicker Way?</title>
        <dc:creator><![CDATA[@RiiPiiNFtW RiiPiiNFtW]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/riipiinftw">@RiiPiiNFtW</a> wrote:</p>
          <blockquote>
              <p>Array</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/more-efficent-quicker-way/453514/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/more-efficent-quicker-way/453514/5</link>
        <pubDate>Thu, 09 Aug 2012 15:57:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-453514-5</guid>
        <source url="https://forum.moparisthebest.com/t/more-efficent-quicker-way/453514.rss">More Efficent, Quicker Way?</source>
      </item>
      <item>
        <title>More Efficent, Quicker Way?</title>
        <dc:creator><![CDATA[@Native1 Native^]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/native1">@Native1</a> wrote:</p>
          <blockquote>
              <p>You can store the gems in a List and check the size() each time you add an item</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/more-efficent-quicker-way/453514/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/more-efficent-quicker-way/453514/4</link>
        <pubDate>Thu, 09 Aug 2012 10:10:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-453514-4</guid>
        <source url="https://forum.moparisthebest.com/t/more-efficent-quicker-way/453514.rss">More Efficent, Quicker Way?</source>
      </item>
      <item>
        <title>More Efficent, Quicker Way?</title>
        <dc:creator><![CDATA[@MicroZoft MicroZoft]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/microzoft">@MicroZoft</a> wrote:</p>
          <blockquote>
              <p><code>if(useWith == 18338)
  if(gemBag.hasOpenSpot())
    gemBag.add(itemUsed);
  else System.err.println("Gembag has no open spots!"); // or whatever you want here</code></p>
<p>I do understand the code you gave me, and I know I have to write a void hasOpenSpot(){, my question is what would be the best way for me to check each spot (1-100)?</p>
<p>To give more information I have GemBag1-100 added and their starting variable is -1, when the gem is added to the bag, the GemBag variable would then turn the ID of the ItemUsed, I have this added, very poorly to where if I wanted it to support more than 4 items; it would look like complete garbage.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/more-efficent-quicker-way/453514/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/more-efficent-quicker-way/453514/3</link>
        <pubDate>Thu, 09 Aug 2012 09:56:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-453514-3</guid>
        <source url="https://forum.moparisthebest.com/t/more-efficent-quicker-way/453514.rss">More Efficent, Quicker Way?</source>
      </item>
      <item>
        <title>More Efficent, Quicker Way?</title>
        <dc:creator><![CDATA[@Native1 Native^]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/native1">@Native1</a> wrote:</p>
          <blockquote>
              <p>Uh, your explanation doesn’t match the code in my eyes. If it does, the code is not logical.</p>
<pre><code class="lang-auto">if(useWith == 18338)
  if(gemBag.hasOpenSpot())
    gemBag.add(itemUsed);
  else System.err.println("Gembag has no open spots!"); // or whatever you want here</code></pre>
<p>I don’t want to spoonfeed the rest of the code. But figure something out.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/more-efficent-quicker-way/453514/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/more-efficent-quicker-way/453514/2</link>
        <pubDate>Thu, 09 Aug 2012 09:20:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-453514-2</guid>
        <source url="https://forum.moparisthebest.com/t/more-efficent-quicker-way/453514.rss">More Efficent, Quicker Way?</source>
      </item>
      <item>
        <title>More Efficent, Quicker Way?</title>
        <dc:creator><![CDATA[@MicroZoft MicroZoft]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/microzoft">@MicroZoft</a> wrote:</p>
          <blockquote>
              <p>Okay, what I am asking is simple…</p>
<p>I have this,</p>
<p><code>if (itemUsed == 1623 &amp;&amp; useWith == 18338) {
		if (c.GemBag == -1) {
		c.GemBag = 1623;
		c.getItems().deleteItem(1623, c.getItems().getItemSlot(1623),1);
		} else </code></p>
<p>Let me explain this code to you, Basically what it is, is you are using a gem on a gem bag, if the current slot (up to 100) is empty it will assign it the gem number, if not it will check the next slot for emptiness, and so on.</p>
<p>My question is what would be a quick and more efficient way for making it search through all 100 slots to check if they are open, and then to assign them an ID.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/more-efficent-quicker-way/453514/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/more-efficent-quicker-way/453514/1</link>
        <pubDate>Thu, 09 Aug 2012 09:07:01 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-453514-1</guid>
        <source url="https://forum.moparisthebest.com/t/more-efficent-quicker-way/453514.rss">More Efficent, Quicker Way?</source>
      </item>
  </channel>
</rss>
