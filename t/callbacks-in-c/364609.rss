<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Callbacks in C?</title>
    <link>https://forum.moparisthebest.com/t/callbacks-in-c/364609</link>
    <description>I&#39;m making an IRC bot in C, I&#39;m wanting it to be event-driven but I&#39;m not really sure how to handle callbacks.

I know how to declare function pointers, but I don&#39;t know how to use them for what I&#39;m wanting.  

This is somewhat how I&#39;m wanting the program to look:

[code]
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;signal.h&gt;

#include &quot;irc.h&quot;
#include &quot;connection.h&quot;

irc_t irc;

void handle_signal(int sig)
{
    irc_cleanup(&amp;irc);
}

void my_message_received(irc_t * irc, user_t * user, message_t * message)
{
    printf(&quot;[%s][%s]: %s\n&quot;, message-&gt;channel, user-&gt;nick, message-&gt;message);
    if(strstr(message-&gt;message, &quot;!&quot;) == message-&gt;message)
    {
        char * command;
        char * arguments;

       // printf(&quot;Starts with !\n&quot;);

        command = strtok(message-&gt;message + 1, &quot; &quot;);
        arguments = strtok(NULL, &quot;\0&quot;);

      //  printf(&quot;%s\n%s\n&quot;, command, arguments);

        if(strcmp(command, &quot;say&quot;) == 0)
        {
            irc_send(irc, &quot;PRIVMSG %s :%s\r\n&quot;, message-&gt;channel, arguments);
        }
        else if(strcmp(command, &quot;join&quot;) == 0)
        {
            irc_send(irc, &quot;JOIN %s\r\n&quot;, arguments);
        }
        else if(strcmp(command, &quot;part&quot;) == 0)
        {
            irc_send(irc, &quot;PART %s\r\n&quot;, arguments);
        }
    }
}

int main()
{
    signal(SIGTERM, handle_signal);
    signal(SIGINT, handle_signal);
    signal(SIGABRT, handle_signal);

    irc_init(&amp;irc, &quot;irc.strictfp.com&quot;, &quot;6667&quot;);

    irc_register(&amp;irc, &quot;PRIVMSG&quot;, my_message_received);

    irc_main_loop(&amp;irc, &quot;EvilBot[C]&quot;);
    irc_cleanup(&amp;irc);

    return 0;
}
[/code]

I guess the main problem I&#39;m having is how to store an array, or maybe like linked_list of function pointers.  

my idea is like:

[code]

// Assume that the function pointers are defined.
irc_register(irc_t * irc, const char * command, void * fn_callback)
{
    if(strcmp(command, &quot;PRIVMSG&quot;))
    {
        list_add(&amp;privmsg_callbacks, (fn_privmsg_callback) fn_callback);
    }
    else if(strcmp(command, &quot;NOTICE&quot;))
    {
        list_add(&amp;notice_callbacks, (fn_notice_callback) fn_callback);
    }
    ... etc ...
}
[/code]

Anyone mind helping me a bit?</description>
    
    <lastBuildDate>Tue, 19 Oct 2010 20:55:30 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/callbacks-in-c/364609.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Callbacks in C?</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <aside class="quote no-group quote-modified" data-post="6" data-topic="364609">
<div class="title">
<div class="quote-controls"></div>
 super_:</div>
<blockquote>
<p>“just use a void**”</p>
</blockquote>
</aside>
<aside class="quote no-group quote-modified" data-post="2" data-topic="364609">
<div class="title">
<div class="quote-controls"></div>
<img alt width="20" height="20" src="https://forum.moparisthebest.com/letter_avatar/abraham2119/40/5_1887921562df0dabfae55079ddabeb03.png" class="avatar"> abraham2119:</div>
<blockquote>
<p><span class="bbcode-b">you have to make your own dynamic list implementation</span>, which is very simple…<span class="bbcode-b">just use a void **</span> [to make it]</p>
</blockquote>
</aside>
<p>fuck off</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/callbacks-in-c/364609/8">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/callbacks-in-c/364609/8</link>
        <pubDate>Tue, 19 Oct 2010 20:55:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-364609-8</guid>
        <source url="https://forum.moparisthebest.com/t/callbacks-in-c/364609.rss">Callbacks in C?</source>
      </item>
      <item>
        <title>Callbacks in C?</title>
        <dc:creator><![CDATA[@Evil1 Evil_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/evil1">@Evil1</a> wrote:</p>
          <blockquote>
              <p>For the record, I tried to implement a linked_list, you can see it in the bot I released.  it’s in list.c and list.h</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/callbacks-in-c/364609/7">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/callbacks-in-c/364609/7</link>
        <pubDate>Tue, 19 Oct 2010 20:37:12 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-364609-7</guid>
        <source url="https://forum.moparisthebest.com/t/callbacks-in-c/364609.rss">Callbacks in C?</source>
      </item>
      <item>
        <title>Callbacks in C?</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>“just use a void**”</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/callbacks-in-c/364609/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/callbacks-in-c/364609/6</link>
        <pubDate>Tue, 19 Oct 2010 20:19:18 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-364609-6</guid>
        <source url="https://forum.moparisthebest.com/t/callbacks-in-c/364609.rss">Callbacks in C?</source>
      </item>
      <item>
        <title>Callbacks in C?</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>[quote=“super_, post:4, topic:364609”]for the love of god do not follow abraham’s suggestion. using a void ** is an ugly confusing solution that will make anyone who sees your code cringe. just write some sort of linked list or if you must a resizable array-backed list which has some helper functions for operating on it at the least[/quote]i suggested void** for his dynamic list implementation…how else is he supposed to make it generic</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/callbacks-in-c/364609/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/callbacks-in-c/364609/5</link>
        <pubDate>Mon, 18 Oct 2010 23:09:34 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-364609-5</guid>
        <source url="https://forum.moparisthebest.com/t/callbacks-in-c/364609.rss">Callbacks in C?</source>
      </item>
      <item>
        <title>Callbacks in C?</title>
        <dc:creator><![CDATA[@Jython super_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/jython">@Jython</a> wrote:</p>
          <blockquote>
              <p>for the love of god do not follow abraham’s suggestion. using a void ** is an ugly confusing solution that will make anyone who sees your code cringe. just write some sort of linked list or if you must a resizable array-backed list which has some helper functions for operating on it at the least</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/callbacks-in-c/364609/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/callbacks-in-c/364609/4</link>
        <pubDate>Mon, 18 Oct 2010 22:35:00 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-364609-4</guid>
        <source url="https://forum.moparisthebest.com/t/callbacks-in-c/364609.rss">Callbacks in C?</source>
      </item>
      <item>
        <title>Callbacks in C?</title>
        <dc:creator><![CDATA[@Evil1 Evil_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/evil1">@Evil1</a> wrote:</p>
          <blockquote>
              <p>[quote=“abraham2119, post:2, topic:364609”]you have to make your own dynamic list implementation, which is very simple…just use a void **[/quote]Alright, thanks m8</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/callbacks-in-c/364609/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/callbacks-in-c/364609/3</link>
        <pubDate>Sun, 17 Oct 2010 02:06:59 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-364609-3</guid>
        <source url="https://forum.moparisthebest.com/t/callbacks-in-c/364609.rss">Callbacks in C?</source>
      </item>
      <item>
        <title>Callbacks in C?</title>
        <dc:creator><![CDATA[@abraham2119 abraham2119]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/abraham2119">@abraham2119</a> wrote:</p>
          <blockquote>
              <p>you have to make your own dynamic list implementation, which is very simple…just use a void **</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/callbacks-in-c/364609/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/callbacks-in-c/364609/2</link>
        <pubDate>Sun, 17 Oct 2010 00:13:28 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-364609-2</guid>
        <source url="https://forum.moparisthebest.com/t/callbacks-in-c/364609.rss">Callbacks in C?</source>
      </item>
      <item>
        <title>Callbacks in C?</title>
        <dc:creator><![CDATA[@Evil1 Evil_]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/evil1">@Evil1</a> wrote:</p>
          <blockquote>
              <p>I’m making an IRC bot in C, I’m wanting it to be event-driven but I’m not really sure how to handle callbacks.</p>
<p>I know how to declare function pointers, but I don’t know how to use them for what I’m wanting.</p>
<p>This is somewhat how I’m wanting the program to look:</p>
<pre><code class="lang-auto">#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;signal.h&gt;

#include "irc.h"
#include "connection.h"

irc_t irc;

void handle_signal(int sig)
{
    irc_cleanup(&amp;irc);
}

void my_message_received(irc_t * irc, user_t * user, message_t * message)
{
    printf("[%s][%s]: %s\n", message-&gt;channel, user-&gt;nick, message-&gt;message);
    if(strstr(message-&gt;message, "!") == message-&gt;message)
    {
        char * command;
        char * arguments;

       // printf("Starts with !\n");

        command = strtok(message-&gt;message + 1, " ");
        arguments = strtok(NULL, "\0");

      //  printf("%s\n%s\n", command, arguments);

        if(strcmp(command, "say") == 0)
        {
            irc_send(irc, "PRIVMSG %s :%s\r\n", message-&gt;channel, arguments);
        }
        else if(strcmp(command, "join") == 0)
        {
            irc_send(irc, "JOIN %s\r\n", arguments);
        }
        else if(strcmp(command, "part") == 0)
        {
            irc_send(irc, "PART %s\r\n", arguments);
        }
    }
}

int main()
{
    signal(SIGTERM, handle_signal);
    signal(SIGINT, handle_signal);
    signal(SIGABRT, handle_signal);

    irc_init(&amp;irc, "irc.strictfp.com", "6667");

    irc_register(&amp;irc, "PRIVMSG", my_message_received);

    irc_main_loop(&amp;irc, "EvilBot[C]");
    irc_cleanup(&amp;irc);

    return 0;
}</code></pre>
<p>I guess the main problem I’m having is how to store an array, or maybe like linked_list of function pointers.</p>
<p>my idea is like:</p>
<pre><code class="lang-auto">
// Assume that the function pointers are defined.
irc_register(irc_t * irc, const char * command, void * fn_callback)
{
    if(strcmp(command, "PRIVMSG"))
    {
        list_add(&amp;privmsg_callbacks, (fn_privmsg_callback) fn_callback);
    }
    else if(strcmp(command, "NOTICE"))
    {
        list_add(&amp;notice_callbacks, (fn_notice_callback) fn_callback);
    }
    ... etc ...
}</code></pre>
<p>Anyone mind helping me a bit?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/callbacks-in-c/364609/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/callbacks-in-c/364609/1</link>
        <pubDate>Sat, 16 Oct 2010 18:43:56 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-364609-1</guid>
        <source url="https://forum.moparisthebest.com/t/callbacks-in-c/364609.rss">Callbacks in C?</source>
      </item>
  </channel>
</rss>
