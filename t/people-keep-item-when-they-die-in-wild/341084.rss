<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>People keep item when they die in wild?</title>
    <link>https://forum.moparisthebest.com/t/people-keep-item-when-they-die-in-wild/341084</link>
    <description>When people die in wild and are skulled they keep theyre items

Heres my youdied void thing
[code]public void youdied()
		{
		if(playerHasItem(5509)){
		deleteItem(5509, 1);
		}
		if(playerHasItem(5510)){
		deleteItem(5510, 1);
		}
		if(playerHasItem(5512)){
		deleteItem(5512, 1);
		}
		if(playerHasItem(5514)){
		deleteItem(5514, 1);
		}
		if(playerHasItem(6570)){
		deleteItem(6570, 1);
		}
                if (!isSkulled) {
                keepItemHandle();
		}
                if (ProtItem) {
                applyProtectItemProt();
		}
for(int rr=0; rr&lt;playerItems.length; rr++) {
	try {
		if(playerItems[rr] &gt; 0 &amp;&amp; playerItems[rr] &lt; 11999) {		//createItem(currentX,currentY,playerItems[rr]-1);
			replaceBarrows();
			//server.checkPlayerCapes.checkDrop(this);
			ItemHandler.addItem(playerItems[rr]-1, absX, absY, playerItemsN[rr], KillerId, false);
                        //createGroundItem(playerItems[rr]-1, absX, absY, playerItemsN[i]);
			deleteItem(playerItems[rr]-1, getItemSlot(playerItems[rr]-1), playerItemsN[rr]);
 
		}
	} catch(Exception e) {  }
}
for(int r=0; r&lt;playerEquipment.length; r++) {
	try {
		int item = playerEquipment[r];
		if((item &gt; 0) &amp;&amp; (item &lt; 11999)) {
			remove(item, r);
		}
	} catch(Exception e) { sM(&quot;ERROR: Removing Equipment&quot;); }
}
		if(playerHasItem(5509)){
		deleteItem(5509, 1);
		}
		if(playerHasItem(5510)){
		deleteItem(5510, 1);
		}
		if(playerHasItem(5512)){
		deleteItem(5512, 1);
		}
		if(playerHasItem(5514)){
		deleteItem(5514, 1);
		}
		if(playerHasItem(6570)){
		deleteItem(6570, 1);
		}
for(int rr=0; rr&lt;playerItems.length; rr++) {
	try {
		if(playerItems[rr] &gt; 0 &amp;&amp; playerItems[rr] &lt; 11999) {
//createItem(currentX,currentY,playerItems[rr]-1);
			replaceBarrows();
			//server.checkPlayerCapes.checkDrop(this);
			ItemHandler.addItem(playerItems[rr]-1, absX, absY, playerItemsN[rr], KillerId, false);
                        //createGroundItem(playerItems[rr]-1, absX, absY, playerItemsN[i]);
			deleteItem(playerItems[rr]-1, getItemSlot(playerItems[rr]-1), playerItemsN[rr]); 
		}
	} catch(Exception e) {  }
}
		try {

		} catch(Exception e) {}
			ItemHandler.addItem(526, absX, absY, 1, KillerId, false);
		try {
		} catch(Exception e) {}
        if (itemKept1 &gt; 0)
            addItem(itemKept1, 1);
        if (itemKept2 &gt; 0)
            addItem(itemKept2, 1);
        if (itemKept3 &gt; 0)
            addItem(itemKept3, 1);
        if (itemKept4 &gt; 0)
            addItem(itemKept4, 1);
	if (keep6570) {
	    addItem(6570, 1);
	    keep6570 = false;
	}
	
			resetKeepItem();
			hitDiff = 0;	
			updateRequired = true; appearanceUpdateRequired = true;
		}
    public void keepItem1()
    {
        int highest = 0;
        for (int i = 0; i &lt; playerItems.length; i++)
        {
            int value = (int)Math.floor(GetItemValue(playerItems[i]-1));
            if(value &gt; highest &amp;&amp; playerItems[i]-1 != -1)
            {
                highest = value;
                itemKept1 = playerItems[i]-1;
                itemKept1Slot = i;
                itemSlot1 = true;
            }
        }
        for (int i = 0; i &lt; playerEquipment.length; i++)
        {
            int value = (int)Math.floor(GetItemValue(playerEquipment[i]));
            if(value &gt; highest &amp;&amp; playerEquipment[i] != -1)
            {
                highest = value;
                itemKept1 = playerEquipment[i];
                itemKept1Slot = i;
                itemSlot1 = false;
            }
        }
    }

    public void keepItem2() {
        int highest = 0;
        for (int i = 0; i &lt; playerItems.length; i++)
        {
            if (itemKept1Slot != i)
            {
                int value = (int)Math.floor(GetItemValue(playerItems[i]-1));
                if(value &gt; highest &amp;&amp; playerItems[i]-1 != -1)
                {
                    highest = value;
                    itemKept2 = playerItems[i]-1;
                    itemKept2Slot = i;
                    itemSlot2 = true;
                }
            }
        }
        for (int i = 0; i &lt; playerEquipment.length; i++)
        {
            if (itemKept1Slot != i)
            {
                int value = (int)Math.floor(GetItemValue(playerEquipment[i]));
                if(value &gt; highest &amp;&amp; playerEquipment[i] != -1)
                {
                    highest = value;
                    itemKept2 = playerEquipment[i];
                    itemKept2Slot = i;
                    itemSlot2 = false;
                }
            }
        }
    }

    public void keepItem3()
    {
        int highest = 0;
        for (int i = 0; i &lt; playerItems.length; i++)
        {
            if (itemKept1Slot != i &amp;&amp; itemKept2Slot != i)
            {
                int value = (int)Math.floor(GetItemValue(playerItems[i]-1));
                if(value &gt; highest &amp;&amp; playerItems[i]-1 != -1)
                {
                    highest = value;
                    itemKept3 = playerItems[i]-1;
                    itemKept3Slot = i;
                    itemSlot3 = true;
                }
            }
        }
        for (int i = 0; i &lt; playerEquipment.length; i++)
        {
            if (itemKept1Slot != i &amp;&amp; itemKept2Slot != i)
            {
                int value = (int)Math.floor(GetItemValue(playerEquipment[i]));
                if(value &gt; highest &amp;&amp; playerEquipment[i] != -1)
                {
                    highest = value;
                    itemKept3 = playerEquipment[i];
                    itemKept3Slot = i;
                    itemSlot3 = false;
                }
            }
        }
    }

    public void keepItem4()
    {
        int highest = 0;
        for (int i = 0; i &lt; playerItems.length; i++)
        {
            if (itemKept1Slot != i &amp;&amp; itemKept2Slot != i &amp;&amp; itemKept3Slot != i)
            {
                int value = (int)Math.floor(GetItemValue(playerItems[i]-1));
                if(value &gt; highest &amp;&amp; playerItems[i]-1 != -1)
                {
                    highest = value;
                    itemKept4 = playerItems[i]-1;
                    itemKept4Slot = i;
                    itemSlot4 = true;
                }
            }
        }
        for (int i = 0; i &lt; playerEquipment.length; i++)
        {
            if (itemKept1Slot != i &amp;&amp; itemKept2Slot != i &amp;&amp; itemKept3Slot != i)
            {
                int value = (int)Math.floor(GetItemValue(playerEquipment[i]));
                if(value &gt; highest &amp;&amp; playerEquipment[i] != -1)
                {
                    highest = value;
                    itemKept4 = playerEquipment[i];
                    itemKept4Slot = i;
                    itemSlot4 = false;
                }
            }
        }
    }

   public void resetKeepItem()
    {
        itemKept1 = itemKept2 = itemKept3 = itemKept4 = -1;
        itemKept1Slot = itemKept2Slot = itemKept3Slot = itemKept4Slot = -1;
    itemLose1 = itemLose2 = itemLose3 = itemLose4 = itemLose5 = itemLose6 = itemLose7 = itemLose8 = itemLose9 = itemLose10 = itemLose11 = itemLose12 = itemLose13 = itemLose14 = itemLose15 = itemLose16 = itemLose17 = itemLose18 = itemLose19 = itemLose20 = itemLose21 = itemLose22 = itemLose23 = itemLose24 = itemLose25 = itemLose26 = itemLose27 = itemLose28 = itemLose29 = itemLose30 = itemLose31 = itemLose32 = itemLose33 = itemLose34 = itemLose35 = itemLose36 = itemLose37 = itemLose38 = itemLose39 = -1;
    itemLose1Slot = itemLose2Slot = itemLose3Slot = itemLose4Slot = itemLose5Slot = itemLose6Slot = itemLose7Slot = itemLose8Slot = itemLose9Slot = itemLose10Slot = itemLose11Slot = itemLose12Slot = itemLose13Slot = itemLose14Slot = itemLose15Slot = itemLose16Slot = itemLose17Slot = itemLose18Slot = itemLose19Slot = itemLose20Slot = itemLose21Slot = itemLose22Slot = itemLose23Slot = itemLose24Slot = itemLose25Slot = itemLose26Slot = itemLose27Slot = itemLose28Slot = itemLose29Slot = itemLose30Slot = itemLose31Slot = itemLose32Slot = itemLose33Slot = itemLose34Slot = itemLose35Slot = itemLose36Slot = itemLose37Slot = itemLose38Slot = itemLose39Slot = -1;
    }
    public void keepItemHandle()
    {
        keepItem1();
        keepItem2();
        keepItem3();
        if (itemKept1 &gt; 0)
        {
            if (itemSlot1)
                deleteItem(itemKept1, itemKept1Slot, 1);
            else if (!itemSlot1)
                deleteequiment(itemKept1, itemKept1Slot);
        }
        if (itemKept2 &gt; 0)
        {
            if (itemSlot2)
                deleteItem(itemKept2, itemKept2Slot, 1);
            else if (!itemSlot2)
                deleteequiment(itemKept2, itemKept2Slot);
        }
        if (itemKept3 &gt; 0)
        {
            if (itemSlot3)
                deleteItem(itemKept3, itemKept3Slot, 1);
            else if (!itemSlot3)
                deleteequiment(itemKept3, itemKept3Slot);
        }
    }[/code]</description>
    
    <lastBuildDate>Sun, 23 May 2010 06:06:35 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/people-keep-item-when-they-die-in-wild/341084.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>People keep item when they die in wild?</title>
        <dc:creator><![CDATA[@punch punch]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/punch">@punch</a> wrote:</p>
          <blockquote>
              <p>Um im not sure but i dont think it is.<br>
Would it say “call on death” anywhere?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/people-keep-item-when-they-die-in-wild/341084/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/people-keep-item-when-they-die-in-wild/341084/3</link>
        <pubDate>Sun, 23 May 2010 06:06:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-341084-3</guid>
        <source url="https://forum.moparisthebest.com/t/people-keep-item-when-they-die-in-wild/341084.rss">People keep item when they die in wild?</source>
      </item>
      <item>
        <title>People keep item when they die in wild?</title>
        <dc:creator><![CDATA[@deathschaos9 DeathsChaos9]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/deathschaos9">@deathschaos9</a> wrote:</p>
          <blockquote>
              <p>Is youdied being called on death?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/people-keep-item-when-they-die-in-wild/341084/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/people-keep-item-when-they-die-in-wild/341084/2</link>
        <pubDate>Sun, 23 May 2010 05:58:14 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-341084-2</guid>
        <source url="https://forum.moparisthebest.com/t/people-keep-item-when-they-die-in-wild/341084.rss">People keep item when they die in wild?</source>
      </item>
      <item>
        <title>People keep item when they die in wild?</title>
        <dc:creator><![CDATA[@punch punch]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/punch">@punch</a> wrote:</p>
          <blockquote>
              <p>When people die in wild and are skulled they keep theyre items</p>
<p>Heres my youdied void thing</p>
<p>[code]public void youdied()<br>
{<br>
if(playerHasItem(5509)){<br>
deleteItem(5509, 1);<br>
}<br>
if(playerHasItem(5510)){<br>
deleteItem(5510, 1);<br>
}<br>
if(playerHasItem(5512)){<br>
deleteItem(5512, 1);<br>
}<br>
if(playerHasItem(5514)){<br>
deleteItem(5514, 1);<br>
}<br>
if(playerHasItem(6570)){<br>
deleteItem(6570, 1);<br>
}<br>
if (!isSkulled) {<br>
keepItemHandle();<br>
}<br>
if (ProtItem) {<br>
applyProtectItemProt();<br>
}<br>
for(int rr=0; rr&lt;playerItems.length; rr++) {<br>
try {<br>
if(playerItems[rr] &gt; 0 &amp;&amp; playerItems[rr] &lt; 11999) {		//createItem(currentX,currentY,playerItems[rr]-1);<br>
replaceBarrows();<br>
<a href="//server.checkPlayerCapes.checkDrop" rel="nofollow noopener">//server.checkPlayerCapes.checkDrop</a>(this);<br>
ItemHandler.addItem(playerItems[rr]-1, absX, absY, playerItemsN[rr], KillerId, false);<br>
//createGroundItem(playerItems[rr]-1, absX, absY, playerItemsN[i]);<br>
deleteItem(playerItems[rr]-1, getItemSlot(playerItems[rr]-1), playerItemsN[rr]);</p>
<pre><code>	}
} catch(Exception e) {  }
</code></pre>
<p>}<br>
for(int r=0; r&lt;playerEquipment.length; r++) {<br>
try {<br>
int item = playerEquipment[r];<br>
if((item &gt; 0) &amp;&amp; (item &lt; 11999)) {<br>
remove(item, r);<br>
}<br>
} catch(Exception e) { sM(“ERROR: Removing Equipment”); }<br>
}<br>
if(playerHasItem(5509)){<br>
deleteItem(5509, 1);<br>
}<br>
if(playerHasItem(5510)){<br>
deleteItem(5510, 1);<br>
}<br>
if(playerHasItem(5512)){<br>
deleteItem(5512, 1);<br>
}<br>
if(playerHasItem(5514)){<br>
deleteItem(5514, 1);<br>
}<br>
if(playerHasItem(6570)){<br>
deleteItem(6570, 1);<br>
}<br>
for(int rr=0; rr&lt;playerItems.length; rr++) {<br>
try {<br>
if(playerItems[rr] &gt; 0 &amp;&amp; playerItems[rr] &lt; 11999) {<br>
//createItem(currentX,currentY,playerItems[rr]-1);<br>
replaceBarrows();<br>
<a href="//server.checkPlayerCapes.checkDrop" rel="nofollow noopener">//server.checkPlayerCapes.checkDrop</a>(this);<br>
ItemHandler.addItem(playerItems[rr]-1, absX, absY, playerItemsN[rr], KillerId, false);<br>
//createGroundItem(playerItems[rr]-1, absX, absY, playerItemsN[i]);<br>
deleteItem(playerItems[rr]-1, getItemSlot(playerItems[rr]-1), playerItemsN[rr]);<br>
}<br>
} catch(Exception e) {  }<br>
}<br>
try {</p>
<pre><code>	} catch(Exception e) {}
		ItemHandler.addItem(526, absX, absY, 1, KillerId, false);
	try {
	} catch(Exception e) {}
    if (itemKept1 &gt; 0)
        addItem(itemKept1, 1);
    if (itemKept2 &gt; 0)
        addItem(itemKept2, 1);
    if (itemKept3 &gt; 0)
        addItem(itemKept3, 1);
    if (itemKept4 &gt; 0)
        addItem(itemKept4, 1);
if (keep6570) {
    addItem(6570, 1);
    keep6570 = false;
}

		resetKeepItem();
		hitDiff = 0;	
		updateRequired = true; appearanceUpdateRequired = true;
	}
public void keepItem1()
{
    int highest = 0;
    for (int i = 0; i &lt; playerItems.length; i++)
    {
        int value = (int)Math.floor(GetItemValue(playerItems[i]-1));
        if(value &gt; highest &amp;&amp; playerItems[i]-1 != -1)
        {
            highest = value;
            itemKept1 = playerItems[i]-1;
            itemKept1Slot = i;
            itemSlot1 = true;
        }
    }
    for (int i = 0; i &lt; playerEquipment.length; i++)
    {
        int value = (int)Math.floor(GetItemValue(playerEquipment[i]));
        if(value &gt; highest &amp;&amp; playerEquipment[i] != -1)
        {
            highest = value;
            itemKept1 = playerEquipment[i];
            itemKept1Slot = i;
            itemSlot1 = false;
        }
    }
}

public void keepItem2() {
    int highest = 0;
    for (int i = 0; i &lt; playerItems.length; i++)
    {
        if (itemKept1Slot != i)
        {
            int value = (int)Math.floor(GetItemValue(playerItems[i]-1));
            if(value &gt; highest &amp;&amp; playerItems[i]-1 != -1)
            {
                highest = value;
                itemKept2 = playerItems[i]-1;
                itemKept2Slot = i;
                itemSlot2 = true;
            }
        }
    }
    for (int i = 0; i &lt; playerEquipment.length; i++)
    {
        if (itemKept1Slot != i)
        {
            int value = (int)Math.floor(GetItemValue(playerEquipment[i]));
            if(value &gt; highest &amp;&amp; playerEquipment[i] != -1)
            {
                highest = value;
                itemKept2 = playerEquipment[i];
                itemKept2Slot = i;
                itemSlot2 = false;
            }
        }
    }
}

public void keepItem3()
{
    int highest = 0;
    for (int i = 0; i &lt; playerItems.length; i++)
    {
        if (itemKept1Slot != i &amp;&amp; itemKept2Slot != i)
        {
            int value = (int)Math.floor(GetItemValue(playerItems[i]-1));
            if(value &gt; highest &amp;&amp; playerItems[i]-1 != -1)
            {
                highest = value;
                itemKept3 = playerItems[i]-1;
                itemKept3Slot = i;
                itemSlot3 = true;
            }
        }
    }
    for (int i = 0; i &lt; playerEquipment.length; i++)
    {
        if (itemKept1Slot != i &amp;&amp; itemKept2Slot != i)
        {
            int value = (int)Math.floor(GetItemValue(playerEquipment[i]));
            if(value &gt; highest &amp;&amp; playerEquipment[i] != -1)
            {
                highest = value;
                itemKept3 = playerEquipment[i];
                itemKept3Slot = i;
                itemSlot3 = false;
            }
        }
    }
}

public void keepItem4()
{
    int highest = 0;
    for (int i = 0; i &lt; playerItems.length; i++)
    {
        if (itemKept1Slot != i &amp;&amp; itemKept2Slot != i &amp;&amp; itemKept3Slot != i)
        {
            int value = (int)Math.floor(GetItemValue(playerItems[i]-1));
            if(value &gt; highest &amp;&amp; playerItems[i]-1 != -1)
            {
                highest = value;
                itemKept4 = playerItems[i]-1;
                itemKept4Slot = i;
                itemSlot4 = true;
            }
        }
    }
    for (int i = 0; i &lt; playerEquipment.length; i++)
    {
        if (itemKept1Slot != i &amp;&amp; itemKept2Slot != i &amp;&amp; itemKept3Slot != i)
        {
            int value = (int)Math.floor(GetItemValue(playerEquipment[i]));
            if(value &gt; highest &amp;&amp; playerEquipment[i] != -1)
            {
                highest = value;
                itemKept4 = playerEquipment[i];
                itemKept4Slot = i;
                itemSlot4 = false;
            }
        }
    }
}
</code></pre>
<p>public void resetKeepItem()<br>
{<br>
itemKept1 = itemKept2 = itemKept3 = itemKept4 = -1;<br>
itemKept1Slot = itemKept2Slot = itemKept3Slot = itemKept4Slot = -1;<br>
itemLose1 = itemLose2 = itemLose3 = itemLose4 = itemLose5 = itemLose6 = itemLose7 = itemLose8 = itemLose9 = itemLose10 = itemLose11 = itemLose12 = itemLose13 = itemLose14 = itemLose15 = itemLose16 = itemLose17 = itemLose18 = itemLose19 = itemLose20 = itemLose21 = itemLose22 = itemLose23 = itemLose24 = itemLose25 = itemLose26 = itemLose27 = itemLose28 = itemLose29 = itemLose30 = itemLose31 = itemLose32 = itemLose33 = itemLose34 = itemLose35 = itemLose36 = itemLose37 = itemLose38 = itemLose39 = -1;<br>
itemLose1Slot = itemLose2Slot = itemLose3Slot = itemLose4Slot = itemLose5Slot = itemLose6Slot = itemLose7Slot = itemLose8Slot = itemLose9Slot = itemLose10Slot = itemLose11Slot = itemLose12Slot = itemLose13Slot = itemLose14Slot = itemLose15Slot = itemLose16Slot = itemLose17Slot = itemLose18Slot = itemLose19Slot = itemLose20Slot = itemLose21Slot = itemLose22Slot = itemLose23Slot = itemLose24Slot = itemLose25Slot = itemLose26Slot = itemLose27Slot = itemLose28Slot = itemLose29Slot = itemLose30Slot = itemLose31Slot = itemLose32Slot = itemLose33Slot = itemLose34Slot = itemLose35Slot = itemLose36Slot = itemLose37Slot = itemLose38Slot = itemLose39Slot = -1;<br>
}<br>
public void keepItemHandle()<br>
{<br>
keepItem1();<br>
keepItem2();<br>
keepItem3();<br>
if (itemKept1 &gt; 0)<br>
{<br>
if (itemSlot1)<br>
deleteItem(itemKept1, itemKept1Slot, 1);<br>
else if (!itemSlot1)<br>
deleteequiment(itemKept1, itemKept1Slot);<br>
}<br>
if (itemKept2 &gt; 0)<br>
{<br>
if (itemSlot2)<br>
deleteItem(itemKept2, itemKept2Slot, 1);<br>
else if (!itemSlot2)<br>
deleteequiment(itemKept2, itemKept2Slot);<br>
}<br>
if (itemKept3 &gt; 0)<br>
{<br>
if (itemSlot3)<br>
deleteItem(itemKept3, itemKept3Slot, 1);<br>
else if (!itemSlot3)<br>
deleteequiment(itemKept3, itemKept3Slot);<br>
}<br>
}[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/people-keep-item-when-they-die-in-wild/341084/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/people-keep-item-when-they-die-in-wild/341084/1</link>
        <pubDate>Sun, 23 May 2010 05:51:02 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-341084-1</guid>
        <source url="https://forum.moparisthebest.com/t/people-keep-item-when-they-die-in-wild/341084.rss">People keep item when they die in wild?</source>
      </item>
  </channel>
</rss>
