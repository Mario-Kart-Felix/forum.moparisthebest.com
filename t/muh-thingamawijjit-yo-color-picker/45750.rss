<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Muh thingamawijjit, yo. Color Picker</title>
    <link>https://forum.moparisthebest.com/t/muh-thingamawijjit-yo-color-picker/45750</link>
    <description>This, bish, is a color picker. Works with any descendant of JComponent, and can set background and foreground colors of a target JComponent. To use with your favorite JComponent, new ColorPicker(JComponent target); Part of a code I made for my SF project @ http://rsr-jirc.sourceforge.net/. Enjoy.

[code]
import javax.swing.*;
import java.awt.*;
import java.awt.event.AdjustmentListener;
import java.awt.event.AdjustmentEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

class ColorPicker extends JFrame {
    public ColorPicker(final JComponent target) {
        super(&quot;RSR IRC - Color Picker&quot;);
        setLayout(new BorderLayout());

        // The actual scrollbar components.
        final JScrollBar r = new JScrollBar(JScrollBar.HORIZONTAL, 255, 1, 0, 256);
        final JScrollBar g = new JScrollBar(JScrollBar.HORIZONTAL, 255, 1, 0, 256);
        final JScrollBar b = new JScrollBar(JScrollBar.HORIZONTAL, 255, 1, 0, 256);

        // Changing the colors so the user knows which is which.
        r.setBackground(new Color(255, 0, 0));
        g.setBackground(new Color(0, 255, 0));
        b.setBackground(new Color(0, 0, 255));

        // Actually adding the scrollbars to a panel.
        JPanel scrollbars = new JPanel(new BorderLayout());
        scrollbars.add(BorderLayout.NORTH, r);
        scrollbars.add(BorderLayout.CENTER, g);
        scrollbars.add(BorderLayout.SOUTH, b);

        // Creating a text area to demonstrate the color.
        final JTextArea demoarea = new JTextArea();

        // Update the color once the scrollbars get changed.
        AdjustmentListener genericScrollingColorListner = new AdjustmentListener() {
            public void adjustmentValueChanged(AdjustmentEvent e) {
                demoarea.setBackground(new Color(r.getValue(), g.getValue(), b.getValue()));
            }
        };

        // Adding the listeners.
        r.addAdjustmentListener(genericScrollingColorListner);
        g.addAdjustmentListener(genericScrollingColorListner);
        b.addAdjustmentListener(genericScrollingColorListner);

        // A few buttons to let the user do things with the color.
        JButton fore = new JButton(&quot;Set Foreground&quot;);
        JButton back = new JButton(&quot;Set Background&quot;);

        // Maybe the buttons should actually do something.
        fore.addMouseListener(new MouseAdapter() {
            public void mouseReleased(MouseEvent e) {
                target.setForeground(demoarea.getBackground());
            }
        });
        back.addMouseListener(new MouseAdapter() {
            public void mouseReleased(MouseEvent e) {
                target.setBackground(demoarea.getBackground());
            }
        });

        // Adding the buttons to a panel.
        JPanel buttons = new JPanel(new BorderLayout());
        buttons.add(BorderLayout.NORTH, fore);
        buttons.add(BorderLayout.CENTER, back);

        // Adding the two panels and the demo area to the main frame.
        add(scrollbars, BorderLayout.NORTH);
        add(demoarea, BorderLayout.CENTER);
        add(buttons, BorderLayout.SOUTH);

        // Setting the picker to take up a reasonable amount of space.
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        dimension.height /= 5;
        dimension.width /= 5;
        setSize(dimension.width, dimension.height);

        // Moving it to greener pastures.
        dimension = Toolkit.getDefaultToolkit().getScreenSize();
        dimension.height /= 4;
        dimension.width /= 4;
        setLocation(dimension.width, dimension.height);

        // Displaying our beautiful color picker.
        setVisible(true);
    }

    public static void main(String[] args) {
        // A demo main to view the appearance and test our wonderful thingamajig.
        JFrame testtarget = new JFrame(&quot;Test Target&quot;);

        // Getting the proper size.
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        dimension.width /= 4;
        dimension.height /= 4;
        testtarget.setSize(dimension);
        testtarget.setLocation(dimension.width, dimension.height);

        // Adding just that extra bit of oomph.
        JTextArea texttarget = new JTextArea(&quot;Insert generic sample text here.&quot;);
        testtarget.add(texttarget);
        testtarget.setVisible(true);

        // And now, for our feature presentation.
        new ColorPicker(texttarget);
    }
}
[/code]</description>
    
    <lastBuildDate>Tue, 09 Jan 2007 07:30:30 +0000</lastBuildDate>
    <category>General Programming</category>
    <atom:link href="https://forum.moparisthebest.com/t/muh-thingamawijjit-yo-color-picker/45750.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Muh thingamawijjit, yo. Color Picker</title>
        <dc:creator><![CDATA[@White_Castle White Castle]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/white_castle">@White_Castle</a> wrote:</p>
          <blockquote>
              <p>Or you could just use <a href="http://java.sun.com/j2se/1.5.0/docs/api/javax/swing/JColorChooser.html" data-bbcode="true" rel="nofollow noopener">JColorChooser</a>. Nice job anyways.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/muh-thingamawijjit-yo-color-picker/45750/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/muh-thingamawijjit-yo-color-picker/45750/2</link>
        <pubDate>Tue, 09 Jan 2007 07:30:30 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-45750-2</guid>
        <source url="https://forum.moparisthebest.com/t/muh-thingamawijjit-yo-color-picker/45750.rss">Muh thingamawijjit, yo. Color Picker</source>
      </item>
      <item>
        <title>Muh thingamawijjit, yo. Color Picker</title>
        <dc:creator><![CDATA[@Aftermath_961 Aftermath]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/aftermath_961">@Aftermath_961</a> wrote:</p>
          <blockquote>
              <p>This, bish, is a color picker. Works with any descendant of JComponent, and can set background and foreground colors of a target JComponent. To use with your favorite JComponent, new ColorPicker(JComponent target); Part of a code I made for my SF project @ <a href="http://rsr-jirc.sourceforge.net/" rel="nofollow noopener">http://rsr-jirc.sourceforge.net/</a>. Enjoy.</p>
<pre><code class="lang-auto">import javax.swing.*;
import java.awt.*;
import java.awt.event.AdjustmentListener;
import java.awt.event.AdjustmentEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

class ColorPicker extends JFrame {
    public ColorPicker(final JComponent target) {
        super("RSR IRC - Color Picker");
        setLayout(new BorderLayout());

        // The actual scrollbar components.
        final JScrollBar r = new JScrollBar(JScrollBar.HORIZONTAL, 255, 1, 0, 256);
        final JScrollBar g = new JScrollBar(JScrollBar.HORIZONTAL, 255, 1, 0, 256);
        final JScrollBar b = new JScrollBar(JScrollBar.HORIZONTAL, 255, 1, 0, 256);

        // Changing the colors so the user knows which is which.
        r.setBackground(new Color(255, 0, 0));
        g.setBackground(new Color(0, 255, 0));
        b.setBackground(new Color(0, 0, 255));

        // Actually adding the scrollbars to a panel.
        JPanel scrollbars = new JPanel(new BorderLayout());
        scrollbars.add(BorderLayout.NORTH, r);
        scrollbars.add(BorderLayout.CENTER, g);
        scrollbars.add(BorderLayout.SOUTH, b);

        // Creating a text area to demonstrate the color.
        final JTextArea demoarea = new JTextArea();

        // Update the color once the scrollbars get changed.
        AdjustmentListener genericScrollingColorListner = new AdjustmentListener() {
            public void adjustmentValueChanged(AdjustmentEvent e) {
                demoarea.setBackground(new Color(r.getValue(), g.getValue(), b.getValue()));
            }
        };

        // Adding the listeners.
        r.addAdjustmentListener(genericScrollingColorListner);
        g.addAdjustmentListener(genericScrollingColorListner);
        b.addAdjustmentListener(genericScrollingColorListner);

        // A few buttons to let the user do things with the color.
        JButton fore = new JButton("Set Foreground");
        JButton back = new JButton("Set Background");

        // Maybe the buttons should actually do something.
        fore.addMouseListener(new MouseAdapter() {
            public void mouseReleased(MouseEvent e) {
                target.setForeground(demoarea.getBackground());
            }
        });
        back.addMouseListener(new MouseAdapter() {
            public void mouseReleased(MouseEvent e) {
                target.setBackground(demoarea.getBackground());
            }
        });

        // Adding the buttons to a panel.
        JPanel buttons = new JPanel(new BorderLayout());
        buttons.add(BorderLayout.NORTH, fore);
        buttons.add(BorderLayout.CENTER, back);

        // Adding the two panels and the demo area to the main frame.
        add(scrollbars, BorderLayout.NORTH);
        add(demoarea, BorderLayout.CENTER);
        add(buttons, BorderLayout.SOUTH);

        // Setting the picker to take up a reasonable amount of space.
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        dimension.height /= 5;
        dimension.width /= 5;
        setSize(dimension.width, dimension.height);

        // Moving it to greener pastures.
        dimension = Toolkit.getDefaultToolkit().getScreenSize();
        dimension.height /= 4;
        dimension.width /= 4;
        setLocation(dimension.width, dimension.height);

        // Displaying our beautiful color picker.
        setVisible(true);
    }

    public static void main(String[] args) {
        // A demo main to view the appearance and test our wonderful thingamajig.
        JFrame testtarget = new JFrame("Test Target");

        // Getting the proper size.
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        dimension.width /= 4;
        dimension.height /= 4;
        testtarget.setSize(dimension);
        testtarget.setLocation(dimension.width, dimension.height);

        // Adding just that extra bit of oomph.
        JTextArea texttarget = new JTextArea("Insert generic sample text here.");
        testtarget.add(texttarget);
        testtarget.setVisible(true);

        // And now, for our feature presentation.
        new ColorPicker(texttarget);
    }
}</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/muh-thingamawijjit-yo-color-picker/45750/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/muh-thingamawijjit-yo-color-picker/45750/1</link>
        <pubDate>Tue, 09 Jan 2007 05:40:20 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-45750-1</guid>
        <source url="https://forum.moparisthebest.com/t/muh-thingamawijjit-yo-color-picker/45750.rss">Muh thingamawijjit, yo. Color Picker</source>
      </item>
  </channel>
</rss>
