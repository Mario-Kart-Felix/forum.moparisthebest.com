<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Delta 317 graphics to objects</title>
    <link>https://forum.moparisthebest.com/t/delta-317-graphics-to-objects/529881</link>
    <description>Any one know how to make graphics an object?
I need to make specGfx an object so I can set up collision testing, rather then have a timer for arrows/magics system.

[code]
public class GraphicObj {
	public int id, x, y, height, type;

	public GraphicObj(int id, int x, int y, int height, int type) {
		this.id = id;
		this.x = x;
		this.y = y;
		this.height = height;
		this.type = type;
	}
}
[/code]
Here&#39;s the code snippet I&#39;ve created so far. Not sure how to implement.

here&#39;s  the arrow graphics.

[code]
    public void rangeGFX(int speed, int arrow){
        int EnemyX = 0;
        int EnemyY = 0;
        client AttackingOn2 = (client) server.playerHandler.players[AttackingOn];
        if(AttackingOn2 != null){
            EnemyX = PlayerHandler.players[AttackingOn].absX;
            EnemyY = PlayerHandler.players[AttackingOn].absY;
        }
    }
[/code]

[code]
    public void createProjectile(int casterY, int casterX, int offsetY,
        int offsetX, int angle, int speed, int gfxMoving, int startHeight, int endHeight, int MageAttackIndex) {
        try {
            outStream.createFrame(85);
            outStream.writeByteC((casterY - (mapRegionY * 8)) - 2);
            outStream.writeByteC((casterX - (mapRegionX * 8)) - 3);
            outStream.createFrame(117);
            outStream.writeByte(angle); // Starting place of the projectile
            outStream.writeByte(offsetY); // Distance between caster and enemy
            // Y
            outStream.writeByte(offsetX); // Distance between caster and enemy
            // X
            outStream.writeWord(MageAttackIndex); // The NPC the missle is
            // locked on to
            outStream.writeWord(gfxMoving); // The moving graphic ID
            outStream.writeByte(startHeight); // The starting height
            outStream.writeByte(endHeight); // Destination height
            outStream.writeWord(51); // Time the missle is created
            outStream.writeWord(speed); // Speed minus the distance making it
            // set
            outStream.writeByte(16); // Initial slope
            outStream.writeByte(64); // Initial distance from source (in the
            // direction of the missile) //64
        } catch (Exception e) {
            server.logError(e.getMessage());
        }
    }
[/code]</description>
    
    <lastBuildDate>Wed, 11 Sep 2013 13:56:54 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/delta-317-graphics-to-objects/529881.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Delta 317 graphics to objects</title>
        <dc:creator><![CDATA[@penguinimp penguinimp]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/penguinimp">@penguinimp</a> wrote:</p>
          <blockquote>
              <p>Any one know how to make graphics an object?<br>
I need to make specGfx an object so I can set up collision testing, rather then have a timer for arrows/magics system.</p>
<pre><code class="lang-auto">public class GraphicObj {
	public int id, x, y, height, type;

	public GraphicObj(int id, int x, int y, int height, int type) {
		this.id = id;
		this.x = x;
		this.y = y;
		this.height = height;
		this.type = type;
	}
}</code></pre>
<p>Here’s the code snippet I’ve created so far. Not sure how to implement.</p>
<p>here’s  the arrow graphics.</p>
<pre><code class="lang-auto">    public void rangeGFX(int speed, int arrow){
        int EnemyX = 0;
        int EnemyY = 0;
        client AttackingOn2 = (client) server.playerHandler.players[AttackingOn];
        if(AttackingOn2 != null){
            EnemyX = PlayerHandler.players[AttackingOn].absX;
            EnemyY = PlayerHandler.players[AttackingOn].absY;
        }
    }</code></pre>
<pre><code class="lang-auto">    public void createProjectile(int casterY, int casterX, int offsetY,
        int offsetX, int angle, int speed, int gfxMoving, int startHeight, int endHeight, int MageAttackIndex) {
        try {
            outStream.createFrame(85);
            outStream.writeByteC((casterY - (mapRegionY * 8)) - 2);
            outStream.writeByteC((casterX - (mapRegionX * 8)) - 3);
            outStream.createFrame(117);
            outStream.writeByte(angle); // Starting place of the projectile
            outStream.writeByte(offsetY); // Distance between caster and enemy
            // Y
            outStream.writeByte(offsetX); // Distance between caster and enemy
            // X
            outStream.writeWord(MageAttackIndex); // The NPC the missle is
            // locked on to
            outStream.writeWord(gfxMoving); // The moving graphic ID
            outStream.writeByte(startHeight); // The starting height
            outStream.writeByte(endHeight); // Destination height
            outStream.writeWord(51); // Time the missle is created
            outStream.writeWord(speed); // Speed minus the distance making it
            // set
            outStream.writeByte(16); // Initial slope
            outStream.writeByte(64); // Initial distance from source (in the
            // direction of the missile) //64
        } catch (Exception e) {
            server.logError(e.getMessage());
        }
    }</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/delta-317-graphics-to-objects/529881/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/delta-317-graphics-to-objects/529881/1</link>
        <pubDate>Wed, 11 Sep 2013 13:56:54 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-529881-1</guid>
        <source url="https://forum.moparisthebest.com/t/delta-317-graphics-to-objects/529881.rss">Delta 317 graphics to objects</source>
      </item>
  </channel>
</rss>
