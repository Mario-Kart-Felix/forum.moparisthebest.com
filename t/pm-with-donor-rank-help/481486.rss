<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Pm with donor rank help</title>
    <link>https://forum.moparisthebest.com/t/pm-with-donor-rank-help/481486</link>
    <description>I have added donator crowns client sided, everything works fine but private messaging.

When i try to private message my other account this is the error.

[code]



Exception in thread &quot;Thread-4&quot; java.lang.NullPointerException
        at client.drawChatArea(client.java:284)
        at client.drawGameScreen(client.java:8327)
        at client.processDrawing(client.java:9045)
        at RSApplet.run(RSApplet.java:108)
        at client.run(client.java:4740)
        at java.lang.Thread.run(Thread.java:662)
[/code]

This is the code 
[code]if(s1 != null &amp;&amp; s1.startsWith(&quot;@cr1@&quot;)) {
					s1 = s1.substring(5);
					byte0 = 1;
				} else if(s1 != null &amp;&amp; s1.startsWith(&quot;@cr2@&quot;)) {
					s1 = s1.substring(5);
					byte0 = 2;
				} else if(s1 != null &amp;&amp; s1.startsWith(&quot;@cr3@&quot;)) {
					s1 = s1.substring(5);
					byte0 = 3;
				} else if(s1 != null &amp;&amp; s1.startsWith(&quot;@cr4@&quot;)) {
					s1 = s1.substring(5);
					byte0 = 4;
				}[/code]

@Cr4@ is the donator crown

and if needed this is my private message file server sided... please help really need this.
[code]package server.model.players.packets;

import server.Config;
import server.Server;
import server.Connection;
import server.model.players.Client;
import server.model.players.PacketType;
import server.util.Misc;

/**
 * Private messaging, friends etc
 **/
public class PrivateMessaging implements PacketType {

	public final int ADD_FRIEND = 188, SEND_PM = 126, REMOVE_FRIEND = 215, CHANGE_PM_STATUS = 95, REMOVE_IGNORE = 59, ADD_IGNORE = 133;
	@Override
	public void processPacket(Client c, int packetType, int packetSize) {
		switch(packetType) {
		
			case ADD_FRIEND:
			c.friendUpdate = true;
			long friendToAdd = c.getInStream().readQWord();
			boolean canAdd = true;

			for (int i1 = 0; i1 &lt; c.friends.length; i1++) {
				if (c.friends[i1] != 0 &amp;&amp; c.friends[i1] == friendToAdd) {
					canAdd = false;
					c.sendMessage(friendToAdd + &quot; is already on your friends list.&quot;);
				}
			}
			if (canAdd == true) {
				for (int i1 = 0; i1 &lt; c.friends.length; i1++) {
					if (c.friends[i1] == 0) {
						c.friends[i1] = friendToAdd;
						for (int i2 = 1; i2 &lt; Config.MAX_PLAYERS; i2++) {
							if (Server.playerHandler.players[i2] != null &amp;&amp; Server.playerHandler.players[i2].isActive &amp;&amp; Misc.playerNameToInt64(Server.playerHandler.players[i2].playerName)== friendToAdd) {
								Client o = (Client)Server.playerHandler.players[i2];
								if(o != null) {
									if (Server.playerHandler.players[i2].privateChat == 0 || (Server.playerHandler.players[i2].privateChat == 1 &amp;&amp; o.getPA().isInPM(Misc.playerNameToInt64(c.playerName)))) {
										c.getPA().loadPM(friendToAdd, 1);
										break;
									}
								}
							}
						}
						break;
					}
				}
			}
			break;
			
			case SEND_PM:
			long sendMessageToFriendId = c.getInStream().readQWord();
            byte pmchatText[] = new byte[100];
            int pmchatTextSize = (byte) (packetSize - 8);
			c.getInStream().readBytes(pmchatText, pmchatTextSize, 0);
			if (Connection.isMuted(c))
				break;
            for (int i1 = 0; i1 &lt; c.friends.length; i1++) {
                if (c.friends[i1] == sendMessageToFriendId) {
                    boolean pmSent = false;

                    for (int i2 = 1; i2 &lt; Config.MAX_PLAYERS; i2++) {
                        if (Server.playerHandler.players[i2] != null &amp;&amp; Server.playerHandler.players[i2].isActive &amp;&amp; Misc.playerNameToInt64(Server.playerHandler.players[i2].playerName)== sendMessageToFriendId) {
                            Client o = (Client)Server.playerHandler.players[i2];
							if(o != null) {
								if (Server.playerHandler.players[i2].privateChat == 0 || (Server.playerHandler.players[i2].privateChat == 1 &amp;&amp; o.getPA().isInPM(Misc.playerNameToInt64(c.playerName)))) {
									o.getPA().sendPM(Misc.playerNameToInt64(c.playerName), c.playerRights, pmchatText, pmchatTextSize);
	                                pmSent = true;
	                            }
							}
                            break;
                        }
                    }
                    if (!pmSent) {
						c.sendMessage(&quot;That player is currently offline.&quot;);
						break;
                    }
                }
            }
            break;	
			
			
			case REMOVE_FRIEND:
			c.friendUpdate = true;
            long friendToRemove = c.getInStream().readQWord();

            for (int i1 = 0; i1 &lt; c.friends.length; i1++) {
                if (c.friends[i1] == friendToRemove) {
					for (int i2 = 1; i2 &lt; Config.MAX_PLAYERS; i2++) {
						Client o = (Client)Server.playerHandler.players[i2];		
						if(o != null) {
							if(c.friends[i1] == Misc.playerNameToInt64(Server.playerHandler.players[i2].playerName)){
								o.getPA().updatePM(c.playerId, 0);
								break;
							}
						}
					}
					c.friends[i1] = 0;
                    break;
                }
            }
            break;
			
			case REMOVE_IGNORE:
				int i = c.getInStream().readDWord();
				int i2 = c.getInStream().readDWord();
				int i3 = c.getInStream().readDWord();
				//for other status changing
				c.getPA().handleStatus(i,i2,i3);
            break;
			
			case CHANGE_PM_STATUS:
            int tradeAndCompete = c.getInStream().readUnsignedByte();
            c.privateChat = c.getInStream().readUnsignedByte();
            int publicChat = c.getInStream().readUnsignedByte();
            for (int i1 = 1; i1 &lt; Config.MAX_PLAYERS; i1++) {
			   if (Server.playerHandler.players[i1] != null &amp;&amp; Server.playerHandler.players[i1].isActive == true) {
                    Client o = (Client)Server.playerHandler.players[i1];
					if(o != null) {
						o.getPA().updatePM(c.playerId, 1);
					}
                }
            }
            break;
			
			
			
			case ADD_IGNORE:
				//TODO: fix this so it works :)
				break;
            
		}
		
	}	
}
[/code]</description>
    
    <lastBuildDate>Sun, 03 Feb 2013 23:21:50 +0000</lastBuildDate>
    <category>Game Development</category>
    <atom:link href="https://forum.moparisthebest.com/t/pm-with-donor-rank-help/481486.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Pm with donor rank help</title>
        <dc:creator><![CDATA[@yesimanub yesimanub]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/yesimanub">@yesimanub</a> wrote:</p>
          <blockquote>
              <p>I have added donator crowns client sided, everything works fine but private messaging.</p>
<p>When i try to private message my other account this is the error.</p>
<pre><code class="lang-auto">


Exception in thread "Thread-4" java.lang.NullPointerException
        at client.drawChatArea(client.java:284)
        at client.drawGameScreen(client.java:8327)
        at client.processDrawing(client.java:9045)
        at RSApplet.run(RSApplet.java:108)
        at client.run(client.java:4740)
        at java.lang.Thread.run(Thread.java:662)</code></pre>
<p>This is the code</p>
<p><code>if(s1 != null &amp;&amp; s1.startsWith("@cr1@")) {
					s1 = s1.substring(5);
					byte0 = 1;
				} else if(s1 != null &amp;&amp; s1.startsWith("@cr2@")) {
					s1 = s1.substring(5);
					byte0 = 2;
				} else if(s1 != null &amp;&amp; s1.startsWith("@cr3@")) {
					s1 = s1.substring(5);
					byte0 = 3;
				} else if(s1 != null &amp;&amp; s1.startsWith("@cr4@")) {
					s1 = s1.substring(5);
					byte0 = 4;
				}</code></p>
<p><span class="mention">@Cr4</span>@ is the donator crown</p>
<p>and if needed this is my private message file server sidedâ€¦ please help really need this.</p>
<p>[code]package server.model.players.packets;</p>
<p>import server.Config;<br>
import server.Server;<br>
import server.Connection;<br>
import server.model.players.Client;<br>
import server.model.players.PacketType;<br>
import server.util.Misc;</p>
<p>/**</p>
<ul>
<li>
<p>Private messaging, friends etc<br>
**/<br>
public class PrivateMessaging implements PacketType {</p>
<p>public final int ADD_FRIEND = 188, SEND_PM = 126, REMOVE_FRIEND = 215, CHANGE_PM_STATUS = 95, REMOVE_IGNORE = 59, ADD_IGNORE = 133;<br>
<a class="mention" href="/u/override">@Override</a><br>
public void processPacket(Client c, int packetType, int packetSize) {<br>
switch(packetType) {</p>
<pre><code> 	case ADD_FRIEND:
 	c.friendUpdate = true;
 	long friendToAdd = c.getInStream().readQWord();
 	boolean canAdd = true;

 	for (int i1 = 0; i1 &lt; c.friends.length; i1++) {
 		if (c.friends[i1] != 0 &amp;&amp; c.friends[i1] == friendToAdd) {
 			canAdd = false;
 			c.sendMessage(friendToAdd + " is already on your friends list.");
 		}
 	}
 	if (canAdd == true) {
 		for (int i1 = 0; i1 &lt; c.friends.length; i1++) {
 			if (c.friends[i1] == 0) {
 				c.friends[i1] = friendToAdd;
 				for (int i2 = 1; i2 &lt; Config.MAX_PLAYERS; i2++) {
 					if (Server.playerHandler.players[i2] != null &amp;&amp; Server.playerHandler.players[i2].isActive &amp;&amp; Misc.playerNameToInt64(Server.playerHandler.players[i2].playerName)== friendToAdd) {
 						Client o = (Client)Server.playerHandler.players[i2];
 						if(o != null) {
 							if (Server.playerHandler.players[i2].privateChat == 0 || (Server.playerHandler.players[i2].privateChat == 1 &amp;&amp; o.getPA().isInPM(Misc.playerNameToInt64(c.playerName)))) {
 								c.getPA().loadPM(friendToAdd, 1);
 								break;
 							}
 						}
 					}
 				}
 				break;
 			}
 		}
 	}
 	break;
 	
 	case SEND_PM:
 	long sendMessageToFriendId = c.getInStream().readQWord();
     byte pmchatText[] = new byte[100];
     int pmchatTextSize = (byte) (packetSize - 8);
 	c.getInStream().readBytes(pmchatText, pmchatTextSize, 0);
 	if (Connection.isMuted(c))
 		break;
     for (int i1 = 0; i1 &lt; c.friends.length; i1++) {
         if (c.friends[i1] == sendMessageToFriendId) {
             boolean pmSent = false;

             for (int i2 = 1; i2 &lt; Config.MAX_PLAYERS; i2++) {
                 if (Server.playerHandler.players[i2] != null &amp;&amp; Server.playerHandler.players[i2].isActive &amp;&amp; Misc.playerNameToInt64(Server.playerHandler.players[i2].playerName)== sendMessageToFriendId) {
                     Client o = (Client)Server.playerHandler.players[i2];
 					if(o != null) {
 						if (Server.playerHandler.players[i2].privateChat == 0 || (Server.playerHandler.players[i2].privateChat == 1 &amp;&amp; o.getPA().isInPM(Misc.playerNameToInt64(c.playerName)))) {
 							o.getPA().sendPM(Misc.playerNameToInt64(c.playerName), c.playerRights, pmchatText, pmchatTextSize);
                             pmSent = true;
                         }
 					}
                     break;
                 }
             }
             if (!pmSent) {
 				c.sendMessage("That player is currently offline.");
 				break;
             }
         }
     }
     break;	
 	
 	
 	case REMOVE_FRIEND:
 	c.friendUpdate = true;
     long friendToRemove = c.getInStream().readQWord();

     for (int i1 = 0; i1 &lt; c.friends.length; i1++) {
         if (c.friends[i1] == friendToRemove) {
 			for (int i2 = 1; i2 &lt; Config.MAX_PLAYERS; i2++) {
 				Client o = (Client)Server.playerHandler.players[i2];		
 				if(o != null) {
 					if(c.friends[i1] == Misc.playerNameToInt64(Server.playerHandler.players[i2].playerName)){
 						o.getPA().updatePM(c.playerId, 0);
 						break;
 					}
 				}
 			}
 			c.friends[i1] = 0;
             break;
         }
     }
     break;
 	
 	case REMOVE_IGNORE:
 		int i = c.getInStream().readDWord();
 		int i2 = c.getInStream().readDWord();
 		int i3 = c.getInStream().readDWord();
 		//for other status changing
 		c.getPA().handleStatus(i,i2,i3);
     break;
 	
 	case CHANGE_PM_STATUS:
     int tradeAndCompete = c.getInStream().readUnsignedByte();
     c.privateChat = c.getInStream().readUnsignedByte();
     int publicChat = c.getInStream().readUnsignedByte();
     for (int i1 = 1; i1 &lt; Config.MAX_PLAYERS; i1++) {
 	   if (Server.playerHandler.players[i1] != null &amp;&amp; Server.playerHandler.players[i1].isActive == true) {
             Client o = (Client)Server.playerHandler.players[i1];
 			if(o != null) {
 				o.getPA().updatePM(c.playerId, 1);
 			}
         }
     }
     break;
 	
 	
 	
 	case ADD_IGNORE:
 		//TODO: fix this so it works :)
 		break;
     
 }
</code></pre>
<p>}	<br>
}<br>
[/code]</p>
</li>
</ul>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pm-with-donor-rank-help/481486/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pm-with-donor-rank-help/481486/1</link>
        <pubDate>Sun, 03 Feb 2013 23:21:50 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-481486-1</guid>
        <source url="https://forum.moparisthebest.com/t/pm-with-donor-rank-help/481486.rss">Pm with donor rank help</source>
      </item>
  </channel>
</rss>
