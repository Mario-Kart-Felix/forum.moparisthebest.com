<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Pi Trade problem</title>
    <link>https://forum.moparisthebest.com/t/pi-trade-problem/398287</link>
    <description>I have a trade problem , whenever i trade &amp; press accept . i Disconnect from the server (How do i fix it ?)
[code]public static final boolean ADMIN_CAN_TRADE = true; //can admins trade?
	public static final boolean ADMIN_CAN_SELL_ITEMS = true; // can admins sell items?
	public static final boolean ADMIN_DROP_ITEMS = true; // can admin drop items?[/code]</description>
    
    <lastBuildDate>Thu, 09 Jun 2011 06:35:05 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/pi-trade-problem/398287.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Pi Trade problem</title>
        <dc:creator><![CDATA[@Bandos1337 Bandos1337]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bandos1337">@Bandos1337</a> wrote:</p>
          <blockquote>
              <p>Thats the part of Trade AndDuel.java that has to do with JUST trading, replace the trading part of the code with that.</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-trade-problem/398287/6">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-trade-problem/398287/6</link>
        <pubDate>Thu, 09 Jun 2011 06:35:05 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398287-6</guid>
        <source url="https://forum.moparisthebest.com/t/pi-trade-problem/398287.rss">Pi Trade problem</source>
      </item>
      <item>
        <title>Pi Trade problem</title>
        <dc:creator><![CDATA[@Smallboy Smallboy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/smallboy">@Smallboy</a> wrote:</p>
          <blockquote>
              <p>huh ? sorry</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-trade-problem/398287/5">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-trade-problem/398287/5</link>
        <pubDate>Thu, 09 Jun 2011 05:09:16 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398287-5</guid>
        <source url="https://forum.moparisthebest.com/t/pi-trade-problem/398287.rss">Pi Trade problem</source>
      </item>
      <item>
        <title>Pi Trade problem</title>
        <dc:creator><![CDATA[@Bandos1337 Bandos1337]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bandos1337">@Bandos1337</a> wrote:</p>
          <blockquote>
              <p>do you have tradeandduel.java? if so, replace the FIRST part (from when you see this:<br>
/*<br>
<em>Trading</em><br>
<em>/<br>
and STOP replacing when you see this:<br>
/</em><br>
<em>Dueling</em><br>
*/<br>
Here is the code:</p>
<p>[code]/**<br>
* Trading<br>
**/</p>
<pre><code>public CopyOnWriteArrayList&lt;GameItem&gt; offeredItems = new CopyOnWriteArrayList&lt;GameItem&gt;();

public void requestTrade(int id){
	try {
		Client o = (Client) Server.playerHandler.players[id];
		if (id == c.playerId)
			return;
		c.tradeWith = id;
		if(!c.inTrade &amp;&amp; o.tradeRequested &amp;&amp; o.tradeWith == c.playerId) {
			c.getTradeAndDuel().openTrade();
			o.getTradeAndDuel().openTrade();			
		} else if(!c.inTrade) {
			c.tradeRequested = true;
			c.sendMessage("Sending trade request...");
			o.sendMessage(c.playerName + ":tradereq:");
		}
	} 
	catch (Exception e) {
		Misc.println("Error requesting trade.");
	}
}

public void openTrade() {
	Client o = (Client) Server.playerHandler.players[c.tradeWith];
	
	if(o == null) {
		return;
	}
	c.inTrade = true;
	c.canOffer = true;
	c.tradeStatus = 1;
	c.tradeRequested = false;
	c.getItems().resetItems(3322);
	resetTItems(3415);
	resetOTItems(3416);
	String out = o.playerName;
	
	if(o.playerRights == 1) {
		out = "@cr1@" + out;
	} 
	else if(o.playerRights == 2) {
		out = "@cr2@" + out;
	}
	c.getPA().sendFrame126("Trading with: " + o.playerName+" who has @gre@"+o.getItems().freeSlots()+" free slots" ,3417);
	c.getPA().sendFrame126("", 3431);
	c.getPA().sendFrame126("Are you sure you want to make this trade?", 3535);
	c.getPA().sendFrame248(3323, 3321);
}	



public void resetTItems(int WriteFrame) {
    synchronized(c) {
		c.getOutStream().createFrameVarSizeWord(53);
		c.getOutStream().writeWord(WriteFrame);
		int len = offeredItems.toArray().length;
		int current = 0;
		c.getOutStream().writeWord(len);
			for (GameItem item : offeredItems) {
				if (item.amount &gt; 254) {
					c.getOutStream().writeByte(255);
					c.getOutStream().writeDWord_v2(item.amount);
				} else {
					c.getOutStream().writeByte(item.amount);
				}
			c.getOutStream().writeWordBigEndianA(item.id + 1);
			current++;
			}
			if(current &lt; 27) {
				for(int i = current; i &lt; 28; i++) {
					c.getOutStream().writeByte(1);
					c.getOutStream().writeWordBigEndianA(-1);
				}
			}
		c.getOutStream().endFrameVarSizeWord();
		c.flushOutStream();
	}
}

public boolean fromTrade(int itemID, int fromSlot, int amount) {
	Client o = (Client) Server.playerHandler.players[c.tradeWith];
	if(o == null) {
		return false;
	}
	try {
		if (!c.inTrade || !c.canOffer) {
			declineTrade();
			return false;
		}
	c.tradeConfirmed = false;
	o.tradeConfirmed = false;
		if(!Item.itemStackable[itemID]) {
			for(int a = 0; a &lt; amount; a++) {
				for (GameItem item : offeredItems) {
					if(item.id == itemID) {	
						if(!item.stackable) {	
							offeredItems.remove(item);	
							c.getItems().addItem(itemID, 1);	
							o.getPA().sendFrame126("Trading with: " + c.playerName+" who has @gre@"+c.getItems().freeSlots()+" free slots" ,3417);		
						} else {
							if(item.amount &gt; amount) {
								item.amount -= amount;
								c.getItems().addItem(itemID, amount);
								o.getPA().sendFrame126("Trading with: " + c.playerName+" who has @gre@"+c.getItems().freeSlots()+" free slots" ,3417);								
							} else {
								amount = item.amount;
								offeredItems.remove(item);
								c.getItems().addItem(itemID, amount);
								o.getPA().sendFrame126("Trading with: " + c.playerName+" who has @gre@"+c.getItems().freeSlots()+" free slots" ,3417);	
							}
						}
					break;
					}
				o.getPA().sendFrame126("Trading with: " + c.playerName+" who has @gre@"+c.getItems().freeSlots()+" free slots" ,3417);	
				c.tradeConfirmed = false;
				o.tradeConfirmed = false;
				c.getItems().resetItems(3322);
				resetTItems(3415);
				o.getTradeAndDuel().resetOTItems(3416);
				c.getPA().sendFrame126("", 3431);
				o.getPA().sendFrame126("", 3431);
				}
			}	
		}
		for (GameItem item : offeredItems) {
			if(item.id == itemID) {
				if(!item.stackable) {
				} else  {
					if(item.amount &gt; amount) {
						item.amount -= amount;
						c.getItems().addItem(itemID, amount);
						o.getPA().sendFrame126("Trading with: " + c.playerName+" who has @gre@"+c.getItems().freeSlots()+" free slots" ,3417);	
					} else  {
						amount = item.amount;
						offeredItems.remove(item);
						c.getItems().addItem(itemID, amount);
						o.getPA().sendFrame126("Trading with: " + c.playerName+" who has @gre@"+c.getItems().freeSlots()+" free slots" ,3417);	
					}
				}
				break;
			}
		}

	o.getPA().sendFrame126("Trading with: " + c.playerName+" who has @gre@"+c.getItems().freeSlots()+" free slots" ,3417);	
	c.tradeConfirmed = false;
	o.tradeConfirmed = false;
	c.getItems().resetItems(3322);
	resetTItems(3415);
	o.getTradeAndDuel().resetOTItems(3416);
	c.getPA().sendFrame126("", 3431);
	o.getPA().sendFrame126("", 3431);
	} catch(Exception e){}
    return true;
}
	
public boolean tradeItem(int itemID, int fromSlot, int amount) {
	Client o = (Client) Server.playerHandler.players[c.tradeWith];
	if(o == null) {
		return false;
	}
	
	for (int i : Config.ITEM_TRADEABLE) {
		if(i == itemID) {
			c.sendMessage("You can't trade this item.");
			return false;
		}		
	}
	c.tradeConfirmed = false;
	o.tradeConfirmed = false;
	if(!Item.itemStackable[itemID] &amp;&amp; !Item.itemIsNote[itemID]) {
		for(int a = 0; a &lt; amount; a++) {
			if(c.getItems().playerHasItem(itemID, 1)) {
				offeredItems.add(new GameItem(itemID, 1));	
				c.getItems().deleteItem(itemID, c.getItems().getItemSlot(itemID), 1);
				o.getPA().sendFrame126("Trading with: " + c.playerName+" who has @gre@"+c.getItems().freeSlots()+" free slots" ,3417);	
			}
		}
		o.getPA().sendFrame126("Trading with: " + c.playerName+" who has @gre@"+c.getItems().freeSlots()+" free slots" ,3417);	
		c.getItems().resetItems(3322);
		resetTItems(3415);
		o.getTradeAndDuel().resetOTItems(3416);
		c.getPA().sendFrame126("", 3431);
		o.getPA().sendFrame126("", 3431);
	}
if (c.getItems().getItemCount(itemID) &lt; amount) {
	amount = c.getItems().getItemCount(itemID);
if (amount == 0)
	return false;
}
    if (!c.inTrade || !c.canOffer) {
		declineTrade();
		return false;
	}
	
	if(Item.itemStackable[itemID] || Item.itemIsNote[itemID]) {
		boolean inTrade = false;
		for(GameItem item : offeredItems) {
			if(item.id == itemID) {
				inTrade = true;
				item.amount += amount;
				c.getItems().deleteItem2(itemID, amount);
				o.getPA().sendFrame126("Trading with: " + c.playerName+" who has @gre@"+c.getItems().freeSlots()+" free slots" ,3417);	
				break;	
			}
		}

	if(!inTrade) {
			offeredItems.add(new GameItem(itemID, amount));
			c.getItems().deleteItem2(itemID, amount);
			o.getPA().sendFrame126("Trading with: " + c.playerName+" who has @gre@"+c.getItems().freeSlots()+" free slots" ,3417);	
		}
	}
	o.getPA().sendFrame126("Trading with: " + c.playerName+" who has @gre@"+c.getItems().freeSlots()+" free slots" ,3417);	
	c.getItems().resetItems(3322);
	resetTItems(3415);
	o.getTradeAndDuel().resetOTItems(3416);
	c.getPA().sendFrame126("", 3431);
	o.getPA().sendFrame126("", 3431);
	return true;
	}


public void resetTrade() {
	offeredItems.clear();
	c.inTrade = false;
	c.tradeWith = 0;
	c.canOffer = true;
	c.tradeConfirmed = false;
	c.tradeConfirmed2 = false;
	c.acceptedTrade = false;
	c.getPA().removeAllWindows();
	c.tradeResetNeeded = false;
	c.getPA().sendFrame126("Are you sure you want to make this trade?", 3535);
}
public void declineTrade() {
	c.tradeStatus = 0;
	declineTrade(true);
}


public void declineTrade(boolean tellOther) {
	c.getPA().removeAllWindows();
	Client o = (Client) Server.playerHandler.players[c.tradeWith];
	if (o == null) {
		return;
	}
	
	if(tellOther){
		o.getTradeAndDuel().declineTrade(false);
		o.getTradeAndDuel().c.getPA().removeAllWindows();
	}
		
	for(GameItem item : offeredItems) {
		if(item.amount &lt; 1) {
			continue;
		}
		if(item.stackable) {
			c.getItems().addItem(item.id, item.amount);
		} else {
			for(int i = 0; i &lt; item.amount; i++) {
				c.getItems().addItem(item.id, 1);
			}
		}
	}
	c.canOffer = true;
	c.tradeConfirmed = false;
	c.tradeConfirmed2 = false;
	offeredItems.clear();
	c.inTrade = false;
	c.tradeWith = 0;
}

	
public void resetOTItems(int WriteFrame) {
	synchronized(c) {
		Client o = (Client) Server.playerHandler.players[c.tradeWith];
		if(o == null) {
			return;
		}	
		c.getOutStream().createFrameVarSizeWord(53);
		c.getOutStream().writeWord(WriteFrame);
		int len = o.getTradeAndDuel().offeredItems.toArray().length;
		int current = 0;
		c.getOutStream().writeWord(len);
			for (GameItem item : o.getTradeAndDuel().offeredItems) {
				if (item.amount &gt; 254) {
					c.getOutStream().writeByte(255); // item's stack count. if over 254, write byte 255
					c.getOutStream().writeDWord_v2(item.amount); 
				} else {
					c.getOutStream().writeByte(item.amount);
				}
				c.getOutStream().writeWordBigEndianA(item.id + 1); // item id
				current++;
			}
		if(current &lt; 27) {
			for(int i = current; i &lt; 28; i++) {
				c.getOutStream().writeByte(1);
				c.getOutStream().writeWordBigEndianA(-1);
			}
		}
		c.getOutStream().endFrameVarSizeWord();
		c.flushOutStream();
	}
}


public void confirmScreen() {
	Client o = (Client) Server.playerHandler.players[c.tradeWith];
	if(o == null) {
		return;
	}
	c.canOffer = false;
	c.getItems().resetItems(3214);
	String SendTrade = "Absolutely nothing!";
	String SendAmount = "";
	int Count = 0;
	for (GameItem item : offeredItems) {
	    if (item.id &gt; 0) {
			if (item.amount &gt;= 1000 &amp;&amp; item.amount &lt; 1000000) {
				SendAmount = "@cya@" + (item.amount / 1000) + "K @whi@(" + Misc.format(item.amount) + ")";
			}  else if (item.amount &gt;= 1000000) {
				SendAmount = "@gre@" + (item.amount / 1000000) + " million @whi@(" + Misc.format(item.amount) + ")";
			} else {
				SendAmount = "" + Misc.format(item.amount);
			}

				if(Count == 0) {	
					SendTrade = c.getItems().getItemName(item.id);		
				} else {
					SendTrade = SendTrade + "\\n" + c.getItems().getItemName(item.id);
				}
				
					if (item.stackable) {
						SendTrade = SendTrade + " x " + SendAmount;
					}
			Count++;
	    }
	}
	
	c.getPA().sendFrame126(SendTrade, 3557);
	SendTrade = "Absolutely nothing!";
	SendAmount = "";
	Count = 0;
	
	for (GameItem item : o.getTradeAndDuel().offeredItems) {
	    if (item.id &gt; 0) {
			if (item.amount &gt;= 1000 &amp;&amp; item.amount &lt; 1000000) {
				SendAmount = "@cya@" + (item.amount / 1000) + "K @whi@(" + Misc.format(item.amount) + ")";
			}  else if (item.amount &gt;= 1000000) {
				SendAmount = "@gre@" + (item.amount / 1000000) + " million @whi@(" + Misc.format(item.amount) + ")";
			} else {
				SendAmount = "" + Misc.format(item.amount);
			}
			SendAmount = SendAmount;
			
				if (Count == 0) {
					SendTrade = c.getItems().getItemName(item.id);		
				} else {
					SendTrade = SendTrade + "\\n" + c.getItems().getItemName(item.id);
				}
					if (item.stackable) {
					SendTrade = SendTrade + " x " + SendAmount;
					}
			Count++;
	    }
	}
	c.getPA().sendFrame126(SendTrade, 3558);
	//TODO: find out what 197 does eee 3213
	c.getPA().sendFrame248(3443, 197);
}


public void giveItems() {
	Client o = (Client) Server.playerHandler.players[c.tradeWith];
	if(o == null) {
		return;
	}	
	try{	
		for(GameItem item : o.getTradeAndDuel().offeredItems){
			if (item.id &gt; 0) {
				c.getItems().addItem(item.id, item.amount);
		   }
		}
		
		c.getPA().removeAllWindows();
		c.tradeResetNeeded = true;
		PlayerSave.saveGame(c);
		} catch(Exception e){
		}
	}[/code]</code></pre>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-trade-problem/398287/4">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-trade-problem/398287/4</link>
        <pubDate>Wed, 08 Jun 2011 19:03:46 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398287-4</guid>
        <source url="https://forum.moparisthebest.com/t/pi-trade-problem/398287.rss">Pi Trade problem</source>
      </item>
      <item>
        <title>Pi Trade problem</title>
        <dc:creator><![CDATA[@Smallboy Smallboy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/smallboy">@Smallboy</a> wrote:</p>
          <blockquote>
              <p>Trade.java</p>
<p>[code]package server.model.players.packets;</p>
<p>import server.Config;<br>
import server.model.players.Client;<br>
import server.model.players.PacketType;</p>
<p>/**</p>
<ul>
<li>
<p>Trading<br>
*/<br>
public class Trade implements PacketType {</p>
<p><a class="mention" href="/u/override">@Override</a><br>
public void processPacket(Client c, int packetType, int packetSize) {<br>
int tradeId = c.getInStream().readSignedWordBigEndian();<br>
c.getPA().resetFollow();</p>
<pre><code> if(c.arenas()) {
 	c.sendMessage("You can't trade inside the arena!");
 	return;
 }
 
 if(c.playerRights == 0 &amp;&amp; !Config.ADMIN_CAN_TRADE) {
 	c.sendMessage("Trading has been temporarily been disabled.");
 	return;
 }
 if (tradeId != c.playerId)
 	c.getTradeAndDuel().requestTrade(tradeId);
</code></pre>
<p>}</p>
</li>
</ul>
<p>}<br>
[/code]</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-trade-problem/398287/3">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-trade-problem/398287/3</link>
        <pubDate>Wed, 08 Jun 2011 06:18:48 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398287-3</guid>
        <source url="https://forum.moparisthebest.com/t/pi-trade-problem/398287.rss">Pi Trade problem</source>
      </item>
      <item>
        <title>Pi Trade problem</title>
        <dc:creator><![CDATA[@Bandos1337 Bandos1337]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/bandos1337">@Bandos1337</a> wrote:</p>
          <blockquote>
              <p>I recently just moved on from a PI based server to a 562 after working on it for a long time, so I probably will be able to help, but I need more info. Can i see the contents of your Trade.java and your TradeAndDuel.java?</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-trade-problem/398287/2">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-trade-problem/398287/2</link>
        <pubDate>Wed, 08 Jun 2011 06:00:35 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398287-2</guid>
        <source url="https://forum.moparisthebest.com/t/pi-trade-problem/398287.rss">Pi Trade problem</source>
      </item>
      <item>
        <title>Pi Trade problem</title>
        <dc:creator><![CDATA[@Smallboy Smallboy]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/smallboy">@Smallboy</a> wrote:</p>
          <blockquote>
              <p>I have a trade problem , whenever i trade &amp; press accept . i Disconnect from the server (How do i fix it ?)</p>
<p><code>public static final boolean ADMIN_CAN_TRADE = true; //can admins trade?
	public static final boolean ADMIN_CAN_SELL_ITEMS = true; // can admins sell items?
	public static final boolean ADMIN_DROP_ITEMS = true; // can admin drop items?</code></p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/pi-trade-problem/398287/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/pi-trade-problem/398287/1</link>
        <pubDate>Wed, 08 Jun 2011 03:43:27 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-398287-1</guid>
        <source url="https://forum.moparisthebest.com/t/pi-trade-problem/398287.rss">Pi Trade problem</source>
      </item>
  </channel>
</rss>
