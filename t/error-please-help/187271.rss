<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Error please help</title>
    <link>https://forum.moparisthebest.com/t/error-please-help/187271</link>
    <description>ok im trying to make a xmlwriter so making large xmls are much quicker to write. i know the error isn&#39;t difficult but i haven&#39;t even finish the java tut at java.sun.com. and im trying to learn c++ at the same time :eek: .all i need is the code to insert the information. here is the source.[code]import java.io.FileOutputStream;
import java.util.*;
import java.text.SimpleDateFormat;
public class XMLWriter
{
public static void main()
    {
        XMLWriter(&quot;./en-de.xml&quot;);
    }

    public XMLWriter(String rootName, String childName, String itemName, String fileName)
    {
        this.rootName = rootName;
        this.childName = childName;
        this.itemName = itemName;
        try
        {
            init(fileName);
        }
        catch(Exception ex)
        {
           log(&quot;I/O error in XMLWriter.init()&quot;);
            ex.printStackTrace();
            return;
        }
    }

    protected void init(String fileName)
        throws Exception
    {
        fOut = new FileOutputStream(fileName, false);
        writeLine(&quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;ISO-8859-1\&quot;?&gt;&quot;);
        writeLine((new StringBuilder()).append(&quot;&lt;&quot;).append(rootName).append(&quot;&gt;&quot;).toString());
    }

    public void closeXML()
    {
        writeLine((new StringBuilder()).append(&quot;&lt;/&quot;).append(rootName).append(&quot;&gt;&quot;).toString());
    }

    protected void writeLine(String line)
    {
        try
        {
            line = (new StringBuilder()).append(line).append(&quot;\n&quot;).toString();
            fOut.write(line.getBytes());
        }
        catch(Exception e)
        {
           log(&quot;I/O error in XMLWriter.writeLine()&quot;);
            e.printStackTrace();
        }
    }

    public void addItem(Hashtable args, Vector children)
    {
        String toWrite = (new StringBuilder()).append(&quot;&lt;&quot;).append(itemName).append(&quot; &quot;).toString();
        Enumeration itemKeys = args.keys();
        Iterator itemVals = args.values().iterator();
        do
        {
            if(!itemKeys.hasMoreElements() || !itemVals.hasNext())
                break;
            String key = strip((String)itemKeys.nextElement());
            String value = strip((String)itemVals.next());
            toWrite = (new StringBuilder()).append(toWrite).append(key).append(&quot;=\&quot;&quot;).append(value).append(&quot;\&quot;&quot;).toString();
            if(itemKeys.hasMoreElements())
                toWrite = (new StringBuilder()).append(toWrite).append(&quot; &quot;).toString();
        } while(true);
        writeLine((new StringBuilder()).append(toWrite).append(&quot;&gt;&quot;).toString());
        Iterator childVals = children.iterator();
       log((new StringBuilder()).append(&quot;Adding &quot;).append(children.size()).append(&quot; actions&quot;).toString());
        String write;
        for(; childVals.hasNext(); writeLine(write))
        {
            String val = strip((String)childVals.next());
            write = (new StringBuilder()).append(&quot;&lt;&quot;).append(childName).append(&quot;&gt;&quot;).append(val).append(&quot;&lt;/&quot;).append(childName).append(&quot;&gt;&quot;).toString();
        }

        writeLine((new StringBuilder()).append(&quot;&lt;/&quot;).append(itemName).append(&quot;&gt;&quot;).toString());
    }

    protected String strip(String toStrip)
    {
        String stripTags[][] = {
            {
                &quot;\&quot;&quot;, &quot;&#39;&quot;
            }, {
                &quot;&amp;&quot;, &quot; and &quot;
            }
        };
        for(int i = 0; i &lt; stripTags.length; i++)
            toStrip = toStrip.replaceAll(stripTags[i][0], stripTags[i][1]);

        return toStrip;
    }
  public static synchronized void log(String message)
    {
        message = (new StringBuilder()).append((new SimpleDateFormat(&quot;[hh:mm:ss]&quot;)).format(new Date())).append(&quot; &quot;).append(message).toString();
        if(logFileOut != null)
            try
            {
                logFileOut.write((new StringBuilder()).append(message).append(&quot;\n&quot;).toString().getBytes());
            }
            catch(Exception e)
            {
                log(&quot;Error writing to logfile&quot;);
                e.printStackTrace();
            }
        System.out.println(message);
    }

    protected String rootName;
    protected String itemName;
    protected String childName;
    protected FileOutputStream fOut;
    private static FileOutputStream logFileOut;
}
[/code]thx to all that help and if u know any fast programming tuts plz tell me! or if a xmlwriter is already made thx again!</description>
    
    <lastBuildDate>Sat, 08 Mar 2008 13:42:06 +0000</lastBuildDate>
    <category>Runescape</category>
    <atom:link href="https://forum.moparisthebest.com/t/error-please-help/187271.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Error please help</title>
        <dc:creator><![CDATA[@xryz xryz]]></dc:creator>
        <description><![CDATA[
          <p><a href="https://forum.moparisthebest.com/u/xryz">@xryz</a> wrote:</p>
          <blockquote>
              <p>ok im trying to make a xmlwriter so making large xmls are much quicker to write. i know the error isn’t difficult but i haven’t even finish the java tut at <a href="http://java.sun.com" rel="nofollow noopener">java.sun.com</a>. and im trying to learn c++ at the same time :eek: .all i need is the code to insert the information. here is the source.[code]import java.io.FileOutputStream;<br>
import java.util.*;<br>
import java.text.SimpleDateFormat;<br>
public class XMLWriter<br>
{<br>
public static void main()<br>
{<br>
XMLWriter("./en-de.xml");<br>
}</p>
<pre><code>public XMLWriter(String rootName, String childName, String itemName, String fileName)
{
    this.rootName = rootName;
    this.childName = childName;
    this.itemName = itemName;
    try
    {
        init(fileName);
    }
    catch(Exception ex)
    {
       log("I/O error in XMLWriter.init()");
        ex.printStackTrace();
        return;
    }
}

protected void init(String fileName)
    throws Exception
{
    fOut = new FileOutputStream(fileName, false);
    writeLine("&lt;?xml version=\"1.0\" encoding=\"ISO-8859-1\"?&gt;");
    writeLine((new StringBuilder()).append("&lt;").append(rootName).append("&gt;").toString());
}

public void closeXML()
{
    writeLine((new StringBuilder()).append("&lt;/").append(rootName).append("&gt;").toString());
}

protected void writeLine(String line)
{
    try
    {
        line = (new StringBuilder()).append(line).append("\n").toString();
        fOut.write(line.getBytes());
    }
    catch(Exception e)
    {
       log("I/O error in XMLWriter.writeLine()");
        e.printStackTrace();
    }
}

public void addItem(Hashtable args, Vector children)
{
    String toWrite = (new StringBuilder()).append("&lt;").append(itemName).append(" ").toString();
    Enumeration itemKeys = args.keys();
    Iterator itemVals = args.values().iterator();
    do
    {
        if(!itemKeys.hasMoreElements() || !itemVals.hasNext())
            break;
        String key = strip((String)itemKeys.nextElement());
        String value = strip((String)itemVals.next());
        toWrite = (new StringBuilder()).append(toWrite).append(key).append("=\"").append(value).append("\"").toString();
        if(itemKeys.hasMoreElements())
            toWrite = (new StringBuilder()).append(toWrite).append(" ").toString();
    } while(true);
    writeLine((new StringBuilder()).append(toWrite).append("&gt;").toString());
    Iterator childVals = children.iterator();
   log((new StringBuilder()).append("Adding ").append(children.size()).append(" actions").toString());
    String write;
    for(; childVals.hasNext(); writeLine(write))
    {
        String val = strip((String)childVals.next());
        write = (new StringBuilder()).append("&lt;").append(childName).append("&gt;").append(val).append("&lt;/").append(childName).append("&gt;").toString();
    }

    writeLine((new StringBuilder()).append("&lt;/").append(itemName).append("&gt;").toString());
}

protected String strip(String toStrip)
{
    String stripTags[][] = {
        {
            "\"", "'"
        }, {
            "&amp;", " and "
        }
    };
    for(int i = 0; i &lt; stripTags.length; i++)
        toStrip = toStrip.replaceAll(stripTags[i][0], stripTags[i][1]);

    return toStrip;
}
</code></pre>
<p>public static synchronized void log(String message)<br>
{<br>
message = (new StringBuilder()).append((new SimpleDateFormat("[hh:mm:ss]")).format(new Date())).append(" “).append(message).toString();<br>
if(logFileOut != null)<br>
try<br>
{<br>
logFileOut.write((new StringBuilder()).append(message).append(”\n").toString().getBytes());<br>
}<br>
catch(Exception e)<br>
{<br>
log(“Error writing to logfile”);<br>
e.printStackTrace();<br>
}<br>
System.out.println(message);<br>
}</p>
<pre><code>protected String rootName;
protected String itemName;
protected String childName;
protected FileOutputStream fOut;
private static FileOutputStream logFileOut;
</code></pre>
<p>}<br>
[/code]thx to all that help and if u know any fast programming tuts plz tell me! or if a xmlwriter is already made thx again!</p>
          </blockquote>
          <p><a href="https://forum.moparisthebest.com/t/error-please-help/187271/1">Read full topic</a></p>
        ]]></description>
        <link>https://forum.moparisthebest.com/t/error-please-help/187271/1</link>
        <pubDate>Sat, 08 Mar 2008 13:42:06 +0000</pubDate>
        <guid isPermaLink="false">forum.moparisthebest.com-post-187271-1</guid>
        <source url="https://forum.moparisthebest.com/t/error-please-help/187271.rss">Error please help</source>
      </item>
  </channel>
</rss>
